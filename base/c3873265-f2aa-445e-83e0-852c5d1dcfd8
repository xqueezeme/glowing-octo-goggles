{
    "title": "Mile Long Club",
    "pages": [
        "Soma99 helped with proofreading and made some helpful suggestions.\n\nDay 1 -- Hamilton, ON to Toronto, ON \n\nIt was just after 9:00 AM as my connecting train pulled, late, into Toronto Union Station. I was a little apprehensive, but the VIA Rail staff had assured me that they were holding the trans-continental Canadian train for me and a few others that had been delayed on the early morning Windsor-to-Toronto Corridor Express. I had a ticket on the Canadian booked as far as Jasper, Alberta -- a good 4,000 kilometres to the west, where I had a summer job waiting. I had no intention of being late to work.\n\nI was planning for the summer of 2003 to be my great summer of adventure, and I couldn't wait to get it started. I was 21 and just finished my second year of psychology studies at McMaster University in Hamilton, Ontario, about an hour to the southwest of Toronto. I'd previously never been further west than Detroit, but for this summer I had somehow snagged a job over the internet, working in one of the restaurants at the posh Chateau Lake Louise hotel, located on the shore of a picturesque lake in the middle of the Rocky Mountains in Alberta. The thought of spending a summer working out in the mountains, swimming, hiking, and doing all the outdoorsy things that I loved was enough for me, but the fact that the job paid reasonably well and would involve being around a bunch of other young people was icing on the cake. But first I had to get there, and the train was both cheaper and more adventurous than flying.\n\nAs my train rolled to a stop in Union Station's dilapidated train shed, I grabbed my backpack and hurried for the exit. I sprinted down the escalator into the departure hall and was quickly guided by staff to another platform, where I surfaced moments later, next to the longest passenger train I'd ever seen; a silver behemoth with blue and gold trim, stretching well past the end of the train shed and into the early morning haze. I had no time to take it in, though, as I quickly bounded past the attendant's chipper \"hello bonjour\" and up the first door I saw, into coach class.\n\nVIA trains had no assigned seats then, so as I pulled up into a soothingly dark green coach car, my priority was finding a place to call my own for the next three days. I had been hoping to snag a double seat to myself so that I could stretch out and sleep reasonably flat at night, but the train was seemingly full, with most of the seats on both aisle and window already taken. As I moved down the car, I finally found what appeared to be the only seat left, next to a tired-looking dark-haired hippie chick, about my age, staring out the window at nothing in particular. She briefly glanced at me with mild interest as I hoisted my bag into the overhead compartment, then turned wordlessly back towards the window as I sat down beside her in the aisle seat. My giant suitcase had been checked when I boarded at Aldershot station earlier that morning, so I'd be living out of a backpack for the next three days. Suddenly, the train jolted and started, moving slowly at first as it headed east towards the Don Valley, then gradually picking up speed as it turned north along the valley floor, along the Don River, heading out of town.\n\nI stayed in my seat only long enough to have my ticket taken by a French-accented conductor before heading out to explore the train. There were two cars of coach class, filled mostly with people about my age, but also the normal mix of budget travellers, families, and Australians (no matter where you go in the world, there will always be Australians). The coach cars were first in order after three engines and the baggage/cargo car, and they weren't much different from what I was used to on the usual commuter trains, with four seats abreast separated by an aisle from front to back. After the two coach cars was the highlight of any trip on the Canadian -- the dome car. The dome car had a small lounge area in the forward part, with a staircase leading up into the bubble dome where there was room for about 25 people, elevated above the roofline of the rest of the train, with a panoramic vista of the endless Toronto suburbs as we slowly made our way north. At the rear of the dome car was a tiny caf\u00e9 which served only the basics -- coffee, tea, chips, chocolate bars, and ramen being the highlights.\n\nThe train gradually left the Toronto suburbs behind and rolled north through the lush, flat farmland of the Holland Marsh, and within the hour, the blue waters of Lake Simcoe had appeared out the left side of the train. The dome gave me a panoramic view of the rolling countryside, and I could also look forward to the bellowing diesel engines, or behind, seeing the train go on for what appeared to be forever. It was only on corners that I could see all the way to the end of the train, about twenty cars behind me.\n\nI had started out alone in the dome car, but within a few hours I had been joined by others. There was a young Japanese couple excitedly pointing at... well, what they were pointing at I couldn't figure out, but they were snapping endless pictures out the window. There was a middle-aged wildlife spotter from Scotland called Duncan McKenzie, with a pair of binoculars and a Canadian wildlife field guide. There was a veteran train traveler from Ottawa called Rose, who spoke with reverence about the food options on the ground at the station stops where the train would need to refuel. I hadn't realized it was an option to get off the train at fuel stops, but I was thrilled at the idea of being saved from top ramen in the canteen below or the expensive food in the restaurant car for three days. I thanked her profusely for the advice and vowed to eat in the towns whenever possible. There were a couple of Euro-tourists speaking a language I couldn't identify and keeping to themselves. And there were a couple of other single young men like myself, heading out to summer jobs in one of the national parks, hotels or tourist traps dotting the Rocky Mountains.\n\nDay 1 -- Toronto, ON to Capreol, ON\n\nAs the train worked its way north and Duncan checked off a few of the animals on his list, the farmland eventually disappeared and the landscape transformed into Canadian Shield country, a vast, unsettled wilderness of rocks and lakes and trees that would be our view for the next thirty hours or so. I played gin and poker with a couple of the other young guys in the dome and kept an eye out for wildlife as lunchtime approached and then disappeared. I finally caved in and bought an Aero bar from the canteen to stave off the hunger pangs.\n\nAround 4:30 we approached the first refueling stop in the town of Capreol. The conductor announced that we would be stopped for about 25 minutes, and we were free to detrain and explore a little. Given that I was famished and had Rose's advice churning in the back of my mind, I planned to head out randomly from the train station in search of a takeaway to get a combined lunch and dinner. As the train ground to a halt, I was one of the first off, stepping into bright sunshine and a noticeable nip in the air. Toronto's beautiful spring sunshine had given way to a northern Ontario day that, while still bright, was only a few degrees above freezing.\n\nI jogged off the rail platform, dodging the smokers gratefully inhaling cigarettes again after a full day without, and made my way into the small town. I quickly found the main shopping street, and soon enough, I found a small diner. I ducked inside to find it empty in the late afternoon lull, ordering a large Reuben with French fries from the girl behind the counter. Within fifteen minutes, I had a hot sandwich, fries and a can of Dr. Pepper for under $10, and, feeling rather pleased with myself, I moseyed back to the nearby station, watched the engine being refuelled for a few minutes as crowds milled and stretched, and then climbed back on board when signalled by the train's whistle.\n\nI slowly made my way back to my seat in the coach car for the first time since leaving Toronto, and sat down, unfolding my seat-back tray and setting my quarry down. The hippie chick looked up from her book and watched me open the Styrofoam container, a look of hungry jealousy on her face.\n\n\"Where did you find that?,\" she asked, with a bit of annoyance in her voice.\n\n\"Restaurant in town,\" I responded. \"One of the ladies up in the dome recommended going out and foraging for food at the refuelling stops. It beats the canteen or paying for the fine dining restaurant.\"\n\n\"I knoooooooooow,\" the girl whined. \"I can't afford the caviar and shit in the restaurant car, and it's not like they give us a lot of other options. I didn't know we'd have time to go find food, and all I've eaten since last night is granola bars.\" The envy in her eyes intensified as I took the first bite of sandwich. She stared at me eating, unabashed, not even trying to hide the pleading puppy dog look in her eyes. I finally took pity on her.\n\n\"Tell you what,\" I said. \"This is huge. You can have half of it.\"\n\nHer eyes lit up and she grabbed the other half of the sandwich, quickly taking a big bite, as though she was worried I'd rescind the offer. After the first hungry swallow, she suddenly looked self-conscious, and turned to face me.\n\n\"Thank you. I mean really, thank you. I'm not sure what I would have done otherwise.\" She smiled at me, a white, brilliant, knockout smile, and suddenly I noticed for the first time how pretty she was. She had long, loosely curled brown hair that frizzed well past her shoulders, round brown eyes with a small upturned nose, and a fair complexion that didn't suffer at all from the fact she clearly wasn't wearing any makeup. She was wearing a strange olive green poncho tunic thing with a paisley embroidered pattern that I didn't know how to describe except to say that I had never seen anything like it before. It hung shapelessly on her figure between her shoulders and midriff, before being belted and cinched at the waist and turning into a relatively short skirt. She also had on striped knee-high stockings and purple Doc Martens. I could just make out a hint of a curve on her chest under the shapeless fabric, and her nose stud and dangly homemade-looking necklaces kept glinting in the late afternoon sunlight as she ravenously devoured her half of the sandwich interspersed with fistfuls of fries. I caught myself from staring too long and forced myself to focus on the food in front of me.\n\nAs we ate, we exchanged pleasantries. Her name was Nicole MacDonell and she was from just outside Saskatoon, Saskatchewan. She was a sociology major and Japanese minor, a year older than I was, and was a student at the University of Saskatchewan in her hometown, though she had just finished a third year abroad on exchange, studying in Japan. It had been her first time abroad, and she was homesick and looking forward to being back with her family. She'd arranged her flight home from Tokyo to go through Montreal so that she could visit her older brother, who was a law student at McGill University there, and had spent a week with him. Now, she was finally on her way home for the summer, taking the train home because it was cheaper and because she wanted to see some of her own country. She'd taken the red-eye train from Montreal to Toronto overnight and had spent most of the previous seven hours asleep, but now she was awake and wanted me to show her what I'd discovered of the train.\n\nDay 1 -- Capreol, ON to Hornepayne, ON\n\nThe train had been underway again for about fifteen minutes as Nicole and I finished eating and rose from our seats. I led her back through the two coach cars and then into the dome car, which had quietened down from earlier. Duncan was up there alone.\n\n\"Oh hi, Ben,\" he greeted. \"Had nae luck since you left us. D'ya mind staying a wee bit? Apparently, the animals consider ye a good luck charm.\"\n\nI grinned at him. \"Sure, we were planning to stay awhile. This is Nicole, my seatmate. Nicole, Duncan.\"\n\n\"Charmed.\"\n\nAs we took our seats, suddenly Nicole shrieked as the train whooshed past a black mass sitting beside the track. I heard Duncan's camera click several shots in succession.\n\n\"That's our first bear of the trip!\" Duncan exclaimed. \"Lassie, it's seeming to be you who's the good luck. Ben, thanks for your service, we won't be needing ye anymore.\"\n\nNicole cackled. \"What can I say?\" she grinned. \"I attract bears.\"\n\n\"I heard they actually use the tracks as clear transportation through the woods,\" Duncan said. \"They know the trains won't harm them, so they'll just sit beside the track and wait patiently for it to pass. Smart animals, they are.\"\n\nAs the sun sank lower in the sky and Duncan resumed scanning the bush for signs of movement, eventually all signs of civilization left us, apart from the disused telegraph poles alongside the rail line marking off the distances. Northern Ontario north of Capreol was a vast, unpopulated wilderness consisting of low rocky outcrops, endless trees, and many, many lakes. As we continued north, I was surprised to notice that we'd even stopped passing logging roads. The bush up here was completely unspoiled.\n\nWe kept a sparsely polite three-way conversation going, and in time Duncan managed to spot a porcupine and several owls. He was so taken by Nicole's abilities as a good luck charm that he \"didn't even mind that she was a MacDonell, the sworn arch-enemies of his own Clan MacKenzie\".\n\nThe sun eventually disappeared below the horizon, and with the onset of darkness Duncan retired, leaving us alone in the dome, which was pitch dark with the minimal lighting inside and utter blackness outside in the endless wilderness. Though I could barely make out her face, Nicole and I kept up a conversation about our university careers, friends, families, music and books, past relationships, all the stuff that matters so much to you when you're a young university student. She was a prairie girl at heart, into organic food and all things natural, but she hated the redneck farmer culture that surrounded her and had taken her rural upbringing in the hippie direction instead. Her year in Japan was taken as fulfillment of a lifelong dream stemming from a fascination with Japanese culture, but she was leaving with a more nuanced view of that insular island, and she said she had fallen out of love with Japan a little bit after living there as a foreigner for so long.\n\nMostly, though, she was just homesick and missing the big skies and wide-open spaces of the Canadian prairies. Her Dad owned a farm equipment store and was hoping she'd work for him there -- she had done basic bookkeeping for him since high school -- but after a year broadening her horizons in Japan, all she wanted to do was to see old friends and reacclimatize to life where she felt at home. That said, she also was quite envious hearing about my summer job in the mountains, and we exchanged email addresses -- I promised to let her know if there was more work available.\n\nFinally, as tiredness started to creep in and the clock approached 1 AM, the conversation started to lag a little bit.\n\n\"I don't know how we've done it, Ben. I've never had a seven-hour conversation with literally no awkward silences in it before,\" she said, smiling gently at me as her eyes sparkled in the low light. An awkward pause descended as we stared at each other. \"Fuck. I just jinxed it, didn't I?\" she asked rhetorically.\n\nI don't know what came over me, it wasn't the kind of thing I ordinarily ever would have done. But given that she would be out of my life forever tomorrow night regardless, I decided to throw caution to the wind and leaned over, and, as if I was having an out-of-body experience and not in control of my own actions, I gently kissed her, tentatively at first, then slightly more intensely as she relaxed and accepted the kiss. After a few seconds, I pulled back and looked at her, feeling hot and tingly all over and suddenly aware of the sudden tightness in my underwear as I saw her processing what had just happened.\n\n\"Wow,\" she said dreamily, with a glazed look in her eyes. Suddenly she stood up and bolted out of the dome, down the stairs. Something told me I shouldn't try to follow.\n\nI gave her a minute, then returned to my seat, seeing no sign of Nicole. Instead I discovered two tiny and inadequate blankets and pillows on each seat distributed by train staff. I sighed, then quickly used the toilet and brushed my teeth, then settled in for what promised to be a terrible, fitful sleep.\n\nDay 2 -- Somewhere in the middle of nowhere, ON\n\nI had no idea how long I'd stayed asleep or how I'd even gotten there, but I awoke suddenly to an unfamiliar weight on me. As I got my bearings, I noticed we were stopped on a siding as a passing freight train whooshed by out the window. I took note of the fact it was still nighttime, then I looked to my left to see Nicole there, her head snuggled on my shoulder, wearing a sleep mask and earplugs and out cold. Not sure what to do, I decided to at least take relief from the fact that she had clearly decided not to change seats. As I came to, I realized I had a raging nocturnal erection, and I quickly adjusted my jeans so it wouldn't be obvious if Nicole woke up suddenly. I considered running to the bathroom to jerk off, but first decided to try to ignore it, and eventually I must have passed out again.\n\nDay 2 -- Hornepayne, ON to Sioux Lookout, ON\n\nThe entire train seemed to wake as one with the advancing dawn, as light flooded in the picture windows and treated us all to an early morning wakeup call. I checked my watch and was dismayed to see the first number was a 6. I then noticed, to my even greater dismay, that the landscape outside was white with snow and that the inevitable lake out the window was frozen over. I sat and watched the world go by for a few minutes, and eventually I felt Nicole stir beside me. She pulled up her sleep mask, noticed the snow, swore under her breath, and replaced it over her eyes with a groan.\n\n\"Do you want some coffee?\" I asked.\n\n\"Coffee yes coffee,\" she mumbled.\n\nI quickly made my way to the canteen, bought two cups from the cook and returned to find her sitting reluctantly upright, mask resting on her forehead and blanket pulled up to her neck. I handed her the cup along with a couple of packets of sugar and some creamer, which she ignored as she greedily took her first sip.\n\n\"About last night...\" I started tentatively.\n\n\"Ben, it's okay,\" she responded with a sleepy smile. \"I'm sorry for freaking out. I just needed a little time to think. I'll tell you more about what happened last night in a bit, just let me wake up first. But you didn't do anything wrong. I'm glad you kissed me.\" She smiled again at me, and I felt relief wash over me as she got up to use the bathroom.\n\nShe returned a few minutes later. \"Did you know there's no fucking showers in coach?\"\n\n\"Yeah, I kind of did,\" I said. \"I can't say I blame them. There are a lot of us, and they have to have some amenities reserved for the rich people in sleeper class, I guess?\"\n\n\"I'm not having it,\" she responded. \"Let's go see what we can do. Do you have a towel and shower stuff with you?\"\n\nI did, and I said so.\n\n\"Great, let's go get some breakfast.\"\n\nWe loaded towels and toiletries into Nicole's bag and made our way back to the rear of the dome car, where a bored-looking conductor was guarding the entrance to first class.\n\n\"Do we need a reservation for breakfast in the dining car?\" Nicole asked sweetly. The conductor peeked through the window at the dining car behind us.\n\n\"No, we're not full right now,\" he said, with a hint of a Quebecois accent. \"Go ahead and the hostess will seat you.\"",
        "We walked into the ornate, wood-panelled dining car, which was about half full of seniors and other assorted wealthy-looking white people, which was quite the contrast to the range of ages and races in coach. A chipper hostess seated us side-by-side at a table near the rear and handed us menus.\n\nI let out a low whistle at the prices. \"Shit, can you afford this?\" I asked.\n\n\"Relax, Ben, we'll split an order of toast or something,\" she responded coolly. \"We need breakfast anyway, and it's not like there are any towns around here.\" I checked my map as we waited for the waitress, and from what I could gather we'd refuelled overnight in Hornepayne and weren't due for another fuel stop until we reached Sioux Lookout. According to my pocket timetable we were due in Sioux Lookout at 9:05 AM, but I gathered from overhearing the train staff chatting that we'd fallen a couple of hours behind schedule in the night.\n\nPresently the waitress came and took our order, and returned shortly thereafter with rye toast, which we devoured hungrily with strawberry jam. As we finished eating and waited for the bill, I felt pressure on my leg under the pristine white tablecloth, and I turned to look at Nicole. She winked at me and gradually inched her hand higher up my thigh, approaching my crotch, then backed off, then repeated herself, then again. I went to touch her back, but she suddenly turned to face me.\n\n\"Do you trust me?\"\n\nI paused. \"Well, I mean I've known you less than a day, but sure, why not?\"\n\n\"Great!\" she answered. \"Follow my lead.\"\n\nAs the waitress passed us, loaded with hot food to serve to a table of pensioners farther up the car, Nicole threw some money on the table, grabbed her towel bag, then bolted and walked as quickly as respectably possible for the door at the rear of the car, the one leading to first class. I stared for a second then quickly followed, heart racing. I kept waiting for the stern voice to call us out, but it never came, and two doors later, we were suddenly in a sleeper car. Nicole kept up the rapid pace until we were at least three cars further down the train before finally stopping to face me.\n\n\"We did it!\" she exclaimed with a gleam in her eye. \"Hot shower, here I come!\"\n\nMy heart rate gradually started to slow down, and I took stock of my surroundings. The car we were in seemed to be separated by different types of berths, from the lower end bunks, stacked like pallets along the wall with only curtains for privacy, to the full-sized private bedrooms. We quickly found a shower, but could hear running water behind the door, so Nicole led on as we moved further aft. Each sleeper appeared to have one shower apiece, and each one was occupied in the morning rush as we made our way down the train. We eventually found another dome, then another half-empty restaurant car, but the guards had disappeared, as the entire remainder of the train was first class, so our presence aroused no suspicion. The waiter there even said hello to us. Finally, about \u00be of the way down the train, we found a shower that was unoccupied, and quickly bolted into it, locking the door behind us.\n\nThe room we were in was tiny; only about the size of two large phone booths bolted together. Half the room was the shower stall proper, and the other was a tiny changing area adjacent with a small counter, miniature sink, and mirror. The two were separated by a translucent plastic shower curtain.\n\n\"What are we going to do?\" I asked, uncertain.\n\n\"I'm still having that shower,\" she responded, thinking. \"I guess you can't exactly wait in the corridor for me, it would be too suspicious if someone questions you... fuck it. Turn around.\" She bent over and started unlacing her boots.\n\n\"What?\"\n\n\"Turn around and face the door,\" she ordered.\n\nI complied, and after listening to a minute or so of rustling behind me, I felt her hand on my shoulder.\n\n\"Hang this on the hook for me?\" she asked.\n\nI glanced and noticed she was handing me her poncho thing. I swallowed hard and forced myself to keep staring at the wall, carefully hanging her clothes up as I heard her bag unzip. I saw a towel appear on the small shelf beside me out of the corner of my eye, and finally, after an uncomfortable eternity, I heard the shower curtain close behind me and the water turn on. She finally handed me her bag to put somewhere dry. I noticed it had striped stockings, a grey bra and a pair of pale blue panties resting on top of it, and I tried not to think about what that implied.\n\n\"Okay, you can turn around now,\" she finally said. \"It's not exactly super private, but it'll have to do.\"\n\nI turned and saw the outline of her naked body, obscured but not completely hidden by the translucent curtain. I could clearly make eye contact with her through the small gap at the top of the curtain, and I averted my gaze as I saw her watching me through the gap. I could see her washing her long brown mane, and had a clear view to about her shoulders, but no lower. Through the curtain, I could see the faint outline of small breasts, pink nipples, and brown pubic hair. I stood in the tiny space, trying not to stare, but having nowhere else to look, as Nicole showered in silence. I saw her soaping the outline of her body, her legs, arms, breasts, back, between her legs.\n\nSoon, my erection came back, tightening to the point of discomfort in my jeans. I felt self-conscious half-staring at her, but she didn't seem the least bit uncomfortable with me so close by. I turned and caught my reflection in the mirror, my sandy brown hair, my glasses, my maroon and grey McMaster hoodie. I thought I looked uncomfortable, and I tried to psych myself up a little. She wants you here, I told myself. She told you to turn around. You wouldn't be here if she wasn't okay with it. Relax.\n\nAfter a few minutes of trying not to make it too obvious I was staring at her, she finished and switched the water off. \"Hand me the towel?\" she asked nonchalantly.\n\nI passed her brown towel through the gap between the shower curtain and the wall, and as she claimed it from me, I saw clearly, for only a split second, one glimpse of a tiny perky breast, pink nipple standing at attention, glistening with moisture. There was no avoiding it -- I was horny now, and I could only pray that she didn't notice when I undressed in front of her.\n\nAs she finished drying, she groaned in frustration. \"Fuck, I didn't think about this, but I can't change in the shower stall again now that it's wet in here without getting my clothes soaked, and there's nowhere for you to undress and get in the shower with me in the stall,\" she said pensively.\n\nI said nothing.\n\nShe wrapped the towel around herself, then pulled the curtain back. Without speaking or acknowledging the fact I was clearly watching her, she stepped closer to me, to the point our bodies were almost touching in the confined space. I could smell the slightly floral scent of her shampoo as the room filled with the steam released by the opening of the curtain. She reached into her bag and pulled out a fresh pair of lime green panties, turned her back to me so that she'd have the room to bend over, and pulled them up under the towel. As she did so, her ass backed into my crotch, accidentally I think. I felt her body jump in mild surprise, probably at feeling the hardness in my jeans, which caused me to blush. I felt her stop for a moment, lingering, as though she was savouring the moment. I felt my cock twitch involuntarily. She must have felt that, I thought. I hope she's cool with it.\n\nShe eventually stood up, dropping the towel with her back still to me, and pulled her grey bra on as I admired her body from the rear. She was thinner and fitter than I'd realized under the shapeless poncho thing she had been wearing, with barely an ounce of extra fat. Her body was boyish in shape, with a tiny ass and hips for a woman, but her complexion was flawless, with no stretch marks, freckles, moles, or imperfections. With her back turned, I indulged myself in a little staring.\n\nOnce the bra was on, she turned to face me, close enough that we could have been awkward middle-schoolers slow-dancing at arm's length. \"OK, it's your turn,\" she said. \"I can finish up out here while you're in the shower.\"\n\nShe changed places with me, moving to the door as I turned towards the shower stall. She respectfully turned her back, and I quickly undressed, passing my clothes to her so she could hang them on the hook. My boner popped out as soon as I pulled my pants down. I couldn't help but touch it slightly as I undressed, savoring the view of the underwear-clad girl inches away as I felt the tingling between my legs intensify. Suddenly I remembered myself, and I slunk further into the shower stall, embarrassed, and closed the curtain.\n\nAs I turned the water on, I gave Nicole the all-clear to turn back around. I saw her eyes checking me out through the curtain, and as I saw her notice the outline of my stiffy I saw her eyes widen. She licked her lips unconsciously before catching herself and looking away with a smirk. She then turned her attention to the mirror in the room, wiping it clear with her towel before she started running a brush through her hair.\n\nThe hot shower felt incredible after a day's travel, and my erection gradually faded as I quickly went through the motions of getting myself clean. I kept checking out the girl on the other side of the curtain and watching her going through her morning routine, detangling her hair, brushing her teeth in the tiny sink, applying deodorant, still only dressed in the bra and panties. Finally, she turned and leaned against the wall as I finished, and handed me my towel through a gap in the curtain as she pretended she wasn't trying to check me out.\n\nOnce I was dry, I wrapped the towel around myself at the waist and opened the curtain, and I watched her eyes as she looked up and down my torso with approval. I'm not exactly a musclehead, but I do keep fit. I grabbed a fresh pair of navy blue boxer briefs out of my bag and pulled them up, then dropped the towel, intending to give her the same show as she'd given me. I brushed my wet light brown hair and my teeth, turning in place to give her a view from all angles without making it obvious I was doing so. All the while, I was kind of enjoying the attention she was giving me, as she watched without even a hint of self-consciousness. She was seemingly finished her morning routine, but she had made no move to finish getting dressed. Finally, I turned to face her, back at slow-dancing distance, and we made eye contact.\n\n\"I kind of like this,\" she said, finally.\n\n\"So do I,\" I responded, \"it's really intimate.\"\n\nThe steam by this point was so thick as to make seeing her difficult, even at such a short distance. That said, I could see her face and upper chest flushed bright red as she pulled in close to me, hugging me, and I felt her bare skin meet mine, her tiny boobs making contact and smushing pleasantly into my chest. She lay her damp head on my shoulder and I felt her shiver slightly and exhale with pleasure. I let my hands rest in the small of her back and she sighed as we held the moment. I debated kissing her, not entirely sure what to do, torn between what I wanted and not wanting to scare her off again. My cock awoke again, and as it pressed into her hip she made no move to adjust herself.\n\n\"I think we should go,\" she said, finally. \"We can't get caught in here.\"\n\nI agreed reluctantly, and we both dressed quickly, with Nicole pulling on a new long poncho skirt thing in black over new striped stockings, paired with the same purple boots as before. Finally, we packed up our wet belongings and exited the shower. There was an older guy in a bathrobe waiting outside with a towel on his arm, and he broke into a sly grin at seeing us, winking at me as I passed.\n\nI turned to head back to coach, but Nicole stopped me. \"We're probably not getting back into first class again,\" she said. \"Let's go all the way to the end and explore.\"\n\nShe led on, as we walked a seemingly endless path of identical sleeper cars, with another dome and restaurant car at one point along, serving the wealthy clientele. Some of the first-class people were still sleeping, some were awake and watching the world go by. Nearly all were silent and keeping to themselves, a marked change from the friendly camaraderie among strangers I'd already noticed in coach. Finally, we reached the Park Car at the end -- a bar car with a dome of its own, and a panoramic lounge right at the rear of the train. I took a seat in the lounge, and I enjoyed the novel experience of watching the rails appear from underneath me as we blazed a path through the endless forest and muskeg.\n\nNicole disappeared for a moment, then reappeared having bought another two cups of coffee from the barman. She sat and handed me one of the cups, which I accepted gratefully. She then turned to face me. \"So, I think I owe you an explanation as to why I flaked out last night.\"\n\nI shrugged. \"You don't owe me anything, but I wouldn't mind knowing at least that I didn't creep you out or push things too far. I mean, the events of this morning tell me that I didn't, but I'd at least like to know that officially.\"\n\nShe smiled. \"You didn't creep me out. Far from it.\" She took a deep breath, and her brown eyes appeared lost in thought. \"You know I spent the past year living in Japan and going to school there. I also mentioned last night I hadn't had a boyfriend in well over a year. And this might be a little too personal to tell a guy I just met yesterday, but fuck it, I'm gonna throw it out there.\n\n\"Japanese guys, some of them are really sweet, and there were a couple I was romantically interested in while I was there, but the sexual culture there is really repressed and different from the way things are here. One of the things that I found fucked up is that there's an expectation that the women will resist, at least at first, and the guys will push them, even when the women actually want it. I found it kind of rapey, and I'm not into playing coy. If I want you, I have no problem making a move. If I don't, you damn well better respect my saying no the first time.\n\n\"Each time, and there weren't many, but each time I got into a situation where I might be interested in a guy and we'd get alone, no matter what he was like before, he would get really aggressive. And I mean I was never pushed to do anything I didn't want to; I wasn't raped or assaulted or anything. It just turned me right off, and I noped out of there each time. After a couple of months of that I just gave up trying to find a Japanese boyfriend.\"\n\n\"That sounds horrible,\" I agreed. \"What about expat guys?\"\n\n\"I had a few who were friends, but none that were dating material. The one I liked at first turned out to be a real player, and I didn't want to be a notch on his bedpost. As for the others, it was a small community, and I was scared of drama. I didn't want to risk losing the small group of Canadian friends that I could hang out with, drinking shitty beer and listening to the Tragically Hip. You need friends that remind you of home when you're living in a foreign culture.\"\n\n\"That makes sense.\"\n\n\"So where that leaves me,\" she continued, \"is that I haven't gotten laid in well over a year. I flew back from Tokyo to Montreal and spent the week living with my brother, which, God love him, isn't exactly going to lend itself to bringing home any hot boys. And now I'm on the way home to my little house on the prairie, where I know pretty much everyone who lives within a twenty-mile radius, and where I already know there's no guys around who are boyfriend material. I was resigned to celibacy for a while longer yet. I'm okay with it. I'm used to it. And then...\" She shivered noticeably.\n\n\"You kissed me last night. What a kiss. You were so self-confident and yet so gentle and tender. It's exactly how I like to be kissed, and I haven't been kissed in over a year, and in that moment my guard disappeared. It was like a dam bursting. A year of repressed sexual frustration exploded out of me all at once, and in that moment, I would have let you do anything to me that you wanted.\n\n\"And then I freaked out, because like I mentioned, I'm not looking for a random hookup, and I'm getting off this train tonight, and we're probably never going to see each other again after this. Losing control so quickly, and so unexpectedly, made me panic. I guess I just had to think some things over.\"\n\nShe paused, turning her attention to the snowy pine and birch trees whizzing by out the panoramic windows. I could see her reflection in the window, lost in thought.\n\n\"So where did you wind up?\" I eventually asked her.\n\nNicole looked back at me. \"I know you said this last night, but just to confirm, you don't have a girlfriend?\"\n\n\"Nope,\" I responded. \"My most recent one and I broke up around Christmas.\"\n\n\"I really don't know where I wound up,\" she responded. \"I guess I wound up feeling like you're the first guy I've met in over a year that's worth getting to know a little better. Except we're parting ways in like eighteen hours. So maybe I'll just take it moment to moment. At least this way I won't spend the next eighteen hours obsessing about what happens after that.\"\n\nShe paused for a minute. \"What about you? What are you looking for?\"\n\n\"I don't know,\" I answered truthfully. \"I'm not looking for anything, but I'm okay if it finds me. I didn't want to have any expectations from this summer. I was just going to take it day-by-day and see what came of it. I wasn't expecting to meet anyone until I at least made it to Alberta. But I really like you, and I feel like we have a connection, and I'm willing to follow this wherever it goes over the course of today. I'll worry about tomorrow when tomorrow comes.\"\n\n\"That sounds like a plan to me.\"\n\n\"It's not usually a good idea to talk about commitment on a first date...\"\n\n\"Agreed,\" Nicole interrupted.\n\n\"So, given the circumstances, what if all it turns into is a one-night stand?\" I asked.\n\nNicole winked at me. \"Well, if you kiss that well...\"\n\nI leaned in and kissed her again, and she adjusted her body and leaned in to kiss me back. We made out tenderly for a moment before she pulled back. \"We should really get back to coach class. We already look out of place here with all the well-dressed white hairs, even without making out in public, and I don't want to attract stares. Besides, I'm curious if Duncan has spotted any more bears.\"\n\nWith that we got up and started making our way back towards the front of the train.\n\nAs we passed through the last restaurant car, now being set up for lunch, our waitress from earlier shot us a dirty look. We passed through the door back into the coach class dome car, where the same conductor from earlier was waiting for us.\n\n\"Please, sit down, both of you,\" he said, politely, but with an edge letting us know he wasn't asking. We did as we were told.\n\n\"What are your names and your destinations?\" he asked.\n\n\"Ben Maxwell, Jasper, Alberta.\"\n\n\"Nicole MacDonell, Saskatoon, Saskatchewan.\"\n\n\"I'm Pascal Leclerc, your conductor,\" he responded, writing our names down in a little notepad.\n\n\"I get it,\" he opened. \"You wanted to see the rest of the train. I know what it's like to be cooped up in here, able to see the big train stretching out behind you from the dome but not being allowed back there. Assuming I don't hear any reports from my colleagues about you doing anything else you shouldn't have done, you're not in trouble. But Via Rail does not charge all the people in First Class premium rates so that coach passengers can go back there whenever they want to.\n\n\"I'll be keeping your names on file for the rest of the trip, and I will make sure my replacement when we change crews in Winnipeg has them too. This is your slap on the wrist and your warning. If we catch you back there again, you'll be put off the train at the next station. I'm trusting you to follow the rules from here on out. Don't make me regret it.\"",
        "He waved us to go, and we headed back to our seats to dump the towel bag. Once we were out of sight of the conductor, Nicole turned to me and kissed me quickly.\n\n\"That could have been a lot worse,\" she said. \"Thanks for the first adventure of many.\"\n\nShortly thereafter, we headed back to the dome car and joined a game of euchre.\n\nDay 2 -- Sioux Lookout, ON\n\nIn the vast, empty wilderness that is northern Ontario, there are two settlements of any size in the two thousand kilometre stretch between Sudbury and the Manitoba border. There's Sault Ste. Marie, the steel and shipping centre at the foot of Lake Superior, and there's Thunder Bay, the logging and mining city at the head of the same lake, 700 km away. Via Rail, in their infinite wisdom, goes through neither one.\n\nInstead, the train goes through an endless stretch of lakes and rocks and trees and towns so small and remote that the train is the only practical way to get in or out. Towns that, even if you're from Ontario, you've never heard of -- Armstrong, Ferland, Caramat, Malachi, Copeland's Landing. And in the middle of that stretch is Sioux Lookout, the largest of a collection of tiny, remote frontier towns.\n\nWhen you've been on the rails for 28 hours, 26 of which have been through impenetrable wilderness with literally no signs of human habitation, coming across a town of 5,000 people in the middle of all that emptiness appears before you like the first sight of Mecca must to religious pilgrims. And, just like Rose had promised the day before, standing proud on a street corner within sight of the train station was a Subway restaurant.\n\nNicole's eyes widened. \"I never thought I'd be so happy to see a lousy fast food joint in my life.\"\n\nAs the train ground to a screeching halt at Sioux Lookout station, Nicole and I bounded off and made a beeline ahead of a group of similarly-minded coach passengers looking for an early lunch. The weather was bright and cold, but at least there wasn't any snow. We managed to be second in line at the Subway, but the building was packed shortly thereafter with a line of coach passengers stretching out the door. I saw Rose in line behind us as we watched our sandwiches being made.\n\nHaving procured our sandwiches in takeaway bags, we decided to explore the town a little bit. We still had ten minutes before we had to be back on the train, so we wandered up to the town's main drag, just trying to take it in. Sioux Lookout was a typical remote outpost town, full of frontier-style buildings and a massive water tower, situated on the shores of one of the biggest lakes I could remember seeing that day. As we walked up the main street, chatting, suddenly Nicole took me by the hand and led me town a tight alleyway between buildings. She stopped, about halfway through, then, as I looked at her quizzically, she pulled me down to her and kissed me.\n\nShe kissed gently at first, then heavier, running her fingertips through the fine hairs on the back of my neck. I could feel her cold cheeks brushing against mine, her soft lips and tongue probing and exploring my mouth. I pulled her in closer and her knees buckled, slightly, and a soft moan escaped her lips. She then pulled back.\n\n\"I've been wanting to do this for the past couple of hours and I wasn't going to pass up the opportunity,\" she explained. \"It's about time I kissed you back.\"\n\n\"No argument here,\" I responded, and pulled her back in again.\n\nMy erection returned with a vengeance, angry at continually being called back into service without being given the chance to release, and as it pressed again into Nicole's hip, I felt her moan slightly. I reached around and cupped her firm ass, and her legs parted, allowing my leg to slip between hers. As her skirt rose up, my leg made contact with her panties, and I suddenly became aware of searing heat between her legs, a remarkable contrast with the biting cold of the air. She bore down on my leg slightly, legs buckling, as I held her tightly and kissed her softly.\n\nSuddenly the air was pierced by the train's whistle. We knew that was the five-minute warning, so I let her go, conscious once again of the heaviness in my trousers and wishing I'd paid for a sleeper cabin.\n\nWe made it back to the train shortly before it departed, returning to our seats to eat our lunch together.\n\nDay 2 -- Sioux Lookout, ON to Winnipeg, MB\n\nThe Sioux Lookout to Winnipeg stretch was the last one through the Canadian Shield country. Just seven more hours of empty trees and rocks and water and then one hour of prairie, and we'd be in Winnipeg, the capital of the Canadian prairies and the halfway point on the journey between Toronto and Vancouver. In Winnipeg we would change crews, and we would stop for two hours, more than enough time to do a little sightseeing and have supper. We'd have the rest of the evening together, and then, around 2 AM, the conductor would wake Nicole up and she'd disembark in Saskatoon, where her parents would pick her up and drive her home. Just like that, Nicole would be gone from my life as quickly as she'd entered it. The thought depressed me a little, so as she snuggled in beside me after eating our lunch, comfortably curled in my arms under a tiny Via blanket, I wondered where her head was at.\n\n\"What are you thinking about?\" I asked.\n\n\"Sex,\" she replied, matter-of-factly.\n\nI stared at her.\n\n\"What? You asked!,\" she exclaimed.\n\n\"No, it's just...\" I tried to pick my jaw up off the floor. \"That's a good answer. It's just not one I've ever gotten before.\"\n\n\"Well, you need to hang out around cooler women, clearly. And you must also be aware that girls don't cool down from a hot makeout session as quickly as men do.\" As she spoke, she took my hand in hers, and nonchalantly moved it up to her breast. I stared at her.\n\n\"What?\" she asked innocently.\n\n\"You know we can't exactly have sex in front of an entire train car, right?\" I asked, still having trouble processing what was happening.\n\n\"Mmmmm...\" she responded dreamily. \"That sounds hot... but you're probably right. You'll just have to secretly feel me up under this blanket as a consolation prize.\" She noticed my hand drifting down away from her breast in shock, and forcefully moved it back up where she wanted it.\n\nHer breasts were small, but impossibly perky, and she noticeably tensed up each time I ran over where I thought her nipple would be. She was wearing a heavily padded bra, so I couldn't feel much of what was underneath it under two layers of fabric and padding, but I still was enjoying the hell out of it, not just feeling her pert body, but also the look on her face every time someone walked by and couldn't tell what we were doing. Nicole was apparently a bit of an exhibitionist.\n\nI also decided that given that we had seven hours, and given what she'd already told me about what she liked, I was going to go slow. There was no urgency to my touching her; I'd circle around her nipple then leave and touch her stomach, thighs, run my fingers through her hair, kiss her neck and ear gently when no one was looking. It helped that the seats across the aisle from us were currently empty; I had seen their occupants in the dome car before lunch and assumed they'd gone back there.\n\nI have no idea how long I traced patterns up and down her body, but it felt very Zen, watching the wilderness zipping by as I stoked her fire. At some length, I finally reached up under her shirt and found her bra. She watched, through the blanket, holding her breath, as I found her breasts, not even coming close to filling out the cups of her bra, and reached in to touch her right nipple. It was rock hard and thicker than I was expecting -- the padded bra hadn't prepared me for how pokey her nipples would be underneath it. I kept my pace slow and gently touched one and then the other, then withdrew for a while, then returned. By now Nicole was beet red in her face and chest and breathing hard. She was sitting with her legs wide open under the blanket and clearly having trouble keeping still.\n\n\"My God... you're driving me crazy with this teasing,\" she breathed after what felt like forever. \"I need a bathroom. Be right back.\"\n\nShe disentangled herself from me and disappeared up the aisle, which gave me the brief opportunity to relieve the pressure on my erection and reposition it so that it was comfortably tucked up under my belt. Momentarily, she returned, replacing the blanket and cozying back in.\n\n\"I brought you a present,\" she said, naughtily. I felt her hand slip into mine and suddenly I was holding a piece of fabric, so I looked under the blanket and saw a familiar flash of lime green in my hand. Oh Jesus, I realized with a start, these are the panties she had on this morning. I felt them and noticed a huge wet patch in the gusset, slick with her juices, as she looked at me, shyly, waiting for my reaction.\n\nI reached under the blanket to the hem of her skirt and slowly slid my hand upwards as Nicole sharply sucked in her breath. As I grew closer to her centre, I felt the heat rising, and finally, at long last, I found her hairy slit, sopping wet with her arousal. I slid my fingers up and down her opening, then pulled back, stroking her inner thighs as she squirmed in an effort to move my hand where she wanted it. I kept going back, teasing, avoiding her clit at all costs, but coming as close as I could, enjoying hearing Nicole's breathy, frustrated voice telling me to go fuck myself every time I got close and then pulled back.\n\n\"Please, Ben, give me what I need,\" she finally whispered, out of breath, nearly delirious with lust.\n\nI complied, wetting my fingers in her opening and then circling her clit hood as slowly and delicately as I could manage, trying to keep my entire arm still except my fingertips. I gently rubbed her for a few minutes as she squirmed, trying in vain to get me to increase the speed or pressure on her sensitive area. At length, I finally withdrew my fingers and took them to my mouth for a taste. As I licked my finger, tasting her femininity, she stared at me with frustration.\n\n\"You and your teasing, you son of a bitch,\" she said, only half joking. Her breathing was heavy and ragged and she looked completely out of control.\n\n\"It's not like I can finger you properly on the train under a blanket in broad daylight without giving anything away anyway, and besides, you love it,\" I responded, smiling.\n\n\"I... I do love it, actually,\" she answered. \"You're so gentle and it's driving me crazy.\"\n\nI suddenly jammed two fingers aggressively back between her legs, and slid them into her, pressing hard on her g-spot. Nicole jumped and moaned involuntarily, loudly enough that someone a few rows up turned around looking back to see where the yelp had come from. I withdrew my fingers and both of us instinctively pretended to be asleep.\n\nAs we were pretending, Nicole whispered in my ear. \"I'm so fucking turned on. I need to feel you inside of me so badly, all of you. And I can't have that right now, but at least let me check out what I'm going to be working with.\"\n\nOnce the coast was clear again, Nicole skillfully unbuttoned the top button of my jeans under the blanket, then unzipped my fly and reached in to find my erection. Her hands were cold as she found her prize, releasing it from its prison and touching it experimentally.\n\n\"I approve,\" she cooed. \"This will fit nicely where I want it.\"\n\nShe started rubbing my cock up and down, but I had to quickly stop her -- her motions under the blanket were too obvious. I could gently finger her under a blanket without arousing suspicion, but a handjob could only be a handjob, and there's no way we would have gotten away with it if someone walked by. Nicole pouted in frustration at me as I put my cock away again. A light glaze of perspiration coated her exposed skin. She was still curled into me, but her legs were spread as wide as she could manage, and I kept having to adjust the blanket to keep her covered as she squirmed.\n\n\"Why are we stuck on this train anyway?\" she asked rhetorically. \"I don't think I've ever been this turned on before.\"\n\nI beamed inwardly. \"I'm having fun.\"\n\n\"I'm not,\" she retorted. \"I need to have sex with you right fucking now. Maybe we can go back to the shower?\"\n\n\"As much as I like the idea,\" I replied, \"we were threatened with being kicked off the train. I'm not risking being dumped in the middle of nowhere like this, no matter how badly I want to be inside of you.\"\n\n\"You're right,\" she said, disappointed. \"Maybe we can find something in Winnipeg. We have two hours on the ground there.\"\n\n\"I like the sounds of that,\" I answered, \"but we're still over four hours away. Are you going to make it that long?\"\n\n\"Fuck no,\" she replied. \"Even with you going go goddamn slow, I'm so close to an orgasm right now. It's at the point where I'm not going to be able to hold back much longer. And I kind of tend to move involuntarily when I cum, so much as I'd love to try it, there's no way I'd get away with it under this blanket.\"\n\n\"What do you want to do?\"\n\n\"Should we take turns jerking off in the bathroom?\" she asked.\n\n\"I have a better idea. Go to the bathroom on the left at the end of this car. I'll join you in about a minute.\"\n\nNicole nodded, clearly beyond the capability of any rational thought, and got up to leave. I noticed, with a little bit of pride, that she had a wet spot on the back of her skirt as she made her way down the train car.\n\nI looked at my watch, noting with some satisfaction that I'd been teasing her for over an hour. I was still aggressively horny, in spite of the fact that she hadn't been able to touch me very well or for very long, and I adjusted myself under the blanket as I counted off sixty seconds, gently rubbing the head of my cock with what was left of Nicole's slick arousal on my fingers.\n\nAfter the minute expired, I got up, slightly shaky on my feet. I made sure Nicole's panties were safely hidden under the blanket and made my way to the end of the train, self-conscious of the huge bulge in my jeans. I was watching the faces of the travellers as I passed them, looking for any sign of recognition of what I was about to do. But they were all lost in their own worlds, reading, listening to music, chatting with each other, completely oblivious.\n\nI reached the end of the car, noticed the bathroom door on the left was unlocked, and opened the sliding door. Nicole was standing inside, hiding behind the door.\n\n\"I thought I shouldn't be sitting on the toilet in case someone else walked in,\" she said shyly.\n\nI took her by the hand as I sat on the toilet myself, unbuttoning my fly and pulling my cock out. She gazed at it in its glory for the first time, mumbling something to herself.\n\n\"What?\" I asked.\n\n\"I said 'that'll do',\" she answered, as she hiked up her skirt and sat down, straddling me.\n\nAs she sat, I saw her pussy for the first time. It was a complete dishevelled mess of wetness, her dark pubic hair matted, her inner thighs glistening with moisture. Her slit was tight and compact and the same pale pink as her nipples, and her clit was so small as to be practically invisible, just a tiny raised bump under its hood at the top of her opening. I looked up to Nicole's face as she looked slightly embarrassed.\n\n\"I'm sorry, I should have cleaned up down there a bit first,\" she said. \"I wasn't planning for anyone to see my pussy any time soon.\"\n\n\"No, please, it's beautiful,\" I replied and pressed my erection against her opening, savouring the moment. I noticed Nicole holding her breath, paralyzed with anticipation. I locked on to her brown eyes and stopped for a moment, ready for what was about to happen.\n\nBANG BANG BANG\n\nNicole jumped, startled, then quickly bounded up, pulling her skirt back down as I refastened my jeans, smushing my cock away with some difficulty.\n\n\"Yes?\" Nicole asked the door, innocently.\n\n\"Come on out of there, you two,\" ordered a voice from the other side.\n\nI opened the sliding door, sheepishly, to see conductor Pascal staring sternly at us.\n\n\"OK, seriously, guys, whatever you were doing in there, you should know you're not allowed to do whatever it is,\" he said, more disappointed than angry. He leaned in, speaking quietly. \"I don't want to have to kick you guys off the train, so don't force me to!\"\n\n\"We're sorry,\" I said, taking Nicole by the hand and leading her away, in the direction of the dome car.\n\nThe dome was close to full by the time we arrived, and we found two seats near the back, saying hello to Duncan as we passed. Nicole collapsed into my arms, and I leaned in and kissed her temple. \"How are you doing?\" I asked her.\n\n\"Can girls get blue balls?\" she asked. \"Because I'm so horny it's literally starting to ache down there.\"\n\n\"A year, eh?\" I teased, unable to resist.\n\nShe shot me a dirty look. \"You knew exactly what you were doing to me, you smug son-of-a-bitch.\"\n\nI nodded. \"If it makes you feel any better, I'm just as blue down there.\"\n\n\"It does,\" she said matter-of-factly, smirking to herself. \"I need to cum. We'll go take turns in the bathroom. They can't get us in trouble for going in there alone. But only one orgasm each, okay? Just enough to take the edge off.\"\n\n\"What happens after that?\" I asked.\n\n\"We've got two hours in Winnipeg,\" she stated, determined. \"We'll figure out a way to have sex there.\"\n\n\"Have you ever been to Winnipeg?\" I asked.\n\n\"No. Have you?\"\n\n\"No.\"\n\n\"Well, there's gotta be something,\" she stated with conviction. \"Be right back.\"\n\nNicole disappeared down the corridor, heading for the bathroom. I tried to focus on the scenery, the same goddamn rocks and trees and lakes I'd been seeing for hours, and tried to think about anything except my angry, throbbing erection and the fact that a beautiful girl was currently masturbating a few dozen feet away to thoughts of me fucking her.\n\nIt was only about ninety seconds before Nicole's brown frizz appeared up the stairs. She wore an exhausted, profound look of relief on her face, seemingly barely able to walk. She swayed with the motion of the train as she eventually reached the last row and collapsed into me with a thud. \"All done,\" she whispered.\n\n\"Can it be my turn?\" I asked.\n\n\"Absolutely, babe,\" she grinned. \"Want some lube?\" She spread her legs slightly.\n\nI reached between her legs, carefully, watching for signs that we were being watched in the dome, then surreptitiously wetting my fingers on her still sopping womanhood. She jumped slightly as I brushed against her clit. \"Easy there,\" she said apprehensively. \"It'd be so easy to get me going again, and I need to save some of that so you can fuck me senseless in Winnipeg.\"\n\nI kissed her then turned to leave. Nicole slapped my ass as I maneuvered past her, then pulled my ear down to her mouth.\n\n\"Go blow that load, big boy,\" she cooed. \"But only one. The next one belongs to me.\"\n\nI made my way down to the bathroom, still in a daze, and sat on the toilet, whipping out the erection that had been raging on some level or other for over a day. I lubed my cock with Nicole's juices and started stroking, thinking about her body in the shower, her taste, her aggressiveness, the sight of her pussy, the fact she had just had an orgasm in the same place a minute previously. Within seconds I was cumming, shaking as one of the most powerful orgasms I'd had in a while tore through me and semen erupted into the toilet bowl.\n\nAfterwards, I made my way back to the dome, burrowing into Nicole in relief. She started stroking my hair. \"That wasn't the ending I was going for,\" she said, clearly disappointed. \"But I'll get you off this train and into my vagina before the end of the day.\"\n\n\"Promise?\" I asked her with a grin.\n\n\"It damn well better happen,\" she said ruefully, \"or I'm going to spend the rest of my life wondering what it would have been like to fuck you. Just five more seconds earlier and you would have been inside. Fuck!\"",
        "I grinned, in spite of myself, and looked at my watch. Only four hours to Winnipeg...\n\nDay 2 -- Winnipeg, MB\n\nWe spent the next four hours mostly playing Scrabble with a young married couple who'd boarded the train in Hornepayne and who'd brought a travel set with them. Nicole turned out to have a competitive streak and a large vocabulary, and all thoughts of sex were, if not forgotten, then at least put aside as we rolled through the last couple hundred kilometres of the enormous province that I called home. Crossing the border into Manitoba was a huge anticlimax, as the scenery didn't change a whit, apart from that we noticed that the lakes had started having cottages and boats on them, and that the signs of human habitation had slowly increased from \"zero\" to \"infrequent\".\n\nAbout twenty minutes after crossing into Manitoba, it happened suddenly -- we emerged from the forest and were on a flat, brown, and endless prairie, with the early spring planting underway. Nicole broke into a huge smile at seeing the empty flatland again, after so long away. Momentarily we passed a grain elevator -- the first one I'd ever seen -- which Nicole chided me for being so excited about. Gradually we started seeing towns, roads, electrical poles, and the other long-forgotten signs of being back in civilization. We were still a little behind schedule, and as the invisible sun began its descent in the slate grey evening sky and the hunger pangs started to become noticeable, we crossed the Perimeter Highway and found the outskirts of the city of Winnipeg.\n\nAs we rolled on through the suburbs, Pascal's voice came on the P.A., making a long announcement about the fact that detraining was mandatory so the train could be cleaned; that Via would not be serving an evening meal so that the crews could change over (Winnipeg was our halfway point and a new crew would be joining us for the leg between Winnipeg and Vancouver); that there was a farmer's market near the station that had many decent options for dinner; and that we would be departing again at 7:00 PM sharp. As Pascal repeated the announcement in French, Nicole turned to me.\n\n\"Do you want to fuck me soon?\" she asked, playfully.\n\n\"More than you can possibly imagine,\" I responded.\n\n\"I'm imagining it right now...\" she trailed off. I squeezed her thigh, noticing the intense radiating heat from her lap, and felt my cock twitch with anticipation.\n\nWinnipeg Union Station is a grand old Beaux-Arts pile that was built for the days when the city was the city of Millionaires, a prairie boomtown rivalling Chicago for importance and stature, and not the slightly depressed mid-size city that it is today. As the train rolled to a stop, thirty-two hours after leaving Toronto, Nicole and I excitedly, wordlessly, made our way onto the platform and into the station. I had been hoping to find a quiet closet, a handicapped bathroom, any place where we could be alone for a few minutes, but as we pulled into the arrivals hall, all hopes were dashed. The place was a zoo. Unlike with airports, where travellers have to clear security, Via had no such restrictions, so our gate was crowded with families, friends, limo and taxi drivers, train staff, and all of our fellow passengers, forced off the train together.\n\nNicole looked at me in confusion and disappointment. \"I don't think this is going to work for us,\" she shouted, straining to be heard over the din.\n\n\"What now?\" I asked.\n\n\"I don't know,\" she responded. \"Let's get away from the crowds for a start.\"\n\nWe made our way through the arrivals hall and eventually found the central rotunda, a cavernous white marble space built with all the opulence you'd expect of a rail station built at the height of the railroad's importance. We kept walking, past crowded ticket windows and baggage claim, and presently we found ourselves in front of a darkened door marked Winnipeg Railway Museum. Nicole shrugged and tried the door, and to our surprise, it opened. Without hesitation, she quickly checked to see if anyone was watching, then pushed me through the door then pulled it shut behind us.\n\nThe door opened into a staircase, which we climbed, and entered the museum proper, which was located inside a disused train shed in the rail station and filled with historic rail cars. The museum was shut for the evening, with a sign at the ticket window noting they had closed a little over an hour previously. The shed was dark and foreboding, and I could see the outlines of an old steam engine, a 1930's vintage streamline locomotive, a caboose, and an old city streetcar. The cavernous space was dark and eerily silent; our footsteps echoing in the gloom as we crept forward.\n\nI caught Nicole's eye, and she smiled at me, nodding. We made our way down the museum to the caboose, a bright orange vintage wooden rail car towering over us, with a big CN Rail logo painted on the side. Nicole ducked under a rope and hopped on the ladder at the rear, hoisting herself up onto its platform, then disappeared through the open door. I followed.\n\nI'd never been in a caboose before, but it appeared to be laid out almost like a little office, with a writing chair and desk, a small restroom, and a tiny cot laid out in it. Nicole was casing the car looking for security cameras or any signs of an alarm system, and, finding none, she lay down on the cot, looking up at me with a look of profound lust on her face.\n\n\"I guess it's appropriate that we had to find another rail car for some privacy, eh?\" I asked with a smile. \"Trains are kind of the theme with us.\"\n\n\"Shut up and fuck me,\" she responded, whipping her panties off in one smooth motion and hiking her skirt up. She spread her legs wide and lay back on the cot, exposing her hairy pussy to my view, pink labia poking proudly through the forest of brown hair. Nicole started rubbing her clit slowly as she bit her lip impatiently.\n\nI unzipped my jeans and pulled my cock out, and it sprang to fully erect within seconds. I leaned over her and touched the head of my penis to her opening. She was flooded and hot, and to my surprise, I quickly found myself sliding in without resistance.\n\nNicole grunted \"finally\" as I started moving in and out of her, enveloped by her tight warmth. In an embarrassingly short amount of time I could feel my orgasm already becoming imminent.\n\n\"Don't slow down,\" she commanded.\n\n\"We've had way too much buildup, I'm already close,\" I answered sheepishly, trying desperately to hold off cumming.\n\n\"So am I,\" she responded, and her fingers blurred as she started rubbing harder and faster. \"Don't hold back, I'm almost there. Just don't come in me.\"\n\nI started pounding again, grunting, and shortly I couldn't hold back anymore and came, pulling out at the last second and covering her stomach with semen as I collapsed on top of her. I could feel her fingers flying on her clit against my balls, and I could hear her moaning softly in my ear as she grew closer. Suddenly she moaned my name as her body started jolting and quaking uncontrollably, nearly knocking me off her onto the floor as the violent orgasm ripped through her.\n\nAs Nicole's breathing slowly returned to normal, I looked at my watch. \"Not that I was counting, but we lasted less than two minutes.\"\n\nShe weakly turned to face me. \"We'll go longer the second time. I think we just needed to get that one out of our systems.\"\n\nShe looked down at her belly button, now filled with cum. \"Nice shot.\" She touched it with approval, then licked her finger clean as she grabbed a tissue from her purse and cleaned herself up. We then curled together on the cot, crushed together by the lack of room, basking in the post-orgasmic glow, enjoying the profound relief of all that built-up sexual tension.\n\n\"That's the longest clit-tease I've ever had,\" she volunteered.\n\n\"A year?\" I asked.\n\nShe rolled her eyes. \"I meant since you kissed me last night. I've known since then that I was going to fuck you.\"\n\n\"I didn't figure that out until Sioux Lookout,\" I commented. \"I knew I liked you, but I wasn't sure how you felt.\"\n\n\"I didn't convince myself until the shower this morning,\" she agreed. \"Last night I was trying to talk myself out of it.\"\n\n\"I'm glad you failed.\"\n\n\"Me too.\" She kissed me on the cheek.\n\n\"What was it about the shower?\" I asked.\n\n\"You could have so easily taken advantage of that situation, and you didn't. You were the opposite of the Japanese guys I tried dating. You showed me so much respect, and you waited for me to come to you.\"\n\n\"Thanks for coming.\"\n\nShe nodded. \"You're a good guy, Ben.\"\n\nAll thoughts of sex had left me for the moment, but as I lay next to Nicole, gently letting my hands roam affectionately over her, listening to her shallow breathing, I realized she was still carrying a lot of tension that I assumed was sexual. As if on cue, she got up, and pulled the black poncho over her head, then unclasped her bra, letting it fall to the floor. She stared shyly and stood, fidgeting with nervousness, as I got my first real look at her naked body.\n\nHer hair was a mess, naturally curly and long and already matted in places with the sweat of our exertions. She had perfect skin, flawless and clear in every way, though with an intense flush darkening her face and upper chest. Her tiny breasts were perky and her pink nipples pokey. Her tummy was flat and toned and her legs were prickly from a couple of days on the train away from the razor. The dark brown hair on her mound obscured the secrets below, and I noticed she still had the homemade jewellery, striped stockings, and purple boots on, which somehow accentuated her nakedness further. She was deliberately avoiding my eye as I drank her in.\n\n\"You're lovely,\" I said in admiration.\n\n\"Thank you,\" she blushed.\n\nI stood, pulling my sweater off, and then dropping my unzipped jeans and underwear in one motion. Nicole lustily drank in my nakedness, staring without shame.\n\n\"Remind me that I want to see your cock in all its glory at some point,\" she said breathily. \"I've touched it and felt it, but I still haven't really gotten a good look, apart from like two seconds in the bathroom.\"\n\n\"Yeah, you'll have to give me a minute for that,\" I responded. I pushed her back against the wall, dropped to my knees, and spread her legs slightly.\n\n\"Oh fuck...\" Nicole grunted in anticipation and reached down, spreading her lips slightly to give me better access as I dove in.\n\nShe was still sopping wet as I tasted her musky femininity, avoiding her clit at first, knowing she was likely to be sensitive from her recent orgasm. Her labia were small and compact as I licked lovingly, slowly, up and down the lines separating outer from inner, as she gripped my head and ran her fingers through my hair.\n\nIn time, I could feel her knees starting to weaken and I took that as my cue to finally attack her clit directly. She yelped and buckled slightly, struggling to stay on her feet as I ramped up the intensity.\n\n\"I need to lie down, I've never been able to cum standing up,\" she said after a few minutes.\n\n\"Have you ever tried?\" I asked.\n\nNicole parted her hair, pulling it back to reveal a small scar on the top of her head. \"That's a souvenir of the first and last time I ever tried,\" she said sheepishly. \"I hit the soap dish in the shower on the way down, and my Mom came running in to make sure I was okay. It was quite possibly the most embarrassing moment of my life.\"\n\nShe lay back on the cot again, spreading her legs, and started gently tweaking and playing with one of her nipples as she watched, waiting to see what I would do. I was starting to get turned on again, but I decided I wanted to get her off orally first, so I dove back into her pussy, full force, focusing my tongue's attention on the hood of her clit while fingering her g-spot with two fingers. Nicole shrieked in surprise and bore down, pushing her crotch into my mouth with her legs, maneuvering me into exactly the position she wanted, resting her boots on my back as I ate her. I could tell she was holding her breath, evidently trying to keep quiet so as not to draw attention to ourselves, managing only little whimpers and sighs escape as she struggled to keep the noise under control.\n\nIn next to no time I felt her body start to tense as she held her breath tightly, then her insides started to clench around my fingers as her body repeated its earlier, uncontrollable quaking, her legs squeezing against my head. I suddenly felt my hand flooded with warm, wet liquid. As Nicole finished, the tension collapsed out of her body all at once, completely spent. The caboose suddenly was eerily silent, except the sound of Nicole breathing heavily and the dribbling sound of the remnants of her orgasm dripping on the floor.\n\n\"You eat pussy like a champion,\" she finally said after a few moments. \"Hand me my purse?\"\n\nI handed over her purse to her, and she grabbed an enormous wad of paper towel out of it and started mopping up the wet spot on the floor.\n\n\"You're prepared! I take it this isn't the first time that's happened to you?\" I asked, innocently.\n\n\"I feel sorry for men,\" she responded, weakly. \"I only usually squirt with a partner. I'd hate to have to clean up like this every time I get myself off.\"\n\n\"You get used to it,\" I responded. My erection was back with a vengeance, and I started stroking it, using my still-soaked hand, as I watched Nicole finish mopping up. When she turned around, her eyes widened, then she slunk up to it, taking it in.\n\n\"You've got a gorgeous cock. And I love watching a guy jerk off,\" she breathed. She sat on the cot, watching me, and started unlacing her boots. I stood, gently touching myself, enjoying the lust in her eyes, and drinking in the sight of her nude body. As she finished stripping, she made herself comfortable, sitting cross-legged on the cot and staring at me as my hand picked up speed.\n\nAt length Nicole motioned me to come over to her, and as I approached the cot, she took my cock in her hand and started slowly touching it, not with any intent, yet, just enjoying the sensations of touching it.\n\n\"Everything you hoped for?\" I asked.\n\n\"And then some...\" she said, as she started stroking expertly, putting a little twist on the head with each pass.\n\n\"Holy fuck, you're good at that,\" I breathed, shocked. I'd never been touched so expertly before.\n\n\"I'm told I'm good at this too,\" she responded shyly, then opened her mouth and took the head of my cock into her mouth.\n\nJesus Christ. Nicole was an expert. Her mouth was a whirl of lips and tongue on the head of my dick, while her hand gently stroked the shaft, keeping up just enough pressure to make a difference. I also noticed, looking down, that she'd started touching herself with her free hand.\n\nWithin a few minutes, I was getting close again, and I could tell she'd picked up the speed between her legs, so I stopped her. \"Counting the bathroom earlier, I don't think I've got four orgasms in one day in me, so if we're going to fuck again, I've gotta stop you there.\"\n\nNicole pouted. \"Fine. But when I fantasize about this tomorrow, I'm going to finish you off, and you're going to cum in my mouth and like it.\"\n\nI smiled. \"I love your forwardness.\"\n\n\"Like I said earlier, I've got no problem going after what I want,\" she replied bluntly.\n\n\"What's your favourite position?\" I asked.\n\n\"Doggy style. Yours?\"\n\n\"Doggy style.\"\n\n\"It's settled, then,\" she said, and climbed on the cot on all fours, presenting her cunt at me. She hadn't stopped touching herself the entire time, and I could see her fingers still at work between her legs.\n\nI approached, sliding my erection between her butt cheeks, and found her slick hole, sliding in again easily. She let a moan slip out before covering her mouth. I could feel her fingers at work on her clit, bouncing off the underside of my cock as her tight hole enveloped me. Gradually I found a rhythm, slowly at first, then picking up speed.\n\nNicole's body was glistening as I grabbed her by the hips and started pounding. I noticed she was holding her breath again.\n\n\"Remember to breathe, hon,\" I teased.\n\n\"I'm trying not to give us away,\" she gasped. \"It's so hard keeping quiet.\"\n\nSuddenly I felt her fingers slow down on her clit. \"Are you close?\" I asked.\n\n\"I'm right on the edge...\" she grunted.\n\nI started fucking her as fast and hard as I could manage, and I heard Nicole yelp \"Bastard!\" as she exploded in orgasm, convulsing madly, then collapsing in a heap on the bed, still shaking.\n\nI rolled her over on her back as she quaked and heaved, spread her legs, and re-entered her as she stared up at me. She was so wet by now that there was hardly any friction. The look in her eyes was completely wild. She was flushed, sweaty, hair strewn wildly. I fucked her slowly as she whimpered and quivered and let out little moans.\n\nIn time, I felt my orgasm building again.\n\n\"I'm going to cum again soon,\" I yelped.\n\n\"Not before me this time,\" she ordered. \"Stay in me until I cum again, then shoot in my mouth so I can taste you.\"\n\nI stopped moving, trying desperately to hold off the inevitable as Nicole went to town on her clit, rubbing harder and faster than I would have thought possible.\n\n\"I'm gonna cum,\" she finally moaned, and as she started convulsing again I felt the same flood as earlier, leaking out around my cock on all sides and blasting against my pubic area with some force. Her squirting on me finally sent me over the edge, and I pulled out just in time, erupting on her chest with the first spurt as I tried to make it up to her mouth. I finally got there as my orgasm subsided, and she grinned as I finally hit her tongue with the last of my cum.\n\n\"Mmmmm,\" she grinned wickedly. \"You taste so good.\"\n\n\"So do you,\" I responded, licking my fingers.\n\nWe lay down together on the cot for a moment, catching our breaths, then the creeping realization that we were naked in the middle of a historic rail car in a museum in a train station hit us both at the same time. We quickly dressed, cleaned up the mess as best we could with what was left of Nicole's paper towel stash, then made our way towards the exit.\n\nWe descended the stairs and approached the door, Nicole motioned 'shhhhh' at me, then mouthed \"Just look like we're supposed to be here.\" She opened the door wide and strolled out confidently. A nearby station employee glanced at us but took no notice as we strolled back into the public space.\n\nAs we exited the station and walked out into the chill early spring twilight air, Nicole flashed me a look of triumph, then enveloped me in a hug. \"I'm so glad we managed to pull this off,\" she said, grinning. \"And you were every bit as good as I'd hoped.\"\n\n\"You were pretty good yourself,\" I replied, squeezing her into me. \"You were worth the wait.\"\n\n\"I needed that,\" she admitted. \"I had no idea how much until just now. But thank you for reawakening my libido. If I was going to have random sex with a guy in a caboose in fucking Winnipeg of all places, I'm glad it was you, Ben.\"\n\n\"Well, when you put it like that...\" I laughed.\n\nWe sought out the Farmer's Market with what was left of our break, had burgers and beer together, then made it back on the train just in time to pull out of Winnipeg.\n\nDay 2 -- Winnipeg, MB to Saskatoon, SK\n\nIt was after 7 PM when the train finally chugged out of the station. Nicole and I went to our seats and snuggled up together quietly under a blanket as the darkening prairies whizzed past. Unlike northern Ontario, the prairies, were, if not exactly teeming with life, then at least full of signs of civilization, like roads, street lights, distant farms, and occasional towns. The silence wasn't awkward, and I was grateful for the chance to try to sort out some of my thoughts.\n\nI liked Nicole a great deal, but she was leaving that night, and then what? I had kind of been looking forward to being single and on the prowl in Lake Louise, and a girlfriend hadn't been part of the plan for my summer. Now I was seriously fantasizing about giving up on the job in Lake Louise and trying to find work in Saskatoon, or whatever town nearby that she was from? I realized to my shock I didn't know what it was called. Truth be told, I didn't know much about her at all. I didn't know her family's names or the names of any of her friends. And yet, I was infatuated all the same.",
        "\"This feels like home,\" Nicole finally interrupted my thoughts. \"Japan is so ridiculously crowded and hilly. I never thought I'd miss the kind of landscape where you can get a view standing on a chair. I hated the prairies most of my life. But they're my home, and I'm so homesick. I can't wait to be back at home and sleeping in my own bed.\"\n\n\"I'm happy for you that you're almost home.\"\n\n\"And yet, I also don't want to leave you.\"\n\n\"I'm feeling conflicted too,\" I admitted.\n\n\"I don't know really know anything about you,\" she said. \"We had that amazing conversation last night, but I still feel like I've barely scratched the surface of what makes you tick. And I want to know, so badly I do, but I'm getting off the train in a few hours, and that'll be that.\"\n\n\"Maybe this is meant to be it,\" I offered, hating myself for suggesting it out loud.\n\n\"I think it is,\" she answered. \"And that thought makes me really sad.\"\n\nShe turned away from me, trying to hide the fact she was crying. I pulled her in closer, just holding her, as she fought off the tears and smiled, wanly, at me.\n\n\"Promise you'll email me?\" she asked.\n\n\"I promise.\"\n\nNeither of us wanted to focus on the inevitable, so we kept riding in silence after that. I was trying to savour every moment, but after an impossibly early morning, a time change, and multiple orgasms, I was wiped out. At some point I must have fallen asleep in her arms.\n\nDay 3 -- Saskatoon, SK to Edmonton, AB\n\nI awoke just after 6 AM to the morning's first stirrings of light coming in through the window, illuminating endless brown and rolling prairie. The train was still trundling along at its usual clip, and as I regained my bearings, it suddenly hit me that the seat beside me was empty. I looked around with a start, looking frantically for signs of Nicole, then I noticed a piece of Via Rail stationery folded on the seat beside me, with my name written on it.\n\nI opened it with trepidation.\n\nDear Ben,\n\nIt's 2:45 AM and we're rolling into Saskatoon. I recognize the suburbs we're passing through, and I can't wait to be home and to see my family. But as much as I want to see them, all I can think of is how handsome and peaceful you look sleeping beside me. I can't bear the thought of waking you up, because I know that if I do, either I'm not getting off this train or I'm dragging you with me. \n\nIt's probably stupid of me to feel this connected to you after only knowing you for such a short time, but I can't help how I'm feeling. I got the impression from you that this was more than a one-night stand for you, too. God only knows I'm not the type to have them, and I never once felt like I was a conquest to you. You're different. This is different. I know it won't be easy, but I can't give up on this connection, or miss out on something special, just because it might be difficult. I hope you feel the same way.\n\nI've got your email address, and I'm going to email you as soon as I get home, then I'm going to wait for a full day to hopefully hear back from you while you continue your adventure. I hope you have a good time in Alberta this summer, and if this was meant to turn into more than just one incredible day of passion, we'll find a way. If not, well, I want you to know that I don't regret it. I'm glad I met you.\n\nI had fun today, and I can't accept that it's over already. Please forgive me that I can't bring myself to say goodbye to you. Sleep well. Hopefully we'll see each other again soon.\n\nXOXO<br >Nicole\n\nI sat up, fighting back emotion. It hit me that we hadn't even taken a picture of ourselves in the entire day we'd spent together.\n\nI stared out the window at the rolling foothills of eastern Alberta and made up my mind that I was going to call her from Edmonton when we made our next station stop. Only a few hours to go..."
    ],
    "authorname": "thatsbogus",
    "tags": [
        "exhibitionist",
        "dangerous",
        "cunnilingus",
        "mile high club",
        "shower",
        "train",
        "doggy style",
        "masturbation",
        "caught"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/mile-long-club-1"
}