{
    "title": "Wealth Pt. 04",
    "pages": [
        "*Author's Note: Any and all persons engaging in any sexual activity are at least eighteen years of age.\n\n*****\n\nChapter 31\n\nToni Delacroix looked across the street as a Superior Lawn Care, LLC truck pulled to a stop at the empty lot. She did not envy the men; the wind blowing off of the Atchafalaya had to be bone chilling cold.\n\n\"Oh, Mama, y'all get cold y'all just come on over here and I'll warm you up,\" Cheryl, a heavy set woman in her early thirties moaned as the two men got out of the truck and began unloading their equipment.\n\n\"Damn, Cheryl, like want a moment alone?\" Toni giggled as she double-checked the box's contents with the order form.\n\n\"Oh yeah, give me a moment alone with both of them,\" Cheryl said.\n\n\"Um, like think your husband might like mind just a little?\" Toni asked, dropped the order form into the box and sealed it, slapping the UPS label on the box.\n\n\"Uh huh, if he can get away from his mommy long enough,\" Cheryl sneered. \"And of course, since it's the Holidays? Mommy's Boy is over there almost every night.\"\n\nThe men made quick work of the land across the street and next to the building of A and A Soaps. Then one of the men smiled and nodded toward the A and A Soaps building before getting out a leaf blower and clearing off the parking lot of A and A Soaps.\n\nToni had no idea who owned Superior Lawn Care, LLC, but the first time the truck had 14pulled up to the lot across the street, they'd gotten some of the grass clippings onto the parking lot. She called the phone number on the side of the truck and a very friendly but professional woman answered.\n\n\"Uh, yeah, like your truck was just here and they like got weeds all over my parking lot,\" Toni had snapped.\n\n\"Oh, ma'am, I am so sorry; I will have them go right back out there and clean that up,\" the woman apologized.\n\nIf the men resented Toni complaining, it did not show. They did indeed return a moment later, blew the entire parking lot clean, then one of them stuck his head in and asked if someone would check their work and then call their office and let them know the job was completed.\n\n\"I'm like sorry but...\" Toni had stammered as she stepped outside.\n\n\"Oh no ma'am, you were right, that was completely unprofessional of us,\" the man said genially.\n\n\"Uh, yeah, it looks great,\" Toni had stammered, pulled out her cell phone and called the number a second time.\n\nNow, Superior Lawn Care, LLC made sure A and A Soaps parking lot was clean before they reloaded their trailer and truck and left for their next assignment.\n\n\"Superior Lawn Care, this is Maggie, how may I help you?\" Maggie Cox, former dancer and part time prostitute answered.\n\n\"Hi, this is Toni Delacroix, like from A and A Soaps,\" Toni said.\n\n\"Yes ma'am?\" Maggie asked pleasantly.\n\n\"Your guys were like just here, and as usual, they like did a really great job,\" Toni said. \n\nMaggie thanked Toni, and then let Anita Lopez know. Anita looked up from her homework and nodded, letting Maggie know she'd heard her.\n\nWhen Anita had walked away from her relationship with Toni Delacroix, she had simply walked away and left everything but her clothing behind.\n\nAnita did think, briefly, of moving back into the trailer that her mother Louisa and her mother's boyfriend, Luther Knox rented. That idea was out of her head before she reached Highway 52.\n\nAnita lived in one of the rooms of the DeGarde Inn. Her first night there, she had to call the desk and request two more pillows. Two pillows for her head, and one for her to hug to her chest and one to entwine her leg around, just as she did with Toni while they slept.\n\nEven today, there were four pillows on Anita's queen sized bed.\n\nTwo weeks after their split, Anita received a phone call from their attorney, Sophia Coutre, and agreed to come to the woman's office after class.\n\nWalking into the woman's office, Anita saw Toni for the first time in two weeks.\n\n\"You, uh, you having been in class,\" she said quietly.\n\n\"Like what's the point,\" Toni said and looked up.\n\nHer beautiful blue eyes were red and raw looking, her pretty round face was blotchy, her curly blonde hair was lifeless.\n\n\"What's the point? Toni, we're making straight as,\" Anita had spluttered.\n\nSophia Coutre picked that moment to enter the room. For the next forty minutes, she presented documents, Anita signed them, Toni signed them and Polly Chastaine, a pudgy young woman with a severe looking hairstyle stamped them. Anita understood she was relinquishing her rights to a and A Soaps. That was fine; she had never considered the business as hers anyway.\n\nFinally, when her head was aching from the legal jargon and her hand was tired of scribbling 'Anita Michelle Lopez,' Sophia Coutre slid three checks over to her.\n\n\"What's this?\" Anita asked Toni.\n\nIt was Sophia that answered.\n\n\"Half the equity in the condominium that you and Ms. Delacroix purchased, half the equity in the building currently held by A and A Soaps, and half the current value of A and A Soaps,\" Sophia intoned.\n\nThe three checks totaled nearly five hundred thousand dollars. Anita looked across the table and she saw that Toni was silently crying.\n\n\"I love you so...\" Toni whispered. \"You're like the best friend I ever had.\"\n\n\"Then why are you doing this, Toni?\" Anita asked, her own tears beginning to fall. \"Huh? Why are you doing this to me? Why did you cheat on...\"\n\nToni bolted from the room.\n\nSophia discretely slid a box of tissues, motioning to an uncomfortable Polly to keep silent.\n\n\"Any kind of break up is hard,\" Sophia said gently as Anita blew her nose.\n\n\"Yes ma'am,\" Anita said.\n\n\"Keep in touch, please,\" Sophia said as Anita got to unsteady feet. \"Let me know how you're doing.\"\n\nAnita's first purchase had been a condominium, a condominium right next door to Stacy Falgout, her real estate agent. Her second purchase had been a nine month old solid black kitten from St. Ann's Animal Shelter.\n\nAnita's third purchase had been Superior Lawn Care, LLC.\n\n\"Barry, you're daughter's here,\" Jack had called out when a very nervous Anita came into the showroom of Superior Motors.\n\nBut Barry's smile had been genuine and Anita felt a few tears slide down her face.\n\n\"Daddy, I need your help,\" she said, hugging him tightly.\n\n\"Anything; you know that,\" he promised, kissing the top of her head.\n\nBut it had been Jack that found the equipment and Mr. Bob that had found the three trucks and their trailers.\n\nIt had been Mr. Henry that suggested that she make it a Limited Liability Corporation, rather than a sole proprietorship.\n\nSophia Coutre had smiled approvingly as she helped Anita set up the corporation. And Barry had smiled widely when Anita showed him that she'd named it Superior Lawn Care, after his business, Superior Motors.\n\nHer first hire had been Maggie Cox, on the recommendation of Sophia Coutre.\n\n\"She got popped, third time, for prostitution,\" Sophia said bluntly. She's a smart woman, a sweet woman, but somehow got it in her head that the only way she's going to make it in life is to fuck and suck. If I can show Judge Robichaux that she's got a real job, instead of dancing down at Club Fantastic, maybe I can keep her out of jail.\"\n\nMaggie Cox was a blonde in her early thirties that looked as if she'd had a hard life. But as Sophia had said, she was smart and she was sweet. Each person that called Superior felt as if they were important to Superior Lawn Care.\n\nNow, on this cold, blustery December day, Superior Lawn Care, LLC employed eleven people.\n\nMaggie Cox had been Anita's first hire, her brother Marco had been her second hire.\n\nAnd Marco Lopez had been Anita's first fire.\n\nMarco assumed, that because he was Anita's brother, he was the supervisor, therefore allowed to sit on his fat ass and direct traffic.\n\nAnita pulled up to the job site, saw three men busting their asses, and Marco sound asleep in the truck, AC blowing high.\n\n\"He's the supervisor,\" one of the men shrugged when Anita asked them why Marco was sound asleep in the truck.\n\n\"News to me,\" Anita had said. \"Thought I was the only supervisor.\"\n\n\"That's what I thought too,\" Bobby Gremillion said. \"But he says he's your brother so...\"\n\nAnita opened the truck, shut off the engine and pulled Marco out by his feet, slamming him onto the ground.\n\n\"You're fired,\" she said. \"Hope you got money for a cab home.\"\n\nShe turned to the three men that were trying hard to hide their smirks.\n\n\"And any of you give him a ride in my truck? You're out of a job too, understand?\" she said and stormed back to her Mustang.\n\nBut now, all of her men, and Maggie knew, their boss would not hesitate to fire her own brother, she would not hesitate to fire them either.\n\nIn the condo, Snowball, Anita's solid black kitten lay on her lap, purring contentedly while Anita finished her Algebra homework.\n\n\"Goodnight, Ms. Lopez,\" Maggie said as she shut her computer down.\n\n\"See you tomorrow,\" Anita said.\n\nIn the condominium next to Anita's, Stacy Falgout writhed underneath Jared Tyler and felt another orgasm welling up.\n\nThe young, brash African-American went to her noon AA meeting, even though he proclaimed that he was an addict. He was always hugging the white women that went to the meetings, always trying to pick one of them up.\n\nPrecious and Stacy had decided, since Stacy now had six months of sobriety, and had done a good Fourth and Fifth Step, Stacy was ready to start dating again.\n\n\"Three reasons for sex,\" Precious had said. \"One, it an expression of love, two, you wanting you a baby, and three, shit girl, it feel good, know what I'm saying?\"\n\n\"Done right, it feels great!\" Stacy had said and the two women laughed.\n\n\"But anything else? Like you trying manipulate them? Or you trying use them? Or you charging them money, then you keep them legs closed; ain't got no business doing that,\" Precious had said.\n\nStacy, in doing her Fourth Step, had seen that she had used sex as a tool, or a weapon, or a bargaining chip. And while she had not outright charged money for sex, she had used sex to make real estate sales. So what was the difference between standing on a corner, and standing in a vacant house?\n\nStacy didn't love Jared, and she didn't want a baby; she was almost forty five years old. But it did feel good. His cock was a nice one, almost as large as Barry Delacroix's. He wasn't much on foreplay and his technique left a lot to be desired. But he had one thing Barry Delacroix did not have and that was a very quick recovery time.\n\nStacy thought of her father, a loud, small minded alcoholic that would barge into her bedroom and jerk her blue jeans and panties down and jam his shaky erection into her. She thought of how horrified he would be to see his darling daughter letting a black boy fuck her.\n\n\"Oh!\" Stacy cried out loud as an intense orgasm rippled through her.\n\nAt Side By Side Restaurant, BJ, dressed in Santa suit, white beard firmly affixed to his face smiled as he sat in the large chair. Michael shook his head as Briah, his fianc\u00e9, perched on Santa's lap.\n\n\"Take the stupid picture,\" Briah ordered.\n\n\"But you didn't tell Santa what you want,\" Michael said.\n\n\"I already got what I want; I got you,\" Briah smiled and Michael snapped the picture.\n\nAcross the street, at Superior Motors, Barry looked up and smiled as Heather St. Martin's Nissan came to a stop.\n\n\"Barry, your granddaughter's here,\" Bob announced as Kelli St. Martin, Heather's nine year old daughter yanked on the heavy glass door.\n\n\"Grandpaw, I got all as and two Bs,\" Kelli excitedly told him as she scampered into the showroom.\n\n\"Well how about that?\" Barry said, picking the red headed child up and hugging her. \"I am so proud of you! Ooh, that nose is cold!\"\n\n\"She um, she couldn't wait to tell you,\" Heather said. \"That's all right, huh?\"\n\n\"Are you kidding? That's more than all right,\" Barry smiled. \"She's my favorite granddaughter, of course it's all right she comes and tells me.\"\n\n\"I'm your only granddaughter,\" Kelli reminded him.\n\n\"Then it's a good thing you my favorite,\" Barry had laughed. \"Be terrible you're my only granddaughter and you wasn't my favorite, huh?\"\n\nA few weeks earlier, BJ and Heather had come to the house, bringing Kelli with them. After a few moments, Barry could see that the girl was bored, so he took her out to show her the 1965 T Series Bentley he'd taken apart and was attempting to put back together, using the service manual Caitlin had given him for Christmas the previous year.\n\n\"And because it's English, it's all metric, right?\" Kelli had asked, looking at the bits and pieces.\n\n\"Wow, I don't know a whole lot of eight year old girls would have known that,\" Barry had said.\n\n\"Well, it's because I'm nine,\" Kelli said, irritated that he would think she was only eight.\n\nTwenty minutes later, Heather had gone out to check on her daughter and found the two of them working on the transmission.\n\n\"What's Dad doing?\" BJ asked as Heather came back into the house, wiping at her eyes.\n\n\"Being a Grandpaw,\" Heather had choked out.\n\nNow, at the showroom, Heather urged Kelli toward the door.\n\n\"Come on, Santa's at the restaurant,\" Heather had smiled after Kelli helped herself to a few of Mr. Jack's peanut butter cups.\n\n\"It's not really Santa,\" Kelli confided to Barry. \"Santa's not real.\"\n\n\"Think she's got any idea?\" Jack asked Barry as they watched Heather pull out of the parking lot.\n\n\"She'd still be screaming,\" Henry, Heather's uncle, answered.\n\nAt the restaurant, a few slightly tipsy female customers giggled as they whispered naughty things into Santa's ear, then smiled for the camera.\n\n\"And what do you want?\" BJ playfully snarled at Kelli when she bounded into his lap.\n\n\"Nuh uh, you Santa, you got to be nice to me, Kelli corrected him.\n\n\"God, you are such a brat,\" BJ laughed and hugged her.\n\n\"Oh, and I got my report card and I got all as and two Bs,\" Kelli told him.\n\n\"Proud of you,\" BJ said and kissed the girl.\n\n\"And for Christmas I want a driver's license and a new car, hmm, how about a Bentley like Grandpaw's got? Oh! Or your Porsche!\" Kelli said.\n\n\"And you're nine, keep dreaming, kid,\" BJ laughed.\n\n\"And how about a smile for the camera?\" Michael called out and Kelli smiled.\n\n\"And how about the Mama,\" BJ requested and Heather smiled.\n\n\"And for Christmas I want a new dishwasher,\" Heather said, then leaned and whispered into BJ's ear. \"And you to tit fuck me and shoot that Santa sperm all over my face and then...\"\n\n\"And what about what Santa wants?\" BJ asked.\n\n\"Oh? Santa doesn't want that?\" Heather smiled.\n\n\"Santa wants you to be Mrs. Santa and I want to adopt Kelli and make her a Delacroix and...\" BJ said, holding out a three carat diamond ring.\n\nMichael got two pictures; one of Heather's open mouthed shock and one of Heather frantically kissing Santa.\n\n\"What's going on?\" Kelli asked as Heather now sobbed, staring at her ring.\n\n\"Looks like I'm going to be your uncle,\" Michael smiled. \"And Grandpaw's really going to be your Grandpaw.\"\n\n\"So?\" Kelli shrugged. \"He's already my Grandpaw.\"\n\nAt A and A Soaps, Toni set the alarm then locked the heavy door. She bade Milton and Cheryl a good night, made sure they pulled out of the parking lot ahead of her, and then drove to Patrick's apartment.\n\n\"Yeah?\" Harmony's voice called out when Toni knocked on the door.\n\n\"Toni; I'm here to kidnap Patrick,\" Toni called back as the blonde dancer opened the door.\n\nA few weeks after Barry's bachelor party, Harmony had been sifting through the rubbish in the bottom of her purse and come across Barry Delacroix's business card. At first she was puzzled; why would she have a business card for the expensive sports car showroom. As a dancer, as a very well-endowed dancer, men quite often put their business cards into Harmony's tip jar at the edge of the stage. She never looked at them, just threw them away.\n\nFlipping Barry's card over, Harmony saw Patrick's cell phone number. She remembered the confident, smiling blind man that had unnerved her, even frightened her. Recently diagnosed with Diabetes, and knowing that one of the possible side effects was blindness, Harmony had approached Patrick and asked him about his blindness.\n\n\"Hello?\" Patrick had answered.\n\n\"Um uh, hi, um, this Patrick?\" Harmony had stammered.\n\n\"Yes it is,\" Patrick had answered. \"Who's this?\"\n\n\"This is, um, hi, this is Harmony, I uh, I don't know if you remember me, I uh, I was one of the dancers, um, at the Dead End, your Dad's bachelor party,\" Harmony had stammered.\n\n\"Oh yeah, girl that just found out she's diabetic, right?\" Patrick had asked.\n\n\"That's right!\" she said, happy he remembered her. \"So, um, how's it going?\"\n\n\"Going all right; caught me at a slow moment; don't have too many of those,\" Patrick had replied.\n\n\"Slow moment? What are you doing?\" Harmony asked.\n\n\"Working; I'm a switchboard operator at the St. Elizabeth Trauma Center,\" he explained.\n\nHarmony found out he was due to go on a lunch break in forty minutes and raced to the hospital. He impressed her with his competence and ease in navigating the busy cafeteria.\n\n\"Hate Fridays, though,\" Patrick confided. \"Fridays they serve this nasty ass tuna fish. They didn't catch it; tuna fish committed suicide it was so embarrassed at how bad it tastes.\"\n\n\"Oh, I'll come get you; Dead End's got catfish; Miss Rosey's the best cook ever,\" Harmony enthused.\n\nHarmony had forgotten about a tradition at the Dead End. Whenever a dancer brought in a boyfriend or girlfriend or spouse, the other dancers flirted outrageously with the dancer's significant other. Blind or not, Patrick was no exception.\n\n\"Mine, God damn it, he's mine!\" Harmony finally exploded, pushing a giggling Angela and her own sister Unity away.\n\n\"I am?\" Patrick smiled over the shrieks and hoots and laughter of the dancers.\n\n\"Yes, damn it,\" Harmony declared and kissed him hotly.\n\nTwo weeks after that first kiss, Harmony moved into Patrick's apartment.\n\nNow, as he bundled up against the cold December chill, Patrick and Harmony kissed as if they'd never see each other again.\n\n\"God, come on, like give it a rest!\" Toni demanded.\n\n\"Now, no rearranging the furniture while I'm gone,\" Patrick teased.\n\n\"God, I moved one chair, one chair!\" Harmony defended.\n\n\"Now you like sure about this?\" Toni asked as she guided him to her car.\n\n\"You know, with Debbie, I kept putting it off and putting it off,\" Patrick said. \"I just never, I mean, it just never felt right, you know?\"\n\n\"Okay, we're going to David's first,\" Toni decided.\n\nThe jeweler pulled out the engagement rings and let Patrick feel them.\n\n\"Ooh, Patrick, this one's like real nice,\" Toni said, picking up a ring. \"See, its like got these sapphires, her eyes are blue and then there's this one diamond...\"\n\n\"Oh, that is nice,\" Patrick agreed.\n\n\"Twenty nine hundred dollars,\" David said. \"So it's a pretty reasonable one too.\"\n\n\"Now, you want to like look anywhere else?\" Toni asked. \"I mean, I like really don't think you'll find anything like any better than that and...\"\n\n\"And I got these matching bands,\" David said, pulling out the bands.\n\n\"Oh, Patrick!\" Toni approved. \"Like the man's ring is very nice, very masculine.\"\n\n\"And of course, they're all backed with my guarantee; if for any reason she doesn't like it, or even in the off chance she says 'No' you can exchange them for something else, or if she really does say no, I will refund your money,\" David said.\n\n\"Well, you can't beat that,\" Toni said as Patrick pulled out his credit card.\n\n\"I assume this is a Christmas gift,\" David asked.\n\n\"Yeah, but I still got to get something for her too,\" Patrick said.\n\n\"Oh my God!\" Toni giggled. \"You like really are in love, huh?\"\n\n\"Brother, that was the best answer I have ever heard,\" David laughed. \"And I've been in this business quite a few years!\"",
        "Toni found a nice set of sapphire earrings for four hundred dollars and David told Patrick, \"Since you're getting the whole wedding set; I'll throw those in, no charge.\"\n\n\"You got it,\" Patrick said, smiling happily.\n\nToni agreed to hold on to the rings until Christmas Day; let Harmony think that the sapphire earrings were all she'd be getting. The earrings themselves were a very nice set; even if Patrick somehow changed his mind about asking her to marry him, Harmony Kohl would have no reason to complain.\n\nThen Toni drove home. As she backed her car into her garage, she felt the same weariness, the same loneliness she felt every night when she returned home descend on her.\n\nToni rarely went upstairs any more, other than to bathe and change clothes. She slept on the couch, back firmly pressed against the back of the couch, remembering when Anita would press herself into Toni's back. Pumpkin liked to sleep on the back of the couch, and Buttons liked to sleep at Toni's feet. Boopsie, Toni wasn't sure where that animal slept. The only time Toni would see the cat was when Boopsie wanted something to eat.\n\nToni fixed a microwave dinner, reflecting that she needed to go grocery shopping and wishing that Anita had shown her how to cook some of the things she used to cook for them.\n\nAnita would have been happy to show Toni how to cook these things, if Toni had ever shown any interest.\n\nThen after eating an unappetizing dinner, Toni stripped off her clothes, lighted a joint and lazily masturbated while smoking the joint. Each time she neared orgasm, she would stop and pinch her nipples, hard.\n\nThen when she finished the joint, she did allow herself an orgasm.\n\nIn her own condominium, Anita slipped into her favorite nightshirt, a short silk blouse that just reached to mid-thigh. Snowball was already on the bed, curled up tight at the far corner. Anita arranged the pillows, then crawled under the heavy blanket.\n\nWithin moments, she was hunching her bald mound against the pillow between her legs. Anita squeezed the other pillow to her chest, squeezing as tightly as she could, feeling her hard nipples rub against the silk material of her sleep shirt. She stiffened in orgasm, then slowly drifted off to sleep, clutching the pillow tightly.\n\nChristmas Day 2013 was a cold, blustery day. The first thing Kelli wanted to do when she arrived at Grandpaw's house is go in the ice cold garage and work on the car.\n\nNo, the presents could wait; Mom said they had to wait until everyone was there anyway.\n\n\"Go ahead,\" Caitlin smiled and kissed Barry. \"I know you can't say no to a red head anyway.\"\n\n\"So, BJ's marrying your mom, huh?\" Barry asked as he showed Kelli how to operate the hoist.\n\n\"Uh huh,\" Kelli said.\n\n\"And he wants to adopt you and make you a Delacroix; what you think about that?\" Barry asked and guided the engine into the car.\n\n\"I don't know,\" Kelli said and hit the 'stop' button when Barry held up his hand.\n\n\"Are you a Delacroix?\" Kelli asked as she inspected the job she'd done with the hoist.\n\n\"Sure am,\" Barry said, removing the sling.\n\n\"Then I want to be a Delacroix too,\" Kelli decided.\n\n\"And that's why you're my favorite granddaughter,\" Barry said and hugged the girl.\n\n\"Uh, I'm your only granddaughter,\" she reminded him, returning the hug.\n\nInside the house, BJ stood, dressed in his Santa suit and waited.\n\n\"Okay, here they come,\" Heather called out as she spotted Ed Weinstein, Brooke Weinstein, and Star and Luna Weinstein coming up the sidewalk.\n\nBJ grabbed the large bag and slung it over his shoulder.\n\n\"Oh no! You're too early!\" Caitlin said when Star and Luna burst into the house.\n\n\"Ah!\" Star screamed as she saw Santa sprint for the side door.\n\n\"Ah!\" Luna screamed as she saw a flash of red run out the side door.\n\n\"He's here! Santa Claus is here!\" Star screamed and gave chase, Luna right behind.\n\nOutside, Briah and Michael loudly shook sleigh bells, ceasing just as they heard the two girls screaming.\n\n\"Did you see him?\" Star screamed at Aunt Briah and Uncle Michael.\n\n\"Did you see Santa Claus?\" Luna screamed.\n\n\"Yeah, he ran right by,\" Briah said, discretely tucking her bells into her coat pocket.\n\n\"And jumped in his sleigh and took off,\" Michael said, scanning the sky.\n\n\"Aw!\" Star and Luna whined and looked up, hoping to catch a glimpse of Santa's sleigh.\n\n\"Santa! Come back! We love you,\" Star cried out.\n\nInside the garage, Kelli laughed as BJ stripped out of his Santa suit.\n\n\"Shush, you,\" BJ ordered as he quickly pulled on the heavy sweater he'd placed in the garage earlier.\n\n\"So, um, I got to call you Dad?\" Kelli asked as Barry slid out from underneath the Bentley.\n\n\"What you want to call me?\" BJ asked.\n\n\"I don't know,\" Kelli admitted. \n\n\"Kelli, I'd be thrilled if you called me Dad, but you're nine years old,\" BJ said and hugged the girl. \"At nine years old, you're old enough to make up your own mind on what you want to call me.\"\n\nToni smiled as she saw Michael, Briah, Star and Luna standing outside, looking up at the sky. She grabbed the bag of presents off the back seat and then approached the group.\n\n\"Aunt Toni, we seen him!\" Star yelled.\n\n\"Yeah, we seen him!\" Luna echoed.\n\n\"Seen who?\" Toni asked, giving both blonde girls hugs and kisses.\n\n\"Santa!\" the girls screamed.\n\n\"What? Where? In the sky?\" Toni asked, mouth open in shock.\n\n\"Hey, nice sweatshirt there,\" Michael said, tugging playfully on the sleeve of Toni's U.L.D. sweatshirt.\n\n\"Well, I am a student; got to show my school pride,\" Toni said glibly.\n\n\"Now that is a great Christmas gift,\" Barry said, following BJ and Kelli out of the garage. \"Now, what's all this yelling about?\"\n\n\"Mr. Barry we seen Santa!\" Star screamed at him.\n\n\"Oh my! Well, what did he bring us?\" Barry asked.\n\n\"I don't know,\" Star admitted.\n\nBrooke and Caitlin were in the kitchen, preparing brunch for everyone and comparing pregnancy tips and tricks.\n\n\"Prune juice is so nasty; I have to cut it with honey, but nothing, I mean absolutely nothing is worse than constipation,\" Brooke claimed as she whisked the eggs.\n\n\"You sure you pregnant? You're not even showing,\" Caitlin said.\n\n\"Oh you liar!\" Brooke laughed, lifting the hem of her Christmas blouse. \"I'm pooching out so much I had to take my ring out!\"\n\nA blast of arctic air cut through the house as Star and Luna led the procession back into the house.\n\n\"Well, did you catch him?\" Brooke asked her daughters.\n\n\"No,\" Star said sadly.\n\n\"Yeah, Uncle Michael said he flew away,\" Luna said.\n\n\"Oh well, listen, y'all ran out of here so fast I didn't even get my Christmas hugs and kisses from y'all and it just won't be Christmas until I get my Christmas hugs and kisses,\" Caitlin demanded.\n\n\"Hey!\" Harmony shrilled when she spotted Toni.\n\n\"Hey!\" Toni called back as the blonde woman bounced over to hug her.\n\n\"Look!\" Harmony demanded, pulling her long blonde hair aside, showing the beautiful earrings.\n\n\"Nice,\" Toni smiled.\n\n\"Yeah, Patrick said you helped him pick them out,\" Harmony said, hugging Toni again.\n\nIn her condominium, Anita stretched out on her leather couch, 'breaking in' her Christmas gift from Honey Childress.\n\nOver the Thanksgiving break, the dormitories of U.L.D. were closed, supposedly for cleaning and the diminutive red head did not have the money to go home. So, Anita invited her to stay at her condo.\n\n\"Bring your own pillows,\" Anita had stated.\n\n\"Why you need so many pillows?\" the girl asked on her first night there.\n\nSo Honey had given Anita a body pillow. Anita had woken up that morning, wished Snowball a Merry Christmas, and unwrapped the various gifts from her employees and the one from her mother, Marco, and Luther. She nodded her head in approval at the sight of the electric skillet.\n\nThen she had unwrapped the large box Honey had shoved into the corner and laughed happily at the sight of the pillow.\n\n\"I love you,\" she said aloud, thinking of the small red head.\n\nNow, sprawled on her couch, Anita pulled the fleece blanket down from the back of the couch and pulled it over herself. She then wiggled out of her fleece pajamas and rubbed herself against her new pillow until she had an orgasm.\n\n\"I love you,\" Anita said again.\n\nIn their formal dining room, Shirley St. Martin looked at her four boys, the three wives, and Andy, their youngest son's partner. Gary's wife, Missy, was already making noises about other engagements and obligations and Mattie, Frank's wife would be quick to follow.\n\n\"Good God, just go, all right,\" Shirley wanted to scream at them. \"Sorry it's such an imposition to spend a little time with us.\"\n\n\"So, Miss Shirley, how's your little friend doing?\" Andy lisped, somehow managing to sneer and lisp at the same time.\n\n\"Caitlin? She's doing well,\" Shirley smiled. \"She's due on March twentieth; anyone here know why that date's so significant?\"\n\n\"And before any of you guess my birthday, which is January ninth, or our wedding anniversary, which is April twenty sixth, you need to remember who Caitlin's best friend is,\" Henry said.\n\n\"Yes, am I the only one here that finds it terribly interesting that a little what? Twenty? Twenty one year old would be running around with a sixty nine year old woman?\" Andy sneered.\n\n\"Number one, you pompous jack ass,\" Shirley spat. \"I am sixty five, not sixty nine. And number two, Caitlin Delacroix is ten times wealthier than I am so if you're implying she's running around with me because of my money, you are sorely mistaken.\"\n\nThe table lapsed into an uncomfortable silence. Shirley looked up as Henry reached across the table.\n\n\"Henry Michael St. Martin, put that down,\" Shirley laughed as he waggled his eyebrows playfully and poured her a glass of red wine.\n\nChapter 32\n\nAnita sighed, looked at the menu board of the cafeteria, and then looked back outside to the ice covered ground.\n\nPeople don't think it gets cold in the Deep South, but it frequently does get cold enough to snow. Three days before the start of the spring semester of the University of Louisiana at DeGarde, it did snow. The next day, the temperature reached thirty six degrees, so the snow began to melt. Then it snowed again, freezing the melting snow into a sheet of ice.\n\nAnita had to laugh when she picked Honey Childress up at Lafayette's small airport and the girl shrieked in disbelief, \"I thought I left this behind when I flew out of Kansas!\"\n\nThen one of the pipes burst at Murphy Hall, so Honey was staying with Anita while the University scrambled to fix the pipe.\n\n\"God, goulash again?\" Honey squeaked as she read the menu.\n\n\"There ought to be a place...\" Anita said, then clammed up.\n\n\"Come on. Let's go home; there's still some of that black bean soup and we got to get rid of that ham before it goes bad,\" Anita said.\n\nAt her condominium, Anita cut up some of the ham while Honey attempted to entice Snowball to chase an electric mouse, Maggie's Christmas gift to the beast. Snowball was more interested in looking out the window at the winter landscape.\n\n\"I'll get it!\" Honey squeaked when her cell phone gave a chime.\n\n\"Uh, yeah, it's your phone,\" Anita said as she flipped the sandwiches in the electric skillet.\n\n\"Oh, hey, Murphy's is open again!\" Honey said, reading the text message.\n\n\"Oh, okay; when you want to go back?\" Anita asked.\n\n\"Um, after lunch, I guess,\" Honey said.\n\n\"I mean, Honey, you want to spend the night again tonight and go back tomorrow, it's no problem,\" Anita said, putting their plates on the table.\n\n\"No, I kind of want to get my stuff put away,\" Honey said.\n\n\"Oh, okay,\" Anita shrugged.\n\nShe could understand that; here at the condominium, Honey was living out of a suitcase and a backpack.\n\nWhile they ate, Anita used her laptop to search the St. Elizabeth Parish Government sites, then verified an appointment with Dean Sims via email.\n\n\"Oh, I seen that Toni,\" Honey said around a mouthful of soup.\n\n\"Oh yeah?\" Anita asked, turning off her laptop.\n\n\"Yeah, she's in my World Economics class,\" Honey scowled.\n\n\"Keep doing that, your face is going to freeze like that,\" Anita teased, pinching the girl's nose.\n\n\"My momma used to say that too!\" Honey said.\n\n\"But good, glad she's back in college,\" Anita said, picking up their plates.\n\n\"Yeah and she's all like 'Hey!' and I'm all like 'Bitch, better get on away from me,'\" Honey said.\n\n\"Honey, how many friends you got?\" Anita asked.\n\n\"You,\" Honey said.\n\n\"And?\" Anita asked, putting the pot of soup back into the refrigerator.\n\n\"That's about it,\" Honey admitted.\n\n\"Then,\" Anita said, kissing the top of the girl's small head. \"Can you really afford not to at least be civil to her?\"\n\n\"She peed on me!\" Honey shrilled in indignation.\n\n\"In a stoned stupor,\" Anita reminded the girl. \"You can't tell me you've never done anything stupid when you were high.\"\n\n\"Probably,\" Honey confessed.\n\n\"Now, come on, check the dryer, make sure you got all your clothes,\" Anita said.\n\nAt the Administrative Building, Dean Robert Sims' Administrative Assistant Penny stood in the doorway.\n\n\"Why I got to be here?\" Penny complained.\n\n\"Because I do,\" was his answer.\n\n\"Go on in; he's not busy,\" Penny said when Anita Lopez entered the outer office.\n\n\"That is not true; I'm extremely busy,\" the man said, putting his Nintendo game console into a desk drawer.\n\n\"Then I'll try to make this as quickly as possible,\" Anita smiled, shaking the man's hand.\n\nLast year, she and Toni and Honey had attended the school fair and Homecoming weekend at St. Thomas Aquinas, greeting former teachers with squeals and hugs and introducing the faculty to Honey.\n\nThen Honey smelled the food trailers and they all had to traipse over to the trailers and gorge on hot dogs and hamburgers and fried cheese sticks until Honey was sick.\n\nNow, in Dean Sims' office, Anita outlined her idea and the man smiled, shrugged, and agreed it was worth a try.\n\n\"Why didn't you come to me yesterday?\" he asked. \"I had to eat that stuff the cafeteria calls goulash.\"\n\n\"That's what made me think of this,\" she laughed and he smiled wider.\n\nThey shook hands again and Dean Sims did admire her tight looking backside in her snug jeans as she left his office.\n\n\"It's snowing! Again!\" Penny called out and Dean Sims looked out the window to see that it certainly was snowing again.\n\nAnita stepped out of the Administration building and looked up in surprise to see that it was, once again, snowing.\n\nShe walked as rapidly as she could on the hard packed snow to the McMillan Building and stamped her feet when she entered the building.\n\n\"Ooh, girl, I know, huh?\" another Latin girl said. \"My feet ain't never warming up, know what I'm saying?\"\n\n\"I mean, what? I thought we had us some global warming going on,\" Anita said.\n\n\"Oh, we do,\" the other girl said. \"See, because of global warming, they got more humidity and that's what's causing all this snowing.\"\n\n\"So if the world was getting colder, we'd have less snow?\" Anita asked and the other girl scowled darkly and walked away.\n\n\"Shit, just asking,\" Anita said and scampered up the stairs to her next class.\n\nAnita saw Merita Ichnov, Professor Jurnigen's Teacher's Aide taping a note to the door of Room 224.\n\n\"Aw don't tell me,\" Anita said, walking up.\n\n\"Ja, I mean yes,\" Merita smiled tightly. \"Sum beech wait 'til I'm here then he call and say 'no class is too much ice' and I say 'you couldn't call sooner?' Eh?\"\n\n\"And now I walk all the way back,\" Merita continued as Anita wrote down the assignment the note instructed the students to prepare.\n\n\"Where you live?\" Anita asked as Merita walked away.\n\nMerita named an apartment complex just past Anita's condominium, smiling tightly.\n\n\"And you walked the whole way?\" Anita asked.\n\n\"Normally I ride bicycle but yesterday I hit something under all ice and it break,\" Merita said.\n\n\"Come on, I'll drive you home; I live right by there,\" Anita offered.\n\n\"Thank you!\" Merita said happily.\n\n\"Was hoping he pay me today, I get stipend and I am out of food,\" Merita explained, then frowned at the sight of Super 1 Foods empty parking lot. \"But is no matter, grocer's is closed, eh?\"\n\n\"What time is your first class tomorrow?\" Anita asked.\n\n\"Nine in the morning,\" Merita said.\n\n\"Grab some clothes and your toothbrush,\" Anita decided, pulling up to Merita's apartment building.\n\n\"You sure?\" Merita excitedly asked and got out of the car.\n\nShe returned a moment later and Anita carefully drove to her condominium.\n\n\"Ja, nice,\" Merita said, looking round. \"You wear the nice clothes, drive the nice car, you got maybe Sugar Daddy?\"\n\nAnita burst out laughing, shaking her head no as she hung up her coat then held out her hand for Merita's well-worn coat.\n\n\"No, no Sugar Daddy,\" Anita said.\n\n\"Oh!\" Merita's face actually lighted up. \"Sugar Mommy?\"\n\n\"No, no,\" Anita said and showed Merita her home office. \"I work for my money.\"\n\n\"Then why you in college you making money?\" Merita asked.\n\n\"Just because I make money doesn't mean I don't need to learn ,\" Anita said, showing Merita where she could put her small overnight bag.\n\nOutside of Cecil Coutre Hall, Toni gingerly negotiated the steps. Honey Childress, one of the few students that had braved the falling snow to attend class, came scurrying out of the building, hit a patch of ice and skidded down the eight concrete steps on her back.\n\n\"Oh! Are you all right?\" Toni gasped, walking over to where the dazed Honey lay.\n\n\"I think so,\" Honey said, sitting up.\n\n\"I thought you were like used to ice and snow,\" Toni said.\n\n\"Uh huh, and I'm used to falling on my butt all the time too,\" Honey admitted and accepted Toni's hand to get to her feet.\n\n\"You sure you all right; you like need me to get anyone?\" Toni asked.\n\n\"No, no, I'm just going to go back to my room and thaw out,\" Honey said.\n\n\"Oh, hey, you ever like see Anita?\" Toni called out as Honey walked away a little stiffly.\n\n\"See her all the time; she's like my best friend,\" Honey called back.\n\n\"Tell her I love her,' Toni whispered, turning quickly and tramping to her car.\n\nIn front of BJ's house, Kelli, Star and Luna were making a snowman by scraping the top layer of snow off the layer of ice with an mop bucket. Kelli had to admit, having two cousins was pretty awesome, and especially two cousins that worshipped her. To a five and four year old girl, Kelli, at nine, almost ten years old, was a big person.\n\n\"And my Daddy keeps wanting to eat my nose,\" Luna giggled to Kelli.\n\n\"Does your Daddy do that?\" Star asked.\n\n\"No, my Daddy...\" Kelli shot a quick look to where Heather and BJ were sitting, determined that BJ didn't hear her and smiled. \"No, my Daddy keeps saying he's going to shave my hair all off.\"\n\n\"Shave it all off!\" both Star and Luna screamed.\n\n\"You heard her?\" Heather whispered.\n\n\"Yeah, I heard her,\" BJ smiled.\n\n\"Yeah 'cause it won't do right in the morning; we got to wet it down before we can brush it,\" Kelli explained.\n\nAt St. Richard's, they were already calling her Kelli Delacroix, even though it wasn't official yet. Her first day at the new school, frightened and overwhelmed, and trying hard not to cry, Kelli heard someone shrill, \"Kelli!\"\n\nSuddenly, Star ran up, hugged her cousin tightly, then ran back to get back into line with her classmates.\n\n\"That's Kelli, that's my cousin,\" Star Weinstein proudly told Jennica Richards, her best friend.\n\n\"But we're not supposed to get out of line, are we, Star?\" Paris Mouton, their teacher gently but firmly chided the five year old girl.\n\nKelli blinked back the tears; it wouldn't do to cry. She was a big cousin.\n\nNow, outside of house, the new house that she and mom lived in since her mom and Daddy were engaged to be married, Kelli dumped another bucket of snow on top of the pile they'd already formed.\n\n\"Okay Da... Daddy,\" Kelli called out.",
        "\"You heard her?\" Heather smiled, kissing him.\n\n\"Loud and clear,\" BJ smiled and ran out into the yard.\n\nHe put the wax lips, carrot nose, and charcoal eyes and stepped aside as Star, Luna, and Kelli posed with their snowman.\n\n\"Remember, you got to send one to Grandpaw,\" Kelli told her mother as she snapped cell phone pictures.\n\n\"First one on the list,\" Heather assured her.\n\n\"And our Daddy and our Mommy,\" Star said.\n\n\"And they're next on the list,\" Heather smiled. \"How about y'all give Mr. Frosty a hug, huh?\"\n\nAt Superior Motors, Barry laughed out loud as the series of photos came across on his cell phone.\n\n\"Okay, help me out here, Jack said, looking over Barry's shoulder.\n\n\"Uh huh,\" Barry said, gripping Jack's shoulder, locking down on Jack's pressure point should Jack say anything stupid.\n\n\"Okay, the red head's your granddaughter?\" Jack said, wiggling to get out of Barry's grip.\n\n\"Uh huh, and the two little blondes are my sisters in law; they're Caitlin's sisters,\" Barry agreed.\n\n\"And they're all cute as all get out and you're well, you're you and ow!\" Jack teased.\n\n\"Come on, Jack, let's go home, huh?\" Barry said. \"We been here all day and hasn't a single person even been by,\" Barry smiled and looked at the smiling girls and the haphazard snowman again.\n\n\"Because everyone's smarter than we are,\" Jack agreed. \"Okay, Caitlin's a red head, Heather's a red head, Kelli's a red head and we know Harmony's a total blonde; think Briah might really be a red head?\"\n\n\"Oh, I am more than sure that girl's got her some red roots,\" Barry smiled.\n\n\"And they're all gorgeous and you're, well, you're you,\" Jack said.\n\n\"Uh huh, and what about you and Melanie, huh?\" Barry smiled as he shut off the lights.\n\n\"I got a picture of her making a snow angel,\" Jack said. \"Snowed here when she was about five or six.\"\n\n\"She could move her legs back then?\" Barry asked as he locked the door.\n\n\"Huh? No, no, she's just lying there flapping her arms, that smile of hers on her face,\" Jack smiled.\n\nAt Johnson Furniture and Appliances, Ed Weinstein laughed as the pictures came over on his cell phone. Nine looked over his shoulder and chuckled.\n\n\"Man, you sure? Huh? You sure them your kids?\" the burly African American man teased. \"They too good looking be your kids.\"\n\n\"Brother if that ain't the truth, huh? Ed laughed.\n\n\"My brother, don't you ever forget you a lucky man,\" Nine said sincerely, putting a beefy hand on Ed's shoulder. \"Don't you never forget you are blessed.\"\n\nIn her condominium, Toni lighted a joint and watched through the large front window as the snow gently fell. She wasn't worried about anyone peeking on her through the one way glass as she sat and slowly masturbated, imagining her and Anita watching the snow fall.\n\nAnita would pull her lips apart and pinch down on her clitoris with her thumb and forefinger and that's what Toni did, and shuddered.\n\nWhen she finished the joint, she reached around under the couch, located the dildo she and Anita had called 'Big Boy' and slowly worked the large circumference latex phallus into her pussy, winching in pain as the fat monster stretched her wide.\n\nA chime sounded, letting Toni know she had a text message.\n\n\"Woo hoo,\" she grunted as she read it. \"No class tomorrow.\"\n\nAt her own condominium, Anita and Merita kissed deeply, combing their fingers through each other's hair.\n\nIt had started off innocently enough; they had sat and watched the snowflakes softly silently fall. Anita felt Merita's breath on her cheek and turned to say something, accidentally brushing Merita's lips with her own.\n\nMerita murmured something in German and kissed Anita.\n\nWhen she wasn't combing her fingers softly through Anita's hair, Merita cupped Anita's buttocks, muttering in German. Anita didn't speak German, but it was easy to see that Merita liked Anita's buttocks.\n\n\"The bedroom, ja?\" Merita begged.\n\n\"Ja,\" Anita agreed.\n\nThey heard first one, then the other cell phone chime and heard a second chime on one cell phone.\n\n\"No school tomorrow,\" Anita said, reading her text message.\n\n\"Ja and no check tomorrow,\" Merita said, reading her second text.\n\n\"I have plenty of food,\" Anita said.\n\n\"Plenty of food for lover?\" Merita asked, kissing her.\n\n\"JA, plenty of food for lover, Anita agreed.\n\nIn the bedroom, Anita discovered two things. Merita's chest was built up quite a bit with padding; the attractive blonde was nearly flat chested without her bra. And Merita had an anal fixation.\n\nAnita had loved making love to Toni's beautiful rear end, nibbling and sucking and pinching and lightly spanking Toni's luscious rear. Merita was nearly savage in jamming her tongue into Anita's rear as far as she could dig it into Anita's rectum. \n\nLike her, Merita also shaved her pussy and it was quite stimulating, rubbing her bald mound against another bald mound until they both shuddered in orgasm.\n\nMerita sighed deeply as Anita positioned herself behind, one hand cupping her small breast bump, her leg wrapped around Merita's legs.\n\nChapter 33\n\nCaitlin pulled her nightgown off, then wiggled her butt against Barry's morning erection. She smiled as he immediately reached for her belly with one hand and her breast with the other. She had been terribly afraid that her pregnant body would turn her husband off, but if anything, he seemed to want her even more.\n\n\"It's not snowing, but the snow has turned to ice again; it's too dangerous for you to go into work,\" she whispered, reaching between her legs to feel his erect cock.\n\n\"Oh well, whatever shall we do?\" Barry whispered, reaching down and wiggling out of his boxer shorts.\n\n\"I don't know about you but I'm horny,\" Caitlin whispered and groaned as she rubbed the head of his cock against her wet lips.\n\n\"You are?\" Barry gasped as she rolled around in his arms to face him. \"Well guess what? So am I!\"\n\n\"Really?\" Caitlin laughed and pushed him onto his back. \"Gosh what you think we ought to do about that?\" \n\n\"Well I don't know about you, but I'm going to make love to my beautiful wife,\" Barry said and groaned as his entire length slid inside of her hot wetness.\n\n\"God, you are so beautiful in the morning,\" Barry said as she shuddered, close to orgasm.\n\n\"Oh yeah? What I look like in the afternoon?\" Caitlin teased.\n\n\"Almost scary,\" Barry teased back and laughed as she lightly slapped him.\n\nIn the small house Barry had helped Ed find, Ed and Brooke were also making love in Brooke's favorite position, doggy style.\n\n\"Yeah, so you don't have to look at my face,\" Ed joked as she almost savagely drove herself backward to meet his forward thrusts.\n\n\"No,\" she wheezed, close to orgasm. \"Leaves your hands free to oh damn it!\"\n\nShe gave a strangled scream as he did reach around and tug at her clitoris ring while the other hand kneaded a heavy breast.\n\n\"Now, come on, come in me come on, shoot that hot sperm in my pussy; two little Indians are going to be getting up pretty soon,\" Brooke begged, growing more frenzied in her thrusts.\n\nEd grunted and pumped a stream of his sperm into her and she giggled and cooed and finally sighed in satisfaction.\n\nLanguidly, she rolled over onto her back, kissed him happily, then found her nightgown and pulled it on.\n\n\"Ed, the schools are closed,\" Brooke said as Ed began to pull out his work clothes. \"If it's too dangerous for the buses, it's too dangerous for your truck.\"\n\n\"I bet nine's already there,\" Ed said.\n\n\"And Nine's driving the three quarter ton diesel,\" Brooke replied.\n\nShe got out of bed., hugged him, and then opened the bedroom door.\n\n\"And I bet you a million dollars Mr. Brett Johnson's nowhere to be seen today,\" Brooke said.\n\n\"Oh? And when you get a million dollars?\" Ed asked, playfully slapping her rear end.\n\n\"Day I met you,\" she said.\n\nEd mimed vomiting and she laughed, waddling down the hall to the girls' bedrooms.\n\nIn her condominium, Anita awoke slowly.\n\nAnita almost felt like crying as she cuddled Toni in her arms. She rubbed Toni's small breasts and pinched one then the other nipple and bit down on Toni's shoulder.\n\n\"Is beautiful waking with you,\" Merita sighed, wiggling her small rear end against Anita's crotch.\n\nAnita almost felt like crying as she realized it was not Toni she held in her arms, it was not Toni's wonderful nipples she was toying with.\n\n\"Is beautiful waking with you,\" she lied and again bit down on Merita's shoulder.\n\n\"We make love, ja? I like we make love in morning, here I kiss you,\" Merita sighed and wiggled around in Anita's arms.\n\n\"If you can't be with the one you love, love the one you with,\" Anita thought to herself and kissed the beautiful blonde softly.\n\n\"You so pretty, is beautiful waking with you,\" Merita smiled, looking deeply into Anita's dark eyes.\n\nIn his apartment, Patrick smiled as Harmony fussed.\n\n\"Everything's closed, the whole place is frozen over, God damn it, it's a fucking skating rink out there, think he'll take the fucking day off? Of course not! Got to be Super Blind!\" she muttered, slamming pans onto the stove.\n\n\"You break that stove I won't get my security deposit back,\" Patrick told her.\n\n\"Fuck your security deposit, all right?\" she screamed at him. \"Why? Huh? Tell me why you got to go into work today?\"\n\n\"Because it's my job,\" Patrick smiled.\n\n\"Here, hope you choke on it,\" Harmony snarled, slamming his plate of eggs and grits and bacon in front of him.\n\n\"Toast?\" Patrick asked.\n\n\"No! You want toast, you stay home! Stay home and I'll fix you all the toast you can eat!\" she yelled and stomped into the bedroom.\n\nJust as Patrick was putting his plate into the dishwasher, a knock sounded at the door.\n\n\"And here's another idiot; makes two of y'all ain't got the God damned sense stay at home,\" Harmony spat as she opened the door to the smiling face of her brother in law.\n\n\"Uh huh, but this idiot's getting double time for fixing all them frozen pipes, George Papil smiled. \"How you been? Haven't seen y'all in a while.\"\n\n\"Shut up; he's right there, take him to work,\" Harmony snapped.\n\n\"Hey, love you,\" Patrick said.\n\n\"Then stay home; it's too dangerous, damn it you can't even see! I can and I can see you ain't got no business going to work today!\" Harmony begged, clinging on to him.\n\n\"See you when I get home,\" Patrick said.\n\n\"Might not be here,\" Harmony threatened.\n\n\"Uh huh, too dangerous for you to drive anywhere,\" Patrick said.\n\nGeorge laughed at Harmony's scowl and guided Patrick to his van. On the sides was a large purple butterfly and the words Papillion Plumbing and his office phone number.\n\n\"Come on, van's loaded down with everything I could put in it; didn't slide once coming here,\" George said.\n\n\"Please be careful, Harmony called out.\n\n\"Going to do doughnuts minute I get out the parking lot; what the hey, only live once, huh?\" George teased.\n\n\"Ass hole!\" Harmony screamed and slammed the door.\n\n\"Boy, she was as sweet as pie until you put that engagement ring on her finger,\" George lied.\n\n\"Uh huh,\" Patrick laughed.\n\nGeorge never took the van above twenty miles an hour but since Patrick only lived a half mile from St. Elizabeth's Trauma Center, within moments, he was pulling up to the gleaming building.\n\n\"All right, my man, call my cell when you ready to go home,\" George said as he pulled up to the side door.\n\nPaula Lambert, the CEO of the hospital stared as Patrick tapped into the corridor.\n\n\"Oh my God; you're a life saver,\" she enthused. \"Deidre went home at two o'clock and I've been trying work this damned thing all by myself.\"\n\n\"Could you call my fianc\u00e9 and tell her all of that?\" Patrick smiled as he slid behind the console, switched his head set on and readied himself for the day's incoming phone calls.\n\n\"I hope that girl knows how lucky she is,\" Paula said.\n\n\"Don't know about her, but I know how lucky I am,\" Patrick said and pressed the button to answer the ringing telephone.\n\nIn their large bed, Heather grunted as BJ's sperm blasted down her throat, then shook as he bit down lightly on her clitoris.\n\n\"God damn, won't kiss me until I brush my teeth, but you'll put your mouth on my pussy first thing in the morning?\" Heather laughed as BJ crawled up the bed.\n\n\"If your pussy smelled like your breath, I wouldn't do that either,\" he laughed and laughed louder as she purposefully held him down and breathed into his face.\n\n\"I love you,\" she said and wiggled as she could feel another erection growing between them. \"Ooh, is that for me?\"\n\n\"Well, it isn't for Barak Obama,\" BJ said and pushed it into her very wet pussy.\n\n\"Oh, I'm glad it's not for him,\" Heather moaned and wiggled on top of him.\n\n\"You did lock that door, right?\" BJ asked as they quickly got into their rhythm.\n\n\"Oh yeah,\" Heather confirmed.\n\nAt her condominium, Toni took stock of her provisions. This ice and snow had better thaw soon or she would be in danger of running out of frozen meals, rum, and marijuana.\n\nBut for now, she had enough eggs to make an omelet for breakfast, a fried egg sandwich for lunch, which would give her the opportunity to use up the last two hot dog buns, and another omelet for dinner.\n\nShe padded around the kitchen nude and smiled sadly; Anita would slap her on her rump and make her put at least a tee shirt on. And certainly would demand that she put slippers on her feet.\n\nBut Anita was not there, so Toni scampered around, completely nude.\n\nShe looked through the kitchen window at the solid sheet of white that covered her neighborhood and wondered how her mother and Eddy were doing in their poorly insulated shack.\n\n\"How's that global warming working out for you, Ed?\" Toni asked aloud as she chopped up the last of her ham for her omelet.\n\nAt his rotunda, Patrick felt his wrist and cursed under his breath; he forgot his Braille watch. A quick check of the computer told him it was nearly twelve o'clock.\n\n\"So what time you going to lunch?\" Harmony asked him\n\n\"Hey! What are, how'd you get here?\" Patrick asked.\n\n\"George came and got me,\" Harmony said.\n\nShe hugged him from behind, leaning over his chair.\n\n\"I hate you, I'm so mad at you, I can't believe you'd come into work, you know there's not even twenty cars in the employees parking lot?\" Harmony said and kissed his cheek.\n\n\"Any of them using my parking spot?\" Patrick asked.\n\n\"Shut up, God, I hate you,\" she snapped, slapping him.\n\nPatrick smiled, put the phone system on Auto-attendant and grabbed his cane.\n\n\"Cafeteria even open?\" Harmony asked, realizing she should have brought their lunch with her.\n\n\"Yeah, we still have patients, snow or not,\" Patrick said as they took the elevator down.\n\n\"I really am mad at you,\" she assured him, hugging him tightly.\n\n\"Baby, I know that, but you know how hard it is for a blind man to find a job?\" Patrick asked.\n\n\"Dedicated as you are? Not very hard at all,\" Paula Lambert said, stepping off the elevator.\n\n\"Shit!\" Patrick laughed. \"I didn't know she was on here!\"\n\n\"Who was that?\" Harmony asked.\n\n\"Woman that runs this hospital; she's my boss,\" Patrick smiled.\n\n\"Hey Baby!\" a large black woman called out as they entered the cafeteria. \"What y'all want? We got just about everything, ain't no one here, I swear!\"\n\n\"That's what I told him,\" Harmony agreed, grabbing two trays. \"Told him to stay home.\"\n\n\"Oh, no, we need our Patrick,\" the woman smiled, patting Patrick's hand. \"He keep this place running.\"\n\n\"Woman, anyone can answer a phone and say 'hello' but ain't no one make a biscuit like you,\" Patrick said.\n\n\"Ooh, they got that stir fry, can I have that?\" Harmony asked.\n\n\"I know that's right!\" the woman laughed, scooping up a heaping plate of the stir fry.\n\nAt the cash register, the woman grabbed Harmony's left hand, examining the engagement ring.\n\n\"Ooh, girl, he give you that?\" the woman asked.\n\n\"Sure did,\" Harmony said, snuggling against Patrick. \"Christmas day, said if I said yes it would be the biggest Christmas gift ever!\"\n\nAt BJ's house, Heather again threatened to kill Kelli if the child said one more time that she was bored.\n\n\"Hey, you know how to face time?\" BJ asked.\n\n\"No,\" Kelli admitted.\n\nOkay, let's see,\" BJ scrolled down his list of phone numbers.\n\n\"Hey, Ed, hi, this is BJ,\" he smiled when Ed Weinstein answered. \"Please tell me you were smart enough to stay home today.\"\n\n\"I'm not, but my wife is smart enough to make me stay home,\" Ed joked.\n\nBJ instructed Ed on how to find and download the application and within minutes, Kelli and Star and Luna were laughing and squealing and making faces at the small camera on their phones.\n\n\"I love you so much,\" Heather whispered as they sat on the couch and listened to Kelli and her two cousins.\n\nIn her living room, Shirley St. Martin lay on her couch and watched her husband as he played Grand Theft Auto with all the enthusiasm of a teenager, screaming, laughing and cursing.\n\nShe loved him more today than she did forty seven years ago, when the brash young man had promised her everything and anything she wanted, if only she would marry him.\n\nMama and Daddy had not approved of the young Henry Michael St. Martin; Daddy thought he was loud, arrogant, Mama Thought he was just a little too sure of himself.\n\nThey had wanted her to marry Jamie Campbell, son of James Campbell, and manager of First Union Bank in Bender.\n\nBut Shirley had looked into Jamie's eyes and saw a seething contempt of her and her family. In Jamie's eyes, it was fortunate for Shirley that she was attractive; she had very little else to offer.\n\nIn Henry's eyes, well, all Shirley saw was her reflection. To Henry St. Martin, Shirley was everything; she was all he saw.\n\nThey were coming up on their forty sixth wedding anniversary on April 26; at their twentieth wedding anniversary, Mama had admitted she and Daddy had been wrong; Henry St. Martin was the perfect husband.\n\n\"I love you,\" Shirley said to him and closed her eyes.\n\nThen she saw Mama and Daddy, and just behind them, her five year old sister, Janice.\n\n\"Shirley! You're here!\" Janice screamed happily and ran up to hug her.\n\nThe child's red hair stuck out at all angles; both she and Mama tried just about everything but the girl's hair was just would not be controlled. Shirley recognized the light blue dress Janice wore; Mama had bought it for Janice's sixth birthday, but Janice drowned a few days before her birthday.\n\nSo, sobbing, Mama had dressed the girl in that dress for her funeral.\n\n\"I been waiting aaaaallll day for you get here,\" Janice said.\n\nHenry looked over to answer his wife and dropped the game controller.\n\n\"Shirley!\" he screamed.\n\nOn a stretch of Highway between Bender and DeGarde, under the weight of the layers of ice, a St. Elizabeth Public Utilities transformer broke free of its mooring, crashing to the ground with a loud 'boom.' The momentum dragged a second power transformer down and it too crashed with a loud 'boom.'\n\nThe sudden surge caused three more transformers to blow and Bender and DeGarde were plunged into chaos.\n\nIn the hospital, Harmony screamed as the cafeteria plunged into darkness.\n\n\"Lost power?\" Patrick asked, noticing that the hums and whirrs of the various machines had abruptly ceased.\n\n\"Well, come on,\" he smiled picking up their trays. \"Put your hand on my shoulder and follow me.\"\n\n\"The elevators aren't going to work,\" Harmony said as he put their trays on the stack and left the cafeteria.\n\n\"Good God, we'll take the stairs,\" Patrick teased her as he easily negotiated the hallway. \"It won't kill you.\"\n\nHarmony trembled as she followed her man. This, this was how his world looked to him. Dark, threatening, foreboding. Yet he navigated through and was happy with his life.\n\n\"Here we are,\" he said and opened the stairwell door.\n\nInside, the emergency lighting was working and Harmony let out her breath in the garish green lighting.",
        "\"I, wow, I just don't, oh God, that was so scary,\" Harmony admitted.\n\nSuddenly, the hospital's emergency generator came on.\n\n\"Oh, we can use the elevator now,\" Harmony said.\n\n\"Bull shit; suppose the generator gets overloaded?\" Patrick said and began jogging up the stairs.\n\nIn her condominium, Anita squealed as the power went out and hoped that the residual heat of the electric skillet would finish cooking the grilled cheese sandwiches.\n\n\"Oh, don't worry, I am here, I protect you,\" Merita teased, hugging Anita from behind. \"I won't let bad men get you.\"\n\n\"Shut up,\" Anita giggled and turned and kissed the woman\n\nIn their bed, Caitlin gave a little squeal as the power went out. Barry laughed and cuddled up with her.\n\n\"House is all gas; we'll be fine,\" he assured her.\n\n\"Anyway,\" he said and began stroking her wet slit. \"You got something better to do?\"\n\n\"We been doing that all day,\" she giggled but spread her legs wide for him.\n\nChapter 34\n\nBarry held onto Henry St. Martin as the man sobbed. He didn't mind doing it; it had been this man and his wife that had seen the potential of the eighteen year old Barry Delacroix and had urged the teller to go to college. He owed his success to this man and that woman in that coffin.\n\nBut the man had four sons and three daughters in law and one 'friend of the family' or whatever they were calling Andy, their youngest son's lover. At least one of them should be up here, sitting next to their father.\n\nHenry's sons weren't even sitting together, weren't even sharing their grief. Barry wanted to snatch the cell phones out of Andy's, Tara's and Gary's hands and smash them.\n\n\"That is your mother! What in the fuck is so important that you have to be on your God damned phones?\" he wanted to scream at them.\n\n\"And I turned to tell her I loved her too and I could tell she was gone,\" Henry sobbed for the hundredth time. \"And right at that minute, I mean the very second I turned around, the power, everything went off...\"\n\nOn the other side of him, Caitlin sat and sobbed into her handkerchief. Michael and Briah sat, wiping at their eyes.\n\n\"Parran,\" Patrick said, wiping at his eyes. \"Parran, I'm sorry.\"\n\nNext to him, Harmony stood, looking a little bewildered, a little lost.\n\n\"I uh, I didn't really know her, but Patrick says she was the coolest woman,\" Harmony said.\n\n\"Yeah, she was,\" Henry agreed, hugging his godson tightly.\n\n\"I mean, she must have been pretty special if Patrick will actually take off of work,\" Harmony nudged Patrick.\n\n\"Uncle Henry, I'm sorry,\" Kelli sobbed, hugging the man.\n\n\"I know, Sweetie Pie,\" Henry said, hugging the girl.\n\nFather McNamara quietly approached Caitlin.\n\n\"I uh, I understand you've been asked to say a few words?\" the man whispered.\n\n\"I met Shirley on our first date,\" Caitlin sniffed from the podium. \"We went sailing on Barry's boat.\"\n\n\"Wasn't a date,\" Barry chuckled lightly.\n\n\"Forgot to tell Caitlin that,\" Henry actually chuckled as well.\n\n\"And from that minute, she and I were the best of friends; it just didn't matter that there were a few years between us,\" Caitlin went on.\n\n\"A few?\" Andy lisped and Barry felt his anger rise up.\n\n\"But that's just what kind of woman Shirley Ann Bordelon St. Martin was,\" Caitlin said. \"Age? Race? How much you got in your bank account? It just didn't matter. If she liked you, she loved you. And she liked me and she loved me and next to my husband, she was my best friend.\"\n\nA few moments later, Caitlin was wrapping up her eulogy, \"Shirley, if my baby's a girl, we're naming her Shirley. If it's a boy, we're naming him Martin. You will never be forgotten and you will always be loved.\"\n\nAndy made another scathing remark under his breath and Barry again fought down the urge to smash the man's face in.\n\nAnita Lopez finished saying a rosary for the soul of Shirley St. Martin and quietly walked to Henry.\n\n\"I am truly sorry for your loss,\" she quietly said, hugged him and kissed him on his cheek.\n\nShe also hugged and kissed Barry and Caitlin , then exited through a side door, avoiding any eye contact with Toni Delacroix.\n\nStacy Falgout approached Henry, shook his hand and offered her own condolences. She softly patted Barry's arm, then smiled at Caitlin.\n\n\"It wasn't supposed to be a date, you witch,\" she said softly, letting Caitlin know there was no rancor in her words.\n\n\"Didn't tell me that,\" Caitlin smiled softly.\n\n\"Congratulations; I hope it's a girl,\" Stacy said, hugged the girl, then left the church.\n\nOutside, in the brutal chill that still hung over Bender, Louisiana, Stacy fought the urge to go to the nearest bar and get stinking, sloppy , crying drunk.\n\nShe hit the number 1 on her cell phone.\n\n\"How'd it go?\" Precious Jones, her AA sponsor answered.\n\n\"I'm the biggest loser in the world,\" Stacy suddenly sobbed out.\n\nAt the University of Louisiana at DeGarde, Dean Sims watched the students begin to line up at the two trailers inside the Quadrangle. The trailers were not even open yet; he checked his watch, there was at least another twenty minutes and yet there they were, braving the cold and lining up. Some were smart and had their girlfriends or buddies camped out on one of the nine benches around the two trailers.\n\nHe had been sure Anita Lopez's idea would be a total flop but agreed to let her put two food trailers up. Now he had applications from seven other people that also wanted to rent space on their campus.\n\n\"Girl ought to be teaching a class here,\" the man said and noticed more students racing to get in line.\n\nHe nodded in satisfaction; Campus Security had assigned two student officers to keep the throng orderly.\n\nDown in the Quad, Anita let herself out of the 'And the Weiner is...' trailer and nodded with satisfaction as she heard the bolt slide home behind her. Their hot dogs were plumping up nicely under the heat lamps, the homemade chili was beginning to bubble, and the oil for the corn dogs was about ten minutes from reaching the correct temperature. Her friends, Alexis Smith and Jenee Wolfe were inside that trailer, along with Olivia Smith, Alexis' cousin and fellow student at U.L.D.\n\nShe knocked twice on the door of the 'Pizzaco' trailer and smiled as Honey Childress tried to make her voice sound manly, threatening.\n\n\"Who is it, huh? What you want?\" the girl barked from inside the trailer.\n\n\"Open the door, you munchkin,\" she ordered.\n\n\"Damn it, don't call me that!\" the girl shrilled as she slid the bolt back and allowed Anita entry.\n\nA few months before their break up, Toni and Anita had gone to Casa Ole and Toni had ordered the Mexican Pizza. She ate three bites of it and declared it terrible. Anita, loathe to waste food, slid it over and took one bite and agreed with Toni.\n\nA few days later, Anita carefully fried two corn tortillas, using a spatula to keep the tortillas flat, then topped them with her homemade taco meat, homemade salsa, and grated cheese. Toni wolfed one down and would have gobbled up the second one if Anita hadn't snatched her plate away.\n\n\"Now, THAT'S a Mexican Pizza,\" Toni had declared.\n\nWhile Honey had been a houseguest, Anita had made four Mexican pizzas, using refried beans instead of meat and Honey, even with her small tummy, managed to eat one, and almost half of a second one.\n\nNow, in the food trailer, a bean pizzaco sold for three ninety nine, a ground beef pizzaco or a chicken enchilada pizzaco sold for four ninety nine, and the fish pizzaco, made with fresh farm raised catfish sold for five ninety nine.\n\nTheir ice cold cans of soda sold for seventy five cents and their bottled water sold for fifty cents.\n\n'And The Weiner Is...' sold a six inch all beef frank for one seventy nine, with two heaping table spoons of homemade all beef chili sold for two twenty nine, the corn dog sold for one fifty nine, and their sodas and waters sold for seventy five and fifty cents as well.\n\nHer first day in business, Anita thought maybe she had miscalculated the need for a foods service on campus; they barely made two hundred dollars between the two trailers. Word of mouth, the only advertisement she would utilize, picked up, and the second day they cleared seven hundred dollars. By the end of the week, Lopez Foods Services, LLC deposited nearly four thousand into Lopez Foods Services' bank account.\n\nFrom his office window, Dean Sims actually heard the rumble of excitement as the flaps for the two trailers went up and the two stands were now open for business.\n\n\"But why I can't have...\" a Sorority girl was whining to Honey.\n\n\"Look behind you, sister, we don't have time for special orders,\" Honey barked. \"Don't want the sour cream? Scrape it off yourself. What you want to drink?\"\n\n\"Um, you got...\" the girl mused.\n\n\"Coke, diet Coke, Sprite, Water,\" Honey said, pushing the girl's beef pizzaco toward her.\n\n\"Diet Coke,\" the girl said and Honey gave her the change. \n\n\"Next!\" Honey called out.\n\nAnita couldn't help but smile as she and the other two girls scrambled to keep up with the orders. She had grudgingly hired Honey, but was too afraid to have the clumsy girl around the hot oil or the hot oven, so put her at the cash register.\n\nThe girl couldn't walk and chew gum at the same time, but Honey kept that line moving and moving fast.\n\n\"Two chicken, one bean,\" Honey called out while grabbing the boy's two sodas.\n\nAt the other trailer, Alexis tried to keep their line moving along as well.\n\n\"No, our buns are not gluten free,\" Alexis said to a student. \"Hey, Toni, what up girl?\"\n\nToni Delacroix got two chili dogs, slathered on way too much mustard, then stared at a pimple faced boy until he grudgingly got to his feet and offered her his seat.\n\nAt one forty five, over the protests of the few stragglers, the two trailers lowered their flaps and bolted them securely shut. Anita grabbed the roll of receipt tape from the register at Pizzaco, stuffed the money and receipt tape into a bank bag and locked it.\n\nShe then ran to the 'And the Weiner is...' stand and repeated the process.\n\nThen she made it to Professor Jurnigen's class with only seconds to spare.\n\n\"Ah, Ms. Lopez, how is the minimum wage world treating you these days?\" the man sneered.\n\nHe was a notorious misogynist who truly felt that women, and men, would be far happier if women would simply accept their place in life, to be subservient to men. It truly galled him that the University even allowed women to pursue academic studies.\n\n\"Uh no sir, I make twelve dollars an hour,\" Anita lied, not wanting any of her fellow students to know that she actually owned the two food trailers.\n\nMerita smirked at this claim but held her tongue.\n\n\"And how many hours a week?\" Professor Jurnigen asked.\n\n\"Uh, about twenty,\" Anita said.\n\n\"Uh huh,\" the man said and scribbled 12 times 20 then scribbled 8 times 40 and shrugged.\n\n\"You do the math, Ms. Lopez; you may be better suited to work full time for minimum wage,\" the man said as he shut the door then launched into his lecture.\n\nAt the Delacroix home, Caitlin waved to the mailman and looked through the envelopes and fliers the man had brought.\n\nCaitlin was puzzled to see a letter from Sophia Coutre's office.\n\nShe quickly dressed, then drove to Superior Motors.\n\n\"Barry, your wife's here,\" Jack called out.\n\nThe nurse that was pondering the purchase of a Porsche looked up, looked at Caitlin and looked again at Barry.\n\n\"Excuse me,\" Barry smiled and opened the heavy glass door for Caitlin.\n\n\"Hi Sweetheart,\" Caitlin said, kissed him and showed him the letter.\n\n\"Well, it's the reading of Shirley's last Will and Testament,\" Barry said.\n\n\"I'll take it,\" the nurse said\n\n\"But why?\" Caitlin asked.\n\n\"Honey, I don't know,\" Barry said. \"Maybe she left you something.\"\n\n\"Oh! I hope it's that cider press! Remember? I told you? It's been in her family for over a hundred years,\" Caitlin said.\n\n\"Um, you heard me?\" the nurse asked.\n\n\"Yes ma'am,\" Barry smiled, kissed his wife, than gave her a little swat to her backside.\n\nThe nurse's credit was declined and she left, promising she would have the 'misunderstanding' cleared up.\n\n\"Declared bankruptcy last year; you're not clearing that up,\" Barry said to himself, then looked over at Henry. \"You know anything about...\"\n\n\"All I know is Shirley loved that girl to pieces,\" Henry smiled sadly.\n\nTwo days later, Caitlin thanked Polly Chastaine and entered the conference room to find Gary, Frank, Stephen and Richard, along with their wives and Andy, seated on one side of the massive oak table. None of them returned her friendly greeting and Caitlin shrugged and took a seat. She nodded in thanks as Polly brought in a bottle of water.\n\n\"Okay,\" Sophia Coutre, an attractive woman in her early fifties said as she entered the room. \"We're just waiting on Mr. St. Martin, then we can get started.\"\n\n\"I'm here, I'm here,\" Henry said and sat down next to Caitlin.\n\n\"Hi,\" Caitlin said.\n\n\"Hi Sweetheart,\" Henry said and waited to see if any of his children or their spouses would do anything but look bored.\n\nSophia read through much legal jargon then finally got to the meat of the will.\n\n\"Mrs. St. Martin came to me about three weeks before her passing; said she just knew she wouldn't get to see her baby, wouldn't get to spoil it rotten, Mrs. Delacroix, I assume that's yours?\" Sophia said.\n\n\"Yeah, I guess,\" Caitlin said. \"I mean, we kept talking about where we'd take her; Shirley just knew it was going to be a girl and...\"\n\n\"Yeah, yeah, yeah, you have a working vagina, good for you,\" Andy sneered. \"Could we possibly...\"\n\n\"Thank you, Andy, you may wait out in the lobby,\" Henry snapped.\n\nAndy looked at Richard for support, but Richard stared straight ahead.\n\n\"Now, Andy, skip along, now!\" Henry snapped angrily.\n\n\"Anyway, Mrs. St. Martin made the following addendum and did void her previous will which had been tendered and notarized on September twenty ninth, two thousand and nine,\" Sophia went on as Andy attempted to slam the door shut, but the hydraulic spring prevented anything but a small 'swoosh' to escape.\n\n\"Oh Shirley!\" Caitlin sobbed out as Sophia read that Shirley was giving Briah Weinstein twenty five thousand dollars to cover the wedding expenses.\n\n\"She told Briah if she could snag Michael, she'd pay for the wedding dress,\" Henry smiled, sliding a check over to Caitlin.\n\nCaitlin grabbed for the box of tissues instead.\n\nSophia read about the college trust funds that Shirley had set up for Star and Luna Weinstein, naming Caitlin to be the guardian of their trusts.\n\n\"Said they were the best flower girl and ring bearer she'd ever seen,\" Henry smiled as Caitlin used up more tissues.\n\n\"Oh, sister! Turn off the water works; nobody's buying it!\" Mattie sneered.\n\n\"Thank you, Mattie, you may go wait in the lobby,\" Henry said.\n\nSophia waited until the door closed again, then continued to read about the trusts she'd set up for Kelli St. Martin, soon to be Kelli Delacroix, naming Barry Jacob Delacroix Junior as the guardian of that trust fund.\n\nThere were various accounts set up for Heather, BJ, Michael, Patrick, and Antoinette Delacroix; Henry smiled. He could see that the remaining six were dying to say something, anything to speed up the process, to get to their inheritance. But they were afraid of being told to leave the room.\n\n\"To Caitlin Theresa Weinstein Delacroix,\" Sophia said. \"You will never know the joy you have brought to this old woman's life.\"\n\n\"Oh God,\" Caitlin sobbed out. \"Shirley, you'll never know what your friendship meant to me either!\"\n\nShe hugged Henry tightly.\n\n\"I never told her how much I loved her!\" Caitlin sobbed.\n\n\"Believe me,\" Henry sobbed with her. \"Believe me, she knew!\"\n\nFrank stood and clapped slowly.\n\n\"And the Oscar goes to... Yeah, yeah, yeah, I know, I'm going to the lobby now,\" he sneered.\n\nSophia waited until Caitlin was more composed, then continued.\n\n\"Oh, I do get the cider press,\" Caitlin sighed happily.\n\n\"She couldn't stop laughing about how it squirted you in the face when y'all used it,\" Henry chuckled and Caitlin chuckled at the memory.\n\n\"My grandmother's brooch,\" Sophia read on.\n\n\"Wait a minute, wait one fucking minute; this bony ass bitch gets the ruby brooch?\" Richard shrilled as Sophia named the remaining jewelry items Caitlin was to receive. \"I promised Andy...\"\n\n\"Thank you all for coming,\" Sophia said and gathered the papers together.\n\n\"Wait, what? That's... But there was no mention of Gary, or Stephen, or...\" Missy sputtered.\n\n\"How very observant of you,\" Henry said dryly and got to his feet.\n\n\"Let me save you the trouble,\" he snapped. \"There's no mention of any of you in my will either. You've siphoned all you will ever get from your mother or me.\"\n\n\"We will fight this,\" Tara hissed hatefully at Caitlin Delacroix.\n\n\"I will provide you with copies of the documents as read today,\" Sophia calmly offered.\n\nOutside of the St. Martin home, Stacy Falgout took a few digital photographs and smiled when Henry St. Martin pulled up.\n\n\"Hi Stacy, thank you so much for coming!\" he said.\n\n\"Oh no, are you kidding?\" she asked. \"I, well, our could have knocked me over with a feather when you called me.\"\n\nShe followed him into the house.\n\n\"Yeah, well, we had been meaning to sell it for a while now,\" Henry said and picked up an unopened bottle of red wine. \"Now? Too many reminders of her.\"\n\nChapter 35\n\nCaitlin Delacroix gasped and shook Barry awake at 12:33 on the morning of March 20, 2014.\n\nBarry kissed her softly, helped her get to the side of the bed, and then dressed her. \n\nGasping and giggling, she let him help her down their stairs and put her in the car.\n\n\"It's our first baby,\" Barry happily told the nurse and orderly that met them at the door of St. Elizabeth's Trauma Center.\n\n\"Oh how wonderful!\" the nurse said as she helped Caitlin out of the car and onto the wheelchair. \"Oh don't worry, Honey, we'll take good care of you.\"\n\nEd Weinstein jerked when his cell phone chimed merrily. He pulled his hand off of Brooke's swollen belly and reached for the phone. In her sleep, Brooke reached for his hand.\n\n\"Well, Father in Law,\" Barry's happy voice greeted him. \"You're about to be a granddad!\"\n\n\"Caitlin?\" Brooke asked, now awake.\n\n\"Just brought her in,\" Ed agreed.\n\n\"Oh boy!\" Brooke laughed as she wiggled and jerked, trying to get out of bed. \"I'm sleeping with a GLF!\"\n\n\"Here, you goof ball!\" Ed laughed and helped his wife to her feet.\n\nSeth and Caitlin Weinstein came to the house so that Star and Luna wouldn't be alone in the house, and wouldn't be frightened when they woke up.\n\n\"I think I'll make them bagels and lox for breakfast; what you think?\" Seth teased.\n\n\"Think that's why I'm Catholic and not Jewish, Dad,\" Ed said.\n\n\"Uh hey, after our great granddaughter's born, uh, why not just stick around, see if they got a room for you?\" Caitlin teased her daughter in law.\n\n\"Three more weeks,\" Brooke smiled.\n\n\"Hey, I'm just saying,\" Caitlin smiled and stretched out on the couch. \"What time the girls get up?\"\n\nIn his car, on the way to the hospital, BJ looked into the rear view mirror at Kelli's laughing face.\n\n\"I dare you, I double dare you call Caitlin 'Grandmaw,' you hear?\" he smiled.\n\n\"Well, she's married to Grandpaw, what's that make her?\" Kelli laughed.\n\n\"Drop you off right here,\" BJ threatened and pulled into the parking lot of St. Richard's Elementary School.\n\n\"Daddy!\" Kelli screeched. \"It's still dark!\" \n\n\"So? You'll be the first one here,\" BJ laughed.\n\n\"Come on; quit wasting time. Your baby brother or sister's about to be born and you're just fooling around,\" Heather demanded.\n\nIn the car behind them, Harmony slowed and pulled into the parking lot behind BJ.\n\n\"\"We're here?\" Patrick asked, confused.\n\n\"No, we're at that school, oh wait, he's pulling out again,\" Harmony said.",
        "\"I swear to God, she is beyond blonde,\" BJ said as Harmony continued to follow them.\n\n\"And you do not need to tell your Aunt Harmony your Daddy said that, you hear?\" Heather said and slapped BJ's arm. \"Leave her alone; she's the sweetest girl.\"\n\n\"Oh, no doubt about that; Patrick really found himself a real winner there,\" BJ agreed.\n\nIn their own car, Theresa Weinstein pursed her lips as Bobby complained again about being woken up.\n\n\"Man, why I got to go, huh?\" he demanded.\n\n\"You about to be an uncle; you don't want to be there?\" Briah asked the whining twelve year old boy.\n\n\"So?\" he said petulantly.\n\n\"God, I know we don't have the same daddy,\" Briah rolled her eyes.\n\nIn the hospital waiting room, Toni smiled as she saw Michael sitting on one of the couches.\n\n\"Hey,\" she said and he stood and hugged her.\n\n\"Dad's in there with her, said it could be hours,\" he said.\n\n\"Like what's wrong?\" Toni asked, linking fingers with him.\n\n\"It's just that, I mean, God, even at nine months, she's still so skinny,\" Michael worried.\n\n\"Oh my God, you like love her, don't you?\" Toni said.\n\n\"Well, yeah, I mean, she was your best friend forever and now she's our step-mom and...\" Michael answered.\n\n\"Hey, God's large and in charge,\" BJ said, hugging his brother from behind. \"Briah know what a big girl you are?\"\n\n\"Briah knows he's a real man not afraid show his feelings,\" Briah snapped, giving BJ a hard slap to his butt. \"Call my man a big girl again and I will whip out the chocolate on your ass, you hear?\"\n\n\"Whip out the chocolate,\" Kelli hooted.\n\n\"Oops, you weren't supposed to hear that,\" Briah smiled. \"How you doing Kelli?\"\n\n\"Great; I got my report card and I got all Bs and I got an A in religion,\" Kelli excitedly told her.\n\n\"Way to go, girl,\" Briah said, squeezing the girl in a tight hug.\n\n\"Proud of you,\" Toni said, also hugging the girl.\n\n\"And I told her, give me two more As on that next report card and I'll give her five bucks,\" BJ said.\n\n\"Oh, I'll take a piece of that action,\" Michael threw in.\n\n\"Me too,\" Toni said.\n\n\"And Patrick and I will too,\" Harmony said.\n\n\"Oh, do not tell Star about any of that,\" Ed Weinstein begged.\n\nBrooke smiled at Theresa Weinstein's pinched face.\n\n\"Oh come on, we're about to be the hottest Grandmaws in town; can't look happier than that?\" Brook asked.\n\nTheresa didn't answer, just stomped over to the coffee vending machine.\n\n\"God, Brooke, you look beautiful,\" Toni complimented.\n\n\"Oh, you and your size two jeans; whatever, girl!\" Brooke laughed.\n\nIn his small cottage in Bender, Florida, Henry St. Martin couldn't sleep. With a sigh, he got up, fixed a cup of coffee and went outside on his screened in back porch. The sounds of the Florida night was soothing; that was one of the reasons Shirley had insisted he buy the little bungalow.\n\nHe bought it for her thirty two years ago and could count on one hand the times they'd actually stayed in the house. Most of the time, they had simply rented it out.\n\nThe coffee mug had a picture of a pelican on it, there was another with a crawfish and he couldn't remember what the other two had. Shirley had seen them at a garage sale in Baylor Lake, insisted that they'd be perfect for the Florida cottage, so he bought the goofy cups. The girl that was selling them for a dollar each did not have change for a twenty, so Henry smiled and told her to keep the change.\n\nHe'd found the cups on the shelf in the same box that girl had put them in, and other than sheets and his pillow and some clothes, had left everything else behind.\n\nHenry woke with a jerk; the Florida dawn had broken and the morning birds were chirping merrily. His cell phone gave a soft buzz and he pulled it out of his robe pocket. He read the text message from Barry's cell phone.\n\n'Shirley Janice Delacroix, born 5:58, 6 lbs 3 ozs, all 10 fingers and 10 toes, another red head to love.'\n\n\"Well, there you go, Shirley, you got your Janice,\" Henry said and burst into sobs.\n\nIn their home, Bob Robichaux and his wife, Judge Maria Robichaux were already awake, getting their two children ready for another day at St. Richard's.\n\n\"Well, how about that?\" Bob laughed as he read the announcement.\n\n\"Mr. Barry had a baby? Isn't he like old?\" Rebecca asked, her small face twisted in confusion.\n\n\"Uh, he's three years younger than I am, Missy,\" Bob said and gave the girl a light swat on her butt.\n\nIn his house, Jack rolled over when his cell phone chimed.\n\n\"What? What's wrong?\" Melanie, his wife asked.\n\n\"Oh, nothing's wrong,\" Jack laughed and read the text message to his wife.\n\n\"Oh, isn't that wonderful?\" Melanie asked.\n\nIn the darkened bedroom, Jack did not see that Melanie did not have her wide open smile on her beautiful face.\n\nIn her condominium, Anita heard her cell phone buzz. She pulled her hand from Merita's small breast and disentangled her legs from the blonde's legs.\n\n\"Congratulations!\" Anita tapped out a response.\n\nA thought hit her and she just had to send a second text.\n\n\"When you learn to text?\" she asked.\n\nAnita laughed when the response came that it was actually Michael that was sending out all the text messages.\n\n\"Come to bed,\" Merita demanded. \"We have the fifteen minutes.\"\n\nMerita was already rubbing her heavy pussy lips, smiling seductively. Anita smiled and crawled back into bed.\n\nAt The Wagon Wheel Day Care, Paula Bernard listened to Melanie's message and blinked. In the three and a half years she'd worked at The Wagon Wheel, Ms. Melanie had never missed a day of work.\n\nTerrie Boudreaux, the dietician listened to the message and agreed with Paula.\n\n\"I been here since Day One and ain't never seen that woman not come on in,\" she said and smiled as Muriel Garcia bounded in.\n\nTerrie started cooking the breakfast for the nine children whose parents paid for that service.\n\nTwo months ago, Tiffany Garcia, Muriel's mother, had haughtily informed Terrie that they were now vegan and handed Terrie a list of foods acceptable for Muriel.\n\n\"Well, might I suggest you feed her breakfast before you bring her on by, oh, and pack her them snacks and lunches too, 'cause as sure as God made little green apples, I ain't cooking none of this stuff,\" Terrie had smiled, handing the list back to the incensed woman.\n\nMelanie had backed up her employee.\n\n\"Ms. Garcia, Ms. Boudreaux is a certified dietician. All the foods we serve are designed to help their little bodies develop and grow,\" Melanie had stated.\n\n\"So you will not...\" Tiffany had huffed.\n\n\"Ms. Garcia, this is a Day Care, not a restaurant. Ms. Boudreaux is my employee, not your personal chef,\" Melanie had said firmly. \"You want your child on a special diet, then you're the one that needs to provide that diet.\"\n\nTiffany had struggled with it for about a week before deciding that being vegan may be trendy but it was far too much work.\n\n\"Where's Miss Melanie?\" Muriel asked as she looked around the building.\n\n\"I think she had a little tummy ache,\" Terrie smiled.\n\nAt the Weinstein home, Star and Luna Weinstein were thrilled to be aunts and promised their grandparents that they would be wonderful aunts.\n\n\"Oh! And I can teach her how to play Dominoes!\" Star said as she ate her scrambled eggs.\n\n\"Uh, let's let Shirley learn how to walk and talk and all that before we teach her Dominoes, huh?\" Seth smiled.\n\n\"Now, does your mommy put your hair in a pony-tail, or let you just run around with it like this?\" Caitlin asked,\n\n\"If it needs washing we put it in a pony-tail,\" Star admitted.\n\n\"Pony-tail it is,\" Caitlin said, giving the girl's head a sniff.\n\nSeth made both girls laugh and his wife smile when he gave Star's head a sniff and pretended to gag on the stench.\n\n\"Oh, wow, better put it in three or four pony-tails,\" he coughed.\n\n\"Hush you, might put yours in a pony-tail, stinky head,\" Caitlin said and kissed the top of his head.\n\nAt Superior Motors, Bob and Jack were not worried about dietary restrictions or hair styles as they tore through a box of Meche's glazed doughnuts.\n\n\"Damn it, I know these are horrible, but I just can't help it,\" Bob groaned.\n\n\"Yeah, but we burned up all them calories, putting up them goofy signs,\" Jack assured him.\n\nMichael Delacroix smiled widely as he spotted the 'It's A Girl!' banner that was strung in front of the building. Across the street, Side By Side restaurant also had a banner proudly proclaiming the birth.\n\n\"Well, look who thinks he can just drag his ass in whenever he feels like it,\" Bob teased.\n\nWhen Henry had announced his plans to retire, Michael had decided, Side By Side did not need two managers and gladly relinquished the reins to BJ. Henry's desk now had pictures of Briah, and BJ, Toni, and Patrick, as well as Barry and Caitlin's wedding. More than one customer had commented on his good looking family.\n\n\"Yeah, yeah, oh, hey, thanks for leaving me one measly ass doughnut,\" Michael smiled.\n\n\"So, tell us all about it, huh?\" Jack prompted.\n\n\"Six pounds three ounces, huh?\" Bob smiled. \"Oo-wee, our Rebecca was a little heifer; eight pounds nine ounces.\"\n\n\"Genetics, I'll bet,\" Jack said, patting Bob's stomach.\n\n\"Butt hole,\" Bob laughed, giving Jack a punch to his shoulder.\n\n\"Wow, and y'all actually manage to sell a car every now and then?\" Michael smiled.\n\n\"Amazing, right?\" Jack said. \"We're just as surprised as you are.\"\n\nIn the small house that they owned, Melanie sat at the kitchen table and wrote a note on her puppy dog tablet.\n\n\"My Darling Jack,\" she scrawled. \"You have been the love of my life since the day you asked me to run off to Mexico with you...\"\n\nJack Landry had come into the bank where Melanie Labbe worked and asked the beauty to run off to Mexico with him. She had counted up the deposit for Huvall's Texaco and smiled and told him they would not get very far.\n\n\"Then how about having Mexican with me tonight?\" he asked.\n\nShe was surprised; most people, looking at the leg braces and the crutches, did not ask the pretty girl for dates.\n\nThey had married and did run off to Mexico, for a wonderful Honeymoon. Their joy was tripled when Melanie discovered that she was pregnant.\n\nThen she miscarried. Her doctor was grim, but told the heartbroken couple that Melanie would never be able to bear a child to full term.\n\n\"Please find yourself a woman that can give you a son,\" Melanie wrote.\n\nTheir three dogs were a poor substitute for the son that Jack wanted. Their three dogs were a poor substitute for the daughter that Melanie wanted to finger paint with, and take to ballet classes.\n\n\"All my love, forever,\" Melanie signed the note, then stood and pulled herself up in the chair.\n\nShe locked her braces in place and twisted the black garbage bag around the ceiling fan.\n\nShe knew the fan was sturdy; her big brother David and Jack had attached the fan to a three inch eye bolt that Jack had secured to a joist in the attic.\n\nThe bag was cumbersome, slippery, but Melanie finally managed to knot it.\n\nThen she used her crutches to shove the chair backward. Lollypop, their apricot colored poodle yapped, frightened by the chair as it skittered across the linoleum floor.\n\nIn her Kindergarten class, Star Weinstein stood in front of the class and announced that her big sister had a baby girl.\n\n\"Her name is Shirley and I'm her aunt,\" the girl happily said.\n\n\"Shirley? That's a stupid name,\" Anthony DeSalvo said.\n\n(Anthony liked Star, a lot.)\n\n\"Shut up! It is not!\" Star yelled at him. \"Miss Shirley was Caitlin's best friend and then she died and now Caitlin's going to name all of her babies Shirley!\"\n\nIn her fourth grade class, Kelli announced that her Grandpaw had a baby girl.\n\n\"Your grandmother had a baby?\" TeddiAnn Baggett asked.\n\n\"No, no, she's married to my Grandpaw,\" Kelli said, then laughed.\n\n\"But I told my Daddy I was going to call her Grandmaw and he said he was going to leave me here and it was like one o'clock in the morning! He even pulled up in front of the building,\" Kelli laughed at the memory.\n\n\"Oh, that does sound just like Mr. Barry Jacob Delacroix Junior,\" Sister Rachel smiled. \"He was such a character when he was in my seventh grade class. The worst, though, was your Uncle Michael; I almost quit teaching because of that boy!\"\n\n\"He's marrying my Aunt Briah,\" Kelli informed the good sister. \"He's all grown up now.\"\n\nIn her condominium, Stacy Falgout was not concerned with the birth of Shirley Janice Delacroix; she was too busy emptying her stomach into her commode.\n\n\"Oh my God, I better not be...\" she said aloud and again felt more of her stomach rush up.\n\nDr. Mark Farbacher's office had an appointment in one hour's time and Stacy climbed into the bathtub.\n\n\"People could tell I was clean and sober when I started using my fair share of soap and toothpaste,\" Precious would often joke.\n\nStacy heard her neighbor's door slam shut and actually smiled. When she first met Anita Lopez, she had assumed, just because the girl was Latin, she was lazy and a user. She had no idea how much the nineteen year old girl was worth, but guessed it was well over a million dollars. She had a meeting with a client in the afternoon to show them five homes and two of the five homes were Lopez Properties. Yesterday, she had rented out one of the apartments at Lopez Square.\n\nShe laughed, Glen Peters, her ex-husband, and an architect, had submitted bids to design homes, as well as the building for Lopez Square. As usual, Glen had overvalued his worth and Anita simply went on the Internet, found some house plans, then went to Kessling Building on campus, the Graphics Arts building, and found Professor Whitehead to approve the preliminary sketches.\n\n\"Tell you what, Ms. Lopez, promise me you'll take at least one of my classes next semester,\" the old man had fawned over the Latin beauty and had actually blushed hotly when she playfully kissed him.\n\n\"But I wouldn't get any work done and you wouldn't either,\" she teased and counted out five one hundred dollar bills. To pay him for his time.\n\nBut she did in fact sign up for his 'Basic Design Principles' class for the Fall Semester.\n\nGlen Peters had called Stacy.\n\n\"Why yes I do know Anita Michelle Lopez,\" Stacy had breezily admitted. \"A very smart, very enterprising young lady. You know, when Schaub Building Materials wanted too much for their recycled materials, she is committed to being as green as possible, and by the way, she simply went directly to the manufacturer and arranged for delivery directly to the work sites.\"\n\n\"Think you could help me out here?\" Glen had begged. \"See, I submitted a couple of bids and...\"\n\n\"Padded the hell out of them for, let me guess, 'office supplies' and 'incidentals' right? Most of which, we know, will disappear up your nose,\" Stacy had laughed.\n\n\"Fucking bitch,\" Glen had spat.\n\nLopez Square had also been designed by the Internet and tweaked by Professor Whitehead. The ground floor had two office suites, both of which were already rented, even though the building would not be ready for another three weeks. The second and third floors had four efficiency apartments and a common laundry room on the ground floor, behind the two office suites. Four of the apartments were also already rented, even though they were not yet completed.\n\nStacy dressed, drove herself to Dr. Farbacher's office and smiled tightly as she filled out the paperwork.\n\n\"I am almost forty six years old; this is the last thing in the world I need,\" she said to herself.\n\nThe nurse called her and she followed the older woman down the maze of halls to a room.\n\n\"Still sober?\" the nurse asked in a low voice.\n\n\"Yes ma'am,\" Stacy smiled, then smiled wider. \"In fact, I just realized! Today I have nine months!\"\n\n\"Good for you, girl, good for you,\" the nurse encouraged.\n\nThat evening, Jack smiled as he pulled up into their driveway and saw his wife's car. Normally she did not get home until six thirty, sometimes seven o'clock, depending on when the last child was picked up by their parents.\n\n\"Hey Sweetheart,\" he called out. \"Hey since you're home early, why don't we...\"\n\nOne of her crutches lay on the floor, the other was still attached to her forearm by the plastic cuff.\n\n\"Melanie, no!\" Jack screamed in horror.\n\nChapter 36\n\nChelsea Guidry watched as the cameraman counted down from three, her smile already on her face.\n\n\"Is it a pizza? Is it a taco? Whatever it is, the students here at the University of Louisiana at DeGarde are crazy about their pizzacos.\"\n\nThe camera panned to show the long line of students and faculty lined up in front of the trailer.\n\n\"It won't open for another fifteen minutes, but as you can see, no one wants to be late,\" Chelsea said.\n\nThe attractive brunette when down the line, interviewing the people.\n\n\"Aw cher, it's hot and it fills you up,\" a girl said with a heavy Cajun accent.\n\n\"This beautiful woman is Bailey Breaux,\" Jason Breaux smiled, pointing to a short, slightly pudgy woman with a mop of unruly hair and big brown eyes.\n\n\"And this is Jason Junior,\" Jason went on, pointing to her belly.\n\n\"Shut up, it's a girl! He knows it's a girl, he's just...\" Bailey squealed.\n\n\"And whatever Momma wants, Momma gets and Momma wants two bean pizzacos and a peanut butter and a chocolate chip cookie,\" Jason smiled.\n\n\"You jam the two cookies together like a sandwich,\" Bailey explained.\n\nAnita had not recognized the phone number on her cell phone, but had answered it anyway. \n\n\"Um, hi, um, this is Sarah Juarez,\" a woman had stammered. \"And I um, I had one of them pizzacos today?\"\n\nAnita swore she would kill whomever had given out her phone number.\n\n\"And I uh, I saw you don't sell any kind of desserts and my roommate? She says my cookies are the best,\" Sarah had said.\n\n\"How you get that History Channel?\" Honey called out from the living room.\n\n\"And I asked Dean Sims,\" Sarah revealed the source of leak.\n\n\"Your friend is useless,\" Merita playfully accused as she grabbed the remote control and found the History channel.\n\n\"There's four women here,\" Anita said, giving her address. \"Bring enough samples.\"\n\nTwenty minutes later, Sarah Juarez, a short Latin woman came in and did a horrible job of presenting the cookies. But Anita had to agree, the cookies were soft, chewy, gooey, and Maggie, who kept claiming she shouldn't, she was on a diet, kept going back for 'just one more.'\n\nSarah didn't even know how much to charge for the cookies.\n\n\"Merita, think you could put that pretty little head to use and help her figure it out?\" Anita smiled. \"I mean, you do have a Master's in Business, right?\"\n\nChelsea continued down the line, asking questions.\n\n\"I uh, Dean Sims says it's owned by one of the students,\" Professor Huxton stammered, ill at ease outside of his Algebra classroom. \"And all the employees are students too and uh, our students are the life of our university, so I believe in supporting our students.\"\n\n\"But do you like the pizzaco?\" Chelsea asked.\n\n\"Huh? Oh, oh yeah, I mean, the salsa is the best! I mean, it's even better than Manny's,\" the unpopular teacher stammered.\n\n(The moment the segment aired on Performance 12 News at noon, the telephone, email, and facebook page of Manny's Restaurant was flooded.)\n\n\"So, is it a pizza? Is it a taco?\" Chelsea said, holding up one of the beef pizzacos for the camera. \"We may never know, but it's a favorite here.\"\n\nShe took a bite and chewed.\n\n\"Son of a bitch! This IS good!\" she mumbled around her mouthful.\n\nThe next day, Anita scurried into Professor Jurnigen's class and took her seat.\n\n\"I saw your little food truck on the news yesterday,\" he sneered.\n\n\"Yeah!\" Anita said. \"Someone said the salsa's even better than Manny's and now they want a showdown!\"\n\n\"I uh, noticed that the owner didn't' want to be interviewed; any idea why not?\" he asked, the disdain dripping from his lips.",
        "\"Said it's hard enough being a student,\" Anita replied truthfully. \"People find out, they're going to want money, or a job, or free food. People know I work there and they want free food from me. I keep telling them, I start giving out free food and I'm out of a job.\"\n\nBut the professor's scathing remarks had started the wheels in Anita's head. The trailers were in a fixed location. The semester was winding to a close and it would be a few weeks before she could again open the trailers and start generating income.\n\nBut a food truck would be mobile, could go to St. Elizabeth Public Utilities, or the parish courthouse, or the Trauma Center.\n\nIn another classroom in another building, Toni Delacroix sat and watched Professor Ashley McLean as the woman excitedly discussed the rhythmic patterns of American Poetry.\n\nToni had heard whispered rumors that the attractive woman was gay, but there were no outward signs. The woman wore her brown hair to just below her shoulders, favored simple shifts and sandals, minimal cosmetics and light pink finger and toe nail polish. \n\n\"The cadence leads us from one line to the next,\" the woman said, waving her arm excitedly, making her small breasts jiggle in her flouncy top. \"Dah de dah de dah de duh!\"\n\nToni watched as the woman took a sip from her water bottle and wondered if the woman had ever heard of watersports.\n\nShe smiled; thinking of a botched date she'd had the previous evening.\n\nRayanne Williams was a black girl; normally Toni did not find African-American women attractive, but Rayanne had close cropped hair and an engaging smile, or at least that's what her profile's photograph showed. The two nineteen year olds met for coffee at Jitters and were cautious, guarded around each other for a few minutes.\n\n\"Oh, hey, girl, you like them water slides, huh? That one out in Jack's Creek, just past Elgee?\" Rayanne asked.\n\n\"Water, who said I like water slides?\" Toni had asked, baffled.\n\n\"Well uh, I mean, your profile,\" Rayanne said, looking around to make sure no one was eavesdropping.\n\n\"Said I like watersports,\" Toni had giggled.\n\n\"Well yeah, like water skiing and...\" Rayanne had said.\n\n\"No, like peeing,\" Toni had smiled, sure that her face was about to burn from the hot blush.\n\n\"Wha-a-at!\" Rayanne had said.\n\nA few minutes later, both girls agreed the date was over.\n\n\"Wouldn't you agree, Ms. Delacroix?\" Professor McLean smiled happily at one of the few students that seemed to be paying attention.\n\n\"Oh, definitely,\" Toni agreed. \"If it ended one syllable too soon, or like went one over, it'd be like real awkward.\"\n\n\"Precisely!\" the woman said, slapping her hand to emphasize the rhythm.\n\nAnd I know you're all saying 'who cares? It's just a bunch of stupid poems by a bunch of dead people,'? But tonight, when you're watching television, I want you to pay attention to the commercials. Pay attention to how they use rhythms to hold your attention,\" the woman smiled, looked at the clock on the wall and waved her hands at them. \"Go, go, I know it's Friday and you could care less.\"\n\nThe woman took another sip from her water bottle and smiled at Toni.\n\n\"At my age, it's so important to stay hydrated,\" she said.\n\n\"Think it's important like at any age,\" Toni agreed as they started walking down the hall.\n\n\"Oh, just wait until you're forty seven,\" the woman tittered. \"You'll be like 'oh why didn't I take better care of myself?'\"\n\n\"You're forty seven?\" Toni gasped. \"I thought you had to be like, thirty five, maybe thirty six.\"\n\n\"Oh, quit trying to butter me up!\" the woman laughed putting her hand on Toni's arm. \"You're already making an 'A' in my class.\"\n\n\"Professor McLean, I'm not...\" Toni said as the woman pulled a set of keys out of her skirt's pocket and unlocked a door.\n\n\"When it's just us, you can call me Ashley,\" the woman smiled as she entered a cluttered, cramped office.\n\n\"I swear, I don't know how you girls can stand to wear your jeans so tight,\" the woman said as she flopped down in her chair. \"That would drive me crazy, all that friction, rub rub rub.\"\n\nToni leaned over and kissed the woman on her lips.\n\nOutside of the public library in Bender Florida, Jack and Henry sat on a concrete bench and listlessly watched humanity go by. Red's was open, but Ralph's green Gremlin was parked out front and Henry did not like the surly patron of Red's. So they sat and watched the world go by.\n\n\"Heard from Kelli other day,\" Henry said. \"Kid thinks it's a hoot; calling a Louisiana number and talking to me in Florida.\"\n\n\"Find a woman, she said,\" Jack repeated himself again. \"I mean, shit, Henry, if I'd wanted...\"\n\n\"Hey,\" Henry agreed, nodding.\n\nJack's cell phone chimed and Henry smiled.\n\n\"Bet that's David again; which one of the dogs you think he wants to kill today?\" Henry asked.\n\nDavid Labbe, Melanie's older brother, was watching the house and taking care of the three dogs, or 'crab bait' as he called them, while Jack got his head on straight.\n\n\"Probably Lollypop; Melanie never could get that bitch do right,\" Jack smiled pulling out his cell phone.\n\n\"Nope, it's Anita,\" he smiled.\n\n\"Anita Lopez? Sweet girl,\" Henry said.\n\n\"Hey, Henry, when you was twenty, what'd you want?\" Jack asked as he read the text message.\n\n\"Shirley,\" Henry said and watched a black teenaged girl stroll past, dressed in a white thong bikini.\n\n\"Well, yeah, besides that,\" Jack said as Henry admired the girl's tight buttocks. \"I mean, at twenty? All I wanted was a piece of ass, a bad ass car and a six pack of beer.\"\n\nHenry smiled as the girl looked over her shoulder to make sure she had their attention and waggled a playful finger at him.\n\n\"And what does that twenty year old want?\" Henry asked, nodding toward the cell phone.\n\n\"A couple of food trucks,\" Jack said.\n\n\"Come on, Jack, let's go home,\" Henry said as the girl disappeared from view. \"It's time we rejoined the living.\"\n\n\"What you mean?\" Jack asked, following Henry.\n\n\"Little black girl, maybe eighteen, nineteen, couldn't have been more than twenty years old walks by, ass all hanging out in one of them thongs and you don't even look up,\" Henry said.\n\n\"Aw damn,\" Jack complained and looked around for the girl.\n\n\"And I know you're not gay, even if you do close your eyes when we kiss good night,\" Henry said.\n\n\"Hey!\" Jack protested. \"And who's the one keeps dropping the soap, huh?\"\n\n\"Well it's not my fault; they make the soap too slippery,\" Henry said as he unlocked the cottage door. \"So, if you're not gay, you got to be dead. Problem is, Jack, we're too fucking young to be dead. I'm only sixty six and you're not even forty yet.\"\n\n\"I'm going to grill up those two steaks, take a massive shit, then we're on the road, okay?\" Henry said as he dug out the two steaks.\n\n\"Hey, Henry?\" Jack called out from his bedroom.\n\n\"Yeah?\" Henry called back, turning on the gas stove.\n\n\"Love you, man,\" Jack said, dumping clothing into his large suitcase.\n\n\"Homo,\" Henry playfully accused.\n\nIn Bender, Louisiana, in the Delacroix home, Barry stood in the doorway of the nursery and smiled as he watched his young wife. Caitlin stood at the rail of Shirley Delacroix's crib, gazing with wonder at the sleeping infant.\n\nCaitlin squatted and peered at the small, peaceful face.\n\n\"You came from our love,\" she whispered to the baby. \"Your mommy and daddy love each other so much and that's why we have you.\"\n\n\"You ever leave that poor baby alone?\" Barry asked and Caitlin gave a guilty little squeak.\n\n\"I just can't believe it,\" Caitlin whispered and kissed him.\n\nCaitlin was still the bone thin girl with the sharp nose and protruding ears and carrot orange hair and multitude of freckles that had stood in front of him and begged him for a date. But even though she still physically looked the same, physically, she was different.\n\nShe was no longer the brash young lady that seemed to just crash into a room. Now she had a certain poise, almost an elegance about her.\n\n\"Hey, while she's asleep why don't we see if the springs on our mattress still work?\" Barry whispered in her ear, cupping her bony buttocks and giving them a squeeze.\n\n\"Oh God, have you seen my stretch marks?\" Caitlin whined.\n\n\"Yes, and I want to see them again,\" he assured her.\n\n\"Pervert,\" Caitlin giggled as she walked to the door of the nursery, already unbuttoning her sleeveless summer dress.\n\nIn her condominium, Anita nodded to signify that she'd heard Maggie when the woman let her know that she was leaving for the day. Anita got to her feet, shut down the computer, and turned off the office light.\n\n\"I get ice,\" Merita said and dashed for the kitchen.\n\nAnita walked into her bedroom, pulling the simple shift off. She let out a grateful sigh as she unhooked her bra and let her heavy breasts bob free.\n\nIf Maggie, who did frequently fix herself glasses of iced water ever noticed the large Pyrex dildo in their freezer, she did not say anything.\n\nAnita climbed into the bed, knelt down and put her shoulders to the mattress.\n\n\"Oh, but I must...\" Merita moaned happily and scrambled onto the bed behind Anita.\n\nAnita sighed happily as she felt her lover's hot tongue jam itself into her rectum.\n\nMerita's small hand, still cold from holding the glass dong, cupped Anita's hairless mound, then a slender finger spread Anita's inner lips and found Anita's clitoris.\n\n\"Oh,\" Anita sighed.\n\nShe forced herself to relax as the ice cold dildo pressed against her anus. The harder she fought it, the more uncomfortable it would be.\n\nThe cold phallus slowly warmed as Merita slid it in and out of Anita's rectum.\n\nAnita shook; the anal play was very stimulating but it did not bring her the relief she wanted.\n\nJust when she was ready to scream, Merita brought the second Pyrex dildo, the one she'd been warming in a cup of hot water to Anita's splayed pussy lips and jammed it into Anita's wet pussy. It made a sloshing sound and Anita shook in a violent orgasm.\n\n\"And now we make love,\" Merita sighed as she pulled both glass dongs from Anita and lay them onto the kitchen towel.\n\nMerita softly, , tenderly kissed Anita's sweating face. The soft tender touches were a direct contrast to the blonde beauty that had been roughly, almost brutally sodomizing Anita a moment earlier.\n\n\"I love you,\" Anita said as they kissed.\n\n\"And I love making love with you,\" Merita whispered.\n\nProfessor Ashley McLean's Baylor Lake home was much like her office. Small, cluttered. The woman smiled at Toni and linked fingers with her.\n\n\"So may I offer you a drink? Oh, oh, I just got a bag of this killer weed; you smoke?\" the woman asked.\n\nShe kissed Toni's pink lips rather roughly.\n\n\"Or you just want to play?\" she asked and bit down on Toni's lower lip.\n\nAshley's bedroom was as bad as a teenage girl's bedroom; clothes, books, CDs scattered everywhere. The bed was unmade and there were mounds of clothes on one side; obviously Ashley slept on the other side.\n\nThe woman's body was compact; small breasts with large brown nipples, a slightly softening belly, slightly narrow hips, and a profusion on brown pubic hair with some gray threads woven in. She also had tufts of brown-gray hair under her arms.\n\nToni undressed and neatly stacked her clothes in the corner; not wanting to lose her expensive jeans or silk blouse amongst the clutter.\n\nAnd Ashley's lovemaking was a great deal like her house and her office. Haphazard, cluttered, unfocused.\n\n\"My last husband,\" Ashley murmured after they shared a joint. \"Son of a bitch said I was the worst fuck he'd ever been with.\"\n\n\"Then like why did he marry you?\" Toni asked and lightly kissed one of Ashley's nipples.\n\n\"My credit was good,\" Ashley shrugged and lightly kissed Toni's lips. \"Maxed out all of our credit cards, asked for a divorce, and then declared bankruptcy. Ass hole.\"\n\n\"That when you decided you were gay?\" Toni asked.\n\n\"Gay? I'm not gay,\" Ashley tittered. \"Boy needs a passing grade? I make him fuck for his grade. Girl needs a 'C' then she learns to eat pussy and act like she likes it.\"\n\nShe gave Toni's lips another kiss.\n\n\"You're one of the few that wanted to fuck just to fuck,\" the woman admitted.\n\n\"But what about love?\" Toni wondered.\n\n\"Love?\" Ashley snorted. \"Doesn't exist. Take it from a woman's been married four times; there's no such thing.\"\n\n\"Like I hope...\" Toni protested mildly.\n\n\"Oh, the poets may wax on of the many splendors of romance; even they knew it was only a mist,\" the woman said and lighted a second joint.\n\n\"You ever do fisting?\" she asked, handing Toni the joint.\n\nOutside of the small house they were buying, Ed Weinstein stood and silently prayed. He knew Brooke was a worrier. She worried and fretted about everything but especially about money.\n\nBrett Johnson had called Ed, Nine, and Estelle into his office and announced to the three employees that he and Michelle had declared bankruptcy; the hospital bills from Graham's injuries having depleted their savings.\n\n\"We're shutting down,\" Brett said. \"We're having a 'Going out Of Business' Sale this Saturday, and that's it.\"\n\nHe and Brooke had a small son, Aries Edmund Weinstein, they had a house note, they had Star's tuition, and Luna's upcoming tuition.\n\nHe heard the kitchen window slide open.\n\n\"Get in here,\" Brooke called out to Ed. \"Standing out there praying isn't going to make it any better. Get in here and tell me what it is.\"\n\nAt his small house, his dogs greeted Jack with happy yelps and barks and whines, and David used his cane to hobble over and greet his brother in law with a hug.\n\n\"David, you remember Henry, huh?\" Jack introduced the two.\n\n\"Beer? Or you got a drive ahead of you?\" David asked, hobbling to the refrigerator.\n\n\"Henry's going to be staying here until he can find him a home,\" Jack said.\n\n\"Oh good, anyone can see this place needs a man's touch,\" David said.\n\n\"Ha ha,\" Jack smirked. \n\n\"Bye Lollypop, bye you God awful little bitch,\" David crooned to the still wiggling beast.\n\n\"God damned worst animal I have ever seen in my life,\" David muttered as he petted the animal.\n\n\"Hey Brother in law, I owe you anything?\" Jack asked. \"I know you had to do some improvements; no way in hell you just stood still.\"\n\n\"Had to run a new line for the dishwasher but I needed half that line at my house anyway, so no, you don't owe me shit,\" David said.\n\nAt his own house, Ed looked on as Brooke breastfed their son. The boy was destined to be a heartbreaker; he had a lot of his momma's features and his mop of carrot orange hair.\n\nBrooke looked up and smiled happily at her husband.\n\nEd was still amazed. He had told her the harsh news, but instead of getting upset as he had imagined she would, Brooke had looked at him, kissed him, and then resumed fixing their dinner.\n\n\"Well, Cowboy, there's four little Indians know you'll take care of us. You always have and that's not going to change now,\" Brooke said.\n\n\"Honey, I'm unemployed,\" Ed had stuttered.\n\n\"So?\" Brooke shrugged. \"My husband, who stood in front of God, a steamboat captain and his daughters and promised he'd be my strength isn't going to fail. My husband's going to go into business for himself and make his wife and his children proud of him.\"\n\nNow, Star and Luna were bathed, in their pajamas and were sound asleep in their beds. They weren't worried about money, bills, food, and school.\n\nAries had a dry diaper and a full belly. He wasn't worried.\n\n\"Thank you Baby,\" Brooke softly said, looking at Ed.\n\n\"For...?\" he asked.\n\n\"For loving me, for giving me a sweet little baby boy, for letting me know that it's going to be all right,\" she said and pulled Aries away from her nipple.\n\n\"Now,\" she said as she lay the sleeping baby boy in his crib. \"I know you're just sick and tired of my blow jobs, but the doctor still hasn't cleared my pussy for sex yet so...\"\n\n\"God, if I have to put up with one more blow job, I think I'll scream,\" Ed sighed dramatically as Brooke got to her knees in front of him.\n\nChapter 37\n\nCaitlin Delacroix waked up the aisle on the arm of the best man, smiling happily. At the altar, Barry leaned and kissed her before releasing her arm.\n\nBarry paused and kissed her again and stepped up next to Michael.\n\nStanding in her pew, the mother of the groom seethed; she was sure that second kiss was just to rub it in her face. Her ex-husband had a much younger, much more elegant wife.\n\nInside the small room, Briah smiled excitedly as Ed stood stiffly in his tuxedo.\n\n\"And there's our cue,\" he smiled as the music swelled.\n\nHe gave Briah one last kiss before lowering her veil.\n\n\"Thank you so much for allowing me to do this,\" he said.\n\n\"Daddy, who else would I get?\" Briah asked. \"The father of the bride is supposed to walk his baby girl down the aisle.\"\n\n\"And who gives this woman to be wed?\" Father McNamara asked as Ed and Briah approached.\n\n\"Her mother, her sister, her brother, and I do,\" Ed managed to choke out.\n\nAgain, Darlene pursed her lips. She was sure that Briah was a very sweet young lady but it was disgraceful; her son was marrying a black girl. She had not known that last night when they'd gone to the rehearsal dinner, arriving too late for the rehearsal itself.\n\nDarlene had assumed that the colored girl was one of the servers and asked her for a vodka martini.\n\n\"Mother, really,\" Michael hissed, face crimson.\n\n\"What? We're supposed to bend over backward to accommodate them just because they're black?\" Darlene had snapped. \"It's her job, isn't it?\"\n\n\"You may kiss the bride,\" Father McNamara intoned and both bride and groom smiled happily at each other.\n\nIn her pew toward the rear, on the groom's side, Anita Lopez smiled sadly as she watched the beautiful ceremony. She applauded with everyone else when Father Jack McNamara introduced Mr. and Mrs. Michael Aaron Delacroix.\n\nShe laughed when Briah let out an exultant \"Yes, yes, yes!\"\n\nThat little outburst generated louder applause.\n\nWhen Anita had received the invitation, she thought very briefly of just sending a wedding gift, but then thought Daddy would be a little disappointed in her if she didn't show up for his son's wedding. Disappointing Daddy was the last thing Anita wanted to do, so she responded with 'Anita Lopez and guest' and then informed Merita of the invitation.\n\n\"Oh, but I will be in Santa Barbara; I have the job,\" Merita said breezily.\n\nJust as breezily, the blonde beauty had packed her belongings, stolen both Pyrex dildos, and left without a backward glance.\n\nAnita put on a happy face as Michael and Briah walked down the aisle toward the door. Michael saw her and reached over and squeezed her hand playfully. Right behind them, Daddy smiled happily at her and also squeezed her hand. Both BJ and Heather, right behind Barry and Caitlin, mouthed the word 'hi.'\n\nAnita felt a few tears slide down her face as her family continued their procession.\n\nShe then followed the throng to the recession hall.\n\n\"Honey, why didn't you tell Bobby who you were?\" Barry asked after giving Anita a hug and a kiss. \"He would have seated you up at the front.\"\n\n\"But I'm just...\" Anita stammered.\n\n\"Family, you hear?\" Michael echoed.\n\n\"Hi! Anita, this is Harmony, I don't know if you met her but you should have already gotten the invitation,\" Patrick said proudly as he introduced Anita to a happy young blonde woman.\n\n\"We're getting married in two weeks!\" Harmony shrilled. \"Forgive me, I don't normally sound like this, but oh my God! We're getting married!\"\n\n\"And of course you know Heather and MY daughter Kelli,\" BJ said proudly. \"We're looking forward to seeing you next Saturday too.\"\n\n\"Uh, YOUR daughter?\" Heather smiled as BJ put a loving arm around the nearly ten year old girl.\n\n\"Problem?\" BJ asked.\n\n\"Yeah, Mom, problem?\" Kelli demanded, squeezing BJ tightly.\n\n\"Uh, she's OUR daughter,\" Heather smiled, kissing BJ."
    ],
    "authorname": "JimBob44",
    "tags": [
        "lesbian romance",
        "business",
        "college",
        "landscaping",
        "wedding",
        "small town",
        "louisiana",
        "widower",
        "prgnancy",
        "watersports"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/wealth-pt-04"
}