{
    "title": "Industry Conference Ch. 02",
    "pages": [
        "I stare at her sleeping form. She was too exhausted, too spent, to fight me after I put her to bed. But I still pulled her underneath me to sleep so I would feel if she tried to sneak away. To my surprise, she didn't move or speak, other than a request to use the bathroom.\n\nMy right hand ghosts over the delicate skin of her side. I slip it underneath the blanket and feel for the heat of her pussy. She begins to stir at my touch, no doubt sore from last night. She isn't wet yet, but she will be soon. I roll her onto her back as she moans in protest in her sleep. I close my mouth around one of her nipples, and she arches into me. Her hands find my hair, and she grips tight, holding me against her. She probably thinks this is all a dream. I don't second guess her willingness. I will take what I can get.\n\nI bite down on her nipple, and her eyes fly open. She glances down at the source of discomfort, and her hands quickly begin pushing at my head in an effort to put distance between us. I chuckle as I release her nipple from between my teeth. There's my girl...\n\n\"Get up.\" She holds the blanket to her chest, not making any attempt to obey. I grab her arm and yank her naked body to mine, feeling her smooth skin collide against me. Her body fits so perfectly in my hands.\n\nI pull her to the bathroom, closing and locking the door behind us. I turn on the shower and adjust the temperature, letting the steam fill the room. She looks straight ahead, avoiding my gaze. Her arms are crossed in front of her. I really should pry them away from her. Remind her that she should not be from hiding from me. But I'll give her this brief reprieve. She still has yet to say a single word to me since last night. She's not much of a talker, my new obsession.\n\n\"In.\" She steps into the shower on shaky legs, arms still in front of her breasts. The water hits her face, and she tilts her head to receive it. I step in behind her. She doesn't even acknowledge my presence, but I don't care. She will.\n\nI take the soap and lather it between my hands. Beginning at her shoulders, I gently cleanse her delicate skin. As much as it pains me, I only lightly wash her breasts, feeling the bite marks under my fingertips. They must be sensitive. I pay careful attention to the juncture of her thighs and her ass, cleansing her of the evidence of last night's activities. She'll be a new, blank canvas for me. And I cannot wait to paint her again and again.\n\nI turn her around to face me. Her eyes are on the shower floor. I grip her chin tightly and lift it in an effort to see those green orbs once again. I still, waiting for her to look at me. The fact that she's denying me her gaze angers me more than it should. My grip tightens, and I see her flinch at the pressure. Fine. She isn't ready to look at me. There are other things I want from her. I remember the heat of her mouth on me last night, and my cock surges to attention.\n\nI push her shoulders down. Instead of lowering to her knees, she backs away. I'd expect nothing less from my feisty angel. I grab her wet hair and bring her back to me. I can't resist lowering my mouth to hers, but she turns away, again denying me any form of closeness. The anger resurfaces, and I yank her hair downward. She cries out as she falls to her knees, and her hands come out to brace against my thighs.\n\nMy cock points menacingly at her face. When she doesn't move to touch it, I growl in warning. \"Take it in your mouth.\" I don't want to force it in. I want the vulnerable, exquisite torture she gave me last night when she thought making me come would end this encounter. I see her chest heave with a sigh, and I know I have her.\n\nShe leans forward tentatively, as if scared. Instead of opening her mouth like I anticipate, she places a chaste kiss to the tip. The unexpected tenderness of the act makes my knees weak. I brace one hand on the wall behind her. Without retreating, she snakes her tongue out of her mouth to caress the head of my cock. Her hands slowly inch up my legs, one finding its home at the base of my shaft, twisting gently, the other gripping my balls. Her movements are languid. Unhurried. Is she stalling? Attempting to delay my domination of her body? I don't know, and I don't care.\n\nI gaze down at the most erotic sight below me. My obsession is on her knees, worshipping my cock as if she enjoys the act. The hot water rains upon us, the wetness gliding down her head and back. Droplets gather on her eyelashes. She finally looks up, her eyes meeting mine. And I feel it like a punch to the gut. She withdraws my cock from her mouth with a pop. I'm about to grab her head and plunge back inside when I feel a cool sensation on the tip. She's blowing gently against my wet skin, her eyes never leaving mine. The temperature contrast causes goosebumps to emerge across my body. I cannot stop myself from groaning.\n\nHer open mouth slides down the sensitive underside of my shaft. The water droplets gently hit my now-exposed cock as her tongue leaves a trail of heat in its wake. I hiss when I feel her take my balls into her mouth, one at a time. As she makes her way back to the tip of my cock, I grip her hair with one hand, while the other trails to her chest. I feel her still underneath me, as if my touch has broken whatever spell she was under. But I refuse to let her shut me out. I flatten my palm against her breast, her nipple trapped between my index and middle finger. The dual sensation of squeezing her breast and pinching her nipple causes her to flinch backward, but my hand on her hair holds her in place.\n\nShe whimpers around my cock, and I feel the vibration through my entire body. Her eyes close tightly as I use her hair to bring her further down my shaft. I want her nose to touch my stomach. I withdraw enough to let her take a breath before slowly thrusting forward again. A sound of protest erupts from her throat, and I feel her teeth graze me. But she doesn't bite. Is she trying to ask me to stop? Unfortunately for her, the hint of pain causes my cock to swell. She looks into my eyes, silently pleading.\n\nMy heart thumps rapidly in my chest. My hand strokes her cheek, attempting to soothe her. She leans into my touch slightly. \"You feel amazing.\" I hope my words reassure her. \"I need to feel your throat, angel. Relax.\" I wait for a brief moment, hoping for some sign of assent. A nod. A moan. Her glorious whimper. But she gives me nothing before she lowers her gaze. I advance with my hips as I pull her head forward onto my cock. \"Breathe through your nose.\" I hear her shallow inhales as she wills herself to be still. Long gone is the tender, enthusiastic temptress from before. Her tongue is limp as my cock slides on top of it. Her eyes remain on the ground. Where is the fight in her? How has it fled so quickly? Her submission shouldn't anger me, but it does. Coming down her throat, with her like this, suddenly doesn't seem satisfying.\n\nMy body rebels as I pull out abruptly from her mouth. I lift her to her feet and hold her head still with both hands as I crash my mouth to hers. She keeps her lips tightly sealed. I reach down to pinch and twist her nipple roughly. As I hoped, her mouth opens on a gasp. I take advantage, my tongue diving to tangle with hers. Her hands come to my chest, pushing in vain. Her teeth bite down on my lower lip, and I taste blood. I pull back to examine her eyes. The fire in them is back with a vengeance, and all feels right again.\n\nMy finger finds her bare pussy. I watch her face as I enter her. Her cheeks flush as she looks away, no doubt aware of how wet she is for me. My cock is painfully hard from being denied entrance to her body. I'll rectify that soon. I turn the water off and direct her out of the shower. I take my time drying her body, enjoying how she shivers involuntarily at my touch.\n\nI guide her out of the bathroom with a hand on her lower back. As she reaches the bed, I lean down to pick up her discarded tank top from the floor. Confusion crosses her features as I bend her over, her upper body falling onto the bed while her feet remain flat on the floor. I press my hard cock against her ass, relishing the sharp intake of breath I hear beneath me. I'll spare her this time. But we will not leave this room without reliving the memory of how her ass felt around my cock.\n\nWithout warning, my hand comes down hard on her ass. Her upper body bolts up from its position, and I press her down back to the bed. I continue my rough treatment, watching the round globes bounce and turn pink before my eyes. Her whimpers grow louder, her movements more erratic. I alternate between swift smacks and rough gropes of her cheeks, and I see her wetness begin to glisten on her thighs. I wonder if her face is as pink as her ass.\n\nFinally, she brings her hands up in a weak effort to stop the assault. It's what I have been waiting for. I grab them both, pinning them to her lower back as I wrap them with her tank top. The thin material secures her perfectly. She tries to roll to the side the moment she senses my intention. My angel is back... I missed you, I think, but I don't dare say it aloud.\n\nHauling her up by her fresh, makeshift binds, I seat myself at the top of the bed and pull her in front of me to a kneeling position between my legs on the bed. My fist wraps around her damp hair. \"I need your mouth,\" I grunt as I pull her face to my rock-hard erection. Having already been denied completion once, my cock is thick and angry, leaking precum from the tip. With her hands behind her back, she has no way to stop the downward movement, though she tries. I hold her face above my cock, waiting for her to move. I don't know why, but I need her to take this next step of her own volition.\n\nAnd she does. Her tongue comes out to lick the bead of precum, and my breath hitches at the delicate touch. When her mouth finally surrounds me again, I let out a breath I didn't realize I had been holding. She attempts to sit back on her heels to get into a more comfortable position, but I force her back to her knees with a sharp pull on her hair. A reminder that I control her body. Gravity aids her descent. I see her body jerk slightly as she is unable to stop the momentum, and the head of my cock enters her throat. Saliva spills from the corner of her mouth and runs down my shaft. Her eyes find mine, and I see the tears begin to form. I reach forward to find the sweet spot between her legs. They are pressed tight together, as she tries to keep me out. \"Open your legs.\" I hardly recognize my own voice. It is deep and gravely from arousal. I twist her nipple and push her head down to my lap -- a punishment for denying me access to her wetness. She jumps her knees open. The movement is shaky and awkward without the use of her hands, and she is forced back down on my cock to balance herself. As I watch her gag and struggle to take me, I realize that this may be my new favorite position for her. I look at her open legs, and I immediately see what she is trying to hide. Her thighs are damp -- and not from the shower. She whimpers as I bring my hand to test her arousal. My fingers glisten as I remove them from her pussy to inspect her reaction.\n\n\"Did I make you ache between your legs, angel?\" I ask quietly. Almost a whisper. A sob shakes her chest and throat at the revelation of her unwilling submission, and I feel it around my cock. I suck my index finger into my mouth and return it to her clit, circling it before lightly pinching. She moans on my cock as more tears fall. I don't know why she is fighting her own pleasure, but I don't care. I love watching her resist as her body betrays her. I suddenly have the burning need to make her come with my cock down her throat.\n\nI plunge my finger back inside of her as the heel of my hand presses on her clit. She tries to back away. My other hand leaves her damp hair to find her nipple. I pinch it and pull forward, causing her to rock back down onto my cock and push her clit into my hand. She cries out around my length at the abuse, and I feel a gush of warmth coat my finger. I add a second digit and listen with rapt attention as she whimpers at the fullness in two of her holes. Images fill my head -- my fingers in her mouth, my cock in her pussy, a tapered plug in her ass. Will I have the opportunity to bring that fantasy to life? I want her to be so full of me that I will be burned into her memory forever. A thought occurs to me. Did she bring any toys with her on this business trip? I make a mental note to check her bags.\n\nI feel her begin to ride my hand, and I groan in satisfaction. What will she feel like when she comes with her cock in my mouth? Will she nip at me? Will she scream her orgasm, or quietly whimper? Will her throat tighten? I don't have to wait long to find out. I feel her pussy muscles flutter against my fingers as her hips move of their own accord, back and forth against the heel of my hand. She tightens her entire body, her eyes screwing shut. I push her face further down my cock, once again entering her throat. Her body convulses as a muffled scream erupts from her. She grinds down against my hand, and I pinch her clit as her orgasm subsides. I feel her body shudder and then become limp, wrung out from her orgasm. I'm lost in the sensations she is giving me when I feel my own pressure begin to build. I grip her head with both hands as I use her face for my pleasure. I know I'm being too rough, but I cannot stop.\n\nHer body jerks as I bring her lips to the base of my shaft and hold deep. I am about to tell her to swallow, but as my come spills out of me, I see she is already taking the initiative. I watch her, mesmerized by her muscles working, traces of come leaking from her mouth. She licks me clean, and I lift her head off of me by her hair. Her blonde locks are beginning to dry now, and the tresses are smooth between my fingers. I was right. He hair is naturally a perfect mess of curls. Her teary, red eyes and my come on her chin complete the erotic picture.\n\nI stare at her eyes again, focusing on the gold flecks standing out among the green. The connection must be too much for her. She looks down, and I see the surprise across her face that my cock is still erect. I smile. I'll never be finished with her.\n\n\"Come here,\" I point to my lap. She hesitates, perhaps sore from last night. But by now she must know that I love her resistance. I relish how she fights me every step of the way, even when she knows the outcome.\n\nI reach to grasp her nipple -- my favorite way to force her to move. She shifts forward in delayed obedience, obviously attempting to avoid my rough touch. My hands settle on her hips, gripping the softness as she hovers over me. I rub her pussy along my cock. I'm not ready to enter her yet. I want to play with her body some more.\n\nHer wetness coats my shaft, and I lean forward to take a taut nipple into my mouth. They are still sensitive from last night. The bite marks are turning dark purple. I would love nothing more than to add more of my marks to her pale skin, but I need her ready for me. I gently lave one nipple with attention, lapping at the delicate flesh. She tries to lean away from me, and I let her feel the instability as she remembers that her hands are bound. She has no choice but to bring her body forward again, and I pretend she is leaning into me for comfort, not balance.\n\nI lavish the other nipple with the same attention as I bring my right hand to her inner thigh. My fingers dance lightly along the skin there. The anticipation I felt while consumed by her mouth was incredible. Her unhurried attention is my new addiction. I want her to experience the same sensation. It works. Her legs quiver, and she whimpers under my touch. By the time my hand reaches her clit, she's lost to pleasure. Her eyes are closed, and I do not dare force her to open them -- to remember where she is. My parted mouth finds her collar bone as I pull her to my chest. She hisses as her abused nipples hit my skin, and her pussy gushes against my hand. I hum in appreciate against her ear. But I can't let her finish yet. As magnificent as this is, the next time she comes will be on my cock.\n\nI pull my mouth from her skin, and her lids flutter open. Her eyes are glassy, and she seems dazed. \"Turn around,\" I whisper against the shell of her ear. I don't give her a chance to emerge from her aroused state. I use my hands to lift and turn her so that she is facing away from me, her knees on either side of my thighs. I don't want her to fight me yet. She can resist me once I've impaled her on my cock. But not yet.\n\nI grip the silky flesh of her hips and position her above my cock. When I feel her begin to squirm, I'm not sure if her goal is to escape me or to encourage me. I don't intend to find out. I push her hips down as I thrust upward into her tight channel. I think I hear a satisfied sigh from her lips, but admittedly, it could be wishful thinking. Once I am fully seated inside of her, I release my grip on her hips and hold her to my chest.\n\n\"Ride me,\" I growl. I feel the soft globes of her breasts, her nipples hard against my palms as I try to guide her body up. She shudders on an inhale but doesn't move. I could lift her, but that's not what I want. I grip one breast roughly and trail my free hand down to where her ass meets my lap. My thumb finds her back entrance, and I press it forward. She surges up and I chuckle into her hair. I sweep the now dry golden locks to one side and place my open mouth on her neck. I nibble her skin as we keep this lazy pace. With her hands bound behind her, she is helpless to stop my leisurely exploration of her body. I whisper sweet words into her ear. How tight she is. How silky her pussy feels around my cock. How I love to feel her struggle to take me deep. How desperately I want her to fight me. Any time I sense her begin to slow, her body likely exhausted, I renew the assault of her asshole with my thumb, and she comes to life underneath my hands.\n\nI can feel her legs begin to give out. Her descent on my shaft is faster. She holds me inside of her longer. Her upward motion is shaky. She's close. I can feel it. I hold her hips down against my lap, forcing her to take all of me. I pinch her nipple with my left hand, as my right hand lightly smacks her clit. She squeals and jerks against my hold. I continue the onslaught, increasing my tempo and pressure with each blow. Soon, she's writhing on my lap. I feel her hands moving against my stomach, searching from something to grab onto. No doubt looking for a way to end this delicious torture. I've got you, angel...\n\nI take my hand away from her bruised nipple and stick two fingers into her mouth. She doesn't need any urging. She's so lost in the sensations that she sucks my fingers without hesitation. With my other hand, I lightly circle her clit. I smile as I feel her move her hips, her body seeking my touch where she needs it most. I won't deny her too much longer. I can't. My obsession has taken root.\n\nI feel the sudden urge to hear words from her mouth. When I am certain she is mindless with pleasure, I bite her earlobe. \"Beg.\" She remains silent. It takes every ounce of willpower I possess, but I still my movements. I hold her fast against my lap and remove my hand from her pussy, denying her the friction she desperately wants. The fingers in her mouth come out to grip her chin roughly. I squeeze her face. \"Beg,\" I repeat. For a minute, I think she is going to call my bluff. Will I deny her orgasm? Am I strong enough? But I hear her whimper and feel her shift in my arms. I smile against her neck, knowing I have her.\n\n\"Please.\" It's a whisper. I almost don't hear it.\n\n\"Please what?\" I encourage her. I need to hear dirty words fall from her innocent mouth. When she doesn't immediately respond, I trace the seam of her lips with my finger. Her tongue darts out to find them and bring them back to her, but I pull away. I growl against her, the sound reverberating in my chest. I hope she hears the warning I intend to convey.",
        "\"Please. I need to come.\" She finally relents. I hear the slight defeat in her voice, and before the obvious shame she feels can chase her arousal away, I begin my attack on her body again.\n\n\"Come for me,\" I groan into her ear. She whimpers at my words, and I know what she needs. I twist her nipple and press her clit as I lift her up and slam her back down onto my cock. I feel impossibly deep inside of her as her muscles quiver along my shaft. My fingers return to her mouth, and I groan when I feel her tongue caress them. She cries out around my fingers as her pussy contracts and releases around me. Despite her fatigue, her hips work up and down involuntarily as my fingers gag her, muffling her cries. My cock pulses in satisfaction as the wetness from her release coats my shaft and drips to my thighs.\n\nI feel her collapse against my chest, and her contented sigh invigorates me. I push her face down between my legs, my cock still embedded deep inside of her. I should be merciful and release her hands. But I won't. The sight of her ass spread in front of me, my cock impaling her, her wrists bound as she twists in front of me. There's only so much a man can resist. I'm only human.\n\nI grip her hips roughly and use her body for my pleasure. I'm sure she'll be bruised, but I don't care. I marvel as my thick cock disappears into her tight hole. Her whimpers and squeals as I bottom out are music to my ears. I love seeing my marks on her skin. I want her to be reminded of me whenever she looks in the mirror. The thought of these marks fading grips my chest. Will there be another chance to paint this beautiful canvas? I push the thought away.\n\nI close my eyes and lose myself in the act. I vaguely hear her throaty groans and cries against the sheets and feel the thrashing of her head. I see her fists clench and unclench against her lower back. Her pussy continues to grip my cock tightly as the last of my resolve falls away. I ram her down into my lap, bottoming out as her muscles milk the orgasm from my body. She cries out again. Could I force more pleasure from her body? Is that a cry of pain, or is she pleading for more relief? With nothing to lose, I thrust my finger into her ass and am rewarded with a scream as she comes on my cock again. She's perfection.\n\nWill I be able to let her go when the time comes?"
    ],
    "authorname": "GracieLou89",
    "tags": [
        "hotel room",
        "teasing",
        "fingering",
        "biting",
        "oral sex",
        "blowjob"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/industry-conference-ch-02"
}