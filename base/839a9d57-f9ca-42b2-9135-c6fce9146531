{
    "title": "Zoe, Again",
    "pages": [
        "<center> This is a stand-alone story but follows from Zoe, an earlier tale. \n\nPlease enjoy.\n\n+</center>\n\n\"How's your cappuccino?\" Claire asked. \n\nI'd been miles away. Startled, I raised my head, tried to smile.\n\n\"Um, good. Good, thanks.\"\n\nI found Claire somewhat intimidating at the best of times.\n\n\"Gideon said you would have the photos for us,\" she said.\n\n\"Us?\" I was a little shocked at the implications.\n\nBack up...\n\nAfter years of contemplating my exhibitionist tendencies, I'd only recently dared to dip my toe into the water, so to speak.\n\nGathering all my courage, I'd tied myself into a shibari harness, leaving my arms and legs free. Over it I wore a casual but dressy skirt and blouse. \n\nAnd under it a vibrator.\n\nThe idea had been for me to take a tram well away from my flat, get off and walk back - without having an orgasm in public.\n\nI still think I might have made it.\n\nI'd also resolved to stop for a coffee on Collins Street, just to prolong things. Sitting there, squirming slightly as the vibrator spun up and down within me, I'd been noticed by Claire and Gideon. She had noticed that I was wearing something unusual under my blouse, but it had been Gideon who had recognized me for what I was.\n\nDismissing her politely, Gideon had taken me to his nearby flat. While remaining fully dressed himself, he'd guided and directed me through my first real sexual experience - undressing in front of him to expose the rope harness and then slowly masturbating myself until, after much delay, he'd given his permission for my orgasm. All the while, he'd taken endless photos and videos of me on my own phone.\n\nThroughout the experience, he had directed me, controlled me, encouraged me. He'd been exactly what I'd dreamed of all my adult life - a strong, commanding and yet compassionate man to instruct and compel and use me.\n\nIt had been the best day of my life. \n\nHe'd also let me know that the only way for us to go any further was for me to trust him with the photos and videos now on my phone.\n\nYesterday, I'd texted him to say Yes.\n\nBut instead of Gideon waiting for me at the coffee shop as I had expected, it had been Claire. \n\nShe was sitting at the same table where I had first met them, wearing a long, sleeveless white lace dress with a plunging neckline. On her feet, were a pair of t-strap sandals; I didn't recognize the brand, but wished I could, if only to be properly jealous. Her only jewelry was her heavy gold linked necklace and an elegant gold wristwatch. Her makeup was, as before, perfect.\n\nShe was utterly beautiful, the embodiment of femininity. To my eyes, she seemed entirely confident. \n\nI realized how outclassed I was by this woman. I wilted, just a little, before taking a deep breath in an attempt to regain my nerve.\n\nLooking around, I saw the two of us in a nearby mirror. \n\nBeside the reflection of the tall, black-haired beauty, I saw my smaller figure, my blonde hair in a rough bob cut. \n\nIntellectually, I knew that I was attractive, that my figure drew admiring looks from the boys, but looking at us in the mirror, I felt entirely second-best. \n\nI was pretty; Claire was gorgeous. I had a nice figure; hers was stellar. She had poise, confidence - charisma if it came to that. I was struggling with every insecurity in the book. \n\nAnd - and - she was Gideon's friend, quite probably a great deal more than that. \n\nIn short, Claire had womanly power; all I had were girlish hopes.\n\nIt was those hopes which had led me to again show up wearing Gran's triskelion necklace, the one I'd worn when I first met Claire and Gideon. I'd known its BDSM connotation from the first, but it had taken Gideon a lot of effort to get me to acknowledge that link when first we'd met.\n\nToday, thinking I'd meet Gideon again, not only was I wearing the necklace, but I'd again left both knickers and bra in the drawer. Unlike my first excursion however, I had today dared to wear a simple white blouse. That decision had met with Inner Zoe's unqualified support. I figured that I would be fine unless we got hit with an unseasonal rain shower.\n\nTurning away from the mirror, I looked down towards my knees before realizing to my shock that I was backlighted by the sun shining in through the window of the cafe. My breasts were clearly visible through the thin cotton.\n\nI turned scarlet. I was prepared for almost anything, but not such an open display of... what?\n\nWasn't my intent to risk detection, to take it to the limit? But now I'd been detected. \n\nAgain.\n\nAt that realization, Inner Zoe began laughing her head off.\n\n\"They're very nice, Zoe,\" Claire said softly. Damn it, could she read my mind?\n\nDespite my embarrassment, for I was for some reason reassured. It would have been so very easy for her to have humiliated me.\n\nWithout responding, I reached into my purse and pulled out a flash drive, pushed it across the table. She picked it up without examining it and put it into her own bag, rose to depart.\n\n\"He'll be in touch, dear.\"\n\n\"Um, OK?\"\n\nShe rose, started to leave, but stopped when I spoke her name. \"Claire?\"\n\n\"Yes?\" Armoured in her imperiousness, she said it without turning back, as if it - and I - didn't matter. \n\n\"You can tell Gideon I've got my implant.\"\n\nAt that, she turned to look at me.\n\n\"Implant? Birth control?\"\n\n\"Yes.\"\n\nHer face was impassive. Had I pleased her or annoyed her? Worse, did she now see me as a rival? I didn't know.\n\nShe looked at me, her face expressionless behind her large, round sunnies. It occurred to me that I had no idea what colour her eyes actually were. \n\n\"Don't hurt him, Zoe,\" she said very softly, her face impassive. \"I mean that. Don't you ever hurt him. If you do, I'll find you even if you hide in the back of beyond.\" \n\nWith that, she wheeled and left, her superb behind swaying from side to side. \n\nI was stunned. First off, there was a very, very real menace in her statement and I realized that I did not want her as an enemy. I decided that I needed to woo Claire, to make her like me, or, at the least, accept me.\n\nOddly, I also sensed fear - or, at the very least, concern - in her voice. This from a woman who on the surface appeared to be completely self-confident, possessed of everything any girl could wish. And, very curiously, it was concern for Gideon, the man who had to me seemed so powerful, so full of strength! How very peculiar.\n\nThere was obviously much I had to learn about both Gideon and about Claire.\n\n+\n\n\"Hello, Zoe,\" said her voice on the phone. \"Gideon asked me to call. He's having a small party Friday next and wonders if you could make it.\" \n\n\"What sort of party?\" I asked. (Not that it would make any difference. If Gideon asked, I would be there.)\n\n\"A casual dinner party. Quite intimate. Don't bother dressing formally or anything.\"\n\n\"Oh. Oh, yes, I'd love to!\"\n\n\"Good! Gideon said to indulge your fancies.\"\n\nNow that put things in a different light entirely. Gideon - and by now Claire - knew precisely what sort of 'fancies' on my part had first brought us together. While not a blatant invitation to get kinky, it was at least an invitation and quite possibly a strong hint.\n\n\"I'll be there,\" I said, firmly. \"What may I bring?\"\n\n\"Just you.\" With that, she hung up.\n\nI thought of how her voice had sounded. Was she upset? If so, was she upset at me for Gideon's interest? Was she irritated at Gideon for having her relay his invitation? Or upset at both of us for that afternoon in his flat? I couldn't decide and it bothered me.\n\nIn reality, I didn't know that much about Gideon and Claire. I thought Claire had implied the party was to be... quirky.\n\nBut was it really? What if I was wrong and showed up in some form of sexy costume when everybody else was not? or what if I arrived in a party dress and everybody else was...?\n\nI felt lost. Was this a test of some sort? A challenge? Or even a teaching point, something one or both of them wanted me to learn from, possibly by making mistakes, maybe even embarrassing ones?\n\nI thought of calling her back, but decided against it. I didn't want to appear too na\u00efve and, if it was a test, I'd have blown it right there.\n\nWell, what did I want?\n\nFor once, Inner Zoe and I were in full agreement. I knew that I wanted Gideon - on whatever terms he offered. I had never felt so fulfilled as during that time in his flat. I had never felt so much a woman, so ready to offer myself, so eager to be accepted.\n\nBut where to go from that? I was uncertain, confused.\n\nIn the end, I decided to go back to what had brought us together in the first place. \n\nLess the vibrator.\n\nI decided not to use rope this time. Rather, I could get 'dressy' under my clothes with something both more and less traditional. If the party was 'conventional', it could stay hidden. If not...\n\nAfter a lot of really fun research on the net, I decided on fine gold-coloured chains. I'd done a basic jewellery-making hobby course when I'd first arrived in Melbourne and knew a gem store where I could get everything but a couple of key items. Those last I knew I could find at Kay's, the upscale sex shop where I'd bought the shibari cords for my first big adventure.\n\nI was excited - turned on - throughout my shopping trip. I could feel sexual tension throughout my body. I was darned near ready to explode by the time I got home. \n\nI ran my fingers under the hem of my panties, then stopped. I found that I liked being on the edge and, if - as I hoped - the party would be my Big Day, then I wanted to not lose it. I wanted to walk in there tingling, so to speak. Silly, perhaps, but that was the plan. \n\nI'd settled on a two-piece design, like a bikini - much skimpier, of course.\n\nThe bottom had one length of chain running around my waist like a belt, falling down in front and held together by a gold-coloured triskelion about the size of a dollar coin over my mound. From there, two more chains passed between my legs, one on either side of my labia, and ran up between my cheeks to join the waist chain at the small of my back.\n\nThe top part had a simple two-strand necklace descending to my breastbone, from which hung a matching triskelion. From that, two more double loops of chain fell almost to my navel before rising back up to my breasts, where they were anchored off a pair of simple elastic nipple loops.\n\nI confess that it was hard to keep my hands off myself while I was working on them. Knowing what they were intended for was exciting and my mind kept drifting to various fantasies - hopes? - of what would be happening at Gideon's flat.\n\nWhen I eventually finished them, I slipped both pieces on and examined myself in the mirror. \n\nIt all lay flat enough to be essentially invisible under clothing.\n\nMinus the clothing, it was not so much a costume as it was gift wrap - a screaming exhortation to jump me. \n\nInner Zoe screamed her approval. Someday, I thought, it would be real gold. Just you wait, world!\n\nI had a little black party dress which would show off the top medallion well and a pretty good pair of black heels. With that, I was satisfied - and very, very eager.\n\nTruth be told, I was also a bit frightened. This might be my 'coming out' party, so to speak, my chance to actually gain entry into Gideon's world, or at least what I imagined his world would be.\n\nBefore my walk that day, I'd dreamed of somebody like him. My time in his flat had been a dream come true, even if he'd grown a conscience and refused to take me to his bed. \n\nI'd so wanted that. The feeling of rejection still lingered, a fear that I just wasn't pretty enough, interesting enough to please him.\n\nThe day of the party, I took the afternoon off. \n\nI took a long shower, waxed, did my hair and got meticulous about my makeup. I wasn't normally a big-makeup kind of girl, but this evening probably warranted it. I nibbled on some dates and tried to compose myself.\n\nEventually, time passing, I put on the chain outfit. Turning again in front of the mirror, I felt myself again becoming more than just a little excited. Before that caf\u00e9, I'd never met a boy I'd cared to lose my virginity to. Within an hour of meeting Gideon, I was ready. \n\nAnd he'd turned me down. He was being responsible, fair, but it still had stung.\n\nBut tonight, I had my hopes. I felt like Jacqueline's Natalie - totally inexperienced but completely willing, utterly ready. This was, I hoped, Zoe's Day.\n\nThe bob cut made my hair look super-sophisticated and was easy to bring back with but a few minutes in front of a mirror. I didn't need Inner Zoe's cheering to tell me I looked good.\n\nI pulled the black dress over my arms and wiggled it into place before doing up the row of buttons in the front. It took me a minute of experimenting to decide whether I should button it low enough to show some good cleavage (and the chains below the triskelion) or do up one more button and just show the medallion itself. In the end, I decided to let the medallion talk for my boobs and left the button done up.\n\nI ran my hands down over the dress to smooth it out and spun again in front of the mirror. Perfect - sleek as a seal, girl!\n\nI put a minimal purse together, slipped into my heels, picked up the bottle of wine I'd put by the door and left. Even though movement of the harness was somewhat inhibited by the fabric of my dress, I could feel it pulling on my nipples as my unconstrained breasts moved with each step.\n\nI liked the feeling.\n\n20 minutes later, the tram dropped me a block from Gideon's flat.\n\nI buzzed his door from the street. In seconds, I heard the sound of the latch admitting me to the building. Taking a deep breath, I made my way up the marble stairs to the first floor.\n\nAs I walked up, I listened for music, conversation - any indication of the party having started. More uncertain than ever, I began worrying about being the first to arrive, of being seen as too eager.\n\nIt was dead quiet on the stairs. There was not a sound.\n\nHad I got the time wrong? Maybe even the date? I didn't think I had. I kept walking.\n\nWhen I knocked, Claire opened the door.\n\nI clearly hadn't needed to worry about being overexposed, for Claire's outfit consisted of her gold necklace, heels and a peignoir so sheer that the floor-length garment could have been stuffed into a teacup. No more substantial than a morning mist enveloping her body, it was both less and much, much more than plain nudity. \n\nI could see that each of Claire's small nipples was pierced with a tiny gold barbell, clearly visible through the diaphanous fabric. The ends matched the links in her necklace; their gold colour contrasted perfectly with the skin beneath them.\n\nAnd perfume. Too much of the perfume sold these days is so bold as to be almost tyrannical. This was subtle, but mind-consuming in its richness. It didn't fight her looks for my attention, it complimented them, amplified them.\n\nMy eyes must have bulged a little, for she smiled. This smile however was gracious and warm and made it clear that I was indeed welcome. It also confirmed that Claire was totally confident with her body image, in her near-nudity. \n\nI so wanted to be Claire.\n\nI felt my body shivering and not from cold. Although I'd never walked that side of the street, I suddenly realize that if I couldn't have Claire as my friend, I might not mind having her as my lover.\n\nShe pretended to ignore my expression and called, \"Gideon! Look who's here!\" Why she had to raise her voice I didn't know, for there seemed to be only the three of us there.\n\nGideon was a slender man, with just a bit of grey showing in his dark hair and short, well-trimmed beard. Right then, he was across the flat, in the kitchen taking up one corner of the large room. Being thus greeted by Claire, I was somewhat disappointed to see him dressed in a casual set of daks and a white shirt buttoned about half-way up. \n\nI wasn't sure what exactly I'd been hoping for, of course. My daydreams hadn't been that specific.\n\nHe waved casually at me, smiling brightly before returning to his cooking. \"Get her a drink!\" was all that he said.\n\nI looked around. It was clear that there were only the three of us in the flat.\n\n\"Am I early?\" I asked Claire.\n\nShe gave a low giggle. \"No, but I did say it was to be a small party.\"\n\nAt that moment, I noticed a table set with, yes, just three places.\n\n\"Oh.\"\n\nThis wasn't turning out anything how I had thought it would. On the other hand, my fears about my lack of social graces and inexpereience in front of Gideon's friends would be easier to keep on a leash this way.\n\nIn short order, Claire had put a drink into my hands. I took it gratefully.\n\nA moment later, Gideon put a lid on a pot and came over to give me a hug, which grew into a three-way hug when Claire joined in. I wasn't sure whose hand it was that cuddled my bum, but knew that I liked it either way.\n\nBreaking the hug, Gideon motioning Claire and I towards a nearby couch. Waiting for us both to be seated, he sat on a matching overstuffed chair opposite.\n\nBetween us was the leather-covered ottoman on which Gideon had positioned me for my first display. I felt my mouth go dry at the memory.\n\n\"Thank you for coming, Zoe,\" Gideon said, raising his glass in a toast. \n\n\"I wouldn't have missed it for anything,\" I replied, \"but I thought there would be more people.\"\n\n\"Three's enough,\" he smiled. \n\nPutting down his drink, he reached behind his chair and produced a rectangular object wrapped in a heavy brown paper and sealed with plain sticky tape. He passed it to me. \"A memory,\" was all he said.\n\nCurious, I weighed it in my hands. It was not overly heavy. Perhaps 18\" long, it felt like a framed photo of some sort.\n\nHe and Claire both looked at me with an encouraging look on their faces. I opened it to find a neatly-framed photo of me, taken by Gideon in this very room. I was kneeling on the ottoman, my knees apart, my hands behind my neck. The shibari cords had just been removed, but their marks could still be clearly seen in my flesh. My eyes were open, bold, almost wanton.\n\nI looked amazing. \n\nMore than I could have thought possible. Gideon had captured precisely how I had imagined myself. Looking at the photo, I remembered perfectly how it had felt - the incredible arousal, the longing, the hope, the thrill, the soul-twisting satisfaction. I hadn't thought that I could possibly look that sexy, that desirable. My doubts about myself ebbed, just a little.\n\nI looked up to see both of them beaming at me. \n\n\"Thank you,\" I said softly. I was amazed, pleased and very, very touched.\n\nClaire leaned in and kissed me, chastely, on my lips. My heart soared - did this mean she viewed me as a friend?\n\n\"We looked through all of them and I was certain that this was the best one,\" she said.\n\nThat statement gave me another clue as to their relationship, I realized.\n\nStanding up, her gaze turned to Gideon. \n\n\"Gideon,\" she said to him, \"I get the feeling that both you and Zoe need to shed some clothes. I'm pretty sure she has something special underneath - look at her necklace.\"\n\nGideon looked at it and me. One eyebrow went up in curiosity. \n\nClaire gave a small smile, \"I told her we didn't dress for dinner.\" \n\nI looked from one to the other.\n\nHe smiled back in obvious pleasure. At that, I felt something begin to grow within me, something I wasn't sure of - something uncertain, something curious, something daring - maybe all three at once. \n\n\"Indeed we do not,\" he siad. \"Zoe, would you mind if I got 'more comfortable'?\"\n\nI shook my head. \n\nWith that, while Gideon didn't move, Claire got up from beside me and, kneeling gracefully before him, began unbuttoning his shirt. Gideon's grey eyes were riveted to mine - waiting to see my reaction, perhaps?",
        "What he had to have seen was anticipation, delight, curiosity - all good, from my point of view.\n\nClaire tugged his shirt tails out of his Daks, unbuttoned the last button and pushed the garment off his shoulders and down his arms. Rising, she took the shirt, folded it neatly and placed it down beside him.\n\nWordlessly, the man rose to his feet. Claire unbuckled his belt, undid the button and the trousers slid down his legs to the floor. He lifted one leg and then the other; Claire retrieved and then folded them, placed them on top of his shirt.\n\nUnderneath, Gideon was wearing white mesh briefs. The fabric wasn't far off being transparent. His tackle was clearly visible through the mesh fabric; both his flacid length and the balls looming behind it might as well have been in fishnet. Although I had seen lots of pictures and videos, these were the first I had ever seen in real life.\n\nGideon, while slender, was anything but skinny. It was obvious that he worked out regularly and while not beefy and bulging, his muscles were certainly well-defined. Such body body hair as he had was curly, dark. \n\nHe seemed to me to be the epitome of masculinity. I found him deeply, endlessly desirable and I felt my breath catch as I looked at him.\n\nHe and Claire both smiled. They obviously knew what was going through my mind.\n\nSaying not a word as he gazed at me, he merely raised that eyebrow again in inquiry. Given my lack of experience, he obviously knew that this was not the time for commands.\n\n\"If you wish,\" Claire said in an encouraging voice.\n\nI wished.\n\nI had been wishing this for a long time. I just hadn't known how to define it.\n\n\"May I help?\" she added.\n\nMuch as I wanted more of both of them, right then it seemed important that it be his hands, not hers, first touching me.\n\n\"I've got it, thanks.\"\n\nI stood up and unbuttoned the dress. I shivered my shoulders just slightly and the black fabric flowed down over my body to gather around my feet , exposing the harness on my body. \n\nI squatted down to pick up the dress. Folding it, I dropped it on the sofa beside me and, heart on overdrive, stood up for their inspection. I looked at the two of them and was very pleased to see wide-eyed, open approval on both faces.\n\nGideon's eyes lingered on my body, ran slowly up from ankles to face, then back again. \n\n\"Turn around,\" he said and I spun slowly for his inspection.\n\nHis hands came together in soft but emotive applause. \"Nice,\" he said. \"Very nice!\"\n\nClaire on the other hand simply stood, stepped over to me, leaned down and drew my lips against hers in a soft but ardent kiss. Her tongue traced my inner lips, swept along my teeth. When she pulled away, her eyes were shining. She ran her fingers along the links, slowly. I could feel one tiny link after another pass under her touch and felt the sensation all the way down to my toes. \n\nFor some reason, I no longer minded her being first.\n\nDinner - as much of it as I can remember it - was grilled prawns with lemon and garlic. They were outstanding, wonderfully complimented by white wine and a green salad. Gideon, for it had been his work, was an admirable cook.\n\nIn one sense, it was a simple yet proper meal served by an welcoming couple to a new friend. On the other, even Inner Zoe was silenced in her awe at the profundity of its sexual nature.\n\nI could look through the glass of the round table top and see both his mesh-enclosed manbits and her shaven sex. I enjoyed the view and relished the thought that they were both getting an equivalent view of me. \n\nI'd not pictured my night going this way, but was thrilled in every way. I felt the chains between my legs rub gently on my labia as I leaned over to pass the wine to Gideon, felt the overhead fan's gentle breeze on my excited nipples.\n\nIt was so very, very odd, I thought. Here I was, stark naked, in the midst of that most pedestrian activity - eating dinner. Was this how it was supposed to be? I was uncertain, but definitely approved.\n\nI found myself both grateful and a bit awed that this amazing couple had been so generous, so accepting, to include me in this.\n\nDinner ended simply, with Claire merely rising to take the dishes to the kitchen and stacking them in the sink. \n\nAs she did so, Gideon leaned back with a smile, openly admiring my breasts over the table. In another situation, I would have been embarrassed or angry. Tonight, I was delighted and leaned back just slightly to better emphasize them.\n\n\"I'm so very glad you decided to come tonight,\" he said as Claire returned. \"May we show you something now?\"\n\nI nodded. What I wanted more than anything was to be shown the path to womanhood, but I had, frankly, fallen in love with Claire as much as with Gideon. She was everything I wanted to be. I ached with desire for them both. One, or the other or both - I wanted... \n\nNo - needed. 'Want' was last year. \n\nIt was Claire who took my hand and led me to the second door, beside the open one to the bedroom. Gideon followed. At the door, he took my other hand, leaned in and offered his lips to me for a kiss. How could I refuse? My head swam as our lips met; I felt Claire's hand clutch mine in encouragement as his whiskers brushed my chin.\n\nBreaking the kiss, Gideon pushed open the door. I felt my breath catch as I saw what was inside. \n\nI was not really surprised to find that it was a dungeon, but there was definitely nothing the slightest bit medieval about it. \n\nThe room itself was modern and quite large, easily as roomy as Gideon's substantial living room. The furniture it held was widely-spaced, giving an open and, paradoxically, almost welcoming impression. Here and there were overstuffed chairs. A large television hung on one wall. A series of wooden cabinets ran along the wall opposite.\n\nImmaculately clean, it was decorated in light browns with a tan carpet and taupe-painted walls. An array of pot lights provided excellent illumination without being overly bright.\n\nWere it not for the blatantly sexual nature of the setup, it might have been a high-end art gallery waiting for potential patrons to admire the works on display.\n\nHeavy tracks on the ceiling supported pulleys, anchor points and eyebolts. There was a large bed in one corner - a four-poster with a tasteful bedspread, no less. A five-pointed star made of heavy timber and easily seven feet tall leaned against one wall. Assorted pieces of wood and metal furniture filled the room. I knew what many of them were and could guess at some of the rest, but was unsure what they were all called. I felt myself tingle as I looked at the display and considered the promise it offered for my education.\n\nI'd been excited before Gideon had opened the door, but as I took in the display I felt myself becoming so much more so. \n\nThere were two or three smallish windows up high on one wall. There was nothing to be seen beyond them. Scattered between the windows, higher up than pictures would normally be displayed, hung a line of framed photographs - photographs of both men and women. \n\nAll were nicely framed and of professional or near-professional quality. While all involved nudity and sexuality, none had that creepy, greasy air which characterizes so much porn. These were done with talent, respect, almost with love. \n\nThe photo closest to the door was of a woman walking through a forest, ferns around her feet and knees. She was dressed in an ankle-length cloak with the hood up over her head. While the rest of the photo was in black and white, the cloak was a bold scarlet, its fiery folds falling in plunging waves to her feet. \n\nThe front of the cloak was open, exposing the magnificent naked form within. The lighting however was from overhead and the woman's face and much of her body were invisible in shadow. Indeed, what could mostly be seen were her heavy breasts, the top of one thigh and, somewhat more dimly, her stomach and one hip.\n\nOne bare foot was pushed forward by her stride. Around the ankle was buckled a sturdy yet elegant leather cuff, a heavy metal ring on its side.\n\nThe photo next to it was of Claire. She was lying back in an armchair and wearing nothing but a most elegant underbust corset with lace trim. Her dark hair flowed over her shoulders.\n\nHer posture and expression were very calm, almost tranquil. An empty champagne flute was held loosely in her right hand. She was looking away from the camera, off to one side. While relaxed, her expression was attentive, strong. She seemed utterly content, utterly confident in her sex.\n\nHer feet were propped up on an ottoman in front of her, showing off her long legs to advantage. The angle was such that it was impossible to tell whether or not she was wearing knickers. Her breasts on the other hand were bare and I felt a pang of jealousy at their perfection.\n\nIf one discounted her costume, it was an utterly casual, innocent pose, as if she had been caught watching television on a slow night. I found myself becoming as envious of Claire's poise as I had been of her boobs. Then I noticed something else and became even more fascinated.\n\nA chromed curb-link chain wrapped twice around one ankle then pooled on top of the ottoman before leading off-screen. The chain was not obvious; indeed, it was almost hidden by Claire's other ankle and its shadow. Once noticed however, one's eyes were drawn to it over and over. I couldn't decide whether it had been an actual tether or whether it had just been draped over her ankle as a prop. In either case, it was remarkable, doubly so given her serene expression.\n\nThe image had that extraordinary mix of controlled elegance and casual carnality which I was learning exemplified Claire's daily life. Her expression was one of cool indifference, yet there was also an air of innocence, almost of vulnerability, which I found hard to understand. \n\n\"They're amazing!\" I breathed, not daring to pull my eyes away from the images. I was afraid they would see my blush of excitement.\n\n\"Thank you,\" they said, almost in unison. \n\n\"Who took the photos?\" I asked.\n\n\"Gideon,\" Claire said.\n\nI motioned with my hand towards the other photos. \"May I?\"\n\n\"Of course.\"\n\nIgnoring the furniture, equipment and trappings around me, I walked along the wall with my head up, inspecting the dozen or so other photographs.\n\nThe third photo had been taken in front of a pair of very tall wooden doors, something one might expect in a fairy-tale palace. \n\nA woman, wearing but a dark thong or G-string, was standing in the door. Her arms and legs were spread-eagled across the doorway, tethered with thumb-thick ropes. Gideon, dressed in a tuxedo with a rose at his lapel, stood half in front of her, holding her waist and molding her body to his. His head was lowered towards her as if for a kiss. \n\nThe doors behind her were slightly ajar and beyond them could be seen a dining room with table set and candles lit for a very formal dinner. I got the impression that the woman would soon either be released to join the meal - no doubt dressed as she was - or else would be left standing there, displayed for the visual gratification of the unseen diners when they arrived. \n\nAnother image featured a nude woman standing in front of a set of filmy curtains. \n\nThe light from outside was very bright and had silhouetted the woman's figure. Her breasts were generous and the one nipple which could be seen was erect. Her arms were held up, crossed above her head, by a chain leading up and out of sight towards the ceiling. Her head was raised just slightly and I could see that her hair reached almost to her waist.\n\nI found myself becoming more and more stirred by the photos. Clearly Gideon was an expert with a camera and possessed of magnificent and imaginative vision. The photos were wonderfully artistic, with their eroticism more presented for thoughtful consideration than flung in the viewer's face.\n\nBehind me as I walked, Gideon and Claire were silent. I turned around once to find their arms around each other's waists. If it wasn't love for each other on their faces, it was at the least deep affection and I envied them for it.\n\nThe couple in the next photo were unknown to me. A naked man was bent backwards over a waist-high padded bench, his limbs pulled back and down, tethered to its base with elaborate ropework. Between his legs knelt a young - very young - woman. \n\nAs petite as the man was muscular, her dark, dishevelled hair barely reached her shoulders. While clearly nude, only one breast could be seen, just peaking over one of his thighs.\n\nThe man on the other hand was completely exposed, his erection massive, the rim of its swollen head almost sharp with pressure. The girl's pale hand was wrapped around it, her thumb pressing under the crown. \n\nThe expression on her face was one of calm attention to the task before her; that on his face was the torment of lust too long denied.\n\nAnother - merely the naked back of a standing woman, from shoulder blades to upper thighs. Chromed handcuffs encircled her wrists and biceps, chromed chains connected the manacles and hung down off the bottom of the photograph. Her bum was flawless.\n\nA side shot of a slender young woman with very long, very pale hair squatting on her heels, a look of both surprise and puzzlement on her face as she faced the camera. The polished floor below her was very shiny and one could see an almost perfect reflection of her feet and high heeled shoes. Her arms were resting on her knees and from one hand hung a white egret plume.\n\nNext, a table-sized flat rock, half-submerged in the middle of a pond. Ripples flowed out from the rock through beds of reeds to the shore in the distance. On the rock lay a nude woman, her light hair coiled behind her head. She was resting up on one elbow, looking down along her long legs to feet partly submerged in the clear water. Her expression was calm, but rather pensive.\n\nFrom out of the water emerged a chain, each massive link the size of a large man's hand. The woman's hand was resting inside the last link. It was clear that she could have easily removed her hand should she had so wished, but some reason had chosen not to. Her free hand resting on her hip held a long-stemmed rose, its blossoms almost but not quite lying between her breasts.\n\nThere was a headshot of an unshaven, unspeakably handsome youth wearing a leather blindfold. A slim female hand was about to present a shapely breast to his lips.\n\nBeside them in the next frame was a woman in a round-necked white dress with wide, flowing sleeves. The dress was long enough that her bare toes could just be seen. A broad leather collar encircled her neck. Her arms were outstretched and back, her bosom pushed forward. The fabric was thin enough that her dark nipples showed clearly. One hand rested on the hilt of an elaborate longsword, its blade protruding from a large rock by her feet. A slight smile, perhaps one of resolution or devotion to a cause, was on her lips.\n\nI was amazed by the precision of Gideon's work. Each piece was perfect - perfectly envisioned, perfectly executed, perfectly erotic. Yet, while all were highly sensual, none of them were smutty. This was art in the finest sense of the word.\n\nI was awed. It was as if Gideon had created this miniature gallery just for me, in anticipation of my coming.\n\nI realized that I wanted to be the girl in each of those pictures. It was what I had dreamed of my whole life without knowing it. Had Gideon known? Was I that transparent?\n\nThen I noticed that there was an empty space on the wall, the right size for the photo they had just given me. I also realized that the frame of my photo was identical to those hanging on the wall.\n\nWas this an invitation? \n\nI turned to the two of them. \"You're missing one, aren't you?\"\n\nClaire looked up at Gideon. He nodded, as if in response to a silent question.\n\nThe two stepped closer to me, within touching distance.\n\nHe smiled. \"That depends. Let's think on it, Zoe. For right now, what would you like?\"\n\nThat was the elephant in the room. He knew what I wanted and it was certain that Claire knew as well. The costumes they had chosen for dinner with me were utterly explicit and mine, I thought, made my own desires and inclinations very clear. But did I dare?\n\nMy eyes slid from his face to Claire's. I wasn't sure what I would find there. To my relief - surprise? wonder? - there was a gentle smile on her face. My breath caught at the warmth of that obvious permission.\n\nClaire took my hand and placed it in Gideon's before clasping them together. \"I think that that's what you want, isn't it, Zoe?\" She leaned over and kissed first me and then Gideon before stepping back.\n\nThe look in his eyes was one of total love. It was love for Claire, I knew that, but I wasn't going to let this opportunity slide.\n\nI smiled at her in gratitude and squeezed Gideon's hand. Turning away from her, I faced him. This was no time for virginal modesty, not with this couple, not here, not now. \n\nWith my free hand, I reached down and with one gentle finger stroked the length of his organ inside its mesh container. It responded by noticeably growing.\n\n\"This,\" I said. \"I want this, Gideon. I want you.\"\n\nHe smiled at me. His hands came up to cradle my head and he drew me in, his lips waiting for mine. I met him, tongue exploring for his. \n\nI could feel that kiss all the way down to my toes. I could feel a bolt of arousal shoot through me like fire, inflaming every bit.\n\nGideon's hands moved from my hips, up my waist and onto my breasts, ran lightly over my skin, played with the chains. His hands seemed to have been created to provide me intense stimulation, perfect pleasure. Despite inept fumbling by early boyfriends - or more probably because of it - I had never imagined how wonderful it would be to have my breasts properly attended to. My nipples were applauding.\n\nHis strong thumbs flipped the elastic loops off them and the chains fell to below my waist. Free of the chains, his fingers played with my welcoming orbs while his thumbs rolled my nipples. I shuddered at the feeling grew. My kisses grew more demanding, more insistent.\n\nPlease, sir, I want some more!\n\nI began running my hands up and down his torso. I grasped his bum to pull him in towards me and felt a growing bulge in his briefs against my stomach.\n\n\"I want to see it!\" I told him and, wriggling out of his grasp, dropped to my knees in front of him. I ran hands across the taut fabric, thrilled to witness Gideon's obvious reaction to my efforts. Sticking my thumbs in his waist-band, I tugged the briefs down, letting them fall to his ankles and giving me my first real-life view of a man.\n\nOK, I might have been virginal, but that wasn't the same thing as entirely innocent. This was after all the age of the internet and I'd studied.\n\nBut Cosmo articles and porn videos were one thing. This was another, the real deal. I closed my eyes, inhaled.\n\nWith that, I could smell him. It was more than just a scent of aftershave or soap. An indefinable masculine odour filled my nostrils. \n\nOpening my eyes, his tip was just inches from my face. The first thing I noticed was the slit at its very end. Entranced, I lifted one hand and ran a fingertip over his crown.\n\nIt bounced, twitched under my finger. I giggled and was surprised to hear my laughter echoed by Claire. \n\nTurning my head, I saw her sitting just a few metres away on a low-backed chair beside the canopied bed. Her legs were spread and her fingers covering her sex. Her eyes were fixed on Gideon and I.\n\n\"It's cute, isn't it?\" she asked, one finger moving slowly between flawless thighs.\n\nI turned from her, back to Gideon. I reached out and grasped it, almost apprehensively, by the shaft. I raised my head, looked up to see him smiling down at me.",
        "\"That's it,\" he said softly. \"It won't bite.\"\n\nI was in my innocence surprised at how warm it was, how soft and yet so hard underneath.\n\nI gave Gideon a tentative smile, then, stretching out my tongue, I ran its tip over the slit. There was not much taste, but his shaft twitched under my hand. I giggled to myself, gave a broad lick, starting at its base and running up to its head.\n\n\"Oh, yes!\" came his voice. Encouraged, I repeated it, then again. Its head swelled in front of my eyes. I leaned forward and took it in my mouth, leaned forward until it was almost touching my throat. Holding his balls in one hand and pumping the loose skin of his shaft with my other, I sucked in and began to bob my head back and forth. \n\nAfter a few strokes, I pulled off him and looked up.\n\n\"How's that?\" I asked.\n\n\"Wonderful,\" Gideon replied. \"Don't stop.\"\n\nI returned to my task. From beside me, I heard Claire's gentle encouragement. \"Don't be afraid, Zoe. He likes a lot of tongue work, dear.\"\n\nI stole a glance at her. One hand was playing with the barbell in her right nipple while two fingers from the other were deep inside her sex. Wide-eyed and breathing deeply, she was smiling broadly at the spectacle in front of her.\n\nI began to speed up my attentions - faster, harder. I wasn't entirely prepared for what I figured would happen, but I was certainly eager to experience it.\n\nGideon sidetracked those thoughts when he pulled back, out of my mouth. His hands lifted me to my feet. He leaned down to kiss me and whatever scraps of arousal had somehow missed me thundered in like an avalanche. His hands - so strong, so loving, so demanding - swept over my skin, dragging chain links as they passed. I wanted his hands on me everywhere, forever.\n\nHe bent down, swept me into his arms and carried me to the bed. Laying me down on it with my legs hanging off one side, he knelt between them before lifting them up and onto his shoulders. \n\nHis tongue ran slowly up the inside of one thigh. My hands grabbed handfuls of the bedspread, holding on as if I was afraid of falling off in some bizarre gravity shift. I rolled my head to one side to see Claire's face, eyes closed, her breasts heaving.\n\nGideon traced the length of my lower lips with his tongue tip, repeated it again and again, shifting the chains of my costume out of the way as he did so. It felt electric, the sensations shooting the length and breadth of my body.\n\nI pulled his head into me more firmly with both hands. Hearing cries of female arousal and opening my eyes, I could see that Claire was drifting away in her own world of erotic pleasure. \n\nI tried to move my legs closer together, but his strong arms on my knees kept my thighs well-spread, giving him better access as his lips gently grasped and pulled on my labia.\n\nHis thumbs began to enter my vag, first one, then both, stretching, massaging. My one-finger explorations had never gone this far; the feeling was like nothing I had ever felt. I was panting in my need. \n\n\"Gideon...\" was all I could say. \"Gideon...\" Over and over.\n\nHis head lifted off me as he stood up. Strong arms came around my waist, lifted me, turned me so that I was more fully on the bed. I sensed him kneeling between my legs and was thrilled to feel his masculine weight lowering onto me.\n\nStrangely, he didn't feel heavy. \n\n\"Zoe?\" his voice said softly.\n\nAgainst my will, my eyes opened to see his face inches above mine, gentle concern on his face.\n\n\"I want you, Zoe. I said so last time. You can say No now.\" He paused. \"Or...\"\n\nEven as aroused as he clearly was, he was still considerate, still thinking of me. I hoped, prayed, that if this developed further, he would remain this thoughtful. I desperately wanted to be taken, but knew I needed a guide both firm and gentle.\n\n\"Yes!\" I whispered, then, finding my voice, repeated myself more loudly. \"Yes!\" \n\nHis only reply was to lean down to kiss me.\n\nHis hips lifted a little and I felt his arm between us. Then I felt a strange-but-welcome sensation, a blunt probing of my labia, a search for the opening they concealed. Gideon lowered his head onto my shoulder. His arm came out from between us and his hips gave a gentle but firm push as, for the first time in my life, I entered the timeless dance of love.\n\nIsn't this supposed to hurt? flashed through my mind as he slid deeper and deeper into me. Then I remembered that I'd lost my hymen as a little girl; there was no reason for pain. Instead, it felt so amazing that I began to weep tears of joy.\n\nThey didn't last long. His loving, patient foreplay had already left me on the brink of orgasm. As it grew closer and stronger, I lifted my legs up around his waist and pulled him in deeper, trying to rock my hips to match his rhythm. My hands swept back and forth along his back, my cries growing louder and louder.\n\nAnd, just like that, I had my first. \n\nI had thought I knew about orgasms. \n\nI hadn't.\n\nIt flowed like liquid fire from breasts and belly. It grew and grew, matched only by my cries. It was the most amazing, awesome feeling. \n\nThrough it, Gideon continued to thrust into me. Looking up, I could see his eyes were closed, but there was a smile on his lips. I pulled his head down, ground my lips into his.\n\nAnd still my orgasm continued. \n\nGideon paused, gave a low growl. His body went rigid and I could feel his cock pulsing within me. My heart soared at the pleasure of having pleased him - pleased him as a woman, for such I certainly was now.\n\nIn a minute, Gideon lowered himself more onto me, panting deeply. He still didn't feel heavy. I felt - I don't know - protected? cherished? It felt good, in any case.\n\nSlowly coming down from my orgasm, I felt a hand in mine. Turning my head and opening my eyes, I could see Claire had stretched out her hand to hold mine. The flush on her face spoke clearly that she'd been there, too. Her blue eyes gleamed with happiness and, I realized to my delight, with welcome.\n\nThere was a happy smile on her face as she looked at me. Silently, she blew me a kiss, squeezed my hand and then closed her eyes, relaxed, slept. \n\nMy tears returned again, but gentle, happy.\n\nI fell asleep holding her hand, safe in Gideon's arms.\n\nNot, I smiled to myself as I drifted under, not for the last time."
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "nudity",
        "first time",
        "exhibitionism",
        "love",
        "sex harness"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/zoe-again"
}