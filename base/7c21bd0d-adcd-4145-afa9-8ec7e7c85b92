{
    "title": "Daring Lisa Marvell Ch. 06",
    "pages": [
        "Every week, Channel 4 anchorwoman Natalie Johnson had come up with a provocative dare for her colleague Lisa Marvell to perform as part of the station's 11:00 Friday Night Special newscast. And each daring activity inevitably led to the attractive blonde reporter getting naked \u2013in a video showing her colleagues welcoming her back to work, at a college's swimming pool, in a local pizza place, while getting her body painted, and most recently in an on-air strip game where Lisa lost a piece of clothing for each correct answer provided by a studio guest. In televising these dares, Lisa and Natalie had gotten progressively bolder. At first the camera only caught glimpses of the 32-year old reporter's well-shaped ass, something permitted by the network's Standards and Practices. But in recent weeks, viewers were also able to catch brief shots of frontal nudity as well.\n\nBut Friday's strip trivia game had gone too far \u2013 not only were Lisa's breasts prominently displayed, but Natalie had used her stockings to tie Lisa to a chair as the rest of her clothing was removed. Despite the playful nature of the segment \u2013 and the tens of thousands of viewers who tuned in to watch while only a handful registered any complaints \u2013 station manager Ken Barber decided the reports were too risky and had to end.\n\nLisa got the first inkling of the bad news Saturday morning when she woke to the repeated sound of incoming text messages on her cell phone. Most of them were from Bill Reinhart, Channel 4's news producer, alerting her to the fact that he was meeting with the station manager and their lawyers later that day and that she should be in his office Monday morning at 9:00 AM for a meeting.\n\nThe blonde reporter immediately texted Natalie to see if she had heard from Bill. \"I'm heading out to get some coffee, so why don't I pick up something for you and stop by?\" Lisa replied when Natalie acknowledged that Bill had updated her on the situation as well.\n\n\"Sounds great, but can you make it two coffees? Both with cream and extra sugar,\" Natalie replied. \"Nicole's here.\"\n\n\"Oh, another piece of happy news to start the day,\" Lisa thought to herself, realizing that this meant that Natalie had just spent the night with her latest crush, weather reporter Nicole Lewis.\n\nLisa had nothing against Nicole; in fact, she actually liked her a great deal. An attractive woman in her late twenties, Nicole had worked her way up quickly in the broadcasting world, moving three times in five years before landing at Channel 4 when Natalie shifted from the weather desk to the anchor position. Standing roughly the same height as Lisa, Nicole's most striking features were her long auburn hair offset by startling blue eyes. However, the blonde reporter had to acknowledge that she was envious of the younger women's svelte 32-24-33 figure, which she managed to keep under 120 pounds.\n\nAttractive on camera and thoroughly professional in her forecasting, Nicole had made a great addition to the late night news team. And it wasn't long before Lisa sensed Natalie's growing attraction to the meteorologist. Lisa had no right to complain, as she and Natalie had agreed from the start that they would maintain an open relationship and that they would keep it hidden from their colleagues at Channel 4. For Lisa, it was her first affair with another woman and Natalie, although infatuated with the older reporter, knew that she needed her freedom as well. Neither felt that a long-term commitment was going to happen, but nevertheless knowing that Nicole had just spent the night with Natalie added to her sadness at the start of what was turning out to be a very bad day.\n\nBy the time Lisa arrived with the coffee, Natalie was seated in a silk robe on her sofa while Nicole answered the front door looking cute in cutoffs and a tee shirt.\n\nSensing that her colleague was slightly embarrassed to be \"caught\" at Natalie's place, Lisa greeted her with a warm smile. \"Hi, Nicole,\" Lisa said as she placed the coffees down. \"It's good to see you here,\" she added as she gave the weather girl a big hug. \n\n\"Thanks, Lisa,\" the woman responded, her body noticeably relaxing as she lightly squeezed Lisa's hand. \"I know that Natalie is worried and I know how special you are to her, so I'm glad you were able to come over.\"\n\n\"It feels good to be with the two of you while we figure this thing out,\" the blonde reporter said as she handed out the coffees and then seated herself in a chair across from the anchorwoman. \"Now, what's the latest from Bill?\"\n\n\"Not much really. Just that he'll let us know on Monday if there will be any changes. But I don't like the sound of that,\" she added as Nicole sat down next to her on the sofa and put her arm around Natalie's shoulder.\n\nLisa leaned back in the chair, deep in thought. She recalled a morning only a few months earlier right here in Natalie's apartment after the two women had spent their first night together. At that point, Lisa had been terribly confused about what was happening with her \"dare to bare\" series. Natalie had been the calm voice of reason, helping her to make the decisions that led to her time off from the station and eventually her return to the Friday Night Specials. As she reflected on all of the exciting things that had happened since then, Lisa realized two things: they would figure out a way to get through the current situation and it was now time for her to take control, just as Natalie had stepped in before. \n\n\"Well, there's no point in getting too worried until we know exactly what we're facing,\" the blonde reporter said as she slowly sipped on her coffee. \"On Monday when we've heard from Bill, I'll come up with a plan. The most important thing to remember is that our audience loves what we're doing and that we need to make sure they keep watching. I'm sure I can figure out a way to do that.\" She leaned forward looking directly at Natalie and Nicole. \"Besides,\" she said with a big smile, \"I'm having too much fun to give this up without a fight.\"\n\n\"I know you and Natalie have really done all the work to make the Friday Night Specials so successful,\" Nicole joined in. \"But anything I can do to help, count me in.\"\n\n\"Absolutely. I suspect we'll need a lot of help on this. But for now, I suggest we all enjoy the weekend,\" she said as she started to rise from her chair. \"I've got some things to do, and I'm sure you two can find some way to keep busy.\"\n\n\"All of a sudden, you seem to be in a big rush,\" Natalie said as she motioned her friend to sit back down. \"What's so important anyway?\"\n\n\"For one thing, I have to get in touch with Manny. I told him I'd fly out to the coast to see him next weekend, but I realized I can't go then because of the annual broadcasters' dinner. So I need to check to see if he's around the following week and then make plane reservations.\"\n\n\"Oh, and are you two going to be making any new tapes while you're out there?\" Natalie asked with a droll look on her face\n\n. \n\n\"Wasn't the first one good enough?\" Lisa replied. \n\nGlancing at Nicole, the blonde reporter could tell that she had no idea what the two women were talking about. Turning to Natalie, she asked, \"Is it okay if I tell her?\"\n\n\"Well, first I should correct myself. It's a DVD and not a tape,\" the anchorwoman explained. \"But sure,\" she continued as she turned to Lisa, \"go ahead and tell her.\"\n\nManny Bareda, Lisa reminded Nicole, was the highly regarded videographer that Bill had hired to prepare the video for the first of the dares, the one that featured her getting naked on the studio set surrounded by her colleagues. She omitted the fact that the two nights of shooting on a deserted studio set had included a brief sexual encounter between her and the photographer, but she did describe the 3 AM phone call she placed to Natalie on the second night asking her to come to studio. Once there, Manny shot some additional footage that ended up in a special \"Director's Cut,\" which Lisa had then shared with Natalie.\n\n\"Wow, I had no idea,\" Nicole said. \n\n\"You weren't supposed to,\" Lisa said with a devilish grin. \"Only the three of us knew about it.\"\n\n\"And now you,\" Natalie said, softly squeezing Nicole's hand.\n\n\"Since then, Manny and I have stayed in touch and he's invited me to visit him in California. And that's why,\" she added as she got up and headed to the door, \"I should be home checking on flights to the coast.\"\n\nThe other women jumped to their feet, each hugging Lisa before she left. \n\n\"Oh, and don't be surprised,\" Lisa added as she turned to leave, \"if we have to let a few more people know about that Director's Cut. But first, let's see what Bill has to say on Monday.\" And with that, she exited Natalie's apartment, leaving the two women wondering just what the daring reporter had in mind.\n\n*****\n\nLisa had been certain from the moment she received Bill's first text that she was going to be either suspended or fired from her job at Channel 4. Over the course of the weekend, she concluded that being terminated might be the simplest and best path forward for her \u2013 she was continually approached with new job offers that represented a lot more money. But that was not necessarily the best solution for her colleagues or for the newscasts. And she was not going to give up on everything she had worked so hard to achieve at Channel 4, nor was she going to let her audience down. Her only message to Bill was this: \"I don't care if they suspend me, but do everything you can to prevent me from being fired before the broadcasting awards banquet next Saturday.\" She followed that up with a short text that read, \"I'll take care of the rest.\"\n\nSo, the bad news came as no surprise to the blonde reporter when she and Natalie sat down with Bill on Monday morning. He had just been informed minutes before in his meeting with station manager Ken Barber that he was relieved of his role as producer for the daily newscasts and demoted to handling the weekend reports because of his \"bad judgment and failure to protect the integrity of the station's public image.\" Furthermore, he told them, Natalie was being taken off the anchor desk and reassigned to feature reports on Saturday and Sunday nights while Lisa was suspended for violating Standards and Practices guidelines. \n\n\"So,\" the anchorwoman said with venom in her voice, \"this is the reward that we get for delivering the best ratings this station has ever seen!\"\n\n\"What can I say?\" Bill pleaded. \"I'm the last person in the world to defend Ken Barber today. He's making a huge mistake and I told him so. And when the audience deserts us, he'll have no one to blame but himself.\"\n\n\"I know this is upsetting news for all of us,\" Lisa interjected, trying to calm things down. \"But I just want to say that I'm grateful to you for at least making sure I didn't get fired.\" \n\n\"It came very close to that,\" Bill said with a shake of his head. \"However, I was able to remind him that you are one of three nominees for the Newscaster of the Year award that's to be presented at Saturday's broadcasting banquet,\" he said with just the hint of a smile. \"At first Ken was adamant that I fire you immediately. But I pointed out that it would be awkward for him and the owners to have you at that dinner if you no longer worked for the station. As one of the three nominees, you're already being acknowledged as one the best in the business. I suggested to him that he might not want all of his competitors spending the evening talking about how he had just fired you.\" \n\n\"So,\" Natalie said as she processed the information Bill had conveyed, \"he's too arrogant to realize that we're responsible for the ratings success, but he does understand that it will be personally embarrassing for him if the industry knows he's just gotten rid of someone who might be the best newscaster around here.\"\n\n\"In a nutshell, yes.\" Bill continued, \"And let's hope Lisa does win that award. Otherwise, I'm not sure what will happen after the banquet.\"\n\nNatalie launched into an angry tirade about the stupidity of management, threatening to go immediately to another station while Bill reminded her that she was still employed by Channel 4 and that her contract prohibited from leaving. Lisa sat quietly, deep in thought, while the two of them vented their anger and frustration at the current situation. \n\nIt took almost a quarter of an hour for them to calm down. Meanwhile, Lisa started writing some thoughts on a piece of paper, scribbling a few lines, crossing them out, and then jotting down more notes. Finally, as her two colleagues grew silent, Lisa began. \"You know, there is something we can do. But one important point, Bill \u2013 you and Natalie are both reassigned to the weekend news and I've been suspended from appearing as a broadcaster, right?\"\n\n\"Yes, that's it precisely.\"\n\n\"But of course there's nothing to prevent me from appearing on camera as part of a legitimate news story as long as I'm not reporting on it, correct?\"\n\nBill's eyes narrowed as he stared intently at the reporter. \"That's right. Where are you going with this?\"\n\nLisa glanced down at her notes before continuing. \"I know that Kim Washington normally anchors the weekend news, but I'm almost certain that Kim is on vacation this week, which means that Danielle King will be filling in for her.\" She could see Bill nodding silently in agreement. \"So,\" she continued, \"if Danielle is willing to cooperate \u2013 and I'm sure I can persuade her \u2013 there's no reason that Natalie couldn't appear on the Saturday late night news to deliver a special report about the broadcaster's dinner and awards ceremony.\"\n\n\"Which,\" Bill said, continuing Lisa's line of reasoning, \"would very logically involve coverage of you.\"\n\n\"If I win the Newscaster of the Year award and you can get me in front of the camera, I can take care of the rest.\"\n\n\"But if you don't win, Lisa?\" Natalie asked with a genuine note of concern in her voice. \n\n\"Then we go to plan B,\" she said, once again checking her notes. \"And that involves a certain Director's Cut, which means that it's time to tell Bill about us. Are you okay with that?\" \n\nThe dark-haired reporter replied without a moment's hesitation. \"I trust you to do what's best for us all,\" she said with a warm smile.\n\n\"Good,\" Lisa said with a nod of her head. \"So Bill, there's a few things you should know about Natalie and me. And then I'd like to tell you a little story about what I think might happen this Saturday night.\" \n\n*****\n\nUltimately, it came down to a checklist of six different items that Lisa had to accomplish, and by midday Saturday, when she met with Natalie and Bill for lunch, all of them had been achieved. And then there was a seventh item on the list that would remain uncertain until that night. \n\nFirst, Lisa approached Danielle King about the weekend newscast. After working through her shock and anger at the way Lisa had been treated, Danielle was more than happy to cooperate with Bill and Natalie on the Saturday late night broadcast. Nicole Lewis also signed on to do the weather forecast, guaranteeing a studio team that completely supported the plan. Second, Natalie combed through the hundreds of suggested dares that had been received in recent weeks and found some that fit perfectly with Lisa's plan. Third, Manny \u2013 who initially couldn't believe that the blonde reporter was actually considering airing some of the footage from the Director's Cut \u2013 gave his blessing to its use while assuring Lisa that, if all went well, they'd have a lot to celebrate the following week when she visited him. Fourth, Clayton and George, Lisa's favorite remote camera crew, agreed to work that weekend in order to provide live coverage of the awards dinner while following the blonde reporter's very specific instructions.\n\nFor the fifth item, Bill consulted with several of the technicians in the studio as well as his friend in the marketing team about the website that had been set up for viewing Manny's original video, the one that had aired as Lisa's first dare. That site was accessible to anyone who registered online and confirmed that they were 18 years of age or older. Marketing fully supported the idea of adding any new material that featured Lisa as a way to increase the number of registered users, and the technical people confirmed that it would be a simple matter to stream live video from the site. And once they heard Bill's proposal, they agreed with his recommendation to significantly increase server capacity before Saturday night.\n\nThe sixth item provided the most enjoyment for the blonde reporter \u2013 buying an appropriate dress for the Saturday night banquet. And, with Natalie now free during the week, the two women were able to spend the better part of a day looking at and trying on various outfits.\n\nThat left only one additional part of Lisa's original plan unresolved. If she actually won the Newscaster of the Year award, George and Clayton would be on hand to cover it live, giving her a chance to speak directly to her viewers despite the indefinite suspension imposed by Ken Barber. But if that didn't happen, they would have to use the director's cut video as a way of presenting Lisa to the audience.\n\nBill, Lisa, and Natalie picked a quiet, out of the way restaurant for lunch so they could review the plans for the evening without having to worry about being overheard. And in fact, it was a place that catered to a business crowd, so on Saturday there were only a handful of people in the restaurant. \"Not at all like Tony's,\" Natalie teased her colleague as they were seated, referring to the crowd the night Lisa had performed her \"pizza dare.\" \n\n\"No, not at all,\" the blonde reporter responded with a smile. \"And furthermore, I'm keeping my clothes on this time,\" she added, \"at least for lunch.\"\n\nBill seemed wound up and tense, tapping his fingers and shuffling his feet back and forth under the table. \"Is everything okay?\" Natalie asked with a note of genuine concern.\n\nThe producer glanced at his watch. \"Well, we're about ten hours away from starting a broadcast that could get me fired, we're hoping we get a lot of people to log into the website but not so many people that it crashes, and if Lisa doesn't win the award tonight, it's entirely possible that she'll be gone by Monday. Other than that, I guess I'm doing fine.\"\n\nLisa reached across the table and gently held his hand. \"Bill, you're doing nothing wrong here so you're not going to get fired. We know our team has worked with our internet provider and they're able to add as much as ten times our current server capacity if we need it. And even if Ken Barber gets rid of me, I'll still have a future in broadcasting.\"\n\n\"After what you've got planned, I think it will obvious to everyone that you have some really great things in front of you,\" Natalie added, barely suppressing a giggle. \n\n\"So,\" Lisa said, reviewing the plan, \"it all comes down to who wins the award tonight and when exactly when they get around to announcing the Newscaster of the Year.\"\n\n\"I've checked the videos of the awards ceremony from the last few years,\" Bill responded, \"and they usually start with the presentations around 10. They try to wrap up before 11:30 so each station can include a mention of their people who won before ending their late night news. We'll have Natalie's segment ready to go any time during the 11:00 news, but we can only hold off on it until 11:20. If they hand out the award before then, we can switch to Lisa live.\" \n\n\"That's assuming I win,\" Lisa reminded her colleagues.\n\n\"And if you don't,\" Natalie jumped in, \"I'll have my report based on the dares that viewers submitted.\"\n\n\"As we all know,\" Bill continued, \"we can't air that segment on Channel 4. But we're all set up to stream Natalie's report live from our website at the same time that Danielle explains to viewers what's going on.\"",
        "\"And even if you win that silly award,\" Natalie added with an evil grin, \"I'm still the one who decides which dares Lisa does, so I might just go ahead and present it on the website anyway.\"\n\nLisa had to acknowledge that she secretly hoped it was going to play out that way, and she was thrilled by Natalie's teasing. She knew her friend was pushing her limits by threatening to show the director's cut even if it became unnecessary to do so. But Lisa also knew that she wouldn't have it work out any other way.\n\n\"So, I might end up doing two dares tonight instead of one. It seems like a good way to get even with Ken Barber for wanting to fire me,\" the blonde reporter said with a shrug of her shoulders.\n\nBill could only shake his head. \"You two really are amazing. I guess this is really going to happen.\"\n\nLisa felt a wave of excitement and tension as she realized that Bill was right. \"If all goes according to plan, Ken Barber and everyone else will be seeing more of me than ever before. And there's nothing he can do about it.\" She paused, reaching across the table to grab Bill's and Natalie's hands, \"Thanks to the two of you.\"\n\n*****\n\nAlthough it wasn't a major awards show from New York or Los Angeles, the annual broadcasters' banquet was still a big event that drew several hundred people from the local area television stations as well as other media outlets that included newspapers, magazines, and websites. And given that Lisa's \"dare to bare\" reports and on-air dares had begun to receive national as well as regional attention, ticket sales for the dinner had reached a record level with the ballroom in the local hotel filled to capacity. \n\nBy 7:00, a crowd of photographers gathered outside the main entrance to the hotel along with a larger group of spectators awaiting the arrival of the nominees. And if there were any doubt about who was going to be the center of attention at the ceremony, it was immediately dispelled by Lisa Marvell's appearance. \n\nPulling up in a limo along with sportscaster Tim Willis, the blonde reporter stepped out of the car and politely waved to the crowd as several of the photographer's flashes went off. At first, viewed directly from the front, Lisa's silver gown appeared elegant but not particularly daring \u2013 a form-fitting, ankle length dress with a high back and modest neckline that barely hinted at her cleavage. However, as she took the first few steps away from the car and the crowd could see her from the side, a collective gasp went up. Cell phones started flashing and the photographers pressed forward for more shots.\n\nIn fact, her dress was just two pieces of perfectly cut material \u2013 a front and back panel with no sides \u2013 that were connected by a series of three-inch wide metal hoops that ran down both sides and ended just below her hips. The hoops provided a gap of several inches between the front and back of the dress and exposed the sides of her body, confirming what most of the spectators had already guessed, namely that Lisa was not wearing any undergarments. She obligingly paused, Tim by her side, and turned in various directions to make sure that everyone had a chance to snap pictures while she once again enjoyed the thrill of exhibiting herself to the public. \n\nNoticing Clayton and George among the group of photographers, Lisa made sure to position herself in front of them as she turned sideways, thrusting her breasts out while stepping forward with one leg. This had the effect of shifting the panels below the last metal hoop even further apart, providing a generous view of her entire leg and hip and a peek at the curve at the bottom of her ass cheek. She turned her head to smile directly at the camera, seemingly unaware of the amount of skin she was displaying. \"That should give Danielle some good footage for her lead story tonight,\" Lisa thought to herself as a feeling of warmth surged through her. \n\nOnce inside, the reporter continued to find herself at the center of attention, with many of the other broadcasters as well as some of the hotel staff asking to pose for selfies with her. A few people from the other local stations made a point of saying how sorry they were that she had been temporarily suspended, but Lisa somehow doubted the sincerity of those statements. In fact, Channel 4's ratings had slipped each evening that week, with Friday's market share coming in at its lowest level since her first \"dare to bare\" report many months earlier. Competitors, she knew, must be delighted with her absence from the broadcasts.\n\nLisa continued to draw a crowd during the cocktail hour and even once dinner was served. She and Tim had been seated at a table of eight near the front of the room, with the sportscaster on her left and Bob Nichols, an elderly retired reporter, on her right. He turned out to be a lovely gentleman who was now active in several local charities while still keeping up on developments in the world of media.\n\n\"It's a pleasure to meet you, Miss Marvell,\" he said as they sat down at the table and introduced themselves. \"I've followed your career with great interest, and I have to say I've become a loyal viewer.\" He paused, realizing his remark might make Lisa feel awkward. \"You know, one of the advantages of growing older is that you give yourself permission to be more honest. So allow me to say that I watch you not only because you're an attractive woman but also because I believe you understand your audience and you're coming up with new ways to reach them. This business needs that kind of thinking.\"\n\n\"Well thank you, Bob,\" Lisa replied with a sincere smile, \"for both of those compliments.\"\n\nThroughout the course of the evening, Lisa noticed that the panels of her dress would occasionally shift to reveal the top of her thigh and on other occasions, showing just a little bit of her ass cheek. Once, when she noticed Bob looking down at her legs, she made a point of leaning over to talk to Tim and shifting her weight onto her left side, which allowed even more of her right cheek to be seen. \"I wonder if he realizes he might be seeing a lot more of me before the evening's over,\" she thought to herself with a chuckle.\n\nAs Bill had predicted, the presentation of the awards began almost exactly at 10:00 and by 10:50 all but five had been announced. Back at the studio, Bill, Natalie, and Danielle were huddled around a monitor watching the live feed from Clayton and George. The cameramen had positioned themselves in front of the podium and slightly to the left, exactly where Lisa had asked them to be. This meant that they could capture each of the winners close up and in sharp focus when they were called up to receive their award. It also meant that Channel 4 viewers would have the best seat in the house when the Newscaster of the Year \u2013 whoever that might \u2013 delivered their acceptance speech. \n\nThe late night news began, as it did every Saturday, at 11:00 with the opening credits as the camera zoomed in on the anchor desk. \"Good evening. This is Danielle King substituting for the vacationing Kim Washington. Our lead story tonight,\" she began, \"is one that we take considerable pride in here at Channel 4. The annual broadcasters' awards ceremony is going on right now downtown, and among the nominees is our own Lisa Marvell.\" \n\nAs she delivered this information, the footage rolled that had been shot earlier in the evening showing Lisa emerging from the limo and posing in her revealing gown outside the hotel. \"Lisa is up for Newscaster of the Year, and we plan to return to the ceremony as soon as the winner is announced,\" Danielle added.\n\nShe then looked directly into the camera and stopped reading from the teleprompter. \"I'm sure it comes as no surprise to our viewers to know that all of the Channel 4 team believe that Lisa should win this award. Week after week, her reports have made for compelling television, and we know she's earned the loyalty and support of you, the viewing audience.\"\n\n\"I'd like to show my support for Lisa as well,\" she continued, \"by delivering tonight's news in the same outfit that I wore the last time I appeared in one of Lisa's segments. As you probably recall,\" she said with a smile as her hand reached behind her dress and began to tug on the zipper that ran from her neck to below her waist, \"that was during last Friday's game of Strip Trivia, when it was revealed that I had a preference for high cut or French style panties.\"\n\nDanielle turned to the side so viewers could see that the zipper had now descended low enough to display the dark colored bra strap and the black lace top of her panties. Dipping a shoulder and sliding an arm out of her dress, she then repeated the maneuver with her other arm as the garment slid off her body and fell to the studio floor. \n\nBill, standing off camera, had no idea that this was coming, and he looked on with a mixture of astonishment and admiration. The 37-year old brunette was a conservative dresser, and although it was clear that she had an attractive figure and stayed in good shape, Bill \u2013 along with the rest of the viewing audience \u2013 now soaked in the sight of her 36-27-37 figure covered only by a lace triangle bra and high cut lace panties. Viewed from the front, both pieces of lingerie had flesh-colored liners that conveyed the illusion of transparent lace but discreetly hid the reporter's most intimate parts. However, as Danielle slowly completed her turn away from the camera and stepped out of the dress, it was apparent that the back of her panties included no such protection. Her ass crack was clearly visible through the black lace pattern, and the high cut provided a generous view of the sides of her cheeks.\n\nTurning back to the camera, Danielle then proceeded with other regional and national stories as if nothing out of the ordinary had happened. But the station's website and social media accounts immediately began to register the audience reaction, which amounted to a strong endorsement of Danielle's show of support for Lisa. And seeing those tweets and messages, more people started tuning in.\n\nBill continued to monitor the feed from the banquet, where things seemed to be on schedule with just a few awards still to be presented. He signaled to Danielle that they would stick with the sequence they had worked out before the broadcast, with the weekend sports leading off after the 11:15 commercial break to be followed by Natalie's report on Lisa's dare if the Newscaster of the Year award had not yet been announced. But first, it was time for Nicole Lewis's weekend weather update, and Bill's second major surprise of the night.\n\nEarlier in the broadcast, the meteorologist had appeared briefly on camera dressed in a burgundy dress that helped accentuate the color of her auburn hair. Now, as she appeared in front of the regional weather map, she had changed into a different burgundy colored outfit, this one consisting solely of a Wonder bra and boyshorts. Unlike Danielle, she chose not to perform an on-air striptease but simply walked onto the set wearing only her undergarments and heels. \n\n\"I'm joining Danielle,\" she explained to viewers, \"in showing my support for Lisa Marvell by delivering the forecast in my favorite lingerie choice.\" She paused and looked coyly at the camera. \"You may not remember that from last week because you were probably distracted by other things. But Lisa has been incredibly supportive and kind to me, especially over the last week,\" she continued glancing off camera at Natalie, \"and I'm thrilled to be a part of what's becoming a kind of Saturday Night Special.\"\n\nAs she continued with the forecast, she made sure to occasionally turn her back to the camera to give viewers a chance to inspect the curves of her tight ass cheeks accentuated by the snug-fitting boyshorts. Her bra covered most of her 32B breasts while the underwiring helped to accentuate her cleavage. In addition, as many in the viewing audience immediately noticed, the tight material of the boyshorts had produced a clearly visible camel toe, and Nicole appeared perfectly willing to remain directly facing the camera throughout most of her weather report. \"So, another stretch of nice weather,\" she concluded as she turned things back over to Danielle. \n\n\"Thanks, Nicole,\" the anchorwoman began. \"Over the last 24 hours, we've heard from a number of viewers who were disappointed that we were unable to present our usual Friday Night report this week. But you can be assured that we here at the Channel 4 news team listen to our audience, and we've prepared something memorable for you right after tonight's sports report. But to see it, you're going to have to log onto our Friday Night Special website. I know many of you have already registered there to get access to the fabulous video that was shot welcoming Lisa Marvell back to the station. But if you haven't registered yet, take a minute now to do so. Believe me, you'll be glad you did.\" She paused, with just the hint of a smile on her face. \"And now, here's the weekend sports.\"\n\nSitting at the table at the awards ceremony, Lisa was trying to pay attention as the various winners were announced. But she was continually distracted by the thought that it was almost time for Natalie's segment as well as the presentation of the newscaster of the year award. Barely able to contain her excitement and nervousness, she alternated between periods of feeling \"there's no way I can go through with this\" to \"I can't wait for this to happen.\" As a result, she found herself glancing at her cell phone every few seconds to check the time. \n\nIt was precisely 11:16 when she heard the unmistakable buzz of Tim's cell phone. As she looked over at him with a questioning look, he shrugged his shoulders as if to say \"I have no idea what this is about\" while reaching into his suit jacket pocket to check the device. Then, she felt her phone vibrate as a text popped up from Channel 4. \"What's going on?\" she thought to herself.\n\nUnknown to Lisa, Natalie and the marketing team had decided that as soon as Danielle instructed viewers to log onto the station website, a special message would be sent to everyone in the station's database who had registered at the Friday Night Special site. And there on her iPhone was a text telling her that a special live broadcast of a Lisa Marvell dare would begin at 11:20.\n\nSomewhat surprised that Natalie hadn't mentioned this detail to her, she nevertheless thought it was a good way to get more viewers. But then she looked up across the table and saw a woman reach into her handbag to pull out her vibrating phone. At the same time, Lisa realized she was hearing various tones sounding throughout the banquet room from people who had forgotten to silence their phones. At that moment, the real reason for Natalie's insistence that they proceed with airing the director's cut \"dare\" hit her. \n\nThe anchorwoman knew that marketing would send the alert to every registered website visitor, and it was completely predictable that many within the industry had registered at the site. Natalie had realized that and was using it as a way to once again push Lisa to the limits of her comfort zone and beyond. Airing the director's cut video on line to an \"invisible\" audience was one thing. But to have it seen by her friends, colleagues, and competitors while she sat in the same room with them was another. In shock, Lisa looked around the room as she saw more than a hundred people checking their phones and then starting to log into the website. \n\nBut this feeling of shock, she realized, was not a bad sensation \u2013 in fact, it was a feeling of incredible excitement, every nerve in her body stimulated. She could barely breathe as she scanned the room thinking, \"they're all going to be watching me.\"\n\nBack in the studio, the sports report was completed and Danielle was once again seen at the anchor desk, still wearing her French cut panties and bra. \"Tonight we're inviting you, our viewing audience, to be part of an experiment. This week we were told that the reports you want to see \u2013 things that you as adults find informative and entertaining \u2013 contain things that can't be shown over the public airwaves. So tonight, if you want to see Lisa Marvell perform this week's dare, all you have to do is start watching our website where this newscast will continue with a special report on that dare from Natalie Johnson. If you're not interested, stay right here and I'll be giving you an update on tonight's winners of the broadcasting awards. But if enough of you spend the next five minutes watching Lisa on our website, then hopefully we'll be able to do this again very soon.\" \n\nWith that, the webcast switched over to a second camera showing Natalie in the studio standing in front of a large monitor. However, at first most viewers paid no attention to the monitor. Instead they were fixated on how the dark-haired reporter had dressed for this special report. She had on only two pieces of clothing \u2013 a white lace bra that strained to cover her generous 36D breasts and a g-string, whose small triangle of material seemed to suggest that the dark-haired reporter had taken great care to be completely shaven \"down there.\" \n\n\"You might recall,\" Natalie began, \"that I was wearing this particular style of lingerie the last time that Lisa and I appeared together on our Friday Night Special report.\" \"At least, I think you saw some part of this outfit last week,\" she said, deliberately rotating in front of the camera. This provided the audience with the chance to examine the back of her thong, which in fact consisted solely of a tiny strand of fabric that was swallowed up in the crack between her generous ass cheeks. \"I know that many of you wanted to see Lisa do a dare this week, so I'm happy to tell you that \u2013 thanks to this webcast \u2013 you won't be disappointed.\"\n\n\"As the camera continued to focus on Natalie, she continued. \"Recently a number of viewers have expressed your frustration that in so many of our reports, some of Lisa's best assets remained hidden. So, you've dared her to finally reveal everything for our cameras. And that in fact is exactly what will happen in just a few minutes.\" \n\nIn the banquet ballroom, Lisa could see clearly see phones and tablets at the tables nearest to her that were logged on to special webcast. And although most people couldn't hear the audio, Natalie had anticipated that by scrolling some words across the bottom of the screen \u2013 \"Lisa has been dared to show all.\" The blonde reporter could see dozens of people look up from their devices with a startled expression as they glanced at her, wondering if what they thought might happen was really going to occur.\n\n\"You may recall,\" Natalie reminded the audience, \"that in my first report several months ago, a viewer dared Lisa to appear naked at the news desk. In response she starred in a 'welcome back' video that showed Lisa's dream of waking up in the studio without her clothes. But there was also another version of that video with a different ending, one in which it wasn't just a dream.\" The dark-haired reporter slowly started to smile. \"Let's take a look at that video now and see if Lisa will perform tonight's dare.\" And with that, the director's cut began playing on the monitor in back of Natalie as the camera zoomed in on it until it filled the screen.\n\nThe first minute of the video was similar to the version that many viewers had repeatedly watched on the station's website. However, different takes of the early scenes were included \u2013 although Lisa was still seen entering a deserted studio set, the lighting was a little brighter and no fog or wind was present. The original video had been shot in a way that suggested a dream sequence, with Lisa imagining that she was stripping out of her clothes. But this version suggested that Lisa was very much awake and aware of what she was doing when she found herself alone on the set. Although, as this new version made clear, she wasn't completely alone.",
        "For the director's cut, Manny had inserted occasional shots of a dark, shadowy figure seated on a stool next to a camera. At first, Lisa was seen moving around the set, but unlike the original video, no stage hands were present to interact with her. Instead, she seemed to be performing a striptease for the camera, or perhaps for the mystery figure barely visible in the dark. One by one her pieces of clothing came off until she was left in just her bra and panties. When the red light on the camera came on, its faint glow made it possible to discern the long dark hair of the person seated next to it. Most of the face was still in shadows, but the corner of a smile and the bright red lipstick on the lips made it obvious that the other person in the studio was a woman. And to many viewers, she was immediately recognizable as Natalie Johnson.\n\nNow the camera angle shifted, moving behind the shadowy figure and shooting over her shoulders as Lisa stood facing both Natalie and the camera, her hips gently swaying to the slow, bluesy music that played in the background. Lisa's hand reached up and behind her as she unhooked her bra and let one of the straps slide off her shoulders. \n\nTurning away from the camera, she let the garment slide off and casually placed it on the anchor desk in front of her. She looked back over her shoulders and smiled at the solitary viewer, who responded with the words, \"Thirty seconds, Miss Marvell.\" The voice was clearly Natalie's.\n\nA devilish grin spread across Lisa's face as she continued looking at the camera. She placed both hands on her hips, slipping her fingers inside the elastic band at the top of her black lace bikini briefs. Teasingly, she turned toward the lens, which made no attempt to zoom in on just her face. Instead, a clear view of the blonde reporter from her head to her knees was provided, her B-cup breasts with perfectly centered nipples proudly displayed for both the camera and the solitary figure. \n\nNow her fingers ran across the front of her panties, exerting a slight downward push that allowed just a glimpse of a few tufts of hair to appear above her mound. She then turned sideways, the camera zooming closer as Lisa slowly rolled the flimsy black lace down her hips. By the time her panties had been pushed to just below her butt, Lisa had turned completely away from the camera. The black lace now provided a line of fabric at the bottom of her ass, accentuating her firm cheeks and tantalizing ass crack.\n\nBending forward slightly, she pushed her panties down to her knees, then let them slip to the floor. In the shadows between her cheeks and thighs, the camera caught just the briefest glimpse of her pussy lips before she straightened up and took several steps away from the viewer as she walked up to the anchor desk. \n\nViewers both at home and in the awards dinner were straining to observe every detail of the performance. But after offering clearer views of the blonde reporter than had been seen in any previous dares, it now seemed that the director's cut was going to stop short of the ultimate payoff. The camera shifted to a position directly above and behind the seated figure just at the moment that Lisa turned around, and as a result Natalie's head blocked any view of the blonde reporter's pussy.\n\nSeated on the desk and viewed from that angle, Lisa could be seen from the waist up. Her breasts were clearly displayed while her hands could be seen moving across her stomach as they disappeared between her legs. Lisa's head tilted slightly backward, her eyes half closed and her breathing growing faster. But at that moment, the camera seemed to respond to the hope of every viewer. The shadowy figure stood up and took a few steps forward and to the right. Fully clothed, she stood at a slight distance from the blonde reporter, watching her as Lisa shifted her position on the news desk. And as Natalie moved, the camera now had a clear, unobstructed view of the entire length of the blonde reporter's body, her legs dangling over the side as she sat up and faced directly into the camera.\n\nFor Bill, who had been given the complete story behind the director's cut, it now became obvious why this video was intended for Natalie's private viewing. Lisa was seducing her friend on camera, allowing her to get tantalizing close to her as she indulged her exhibitionist instincts. The producer couldn't believe that the blonde reporter had permitted this to be used for tonight's dare. It took things, he realized, several levels beyond anything she had previously been willing to do on camera.\n\nFor just a few seconds, the video provided a full-length view of Lisa as she slowly spread her legs apart and moved her hand to the top of her slit. With her neatly trimmed landing strip, the outer labia of her pussy were on clear display and as she spread her legs further, the hint of her moist pink folds within became visible. Then, her fingers descended down the front of her slit and blocked the view. Her fingers curved and appeared to press inward between her thighs. But the camera now moved upward again as the breathing of the blonde reporter could be heard and Natalie disappeared from the shot.\n\nAfter several seconds of panning up, the camera settled into an extended shot of Lisa's face and neck. Droplets of sweat could be seen on her forehead, her eyes now completely closed as she rocked slightly with an unmistakable motion. For the next fifteen seconds only Lisa's face appeared on camera. A shudder seemed to run through her body and she grimaced slightly. Lisa then let out a long low sigh of relief, slowly opening her eyes and looking off dreamily into the distance.\n\nThe scene then faded to black, and the camera switched back to the studio where Natalie was seen standing next to Danielle on the fully lit Saturday night news set, both women still dressed in only their lingerie. Danielle, who had not seen the footage before, seemed speechless, so it was left to Natalie to say something.\n\n\"We've been proud to present the series of dares as part of our Friday Night Specials, and I think you'll all agree with me that tonight's report is an outstanding addition to that collection. Once again Lisa Marvell has successfully performed the dare given to her by our viewers. \" She turned to look at her colleague, who finally seemed to be regaining her poise. \"And I'm sure that Danielle agrees with me.\" \n\nLooking around the banquet room and the faces of many of the people at the other tables, Lisa was certain that most of them would agree with Natalie as well. One by one, she had seen most of them look over at her during the last minute or so of that report with expressions that combined complete bewilderment with admiration and perhaps even envy. There were definitely a handful of disapproving looks as well, and she felt like saying to them, \"So why did you watch it, then?\" \n\nThe room had grown strangely silent after the most recent acceptance speech from an award winner. The master of ceremonies, who apparently wasn't signed up for Channel 4's website and therefore had no idea what was going on, seemed somewhat taken aback by the distracted crowd. Shaking his head, he returned to the podium and announced, \"And now it's time for our final award.\"\n\nTim, whom Lisa had insisted see the video before the banquet, leaned over and patted his colleague on the arm. \"Seems kind of anticlimactic, doesn't it?\" he said with a huge smile.\n\n\"Tim, that's terrible,\" Lisa replied almost bursting out loud with laughter. \"After all this is a big deal for me.\"\n\n\"And do you think you can top what you just did on air?\" he said. \"You know, now that Natalie has shown that video, you don't have to do anything else.\"\n\n\"Maybe not, but I'm going to try if I'm given a chance. Not all of our audience could watch the website. Don't you think they deserve to see me do a dare tonight?\"\n\nBack in the studio, they had switched to the live feed from the awards dinner just as the emcee had regained the podium. So, Channel 4 viewers, both on the web and watching on TV, heard, \"Those are our nominees for newscaster of the year.\" He held up an envelope that he dramatically tore open. \"And the winner is...,\" he said, beaming as he read the contents of the envelope, \"Lisa Marvell!\"\n\nThere was loud applause from the audience, which now included many of the hotel staff standing along the sides of the ballroom, as Lisa stood and walked to the front of the room. Taking the microphone and deliberately standing to one side of the podium directly in front of Clayton and George, she began to speak.\n\n\"Thank you. I want to say right away that I am very grateful for the support of my colleagues. From the work we've done together, I've learned a lot about our business and about myself during the last year, and I want to thank everyone at Channel 4 who made that possible. I \u2013 and the news team \u2013 are not going to be stopped. Right now as I speak, my colleague Natalie Johnson is streaming the type of newscast that we want to do and, more importantly, that our viewers want to see.\"\n\n\"From your applause and from what I saw looking around the room a few minutes ago, I'm guessing that some of you caught a glimpse of me on that tonight.\" Many in the crowd chuckled and there was scattered applause. \n\n\"In fact,\" she continued, \"some people may feel that I have gotten this award only because I've been willing to bare \u2013 shall we say \u2013 my assets in my work, but that is really only half of the story. What we've been trying to do with the Friday Night Specials is acknowledge that the there are many things that affect the lives of our audience. First, let's be clear that the people who watch the news at 11 are all hardworking adults and not children. It's late night, not prime time.\"\n\nAt this point, many of the audience noticed that Lisa put down her award and appeared to be fidgeting with the sides of her dress. Unknown to them, this was the dare she had planned to do if the award had been given before it was necessary to air the video on the webcast. A few suspected that she might be experiencing some sort of wardrobe malfunction and was trying to remedy it. But it quickly became clear what was going on \u2013 Lisa had decided to do the dare anyway and was systematically unfastening the metal hoops on each side of her dress.\n\n\"And what's so shocking about what I've been doing?\" she asked. \"For our audience, adult topics and \u2013 yes \u2013 sex are an important part of their lives, just as important as crime and politics and weather and even sports!\" she said looking out at Tim who acknowledged her comments with a grin and a nod of his head. \"The more coverage we give to these topics \u2013 or in my case, the more uncoverage \u2013 the higher our ratings have gone. People want to watch and think about these topics, and there's nothing wrong with that.\"\n\nBy this point, Lisa had all of the hoops unfastened, the front and back panels were swaying slightly with every movement of her body. Although the cut of the material kept her breasts covered, the front panel had shifted to the left, exposing the full length of her right leg and hip as the cloth slid between her thighs. Now, to everyone in the audience \u2013 both at the banquet and watching at home \u2013 it was obvious that Lisa was performing a striptease live on air.\n\n\"I've never been one to keep my talents hidden,\" the blonde reporter continued. \"And I want to make it clear tonight that I stand ready to continue to present those reports \u2013 to dare to deliver to our viewers the full story of the things that matter to them. And if that involves pushing the limits and occasionally getting into trouble, I'm willing to do that because that's what our viewers want to see.\"\n\nAs if confirming that desire, several dozen workers from the hotel who had been watching from the back of the ballroom cheered loudly, whistling their appreciation for Lisa's commitment to them. In response, the blonde reporter reached up and undid the snap on her left shoulder that held the two pieces of fabric in place. The front panel fell forward, exposing her left breast as a collective gasp escaped from the audience. She reached up for the snap on her right shoulder as she prepared to conclude her remarks.\n\n\"I realize that one of the reasons that I've been given the award is probably the same reason that other people would want to strip me of this award. But in the interest of fairness to any loyal viewers who couldn't get onto our website tonight,\" she said looking directly into the Channel 4 camera in front of the podium, \"there's only one thing I'm going to be stripped of tonight \u2013 this dress!\"\n\nAnd with that, she undid the second snap and let the dress fall to the floor. She picked up her award, holding it aloft in one hand as she defiantly stood with her legs slightly spread. Her breasts and clean-shaven pussy seem to glisten in the bright lights directed at the podium, where the details of her most intimate area stood completely revealed. Positioned directly in front of and slightly above Clayton and George, Lisa knew that the television viewers were now getting an unedited, full frontal view of her slit and the lips enfolding it. And if that got her fired, she thought, then Ken Barber could go fuck himself. She was having too much fun to care.\n\nThe applause started in the back of the room, chiefly from the hotel staff. But it quickly spread across the room as Tim and others from Channel 4 immediately sprang to their feet, joined almost immediately by the rest of the crowd. The standing ovation lasted over a minute as Lisa looked down and saw Clayton giving her a big thumbs-up, the light on the camera glowing to indicate that they were still broadcasting live. And even George seemed to be paying attention, a huge grin spreading across his usually expressionless face.\n\nWith that, Lisa turned to the side of the room where the station's wardrobe assistant Kelli was patiently waiting for her with a coat. Lisa waved appreciatively to the crowd, making sure that the camera could catch one last glimpse of her ass as she turned around to pick up her award and then headed out of the ballroom exit with Kelli and into a waiting limo. Everything had gone precisely according to plan, and she thought to herself as an intense feeling of satisfaction swept over her,\" I've gotten exactly what I wanted.\"\n\n***** \n\nAnd as if that weren't enough, within the next few days things seemed to get even crazier. On Monday morning, she was summoned to Bill Reinhart's office and told that station manager Ken Barber had ordered Bill to fire her. \"Ken wrote up the termination agreement himself and insisted that I deliver it to you. And my advice is that you sign it immediately.\"\n\nLisa was surprised and hurt by Bill's words. He had been her biggest supporter, always the first to acknowledge that she was the reason for the station's tremendous ratings in recent months. \"I need to fight this,\" she blurted out to him. \"Can't you see that?\"\n\n\"Listen, Lisa,\" he continued, \"I've always said I never went wrong by trusting your instincts when it came to these reports. I'm asking you now to trust me. Sign this, let me send it back to Ken and I'll forward a copy to the station owners. Then just sit tight for a day or two.\"\n\nLisa had known Bill for several years, and she knew that he had never lied to her and had always had her back. If he was asking for her to trust him, then she would \u2013 completely and without hesitation. She took the termination agreement from his desk, signed it immediately, and went home to wait. And in less than five hours, her phone started ringing and didn't stop for the next three days.\n\nAs it turned out, Bill knew that Ken had made the decision to fire Lisa without consulting the owners. The station manager had chosen to view her actions from a personal rather than professional viewpoint. Ken felt that her decision to stream the special report on the website and her nude acceptance speech deliberately violated the terms of the suspension he had imposed on her, and he was not about to have his authority challenged by a woman. But Bill also knew that the station owners, who had been closely following the audience's response to Lisa's reports, would have a very different view of what had happened Saturday night.\n\nIn recent months, the owners had been working with the network, looking for strategies to retain viewership in the face of competing media outlets and online news sources. And Bill's first glance at the figures from Saturday night told him that Lisa had found the answer \u2013 once the streaming webcast had started, virtually all of their viewers as well as a number of people watching other channels had shifted over to the internet, giving that special report a 70% market share. That meant that more than two-thirds of the viewers watching any sort of in-home entertainment on their television \u2013 local or cable stations or streaming services \u2013 had been tuned into Lisa's naked performance, ratings that were comparable only to the Super Bowl.\n\nBy two o'clock that Monday afternoon, Ken Barber was out of a job and threatened with a lawsuit for exceeding his authority in firing Lisa. Bill was approached to take over as station manager and empowered to negotiate a new contract with Lisa, who \u2013 because of Ken's termination agreement \u2013 was now legally free to sign with any media outlet she chose. The station owners were desperate to get her back before anyone else hired her. And over the next 24 hours, she received offers from every local station as well as seven different cable and national news programs.\n\nBy Friday just before she flew to California to visit Manny, Lisa inked a new agreement with Bill and Channel 4. Going forward, she would be part of a live streaming late night newscast once a week, a full thirty minutes of programming without restrictions or censorship. The contract allowed for the possibility of expanding to additional nights with appropriate compensation for all involved. And, as the owners indicated, the network would be watching the initial ratings with an eye to syndicating it nationally. \n\nKnowing that her colleagues had been instrumental in pulling off the Saturday night broadcast, Lisa had insisted that they all be included in what her contract called the \"Late Night Special\" webcasts. And so, Bill went to work on new agreements not only with Natalie, Danielle and Nicole, but also with, cameramen Clayton Reid and George Reynolds, reporters Sue Thomson and Ashley Miller, and sportscaster Tim Willis. All were given signing bonuses and designated for special travel as needed to shoot segments for the webcasts. \n\nAs Lisa explained to Manny when he greeted her at the airport in Los Angeles, the key to it all had been the realization that the success of her reports depended not on the station or Ken Barber but on her colleagues. It then became clear to her that she could ignore Channel 4 rules and put her plan into action simply by enlisting the help of the same people who had always been there for her in the past. The only real obstacle was how to do a report on a dare when she wasn't able to use the studio's equipment in the week leading up to the broadcast. She couldn't count on winning the award and being able to perform a dare live on air, so the only possibility was to report on something that had already been filmed \u2013 Manny's director's cut. \"You see,\" she concluded with a shrug of the shoulders, \"I really didn't have any choice after all. And I think Natalie was a little jealous that I came up for the idea of using your video. So to get even with me, she made sure everyone at that dinner knew about the webcast.\"\n\n\"But that still doesn't explain why you stripped at the awards banquet,\" Manny noted. \"Once Natalie had aired the video, you had accomplished everything you set out to do.\"\n\n\"Well, I did feel it would be letting our audience down if I didn't do something for the viewers who could see only Channel 4 and not the webcast,\" she said with a gleam in her eyes. \"And maybe I somehow sensed that going forward, things would be different.\"",
        "\"Different?\" Manny looked puzzled. \"How?\"\n\n\"Let's just say we now have an entire news team willing to work on the webcasts. That means I won't have as many opportunities to misbehave, so I wanted to be bad while I still had the chance,\" she said with a giggle.\n\n\"I see,\" said the videographer, holding the door open as Lisa got into his car. \"So now you're ready now to share the spotlight with a team of daring reporters.\"\n\n\"I guess so,\" Lisa said, smiling to herself as she thought about the possibilities. \"And who knows, I may find some other ways to be naughty.\" Sighing, she snuggled against his shoulder and stared off into the distance as they drove out of the airport. \"But for now,\" she purred as she moved her hand up his thigh, \"let's just enjoy the weekend.\"\n\n(The End?)"
    ],
    "authorname": "rd75000",
    "tags": [
        "exhibitionist",
        "reporter",
        "public nudity",
        "striptease",
        "television",
        "news",
        "camera"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/daring-lisa-marvell-ch-06"
}