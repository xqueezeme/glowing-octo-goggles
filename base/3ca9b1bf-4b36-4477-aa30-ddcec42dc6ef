{
    "title": "My Life Pt. 06",
    "pages": [
        "So I think I have mentioned before that I am a licensed massage therapist. I got my license because it was a good way to have flexible hours and decent pay while going to school. I also used it as an avenue for the more profitable and often times more pleasurable sex work that I do.\n\nThe sex work has been mostly men. The legitimate massage business has been a fair mix of both men and women. This is a story of one of my very few sex work clients that has been female.\n\nMy Life Pt. 6: Tammy Massages an Older Woman\n\nPrologue:\n\nA reminder popped up on my laptop screen, time to get ready for my 2PM. I didn't need the little \"L\" indicator on the reminder that this was a \"legit\" session; the name of the client \"Linda\" told me it was just an hour massage. The indicator \"L\" was opposed to \"S\", which stands for sensual in my mind. I am most certainly open to sensual sessions with women; I just generally don't get that kind of customer. On the other hand my legit side does attract a fair amount of female clientele, like three out of ten. \n\nI had my booking system set up on two different portals that went to the same place. I am all kinds of savvy when it comes to computers. The different portals made my life easier and protected me from unwanted legal attention in some ways. I could keep my schedule all in one place and not give the client more or less than they were expecting. I also usually prepared differently for S clients.\n\nI queued up some relaxing music on my MP3 player and put some essential oils in the diffuser, vanilla and jasmine, a sensual mix that works well for either kind of session. Smell is an important part of both massage and sex, a fact that is often overlooked. Lighting is important as well, I checked my little mood light to make sure it was working and set to a calming sequence that faded from purple to red to almost orange.\n\nWith that squared away I put fresh sheets on my massage table, crisp, high thread count cotton. I also put out some fresh soft towels. I put some water in the little crock pot I use to heat up my hot stones and set it to warm. I really enjoy the Zen of setting up for an appointment. It's the little things that I think set me apart.\n\nMy apartment was above a hair salon that was zoned commercial so I could work right from home. I had a beautiful cloth that I had picked up at a garage sale that I hung from the ceiling. It was a Japanese style cherry blossom design and very pretty. The cloth divided my living room in half. One side had my computer, a futon, TV, and kitchenette. On the other was my massage space. I really loved my apartment.\n\nI was feeling nice and relaxed and I still I had forty five minutes left before Linda was due to show up so I turned up the heat in the room and jumped in the shower. It would take a while for the room to warm up. My client would be mostly nude and chills make massages uncomfortable. This is one of the things most people don't think about with their masseuse, they are working hard in a hot room to make you feel good. It is hard work.\n\nAfter my shower I put a jasmine vanilla lotion all over my body. I took my time, relaxing and massaging myself a bit, rubbing lotion into my long smooth legs and all over my body, making my skin soft and fragrant. No one wants their masseuse to smell bad. I took some time to admire myself and how far I'd come since the little boy I was. My legs were long and muscular from my martial arts, but in a very feminine way. Everything about me was feminine now. My tummy was flat and the curve of my hips was rather sexy. Working the lotion into the soft curve of my ass I admired the muscle tone there. I silently thanked my Mom for my good feminine genes. I am not shallow or vain, but I do enjoy being pretty.\n\nI honestly wish my ass was, well bigger. My Mom was my feminine ideal and she was very voluptuous. Voluptuous was not a word you'd use to describe me, I was more lithe I guess you'd say, though in my more self-judgmental moments I thought I was way too skinny. Men do tend to be very attracted to me though and for the most part I have good self-esteem. If you asked me I'd say I was \"cute.\"\n\nI worked the lotion up my torso to my perky little breasts. I couldn't help but tease my nipples a little to make them stand at attention. I was definitely of the \"Weird Science\" variety \"More than a handful...\" I was a good solid handful, at least for my small hands. I wear an A cup for you bra size pervs who just need to know. I also had rather large cone shaped nipples that took up about a third the size of my breasts. I loved my boobs more than anything in the world. Weird but true. They were what really made me feel feminine.\n\nThis entire lotion rubbing thing was starting to turn me on a bit, but I mentally calmed myself. It wasn't going to be that kind of session. Still I put on a cute pair of red and black lace and satin panties and covered myself with a simple, thin silk half kimono robe. I carefully tucked my little girl cock to keep it from being a distraction. I did my makeup fairly simply and checked nails, which were freshly groomed and done in a French manicure. They were long but not crazy, and I double checked the edges to make sure they were smooth. Everything was the way I wanted it.\n\nMost people find oriental styles very calming so I always dressed and decorated my space with a minimalist Japanese design and decked myself out the same. I put my dark wavy hair up with a couple of long oriental hair pins and then I was ready just in time. Five minutes to wait, so I poured myself a glass of wine.\n\nWith two minutes to spare my intercom rang and I buzzed her up. My first impression of Linda was that she was nervous as hell. Sometimes I encountered this with sex work, but not very often in straight massage. The next thing I noticed was that she appeared to be a very powerful woman.\n\nThe Massage:\n\nBy powerful I mean she was wearing a navy business skirt suit. She was a big woman, much taller than me in her heels; she probably would have an inch or two on me in bare feet, and I'm fairly tall at five foot seven. She was broad shouldered, with large breasts and wide hips. She had shoulder length brown hair with some streaks of gray, cut just above her shoulders with the ends curve in towards her neck. It was a very classy look.\n\nHer face was beautiful to me but could probably be more accurately described as handsome. I don't mean to say that she was mannish, she wasn't at all. She just had some very strong features. Adjectives like pretty or cute would definitely be out of place. \n\n\"Hi, I'm Tammy.\" I greeted her with a friendly smile that was meant to put her at ease.\n\n\"Linda\" she said a little stiffly and she shook my hand. I noticed her nails were also freshly manicured.\n\n\"Would you like a glass of wine?\" I asked.\n\n\"Oh that would be nice\" she said, opening up a little.\n\nI motioned her to sit in one of the two chairs in my massage space. I poured her a glass and handed it to her. She immediately took a sip as I took the other seat. The chairs were angled at a precise forty five degree angle to each other. This was a calculated set up too. Directly facing would be too confrontational, facing away would be less intimate. Some might think that all this calculation was cynical of me, but I prefer to think of it as thoughtful. I am to this day very proud of what I do.\n\n\"Have you ever had a professional massage before?\" I asked\n\n\"No,\" she replied pensively, \"I never have.\"\n\n\"Do you have any medical conditions I should be concerned about?\" \n\n\"No, none\"\n\n\"What brings you here today?\" I asked\n\n\"Well,\" she began, clearly hesitant, \"Cherry downstairs recommended you and you're going to think this is silly, but I have been on my own for a long time, since my divorce and I...\" Cherry the downstairs salon with a storefront just below my apartment. She sometimes sent me clients, though not often. I'd have to thank her.\n\nLinda's voice had cracked a bit at the end and I could tell this wasn't the typical relaxation or lower back pain case. I reached over and gently put my hand on her knee. \"Go on, please.\" I said in a nurturing tone.\n\nA single tear broke and rolled down her left cheek. She wiped it away and looked at me with an almost defiant expression. \"I just needed a little human contact.\" She finished.\n\nI gave her a warm smile. \"Well then you've come to the right place.\" I said, and I meant it. I could help this woman and that made me feel good.\n\n\"Let's get started, shall we?\"\n\nI asked her to get undressed to her level of comfort. While she disrobed I busied myself arranging my oils, hot stones and started the aroma therapy diffuser. While I was doing all this I spoke softly to her about how to work together for a great massage, that she shouldn't be afraid to instruct me if I was hurting her or if she wanted more of something to just ask.\n\nAs she got undressed I did occasionally glance and watch with my peripheral vision. I noticed a few things while this was happening. The first was that she got completely naked. Not unusual, but for a first massage I thought it was pretty brave. A lot of people leave their underwear on. \n\nThe second was that she was very well groomed with a neat triangle of pubic hair just above her mound. I guessed that she probably waxes, which I thought was odd for someone who was as lonely as her. We all have our hopes though.\n\nAnother thing I couldn't help but notice is that her breasts were firmer than I expected for their size and her age. She was a very attractive woman naked, big but with firm relatively smooth skin and nice curves along her belly, hips and thighs. She was going to be a pleasure to massage and I was definitely intrigued by this woman.\n\nI poured some oil on my hands and rubbed them together to warm it up. I gathered her hair to the side and began working on her neck and shoulders first. She was rather muscular, not like buff or anything, but strong and broad. I could feel her relax into the massage table the minute I touched her. I pushed the sheet she had over her down a bit to work further down into her shoulder blades. We were silent except for little moans of pleasure here and there that made me smile.\n\n\"Is the pressure good or would you like me to go deeper?\" I asked softly as I worked and kneaded her shoulders.\n\n\"Mmm it's perfect.\"\n\n\"You're younger than I expected.\" She said through the hole in the table.\n\n\"Is that a bad thing?\" I asked, curious.\n\n\"Not at all,\" she said between soft moans, \"you are very polite and professional and your hands feel amazing.\"\n\n\"Thank you\" I said as I worked further down her back.\n\n\"You have lovely skin,\" I commented, \"I can tell you take good care of yourself.\"\n\n\"Thank you\" she said \"I wish more people would notice.\"\n\n\"Not having much dating luck lately?\"\n\n\"Ugh, I don't even try anymore; a lot of men don't care for career women.\" She said sounding a little bitter.\n\n\"I understand,\" I replied with empathy, \"dating gets discouraging at times.\"\n\n\"How could you understand, you're young and very pretty.\" \n\n\"Thanks,\" I replied, \"but I'm not everyone's cup of tea.\"\n\n\"Why's that?\" she asked.\n\nI hesitated to reply and instead concentrated on working her lower back and working my hands in opposing directions to stretch her spine. I wasn't sure how I wanted to answer that, but I do prefer to be open about things. \n\n\"I'm Trans\" I replied.\n\n\"I don't know what that means.\" she said curious.\n\n\"It means I'm transsexual that I was born a boy.\" \n\n\"Oh...\" she replied, then \"wow.\"\n\nI grabbed the oil and put more on her back, then began working her back in broad sweeping strokes.\n\n\"I hope it doesn't bother you\" I said\n\n\"Huh? Oh god no, not at all, I just...\" she hesitated, \"I've never met anyone like you and I was surprised, you are so pretty.\"\n\nOK so when someone says something like that to a Trans person it does come across rude, like saying \"I'm really surprised you're not a monster.\" Some Trans people find this offensive no matter who is saying it and that is perfectly reasonable. I personally believe that most people will generally learn to speak less offensively the more they interact. When Linda said this I didn't get any sense of malice so I just rolled with it.\n\n\"Well thank you again for the compliment.\" I said smoothly as I worked the blades of my hands up her trapezius muscles to her shoulders. She groaned in response. \n\n\"To be honest, I think you are really pretty and you have the hands of an angel.\"\n\n\"Thank you.\" I replied, genuinely flattered this time.\n\nI worked my way back down over her lower back to massage the large muscle groups in her butt. She was a big woman and had very wide hips and a big ass. I was really enjoying the aesthetic of her body under my fingers. I am really good at what I do, especially when I get in to it. I was really into it.\n\nI had to walk around the table to get to the other side of her. I put more warm lotion on her body, letting some \"accidentally\" trickle into the crack of her ass eliciting and \"ooh\" from her. When I started in on the other side of her body, she was more actively engaged, her hips moving a bit with the motion of my hands.\n\n\"So um... would it be OK for me to ask a question?\" she said timidly between groans.\n\n\"Sure\" I said, thinking here we go.\n\n\"Have you had... I don't know what to call it, like surgery?\"\n\n\"No,\" I said in a polite and practiced sort of way, as a trans person this is the number one question you get, \"I haven't had sexual reassignment surgery and I don't really plan to.\"\n\n\"Oh so you still have...?\"\n\n\"Yes\" I said smiling to myself at the predictability.\n\n\"I'm sorry, that was rude wasn't it?\" she asked.\n\n\"It's OK\" I replied working my hands over her hips \"some people would find it rude yes, but I know people are curious so I try to be an ambassador of sorts.\"\n\n\"God that feels incredible.\" I was working the backs of her thighs in long strokes from her knees to just below her butt. \n\nI couldn't help but notice at that point that there was a tension building in the room. I was pretty sure it was a sexual tension as each time my hands slid up near her ass her hips would rise up slightly. When I slid my oil slick hands between her thighs, she parted them more. Her moans also got more intense the higher I went. I focused in this area for a while, wonder what she was thinking.\n\n\"Do you get a lot of male clients?\" She finally asked breaking the silence.\n\n\"Mmhmm,\" I responded \"Most of them actually.\"\n\n\"I bet they hit on you a lot.\"\n\n\"Sometimes\" I replied.\n\n\"Do they usually know?\" she asked hesitantly.\n\n\"Yes,\" I responded \"It's actually on my website that I use for booking, but since you came through Cherry downstairs you wouldn't have seen it.\"\n\n\"Oh\" she replied, groaning a bit as I worked her inner thigh.\n\n\"What do you tell them, the guys that hit on you I mean?\" \n\n\"I tell them...\" just as I was responding to this I worked my hands in a broad circle over her ass and hips on both sides, my thumbs sliding comfortably along the curve that lead to the crack of her ass, \"that if they want me to touch them somewhere specific, they need to ask...explicitly.\"\n\nMy hands had stopped, cradling each side of her ass. My thumbs came together and worked in circles descending slowly down her tail bone towards her waiting crack.\n\nThe Sex:\n\n\"Will you touch me?\" she asked breathless, I could tell it took almost all of the courage she had just to say that. I paused in my rubbing; unfortunately I had to demand more.\n\n\"I am touching you Linda,\" I said carefully \"would you like more attention somewhere else?\"\n\n\"Yes, I mean... I... I...\" she stammered, \"Would you touch me sexually?\"\n\nWithout another word I let my left thumb slide down to her puckered ass and pushed gently, not penetrating her, just a little pressure and stimulation. My other hand slid down between her thighs, my fingertips gently grazing her labia.\n\n\"Oh god\" she moaned, lifting her hips.\n\nI slid my right hand up and down her slit, teasing her gently. I leaned down and planted a soft kiss on the globe of her ass. Her hand, hanging off the table, found my leg and started massaging the back of my thigh. Her touch felt really good.\n\nI continued this pattern, moving lightly up and down her inner thigh and just grazing her outer labia on each pass, my other thumb pressing the pretty rosebud of her ass in small circles until her hips were rocking with my movements. I felt her gorgeously manicured nails dig into my thigh each time I grazed her pussy.\n\n\"I think maybe it's time for us to turn over.\" I said my tone still professional.\n\nShe did.\n\nI stood at the foot of the table, looking over the incredible landscape of her body. She was big and very curvy; her body lay before me like rolling hills of beauty. I was in a bit of pain now as my carefully tucked little girl cock was straining against the thin barrier of my panties.\n\nI started at her feet with long light strokes up to her knee and back down. She let out a tiny whimper and I could feel her body aching for more direct contact. I had other plans though. I wanted this woman, this gorgeous and powerful woman lying before me, to experience the most mind blowing orgasm of her life. At least I would try and that would take a bit of teasing.\n\nAs I moved up her thigh I climbed up the table. She opened her legs to accommodate me, her knees now bent. I had a full view of her beautiful pussy. Her pubic hair was trimmed in a very neat triangle above the gentle mound, which was completely hairless, definitely waxed. \n\nHer head was thrown back, her eyes closed. When I finally settled on my knees between her legs she opened her eyes and looked up at me.\n\n\"I want to see you.\" She said.\n\nReaching up and moving as seductively as I knew how I slowly drew first one, then the other hair pin out, releasing my shoulder length, dark, wavy hair. Setting them aside on the table, I opened my silk robe, slowly exposing my breasts, the pink cones of my nipples standing at full attention. I let the robe fall off of my shoulders, then off my arms to settle around my waste.\n\n\"My god you are beautiful\" she said, her eyes locked on mine.\n\n\"I want to see all of you.\" She continued.\n\nOK, so untucking my half hard cock gracefully is not something I'll pretend I did well, but I did work it free and pulled it straight so the top inch or so stuck out of the top of my black lace panties. I looked away shyly. I just didn't know what she would think.\n\n\"Beautiful\" she repeated.\n\nTaking that as my cue I put my hands on her bent knees and started again with long smooth strokes down her upper thighs to her hips. She spread her legs wider. Over her hips, my hands traced an oval track around her begging pussy and up her inner thigh to her knees on either side of me, causing another whimper.\n\nOver her knees and down her outer thighs my hands traced a light course. When I moved up her sides, I let my momentum carry my upper body forward until I was kneeling over her. My hands caressed the large mounds of her gorgeous breasts. She had very large areolas and her nipples were hard and large as the erasers on those big novelty pencils. \n\nLeaning down I took one of her nipples between my lips and let my tongue tease it in circles. I felt her hips lift beneath me, searching for any kind of touch, dying for release. My fingers lightly pinched and rolled her other nipple.\n\n\"Mmm oh wow that feels incredible.\" She moaned.\n\nFrom there I kissed my way down over the soft swell of her belly. Her skin was so hot and smooth against my lips that I couldn't help but also nuzzle my cheek against her skin. I was reveling in this woman's body and everything about her was intoxicating. \n\nRising up I put my hands, splayed like a butterfly across her upper chest and dragged them slowly down the length of her body, down the deep valley between her enormous breasts, over the swell of her belly and down, my forearms spreading her legs even wider in advance of my caressing fingers. Her body responded beautifully. Her back arched, her breasts swelled proudly as she took in a long and deep breath. ",
        "My hands kept going, this time firmly traveling over her mound, my index fingers side by side parted her labia majora to press lightly on either side of her engorged clit. She let out a long low animalistic groan. Her pussy was completely soaking wet. I lowered my lips and tenderly took the bud of her clit between them. I felt her hand go to the back of my head, there was no way she was letting me take my mouth off of her until this was done.\n\nI sucked softly at her clit with my full soft lips as I slid a finger inside of her. She pushed her hips up towards me and I sucked a little harder and flicked my tongue back and forth across the tip. This elicited a spasm that ran the whole length of her body and a loud moan that ripped through the quiet music and sounds of the room. She grabbed my hair in a tight fist that hurt a little and I found that I liked it. It made me feel engaged with her.\n\n\"Mmmm oh my fucking gawd!\" she cried out when she caught her breath.\n\nI was enjoying this so much I that I didn't want to get her off just yet. I didn't have a ton of experience with women, so I explored a bit. I moved away from her clit and ran my tongue up and down her slit, tracing her lips. I sucked first one side then the other.\n\n\"Oh fuck Tammy harder.\" She demanded breathing heavily.\n\nI sucked her pussy lips between my teeth, gently but just enough so she could feel it.\n\n\"Mmm fuck yes just like that!\"\n\nI continued sucking, alternating from one side to the other and in between lapping up her juices with my tongue. I was kneeling between her legs and feasting on her sex. My ass was in the air and I couldn't help but imagine what it would be like to have a man taking me from behind while I did this. I resolved I would have to make that happen someday.\n\n\"Ohhhhhh soooo good!\"\n\nShe was getting frantic, her hips gyrating as she squirmed under the relentless attention of my tongue and fingers. It was time to bring her off. I kissed and sucked my way back to her clit. As I sucked it between my lips my tongue flicked back and forth across the tip and her hips started pumping up and down. Her grip on my hair tightened again as she started to control the pace.\n\n\"Oh fuck harder.\"\n\nI sucked her clit deeper into my mouth.\n\n\"Harder.\"\n\nI sucked her clit harder and pressed my tongue against it and let her hip motion grind it across my tongue.\n\n\"Yes fuck, HARDER!\" she practically screamed.\n\nI felt her hand groping and searching my chest. I moved forward and her hand grabbed my breast and squeezed, which drove me wild with lust for her.\n\n\"Jesus... Fuck... Fuck... CHRIST!\"\n\nThe trembling of her body as her orgasm finally took her almost alarming in its intensity. She threw her upper body back onto the table, her back arched and her hips thrust up, pumping her clit between my lips as she came hard and her whole body shook.\n\nWhen the arch of her back finally collapsed back to the table her body continued to shake with the aftershocks of her orgasm. She pushed my head away finally breaking contact with her pussy as her clit became super sensitive. I left my finger unmoving inside her for a few more seconds before sliding it out of her slowly.\n\nWhen I looked up at her, her eyes again locked to mine. Her face and upper chest were flushed and her body was covered in a light sheen of sweat. Her eyes got this wild animal look and she again reached up to grab my hair, this time she pulled me up her big and beautiful body to her mouth for a deep kiss, her tongue probing my mouth insistently.\n\nThis had the effect of bringing me down on top of her. My little cock nestled nicely into the cleft of her soaking wet pussy. She pushed against me and my hips responded of their own volition with a matching thrust, sliding up and down between her pussy lips as we made out intensely.\n\nWe were thus locked in this movement for what seemed an eternity. I wasn't going to last much longer, I could feel my own orgasm building.\n\nThen it happened. She thrust her hips deeper and my cock slid smoothly and deeply into her cunt. \"Oh Fuck!\" my mind went into a complete panic as a million thoughts competed for dominance in my consciousness at once.\n\nI wasn't wearing a condom for one. I knew next to nothing about Linda's actual sexual history. This is not something I do. My body had other intentions though as I felt myself thrusting my little cock into her again. \n\n\"Oh god what am I doing!\" I thought to myself as I thrust into her again and she thrust back twice as hard and nearly bucking me off the table. I was extremely aware of how much bigger than me this woman was.\n\nI was also not used to this velvety hot wet heaven my little girl cock was currently ensconced in. Usually I am the one getting fucked. This was just sensory overload. I was going to cum any second. Again, no condom. \n\nOne more deep thrust into her and I pulled out just as my little cock was erupting cum. \"Ohhhh\" she said when she noticed what was happening. Hot white semen splashed across her belly and my body shook as I just kept cumming and cumming all over her body. I felt so embarrassed and yet I was in complete heaven at the same time.\n\nFar from being upset by me cumming all over her, she pressed her hands to the hot sticky puddle on her belly and rubbed it all over herself and up to her breasts. Then she pulled me in to another deep kiss that was only broken by a spasm in her body beneath me, which worried me for a second as I didn't understand what was happening.\n\nShe took my face in both of her hands and pushed my head back. She was looking me directly in the eyes as her laughter took her. Soon we were both laughing joylessly together. Then she rolled to the side, we were laying together, hands caressing each other's naked bodies, laughing and kissing and enjoying this moment of pure intimacy.\n\nAfter a good long while the moment finally faded and I led her to my shower. We washed each other like long time lovers. Her face was so relaxed, so beautiful in this carefree state. She was a different woman entirely, no longer stiff and nervous. It made me feel so happy and proud.\n\nFully dressed she paid me $300 as she was leaving. I protested that it was way too much.\n\n\"Nonsense.\" She said firmly pressing the money into my hand, \"that was by far one of the best experiences of my life.\"\n\nI accepted the money. Then her face became nervous again.\n\n\"Would you see me again sometime?\" she asked almost shyly.\n\n\"Yes!\" I said with a beaming smile. I gave her a huge hug and a passionate kiss. She left happy.\n\nEpilogue:\n\nLinda called me the following week and asked me to meet her for coffee, I readily agreed. She asked me out and I was flattered beyond belief, but I just couldn't see it working out. I agreed we could if we could keep it light and fun and it was for a while.\n\nUltimately my work got in the way. She offered to support me, men often do this too. I call it \"Pretty Woman\" syndrome. People so often think they can rescue you from a life you have chosen for yourself. I do this because I like it, not because I am desperate. I am an intelligent young woman with the agency to make my own decisions, to chart my own path through life.\n\nI did end up helping her find a new social group though and she ended up dating my friend April for a long time. April is trans and not really remotely passable but beautiful in her own way. They really fell in love with each other and are still together. \n\nLinda still comes to see me for massages and more, though our interactions are more businesslike since she met April. I still give her orgasms after each massage, either by hand or going down on her, whichever she is in the mood for. Yes, April knows about this. The queer community is often less stuck on societal norms of fidelity. Linda still pays me too much for these sessions. All in all things worked out really well I think, almost like \"Happily Ever After.\""
    ],
    "authorname": "ShyTammy",
    "tags": [
        "massage",
        "orgasm",
        "older woman",
        "bbw",
        "cunnilingus",
        "caressing",
        "prostitution",
        "healing sex",
        "trans with woman",
        "cum"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/my-life-pt-06"
}