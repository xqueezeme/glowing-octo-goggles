{
    "title": "Return To Point Hollow Ch. 02",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n***\n\nPart 7 - Ambushed (continued)\n\nOne could cut the tension in the air with a katana as we arrived back at Police Headquarters. The SWAT Team had come up, fully armored and armed, in a standoff in the lobby against six FBI Agents. The entire Detective Corps that were at Headquarters had put on their armor and gone to augment the SWAT Team. \n\nAnd Lt. Commander Teresa Croyle was there... she'd had to order the heavily pregnant Joanne Warner back to MCD, and then she positioned herself right in front of FBI SAC Bob Parsons. That was not going to end well for someone...\n\nCindy and I had put on our armor before going inside. As I came around the Duty Desk to the lobby, I saw Bob Parsons and his brother David right behind him, Peter Page, Dominic Ellis, and two others I did not know.\n\n\"What is it with you people?\" Bob Rovers was asking huffily. \"We're here to help solve this case!\"\n\n\"Your help was not asked for.\" I thundered as I came around the Duty Desk and into the lobby. I felt the surge of energy in my Officers, and the surge of hatred in the FBI Agents. \"What the fuck are you doing here, Rovers?\"\n\n\"Ah, there you are, Troy.\" said Bob Rovers. We're taking over this case. It crossed State Lines. Hand over everything you've obtained to this point. And we need space here to set up our operations to investigate the case.\"\n\n\"Where's your writ?\" I asked.\n\n\"Pardon?\" said Bob Rovers.\n\n\"Your court order to take over the case.\" I said. \"Oh, you don't have one. And you won't get one, because these are State crimes. You have no jurisdiction here, so get out or get arrested.\"\n\n\"Listen you little punk.\" snarled Bob Parsons, \"you're nothing but a local piece of shit cop. We're the FBI, the FEDS! Now get the fuck out of my way, or I'll barbecue your ass...\"\n\nHe stopped talking as Teresa pulled her service weapon out of its holster and aimed it at Bob Parsons, the *CLICK* of the safety being taken off clearly heard throughout the lobby.\n\n\"Better be sure.\" I said. \"This here local Police Officer outran an exploding building, but I don't think you hotshit Feds can outrun bullets.\"\n\n\"That's assaulting a Federal Agent.\" snarled David Rovers.\n\n\"No, it's protecting her immediate superior Officer from a hostile threat by an armed trespasser.\" I said. I then raised my voice and said \"Place these six trespassers under arrest. Disarm them!\" Police were moving forward to implement my instructions. The FBI Agents drew their firearms.\n\n\"FEDERAL AGENTS, HOLSTER YOUR WEAPONS!\"\n\nThe voice came from the front doors. FBI Assistant Director Owen Lange stormed into the room, followed by FBI SAC Jack Muscone and FBI Special Agent Julius Jefferson. Jefferson had made the command in his powerful voice. All of them had on armor protection.\n\n\"Put your weapons away! Now!\" ordered Lange. No one moved. \"Parsons, what the hell are you doing?\"\n\n\"Taking over this case.\" said Bob Parsons. \"It crosses State Lines, and it's obviously mass murder by a psychopath, which BAU units are intended to solve.\"\n\nI said \"We have not asked for the FBI's help, and these are State crimes. We do not yield jurisdiction, and never will to this incompetent, disreputable BAU.\"\n\n\"Commander Troy is right.\" said Jack Muscone. \"It's State jurisdiction, and this particular BAU has been shown to be incompetent in two past cases in this area.\"\n\n\"I agree.\" said the EAD. \"Parsons, get your ass and your people out of here. By that, I mean get all the way out of this County. Move.\"\n\n\"This is our case, Mr. Director---\" tried Parsons.\n\n\"I SAID GET OUT!\" yelled the EAD. Considering that he was a man who was brave enough to challenge Your Iron Crowbar to freestyle boxing matches in the ring, he was not a man to be trifled with.\n\nBob Rovers looked at me with unappeasable hatred in his eyes. \"I'll be back, you piece of shit.\" he snarled quietly.\n\n\"It's your funeral.\" I said.\n\n\"And you're going to get raped, bitch.\" Parsons snarled at Teresa as he turned to go. I physically restrained her from going after Parsons and severely damaging him. The FBI Agents all left.\n\n\"Stand down, everyone.\" Teresa ordered.\n\n\"Great job, guys.\" I said. I turned to the Duty Desk Sergeant. \"Good job, and thanks for calling me...\"\n\nPart 8 - Tidal Wave\n\n10:15am, Thursday, October 3rd. We were in the Main Conference Room.\n\n\"On behalf of the FBI,\" said AD Owen Lange, \"I apologize for Rovers and his BAU's actions this morning. I did some checking. They had no authority to come in, they weren't assigned to come in, at least not by anyone who will admit it, and I've referred all of them to the Office of Professional Responsibility for an investigation.\"\n\n\"So why are they here?\" asked Cindy Ross. \"By that I mean... I don't understand their motives.\"\n\n\"That BAU team is one of the Swamp Frogs's marked cards, one of their tools against us.\" I replied. \"When I see the Rovers BAU team, I see Swamp Frogs behind them. So something about this case has the Big Boyz's interest.\"\n\n\"Maybe the drugs that were uuuuuused.\" said Chief Moynahan. \"The toxicology report from the Crime Lab is in your email inboxessss.\" Cindy went for her Police iPhone. I did not.\n\n\"Not interested in the tox report, Commander?\" asked Jack Muscone.\n\n\"It'll keep.\" I said. \"I'm more interested in the timing of the BAU team's arrival. They had to know that neither the Sheriff, Chief, nor I would ever allow them to come in, to set up, or to take over this case. So they timed it so that they were here at the exact time they thought we'd be in the Board of Inquiry hearing. They thought they could bully the rest of the TCPD into letting them in. What they didn't know was that we were going to sue to force Finneran to be recused, so they didn't know we'd be back as quickly as we were.\"\n\n\"We'd have kicked them out, anyway.\" said Cindy. \n\n\"I think I see what they were trying.\" said Muscone. \"They didn't expect the entire TCPD to front them. They figured they'd be allowed in, maybe even given a space, and then given the information on the case. By the time you got back and kicked them out, they'd have that much. Now... they're going to have to get a warrant to get the tox report and the autopsies.\"\n\n\"Yep.\" I said. \"And alternatively, they may have just wanted to create the confrontation. It was very personal with both Bob and David Rovers... especially in the aftermath of the Blassingame conviction and death penalty. They get inside and we have to kick them out, maybe they thought they could get something out of that. They may have thought they could get something out the confrontation that did happen, but that got blown up when you guys came in.\"\n\n\"You may be right... you usually are...\" said Owen Lange, \"... and I'm not going to let this one go. I'll be digging deep to find out what's going on.\"\n\n\"And speaking of what's going on,\" I said, \"I have not failed to notice your presence here, not in Washington, but here in my Town & County, Mr. Assistant Director. And I don't think you're here for the double cheeseburgers or a rematch in the boxing ring.\"\n\n\"Not much gets past you.\" Lange said. \"Yeah. When I heard about the mass casualty event, I just got into the car, went to the airport, and caught the next flight to the City. This thing potentially could get national interest. And Don, while I know the Rovers BAU has totally poisoned the atmosphere, pun not intended, and you're not predisposed to accepting Federal help... we do have some competent and good BAU units. If you need any help, give me a call, and I'll send them to help you... and not in the way Rovers just did.\"\n\n\"Thank you, Mr. Assistant Director.\" I said. \"Let's see what plays out as the data comes in. And speaking of double cheeseburgers, you might as well have one or two while you're here. Right, Jack?\"\n\n\"Thanks for nothing. Now I'm all hungry\" Jack complained. We all chuckled at that.\n\n* * * * * * * * * * * * * *\n\n11:00am, Thursday, October 3rd. Cindy came into my office. \"Did you see the autopsy and toxicology reports?\" she asked.\n\n\"I sure did.\" I said. \"Nothing personal against Jack or Owen Lange, but I didn't read it then because they'd have asked me for my opinion on it, and I didn't want to share with any Feds.\"\n\n\"Don't blame you.\" said Cindy. \"So give your Kato your opinion on it.\"\n\n\"You remember that drug that killed Louella Hopper?\" I asked. (Author's note: 'Casting Aspersions', Ch. 01.) \"Martha said that the drug that was injected into the six dead people was very similar to it: a neurotoxin that stops breathing, asphyxiating the person.\"\n\n\"Which explains why they were blue.\" said Cindy.\n\n\"Yes.\" I said. \"The drugs that affected all 18 people were also in the powdery residues the HAZMAT teams found in the area. They're hallucinogens, something like LSD, but more potent. And I've read reports in the past that allow me to know that they induce fear. Various Federal Government agencies experimented with these drugs, but this particular preparation was tested under a program called 'Operation SCARECROW', after the comic book character that is The Batman's enemy.\"\n\nCindy said \"Is that why the BAU team is here?\"\n\n\"I don't know,\" I said, \"but them being here so fast would suggest foreknowledge. The Crime Lab report only came out this morning, right at the time of the confrontation in the lobby. Anyhoo, Jonathan Crane, the Scarecrow in the comics, used 'fear gas' against his victims, and this compound at Point Hollow was administered in semi-gaseous form, like CS tear gas in a smoke grenade.\"\n\n\"So why were the twelve survivors moved?\" Cindy asked. \"To get them across the State Line, and provide the BAU team an excuse to come in?\"\n\n\"That's Iron Crowbar thinking, there.\" I said. \"But it's not the only possibility, so don't fixate on it. Let's hear what the survivors have to say...\"\n\n* * * * * * * * * * * * * *\n\n11:45am. Sheriff Griswold came into Headquarters with Mike G. Todd. Mike was grinning happily. Our Sheriff was much less amused. They came to my office, and sat down in the hot chairs at my invitation. The Sheriff poured himself a mug of coffee, and Mike accepted a bottled water.\n\n\"Judge Watts had us come into his Chambers.\" said the Sheriff. \"On our side was me, Mike, and the Police Captain Union's Rep. On the other side were Silas, Finneran, and the NEA's lawyer representing those six slugs. Judge Watts threatened to put the NEA lawyer in jail for Contempt after the guy got snarky about it, and I was ready to personally effect that arrest and perp walk.\"\n\n\"So how did it go, sir?\" I asked. \n\nThe Sheriff deferred to Mike G. Todd, who said: \"Better than I hoped. I showed the video and the ad, and Watts was ready to make a ruling right there and then. But he held off, and said a full hearing would be scheduled. Until that happens, there cannot be any more Boards of Inquiry... at all. And if the hearing is strung out until past January 1st, it won't happen at all. But I think the NEA's lawyer is going to take it to the Appeals Court to demand an immediate hearing or removal of the stay.\"\n\nI nodded. \"Okay, then.\" I said. \"Thanks for that good work, Mike. I need to talk to the Sheriff for a moment.\" Mike took the hint, said he'd be in touch, and exited the room.\n\n\"What about Silas, Sheriff?\" I asked. \n\n\"That son of a bitch straight-out lied to me.\" growled Griswold. \"We've always known Finneran was corrupt, but I had no idea Silas had turned like that.\" Then he peered at me and said \"I also had no idea you were going to do that to bust Finneran's chops.\"\n\n\"No, I didn't mention it to anyone, until I worked it out with Mike.\" I said. \"I realized at the time, during the Charter Commission hearing, that I could use that against Finneran. Mike had someone file the lawsuit as soon as the Court opened, and Watts wasted no time in issuing the stay pending the hearing. That notice to Silas was already on the way.\"\n\n\"Did you know Silas was going to do me dirty by not postponing the BOI?\" the Sheriff asked.\n\n\"It's not paranoia if they're really out to get us.\" I said with a grin. \"I did consider the possibility of it, and I realized it likely would happen when Bettina brought up the BOI in her newscast, but did not say exactly when it was going to be. So by the time my source called me, I was already texting Mike to get ready.\"\n\n\"Har.\" said the Sheriff, who was now beaming. \"Outstanding job, Crowbar.\"\n\nJust then there was a knock on the door. Helena said \"Lunch is ready in Classroom 'E', sir.\" my lovely assistant said.\n\n\"Join us, Sheriff.\" I said. \"We're having a working lunch today.\"\n\n* * * * * * * * * * * * * *\n\nIt was going to be a tidal wave of information coming at us, which is one reason I authorized a catered lunch of subs and pizza. Every bit of the food was consumed when all was said and done... and a lot was said and done. I'd emailed Savannah Fineman, and cc'd DA Walters and Paulina Patterson, that we were having the meeting. Savannah was there, and having one of the subs. Joanne Warner was also in attendance, and consuming pizza for two.\n\n\"Okay,\" said Captain Perlman to start the meeting. \"First of all, notice the new whiteboards on the back wall.\" Indeed, large whiteboards had been mounted on the wall opposite the wall where the projection screen was, pretty much covering the entire long wall. There were screens that could be pulled down to cover the whiteboards.\n\n\"From now on,\" said Captain Perlman, \"the doors to this room will be on auto-lock. You can get in by using your TCPD I.D. on the card reader. But entry will be restricted so that those whiteboards can be used.\" Everyone nodded, and kept eating.\n\n\"Let me discuss these autopsy and toxicology reports.\" I said. I discussed the neurotoxin and 'fear gas' agents that had been found, their effects, and how they may have tied into the case.\n\n\"Okay, Jerome, who is first?\" Tanya asked, after I was done.\n\n\"I'll go first, so I can get back to my stuff.\" said Myron Milton. \"I've downloaded everything from all the computers or tablets that were confiscated under the warrant. We'll have to give those back, but I have the information on them, including emails, some texts, and all the websites they've visited.\"\n\n\"That's great.\" I said. \"And if you need to go, go ahead.\" Myron grabbed his sub and left.\n\nJerome Davis spoke up: \"I'll give the combined report of this morning's interviews. All of the Detectives did a great job talking with the survivors, and the survivors's stories are very similar.\"\n\nDavis: \"First of all, all of them were still under the influence of the gas or whatever they inhaled, which Commander Troy just confirmed induces hallucinations of fear. They were all still fearful, some more than others. The 'fear gas', as he called it, also may have affected their memories, so we may not be getting a complete picture, but maybe their combined statements will be enough.\"\n\nDavis: \"All of them said they went there for what they called 'the Release'. When asked what that meant, they said it meant 'the release of the Demon'. All of them knew who Guru Bob Stevens was, and they called him 'Guru Stevens' or 'Spiritual Advisor Stevens'. But they also said that he was not the leader of their group. When asked who the leader was, they said only 'Dr. Westbrook'. When asked more about him, no one could tell us more, and some seemed to become frightened as if they were having a relapse into their drugged states.\"\n\nI noticed that Joanne Warner's eyes had lit up at the name of Dr. Westbrook. I tuned back in to Jerome Davis's statement.\n\nDavis: \"When they were asked who was there, how many others, they all said there were more than 20, and a few said 25 definitively. One of them, Lawrence Evans, said that there were 25, in five groups of five at each point of the pentagram. We never found a pentagram on the scene, so I'm not sure if that was a literal or figurative reference.\"\n\nI piped up: \"The HAZMAT team trampled over the area near the Ritual Tree, and may have obliterated a drawn pentagram in that area. But keep going, for now.\"\n\nDavis: \"Yes sir. They all said they were doing their chants and incantations by torch light, and the torches started burning brighter... all of them independently said that... and they smelled incense and then something really bad, really foul. Some of them said they saw an image of a demon, but not all of them said that. And they said the next thing they knew, they were waking up in the hospital, feeling very scared.\"\n\nDavis: \"None of them remembered riding to another location nor being anywhere else. And none of them can remember any dreams they may have had. Just some fleeting nightmares of a demon coming for them.\"\n\nI nodded. \"Good report. Of course the next question is: did anyone say anything unique, out of the ordinary, anything that contradicted with the others?\" Jerome looked around for help. Sr. Detective Theo Washington picked him up.\n\n\"Sir,\" said Theo, \"Lawrence Evans seemed to be a lot more clear than the others on a lot of things. He remembered the pentagram and groups of five, and that there was a small fire in the dead middle of the pentagram, which sounds to me like it was really there. He says the smoke wafted over him and he began seeing demons, and feeling very deep fear. He also said he smelled a really bad stench, like a dead person and sulfur put together, but seemingly even worse.\"\n\nI felt as much as saw Cindy look over at me, remembering our earlier conversation.\n\n\"Sir,\" said Julia Rodriguez, \"Sarah Wood said one interesting thing. She said everyone met at the University Tavern, one of the bars on the west side of University Avenue. They were all transported in vans to Point Hollow. She said they were black vans, but didn't remember anything else about them, like license plates. She did say that when everyone got there, it looked like there were lights on in the Point Hollow house. They never went to the house, but were led straight into the woods.\"\n\nJulia: \"I called in to have patrols look for everyone's cars at the University Tavern, and they're all there... parked in the back lot pretty much out of sight of the front parking lot and front of the building where people enter. Everyone's car from Irene Ward's Beamer to Gary King's Impala was there. The vehicles were all searched, and nothing at all was found in any of them... and by that I mean nothing at all, not even a chewing gum wrapper.\"\n\n\"Cleaned out, eh?\" I said to myself. \"Did you notify the IT group to get video?\"\n\n\"Yes sir.\" said Captain Perlman. \"We have some footage of the vehicles coming in, and some of them going into the bar. But the camera seemingly just didn't record any vans coming into the parking lot nor any of those people leaving. Myron is checking to see if the video was altered in any way, but he doesn't think it was. And no black vans on the street cams.\"\n\n\"That's not good\" I said. \"Did Sarah Wood say why they were going to Point Hollow?\"\n\n\"She said they were going there in order to witness 'the Release'.\" Julia replied. \"Which is what all of them said. Like Lt. Davis said earlier: when we probed, and asked what the Release was, they all just said 'the release of the demon', and then seemed to go back into a trance-like state. That is what pretty much ended all of the conversations with them, when we asked them that.\"",
        "\"Interesting.\" I said. \"Anything else, anyone?\"\n\nTeddy Parker said \"Just these tidbits, sir. Irene Ward is the third cousin of Marie Ward Arruzio and Cherie Ward. Same great-grandparents. Their fathers were first cousins, and their grandfathers were brothers.\" (Author's note: 'Case of the Murdered Lovers' for Marie Ward Arruzio; 'The Eightfold Fence', Ch. 02. and 'Reichenbach' for Cherie Ward.) \"Also, Stephen Wilson was Dr. Mickelson's student. And Aaron Bennett had been before his DUIs and changes of major.\"\n\n\"Good.\" I said. \"Okay, Detective Warner, you are unleashed. What do you have?\"\n\nJoanne said brightly \"I've been researching the history of Point Hollow. First, the Town was incorporated in 1840, and was a frontier town known mostly for farms and the railroad junction. The University was chartered and started in 1867, and the Town and County grew a good bit after that.\"\n\nJoanne: \"The Point Hollow property was land-granted to a man named Lysander Westbrook in 1850. He planted the orchids and groves of trees, and farmed the land. Yes, he had slaves, who were freed after the Civil War ended, and every one of them left. Now that is interesting because many freed slaves, especially in the South, stayed on the properties where they'd been slaves and worked the farms as employees, sometimes as indentured servants. So for all of the freed slaves to leave suggests bad or harsh management, or some other reason to get out of there.\"\n\n\"And in light of the later spooky things going on there,\" I said, \"maybe there were indeed 'other' reasons for everyone leaving. Sorry to interrupt; keep going.\"\n\n\"Yes, sir.\" said Joanne. \"Anyway, the farm kept going, and it's possible that University students stayed there as boarders during the summers and farmed the land. But over time, especially after 1882, according to old tax records, the land stopped producing good crops, and the groves stopped producing good fruit. But the Westbrooks somehow held on to the property, having other businesses like the Dry Goods store in Town... right where this Police Headquarters is now.\"\n\n\"Still, that was a long trip from Point Hollow to Town or to the University in those days.\" said Detective Sergeant Roy McGhillie. \"They didn't have cars like we have today.\"\n\n\"True.\" said Joanne. \"Anyway, the Town Archives are pretty good and go all the way back to the incorporation of the Town, and the records have been preserved on microfiche and now on data servers. In 1957, Thomas Westbrook died, leaving no male heirs. So the property went to his eldest daughter, Beverly Westbrook Bonniker. Her son was the man who owned The Cabin, Commander Troy, and he also owned Point Hollow. After he died, several claims were made on the estate, including by this man, Dr. Charles Westbrook.\"\n\nA photo of Dr. Charles Westbrook was displayed on the projector screen, and it caused an instant sensation. \"Mamma mia!\" I exclaimed out loud among many gasps in the room.\n\nThe man on the screen looked just like Pastor Raymond Kyle Westboro, the Consultant of Crime!\n\nJoanne said \"That was my first reaction, too, sir. But when I put up this photo of Pastor Westboro, you can see that they look similar, but not exactly alike.\" Indeed, when the two photos were put side-by-side, one could tell that Pastor Westboro's very pronounced beak nose, prominent forehead, and (to me) sinister eyes and disposition were not exactly matched by Charles Westbrook's less pronounced nose, slightly 'softer' features... but there could be no doubt...\n\n\"Wow.\" I said. \"They're related.\"\n\n\"Yes sir.\" said Joanne. \"I traced the family lines all the way back to Lysander Westbrook. Thomas Westbrook, who died in 1957, was born in 1897. Thomas's mother died in 1900. Thomas inherited Point Hollow upon his father's death in 1950, and he, Thomas, had been a respected person in the County, and a County Councilman for years.\"\n\n\"But here's the 'strangeness', sir.\" said Joanne, obviously addressing me in particular. \"The desk person at the Town Archives is a woman named Joan Davis, probably no relation to Jerome Davis here.\"\n\n\"Maybe our family was her family's slaves in the past.\" said Jerome.\n\n\"May be.\" Joanne said. \"All I know is that the Intendent, Adele Peabody, is Mrs. Davis's niece. And Mrs. Davis said her mother knew a woman that had claimed to be a descendent of the Westbrooks. That woman's family Bible was bequeathed to the Town, and was still in the Archives. And in the middle of the Bible were the family's births and deaths. One of the births in 1904 was 'John Westboro, n\u00e9e Westbrook.\"\n\nJoanne: \"Mrs. Davis said her mother's story was that John Westboro was the illegitimate child of Thomas Westbrook and a young woman who was possibly a maid at Point Hollow. The woman and her son were sent away, which was all too common in those times. So I got into the Census reports, and John Westboro first appears in the 1930 census, having a wife and two sons, and living in Coltrane County. Those sons begat sons, one each. One of those sons died ingloriously in a helicopter crash at Cemetery Hill a few years ago.\" That would be Pastor Raymond Westboro, I mused to myself. John Westboro must've been the Consultant of Crime's grandfather. \n\n\"So like Ishmael and his mother were sent away by Abraham...\" I said out loud, \"... John Westbrook was sent away, and we ultimately got the Consultant of Crime as a result. If memory serves me correctly, Pastor Westboro made a claim on the Point Hollow estate, didn't he?\"\n\n\"Yes sir.\" said Joanne. \"And First Baptist Church renewed the claim as Pastor Westboro's formal heir. It's still in legal limbo.\"\n\nJoanne continued: \"Anyway, the other grandson of John Westboro, Charles, legally changed his name to 'Westbrook', got his doctorate in Psychology from the University of Missouri, and worked in St. Louis for years.\"\n\n\"St. Louis.\" I said. \"Hmmm, that's where Angela Harlan came to our Town & County from...\" I went into a reverie, but it was short-lived.\n\n\"Commander Troy,\" said Commander Ross, a bit shakily, \"you took a photo of that painting in the Point Hollow house, didn't you?\"\n\nMy eyes widened as I realized why Cindy was asking. \"Yes. Yes I did. Here, let me send that to you, Joanne. Put it up with these other photos.\" Joanne did so, and everyone gasped. The girl in the painting was obviously closely related to Dr. Charles Westbrook.\n\n\"Yep, she's related.\" I said. \"Good observation, Commander Ross. Very good.\" I explained to everyone else about the painting that had mysteriously appeared over the fireplace at the Point Hollow house. \"So now we have to discover who she is, and what her relationship to all this is.\"\n\nThen I said \"Joanne, this was outstanding work, really outstanding---\"\n\n\"I'm sure this is all very interesting to some of you,\" Savannah Fineman's voice cut in, \"but shouldn't we be focusing on the mass murder?\" The air in the suddenly silent room seemed to become thick with tension.\n\n\"That is exactly what we are doing.\" I replied.\n\n\"Mizzz Fineman,\" said the Chief, \"if you are bored, no one is keeping you here. You are free to goooo at any timmmmme.\" Savannah looked angry, but stayed in her seat.\n\n\"O-kayyy.\" I said. \"Again, Joanne, outstanding report. And all of you have done a great job gathering this data. So, who wants to wrap up?\"\n\n\"I will, sir.\" said Captain Tanya Perlman. \"We now know what killed those six people and affected the twelve others. We also know that there were at least 25 people at the site at the time, and that seven are still unknown and at large.\"\n\nTanya said \"I would think that this Dr. Charles Westbrook needs to be found and interviewed. I also would like the pastor of the 'World Outreach Church' that Lawrence Evans attended, a 'Brother Terence Ballard', to be found and interviewed. The 'World Outreach Church' is in the City. And we'll have to talk to Dr. Mickelson at the University.\"\n\n\"I'll handle that personally.\" I said. \"Commander Ross, are you busy?\"\n\n\"Always, Commander Troy.\" said the Green Crowbar. \"But I'll go with you, anyway.\"\n\nPart 8 - Practical vs. Supernatural\n\nAs we drove to the University in my Police SUV, I said, as if answering a question, \"Oh, I think we've made excellent progress today. Don't you?\"\n\n\"Stop reading my mind.\" Cindy said with a wan smile. \"Yes, I was wondering if we're really any farther along to solving this case. It seems we've just created more questions.\"\n\n\"And that's how cases often go.\" I said. \"You know that. So what's bothering you?\"\n\nCindy said \"That painting at Point Hollow. It would seem to have absolutely no bearing on the case, but I can't shake the feeling that it's very important.\"\n\n\"I think you're right.\" I said. \"Despite what the brilliant ADA Fineman said, that historical information, and that painting, are very, very important parts of this story, if I don't miss my guess.\"\n\n\"And you never do.\" said Cindy, right on cue. Then she said \"By the way, after this I'm going to have to begin recusing myself from your investigations. Because of the new Charter, this just became an Election year, even though it's an off-year, and that means we have to have the Budget submitted and passed by the Town Assembly before Election Day. I'm about to be swamped.\"\n\n\"Roger that.\" I said. \"Just slip a pay raise into the Police Commander's position.\"\n\nWe drove up to the back loading dock and parked in the 'Authorized Vehicles Only' space. I'd never been towed nor told to move my vehicle if I parked there, and expected it would be no different this time. We got out and went inside, and up to Dr. Mickelson's office. His assistant said he was in his lab. We went there.\u2028\n\nDr. Mickelson was elderly. It seemed that his beard had become more gray than the last time I saw him, and he seemed a step slower. His eyes were still bright and peering, though.\n\nWhen he looked up and saw us, those eyes wilted considerably. \"Ah, I thought you would be coming here.\" he said. \"At least you came personally, Commander Troy. Stephen Wilson? Aaron Bennett?\"\n\n\"Yes sir.\" I said. \"This is my Police partner, Commander Cindy Ross. Commander Ross, Dr. Mickelson, holder of the Biology School's Gregor Mendel Chair of Genetics.\"\n\n\"Very nice to meet you, young lady.\" said Dr. Mickelson as he shook Cindy's hand. \"How do pretty girls like you become Police Officers, anyway?\"\n\n\"Brains as well as beauty, Doctor.\" I said. Cindy blushed a bit.\n\n\"Yes, I can see that.\" said Dr. Mickelson. \"Medal of Valor, too. So! Let's go sit down in the classroom next door.\" We made our way down to a classroom that had tables and chairs. We brought chairs into a circle and sat down.\n\n\"Yes, I heard about Stephen and Aaron.\" said Dr. Mickelson. \"Stephen was one of my two remaining students. He had a lot of promise, but his grades started slipping last year. And Aaron Bennett, he was a pre-Med student, and pretty typical of them... arrogant, competitive to the nth degree. Then he got busted for DUI, and then got busted again. The first time, a mistake. The second time... a cry for help. And that cry for help went largely unanswered. Aaron changed majors, then went to Chemistry instead of Biochemistry again. He's been drifting ever since.\"\n\n\"You said Stephen Wilson had been slipping, too?\" I asked. \"Any idea why?\"\n\n\"I'm not really sure why.\" said Dr. Mickelson. \"He was a good student in all his classes to begin with. Then last year he did very well working with me, but he paid no attention to his other classes. Failed one, got a 'D' in another. I told him he was devoting too much time to our work, as if he were a grad student, and that he needed to pass those other classes.\"\n\n\"What work was he doing with you?\" I asked. \"Sigma radiation? Titanium-44?\"\n\n\"Harumph!\" huffed Dr. Mickelson. \"Titanium-44. The new darling of the Astronomers. Mind you, I have nothing against them, and Dr. Steele is doing brilliant work with her theories. But when my own students dropped our studies of Sigma radiation and started looking for Titanium-44 at Point Hollow, that was too much.\"\n\n\"Why would they look for Ti-44 at Point Hollow?\" I asked, genuinely curious and genuinely not understanding.\n\n\"As you know,\" said Dr. Mickelson, \"we found some Astatine at Point Hollow, and we speculated that it might be a byproduct of ion engines that would be used for interstellar travel. Well, when these guys heard of Titanium-44, they thought it might be used to make antimatter for some kind of warp drive engine, also necessary for interstellar travel. But no Titanium-44 or anything suggesting it was ever found at Point Hollow.\"\n\nI nodded. \"And Stephen and Aaron were both pursuing that?\"\n\nDr. Mickelson looked up at me and said \"No. At least not officially. Behind my back, maybe.\"\n\nI looked over at Cindy, who asked \"Doctor, did Stephen and Aaron visit Point Hollow frequently?\"\n\n\"Stephen did, with me.\" said Dr. Mickelson. \"We'd go out there once every two weeks or so, take soil samples. Your Police Officers know us very well, and have always been cooperative and let us in. I think Stephen and Aaron went at other times, as well.\"\n\nCindy said \"When was the first time each student visited there?\"\n\nDr. Mickelson said \"Stephen started going about a year ago, and when Aaron... it was further back.\"\n\nCindy said \"Did Stephen start having his problems with his other classes at the time he went to Point Hollow for the first time? And maybe Aaron got his two DUIs right after his first visit to Point Hollow?\"\n\nThat seemed to strike Dr. Mickelson hard. \"You know, young lady... that might just be... yes, now that you mention it, it was right about the same time. But you don't think Point Hollow is the reason, do you? It hasn't affected me in all these years I've been going there.\"\n\n\"Me neither.\" I said. \"But the legend of the place may affect some more than others. Doctor, do you know a Dr. Charles Westbrook?\"\n\n\"That old quack?\" snorted Dr. Mickelson. \"He came to see me a while back... not very long after you arrested Estes for murder.\" (Author's note: 'Point Hollow', Ch. 05.) \"He wanted to know about the legend of Point Hollow, and the evil things that allegedly happened there. There was something... not right... about him.\"\n\n\"Thank you very much for your time, Doctor.\" I said. Cindy and I made our goodbyes and left.\n\n* * * * * * * * * * * * * *\n\n\"Speaking of something not right.\" Cindy said as we got into my Police SUV and buckled up. \"Something's not right about Dr. Mickelson, either.\"\n\n\"He looks like he's in very poor health.\" I said. \"I also happen to know that he's just about done here. He's losing his students, and one of his last two just died. His papers aren't being accepted for publication anymore; no one cares about Sigma radiation... except Slender Man enthusiasts, of which I am decidedly not one.\"\n\n\"That's because you whipped the Slender Man's slender ass.\" Cindy replied. \"I saw it myself.\" (Author's note: 'Return of the Slender Man', Ch. 02-03.)\n\n\"Somehow, my back doesn't feel like I won that one.\" I replied. \"But I lived to tell the tale. Anyway, I could see that Dr. Mickelson was frustrated about the Titanium-44 thing. His students were migrating to studying that instead of his stuff. And Dr. Charles Westbrook is known to Dr. Mickelson. And that was a good observation you had about those students's problems beginning after they visited Point Hollow for the first time.\"\n\n\"Yeah.\" said Cindy. \"Don, you may think this is weird, but I think what's going on isn't a practical matter, or the Rovers BAU unit, or testing some kind of drugs. I really think something wicked is going on at Point Hollow, something abnormal...\"\n\n\"Something supernatural?\" I asked. When Cindy just looked over at me, I said \"You may be right; some things happening there ain't normal. But six people were murdered while 12 others survived. And I want to know the practical reason why those six were chosen for death...\n\n* * * * * * * * * * * * * *\n\nMeanwhile...\n\nSenior Detectives Theo Washington and Teddy Parker arrived at the large metal building that was the World Outreach Church. Going inside, they saw the rich maroon red of the carpet on the floor and the pulpit, nearly 1000 chairs, and the two television monitors on either side that showed the words of the hymn being sung as well as testimonials from new members telling their stories of being saved.\n\n\"Can I help you gentlemen?\" asked a young black woman who had appeared out of a side door.\n\n\"We're looking for Brother Terence Ballard.\" said Teddy Parker.\n\n\"Brother Ballard is a busy man.\" the woman said. \"Would you like to make an appointment?--- oh.\" she said as Theo exhibited his TCPD badge. \"Come this way, please.\"\n\nShe led them through the side door and into the office areas, and to the office of Brother Terence Ballard. \"Reverend,\" she said, \"the Police are here to see you.\"\n\n\"Come in, then.\" said Terence Ballard. He was in his early 30s at the most, black, relatively short, especially compared to Theo. He was handsome, clean cut with only a pencil mustache, and wearing a well-fitting suit and tie. \"How can I help you gentlemen?\"\n\n\"We're here about a former member of your church.\" said Theo. \"A Lawrence Evans?\"\n\n\"Oh yes.\" said Ballard. \"He left the Church some four months ago. Is he in trouble?\"\n\n\"No sir.\" said Teddy Parker. \"You may have heard of the mass casualty event in our home Town & County---\"\n\n\"Oh no.\" moaned Ballard. \"Is he...?\"\n\n\"No sir,\" said Theo, \"he survived. He's recovering well in the hospital.\" Ballard looked very relieved. Theo said \"Can you tell us more about him? And why he left your church?\"\n\n\"I don't really know.\" said Ballard. \"He was a very devoted member of the church. My secretary that brought you here, Jolene? She was his fianc\u00e9e. He seemed very happy.\"\n\nTheo said \"How active in the church was he? Did he speak or give sermons?\"\n\nTerence Ballard replied \"He was becoming one of the young leaders. Let me tell you how these large megachurches work. Dr. Charles Stanley was the pioneer, and showed us the way. Everything is based upon small groups. Members are encouraged to find and join a small group that interests them, and the groups meet for Bible studies and Sunday School classes, they often socialize during the week. Lawrence and Jolene were part of a young singles group, then they began dating and moved to a young couples group. Lawrence sometimes led the lessons in those groups, and was under consideration for church-wide duties and possible election as a Deacon.\"\n\n\"Anything happen that made him change?\" asked Parker.\n\n\"About six months ago,\" said Ballard, \"Lawrence began asking me about The Revelation... the Bible book Revelations. About the Second Coming, and the End of Days. We had a few discussions about it, and he said he was looking up stuff on the Internet about it. About a week before he stopped coming to the Church, he asked me a lot about the demons in the Revelations, and I told him honestly that I didn't know all that much about them.\"\n\n\"And then he didn't show up for Sunday services, and sometime that week Jolene told me he'd broken off their engagement.\" said Ballard. \"I never heard from him again. Jolene may have, but I don't want to speak for her.\"\n\n\"And no reason at all for him dropping off the map like that?\" asked Teddy Parker. \"Did he start hanging out with bad people? Influenced by another church?\"\n\n\"Not that I know of.\" said Ballard, his eyes skirting around a bit. \"Again, Jolene might know more than I do about that.\"\n\n\"Thank you for your time, Reverend.\" said Theo. \"Would it be okay if we talk to Jolene for a few minutes?\" Brother Ballard nodded his assent.\n\n* * * * * * * * * * * * * *\n\n\"We were very happy,\" said Jolene. She was very pretty, and her hair was combed long and straight down her back. Her body was like a model's, tall and thin, but Theo observed the beginnings of a 'baby bump'.",
        "Jolene continued: \"We were making our wedding plans, and Lawrence wanted to start a family so I was getting off the Pill. And then one day he didn't come to church, and a couple of days later he came to see me and told me that he had to call off the wedding and that he was going away for a while. He said it was for a 'sabbatical', and he wouldn't be able to contact me.\"\n\n\"What was his background?\" asked Theo.\n\n\"He grew up in a fairly tough area of the City.\" Jolene said. \"He never said much, but I think he was part of a bad crowd in high school, drug distributors, stuff like that. But he walked away from it all, put himself through school, came to World Outreach Church and was devoted to it for years.\"\n\n\"Did he have contact with any of the old gang, that you knew of?\" Teddy Parker asked.\n\n\"No, not that I know of.\" said Jolene. \"He was with me most of the time. We went out with other couples from our study group and the church, for the most part. He never introduced me to anyone outside the church, come to think of it.\"\n\n\"Did he talk about The Revelation?\" asked Theo. \"About the End Times?\"\n\nJolene rolled her eyes a little bit, then said \"Oh yes, he talked about the Revelation. But not so much about End Times. He just talked about the characters in the Book of Revelations. In the last couple of weeks, he was reading stuff online about the demons, like the Four Horsemen of the Apocalypse. He started getting quiet after that.\"\n\n\"Did he ever mention a Dr. Westbrook?\" Teddy asked.\n\n\"Uhh...\" Jolene said, then looked up past the Detectives. They turned to see Brother Terence Ballard standing there, listening in. Jolene said \"Not that I remember. if you'll excuse me, I think Brother Ballard needs my help.\"\n\n\"Thank you for coming by, gentlemen.\" said Ballard, a clear dismissal. The Detectives left.\n\n\"What did you think of that?\" asked Theo as he drove the car onto the University Highway, heading home.\n\n\"Everything was fine until the name of Dr. Westbrook came up.\" said Parker. \"And then everything changed, like reading the Bible and starting to read The Revelation... sudden, shocking change.\"\n\n\"Did you notice that Jolene was pregnant?\" asked Theo. \"Is that Lawrence's baby? Or someone else's?\"\n\n\"I noticed the baby bump.\" said Parker. \"But I'm no expert on how far along she is.\"\n\n\"I'd say four to five months.\" said Theo. \"And Jolene said she was getting off the Pill in anticipation of her marriage to Lawrence. But what if there was another rooster in the henhouse? Like... Brother Terence Ballard, maybe?\"\n\n\"Ohhhh, I see where you're going with that.\" said Parker. \"Maybe Ballard knocked up Jolene, and Lawrence found out about it?\"\n\n\"Or just found out about the affair.\" said Theo. \"But yes, it makes even more sense for him to break off the relationship and go away if another man impregnated his fianc\u00e9e...\"\n\nPart 9 - The Painting\n\n3:30pm, Thursday, October 3rd. Lt. Myron Milton came to my office.\n\n\"Sir,\" he said, \"I just wanted to let you know that we've intercepted and taken down four drones trying to penetrate Point Hollow airspace. One was KXTC's. The other three... are Federal Government drones.\"\n\n\"And that's not all.\" said Commander Teresa Croyle, coming into the office without knocking. \"Our drones spotted FBI Agents on the other side of the State Line, at first walking parallel to it, but then trying to cross the line into Point Hollow. But they retreated when I deployed our armored SWAT Team to confront them at the State Line.\"\n\n\"How do you know they were FBI?\" I asked.\n\n\"The windbreakers with 'FBI' on the back was my first clue, sir.\" said Teresa, flat deadpan. I broke out laughing. Teresa and Myron looked amused, as well.\"\n\n\"Have a seat.\" I said to Teresa. She sat down. \"So this was Rovers's BAU unit?\"\n\n\"We couldn't tell for sure, sir.\" said Myron. \"They wore baseball caps with visors low over their eyes, sunglasses, and they kept their heads down, so we couldn't get good images of them.\"\n\n\"Damn them.\" I said. \"Part of me wonders if they're doing this crap just to force us to put manpower out there to stop them.\"\n\n\"It wouldn't matter, sir.\" said Teresa. \"We're going to be deploying that manpower anyway, especially at night. We've already had a hundred people show up... some just out of curiosity, some saying things about the End Times and chanting things.\"\n\n\"Okay.\" I said. \"I don't know what's going on, but I'm getting a sick and tired of the FBI. So I'm telling you this with Lieutenant Milton here as your witness: lethal force is authorized. Anyone trying to come in, especially if they can be identified as FBI? Shoot to kill.\"\n\n\"No problem, sir.\" Teresa said with alacrity. Myron nodded, also.\n\n* * * * * * * * * * * * * *\n\nAt 4:00pm, I walked into my wife Laura's office in the Psychology Building at the University. Carole and Marie were on the two sofas, drawing. When Carole saw me, she jumped up with a cry of \"Daddy!\" and came over and hugged my legs. Marie then came up and hugged me, too.\n\n\"Hello, ladies.\" I said. \"Why don't you go draw in the back room while I talk to your mom for a minute.\"\n\n\"O-kay!\" said Carole. She and Marie took off to continue their drawings. I just hoped they weren't new polls of household six-year-olds not getting the bedtimes they wanted.\n\n\"Where are the boys?\" I asked.\n\n\"At daycare at BOW Enterprises.\" Laura said. \"And Stephanie (Steele) picked the girls up after school, but she has a class to teach today, so I'm keeping them.\"\n\n\"Cool beans.\" I said. \n\n\"You asked me to look up Dr. Charles Westbrook.\" said Laura as I pulled a chair around to sit beside her and see what was on her monitor. \"I had heard of him, though vaguely. Dr. Westbrook graduated from Missouri with his doctorate in Psychology. After that, things get sketchy. In fairness, if you look up my past, it's kind of sketchy.\"\n\n\"So is your Police record.\" I said with a grin. \"What's this guy's history?\"\n\n\"He was employed at Truman State University, in Kirksville, Missouri.\" said Laura. \"That's just north of La Plata, Missouri, where the Amtrak Station is. He was there for about 20 years, then went on a sabbatical to the Holy Land, and also to Mecca. When he came back, he pretty much packed up and left. He ended up at the University of Missouri-St. Louis.\"\n\n\"It was there that rumors about him began circulating.\" Laura continued. \"He was accused of being associated with a Student Group dedicated to Occult practices. He denied it, and was left in his position, but he was closely watched. And rumors cropped up again a few years later after two students, both women, were murdered in what Police there thought was a Satanic ritual. Both girls had taken Dr. Westbrook's classes and spent a good amount of time with him, per Police reports at the time.\"\n\nI nodded. \"Did they fire him then?\"\n\n\"No,\" said Laura, \"but he was on thin ice, and the ice was cracking under him. He tried to get a position at the University of Georgia, but they didn't hire him. Then he applied for a position here, which I think is where I heard of him, but we didn't hire him, either.\"\n\n\"Hmmm.\" I said. \"The University of Georgia is not far from Elberton, Georgia, where the Georgia Guidestones are. And the University here is near Point Hollow.\"\n\n\"You think he's the 'R.C. Christian' that just gave all those grants?\" Laura asked, peering at me.\n\n\"No.\" I said. \" He doesn't sound like a guy who is that rich, and able to do that. And he definitely does not sound like someone with a philanthropic disposition. So... what else?\"\n\n\"Publicly, nothing.\" said Laura. \"Amidst mounting pressure, and his grant money being cut off, he resigned from Missouri-St. Louis, and had not been heard of since. That was about five years ago.\"\n\n\"When Angela Harlan left St. Louis.\" I said.\n\nLaura said: \"I'm not as sure as you are about that. But Dr. Westbrook still rents the apartment he had all the time he was in St. Louis, his bills are automatically paid out of an account that has a couple hundred thousand dollars in it, just under the FDIC limits. But he hasn't been seen there in over two years. I know that because the alarm company said his alarm has not been activated nor deactivated in all that time. Except for the auto-payments, he's completely off the grid.\"\n\n\"Hmmm...\" I said. \"Okay, what did your more 'private' research tell you?\"\n\nLaura said \"He never was a Federal Agent, nor a C.I. for the Feds. As I said before, he was closely scrutinized by both local Police and the FBI after those two girls died. Nothing was ever found, but the FBI reports at the time suggested he was part of a Satanic cult all along.\"\n\nI nodded. \"So, changing the subject... how does it feel, now that you're not in the loop with the Company anymore?\"\n\nLaura gave me a brief, pursed smile, then said \"I remember hearing stories of how Presidents changed, and how it affected them. For example, one morning President George W. Bush was getting the national intelligence brief from the CIA, and then a couple of mornings later he was at his home in Dallas, Texas, reading the newspaper like the rest of us. It's a lot like that for me. It's just something to get used to, I guess.\"\n\nAt that moment, Carole came out of the back room and up to me. \"Daddy,\" she said, \"can you take me to see Father Romano?\" \n\nThe look on my face must've matched Laura's look of surprise as I asked \"Why do you need to see Father Romano?\"\n\n\"So I can ask him to go to Point Hollow with us.\" said Carole.\n\n\"And why do we need to go to Point Hollow?\" I asked, perhaps with a bit more concern in my voice.\n\n\"To see the painting.\" Carole said.\n\n\"Who told you about the painting?\" I asked, not even pretending to not know what she was talking about.\n\n\"Nobody.\" said Carole.\n\n\"Okay, then.\" I said, which I think shocked Laura. \"Let's go to Headquarters.\" To Laura I said \"How much later will you be here?\"\n\n\"Not much longer. Just bring her home.\" Laura said, not even questioning anything she was seeing and hearing...\n\n* * * * * * * * * * * * * *\n\nWe went to Headquarters, where Father Romano was at his desk in the Chaplain's offices. Carole very politely said \"Hello, Father Ro-ma-no. Will you come with us to see the painting at Point Hollow?\"\n\n\"I guess I can do that.\" said the Catholic Chaplain. \"But why do you need me there?\"\n\n\"Because the evil spirits are afraid of you.\" Carole replied. Captain Romano just looked up at me. I just shrugged.\n\n* * * * * * * * * * * * * *\n\nFather Romano rode shotgun in my Police SUV, and Carole was in her safety restraint chair in the backseat. Yes, my Police SUV is well-equipped. It was a beautiful Autumn day, not a cloud in the sky, and I felt good as I observed it. But that feeling diminished somewhat as we drove past the security at the gate to Point Hollow and onto the property.\n\nWhen we pulled up and stopped, Father Romano opened the back door for Carole to get out. She hopped down to the ground and looked around. I could sense no fear from her, just wariness as she looked at the copse of trees, then the front yard and the house.\n\nCarole pointed to a spot and said \"That's where you beat the Slender Man, isn't it, Daddy?\" The spot she was pointing to was indeed the exact spot where I engaged the Slender Man in personal combat and lived to tell about it.\n\n\"That's the spot.\" I said. \"Let's go inside and see the painting.\"\n\nWe went inside, where Carole led the way and unerringly led us to the great room. \"There's the painting, Daddy.\" she said, pointing to the painting of the young blonde woman over the mantle. \"Her name is on the back.\"\n\n\"If we can get it off the wall.\" I said. I went up to the painting and tried to remove it again, but it was solidly secured to the wall.\n\n\"Carole,\" I called out, \"are there any secret spaces I can get into to unbolt it from the wall.\"\n\n\"No, Daddy.\" Carole said. \"But she's here, and she'll let you take it off.\"\n\n\"What do you mean, 'she's here'?\" Father Romano asked. \"The girl in the painting?\"\n\n\"Yes sir.\" said Carole. \"She's here.\" And with those words, I heard the wind howl outside. We looked out the windows to see dark, ugly clouds forming outside.\n\n*CR-RRACCK!!*\n\nThe bolt of lightning right outside the window was blinding in it's intensity. Father Romano began chanting prayers. As I looked outside, wondering where in the hell this storm had come from, Carole said \"It's loose, Daddy!\" I turned to see that the painting was hanging at an angle!\n\nI went over and grabbed the frame, and the painting easily came off the wall. \"Wowwww.\" I whispered. Father Romano was holding his rosary and saying something in Latin.\n\nI sat down in a chair and Carole came up alongside me. \"See, Daddy?\" she said. \"Where the paper is torn.\" Indeed, the heavy paper that was on the back of the painting was torn. I gently pulled it back and saw words on the canvas underneath.\n\n\"Hmmm.\" I said. \"Nellie Blye Westbrook, 1882. That must be this girl.\"\n\n\"It is, Daddy.\" said Carole. \"But she's not here anymore now.\" I nodded.\n\n\"Okay, why don't we take this painting to Headquarters, and let them analyze it---\"\n\n\"No, Daddy, you can't do that!\" Carole exclaimed. \"You have to leave it here!\" She was emphatic about that, I noted.\n\n\"Okay.\" I said. I went and hung it back up over the mantle, thinking I'd come back and get it when I didn't have Carole here with me. I had a strong desire to get my firstborn child out of this place...\n\n* * * * * * * * * * * * * *\n\nLaura and Marie were home when I brought Carole and Father Romano by. Bowser and Buddy were very happy to see Carole, though Bowser was wary of the Chaplain.\n\n\"Obviously a Protestant dog.\" I said when Bowser wouldn't let Father Romano pet him. Father Romano chuckled, and I picked Bowser up. \"It's okay, Bowser. Father Romano is our friend.\" Bowser sniffed at the Chaplain's hand, then allowed himself to be petted. Still, once I put Bowser down, he raced over to Carole.\n\nAs Carole excitedly told Marie about Point Hollow, Laura and I talked with Father Romano as we headed back to my Police SUV. Laura said \"How is Dr. Mickelson doing, Father?\"\n\n\"He's... doing okay.\" said Father Romano. \"We've had some long conversations, which are privileged, of course, and he does better after each of them. Physically? That's another matter.\" Laura nodded, then said she'd tell me about that later.\n\nAs we drove to Headquarters, Father Romano said \"Dr. Mickelson has been having hallucinations. He's tested negative for any drugs, but he believes the Devil is trying to possess his soul. When we pray together, he feels much better, but it doesn't last.\" I just nodded.\n\nBack at Headquarters, I called Sr. Detective Joanne Warner into my office. \"I need you to research a name. Nellie Blye Westbrook. And the year 1882 may figure in prominently.\"\n\n\"That name never showed up in the Town Archives or Census reports.\" Joanne said. \"And the University didn't have women students back then.\"\n\n\"I think there was an associated Women's School that became part of the University in the mid-20th Century. \"Agnes Wesleyan College. She might've been enrolled there. Also, check with Alison McFarland at the Town & County Examiner. See if they have archives, and if there's any story from 1882 about Nellie Blye Westbrook...\"\n\n* * * * * * * * * * * * * *\n\n10:00pm, Thursday, October 3d. I was busy at my desk, typing away at my computer. I heard a knock on my door and looked up and over to see Teresa Croyle in the doorway.\n\n\"Your wife called.\" Teresa said. \"She wants you to come home. She wants me to enforce that happening.\"\n\n\"Okay, then.\" I said. \"I'm alll-most done here.\" I kept typing.\n\n\"Whatcha working on?\" Teresa asked.\n\n\"A web site.\" I said. \"Thomas Hall, one of the survivors, was a Computer Science major. Theo Washington's notes of his interview in the City mentioned that Lawrence Evans was on a website about The Revelation and demons. So I began checking what Myron downloaded from the various laptops and tablets we confiscated. And there is one website in common... but I'm having trouble accessing it.\"\n\n\"Needs a password?\" Teresa asked. \"Myron can break that in minutes, can't he?\"\n\n\"He's working on it, as is Mary.\" I said. \"They think the security is a lot like what BigAgraFoods used: there has to be a jump drive or something plugged in, and only then do we need the username and password. I suggested they look at the tablets, since it's not so easy to plug in a jump drive...\"\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was Teresa's personal iPhone. \"Yes, he's right here.\" she said. She handed the phone to me. It was my wife Laura, and she made herself abundantly clear what her immediate expectations of me were... my presence at home. And with the Iron Wolf ready to back my wife's expectations up, I did the smart thing and packed up to go home...\n\nPart 10 - Data Points\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" said the redheaded MILF reporterette from the southern border fence of Point Hollow at 7:00am, Friday, October 4th. \"Commander Donald Troy and the Town & County Police remain befuddled and unable to solve the deaths of six persons and sickening of 12 others at Point Hollow!\"\n\nBettina began: \"Police have no new leads regarding the mass casualty case, which claimed the lives of six young persons, including two University students.\" She rolled off the names of the dead, then the living persons, then said \"While the families of the deceased have been notified, several parents of the survivors complained to Channel Two News that the Police did not notify them nor have updated them with any information. The TCPD has also not updated Channel Two News, and Commander Troy continues to avoid repeated requests by Channel Two News for comment.\"\n\nBettina: \"Doctors at the University say the twelve survivors are all recovering and could be released over the weekend. Assistant Public Health Officer Stella Waters gave a statement to Channel Two News, saying that there there is no danger to the Public, but people should avoid the Point Hollow area until more is known about the attacks and the chemicals used.\" As she read the statement, a photo of APHO Waters was shown, wearing her formal Public Health Department jacket with one star on each collar.\n\n\"And now,\" said Bettina happily, \"let's go to trusted reporter Lester Holder for important news about the District Attorney's Office. Lester!\"\n\n\"That's right, Bettina!\" said Lester Holder, who was on the roof of the building at Riverside and College, with City Hall in the background. \"Multiple sources confirm to Channel Two News that District Attorney Miriam Walters, who is white, intended to demote Paulina Patterson, who is black, and Dwayne Gregory to Deputy District Attorneys, with Savannah Fineman remaining an Assistant District Attorney over them.\"\n\nPenis Holder: \"Multiple sources also tell Channel Two News that Ms. Walters altered the plan to demote all of the Assistant DAs to Deputy DAs after ADA Franklin Washington, who is black, threatened a Civil Rights racial complaint against D.A. Walters. And Channel Two News has learned that D.A. Walters changed that plan only after Channel Two News reported her plan on the air, then falsely accused Channel Two News of inaccurately reporting the story. Neither D.A. Walters nor Assistant DA Paulina Patterson responded to Channel Two News's repeated requests for comment.\"\n\n\"Thank you, Lester! Excellent reporting, as usual!\" said Bettina as she came back on the screen. \"In other news, the Town & County Fire Department is very divided on whether or not to go on strike after Chief Patrick Quinlin was forced to retire as a Captain, Battalion Chief Tucker was summarily fired, and a new EMS that is independent of the Fire Department was created. The Fire Department Captain's Union and the Fire Department Union have encouraged their members to consider going on strike, but there may not be majority support for that action. The Unions will meet with Fire Department leaders over the weekend...\"",
        "* * * * * * * * * * * * * *\n\n\"Before y'all start complaining,\" I said tiredly as we drank coffee in the Chief's Conference Room, \"I am ecstatic to hear Bettina telling her viewers that we have no new news, and we have no idea what is going on. That is exactly what I want the criminals to think right now.\"\n\nCindy Ross said \"Who are these parents that are complaining about not being notified nor kept abreast of what's going on? Captain Thompson and I contacted every family we could find, and the Chief broke the news to the families of the deceased.\"\n\n\"Irene Ward.\" I said. \"Pi Omega. Daughter of wealthy Establishment Elites. Taking cheap shots. They better be careful; I might just investigate them next.\"\n\n\"Better put on your armor, Don.\" said Tanya Perlman. \"D.A. Walters is probably going ballistic and taking your name in vain right now.\"\n\n\"She better not be.\" I said without a shred of humor or levity. \"I don't know who gave that stuff to KXTC, but it wasn't me. And she damn well better not accuse me of it.\"\n\n\"Wow, I'm feeling the vibe from you all the way across the table.\" said Cindy.\n\n\"Who do you think the leaker is, Crowbar?\" asked the Sheriff.\n\n\"If I knew, Sheriff, I'd be beating his or her ass with a crowbar right now.\" I replied.\n\n\"I'll be sure to let the District Attorney knowwww that it was not you, Mr. Crowbar.\" said the Chief. I just nodded, and everyone knew I was a 'live wire' about this one.\n\n\"Am I the only one seeing the hypocrisy of Penis Holder?\" said Teresa Croyle. \"All those times he was calling Paulina's daughter a racial name, and now he's using her to make a racial attack on Miriam Walters?\"\n\n\"That's the Press for ya.\" I said. \"They expect you to not remember that, and certainly not to bring it up. And with the Press, it's about the Agenda in the moment. They can't be bothered with consistency or history.\"\n\n\"One thing I noticed,\" said Tanya Perlman, \"is that Bettina and Penis Holder both kept saying 'Channel Two News' a lot. 'Statement to Channel Two News', 'Channel Two News has learned', and so on. What was up with that?\"\n\nCindy said \"According to my own sources, I have learned that Channel Two News is not doing all that well and their ad revenue is flagging. Also, you noticed how APHO Waters gave that comment to Bettina, and Waters may be positioning herself for a political run. Beth Paige refused to talk to KXTC, and you'll her statement exclusively to KFXU an hour from now. So it's getting to be a Media tit-for-tat on who gives who what comments.\"\n\n\"What about the Fire Department thing, Sheriff?\" asked Teresa.\n\n\"Tucker tried to get the Union to gin up a strike on his behalf.\" growled Griswold. \"He found out pretty fast that he was not very popular with the rank-and-file Firefighters, and they're pretty glad to see him gone. They liked Quinlin well enough, but don't want to lose their jobs striking over him, especially after he took the retirement deal. And there is no enthusiasm for a strike in general; they want to keep their jobs.\"\n\n\"Still,\" continued the Sheriff, \"well, let me say it this way. A number of years ago, Major League Baseball umpires had a semi-strike where a lot of them resigned, expecting to be hired back. For many of them, their resignations were accepted, and they were out of jobs and were replaced. I've heard rumors of something similar possibly happening in the Fire Department: a number of them will turn in their resignations over the new EMS formation. And if they do... those resignations will be accepted, and they will be replaced.\"\n\n\"That's going to be a tough challenge for new Fire Chief Davieeees.\" said Chief Moynahan.\n\n\"Noooooo.\" said Sheriff Griswold. \"The ones leaving are mid-level leaders, like mid-level managers in most shops. It would be the equivalent of disgruntled Police Sergeants and older Senior Patrolmen leaving. And if that happened, young leaders will get the chance to step up and fill those gaps.\"\n\n\"I hope we don't have any disgruntled Sergeants.\" said Chief Moynahan.\n\n\"No sir.\" said Teresa Croyle. \"The ones we have seem happy enough. We went through our attrition over the last few years. Sergeant McCombs is the only one left that I'd truly like to get rid of.\"\n\n\"By the way,\" Teresa continued, \"if I were watching that in a vacuum, I'd wonder if the Media and the APHO were working together to keep Point Hollow clear of people... as if they want to do something there, but don't want anyone there to witness it.\"\n\n\"You make a good point.\" I said. \"There is definitely something going on that the Feds are interested in, and maybe others as well.\"\n\n\"Don, you okay?\" Cindy said, noticing my tiredness.\n\n\"I was up late last night.\" I said. \"After I got home, I started working on the encryption for a website that is on all the victims's computers. Laura started helping me, and we made good progress, but we were up until three o'clock in the morning...\"\n\n* * * * * * * * * * * * * *\n\n\"And in an exclusive interview with Fox Eight News,\" said Catrina Pierce, \"we have Public Health Office Beth Paige with us.\" Beth Paige was wearing her formal jacket with ribbons and two stars on each epaulette, and two stars on her white shirt collars. I dunno what it is, but those new star ranks seem to be on display a lot, I thought to myself.\n\n\"Ms. Paige,\" said Meredith Peller, \"other Media outlets are saying the Public is in danger, that your Office does not know what is going on, nor what those victims of the other day's attack were affected by. What do you say?\"\n\nBeth Paige replied \"The Fake News Media really needs to stop their dishonest reporting that is designed to frighten people, and cause chaos and division. We do know what the drugs were that affected those people, we know what killed six of them, and it was a different drug. We know that the Public is in no danger whatsoever, unless they were to attempt to ingest those drugs themselves.\"\n\nCatrina: \"So why should people avoid Point Hollow, if it's safe now?\"\n\nBeth Paige: \"Well first of all, it's a crime scene. The Police have opened up this case as one of murder in the first degree of those six persons. This wasn't a freebasing accident, it was intentional murder. Second, while there is no danger to the general Public for airborne contaminants, there may be some remaining contaminants at Point Hollow, and by avoiding that area one avoids the risk, however small, of being contaminated or affected...\"\n\n* * * * * * * * * * * * * *\n\n\"Ahhhhhhh... fuck.\" I muttered as my Angels and I watched in my office. \"I would have infinitely preferred she not tell the world that it was a murder case.\"\n\n\"Nothing they can't find out from our duty logs.\" Cindy said. \"But I get your point that it's not good for County employees to advertise it. Let the Press figure it out and report it.\"\n\n\"Catrina and Meredith very expertly tricked Beth into revealing a lot more about the case than we wanted out there.\" I said. \"Oh well, it is what it is. What is going on in our Town & County today?\"\n\n\"I'm going to go work on the budget.\" Cindy said. \"I was told it would get easier over time, that all I would have to do is plug in new numbers every year. That was a crock.\"\n\n\"What are the issues now?\" I asked. \"Are they cutting our budget?\"\n\n\"Yes and no.\" Cindy said. \"The Assembly wants to authorize more Officers, but the money they want to budget is more than this year, but not enough to fund what they want us to do. I will also say this, Tanya: if you want an Intelligence Division, you need to get it passed in a hurry. I'm putting together a package that includes it, but it'll get stripped out if the Intel Division is not passed. You have less than two weeks.\"\n\n\"Don't stress on it.\" I said to Tanya. \"So, what else is new?\"\n\nLt. Commander Teresa Croyle said \"I've got the SWAT Teams on rotating shifts, and a fully armored contingent on standby. We keep detecting people skirting around the edges of Point Hollow, trying to get in. As in a paramilitary scout unit scoping out the place. They back off every time we detect them and send heavily armed and armored groups to confront them, but it's getting irritating. If it's the FBI doing it, I want it to stop, and for them to back off.\"\n\nShe was looking hard right at Tanya as she said it. Tanya was not looking back at her, and seemed peeved at Teresa for looking at her that way.\n\n\"I'll contact the FBI about it.\" I said...\n\n* * * * * * * * * * * * * *\n\n9:00am, Friday, October 4th. I came in for the meeting, and was surprised to find that neither the Police Chief nor the Sheriff were there. Also not there was ADA Savannah Fineman, nor anyone else from the D.A.'s Office. And it wasn't like I didn't text them and notify them.\n\n\"I excused Joanne Warner.\" said Captain Tanya Perlman. \"She's at the offices of the Town & County Examiner, looking up that name you found yesterday.\"\n\n\"Good.\" I said. I filled everyone in on what had happened at Point Hollow the day before.\n\nLt. Commander Teresa Croyle said \"So that explains the literally two minutes where the storm clouds formed out of nowhere, soaked our Uniformed Officers, delivered a huge burst of lightning to the front yard of the house, then dissipated as if it'd never been there.\"\n\n\"That's what I saw, too.\" I said. \"\"Okay, let's get started. What's new?\"\n\nTeddy Parker and Theo Washington gave their report of their interview with Brother Terence Ballard and the lovely Jolene. Theo finished with \"It was all good until the name of Dr. Charles Westbrook was mentioned. And then it got cold as ice.\"\n\nI said \"I've been looking into Charles Westbrook, also.\" I gave the report that Laura gave me. \"This guy's is beginning to crop up more and more. And he's the Consultant of Crime's first cousin, so I'm already suspicious of him. What we don't have, is his whereabouts.\"\n\n\"It's cropped up with me, too.\" said Lt. Mary Milton. \"All of the survivors mentioned him but wouldn't elaborate on him. Beyond that, is Irene Ward. She's related to Marie and Cherie Ward through her father, but it's her mother that's rich. Her mother is the COO of a company called TechnoDynamics, Inc. They were partners with DynaCorp and are now partners with MegaTech Industries on a number of Government projects. Suffice it to say they're part of the Establishment Elites. And her mother has written a number of checks in the low five figures to... you guessed it... Dr. Charles Westbrook.\"\n\n\"And the bank that cashed those checks?\" I asked.\n\n\"City & Counties Bank in the City.\" said Mary. \"The address on the account is the property adjoining the 'World Outreach Church'. It's actually the same property. Small metal building. It's not marked with any business name.\"\n\n\"Well, ain't that a coincidence.\" I said. \"Part of the World Outreach Church. I'll definitely be visiting there, probably this weekend. Care for a return visit, Detective Washington?\"\n\n\"Like Delta Airlines,\" said Theo, \"I'm ready when you are, sir.\" Everyone laughed.\n\nLt. Jerome Davis said \"Why don't we re-interview the survivors with the emphasis on Westbrook. Press it with them.\"\n\n\"We can also contact the FBI, see if they can find him---\" said Tanya.\n\n\"NO!\" I said loudly, and more harshly than I intended. As Tanya looked at me in shock, and perhaps a bit of anger, I said \"We've already kicked Rovers's BAU out of here. I don't want to contact the FBI, not even Jack Muscone, and then have the Swamp Frogs use that to force the Rovers BAU on us. And more, I don't want that BAU to know anything about what we're doing.\"\n\n\"Sir,\" said Lt. Mary Milton, \"does that mean you don't want us to put out an APB for Charles Westbrook?\"\n\n\"That'll make it hard to find him, if we don't.\" said Captain Perlman.\n\n\"I...\" I said, about to speak, then fell back into my chair as I thought about it, practically in a reverie. I finally exhaled and said \"Yeah, if we put out an APB, that'll be a beacon for the Rovers BAU team. Let me think about that one a little bit...\"\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was my Police iPhone, and it was the Sheriff. \"Yes sir, I'll be right there.\" I hung up, then said \"Okay, I have to go. Theo, I'll call you to get ready when I'm ready to go to the City. Y'all keep up the great work. Oh, one more thing. Lt. Mary Milton, I emailed you some information about a website that all these people may have in common. Check on it and see if you can continue the work I did on it...\" \n\n* * * * * * * * * * * * * *\n\nI had a pretty good idea what was going down as I came into the anteroom of the Sheriff's Office, which, for the record, was on the opposite side of City Hall from the D.A.'s Office. The Sheriff's assistant just nodded toward the door, indicating that I was to go on inside.\n\n\"Hello, Crowbar!\" the Sheriff called out affably as I entered the room Also in the room was Police Chief Sean Moynahan, Deputy Chief Cindy Ross, Public Health Officer Beth Paige, Assistant PHOs Waters and Gupta... and District Attorney Miriam Walters. \"Have a seat.\" I did so, next to Chief Moynahan.\n\nThe Sheriff began: \"Crowbar, this meeting is about----\"\n\n\"Did you leak that information about my plans to Lester Holder?\" Miriam Walters almost shouted. The Sheriff looked more than a little bit pissed at being interrupted.\n\n\"Of course not!\" I fired back. \"And after what Holder said about my daughter, I don't even speak to him, much less leak to him!\"\n\n\"Then who did?!\" thundered Miriam Walters.\n\n\"I don't know---\" I started.\n\n\"Then find out!\" yelled Walters. \"If it wasn't you, I want to know who the hell it was!\"\n\nI stood up. \"Ms. Walters,\" I said, \"I just told you it wasn't me. If you don't accept that, and if you continue to yell at me and give me orders that I don't have to accept, I'll have to wonder what the real intent of your accusations are. Are you trying to make me your enemy, Ms. Walters?\"\n\nIt was silent in the room as I bore in. \"Well?\" I asked. When Walters still said nothing, I said \"Everything you've been doing recently really does make me wonder if you want me as an enemy. And if you do, I will oblige you. And once I'm your enemy, you can pack your bags and get ready to resign as D.A. And your crony Savannah Fineman? She'll never win any election in this County. Ever. So decide what you want to do, and either keep up the shit, or get your head out of your ass.\"\n\nI could see that both Miriam Walters and her friend Beth Paige were offended by that, and I did not care. I turned to the Sheriff. \"Is there anything else, Sheriff?\" I expected him to tell me to get out.\n\n\"Have a seat, Crowbar.\" growled Griswold. \"Now that that small matter has been cleared up, we need to have a coordinated response. I'm seeing that I need a Press Relations Officer of my own, but Deputy Police Chief Ross is doing a wonderful job in the interim, and I expect all of you in the Public Safety Department to work with her on our unified message for the Press. I would also like your cooperation, Ms. Walters.\"\n\n\"It's unbelievable you would say that when someone around here leaked that false crap to Lester Holder.\" said Miriam Walters.\n\n\"Ms. Walters,\" I said \"you need to understand that Holder's little diatribe was pure retaliation for you humiliating him in the earlier press conference. The Press cannot allow themselves to be shown up the way you showed up Holder. They will never stop at trying to get revenge for what you very correctly did. See the Press for what they are: the real Enemy. Now once again, decide who the real enemy is, here, and act accordingly.\"\n\n\"Crowbar is right.\" growled the Sheriff. \"But I'm more worried about what the Press is revealing to the perps, as well as others out there who do not have our best interests at heart. Lester Holder is a sidebar. He's unimportant at best, and a hate-filled racist at worst.\"\n\n\"Not all of us have the luxury of hating the Press or going to war with them.\" said Miriam Walters. \"And Lester Holt wouldn't have been saying anything if he wasn't being leaked information.\"\n\n\"So,\" I said, \"you're saying that what he said was true? And you're more angry because it was leaked than the veracity of it?\" Miriam Walters turned beet red, and her beady black eyes were flashing fire at me for exposing her words for what they were, and turning them against her.\n\n\"Remind me never to make you my enemy.\" Cindy said quietly to me, but loud enough for Miriam Walters to hear it.\n\n\"I can see this is going nowhere fast, and that I'm wasting my time being here.\" said Miriam Waters, getting up. \"Your response to the Press is not the real issue here; solving this case before the wild speculations gets too rampant is.\" With that, she turned and exited the room.\n\n\"Okay, you guys can go.\" said the Sheriff, to everyone. \"Please coordinate any Press responses or appearances with Deputy Chief Ross and Captain Thompson.\"\n\n\"Sheriff,\" said PHO Beth Paige, \"do we have any progress to report on the case? The Public is very worried about this.\"\n\n\"Yes,\" I said, \"we are making progress. But I'm not going to say anything publicly about it, because I don't want the perps to know and run away. I'd like to catch them and charge them with six counts of murder in the first degree...\"\n\nPart 11 - Ministerial Pleasures\n\n12:30pm, Friday, October 4th. Jack Muscone was very obviously enjoying his two Double Cheeseburgers. I was having just one Single Breakfast Burger plate, Lt. Jerome Davis was trying a new menu item: a massive Cobb Salad. Captain Tanya Perlman was having a Steak Caesar Salad.\n\nTanya had wanted to have this lunch, as she'd taken some offense to me saying to not talk to the FBI about the case. So here we were, in the back 'Command' room of the Cop Bar.\n\n\"I'm working out of the Federal Building here for right now.\" said Jack as we ate. \"I've been really watching out for the Rovers BAU team, but they're not showing up anywhere. Melina has even been searching the hotel registrations for aliases they've been known to use, but that's been a 'no go', as well.\"\n\n\"Maybe they're shacking up with this Dr. Charles Westbrook.\" Tanya said. \"We can't find him, either.\" I began wondering just how much Tanya had told Jack about this case.\n\n\"Don,\" said Jack, getting down to it, \"I understand why you don't want to talk to the FBI, and why you're not issuing public APBs: the Rovers BAU squad. But I hope you trust me and Melina enough to let us help you.\"\n\n\"It's not about trust with you two.\" I said. \"It's simply about keeping a firm lid on the information. One thing you guys may have not thought about is that 'The Geek' is still out there, and he may be hacking into your systems on behalf of Rovers, his BAU, and the Swamp Frogs. You start looking for these perps, and he may know about it within minutes.\"\n\n\"I thought he was arrested.\" said Jerome Davis.\n\n\"He was.\" Muscone said. (Author's note: 'Long Cool Woman', Ch. 03.)\n\n\"Oh hell,\" I said, \"he was probably free in 48 hours after that. The Swamp Frogs just love him. They think they can control him. They're damn fools about that.\"\n\n\"Our systems are pretty darn secure, Don.\" said Muscone. \"But if this Geek is so damn good, how do you know he isn't in your systems?\"\n\n\"I don't.\" I said. \"But to be candidly honest, Jack, The Geek has help getting into your systems, whether it be Rovers's BAU or other Swamp Frogs. Maybe someone in Pennsylvania. By way of contrast, Myron is not exactly extending him invitations to get into ours.\" Muscone did not look very happy at hearing that truth.\n\n\"There is one thing you can help me with, Jack.\" I said. \"The Rovers BAU team was walking into my Police Headquarters at the same time the autopsy results were emailed to us, at best. Even if they had hacked the State Crime Lab, they got here very quickly... so quickly that I simply don't accept that they got the news before inviting themselves in. They were already here!\"",
        "\"I wouldn't be surprised.\" said Muscone. \"Want me to try to check into them? I'm not sure we can do it without them or their benefactors knowing about it.\"\n\n\"And that's exactly what I want.\" I said. \"Get with Assistant Director Lange on it to give yourself some cover, but yeah... I'd like for them to know that they're being probed... deeply probed...\"\n\n* * * * * * * * * * * * * *\n\nI was burning my blue lightbar as my Police SUV sped along the University-City Highway towards the City. In the car with me was Sr. Detective Theo Washington, holding on to the handle above the shotgun-side door for dear life.\n\n\"If you don't want to answer this, I'll understand.\" I said. \"But what's going on in the DA's Office from Franklin's point of view?\" ADA Franklin Washington was Theo's brother.\n\n\"I'll give you the Cliff's Notes, sir.\" said Theo. \"Franklin believes that all of the things we heard about for months, and what Lester Holder ultimately reported on, are true. He thinks DA Walters wanted to demote Paulina along with Gregory, and she meant to do it as a public humiliation of Paulina. Franklin absolutely believes it was racially motivated. And what other reason could there be?\"\n\n\"To answer that question: political reasons.\" I said. \"Walters wants to keep Paulina down so that Paulina doesn't run for D.A. again, or for Solicitor, against Walters or Fineman, respectively.\"\n\n\"Yes sir.\" said Theo. \"But Franklin thinks it's more. A lot more.\"\n\n\"Is he looking for work elsewhere?\" I asked.\n\n\"No comment, sir.\" Theo said.\n\n\"I'll buy that.\" I said.\n\n\"I will say this, sir.\" said Theo. \"There was word that after she realized demoting just Paulina would create a war with you, Walters was going to demote all four ADAs, then come back early next year and promote Franklin and Savannah Fineman to ADAs, leaving Paulina behind and trying to justify it by saying she did promote Franklin. What she didn't know was that Franklin was going to immediately file a civil rights lawsuit over it. That alone would necessitate Franklin looking for employment elsewhere.\"\n\n\"Well, I hope he'll stay.\" I said. \"He's doing such a good job with the Vice cases that I don't even have to show my face in there. I'd hate to lose him, just like I'd hate to lose you from MCD. But if Miriam Walters is creating a toxic situation over there, I wouldn't blame him from getting out.\"\n\n\"I have a question, sir.\" Theo said. \"May I speak freely?\"\n\n\"Sure. Go ahead.\" I replied.\n\n\"Is Paulina going to leave? Or run again against Walters?\" Theo asked. \"Franklin will support her all the way if she does.\"\n\n\"I don't know what Paulina's plans are.\" I said truthfully. \"She doesn't want to play the race card at all, but she's not going to let Miriam Walters walk all over her in order to help Miriam's crony Savannah Fineman...\"\n\nJust then my Police iPhone chimed. I read the text. \"Ahhhh, outstanding. Ready to have some fun, Theo?\"\n\n\"Always, sir.\"\n\n* * * * * * * * * * * * * *\n\n\"Ohhh, yeahhh...\" groaned Jolene. She was sitting on the edge of Brother Terence Ballard's desk in his office, her dress hitched up, her long legs spread wide. Between her slender thighs was Ballard, his pants around his knees, and his fat cock pistoning in and out of Jolene's tight, wet snatch.\n\n\"Yeah, sister.\" grunted Ballard. \"Your tight pussy is a piece of heaven. Let me bestow the Lord's blessings deep inside your heavenly---\"\n\n*CLICK!*\n\nOops, I thought to myself as I photographed the leader of the 'World Outreach Church' plundering his assistant's womanly depths, I left the sound on. How careless of me.\n\n\"I daresay it's not 'outreach', but 'in-reach', Detective.\" I said to Theo. We were both wearing armor that had the generic 'POLICE' label instead of 'TCPD'.\n\n\"What the hell you doin' in here?\" thundered Ballard as he pulled himself out of Jolene. Part of him was going for his pants, and another part of him was going for his desk drawer.\n\n\"Don't even think about it.\" I said, lightly tapping my red crowbar on his hand on the drawer. Theo had pulled Jolene to the side, and was handcuffing her as she screamed obscenities at him. Meanwhile, I had pulled Terence's arms behind him and handcuffed him.\n\n\"Where's your warrant, Pig?\" screamed Ballard. \"I'll have your fucking badge for this!\"\n\n\"Not exactly churchgoing language out of these two, sir.\" said Theo with his movie-star-handsome grin.\n\n\"Not at all.\" I replied agreeably. \"Here's your warrant, Brother Terence.\" I said to him, exhibiting the document. It had been sent to me electronically from the Magistrate Court judge in the City, and I had a mobile printer in my Police SUV that printed it out. Ain't technology wonderful?\n\n\"Okay,\" I said as I put on latex gloves, \"let's see what you were going after in this drawer.\" I opened it, and saw the powerful handgun inside.\n\n\"I got a concealed carry permit for that.\" said Ballard.\n\n\"I doubt it.\" I said as I rapidly extracted the cartridges from the magazine, then poured the cartridges, then the empty magazine into a evidence bag. \"You've got a pretty long rap sheet of drug distribution charges from your younger days. And it's still illegal in this State to have firearms in church, even with a concealed carry permit.\"\n\n\"This isn't the church, bonehead.\" growled Ballard. \"It's the office. My place of bizz-ness.\"\n\nAs I cleared the powerful handgun, put the cartridge in with the others, then the pistol in another bag, I said \"That remains to be seen.\" I moved to the side, then pushed Ballard into his desk chair, his pants still around his ankles.\n\n\"So, Ballard.\" I said. \"Drug distribution in the past---\"\n\n\"I'm out of all that!\" protested Ballard. \"I got clean, I found Christ, and I'm running this church now.\"\n\n\"Don't interrupt me again.\" I said, tapping Ballard on the arm with my red crowbar. \"As I said, you have a history of being very familiar with drugs. You have a loaded firearm on church property. But what interests me about you... is that you were Lawrence Evans's spiritual leader, and both you and he know Charles Westbrook. Tell me about them, and where I can find Westbrook, and I'll just forget about finding this... evidence...\" I was holding up the bag of bullets and the magazine...\n\n\"And while I can't un-see you banging this slut like you were when I walked in,\" I said, \"I'll delete the photo I took of it. So, tell me about Lawrence Evans.\"\n\n\"I told those cops yesterday,\" said Ballard, \"Lawrence left the church months ago. I don't know anything about him since he left.\"\n\n\"Let's try again.\" I said. \"I'm betting getting Jolene's mouth and pussy on your cock is a whole lot better than what's going to happen to you in prison. Lawrence Evans. Charles Westbrook. Connect those dots, Brother Terence.\"\n\n\"I want a lawyer.\" Ballard said, looking hatefully at me.\n\nI turned to Theo and said \"He wants a lawyer. He wants... a lawyer.\" I turned back to Ballard and said \"Okay, then. You are under arrest. You have the right to remain silent...\"\n\n* * * * * * * * * * * * * *\n\nAn unmarked City Police vehicle containing City Detectives Robin Ventura and E.J. Jefferson came up. I transferred the evidence, the prisoners, and a copy of the warrant to their custody. They said they'd send their CSI teams to go through the church and the offices.\n\nAfter they left, I began looking around. The church faced west, and the offices were to the right (south) of it. As I looked north, I saw in the distance a small metal building that looked like a business, with a strip of oak-tree-line ground between its parking lot and the church's. \"No markings on that building, but it's on church property.\" I said \"Let's go see what it has to offer.\"\n\nWe drove up and parked on the church's side, then crossed the ground to the building. There were no cars in the lot, and the building seemed empty. But when I tried the front door, it opened.\n\n\"Cover me.\" I said as I drew my service weapon and went in. On the right side was the waiting room, with some chairs and a table with very old magazines on it. To the left were two empty, generic offices like those in a branch bank. Further down was a receptionist's window, like a doctor's office, and a door in the back wall. I looked as far as I could into the receptionists area, but could see no one.\n\nI nodded to Theo and opened the door, and he went through in a manner of clearing the place. I followed behind. There were three offices in the hallway to the back, two on the right, one on the left behind the breakroom that was next to the receptionist's area. And a steel door at the end of the hall that looked reinforced.\n\nThe building wasn't that deep, so the room behind it could not be that large. Theo grabbed the door handle to open it. It was not locked, and I led the way inside, moving to my right. Theo followed me in, moving to the left.\n\nIt was a storeroom/warehouse area. It was dark except for a few red lights, that gave the room an eerie, evil sensation. Coming into the door, I'd seen the bank of light switches on the wall next to the door, and I flicked them on, bathing the room in normal, fluorescent lighting.\n\nThe room was virtually empty. There was a table at the far end, with red candles and a book. To the left side was a large loading dock door. To the right were storage cabinets. But what was shocking was what was on the almost shiny smooth concrete floor. In the dead middle of the room on the floor was etched a huge pentagram, the bottom point of the star pointing right at the door we'd come in.\n\n\"Damn, what the hell is this place?\" muttered Theo, looking around. \"A church of Satan?\"\n\n\"I dunno.\" I said, holstering my service weapon. \"Let's go back into the offices and see if there's any clue to Westbrook's whereabouts.\" We turned to go. But just as I was about to close the door behind me, I thought I heard a sound. I turned and went back in, and gasped.\n\nIn the dead middle of the pentagram stood a man in a suit. The gasp came as my mind seemed to see Pastor Raymond Kyle Westboro, the Consultant of Crime! \n\nThen I realized it wasn't him; this man just looked a lot like him. But I could feel a sense of sinister foreboding, a sense that reminded me of the original Consultant and his unlimited capacity for evil.\n\n\"Ah, come in Commander Troy!\" the man called out, his voice smooth and rich, not Westboro's harshness. \"There is no need to look further for Dr. Charles Westbrook. You have found him!...\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "horror",
        "iron crowbar",
        "mystery",
        "police drama"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/return-to-point-hollow-ch-02"
}