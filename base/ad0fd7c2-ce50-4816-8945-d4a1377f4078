{
    "title": "A College Professor's Discovery Ch. 02",
    "pages": [
        "(A note of appreciation to the readers who have voted for the first installment of this story in the contest underway here at Literotica until Nov. 2, 2010. Your votes in the Fetish category under \"Awards & Contests\" on the Bulletin Board are much appreciated\u2014I am delighted you have found Dr. Sherrie Mathison's journey on her way toward completing her anthropological research and her book an engaging read.\n\n(The details of Dr. Mathison's second tutoring session are related below. The inventive Miss Victoria orchestrates several surprises during her second visit, among them prompts to the male she has brought for Sherrie's practice session to reveal the reasons he enjoys surrendering to a woman's thrusts.)\n\n***\n\nDr. Sherrie Mathison gazed distractedly out the plane window at an expanse of puffy whiteness which was the cloud cover over some stretch of ocean between her comfy suburban townhome in North America and the remote piece of New Zealand where she would spend the next four months.\n\nOnly three times did I do it, and all in the last two weeks, she thought, focusing on her reflection in the porthole-sized window.\n\nOnly three times have I\u2014god help me\u2014fucked a man in the ass with a strapon dildo, Sherrie mused, finally allowing herself to ruminate about the crazy solution she had devised to ensure the successful conclusion she needed to finish her book about the New Zealand tribe. Will the tribe's women accept me as practiced enough, as worthy, to take me into their confidence after I slip the bulb end of the dildo inside my vagina, strap it into place lube it up, and then . . .\n\nSherrie squeezed her thighs together.\n\nThis was exactly why she had diverted her attention from thinking about what she'd done in the last two weeks, what she was going to do in New Zealand in the very near future\u2014hardened nipples, a moist pussy, and a telltale flush on her throat were all signs that she was aroused. Trapped with hundreds of strangers in a metal tube miles above the ocean was no place to endure the intense bout of horniness that Sherrie was about to surrender herself to.\n\nBut it was just too delicious not to think about . . .\n\nAndrew. Miss Victoria's tutelage. Mental visions of what she had seen (damn! but he had a great ass!) and what she had done during that first, mind-blowing session when Sherrie had discovered the erotic delights of sliding a strapon dildo up a guy's ass and then settling into a rhythm as she learned to fuck a man\u2014REALLY fuck a man\u2014and enjoy the incredible sensations of the act.\n\nAbandoning any pretense now about avoiding the memories, Sherrie reached up to position the air vent and turn it on.\n\nMaybe the focused breeze would disperse any potential aroma of her arousal.\n\nOh, shit\u2014how hot and sexy Andrew looked when she saw him naked except for his blindfold. What a lovely cock! And then watching that gorgeous pink shaft rise and stiffen as Sherrie's tutor kissed him, the taste and smell of the woman's own pussy on her lips as she pressed them against his.\n\n(Even the memory of what Miss Victoria had done a few minutes before she kissed the first man Sherrie was going to ass-fuck was arousing: telling Sherrie that she was going to give Andrew a reward for being a good toy for them that evening, her tutor extracted the bulb end of the dildo that she had pushed into her vagina while giving Sherrie instructions on how to insert the toy, drew it to her lips, and sucked off her juices. The memory of that visual, and knowing afterwards the reason why Miss Victoria did it, never failed to charge Sherrie's sexual batteries. Andrew's cock rose to a glorious, throbbing full erection with no stimulation other than the fragrant kiss from the \"sensuous domme\" whom he had been paying to screw him in the ass.\n\n(Well, Sherrie thought, a smile coming to her face, it was probably a combination of the kiss and the anticipation of the evening's activities in Sherrie's living room that had stiffened his cock. No matter\u2014whatever the reasons, seeing his naked cock rise and point toward the ceiling was fantastically arousing.)\n\nBut that first, incredible witness to a man's surrender! When Miss Victoria said, \"Andrew, open up for the lady,\" and Sherrie felt the little indentation hollow out underneath the pad of her lubricated finger as she held it against his asshole . . .\n\nRemembering how that had felt, the powerful signal of surrender that it sent, she got that little flutter in her tummy that always came with the anticipation of extreme arousal.\n\nWhy am I stuck on an airplane?\n\nBut then, positioning the tip of her shaft at that proffered opening and slowly\u2014oh, so slowly\u2014sliding it in, hearing the sound he made as he let her penetrate him . . .\n\nMaybe the guy in the seat next to me\u2014she checked; he seemed to be engrossed in the movie\u2014won't notice if I kind of pouff up the blanket like this over my crotch so I can at least spread my thighs just a little in order to press my fingers against my clit through these slacks.\n\nGod! It had been so hot to fuck Andrew in the ass while he was bent over the arm of her sofa!\n\nSherrie remembered what it had felt like to grab his hips, to press herself against the backs of thighs when she bottomed out completely with the dildo inside his ass. She replayed the sensation in her muscle memory of the next action: reaching up to grab Andrew's shoulders and really begin screwing him. And then that amazing, fascinating feeling of squirming against him, nudging the shaft of the dildo across his prostate and the bulb in her pussy up against her G-spot.\n\nHis moans! What sexy, nasty, lovely, beautiful sounds! They were man-growls of lust mixed with punctuated groans triggered when he reacted in surprise to the occasional deep, intense shove that felt so divine as Sherrie drove her shaft inside him and sealed herself tightly against his flanks, pushing hard, feeling the incredible throb of mounting sexual intensity spread through her body. \n\nIt was such a rush that she couldn't wait to do it again with Miss Victoria's second \"practice toy.\"\n\nTrent.\n\nThe swimmer.\n\nAnd for her second lesson, the videocamera.\n\nLooking again out the window, Sherrie saw her reflection floating in front of the backdrop of brilliant whiteness. What have I been missing in my life? she mused. Romance? Yes. Sex? Yes. Romance AND sex, all with the same man? Yes.\n\nMiss Victoria had instantly sensed Sherrie's shyness and sexual inexperience during her first visit. The woman's comments about Sherrie's inherent attractiveness, her ability to cultivate men's attentions if she only took more initiative to do so, to dress in more figure-flattering styles, to highlight her pretty facial features with make-up\u2014they were nice to hear, nice to think about as maybe even being true.\n\nStudying her reflection, Sherrie allowed herself the freedom of a thought that had been so foreign to her before Miss Victoria's suggestion: Well, maybe I do have a pretty face . . .\n\n\"Appropriately\" shy (Sherrie thought) in a discipline where research involved fieldwork that meant it was often months between bouts in front of a mirror with mascara in hand, Sherrie realized now that she had retreated into her career, at least where matters of the heart were concerned.\n\nHad she chosen anthropology precisely because it meant she would never have to unearth her self-doubts about her ability to attract a man, a lover, a husband?\n\nShe saw the wry smile form on her lips in the plane window's reflection. How ironic. Her career meant she worked inexhaustibly, pushing past all impediments, specifically to unearth details about other cultures' beliefs.\n\nNow she realized that perhaps her choice of career had been predicated, at least in part, on the fact that anthropology allowed her to keep buried her own beliefs about herself.\n\nWorking in places where she probably wouldn't meet many eligible men meant she didn't have to confront her own self-doubts.\n\nHer smile broadened when the next thought struck:\n\nWas it just desserts that her career had led her to the activity of the last two weeks? Activity that had be undertaken in order to succeed in her research despite the fact that it meant she had to do what before she would not have even allowed herself to think about?\n\nShe had played with three handsome and naked men, toyed with their asses, cocks, balls, and done the most mind-blowing things to their proffered and willing assholes. She had completely abandoned herself to sexual pleasure and savored the orgasms that fucking these men created for her.\n\nAnd in the process she had discovered that all three had lusted for what she had done, had squirmed in pleasure and arousal, crazy for her to continue doing it.\n\nWhat SHE had done to THEM. She was pleasing them sexually. Intensely. They loved how she was making them feel.\n\nBut just as important was how much it had turned her on. \n\nSherrie knew before the first tutoring session that her bizarre solution to a vexing academic research problem was going to create the most intense sexual experience she had ever participated in (not difficult given her admittedly limited number of naked-flesh-on-naked-flesh couplings with men; still, the physical AND psychological aspects of what she was going to do were so powerfully erotic that even had she been with dozens of men before that first night of tutoring, the effect would have been the same). The first time she had witnessed the tribe's women screwing their naked men in the ass had caused her pussy to flood with juices, so arousing was the act. It was a given that actually doing such a thing herself was going to blow her mind.\n\nMaybe I should trust my subconscious more often, Sherrie thought. It seems to be putting me in situations that demand I interact more with men when I and they are naked.\n\nTurning her head from the window, Sherrie closed her eyes, reclined the seat, and allowed herself to relive the second encounter Miss Victoria had arranged for her to practice strapon man-fucking before she returned to the tribe to participate in the ceremony.\n\nYes, she had been better at man-fucking the second time. But was \"better\" good enough to gain the tribal women's trust to the degree that they would share the traditions and beliefs of their religion? Would she be a good enough man-fucker that the women would explain how the reverent yet exuberant ceremony in which they fucked their men in the ass to the point of climax for both participants had evolved in their culture's history?\n\n***\n\n\"I will bring Trent around at 8 PM tonight,\" Miss Victoria had said on the phone four days after the first of the three encounters Sherrie had asked the woman to arrange as practice sessions so that Sherrie would be able to prove her mettle to the tribe's women as a practiced man-fucker. \"Things will be as before: he has confirmed his sexual and physical health for me by providing the documents I require before any interactions with any of the men who engage my services, he will be blindfolded, and he will have no idea where he is or who is taking his truly adorable man-butt into her hands, spreading him open, and toying with every inch of him, including his very attractive and inviting asshole.\"\n\nMiss Victoria was always blunt, but somehow classy in her presentations. Maybe it was her impeccable enunciation, her vocabulary. Whatever it was, the woman's phone conversations never failed to leave Sherrie in a state of arousal simply due to the topics that Miss Victoria broached with such practiced ease and comfort.\n\n\"You have spent some time examining the videos I suggested?\" Miss Victoria asked.\n\n\"Yes,\" Sherrie answered. \"They were certainly excellent tutorials.\"\n\nMiss Victoria chuckled. \"Good. I told you on my first visit that I took on my current\u2014and temporary\u2014profession only after losing a lover who adored opening himself to me. Our interactions were most similar to the clips I suggested. They were easy to find?\"\n\n\"Just as you said. Those amateur strapon clips were easy to google.\"\n\n\"Good. We've already had the conversation about the dearth of good strapon man-fucking videos and how it seems so much of what exists is about domination and humiliation. Not my cup of tea, so I truly adore those particular amateur clips because they show a couple that is obviously practiced in the act, because both partners enjoy it immensely, and because the woman is very good at fucking her man in the ass. Did you take note of the way she moved when she fucked him? It should have been quite instructive to see the various positions in which he took her dildo inside his asshole?\"\n\nSherrie moistened at even the mention of those video clips.\n\n\"Yes. I agree. Those clips show quite nicely how a woman can move to get the most pleasure for herself as she's giving her man pleasure at the same time. Both of them were clearly hot for what she was doing to him and how she was doing it.\"\n\n\"Excellent.\"\n\nSherrie could hear the smile of satisfaction in Miss Victoria's tone.\n\n\"Those undulating movements\u2014those are the key,\" Miss Victoria said. \"Inexperienced women keep their backs straight, moving their entire bodies back and forth to get the in-and-out movements when they stroke their dildos into the men's assholes. That is a dead giveaway that the woman has not fucked many men in the ass. In this regard, before I found the few good videos of women fucking men with strapons, the best role models in my own development of technique was watching my former lover when he so passionately screwed me in the ass as we videotaped our love-making.\"\n\nSherrie's breath caught in her throat when Miss Victoria shared that intimacy. The woman not only knew of the act as giver. She was also a practiced receiver.\n\nHow hot! How incredibly hot! What it must be like to be in that kind of relationship\u2014a loving, trusting relationship in which gentleness mixed with pure eroticism would crescendo into mind-numbing climaxes for both parties, each of them knowing what it was like to stroke into the other's lubricated anus as a means to orgasm as well as opening to their partner's penetrations as a way of achieving climax.\n\n\"And practice. You've practiced as I've suggested?\"\n\nThe dildo, harness, and lube Miss Victoria had brought the first night for the activities with Andrew were quickly joined by the device she recommended to Sherrie when she called later the evening of the first tutoring session. (Sherrie supposed Miss Victoria had thanked Andrew for being a good demonstration subject, collected her payment, and sent him on his way . . . Damn! What a way to make money!)\n\n\"Yes, I have. And I must thank you for the suggestion. As you advised, I located the male masturbator sleeve easily for sale on the internet, ordered it and paid for the overnight shipping, and then practiced with it as demonstrated by the young lady on that site which supposedly is about women in strapons showing men how to masturbate.\"\n\n\"Good, very good,\" Miss Victoria intoned. \"Though the site is ostensibly set up for a different reason, the delightful young woman who positions the masturbation sleeve between the mattress and the box springs and then shows the viewer how to fuck that fake vagina by demonstrating the act with her strapon is actually quite good with her motions.\"\n\nSherrie had been fascinated by the short segment in which in the topless and attractive young woman, probably college-aged by the looks of her, had demonstrated for the camera how a man could stroke his stiff cock into a woman's wet vagina. However, she did so with those sexy undulations that Miss Victoria said identified a practiced strapon man-fucker.\n\nIt took no effort at all on Sherrie's part to imagine a naked male on all fours in front of the young woman, her hands grasping his hips as she slid her strapon cock into\u2014not the masturbator wedged into the bed, but rather\u2014the nude man's upturned, sexy ass.\n\nThe young lady's smile, her comments to the camera, the motions of her hips, the sway of her young breasts, the way she enjoyed herself in the process and had no reservations at all about sharing all this with the camera\u2014all of it melted together to produce an enjoyable learning experience.\n\nBut a further surprise awaited Sherrie when she had navigated to the site where the masturbator was sold. Also offered for sale was a \"two-play wedge,\" a mount for the creatively designed masturbator (the site prominently advertised the inventive means allowing a man to re-create as closely as possible the feeling of sinking his hard cock into a woman's pussy as the number one selling male sextoy in the world). There was a picture on the site of a man behind the wedge, his erect cock sinking into the masturbator positioned in just the right way in the mount, and the visual instantly convinced Sherrie that the price for both the masturbator and the mount was worth it.\n\nBut her tutor had not said anything about the mount.\n\nWell, Miss Victoria's masturbator was at least over two years old if she had used it with the lover who had left her. Maybe the company hadn't offered the mount when Miss Victoria bought the toy, and having one already in her possession, maybe she hadn't visited the vendor's site in quite a while.\n\nMaybe Sherrie would have the pleasure of showing Miss Victoria something! The tutee becomes the tutor\u2014that would be nice, Sherrie thought.\n\nThen came the sexyfun task of ordering the masturbator. It was a no-brainer to select the sleeve whose end simulated an anus, not the sleeves of a fake vagina or what was supposed to represent a woman's mouth.\n\nMore fun awaited her on the site as Sherrie scrolled through some videos showing the masturbator in use. She was quickly convinced that the toy and the wedge would be perfect as a means of practicing man-fucking when she viewed one of the videos showing a handsome couple demonstrating the toy, the woman holding it between her naked thighs as the man pounded his cock into it, then withdrew to slide inside the woman's vagina. Though the use of the toy was obviously contrived for the purpose of showing the vendor's product (Sherrie would not want him pulling his hard cock out of her pussy in order to stroke into a masturbator in the middle of a hot sexual coupling), when the short video got to the spot where the woman was on her hands and knees, holding the toy between her legs and pressed up against her crotch as the guy pumped into it, Sherrie could tell easily that it would, indeed, be a good way to learn how to use the dildo strapped to her crotch to fuck a man's ass\u2014the guy in the video was stroking into the toy exactly as he would be fucking the woman in the ass if the purpose of the brief film had been to demonstrate butt-fucking instead of pumping into a fake pussy.\n\nWhen her purchases arrived, it was not long before Sherrie was fucking the inventive masturbator in the same way she had fucked Andrew's asshole, only\u2014she hoped\u2014a bit more elegantly, more naturally, more fluidly with her motions as a result of viewing the video clips Miss Victoria had directed her to. It was very, very easy to abandon herself to the memory of Andrew's muscled, nude flanks in front of her as he bent over the arm of her sofa, ass upthrust and offered for her pleasure, his stiff cock hanging between his spread legs and bobbing in front of his balls as they swayed with his motions in preparation for the screwing she was going to give him. Sherrie had multiple orgasms practicing the motions of stroking the shaft of her dildo into the Fleshlight anchored into the wedge as it sat on her coffee table. (She quickly realized that the height of that arrangement was perfect.)\n\nIt HAD been good practice, Sherrie thought.\n\nThat's why she had done it several times.\n\nWell, that and the orgasms that these practice sessions inevitably produced.\n\n\"I hope I'm earning my pay, Dr. Mathison, as a tutor to help you in your very important academic research. The videos and the male masturbation toy should provide ample opportunity for practice until you have a real man to play with.\"",
        "Oh, my god! thought Sherrie. What an incredible idea\u2014my own man, a lover, a guy I want to be with and who wants to be with me, the two of us naked and playing together, him moaning sexily as I fuck him in his tight little asshole!\n\n\"But practice by itself isn't all that's needed, Dr. Mathison. Have you ever heard the saying, 'Practice makes perfect'?\"\n\n\"Well, sure,\" answered Sherrie. \"Hasn't everyone?\"\n\n\"I suppose that's true,\" Miss Victoria said, \"but it's not accurate. Practicing anything by simply doing the same thing over and over is a waste of time. One wants to improve during each practice session. Does that make sense?\"\n\n\"Absolutely.\"\n\n\"So the saying, to be accurate, should really be, 'Perfect practice makes perfect.' You practice, learn how to do things a little better in each session, and you advance to becoming an expert.\"\n\nSherrie wasn't sure where all this was headed.\n\n\"So that is why I've determined that tonight's activities will be videotaped.\"\n\nSherrie was dumbstruck. Seconds ticked by as she tried to process Miss Victoria's statement.\n\n\"Please don't be shocked,\" the woman said gently. \"You need feedback to practice perfectly. You won't be able to see yourself tonight, to see the motions of your hips, when you're screwing Trent in his beautiful, firm bottom. But you WILL be able to watch yourself doing it on the video that will capture forever your second man-fucking training session.\"\n\nThe thought was scandalizing but so incredibly erotic that Sherrie was instantly shackled to the mix of emotions playing through her mind and body: watching myself do this to a man, remembering how it felt when I see my fake cock thrusting into his asshole as I screw him.\n\nAnd hearing his moans! Seeing him squirm, anxiously backing onto the shaft of my dildo in order to get all the pleasure I can give to him!\n\nOh, god! This would be fantastic!\n\n\"Remembering my own introduction to the act,\" Miss Victoria said, interrupting Sherrie's excited visions and thoughts, \"and how I learned far more quickly to be good at man-fucking as a result of seeing masterful performances, made me realize we would be far more certain of ensuring your successful acquisition of the skills you must have for your research if we had an artifact of your performance to critique.\"\n\nSherrie was still a bit unnerved by the pronouncement that she would be filmed tonight as she fucked a man in the ass.\n\nBut she was so aroused by the thought that nothing would prevent her from having her tutor catch everything with a videocamera.\n\nMiss Victoria continued. \"While you certainly were getting the hang of things with Andrew\u2014and, oh, by the way, did I tell you how much he enjoyed the way you fucked him? He positively raved about the entire evening, but he said that you drove him crazy when you squirmed against him with the shaft of your dildo driven completely inside his asshole. Well, even given the good screwing you gave him, a practiced eye would have picked up on a thing or two that might give you away as relatively inexperienced in taking a man's ass.\"\n\nSherrie pressed her thighs together, barely able to keep from dropping the phone when Miss Victoria told her of Andrew's reactions and comments. That gorgeous man liked\u2014loved!\u2014the way I fucked him in the ass!\n\nNow Sherrie was even more curious about what Andrew's face looked like. The blindfold hid so much. Even though she was relieved that it had been in place (and it absolutely HAD to be in place to protect her identity), now, hearing from Miss Victoria how much Andrew liked what she did to him, she truly wanted to know what he looked like.\n\nWell, what his face looked like.\n\nShe had seen every last inch of him otherwise.\n\nOh, that fantastic butt! His cute little asshole! His wonderful cock and shaven balls . . .\n\n\"So it quickly became obvious to me that 'game film,' if you will, is a good idea\" continued Miss Victoria. \"Good coaches critique their players' performances, and the players themselves use the films to learn what they did right and where they need to improve. You're paying me, Dr. Mathison, to help you succeed with your anthropological research, and I have taken the assignment seriously.\" Miss Victoria paused a moment before continuing: \"I admit to enjoying this engagement of my services a great deal,\" she said. \"I suppose I have developed a vested interest in your success when you perform for the women of that tribe.\"\n\nSherrie's throat had gone dry in anticipation of watching herself fuck a naked man in the ass. \"I appreciate that,\" she managed.\n\n\"And be aware that I am a good videographer. My former lover and I became quite proficient in knowing where to set tripods, what settings are best to capture the action in the lighting of a bedroom or living room, and . . .\" the woman paused before continuing with a conspiratorial twinge in the conclusion of her comment, \"in enjoying the replay on our large screen television as we played with each other, commenting about what we were seeing on the screen.\"\n\nWill this woman PLEASE stop talking like this?! Sherrie thought, a mini-orgasm causing her pussy to spasm. The mere mention of such things, knowing that the images which would be on the screen while two lovers watched themselves would be of the man on all fours, taking the woman's strapon into his upturned ass, made Sherrie so hot that she was glad she was not in front of Miss Victoria listening to all this. The distance that the phone call put between them meant that she wouldn't have to deal with the embarrassment of stroking her clit in front of the woman.\n\nAnd Sherrie was definitely pressing a finger between her thighs at the moment, finding just the right pressure point to bestow some desperately needed stimulation to her throbbing clit.\n\n\"But our filming tonight will require that you put away any pictures of yourself and friends that might be out in your living room,\" Miss Victoria said.\n\n\"But surely no one but me will ever see the video!\" Sherrie exclaimed.\n\n\"Of course not,\" Miss Victoria reassured. \"I will give you the data card from the camera at the end of the night, and you can verify for yourself that no data were captured on any resident memory in the camcorder. Only you will possess the single copy of the night's activities in video format.\"\n\n\"Then why should it be necessary to-\"\n\n\"I don't want to spoil the surprise, Dr. Mathison,\" Miss Victoria interrupted, \"but you will understand, and be quite delighted, I assure you, with the reason for my request.\"\n\nSherrie was intrigued by this turn of events. Her first encounter with Miss Victoria, and with the \"toy\" she had brought 'round for Sherrie to practice on during her initial lesson, was everything she hoped for, and more, not only because of the fantastic man she had screwed in the ass until she had reached the most intense orgasm of her life, but also because Miss Victoria was a sophisticated woman, clearly educated and able to talk intelligently about anthropology, academic research, and the rigors of knowledge-seeking. Indeed, the woman had just said, \"data were\" and not, \"data was\"\u2014a sure sign of some kind of academic training. But Miss Victoria had also been forthcoming that first night, putting Sherrie at ease with revelations about her own relationship with a special man who had taken her strapon as one of the acts of love the two of them had shared.\n\nThinking that the \"sensuous domme\" she had employed as a tutor surely didn't share these kinds of things with others, the fact that the woman on the phone was taking Sherrie into her confidence about the way she had played with a lover meant a lot. (Though other women had hired Miss Victoria to teach them how to fuck men in the ass\u2014the woman said so during Sherrie's first tutoring session\u2014Sherrie sensed that Miss Victoria had truly taken a special interest in her situation.)\n\n\"So I will see you tonight at the appointed hour, Dr. Mathison,\" Miss Victoria said. \"I look forward to our continued collaboration.\"\n\nThe woman let the implication drift for a second before concluding with, \"I should let you know, too, that Trent is extremely eager for you to fuck him tonight.\"\n\nAnd she hung up.\n\nThat did it. Sherrie wiggled down her jeans, tugged down her panties, and found her pussy wet and slippery, which was just what she needed in order to roll her engorged clit underneath her fingertips as the first step on the way to an orgasm that would take only seconds to achieve in the aftermath of the phone call just concluded.\n\nWhat does Trent look like? What will his naked ass feel like under my hands? What will his asshole look like when I slide my finger in, my strapon in? Will he moan like Andrew did? The bulb of my dildo inside my pussy\u2014will it nudge up against my G-spot the same way it did when I fucked Andrew?\n\nWhen I drape myself over his back, grab his shoulders to hang on tight and start squirming against him while the shaft of my dildo is buried completely inside his-\n\nSherrie's orgasm hit her with that thought.\n\nEight PM could not come soon enough.\n\n***\n\nPunctual and professional, Miss Victoria was on the doorstep of her townhome precisely at 8 PM, pushing the doorbell but a single time. Standing next to her, blindfolded, was \"Trent.\"\n\n(Again, Sherrie was thankful that the timing of her tutoring sessions put them deep enough into the year that it was well past nightfall when Miss Victoria ushered the men from her car to the little landing in front of her door.)\n\nOpening the door, Sherrie saw that Trent was, as had been Andrew, holding a duffel bag, and he was similarly attired to what Andrew had worn: khakis, a button-down shirt, and loafers.\n\nSherrie assumed that he, like Andrew, was wearing no underwear.\n\nA delicious thought, especially given Trent's attractiveness, even wearing a blindfold. Sandy blonde hair, a nice build as one judges such things when the man is still clothed, a strong jaw.\n\nDifferent this time was that Miss Victoria herself was carrying a small bag. In all other respects, however, this second tutoring session was beginning exactly as had Sherrie's initial experience with grasping a man's naked asscheeks, spreading him open to her view, and screwing him with her strapon dildo.\n\n\"Thank you,\" Miss Victoria said, ushering Trent inside, careful to guide him over the threshold given his inability to see. The woman was again wearing the long coat she had worn when bringing Andrew for Sherrie's first lesson. Handing her the small bag, Miss Victoria's fluid shrug of her shoulders caused the coat to fall down her arms and into her grasp as she whisked it off behind her. It was quickly evident that again the evening's tutor was dressed in her \"working attire\"\u2014corset with a built-in underwire bra, black jeans that hugged her hips fetchingly, and shoes that were, well, quite clearly not meant for a hike in the mountains.\n\nTonight, though, the corset was a kind of silver-gray color that acted as the perfect complement to Miss Victoria's raven-black hair. (Again, Sherrie wondered if it were a wig.)\n\n\"I'm pleased to introduce you to Trent,\" she said to Sherrie, turning toward the man who was now standing inside Sherrie's townhome. \"He was a competitive swimmer in his college years, and as you'll soon see, he has kept the toned body of a swimmer.\"\n\nThen, as Miss Victoria had often done with Andrew, she made a comment that Sherrie knew was meant to amp up the sexually charged atmosphere, teasing the man who would soon be naked in front of them.\n\n\"I think you'll particularly enjoy seeing his nice butt and his naked cock. Swimming does good things for a man's butt, and Trent's ass is wonderful to play with. His cock, too, is quite a nice toy. We shall use his lovely, naked, erect penis in many delightful ways along with screwing him in the ass tonight.\"\n\nSherrie could only imagine . . .\n\nMiss Victoria immediately jumped right into her \"sensuous domme\" performance in Sherrie's living room. \"Why don't you move over here,\" she said to Trent as she led him, duffel bag still in his hand, to a comfortable chair set across from the sofa in accommodation to a gathering's conversational needs to see each other as they sat around the small coffee table in the living room. She had Trent set down the bag next to the chair and sit, then turned to Sherrie.\n\n\"May I lay my coat here?\" she asked, indicating a straight-backed chair next to the door. \"And why don't you put that bag on your counter in the kitchen. We will enjoy the contents soon enough.\"\n\nPuzzling over the comment, Sherrie walked quickly, nervously, to her kitchen to do as Miss Victoria suggested. What was going on? Was something else going to be different tonight other than the video recording which was such an exciting thought?\n\nReturning to the living room, Sherrie saw that Miss Victoria had seated herself comfortably on the sofa. \"Come, sit,\" she said. \"We will have a nice view relaxing here as we watch Trent disrobe for us.\"\n\nSherrie's stomach fluttered.\n\nIt was beginning.\n\nEasing herself onto the sofa a few inches away from Miss Victoria, Sherrie saw Trent rise, as if on cue, and begin to unbutton his shirt. When the first few buttons were undone, the glimpse of his chest\u2014smooth and hairless\u2014made Sherrie wonder if swimming competitively might have caused Trent to fall into the habit of shaving all over.\n\nAnother delicious thought!\n\nDropping the shirt to the floor after reaching around behind him to feel for a place to put it (and receiving no comment of assistance from Miss Victoria), Trent toed off his shoes and pushed them to the side. He unhooked his slacks and pulled down the zipper.\n\nSherrie's conjecture earlier about no underwear was accurate. As Trent dropped the pants into a pile at his ankles, his naked cock and balls were on display.\n\nMiss Victoria smiled, her gaze roaming up and down the nude male's body.\n\nSherrie's instant visual examination corroborated her suspicion about the state of his entire body: hairless, even to the extent that no pubic hair was evident anywhere.\n\nMiss Victoria shifted a bit, crossing her legs and settling against the arm of the sofa. Trent stepped out of his trousers and bent down to pick them up. \"One of the benefits of my line of work is that I enjoy myself with a variety of men, each a delight in his own way. Trent, as you can see, has maintained his practice of shaving to eliminate drag in the water. Though he no longer swims competitively, the half-hour routine of removing his body hair is a fine investment of time, don't you think?\"\n\nHer gaze locked on the naked male who was now clumsily folding his pants as best he could while blindfolded, Sherrie only nodded, knowing that she would not answer any of Miss Victoria's questions in the presence of the men who her tutor was bringing for Sherrie's strapon practice. All the safeguards to protect her identity were in place with Trent as they had been with Andrew.\n\n\"His lithe, muscled body presents a quite clear communication of masculinity, and I enjoy the novelty of caressing the skin anywhere on his body and feeling only smooth, entirely naked flesh underneath my hands,\" Miss Victoria said.\n\nSherrie marveled at the woman's practiced ease with teasing comments. Trent must certainly be aroused to hear that the sensuous domme enjoyed caressing him everywhere, and Sherrie certainly was turned on by the thought, as voiced by Miss Victoria, of running her hands over Trent's nude body.\n\nThe blindfolded man had struggled through his awkward strip for them, having placed the pants where he thought they might be close to his shirt, and was now standing completely nude, hands at his sides, in Sherrie's living room.\n\nContinuing her commentary, Miss Victoria said, \"One nice feature about his delightfully exposed condition is that shaving makes it possible to see all his rippling muscles. Did you know that bodybuilders shave for precisely this purpose?\" she asked, turning to Sherrie.\n\nToo entranced with the sight before her to send Miss Victoria a questioning look, Sherrie only shook her head slowly.\n\nLooking at the naked man a few feet in front of her commanded her attention so powerfully that it was, literally, impossible for Sherrie to look away.\n\nTrent was tall, probably something over six feet, and while his rippling abs spoke testimony to Miss Victoria's comment about a masculine impression communicated in spite of the absence of any hair on his body, the man was not overly muscled. He was lean but by no means skinny, and he had broad shoulders. His torso tapered to a trim waist, and as Sherrie's gaze took all this in, she purposefully forced herself to glance quickly away from his cock and balls in order to visually drink in a complete sweep from head to toe, noting his strong thighs as she completed her initial inspection of the silhouette of his body. \n\nLeaning slightly toward Sherrie, Miss Victoria spoke a little more softly, but still loudly enough for Trent to hear (part of the continuing tease, no doubt), and said, \"Do you like him? Do you like the fact that he's naked for us, that we can see every inch of him?\"\n\nSherrie now fastened her gaze on Trent's lovely cock, which was hanging heavy down in front of him, no trace of erection yet, but certainly not entirely flaccid.\n\nIt was a pretty cock, pink and begging for attention. Exposed for them.\n\nSherrie's mouth actually watered in spite of her extremely limited experience in ministering orally to a man.\n\nTrent looked delicious!\n\n\"Ah, but I've misspoken. We haven't yet seen all of him, have we?\" Miss Victoria teased. Speaking to Trent, she said, \"Turn around, Trent, so we can see that nice, firm bottom of yours.\"\n\nWas that a small grin that he was trying to keep away from beneath the blindfold?\n\nTrent turned, presenting his naked backside for their inspection.\n\n\"This is such a nice view,\" Miss Victoria said, reaching a hand to the side of her head and twirling a lock of her dark hair around one finger. \"Don't you like seeing a man like this? I have to believe that all women like seeing men's butts because the sight triggers such naughty thoughts of what it might be like to grip those buttcheeks while pulling the man's hard cock deeper into our pussies,\" she mused. \"But whatever the reason, let's just have him stand like that for a moment. I want to linger on this pretty sight while I fantasize about what I'm going to do to that gorgeous butt. Seeing it in front of me like this is a nice prompt.\"\n\nHow this woman could tease! Sherrie glanced away from Trent's nude form to see a faraway gaze on Miss Victoria's face. Her tutor was, it seemed, truly engrossed in a mental engagement with Trent's taut glutes.\n\nTaking the cue, Sherrie leaned back a bit into the cushion of the sofa, and relaxed, enjoying the view.\n\nMarveling at the recent turn of events in her life\u2014the desperate and previously unthinkable solution she had concocted to solve the problem of being deemed worthy in the art of fucking a naked man in the ass with a strapon (itself an unbelievable thought until Sherrie had witnessed it for the first time in New Zealand) as well as the mind-blowing fact that just a few days earlier she had actually DONE it . . . actually donned a strapon dildo and buried the shaft into a handsome nude male's upturned butt\u2014Sherrie looked at Trent's backside and shook her head in wonder.\n\nNo, she most assuredly had not envisioned this as part of her academic research and her career as a university professor and anthropologist.\n\nYes, this was still so unnerving for her\u2014I'm just not a woman with a lot of sexual experience, she admitted to herself\u2014but she was liking it a lot. Even after the first tutoring session with Miss Victoria and the fantastic, incredible eroticism of what she had done to Andrew (oh! and Miss Victoria said he'd loved what she did!), it was still the necessity of finishing her book and that chapter about the tribe's religion that was pushing her forward with this second engagement with another handsome, naked, blindfolded man.",
        "Her subconscious still needed permission to allow Sherrie to let go and enjoy herself sexually, but Sherrie knew that she was making progress toward being much more comfortable with savoring sexual encounters purely for their own rewards.\n\nShe glanced over at Miss Victoria, who still had that faraway look in her eyes, obviously mentally enjoying Trent's succulent ass.\n\nHow in god's name did this woman get into this line of work? How does she have these gorgeous guys come to her, PAY her, to have her screw them in the ass for her sexual satisfaction? Do they all get off on it as much as Andrew did?\n\nAnd . . . Am I spoiling myself with this training to succeed with the tribe? God! I LOVED doing it to Andrew, and I KNOW I'm going to love doing it to Trent. How can I have a love life with a man in the future that doesn't include this? How would I even ask a guy whether he might enjoy it if I strapped into that delightful double-ended dildo and used it to fuck him in the ass?\n\nBut how can I NOT ask a guy I'm being intimate with to do it now that I've experienced it?\n\nTrent's ass twitched fetchingly at that moment, and Sherrie abandoned her train of thought to attend to the sexy hot sight in front of her. She would soon put her hands on that ass, knead and massage it, spread it open to see his puckered entrance, slide a lubed-up finger inside him, push the shaft of her dildo deep inside him-\n\n\"Join me in the kitchen, please,\" Miss Victoria said, interrupting Sherrie's fantasy. \"I think it's time for us to open the wine I brought.\"\n\nThey rose from the sofa, Sherrie's earlier surprise at noticing the wine bottle in the bag Miss Victoria had asked her to take to the kitchen brought back to her memory: wine wasn't part of a tutoring session, was it?\n\nMiss Victoria detoured from the direct route to the kitchen in order to step next to Trent and drop a hand to his nude butt. Placing it there to caress and fondle his smooth, firm bottom, she leaned close to him and said, \"Thank you for being such a sexy sight for us to look at, Trent. You look so good naked for us.\" She squeezed one cheek and reached a hand around front to cup his balls. \"Yum.\"\n\nWitnessing the interchange, Sherrie eagerly anticipated her first contact with Trent's handsome naked body.\n\nWhen they were in the kitchen and far enough away from Trent to converse softly without fear that he would hear Sherrie's voice, Miss Victoria paused before speaking. Her gaze roamed over the naked male, who remained standing in place, now in a line of sight across from them so that he was in profile, the curve of his buttocks so very sexy from a side view. \"I like playing with him, Dr. Mathison. He has been quite forthcoming about why he so enjoys taking my strapon, and his explanations and descriptions never fail to arouse me.\"\n\nVery much enjoying the view herself, Sherrie said, \"I never even thought about such a thing until I saw the tribe's women doing it, so any curiosity about a guy's reasons for liking it just didn't exist for me until the first time I saw the ceremony. But there was no doubt that the men of the tribe received as much sexual pleasure from the act as the women.\" She glanced away from Trent to look at Miss Victoria. \"The men moaned and squirmed and ultimately came with as much pleasure as the women experienced with their own orgasms.\"\n\n\"Well,\" said Miss Victoria, pulling the wine bottle from the bag on the counter, \"there is no doubt men enjoy it. If you had any doubts or worries, screwing Andrew's delectable ass should have put them to rest.\" She placed the bottle next to the bag. \"You have a wine opener?\"\n\nRetrieving the corkscrew, then stepping to a cabinet to pull out two wine glasses, Sherrie said, \"But not all men do this. I mean, it can't be all that common, right?\"\n\nMiss Victoria smiled. \"I hope I didn't overstep at our last session when I commented that you seemed somewhat, um, inexperienced with men, Dr. Mathison. I meant no disrespect.\" She looked inquiringly at Sherrie.\n\n\"No. No\u2014I didn't take offense. I guess I broadcast that lack of experience.\"\n\nSmiling, Miss Victoria answered. \"It's not difficult to pick up on.\" Pouring the wine, she continued. \"The reason I mention this is that an inexperienced woman is unlikely to think about such things, much less ask a man about whether he's ever taken a strapon or a butt plug up his ass and, if so, why he likes it.\" She filled Sherrie's glass. \"IF he likes it, that is, and I can assure you that any man who has experienced it at the hands of a woman who introduces it to him gently and lovingly quickly comes to adore the act.\"\n\nMiss Victoria leaned against the counter, her arms crossed with her wine glass in one hand, and looked at Trent. She continued. \"So I'm not surprised that you were shocked the first time you saw what the tribal women were doing to their men in that ceremony. But, as you have no doubt deduced from the way Andrew reacted to your thrusts, some men\u2014the lucky ones\u2014are introduced to the idea somewhere, decide to try it, and from then on add it to their repertoire of sexual acts that bring them pleasure. They then are doubly lucky to find women who allow themselves to try it, discovering how much pleasure the act produces for them.\"\n\nSherrie was a rapt pupil at this point, drinking in not only a swallow of wine but also the words of experience from Miss Victoria.\n\n\"Men like Andrew and Trent,\" Miss Victoria said, nodding toward the naked male a few feet away, \"search for service providers like me,\" and she smiled sadly, \"because they are not in relationships with lovers who will fuck them in the ass on occasion as a means of pleasurable sex play. I always remember that I am but a surrogate for them until they find a lady who will do what I do but who will also be their lovers, their girlfriends, and if they are lucky, their wives.\"\n\nMiss Victoria had just given voice to what Sherrie had wondered about, had even dreamed about in the few nights since her first tutoring session: finding a man who would love her, treasure her, be her mate, and who would want to have her fuck him in the ass with her strapon every now and then in addition to enjoying and craving frequent sex in which Sherrie surrendered to the penetrations of his own sturdy shaft.\n\n\"So how does a woman find a guy like that?\" she asked.\n\nMiss Victoria looked at her, answering with an earnest yet sisterly tone. \"You've probably noticed that I've taken a special interest in your situation, Dr. Mathison. I've communicated that in words once or twice, and you quite correctly assume, I'm sure, that the sessions in which I introduce a lady to the act of taking a man with a strapon don't generally include my bringing wine.\" Pushing herself forward from the edge of the counter, she continued, setting her glass down in the process. \"But I want to help in ways other than just teaching you how to perform the physical act in a manner that will let you succeed with your research and with completing your book. I believe I can help you succeed with men in general.\"\n\nThe comment came out of nowhere and surprised Sherrie. Her expression broadcast her reaction.\n\n\"I know. It sounds conceited,\" Miss Victoria said softly. \"But this temporary job of mine,\" and she glanced toward Trent, \"has taught me a great deal about men.\"\n\nSherrie had no doubt about that.\n\n\"And the first thing I'd like you to take to heart in this matter is that the biggest part of a woman's sexual attraction for a man is that she enjoys sex, wants it, likes doing it with him.\" Miss Victoria leaned toward Sherrie for emphasis. \"Being shy, being hesitant, being worried about whether a man will like the fact that YOU like having sex . . . well, that's a sure route to a continued lack of sexual pleasure, both because you're not going to get much sex, and because the sex you do get is going to be far less satisfying than it could be.\"\n\nGlancing down nervously before responding, Sherrie let out a breath, shrugged her shoulders, and said, \"That's me, Miss Victoria. That's the way I've been.\"\n\nAdmitting it was no fun, and it was embarrassing.\n\nA sincere smile brightened Miss Victoria's face, and the woman who had just provided information that Sherrie somehow knew was going to make a difference in her life looked at Trent, her gaze lingering on his nude body, and said, \"You have a digital camera, yes?\"\n\nSherrie's puzzled expression stood in for any kind of spoken response.\n\n\"A woman enjoying herself sexually, Dr. Mathison. That's one of the things you realize you need to become a bit more practiced at, a bit more successful in doing. I have some ideas about ways to do that, and one of them is to become comfortable appreciating the male body without any embarrassment or guilt.\"\n\nA smile began to creep across Sherrie's face.\n\n\"Trent's body will provide that opportunity, and you might want to practice some 'art appreciation' after he's gone, don't you think?\"\n\nSherrie grinned broadly.\n\n\"The camcorder I brought has a still setting which takes good pictures, but there will be something quite liberating for you if you are the photographer, Dr. Mathison, capturing Trent's nakedness with your own camera, looking at the digital display after each click and knowing that not only is he here right now, naked for your pleasure, but that he will be naked for you to enjoy even after he leaves.\"\n\nInstantly turned on by the idea of having not only the video that Miss Victoria would shoot of her plunging her strapon into Trent's upturned butt but also pictures of his sexy, naked body to look at as she masturbated to the memories of this evening (and she knew she would!), Sherrie appreciated even more the special interest Miss Victoria was taking in her strapon man-fucking educational curriculum.\n\n\"And his lovely erection,\" Miss Victoria said with a smile, \"is definitely something you will be glad you have captured in a photographic memento. His erect cock is so inviting.\" She motioned toward Trent standing naked in Sherrie's living room. \"His butt, too, will be captured by your camera. I have some quite revealing poses that I particularly like a naked man to assume when I'm taking pictures because I know the pictures will turn me on so much later, showing off his backside in such inventive ways.\"\n\nYes, Miss Victoria was truly helping Sherrie learn how to become more successful attracting men as well as learning how to enjoy herself sexually. Seeing Trent naked, in person and in the pictures she would take, would be pleasurable and sexually arousing\u2014enjoyment she felt she would now be able to do indulge in without worrying whether it was giving into some base instinct that she should, as a woman, be above.\n\nSherrie liked this newfound feeling of freedom to enjoy looking at naked men. It reminded her that she might have an additional way to pay Miss Victoria for her tutelage: sharing her discovery about the wedge she'd purchased and which had worked so very nicely for her strapon fucking practice.\n\n\"You've been so good to think of ways to help me, Miss Victoria,\" she said. \"I know that the fee for three sessions covers the instruction from you I desperately need, but I also know that the advice you're giving me, the added bonus of video and pictures . . . well, I understand those things are certainly above and beyond what you must do when other women have hired you to learn the fine art of taking a man's ass.\"\n\nMiss Victoria smiled.\n\n\"But maybe I have a little information of my own to share with you as at least some kind of payback for the additional instruction you've provided.\"\n\nMiss Victoria's eyebrows raised as she tilted her head toward Sherrie.\n\n\"Do you know of the wedge that the vendor for the male masturbator sells?\"\n\n\"Wedge?\"\n\n\"Yes,\" answered Sherrie, happy that she was able to provide her tutor some new information, \"it's built to position the masturbator at the perfect angle for practice.\"\n\n\"That sounds very interesting,\" Miss Victoria said, intrigued.\n\nSherrie went to the small coat closet near her front door and retrieved the wedge. Walking back to the kitchen (and brazenly repeating Miss Victoria's detour to fondle Trent), she put the toy on her kitchen table.\n\nInstantly understanding its use and positioning, Miss Victoria said, \"Yes, I can see that this would be excellent for holding the masturbator in place for some enthusiastic practice.\"\n\nGiggling, then remembering to continue keeping her voice down so Trent wouldn't hear, Sherrie said, \"When I put it on the coffee table, it's at a pretty good height, maybe a little low, but that's okay. I got in a lot of practice time.\"\n\nMiss Victoria nodded in understanding, briefly examining the wedge as it sat on Sherrie's table. Then she walked out of the kitchen, striding deliberately toward Trent. She pressed herself tightly against the side of his body, reaching forward to wrap her fingers around his cock in the process, and said, \"The lady wants to see you with an erection, Trent. Why don't you masturbate for us?\"\n\nSherrie had stepped from the kitchen back into the living room, but Miss Victoria's directive to Trent stopped her in her tracks.\n\n\"I love watching you stroke your lovely penis into a throbbing erection, and I'm sure it will be just as enjoyable for the woman who will soon be toying with every inch of you for her sexual pleasure.\"\n\nKnowing that what Miss Victoria had just said to Trent was purposefully delivered as a follow-up to their conversation about becoming more sexually confident, more able to engage in unbridled sexplay for the pure enjoyment of the act, what the woman had just said\u2014and with a naked male eager for Sherrie to play with him standing in her living room!\u2014had a stunning effect. Sherrie's pussy instantly began to lubricate, and a flutter behind her bellybutton told her that she would quickly be at the mercy of the intense eroticism of this situation.\n\nYes, she would toy with every inch of Trent's naked body! Yes, it would be fun, exciting, sexy beyond her ability to do anything but strap into her purple toy and screw him in his ass until she experienced another blinding climax, just as had occurred while squirming her strapon deep into Andrew's ass.\n\nThis time, though, she would be better at fucking the man, better at moving behind him in ways that were naturally smooth and graceful yet which created such incredibly intense, shivering reactions in her belly, her pussy, on her clit, and against her G-spot.\n\nThe thought made her so hot to touch his naked flesh that Sherrie strode to stand behind Trent, planting both hands on the cheeks of his ass. She squeezed and gripped the firm mounds, pressing her fingers insistently and eagerly against his muscular glutes. She massaged and palpated, released her grip to pat and then playfully spank his naked butt, then returned her grip to fondle him some more.\n\nIt felt wonderful. It was a release of some sort, and Sherrie abandoned herself to playing with Trent's ass, enjoying how its texture and feel, turning herself on more and more with the sight of it, the control of it, and then\u2014giving herself permission to accede to her lustful desire\u2014she dropped to her knees behind him and sealed her lips against one cheek, to enjoy the taste of Trent's gorgeous bottom.\n\nHe moaned.\n\nRunning her tongue across his butt after breaking the seal of her lips against his skin, Sherrie playfully nipped at one spot, then kissed it sensuously to make up for the surprise liberty she had taken with his naked ass. She grabbed his hips for leverage and then, surprising even herself, Sherrie nuzzled her mouth between his cheeks and flicked her tongue out, briefly making contact with his asshole.\n\nTrent groaned louder.\n\n\"Don't get hard yet, Trent,\" Miss Victoria warned. \"We want to watch you masturbate to an erection for us.\"\n\nHearing Miss Victoria's words, Sherrie rose, grinning broadly, and walked to the end table where she kept her digital camera. She opened the drawer to retrieve it as Miss Victoria seated Trent in the padded chair he had been standing in front of for the past several minutes.\n\nPositioning herself across from Trent in order to get a nice picture that would capture all of him in the picture, Sherrie noticed Miss Victoria walk back into the kitchen to retrieve their glasses of wine. Setting Sherrie's on the end table next to the sofa, she settled into the cushion, reached down to unbuckle the little straps on her sexy shoes then slip them off, and said, \"The lady wants some pictures of you, Trent. How about a nice smile for the camera?\"\n\nSherrie grinned and snapped the camera shutter when she saw Trent's smile widen underneath his blindfold.\n\nHow she wished she could see his face!\n\n\"What about a stretch with your hands behind your head\u2014that always makes nice things happen to the way your arms and chest look,\" Miss Victoria said.\n\nHas she posed him before? Sherrie wondered, snapping multiple pictures of her naked male model positioned in this manner, which did, indeed, create a very sexy effect, emphasizing his biceps and thrusting his strong chest forward. Then, remembering Miss Victoria's comment about having some favorite poses for naked males, she wondered if part of being a sensuous domme for the men who came to her included some kind of audition in front of her camera . . .\n\nThe thought surprised Sherrie. Am I starting to have a dirty mind? she wondered, aroused at the idea her subconscious had just presented: naked men, placed into poses specifically to expose what a woman wanted to see, compliant in their eagerness to please in order to be selected as the ones whose pretty boy-butts would be fondled, groped, kissed, and penetrated by the woman's strapon . . .\n\n\"Run your hands down your chest and drop one under your balls so you can lift them a bit\u2014we'd like to see you present yourself to us.\"\n\nMiss Victoria's words interrupted Sherrie's lascivious thoughts. \n\nTrent was excellent at taking directions as a nude model.\n\n\"Drape your legs over the arms of the chair,\" Miss Victoria directed. \"Expose yourself completely for the lady's camera.\"\n\nSherrie's heart skipped a beat. The pose splayed Trent wide open to the unflinching eye of her camera.\n\nClick.\n\nHis torso was so sexy, those ripples across his belly caused by the muscles in his abs . . .\n\nClick.\n\nHis cock was definitely beginning to engorge. It lay up against his abdomen, his smooth, hairless ball sac hanging underneath, the twin orbs within gently outlined in their snug pouch . . .\n\nClick.\n\nHis skin was so pretty, so inviting\u2014smooth, a delightful mix of cream and pink in color\u2014so delicious. Sherrie zoomed in to frame his crotch, catching in the picture the sight of his lovely cock and balls . . .\n\nClick.\n\n\"Exposing himself to a lady who enjoys fucking him in the ass is a turn-on for Trent, as you can see,\" said Miss Victoria, obviously referring to the state of the naked male's cock. \"Perhaps it's time for his masturbation show for us.\"\n\nSherrie's throat went dry. She had never seen a man do this.\n\nNow it was going to happen in her living room.\n\n\"Do try to settle down a bit, love,\" Miss Victoria said to Trent, \"while I set up the camcorder.\"\n\nShit! thought Sherrie, jerked to a reaction by Miss Victoria's words. \n\nThe woman is going to record a video of this handsome, naked man masturbating to an erection, and she's going to give the video to me to watch whenever I want!\n\nIt took only a few minutes for Miss Victoria to unzip the duffel bag, extract the small camcorder and the tripod, and set everything up in a spot a slight bit away from where Sherrie was standing as the photographer catching in still pictures the poses into which the nude male had been directed. Pushing the button that turned the camcorder on, Miss Victoria opened the small, fold-out LCD screen, and satisfied herself that she was framing an area of the living room that was free of furniture\u2014a spot in front of the small fireplace. Noticing the location, Sherrie's inquiring look indicated her puzzlement.",
        "Smiling conspiratorially at Sherrie, the woman stepped out from behind the tripod, walked to where Trent was seated, and pulled him up from his position by taking his hand and indicating he was to follow her. She guided him to the spot in front of the fireplace, turned him toward the camcorder, and said, \"You know the position in which I like to watch you masturbate for me while you look at me playing with my pussy?\" she asked him.\n\nSherrie's head was spinning. Miss Victoria has these men stroke themselves to an erection for her while she masturbates as she watches? Oh, damn! Could I EVER have enough self-assuredness to do that? thought Sherrie. Could I ever ditch all my self-consciousness and just focus on the pure sexual pleasure of seeing a naked man stroke his cock for me?\n\nTrent dropped to his knees, his feet out behind him and almost touching the little area in front of the fireplace where a few tiles of cream-colored slate intruded out into the carpet. Then he eased himself back on his haunches, opening his knees wide as he did so.\n\n\"Mmmmmm, yes, that's it,\" purred Miss Victoria.\n\nHe straightened his torso and placed his hands on his thighs. His ball sac hung down between them, almost grazing the carpet, and his heavy cock lolled forward, tilting downward, almost resting against the looped pile of Sherrie's carpeting.\n\nSherrie noticed a small droplet of pre-cum oozing from the velvety head of his circumcised cock.\n\nMiss Victoria stepped forward quickly, reached down to pinch off the droplet between thumb and forefinger, and sucked first her thumb, then her finger, savoring the taste of the man who was about to masturbate for them.\n\n\"That's nice, Trent,\" she said, walking back to stand behind the tripod and check the framing of the shot on the camcorder's screen. \"Let me turn this make sure everything is ready, and then the lady and I will take our seats to enjoy your show.\" She motioned to Sherrie to join her on the sofa.\n\nThe scenario was too outrageous to believe, and Sherrie wondered if she had somehow slipped into an alternate reality or a dream state where this over-the-top eroticism was somehow a normal and expected thing. Her pussy was gushing in anticipation of what was about to happen, and she knew her panties would soon be soaked.\n\nGood thing she would quickly be out of them, strapped into her dildo, and sliding the shaft into Trent's taut butt.\n\nTrent remained in place, on magnificent display. The position showed off his strong shoulders, sexy chest and abs, and his beautiful cock.\n\n\"While you masturbate for us, Trent, tell us why you so much enjoy having a woman fuck you in the asshole with a strapon dildo,\" Miss Victoria directed.\n\nThis was WAY different from the first tutoring session! The few words that Andrew had spoken, things like, \"Please,\" \"Don't stop!\" and desperate entreaties to take off the cock ring Miss Victoria had fastened him into to help prevent his orgasm until Sherrie was pounding into his asshole with her strapon dildo, were brief expressions of lust, not sexy descriptions or lengthy monologues (and Sherrie would never forget the sounds he made which, while not words, needed no translation).\n\nBut now, as he played with himself in front of them, stroking his cock for their visual pleasure, Trent was going to talk about why he liked having a woman fuck him in the ass with her strapon.\n\nThe camcorder. Sherrie was going to have this erotic video to watch and to listen to. She would have on the recording his entire explanation of his sexual pleasure received at the hands of a woman who penetrates his willingly offered asshole with her strapon dildo and fucks him with abandon to give them both intense orgasms.\n\nAnd in only a short time, Sherrie was going to be that woman. \n\nMiss Victoria's eyes cast a knowing smile in Sherrie's direction over the top of her wine glass as she sipped. \"Perhaps his explanation will shed light on how you can find your own man to fuck,\" she said gently, returning her gaze to Trent as Sherrie placed her camera on the end table, leaving her wine glass where Miss Victoria had set it.\n\nNo way would she be able to do anything except watch in rapt attention as Trent stroked his cock for them and explained his pleasure in having a woman take whatever liberties she desired with his eager, opened asshole.\n\nAmazing! This is absolutely amazing! thought Sherrie. This is definitely the hottest means I can possibly imagine to get the male perspective on why men\u2014at least some men\u2014like it when their women screw them in the ass.\n\nSherrie sat on the edge of the sofa cushion, her back straight, her breathing shallow between her parted lips as she listened for the first words from Trent's mouth. They came only after a few seconds.\n\nDuring those seconds, he wrapped a fist around the shaft of his cock and slowly began sliding it up and down.\n\n\"First, it shouldn't be surprising,\" Trent said in a sexy baritone voice. \"You enjoy it when a man pushes into you with his hard cock and fucks you, correct?\"\n\nAs did Miss Victoria, Trent was obviously going to speak bluntly\u2014dirty talk ramping up the eroticism of the situation, making this entire, outrageous situation even more naughty, more compelling.\n\nSherrie swallowed. Her eyes traced the motions of the naked man's hand moving up and down his rapidly swelling cock.\n\nHe would be erect within seconds.\n\n\"I love the sensation of taking a strapon dildo into my asshole for some of the same reasons, I imagine. Though I can never know what the sensations are when your men stroke into your wet pussies, I assume there's a sexy feeling of fullness and that the slippery friction of his shaft feels good inside the walls of your vagina.\"\n\nTrent's cock was completely erect at this point.\n\n\"Those things feel good to me\u2014that fullness and snug, slick friction, I mean. I love those feelings inside my asshole.\"\n\nIt was impossible for Sherrie not to move a hand to one breast and pinch her nipple through the blouse and lightweight bra she was wearing. The tingle produced immediately shot through her entire breast and down to her tummy. The unconscious movement, though, did not break her concentration on the fascinating sight of the naked man masturbating for her.\n\n\"But you have to understand,\" Trent said earnestly, slowing the motion of his hand up and down his throbbing shaft, \"that surrendering my ass to a woman, trusting her enough to completely abandon myself to be taken, penetrated, and used by her for her sexual enjoyment . . . well,\" his hand was motionless now at the base of his cock, and Sherrie saw the shaft pulsing in excitement, \"you have no idea how hot and sexy and overpoweringly erotic that is. A woman taking her sexual pleasure, reaching an intense orgasm as she screws me while she concentrates on making herself come, giving herself permission to use me\u2014her sex partner\u2014and fuck me with penetrating strokes that I allow her to bury inside my lubed-up asshole . . .\"\n\nHe is driving me crazy, Sherrie thought, now tugging hard on her nipple.\n\n\". . . from the man's point of view, at least, THIS man's point of view, I can't imagine anything sexier, anything that arouses me more, any way that a woman could possibly be more sexually attractive. There's just something about a woman who's secure enough to reverse the roles occasionally, and be the one who penetrates, the one who goes inside her partner, and does it with the knowledge that it's going to make her come, feel fantastic for her, that it will be the best sexual high she can get in a role reversal that means she's the one sporting an erection that's going to be pushed deep into her partner.\"\n\nThe head of his cock was a deep pink, more pre-cum had gathered there, and his proud, stiff shaft was thrust up against his belly and throbbing with the pounding blood that was pulsing through his veins.\n\nTrent had aroused not only the women for whom he was masturbating. His explanation was clearly sincere and truthful\u2014his stiff cock testified that he had shared his sexual soul with them, and that his description had aroused him, too.\n\nIt was also clear that the pause in his masturbatory motions was necessary to prevent an orgasm. Sherrie watched in fascination as his hard dick throbbed in excitement, finally levering down a few degrees of angle, indicating that Trent was backing off the impending orgasm that his self-revelation would have produced if he had not interrupted his explanation. \n\nHis jaws had tightened underneath the blindfold, something obvious to see while his head was thrown back during the time he willed himself back from the brink of climax. Finally, he lowered his head back into position to speak.\n\nMiss Victoria had set her wine glass down during Trent's explanation (though Sherrie was unaware of this, so focused was her attention on the masturbating male who was explaining the source of his pleasure in being taken by a woman wearing a strapon). Now, as he drew in a deep breath before continuing, she unbuttoned her snug jeans and wiggled them, along with her thong panties, down to her ankles.\n\nThe woman's motion on the sofa broke Sherrie's trance, and she glanced over to see her tutor leaning back into the cushion, splaying her knees apart, and dropping one hand to her glistening, shaven vagina.\n\nMiss Victoria slipped a finger inside.\n\n\"Continue,\" she said softly to Trent.\n\nTaking the cue, Sherrie was out of her slacks and panties quickly, but not missing any of Trent's words as he resumed.\n\n\"So, knowing the woman is focused on giving herself pleasure and has absolutely no self-consciousness about using me to reach it\u2014that's so hot to me that I can't adequately explain it.\" He had resumed stroking his cock, the pre-cum now serving as a bit of lubricant. \"But,\" and for an instant Sherrie worried that his broad grin might push the bottom of the blindfold up a bit and allow him to peek from underneath it and see her, \"as sexy and arousing and absolutely irresistible as a woman is who loves sex, wants it desperately with me, and doesn't worry whether any means of getting that pleasure is inappropriate or not right or something she shouldn't bring up for whatever reason, the feeling when she fucks me in the asshole gives ME so much pleasure that I will beg her to do it to me if it's been too long between role reversal sessions in our sexplay.\"\n\n\"That is so hot,\" Miss Victoria mouthed in Sherrie's direction, obviously not wanting to spoil the recording with any editorializing that might intrude on Sherrie's viewings of the video in the future. When the woman drew her hand away from her crotch to suck a finger into her mouth, wetting it for more of her own masturbation as she watched Trent stroke his cock for them, Sherrie couldn't help but notice the distended clit peeking from its hood and glistening in the light. Miss Victoria was very aroused by Trent's performance.\n\nSherrie could not blame her. The sight prompted Sherrie to hastily unbutton her blouse, shrug it off, and hurriedly unhook her bra so she was completely nude in order to listen to the rest of Trent's explanation.\n\nYes! That feels so go-o-o-o-d, she thought, cupping a breast and tugging on her nipple as she dropped the other hand to her pussy, quickly finding the slippery wetness to gather a bit underneath the pad of one finger and draw it up to her clit, which she began to roll around and press against as she blatantly masturbated in front of Miss Victoria, not worrying about her display.\n\nA woman who enjoys giving herself sexual pleasure gets a man hot and eager to be with her, huh? Sherrie thought, looking at Trent's lithe, muscled torso as he resumed stroking his cock for them. Maybe I'm becoming that kind of woman . . .\n\n\"That wonderful feeling when she begins stroking into and out of my asshole, the lube ensuring the slippery fullness creates no discomfort . . . that's a glorious thing,\" Trent said. \"After a few strokes there's this warm, sensation that spreads inside me, working its way through my gut and up into my stomach, even down my legs. It doesn't take long before I want the shaft of her dildo really plunging into me. I want to feel taken. I want to feel like she's using her strapon to give me as much pleasure as she's giving herself. I want her to come, and I want to come so bad when she's fucking me that I swear, my asshole literally sucks her dildo inside, and I don't want her to take it out.\"\n\nMiss Victoria's back arched, and her butt raised up off the cushion as she stiffened silently through an orgasm at that point in Trent's description. The woman's climax intensified Sherrie's own approach to a powerful release, and she pressed insistently against her clit, now pinching it between two fingers to increase the stimulation.\n\nTrent's breathing was heavy, and he had again stopped masturbating. Swallowing hard, and with beads of sweat visible on his forehead, he slowly resumed his narration (if not the motion of his fist up and down his cock, which now was pulsing noticeably, the head nearing a purple color from all the blood that was being pushed there by his pounding heart).\n\n\"And the reason I don't want it out is that when she's grinding against me, stimulating herself to an intense climax, the motions she makes with the shaft of the dildo nudging up against my prostate drive me crazy. I can't even explain the sensation . . . it's this undefinable, fluttery feeling that starts in my asshole and then spreads into my whole body until it races back into this certain spot right behind my bellybutton, and then, wham! I come buckets, and I feel like there's no possible way that anything else exists in the entire universe except that feeling.\"\n\nSherrie's orgasm hit at that point. She bit her lip and tamped down the groan she desperately wanted to release from the bottom of her lungs, just barely remembering that off-camera orgasmic noises would be distracting on the recording.\n\n\"But then, when the feeling passes\u2014and sometimes it takes several seconds\u2014I feel so much in love with the woman that did that to me that I want to crawl inside her head and look out at the world through her eyes to see if it's even possible to find out anything more I can do from her perspective to give her as much pleasure as she just gave me.\"\n\nHis final sentences were delivered with his hands on his thighs and his cock throbbing, pre-cum so copious that it was dripping down the shaft.\n\nIt had taken some massive amount of self-control not to spurt, Sherrie realized, her own abandonment to a climax unstoppable as she watched Trent's dick bob and pulse in front of her as he finished his explanation.\n\nDamn! What he'd just said! Sherrie would challenge any woman hearing that from a man not to rush straight into his arms and squeeze him tightly, realizing how much he wanted to please her, to share such intimacy with her that he was baring his entire soul to her.\n\nAn aftershock of orgasm rippled through her as Sherrie considered what Trent had divulged.\n\n\"Miss Victoria,\" he panted, clearly in distress, \"I simply cannot continue or I will-\"\n\n\"Hush,\" Miss Victoria answered, a flush on her face from her own orgasm. \"The lady will help you with your cock ring in a few moments. Just sit there and come down from the excitement that your wonderful explanation has created for all of us.\"\n\nThe statement triggered a new round of arousal for Sherrie. Having learned from Miss Victoria about strapping a man into a cock ring as a result of the demonstration given during her first tutoring session (and Andrew's cock and balls had looked so very hot on display with the cock ring snugged up around them), Sherrie's mouth watered at the prospect of wrapping the studded strip of leather around Trent's genitals and snapping it into place.\n\nThe sight would be so very, very arousing! The feel of his cock and balls would be so exciting as she handled him in the process of fastening the leather ring into place.\n\nMiss Victoria reached to her ankles to pull off her jeans and panties, then rose and stepped on shaky legs from her orgasm of moments before to the camcorder. She stopped the recording and unscrewed it from the tripod. Dressed now only in her skimpy corset, she switched the camera to \"play\" mode and checked the recording.\n\nSmiling in satisfaction, she turned the little LCD screen toward Sherrie. \"Yes, we have your explanation recorded for posterity, Trent. Thank you. The lady will, I'm sure, enjoy watching you masturbate for her in the future by replaying this recording.\" Miss Victoria walked over to Trent and placed one hand on his shoulder as he remained on his haunches in front of Sherrie's fireplace. \"We truly appreciate your honesty and your willingness to show us how you masturbate.\"\n\n\"My pleasure,\" he responded, smiling beneath his blindfold.\n\n\"But not as much pleasure as the lady will give you when she screws you in the asshole with her strapon dildo this evening, I know,\" Miss Victoria teased. \"You just told us that the pleasure you receive from a good ass-fucking at the hands of a woman strapped into a dildo and eager to use you for her sexual satisfaction cannot be equaled.\"\n\nTrent's still-hard cock bobbed in agreement.\n\nSherrie choked back a sound of pure lust, working hard to prevent herself from speaking in Trent's presence.\n\n\"Settled down a bit by now?\" Miss Victoria asked him.\n\nHe nodded.\n\nMiss Victoria helped him up, and he needed her support, both because his position on his haunches as he told his story\u2014while incredibly sexy and the perfect pose to expose his genitals to the camera as he masturbated\u2014meant that it took a moment for him to unkink his legs AND because the point of arousal to which he pushed himself during his confession meant his legs were wobbly anyway. When he had straightened and was standing before them, his proud erection still pointing to the ceiling, Miss Victoria eyed it appreciatively, then turned her gaze toward Sherrie, saying, \"He does taste wonderful . . .\"\n\nShe let the implication linger as she returned her gaze to the pre-cum glistening on Trent's erect cock.\n\n\"Don't come when she does it,\" Miss Victoria warned, looking at Sherrie as she whispered into the naked male's ear.\n\nBefore tonight\u2014even with one tutoring session already behind her\u2014Sherrie would have hesitated, probably even stopped herself from doing what was so alluring and sexy and now being offered by Miss Victoria. But Sherrie didn't even think about that now.\n\nIt took only four steps before she was on her knees in front of Trent's glorious cock, her hands wrapped around the base, levering it down and forward as she wrapped her lips around the plum-like head. She slipped it inside her mouth and slowly eased more of him inside, loving the sensation of taking his erection between her lips the velvety feel of him, the stiffness of him, the smoothness of the skin on his cock as she ran her tongue over it.\n\nMiss Victoria clicked into \"record\" mode and resumed her role as videographer.\n\nHe tasted so good!\n\nTrent moaned, the sound so sexy that Sherrie paused in her cock-sucking, wanting to catch every nuance of the sounds of pleasure he was voicing as she remained on her knees in front of this sexy naked man, nude herself, and sucking his glorious seven inches of stiff maleness into her mouth.\n\nOr at least part of those seven inches. \n\nCan Miss Victoria teach me to deep-throat? she wondered, surprising herself with a thought that would before have been blocked from her mind by her subconscious.\n\nMaybe hearing Trent's explanation about the allure of a woman with no compunctions about taking her sexual pleasure with a man is having an effect on me, Sherrie thought, but only for a brief second because the texture and taste of him was such a delight that she wanted to focus completely on sucking his cock.",
        "\"Ungh,\" was the sexy sound from his chest, and Miss Victoria tapped gently on Sherrie's shoulder blade, having stopped the camcorder for a moment.\n\n\"Poor baby will come if we don't get him some help in holding back,\" she said.\n\nSherrie reluctantly backed off Trent's cock, knowing the comment meant that Miss Victoria realized that the second man Sherrie would penetrate needed her to strap him into the cock ring as a way to help prevent the orgasm he would finally be allowed to have after the shaft of Sherrie's strapon was buried deep into his asshole.\n\nMiss Victoria walked to the duffel bag, rumaged for a second through its contents, then withdrew the skinny strip of black leather that was studded with metal and which had a snap on the ends. She strode back to where Sherrie remained on her knees in front of Trent, his pulsing erection only inches from her face, and handed the cock ring to Sherrie.\n\n\"Wait for a moment while I turn the camera back on,\" she said, raising the camcorder to her face to frame the scene in the little display screen. \"Okay,\" she said, thumbing on the \"record\" button.\n\nSherrie looped the strip of leather behind Trent's balls, leaning forward a bit in the process. The motion, of course, brought her mouth close to his erection, and she couldn't help slipping it once again inside. Holding the head of his cock inside as she snugged the material behind his balls (she remembered Miss Victoria's instructions about the process so that no undue pressure was accidentally forced upon the man's testicles when the cock ring was snapped together), Sherrie drew the ends up around the base of his cock, finally releasing him from her mouth in order to mate the ends of the metal snap and fasten the ring in place.\n\nLeaning back on her heels to admire her handiwork, Sherrie took a moment to fully appreciate the view as she ran her gaze up and down Trent's nude body.\n\nSmooth, masculine, hairless, a very stiff erection pointing to the ceiling and his cock and balls even more blatantly displayed as the cock ring pushed them forward just a bit, Trent looked stunningly sexy and inviting. \n\nShe couldn't wait to fuck him.\n\nInstinctively, she reached forward, cupping the ball sac that was now presented to her in a way that invited her attention even more. She fondled him, ran her tongue up the shaft of his dick, and teased the head with her tongue, swirling it around before giving in to the desire to once again take as much of it into her mouth as she could.\n\n\"Damn, that feels so good,\" he moaned. \"Thank god the cock ring is on. I don't want to come for you until you fuck me in the ass.\"\n\nSherrie shivered in delight at Trent's words. Reluctantly releasing his cock, she backed away and rose from her knees.\n\n\"The lady will enjoy seeing your cock slip into her mouth, I'm sure,\" Miss Victoria said. The comment brought Sherrie's awareness back to the camcorder in her tutor's hands.\n\nWhat will I look like? she wondered. Having seen only a few videos of women sucking men's cocks, Sherrie hoped that she wouldn't look like the women in the bad porn that one of her past boyfriends had persuaded her to watch with him.\n\nSomehow she knew Trent's cock would look lovely sliding inside her mouth.\n\n\"But now, I have promised her that you will assume my favorite pose for naked men,\" Miss Victoria said, taking Trent's hand and leading him to the sofa. Stepping around the coffee table, she motioned to Sherrie to help her move it a bit to the side so there would be plenty of working room to enable Sherrie to position herself to take the picture.\n\nCurious as to what pose Miss Victoria would require Trent to assume, Sherrie helped push the coffee table to the side and then reached for her camera from the end table where she had set it before Trent began his sexy show and self-revelation about his love of being taken by a woman.\n\nMiss Victoria walked Trent to the front of the sofa, stopping him before he stubbed a toe on the bottom, and pulled his hand forward to let him feel the sofa cushion in front of him. \"Her sofa will work nicely. Get into position.\"\n\nThe abruptness of the command shocked Sherrie, but it was yet another reminder that Trent was a client who had engaged Miss Victoria as a \"service provider\" by paying her to have her way with him sexually. The command to pose himself for the pleasure she would take in seeing him in that position was all part of the interaction.\n\nTrent was quick to follow instructions. He remained facing the back cushions on the sofa and leaned forward, reaching for the edge of the back of the sofa in order to steady himself as he got into position with his knees on the seat cushions. Getting comfortable, he eased his butt down a bit, almost as though he were going to resume the pose on his haunches he had taken during his story, but then he spread his thighs apart farther and leaned forward, arching his back and resting his chest on his crossed arms he'd placed on the back of the sofa. He was facing away from them, on his knees, but the height of the sofa meant that his ass was at a convenient height for any number of activities an inventive female might want to use it for. \n\nIn an instant Sherrie understood exactly why Miss Victoria liked this pose. Trent was displaying himself blatantly, making it clear that his backside was a toy for a woman's pleasure, and his cock and balls were a sexy sight from behind as they hung between his legs and slightly over the edge of the cushion so that they were freely available to a woman's hand reaching forward to cup his ball sac and fondle his erection.\n\nThe sexy cock ring completed the arousing sight, emphasizing somehow the effect that he was utterly on display as a sex toy for their pleasure.\n\nSherrie raised the camera and flicked it on, immediately framing the erotic sight and snapping a picture.\n\nHis asshole was completely exposed.\n\nNoticing this, she dropped the camera momentarily, enjoying the view, realizing that she was taking a great deal of sexual pleasure in seeing him displayed for her, seeing the place where she would position the tip of her dildo and push inside of him, seeing him open and vulnerable in this position, offering up his genitals and his asshole for her to touch, to toy with, to look at, to use and tease, all for the sole purpose of arousing her, making her horny and hot to come hard from the fucking she would give him.\n\n\"Arch your back just a little more,\" Miss Victoria said.\n\nThe woman had stepped to the side and was recording the scene in which Sherrie was photographer to Trent's nude modeling.\n\nHis quick compliance brought his asshole into even better view, and Sherrie snapped several pictures, eager to record for later viewing this sight of a nude man, a man she would soon be fucking in the ass, opened up for her and offering his ass and cock and balls to her for her sexual pleasure.\n\nDuring her first tutoring session, Miss Victoria had told her that it was a myth that women weren't turned on by looking at naked men. During that first session, Sherrie had come to believe her, but she would probably not have believed that such a nasty pose could be so exciting. Now, though, after hearing Trent's explanation about the rush it gave him knowing that a woman was using him for his pleasure, stroking her strapon into his asshole in order to make herself come, seeing his crinkled opening offered up with abandon and in blatant and total exposure, Sherrie found the sight hotter than anything she had ever seen.\n\nLowering the camera, she stepped close to him, reached underneath, and cupped his balls. They were snug in their sac, the cock ring tightly in place behind them, offering some protection that the teasing she was about to put him through wouldn't allow an orgasm.\n\nMiss Victoria intuitively knew what Sherrie was about to do. She stopped the camcorder, walked to the duffel, and retrieved the bottle of lube. Stepping to stand beside Sherrie, she handed it to her and said, \"I'll be sure to get a good angle which nicely captures your finger sliding inside.\"\n\nThe camera almost slipped from Sherrie's grasp when Miss Victoria described the scene she was about to record, but Sherrie knew that, yes, she was going to slide her finger inside Trent's openly displayed asshole. She would do it slowly, tracing circles around the center of his opening, enjoying the feel of his ever-relaxing anus underneath the pad of her fingertip until he, just as Andrew had done, invited her inside.\n\nPlacing her camera on the floor in front of the sofa, Sherrie popped the top on the bottle of lube and poured some into her palm. Thoroughly coating the middle finger of her other hand, she moved it to his asshole, poised there for a moment as she slipped the other hand underneath him to wrap it around his stiff cock. Then, as she slowly began to slide her fist up and down his erection, she placed her lubed-up finger at the entrance to Trent's asshole.\n\n\"You know what's going to happen, don't you, Trent?\" Miss Victoria asked from behind the camcorder.\n\nHe moaned, a response that excited Sherrie tremendously.\n\nShe sensuously ran her fingertip over his crinkly opening.\n\n\"Tell her how good it feels,\" Miss Victoria directed.\n\nOh, no . . . she's going to have him talk about what I'm doing to him, Sherrie thought. I'll have another orgasm, right here on my knees behind him.\n\n\"Oooh, your hand feels so good on my cock,\" Trent said, his voice coming from a sexy place in his chest. \"You have no idea how good this feels.\"\n\nHis words were exciting Sherrie enormously. Her pussy was very, very wet.\n\n\"Oh, god, oh, damn!\" Trent exclaimed.\n\nSherrie expected the reaction. She had teased him with a fingertip inside his opening. Quickly withdrawing, she resumed stroking his asshole.\n\n\"Did you like that?\" Miss Victoria asked, now moving closer to the action in front of her.\n\n\"Yes, oh, jeez, it felt so good.\"\n\n\"What felt good, Trent?\"\n\nThis video is going to make me come every time I see it, Sherrie thought. The woman was teasing Trent\u2014hell, she was teasing Sherrie\u2014with the commands to explain his excitement.\n\nHe was panting, but he managed to croak out, \"When she slipped her finger inside for just a minute. It was a surprise, and felt it really, really good.\"\n\n\"Slipped her finger inside where?\"\n\nTrent lowered his face into his arms and moaned in frustration. \"You'll make me come talking about it. She's stroking my cock and, and . . .\"\n\n\"The cock ring will prevent an orgasm, Trent. It felt good when she slipped her finger inside where?\"\n\nSherrie had a mini-orgasm. The effect caused her to grip Trent's shaft tightly. He moaned again. Finally: \"It felt good when she put her finger into my asshole.\"\n\n\"Lovely,\" was Miss Victoria's simple response.\n\nSherrie had managed to recover from her mini-orgasm enough by then to catch the next words out of Miss Victoria's mouth.\n\n\"Then maybe you will really like it if she pushes her finger slowly all the way inside you.\"\n\nGod, this is driving me crazy! Sherrie thought. Miss Victoria was orchestrating this video in a way guaranteed to result in the most exciting action Sherrie could image as she would watch herself teasing this naked man.\n\nThis isn't part of my training to succeed with my research, Sherrie thought.\n\nThen she immediately didn't give a damn that it wasn't.\n\nShe felt Trent's asshole relax around the pad of her finger. A small indentation invited her to push inside. Sherrie watched intently as she pushed slowly, seeing her finger slide in to the first knuckle.\n\n\"Oh, god, yes,\" Trent hissed. \"That feels so good.\"\n\nSherrie pushed in deeper. He squirmed back against her, his body asking for more.\n\nShe gave it to him.\n\nHer finger was buried completely inside now, and Sherrie began stroking in and out with a rhythm that matched the strokes she was giving his cock.\n\n\"Yeah, yes, oh, god, yes,\" he moaned. \"Finger fuck me good. That feels so fuckin' good.\"\n\nTrent was quickly devolving into vocalizations that would make less and less sense other than as indications that she was giving him intense pleasure. Sherrie didn't worry about it\u2014she was too fascinated and turned on by what she was doing to him.\n\nShe adored playing with his snug, slippery asshole, penetrating it, then withdrawing, then slowly sinking in again, pushing the palm of her hand tightly against his butt in order to get her finger in as deeply as possible then hold it there, feeling the warmth of him enveloping her finger, gripping it, squeezing it in response to her tease.\n\n\"A pity that we must stop now,\" Miss Victoria said.\n\nTrent groaned in exasperation, his asshole spasming tightly around Sherrie's finger, anxious not to feel her withdraw it.\n\nPerplexed, but trusting her tutor, Sherrie slowly withdrew in spite of Trent's protests both physical (his snug hole gripped her finger tightly) and vocal (\"God, not now. Please.\").\n\nMiss Victoria motioned for Sherrie to stand, then placed her palm lightly against the small of Trent's back. \"I have something special I want you to demonstrate for the lady,\" she said, and she slid her hand up to his shoulder, gripping his upper arm and with a lifting motion indicating that he was to get up and walk with her. He was soon back in the spot before Sherrie's fireplace, but this time Miss Victoria turned him sideways to the spot where the tripod still stood and where whatever action was about to ensue would be captured in profile.\n\nAfter screwing the camcorder back to the tripod and checking the framing in the display, Miss Victoria punched \"record,\" then retrieved the bottle of lube. She walked to stand beside Trent and said to Sherrie, \"Come get in position here,\" motioning to a spot on the carpet, \"so that you're to the side of him and also behind him from the camera's angle.\n\nNot knowing what was coming, Sherrie was nonetheless quite aroused at being next to Trent in this fashion. It was a natural motion, and he was conveniently positioned, for her to reach one hand in front of him and grasp his cock, still slick with the lube from her stroking while he was on her sofa in Miss Victoria's favorite pose. She pressed her crotch against his hip, aching for some stimulation on her hard clit, and brazenly began humping up against him, knowing that her wetness would soon find its way onto his hip and his thigh.\n\nSmiling, Miss Victoria said, \"Hold out your other hand.\" Sherrie did, and her tutor poured some lube into the palm. Saying nothing\u2014she didn't have to\u2014Miss Victoria merely glanced toward Trent's ass, and Sherrie understood immediately that she would soon be once again caressing his asshole as she stroked his cock.\n\nStepping away from the action so the camcorder would have an unobstructed view of the action, Miss Victoria began again to coach the activity in Sherrie's living room.\n\n\"This is a favorite activity of mine for several reasons, isn't it, Trent,\" she said. \"The lady stroking your cock and fondling your ass no doubt realizes how much she has you in her sexual power in this position, able to give you incredible pleasure because she can so easily penetrate you anally with her finger while she masturbates you but not doing that unless you're being a good pupil for her.\"\n\nSherrie was both puzzled and disappointed. Had Miss Victoria not said what she did, Sherrie's finger would by now be deep inside Trent's asshole.\n\n\"And you know, too, don't you, Trent, that I had to train you out of your over-eagerness when you first began seeing me? Isn't that right?\"\n\nSherrie was instantly curious. She kept her finger against Trent's asshole, running her fingertip in circles over the crinkles there, waiting for more explanation from Miss Victoria about this \"training\" of Trent's.\n\n\"Now,\" Miss Victoria said, \"just pet his asshole as you stroke his cock.\"\n\nFrustrated that she was not being told to slide her finger inside (god! that is so very, very hot! thought Sherrie), she did as Miss Victoria directed, sliding her fingertip across his asshole as she pressed her hand against his butt cheeks.\n\n\"Stroke his asshole just like you might pet a kitten's back, lightly, but enjoying the sensation,\" her tutor said.\n\nSherrie did so, concentrating on the enjoyable sensation of discovering more about the ways that just petting a man's asshole, stroking it without penetrating, was so delightful. \n\n\"Now, Trent, let her in and do it in a way that lets her know you're relaxing open, even though she's masturbating your hard cock.\"\n\nSherrie felt his asshole relax as she slowed her stroking and rested her fingertip directly on his hole. It slid inside of him, the ring of muscle at the entrance of his anus now under his conscious control, not being allowed to close back into its normal state.\n\n\"Press inside slowly as you continue to masturbate him, but stop pressing inside immediately if you feel his asshole tighten, and instantly stop stroking his cock, too.\"\n\nThis was going to be a fun game!\n\nTrent groaned.\n\n\"What is the lady doing?\" Miss Victoria asked him.\n\n\"The same thing you did,\" he replied, \"when you were helping me learn to, learn to, um . . .\"\n\nTrent was struggling for self-control, and Sherrie felt a slight flutter around her finger. She stopped pressing into him immediately and released her grip on his cock.\n\n\"Oh, god, this is so unfair,\" he moaned. \n\n\"What is?\" Miss Victoria asked.\n\n\"Stopping. Stopping with my cock, stopping into my asshole. Everything.\"\n\n\"Then relax open again,\" Miss Victoria said simply.\n\nSherrie replaced her fingertip against his lovely opening and felt his asshole return to a state in which the ring of his anus relaxed again. \n\nShe returned her hand to his cock and resumed stroking it.\n\n\"There's an excellent reason why I did this with you, though, isn't there, Trent?\" Miss Victoria asked. \"You yourself gave us the reason in your explanation a few minutes ago when you were masturbating for us.\"\n\nSherrie was now doubly curious. She was also loving the act of playing with a man like this. Even in the days since her introduction to strapon man-fucking as she viewed the videos recommended by Miss Victoria and fantasized repeatedly about toying with a man's ass and using it for her sexual pleasure as she fucked his asshole, she had never imagined this particular activity. It was so erotic, so purely manipulative, almost like he was a puppet underneath her, reacting to each pull on a string which created a different kind of pleasure.\n\nHe moaned in excitement, and Sherrie again felt his asshole flutter around her finger. Once more, she stopped pushing inside him and took her hand away from his throbbing erection.\n\nNoticing the action, Miss Victoria said, \"Tell us, as you open yourself to the lady again, why this kind of training is such a good thing to do.\"\n\nSherrie felt his asshole surrender, and she reached for his stiff prick, resuming her masturbation of the naked male in her total control.\n\n\"Miss Victoria, you taught me to relax open for your penetrations into my asshole with your fingers, your butt plug, and your strapon while my cock stayed hard for you because it excites you to see the man's cock stiff and hard while you fuck him.\"\n\nSherrie pressed insistently against Trent's hip, strongly aroused by what he had just said. The action caused another mini-orgasm.\n\nI have to fuck him now, she thought. This is driving me absolutely crazy with lust!\n\n\"Precisely,\" Miss Victoria replied. \"It's a natural reaction upon anal penetration for a man to clamp down,\" she explained to Sherrie, who was now becoming more impressed with Trent's control in light of what was happening and what Miss Victoria was saying. \"But for a man who wants to experience the full pleasure of being fucked in the ass by his woman's strapon, learning to open to her while he maintains his erection is a treat for both of them.\"",
        "Sherrie continued to hump Trent's leg as she finger-fucked him and stroked his hard dick.\n\n\"I like to help my lover realize this with some delightful playtime in the shower,\" Miss Victoria said, settling again on the sofa to watch the action in front of her. \"Of course, I don't shower with my clients,\" and her tone took that melancholy edge Sherrie recognized from the revelation she'd shared after the first tutoring session about losing the lover two years earlier with whom she had enjoyed regular role reversals and strapon fucking. \"But with a lover, yes, the shower can be an excellent venue for this training. No matter where it happens, though, you'll be happy his training was successful when you see his hard cock throb in front of you when he's on his back on the bed and you're standing between his legs as they're draped over your shoulders while you pound your strapon into him.\"\n\nThe visual Miss Victoria had just painted\u2014a position Sherrie had seen in some of the video clips her tutor had recommended\u2014was exciting. Particularly arousing was the idea of watching the man's eyes when you fucked him while you held his hard cock in your hand, feeling him react to your thrusts.\n\n\"I suggest the shower because, if you use an organic soap, you can masturbate him and finger fuck him and not create any discomfort inside his anus due to the harsh chemicals in most non-organic soaps. You don't drip lube on the carpet, and in a nice, hot shower, the two of you can relax and enjoy his training.\"\n\nSherrie's finger was now deep inside Trent's ass, and he was being a trouper in his ability to remain open for her. She loved the sensation because it said so much about his eagerness to surrender to her, to give her pleasure. \n\nAnd his hard cock was testament to the fact that he would be stiff and throbbing when she fucked his ass, just as Andrew had been.\n\nHad Miss Victoria trained Andrew in the same fashion?\n\nConcluding her remarks about a man's training, Miss Victoria said, \"I particularly like an organic aloe soap for this purpose. It lathers immediately into a silky, lotiony foam that feels wonderful and sticks around quite a long time if you don't rinse it away with water. The one I use creates a creamy white lather, and I adore the way it works as an all-over lubricant between lovers in the shower. I highly recommend it for the time in the future when you convince a lover to let you prepare him for your strapon.\" Trent groaned, Miss Victoria's words\u2014\"prepare him for your strapon\"\u2014apparently having an intense effect. \"The lube works perfectly fine for now, and Trent is doing a fine job for us demonstrating this in advance of your sliding your strapon cock deep into his lubed up asshole.\"\n\nThat did it. Trent clamped down on her finger, and she felt a powerful orgasm try to work its way through his body and out the end of the throbbing shaft in her grip.\n\nThe constriction of the cock ring prevented it, thankfully.\n\nSherrie was so ready to slide the bulb end of her strapon dildo into her pussy, strap into the harness, lube up the shaft, and plunge it into Trent's surrendered asshole that she thought she might faint in excitement. She withdrew her finger and walked quickly into her bedroom to strap into the delightful toy, leaving Trent standing in place, his cock throbbing in denial, his balls snugged up against his crotch, and the cock ring the only thing preventing spurts of semen from jetting from the end of his dick.\n\nWhile Sherrie was in her bedroom, Miss Victoria quickly rose from the sofa and arranged things in order to achieve the real surprise of the evening for her pupil. Thumbing off the \"record\" button on the camera, she set it and the tripod aside and then moved the coffee table into a position that meant there was the space she needed on opposite sides of the small piece of furniture. Then, taking advantage of the surprise availability of the wedge Sherrie had purchased along with the masturbation toy, she walked to the kitchen table where Sherrie had placed the device after describing her purchase decision and how it had been perfect to allow her to practice fucking a man in the ass. Bringing the wedge to the coffee table, Miss Victoria placed it into position there and quickly walked Trent into position behind it.\n\nSherrie had said this arrangement meant the wedge was a little low. Trent's ass draped across it will likely position his asshole at the perfect height and angle for my pupil's strapon cock when she fucks him in the ass, thought Miss Victoria.\n\nKnowing she had only a brief time left before Sherrie would emerge from behind her bedroom door, the shaft of her strapon sticking up from her crotch and through the metal ring of the harness as she would strut into the room, Miss Victoria pushed down on Trent's shoulders, indicating he was to kneel in place. It was simple and quick from that point to get him bent over the wedge, which did, indeed, place his naked butt at what should be the perfect height for her pupil to screw him in his pretty little asshole.\n\n\"Arch your back and be ready to wriggle that fetching butt of yours in excitement when the lady walks back in the room, Trent,\" she whispered into his ear. \"You've been a wonderful toy for us so far tonight.\"\n\nMiss Victoria hastily strode to the tripod, unscrewed the camcorder, and was instantly back into her role as videographer. A few seconds later, Sherrie stepped through the door of her bedroom and back into what had become the training area for her strapon man-fucking practice. She was nude except for the purple toy between her legs and the black harness that secured it in place.\n\nShe stopped instantly upon seeing Trent, nude, his ass displayed sexily as he bent over the wedge. The rush of breath she drew in as the sight surprised her in its erotic intensity was audible, and Trent followed Miss Victoria's directions to the letter: he began squirming his ass in anticipation, causing his engorged cock dangling between his legs to bob up and down, clearly visible in his vulnerable position.\n\nMiss Victoria captured everything with the camcorder.\n\n\"You remember my instructions during our last session about the importance of a lot of lube?\" she asked Sherrie from behind the camcorder's little display screen.\n\nSherrie did not tear her gaze away from the nasty, sexy, entrancing, powerfully erotic sight before her, yet she somehow managed to find the bottle of lube, pop the top, and step behind Trent, the shaft of her strapon cock bobbing with every step.\n\n(And the motion of those bobs caused delightful actions inside her pussy, where the purple toy was nudging up against her G-spot.)\n\n\"Lots of lube is requisite,\" Miss Victoria said. \"You want him so slippery that pushing inside, even if the man is a tight virgin, is something he cannot resist.\" Moving to a better position to film the action now that Sherrie was behind Trent and pouring lube into her palm, the tutor kept up her naughty, exciting commentary. \"The tightness of a man's anus feels delightful around your fingers. Why don't you make sure Trent is thoroughly lubricated by using two fingers. He needs to be prepped and readied properly to take your pretty strapon inside his eager asshole in just a minute.\"\n\nSherrie's pussy gushed around the bulb of the dildo. She had learned that using the harness with the inventive toy was an absolute necessity as she had fucked Andrew in the ass and then practiced doing the same thing by using the masturbation sleeve mounted into the wedge the last two days. The act excited her too much to trust the security of the dildo only to her ability to grip the bulb into her pussy.\n\nShe always got so wet that, without the harness holding it in place, the bulb would have surely slipped out.\n\nThe shaft now dripping with lube, Sherrie poured more into her palm and coated two fingers, eager to push them into Trent's willing hole. Dropping the bottle of lube to the coffee table, she laid her middle finger tightly on top of her index finger to form an effective means of penetrating Trent while producing a more filling sensation than a single finger in his asshole had done earlier.\n\nHe groaned throughout the entire few seconds as she slowly pushed inside him. When Sherrie had bottomed out with her fingers, he squirmed and pushed back against her hand, obviously greatly aroused by the act.\n\n\"Oh, damn! That feels good,\" he growled, still squirming as Sherrie held her fingers deep inside his asshole.\n\nMiss Victoria missed nothing with the camcorder.\n\nSherrie began rotating her fingers, smearing the lube inside the snug confines of his anal walls, and then she withdrew, eliciting a moan of frustration, before pushing deep into him once more.\n\nHis asshole was tight and hot and felt absolutely wonderful around her fingers.\n\nShe teased him, quickly withdrawing, hearing him groan in exasperation. Reaching for the lube, she tipped the bottle at the top of his ass crack and squeezed more of the viscous liquid into the valley between his cheeks. Using this to massage his asshole, but not enter, she toyed with him, arousing herself even more intensely (something which she didn't think was possible).\n\nMiss Victoria was now shooting over Sherrie's shoulder. She framed Trent's upturned ass in the display on the camcorder's little screen and said, \"Show us how much you want her strapon inside your cute little ass, Trent. Show us how eager you are to be fucked.\"\n\nSherrie knew what was coming. She grabbed the base of the dildo's shaft as it jutted upward from her crotch and levered the shaft of the toy downward, causing the bulb inside her pussy to press directly against her G-spot.\n\nShe wanted an orgasm when she saw this.\n\nTrent surrendered his asshole to her. It was primal in the message it sent, and it was entirely visible, even through the shiny lube that was so thoroughly coating his crinkled pucker.\n\nHe opened up for them, the center of his asshole relaxing, inviting Sherrie to take him.\n\nThe orgasm she wanted at that moment hit, and she shuddered through a silent wave of pleasure, her breasts shaking, nipples taut, extended, and throbbing.\n\nWhen she opened her eyes, the sexy sight of Trent's willing asshole was still present, and she was crazy to plunge the shaft of her dildo into his hungry hole.\n\nLeaning forward slightly, Sherrie placed the tip of the shaft against his asshole.\n\nHe instantly pushed back, forcing an inch inside him even before Sherrie could react.\n\nThe action drove her insane with lust. It screamed out to her that he wanted her to take him, to penetrate him, to fuck him with abandon solely for the purpose of giving herself the most sexually intense experience she could stand.\n\nHis action demanded that she use his sexy ass as a fuck-toy to drive herself to a blinding climax.\n\nShe pushed in slowly, so excited that it took every ounce of self-control not to pound into him in a single stroke. Sherrie wanted the scene captured by Miss Victoria's camcorder in such a way, though, that it would be fantastically arousing to see her dildo disappear into his pink asshole slowly, inch by inch, until she was sealed against him, the end of the dildo buried deep in his ass.\n\nWhich is precisely what she did, Trent all the while panting and moaning in such sexy, deep man-growls that Sherrie thought she would come just from hearing those erotic noises of male arousal.\n\nWhen she was completely inside him, she backed the dildo out slowly, watching in fascination as it slid out of his crinkled opening. Then she pumped into him deeply again, once more producing those sexy sounds from deep inside his chest.\n\nBack out again, this time out completely, watching his hole close around the shaft as it exited his ass before she lined up the tip again and pushed into him, this time in a quick, deliberate motion that felt wonderful\u2014a true, deep thrust that sent its own message:\n\nI am going to fuck you as long and as hard as I can until I come.\n\nGod! She hoped Miss Victoria was capturing all of this! Sure, the \"game film\" would help her refine her technique so she would be ready to prove her man-fucking skills to the tribe's women, but\u2014damn!\u2014this was so fuckin' sexy that she wanted to capture every nuance on film and then be able to watch herself fuck this handsome stud to a blinding climax.\n\nIt would trigger an orgasm every time she saw it, Sherrie was certain.\n\nHer excitement building, Sherrie grabbed Trent's hips and began to settle into a satisfying, long-dicking, butt-fucking rhythm, which took a moment to do because she had to coordinate with the thrusts back against her crotch that Trent was energetically originating in his own excitement. Very quickly however, they had timed their actions, and Sherrie was riding his ass, holding onto his hips, and every now and then looking down to see the mind-bending sight of her purple shaft disappearing into him then reappearing as she backed it out only to slam it home again.\n\nMiss Victoria moved to the side, this being the perfect angle to record Sherrie's thrusts, catching her movements. Noting with satisfaction\u2014and a bit of pride about her ability as a tutor\u2014she saw that Sherrie was, indeed, moving with practiced man-fucking motions, the serpentine undulations of her hips and spine serving perfectly to piston her dildo into and out of Trent's upturned ass.\n\nAfter a couple of minutes (plenty of time to capture the action and provide Sherrie ample opportunity to critique her man-fucking abilities when she watched the video later), Miss Victoria sensed that it would not be long before the activity in front of her would result in both parties exploding into intense climaxes, so she moved into position in front of the coffee table, standing directly before Trent's face as he stiff-armed the coffee table now from his bent-over position, taking Sherrie's thrusts and pushing back against her with his own in response.\n\nMiss Victoria spoke from behind the camcorder, startling him with the realization of where he was.\n\n\"Ooh, Trent, you should see how sexy she looks as she fucks you in the ass! Her tits are jiggling with the motion, and her nipples are very, very hard. I bet you would be fascinated and incredibly turned on seeing her beautiful breasts. You'd like to suck her nipples, I know. She would taste so good, and running your tongue around those hard nubs while you sucked would keep your dick stiff and throbbing just because her nipples are so taut with arousal.\"\n\nSherrie opened her eyes, interrupting the blissed-out state she was experiencing as she built toward climax, the rhythmic motion of her hips and the answering thrusts of Trent's ass against her crotch setting up a hypnotic physiological effect. Seeing Miss Victoria in front of Trent as she was, Sherrie smiled, knowing that the video would be terribly exciting to watch later.\n\nMiss Victoria continued her teasing.\n\n\"She is a very pretty woman, Trent, with a great figure. You would love to see her naked body. It would excite you. You would probably masturbate to naked pictures of her if you had them. You'd stroke your cock seeing her sexy body, and you'd wish you were able to taste her, able to suck her clit into your mouth and make her come hard. If you watched her undress, you'd get more and more excited with each piece of clothing she removed, and when she was completely nude, you'd be stiff with lust, your mouth watering to slide your tongue inside her beautiful pussy.\"\n\nSherrie was excited by the running commentary.\n\nMaybe he WOULD be excited to see me naked!\n\nSuch a thought was doubly arousing simply because she had not allowed herself to consider the idea that men might be so turned on sexually by the sight of her naked body that they would want to stroke their cocks as they looked at her, fantasizing about touching her, sucking her, fucking her.\n\nMiss Victoria's tutelage had introduced the notion, and now Sherrie was starting to enjoy the idea, tingling at the possibility each time she thought of it after that first tutoring session when Miss Victoria had told her that she would have no trouble attracting the attention of men if she dressed to better show the silhouette of her body, spent more time highlighting her pretty features in ways meant to communicate her interest in having men notice her.\n\n\"She's fucking you really well, Trent. You've told us how much you love it when a woman strokes her strapon into your asshole. Are you going to come? Do you want me to take the cock ring off?\"\n\nHe was really panting with the exertion of delaying his orgasm, knowing how uncomfortable it would be if the damned leather strap was still in place around his cock and balls when it happened.\n\n\"Please!\" \n\nMiss Victoria smiled and looked up at Sherrie, whose jiggling breasts were now covered in a light sheen of perspiration from the satisfying exertion of screwing Trent in the ass with her strapon.\n\n\"Perhaps,\" answered Miss Victoria in response to Trent's tortured request. \"But first, I want you to keep your head exactly in position as it is right now, and I want you to look straight at me.\"\n\nThe statement confused Sherrie.\n\nHow could he see anything with his blindfold on?\n\nThen, in one swift motion, Miss Victoria reached forward and whisked the blindfold off Trent's face.\n\nSherrie was totally scandalized. He will see me! she screamed in her head. No! No!\n\nAnd then, slowly through the fog of her sex-crazed mind now highjacked unexpectedly with horrified thoughts of being recognized, Sherrie realized what Miss Victoria was doing.\n\n\"That's it, Trent. Look right at the camera. This is such a lovely sight. You look so sexy in this position, the beautiful woman behind you pounding into your tight little asshole with her pretty strapon dildo. I love filming this. She will certainly enjoy seeing you like this. It will probably make her come, because I'm sure she'll be masturbating while she watches it. Imagine that, Trent\u2014she'll be stroking her hard clit watching herself fuck you on the video. She will get excited at your expression, knowing that she's driving her dildo into your asshole right now, and that's what's causing your moans. Can you imagine how hot that will be for her? Can you even conceive of how arousing and sexy it's going to be to see you in this position, looking right at her as she watches the video, masturbating to the memory of fucking you in the ass at this very moment as you gaze into her eyes.\"\n\nMiss Victoria was voicing exactly the thoughts racing through Sherrie's mind.\n\nAnd she was driving her crazy with lust in the process.\n\nWhat color were his eyes?\n\nShe would know when she saw the video.\n\n\"Oh, you look so hot,\" Miss Victoria said to Trent, \"so very, very sexy like this, taking her fake cock up your ass, moving to her thrusts, enjoying a good, deep, hard fucking in your sexy little butt. You're making her feel so good. If you could see her you'd know how very hot and horny she is, doing you in the ass with her strapon. Does it feel that good to you? Tell us how it feels.\"\n\nSherrie was quickly reaching the point of no return. Fucking Trent's glorious ass in itself was gut-wrenchingly sexy, arousing beyond belief. Adding Miss Victoria's running commentary, knowing that she would see Trent's face on the video as she was fucking him\u2014Sherrie was dangerously close to a crashing orgasm.\n\n\"It feels fantastic,\" he panted. \"She's fucking me so good. She's making me feel so good. She can take me anytime she wants. I'm going to come so hard for her.\"\n\nQuick, Miss Victoria, quick! I'm going to come any second!\n\nHer tutor momentarily laid down the camera in order to retrieve the blindfold and replace it over Trent's eyes. Then she stepped quickly to the side of the table, reached underneath Trent, and fumbled for a second to find the snap on the cock ring before unfastening it and releasing his cock and balls from their confinement.",
        "Sherrie was milliseconds away . . .\n\nThen, just as Miss Victoria picked up the camcorder, Trent yelled out, \"Oh, sh-i-i-i-t!\" and dropped his head to the coffee table, powerful jets of come spurting from the end of his cock. Sherrie leaned over his back, grabbed his shoulders, and ground against his ass in energetic abandon, forcing the bulb end of the dildo repeatedly up against her G-spot, and she cried out in an otherworldly wail as her own blinding orgasm crashed against the inside of skull before reverberating through every inch of her body.\n\nThe two of them fell in exhaustion over the wedge, Sherrie's strapon slipping from Trent's asshole in the process as Miss Victoria caught everything through the camcorder's lens.\n\n***\n\n\"So now you realize why I asked that you remove all pictures of yourself and friends and family for tonight's activities,\" said Miss Victoria as she sat on Sherrie's bed, the bedroom door shut as a blindfolded Trent began to put himself back together, just as Andrew had done a few evenings earlier. \"During that brief period when the blindfold was off, even though I made sure he was looking straight into the camera the entire time, I wanted to be sure nothing was visible in his peripheral vision that would identify you, Dr. Mathison.\"\n\nSherrie had collapsed into the chair in the bedroom, the purple dildo extracted and lying in her sink in her master bath. Dressed now only in a thin robe, she smiled in gratitude at Miss Victoria. \"I have to admit, what you did tonight was amazing,\" she said. \"You orchestrated an evening that not only provided the practice I needed with a real man as I prepare for my return to the tribe, you also created the most erotic situation I could possibly imagine.\"\n\nMiss Victoria smiled knowingly.\n\n\"And now, with that video,\" and Sherrie's eyes glanced toward the nightstand where she had placed the memory card that Miss Victoria had taken out of her camcorder and given to her, \"I am going to see it all played out again whenever I want.\"\n\n\"As I indicated in our call this evening, Dr. Mathison, I have taken a special interest in this assignment. It was my pleasure to be your videographer this evening. And you must not forget,\" the tutor said, grinning, \"that I got my own satisfying orgasm out of the night's proceedings.\"\n\nSherrie could only smile.\n\n\"Perhaps one day I'll be lucky enough to find a man who will want us to do the things I did tonight,\" Sherrie said.\n\n\"I'm sure you will,\" Miss Victoria answered. \"And when you do, and you succeed\u2014as you surely will\u2014in persuading him to surrender to your strapon, I hope you remember our lessons, especially taking to heart Trent's forthcoming revelations about how powerfully attractive a woman is who does not fear sharing her lust for good sex and exudes confidence in doing so.\"\n\nEvery word of Trent's explanation was captured on the video Sherrie knew she would watch many times.\n\n\"Perhaps,\" Miss Victoria said in a thoughtful tone as she rose to exit the bedroom on her way to pick up the duffel and guide Trent out the door after he had dressed, \". . . perhaps some kind of veiled acknowledgment in the foreword of your book would be a nod of appreciation that I could enjoy in memory of this and our two other training sessions.\"\n\nMaybe it would, Sherrie thought, as she watched Miss Victoria step out into her living room and say, \"Come, Trent, let me guide you back to the car.\" "
    ],
    "authorname": "escriterra",
    "tags": [
        "strapon",
        "man-fucking",
        "asshole",
        "masturbate",
        "dildo",
        "role reversal",
        "g-spot",
        "cock ring",
        "finger fucking",
        "domme"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/a-college-professors-discovery-ch-02"
}