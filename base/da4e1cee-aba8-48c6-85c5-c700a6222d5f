{
    "title": "The Long Betrothal Ch. 04",
    "pages": [
        "Dear Readers \u2013 My laptop is dying [cue mournful music] but I haven't had time to crack it open and diagnose the digital illness. Since I do most of my writing on the road, so to speak, and I made some last-minute changes to this chapter, it's less polished than I'd like it to be. Comments from eager, impatient readers seem to suggest most of you would prefer fast to perfect, however, so here it is! Please try to overlook any grammatical errors \u2013 I'm sure there are some \u2013 while I get started smoothing out a few bumps in Chapter 5, the final resolution of Kerin's story. Thank you again for all the positive feedback, and be sure to check out my bio for more info. \u2013 Stefanie\n\n\u2013 o \u2013 \n\nAfter a somber private ceremony, the newly wed couple joined Father Hubert, Maxen's most senior men, Kerin's ladies, and a few of her oldest retainers in sharing a small, celebratory supper. The real festivities would take place the following day, when Maxen would contribute a cask of precious mead to the plethora of food and drink served in the outer bailey, but for the ersatz feast taking place that evening, just the usual wine and ale were served. Dinner was followed by an hour of light-hearted toasts and song, but taking their cue from Edon, no one seemed inclined to the usual wedding-night buffonery, and the traditional Wedding Cup was put off until the following day, when Kerin and Maxen would share the ritual with the entire village.\n\nKerin had hidden the iron collar and chain she wore by winding the long drapery of her head-covering about her throat, but its narrow, ponderous weight prevented the meal from feeling like a normal celebration to her. Still, she blushed when Maxen stood to lead her from the room and amused glances followed their path. \n\nNot knowing what was expected of her once they reached their chamber, Kerin stood quietly by the door while her husband washed his face and hands. In the firelight, she saw him glance her way as he turned, but she lowered her lashes as he began to shed his clothing. Her brow wrinkled when she heard him climb into bed a minute later. Did he expect her to undress herself?\n\nShyly, she peeked... and froze. All that was visible of Maxen was the back of his head and one bare shoulder. The rest of him was hidden beneath the covers, apparently ready for sleep.\n\nKerin controlled her breathing and bit her lower lip, trying both to distract and silence herself, but she couldn't stop the tears from blurring her vision and wetting her cheeks as she returned to her pallet on the floor by Maxen's feet. She didn't want to weep, but as strong as she'd been over the past five years, she wasn't strong enough to withstand this new evidence of Maxen's hatred. She knew she deserved his anger, but she'd hoped his attitude might someday soften. That was the argument she'd used to talk herself into tranquility when she learned of the priest's arrival, but on the cold stone floor of her father's chamber, it no longer seemed like a possibility.\n\nAfter an hour of sleepless desperation, she succumbed to temptation and plucked Sir Furball from her high-sided basket by the hearth, risking an early-morning ambush. With the kitten's warm body tucked between the curve of her chin and chest, Kerin finally fell asleep. Her night was as empty of dreams as she suspected the rest of her life would be, from that day forward.\n\n\u2013 o \u2013 \n\nMaxen hadn't meant for Kerin to continue sleeping on the floor. Since he couldn't trust his self-control, it may have been for the best, but it wasn't what he intended when he crawled beneath the covers. He couldn't have explained exactly what he did mean to accomplish, but had some vague idea that his lack of interest would demonstrate that Kerin shouldn't expect coddling or romance to be part of their marriage. Still, when she'd returned to her place by the hearth, Maxen felt a twinge of something he wasn't accustomed to feeling, something remarkably like regret. He was considering whether to take action when a sound arose from Kerin's nest of blankets on the floor, and he tensed. For the next half hour, he lay rigid, listening closely and becoming angrier as his suspicions were confirmed, because new ones took their place.\n\nKerin was crying, and Maxen's imagination supplied the reason. She couldn't possibly have been wounded by his indifference, because if she truly cared, she wouldn't have treated him so badly, nor objected so strongly to their marriage. But if her tears were false and meant to gain his sympathy, they wouldn't have been shed so quietly. That left only one explanation: Kerin wept because she'd been forced to marry someone other than her beloved Milot. \n\nMaxen's hands fisted in the soft woolen blankets. \n\nHe slept before Kerin did, but his night was haunted by visions of his new wife falling away from his outstretched fingers, her broken body landing sprawled at the foot of the stairs, trickles of blood running between squares of the hard stone floor.\n\nHe woke before dawn, still out of sorts. An ebullient mood reigned throughout the castle and village that day, so Maxen took care not to burden anyone with his own ill temper. He didn't bother leading Kerin around by her chain, either, allowing her to keep it hidden away beneath the silk drapery of her hair covering, since she was now bound to him by the more comprehensive ties of law.\n\nEdon knew his liege was in a foul mood, of course, but had the sense not to mention it to Maxen. He supervised routine patrols and parceled out assignments. Many of the men were stolen away by the cook and the women of the village, impressed into service setting up long plank tables, carrying casks and huge iron pots or, in the case of one especially young soldier, tying streamers of bright ribbons to every post in the outer bailey, while the poor lad's compatriots roared with laughter.\n\nTo accompany the mead, Maxen's men opened two casks of apparently imported wine from the bandits' plunder and an extra barrel of ale from the keep's own stock. Maxen graciously allowed Geralt to attend an hour of the festivities, and Kerin's man joined Father Hubert in toasting the couple with drink and song, while Milot remained locked in his cell below. \n\nWhen it was at last time to carve the roasted meats, Maxen managed to mount a decent facsimile of good cheer on the cold steel scaffolding of his face. Kerin's manner was as serene and gracious as ever. She stayed close by Maxen's side and said all the right things in reply to the many congratulations they received. She smiled so sweetly at her new husband that no one but Maxen could tell she was looking at one of his ears whenever she did so. \n\nSoon after the harps came out, Father Hubert retired to his chamber. By then Geralt was back in his cell, too, and the wedding party had moved inside. Kerin sent her ladies to bed fast on the heels of the priest, when two buxom, brunette slave women captured from the thieves were brought up from the village to dance, and it became obvious that the boisterous party was becoming one which unmarried women should not attend.\n\nMaxen had spent half the afternoon surreptitiously peering at his wife, as though attempting to divine her thoughts by simply reading her expression. The few bits of truth seeping through her happy veneer were weary and sad, and several times, Maxen caught Kerin watching him, too. He couldn't help but wonder what she saw when she looked at him. There was a polished oval of bronze in their chamber, and Kerin even had a tiny pane of Moorish mirrored glass, but Maxen had never cared enough to look.\n\nHe thought about it now, though. He'd been in a multitude of fights, large and small, and his face had not been spared its share of the battering he'd taken over the years. Maxen imagined it showed. If Kerin's shy glances were busy propping Milot at his side, Maxen was sure he suffered in comparison to the much younger man.\n\nBy sunset, his brittle good humor was exhausted, and he attempted to drown his irritation in several additional tankards of ale, taken fast, not for taste. That was when Edon seriously curtailed his own consumption of alcohol. \n\nMaxen was more than capable of handling as much drink as any of his men, but he'd consumed more and eaten less than usual. On top of sleeping poorly since their arrival... well, he wasn't slurring or sloppy, but Edon could see Maxen wasn't exactly sober, either, and he'd refilled Kerin's wine goblet at least twice since the party moved inside. At first, Edon was encouraged, thinking Maxen meant to seduce her. Surely intoxication would loosen Kerin's lips, and telling Maxen how she felt would solve three-quarters of their problems, Edon was convinced. Unfortunately, Kerin's repeated assertions that she didn't handle liquor well were more true than either Edon or Maxen knew. Within the space of a few sips, Kerin went from cheerfully tipsy to boneless, giggling incoherence. \n\nWhen she responded with ardor to Maxen's one-armed embrace, he was on her like a leech, kissing and caressing. Instead of taking his wife to bed, though, he lifted her into his lap and continued petting her and plying her with wine, waving Edon off when twice he suggested Maxen switch his bride to watered-down ale. When Maxen pulled Kerin impulsively into his lap, she responded passionately to his kisses, and neither of them were sober enough to care about their surroundings. \n\nEdon, who'd so eagerly anticipated the priest's arrival, was far from pleased with the results. Maxen could be as cantankerous as any other man burdened by an excess of ale, and Edon wasn't stupid enough to try and curtail Maxen's intake when he'd been holding his emotions in check for such an extended period of time, but still...\n\nEdon sent the servants to bed and began whittling away at the rest of the crowd, attempting to dismiss the men one by one without alerting Maxen, who objected loudly every time someone tried to depart. \n\nEdon grimaced.\n\nMost of the revelers were intoxicated, too, but Edon had already caught several of the men eyeing Lord Maxen cavorting with his bride. While it wasn't uncommon for soldiers to take women in view of the other men, usually the woman in question was one they wouldn't mind sharing. Ladies were treated with far more discretion. Even an impassioned, newly-wed man could be depended upon to escort his lady wife to a private place before falling on her like a hungry wolf. By pulling Kerin into his lap and pawing her while they were still at table, Maxen was giving his men the impression that Lady Kerin wasn't quite as much a lady as they'd previously believed.\n\nWhile Edon didn't think it was intentional on Maxen's part, no number of stern lectures given after the fact could undo gossip. The night was teetering on the edge of quiet catastrophe. By the time Maxen reached a truly uncontrollable level, the party had been reduced to two teulu, one of the dancing girls, plus Iago, who played the harp as well as any bard. Iago and Cadel had been keeping their heads politely turned away from Maxen's display, Edon noted, but Eduard and the slave girl weren't as well-behaved.\n\nWith no servants left to observe his lack of decorum, Maxen altogether ceased heeding his oldest, most loyal friend in favor of snaking his hand between the laced sides of Kerin's surcoat. Though Kerin responded enthusiastically to his attentions, Edon thought surely her condition blurred anything beyond her husband's face. He was convinced that Lady Kerin didn't recognize their less-than-private surroundings, and his disappointment with Maxen turned to disgust.\n\nHe held his tongue while Maxen fondled her, the movement of his hands on Kerin's breasts easy to see beneath the soft drapery of her garments, but when Maxen lifted his wife to sit on the table, Edon could tolerate no more. He stood, ignoring Eduard's eager leer. \"My Lord Maxen, perhaps your chamber \u2013 \"\n\nThrough the alcohol-induced haze, Maxen recognized Edon's approbation, but he didn't care. Fumbling with the sides of Kerin's skirt, he muttered his response. Edon understood only a few words of it \u2013 the gist was that Kerin's lover had seen more of her private charms than her husband. Edon swore under his breath, wishing he'd never told Maxen that ridiculous snippet about Milot visiting Kerin in her chamber.\n\nThrusting his arm between them, Edon stood with his back to the table and his hip alongside Kerin's thigh. \"Maxen, don't do this. You \u2013 \"\n\nEdon stopped abruptly. Maxen's glare was more threatening than the meaty hand settling on his dagger.\n\n\"Remove your arm.\"\n\nEdon lowered his arm and the scowl disappeared as Maxen's hands returned to their task. \"Leave us.\"\n\nFists by his side, eyes shooting fire, Edon paused to voice his prediction, quietly, so only Maxen would hear. \"You'll rue tonight's deeds, m'lord.\"\n\nWith a loud show of bonhomie, he hustled the remaining men away, laughing that their friends were surely missing their company while there was still ale to be had in the bailey below.\n\nAll three men glanced automatically at their liege for confirmation, but only Eduard reacted, a sly smile stretching the thin lips as his eyes dripped down the length of Kerin's bare calves, exhibited by Maxen's ministrations. At the bottom of the stairs, Edon halted, gesturing to the slave girl that she should continue down the hill without them. Music rose from the bonfires below.\n\nIago sensed something and waited quietly, cautiously studying Edon's expression. Away from the torches of the Great Hall, the men's features were lit only by the silvery blue light of the full moon shining through the tall, open door. The other two men were oblivious and continued laughing and joshing loudly.\n\nEdon turned and growled. \"Silence!\"\n\nAll three straightened immediately, training besting intoxication. \n\nEdon made eye contact with each. \"Maxen ap Dyfed is a great man, a fierce soldier, and a brilliant leader, but he has made a grave error this evening.\n\n\"By morn, his head will be clear and he will have realized his mistake. Mayhap if you keep your wits about you, the king won't repair his marriage and redeem his everlasting soul by beheading the lot of you.\" He paused for another round of solemn stares.  \n\n\"If I hear a single word whispered about anything that happened in this hall tonight, your liege won't have to lift a finger, because I'll kill all three of you myself.\"\n\nOne at a time, he stepped from man to man. \"Do you understand what I've said?\"\n\nEach nodded and replied meekly, \"Yes, my Lord Glyn.\"\n\nSatisfied that his order was clear and his seriousness clearly understood by the soldiers, Edon dismissed them. As the men turned away, the tallest murmured an explicit prediction about what Maxen was doing to his \"lady wife\" right then. Edon didn't catch the entire sentence, but even the tone Eduard's words would have sufficed. \n\nWithout anger or hesitation, he drew his dagger and thrust it between the ribs of a man he'd fought beside for the past five years. With one hand on Eduard's throat, Edon held him upright as blood flowed from the wound, soaking the layers of clothing between them. When Eduard's entire weight rested on Edon's blade, he jerked it out, and Eduard fell face-down onto the keep's stone floor.\n\nHe looked to Iago and Cadell, who were staring back at him \u2013 Cadell in horror, Iago serious and regretful. \"Do you need me to repeat my warning?\"\n\nIago shook his head. Cadell snapped to attention. \"No, my lord.\"\n\nEdon sighed as he gazed down at Eduard's lifeless form. He wasn't surprised by this turn of events: he would have been stunned if Eduard had somehow managed to keep his counsel. The man was a lech, too. After seeing Maxen's performance tonight, Lady Kerin would never have been safe around him. Edon supposed it was better now than later, after Eduard started spewing his filth among the other men, but he couldn't help feeling discouraged. He hoped the outcome of Maxen's night was worth a soldier's life.\n\nHe bit back another sigh and squared his shoulders. \"Cadell, go fetch fresh hay for the floor. Iago, grab his feet.\"\n\n\u2013 o \u2013 \n\nIn the hall above, Maxen and Kerin heard none of what passed between Edon and his men. Even if the couple had been sober, they were far too immersed in sensation to hear anything but their own small moans and sighs. \n\nThough Edon's earlier insight had correctly named what Kerin felt for Maxen, he'd gotten one thing wrong tonight: Kerin was cognizant of all that was happening to her, but the wine she'd consumed made it difficult for her to remember the meaning of anything but Maxen's touch. It had never been her desire to deny him, and now she didn't know why she should. They were married, after all. And in her grape-induced haze, Kerin believed Maxen's kisses meant she was forgiven, that their life together had a chance to be all she wanted.\n\nIn the glaring light of day, her supposition might have seemed stupid, but wrapped in her husband's embrace in the flickering firelight of their wedding feast, anything seemed possible. Kerin was lost, adrift on a sea of sensation, and it was even more turbulent than their previous encounters, because this time Kerin knew she wouldn't stop him. \n\nMaxen was in much the same state as Kerin \u2013 his actions driven by desire and justified by circumstance \u2013 but he lacked the stream of subconscious reasoning which lay beneath Kerin's surrender. In Maxen's case, lust had completely won out over intellect. Hardly heeding Edon's departure or the silence which descended in its wake, his fingers busied themselves with the laced shoulders and sides of Kerin's gown while his mouth explored.\n\nKerin's spine arched, her body responding to the tendrils of lava painted across her flesh when his kisses wandered. He used his teeth on her ear \u2013 dear God! how could something so simple enflame her from head toe? \u2013 and Kerin tilted her head to to flaunt the lines of her long neck, encouraging his kisses to wander there. \n\nFor a moment, the narrow band of iron intruded unpleasantly on Maxen's feast, but with a vague promise to himself, he pushed the thought away and unwound the coil of Kerin's arms from about his neck. With her layers unlaced, the gown slipped easily from her shoulders, exposing her breasts to Maxen's touch.\n\nHe groaned deeply, licking and nipping a hot path across her collarbone, down to the sweet curves plumped by his palm to meet his mouth. \n\nKerin shivered. Her hands fell from Maxen's hard biceps to the table behind her, supporting her weight as she offered herself up, vibrating with tension and a yearning she'd only ever experience in his arms. She knew the mechanics of what passed between a married couple, but she didn't know the words to express her need, or she would have been begging him to take her then. Instead, a wordless whimper rose from her throat, telling Maxen of her desire.\n\nWith all the skill he possessed, Maxen laid claim to Kerin's body, drawing moans and sighs she didn't hear as he laved the tiny hard peaks into raspberry redness, pinching them between lips and fingers. Her knees clutched his hips, eroding what little restraint the ale had left behind.\n\nAll evening, Maxen had been beset by the constant prospect of Kerin rejecting his advances yet again, so he'd forged ahead with every small liberty she allowed. Now that she seemed to have relinquished her objections, Maxen was more determined than ever to have her. Stopping him at that point would have been unlikely, if not impossible, and he'd long since ceased considering it.\n\nEncircling her waist with one strong arm, he lifted her and swept the fabric of her skirts out of their way. When he gently lay her on her back on the table, Maxen bent with her to maintain the intimate contact. With her legs completely bare and Maxen holding her so closely, the hard length of his erection pressed against Kerin's center. ",
        "Maxen was going mad, desperately clinging to his last shred of sanity as he tried to remember his manners. She was writhing against him like a dervish, but he wanted her ecstasy as well as his own, and he'd have to pull away soon to maintain any semblance of control. He straightened, but Kerin caught him before he stepped back, tugging his mouth down to hers. Her kisses had become nearly as aggressive as Maxen's own, and the tiny forays of her tongue whipped his fever ever higher.\n\nHe pried his mouth away for long enough to strip his tunic off and bent to her again. When he suckled her nipples, she responded wildly, rocking her hips to feel the friction of his cock prodding at her most sensitive flesh. With the pale flesh of her breasts taut beneath his palms, and nothing but his leggins between them, Maxen's willpower finally crumbled. The fluid seeping from her folds had soaked the fabric, wetting the skin of his cock, stretched tight over the blood-engorged tissue beneath. Maxen stopped worrying about arousing her. Kerin was aroused already. \n\nShe twisted, dragging her nipples across his heaving ribcage, and whimpered a constant song against his lips, punctuated by the passionate pleas of every lover at such times \u2013 his name chief among them. \n\nBranded by the fiery sensation of Kerin's every touch, Maxen heard few individual words until he rose above her, stripping his leggins down without bothering to remove his boots. Gripping Kerin behind her knees, Maxen he pulled her to the edge of the table, lining her up for his penetration. With his cock in hand, nudging against her slippery gate, Maxen's eyes rose to meet her. In his mind, he froze, pinned in place by the wonder of her expression and the sound of the single word she murmured to him then: \"Caradoc.\" Her beloved. And this time, she was looking right at him!\n\nMaxen had no doubt that the emotion written so clearly across her delicate features was for him alone. \n\nKerin loved him!\n\nUnfortunately, his body didn't get the message. His body was driven by the all-consuming need to have her, a compulsion so strong Maxen couldn't deny it. With one swift plunge, he buried his aching cock in his wife's hot, tight cunt... and she screamed, agony supplanting the affection in her eyes.\n\nShock hit him like an icy hammer to the head \u2013 a wordless epiphany nearly as painful as the look on Kerin's face, and Maxen recoiled, withdrawing quickly from the ecstasy of her body's untried embrace.\n\nBut Maxen's own body remained an unruly pit of warring reactions. \n\nDay in and day out, he'd been desperate to have Kerin since he rode up the hill and saw her so gracefully awaiting him, and the clenching heat of even that one thrust was too much when it was wrapped in the realization that Kerin loved him. Even as he pulled free of her body, Maxen came, spewing his seed in violent ribbons of pearly white, decorating her silky skin and pooling on the smoke-stained wooden table. It was the most pleasurable moment of his life, swallowed immediately by the most appalling.\n\nTears running unheeded into her hairline, Kerin curled around the pain as Maxen grimaced above her, ropelike tendons outlining his neck and shoulders as his cock convulsed between her thighs, wetting her even as she bled. And she was bleeding. With her shoulders and torso drawn helplessly inward, she could see everything: the strings of semen pulsing from her husband's still-hard member and its uneven coating of shiny red blood.\n\nSlumping onto her elbows, Kerin tried to shimmy backwards on the table, unconsciously retreating from the source of all her torment \u2013 physical and otherwise. Too shocked for coherent thought, she nonetheless knew that everything was wrong. Her behavior, Maxen's lewd pursuit of his pleasure, her wanton acceptance of his goal, even his reaction to her chastity. It was all just wrong, and the rending pain was merely an unpleasant reminder. \n\nHe was horrified by what he'd done, but alcohol made him slow and stupid. When Maxen gathered her up, it was too late for anything but recriminations. Lifting her into his arms, he paused. With the back of one hand, Maxen tipped a jug of wine onto its side, and a river of dark liquid flowed forth, obscuring the evidence he'd left behind.\n\nWhat had he done? Maxen shook his head, no less wounded than Kerin.\n\n\u2013 o \u2013 \n\nAware of the likely end to Maxen and Kerin's wedding feast, the housekeeper had left two buckets of heated water on the hearth in their chamber. The water in the covered buckets was still surprisingly warm when Maxen tested it after setting Kerin's feet on the bedside rug. He sloshed some of the warm water into the ewer and gathered together a handful of supplies, while Kerin waited silently. \n\nMaxen kept an eye on her while he prepared, but Kerin's head hung forward, her shoulders slumped, and she neither moved nor spoke. She let him strip her gown off and move her to stand on the warm hearth, where Maxen gently washed away the evidence of their passion \u2013 and his cruelty. He grimaced as he worked around the iron collar, noticing the pink, irritated skin beneath. \n\nWhy had she not told him the collar was hurting her? \n\nThe answer occurred to him as quickly as his question: she'd assumed he wouldn't care.\n\nKerin's tears continued unabated, silent except for the occasional soft hiccup. After he'd soaped and rinsed her body, Maxen washed her face with fresh water from the bucket by the hearth. When she was dry, dressed, and tucked beneath the covers, he stripped and used the rest of the water to bathe himself.\n\nHe left everything on the landing outside their chamber and ran easily downstairs to collect the few items of clothing they'd shed in the hall. Maybe it wouldn't be possible, but Maxen intended to keep the events of that evening as quiet as he could. \n\nHe hesitated with his tunic in hand, staring at the table where Kerin had lain. That, right there was where he'd thrown away his last chance at happiness, Maxen thought. Torchlight cast a dull sheen across the cloudy black puddle which covered his sins, and he fought back a wave of nausea. \n\nHe'd wanted her for his wife since the day they met, and this is what he'd done with the gift she'd given him; he'd sacrificed his greatest unspoken prayer to his own stupidity. Milot had been telling the truth, as had all Kerin's people, but he'd been too stubborn to see it. If he hadn't spent so much effort on hating her, he would have seen the truth. Instead, he'd taken her virginity on a table in a public hall. If he was honest with himself, it was only Edon's actions which prevented the brutal act from taking place in the presence of his men. And even the agonized tears of his newly deflowered wife hadn't been enough to overcome his barbarity; he'd reached his completion while she lay weeping before him. \n\nWhat kind of man was he?\n\nMaxen fought an overwhelming urge to wake the priest and climbed the stairs much more slowly than he'd descended, hoping for inspiration he neither expected nor deserved.\n\nKerin lay curled on her side where he'd left her. She'd stopped crying, but she hadn't gone to sleep. Maxen stood silently by the bed. There were no words that could possibly express his regret, but something had to be said. He knelt in supplication before speaking.\n\n\"I am sorry, my lady, for all I have done to wrong you in these past few weeks, and for the pain I have caused you this night.\"\n\nKerin closed her eyes without acknowledging his presence. After an endless minute of laden silence, Maxen left the room.\n\nWhen he returned this time, he was accompanied by the same smith who'd originally bedecked Kerin in her collar. Silently, the weathered old man struck it off and departed, carrying the pieces. Maxen closed the door and returned to bathe Kerin's neck again with a soft, cool cloth. \n\nWhen he finished and climbed in beside her, Kerin jerked away in a panicked flurry of normally graceful limbs, throwing the covers back and hastening crablike to the end of the bed. Startled, Maxen said nothing as she collapsed onto the pallet where she'd been sleeping since his arrival, another piercing blow to his heart. \n\nHe rolled to his feet and went to squat by her side. \"Kerin, please come back to bed.\"\n\n\"Why?\" she asked quietly, still not looking at him. \"Have you more? Will you beat me? Rape me? Invite the remainder of your men to witness my humiliation? There is nothing left of me to conquer.\"\n\n\"My lord\" hung unsaid in the air between them. Maxen's shoulders sank. Her words were harsh, but it was her tone which wounded him most deeply \u2013 the heart-broken apathy which so plainly conveyed her opinion: she'd be surprised by none of those actions, if they came from him.\n\nHe lingered at her side for a moment more, studying her face in the firelight, but she wouldn't open her eyes.\n\nMaxen returned to bed alone, thinking that Kerin would probably never forgive him, and she'd be right. It took him a very long time to fall asleep.\n\n\u2013 \n\nKerin didn't sleep at all. Neither did she cry. After Maxen went to bed, she watched the fire die while her mind toiled over everything that had happened since their wedding. She'd been anxious but resigned to her fate when the priest arrived, since she'd given up any hope of escaping by then. Even if she could have gotten away from Maxen and his men, how would she have explained the iron collar around her neck? She had no coin, nor the tools needed to remove it.\n\nNo one in her circumstances had any right to expect a love match, especially at her age, but she'd found Maxen's attitude after the wedding especially difficult to bear. His affection tonight had been in such startling contrast to his earlier disdain that Kerin had been unwittingly disarmed, and a surfeit of wine had done the rest. The searing stroke of her maidenhead being torn asunder had sobered her instantly, though, clearing the cushioning mist from the connotations of their location and all that had gone before.\n\nNow, she was wed and her virginity gone. \n\nMaxen said he was sorry, but Kerin couldn't depend on kind words to protect Milot and Geralt. \n\nHer husband might temporarily regret his actions, but these past weeks together told the true tale: Maxen would never forgive Kerin for sending him away, and he'd never love her the way that she loved him. His regret probably wouldn't last the week. He'd no doubt use her body again to seal their legal bond, but he'd sworn repeatedly not to give her a child, and she saw no reason to believe that decision would change. Without hope of children \u2013 or even companionship \u2013 there was nothing left for Kerin at Penrhyn Tywyll. \n\nIn any event, she couldn't wake tomorrow morning and walk about the keep as though nothing had happened, after his soldiers had seen... had seen the way her husband treated her. Kerin flinched in the firelight, forcing her thoughts from the memory of her disgrace.\n\nPerhaps, after tonight, she'd even be able forget Maxen ap Dyfed. \n\nAnd her collar was gone.\n\nThe capricious hand of fate had clad Kerin's doomed wedding feast in one other small blessing \u2013 the empty landing Maxen had carried her across. Two of the drunken soldiers downstairs had been the teulu destined to guard them overnight. There was no one at their door, and the keep was quiet. Kerin gazed past greying gold coals into an unknown future. She'd be forced to leave her ladies behind, but she couldn't imagine Edon allowing them to be hurt. Her husband would no doubt be enraged to find her gone, but she didn't think he'd take it out on her women, either, and she'd let their families know to send for them as soon as she was able. \n\nHalf an hour after Maxen's first snore rumbled across the room, Kerin rose and collected the few items she'd take with her. With a sorrowful fingertip to the edge of the Sir Furball's basket, and one last glance at the man slumbering on what should have been her marriage bed, Kerin swallowed her final tears and crept from her husband's chamber.\n\n\u2013 o \u2013 \n\nSee you in two weeks for the last chapter! \n\nPlease keep up the comments \u2013 I love them all! So far, this year had been a discouraging one for me, and your interest has made a big difference in keeping me motivated. Thank you again for your kind words."
    ],
    "authorname": "SteffiOlsen",
    "tags": [
        "medieval",
        "castle",
        "knight",
        "first time",
        "escape",
        "virgin",
        "captive bride",
        "prisoner",
        "secret"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-long-betrothal-ch-04"
}