{
    "title": "Lost Colony Ch. 14",
    "pages": [
        "Author's note:\n\nThis is the fourteenth (and final!) chapter of my series Lost Colony. Most readers should start with chapter one, but if you want to scroll down to the steamy parts, be my guest!\n\nThis is a work of (science) fiction. All characters are over age eighteen. Thanks for reading!\n\nBTW, I published a summary of the first eight chapters, so if you're just joining the story and want to catch up without reading those chapters, you can read the summary. Naturally, it's full of spoilers; as the author, I'd rather you read the entire thing.\n\n----------------\n\nHow old had he been? Nine?\n\nSparr, with unfading clarity, remembered the day as a child he had first visited the Baltimore aquarium. His parents had led him past the touch pools dotted with rays, and around the penguin enclosure. These animals were already familiar to him, featured in his favorite childhood books and videos. Even the reef tank, an imposing exhibit thick with blacktip sharks, pufferfish, and whiptail rays, was easily within his comprehension. Its inhabitants looked and acted exactly like fish should, either camouflaging themselves in the sand or scouring the water restlessly, eager for prey.\n\nBut farther into the building, deep within corridors dark and quiet, they came upon tanks of jellyfish, stars, and anemones. These creatures seemed neither to hide nor hunt. Sparr had watched, entranced by their waving tendrils, improbable colors, and languid movements, until at last his parents had to tear him away. These weren't fish as he knew them; they fit into no easy category within his mind.\n\nTwenty-five years later the feeling swept over Sparr once more. Standing with the Translator Brielle, and surrounded by the Originals, he struggled to place the aliens into a category he could accept. The massive, slug-shaped beings appeared completely immobile. Covered as they were in delicate fronds, Sparr would have assumed they were plants or missed them entirely. Brielle had guided him to the truth, but he was slow to absorb it.\n\n\"You said something terrible happened?\" Sparr had been asking questions of Brielle, the first person he had met on Kaybe with both the knowledge of past events and the willingness to share it.\n\n\"Yes,\" the Translator said. \"When we didn't heed their warning, there was no avoiding the plague.\"\n\n\"The Originals caused a plague?\"\n\n\"No!\" Brielle said hastily. \"No, we brought it on ourselves when we dug.\"\n\nThe timeline began to come together. The warning that Brielle referred to was something like an electromagnetic pulse, or EMP. When the colonists showed up they eventually got around to mining. The Originals, the ice-burrowing aliens native to Kaybe, had become alarmed that the colonists were mining in dangerous locations. Unable to communicate with the colonists, they had resorted to disrupting their electronics with the EMP, intending it to be a warning. But instead of heeding the warning, the colonists had minted tokens, each of which was imprinted with the code for a single piece of equipment or part. The mining must have resumed.\n\n\"So the plague had a natural origin?\"\n\n\"Natural and ancient,\" Brielle confirmed, \"from a time before even the Originals.\"\n\n\"What is wanted from me? Why was I rescued?\"\n\n\"Last time they couldn't talk to us, couldn't warn us of the danger.\"\n\nThey were finally getting around to it. \"And this time they think I can convince my people to stop digging?\"\n\n\"There's no one else, Alain.\"\n\nA silence hung between them. Sparr wanted to help, but the difficulty of the task couldn't be ignored. He had already failed once in his plan to gain access to the Odysseus camp, nearly getting killed in the process. It wouldn't be any easier the second time. \"Fucking drones,\" he muttered, more to himself than Brielle.\n\n\"The machines?\" Brielle was still watching him carefully.\n\n\"Yes. They'll be looking for me.\"\n\n\"They know of the difficulty,\" Brielle said, presumably referring to the Originals. \"They gave you this.\" She drew close to Sparr, pressing a small bundle into his hands. She explained its use.\n\nA hundred questions came to mind, but before Sparr could pursue even one of them, Chael dashed into the chamber. \"We have a problem.\"\n\nChael led them toward the surface, up half a dozen ramps through the ice and rock. Other chambers appeared to either side, some empty, some stocked with supplies. Ignoring them, the trio eventually found the massive main cave. Sparr had seen it a month past, standing at the rim with Chi, the Precipice priest. At the time he had been in awe of the cave's staggering size and perfectly circular opening. It was no less impressive from partway down, the wooden stairs toward the surface dwarfed by the immensity of the cave.\n\nNear the top, Chael gestured for Sparr to keep behind him. They peered cautiously over the rim. \"There,\" Chael said. \"Look.\"\n\n\"Son of a bitch,\" Sparr muttered. The drone hovered lazily over the Portal compound, not bothering even to stay high enough to avoid detection. Below, the compound was eerily quiet, with only the smoke of a cookfire to suggest that it was occupied.\n\n\"It's watching for you, isn't it?\" Chael kept his eyes on the drone.\n\n\"Probably,\" Sparr admitted, although he wondered how they knew where to look.\n\n\"And there's something else. A silver boat, low in the water like it's already half sunk. And a woman.\"\n\nSparr's heart sank. \"A tall, blonde woman?\"\n\n\"Yes, do you-\"\n\n\"Yes, fuck,\" Sparr said. Calista, in her submersible. He was eager to confront her, but on his terms, not hers. \"What is the plan for getting me out of here?\"\n\n\"There is a ship waiting. Your friend is on board.\"\n\n\"My friend? Tracee?\"\n\n\"Yes,\" Chael said. \"The woman from Neeva. The one with the glass eyes.\"\n\n\"Shit!\" Could the day hold any more surprises? A departure from the Portal with Tracee was appealing, but with Calista and the drone watching, it seemed like a longshot. How could he reach the ship with so many eyes on him? He turned the problem around in his head, restlessly.\n\n\"Can you get me any closer to the blonde?\"\n\n***\n\nSparr watched as Chael trotted down the stairs toward the Portal compound. The drone spun, swept to one side then the other, then settled back into its original position. Sparr and Brielle slunk back away from the cave entrance.\n\n\"I'll show you the way,\" Brielle said. \"It's a bit tight, but I think we can manage.\"\n\nThe pair retraced their steps, from daylight at the cave's mouth, back into the increasingly dim interior. As they went, Sparr once again had time to consider the countless questions pressing in on him. One tugged at his attention more urgently than the others.\n\n\"Brielle,\" Sparr began. Unlike the Translator, who hopped easily across both ice and stone, Sparr had to move with care. \"The animals on the surface. Do the Originals say how long they've been here?\"\n\nShe gave him a curious look. \"What do you mean? Different ages, I suppose. The seals have long lives. I'm not sure, but I think a hare is lucky to see five years.\"\n\n\"I meant,\" Sparr said, \"how long have the hares and seals been on this world?\"\n\n\"Oh.\" Brielle said nothing for several seconds as they descended a steep section. \"I don't know. It isn't part of the teachings.\"\n\nThe origin of Kaybe species had intrigued Sparr since he first learned they were near perfect genetic matches of Earth species. \"Can you ask them? Ask the Originals?\"\n\n\"Ask?\" The concept seemed never to have occurred to Brielle. \"We don't ask. We listen, and they teach.\"\n\n\"But you speak to them. You can ask if you want to?\"\n\nThey were back in one of the larger chambers that Chael had first led him to. Several of the Originals lay half burrowed into the ice, seemingly immobile. Whether they had come simply to feed, or if there was some social aspect to their behavior, Sparr had no idea.\n\n\"I can ask,\" Brielle said. \"You mustn't speak until I say so.\"\n\nBrielle took in a deep breath and slowly let it out, some air passing through her mouth, and some through her nose. Sparr listened, entranced, as the sibilant, alien sound filled the chamber. Some parts he could hear clearly, some were inaudible, too shrill or soft for him to perceive. After half a minute she once again took up the common tongue. \"I don't know if they will answer.\"\n\n\"Were you speaking to her?\" Sparr asked, indicating the closest Original.\n\n\"Hmm? Oh, no, it doesn't work that way. I spoke to all of them.\"\n\nWhile Sparr digested this latest piece of information, several of the younger Translators filed into the chamber, escorted by a priest. A few carried parchment and charcoal, others leaned casually against the Originals, using them as back rests.\n\n\"They don't mind that?\" Sparr asked.\n\n\"Oh, not at all. It helps us learn. It's like-\" Brielle stopped abruptly, raising a finger to ask for quiet.\n\nFrom nowhere in particular, the alien language swelled, receded, then rose again. Brielle listened raptly, lips just parted, eyes no more than slits. Once she responded, her voice a song, barely audible, its meaning unfathomable. Again, the language rose around them, and again Brielle sang out some new query. It reminded Sparr of a call and response from gospel music. Then, just before the sound at last faded, Brielle's eyes opened wide, shooting a meaningful glance at Sparr. She gestured for him to follow her.\n\n\"How did you know?\" Brielle asked, once they were out of the chamber.\n\n\"How did I know what?\"\n\nBrielle shook her head almost imperceptibly. \"The animals, both land and sea. We don't have a word for it.\" She furrowed her brow. \"A thousand thousand?\"\n\nSparr understood. The word million had no doubt been lost to the inhabitants of Kaybe. They seemed to have little mathematics, and no need for such a large number regardless. \"In my language we call it million,\" he said.\n\n\"A mill-ion,\" Brielle said, carefully sounding out the new word. \"The animals of this world have been here for seven million years.\"\n\nIt was even longer than Sparr's wildest guess. Seven million years was long enough for meaningful evolutionary differentiation. In addition to the almost-chickens and not-quite-figs he had sequenced, the planet must hold entirely new species as well.\n\n\"Did the Originals say how they got here?\"\n\nBrielle told him. As the pair descended, she answered his question, and many more. Sparr listened, astonished as the last few pieces of the Kaybe mystery unfolded like a flower.\n\n***\n\n\"I see her, yes!\"\n\nSparr and Brielle lay prone on the ice, outside the far edge of the Portal compound. From their vantage point they could just see the observation deck which marked the closest spot most visitors were allowed to get to the Portal. The ship which Sparr had intended to catch was still pulled alongside the dock. Much closer, the top hatch of Calista's sub glinted in the late afternoon sun.\n\nAnd there was Calista herself. Unlike Sparr, who had by necessity dressed himself in the robes, wraps, furs, and vests of the locals, his ex-lover dressed brazenly in a close-fitting thermal management suit favored by the Alliance. The garment would keep her warm on a glacier or cool in the desert, but did nothing to help her blend in.\n\n\"That's your friend?\" Brielle asked.\n\n\"I thought so.\" Sparr had dismissed the idea months earlier that Calista was anything like a friend. Still, seeing her here, standing on the rocky shore, fine blonde hair tossing in the breeze, it wasn't difficult to remember the attraction they had shared.\n\n\"There goes the other one!\" Brielle pointed to a petite figure jumping from the ship to the dock.\n\n\"Right on time.\" Sparr watched with mixed feelings as Tracee made her way toward the shore. If their plan went well he would be denied her companionship on the way to Neeva, but would arrive without notice.\n\nCalista also saw. She pulled a compact spotting scope from her pack and followed Tracee as she reached the shore then turned to walk along the beach away from Calista and the sub. Calista shifted nervously. She was, Sparr was certain, trying to decide whether to follow Tracee or remain near the ship. A few minutes later her decision became clear. Calista spoke something for the benefit of her implant. Seconds later the drone moved to follow Tracee down the beach. It was almost time.\n\nSparr wriggled back toward the narrow ice tunnel he and Brielle had emerged from minutes earlier. \"I can't thank you enough, Brielle.\" He tugged off all but his trousers, wrapping the gene sequencer and the rest of his clothing into an oilskin bag. \"Everything you and Chael have done for me, every question you answered.\"\n\n\"Will you have enough time to reach the others?\" By 'the others' Briell meant the Alliance camp.\n\n\"I won't be in a hurry,\" Sparr admitted. \"They'll know I'm coming anyway.\"\n\n\"There's a place,\" Brielle said, seemingly ready to share one final surprise. \"I should have told you earlier.\"\n\n\"Okay...\" Staying low, Sparr crawled to the shore, ready for yet another immersion in the frigid water.\n\n\"A cave,\" Brielle continued. \"A day's travel east from here. We call it the Museum. A cave like here, but much smaller. Just above high tide.\"\n\nSparr's interest piqued. Like many other words in the local tongue, museum was an imperfect translation. It could mean anything from library, to exhibit, to zoo. \"I can visit it?\"\n\n\"Yes,\" Brielle said softly. She looked over her shoulder as if uncertain whether what she was revealing was allowed. \"It isn't part of the teachings, but I have heard of it. From your questions I think you will find it,\" she hesitated, \"interesting.\"\n\n\"I'll look for it,\" he assured her. For all of her poise, Sparr had to remember that Brielle was only just making the transition from girl to young woman. The Precipice, the Originals, had placed an enormous burden upon her. \"Thank you again.\"\n\nWith no time to waste, Sparr slid into the icy surf. Using the oilskin as a float, he first kicked out away from shore, then turned back toward Calista and the sub. The chill water worked to weaken him, but he paddled vigorously, circling well clear of Calista before looping back toward the sub. He hauled himself halfway out of the water, clinging to the submersible's hull, using it as a shelter to hide from Calista's view. The hatch was closed, but not locked. Gingerly, he pushed it open and crawled inside.\n\nThis moment represented the riskiest part of the operation. Assuming Calista hadn't spotted him, he would have several minutes to figure out the sub and make his escape. After securing the hatch, Sparr dropped into the sub's main compartment. A swivel chair occupied the forward portion of the deck, facing a panel which was surely the command station. He touched the panel.\n\n\"Welcome to the Sea Otter,\" the display read, before fading to reveal a menu.\n\n1) Dive plan design and review\n\n2) Boat systems and status\n\n3) Remote operations and collection\n\n4) Diagnostics and maintenance\n\nSparr touched Dive plan design and review.\n\nA light flashed. Operator not recognized.\n\nHe tried Boat systems and status.\n\nStatus normal, the display read. Operator not recognized.\n\n\"Fuck!\" he grumbled. Of course the sub had some sort of authentication system. There had to be a way to override it. He pressed Diagnostics and maintenance. A menu appeared.\n\n1) Diagnostics level I\n\n2) System restart\n\nDesperate for anything that might grant him access, Sparr jabbed his finger at System restart.\n\nOperator not recognized.\n\n\"Hello?\" Calista's voice echoed through the cramped confines of the sub.\n\n\"Shit,\" Sparr muttered softly. His eyes raced around the cabin, looking for anything that might allow him to control the sub manually. There was only the control panel. Frantically, he selected Remote operations and collection.\n\nAll remote collection drones accounted for. Please authenticate to initiate collection operations.\n\n\"Alain!\" Calista's voice rang louder now, more certain. \"That's you, isn't it?\"\n\n\"Fuuuuuck, fuck, fuck.\" Again, Sparr's eyes swept the cabin. He had been certain there would be manual controls. Surely a touch panel wasn't the only way to operate the sub.\n\n\"You know how this ends, Alain. Why don't you just come out.\"\n\nHe knew how it ended. Whatever he and Calista had once shared had only ever been superficial. They had enjoyed athletic sex, but she had always kept him at a distance emotionally. Now he knew why.\n\n\"Seeker One return to station,\" Calista said, her voice grim.\n\nSeeker One must be the drone that she had sent to follow Tracee. Sparr had less than a minute.\n\n\"Goddammit!\" Sparr shouted. Frustration was rising to the surface, boiling over. \"God FUCKING damn this fucking, stupid sub!\"\n\n\"Personal distress detected.\" A soothing, female voice played from hidden speakers.\n\n\"Fucking right distress!\" Sparr bellowed. \"I'm about to get the fuck blown up!\"\n\n\"Voice stress confirmed,\" the voice continued. \"Safety override activated. What is your command?\"\n\nIt took Sparr a moment to even take a guess at what was happening. \"Get me the fuck out of here!\"\n\n\"Command not specific,\" the voice said.\n\n\"Come out now, Alain!\" Calista's words were cold, final. \"You can't control that sub and you won't get a second chance.\"\n\nThe sub was asking him for a command. Sparr struggled to master his fear. \"Ahhh, course north, straight north! Dive!\"\n\nThe sub pitched subtly, seeking its new heading. \"Diving,\" the oddly soothing voice said. \"Depth one meter.\"\n\n\"Shoot it!\" Calista must be issuing commands to the drone. \"Sink it. Fuck!\"\n\n\"Depth five meters.\"\n\nThe sub jerked as muffled explosions burst around it, potent shocks that roiled the water. Whatever weapons the drone was equipped with weren't effective against submerged targets.\n\n\"Depth ten meters.\"\n\nThe explosions subsided as the sub descended. \"Course zero degrees,\" the voice said. \"Unusual atmospheric disturbances detected. I suggest remaining submerged.\"\n\n\"No shit,\" Sparr muttered.\n\n***\n\nWhile the sub maintained the course Sparr had requested, he experimented with the voice interface. \"Disable location reporting.\"\n\n\"Location reporting is already disabled,\" the voice explained.\n\nOf course. Calista didn't want the sub's location traceable by the Alliance any more than Sparr did.\n\n\"Show map.\"\n\n\"Marine chart active.\" The screen lit with a detailed rendering of the southern continent's shoreline and ocean. In addition to showing his location, the chart had been updated with satellite imagery. Though labeled as a 'glacial anomaly', the Portal was clearly marked. Sparr chuckled. The closest thing he had come to a map during his journey had been a finely woven tapestry with stars representing the ancient cities.\n\nUsing the chart's interface, Sparr plotted a location fifteen kilometers to the east. Brielle had said the Museum was roughly one day's travel. He didn't know whether she had meant travel by foot or by ship, but fifteen kilometers felt like a good place to start. He set an easterly course, changed into his dry clothes, and began exploring the sub's cabin.\n\nJust aft of the command station, on the starboard side, was a tiny kitchen featuring a flip-down heating surface, sink, and bins for food pouches. Sparr counted more packs of noodles, fruit snacks, and breakfast burritos than he would need for his voyage. To port he found the sub's toilet, a collapsible bunk, and more storage bins. He rifled through them but found nothing of interest, only a few changes of clothing in Calista's size. There was no evidence that she had left a weapon on board.\n\nFarther aft, where the cabin narrowed, Sparr found an alcove containing the science terminal. The opening screen suggested that there were separate interfaces for both mineral and biological operations, but both were locked, and no amount of cajoling or contrived panic could grant Sparr access. An emergency evacuation suit hung nearby, as did a waterproof case. He discovered and pocketed a handful of DNA strips.",
        "\"Waypoint reached.\"\n\nAbandoning his excavation of the science nook, Sparr returned to the command station. The chart confirmed that he had gone fifteen kilometers. Sparr remembered something from an old movie. \"Surface to periscope depth.\"\n\n\"The Sea Otter is not equipped with a periscope.\"\n\n\"A porthole?\"\n\n\"The Sea Otter is equipped with external cameras.\"\n\n\"Activate cameras.\"\n\nThe top half of the command screen lit with a mosaic of equally dim, watery images.\n\n\"Surface to one meter.\"\n\nThe sub began to rise from its thirty meter cruising depth. At first the cameras revealed little more than indistinct blurs on the seafloor, but as the vessel rose the images became clearer. As soon as one revealed the late afternoon sky, he leveled off.\n\n\"Are there any machines nearby?\"\n\n\"The Sea Otter's passive systems do not currently detect any airborne, submarine, or surface traffic. Shall I switch on active monitoring?\"\n\n\"No,\" Sparr said quickly. \"Leave active systems off, follow the shoreline east, and set speed to ten kilometers per hour.\"\n\nSparr enlarged the view from the starboard camera, keeping it pointed at the shore and zoomed in. The optics and image stabilization were excellent. He could make out individual shore birds, scrub, and boulders.\n\n\"Can you look for caves?\"\n\n\"Yes,\" the voice said, \"pattern recognition can identify land features.\"\n\n\"Notify me if you spot any cave. And bring up the chart again.\"\n\nWhile the sub cruised slowly east, Sparr inspected the chart. Not only was it astoundingly detailed, there were several data overlays which revealed as much about what Calista had been up to as they did the topography of the planet. One overlay showed the planet's cities, towns, and roads. Another showed suspected colonist industrial sites such as mines and factories. And one revealed the entire history of where the sub had traveled.\n\nCalista had been thorough. In addition to cruising the shorelines of both the eastern and western continents, she had guided the sub into several marine trenches and up the larger rivers. Icons showed where she had launched drones, come ashore, and visited a sampling of the industrial sites. The sub was equipped to identify and sample aquatic animals. The drones must be programmed to do the same for surface species. The operation would have taken years to plan.\n\n\"Cave identified. Magnifying.\" The sub's pattern recognition software had spotted something.\n\nA cave, just as perfectly round as the Portal, but much smaller, filled the camera's field of view. He had found the Museum.\n\n***\n\nIf the Museum was built like the Portal, it relied on natural light for human navigation and therefore it was too late to go ashore. Instead, Sparr parked the sub on the ocean floor, ate a sad meal of reconstituted lasagna, and slept on the little bunk. The next morning, as Kaybe's mellow star rose, Sparr took the sub as close to shore as possible, surfaced just enough to expose the top hatch, and splashed ashore.\n\nUnlike the Portal, there were no wooden steps or walkways to help with the climb to the mouth of the cave. Fortunately, the distance wasn't great, and enough sand and gravel had been strewn across the ice to provide traction. In less than a minute, Sparr reached the rim of the cave and stepped within.\n\nIf it was a Museum, it wasn't one with many visitors. The floor had been worn flat in a few spots, but overall the site had a neglected feel. Sparr suspected more animals took shelter here than people. But at least the lighting was good. A dim but adequate glow filtered in from cracks in the ice above, just enough to bathe the walls and floor with a blue glow. Moving slowly to give his eyes time to adjust, Sparr pressed forward.\n\nThe way narrowed before passing through a round opening partially blocked by collapsing ice. Sparr put his hand out to steady himself, only to realize that the opening was made of metal. A hurried inspection revealed little detail. It didn't seem to belong, but farther in he saw further evidence that the Museum was constructed from more than just rock and ice. Vertical metal partitions intruded from both sides, mostly sheathed in ice, but with edges or corners visible in spots. Debris of some sort had become lodged in the gaps between the partitions.\n\nSparr stopped abruptly. Something about the debris caught his eye. He scraped away at the ice. The creature that lay within, its elongated body curled and twisted, resembled no Earth species. His heart racing, Sparr swabbed the animal and fed the strip into the gene sequencer.\n\nDecoding: 1% complete. The slow progress of the sequencer was a sure sign the creature was alien.\n\n\"Holy shit,\" Sparr gasped. He took a closer look at the animal. Though difficult to make out wrapped as it was in ice, the creature looked like a fat, burgundy-colored worm as thick as Sparr's forearm. Fine hair grew from rings each two centimeters apart along its length. He couldn't even guess what niche of the ancient Kaybe ecosystem it might have occupied.\n\nNot two meters farther along he encountered another creature, a segmented beetle-like animal with a wide, flat body and scores of brittle legs. He swabbed it, then took a moment to admire its disconcertingly unique appearance. Was it aquatic, or had it thrived in forested environments lost hundreds of millenia ago? Reluctantly, he moved on.\n\nThe place was a Museum, Sparr realized, a repository of long-extinct species. Or were they? From what Brielle had revealed to him, the planet was slowly transitioning from an unimaginably long ice age. Perhaps some of the animals here still thrived. Like the Originals, and the plankton they fed on, the other species were merely out of view. It would take a lifetime of research to determine.\n\nSparr continued his way along the passageway, stopping to swab a sleek, eyeless animal with fins along its entire length. Next he encountered a skeletal structure which might be an animal, or the home of some micro-organism which had secreted it like coral. A hard-shelled disc-shaped creature seemed all teeth, while a nearly featureless blob was so sticky that Sparr could barely retrieve the DNA strip. At least one fish-like creature had been entombed with a family of parasitic or symbiotic animals attached. Some alcoves held what were obviously animals, some clearly plantlike. Just as many defied categorization. Sparr swabbed them all.\n\nThe most cryptic animal was housed at the far end of the corridor. By the time Sparr reached it he had been collecting DNA samples for more than an hour, running short on strips even with the bundle he had grabbed from the Sea Otter's science alcove. The creature was six sided, with six sharp legs and six multi-jointed arms. Its head, if that's even what it was, appeared to be little more than a drooping stalk, covered with fine tendrils or hair. The animal's body shone, reflecting the light from armored, or at least rigid, plates.\n\n\"You're a hexa-crab,\" Sparr said softly. He had never seen such an odd creature.\n\nIt was time to head back. Sparr was reluctant to use the last of the DNA strips, and in any event he seemed to have reached the end of the Museum. By now the sun would be higher in the sky, making even the sub's narrow hatch potentially visible to a lucky satellite. He had underestimated the Alliance tech once, nearly getting himself killed in the process. He wouldn't make the same mistake twice.\n\nBack aboard the Sea Otter, Sparr initiated a dive, set course for Neeva, and programmed a leisurely pace. Along the way he would let the vessel hug the bottom of the sea, as far from satellite and drone imagery as possible. He wasn't in a hurry, and had plenty of DNA strips to sequence.\n\nThe brief visit to the Museum had yielded a jackpot. He had sampled more than enough different species to begin piecing together Kaybe's pre-Earth genetic heritage. It would far outweigh any previous finding, If he could ever get the data into safe hands.\n\n***\n\nThere was a mirror above the sub's cramped toilet. Sparr stood in front of it, trimming his beard, and trying to decide if he liked what Kaybe had turned him into. He went through the list, talking to himself as he scraped away at his whiskers.\n\n\"Pro - I'm in good shape. Con - I'm half covered in scars.\" That last part was an exaggeration, but the mirror only showed him from the chest up, and his right shoulder was visibly webbed with scars from the air car crash.\n\n\"Pro -,\" he continued, \"I've turned into a pretty good fighter. Con - I had to kill a bunch of people.\" In addition to the blood he had spilled in the gladiator arena his first few weeks as a captive, Sparr had also fought and killed bandits, petty criminals, and two waves of assassins. Sometimes he wasn't sure what bothered him more, the number of men and women whose lives he had taken, or the increasing ease with which he took them. He tried to drive away the uncomfortable thought.\n\n\"Pro - I've learned an enormous amount about Kaybe. Con - I'm not sure I'll ever get to share it.\" If he wasn't killed trying to reach the camp, and Calista and Kevin would certainly be trying their best to do so, he could reveal not just what he himself had turned up, but what Brielle had related as well. The Translator had answered most of Sparr's remaining questions, allowing him to stitch together what he had already learned. The story didn't disappoint. To be able to share the twin stories of Kaybe's biological and human history more than justify the tortured year he had spent on the planet.\n\n\"Pro - I've made love to many women. Con...\" Sparr trailed off, looking into his own dark eyes in the mirror. Was there a con, a downside to having enjoyed the company of more sexual partners in the past year than in the five previous? Certainly some of the encounters had stretched the definition of lovemaking. He had been forced at knifepoint to fuck a stranger while others watched, had drug-fueled rough sex as part of a show, and played the role of brute in a priestess' fantasy. There had been sweeter, more intimate moments as well, but most encounters on Kaybe skirted the hungry, raw edges of sexuality. And he had savored them all. Had that potential always been in him, or had the planet molded his appetites? Sparr allowed himself a smile. Did it matter?\n\n\"Destination reached.\"\n\nSparr finished shaving, put aside his self-critique, and went to the command station. He had asked the sub's autonomous systems to take him to the waters just outside of Neeva, the town nearest the Odysseus camp. After four days he was there.\n\n\"Bring up the marine chart.\"\n\nThe sub complied, displaying the gorgeously detailed map. Sparr zoomed in to his location, ready to plan his final approach. Neeva lay against the foothills of the north-south mountain range. A dozen streams ran through it before combining into a single canyon to the west. It was here that Sparr had been caught by the drones and shot down weeks earlier.\n\nThe canyon, with its violent, glacial river, didn't offer an approach to the camp, but another, gentler river farther up the coastline did. In fact, Sparr was confident the Alliance had chosen the site with access to fresh water in mind. How far upriver the sub could take him was another matter.\n\n\"Surface to camera depth.\"\n\nThe sub rose, as Sparr watched the cameras intently. However, well before they surfaced, the sub's voice assistant broke in.\n\n\"There is an encrypted call, and two data packages waiting.\"\n\n\"What? Stop, stop surfacing.\" Sparr's skin prickled with suspicion. \"What data packages?\"\n\nThe sub leveled off, twenty meters down. \"The first data package is a chart update.\"\n\nThat made sense. It had been roughly a year since Sparr lived in a world where software updates were an integral part of daily life, but he remembered the routine. Alliance satellites circled the planet, making continuous improvements to the charts. But Sparr had only been underwater for four days. What were the odds that a map update just happened to come along after he commandeered the sub? He chewed on the idea for a minute.\n\n\"How big is the chart update?\"\n\n\"One point one terabyte.\"\n\n\"And how big is the existing chart package?\"\n\n\"Seven point three terabytes.\"\n\nSomething was off. \"Can you back up the existing chart before downloading the update?\"\n\n\"Yes.\"\n\n\"Okay. Backup and download.\"\n\n\"Download speeds would be faster at the surface.\"\n\n\"No!\" Alarm jolted Sparr. \"Stay submerged.\"\n\nObeying his instructions, the sub stayed at depth while downloading and installing the update. When it was complete, the new chart filled the display.''\n\n\"What the fuck!\" Sparr laughed. The image presented was still ostensibly Kaybe, but almost all of the details had been stripped. There was no depth information, no latitude or longitude grids, no markers for cities, roads or colonist sites, and no sign of the Odysseus camp. Even the mountain ranges and coastlines were blurred. Calista and Kevin might just as well have written 'fuck you' on a blank piece of paper and uploaded it.\n\n\"Restore chart from backup,\" Sparr said, still chuckling. \"What's the second data package?\"\n\n\"The remaining package is an eighteen terabyte system software upgrade. Shall I download and install it?\"\n\n\"Fuck no!\" Sparr said. He laughed, but the ploy reminded him how thin his plan was. They knew he was arriving by sub, knew he was coming for them. Even if he was able to navigate the sub upriver, some trap would be waiting. It would be suicide. Sparr would have to find a different plan. As his eyes idly wandered the sub's interior, one came to him.\n\nSparr took the sub back an hour south, past the canyons and well away from Neeva. By now evening would be creeping over the Odysseus camp. \"Surface,\" he instructed the voice assistant. A few minutes later the sub lurched, slapped by the ocean swells.\n\n\"Answer the encrypted call.\"\n\nIt took several minutes before the call went through, before someone answered. When the line finally went active, Sparr was pleased to at last see Calista face to face. He jumped in before she could speak.\n\n\"Heyyy Cali,\" he said, injecting as much exaggerated fondness into his voice as possible. \"Great to see you! And I love, L-O-V-E love the warm reception you arranged for me here on Kaybe.\"\n\nCalista's face was tight. Wherever she was had poor lighting, but he could make out the wall of one of the Alliance prefabricated habitats. She had beaten him back to the camp. \"Look, Alain,\" she said, her voice tense and low. \"You can keep the sub. Fuck, I don't care. Keep it. But if you come back here you are dead. You have to know that.\"\n\n\"Aw, dead? Really? I mean, I was getting mixed signals from you, you know? Shooting me into space, sending those assassins, drones, ordering your own sub sunk with me in it... are you breaking up with me?\"\n\n\"You know what's happening here Alain, don't fucking pretend.\" Calista shot a glance to one side. Wherever she was, the blonde was afraid of being overheard.\n\n\"Yeah, I know.\" Sparr was enjoying the act, but wanted to get to the truth. \"I met our mutual friend Kevin. Money, Calista, seriously? You sold me out, hijacked my entire mission just to get rich? Gonna live in the beach house with Kevin? Maybe make some demented, murderous babies together?\"\n\n\"You know this has nothing to do with Kevin,\" Calista hissed. \"God, you're arrogant. Georgetown, Johns Hopkins, success on your first mission. You have NO idea what most of us go through. Do you even know that I have family in South Africa?\"\n\nSparr bit back his response. Earth was reeling from hundreds of years of plague and famine. A few countries were slowly pulling themselves up, but others were slipping. South Africa, with a dwindling population and shrinking economy, was barely hanging on.\n\n\"And Mineral will get them out for you.\"\n\n\"Yes, fuck! Do you get it now?\"\n\n\"What I get, Cali, is that you're hijacking the data that only my employer can use. What's Mineral going to do with DNA, sell it to the highest bidder? Hang on until things on Earth really go into the shitter to get a better price? What about everyone else in South Africa, on Earth? Those DNA sequences can mean solutions to plague and famine now!\"\n\nWhen Cali had no reply, Sparr kept going.\n\n\"Oh, and you know why I didn't know you had family in South Africa? Because you never told me! You never shared shit, never opened up to me. And you knew. You fucking knew, Cali! You knew you were going to kill me on day one.\"\n\n\"No!\" Calista snapped. \"No, that isn't true. We put you down in an escape pod. You had shelter and food. You were supposed to stay where you were!\"\n\nIt was the same phrase that Kevin had used, a self-serving justification for sending Sparr to an unknown fate. He considered arguing further, telling Calista how brutal his first weeks and months had been, how many times he'd come within a whisper of death. It didn't matter. He had confirmed his suspicions. There was little more to say.\n\n\"Well,\" Sparr said softly. His anger was already ebbing. \"Either way, thanks for the software update. You might want to tell wonder boy thanks from me, too. Oh, and Cali?\"\n\n\"What?\"\n\n\"I did like fucking you. All those times leading up to the mission. I won't lie, it was hot. So hot, in fact, that I'm going to come back and screw you over one more time.\"\n\n***\n\nSparr dove the sub, circled west, then began a long arc back north. His ploy with the software update might buy some time. He had no doubt that the update, if installed, would cripple or compromise the sub. If Calista believed he was planning to install it, she and Kevin might lower their guard. Regardless, he had remained surfaced long enough for the sub's location to be at least roughly estimated. They would expect Sparr to come from the coast. He wouldn't oblige them.\n\nWhile the sub slid through the ocean's darkest waters, Sparr prepared. In addition to the evacuation suit, the sub contained an emergency kit. He removed the signal beacon, then stuffed the pack with spare food pouches. The gene sequencer just fit into the waterproof case. Sparr had spent much of the voyage sequencing the almost one hundred native Kaybe species he had swabbed at the Museum. They represented a treasure of genetic information far exceeding what Sparr had even imagined just weeks earlier. He was ready.\n\nThe chart, after he had restored the real version from backup, was enormously helpful. After scouring the coastline imagery north of the Odysseus camp, Sparr found a marshy area thick with mangrove trees. At sunset the next day he nudged the sub into a grove, secured it, and climbed out.\n\n\"Sea Otter,\" Sparr grumbled. \"I told Calista she should have called you the Seadevil.\" He rapped his knuckles against the hull and got on his way.\n\nWhile the marsh provided a good hiding place for the sub, it was less welcoming to someone on foot. The mud sucked at Sparr's feet, roots seemed to reach up to trip him, and biting flies quickly found his ankles. Frustratingly, neither of the planet's moons appeared to light his way. As night deepened, Sparr was left with little choice but to slog blindly through the knots of trees and vines.\n\nHis efforts paid dividends. As the marsh thinned, Sparr found a dry stream bed heading inland. It offered scant cover, but he walked along it nonetheless, savoring the even surface. The night came alive around him as startled birds burst from cover, rodents chirped, and the wind tossed wiry grasses. Somewhere to the south Calista and Kevin waited, alongside the rest of the Odysseus crew. Would he find welcome and redemption there, or be imprisoned? Would he even reach them?\n\nMorning found Sparr just as he reached the foothills. Before it grew too light he found cover, made camp, ate, and rested fitfully. A cold rain swept around him, adding another layer of misery. When it passed and evening once again approached, Sparr resumed his journey south. It wouldn't be long now, he knew. The wide spiral he had taken, first by sub, then by foot, was coming to a close. Sparr scrambled over glacial valleys, scrub forest, and cool glens.",
        "It was still predawn when at last the electric lights of the Odysseus camp twinkled before him.\n\n***\n\n\"I'm not fucking waiting anymore,\" Sparr muttered. A thousand things might yet go wrong with his plan. He no longer cared. They could go wrong the next day, or right now. He scrambled another half kilometer south until he found the stream which became the camp's water source. Working quickly before dawn could expose him, Sparr undressed and slipped on the evacuation suit he had taken from the sub. He stashed his clothes and the survival kit. Taking only the waterproof case and the small bundle that Brielle had pressed into his hand a week prior, he eased into the water.\n\nEven protected by the evacuation suit, the water chilled him. \"This is easy,\" Sparr told himself as he floated toward the camp. \"You've submerged for longer than this in water just as cold, and without the suit.\" He periodically dunked his head, hoping to present a minimal thermal profile. The airspace over the camp would be swarming with drones. The farther he got before being detected the better his chances.\n\nAhead, the camp perimeter emerged from the gloom. Sparr could make out fencing carefully camouflaged to look like native growth. Both outside the fencing and within, he knew, stun turrets waited to neutralize any threat. Before he got too close, Sparr activated the CESA function of the evacuation suit. He dove.\n\nCESA stood for Controlled Emergency Swimming Ascent, a SCUBA self-rescue skill taught on Earth. In the case of the Sea Otter, the evacuation suit contained a simple respirator and a modest oxygen supply intended to aid self-rescue when a lungful of air wasn't enough. Sparr sucked in a breath and swam along the bottom of the stream.\n\nThe Odysseus engineers had been careful. The stream didn't just flow freely into the camp, it passed through bars sunk below the level of the water. But they had missed something. A rock had stopped the bars before they quite reached the bottom. Sparr tugged at the rock, then pushed it, twisting against the half-buried mass. He drew in another lungful of air and tried again. The suit wasn't designed for sustained use. At most he had another minute of air. Sparr gave another hard push. At last, grudgingly, the rock shifted. Before the bars could settle deeper, Sparr wriggled under and kicked free of the gate. He was in. The camp, his goal for the past year, was awaiting just above the waves.\n\nHe dared not surface. Instead, Sparr conserved his breath, allowing the stream to pull him farther into the camp. He concentrated, trying to recollect the layout of the camp as he had seen it from the air car. The command center should be to his left, just less than halfway into the camp. Sparr drifted for another thirty seconds, then, just as the suit ran out of air, he crawled to the bank of the stream.\n\n\"Shiiit,\" Sparr muttered softly. Nothing looked familiar. Instead of coming out near the command center, he had crawled from the stream on the outskirts of a residential area. Rows of low-slung dormitories stood before him, an athletic field behind. He hadn't floated nearly far enough into the compound. He began to weave his way through the housing, but it was dawn and a man in a dripping evacuation suit drew attention. A woman he didn't recognize appeared from a doorway, carrying an armful of clothing. She froze when she saw Sparr, her eyes blinking as if he was part of a dream she had yet to shake. A man sipping coffee stared at him with a flicker of recognition.\n\nFrom somewhere an alarm chirped, one of the drones announcing an intruder in the camp. Sparr picked up his pace, darting between buildings and the trivia of camp life - chairs, storage bins, and debris containers. He was lost and short on time. More figures appeared, ghostly in the still-dim morning light. A couple gawked at him from an open window. \"Isn't that-\" the man began, but Sparr was already past them. Where was the command center?\n\nThere! A landscaped central plaza led from the residential zone toward more official looking buildings. Two hundred yards of exposed space. He couldn't make it. He had to. Sparr ran, as more alarms went off behind him. A year of fighting, flight, and survival came down to a sprint.\n\n\"Intruder!\" Kevin stepped from one of the side buildings, energy pistol drawn. Two drones dropped from the sky to flank him, obedient pets. \"He's armed!\"\n\nKevin wouldn't let Sparr live, couldn't take the risk. Whatever he and Calista had done to frame Sparr might not hold up. The man would put a bullet in his brain rather than take the chance. As he ran, Sparr fumbled at the small bundle Brielle had given him. It will hurt, she had warned him.\n\nThe drones lit, their sensors training on Sparr. Kevin raised his pistol. Sparr squeezed the bundle. The world tore apart.\n\nIn his hand, the tiny creature that Sparr had carried with him for a week sang out a sweet, shrill song. The drones went dark, falling to the ground, lifeless chunks of metal and glass. Pain erupted in Sparr's neck and ear, his implant going haywire, dying with a shriek.\n\n\"Fuuuck,\" Kevin screamed. Like Sparr, he clutched at his ear frantically, fingers digging uselessly against his own flesh. The EMP emitted by the tiny creature had a limited area, but it was enough.\n\nDisoriented from the pain, Sparr staggered forward. Seconds earlier the space had been lit by a row of lights. Now they were dark. The faint hum of machinery, air handlers and power converters, had died. It was silent. He didn't break stride, closing the gap between him and Kevin as quickly as possible. Kevin raised his pistol, pulled the trigger, and stared dumbly as nothing happened. Sparr crashed into him.\n\nThe men fell to the ground in different directions, Kevin to his back with a thud, while Sparr stumbled to the side before dropping. Pain seared through him, the still tender lacerations on his shoulder reminding him that it had only been two weeks since the air car crash. Sparr hauled himself to his feet, already looking for the door to the command center. It must be the building at the very end of the path. He lurched forward.\n\nKevin's kick slammed into his back, missing the spine, but knocking Sparr forward and sending another wave of pain through him. Sparr drew in a ragged breath and turned. Kevin was already charging him. Sparr threw a punch but Kevin blocked it with tidy, martial arts expertise before landing a punch of his own. Sparr grunted, stumbling back.\n\nThe two fought, mostly Sparr trying to get close enough to land a punch while Kevin efficiently blocked and jabbed back. Sparr was taller and stronger, but was injured. Plus, Kevin had trained in martial arts. Sparr had watched him in matches, his style carefully calculated to avoid taking hits. Kevin would dance and feint, keeping clear of his opponent until he saw an opening.\n\nSparr took another blow, a kick to his shoulder which he only partially deflected. Kevin smiled, noticing Sparr's sharp reaction to the blow. He shifted his strategy, now circling to attack Sparr's right side. With another good kick he might be able to disable Sparr's arm.\n\nThe strategy presented an opportunity for Sparr. He threw a punch, then lowered his arms, ready to shift his weight. Kevin spun, throwing his weight into a kick aimed high. Sparr was ready. Before the blow arrived he was already leaning into it, clutching at Kevin's leg while driving his own weight forward. He absorbed the kick with a grunt, but latched onto Kevin's calf. For a moment the two teetered precariously, but Sparr's greater weight and momentum carried him forward. He drove Kevin against the ground, twisting his knee against the packed soil.\n\nKevin hissed in pain. He thrashed, trying to free himself, then thrashed again, this time pulling his leg clear. It was too late. Sparr loomed above him, his greater strength and weight once again an advantage. He punched, knocking away his opponent's flailing arm.\n\nAnger and pain welled up in Sparr. \"This,\" he said, cracking his fist against Kevin's nose. \"Is.\" He punched the man's neck. \"For.\" Another punch to the face. \"Bogg!\" Sparr's final blow slammed into Kevin's jaw, snapping his neck to one side and sending a spray of blood into the air. The man lay still, breathing, but unconscious. Sparr staggered to his feet.\n\nThe altercation had drawn attention to the little plaza, Alliance crew emerging from their homes or workspaces. Before more security could arrive, Sparr grabbed the waterproof case and bolted toward the command center. He burst inside.\n\nTo Sparr's enormous relief, Captain Fowler was an early riser. He stood at an augmented reality worktable, alongside the mission's chief anthropologist, Melissa Carpenter. Both looked up, at first in annoyance with the intrusion, then with incredulous expressions. \"Alain fucking Sparr,\" Fowler said.\n\n\"Yeah,\" Sparr said, his voice ragged with exertion. \"Sorry I'm late.\"\n\n\"Shit!\" A junior officer who had been hanging back pulled his pistol.\n\n\"No,\" Sparr said, raising his hands. \"Please, I'm unarmed. And whatever you think I've done, whatever you've been told, I didn't do it.\"\n\n\"In all my days,\" Carpenter muttered. She began to back away, looking nervously between Sparr and Fowler. Another security specialist burst through the door, adding to the number of pistols aimed at Sparr.\n\n\"Search him.\" Captain Fowler was addressing the security specialist, but his eyes were locked on Sparr.\n\nThe specialist patted Sparr down, and waved a detector over the baggy evacuation suit. She examined the waterproof case, pulling out the gene sequencer and bundle of DNA strips. \"He's clean,\" she said, \"but Kevin is down. Just outside.\"\n\n\"Happner?\" Fowler raised his eyebrows. \"You must really have wanted to see me.\"\n\n\"Yes, it's pretty important. I'd like permission to do my job.\"\n\n\"Your job,\" Fowler said, flatly. \"You finally, after a year, want to start analyzing the planet's plant and animal life?\"\n\n\"I've already started, but yeah, I'd like access to my equipment, the lab aboard the Odysseus. I have data I'm ready to-\"\n\n\"Whoa, slow down,\" Fowler cut in. \"You aren't going back aboard my ship. When you leave this room you'll be escorted to a cell.\"\n\n\"I told you,\" Sparr said. \"I don't know exactly what I'm accused of, but I didn't do it.\"\n\n\"Accused of?\" Fowler shook his head in amazement. \"Here's what you're accused of.\" He whispered a command to his implant before directing Sparr's attention to a screen. There was no sound, but the video which played next didn't really need it. The first scene showed Sparr loping through the corridors of the Odysseus, seemingly in a hurry. In the next clip he stopped at an emergency rendezvous point. Next, Sparr could clearly be seen entering one of the escape pods. In the final clip, taken from a camera outside the ship, the pod blasted out into space.\n\nSparr's heart sank. \"That was a game,\" he said weakly.\n\n\"You and I have different ideas about games then,\" Fowler said bitterly. \"That stunt, the alarm you triggered, turned the first half of this mission into a complete clusterfuck.\"\n\nTracee had already shared the details of the Odysseus's arrival. The false alarm resulted in most of the crew emerging prematurely from cryo-sleep. The accelerated arrival protocol hadn't gone smoothly.\n\n\"I mean it's a game we played during our tour of the Odysseus. Your game,\" Sparr continued.\n\n\"I didn't authorize any games! The Odysseus is a science vessel, not a playground.\" Fowler had, during mission preparation, always shown a tolerant side. That trait must have burned away during the difficult arrival.\n\n\"It was Kevin. He gave us each a list of places to visit on the ship.\" Sparr began to realize how hollow the claim sounded, but he forged ahead. \"The clips from the video, they're all places Kevin directed me to.\"\n\n\"Kevin Happner? Your friend?\"\n\n\"We're not friends.\"\n\n\"I can confirm that,\" the security specialist said. \"Looks like Alain rang his bell pretty good out there.\"\n\nFowler ignored her. \"So what other non-friends played this game?\"\n\n\"Calista Brandt and Tracee Rask.\"\n\nFowler's expression darkened. \"Well, Rask is another one we've lost track of, but Brandt is around. We can confirm with her, or are you going to tell me she was in on it, too?\"\n\n\"Well, yes, in fact.\"\n\n\"Oh, for the love, Sparr!\" Fowler threw up his hands. \"The absolute worst-kept secret on this mission was that you and Ms. Brandt were having a fling. Now you're telling me she and Happner are both out to get you?\"\n\n\"They're working together, yes. How long has it been since we arrived? Has it been one year yet?\"\n\n\"Two days ago.\"\n\nSparr cursed inwardly, doing quick math in his head. It would be achingly close. \"And did Calista already file a claim against the biological rights on Kaybe?\"\n\nFowler said nothing for several seconds. Was he already putting the pieces together? \"It's been more than a year, Sparr. She's perfectly within her rights to do so.\"\n\nFowler was referring to the way that Alliance contracts were written. When a corporation such as K2 Genetics purchased the rights to a planet's resources they had one year from the time their representatives reached the planet to make a claim. If it took longer than that, the rights would no longer be exclusive. Anyone could make a claim.\n\n\"Well don't you think it's suspicious that she was ready to go on day one? I mean, K2 Mineral isn't supposed to be looking for DNA. Why would she be so ready to make a claim? Why did she even have the equipment to collect DNA in the first place?\"\n\nBefore Fowler could respond, Calista burst into the room. Her eyes located Sparr immediately. \"I heard you'd come skulking back.\" She turned to Fowler. \"Why isn't this man in chains?\"\n\nThe Captain eyed Calista coolly. \"I'll take Mr. Sparr into custody when I determine it is time to do so.\" He kept his eyes on hers. \"May I ask if you have a personal interest here?\"\n\nCalista stiffened. \"Well, yes,\" she said carefully. \"I mean, not a personal interest, but that of my employer.\"\n\n\"Right,\" Fowler said. \"Your genetic claim on the behalf of K2 Mineral.\"\n\nOnly an infinitesimal nod hinted that Calista had even heard him.\n\n\"Ms. Brandt, would it surprise you that Mr. Sparr here has been telling some interesting stories?\"\n\n\"No, it wouldn't,\" Calista said quickly. \"Don't believe a word this man says. We all know the charges against him. He'd say anything to slither free.\"\n\n\"Were you and Mr. Sparr in an intimate relationship prior to the Odysseus's arrival at Kaybe?\"\n\n\"I don't understand these questions,\" Calista said. She was rallying. \"Am I on trial here?\"\n\nFowler shrugged, allowing a note of fatigue into his expression. \"No one's on trial here, Calista.\" He rubbed his eyes. \"But I have a mission to run, a ship in orbit, and hundreds of personnel depending on me. This is one distraction I'd like to put behind me as quickly as possible. Do you agree?\"\n\n\"Absolutely!\" Calista said, with just a touch of posturing. \"Whatever is best for the Odysseus, and for Earth.\"\n\n\"And what about you, Mr. Sparr? Feel like getting this done?\"\n\nSparr nodded. \"I just want to get back to work.\"\n\n\"Okay,\" Fowler said. He spoke into his implant. \"Legal, Comms, get to command. This is Fowler.\"\n\nFor several minutes the group remained mostly static, Calista pretended to be confidently indifferent, while Sparr tried to ignore the guns pointed at him. Captain Fowler found a cup of coffee. It wasn't until the new arrivals showed up that the dynamic in the room changed.\n\nSparr recognized Charlotte Li immediately. The willowy, almost severe communications officer carried herself with unflinching style and grace. Her greying hair was carefully trimmed, voice precise, and attire unfailingly glamorous.\n\nKabir Bhatt was more of a mystery. The plump chief counsel gave off an aura of serene contentment, but little more. Sparr had no idea if he might be an ally or hindrance.\n\n\"Kabir, Charlotte,\" Fowler began. \"Thank you for joining us. I believe you both know Calista Brandt, the mission specialist from K2 Mineral. And perhaps you will remember our long-missing mission specialist from K2 Genetics, Alain Sparr.\"\n\nBoth of the new arrivals nodded carefully, their eyes lingering on Sparr. He knew he would be an object of interest, especially so given his unkempt appearance and battered frame. What, he wondered, would they see in him? Was he a violent brute, or a victim? He wondered that himself sometimes.\n\nFowler provided background, then began to question Charlotte Li, the communications officer. \"Charlotte, I understand you've received a transmission packet from Ms. Brandt.\"\n\n\"That is correct,\" Charlotte said, consulting her data pad. Her posture was perfect, the lines of her suit crisp. \"Two days ago.\"\n\n\"Do you know what the packet contains?\"\n\n\"No. The data are encrypted. However, the packet was labeled 'K2-136-b Genetic Sweep'. I can surmise that the packet contains DNA from this planet.\"\n\n\"Right,\" Fowler said. \"How much DNA is represented in the packet? How many different species?\"\n\nLi pursed her lips. \"I'm not certain. I would have to research how much data it takes to represent a single species.\"\n\n\"Two gigabytes,\" Sparr said. \"There is some variation, but two gigs is a good average.\"\n\nLi eyed him, but didn't seem to take offense. \"That's less than I would have guessed,\" she admitted, before returning her gaze to Fowler. \"Assuming what Mr. Sparr says is true, the data packet contains tens of thousands of species.\"\n\nSparr sucked in his breath, startled by the number.\n\n\"It's mostly bacteria and insects, I'm sure,\" Calista said. \"We weren't intentionally collecting DNA.\"\n\n\"And how does one accidentally collect tens of thousands of DNA samples if you're looking for rocks?\" Sparr asked.\n\n\"Minerals,\" Calista shot back, her face tight.\n\nFowler raised his hand, asking for quiet. \"Fine. Now, Kabir, the Alliance contract written for K2 Genetics, does it have a one year exclusionary limit?\"\n\nBhatt rocked forward, smiling blandly. \"Yes.\"\n\nWhen the chief counsel added nothing more, Fowler continued. \"So as of two days ago anyone could submit a claim against Kaybe genetic material?\"\n\n\"After one year anyone may submit a claim.\"\n\nFowler grimaced, clearly vexed. \"Is that a 'yes'? Can anyone, as of two days ago, submit a claim?\"\n\nBhatt's expression stiffened somewhat. \"That is a broad question. I would need a specific example in order to offer counsel.\"\n\n\"I thought I had provided... oh, never mind.\" Fowler rubbed his face. \"So Li, are you ready to send the packet?\"\n\n\"Wait, wait,\" Calista broke in. \"I submitted that packet two days ago and you haven't sent it yet?\" She was incredulous.\n\nLi smiled at Calista with icy politeness. \"Ms. Brandt, I run communications for this mission. Your packet is quite large, and subspace bandwidth is limited. Your data will be transmitted in turn, if that pleases you. In any event, a universal timestamp was placed on the packet the moment you submitted it. Whether it takes another minute or another week, the legal record will reflect the time it was received, not just when it was transmitted.\"\n\nWhile Calista choked back her indignation, Fowler continued. \"So, this is where we stand. Legal counsel is surprisingly reticent on the matter, but it has been more than three hundred and sixty-five days since we arrived. Ms. Brandt has a packet of DNA sequences ready to transmit, but Mr. Sparr has raised doubts about the conditions under which she has obtained those data. So the question for Mr. Sparr is, do you have any concrete objection, or can we send the data and move on?\"\n\nSparr was ready. \"I maintain my objections about how the data were collected,\" he began. \"I don't believe Ms. Brandt and her partner Mr. Happner have acted within the law, or even within the boundaries of human decency. Given sufficient time I believe I could make my case that they have actively attempted to subvert Alliance law, not to mention trying to kill me. However, in the interest of what is best for Earth, I won't object to sending the DNA packet.\"",
        "Bhatt raised his eyes sharply when Sparr mentioned the murder attempts, while Li gaped in astonishment. But it was his one-time lover who provided the most telling reaction. As soon as Sparr yielded, Calista's face lit up in smug satisfaction. She was obviously less worried about being labeled a murderer than whether or not she could collect her payday from K2 Mineral.\n\nFowler was no less surprised than the others. \"Any conditions?\"\n\n\"I have two,\" Sparr said. He pointed toward where his gene sequencer had been placed on the table. \"The first is that I am allowed to send my own, much smaller, DNA package. The second is that we do this now.\"\n\nCalista was already leaping forward. \"Oh no,\" she said. \"No, I already submitted my claim. You're not jumping in front of me!\"\n\n\"Chill,\" Sparr said. He shook his head. \"Li already explained that your data is in the queue. I only ask that my data be sent immediately after.\"\n\n\"Any problem with that, Charlotte?\" Fowler asked.\n\nLi tapped on her data pad. \"No,\" she said. \"I was waiting for the latest map updates to go through, but they just wrapped up. We can send Ms. Brandt's packet next.\" She turned to Sparr. \"You said your packet is smaller?\"\n\n\"Considerably so, yes. At most two hundred species.\"\n\n\"Two hundred?\" Calista snorted.\n\n\"Well, I might have been able to collect more if I hadn't been dumped into space without a sequencer.\"\n\n\"Let's stay on track,\" Fowler cautioned.\n\n\"Okay,\" Li said softly. She was still working on her pad. \"Ms. Brandt's data are being sent now. I've paused other traffic so the transmission will complete as quickly as possible. I'll also need Mr. Sparr's data.\"\n\nWith the security specialist watching him closely, Sparr attached the sequencer to the camp's network and uploaded the DNA data first to his account, then to the queue for subspace transmission.\n\n\"I see it,\" Li confirmed. She touched her tablet again. \"Timestamps are set. Your data will transmit following Ms. Brandt's.\"\n\n\"I don't get it.\" Melissa Carpenter, the chief of anthropology, had been standing back, but now addressed Sparr. \"You say that you weren't the one who set off the false alarm, that Calista and Kevin did, and that they also tried to kill you.\"\n\n\"They did,\" Sparr said.\n\n\"Then why let their claim go through first? Why not fight it?\"\n\n\"Because he's lying,\" Calista said, her smug expression plain.\n\n\"Earth needs the DNA to explore new cures and crops,\" Sparr continued. \"If I fight it, how long will it be tied up in the courts? Plus,\" he said, \"hers isn't a legal claim.\"\n\n\"It's been a year,\" Calista said with an exaggerated sigh. \"The contract is non-exclusionary now.\"\n\n\"It hasn't been a year.\" It was Sparr's turn to allow a touch of smugness to enter his voice. \"It's only been three hundred and sixty-seven Kaybe days.\"\n\n\"Did you go native for so long that you've forgotten that a year is only three hundred and sixty-five days?\"\n\n\"On Earth, yes, but Kaybe days are shorter by twelve minutes. You keep forgetting that.\"\n\nCalista just stared at him, but Bhatt punched the numbers into his data pad. \"Mr. Sparr is correct. On Earth only three hundred and sixty-four days have passed since we arrived. Your employer, no doubt, is wondering why you sent your claim early.\"\n\n\"But you said it's been a year already!\" The blonde was starting to get agitated, her earlier smugness melting away.\n\n\"I said no such thing,\" Bhatt replied indignantly. \"In any event, you were the one who submitted your data without consulting Legal.\"\n\nSparr couldn't help but smile. \"Don't get too worked up about it, Calista. You probably didn't send back a single piece of alien DNA anyway.\"\n\n\"That packet contained tens of thousands!\"\n\n\"Of Earth DNA. Cali, did you even bother to analyze the data you were gathering? Insects, birds, mammals, amphibians, bacteria... didn't you ever wonder why the animals here are all so much like life on Earth? They're from Earth!\"\n\nWith those in the room looking on with disbelieving expressions, Sparr related what Brielle had explained to him less than one week earlier.\n\n***\n\n\"I don't know for how many millions of years the Originals have been around, but it's been longer than life on Earth. They aren't even native to Kaybe, but they've lived here long enough to have evolved and adapted to the planet. Their home is in the ice, which is why neither we nor the original colonists spotted them at first.\"\n\nMelissa Carpenter spoke up. Like the others, her face was a mask of astonishment. \"You've made contact with a sentient alien species?\"\n\n\"Sort of.\" Sparr explained that the Original's language was impossible for adults, and how he had relied on Brielle as a translator. He resumed.\n\n\"But their planet is changing. Like Earth, Kaybe goes through warming and cooling cycles. It has been warming for millions of years, creating an ever-expanding temperate zone. When that began to happen they looked to Earth for plants and animals to fill the gap.\"\n\n\"They've been to Earth?\" Fowler asked. Despite an overabundance of theories, it had never been proven that aliens had visited Earth.\n\n\"At least twice. Once either during routine exploration or looking for a new home. The second time to bring back species for Kaybe.\"\n\nThe room went silent, those present either disbelieving or so overwhelmed with Sparr's revelations that they were left speechless. He remembered the feeling well.\n\n\"So the animals we've seen here are really Earth species?\" Melissa Carpenter was the first to break the silence.\n\n\"Yes,\" Sparr said. \"There are no doubt more than a handful of new subspecies, and perhaps entire new species, but for the most part you're seeing plants and animals not too different from those on Earth, at least the ones that aren't extinct.\"\n\n\"But why?\" Carpenter continued. Sparr had no idea what she and Fowler had been discussing when he broke in on them, but it was long forgotten. \"Why would the Originals bring species from Earth? Why not just wait for evolution to work its course here on Kaybe?\"\n\n\"They knew we'd come. The Originals looked at Earth primates and figured it out. They knew intelligent life would emerge on Earth, and that at some point we'd explore space. Leaving another habitable planet was their way of paying it forward.\"\n\n\"This is all such bullshit,\" Calista cut in. \"There aren't any aliens here. Anyway, how would you know? You cataloged what, just two hundred species?\"\n\n\"Oh Cali,\" Sparr said, shaking his head. \"You don't realize how close you were. Here.\"\n\nWith permission from Fowler, Sparr connected the room's screen to the powerful DNA analysis software back on his lab aboard the Odysseus.\n\n\"You're right, Cali, I only cataloged around two hundred species. Here's one I cataloged on the eastern continent. I'm guessing you did the same.\" The screen displayed the familiar double helix of DNA alongside an image of a chicken. \"The Kaybe version is adapted for the color of foliage, and the habits of certain predators, but it's a chicken.\"\n\n\"They're just similar,\" Calista grumbled.\n\n\"Yes, but when you were there on the ice, you were so close to this.\" This time Sparr pulled up one of the sequences taken from the Museum.\" His portable sequencer could only collect data. The much more sophisticated software package in his lab would dive into the structure. He watched the display with fierce interest as the system visualized the DNA. It was a marvel, still a double helix, but packed with more bases, and containing many more base pairs. It would take years of study to understand, but the alien DNA was considerably more complex than that on Earth.\n\n\"And that's just one segmented worm embedded in ice,\" Sparr said. He was practically giddy with the discovery. \"Oh hey Calista, speaking of ice, how did you get here from the southern ice before I did?\"\n\n\"We have shuttles, remember? Unlike you I can just call for a ride.\"\n\nSparr said nothing. He just grinned at Calista, wondering how quickly she would realize her gaffe.\n\nFowler caught it first. \"Wait, you two were together before we sent that shuttle?\" His eyes bored into Calista.\n\n\"Huh? Oh.\" Calista suddenly went stiff. \"No, I mean, I was surveying there, but I didn't see Mr. Sparr.\"\n\nSparr snorted. \"Let me guess,\" he said, \"you told them the sub went haywire, or sank or something?\"\n\nCalista shot Fowler a nervous glance before turning to Sparr. \"It had a control malfunction,\" she said.\n\n\"Your sub is in a mangrove habitat northwest of here,\" Sparr said. \"There's no malfunction.\"\n\n\"And how do you know that?\" Fowler asked.\n\n\"Because I stole it.\"\n\nIf the confession surprised Fowler, he didn't let it show. He addressed Calista. \"It sure sounds like you two ran into each other. Why didn't you tell anyone?\"\n\nCalista hesitated, trying the lie on for size before she released it into the wild. \"I didn't see him,\" she insisted, \"but I suppose I shouldn't be surprised he's behind the Sea Otter's disappearance.\"\n\n\"And what about you, Mr. Sparr?\" Bhatt seemed more intrigued by the theft of the sub than he had been by the discovery of alien life. \"You say you stole the sub. Why didn't you call for help once you were on board?\"\n\n\"I've been attacked by drones several times already, including less than one week ago when I liberated the sub from Calista. I had no intention of giving away my position.\" Sparr turned his attention to Captain Fowler. \"Captain, do you have someone you trust, someone besides Kevin Happner, who can review drone logs?\"\n\n\"Yes.\"\n\n\"I'll give you dates and places,\" Sparr said. \"I suspect you'll find either that military drones were used, or that logs have been deleted. Oh, and I bet there are at least two military drones that are unaccounted for.\"\n\nBhatt nodded somberly. \"You've made some serious accusations, Mr. Sparr. If you're correct the entire crew will have to rethink what we've been told about you.\"\n\nBhatt conferred with Fowler, but Carpenter had more questions. \"There's something I don't understand, Mr. Sparr. Everything we've seen suggests that the colonists at some point gave up on their technology, fled the cities, and regressed to an agrarian economy. While what you've said about alien life and Earth species is astounding, it doesn't seem to explain the actions of the colonists.\"\n\nSparr sagged with fatigue. The bruises Kevin had given him were starting to make themselves felt, tender patches beneath the evacuation suit. His adrenaline, which had peaked while sneaking into the camp and during the fight, now subsided. Sparr had focused so much of his energy for so long to reach the camp, but he still couldn't exhale.\n\n\"The colonists got set up and started drilling for minerals. They needed the materials to fabricate homes, farming equipment, vehicles, and tools. But life on Kaybe is ancient. In addition to the Originals, which they had missed entirely, there are still traces of life from previous ages. Mine deep enough, in the wrong places, and you'll find ancient microorganisms.\"\n\nCarpenter nodded cautiously. \"So they dug up a plague?\"\n\n\"Not at first. The Originals knew the risk and tried to warn the colonists by setting off something like an electromagnetic pulse. The strike disrupted the colonists by scrambling their computers, but instead of slowing down, the colonists plunged ahead. They rebuilt their systems and also began minting the tokens now in use as currency. The tokens are capable of surviving an EMP, and were seen as a precaution in case another strike hit them.\"\n\n\"So the second time was the charm?\"\n\n\"Yes,\" Sparr sighed. \"Eventually they hit a mineral pocket containing traces of the plague. It ravaged their population. I suspect the EMP had already planted suspicions between different colonist factions. When the plague hit, their society fractured. The cities were gutted and abandoned. The only written language was stored on computers; they had no printed books or even paper. Writing was probably lost within a generation.\"\n\nCarpenter swore. \"Those poor bastards,\" she muttered.\n\nSparr sought out Fowler. \"Captain, I don't know how much mining has been authorized, but it has to be shut down. The entire crew, not to mention the surviving colonists, are at risk. Everyone.\"\n\nThe captain, despite having enjoyed a full night's sleep, already looked tired. He let out a long sigh then spoke into his implant, ordering several more Alliance officers to join them. He rubbed at his eyes.\n\n\"Sparr, there's a lot of evidence that you've gone rogue here, for whatever reason. It isn't just the footage from the false alarm. We have stills of you destroying at least one drone, and you've outright confessed to hijacking that sub.\"\n\nSparr said nothing. He was beyond arguing, and in any event, was sure that whatever lies Calista and Kevin had woven would fall apart under scrutiny.\n\nFowler continued. \"But you've raised enough doubt here to merit further consideration. You're not under arrest, but you'll be confined and observed. Any attempt to leave the camp will be seen as a sign of your guilt. Now, go get some sleep. You look like hell.\"\n\n\"Captain Fowler!\" Calista yelped in protest. She had become increasingly distraught, watching first as Sparr revealed that her claim wouldn't hold up, and then as he chipped away at the accusations against him.\n\nFowler cut her off with a glance. \"He isn't going anywhere, Ms. Brandt. And for that matter, neither are you or Mr. Happner. We'll sort this all out, but for now the three of you will remain in the camp. Just try not to kill each other.\"\n\nEscorted by a security specialist, Sparr allowed himself to be led from the command center into the warm light of a Kaybe morning. He drew in, then released, a deep breath. The threats against him were slipping away, weakening. Not only had he finally reached the safety of the Odysseus compound, Calista and Kevin were no longer a danger to him. They might never be charged with their crimes, but neither would they profit from them. And they would no longer dare to attack him.\n\nHe could rest.\n\n***\n\n\"Lie still, Mr. Sparr! Your therapy isn't complete.\"\n\nSparr lay on his back in the camp's clinic, half naked and impatient. After four days of being partially wrapped in scar treatment bandages he had watched with a blend of curiosity and relief as Tracee had peeled them away. Beneath, the skin of his right shoulder emerged smooth and pink.\n\n\"Your recovery is coming along nicely.\" For her part, Tracee had forsaken the Alliance standard anti-microbial lab suit in favor of an outfit which might have taken its inspiration from an erotic holo-vid. A pair of tight shorts showcased her round ass and compact but shapely legs. Tracee's plain white blouse might almost have passed as a professional garment, except she had unbuttoned it halfway down and clearly wasn't wearing a bra. Sparr kept getting distracted by glimpses of inviting female flesh.\n\n\"So am I cleared to return to duty?\"\n\n\"Mmm, no. Not. Quite. Yet.\" With contrived clinical detachment Tracee opened the disposable exam gown. \"We have to check all of your... oh.\" She brushed her fingers lightly along his penis. \"I remember this guy.\"\n\n\"'This guy'?\" Sparr chuckled. \"Is that a medical term?\"\n\nTracee's cybernetic lenses were designed to mimic the appearance of natural eyes by widening in surprise, narrowing in harsh light, and looking from side to side when reading. They now helped her simulate mild offense. \"How about you be the patient and I be in charge of your care?\"\n\n\"Are you also in charge of locking the door?\" Sparr had known the moment he saw Tracee's revealing outfit that she had a repeat session in mind.\n\n\"Yes. Observers are strictly forbidden.\" Tracee stroked him again, watching as his organ began to swell. She had arrived at the camp one week after he had, courtesy of a ship from the Portal, herself relatively healthy given her months in captivity. \"Alain junior seems to have come through your adventure unscathed.\"\n\n\"Aren't you supposed to be checking my scars?\" Sparr let his hand wander to Tracee's leg, exploring the soft skin at the top of her thigh.\n\n\"Yeah yeah, those are fine,\" Tracee said dismissively. \"And so is this.\" She lifted his organ, gave it a squeeze, then popped it into her mouth.\n\nSparr groaned, soaking up the pleasure of Tracee's soft lips on his organ. \"Yeah, that's good.\"\n\n\"Tell me,\" Tracee said, pulling her mouth free, \"did you have any other sexual adventures since last we met?\"\n\n\"Mmm, I might have.\" When Tracee and he had been briefly reunited a month earlier Sparr had described his adventures, including those with some of Kaybe's more sexually inclined women.\n\n\"Yeah?\" Tracee said, seemingly unbothered by the admission. \"Tell me.\" Her tongue found his balls.\n\n\"Mmmh. Well, the tribe that rescued me-\"\n\n\"The tribe of hot Asian huntresses?\" Tracee broke in.\n\n\"Hooo,\" Sparr gasped. Tracee was performing skilled work on his sack, her tongue teasing and circling his balls while short brown hair tickled his thighs. \"Yeah, them. They wanted me to put on some kind of show for their leader.\"\n\n\"Let me guess.\" She began to lick up his shaft, her small tongue sliding from the base toward the tip. \"You had to satisfy the leader of the tribe before she'd let you pass.\"\n\n\"It was more like I had to please one of her hunters.\"\n\n\"Well that's stupid,\" Trace muttered. \"When I become the leader of a hot female gang the men we capture will have to satisfy me, not my crew.\" She had worked her way to the head of Sparr's shaft and was exploring it.\n\n\"Why don't we work on that now?\" Sparr suggested with a groan.\n\n\"Yes, let's.\" Abandoning her oral play, Tracee stood and quickly finished unbuttoning her top.\n\nSparr allowed himself a smile. A session with Tracee, one of the most sexually playful women he had ever met, would go a long way toward relaxing him and restoring normalcy. After several days in the Odysseus camp he drew fewer stares but just as many questions. He was ready for some alone time with someone who already knew his story.\n\nTracee's top slipped away, revealing a figure just as sweet as the first time they had shared a bed back on Earth. Her body was slim, practically girlish, but she moved with a woman's confidence and hunger as she wriggled out of the minimalist shorts. She vaulted on top of him.\n\n\"Captive,\" Tracee said, affecting a husky tone, \"you will please me or suffer the consequences.\"\n\n\"Are the consequences that I won't get extra froot snacks tonight?\"\n\n\"Just try and play along.\"\n\n\"Yes, mighty huntress,\" Sparr said, chuckling. \"This humble captive is at your mercy.\"\n\n\"'Mighty huntress'. I like it. You should call me that for the rest of the mission.\"\n\n\"Now who's out of character?\" Sparr wriggled his hips against Tracee, hoping she would get the message.\n\n\"Silence, foreigner!\" Tracee pressed back against him, carefully aligning her damp center with his cock. \"You will speak only when I... mmm,\" Tracee said, faltering as the head of Sparr's cock entered her.\n\n\"Yes, huntress.\" Sparr held himself still as Tracee carefully pushed down.\n\n\"Unh,\" Tracee groaned. Her eyes had narrowed to slivers. \"You foreigners are a big lot.\"\n\nAs Tracee gently worked herself onto him, Sparr let his hands roam over her slim body. He stroked her thighs, then slid his fingers over her taut torso. When he reached her breasts he cupped and tugged at them, teasing her nipples. His partner remained quiet, still concentrating on taking more cock, but she trembled at his touch.\n\nFor a long moment neither spoke. Tracee took her time, pushing herself against him in a hundred small movements. Once she had taken his full length, she began to grind and twist, pressing his hard flesh against her slick insides. Gradually, as their bodies came to share an understanding, she picked up a rhythm.\n\n\"I might change my mind, captive,\" Tracee said, back to affecting the husky huntress voice she had settled upon. \"I might not let you go after all.\"",
        "\"So you'll keep me in your camp just to please you and the other hot huntresses?\"\n\n\"No,\" Tracee said, her voice trailing into a soft moan, \"the other hunter chicks will have to get their own captives.\" She was sliding against him freely now, still mostly upright as Sparr continued to stroke and fondle her. \"Huntress Rask doesn't feel like sharing.\"\n\nSparr didn't feel like sharing either. After more than his share of being passed around like a piece of meat he was ready for a more symmetrical relationship. \"This captive happily submits to his hot huntress captor.\"\n\nTracee giggled, but didn't stop riding him. Her breath was taking on a ragged edge as pleasure began to chip away at her playful veneer. Sparr allowed delight to swirl around him as well. Being ridden was passive in a way that didn't always suit his appetites, but it did have advantages. When the woman was in control she used him in a way that drove her toward bliss faster than him. Sparr could lay back and watch her journey from enjoyment, to ecstasy, to release without cumming too soon.\n\n\"Mmm, I like that,\" Tracee said as Sparr fondled her, his grip on her flesh ever more insistent. She picked up her pace, brown hair tossing.\n\n\"Yeah,\" Sparr groaned, \"it's really good right now.\"\n\n\"Oh yes?\" Tracee leaned forward, pressing her body along his. \"What do you like about it?\"\n\n\"Your snug little pussy. So sweet.\"\n\n\"And what else?\" Tracee's tongue found his ear, darting wetly against him while her ever more ragged breath caressed his neck.\n\n\"Your tongue, fuck.\" Whatever resistance he had was melting away. \"What about you?\"\n\n\"That fat cock,\" Tracee whispered, her mouth hovering sweetly against him. \"Splitting me in two.\"\n\n\"Fu, huuck!\" Sparr gripped Tracee's shoulder with one hand, an upper arm with the other, locking her in place. \"Is that the only thing? Just my cock?\"\n\n\"It's pretty fucking important, isn't it? And your hands on my body, too.\" She was trembling involuntarily. \"Fuck, Alain! That thing, I want to feel you cum, feel you shoot into me.\"\n\n\"Gawwd,\" Sparr moaned. \"Feel it then. Ride me until it happens, until I fill you. We'll cum together.\"\n\n\"Yeah,\" Tracee gasped. Her rhythm had built until she was slapping against him, using his body to drag them both toward release. \"Fill me.\"\n\nSparr was ready. His session with Tracee wouldn't involve multiple positions, he wouldn't give her oral, they wouldn't even kiss. She had wanted dick, had taken what she wanted, and was on the brink. \"I'm right there,\" Sparr said, his arms clamping even tighter.\n\n\"Yes, oh yes,\" Tracee panted. She slowed, gyrating on his cock, finding just the right angle. \"I'm going to... I'm going... oh, fuck. Alain I'm cumming, oh fuuu...\" She tensed against him, pussy clenching sweetly.\n\n\"Yeah,\" Sparr groaned. He held off as long as possible as Tracee used his cock, pressing it against her slick insides. But his resistance was depleted. After what could only have been a few seconds he tumbled into the abyss alongside her. \"Oh gawwd, fawwwwk!\" Hot cum pumped into Tracee's slit as Sparr gripped her mercilessly tight. \"Hunnnh, fucking take it.\"\n\n\"Deep, yes!\" Tracee panted. \"Your cum.\" Their orgasms overlapped, Tracee shuddering against him as their ecstasy peaked. Finally she collapsed against him.\n\nSpent, and basking in the post-fuck glow, Sparr stroked Tracee's flanks while his mind wandered through the jumble of memories that were his year on Kaybe. At no previous point in his life had he ever felt so alive, and so close to death. Lovers, friends, and companions had come and gone, as had slavers, assassins, and beasts. Moments of peace and security had been so rare they stood out like stars in the night sky. The extremes of lust and mortal peril had started to feel more the norm. Sparr's mind chewed on the paradox restlessly. Merely surviving on Kaybe had sharpened him, honed him into a different man.\n\nWould that man ever feel whole back on Earth?\n\n***\n\nThere was no better place to watch the shuttles as they ferried crew back to the Odysseus.\n\nSparr, Tracee, and Captain Fowler sat together on a small rise which ran along the edge of the camp not far from the command center. Fowler had arranged for a picnic, and Sparr had brought wine.\n\n\"This shit is so much better than the stuff we've been fermenting here!\" Tracee said. \"Is that why you're staying?\" While most of the ship's crew were readying for their return voyage, Sparr had decided to remain on Kaybe to continue his mission.\n\n\"The wine, yes,\" Sparr said. He raised his glass in a mock toast. \"Here's to Kaybe wine!\"\n\nTracee happily took a swig from her glass, but Fowler only sipped. \"It is good,\" he admitted. \"How did you find it?\"\n\nSparr chuckled. \"Fellow I met early on. Guy wouldn't shut up about wine amphorae. Insufferable, but I guess some of it rubbed off on me.\"\n\n\"To amphorae!\" Tracee said, lifting her glass. Without waiting to see if anyone would join her, she took another gulp.\n\n\"So why are you staying?\" Fowler asked.\n\nSparr had come to expect the question. While plenty of the crew were staying on, they all had clear professional reasons to do so. Melissa Carpenter and her anthropology team would stay on to continue to document the experience of the original colonists. They had a linguist who had worked out an alphabet to cover the unique blend of English, Spanish, French, and Mandarin that formed the local language. There was talk of forming schools to reintroduce written language to the inhabitants. Others would provide security, continue to map the planet for resources which could be harvested without digging up plagues, and scout future colonization sites.\n\n\"I have more work here.\" Sparr knew the answer to many would be inadequate. Back on Earth he would have access to fantastically powerful tools even beyond those in his lab onboard the Odysseus. He would be able to begin the important work of defining taxonomies, separating order, genus, and species of the creatures he had sampled. Even if K2 Genetics sent him on another mission off-world, his legacy would be guaranteed. Yet Sparr was sure that wouldn't be enough. He would be leaving Kaybe with only a fraction of the genetic trove the planet surely held. Worse, he would be squandering the opportunity to further investigate the Originals and the genetic history of the planet. He alone had built relationships with the Precipice, and by extension, the Originals. By remaining on Kaybe Sparr might even learn what other worlds the enigmatic creatures had discovered.\n\n\"I don't know,\" Fowler said, examining the remains of the picnic. \"Sure it's your work, but it's also five years of your life.\" The captain was referring to how long Sparr and the others would have to wait for their next opportunity to return to Earth. A colonization mission was already being organized but it was years away.\n\nSparr shrugged. \"I'm more useful here. And anyway, as long as I'm on Kaybe, K2 Genetics can't send me somewhere else. This is a once in a lifetime opportunity. I don't intend to give it up so they can send me to some barren moon to dig for bacteria.\"\n\n\"I told you that you wouldn't be able to convince him,\" Tracee said. \"I already tried.\" Tracee's attempts to influence Sparr had mostly consisted of seducing him. It was tempting, but once back on Earth, Tracee would be sent to the Alliance academy for further training, while Sparr would return to K2 Genetics headquarters. A long-term relationship wasn't going to work.\n\nFowler ignored Tracee's less than subtle implication about her and Sparr's sex life. \"Well if anyone deserves to chart their own path it's you.\" He had warmed to Sparr over the past months as the ongoing investigation into Calista and Kevin's accusations had turned against them.\n\nThe three watched as a shuttle took off, ferrying another load of crew back to the Odysseus. Most of those making the return trip to Earth had already been placed back into cryo sleep. The next morning Fowler, Tracee, and the final few remaining Alliance crew would join them.\n\n\"I take it that a certain rock hunter and her accomplice are returning to Earth?\"\n\n\"Yes,\" Fowler said with a sigh. \"Happner was supposed to stay on, but I've found someone to take his place on the security team. And Ms. Brandt, if I understand correctly, has been recalled by K2 Mineral. The investigation against them will conclude on Earth, but I have a feeling that neither one of them is going to walk.\"\n\n\"Oh hey, shit!\" Tracee said suddenly. \"Isn't today Alain's birthday?\"\n\n\"What? Today isn't my bir-\"\n\n\"Oh, right,\" Fowler said, cutting him off. \"It is. Tracee, don't you have a gift for him?\"\n\n\"Yeah, back in a sec.\" Tracee had already leapt up and started back toward the cluster of official buildings that made up the camp's core.\n\n\"It isn't my birthday,\" Sparr muttered.\n\n\"Humor us,\" Fowler said. \"We're leaving tomorrow, and on your real birthday you were probably fighting in the arena or smashing drones.\"\n\n\"Or helping design ships, or hunting polar bears...\"\n\n\"Right, exactly. By the way, whenever you do get back to Earth you should go on the lecture circuit, or write your memoirs or something.\"\n\n\"I was thinking of a field guide to Kaybe species, but thanks for the encouragement.\"\n\n\"A captain's duty,\" Fowler said. \"Foster professional and personal development in his crew.\"\n\n\"I'm not Alliance crew.\"\n\n\"True enough, but you are a captain yourself now.\"\n\nSparr searched Fowler's expression for any sign of mockery. \"What do you mean?\"\n\n\"Tracee isn't the only one who gets to give you something on your birthday.\" He presented Sparr with a slim data cartridge.\n\n\"What is this?\"\n\nFowler allowed himself a rare smile. \"I'm transferring custody of the Sea Otter to you. K2 Mineral only paid for one-way transport of that thing, and without Calista here there's no one else with a claim to it. Plus, as I understand, the entire thing, including its custom drones, is configured for genetic collection. You'll put it to good use. This card will add you as a fully-authorized operator.\"\n\n\"Shit! This is awesome!\" Sparr said, forgetting himself in the moment. \"I mean, sir.\"\n\nPossession of the sub would aid immeasurably in his search for more species. The logs he had already reviewed proved that Calista had moved about the planet impatiently, more interested in covering as much ground as possible than performing a thorough search. Sparr knew how to take his time, scanning for signs of life, and waiting to observe them before plotting the ideal approach for getting a DNA sample. What's more, with the sub he could move from coast to coast, including the Portal and back, without having to call for shuttle transport.\n\nSpaar was about to more formally thank Captain Fowler, but the man was distracted, looking past Sparr back toward the camp. Sparr followed his gaze.\n\nTracee was walking toward them, a sly twist to her smile. An animal little larger than a dog followed, loping along with the exuberance of youth. Sparr gave it a closer look. The animal had solid hindquarters with heavy, bear-like paws, but its front legs and head were more dog-like, down to the round, lively eyes and wet nose.\n\n\"He looks like Bogg,\" Sparr said, his throat already tight with emotion.\n\n\"He is Bogg,\" Tracee said, grinning. \"Or at least as close as you'll get. We cloned him.\"\n\nThe animal, still a cub, approached him, sniffing at the scent of Kaybe chicken on Sparr's fingers. Sparr scratched at the animal's muzzle, eliciting a familiar groan of pleasure. \"Oh my god,\" Sparr said, no longer able to control his tears. He hugged the animal until it wriggled free.\n\n\"I'm sorry,\" Tracee said. \"I should have warned you.\"\n\n\"No, no... it's okay.\" Sparr wiped the wet tracks from his cheeks. \"This is really sweet.\"\n\n\"You sure you're going to be okay?\"\n\n\"Yes,\" Sparr said. Again he reached out, mussing the animal's fur, as it rolled playfully on the ground. \"We're okay.\n\n\"Bogg and I will be okay.\"\n\n-------\n\nAuthor's closing note.\n\nThis marks the end of Lost Colony. It is by far the longest series I have written, and I learned a good deal along the way. Several people helped make the story possible. First and foremost I want to thank my editor, L. Her encouragement, attention, and patience were invaluable. I would hand each chapter over to her, quite confident that it was ready. Each time she would politely identify scores of ways to improve it, including spotting many gaffes that should have been painfully obvious to me. Without L, Lost Colony would not be the story that it is. I also consulted with other Lit authors at the beginning. Their suggestions helped me get on the right track.\n\nThose of you that offered supportive and/or constructive comments along the way have my undying gratitude. Kind words go a long way toward motivating me and taking the edge off of uneven ratings.\n\nIf you have any questions about the story, my writing process, or would like to provide me with feedback, I have started a  in the story discussion portion of the bulletin board. Please join me there to provide feedback, ask questions, etc.\n\n"
    ],
    "authorname": "AllenWoody",
    "tags": [
        "sci-fi"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/lost-colony-ch-14"
}