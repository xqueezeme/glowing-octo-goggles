{
    "title": "The Chronicles: Three Sisters 13",
    "pages": [
        "THREE SISTERS Chapter 13\n\nTwo of the older women, and one elderly man refused to leave the Hill. They knew that they would be nothing but a burden to us, and suspected - with good reason - that they would not survive such an arduous journey.\n\nAs it was, we would still have three pregnant women, three older women, two toddlers and five more children under the age of 10. We had no horses, no pack animals. Everything would have to be carried on our backs.\n\nYevna finally revealed one of her secrets: a narrow track through the tangled forest to west of the Hill.\n\n- \"I found the first stretch a few years ago.\" she said. \"Dengelle and I found the second part while hunting, last year. We used swords to hack our way through the undergrowth, and connect the two trails.\"\n\n- \"Were you going to share this secret with the rest of us?\" I asked. \"Eventually?\"\n\n- \"No.\"\n\n- \"No? Why not?\"\n\n- \"It would only take one traitor to give us away. I didn't want the wrong person to find out about it.\" she said.\n\nIt was a hot, humid day, when we struggled along the narrow track. The uneven ground made progress difficult for our oldest travellers, while the dense brush caught at our packs and weapons, or snagged at our clothing.\n\nIt took us the better part of the day to cover two leagues.\n\nThe alternative, of course, would have been to carry Mother Nadesti (and several others) down the southern slope of the Hill. After that, we would have faced a long walk south and west, before turning north. By the end of a long day, we wouldn't have been much further ahead than we were now.\n\nAlso, much of that walking would have been in the open. As unpleasant as this dense forest was, it did afford us cover.\n\nThere was nowhere along the path to stop for any length of time, and nowhere we could make camp, until we reached the edge of the wood.\n\n- \"No fires.\" I said. \"No fires.\" We spread the word.\n\nYevna went off ahead, in the gathering dusk, to scout. If there were Izumyrians out there, on horseback, we would have no choice but to return the way we had come, and await our fate on the Hill.\n\nWhiteHair came to stand beside me.\n\n- \"How's the Duchess bearing up?\" I asked him.\n\n- \"Fairly well. She's a proud woman. Stubborn. She'd have made a good trooper.\" he said. \"What will it be like tomorrow?\"\n\n- \"Eight to ten leagues of open ground, until we come to the skirts of Myeva.\"\n\n- \"Myeva?\" he asked.\n\nI pointed at the mountain. \"The first - and highest - of the Three Sisters. The going gets rougher, and steeper, after tomorrow.\"\n\n- \"Well,\" said WhiteHair, \"a bit of open ground doesn't sound so bad, after today.\"\n\n- \"Unless the Izumyrians catch us out there.\" I said. \"Then we're done.\"\n\n- \"So we'd better hope that there aren't any Izumyrians about.\"\n\n- \"That's about the size of it.\"\n\nSulcen was exhausted. She had done most of the shepherding of her mother, trying to help her along the narrow path through the forest. Hedyn hadn't been able to do much for his wife, either. Everyone had had to struggle along that tangled trail, all by themselves.\n\nMany of the oldest folk were asleep before we had finished feeding the children.\n\nTanguiste was invaluable. She checked up on everyone, to make sure that they were being looked after. Yevna scouted, while Guenna planned for the next day - and the days after that.\n\n- \"I feel like a bump on a log.\" said Vingoldas, as our paths crossed.\n\n- \"You'll be needed, before we're done.\" I said. \"More than once.\"\n\n- \"You're probably right.\"\n\n- \"Listen - can you do me a favour?\" I asked. \"Keep an eye on the Lowlanders, when you can. Especially if you see that Iduallon around Guenna.\"\n\nVingoldas nodded. \"Done.\"\n\nMany of our folk were unable to sleep, that night. The young children were excited, as if this trek was some kind of grand adventure that had been organized for their benefit. The adolescents, all of them Watchers, wanted to do something important - staying awake was just the beginning.\n\nOur fighters weren't about to sleep until Yevna returned. We had no idea what was out there. Sulcen and Tanguiste and some of the younger women were still busy, looking after the older and most pregnant of our party.\n\nMy oldest daughter was gone a long time.\n\n- \"She'll be back.\" said Dengelle.\n\nI gave her a sidelong look, complete with raised eyebrow.\n\n- \"Father One-Eye?\" I said. That was exactly what Dengelle had said to me when Guenna was trying to convince me that we had to leave the Hill.\n\nDengelle grinned. It was the closest thing to a smile I had seen on her face in the past year. It made her seem younger.\n\n- \"You're like a father to all of us.\" she said.\n\n- \"Does that mean you'll obey me?\" I asked.\n\n- \"As much as Yevna does.\" said Dengelle, with another grin.\n\n- \"That means not at all.\"\n\nDengelle laughed aloud.\n\nI decided to check on Mother Nadesti. Sulcen looked up as I approached. She seemed tired and halfway defeated already. But the old woman was still awake.\n\n- \"Hammerfist.\" she said, softly. \"This wasn't a good idea. I don't know if I can walk, tomorrow.\"\n\n- \"You won't have to walk.\" I said. \"I'll carry you.\"\n\nGuen Nadesti opened her eyes a little wider. That was just for effect; there was nothing wrong with her vision - not at close range, at any rate.\n\n- \"Doesn't sound very practical.\" she said.\n\n- \"There are only practicalities, from this point on.\" I told her. \"We have to cross this open stretch in a day. We can build a sled for you. Don't fight me on this, Guen. I have enough trouble with the Lowlanders.\"\n\n- \"Another thing I have you to thank for.\" she whispered. \"You seem to create problems wherever you go. Bad luck follows you like a shadow.\"\n\nI smiled at my beautiful wife. I reached out and took Sulcen's hand.\n\n- \"No, Guen. Sometimes my luck is very, very good.\"\n\nI got the old woman to sleep, finally, kissed my wife, and went back to waiting for my daughter. Dengelle and Nameless waited with me.\n\nYevna returned. She looked tired, but happy.\n\n- \"No sign of trouble.\" she said. \"Hoof prints to the north, but four days old, at least.\"\n\n- \"Are you hungry?\" asked Dengelle.\n\n- \"I could eat.\" said Yevna. She gave me a quick nod - all I needed, to know that she was alright, and that we had a good chance to cross the open ground undetected.\n\n***\n\nThere was little to gain by waiting - resting - on the edge of the forest. The weakest of our travellers were exhausted from yesterday's hike. Admittedly, the trail had been moderately difficult. But no amount of rest would prepare Mother Nadesti or Hedyn's wife for eight to ten leagues, which we had to cross in a single day.\n\nThe forest would provide the means. With axes and hatchets, we cut almost two dozen pine saplings, or branches which were long and solid, but not too thick. We lashed two branches together, with leather straps, about two feet from the end. Then we tied a third branch across the first two, forming a three-sided shape.\n\nWe stretched a fur across the gap between the three branches, and tied it to the poles. In the Uplands, these devices were known as worriks. A cart pulled by horses would have been better, but we didn't have a cart - or horses, for that matter.\n\nIt wasn't an ideal way to travel, either. Even with padding, it couldn't have been very comfortable for Guen Nadesti, or for Hedyn's wife. The little children, on the other hand, saw it as an adventure, and Hedyn's two toddlers could be safely bundled up together.\n\nIt was fairly painful for Sulcen's mother, though. I'm sure that rattling about on a wooden frame wasn't one of her favourite things to do. But she was a tough old bird, and she wasn't about to be the first person to complain openly.\n\nShe did curse under her breath, though. Most of it was directed at me, as I pulled her worrik. I don't know if she kept it up when Vingoldas spelled me for a while.\n\nHedyn dragged his pregnant wife, and waved off offers of help. Odma did good work, and so did Yorun and DownyBeard. I caught Giedra's eye, and jerked my head in their direction. She frowned, but didn't make a comment.\n\nAs Prosquetel had said, the Duchess was a remarkably stubborn woman. She refused to ride on a worrik. That meant that she slowed us down. It took some time before WhiteHair could persuade her to try it. Gerimir and Iduallon took turns pulling her. Both tried to pretend that she was light as a feather.\n\nGuenna led the way, with Nameless. Yevna would normally have brought up the rear, obliterating our tracks as best she could - but it was pointless, with the sheer numbers of our party, and the worriks leaving deep gouges in the earth. Following our trail would be child's play. Our only hope was to travel fast, and get into the hills without running into trouble.\n\nLuck was with us, until midday.\n\nWe had stopped for a short rest, when four horsemen appeared to the southwest.\n\nThere was nowhere to hide - no cover at all. The open ground between the forest and the foothills was a featureless plain.\n\nThe horsemen couldn't possibly have missed such a large party. They began to trot towards us.\n\n- \"Archers.\" I said. \"Pass the word. Everyone with a bow to me.\" Sulcen passed me my bow, and I chose the best arrow I had.\n\nThere were at least a dozen of us. Yevna and Guenna. Vingoldas. Dengelle and Nameless. Seva and Weyl. Giedra, Libot, Yorun and one of the women from the east.\n\nThe Izumyrian horsemen should have been more careful. They came far too close. Each man wore a rounded helmet, with wide cheek-pieces. Their armour was a studded leather jerkin, with chain mail covering their shoulders and upper arms. All of them carried small round shields, and spears. I noticed, too, that they all wore greaves on their lower legs. Finally, they had high boots.\n\n- \"Ho err oo.\" called the leader. Unlike the others, he wore a full shirt of scale mail, and had a horsehair crest sprouting from the top of his helmet. I believe he was trying to speak Hvadi - to say 'Who are you?'.\n\nThey were ridiculously close. Perhaps they didn't realize that our women could be dangerous. It took them far too long to see that we were carrying bows, with arrows loosely nocked. Perhaps they were distracted - one of the riders caught sight of Prosquetel's white hair, and his unusual armour.\n\n\"Now\". I said.\n\nWe fired a dozen arrows at them.\n\nIn hindsight, we should have decided in advance which archers were targeting which rider.\n\nThe foremost horseman - the one wearing the scale mail - was struck three times. But none of the hits were fatal. He reeled in the saddle.\n\nThe man to his left was hit three times, as well - once in the throat, and once in the mouth. One of those arrows was mine. I believe that I hit him in the shoulder.\n\nThe third rider was struck only once. In the eye. He toppled from the saddle.\n\nThe fourth rider was hit once, too. In the arm. It was a serious wound, but not enough to incapacitate him. The Izumyrian yanked at the reins, and turned his horse. He bent low, and spurred his mount away.\n\nWe might have been able to hit him again, except that Scalemail's horse had been hit. The beast reared, and his rider struggled to keep his seat - with arrows sprouting from him. He blocked our line of sight - intentionally or not - and allowed his companion to escape.\n\nThree more arrows struck him, and Scalemail slammed to the ground, on his back.\n\nThe first and second riders were dead. One of the horses bolted. The second shied away, but stopped some twenty paces later. We didn't go after it. We're people of the lake, and the mountains - not horse riders. Besides, where we were going was no place for horses.\n\nScalemail was badly wounded, and seriously injured, in the fall from his mount. It was Gerimir who ran over, and spoke to him.\n\nThe Lowland Hvadi, it seemed, had learned quite a few Izumyrian words. Merchants, and the Izumyrian entertainers known as jongleurs, or menestrels, had become frequent visitors in the town of Hvad.\n\nI don't know what Gerimir said to him, or what Scalemail answered.\n\n- \"His back is broken.\" said Giedra. She slit his throat.\n\n- \"AAH!\" shouted Gerimir. He leapt back, as the Izumyrian's blood gushed across his hand.\n\n\"WHAT is WRONG with YOU?\" he screamed.\n\nGiedra merely shrugged. \"Were you going to bring him with us?\" she asked.\n\n- \"Gerimir.\" I said. \"What did he tell you? What did you learn?\"\n\nThe young Lowlander shook his head, as if to clear it.\n\n- \"Only the name of his commander.\" he said.\n\n- \"Which is ....\"\n\n- \"Count Seaglitz.\" said Gerimir. There was something about the way he said it.\n\n- \"Is that bad?\" I asked.\n\n- \"Oh, yes.\" said Prosquetel, behind me.\n\n\"It's very bad.\"\n\n***\n\n\"Do we turn around? Back to the hill?\" asked WhiteHair.\n\n- \"No.\" said Guenna. If there's a large number of these horsemen on this side of the river - or even north of the lake - we won't make it.\"\n\n\"Our only hope is to reach the hills.\"\n\n- \"They'll see our tracks.\" said Gerimir.\n\n- \"Doesn't matter.\" said Yevna. \"In the hills, we have a chance. Out here ...\"\n\n- \"Let's move, then.\" I suggested. \"Less talking, more walking.\"\n\nNo one needed to be told what would happen if a large body of cavalry appeared. We would take a few of them with us, but it was more than likely that we would all die. There was nothing to do but forge ahead, and pray.\n\n- \"You'd go faster if you didn't have to drag me along.\" said Mother Nadesti.\n\n- \"Don't talk nonsense.\" I said. \"You think Hedyn's going to leave his wife behind? You're light as air. Get on, and be quiet.\"\n\nI would like to say that we made good time, or that fear lent us wings. We just plodded along, as slowly as before. But we suffered in silence. No one complained - not even the Lowlanders.\n\nAnd just after dusk, we reached the hills.\n\nI had a brief word with Vingoldas, and with my daughters.\n\n- \"We can't stop.\" I said. \"Not here.\"\n\n- \"People are exhausted.\" said Tanguiste.\n\n- \"Better exhausted than dead.\" said Yevna. \"We have to go further.\"\n\n- \"You lead.\" said Guenna. \"I'll take the rear. With Nameless.\"\n\n- \"A moment's rest - then we move.\" I said.\n\nHedyn's wife was close to tears. Mother Nadesti must have been in agony. People like to think that their grandparents were tougher - that previous generations could outdo us in many ways, especially when it came to toughness, or endurance.\n\nThat may be so. But I like to think that if Payl had been with us, that night - as we dragged those poles uphill, as old women, pregnant women, and little children kept on putting one foot in front of the other - I like to think that Payl would have been satisfied with our efforts.\n\nWhen we reached the tree line, Yevna came back to halt us.\n\n- \"Look back.\" said Tanguiste. \"Everyone - look back! Look how far we've come!\"\n\nThe river seemed very far off - and well below us. We had climbed quite a bit. Most of our people had no idea how much more we had climbing we had to do. But it was a good idea to let them enjoy a feeling of achievement.\n\n- \"One more league!\" I called out. \"One more league, and we can rest in safety.\"\n\nRelative safety, I should have said, if I was being honest. Tanguiste went from group to group, encouraging, and praising. We dared not let people stop for long - we would never get them started again.\n\nThat last stretch was an ordeal.\n\nThe ground was too steep, and too rocky for the worriks. We untied the poles, and had the older children and unencumbered warriors carry them. Virtually everyone had to take on some extra weight.\n\nIn my case, it was Sulcen's mother. I carried her piggy back, with a sling supporting her backside. I could hold the ends of the sling over my shoulders, like a backpack, or put my hands under her legs, with her weight on my hips.\n\nThe old lady didn't weigh very much; it wasn't very difficult for me. But sitting on the sling could become quite painful for her, after a relatively short time. I had to stop, frequently, and put her down, to let the blood flow back to her legs, or switch to carrying her in my arms.\n\nThe children were willing, and they tried, but most couldn't maintain the steady pace we needed. Our pauses became full stops, and they grew more frequent.\n\nNameless had little Vialla riding on her shoulders. Tanguiste carried one of Hedyn's little ones in her arms. Sulcen took the other.\n\n- \"Just past the rocks.\" said Guenna. \"See the gap - the cleft between the rocks? Just past that, and you can stop.\" She repeated that to everyone, as she strode up and down the trail, encouraging us, asking for one more effort.\n\nWhen I passed between the rocks, and lowered Mother Nadesti to the ground, she would have fallen, had I not lowered her gently. She lay on her back, breathing softly, but otherwise not moving.\n\nSulcen passed me Hedyn's little girl, and knelt by her mother, to massage the old woman's legs.\n\nI was exhausted; I could feel the muscles in my legs trembling. I delayed sitting down, though, for fear that I might not be able to get back up.\n\n- \"Rest, Papa.\" said Guenna. \"Yevna has the watch.\"\n\n- \"She'll need to be spelled.\" I said.\n\n- \"Nameless and I will be there. You have to rest.\"\n\n***\n\nI must have taken Guenna's advice, because when I awoke, a beam of sunshine was shining through the forest canopy, straight onto my face.\n\nSulcen was lying only a few feet away, with her mother between us. Yevna lay on her back, snoring, on my other side.\n\nFrom the position of the sun, it was well past dawn. I rolled over, and levered myself to my feet. I groaned, feeling all of my accumulated years - and an extra twenty in the stiffness of my joints.\n\nDown at the gap between the rocks, Guenna and Dengelle were watching.\n\nThe cleft was a natural wayfaring point, an obvious stop for anyone travelling around Myeva. For one thing, the climb to this point was exhausting. For another, a person only had to turn around, to be treated to an amazing vista: we could see down the slope for the better part of a league.\n\nBeyond that, the trees hid much of the view, until the ground dropped away suddenly. We could see the open plain, the marsh next to our Hill, and the river. After that was a seemingly endless expanse of thick forest.\n\n- \"Bottom of the path.\" said Guenna. She didn't point. I had taught her not to.\n\n- \"Morning.\" I said. \"Morning, Dengelle. What am I looking at?\"\n\n- \"Six of them.\" said my daughter.\n\n- \"I see them now.\" Half a dozen of the Izumyrian horsemen, well below us, were keeping their distance. After what had happened to three of the first four of their brethren that we had encountered the day before, I couldn't blame them.\n\n\"Is that all?\" I asked.\n\n- \"For now.\" said Dengelle.\n\n- \"Did either of you get any sleep?\" I asked.\n\n- \"I did.\" said Dengelle.\n\n- \"I'm fine.\" said Guenna.\n\n- \"Go get Vingoldas, and send him to me.\" I said. \"Then find a comfortable place to sleep. You're staying here with me. I'll wake you the moment you're needed.\"\n\n\"Dengelle - find Giedra, and send her here, too. Tanguiste, too, if she's awake.\"\n\nThey must have been tired - neither one protested or complained.\n\nWhen Vingoldas arrived, I explained my plan to him. Giedra caught the second half of it, but I had to repeat the whole thing for Tan's benefit, so the others got to hear it twice.\n\nVingoldas made a fuss. \"That doesn't make sense, Veran. Why don't you go on? I'll stay here.\"\n\n- \"Because you're wounded.\" I said. \"Your leg isn't fully healed, however much you'd like us to think so. If there's a fight here, I don't trust your leg. And if we have to run ... I don't trust your leg.\"\n\n- \"But you're exhausted.\" he said. He was going to add 'and you're old', but wisely forbore.\n\n- \"I'll have time to rest, before they do anything. I'm not giving myself the hardest task. I need you to drive them, Vingoldas. You have to push them. Everyone is exhausted, and they won't understand why they have to move again. But they do.\"",
        "\"My daughters and I know this land. Two leagues from here, there's a wonderful spot, where a steep hill climbs to a rocky ledge, and then turns sharply. There's a stream. The Nebel. After that, it's a nice, soft trail, covered in pine needles. We'll be able to use worriks again.\"\n\n\"It's also a natural choke-point - a place where a handful of fighters can hold up ten times their number. We need to be past that spot by the end of the day.\"\n\n- \"I understand that.\" he said. \"But I can hold here, while you go ahead.\"\n\nI shook my head. \"Vin, nobody wants to move today. Everyone's tired, and sore all over. You have to get them moving. You have to drive them. They'll listen, because they know you, and they love you.\"\n\n- \"Why am I here?\" asked Giedra.\n\n- \"Because love and respect will only carry them so far.\" I said.\n\n\"Are you really the next Payl, Giedra? If you are, then I need you to prove it today.\"\n\n- \"What does that mean?\"\n\n- \"It means that when people want to quit, and just lie down, you have to drive them harder. When they're ready to give up, you have to kick them up the hill. You have to shame every man who can't keep up, and inspire every woman. They'll all need to find a reserve of energy, of willpower - that most of them don't know they have.\"\n\n- \"And I'll be there to help.\" said Tanguiste. \"You thunder and rage. I'll plead and cajole. Between the three of us, we'll find a way to get everyone past that ledge.\"\n\nI put my arm around my daughter, and kissed her cheek. She knew exactly what I was asking.\n\nVingoldas wasn't so sure.\n\n- \"This isn't some sort of heroic, suicidal stand, on your part, is it?\"\n\n- \"Do I look that stupid? Two of my daughters will be here with me. We'll be rejoining the rest of you just after dark - and you'd damned well better be past that ledge.\"\n\n- \"Who else are you keeping?\" asked Giedra.\n\n- \"A couple of archers.\" I said.\n\nI had time for a word with Sulcen, and an exchange of meaningful looks with Guen Nadesti. After that, I helped get people to their feet, and persuaded the older children to take charge of the poles for the worriks.\n\nVingoldas performed a small miracle, getting our folk to their feet, and slowly moving up the hill. I managed to get another moment with Giedra.\n\n- \"There's more to being a warrior chieftain than killing enemies.\" I said.\n\n- \"I understood you the first time, old man.\" she said. \"Giedra and the long march. All I need is a guslar to sing the tale.\"\n\nI had to laugh. \"I think that Payl would have liked you.\"\n\n- \"Of course she would.\" said the big blonde. \"The real question is, would I have liked her?\"\n\nIt took longer than I would have preferred, but we got most of our people moving.\n\nI looked at the small party left by the cleft. Yevna, of course. Nameless, and Libot. The three best archers we had. Libot was pleased to be so trusted. He had enough sense to realize that he was my third choice, and enough humility to agree with my decision.\n\nAnd Guenna was there, too. My youngest.\n\nWe watched as more Izumyrian horsemen arrived. And then more.\n\nUntil there were over a hundred.\n\nA horn sounded, and the mass of horses and men began to assume the shape of a column, four wide. They came up the slope, a powerful stream of mounted warriors.\n\n- \"So many.\" said Libot.\n\n- \"How many can come at us at once?\" asked Guenna.\n\n- \"Eh?\"\n\n- \"Look at the path. How many can ride abreast? How many riders can come at us at any one time?\"\n\nThere was a good reason for choosing this spot. In quite a few places, the trail up the shoulder of Myeva was wide, or level with the flat ground to either side. But clumps of pine trees, here and there, would restrict our attackers to two or three abreast, at most.\n\nWhat the Izumyrians couldn't see, of course, was that some fifty yards before the gap in the rocks, the ground to either side of the path fell away sharply. Then the trail narrowed and climbed at the same time.\n\nIf a rider left the trail, he would find it impossible to get back onto it. The rocks, and a thick tangle of stunted pine, also prevented anyone from getting past us by going around our position. The cleft in the rocks was a beautiful, natural chokepoint, which our enemies were about to experience firsthand.\n\nAs they drew nearer, we could see that these horse troopers were equipped the same as the scouts we had encountered yesterday. These Izumyrian riders wore rounded helmets, with thick cheek-pieces. Some helmets featured horsehair crests, or horse tails.\n\n- \"Those will be officers.\" I said. \"Shoot them first, if you can.\"\n\nEach man had the mail shoulder guards. The officers - the ones with fancy helmets - wore mail shirts; the rest had studded leather jerkins. All of them carried small round shields, and spears. I noticed, too, that they all wore pieces of armour on their upper and lower legs. And those heavy boots - eminently practical for protecting their legs and feet.\n\nAn officer of some kind led the way. He couldn't see, as we did, the difficulty which the four men behind him ran into. The path just wasn't wide enough for all of them. One surged ahead of his fellows, to ride directly behind the leader.\n\nBut the next two horses jostled for position. One of the beasts was knocked right off the trail. His rider continued on, parallel to his friends, only to find that their path was rising, while the ground he was on fell away. He had no way to rejoin them.\n\nThe same thing happened to the next group of four - only worse. One of the horses slipped, tried to remain on the path, and was knocked sideways. The beast lost its footing, and fell heavily, throwing its rider.\n\nThe lead horsemen had no idea what was happening behind them. They came on, one behind the other, until they were a scant twenty yards from our position.\n\nThat's when our three archers fired. Guenna and I carried extra quivers, but we left the shooting to three masters of the art.\n\nYevna and Libot shot the officer's horse. Nameless aimed at the rider's face. I don't know if he ducked his head at the last instant, but her arrow rang off his helmet - we all heard it clearly.\n\nThe horse was not so fortunate. It went down, suddenly, pitching the officer over its head. He landed badly, on his head and shoulder.\n\nOur archers fired again, at the second horseman, all three targeting the beast. That horse went down as well. Another rider was thrown from the saddle.\n\nThe third and fourth horses had nowhere to go. Pulling up, or reining in suddenly did no good at all. With more horsemen coming on behind them, they had no choice but to veer off the trail. That was not so easy.\n\nThere was a three foot drop, to the right. On the left, the horse had to swerve and immediately climb. The animal made the adjustment; the horseman hung on, and kept his seat - until Yevna's arrow hit him in the armpit.\n\nThe Izumyrians lost five horses and four men in their first approach. They were especially incensed when I calmly walked forward, and finished off the stunned officer with my sword. I turned my back on them, and walked back.\n\nThey could see that there were only four or five of us. An officer exerted his authority, and squads of four began to leave the path, to left and right. A horn sounded, very close by.\n\nThe Izumyrians charged us, on a front twenty men wide. It was quite impressive, for a few moments.\n\nThe eight riders on our right found the ground rising. But ahead of them was a tangled mess of rocks, thorn bushes, and twisted, stunted trees. It was utterly impassable - even on foot.\n\nEight more Izumyrians, to our left, discovered that the slope fell away, and led them into a wall of rocks and boulders. They couldn't get to us at all.\n\nThe poor bastards following the trail ran into the bodies of the first wave's fallen horses. This was no simple obstacle, that they could simply jump over.\n\nYevna, Nameless and Libot made matters worse for them, downing two more horses, and picking off another pair of riders, one of them a junior officer.\n\nA more senior leader asserted himself. Perhaps it was this Count Seaglitz, whose name Prosquetel had recognized. A pair of horns sounded, and the Izumyrians pulled back. They left behind seven dead or seriously injured horses, and six dead men.\n\nIt was hardly fair. We had three skilled archers, and the Izumyrians had had to learn, the hard way, that they could only approach us one at a time.\n\nWhoever took charge of their efforts, from that point, was no fool. Sixty of the horsemen dismounted, and advanced on foot. They came on a broad front: at least twenty were upslope, and another score were downhill of the path.\n\nTwo, or even three men could come along the path, with their shields overlapping, as long as they stayed close together, and kept a straight line. These were trained soldiers: they could do that.\n\nArchers as talented as ours could have made them pay. But we would have had to man the gap, and fight toe to toe. I had no intention of doing that.\n\nWe pulled out. It was a simple matter of trotting up the trail, jumping over rocks and tree roots, for some two hundred yards, until we reached a twist in the path.\n\nThe path had to turn, because of a sizeable boulder, and because the pine trees suddenly became more numerous, more gnarled and twisted - which meant that they created an impassable barrier on both sides of the path.\n\nOur enemies were angry, and in a vengeful mood. The men advancing on foot were only too happy to raise a shout when they reached the cleft. That was the signal for the horse troopers, held in reserve, to advance at the double.\n\nYou see, the men on foot, with their helmets and shields, their leg greaves and heavy boots, couldn't keep up with us as we retreated. They couldn't run.\n\nA heavy, lumbering jog was the best they could manage. My daughters and our friends wore no armour whatsoever. We could skip up the trail, climbing over the rocks, while our pursuers lumbered after us.\n\nIt was understandable that they tried to chase us down, on horseback.\n\nUnderstandable, but unfortunate - for them.\n\nThe trail, after the cleft, widened for a hundred yards. Then it began to turn, avoiding a stand of pine trees. After that, it got worse.\n\nRocks in the very center of the path. Trees everywhere. The path wound one way, and then reversed direction. It was difficult to follow, on foot. It was impossible, on horseback.\n\nWhen the first rider approached our second choke-point, we let him be. We waited until more horses, and more men, had crowded in after him. Then our archers opened fire.\n\nThe poor bastards knew that they had fallen into a trap. But they had nowhere to go. The riders behind them were pressing forward, blocking their retreat. And it's no mean feat to turn your horse around, on a narrow, rocky path, while enemies fire arrows at you.\n\nI know this, because I watched them try.\n\nI'm not sure what I would have done, in their place. They wouldn't abandon their horses - which might have been the most sensible thing to do. Two more horses went down, and three more men.\n\nWe ran, after that. I knew the land, as did Yevna and Guenna. We had almost half a league to cover before we could reach another natural barrier.\n\nOur foes, though, were now understandably shy about sending mounted riders in pursuit. They must have re-grouped, and then sent out men on foot, to either side of the path. That approach was safer, and would spare them any more casualties. But we would be long gone.\n\nThey were angry, of course. The casualties we had inflicted would make them eager for revenge. But they were professional soldiers, accustomed to obeying their officers - and someone back there had enough sense not to repeat the same mistakes.\n\nGuenna was with me, watching our back trail. We saw a pair of riders emerge from cover, several hundred yards behind us. They didn't immediately charge at us. Instead, they simply kept us in sight, until more of their fellows began to appear.\n\n- \"That's troubling.\" said Guenna. \"They're not as stupid as I hoped they'd be.\"\n\n***\n\nVingoldas, Giedra and Tanguiste had done their job. We could afford to let our folk rest for a day, because the next choke point was a natural wonder. We called it the Slip.\n\nThere had been a landslide here, years ago - before my daughters and I had fled from the lake. The only way up, along the path, was unpleasantly steep. It was impossible to ride: horses would have to be led - and carefully led, at that.\n\nPoor Hedyn had had to carry his wife up this ridiculous path. Vingoldas had carried Mother Nadesti. And somehow, the Lowlanders had gotten their Duchess to the top of the Slip.\n\nThe Izumyrians would realize, right away, that five determined warriors could hold off a thousand, here. Anyone trying to climb parallel to the path risked setting off a new landslide. Our pursuers would try it, of course, and learn the hard way that it was impossible.\n\nThere was a path that led off to the north, away from the mountains. The Izumyrians would find it, eventually - possibly as early as the next day. They would follow it, only to discover that it led away from us, but not around our position.\n\nIt would take them another day, or possibly two, to learn that they could leave this new path, and come through the trees. The undergrowth was negligible, and the trees more widely spaced. After a short climb, the Izumyrians would find a new trail, which led west and south, and then connected with the path behind the Slip.\n\nBy that time, our main party could move forward, by easy stages, using worriks. Two, or probably three days would see them at a little clearing, near a running stream, where my girls and I had found the body of a man, all those years ago.\n\nMoruith's elder son. Inisian's brother. He had been murdered, his body left where they killed him.\n\nAnother few leagues further on, we would come to the Neck.\n\nOf all the beautiful, nasty, defensive positions or choke points north of the Three Sisters, the Neck was my favourite. It was simply ridiculous.\n\nThe trail led through a forest of pine trees, until one could hear the stream, long before you could see it. Over the centuries, water running from the brow of Myeva had carved a course down the slope, gouging out a path for itself, carrying away loose dirt, and wearing down the bedrock of the mountain itself.\n\nIn early summer, with the melting snow and the run-off, the stream was a raging torrent. In late summer, it was still deep and fast.\n\nAt the Neck, the traveller would find a small gorge, perhaps ten feet wide - but also eight to ten feet deep. Both sides of the stream were solid rock. It was too wide to leap over, and no one in their right mind would try to climb down, wade across the stream, and then climb up the opposite side.\n\nThere were two fallen trees spanning the gap. One was old, and the bark had been worn off in several places. The second was narrower, but with better traction for the feet, and occasional branches which made excellent handholds.\n\nBut crossing the tree-bridges while arrows were being shot at you?\n\nUnthinkable.\n\nEspecially if there were determined warriors waiting for you on the opposite side.\n\nYevna knew all of these places. Inisian had shown them to her. But it was Guenna and I who took that knowledge, and turned it into a plan.\n\nThe only other place to cross the stream was two leagues downhill. And from that point, we could resume our little game of sting and retreat, of hit and run.\n\nEverything went as Guenna had foreseen - exactly as she had predicted, when she explained her plan to us.\n\nThere was only one problem, one little event which my daughter had not anticipated.\n\nThe day after we passed the Neck, Hedyn's wife went into labour.\n\n*****\n\n<hr >\n\n A league is very hard to define. In the Roman Empire, it was approximately 1.4 miles. In England, three miles. In the Uplands of Hvad, a league was approximately 3km (or 1.9 miles).\n\n A travois (from the French word 'travail'). Two or three poles lashed together, in the shape of an isosceles triangle. They could be pulled by hand, or fitted with a harness, and pulled by dogs, or horses. While they may seem primitive compared to wheeled vehicles, the travois was better suited to soft soil, forest floors, or snow.\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "combat",
        "dark ages",
        "fantasy",
        "swords",
        "women warriors"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-chronicles-three-sisters-13"
}