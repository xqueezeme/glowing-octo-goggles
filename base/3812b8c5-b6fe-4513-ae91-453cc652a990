{
    "title": "The Cursed Tattoo Pt. 03",
    "pages": [
        "A New Normal\n\nBy the time Ryan woke up -- maybe around noon, definitely past ten -- there had been some changes in the sleeping arrangements. Remy and Annie were still in his arms, but naked now, and not in their night clothes anymore. Joining them, and also naked, was Melinda, lying on top of Ryan. The cursed energy of his magical tattoo was flowing. As far as he could tell, Ryan had been baking the ladies in it all night. He snubbed the flow. At least he shouldn't suffer from any of the dreaded excess build-up today.\n\nOn her post, on top of the drawer, was Eleftheria. She was back in her skimpy uniform and with the way she was stretched out, it left literally nothing to the imagination. Whatever Ryan wanted to see was there to be seen. Ellie even lifted her knee a bit. By the time Ryan realized she never sleeps it was way too late for him to pretend he wasn't staring.\n\nTo add to his embarrassment, his morning wood was more than visible, poking out from under one of Melinda's luscious thighs. The visibility of his erection was in large part due to him also being totally naked now, something he had not even realized because of all the women he was wearing. He'd definitely had some clothes on when he'd gone to sleep.\n\nRyan looked Ellie in the eye. Her gaze was iron, unshakable. Not hostile, but definitely not cuddly, either. She never even considered covering up. Ryan desperately wanted to do something to cover himself up, though, but he was effectively trapped. The fact that the girls were starting to squirm around did not help matters. By the time all of their eyes were open, his erection was still pretty much intact.\n\n\"I see we made some rearrangements during the night,\" he said. The only answer was some giggles.\n\nAs the girls woke up properly, and recovered from the energy flow, the situation got more awkward. None of the girls knew what to say to each other after spending a night in the same bed. Not even Remy. One by one, they also noticed Ellie, and in no way did that ease the rising awkwardness. And that erection was still there, too.\n\nAnnie managed to cover herself up a little bit. Melinda started to climb off. Remy had made her choice, too, and reached for the cock. The other girls stopped and could do nothing but stare. Remy kissed Ryan on the cheek. The way she did it, it was the filthiest kiss-on-the-cheek Ryan had ever received.\n\nRemy whispered to his ear. \"Remember when I said I would do whatever you want, anywhere, any time? I wasn't lying.\" With a wicked smile on her lips, she slid down his body and then the handjob turned into a blowjob. Ryan, in fact, did not remember her ever using those exact words, but he had to admit the sentiment rang true.\n\nTo enhance the spectacle, Remy got on all fours. Her tight ass undulated hypnotically, high up in the air. The face-down-ass-up position was also marvelous for showing off her flexibility.\n\nThere was no energy flow. It was easy for Ryan to keep the taps closed, for now. He was afraid that if he opened them up the situation would go full nympho. All the other two girls were still touching his bare skin. His arm was still around Annie and Melinda was leaning on his ankle. Melinda had given Remy some space but she had not gotten off the bed.\n\nLet loose. Open the flow, Ryan's evil alter ego whispered to him in his mind. Had he wanted to, he could have the women out of their minds with lust in a matter of seconds. Then he could just pile them up into a triple-decker and ride them for days. But he did not want to do that. The fact that he could have crazy twisted orgies pretty much at will now made it feel like it would be vulgar to just rush right into it on their very first morning together. He'd already had enough crazy supernatural porn sex lately to last him a bit longer than that.\n\nIn a way, the amazing blow job Ryan was receiving now, performed with increasing enthusiasm, was the only real sex he had had so far during this new adventure. Although Remy's motives were definitely twisted, there was no evil mind control happening at this exact moment. She was doing what she was doing to prove a point, and hopefully because she also liked it a little bit, or at least didn't mind.\n\nShe was definitely putting on a great show, either way. Remy was getting all kinds of reactions out of Ryan and she was feeding them back into him, almost like she had a magical energy of her own. Whenever she got a rise out of him she did something new to push him further. She was already going quite deep, too, and it seemed so effortless for her.\n\nRyan was at home now, safe and relaxed, so he felt much better about this whole situation, compared to yesterday. Once Remy started to tickle his balls with her tongue, Ryan decided it was the perfect time to make a speech. His rhythm would be broken by gasps and grunts, and at some point, he was sure Remy started to try and sabotage him on purpose, but he still felt he got his message across.\n\n\"Listen, ladies. You all already know I have this crazy magic power that can literally drive you out of your minds with orgasms and stuff. I don't want to do that, though, not just for kicks or something. There are some issues here that mean we probably have to have sex every few days [groaning break], but I don't want to ruin your lives anymore than I absolutely must. None of you owe me anything and you don't need to do me any favors [moaning break], like Remy [big, deep groan] here. Come and go as you please, and we'll try to figure this thing out. I promise you I'm not using my powers or anything right now, and I'll try not to do it without asking. I'm not forcing her to blow me [guttural growl], and you don't need to do anything, either, if you don't want to.\"\n\nBy now, Annie had snuggled up to his neck, and she was getting clearly emotional. \"Oh Ryan, you are such a good man. I'm so lucky I found someone like you. This whole thing could have been so awful if you were not here. If I have to be a cursed, magical sex slave, then I'm glad it's with you.\"\n\nThat, of course, did not make any sense to Ryan, but he could hear the sincerity in her voice. Definitely in love, he thought, and as scary as that was, he was almost over the edge now. Annie was now kissing his neck.\n\nRyan had to open his eyes again when he felt something he'd never felt before. As he had guessed, his toe was now inside Melinda's pussy -- she was grinding herself on his foot. What he hadn't guessed was that Melinda's hand was now kneading Remy's ass, too.\n\nThis had so not been the point of his speech, but Ryan couldn't care less.\n\nThings might have been about to heat up even more if he had lasted any longer, but without the energy to give him superhuman endurance, he felt like he had already withstood more than most men could. Blissfully, he let himself go, which turned out to be a mistake. He blew his load, mostly into Remy's mouth, but also all over her face. In the throws of his ecstasy, there was no way Ryan could hold back the energy anymore.\n\nAll the girls had their fair share of the jolt and were already shaking. Ryan was totally unable stop himself from doing what he had to do next. Hello, Evil Ryan.\n\nHe did not quite pile them up, but he did line them up, and everybody got their turn. With some goading and some insults, and a few good slaps, he even got that little paint bottle out of Remy's butt, and since she was already open again, he couldn't resist having another go at fucking her petite little tush, too.\n\nRyan moved quickly from one girl to another, pulling, slapping, and squeezing along the way, but fairly gently, of course. It wasn't like he was a magically cursed sex maniac, or anything. The problem of who to cum in he solved by flipping the girls over and lining up their faces. He didn't feel like he had it in him to come inside each of them, one after another, but this way he was sure he could muster up enough of his magical cum for them all to share.\n\nHe bent himself over their blissful, angelic faces. He was grunting and groaning, red from exertion, and aimed his grotesque member at their general direction, which was pretty much straight down. With expert control and care, Ryan painted their faces white. To his joy and surprise, there was lots of cum, and Ryan felt like he could have produced more if he had needed to. He even managed not to fall on the girls while he was perched over them, raining down his seed.\n\nAfter a few short breaths, he took a moment to admire his work. All the girls looked so happy, scooping the thick goop from their faces and into their mouths, their different bodies all so lovely, gleaming in the late morning sun.\n\nRyan also discovered an added benefit to being able to fuck a partner unconscious. From now on, he would always get to go to the shower first.\n\nAfter everyone had had their showers and Ryan had almost managed to make an apology for instantly breaking his promise of not using his mind control powers on everyone all the time -- you know, the one he made while in bed with three women -- the doorbell rang.\n\nIt was Lizzy, the cute brunette store clerk. She'd been to work but had decided to leave early. Dave, her boss, had been hovering and he'd been asking her about \"that asshole who came here looking for you.\" Lizzy was going home but had then decided to come here, instead.\n\nShe had heard a lot about the curse from Ryan and Ellie yesterday but she hadn't really taken it at face value. Lizzy's first reality check came when it was Remy who opened the door. Her hair was still wet and she was dressed in one of Ryan's shirts. Just like that other girl, Lizzy thought. She remembered Eleftheria's disguise from yesterday. Lizzy was about to turn away but Remy convinced her to come in.\n\nLizzy's second shock came when she saw no less than four other women lounging around in the open plan kitchen-slash-living-room. They were all beautiful, more beautiful than her, she felt. Her third bombshell dropped when she recognized Eleftheria, dressed in her uniform and holding her spear now. All of this was way too much, but what could she do? She decided to sit down on the bar stool closest to the door and wait.\n\nIt was mama hen Melinda who instantly took Lizzy under her wing. She broke the silence and made the introductions, even though she didn't really know the others that well, either. More information was shared all around. \"I'm the doctor, I'm from the office, I'm just a tattoo artist. That's all right, I'm just a clerk from the corner store,\" and so on. And then, of course, \"I'm a messenger from the gods, a Guardian Angel come to earth, to protect you, and to protect the world from you.\"\n\nA few hours passed, and other than Lizzy, the girls started to get more comfortable with each other. Even Lizzy found some purchase with Remy who she saw as more of an outsider, like herself. There was food and drinks and some wine, and quiet music in the background. Ryan tried to be polite to Lizzy but he did not know where to start.\n\nOne of the girls must have even done some shopping at some point because there was some basic, one-size-hopefully-fits-all women's homewear to go around -- the kind that was soft and casual, but still cut to be quite sexy. Remy decided to try some on. At least she left the room to change. The \"one size\" was loose on her delicate frame but she wore it well. It reminded Ryan of that old, tattered shirt he had ripped off of her just yesterday.\n\nRyan also realized Annie and Melinda must have already moved some of their own clothes into the guest room closet, too.\n\nEarly in the evening, the doorbell rang again. Has to be Claudia, Ryan thought. The gang would finally be all together and Ellie could do her big speech. Honestly, Ryan hadn't been sure whether Claudia would show up. Before anyone else could do anything, Remy went for the door again.\n\n\"Hi, I'm Remy. You must be Claudia. Nice to meet you,\" she said.\n\nApparently the feeling was not mutual. Claudia pushed inside and gave everyone a cold stare. For Ryan, though, she gave the iciest, most crushing stare of her life. So much for not being able to get angry. The stare was absolutely murderous and Ryan could feel it all: You ruined my clothes. You ruined my office. You ruined my reputation. You ruined my authority. You ruined my ass.\n\nRyan's two halves were more clearly separated than ever. On one hand, he really had done more potential harm to Claudia than any of the other girls, at least as far as her career and her reputation were concerned. He had treated her very roughly, and come to think of it, she hadn't really done much to deserve it. She had never been a bad boss to Ryan even though she had a reputation for being arrogant.\n\nOn the other hand, Asshole Ryan had loved every minute of it. Evil Ryan was convinced Claudia had it coming, and the only reason he felt like being that rough with her was that she secretly liked it. How can fucking her in the ass, hard, be wrong when it feels so right?\n\nEither way, Claudia made it clear she was not at all interested in making friends. She had come just to hear Ellie's case, and also, to demand justice.\n\nEveryone gathered on the sofas in the middle of the living room and Eleftheria took center stage. She knocked the floor three times with the butt of her spear. \"Hear me! Welcome Ryan, welcome concubines.\"\n\nAlready, Claudia was having none of it. Someone else giggled, though.\n\n\"I am Eleftheria, your protector and guide. We have all gathered here to set matters straight. By now you should all know that you've been beset by a curse. This curse was not started by Ryan. He was merely it's first victim. He, though, is a special case. He is the only one of you who can pass it forward. You, ladies, are safe, and can move about freely in the world. Ryan, though, I will keep on a short leash. From now on, everyone make sure he never exits the house without gloves and long sleeves.\n\n\"I will also tell you that I am most certainly not under this curse, nor have any desire to be. As you also know by now, the nature of your curse is amorous. All of you ladies have an insatiable, animalistic lust inside of you and it will only grow worse as long as you do not receive your release. I doubt any of you can go longer than two days, three at the absolute maximum, without it.\"\n\nChallenge accepted, thought Claudia.\n\n\"Let me be clear on the next point: the release, your only release, is Ryan's seed.\"\n\nGiggles all around, except Claudia was still having none of it. Lizzy was unreadable.\n\n\"His seed, and only his, must enter your body or you will continue to suffer, and soon succumb to madness. Luckily for you, the cure should not be a pain. As you all know by now, the administration of it can be most pleasurable.\"\n\nClaudia was close to exploding but held her rage. She would definitely not describe her cure as painless, but in all honesty, she could not deny the immense pleasure, either. That was pretty much her whole issue. The pleasure was way too much, literally supernatural. How could she fight that? How could anyone? She would still try.\n\n\"I will gladly leave the finer details of how you receive your release, and when, to be settled between you and Ryan. But know this, he has no right to deny you. Any of you. Whenever and where ever you need it, it is his duty serve you. You are the victims and he is your keeper. I will, however, intervene, if innocent bystanders are at risk, so please, try to do as much of it as you can inside this home.\"\n\nThat definitely received some giggles from the girls. None of the ladies had even considered dragging Ryan all over town. Even Claudia forgot to be angry for a second. She would never allow Ryan anywhere near her office, ever again, but she did have an otherwise active imagination.\n\n\"Some of you ladies have already brought your clothes here. I suggest the rest of you do the same, for the sake of practicality, as you are likely to spend many nights here. Also, I have decided that allowing Ryan to work in an office is too dangerous. He will have to resign from his current position.\"\n\nThis was news to everyone, including Ryan and Claudia.\n\n\"A word of hope: a resolution to this situation is not impossible. I will begin my research into this matter, with Ryan's aid. Let this be his new profession,\" Ellie said.\n\n\"Wait. If I quit my job to help you then how am I going to pay my bills?\" Ryan said.\n\n\"I'm sure the ladies will do their part, since the possible cure will eventually be to their benefit,\" Eleftheria said.\n\n\"To hell with this!\" Claudia shouted. \"I'm not going to pay this sleazebag to... to put his filthy hands on me!\"\n\n\"Do you want a cure? Do you want your freedom?\" Eleftheria asked coldly. The answer was silence. \"It is settled then. Each of you will pay a fifth of his expenses while Ryan, in return, will help you by helping me with my research.\"\n\n\"W-Wait,\" a small voice said. It was Lizzy. \"I'm not that rich, I'm not sure I can afford to pay even a fifth of someone else's rent.\"\n\n\"Then you shall move to live here, and relinquish your previous dwellings,\" Ellie said. As far as she was concerned the matter was closed. No one else seemed to feel that way. Lizzy went pale.\n\nAnnie was secretly not that worried about finding a cure. If it came to that, she would decline it and stay with Ryan forever. The idea of paying his rent felt nice. She was sure it would somehow bring them closer. Remy's ideas were somewhere along the same lines, but for completely different reasons.\n\n\"One last thing,\" Eleftheria continued. \"I want to see this whole situation handled in an efficient manner and with minimal disruptions. Therefore, I will not tolerate any unnecessary bashfulness. There will be sex, so get used to the idea. This concludes my proclamation. Are there any further questions?\"\n\n\"Are you expecting some of that sex?\" Remy asked, with a sly grin on her sharp face.\n\n\"No. As I said, I have not fallen under this curse, and have no intention of doing so. I will help you, as far as I can, but I am not here to form any manner of personal bonds.\"\n\n\"Wow, well, okay then. Who even are you, really?\" Remy said.\n\n\"I am Eleftheria. I am not from this place, but I am honor-bound to protect you. That is all you need to know. I do not need food or drink. I never sleep. I will always be watching over you.\"\n\nThere was an awkward silence.\n\n\"So, does that mean literally? Do you always have to be in the room, literally watching us doing it?\" Remy continued. That got a few laughs.\n\n\"No. I will not have to be in the room, literally watching you doing it. I have been overprotective, early on, to make sure Ryan can gain some control. Remember, all of this is also new to him. From now on, especially in this house, I will let you go about unsupervised. But know this: I will always be close and I will always be listening.\"\n\nNow, that could be understood in many ways, Remy thought. There were some nervous giggles from the other girls but Ellie would not waver. Her commitment to her hear-ye-hear-ye-mode was absolute.\n\nAfter another awkward silence, Remy continued with her questions, but even she was blushing now. \"So, just to be absolutely clear, we need Ryan's cum literally inside our bodies, right? To reset the curse?\"\n\n\"That is correct. The seed will act as a sort of magical reservoir. When you are in direct contact with Ryan the flow of the energy will satisfy you, but while you are away, you will need the seed inside you to sustain you.\"\n\nHearing this did not make the situation any less awkward. All of the girls secretly liked the idea of carrying that magical cum around inside them but none of them were ready to admit it in front of the others. The two people most desperate to appear scandalized were Ryan and Claudia. Neither of them were happy at how horny the thought made them.",
        "Ellie wasn't finished, though. \"As for the method of delivery: anything goes. As long as the the seed ends up inside your body, you can carry it with you. Even if you eat it with your hands, like some of you already have.\"\n\nThat really dropped the bomb on Remy and the other girls from that morning. Annie looked like she might actually faint.\n\nClaudia, even though she wasn't looking to make friends, had hoped to at least find some allies here, but hearing this, she gave up on that idea. None of these little whores have any fight in them, she thought.\n\nLizzy was also crushed by the awkwardness of the situation, even though she hadn't taken part in any such debauchery herself. She did have a question, though. \"What about boyfriends, or dating? You said we can continue on with our lives like normal. What if I want to go on a date?\" she asked, quietly.\n\n\"As I said, you ladies are safe to others and can live freely, so you can do whatever you want. However, while under the curse, I very much doubt you can fall in love with any other man. Your fates are now bound to Ryan and the curse, but I suspect you will soon realize that this will not be a problem. It is in the very nature of this curse to connect you, body and soul, to the one who now holds you.\"\n\nLizzy was mortified. She didn't actually have a boyfriend, but the idea of becoming like the other girls, of \"eating it with your hands,\" scared her. She was also feeling embarrassingly horny.\n\nDoctor Melinda kept her cool and didn't seem that fazed about this latest revelation. Eleftheria was the only one who noticed that this topic did concern her.\n\nClaudia wasn't happy about it, either. I can't have a boyfriend? Challenge accepted.\n\nThere was all kinds of chatter in the room after Ellie's speech. Claudia was the most animated and she wanted to recruit the other girls into some kind of a resistance. Lizzy seemed the most sympathetic to her cause. The factions were solidifying as Annie and Remy drifted more and more into the pro-Ryan camp. Melinda was firmly in the middle and just wanted everyone to get along.\n\nRemy and Claudia were the clear leaders of their factions and whatever Claudia said she would not let Ryan do to her, Remy was proud to proclaim she would do for him in an instant. Eventually, Remy started adding things to her own listing of everything she would let Ryan do to her, curse or no curse. It was a bit much for everyone. The other girls were hoping she was just exaggerating to goad Claudia now, but deep down, all of them were afraid they'd all turn into Remy in a week or two, tattoos and all.\n\nRyan did not know what to say. He stayed to the side, sipping on a drink. Any questions about practical matters he deferred for later. He made it clear, though, that Remy had already had all of her tattoos and piercings before they ever met. And that, with all due respect, she was a pretty intense person to begin with, curse or no curse.\n\nEllie had stepped to the side. She was standing in the corner, in a glorious pose, perfectly motionless. She looked like a statue but would speak if spoken to.\n\nEventually, Claudia left, doors banging. Lizzy also excused herself, but a lot more politely. Melinda told everyone she'd be better off sleeping at home, too, because she had to go to work in the morning. The implication there was, of course, that if she stayed, she would not get much sleep. Her blush was adorable.\n\nAnnie was also ready to go home, but when it became clear Remy was staying, she decided to stay, too. Actually, Remy made it very clear she was never going to leave Ryan's side, ever again. This got Ryan startled.\n\n\"I mean, I am going to go to work tomorrow, for the day, and if you ever tell me to leave, I'll go to the next room and wait, or something. I just meant I will never like leave-you leave you,\" Remy said, in an effort to make her stance sound more reasonable. Ryan was still startled, but tried to smile.\n\nTo Ryan's surprise and relief, the sheets were clean again. But once he got into bed, a weapons race began.\n\nAnnie showed up in her full pajamas but Remy was wearing only panties and a tank top. Annie went to change and came back in one of the new tops, too. She was still wearing the long pajama bottoms, though. The effect of the top was quite striking. The size that was a bit loose for Remy was downright lewd for Annie. It wasn't tight enough to be uncomfortable, but it definitely highlighted her ample shapes. Ryan was mesmerized by the gentle jiggling of her chest. This, of course, meant that pretty soon Remy had to get completely naked. And again, Annie followed suit, after some pouting.\n\nEvil Ryan was intimately familiar with these bodies by now, but it was all still very new for regular Ryan. He'd gotten a little bit of fun this morning but he could not wait to see where this all was going. Kissing and caressing did eventually lead to a hand job, and the hand job eventually lead to a blowjob. Remy upped the ante every time and Annie always called. Remy even kissed Annie on the mouth at one point, but Annie would not back down.\n\nRemy then went all the way and started riding Ryan in earnest. She went harder and harder, and would not give Annie a turn.\n\n\"You like that, big boy?\" she grunted. \"You wanna fuck me in the ass again? What did you do with that paint jar you jammed in there yesterday? You wanna do that again? I'm sure there are lots of things here we could use. You can do whatever you want to me, right?\"\n\nAt this point, Annie was clearly done. This was all way too much for her. She turned away and started wheezing. Remy wanted to keep going but Ryan grabbed her hips and slowed her down.\n\n\"I'm sorry, Annie,\" he said. \"I got caught up in the game, but it's because of both of you. You are both so beautiful. I didn't realize what was happening. I want this to be a safe place for you, and you don't have to compete with anyone for anything, okay? Remy, you said you would do anything I tell you to? Then apologize.\"\n\nRemy took only a few moments to pout, but then spoke. \"Okay. I really am sorry. I was just having fun, I didn't mean anything with it. I just get carried away sometimes.\" That seemed to calm things down a bit. Ryan's cock was still throbbing inside her but he decided he had to put that thought on hold for the moment.\n\nSoon, Annie started talking. \"It's not you, it's me. I want to do all those things for you, but I'm just afraid I won't be as good as her.\" She turned to Remy. \"You're so brave, and confident, and you're so good at this stuff, too. I wish I could be more like you.\"\n\nNow it was Remy who was sobbing, but then the girls hugged it out. Remy made sure to turn their genuine embrace into a lewd body grinding and groping session eventually, for Ryan's benefit, but her sentiment remained genuine even then.\n\nThings advanced again from there, and eventually normal Ryan got to make love to both Annie and Remy. It was his first time with either of them, he realized. What he should have realized, though, was that he had been holding in and building up since noon, and once he was about to cum he lost control again. So, Evil Ryan got to have his style of fun, too.\n\nThe Prodigal Slaves Return\n\nThis time, Ryan woke up in an empty bed. All the girls were gone and he was surprised by how strange and quiet the empty home felt. He'd been fucking around for a grand total of three whole days now, and after spending a whole of three minutes mulling it over, he determined he missed his girls already. This time, he hadn't even gotten to be the first to use the shower.\n\nThere was a surprising amount of scraps left in the fridge. In the quiet open kitchen-and-living-room, it took him an embarrassingly long time to realize Eleftheria was still there. She was standing in the exact spot from last night, still silent like a statue.\n\n\"I thought you were going to do research,\" Ryan mumbled, into his tea cup.\n\n\"I'll have you know, I do my research by methods beyond your understanding. There is no way in the heavens I'm going to abandon my post, so my physical presence will stay here. I can still do my research in other domains. If I have need for any reference material, I will send you, my assistant, to fetch it.\"\n\nThat caught Ryan cold, but when he looked up Ellie was still again. I guess she really is always listening, he thought, half expecting she would read his mind, too.\n\nSince it appeared his new employment as Ellie's assistant hadn't really kicked in yet, Ryan spent most of the day on the PlayStation. Some time in the afternoon the doorbell rang.\n\nIt was Lizzy. \"Hi. Can I come in?\" she said.\n\n\"Of course you can! You practically live here, so of course you can, any time. I mean, if you want to. I'm not trying to pressure you or anything, just that you can come and go as you please, and you're always welcome...\"\n\n\"Uh... I meant it as more of a rhetorical question, though. It's polite to ask that when someone opens the door,\" she interjected. The silence was very awkward. \"I'm sorry, that was a bad joke. I'm really bad at, you know, talking to people. Can I come in, though, for real?\"\n\nRyan let her in without saying anything more. They lounged around for a while, trying to make awkward small talk, and then spent maybe fifteen minutes playing a game.\n\nLizzy was more dressed up than yesterday. Her brown hair was up in a high ponytail and there was maybe more makeup. She was wearing a skirt and some very cute, striped pantyhose.\n\nFor some reason, the style reminded Ryan of Remy. This was maybe ten percent more Remy than what Lizzy had previously worn. It was almost as if Lizzy was dressed for a date, rather than just for going to work. Ryan would have been overjoyed to date a girl like her, at least if he himself was a few years younger.\n\n\"Oh. Shouldn't you be at work? Did you have to leave early again?\" he said.\n\n\"Yeah, I kinda felt like it. It's no big deal, though. I have some leeway with my hours. It's a quiet time right now, so Dave can handle it himself. Listen, I think you kind of know why I'm here, so...\"\n\n\"Oh, yeah, of course. I'm sorry if this is inappropriate, but can I ask, is it like Ellie said? Do you feel worse than yesterday?\" Ryan said. At this point Lizzy noticed Ellie in her corner.\n\n\"Don't worry about her. Like she said, she's going to be here no matter what. We can go to the bedroom if you want to...\" Awkward.\n\n\"Ha. This feels like I'm trying to score drugs or something. Coming here, all the small talk, everyone skirting around the issue, pretending to be friends. Uh, not that we couldn't be friends, it's just that I don't even know you, and literally every discussion we've ever had has been about a magical sex curse, including this one,\" Lizzy said.\n\nSomehow, that did lighten the mood a little bit. She is right about the drug dealer thing, though, Ryan thought.\n\n\"And, since you asked, it is clearly worse than yesterday, and considering what's about to happen, I guess I can just tell you that it's not like I'm in pain or anything, I'm just super horny, so?\"\n\n\"Ah. Yeah. About that. If I just do it, you know, with the energy and stuff, it will kind of wipe your memory again and everything, so it's not going to be that bad. Maybe, if you're feeling uncomfortable with this, I can just jolt you right now and kind of get it over with?\"\n\n\"Yes, please. I think that would be nice.\"\n\nRyan looked her in the eyes. You are so beautiful, he thought. And with that, he grabbed her hand and let loose.\n\nThe effect was immediate. He was just holding her hand but she was already squirming and moaning. The look on her face was ecstatic. Ryan was happy, too. It seemed that there was still no end to his appetite for debauchery. As soon as the energy started flowing, he was completely into it. Normal Ryan had been pretty good at holding down his lust, but now, he could admit to himself that he'd been drooling from moment the doorbell had rang.\n\nHis hands started wandering all over Lizzy's body. He didn't even worry about maintaining the energy flow that much. There would be plenty of time for skin contact later. He held her throat, squeezed her cheeks, and pulled her ponytail. It was wonderful how she leaned into his touch. He then poked around in her mouth with a finger and let her lick his palm.\n\nNext, Ryan went for her breasts. She was wearing several layers of clothing but he took his time. He first kneaded her through her hoodie. The feeling was already magnificent. He then slowly opened it and pulled it down to her elbows. The tee shirt was next. It looked like it was for some kind of a retro gaming thing. Not relevant now. He pushed his hands under the shirt and massaged her soft flesh.\n\nSlowly, the shirt rose up. Lizzy's bra was quite sexy, cute, but sexy. Ryan was now sure she had dressed up for this. He ran his face all over her body, including the armpits, and decided that she was very fresh, too, and smelled intoxicating.\n\nRyan had to open his pants and pull out his cock. It was getting too hard.\n\nHe sat on top of her thighs and rested his cock on her cute little belly, and then pushed his hands under her bra. The fit was tight, so he reached behind her and popped the bra open. His cock started pulsing as he saw her lovely globes in the light of day. He remembered how nice they had felt last time, in the dark, and now he could confirm what he had imagined. They were full, perky, and bouncy, and definitely bigger than Remy's, and now, they would get their moment in the sun.\n\nRyan took a good while, squeezing and kneading. A few gentle slaps here, a polite little nipple twist there. Lizzy was hard into it. Ryan had not paid any attention, but he was sure she had come already. He kissed her, and with a little tongue action, he got her to kiss him right back, despite her bleariness, and once he guided her hand to his cock, she kept stroking him on her own. Her belly was already stained with his slimy secretions.\n\nHe bent her legs up and pulled her tights to her mid thigh. Ripped, pulled, what's the difference? The panties followed. They matched the bra. His cock was swinging around on it's own, rubbing against her pussy, and she was already so wet she was dripping on the couch. He decided to wait, though, and flipped her over. He then spent some time licking her steaming cunt, from all the way down to all the way up, in long slow motions -- from her little landing strip of dark pubes to the very top of her crack. She was definitely coming now.\n\nThen he fucked her, quite vigorously. He pulled on the hoodie until it came off. Then he pulled on her ponytail with what he felt like was a gentlemanly amount of force: not too rough, but firm and reassuring. Piece by piece, he stripped her. The tights were now definitely ripped. That was a marketing trick, he knew. They made them flimsy on purpose so women would buy more, or was it so that they were easier to rip off? Who cares. The panties, Ryan thought, should definitely go into Lizzy's mouth. She wasn't even that loud but he didn't care -- he just liked the difference they made in the tone.\n\nOnce he had her completely naked, except for the panties in her mouth and the bra tying her wrists, he picked her up, threw her over his shoulder, and carried her into the bedroom. He dropped her on the bed and got on top of her. Ryan penetrated Lizzy and began a slow, deep grind. He lost track of time as his hands went from her ass to her boobs, and then to her neck, and on to the ponytail. The slow, deep grind was relentless, and at points, Lizzy was coming on every stroke.\n\nShe was petite, and thinner than Ryan had first assumed, but she was still lucky enough to be blessed by curves in all the right places. She was no Melinda, but she did have a big ass for her body type.\n\nRyan knew Lizzy needed his cum inside of her. That was the whole reason she was there. But he wanted to have some fun, too, so as he finally started to pump his load into her, he decided to put a little extra effort into it. Once he had filled her up with what felt like more than enough, he pulled out and still had some more to give. The thick cum flicked all over her body and because he was pulling her head up by her hair some of it landed on her face, too.\n\nRyan was happy with his work and could not stop himself from rubbing some of the cum into Lizzy's rock hard nipples.\n\nOops. The panties were still in her mouth. After a small hesitation he decided to leave then in there. Definitely an evil-Ryan-type of move, but she looked so happy sucking on them. This, Ryan decided, was a well fucked woman. Not too rough, but not too soft, either. He wanted to take a picture so he stumbled back into the living room.\n\nRyan was surprised to meet no less than three lovely ladies in there -- four, if you were to count Ellie.\n\nAnnie, Remy, and Melinda had all come over, straight from work. They seemed to be getting along nicely but Ryan's dripping wet erection stole all the attention. He walked over to the ladies, excused himself, and reached for his phone. Both his and Lizzy's clothes had been neatly folded onto the corner of the coffee table. Well, what was left of Lizzy's clothes.\n\nRyan briefly considered having an orgy right there. He could probably pull it off, even with very minimal energy use. He had to take a rain check, though, because he could already feel evil Ryan fading. He was in a hurry to finish his plans before he would chicken out. He turned around and headed back into the bedroom.\n\nThe ladies were definitely aroused by the whole situation, but ultimately had a good laugh about it. Then they had another good laugh about how absurd it was to react with a laugh to the first thing.\n\nWhen Ryan got back to Lizzy, she had already stopped squirming and moaning, but was still totally out of it. Ryan took his snaps and then fled into the shower.\n\n---\n\nWhen Lizzy woke up, she could hear the water running. To her horror, she could also hear chatting and laughing from the living room. The bedroom door was ajar. She had something in her mouth. She twisted her hands free from whatever was binding them and upon further examination, discovered that the thing in her mouth was her panties. At least they're mine, she thought.\n\nShe felt complete again. Not happy, not high, but just deeply, spiritually fulfilled: complete. Having my panties in my mouth, or anyone's panties, is a small price for this, she thought. Maybe the others are onto something.\n\nThe exact thing she had feared was happening to her: having let Ryan have his way with her, she now felt a lot better about the whole situation. She no longer wanted another boyfriend, she no longer wanted to keep her own apartment, she felt great about the idea of paying her share of the rent, she even felt like she might start taking extra shifts at work to make a bit more, for everyone's common use, of course. One proper fuck had totally changed her mind about everything and she was happy about it, she was glad she didn't want to resist anymore.\n\nThe last time, she had slept until midnight after Ryan had left her apartment. The euphoria must have faded before I woke up.\n\nShe tried to move but she was still missing her strength. She figured out her wrists had been tied up with her bra. This is kind of cute, too, right? If having your panties shoved into your mouth is cute and adorable then having your wrists bound with your bra is, too. Right? She moved around a bit. Her pussy felt sore, but in a nice way, and her head felt like her hair had been pulled. Quite rough, but not a problem. She felt her nipples and a shiver of pain and pleasure ran through her still tender body. She gasped. Nipples definitely a little sore, check, but no visible bruises anywhere.",
        "The sun was still out, but not that high anymore. She was missing a few hours but that was to be expected. It was impossible for her to ignore the fact that she was covered in cum. Not to worry, I can take a shower, soon. Realistically, I could go in there right now and it wouldn't be that awkward, right? At least not for me, because I feel so fucking relaxed about everything.\n\nAbsentmindedly, she scooped a bit of the cum from between her nose and cheek and tasted it. Do the other girls really eat it with their hands, like that Elbereth chick said? The taste was hard to pin down. She had nothing to compare it to so she didn't know if it tasted like normal cum or not. She scooped her hand over her body, all the way from her belly button up to her neck, to get what was left there, and tasted again. The taste itself wasn't that good or bad but she could tell it was good for her. More like a vitamin, or indeed a drug, rather than food. She really rolled it around it in her mouth to get a good feel for it. This isn't so bad either, was her final verdict.\n\nAll told, her price for complete and total serenity had been very agreeable so far. She realized her earlier mistake. She had feared the curse as just a curse. She had completely focused on the negative and forgotten that there might be anything positive about the situation. Now that she was feeling the upside the deal seemed very good, actually: Lots of sex and pleasure, a deep sense of completeness, and, if not love, then at least friendship, maybe. She could make some friends here.\n\nAnd what was the actual down-side? She'd have to come here a few times a week, to get fucked? That part was actually nice, and if she lived here, she wouldn't even have to go anywhere. She would just be here and fuck every day, if she felt like it. This Ryan guy is supposed to have superhuman endurance, right? And Lizzy had been a little bit interested in him that first time, when he had fallen into her fruit stand. He seemed nice and polite. He seemed shy, like her. He apparently had a decent job so maybe he's more intelligent than he looks. The apartment is nice. Final verdict: he's not that bad, either.\n\nWhile lost in her reverie, Lizzy had scooped the last of Ryan's cum from her chin into her mouth and was now sucking her fingers clean. This was when she realized the shower wasn't running anymore.\n\nShe stopped licking her fingers and looked up. Ryan was in the bathroom doorway, looking back at her. Her fingers were still in her mouth, and in this perfect moment she also realized that her other hand was between her legs, and her middle finger was inside her pussy. The man she had been daydreaming about had caught her eating his cum. Lizzy was absolutely sure no one had ever felt more relieved about being in a mental state where it was impossible to feel shame.\n\n\"Hi,\" she said, keeping her hands and fingers where they were.\"Is the shower free?\"\n\n\"Sure. Hop on in. I can get some clothes for you while you're in there. Uh, did you have a good time?\"\n\n\"Yup, very nice, it worked very well, thank you.\"\n\nRyan stared at her for a few seconds more, with a blank expression. He then went to the drawer and put on some underwear. He walked out the door and closed it behind him. Lizzy was still frozen, but followed him with her eyes. Once he was gone, she fell completely limp and started laughing.\n\nOnce Lizzy got out of the shower, she saw her clothes on the bed, minus the pantyhose, apparently. Still okay with this deal, she thought. There was also some of that generic homewear she had seen Remy use. She understood the point of it now. She was not going to put on any of her nasty-ass clothes, not after a nice, long shower like that. Her panties had been in her mouth. Who knows where the rest of her clothes had been? She opted for the fresh, clean, casual option.\n\n---\n\nRyan had a fairly easy time with the other girls after coming back into the living room. They all heard Lizzy laugh like a maniac but Ryan just told them he'd caught her being a little bit naughty and that she was probably coming around. Annie gave him a big hug and told him it was so nice to see him. She was also happy to see more of the girls getting comfortable with the situation.\n\nThe other girls followed Annie's lead and Ryan gave them all a little bit of energy. He was careful not to overdo it, not in front of Ellie, he wanted to prove to her he could handle himself. He was still genuinely trying to respect the girls' independence, too.\n\nThere was lots of food again, and there was laughter. The mood was a lot lighter than yesterday. Ryan was amazed at how much life there was in his home, even with Ellie just doing her statue thing.\n\nWhen Lizzy emerged from the bedroom, all the girls rushed to hug her and kind of congratulate her. They all knew the sense of inner peace she must be feeling and they were genuinely happy for her. There was also some friendly teasing.\n\nMelinda left early again. Later in the night, Lizzy decided to stay in the guest room. She was not completely fine with the other two girls sleeping with Ryan, but she had enough serenity left to push that worry aside, and get a good night's sleep, even in an unfamiliar bed.\n\nThe situation in the other room was a familiar one by now. The previous night, Remy and Annie had already been all over each other. Tonight, they pretty much picked off from where they had ended on. The girls were desperate to share. This was after Evil Ryan had joined the party, so mind-altering magical effects were definitely to blame. The interesting thing was that the girls seemed to stay lucid for longer now. Ryan had released a lot of energy by the time they went to their happy places. He had also felt more lucid himself, holding back his naughtier self from taking over. The three of them enjoyed each other fully, and late into the night.\n\nThe gap between normal Ryan and evil Ryan was narrowing. Ryan had already felt it after being with Lizzy. As he came down from his high, and evil Ryan faded, he felt like his actions had been a lot less deplorable than previously. In a way, normal Ryan was almost proud of his other half for keeping so cool, and keeping everything so civil and \"gentlemanly.\" He still felt guilty about taking advantage of these women, but in a more detached way.\n\nSeeing Lizzy like that after he came out of the shower would have given him a heart attack, previously. Today, he had held his composure in that situation, too. Ryan fell asleep happy, with Annie and Remy spread all over him in a mess off limbs.\n\n---\n\nThe next morning was largely a repeat of the previous. The girls were gone and Ryan lounged around all day again, alone, except for Ellie. She did always speak when spoken to, but nothing more. He tried to do some chitchat but she was too scary for small talk. Even with his newfound confidence, trying to be buddies with Ellie was a step too far. PlayStation it is.\n\nClaudia had been gone since Ellie's speech. The last time Ryan had fucked her had been the double with Annie in her office. If Ryan's math was right, that made it three days now for Claudia. And if Ellie was right, Claudia should be feeling it. Anticipation grew in Ryan's mind. Claudia wasn't his favorite person but she might be his favorite fuck.\n\nRyan thought about his girls. Annie was clearly in love with him somehow, and honestly, he liked her, too. He had always had a crush on her, but by now, he felt like he had earned the right to actually like her for real. As far as hanging out and getting along and stuff, she was his favorite. He didn't actually know her as a person yet but he liked everything about her, so far.\n\nMelinda was nice, too, but somehow more detached. She was handling the situation the best, it seemed. She was around but also tried to hold on to her old life, whatever that was. Shit, she might even be married, but was there a ring, though? Any of the girls could be married, Ryan thought. Except Lizzy. He had seen her apartment.\n\nRemy was too enthusiastic, clearly compensating for her own issues, and Lizzy was too shy. But Ryan liked them, too, noting again that he didn't actually know them yet. Remy was obviously stonewalling him by always agreeing to everything, but fair enough. They all had to cope in their own ways.\n\nThat left Claudia at the bottom of the list, and that was exactly why Ryan liked to fuck her. She made him feel less bad about it. Fucking the other girls made him feel like he was doing something bad to a good person, and also, like he was taking something he didn't deserve. Claudia was also probably a good person and he definitely didn't deserve her, either, but taking advantage of her just felt less bad. The more he pretended to dislike her the more fun it was for him to force her to cum from her ass.\n\nFuck, I'm horny. How the hell am I like this? I've done nothing but fuck for days now. Why am I still horny? Fuck it. I hope Claudia waits too long. I hope she shows up all fucked up and horny. I'll strip her down and fuck that ass right in that damn hallway! I'm so not going to call her. If she wants to try and stay away, then good luck, bitch!\n\nThe doorbell rang. Ryan ran to the door. He was already hard, and ready to reach for her neck.\n\nIt was Melinda.\n\n\"Ah, Melinda, so nice to see you. Come in. You're early. Everything okay?\"\n\n\"Hi Ryan. Thank you. I'm fine, really, just... you know,\" she said, and gave him a hug.\n\nMelinda came in and they bustled around for a while. She had brought lots of groceries again, always trying to take care of everyone. She was wearing her work clothes, not the white coat, of course, but a classy, gray pant suit.\n\nAfter some small talk on the couch, she hugged him again and held on. The hug turned into an awkward kiss. Melinda was trying to control herself, and failing. She was always warm and motherly around the other girls but now she was acting more girlish herself. Ryan realized Melinda had skipped a few nights.\n\n\"Is it really that bad? How long has it been?\"\n\n\"Since that morning with Annie and Remy. More than two days now. I'm so stupid. I should have stayed last night. But I just had to go home because...\" Melinda trailed off.\n\nOkay, that's a meaningful pause, Ryan thought. \"It's okay. Don't worry. But can I ask, Is it as bad as Ellie said?\" he said. He was genuinely curious about how the curse worked. Not the least because the idea of constantly fucking a steady rotation of hot women was growing on him. But also because he was worried about them.\n\n\"Totally ruined my day. I got nothing done at work. If this is what two days feels like, I never want to go for three. Ha. Well, would you look at me, being here all 'I never want to be without you.' I mean, I don't want to intrude or anything, and I know we're not going to get married or anything. You're nice, but I'm not in love, trust me. Right now I'm just really fucking horny. Nothing more, nothing less. Except that there's nothing I can do about it. I have kind of tried. Somehow, it has to be you who does it.\"\n\nIt took Ryan a few seconds to realize that last bit had been an invitation. He had been holding back the power, out of instinct. He didn't want to go around accidentally juicing the girls up with any little hug or kiss.\n\n\"Do you want to go to the bedroom, or something, or...\"\n\n\"To be honest with you, Ryan, and I rarely get to say this, but I don't give a fuck what you do to me or where, just do it now.\"\n\nLuckily for her, Melinda had had a calming effect on Ryan. If it had been Claudia giving him a free pass, he knew exactly what he would do.\n\nNow, though, he decided to start slow. She was already in his arms and they were already making out so turning up the flow was pretty easy and natural. The effect was fast. Melinda went from desperately horny to gloriously aroused.\n\nShe was sighing, and growling like a big cat. She was grinding herself all over him, swinging her hair around. Ryan was surprised. He had gotten used to the girls being more passive and malleable. He had already taken it for granted that he could just juice them up and take his time, doing whatever he wanted. Reflexively, he started to push more energy into Melinda.\n\n\"No, please, Ryan, let me feel it! Don't... don't knock me out already. I want to feel it. The sex. That shit makes me so happy, but I want to feel the sex first.\"\n\nAll kinds of clothes were flying all over the living room.\n\n\"You don't want to forget it?\" Ryan said.\n\n\"No, I want to remember.\"\n\nSomewhere deep down, regular Ryan was worried that Melinda would not like him without the help of the energy. But it was Evil Ryan who was running the show now and he didn't give a fuck. His cock was huge and all these bitches would love him, no matter what.\n\nThe truth was somewhere in between. Melinda had been horny before she even stepped in the door, and the energy, at it's current rate, had already pushed her beyond any normal constraints. And secretly, Melinda was happy to use the curse as an excuse to do things she would normally not dare. Like showing up at a relative stranger's apartment for a wild and passionate booty call.\n\nAfter all their clothes were gone, Melinda went straight down to her knees and gobbled up Ryan's cock. She'd always liked sex and didn't have that many gripes, but normally she had always had a proper long term boyfriend, or, indeed, a husband. Being with someone she didn't know that well was new and exciting for her.\n\nIt was easy for her to go down on Ryan and she did not need to fake any enthusiasm. Melinda was still sore in some places from that first night but that somehow made all this even better, even dirtier. She hadn't even had time to recover and here she was again. The other girls might be all scared and insecure but she was old enough to know what she wanted. And right now, she wanted sex. Melinda hopped on and took the magic cock inside her.\n\nEven evil Ryan had to admit that having sex with a confident, enthusiastic, and energetic partner was pretty good, a nice change from getting to do whatever he wanted with mindless, drooling dolls.\n\nMelinda was happy, but not stoner-happy. It was more like a runner's high. She was laughing between her moans and riding him hard now. Her wide and full breasts were bouncing all over and they even slapped Ryan in the face once or twice. The two lovers rolled around on the couch, pushing and spinning each other into new positions.\n\nMelinda's gambit had worked. She had turned the curse into a blessing. Instead of feeling like she was forced to surrender, she now felt like she had been given the perfect excuse. She could feel the energy more and more and she knew that it would knock her out eventually, but until then, she would take as much enjoyment as she could.\n\n\"Ryan, uh, don't take this the wrong way. I'm really not trying to goad you or anything, I promise, but could you please not put it in my ass this time?\"\n\n\"That's like music to my ears, you big booty bitch.\" Slap.\n\n\"No, really, it's just that it's still a bit sore. And it would then be nicer again, next time.\"\n\n\"You're still sore? I like to hear that. And it kind of makes sense. And a nice compliment, too, thank you. I might take it under advisement.\"\n\n\"Thank you. I promise to be an extra good girl next time.\"\n\nTurns out, that noise from the door they had both ignored had been Annie coming in, just in time to hear more than she had wanted to hear.\n\nClaudia had told Annie how Ryan had done it to her, putting it in the wrong hole like that, but Annie wasn't sure she believed it. She had no idea the other girls would do it, too, except for Remy, obviously. Annie knew Ryan had the power to do whatever he wanted but she hadn't considered him doing butt stuff with Melinda, of all people. She was so nice, and caring.\n\nThis was kind of like walking in on the love of your life having sex with your aunt, or something. And not like love-sex, but proper sports-sex. Annie realized she had been naive. She knew Ryan had to have sex with all of them and she had even seen him do it. She'd even been in the same bed when it happened. That one night, with Remy... Annie had to admit it, she'd done things with Remy, too.\n\nStill, seeing this was somehow too much. She would have to search for a way to reconcile this. She was in love with Ryan and saw him as her boyfriend, the kind that could eventually even make a great husband. Silly, after just a few days, but I can't help it. Now, though, having heard how he talked to Melinda, she could not pretend anymore. I might be in love with him, but Ryan is definitely a pervert and a fiend.\n\nThe dirty talk wasn't even over yet. They were going back and forth, egging each other on. Ryan even slapped Melinda, and she tried to bite him. And then they were both laughing! Why is Melinda so alert and... enthusiastic? Annie thought the girls always kind of passed out, but Melinda seemed like she was fully awake.\n\nAnnie sneaked into the guest room, relieved she wasn't seen. She could still hear them, though. Worst of all, the whole thing made her wet and horny. Maybe it's just the curse, maybe none of us can resist it.\n\nRyan, in fact, had seen Annie, and if she had been just a little bit slower he would have grabbed her. He did make the decision to spare Melinda's ass, however. She had asked nicely, and she wasn't Claudia. He had another trick planned. Once Melinda was right at the limit of passing out, he stopped and gave her a moment to recover. When she was back, he pushed her to her knees.\n\n\"Beg for it.\"\n\n\"Please, Ryan, cum down my throat.\"\n\n\"More.\"\n\n\"Please put your huge load straight into my belly.\"\n\n\"Why do you want it?\"\n\n\"Because I'm your slut whore and I can't get enough of it.\"\n\n\"Fair enough.\"\n\nRyan did as asked. He shoved his huge cock as deep as it would go and let loose. There was lots of it, and it took a while to all come out, but he got most of it down in there. Afterward, Melinda took great care to save every drop she had spilled.\n\nLater on in the afternoon, Remy showed up. Annie eventually came back from the guest room, too. It became another nice evening, filled with budding friendships. It was already dark out when the doorbell rang again.\n\nRemy went to answer the door but Ryan pulled her back. He wanted to do it himself. Ryan opened the door, and as he had expected, finally, it was Claudia.\n\nWhat he had not expected was the state she was in. Claudia had been running but the rain had caught her. Her sports top and tight jogging pants were soaked and she was shivering from the cold. Her eyes were puffy and she was sobbing. All the snark drained out of Ryan instantly. He saw there was no fight to be had here tonight, no grounds for power games. As soon as he reached to hold her shoulder Claudia collapsed into his lap and the sobs turned into a wail. They both fell to their knees in the doorway.\n\nRyan turned the power on and kissed her. When she felt the flow, she went for his shirt buttons, her fingers still stiff from the cold. Once there was some bare chest there for her to cling to, she glued herself against him like someone hanging on to a life raft in the of a cold ocean.\n\nRemy closed the door while the rest of the girls could only watch.\n\nThe day had been torment for Claudia. Her body had craved for Ryan, and nothing had helped. She had already been on the verge of tears when she left for her run, but when it started raining, it had broken her. There was no way out for her. No amount of willpower could allow her to fight this. Just this one day, she had caused herself more harm than in a lifetime, just by trying to fight this stupid curse, and for what?\n\nYes, it was embarrassing to be subservient like this, to have some man lord over her. It was demeaning for her to not be in control of her baser instincts, of her lust, of her own sexuality. She loved to be in control. She liked to use her sexuality and she loved it when men wanted her more than she wanted them. Sex was nice, but power and control were so much better, and that's what Ryan had taken from her.",
        "Right now, though, she couldn't care less. This was heaven, literal bliss -- the worst self-loathing of her life followed by the greatest happiness she had ever felt. She hated Ryan but she loved this magical energy inside him. She could worship it, dedicate herself to it, be a slave to it, but right now, she just wanted to be close to it.\n\nClaudia's kisses were greedy and desperate. Her crying had turned into moans. She ground her body against Ryan's. His arms held her tight and she felt gloriously warm. She wasn't shivering anymore, she was starting to feel hot. Somewhere deep down Claudia considered how she was supposed to hate this man but she decided to forget that for now. Ryan had won again, and this time, it was all Claudia's own fault. She had lost this round because of her own lunacy, because of trying to stay away. For the next few hours, she would forget all about hating him. There would be time for that again, later.\n\nRyan knew something was different. Maybe the three-day wait had somehow broken Claudia's spirit. There was no aggression in her demeanor. She was soft and pliable, waiting for him to take control. He lifted her top over her head and she complied. Her firm, bulbous breasts still surprised him with their size. They were very nice for such a tight and athletic body. Even more so now, as her body was all primed and wet from her run in the rain.\n\nHe held her against himself with one hand and grabbed a boob with the other. Ryan went to work on it and spiked up the energy. Claudia convulsed and fell into him, taking him to the floor with her. Ryan rolled her around and pulled her tight running pants to her mid-thigh. He bent her from the waist and went straight in to her pussy. They spooned and he went long and deep, holding her by the shoulder and by the boob. There was no split in his personality, this was just Ryan fucking his woman to give her what she needed.\n\nThe other girls were mesmerized. This was the first time they were watching Ryan do it to someone else as complete bystanders. There had been laughter and chatter, but now, only Claudia's moans and Ryan's grunts filled the room. There was also an increasingly fast slapping sound from them coming together, again and again.\n\nRemy had backed away a few steps and was now sitting on the floor. She was biting her lip and pinching her nipple through her shirt. Annie and Melinda were on the couch. The back of the couch was toward the door so they were leaning over it. Ellie was still in full statue mode, however.\n\nAnnie had just barely gotten over the previous shock and now she was watching Ryan fuck someone else, once again. She had some faint memories of being in the same room when Ryan had sex with Claudia before, but this was different. Claudia was a hard boss. She was respected and competent. Annie had always admired her confidence but they had not been friends at work. Annie would have been scared to approach her. Now, she seemed exactly like the rest of them, putty in his hands.\n\nRyan pulled Claudia into him, by her arms, her shoulders, her neck, her hair, her breasts. All the while he pushed into her with vigor, and Claudia loved it.\n\nAnnie had never seen a face as blissful as Claudia's and she knew how the other woman felt. There was no place in Annie's heart to deny the others their pleasure. This is a good thing, she decided. Ryan is a good man, for helping everyone. Annie didn't even realize her hand was between her thighs.\n\nMelinda was still riding on her own cloud and could not be happier. The more Ryan there was for everyone, the better. This Claudia person was still a total stranger to her but Melinda was happy to see her coming around. Melinda realized this was a proper harem. Ryan was a ridiculous stud, riding his former boss on the floor with his other women watching. She almost wanted to cheer him on.\n\nMelinda herself was now part of this scandalous, naughty little sex club and the idea turned her on. It wasn't even the magic, this was the kind of kinky stuff she had often fantasized about.\n\nMelinda reached her arm around Annie and pulled her in. Annie got spooked and tried to resist her out of reflex but Melinda just smiled at her. The smile was warm and loving and Annie gave in. They kept watching, Annie leaning in to Melinda's bosom now.\n\nRyan decided it was time. He pulled out of Claudia's pussy and started to push against her butthole. It was nice and tight, just like before, and he was struggling to be as patient as he should. He pushed hard and Claudia started squirming. She tried to slow him down. He pushed her hands away, gave her ass a few good slaps, and spiked her with the energy again. Claudia came hard and her ass opened up. It was enough for him to slip the tip in. Ryan kept going without too much extra fuss. Claudia moaned louder, and she gritted her teeth for a moment, but then she slipped into a blissful state of ecstasy again.\n\nAnnie gasped when he saw Ryan start to push into Claudia's ass. She held a hand to her mouth. It was the first sound any of the other girls had made since the start of the show.\n\nRemy snapped out of her own thoughts and looked at Annie. She saw the other girl leaning into Melinda's lovely chest. Remy locked eyes with Annie and gave her a wink while licking her lips. Remy was touching herself.\n\nAnnie remembered being in bed with Remy and Ryan before, so she shouldn't have felt so scandalized about Remy's shamelessness. Still, Annie flushed from embarrassment, having been caught reacting so strongly to what Ryan was doing. Annie gathered herself. \"Why does he do that?\" she asked Melinda.\n\n\"Well, why not? He can do pretty much whatever he wants with us, so I guess he's just... well, taking advantage of the situation, of course, but not in a bad way, necessarily.\"\n\n\"No, but it's so weird to want it at all, like what's the fascination? For anyone? You do it, too, right? Do you actually like it?\" Annie continued.\n\nNow it was Melinda's turn to blush. Remy had heard what Annie had said. After a few moments, Melinda answered. \"Well, I think it is a kind of a power play, a way to take things up a notch. Sex is about love, but also about lust. All the kinky stuff is definitely on the lust side of things. When you're really horny and everything he does makes you even more so, that is just one more thing for him to do to push you even higher.\n\n\"As for if I like it, I haven't really done it that much. But with him, it feels just as good as anything else, I guess. Physically, that is. But the idea of it is dirty, and if you're the kind of person who gets off on dirty, then...\" Melinda said. She looked Remy in thy eye while she spoke. She let Annie assume the rest.\n\nMelinda's hug had turned firmer and her hands were roaming Annie's body, caressing her. Annie didn't mind. She felt safe, despite the obvious sexuality of the touch. Annie was naive but she wasn't clueless. She couldn't fully relate to Melinda's explanation but she felt like it was enough for her. Annie accepted it was okay for Ryan and the other girls to express themselves. It was not like she wasn't headed that way, too. Even if she wasn't doing all the things the other girls were doing, she had already gone a lot further than she would have thought.\n\nClaudia's whole body shook in one final, giant orgasm as Ryan came inside her ass. He grunted and held her tight. Afterward, they collapsed back into a spooning position. Ryan stayed inside her while they basked in their afterglows.\n\nAfter a while, Remy crawled in and hugged Ryan from behind, adding herself to the spoon. She kissed Ryan's neck and earlobe. \"I love watching you take what is yours, I hope I'm next,\" she whispered into his ear.\n\nAnnie and Melinda walked around the sofa. \"Um, you want to go take a shower while Claudia is recovering, or...\" Annie said, but Claudia cut her off.\n\n\"It's okay, Annie, I didn't pass out or anything. If it's okay with everyone, I'd like go take a shower first.\" No one said anything, so she continued. \"Maybe not just yet, though. I'll take a few more minutes to rest. Even though I'm not unconscious I'm still pretty fucking tired, you know, from my run and... everything.\"\n\nThis got a bit of a laugh from everyone. Annie wondered aloud why Claudia was so lucid. Ryan told them they are all probably developing some sort of a tolerance to the magic. Claudia eventually got up from the floor, letting Ryan's limp cock slip out of her ass. Her feet were wobbly and she did walk a bit funny on her way to get her shower.\n\nRemy went for Ryan's cock as soon as it flopped out, which was too much for Annie. She escaped into the guest room again. Melinda was still fascinated by everything that was happening.\n\nRyan decided he wanted to take things to the bedroom, for a change. Remy had crawled over his shoulder. Her hips were next to his head now, as she sucked him. He grabbed her tight and got up from the floor. He carried her, upside down, into the bedroom, with his cock in her mouth the whole time.\n\nMelinda considered long and hard about going in with them, even though she had just had her fill.\n\nAfter Claudia got out of the shower, she and Melinda had a good talk, and got to know each other better. They were both driven, independent, and highly educated career women. Claudia was impressed when she found out Melinda owned her own practice. They shared quite a lot over a few glasses of wine.\n\nLater in the night, after Remy's moans had quieted, Claudia and Melinda saw Annie slip out from the guest room and dash into the master bedroom."
    ],
    "authorname": "FacetiousTales",
    "tags": [
        "anal sex",
        "harem",
        "magic",
        "male dominant",
        "anal"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-cursed-tattoo-pt-03"
}