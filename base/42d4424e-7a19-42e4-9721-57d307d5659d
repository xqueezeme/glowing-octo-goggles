{
    "title": "Doesn't Like to Read",
    "pages": [
        "'Sarah,' the sound of my roommate Tanya's voice snapped me out of my reverie, 'you took half an hour in the shower, and now you've been standing wrapped in that towel for 5 minutes looking into your underwear drawer. It's not a lingerie shop. What's so hard to figure out?'\n\n'Well, it is a little bit hard,' I said. 'The white set looks really nice, but makes my skin look more olive, and the black set is nice too, maybe not as nice as the white, but by contrast, it makes my skin look more fair.'\n\n'You're crazy. I thought you were just going to flirt with him, mess with his head, and manipulate him to get him to give you a better grade. You fucking him now? Otherwise, what's he doing evaluating your underwear choice and its effect on your skin tone?'\n\n'I don't know. I just feel freaked out this scheme. I'm not exactly experienced at stuff like this. I thought if I felt sort of sexy and available, it would help me to convey the vibe to him, and he might offer to help me out just so I'd like him, or, failing that, he'd suggest or even propose something indecent, and then...'\n\n'Don't even get me started. No wait. Let me start and finish in a single sentence. 'Don't do it.' Ok, two sentences. 'Because it's a terrible idea.''\n\n'You've made your views very clear on the matter,' I said.\n\n'Who is this professor anyway? He the one always holds the side of his head like he has a headache?'\n\n'No, that's Professor Stevens. We're talking about Professor Kessel. Tall, slim, dresses conservatively, but without a tie; you can tell he's in his forties, but you can't necessarily say why. Sort of Jeremy Irons looking.'\n\n'Honey, Jeremy Irons does not look like he's in his forties.'\n\n'Tanya, darling, I'm not a personal friend of Jeremy Irons. I don't mean Jeremy Irons as he looked when we three had lunch yesterday. I mean Jeremy Irons from some movie when he was around Professor Kessel's age, which is somewhere in his forties.'\n\n'I think I know the one you mean. Sort of stuffy but with a hint of hot? In an old, takes whatever BS he's teaching way too seriously, kind of way?'\n\n'Yeah. He's an attractive man. For his age.'\n\n'So what's he need from you? Probably swimming in grad student pussy. Backstroke and everything, blowing out a whale-style spout of pussy juice as he pinwheels his arms in reverse.'\n\n'You go too far.' I said. 'I don't need that image in my head. But I take your point. What's he need me for, given the sexual options available to him? Well, the word on the street is that he's a straight arrow. No hint of hitting on hot undergrads. His advisees all look like a random selection of grad students, male and female, attractive and unattractive, some clearly on the spectrum; you know, as if they were picked on the basis of their abilities.'\n\n'So no backstroke?'\n\n'No, he doesn't have Professor Bocce's harem, nor, to be fair and open-minded, does he have the male equivalent of Professor Cooper's collection of dim-bulb MILF-loving gym rats.'\n\n'Ooh, innocent little Sarah bandying about a neologism like 'MILF'.\n\n'Strictly speaking, it's an acronym.'\n\n'Still and all, if he isn't grooming and fucking his grad students, like a normal professor, why's he going to break the rules for you?'\n\n'He looks at me. In a way that is almost pained. Like he wants something from me. There's something mutual, too. I like him too somehow, feel there's a mutual connection or something, even though I make a point of not listening in his course, or ever doing the readings.'\n\n'You feel a mutual connection, so you're going to threaten to blow up his career to save you the trouble of studying for his course? You don't feel a connection with me, I hope?'\n\nI laughed, 'I feel the strongest of connections with you. But, you haven't failed me on a midterm, so you're safe. And so is he, actually. I mean technically, anyway. If I get dirt on him, I'll threaten him to get what I want, but if he refuses and tells him to go ahead and expose him, I'll just drop it.'\n\n'Still, it's not exactly a nice thing to do. It's not like you.'\n\n'The midterm grade cannot stand. It will ruin everything. It has to be changed.'\n\n'But you just said, you did it to yourself. You didn't listen to the lectures or read the material.'\n\n'Don't play the 'Just' card on me. I could think of a number of instances where the 'Just' card applies to you, if you want to get started in that direction.'\n\n'And that's what really hurts,' Tanya agreed grudgingly.\n\n'Anyway, here I am, GPA-ruining grade on a midterm, filled with regret, but heading out to make things right, breath sweet, undercarriage polished to a sparkle and beyond reproach, carefully picked undies girded 'bout the waist, ready to face any hardship to get what I'm due.'\n\n'Or to get what some less attractive student, with worse panties, and some sense of shame, wouldn't ask for?' my roommate asked, grinning and sticking out her tongue.\n\nI deflated, and all the cattiness came out of her at once, 'Seriously Sarah. Is this worth it? Does it have a chance of succeeding? As your roommate, I know you watch a ton of porn, and masturbate to an extent that a less tolerant roommate would find objectionable, but if what you say is true, you're also a virgin, and your experience is limited to hand-based fumblings with the idiots you let take you out on dates.'\n\n'Why are they idiots?' I asked.\n\n'You have a point. You are the idiot. They are guys with enough sense of quality female flesh to see through your frumpy clothes, and enough confidence to ask ten girls per day on dates on the percentages theory. You're the idiot nice girl who freezes out the equally nice, and equally inexperienced, guys from your classes or the gym, the ones who don't have the confidence to make the first move without some feedback from you; instead you accept the date requests from these assholes who have the confidence to ask, because they don't care if you say yes or no. And then, when they presume too much, demand sex without creating a connection, you refuse, they call you a lesbian or a cock-tease, and the whole thing ends miserably.'\n\nWhat could I say to that? She had a point.\n\n...\n\nI popped my head around the open edge of his door, 'Hi Professor, are you still holding office hours?'\n\nHe looked at his watch, 'Yes,' he said, 'though officially only for five more minutes. But still, I'm here. How can I help, Sarah?'\n\n'I've been wanting to speak with you,' I told him.\n\n'You're using past tense. Yet you've come in the last five minutes of a two-hour period of office hours. If you wanted to speak to me earlier, couldn't you have come earlier?'\n\nI hesitated, then decided to ignore his question and just push ahead. 'Well, if you have five minutes left, I'll take them.'\n\n'I have them, and more', he declared. 'Please, sit. How can I be of service?'\n\nI entered his office, making a point of closing the door behind me, and sat at the desk across from him, somewhat delicately, as I felt rather underdressed. I normally wear trousers, or long dresses, and long sleeve, loose shirts. Today I was wearing a shorter, knee-length skirt and a scoop neck shirt.\n\n'Professor, it's about my midterm grade,' I declared.\n\nHis expression of patient and alert interest disappeared, and now he looked mildly annoyed. 'And you're here to get some advice on how to perform better on future assessments?'\n\n'Well, that too, of course, but I also wanted to see if we could do something about the actual midterm grade.'\n\n'What do you mean, 'do'? What could we do about it?'\n\n'Well, raise it a bit.'\n\n'Perhaps we could water it?' he suggested, 'See if it grows?'\n\n'Professor, with the grade I got on the midterm...I mean...if I get that grade for the course, I'll have to repeat and I'll lose my scholarship.'\n\n'That is unfortunate. However, I believe the reason scholarships are tied to grades is to prevent scarce resources being wasted on students who aren't focused on their studies. The money can then be re-directed to someone who will make better use of it.'\n\n'Professor, please! You're not listening.'\n\n'I'm listening. I'm just not doing what you want. I wonder if you are listening to yourself.'\n\n'But the midterm was so hard! Wasn't it a bit unfair?'\n\n'Other students performed very well on the midterm. I think what made it particularly challenging for you was the fact that you didn't know the answers to the questions, as a result of being largely unfamiliar with the course material.'\n\n'No professor! I studied so hard.'\n\nAt this, he smiled and said, 'Claiming to have studied hard for an exam you failed is like claiming to be sober after the third time you've fallen down at a party. In the case of the party, drunkenness is the best-case scenario; if you're not drunk, you've likely had a stroke. In the present case, if the recent midterm is a true measure of your performance after studying hard, you're wasting your money at university.'\n\nI was about to protest, but I felt a reluctant smile breaking across my face. It was common to claim to have studied hard when you wanted to plead to professors for leniency, and it was generally accepted without challenge, if also without real belief. But he was right. It would have been terrible if I had spent days, or even hours, studying, and still hadn't known how to answer any of the midterm questions. Of course I hadn't studied; I never studied when I thought I could get away without.\n\nI started again, 'Ok professor. Perhaps I could have studied harder. I will next time. But that midterm grade is so low, if it stays the same, I'll never be able to get above a C in the course, even if I ace everything from here on. There must be something you can do to help me.'\n\n'You know I don't give makeup exams or assign extra-credit work. That is made clear in the syllabus, and I made a point of it on the first day of class.'\n\n'But couldn't you make an exception for me?' I tried to act flirty or sexy as I asked, but it turned out to be a bit harder than I'd thought. Probably it takes practice.\n\n'I did reach out to you with an offer of help. I'd thought...hoped...perhaps that was why you'd come today. A few weeks ago one of your assignments was noticeably better than anything else you'd done in the course. I made a note in my feedback suggesting that you come see me so we could talk about how to achieve that level of performance more generally.'\n\n'You did?' I asked, surprised.\n\n'So, you're not exactly pouring over my comments on your papers, eh?'\n\nDamn. What a blunder!\n\n'Still, if you know I can do the work, why let one midterm drag my grade down so badly?'\n\n'For one thing, you've produced one good piece of work. That's the outlier. The midterm is in line with your general performance. For another, conversations like these are actually hard, and can be heart-breaking, when you have students who worked hard, but just aren't that bright. On the basis of that good assignment of yours however, we know you're smart, so your poor performance suggests that you're just lazy.'\n\nMy mom had been visiting the week that assignment was due, and with her around, I actually had to do some work. I couldn't just spend all my time at the gym, or having coffee with my friends. So I'd done a bit of work, and evidently, he'd noticed the difference.\n\nI needed to reset this conversation.\n\nI made careful, intense eye-contact with him, held his gaze for a few seconds, and then said, 'Professor, I'd be so grateful if you could make an exception for me and help me out with that grade.'\n\n'And I genuinely regret that I can't do it,' he replied, holding my gaze, but somehow making the whole exchange impersonal.\n\n'Can't or won't?' I asked, trying a pouty look.\n\n'Won't, I suppose. It would make me feel guilty.'\n\n'But you wouldn't be harming any of the other students, you'd just be giving a little extra help to me.'\n\n'Why you?' he asked.\n\n'Don't you like me?'\n\n'You're fine. I hardly know you. You think I like you better than my other students?' he asked.\n\n'But...I see you looking at me in class...'\n\n'Really?' he asked, 'As often as not I see you chatting to your friend Rana instead of paying attention to the lecture. That, along with not doing the readings, is your problem in the course. It's not my liking you or not.'\n\nI got up from my chair and walked over to him. I leaned forward over the desk to put my face just inches from his. All of this felt artificial and wrong. It had gone so much easier when I had imagined it. 'Please professor, help me out. There must be something I can do. Just tell me. I'll do anything to improve this grade. Anything.' I tried to make 'anything' sound sultry, but I don't think it came out sultry.\n\n'I don't understand. What are you suggesting?' he asked.\n\n'Well since I said 'anything', I suppose that's up to you?' I replied. I rested my elbows on the desk and supported my face with my hands, bringing my biceps on either side of my breasts, trying to create cleavage he might see through the scoop neck.\n\nAs we stared at each other in silence, I gradually began to hear a soft winding sound coming from the small clutch in my hand. I couldn't help looking at it, and then he looked at it too.\n\nHe looked perplexed, then thoughtful, and then his face hardened to suspicion. 'Are you recording this conversation, Sarah?' He reached for the clutch and took it out of my trembling hand. He popped the snap and looked. Inside was a miniature tape recorder, red light blinking in the corner. He reached to turn it off.\n\n'I'm sorry,' I murmured, 'I'm so stupid. I just...'\n\nHe let the silence hang for 10 or 15 seconds, 'You just wanted to entice me into an agreement to trade sex for grades, and then, once the agreement was made, you planned to threaten me with a recording of the arrangement in order to get the grades you want.' He continued, 'That way you could pass the course without the inconvenience of learning anything, at the negligible cost of causing me to live in fear of humiliation and the destruction of my career. Would that be an accurate summation of what you...just... planned to do?'\n\nI didn't know what to say. I was ashamed. At my laziness, my stupidity, and my selfishness. But I was also mad at myself for coming into a dynamic situation without a single plan, but instead, with two incompatible plans. I had showered, groomed, and picked out underwear and clothing like I was going on a date. Then I'd put the recorder in the clutch. Why did I need neatly trimmed pubic hair and carefully selected underwear if the plan was blackmail? At the moment he'd discovered the tape recorder, I'd been hoping he'd agree to change the grade in return for something like feeling my breasts, or maybe a hand job, and was planning to do it. Looking forward to it somewhat. He was older, but he was tall and handsome, face mature but unwrinkled, with only a hint of grey in the temples of his brown hair. He was sort of sexy too, with his rigid posture, his almost anachronistic precise speech and formal manners. And he just gave an overall sense of being ...very male.\n\nHe broke the silence first. 'I don't like to use the university academic integrity system. It wastes my time, and is often overly harsh in punishment when it finds against a student. In this case, however, I wonder if I'm ethically obliged to report this. It will be embarrassment to me even though I've done nothing wrong, but I worry for my colleagues. Are all your decent grades the results of entrapping your male professors? Have you ever earned a grade at this university?'\n\nMy chest convulsed with anxiety. In the minute since being discovered, I had come to terms with Professor Kessel hating me, and probably of failing the course, but the implications now were much worse. My voice was weak with fear as I started, 'No professor! You don't have to report me. I've never done this before. You must have been able to tell how hopeless I was at it. And I'll certainly never do it again. It was a disaster. And you never agreed to anything, and you didn't even seem inclined to consider it.' I was warming to my topic now, 'So in a way, you were never at any risk, and no good professor ever would be either. I mean, if a professor agreed, then he would be a bad professor, and would deserve the anxiety the recording would cause. It might stop him from making deals like that with other girls.'\n\nHe still looked quite severe, but there was a hint of that sardonic curiosity now as he spoke, 'Are you recasting your blackmail attempt as some combination of a test of character for male faculty, and a public service to the young women of the university. You're some kind of activist and whistleblower?'\n\nI shook my head slightly and looked down, but decided to stay silent to see what he said next.\n\n'Look, idiot professors like my recently dismissed colleague Crane are a plague. Now that I think about it, you probably got this terrible idea from his case?'\n\nI nodded. It was well known that Professor Crane would give good grades to attractive well-endowed girls in return for access to their breasts. It was never any use to me because he was only interested in large Cs or above. 'Trade your Cs or Ds for As' was the joke students told about him. Last year a student had taped him making the offer, and used it to get an A from him. After she had moved on, she had gifted the tape to a friend, who made copies. One copy had made its way to the administration. He was fired at the start of this term.\n\nProfessor Kessel continued, 'The deals Crane made were despicable, and he deserved to be fired. He was apparently the instigator, though I'm sure once word got around some young women volunteered to get the easy grades. He engaged in these arrangements routinely, and with an explicit quid pro quo. Worst of all, in some cases he threatened to give young women lower grades than they deserved if they did not participate. Come to think of it, he should probably have been referred to the police, not just fired. On the other hand, I don't know if I could as heartily condemn a man who gave in to a proposal like the one you just made to me. It's no easy thing for a man in his forties to reject the advances of a beautiful young woman. A fleeting and seemingly harmless opportunity to reconnect with the physical perfection, excitement and possibility of youth, and proposed by the young woman herself...'\n\nI perked up. His tone had definitely changed as he spoke, and he sounded almost wistful by the end. Also, he thought I was beautiful! The term 'perfection' had been used. So I hadn't been wrong. He had been eyeing me in class. Perhaps there was still a deal to be struck. A sale to be made. Not the one I'd planned when I came in. I'd have to pay the real price now, but perhaps disaster could be averted.\n\n'Professor,' I began, 'I'm seeing more and more clearly how wrong my actions were. I was offering you something that perhaps really is a temptation for you?' My voice raised at this question his eyes gave some acknowledgement. 'And yet it was an offer you could not ethically accept, and even if you rejected it, you would at times regret or second-guess your refusal. And then the recording thing makes it so much worse. Still, I think we could resolve this ourselves. I really am ashamed of myself, and you don't need to worry about me trying it again on your colleagues.'\n\n'So your proposal is that you just get away with it? Because you're pretty, bright and charming, you get to walk away from a blackmail attempt...'\n\n'No, no,' I interrupted, mentally filing 'pretty', 'bright' and 'charming' next to 'beautiful' and 'perfection', 'There should be consequences. Serious consequences. But they don't have to be shame and expulsion for me. Couldn't you punish me yourself?'\n\n'How? A grade penalty? You're already on track to fail the course if your performance doesn't improve, and side deals to remove grades for reasons unrelated to student learning are as wrong as side deals to give them.'",
        "I had to think quickly. I knew from his explanations on the first day of class, that in his view, extra work for a student, besides being unfair if it wasn't offered to all the students, was also no treat for the professor, who had to set the extra assignment and then grade it too. What could be a form of tolerable punishment for me, but something appealing for him?\n\nHe'd said in a variety of ways now that he found me attractive. I had to gamble. It was a crazy long-shot, but some instinct told me it had a chance.\n\n'You could give me a spanking,' I suggested, lifting my eyebrows at him. 'Spank my bare bottom,' I winked at him as I upped the ante. I was trying on the flirty thing again, but this time it felt like it was landing.\n\nHis eyes twitched, possibly with interest, but then narrowed again sharply. 'Are you still recording this? Do you have some secondary recording device going?'\n\nCrap. I didn't and I wasn't, but he had a point. Perhaps this was a lesson about integrity and reputation. A porn-fantasy version of the boy who cried wolf. I had been planning to record and blackmail him just a few minutes ago. He had no reason to take my word. How could I convince him to trust me, even as a co-conspirator in some dodgy academic sex-exchange? How could I establish the trust to allow him to agree to do what he clearly wanted to do, and maybe I wanted a little bit as well? A flash of inspiration struck. A way to alleviate his worries while increasing his temptation.\n\n'You could search me,' I suggested. 'Search me very thoroughly to make sure I don't have another recording device anywhere. Once you're satisfied that it can't be recorded, you can spank me to punish me for trying to record you.'\n\nHe said nothing, continuing to stare into my eyes. This was promising. But so far, even if he agreed, all I'd managed to do was prevent the report. I was still no better off with respect to the course. And maybe the prospect of spanking a naked girl and then being left with bright blue balls wouldn't be sufficiently tempting for him to take the risk. No, I had to sweeten the deal still further for him, while introducing some concession that would help me to pass the course. He seemed very focused on the importance of grades matching actual knowledge learned in the course. Perhaps that could provide the missing element.\n\n'And then,' I continued, 'with a clean slate, we could discuss some way that I could compensate you for all of the extra tutoring I'm going to need from you to learn the course material and get a decent grade.'\n\nHe began to nod his head very slightly, though his lips twisted with uncertainty. 'You have transformed, in the space of 10 minutes, from a very clumsy seductress, to the very devil herself. It will be my ruin I'm sure, but I'm not sure I can say 'no'.\n\nI smiled brightly at him, trying to dispel all that brimstone. 'It won't be anyone's ruin. I'm not going to tell anyone about any of this. It doesn't exactly reflect well on me. In fact, I never would have released the tape even if you had been recorded proposing something naughty. True, the threat might have worked, but it would have been an empty one. '\n\nI didn't want him to get cold feet, so I decided to move on from that topic and get started. 'How should we proceed with this search?' I asked. 'I want to provide you with complete peace of mind.'\n\nWe both knew that I didn't have another recording device. We were playing a game now. His eyes lit up as he said, 'I suppose you could have a recording device hidden under your clothing. You should probably take it off and I'll examine the clothing, and, uh, examine you too.'\n\nI guess I knew this was coming, but still, I felt butterflies in my stomach. I'd had a number of dates since coming to college, and while several of them had both felt under my shirt, and some had even gotten hands down my pants, I hadn't been fully nude in front of a man before. I nodded to him, and began to lift my shirt. I considered trying to do it sexily, but then reconsidered. First, the forced sexiness at the start of our meeting had clearly failed. I obviously didn't know how to do that. Second, this was a pretend strip search, not a strip tease. Best to play the game as agreed. I pulled the shirt over my head and handed it to him, standing before him in my bra. He dutifully examined the shirt for neither of us knew what, before folding it carefully and putting it on the side of his desk. I understood that the folding indicated that the clothing would not be returned to me before the spanking, and likely not before this whole thing ended, and that made me shiver a little bit.\n\nI reached behind my back to unhook my bra, shrugged it off, and handed it to him. He took the bra without looking at it, alternating instead between my breasts and my face. My breasts are generous Bs, large enough to hang slightly, and capped with small brown areolas and longish nipples. He seemed to approve of them, and smiled at me warmly. I lifted up my breasts to expose the undersides. 'Nothing under here,' I said, and he nodded in agreement.\n\nI was very aware of being topless. I could feel the air on my skin, though the room was not cold. I glanced down and sure enough, my nipples were at full length. Oh well. Topless was only the half of it. I reached down hesitantly and undid the buttons on my skirt, then let it fall to the ground. I stepped out of it, and did a sort of curtsy to pick it up, finally handing it to him, and standing before him wearing only my lacy white underwear. I run track and play volleyball competitively, so I knew my body was fit and lean, but still I felt vulnerable having it inspected and, presumably, judged. He looked away from me only briefly to examine, fold and stack the skirt, before returning to his intent examination of my body and face.\n\nAs I steeled myself to remove my underwear and reveal my full body for his inspection, I was struck with a terrible realization. I had, since beginning to disrobe, gradually been feeling a warmth and some definite fluttering, in my lower belly, and the warmth had moved lower and lower to settle as a tingling at the front of my vulva. I was aroused. And therefore likely wet. He might see or feel that wetness when I handed the underpants to him. I shifted my hips from side to side, and felt my labia separate and slide in different directions rather than moving as a single unit. Confirmation of lubrication. Yikes!\n\nWell, the situation wasn't going to improve; quite the opposite, most likely. So I grabbed the sides of my underwear, and began to slide them down my legs, daintily stepping first one leg, and then the other, free from them. I handed them over. He examined these with more interest than he'd shown the other articles of clothing, and at one point, his nostrils flared. Was there visible wetness on the underwear? Could he smell me on them? Did he like it?\n\nHe put the underpants to the side, and then took a step away from me, as if to take me all in at once. His eyes traveled up and down, lingering at my middle. I keep my pubic hair trimmed and short, just long enough so that it stays soft and doesn't feel bristly. My thighs don't meet at the top, so he could surely see my labia protruding out from the short dark hair. My vulva isn't one of those dainty little reception areas for the vagina, not tiny bit of pink flesh around the entrance. My labia are long and thick; they have some weight to them, and they stick out, all wrinkly and complex as the leaves of a savoy cabbage. I had read that some women felt self-conscious about large or long labia, and this had always seemed absurd to me. But now that I was standing naked in front of a man, and realized that he might like or not like this feature of my body, I understood the self-consciousness, even while resisting it.\n\nAfter a minute or so, the feeling of exposure and the desire to cover my breasts and pelvis with my hands began to subside, and I got comfortable with his gaze. He'd had plenty of time to take in my expansive labia, and his gaze looked appreciative without any hint disapproval. I had now to decide how to handle the next step. Should this strip search include a cavity search? I didn't necessarily oppose him touching me down there, but doing it as part of the search felt like it would be more prison-like than sexy. I mean, even if this pantomime search had been real, how could a recording device hidden inside my vagina or bottom even work? I decided that he could do it if he asked, but I wasn't going to propose it, and I hoped he wouldn't either. To satisfy any realistic concern about concealment, I slowly spun, and, when facing away from him, briefly pulled the cheeks of my bottom upwards, to show him underneath and between by the cheeks. 'Nothing hidden in there', I said, laughing a little bit.\n\nHe smiled.\n\n'Satisfied?' I asked.\n\n'Oh, well, yes, I'm entirely satisfied that you aren't hiding any further recording devices. So, uh, how should we proceed?'\n\n'Have you forgotten already? You were so clever and all-knowing just a few minutes ago,' I teased.\n\nHe smiled while shaking his head lightly from side to side.\n\n'Well, I haven't forgotten,' I assured him. 'We have some spanking to attend to. What position, do you think? Do you want to take me over your lap? How many slaps?' I paused, 'Though before we agree on that, I'd need to know what sort of spanking we're talking about. How hard do you slap?'\n\n'I don't get many opportunities to practice, so I don't really have a consistent style. How about we try one or two of what I have in mind, and then we'll haggle about how many of those would be appropriate?'\n\n'Sounds fair. Over your lap, then?'\n\n'Not over my lap. Come here and let me show you. Lean over the desk with elbows and forearms supporting you. Feet a little less than shoulder width apart. Bend the knees slightly and arch your back, and sort of push your bottom backwards.'\n\n'Like this?' I asked, after attempting to comply.\n\n'Looks about right. You get a nice stretch in the hamstrings?'\n\nI nodded, wondering how 'nice' the stretch would prove.\n\nHe didn't move right away. He just stared at me, checking me out, up and down. There was no doubt it was lascivious. I briefly imagined Sylvester the Cat, staring at Tweety, looking both predatory and ridiculous, with saliva dripping from his fangs and tongue. Yet while I was Tweety in this scenario, I found it flattering rather than threatening, empowering even. I knew he was trying to soak in the sight of me, etch me in his mind, stretch this moment into an eternity he could revisit.\n\nEventually, he spoke, 'Shall we do a sample or two?'\n\nI nodded.\n\nHe moved to stand to my left, and put his left hand on my upper back. With two fingers, he traced my spine down to my tail bone, then flattening his hand, moving it back up to rest gently on the center of the arch. His right hand moved to touch my left buttock, gently moving over it from up where it meets the back, to a few inches below the point where it connects with the thigh. As it moved back up, towards the top, it left the buttock entirely, before coming down in a stinging slap right in the center of the left cheek. It was all speed with very little force, so while it produced a quick shocking sting, there was lasting pain from impact.\n\n'So something like that,' he said, 'or like this.' At this point another slap landed, the same quick, broad, low-force sting as the first, only this one at the juncture of my left buttock and thigh. This was bit of a sharper sting, because the 'nicely stretched' hamstring had none of the padding of my bottom, but also included slight pleasurable effects in my vulva, because of the proximity thereto.\n\n'And then I could either vary between the buttocks, or do left first and finish with the right, perhaps to a total of 30?' he suggested.\n\nI nodded.\n\n'You count them off,' he said.\n\nThe first slap connected solidly with my left buttock, and provided a powerful sting. 'One,' I counted dutifully.\n\nThe next slap hit my right buttock the same way, with about the same level of stinging pain. As I counted them, the slaps moved down towards where the buttock met the thigh. Those hurt the most, but they were the most arousing, and I wondered if the evidence of my arousal was spattering around back there as the blows landed. Near the end, the individual stinging of the slaps diminished and any sensation of pain was replaced by a general warmth and tingling sensitivity all over my bottom.\n\nWhen I had counted off the thirtieth slap, he stopped hitting, but his hand stayed on my bottom, and I remained still. There followed a silence that threatened to become awkward. I figured I should take charge. I said, 'So now we're quits. Even. What we need to do now is to negotiate the price of the private tutoring I'll need to make up for my bad performance in the course so far.\n\n'Right', he said. 'Why don't you start by stating what you're willing to do. Given the age differences...', he winced here, and seemed to regret bringing it up, but continued manfully, 'we can assume that my parameters are wider than yours. So, what's on the table?'\n\nAs he spoke, his spanking hand drifted off of my buttocks and legs, and centered on my vulva. I anticipated immediate invasion, as I'd come to expect from dates. Men, or at least young, inexperienced men, were very focused on getting inside the vagina, even if it was only with their hands. His fingers, however, did not penetrate. His hand cupped my vulva, and then his thumb and his forefinger fixed on either side of my clitoris. I expected vigorous, possibly painful, rubbing to follow, but instead, there was no further attempt to hone in on the clitoris. What happened was that the thumb and forefinger gently, gently pinched all of the tissue in that area, including the labia on each side. By moving the flesh around carefully, he managed to isolate my clitoris, and he began to gently stroke it up and down, all indirectly, using my own lubricated flesh as a buffer. I'd known, in the abstract, that the clitoris was not a button, but part of a larger structure, and even heard of the clitoral 'shaft', but this was the first time I had experienced it as a three dimensional entity, rather than merely a point on a surface. He was providing for my clitoris what a vagina provided for a penis. It was enveloped in soft, lubricated vaginal flesh, and being stroked up and down. It was divine.\n\nI was lost in this experience for a minute or so, when I heard him asking, 'Are you there? What do you think?'\n\n'You know what you're up to,' I panted. 'I can't think with this going on.'\n\n'Come on, try,' he urged. 'Do you really want me to stop?'\n\nAnd stop he did. Briefly. I moaned with frustration, and he began gently to stroke my clitoris again.\n\n'What have you done already? What are you comfortable with?' he asked.\n\n'I've been fingered, though, evidently, not very well,' I replied. 'But I suppose we're considering things that would bring you satisfaction. So, I've used my hands on boys, made them orgasm that way.'\n\n'Well,' he said, 'generally speaking, a hand job's a man's job. So I would rate that relatively low value, in terms of tutorial lessons earned.'\n\n'Ok,' I said, 'Well, I've had a former boyfriend's penis in my mouth, but only briefly. I took it out for a moment to ask him if it felt nice, and he orgasmed. Then he called me 'stupid' for taking it out. He was the stupid one. We could have tried again later or another day. But not after he called me 'stupid.''\n\n'He was the stupid one for sure', he said. 'But still, you're not exactly super-experienced with blow jobs. If we were to try a blow job, would you keep it in your mouth when I came?'\n\n'Yes', I said. 'Why do you keep slowing down when I try to move back against your hand?'\n\n'Because', he said, 'I think your negotiating posture will be much less flexible after you've climaxed. My hand is currently giving me the negotiating advantage. Will you swallow the cum?'\n\n'Yes,' I said. 'I promise I'll swallow either way, only stop teasing me.'\n\n'I won't stop teasing you,' he said. 'Not just for my sake, either. You'll love it when you finally cum after so much teasing. Anything else we should consider?'\n\nI'm pretty sure I could have closed with deal with a blow job, or series of blow jobs, but I was half crazed with his incredible manipulation, and I felt like I should offer something more. Offer? Maybe get. I wanted something mutual.\n\n'Well', I said. 'I'm a virgin and I'm not sure I'm ready to not be a virgin. And anyway, I'm not on the pill. Do you have condoms?'\n\n'Do I have condoms?' he asked, 'What sort of office do you think I run here? Why on earth would I have condoms?'\n\n'Well, you have a naked student leaning against your desk, ass probably still red from spanking; your thumb and fingers pads are probably pruning from how long they've been paddling in her wetness. So just what sort of office do you run?'\n\nHis hand slackened on my clitoris, and when I looked at his face, I saw it looked sort of sad.\n\n'Ok, no condoms', I said. 'Probably for the best anyway. Now, is there anything else we should consider?'\n\nI had another decision to make. I knew now I could get everything I needed out of this arrangement by just giving some blow jobs and swallowing the cum. But did I want to limit it to that? Right now, I did not. I wanted to connect to him. I wanted to inflict on him the perfect divine torment he was inflicting on me. I wanted to move with him, for us to pleasure each other through the same act. But the risks and downsides of regular sex were just too steep. I had begun to think of the other option, the one that a few of my girlfriends had told me they used to keep boyfriends they liked a lot, without sacrificing their virginity, or risking pregnancy.\n\nI knew three friends who did it for their boyfriends. Two said it was uncomfortable, but not so terrible, and worth it since their boyfriends were good guys. But one of my girlfriends said if the guy could last a while, through the uncomfortable first phase, and if he didn't mind you engaging in a little supplementary masturbation, then it felt great and could lead to wonderful orgasms.\n\n'I don't know. Is there anything else to consider?' he asked, though I suspect he had an idea. There aren't so many holes in a girl that one loses count of them. He just didn't want to be the one to bring it up.\n\n'Would you be interested in putting it in my bottom?' I asked.\n\n'I'm not sure 'interested' captures my feelings on the matter' he replied calmly, though his hand moved more swiftly, and briefly he was at risk of pushing me over into orgasm.\n\nMy arousal made me impatient with any more verbal sparring. 'Do you want to sound clever and detached, or do you want to fuck my ass?' I demanded.\n\nHis hand froze. 'I really want to fuck your ass,' he said.\n\n'However,' he continued, 'just as my office is under supplied with condoms, so it is under supplied with lube. I wish I were a pharmacist rather than a faculty member. Though I suppose in that case, you'd be a junkie looking for pills, rather than a bright young woman who just doesn't like to read.'\n\nI decided to let this pass. These odd, needling observations or speculations seemed to be something he could not control, even when they worked against his interest. He was sort of funny in his strange, obsessive way, and it was sweet how guilty he clearly felt about what we were doing whenever his arousal level dropped below 11. I was feeling just fine, and ready to move on. 'Let's see if we can manage without. Or, if not without, with spit and whatever of my natural lubrication you can transfer to your penis with your hand.'\n\n'My hand is pretty covered,' he acknowledged, 'Perhaps we could manage as you say. Why don't you get up on the desk on your hands and knees? I'll slide in behind on my chair, and see if I can move some of that juice with my mouth, perhaps add some of my saliva to the situation.'",
        "'Sounds good,' I replied as I began to comply. It did sound very promising. I'd never had a mouth down there, and if he were as good with his mouth as he was with his hands, it might be a real treat.\n\nHe fussed with his chair a bit to get it the right height, and then moved on in. I arched my back and pushed out to give as much access as possible. His tongue seemed to have no problem going where he wanted. He started with a broad lapping and sucking sweep of my vulva, then moved up to deposit the accumulated liquid just above my anus, at which point it began to drip down to the relevant spot. I heard the hissing of the chair's height mechanism, and he must have dropped down a little bit, and his mouth surrounded my clitoris while his nose was buried in my vagina. He lapped gently, and occasionally isolated my clitoris and sucked it a little bit, again, treating it like a shaft rather than a button. This felt amazing. Completely right. Cool sheets on your skin after a long day, or warm water on your face in the morning; these comparisons don't capture the intensity, but they approach that sense of perfect fit. Not so much a testament to his skill, as an ideal match between soft membranes. As he licked and sucked, he used a finger to sort of push the liquid he'd deposited on my ass into my anus. Not going too far in, but I could feel it gradually loosening up, and getting a little lubricated. Every couple of minutes he'd do that thing where he sucked up accumulated lubrication and spat it up above. His finger was now gliding easily in and out of my bottom. How did I feel about that? Physically, it was nice. Slightly intrusive, but with the noticeable tingle/tickle of mild sexual pleasure. However, where the licking of my vulva felt impossibly, endlessly, nice and right, that finger in my bottom felt naughty and wrong, but in the best possible way. That finger didn't belong in there, and I shouldn't want it. But there it was, and want it I did. I savored the taboo of the situation, and tried to anticipate how it would scale up when it was his bigger, much wronger, penis, rather than his finger.\n\nBefore the penis was introduced, my professor had one more trick up his sleeve. I felt his face move away, and again the hiss of the chair mechanism. Then I felt his tongue on my anus, licking, probing, even sucking. This was a wicked blend of what had been happening before. The tongue was more pleasurable than the finger had been. Better suited to the terrain, and I was experiencing serious, tangible pleasure from the licking. But it was also much more naughty and wrong than the finger. He was...tasting...my ass. And as the thought was expressed, a shiver flowed forward to my recently abandoned clitoris, and at the same time raced up spine, making me squirm and rear my head.\n\n'You like that?' he asked.\n\n'Don't stop,' was all I said.\n\nHe kept on, using his hands on my buttocks to spread me open. I felt totally, lewdly exposed. It seemed that having my buttocks pulled open had loosened the tight knot of my anus, and he was now occasionally pushing a thin stream of liquid into me.\n\nAfter a few minutes of this treatment, I decided we should move on. My ass felt quite well lubricated, and I wanted to bring his penis into the mix. I got off my knees, and slid off the desk, standing before him. He got up from the chair, and looked down into my face.\n\n'Kiss me,' I told him. He hesitated. This wasn't a kissing sort of arrangement. But then he seemed to understand, and leaned down to meet my lips. I knew his mouth would taste of my vagina and my ass, and that was what I wanted. 'I'll have what he's having,' I thought as our lips met, mouths opened, and tongues began to explore. I was ready for anything. If it had been horrible or disgusting, I still would have wanted it. But it wasn't horrible. The dominant taste was of my vagina, which was salty, and tangy and fresh, with the usual undertones of pheromones, hormones, biology. I knew that taste well, as licking my fingers was a big part of my masturbation ritual. But along with my vagina, there was also a slightly bitter, perhaps alkaline, saltiness, and a muted earthiness. The combination was intoxicating, thrilling, inexpressibly deviant.\n\nAs we kissed, he began to unbutton his shirt. When he slipped it from his shoulders, I noted how muscled and lean he was. He was as fit as a 20-year-old athlete, but his muscles seemed denser, gnarled and tighter than a young man's, like he was carved out of driftwood, knots and all. In contrast to his careful treatment of my clothing, he threw his shirt to the side indifferently, not taking his eyes off me. I dropped to my knees in front of him, grateful as I landed to find the carpet beneath me thick and soft. I unbuckled his belt quickly and undid his trousers. I looped my hands around the waist and made sure I had his underwear as well, pulling it down firmly. I guess his penis, which was fully erect, had been held to the side by his trousers and underwear. Unleashed, it swung to straighten itself, and whacked me in the side of the head. I let out a single exclamation of laughter, and he snorted as well. While I wanted to appraise and then familiarize myself with his penis, I realized that kneeling was not an ideal position from which to take him in my mouth. I was too low, and his penis jutted straight ahead around my eye-line.\n\n'I could sit,' he offered.\n\nI caught his gaze and smiled, 'No, let me try something else first.' I shifted from my knees to my feet, while remaining in a squatting position. It put me at a perfect height, though there would likely be a limit to how long my thighs could maintain this position. His straight, uncircumcised penis bobbed before my face. Uncircumcised was new to me, but didn't seem alarmingly different. It was large, but not huge, maybe just over seven inches. The top third of the head was already visible, poking through the foreskin. I reached out to hold it and found it warm to the touch, and strangely soft and yielding to my grip. The softness I hadn't been expected, and I was briefly disappointed. As I moved my hand back towards his body, the foreskin drew back and revealed the entire pinkish purple head, seemingly inflated to bursting, and coated in pre-cum. I pumped it a few times, getting used to how the foreskin shifted, and realized the softness had been deceptive. Just as the soft foreskin covered the bright, plump head, so his whole penis was covered with a layer of soft skin, but underneath that layer, he was as hard as an iron rod. While the shaft was pliant to the touch, I couldn't have bent his penis out of its straight line without serious effort, and certainly not without hurting him.\n\nI popped the head in my mouth. The pre-cum was fine, sort of like a diet or mild version of vaginal secretions. It was salty and bland, with a layered, oily feel, but none of the richness the vagina offers. Still, in the context, it was arousing. The glans felt hot and pleasant in my mouth, thrumming with energy. As I took more of the shaft in my mouth, my jaw felt stretched a bit, and soon the tip was poking at the back of my mouth, and threatening a gag reflex. I tried to move my tongue around to increase the stimulation, but there wasn't much room to move with all that penis in there. I backed off, and, with just the head in my mouth, was able to flick my tongue around a little, and get some more of that pre-cum, flowing pretty generously now. He groaned lightly with the tongue action.\n\nI knew my purpose here was to get his penis wet, but I wanted to appreciate it a little bit more than just as an obstruction in my mouth. I backed off, and began to lick the sides, moving lower, occasionally attaching myself like a suction cup to one side or the other. I found that thin layer of softness over the solid core fascinating, and probed it repeatedly with the tip of my tongue. We had ourselves an iron fist in a velvet glove situation here. As I approached the base, I also encountered some more complex aromas and tastes, which, in addition to their richer and more organic smells, provided a whole new world of textures, pliancy and resistance. I licked around, and briefly thought about pulling one of the testicles into my mouth. I hesitated, however, as they are known to be sensitive, and I didn't want to hurt him, or even have to break the spell by having him suggest that I lay off. I even sort of wanted to get behind that loose dangling sack, and investigate the other side, but the angles really didn't make that possible, and I wasn't about to ask him to spread his legs, or put one foot up on the table.\n\nOk, enough exploration. He was plenty hard, unlikely to deflate, and heading soon for my ass, so I decided to emphasize lubrication over further stimulation. I pushed as much of his penis my mouth as I could, and took it out every now and then to distribute the saliva over it with my hand. At the same time, I moved my other hand down to my vagina and tried to gather some of that that freely flowing liquid, bringing it up and smearing it on his penis as I sucked. The vaginal lubrication made a big difference, as his penis went from merely wet, to slick and slippery. I found I could get it deeper in my mouth now too, and I was enticed as always by my own taste.\n\n'Do you think we're ready to try?' I asked, after drawing him from my mouth.\n\n'I'm certainly willing,' he replied.\n\nI dropped to my knees, turned away from him, and put my head down and to the side on the soft carpet, arching my back and pushing my bottom up towards him.\n\nHe knelt carefully behind me, leaned forward to give my anus one last quick lick, and then put the head of his penis against my anus.\n\n'Move your torso forward a bit while keeping your legs in the same place. Keep some control by supporting yourself slightly with your hands,' he told me. I complied, but this felt like less of an ideal angle for the planned penetration.\n\n'I'm going to place the head of my cock on your ass, and hold it steady. You back up on it, taking only as much as you can take without pain. Do not hurt yourself. There is no need. As you take me in, try not to resist or squeeze. Instead, though it may feel counterintuitive, push out, as if you're trying to expel it. Once you've taken me in, you'll be back in that ideal position you started in, and we can try some fucking, and you can do some squeezing if you're up for it, but for now, you set the pace, and remember to push rather than squeeze. If you feel tempted to squeeze, just move away instead.'\n\n'Got it,' I said, thinking 'There's no way that gristle brick is going up my ass without hurting.'\n\nI did as he had told me, and at first, nothing happened. There was no more penetration than if he'd been trying to put it in my navel. But gradually, as I pushed back, and pushed out, I could feel my anus expanding, and he fraction by fraction, his penis gained entry into my ass. The feeling was intense: powerful, though not painful, stretching and tingling at my anus, and a strangely gentle but persistent presence growing within me. Another warm, organic occupant, nestling in among my other organs, down there in my lower belly next to my vagina. The stretching feeling was all at the entrance. Once inside, there seemed to be plenty of room. I wanted more of this feeling, this opportunity to welcome, this being filled, and I pushed back more firmly. There was no additional discomfort. If I pushed quickly, there was some friction at the opening, but otherwise, just more intensity to that pleasant feeling of fullness.\n\nSoon, I heard him say, 'That's all of it. Are you ok?'\n\n'Fine,' I said, dreamily, 'It was just as you said. Feels nice. You can move around now if you like.'\n\n'All right. Let me know if you need me to slow down or... need anything...if there's anything I can do for you. I can't reach from here, but once you're fully comfortable, you might want to try masturbating.\n\nI ignored that. I'd masturbate in a few minutes. For now, I was concentrating on the novelty of this feeling, trying to articulate it so I could enjoy in in detail, be able to remember it, masturbate about it later. He began gently to move back and forth inside me. The movement increased the tight, tingling stretching at my anus, and made the presence in my belly feel more active, more specific. This was turning out to be great.\n\nHe continued to move slowly. I said, 'You can speed up a bit if you want. Everything feels good at my end.' I wondered if he'd feel compelled to make some sort of word play on 'end', but he may finally have gotten too distracted.\n\n'No,' he said. 'Or rather, I can move a bit faster if you want, but I'm enjoying this. If I move much faster, I'll lose the...'\n\n'Specificity?'\n\n'Yeah, something like that. I'm really feeling this right now. I mean it feels very pleasurable, but also as if my cock is a device designed to experiencing the interior of your ass, and it is doing what it is meant to do.'\n\nWeird and alien as that sounded, I knew just what he meant.\n\nAs we continued at our leisurely pace, I remembered what he'd said about squeezing. I thought I'd give it a try. When he pushed in, I'd push out, and he would enter all the more easily. Then, when he began to withdraw, I'd squeeze, tightening the opening; I was welcoming advance, resisting retreat.\n\n'That feels incredible' he said.' Much better than speed to increase the intensity.'\n\nI was glad he liked my idea. But the squeezing aspect increased the friction at the tight opening, and it was starting to get a little uncomfortable. I told him, 'I like it too, but with the squeezing, I think we need a bit more lubrication. Take it out for a minute and we'll see if we can get it a bit wetter.'\n\nHe withdrew slowly, and I refrained from squeezing. He began to look around, wondering how we could increase the lubrication.\n\nI knelt, telling him, 'I'm going to put it in my mouth again.'\n\n'No,' he said. 'You don't have to do that. It's been in...'\n\n'I know where it's been. Don't worry. It's fine. There was nothing in there but your penis.'\n\nHe stood, and I moved to him and took him in my mouth. The alkaline saltiness was a bit stronger, and the vaginal taste was weaker, and texturally tacky now rather than slick. I exulted in the naughty taste, and I reveled in how dirty I was being. I reached between my legs and pulled some fresh lubrication, rubbing it on his penis. With that, plus the saliva, it was starting to be slick again. I looked up at him, and he was staring at me, wide eyed, entranced.\n\n'I think I'm ready to try again,' I said.\n\n'I have an idea,' he said. 'If you were to get up here and lie down on the desk, then your pussy juices would run down to your ass and help keep things wet, rather than dripping away and pooling on the carpet.'\n\nI looked down at the carpet and saw the big wet spot. If he had said 'my carpet' instead of 'the carpet' there might have been trouble, but this seemed to be well-intentioned, and maybe a genuinely good idea.\n\n'Now the one disadvantage with this position,' he said, standing between my raised legs, 'is that you can't really back up on it. I have to put it in.'\n\n'I think this time it will go easy. Put it in. Just read my face and you'll know if it's ok. If you miss a signal, I'll just tell you.'\n\nHe moved forward, and I felt that pressure on my anus renew. He gently pushed in, and my ass received him quite easily, welcoming him back inside. It was a delightful feeling, just as it had been before. I soon restarted by squeeze and push technique, and he clearly appreciated it, occasionally stopping for a moment and breathing sharply, I think to avoid orgasm, before starting in in again, relentlessly and slowly. I began to masturbate. It really did bring the whole thing together. Instead of fascinating discrete sensations, I began to feel a building intense pleasure around my whole pelvis. Everywhere from my anus to my navel, and inside too, felt like it was throbbing with pleasure. He started to slip in and out more and more easily, the stretching feeling fading and the filling and unfilling becoming a natural rhythm. I think his plan to divert the excess lubrication from my vagina to my ass had worked.\n\nSoon, the pleasure began to approach a peak, and I warned him, 'I'm going to cum!'\n\nHe smiled at me, and kept moving the same way. The climax, when it came, was bigger, covering more of my body, and more intense, than I had known. My pulse pounded in my ears, I felt pressure behind my eyes as my lids closed uncomfortably tightly, my brain felt like little electrical blasts were going off all over, and my whole pelvis surged with pleasure that bordered on intolerable. It crested, and then it subsided and felt merely pleasant again.\n\n'You good for a few, or is that it for you?' he asked.\n\n'I can usually go for two or three, but that was pretty intense.'\n\n'Ok. Is it uncomfortable now, or still nice?'\n\n'Nice.'\n\n'Then let's see if there are any more in there.'\n\nWe continued, and after I started to masturbate again, I was soon climaxing again, perhaps slightly less intensely, but it was still wonderful.\n\n'Should we try for a third, and I'll come with you?' he asked.\n\n'No,' I said. 'I said you could come in my mouth and I'd swallow, so I'll keep my word. Let me come again and, if you can hold off, then you can come in my mouth.'\n\n'That was the deal for a blowjob. You don't need to do that now.'\n\n'I want to. If you can hold off, hold off. I want you in my mouth again. I want to taste everything.'\n\n'Ok, but if you want me to hold off, you have to stop saying things like that.' He was smiling at me.\n\nI smiled back, and then got back to work with my masturbation.\n\nThe third time was splendid as well, but it would be diminishing returns from here on, so I decided to call it quits while I still felt aroused enough to enjoy tasting that penis and feeling his pleasure boil out onto my tongue.\n\nHe withdrew carefully, and, once free, stepped away and stood there uncertainly.\n\nI approached, squatted in front of him. I briefly wondered what I'd think of the taste now that my arousal was waning, but then pushed on and put his penis into my mouth. I was pleased to find it tasted fine still. More like my vagina than before, and less tacky. A little bit bitter and earthy. But I still somehow liked the fact that I was a girl who liked the taste of her own ass. It didn't make my blood boil with arousal anymore, but in the moment, and I was still in the moment, it was sexy.\n\nI took his penis out of my mouth. 'Any last requests?' I asked.\n\n'Well, I certainly don't want a blindfold.'\n\nI gave him a cross eyed 'lame!' smirk, but really I thought it a little bit funny and it suited the mood.\n\n'But is there any particular way you like to ejaculate in a 21-year-old girl's mouth or for her to swallow the resulting semen?', I asked.\n\n'Hard to imagine a bad way, but, since you're asking, when I'm close, I'll tell you, and then if you could lightly suck the tip, while licking the underside, that would be great. And then pool the cum on your tongue and show me without spilling any. And try to swallow in a way that's audible to me. But other than,' he added, grinning, 'just as you like.'\n\nI did exactly what he'd asked. To the letter. Even though there was a ton of cum. I even stood up next to him and put my head by his ear as I swallowed, and showed him my empty mouth afterwards.\n\nSemen is not so great, but no worse swallowed than spat, I'd say. Once it's in your mouth, it is a bit gluey and a bit bleachy. Also, it sort of stings a little bit. I wonder if it is all those poor doomed tadpoles desperately searching your cheeks, tongue and throat for an egg to fertilize, a chance at life? Anyway, it's kind of gross, if it weren't at least a little bit gross, it wouldn't be such a sexy favor to take it in your mouth and swallow it, right?",
        "So it was nice to do it for him. He clearly liked it so much.\n\nAfterwards, we hung out naked for a bit, me on him on his office chair.\n\n'Will you come to learn the material from me, do you think?' he asked.\n\n'Yes, I will,' I said. 'I know I don't have to, but I think I'll play it straight with you from now on.'\n\n'How do you know you don't have to?'\n\n'I could just exploit the guilt you feel for having done this. On top of that, you'll feel vulnerable because I could tell people it happened, even though there's no recording or proof now. You can't believe I'd never tell anyone, even though I won't.'\n\nHe looked at me with curiosity and interest.\n\n'Ultimately,' I said, 'I'll come because I told you I would, and it will probably do me some good, and maybe, if I pay close attention, and perform well, we'll try some of this again.'\n\n'I should get lube for my office,' he mused.\n\n'See if you can get some sort of neutral tasting lube.' I said. 'Fake strawberry or bubblegum flavor would actually make things gross. Maybe get some condoms too.'"
    ],
    "authorname": "asullivan2",
    "tags": [
        "student",
        "professor",
        "college",
        "older man",
        "younger woman",
        "spanking",
        "blackmail",
        "atm",
        "first time"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/doesnt-like-to-read"
}