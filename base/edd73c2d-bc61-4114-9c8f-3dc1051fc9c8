{
    "title": "Three Sisters Ch. 10 - Final",
    "pages": [
        "Part ten of a ten-part story about three sisters and their experiences being graded for sale as slaves. Note that this story contains references to BDSM and not-completely-consensual sexual submission. The story also includes themes and depictions of incest or incestual desire, although in this particular chapter it is mostly alluded to, but be aware of that before getting invested in the story. The story also includes one character's growing interest in lesbian sex. All characters are at least 18 years of age.\n\n*****\n\nSo many things\n\nAlone in the office with Angie, Joanna stood in front of her for a moment before leaning back against the edge of a desk. She contemplated the beautiful, nude young woman kneeling in front of her, handcuffed and collared and clearly experiencing an emotional and sexual overload.\n\nWhat is wrong with me? Angie wondered for the thousandth time. I don't want to be a slave, and I'm not a lesbian, but here I am slave-naked and on my knees in front of another woman, and I'm so excited about spending time as her slave that if I came right now I'd probably explode. Over the course of this day I've become so aroused so many times I can't think straight; seriously, it's like a fog on my brain, and I'm sure I'm about to drip all over the carpet if I haven't already.\n\nJoanna stood and moved close to Angie, then grasped the ring on the front of her collar and drew her to her feet; Angie's gaze was still downcast. \"Look at me\" Joanna said. Angie looked up into the older woman's eyes and immediately felt an overwhelming tension, a sexual electricity that raised goosebumps on her skin. Finally she spoke: \"Why? Why me?\"\n\nJoanna hooked an index finger through Angie's leash ring, pulled her closer and held her gaze steadily. \"You are one of the most interesting women I have ever met, even in this line of work\" she said. \"Today you demonstrated courage, compassion, loyalty, resilience, and intelligence, and almost as important you did not display any ego. Your decision to act despite potential humiliation and text your cousin Cesar for help was admirable, and that you instructed him to work with Brandon and myself to effect your freedom was very smart.\" She rubbed the leash ring between thumb and forefinger for a moment. \"I find all of that enormously attractive, and I want, no I have to get to know you.\" \n\nJoanna pulled Angie to her face by the leash ring and kissed her on the lips, a long, hard, passionate kiss. At first Angie kept her eyes open, but then closed them and leaned into it. The softness of Joanna's lips, the heat radiating from her body, her intoxicating perfume, the stiffness of her own pierced nipples under silk rubbing on Angie's chest, were overwhelming her.\n\nJoanna finished the kiss, placing a hand on the back of Angie's head and stroking down to her neck.\n\n\"I have so many things to teach you, little slave\" Joanna said quietly.\n\nAngie smiled up at her.\n\n\"First things first,\" Joanna said, straightening up and stepping back a bit from Angie. \"Let's get you transported to my place. Come along\" she said as she snapped a leash onto Angie's collar, \"And from now on refer to me as 'Ma'am'. Understood?\"\n\nAngie shivered and her eyelids fluttered as she nearly came on the spot, then replied \"Yes ma'am.\"\n\n\"Good\" Joanna said. \"The sooner we get you home, the sooner we can see about releasing some of that pent-up energy, yes?\"\n\nAngie slightly shivered again. \"Yes ma'am.\"\n\nJoanna led her out of the office and down the hall, in the direction of the arrow on the \"Shipping\" sign. They stopped in front of a counter where an attractive Asian woman (a peer of Joanna's, Angie guessed) greeted them. She wore a dark red HCI blazer, her name tag read \"Susan\" with \"Shipping & Transport\" underneath, her black hair was cut in a stylish bob, and she displayed a ring on each finger and both thumbs. \"Hey Jo\" she said, smiling broadly. \"One to go?\"\n\n\"Hello Susie\" Joanna replied. \"Yes, personal property this time: please ship her to my condo downtown.\"\n\nSusan raised an eyebrow. \"Oh? You've never taken one off the floor in all the time I've known you. She must be special.\"\n\nJoanna looked over her shoulder at Angie. \"Yes, she is. Very special indeed\" she said. \"So please handle her with care - she's rated Prime+.\"\n\nSusan raised both eyebrows (as did Angie \u2014 when did that Prime+ rating happen?) and nodded in appreciation. \"Very nice! I'll take care of her, don't worry.\" She tapped a few keystrokes on a computer terminal, and a nearby printer rolled out a ticket tag with a red border. \"Red for shipping to a training facility!\" Both Joanna and Susan laughed; Angie didn't get it \u2014 must be an inside joke. \"Seriously though, are you training her by yourself?\" Susan asked. \"If so, could you use some help from, say, a fellow licensed and bonded trainer?\"\n\n\"From you, my dear?\" Joanna replied, smiling. \"Any time. This one will definitely need some two-on-one sessions, we'll need to build up her stamina. I'll text you.\"\n\n\"Great!\" said Susan. \"I'll be sure to bring my double-pronged strapon.\" The two older women laughed again and Angie's apprehension spiked, causing her anus to constrict involuntarily.\n\nJoanna and Susan kissed each other on both cheeks. Joanna handed over Angie's leash, told Angie \"See you this evening, Angelica\" pinched her on her ass (causing Angie to jump slightly) and left.\n\nSusan hung Angie's leash on a hook under the counter, then returned to her computer terminal. While she tapped away on the keyboard, she looked over Angie with a professional eye. Pulling a large rubber stick with webbing straps on each end out of a drawer, she placed it on the countertop and stepped around to Angie. Angie noticed that while Susan was quite a bit shorter than either she or Joanna, she carried herself with great confidence and authority; Angie felt a little envious.\n\n\"I can't wait to hear your story from Mistress Joanna,\" she said. \"She's a very old and dear friend of mine, so I know that if she chose you to serve her there must have been a very good reason. I must say that you are a beautiful young woman and I think you will make an excellent slave, although I suspect there is something else going on here.\" Susan smiled, the corners of her eyes crinkling with amusement. \"In any event I am very much looking forward to assisting in your training.\" She placed a hand on each of Angie's shoulders, then ran them down her upper arms, onto her sides, then down to her hips before reaching back up and cupping her breasts. She bounced them gently in her hands, rubbing Angie's nipples with her thumbs. She then took Angie's chin in between her thumb and forefinger, and rubbed her thumb along Angie's lips. Again Angie took the hint, opened her mouth and took Susan's thumb in, sucking it then opening her mouth and licking it with her tongue. \"I also look forward to having this between my legs\" Susan said in a lowered voice. Releasing her chin, Susan picked up the rubber stick and said \"I think we will have some interesting times ahead, the three of us. Now open wide.\"\n\nAngie obediently opened her mouth, Susan thrust the foul-tasting stick between Angie's teeth, fastened the straps behind her head then told her in a quiet voice \"Regulations, dear\" before leading her over to a shipping crate (really a small wire cage with an open door on one end) and commanding \"Back in.\"\n\nTurning around, getting on her knees and placing one leg in first, Angie awkwardly shuffled her way into the cage. Susan unhooked her leash, closed the door and locked it with a small electronic lock. She fetched the ticket tag and affixed it to the front of the cage, stooped down and said \"See you soon!\" with a little bobbing of her thumb, and returned to her terminal. A few minutes later a man in an HCI shirt rolled in a cargo dolly, slid the forks underneath the cage, pumped the handle a few times to raise the cage off the ground, and rolled Angie out through a set of double doors.\n\nThey emerged into a large, high-ceilinged, busy, noisy warehouse space, with rollup doors along the farthest wall, some of which were open so that Angie could see trucks and vans backed up to load slaves. Some slaves were being transported in cages like Angie, others were shuffling along in a sort of single-file configuration (Angie remembered from school that it was called a \"coffle\") where each slave was chained by the collar to the one in front of her. In one such coffle the slaves wore hoods over their heads that completely blocked their ability to see, hear, or speak; one slave, a white woman covered in freckles with wide hips and small breasts, hesitated, so a man in coveralls \"zapped\" her with an electric prod. Her body jerked and she stumbled but started moving again. They were being herded out of a small, chainlink fenced-in area labeled \"Remainders\" and into a SlaveMart panel van. The man pushing her cart followed her gaze, and commented \"They're lucky HCI refuses to sell to the foreign labor markets. Discounted is better than dead.\" Angie wasn't sure how lucky they were. \n\nAgainst the near wall was a long metal railing mounted about five feet off the ground; this must be the individual purchases, Angie thought, there were gagged slaves with their collars chained to the long railing (instead of to each other like the coffle), shuffling in fits and starts toward the end of the railing to be processed for transport by a woman seated at a desk. Each slave had a little tag hanging from their collar that must be their shipping instructions. Many of them looked stunned or shocked, some scared, others utterly miserable; Angie wished she could find out each of their stories.\n\nThe man rolled Angie's cage onto a red square painted on the concrete floor, disengaged the dolly, and rolled it away. A young ponytailed white woman in khakis and an HCI polo shirt walked past the cage, paused, and scanned the ticket tag with an attachment on her data pad. She crouched onto one knee, tapped on the pad briefly, then peered into the cage at Angie. \"You're for Ms. O'Meara, huh?\" She looked over Angie for a moment, then said \"Your ride should be along any time now,\" stood and walked to another set of cages. \n\nAngie sat in the cage for a while, biting on the rubber bit gag and watching the activity around her. Or at least as much as she could see: the cage was too narrow to turn around in, and she was kneeling with her upper body hunched over her thighs and her hands secured behind her back. From time to time a low whistle or one of those strange wolf howls she'd heard earlier would come from behind her, and she'd remember that her vagina and anus were both well exposed to the rear of the cage, on display for any warehouse employee walking by. When she first realized what was happening she blushed, but now she was growing slightly more comfortable with it. After all, she probably wouldn't wear clothes again for weeks - slave training is always done naked. And to be honest, being so exposed, vulnerable, and helpless was a turn on.\n\n\"Great\" she thought, \"if I stay this turned on for the next month I will end up in the hospital.\"\n\nAngie watched the constant flow of slaves coming and going, the workers and supervisors doing the thousands of things necessary to keep the place running, and tried to guess at each of their stories and how they ended up where they did. Eventually her mind began to wander: what did Joanna's place look like? What would they do together? How would they \"release\" her \"energy\"? What was Joanna like when she wasn't at work? For that matter, what was Susan like? What would they do for \"training\"? In a couple of weeks she would be at Cesar and Felia's cabin on the lake, just before the Fourth of July. What did Joanna mean when she called Felia Cesar's \"slave wife\"? Would there be more training, but alongside Felia? Being Cesar's slave would be the realization of a long-time fantasy, but with Felia too...that was the beginning of a new fantasy about to be realized. Angie started to squirm as nonchalantly as she could while naked in a cage.\n\nFinally another dolly appeared, she was wheeled to an open bay where a cargo van was backed up, and two workers lifted her crate and slid it into the van alongside some others. Just before the rear doors closed Angie heard the ponytailed lady tell the driver and his assistant that all their stops were downtown but they needed to do the Harris County run first.\n\nHarris County? What on Earth...? Then Angie looked at the crate beside her, saw a handwritten tag for \"Harris Co. Jail\" on the outside, and on the inside was another naked, gagged, and handcuffed woman glaring at her.\n\nOf course, it was her sister, Magda.\n\n*****\n\nThis concludes Book One of the Three Sisters. Book Two will continue the story of Angie, Magda, and Alina as they make their way through different aspects of the slave system.\n\nThis is my very first effort at writing a story of any kind, and I'm very gratified by the surprising amount of positive feedback and encouraging comments. I most humbly thank each and every one of you who read, liked, favorited, and commented on my stories. It's because of you all that I will continue on!"
    ],
    "authorname": "GentlemanMariner",
    "tags": [
        "cages",
        "lesbian",
        "non-con",
        "sex slave",
        "series",
        "slaveauction",
        "slavery",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/three-sisters-ch-10-final"
}