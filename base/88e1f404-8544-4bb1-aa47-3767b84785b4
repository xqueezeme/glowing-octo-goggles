{
    "title": "Any Chance We Could Ch. 40",
    "pages": [
        "This chapter is not meant to stand alone. Please begin at the first chapter to appreciate this tale.\n\nFriday, November 2\n\nIn the dim light of 5:30 as a cell phone alarm sounded Mary Claire reached across Carol to turn it off. With her long hair flying across my arm and face she rolled back to me with her breast pushing my shoulder, \"Sorry, I've got to get up and work on breakfast.\" With a quick kiss on the head of my cock she climbed over Carol and headed to the bathroom, closing the door while she showered. By six she was dressed and headed downstairs. I turned to spoon Veronica for awhile but my morning woody indicated I needed to relieve some pressure.\n\nLess than five minutes later, Carol joined me in the shower and embraced me from behind. \"Don't have time for a fuck do we?\" she asked gently stroking my soft but now hardening cock. \"How 'bout this instead?\" she quietly added as she knelt, turned me and took me into her mouth. After a few minutes of my cock in her mouth, my balls in her hand and a finger pressuring my asshole, I came.\n\n\"Thanks,\" I gasped.\n\n\"Thought you'd like that,\" she smiled. \"A woman has to make sure her man is satisfied.\" As we toweled each other off I made sure all her soft parts were nicely treated. I left the bathroom with her blowing her hair dry. Pulling back the covers, climbing in I snuggled with Veronica who was just beginning to wake up.\n\n\"Umm, lover. Who was in the shower with you?\"\n\n\"Carol. Mary Claire got up awhile ago to work on breakfast, speaking of which I smell coffee.\" I smiled and kissed her neck and nibbled on an earlobe.\n\n\"I'll be down shortly. What's our morning like?\" she asked softly.\n\n\"After breakfast and after Keith leaves to do the inspections I need for us to spend some time with Cheryl and Lauren to begin fleshing out job descriptions. Speaking of flesh, your ass feels mighty good pressing against me.\"\n\n\"Better than any other of the many asses in this house?\" she giggled as she glanced back over her shoulder.\n\n\"Top of the heap, or bottom depending on the position,\" I replied.\n\nI lightly slapped her ass, rolled her onto her back, then squeezed her right breast as I kissed her. \"Time to get up, Amy Anne'll be here before you know it,\" I reminded her as I got out of bed. I dressed in an oxford cloth shirt and khakis and went downstairs to get my first cup of coffee. Mary Claire attired in a white blouse tucked into a very short black skirt was perched on black patent 3 inch pumps with a white apron on that reached below the front of her skirt. While I enjoyed watching her, the very best view occurred when she bent in front of the oven with her ass pointed at me. The subtle wiggle that was included told me the brief show and glimpse of her red g-string was deliberate. The doorbell rang and interrupted my leering but not before Mary Claire looked over her shoulder and smiled.\n\nI answered the door and invited Amy Anne in, greeting her with a hug and a brief kiss on the cheek. I took her light trench coat as my eyes enjoyed the form of her breasts that were apparent in her tight knit top as she slid it down her arms. I liked how she was dressed, business-like yet not overly conservative. Along with her well-fitted top under her blazer she was wearing a straight navy skirt that ended just at the top of her knees, light black hose and navy pumps with at least a three inch heel. In the heels we were virtually eye to eye.\n\n\"Let's go into the kitchen,\" I smiled. \"Coffee, tea, juice. We have all three.\" I led her by touching her elbow and pointing the way with the other hand. As we entered the kitchen I introduced her to Mary Claire.\n\n\"Is this lovely woman the one you've known for forty years, Dad? My you've aged but she hasn't. It's a pleasure to meet you ... Mrs. Warren,\" smiled Mary Claire taking Amy Anne's extended hand.\n\n\"How about just Anne, or as Scott says, 'Amy Anne',\" she smiled.\n\n\"Amy Anne it is, I like two word names. What would you like to drink?\"\n\n\"Coffee sounds great.\"\n\n\"When we knew each other you went by 'Amy Anne', why now just 'Anne',\" I asked.\n\n\"It's somewhat of a long story that I'll tell you about another time,\" she replied. \"But I do like how you've put the two together.\"\n\nAs Amy Anne turned from the table holding her cup, two more joys of my life came down the stairs, both dressed in polos and tight jeans wearing low heeled slides. \"Ladies this is Amy Anne Warren. These two lovely ladies are our daughters Katrina, the gorgeous brunette and Ashley the awesome blond.\"\n\nAfter shaking hands and as the girls moved to the counter Amy Anne turned to me and asked, \"How many children do you have?\"\n\nVeronica heard the question and answered as she entered via the dining room. \"Four, depending on how you count. Ashley is my birth daughter, Katrina is Scott's, Mary Claire has adopted us and we've pretty much adopted Cindy who's at work right now. We love them all. It's nice seeing you again, particularly at this early hour Anne, or is it Amy Anne?\" My future wife looked absolutely gorgeous, tight light green knit top with a plunging neckline that flattered her bust-line, an above the knee length brown skirt, tan hose and tan strappy slides.\n\n\"I just told Mary Claire to call me either, but I think I'd like to be called Amy Anne by this lovely family.\"\n\nJust as the girls were pouring themselves coffee, Carol came down the stairs and a brief look passed between her and Amy Anne as she entered the dining room that Veronica caught but didn't react to. Carol introduced herself and shook hands with Amy Anne. \"I'm Carol McDonough, I'm not a daughter but I live here,\" she laughed.\n\nMary Claire herded us all to the dining room table which she'd set earlier and put a wonderful selection of a bacon, egg and cheese casserole on the table along with freshly baked cinnamon rolls. The aromas blended together to make our mouths water in anticipation.\n\n\"My, do you always eat this nice a breakfast?\" asked Amy Anne, \"It looks delicious.\"\n\n\"Mary Claire is quite the cook, and no, not every day. Then again it's not every day that we meet someone who went to high school with Scott and can fill us in on all sorts of juicy stuff,\" grinned Veronica.\n\n\"High school?\" laughed Mary Claire. \"I thought it was since kindergarten. Where'd you go to high school Amy Anne?\"\n\n\"Mary Institute. Back then it was a girls school. Scott went next door to St. Louis Country Day School, now they're combined and are known as MICDS. Not so ancient history, less than thirty years ago. This is the first time we've seen each other since the summer your Dad graduated,\" smiled Amy Anne.\n\nWe continued chatting until Keith showed up at eight to get the keys. He's a very handsome young man, chiseled features, broad shoulders, tanned from working outside, wore his polo shirt and khakis quite nicely, about twenty six to twenty eight. I noticed Veronica's nostrils flair a bit as he introduced himself to her and Amy Anne. There was an unspoken communication between Veronica and Keith when they introduced themselves. All three daughters also shared an unspoken communication between them, one that said, God, he's a hunk, married, but what a hunk!\n\n\"Before I forget to ask, how was your concert last night with Gloria?\" I asked Mary Claire.\n\n\"Oh, I guess I forgot to tell you, it was cancelled mid-afternoon, the band couldn't get here from Georgia because of some tornado activity. Gloria and I are going to lunch Saturday and maybe take in a show.\"\n\n\"I'll follow you over there,\" said Amy Anne to Keith. They left immediately followed by Ashley and Katrina leaving for their morning classes. Just as they were about to open the door Ashley asked, \"Did we tell you we applied yesterday for classes at Wash U in January. Being transfer students we'll not need to take the ACT in December as we first thought, bye Dad.\"\n\nAs soon as they were out the door Veronica turned to Carol, \"How do you know Amy Anne?\" she asked.\n\n\"Was I that obvious? I didn't think she was,\" replied Carol.\n\n\"I know you too well my love, give,\" smiled Veronica.\n\n\"We're in the same social circle,\" grinned Carol.\n\n\"You swing with her, don't you?\" asked Veronica.\n\nThis exchange was interrupted by Lauren coming in the front door saying \"Hi, everyone. What smells so good?\"\n\n\"Lauren this is Carol McDonough I think I mentioned her yesterday.\"\n\n\"Hi, Carol you look lovely,\" smiled Lauren extending her right hand.\n\n\"Thanks, lookin' pretty sexy yourself.\"\n\n\"Have some breakfast. Mary Claire can you warm up some of the casserole in the micro. Please do enough for two, Cheryl should be here shortly,\" smiled Veronica.\n\n\"Swing with her? Yes. I have, for several years, five or six. Her late husband as well and both their children,\" smiled Carol.\n\n\"Why didn't you greet her as an old acquaintance?\" I asked.\n\n\"Those who participate in the lifestyle are careful when they see each other away from a gathering. Even more so for our group, which is mostly local couples. Our group isn't open. We don't have a site on the web or ads in special papers. People become aware of the group and are able to join only if they're invited by another member. So, members of our closed group try not to do that to avoid prying questions. Sorry, I did it simply out of habit, certainly not to conceal anything from you. I'm sure when she gets back you can have an open and free discussion. I know I'd like to. You have a right to know everything about me. No, I want you to know everything about me. Keith and his wife are also members, as well as his sister-in-law,\" smiled Carol.\n\n\"So you've fucked Keith? The Keith who was just here?\"\n\n\"Mmm, yeah. And he's a good fuck,\" smiled Carol even more broadly. \"Very good, and so is his father-in-law.\"\n\nThe doorbell rang and I welcomed Cheryl and offered breakfast. As Cheryl and Lauren became acquainted over breakfast, Carol continued, \"Ask Amy Anne about her life when she gets back. I need to get to the campus. I love you both,\" and she kissed both of us goodbye.\n\n\"Well, that's interesting. Doesn't change a bit about I feel about her and how much I love her,\" I smiled. \"Does it for you?\"\n\n\"No, maybe she'll have some suggestions about who we can bring into 'our own' circle,\" replied Veronica. We walked into the dining room to sit with Cheryl and Lauren. Lauren was wearing a dark semi-sheer blouse over a sheer dark bra, short skirt, high heeled pumps that matched her skirt and stockings, the tops of which were below the hem of her pulled up skirt.\n\nCheryl was dressed in a knit top, short wrap skirt that was spread open showing her stocking clad legs up to her bare thighs above the hose tops. Her high heeled sandals were the color of her tan skirt.\n\n\"You know if it's going to be a contest for whom shows the most leg, we could make it a daily event and involve all the women in my life,\" I laughed.\n\nVeronica reached over and wrapped her hand around my cock through my pants and said, \"You'd think this man rarely had sex, wouldn't you?\" smiled Veronica.\n\n\"Well, it's been a week since he fucked me,\" grinned Cheryl as Lauren turned to look at her.\n\n\"You don't say. It's been since never for me,\" laughed Lauren.\n\n\"That'll change, be assured of that,\" piped up Mary Claire who was refilling cups. \"That is, if you don't say no.\"\n\n\"Amy Anne should be back shortly, but let's get started. Let's go into the den shall we,\" I suggested noticing that the plates in front of the two ladies were empty.\n\n\"Mary Claire would you bring a fresh carafe into the den, thanks,\" asked Veronica.\n\nWe each grabbed a pad of paper and a pencil from the desk. Veronica and I sat on the couch, Lauren and Cheryl in the wingbacks across the coffee table from us.\n\n\"First, job titles. Cheryl you'll be our household manager and Lauren, our CPA and financial advisor. Lauren, Cheryl will be responsible to you only to make sure that all financial transactions that she initiates, household bill payments for instance, and any debit card purchases are promptly reported to you. Lauren will be responsible to us for financial standings, all tax issues and bank statements. Lauren, by noon each Monday you are to provide me with a one page financial sheet listing the balances of all our accounts. Each account is to have its own one page summary noting all transactions since the prior report. You'll both be told generally what's expected on a day to day basis by either one of us or by what's on the calendar. You need not check with the other of us before doing what's asked. Cheryl you'll maintain a master calendar for all members of our household including both of you. I'm sure you can recommend the appropriate software and make it available on our network. You'll also assist Lauren with secretarial support as she requires it. You'll also be the executive secretary to Veronica and me. I don't anticipate that the demands'll be heavy but there could be periods when the workload will be demanding.\n\n\"We'll go to the bank today or Monday and get applications for debit cards. Veronica and I have one. Mary Claire and Cindy as well as Katrina, Ashley and Carol will need one. We will be establishing two house accounts, a property maintenance account to cover all property related expenses including utilities. The cars will be in the property account and all their expenses including gas will be out of that account. The family account that we'll use to cover day to day expenses from food to clothing to entertainment. Lauren you'll need to check online bank and card activity daily and remind any of us that we need to turn purchase receipts over to you to validate that each transaction is one of ours. I'll expect every Friday by noon a summary of purchases by category over the prior week on these two accounts. Cheryl, you'll then maintain a file of receipts in the event something is to be returned. You'll also track warranties and vehicle maintenance records, reminding us when maintenance checks are to be done.\n\n\"Lauren you'll need to maintain minimum balances in the various active accounts and we'll set that up at the bank. Cheryl, Lauren will begin living here after the remodel is done and you'll have a shared office adjoining her suite which will be off the northeast side of the pool. Until then, you both can share the den. I expect both of you to complete whatever tasks we assign to you on a timely basis, so feel free to work whatever hours you want. I'm less concerned about holding to so many hours a week than I am in having all work accomplished. I'm paying you both a fixed salary rather than an hourly rate. If you can get the work satisfactorily completed in 28 to 32 hours a week, then kudos on your efficiency. There'll be weeks where you may have so much to do that you'll put in fifty to sixty hours. While I prefer a monthly pay on the first of month, I think you'd prefer to be paid bi-weekly. Lauren will set you both up for direct deposit on that basis.\"\n\n\"I think we should have a set time to meet with you each week, such as from 9:30 to 10:30 each Tuesday morning,\" Lauren interjected. \"Cheryl and I'll probably meet daily and then we'd meet at eight to review matters ahead of the regular 9:30 meeting.\"\n\n\"That's a good idea. A weekly meeting to review the prior and upcoming matters would be good. Also, before I forget, six percent of your salary will be going into a retirement fund. Further, for every dollar over that that you put into your retirement account, up to four percent of your bi-weekly salary will be matched by me. This is on top of the six percent. Lauren I need for you to shop for a top of the line health policy to cover all of us including Cheryl's kids. Also, you both have clothing allowances and Veronica will cover that with you,\" I set my pad aside and smiled at Veronica.\n\n\"As I told Lauren,\" Veronica began, \"when we interviewed her, 'pretty is as pretty does'. We expect that both of you'll dress stylishly and tastefully for all external contacts. That means things as simple as grocery shopping to welcoming business contacts into our home and your office. Speaking of visits here, Cheryl you'll need to alert us of any scheduled outsider visits so that we can be dressed appropriately. Lauren since you'll live here that won't be a problem for you to change if necessary, but I think we'll have to make the upstairs guest bedroom available to Cheryl to store an alternative wardrobe and for a place to change,\" smiled Veronica. \"I'll expect you both to wear a skirt or fitted pants and heels for even the most mundane outside tasks. Even for a quick trip to the drugstore or other errands.\"\n\n\"What's the dress code when it's just family?\" asked Lauren.\n\n\"As tastefully casual as you want. Sexy is encouraged, ... from subtle to blatant. Total nudity only in your bedroom or around the pool unless it's a special occasion. You may wear whatever revealing clothing you're comfortable with. I know both of you enjoy flashing your legs at Scott, so have at it,\" grinned Veronica. \"If you want to wear stockings, heels and a blouse, or a sheer top, I know you'll be appreciated. You may have sex with whoever in the house asks you or whomever you invite. Sexual harassment is not only encouraged but will be evaluated and rewarded. That said, if you don't feel like it, say no. \"No\" always means just that so please don't use \"no\" in any sexual play or teasing. We don't want to have any confusion. As for my husband, all I ask is that I know if you're fucking Scott. Not that you can't, just that I know.\" Smiling, Cheryl and Lauren both nodded that they understood.\n\n\"While Scott said that there is no set work day, I'll expect you both to be ready to begin whatever is scheduled for the day or no later than nine. That'll enable us to have a standard time to connect with either of you on a given day,\" Veronica clarified.\n\n\"Cheryl, I'll give you a key so you may come and go whenever,\" I said smiling. \"Lauren, I gave you one yesterday as I recall. We both look forward to this the working out for a long, long time. You're both lovely, talented women.\"\n\n\"Whose considered family?\" asked Cheryl.\n\n\"In addition to Veronica and me and our daughters, Katrina and Ashley; there's Mary Claire who mostly lives here, Cindy, Carol who also lives here and of course the two of you,\" I explained. \"We intend to treat you as more than just employees, and will include you as much as possible in our family and social life. You could be traveling with us, or vacationing with us, depends on your availability and desire. Friday nights are usually spent at the country club eating, drinking, socializing and dancing. You both have a standing invitation to attend. Cheryl that includes Beth and Max.\"\n\n\"You're both welcome to stay or come for any meal, typically Mary Claire cooks and Carol helps. I also cook and Scott primarily heats meat over an open flame. Feel free to volunteer to help and I'd like a bit of notice before you stay. Only from a pantry standpoint and for Cheryl to plan shopping lists with Mary Claire. While I may make some additions or changes to the menu, what's stocked in the pantry and the menu will be primarily in the hands of Mary Claire. How much food is not the issue, having enough on hand is,\" smiled Veronica.\n\n\"Heating meat with an open flame, indeed,\" I laughed. \"What a way to describe my contribution.\"\n\n\"Excluding the meat between your legs,\" loudly laughed Mary Claire.\n\n\"Veronica, I haven't needed a cocktail dress since college. Would you have time to run out and help me buy one for this evening?\" asked Lauren.\n\n\"Sure. I want to visit with Amy Anne for awhile, then we can go. I'll bet Mary Claire would like to go as well,\" smiled Veronica.\n\n\"While you're out you can go by the bank and pick up debit card applications and set up some new accounts. Lauren'll work up a list before you go,\" I explained.",
        "Veronica heard the bell ring, got up and opened the door for Amy Anne. \"Inspection is underway and I asked him to come back here before going across the street,\" she said to Veronica.\n\nI introduced Amy Anne to Cheryl and Lauren who before they both stood were showing bare leg above their stocking tops. \"Nice to meet both of you. I see Scott's still a leg man,\" laughed Amy Anne.\n\n\"I'm going to give Cheryl a tour of the house and look in the basement,\" said Lauren walking out of the den followed by Cheryl.\n\n\"More coffee? Do you have time to visit?\" asked Veronica.\n\n\"Sure, all day if you want, but I need to get this contract to Emerson and Hazel before noon as promised,\" grinned Amy Anne. Taking her coat and blazer off and before sitting in a wingback, asked \"I'd never do this normally but seeing that Carol is a very good friend and came down the stairs this morning, and seeing the blouse Lauren is wearing, let's see, ... is this how you do this?\" she hiked her skirt up to the edge of her stocking welt and after sitting adjusted the hem to be above the top of her garter stockings. \"Still makes you hard doesn't it Scott.\"\n\n\"Ahh, yes, what'd you expect. Veronica appreciates a good looking leg too,\" I gasped.\n\n\"I like you Amy Anne. I liked you the minute we met yesterday. The fact that you were my soon to be husband's first lover, intrigues me,\" smiled Veronica as she pulled her skirt hem above her stocking tops before sitting next to me on the sofa.\n\n\"Oh, my, how sexy,\" remarked Mary Claire bringing in a new cup and a carafe. \"Want another pair, Dad?\"\n\n\"Legs or tits?\" I laughed.\n\n\"Either or both, you know that.\"\n\n\"Yeah, I do, you may stay and get acquainted with Amy Anne, or not. If you stay, legs,\" I smiled.\n\nMary Claire set the carafe down after filling the cups, removed her apron and hiked her skirt up to her waist before sitting in the other wingback with one long leg draped over the arm to show a little more than her legs.\n\n\"I'm really, really going to like your family. Are all your daughters this comfortable?\" smiled Amy Anne.\n\n\"Yes,\" I simply replied.\n\n\"I married a first year med student, Robert Klein, right after high school graduation and promptly got pregnant. Susan, Sue is now twenty four and two years later I had Bertram, ... Tram. When Tram was a year old my parents hired a nanny and I completed a business degree at Fontbonne University. After Rob interned and graduated he joined a medical practice as an internist. A little more than a year later, he and a nurse decided to go to Australia and get married. The divorce was a bit contentious, he hadn't accumulated any assets but when it was all settled, he was responsible for airfare for the kids to visit twice a year. His parents as well as mine were very supportive and still are.\"\n\n\"I'm sorry to hear that,\" I sincerely added. \"That is about his leaving, not his parents I meant.\"\n\n\"I know what you meant. It worked out for the better. Rob was not an attentive husband and little I did in or out of the bedroom was satisfactory to him. I'm not sure he really knew how to love. We should never have married but it was the honorable thing to do back then if the girl was single and pregnant. Rob never physically abused me, but some of his comments hurt and lasted longer than any bruise. Admittedly, I did lose all the baby weight after Sue but added even more after Tram was born. When Rob left I felt unloved and I really started to gain weight until one day I realized I needed to make a change. And change I did. I watched what I ate, exercised heavily, lost weight and started to have more energy. To go along with the new me and my new outlook on life I started to use just the second half of my first name.\n\nTwo years later I met and then married, Jerold Warren. The kids kept Robert's name, not because of any positive regard for Rob, but because we adored his parents so much. I was twenty eight when we met and he was forty eight. I knew he was comfortable but it was only two weeks before we married that I learned he was incredibly wealthy. Three years ago he had a massive and instantly fatal stroke while having sex with Sue in our bed.\"\n\n\"Oh, I'll bet that was sticky,\" interjected Mary Claire.\n\n\"No, not really I was in bed with Tram in his bedroom and it wasn't the first time for us to sleep with, ... fuck, our children. When the EMTs got there we were all back in our proper beds, so no harm outside the house. I loved him a lot and still miss him, he was a wonderful, caring man. He loved both the kids too and left each of them as much as he left his son from an earlier marriage.\"\n\n\"I see we have some of the same predilections,\" winked Veronica.\n\n\"Hmmm, that's interesting. Anyway, early in our marriage Jerold and I experimented with having either another woman or another man in our bed. He especially liked to watch me getting fucked by another man. The whole sexual experience was much more exciting to me when my husband was watching me fuck another man, ... or woman for that matter.\"\n\n\"Who'd have known that the quiet girl I knew back then had a voyeur side to her,\" I laughed.\n\n\"Scott you planted the first three seeds by fucking me in a park and then in the back seat at the drive-in with people on both sides able to see if they had but looked,\" she laughed. \"Two or three nights a year before I met Jerold I'd fantasize about those nights but added that we were being watched.\"\n\n\"That's two, what was the third,\" asked Veronica.\n\nAmy Anne looked at me. I knew the third before she said it, \"That summer before he went off to college and my family moved away, your dear Scott persuaded me to allow him to take Polaroid pictures of me to remind him of me.\"\n\n\"Oh he did, did he!\" shockingly replied Veronica before laughing.\n\n\"For a long time I pictured him laying on his dorm bed with my pictures in one hand and him doing himself with the other,\" she laughed loudly.\n\nI was stumped on how to respond but I felt heat cross my face. \"My embarrassed man here still takes risqu\u00e9 pictures, but they are of a far better quality than the Polaroid variety,\" my love grinned as she stroked my hand. \"I know that you know Carol from her lifestyle group. I'm curious how you got started.\"\n\n\"My husband and I eventually were invited by one of his lawyers to join a 'by invitation only' lifestyle group. It expanded our horizons well beyond a few couples and our children. As the kids got older they joined us in our lovemaking. When Sue turned eighteen she began to accompany us to lifestyle gatherings. She was every man's teenaged-daughter fantasy, very popular... and with some of the women as well. When Tram turned eighteen he was every mothers' teenaged son. Lots of repressed fantasies were played out with those two. They loved it and still do, ... I still do.\"\n\n\"We enjoy a high degree of sexual freedom in this family. Perhaps you and Sue and ... Tram, is it?, would care to join us for dinner some evening,\" grinned Veronica. \"I assume that both are good lovers.\"\n\n\"Among the best,\" proudly smiled Amy Anne. \"They certainly made the transition from married life to widowhood less stressful. Both are in town. Tram graduates from SLU law in '10 and Sue from Washington University with a PhD in social work this coming May. A professor on her dissertation committee is part of our little group. For ethical reasons the professor and her husband won't play with Sue, Tram and I until she's earned her degree. I don't understand what's the issue, but it is what it is. Anyway, Sue lives with me and Tram comes by practically every weekend. Neither one dates much, except each other, so they're pretty much still mine. In public Sue uses my married name if they do introductions while out on a date with each other. She's pretty much known as Sue Warren at all SLU social events.\"\n\n\"Without telling any details Scott told me about you two being sexually active with one another the summer he taught you how to drive. He's too much of a gentleman to share much in the way of details. Did you have to sneak around and always do it in the backseat of cars?\" asked Veronica.\n\n\"No, the first several times were on the pool deck until my parents got back home. When they were there we'd go to my bedroom in another wing of the house to 'watch TV' or 'play board games'. Except for the two instances I told you about earlier, it was all at my house. After the third or fourth time in my bedroom I hadn't shut the door tightly and Mom saw what was happening through the slight opening during one of our 'TV' sessions.\"\n\n\"I didn't know that,\" I interjected.\n\n\"I know you didn't. Mom and I talked after you left that afternoon. Since I was on the pill she told me to have fun. She was a year younger than me when she'd lost her virginity and regularly started to have sex. I did have to talk her out of joining us and by the last time we did it, she was about to jump your bones. On more than one occasion she'd stand outside the slightly open door and watch. I'd also moved a pier mirror around in my room so Mom could get a view of both sides of us fucking. I had to make sure you were always looking away from the door,\" she concluded. \"Yes, before you ask Scott, her watching watered and added to the voyeuristic seeds you planted.\"\n\n\"So that explains why we were suddenly able to be in your bedroom more often and longer.\"\n\n\"Yes, she was fucking you through me,\" smiled Amy Anne.\n\n\"Your Mom really wanted to fuck me?\" I asked with a rising tone.\n\n\"Yep,\" replied Amy Anne.\n\n\"Why didn't you tell me?\" I asked.\n\n\"I was afraid she'd scare you off and I wanted you to myself for the rest of the summer, so there,\" she laughed along with Veronica and stuck her tongue out at me.\n\n\"So what about the two of you?\" she asked.\n\nVeronica recapped for both of us, then added, \"I'm bi. Also, I seem to have a fetish for young pussy which I love to share. I've brought a lot of young women to our bed since I met Scott.\"\n\n\"Well. Not all are young. My mother and Carol don't quite fit in that category,\" interjected Mary Claire.\n\n\"Have you ever brought another man to your bed for Scott to watch you getting fucked?\" asked Amy Anne.\n\n\"We're moving toward doing that. We're not there yet, but getting closer,\" smiled Veronica looking down at my hand on her bare thigh pushed against her pussy.\n\n\"You know I'd like to sit on the other side of you and perhaps Scott would favor me with a touch like that,\" grinned Amy Anne as Veronica's breath momentarily quickened.\n\n\"That'd be fine with me. Join us,\" smiled Veronica nodding her head to the cushion on the other side of me.\n\nAs Amy Anne stood, the doorbell rang and Mary Claire stood and brushed down her skirt and waited for Veronica and Amy Anne to do the same before opening the door to Keith.\n\n\"I'm done next door. Would either of you care to join me across the street?\" he asked.\n\n\"Sure. I will,\" replied Amy Anne now standing.\n\n\"I'll go too. Coming with us?\" I asked looking at Veronica.\n\n\"No, I need to get Lauren to the store. Do you want to come Mary Claire?\" she asked.\n\n\"Sure, gonna buy something sexy, huh?\"\n\n\"Yeah, huh, we'll leave in about five minutes, will you tell Lauren?\"\n\n\"Yes. I have a two o'clock appointment. I'll take my car just in case,\" Mary Claire informed her.\n\nI retrieved Amy Anne's trench coat and blazer and after helping her into them Veronica stepped to her, put her arms around her, hugged her and lightly kissed her. \"Amy Anne, what a pleasure it's been talking to you. I hope you'd like to spend more time with us.\"\n\n\"Count on that, the sooner the better,\" replied Amy Anne squeezing Veronica's hand.\n\nAs we followed Keith out our driveway to the house across the street, I asked Amy Anne, \"Why didn't you tell me about your Mother?\"\n\n\"I told you a few minutes ago, I wanted you to myself. I fucked you every chance we got because you were such a good lover. You made me feel wanted and you sexually satisfied me. I didn't want to share that, not with Mom or with any of the ten or twelve of my friends who were always panting after you. I know I was far from the prettiest in my group of friends, but you made me feel I was. You made me feel I was prettier than Tara and Alice who were in the Homecoming Court that October. Sorry I didn't fall in love with you, but the sex was great. I still masturbate to memories of some of those days. I'd really like to fuck you again, soon,\" she said as she ran her hand over my cock. \"Oh, ho, and I think you're interested,\" she teased.\n\n\"You can't be surprised at that,\" I blurted.\n\n\"No not surprised, just looking forward to 'reconsumating' our friendship,\" smiled Any Anne now grasping my erection through my pants. \"I'm always ready to be impaled by a good, hard cock.\"\n\nI waited a moment trying to will my erection down a bit before I got out. Keith was on his phone so he wasn't tapping his foot impatiently waiting for us. I finally walked around to let Amy Anne out and she pulled a 'Veronica' or 'Katrina' or 'Ashley\" on me. Legs spread, skirt hiked up quite a bit, black g-string readily apparent and a huge smile on her face as she extended her hand to me. \"Gotcha didn't I,\" she laughed.\n\n\"Yeah, you did. Loved it, encore later?\" I smiled.\n\n\"I definitely hope so,\" she replied.\n\n\"I just talked to Emerson, and other than a few areas where budget quality items were used that he may want to replace, there are no conditions that need to be rectified that weren't already noted and addressed. I'll have that in writing later this afternoon as well as upgrading recommendations he's seeking. Did you know that my father-in-law built this house?\" He asked both of us.\n\n\"I remember him saying that he had the first time I met him at my destroyed house. I guess that means that you won't find anything wrong with it?\"\n\n\"Doesn't mean that at all. Won't be less objective even if it means explaining myself to him across the dinner table some evening. Just as he'd do to me, he'd be looking extra hard to discover if something was missed,\" smiled Keith.\n\nI liked the guy, and asked him as he unlocked the door. \"Aren't you installing my wine cellar next week.\"\n\n\"Yes sir, Monday, eight o'clock.\"\n\nAmy Anne and I walked through the house a bit more quickly than Keith and then around the outside. I was impressed, it was in good condition and didn't notice any budget quality items. I thought it'd be a good investment for one of our kids. Or Katrina and Ashley may want to have it as their home.\n\nAmy Anne was walking close to my side and kept touching my hand. Finally I stopped, turned toward her, wrapped an arm around her shoulder, slid the other hand under her coat to grasp her ass while tongue kissing her. As we broke the kiss, she said, \"Wow, ten times better than it was twenty-five years or so ago. A hundred times better! I hope Veronica was serious about that invitation. When are you getting married?\"\n\n\"The sixteenth, but that's not relevant to fucking you,\" I panted.\n\n\"Good, I'd like to do it sooner than later but if it's later then it'll still be,\" gasped Amy Anne as she took a step back from me. \"Hmm, what'll the neighbors think?\"\n\n\"I've never met any of our neighbors. Besides, I doubt if anyone in either of the houses next door can see us,\" I said touching her hand and leading her to the back door. We wandered around a bit more and I appreciated Dave's craftsmanship in the trim and other details. The kitchen and baths were very nicely done as well. Another couple of plusses to his credit.\n\n\"What do you think is the bottom line for the owner,\" I asked her as I heard Keith moving around upstairs.\n\n\"I think eight even will fly. They'll have no problem paying the buyer's agent commission to Veronica.\"\n\n##\n\nAs they were walking out the door, \"What are we looking for?\" asked Mary Claire\n\n\"Lauren needs something for tonight, how about Saks?\"\n\n\"Hmmm, short, deep neckline, fitted to her ass, yeah, that's probably the right place,\" replied Mary Claire. \"Does she need shoes, we know the right place for those,\" she smirked.\n\n\"I detected some unsaid communication between you two didn't I?\" asked Lauren.\n\n\"Yeah, besides its wide selection of quality imported shoes, it's the shoe store to beat all shoe stores,\" grinned Mary Claire as they approached the two cars that were parked side by side.\n\nAs Lauren approached Veronica's car she remarked, \"I can't remember feeling so welcome anywhere other than my parent's home as I do in yours.\"\n\n\"If they like you, they love you,\" smiled Mary Claire just before closing her driver's door.\n\n##\n\n\"You said you're free after taking an offer to Emerson. If nothing is falling apart here, can you bring an offer by later this afternoon for me to sign? It'll be a cash deal, and after we're married it'll be titled jointly.\"\n\nWe were standing on the front porch leaning on the railing and chatting about the good old days of high school and college. \"What are you doing now, Scott. You must be doing it well or a lot of it to make an eight hundred thousand cash offer. Skip a lot of lunches and save the money?\" she smiled.\n\n\"Yeah, kinda, and a lot of life too. Emerson and I were partners in an investment banking firm we started right out of graduate school and just last week we sold to CitiGroup for a cash and stock deal. If I hadn't met Veronica when I did I'd probably be working on some way to make my next hundred mil. But now that I have her we're going to love our children, play, travel, do some charitable work, make some investments here and there, and generally enjoy life. I've hired two very competent women to run my household and help with my financial matters, so I guess that's where I am now. During the wedding and the honeymoon our house will be remodeled, and then we'll see,\" I sighed.\n\n\"Tell me about your kids, you've seen mine,\" I asked.\n\n\"Tram is an athletic six foot five basketball and baseball player. At least he will be until his status changes to graduate student next June. He's got his father's blonde hair and overall good looks, square jaw, incredible blue eyes, and a real stud in bed which he didn't get from Rob. Sue is my height, very smart, scholarships for the last six years, enticing figure, blue eyed like Tram but not as piercing. A dishwater blond which she enhances from time to time. Jerold always enjoyed her as a lover and neither Tram nor I complain. I'm sure that you and your family would enjoy my family on a, shall we say, 'personal' basis,\" she smiled.\n\n\"Jeez, Amy Anne you don't hold much back do you?\" I exclaimed.\n\n\"Did I when I was sixteen and allowed you into my panties? No. As you and your fianc\u00e9e enjoy playing, and as I too enjoy playing with others, so why should I hold anything back now? I enjoy sex, you had a part in that. My kids enjoy sex. Veronica and you seem to enjoy sex. I'd like to enjoy sex again with you. Both of you or all of you. 'If you don't ask, you don't get' as Jerold would often say. I'm not bashful about going after what I want. The fact that we swing makes a statement about our sex life\" smiled Amy Anne putting her hand behind my neck and pulling me to her lips. \"Mmm,\" as she broke the kiss, \"every bit as wonderful as the second time you kissed me.\"\n\n\"What about the first time?\" I asked feigning indignity.\n\n\"It didn't count, it was on my cheek and I almost had to talk you into doing that much. We ended our first date and you'd walked me to the front door and you leaned over and kissed my cheek. Before I could turn my head you were off of the stoop and standing in the driveway,\" she laughed. \"You were a gentleman, too much of one that night.\"\n\n\"Yeah, I thought I probably gone off the deep end and that you wouldn't want to see me any more,\" I blushed.\n\n\"You're blushing. God, Scott you're something else. We go from talking about fucking to kissing me on the cheek and you're embarrassed by the kiss. Maybe I should have fallen in love with you,\" laughed Amy Anne.",
        "Keith came out of the house and told us that there were no issues that he could find, he suggested that two of the rooms could use the paint freshened but didn't find any mechanical or structural problems. He was also sure that the city occupancy permit wouldn't have any predications either. He said he searched to see if Dave missed something, but the worse thing he found was that the hot water heater could have been two and quarter inches closer to the wall. He said he'd get me a written report by Monday and could give it to me personally when he came to work on the wine cellar.\n\n\"Thanks, Keith, I appreciate you doing these two inspections promptly and on such short notice. Bring by your bill for this one with the written report if you would,\" I smiled.\n\n\"I'll do that,\" he said extending his hand to each of us and handing Amy Anne the key.\n\nAmy Anne and I walked back through the house checking the doors. \"Too bad there's not a couch or bed, I'd throw you down and fuck your brains out,\" she said with her lips an inch from my ear.\n\n\"And if Veronica knew, I'd let you and probably give as good as I get. I'm sure she'd be agreeable to bedding your entire family, as would I. So, I'll work toward that and maybe by the time we have you over for dinner we could have a sexy dessert,\" I grinned with my hand pulling her head toward me for a kiss.\n\nAfter breaking the tongue dueling kiss we walked out to my car and she gave me another pussy shot as she got in. \"Look tasty to you does it?\" she smiled.\n\n\"Oh yes,\" I replied.\n\n##\n\nThe shopping trio walked past Jane's shoe store and didn't see either Sharon or Jane, just the aunt and another younger clerk. \"We'll check again before we leave,\" sighed Veronica.\n\nThey continued into Saks and after considering at least two dozen or more cocktail dresses, Lauren tried on seven with the 'help' of Veronica and Mary Claire. After all the 'touchy feely' among all three of them Veronica recommended that they take all seven because they fit her so well. All were short and four of them revealed her gorgeous cleavage, two were open backed, and the seventh one was a stretchy sheath that said, 'look at my body'.\n\n\"All seven really,\" gasped Lauren. \"I have never bought that many dresses at one time.\"\n\n\"Think two things, my love. Unlimited clothing allowance and pretty is as pretty does,\" grinned Veronica. \"Besides, there's the wedding. Also, you'll be attending a few charity galas either with us or on our behalf. I also like going to the symphony from time to time and I have the impression that Scott would prefer not to go so you or one of the girls could be my escort.\"\n\n\"Oh, yeah, I forgot about the charity events. I'll do my part for charity,\" laughed Lauren as she looked over the dresses hanging on hooks across the wall.\n\nAfter paying for the dresses they browsed in the lingerie department and Mary Claire and Lauren each leaving with a dozen D cup bras each and g-strings and several sheer teddies. There was a fitting expert there that day and all three women opted to get a personalized fitting from her. Veronica was wearing a B cup and the fitter suggested that she not change. Both Lauren and Mary Claire were wearing C cup bras and were told that a D cup would be more comfortable. Since both Cheryl and Lauren were going to wear stockings on a daily basis Veronica also picked up five or six dozen pairs and another dozen garter belts.\n\nWith heavily loaded arms they carried the bagged dresses and the bags of lingerie to Veronica's car and put them in the trunk. The bagged dresses wouldn't fit so they were put in the back seat and Mary Claire was asked to wait with them. Veronica and Lauren went back to the shoe store. Still no sign of Sharon or Jane but they bought seven pairs of pumps and dressy sandals and three pairs of flats for Lauren. \"You're my size, I'll bet we could share shoes as well as Scott's cock,\" smirked Veronica in a low voice while they were waiting for the shoes to be bagged.\n\nAs they walked back to the car Lauren asked Veronica, \"We spent over twelve thousand bucks, are you sure this is okay?\"\n\n\"Absolutely, we're just getting started, how's your costume jewelry selection?\"\n\n\"I really don't have much.\"\n\n\"Bring it over this evening, we'll work on enhancing it,\" smiled Veronica.\n\n\"Ooh,\" said Lauren lightly kissing Veronica on her lips.\n\n\"I saw that,\" said Mary Claire as she got out of the front seat to move to her own car. Lauren put her hands on Mary Claire's hips, pulled her to her and thoroughly kissed her.\n\n\"That's just a start I hope,\" grinned Mary Claire.\n\n\"Yep, just a start,\" said Lauren returning the grin.\n\n\"Unfortunately I'll have to catch-up later,\" Mary Claire moaned. \"I have to run to my appointment.\"\n\nOn the way back home Veronica and Lauren stopped at the bank and in forty-five minutes had made arrangements for the debit cards, funded each debit card account with twenty thousand and arranged for Lauren to be able to access the DDA account to transfer funds.\n\nAs they walked out the door of the bank, Veronica's cell rang. Less than two minutes later she finished by saying, \"I'll watch for the attachments. You take care of yourself. The important thing is to get better....See you then. Bye.\"\n\nVeronica explained to Lauren, \"That was Alyssa, our interior decorator. I was hoping you'd meet her today. She and I were going to meet at three. She picked up a bug a few days ago. She was feeling much better yesterday after her doctor gave her a prescription Wednesday afternoon. She felt so much better that she went to the office late yesterday to pull things together for our Saturday meeting. Alyssa said that on the way home around ten o'clock she felt famished and stopped for a burger. Evidently she was very ill overnight. The doctor thinks she had a bad case of food poisoning. Her doctor has given her another prescription and ordered her to rest.\"\n\n\"Food poisoning on top of a stomach virus, ouch. I'd be going nowhere too,\" Lauren said in a sympathetic tone.\n\n\"She's such a sweet girl. She's going to try to be there in the morning when the contractor arrives,\" Veronica grinned.\n\n\"Why are you grinning?\"\n\n\"If she's there, it'll be as much to see Dave as to see us.\"\n\nWhen they got home I was in the den looking at the laptop and muttering something when they walked in.\n\n\"Problem, handsome?\" asked Veronica as she and Lauren put down the dresses and a few shoe boxes.\n\n\"No, just that Fidelity and Vanguard make so many good fund choices that I'm having trouble working up an allocation.\"\n\n\"Here let me,\" said Lauren. I got up and she sat in my chair. She went to an investing website, downloaded an Excel template, then went to the fund websites and downloaded comma delimited lists of all their funds and returns, then opened the lists into the template and within five minutes had a matrix for us to use.\n\nI stood behind her and watched her fingers fly across they keyboard and as the lists began to populate I put a hand on each shoulder and gently squeezed saying, \"Wow, you're good,\" and kissed the top of her head. She entered numbers for several of the funds and we watched as the estimated returns were calculated and displayed. I had her change the allocation slightly several times watching the bottom line. When we were finished, in about forty-five minutes, I had a proposed portfolio to review and on Monday we'd start moving funds. I again leaned forward and put my hands on her shoulder and moved my hands down the front of her blouse to lightly cup her tits. She leaned back in her chair and smiled up at me, \"Like 'em doncha. They like you too, feel my nipples?\" smiled Lauren.\n\n\"I do, and they're hard,\" I replied again kissing the top of her head.\n\nAs we were doing the portfolio project Veronica finished carting boxes and bags into the den. \"Handsome, we'll do something with these when you can take a break,\" said Veronica as she left the room.\n\n##\n\nAshley had taken off her top and was shaking out her hair when Katrina pressed against her back and put a hand on each bra covered breast as she pulled her tightly against her. She whispered into Ashley's ear, \"I love you, I love you soo much. My words aren't adequate to express just how much I adore you,\" and then nibbled on her earlobe.\n\n\"Why sister dear, I love you too. Let me turn around.\" When she turned around Ashley gazed into her lover's eyes, \"What brought that on? I'm not complaining mind you,\" she glowed as she embraced and very deeply kissed Katrina.\n\n\"God, I'm tired of getting hit on by two dunces in my MWF lit class. They are such unrelenting assholes. I've told them time and time again that I'm in a relationship but they still follow me out to my car after every class and won't stop yammering until I drive off.\"\n\n\"Hmm, have you thought about talking to security?\" asked Ashley as she lifted Katrina's top off.\n\n\"No, they haven't threatened me or touched me, so I doubt if they'd be interested,\" replied Katrina, unzipping her jeans, pushing them down, and stepping out of them.\n\n\"Well, I have an idea,\" said Ashley taking off her jeans as well. They then embraced with each unfastening the other's bra. They stepped apart slightly to shrug the bras off their shoulders and then giggling embraced bare breast against bare breast.\n\n\"So, what's your idea?\" Katrina asked, lightly brushing Ashley's lips with her tongue. Katrina's hands slid down Ashley's back and moved slowly under her boy shorts panties.\n\n\"Take off your thong and wrap your lips around a nipple and I'll tell you,\" panted Ashley.\n\nWhen Katrina had taken a breast tenderly in her hand she began to lightly suck and nip a nipple, Ashley moaned, \"Mmm, we better lay down before I tell you,\"\n\nAs they lay on the bed Katrina moved her hand to Ashley's slit and slid it between her clit and her asshole. \"Make me come, then I'll tell you,\" gasped Ashley.\n\n\"Fingers or tongue?\" asked Katrina.\n\n\"Both, if you don't mind,\" sighed Ashley.\n\nAs Katrina turned around and began to nibble and lick her way down to Ashley's bare pussy, Ashley handed her the bottle of lube from the nightstand. Katrina began laving her tongue over Ashley's clit causing some heavy duty wiggling of Ashley's hips. Katrina then squeezed some lube on her finger and as she was strongly sucking on her lover's clit she plunged her finger deeply in Ashley's asshole. Not much more than a minute later, Ashley explosively came. Katrina thought that her partner's tightened anal ring was going to permanently keep her finger embedded in her sister's ass.\n\nBefore fully coming down Ashley began to pleasure Katrina's pussy with her tongue and lips. Laving Katrina's asshole with a finger in her sister's pussy increased Katrina's breath rate substantially. Just before coming Katrina's finger was somewhat unceremoniously ejected from Ashley's ass.\n\nKatrina rolled off Ashley and turned to lie beside her. She absently circled Ashley's nipples with her finger tips and they kissed again.\n\n\"Were we talking about something before we got distracted?\" asked Ashley.\n\n\"Yeah,\" replied Katrina after a few more kisses, \"we were. You had a suggestion about the assholes bothering me.\"\n\n\"I'll meet you in the parking lot. I'll be leaning against your car and as they walk up following you I'll walk towards you, throw my arms around you and you around me and we'll French kiss. There's a fifty-fifty chance that they'll be lesbianaphobic and that'll end that,\" smiled Ashley. \"Even if they aren't, they'll get the message that you couldn't be interested in them.\"\n\n\"Yeah, but what if they're turned on and want to see more,\" frowned Katrina.\n\n\"Tell 'em to fuck off or you'll get your six-foot tall two hundred pound dyke friend to see to it that they do,\" laughed Ashley.\n\n\"Okay, let's try it, I'll call you before my class starts and tell you where I've parked,\" laughed Katrina kissing a nipple. \"Or better still, I'll text you with the location and the number on the nearest pole.\"\n\nAs Katrina lay down Ashley adjusted to cuddle with her love and rested her head on Katrina's left breast. With closed eyes, they rested quietly for over ten minutes listening to each other breathe before Katrina asked, \"What're are you wearing tonight?\"\n\n\"Something tight, short, sexy like every Friday night. You?\"\n\n\"I feel 'blue' right now let's see what we've got.\" Before Katrina walked into the bathroom to wash her hands, Ashley smacked her ass.\n\n\"God you've beautiful. I'm so glad our parents met.\"\n\n\"Thanks, you're very sexy yourself.\"\n\n##\n\n\"Do I have time to run home and shower before we leave?\" asked Lauren of Veronica who had come back into the den.\n\n\"You probably have time or you could shower and dress here. And if you need your back scrubbed or some itch scratched, there are three females and one male here at the moment who'll volunteer in a heart-beat to join you,\" smiled Veronica.\n\n\"Hmm, tempting. Very tempting. Wait there are five other females, who's missing?\" asked Lauren.\n\n\"Cheryl left a few minutes ago, about the time your boobs were in the good hands of Appleton. She'll be back to leave with us. Mary Claire's still not home.\"\n\n\"I was thinking of wearing the white and gold dress but my earrings are sterling and I only have this color of lipstick with me,\" frowned Lauren.\n\n\"There's got to be suitable earrings in one of the jewelry boxes in this house. Lipstick as well,\" Veronica smiled as she stepped up to Lauren and took her hands into hers. \"Shower with me and we'll get dressed together,\" looking into her eyes.\n\n\"Hey, don't I get a say?\" I asked with a faux pout.\n\n\"You gotta be quicker handsome. You can dress with us though,\" grinned Veronica.\n\n\"Deal,\" replied Lauren lightly kissing Veronica. \"When?\"\n\n\"It's only four forty-five. Let's say in fifteen or twenty minutes. Why don't you get in now handsome, and don't use all the hot water,\" frowned Veronica.\n\nAt that moment Carol walked in the front door. \"Hi honey, I'm home.\"\n\nI walked toward her and said, \"You need a shower don't you?\"\n\n\"Yes, I was planning on taking one. Do I smell bad?\"\n\n\"No, I wasn't invited to shower with Veronica and Lauren. So you can come with me. We're going to conserve water. And, you smell delicious,\" I smiled.\n\n\"My, my that's a nice offer for almost five in the afternoon. I'll take it. Let me get my coat off. Our bedroom?\"\n\n\"If you wanna fuck, do it before you get in the shower. You'll use too much hot water if you do it in there,\" requested Veronica. \"Well, come on Lauren let's get in while they're not showering.\"\n\nLauren was deeply blushing when Veronica turned back to look at her still holding her hand. \"Sorry, when you said there was open sexuality in this house, I guess I didn't realize how open. God, this is going to be a fun new life for me,\" explained Lauren. \"It's going to be like living in an erotic dream day after day.\"\n\nBefore Carol could step much beyond the foyer, the door bell rang. Carol turned back, opened the door and greeted Amy Anne whom she invited into the foyer. \"You don't need to be circumspect. Everyone knows how we know each other,\" Amy Anne quietly said as she entered.\n\nThen looking at me while moving towards us she added, \"Sorry to be so late, I wanted to talk to the seller's agent. It took longer than I thought to get through to their real estate guy. They'll accept the offer providing you give a quick closing, within two weeks. Since it's a cash offer, how about next week, perhaps?\"\n\n\"Sure, let me read the offer over and you can pick it up tomorrow afternoon,\" I replied. \"I'm agreeable to closing as early as Tuesday or Wednesday. Is there a place where I can write in a closing date?\"\n\n\"Right there,\" she pointed to the clause on page two.\n\n\"Why not also come by Sunday, say four. We can have some drinks and meet the rest of your family. Then dinner and whatever later. Can you do that?\" suggested Veronica from the dining room.\n\n\"I know I can, but I'll check on Sue and Tram and call you as soon as I know for sure,\" grinned Amy Anne. \"I'm looking forward to it ... really looking forward to it. See you then.\" She gave Carol a light kiss and left. \"Wow,\" was all Lauren said as she and Veronica turned to continue their journey up the stairs.\n\n\"You're invited too,\" added Veronica. \"Just assume that for anything like a dinner or ... you're invited unless told otherwise. We're going to drag you kicking and screaming into this family.\"\n\n\"Hmm, from what I've seen the last two days, no kicking, no screaming, moaning perhaps,\" grinned Lauren.\n\nCarol and I headed up the stairs and she was unbuttoning her blouse on the way up. As soon as we entered the bedroom she took off her suit jacket, the blouse and unzipped her skirt. I was down to my briefs and socks and quickly took both off. Carol unfastened her bra and pressed her bare breasts against me while kissing me. We broke the kiss long enough for her to push down her thong and then backed me to the edge of the bed. I scooted across the bed and she climbed on top of me and with no foreplay impaled herself on my rigid cock. \"You don't know how much I think of this family during the day,\" she sighed as she began to lift and lower herself. As I was kneading her tits, Veronica and Lauren came in.\n\n\"Oh, my,\" panted Lauren.\n\n\"She's gorgeous isn't she,\" smiled Veronica as she began unbuttoning Lauren's blouse As Lauren dropped her skirt, Veronica unfastened her own blouse and within a few seconds they were embracing bare breast to bare breast.\n\nWatching Carol and me Lauren quickly finished undressing and asked Veronica, \"Do you guys always wear hose and heels to bed?\"\n\n\"Yep, make a mental note,\" smiled Veronica as she finished undressing.\n\n\"I'll have to tell Mom to do that next time I'm home,\" replied Lauren.\n\nThe two nude women walked into the shower just as Carol was beginning to come. Lauren looked back over her shoulder wide-eyed and said, \"Yep, I'm gonna love this life.\"\n\nVeronica and Lauren were a mutual admiration society in remarking about each other's body and didn't miss a square inch while soaping the other bare handed. Lauren at one point turned her back to Veronica and said, \"Stick a soapy finger up my ass. Dad does and I love it.\"\n\n\"Only if you'll do me you gorgeous creature.\"\n\nNeither one had an orgasm, but from the volume of Carol's gasps and panting from the bedroom, you would have thought they did. They finished their shower and were toweling each other off when Veronica called to the entangled pair on the bed, \"Next.\"\n\n\"Ooh, Scott, that was nice. Could we make it a daily thing. I say 'Honey, I'm home' and then you fuck me?\"\n\n\"Probably not every day, but frequently. Come on we need to save some water,\" I smiled as I took her hand and we climbed off the bed. \"Lauren, you've an awesome body!\"\n\n\"Thanks, Scott,\" smiled Lauren without a trace of blush.\n\nVeronica smacked her ass and said, \"Come on sweetheart let's get dressed.\"\n\n\"Hmm, nice choice Scott. Bi and beautiful,\" remarked Carol.\n\nI was still hard and hadn't come in Carol, Lauren looked at my cock then Veronica and asked \"May I?\"\n\nVeronica simply smiled as Lauren pushed me back to the bed and said, \"Lie back.\"\n\nI did and Lauren leaned over took me into her mouth, as she bobbed on my cock she progressively took me deeper into her mouth until I could feel her throat tightly grasping the head of my cock. She raised her head for a moment to take a deep breath then proceeded to move quickly down my shaft, paused and then moved further down to press her lips against my shaven public area. God, what an intense feeling ... so tight around my cockhead. It was so intense that I came into her throat. She allowed me a minute to finish pumping then raised her head, looked me in the eye and asked grinning, \"Liked that, huh?\"\n\n\"I've never been deep throated, it was incredible. Where'd you learn how to do that?\" I gasped.",
        "\"My Mom and Dad taught me when I was a teenager,\" she proudly smiled.\n\n\"Perhaps you can 'tutor' all of us. I'd like to know how to do that,\" grinned Veronica.\n\n\"Classes begin in thirty minutes,\" I laughed. \"Not really, ... but soon,\" as I stood up from the bed and wobbled my way into the bathroom following Carol.\n\nCarol had kicked off her heels and got in the shower in stockings and a garter belt. \"Like the look, handsome?\" she asked.\n\n\"Carol, lover, I've yet to see you in or out of anything that you didn't look terrific,\" I grinned grabbing a bar of soap.\n\nWhen Carol and I finished and were drying off, we were greeted by a nude Mary Claire, who with her hands on her hips said, \"About time. Carol I'd like to eat you up.\"\n\n\"And you shall,\" said Carol lightly kissing her.\n\nLauren and Veronica were standing with their backs to me while they were doing something in Veronica's jewelry box. I saw a bagged dress on our bed that looked to be creamy white with a gold entwined outlined-leaf pattern. Veronica turned and held two dangly gold earrings to her ears. 'How about these?\" she asked Lauren.\n\n\"Umm, I not sure, let me get the dress on,\" replied Lauren.\n\nLet me set the scene, Veronica and Lauren are nude, still, Carol is standing in the bathroom door, nude, drying her hair. There's a nude Mary Claire in the shower as Katrina and Ashley walk in wearing just garter belts, stockings and heels. \"Gosh, look at Dad, he's as hard as a rock, huh,\" observed Ashley.\n\n\"If anyone is surprised, you'll get the first dance tonight. ... No takers?\"\n\n\"Well,\" ventured Lauren, \"I'm not surprised, but I'd like the first dance tonight. Stockings or pantyhose, which do you think?\" she asked looking at me.\n\n\"Put on the dress and I'll give you my considered opinion.\" I suggested.\n\n\"Yeah, right, stockings I'll bet,\" grinned Ashley. \"Dad loves stockings, we all do because of his reactions.\"\n\nLauren pushed the bag up the dress as Veronica held it, then Lauren took it off the hanger, unzipped the skirt and stepped into it. The skirt was slightly flaired, stopping at mid thigh. The top was like a halter top that fastened around the neck with a wide flat collar. Her shoulders were bare, the fabric went under her arms and was attached across to the zipper at the waistband. Her back, and what a back it was, was bare. No bra, and no way to wear one. \"Slip on some heels and walk toward me,\" I asked.\n\nLauren's tits enticingly moved under her top as she walked toward me, turned in front of me, and put her hands on her hips as she walked back past Katrina and Ashley. \"God, the firmness of youth,\" sighed Carol.\n\nVeronica was putting on a black bra and stepping into a black g-string as the Lauren 'parade' took place. \"A real work of art isn't she,\" smiled Veronica. \"No wonder she's done some modeling.\"\n\n\"Stockings, I think for a lot of reasons. Just watch how you bend over or you'll have every male at the club on edge tonight ... as if my showing up with my bevy of beauties didn't already.\"\n\n\"Nice finish,\" smiled Carol.\n\n\"Black tonight for me, Carol you?\" asked Veronica.\n\n\"Red. That new sexy number I bought the other day,\" she replied.\n\n\"I'm going to wear the blue mini-dress and change into lace top thigh highs,\" offered Katrina.\n\n\"Okay, sage for me with matching stockings and heels,\" opted Ashley.\n\n\"Fashion discussion?\" asked a nude Mary Claire. \"I think the dark pink dress with seamed black stockings and that pair of pinkish sandals I've been wanting to wear.\"\n\n\"The ones in my closet?\" asked Veronica.\n\n\"Yes, if it's alright.\"\n\n\"Of course it's alright. You fuck my man, why not wear my shoes, ... any of my clothes that fit, ... don't be bashful, sweetheart. Just as long as you don't take them off me,\" laughed Veronica.\n\n\"Lauren look in the stocking department in Mom's closet, I'll bet there're some gold toned stockings,\" offered Katrina.\n\nLauren found the hose and was pulling them on while the rest of my ladies were also getting dressed. Mary Claire went to the spare bedroom and brought her dress into our room. Katrina and Ashley retreated to their own bedroom after retrieving stockings from Veronica's closet.\n\n##\n\n\"So this is what you do after school?\" asked a smiling Cheryl walking into Beth's bedroom.\n\n\"Not always, I heard the message from Dad saying he's leaving for Boston at noon, so when the cat's away... ,\" grunted Beth as she settled even more deeply on Max's impaling cock. \"Almost, let me move back and forth a bit, pinch those nipples. Yeah, like that, like that,\" as she came with a silent orgasm. She leaned over and kissed Max and laid on his chest for a few minutes as her Mother lightly caressed her back. \"God, you're a good fuck, ... for a brother,\" laughed Beth.\n\n\"Beth when you're ready to take a shower get me from my room will you sweetheart?\" asked her mother.\n\n\"You mean I have to shower alone?\" asked Max in a faux whiny voice.\n\n\"Recover son, you're mine tonight, and I expect to be properly fucked sometime this evening,\" laughed Cheryl.\n\nCheryl dressed in a short purple dress with purple thigh highs and purple heels. Her bra and g-string were light lavender. Beth wore a very short denim skirt, VS pantyhose, a snug spaghetti strap tank top and light tan three inch slides. After changing his necktie three times, Max looked very mature in his dark navy suit and blue oxford cloth shirt.\n\n\"Tell me about your day tomorrow, and if you and Max spend the night leave me a message so I'll know where you are and won't have to stay up and worry about the two of you,\" laughed Beth as she walked out the door.\n\nBeth and Judy met at TGI Friday's in the valley and after dinner walked across the parking lot to a show. They sat near the back of the mostly empty theater, holding hands when they weren't caressing each other's inner thigh. Beth invited Judy back to her condo, and Judy followed her in her own car. A few minutes after arriving inside Beth's condo, both women were topless and Judy was mauling Beth's luscious breasts with her mouth, tongue and hands. Judy's skirt hit the floor and she was left in a very small g-string and three inch pumps. Beth pushed her by the shoulders to a reclining position on the couch, pulled her g-string aside and began to devour Judy's pussy. Wetting her fingers in Judy's very wet pussy Beth inserted her middle finger into Judy's asshole, her first finger into her pussy curling it to reach her g-spot and began to suck and lick Judy's clit. \"Oh, my God, Beth, fantastic, deeper in my ass, like that, God, that's good. bite my clit. Ooh, shit.\"\n\n<br /> Beth felt Judy's fingers entangle in her hair as she began bucking into Beth's mouth. After five minutes, Judy grunted, then sighed and relaxed her hips. \"Leave your fingers in me, come kiss me,\" asked Judy.\n\nAfter cuddling for half an hour, Beth pulled her fingers out, stood, took Judy's hand and after locking the front door took her upstairs to her bed. Judy loved Beth for the better part of the next hour and after giving Beth an orgasm for a second time this evening they fell asleep. At twelve thirty the phone rang and Beth let the machine take it. She vaguely heard her mother saying they would not be home until tomorrow.\n\n##\n\nRose Gillette arrived promptly at seven and Lauren introduced all of us, including Cheryl and Max who'd arrived about ten minutes earlier. Max's hair was a little mussed as was Cheryl's lipstick. Rose was in her mid-thirties, a physical therapist for a chiropractic group, very fit and toned, obviously practiced what she preached. The eight of us enjoyed the delightful ride to the club. Max couldn't take his eyes off our daughters, and Mary Claire and Carol couldn't help but grin as Max was sitting next to Carol who was purposefully rubbing a breast against his arm. Carol's unfettered breasts bounced a bit over rough pavement, not unlike Lauren's.\n\nAshley was on one side of me, Veronica on the other. The rest of my brood sat quite closely together even though at least three more people could have ridden with us. Arriving at the club, Rose came around and held the door for us. I wish it'd been me. Hoping she'd appreciate it I'm sure all the women flashed her. As I watched her eyes, she was glancing down quite frequently.\n\nEmerson and Hazel were standing talking to Kim and Gwen as we entered the foyer. \"Hi, Raoul,\" I said, table for thirteen?\"\n\n\"Of course, Mr. Appleton. Mr. Jacobson phoned ahead and we've set up a suitable banquette table for your party. Good evening, Mrs. Bryce, Mary Claire, Ashley, Katrina, Mrs. McDonough, Mrs. Babcock, and you are?\" he asked looking at Lauren and Cathleen who had just walked up..\n\n\"I'm Lauren Franklin, Mr. Appleton's CPA and this young man is Max Babcock, Mrs. Babcock's son.\"\n\n\"And I'm Cathleen Morris,\" she said smiling and holding out her hand to Raoul.\n\n\"My pleasure,\" he replied bending slightly at the waist. \"If you and Mr. and Mrs. Jacobson, Kim and Gwen will follow me.\" He seated us at the suitably arranged table and summoned three waiters to take our drink orders. He then asked Emerson if he had any musical preferences for the evening and Emerson gave him an envelope which I assume contained cash as well as a playlist.\n\n\"He's quite the professional isn't he?\" remarked Lauren speaking into my ear from six inches away.\n\n\"Yes, he does his job quite well. I just wish there were more members who'd eat here on a regular basis. I'll get you a set of statements and you can take a look. I think the club's on a weak footing right now,\" I replied into her ear as we walked to the table. \"Gwen mentioned to me things the club should be doing to promote the restaurant and the club overall. I want you to talk with Gwen about her ideas and after looking at the statements, give me your thoughts about if there's an investment opportunity here.\"\n\n\"I'll do that. I think the clubhouse and restaurant could use some renovations too. Being a limo driver gave me exposure to a number of high class clubs and restaurants.\" I must have had a questioning look as Lauren quietly explained, \"Though you wait outside much of the time, you do get to see what it's like inside when you go in to use the restrooms and can see the restaurants from the lobby.\"\n\nI replied, \"If you think there's an opportunity, you have my approval to visit over the next month or six weeks a dozen or so of the most successful high end restaurants and clubs throughout the area paying for it with your company debit card. Also, look at several of other golf clubs from the perspective of a potential member. Feel free to take Cheryl or another friend, or even your parents if you want, with you so you won't have to dine alone.\"\n\nSeating became rather random with Veronica, Carol and I at one end of the banquette bench, Mary Claire and Lauren between us and Emerson and Hazel at the other end. The rest of the young ladies, Cathleen, Cheryl and Max sat down the other side on our right.\n\nKatrina was speaking softly to Cheryl and Max and Carol to Lauren and Cathleen. Telling them how the evening would progress I suppose.\n\nThe dinner and wine selection were superb as usual and Emerson's music selections encouraged slow, close dancing.\n\nMax seemed to be having a good time, so were all the women who danced with him. Hazel I think danced with him more than once.\n\nVeronica's ear was at my mouth with her head on my shoulder as we danced when I asked her, \"How did Max feel when you danced with him?\"\n\n\"Hard as a rock. I seem to remember that he has a nice 'package'. Katrina and Ashley mentioned the same thing. They've seen him nude and he fucked Mary Claire the night his family spent the night,\" smiled Veronica nibbling my earlobe.\n\n\"Hmmm, think you might like to fuck him?\" I asked. \"You did say to Amy Anne this afternoon that another cock in our bed was in our future.\"\n\n\"Yeah, I did didn't I? I know I told you that Dave was going to be the first. He's married and I don't even know if he's available. Hazel seems to be wavering and who knows when she may loosen up the reins on Emerson. How would you feel about Max in our bed?\" she asked in a whisper.\n\n\"Well, I guess I really don't know until I see him or someone else inside you. I know I won't be jealous and won't love you any less. I guess what I'm saying is, I don't know what the eroticism will be. I guess I know what you felt when I fucked Carol in our bed, or all the others that we've shared our bed with since then. I know you find it highly arousing and I don't think that our sex life has been diminished. So have at it. I can fuck his mother while you fuck him,\" I softly replied.\n\n\"God, handsome, did you twitch? Did you come?\" she smiled.\n\n\"Yes, and no, lover,\" I smiled as the number ended as Lauren walked toward us.\n\nAs Veronica headed toward Mary Claire, Lauren melted into me, put both arms around my neck with her eyes almost level with mine. As we swayed with the music I could feel her firm breasts pushed against my chest and her purposeful hip pressure against my cock. Much closer than we'd danced the first time. She looked me in the eyes and very lightly kissed me and leaning back a bit asked, \"Can I sleep with you tonight? Along with Carol and Veronica? I'd like to do that very much. Carol said she'd like to get to know me more intimately, so what would be a better way, huh?\"\n\n\"Oh with a little arm twisting, ouch, okay you can let go now, I'd love to have you in our bed. Are you sure you're ready?\"\n\n\"Ready? I've been ready since I saw you doing Carol this afternoon and your wife stuck her finger up my ass in the shower. Yeah, I'm ready,\" softly replied Lauren lightly kissing me again.\n\nKim and I danced the next number and she asked me to call her with the amount for her and Gwen's new cars, She'd bring over a check before Wednesday and if I had time she'd love to thank me in a 'personal way'. We agreed we'd talk Sunday afternoon and I made a mental note to check my online fax account for the info from Jeanine.\n\nCarol was the next woman in my arms. While dancing she asked, \"I'm going to be a part of your family, a permanent part, aren't I?\"\n\n\"Yes, my dearest, you are, before the snow flies,\" I replied before we kissed lovingly. When the first kiss ended I added, \"The three of us need to make a trip to get you an engagement ring.\"\n\n\"Hmmm, I'd love that,\" she whispered between kisses.\n\n\"Ashley and Mary Claire have been in touch with a lawyer to change their names, maybe I should join them and we'll get a group rate,\" she grinned. This was all news to me, but I wasn't interested in asking any questions.\n\nMary Claire and Katrina were standing near us when the music ended and Carol was led away by Mary Claire. Katrina snuggled against me, lightly kissed me and said, \"Cathleen says you're going to spend most of tomorrow and tomorrow night together to 'cast off your demons'. I know you both can do it, but good luck anyway. Maybe sometime soon she can watch us make love?\"\n\n\"Yes, I don't know how soon, but yes she can join us,\" I sighed.\n\n\"You twitched, twice, you dad-devil you're really looking forward to that aren't you?\" she grinned. \"Fucking your daughter and then her mother, or watching them together before you doing each of us.\" My cock seemed to grow bigger. \"You dad-stud. You'd really like that wouldn't you?\"\n\n\"Of course, and you wouldn't too?\"\n\n\"You know I would, kiss me.\"\n\nCarol had her left arm around Mary Claire's waist and her right hand holding Mary Claire's hand between their breasts. \"I saw 'mistress' this afternoon. Why didn't you tell me mistress is Evie.\"\n\n\"I wanted you to be surprised,\" Carol grinned.\n\n\"After she explained the 'training' to become a submissive I told her that apparently there'd been a misunderstanding. I have no inclination to become submissive to anyone and become their slave,\" frowned Mary Claire.\n\n\"I thought you were exhibiting some submissive tendencies and thought maybe you'd like to know more. Don't feel that I'm pressuring you,\" softly replied Carol.\n\n\"Look Carol, I love you and everyone else in our home. I'd do anything I was asked to do. I can be slutty from time to time but I'll not do it in a ritualistic way. Collar? Eww gross and demeaning. Get my head fucked up like Cathleen, no thanks,\" strongly said Mary Claire.\n\nCarol lightly kissed Mary Claire and moved closer to her, \"I'm so sorry, I misinterpreted what I saw. Please don't be angry with me.\"\n\n\"I'm not Carol. I'm just telling you I don't want to be a submissive or dominated. I love the way I'm treated in this family. I want to be an equal in it, just so you know.\"\n\n\"Being submissive isn't necessarily demeaning. There are some very confident and professional women who carry significant responsibilities who are submissive in their bed,\" explained Carol.\n\n\"I know that. Evie helped me clarify my desires, and interests. She did note that there may be times where as part of the sex play of the moment I may have a compelling desire to be more submissive in bed, and I could still be that way for that moment. I like that idea ... but I don't want to live that life day in and day out.\" Carol nodded her understanding.\n\nCathleen and I danced near the end of the evening and she said, \"I'm really, really looking forward to tomorrow. I've got a good feeling about us and our future relationship. Your fianc\u00e9e helped me with my wardrobe and I'm sure you'll be pleased.\" We talked softly for the remainder of the number and when we broke she said, \"Until tomorrow, noon?\"\n\n\"Yes.\"\n\nEmerson said he hadn't had a chance to talk to Hazel about 19 Ridgetop yet, but they'd signed the contract for the one next to us and Anne would pick it up and get the seller's signature on Monday. I told him not to worry about a quick decision on partnering with me on 19, I'll close next week with or without him. He asked for and I gave him one of Jeanine's cards which I'd remembered to stick in my pocket.\n\nAfter lengthy goodbyes in the foyer, we called for Rose to pick us up and I saw her pull up behind Kim and Emerson's cars.\n\n\"Don't rush to get us home,\" I instructed Rose. \"Just drive at a leisurely pace.\"\n\nThe ride home was eventful. Max was seated again next to Carol and at her invitation was thoroughly caressing her braless breasts. Veronica and I were enjoying my hand under her skirt with two of my fingers in her pussy. The others were similarly engaged. I happened to glance over at Max and while his hands were busy on Carol, Katrina had unzipped him and had extracted his dick and was playing with it. Then she bent down and took him into her mouth for a moment. \"Mom, you've got to try this!\" she said.\n\nVeronica looked at me for a moment her eyes asking for confirmation. I nodded my head and she kissed me and softly said, \"Take your fingers out, please.\" Then \"Switch with me Katrina,\" and they changed seats. Katrina snuggled next to me and I put my hand on her bare breast inside her bra.\n\nVeronica turned Max a bit toward her, she moved one of his hands down the front of her dress as she leaned over and slowly began to swallow his cock. She then began to very slowly raise and lower her head keeping two fingers wrapped around the base of his shaft. God that was erotic watching my wife go down on another male. Katrina felt me harden and twitch and she unzipped me and pulled my rod out. \"Wanna a blow job, or would you rather fuck as you watch your bride with another man?\"\n\n\"Fuck,\" I groaned.\n\nWhen Katrina motioned an invitation to Cheryl with her eyes Cheryl said, \"Let's keep it in the family,\" and slid her g-string off. After steadying herself as the vehicle rounded a right hand turn, Cheryl moved in front of me and began to straddle me. Seeing where Cheryl was going, Lauren and Katrina had already moved aside a bit to accommodate her knees. Katrina said, \"Wait a minute,\" then unfastened my belt and slid my pants and boxers down. Cheryl waited and put her hand against the roof to keep from falling over. Katrina nodded to Cheryl, and held my cock as Cheryl groaning lowered her wet pussy down on me.",
        "Katrina pulled Cheryl toward her and began kissing her. Over Cheryl's shoulder I watched Veronica eagerly suck Max. Carol had intertwined her fingers in Veronica's hair and Max's legs started to stiffen. The boy's eyes were closed as he was close to blowing. Veronica raised her lips to just below his cockhead, her cheeks flattened out as he began pumping into her mouth. He threw his head back, his eyes opened and said \"Oh, shit,\" just before Carol began kissing him. Veronica swallowed once, then lifted her head and swallowed again. She gathered a few drops off her chin with a finger and fed them into her mouth. She then dipped her head again engulfing Max's cock and lightly sucked him as his cock softened.\n\nWhen she sat up Max pulled his hand out of her bra and she smiled looking around and asked, \"Somebody eat me, please.\"\n\nAlways eager to please, Mary Claire knelt in front of her, pushed her skirt up and gently spread her legs. Veronica hooked her left leg over Max's and her right over Ashley's, and Mary Claire tenderly began licking her inner thighs. \"Come on, Mary Claire, don't love me, just fuck me, I need to come!\"\n\nAt that invitation Mary Claire eagerly began sucking Veronica's clit and began stroking in and out of her vagina with two curled fingers. Inside of two minutes Veronica's hips began to rotate and seconds later she loudly came and slumped down in her seat. \"God, you're good sweetheart. I think I'll keep you,\" she gasped.\n\nLauren pulled my left hand off Cheryl's hip and pulled it under her skirt up to her very wet and heated pussy. While holding me there she uttered into my ear between earlobe nibbles, \"I want you to fuck me like you're fucking Cheryl, me on top.\"\n\n\"I can do that,\" I said just as Cheryl began to come and her cunt began grasping my cock. As she finished her orgasm she started to rise then realized that I hadn't come.\n\n\"You want me to stay?\"\n\n\"No, I want to come in Katrina's mouth,\" I gasped.\n\nCheryl nodded and moved to sit on the other side of Lauren. Katrina took my wetted cock into her mouth. After bobbing a few times she pulled her mouth off, \"Cheryl tastes nice on you.\"\n\nAfter a couple of dozen bobs of her head, I gasped \"Now\" and began to fill her mouth.\n\nShe swallowed it all in three gulps then looking up at me said, \"I really like doing that Dad.\"\n\n\"I know,\" I panted in response.\n\nI glanced out the window and saw we were passing Lauren's Corvette and knew we were home. Carol grabbed the phone and told Rose we'd be a few moments and Rose responded, \"No rush.\" She had to know what had happened, no doubt some of the moans filtered into the front.\n\nAfter a few minutes of clothing rearrangement and hair smoothing, Carol told her we were ready. Rose opened the door and probably was flashed again by every woman as they got out. If that wasn't it I didn't know what she was broadly grinning about. Lauren gave her two one hundred bills for a tip after we'd all alighted. I told her that we'd probably see her again soon. Rose remarked that she'd been permanently assigned as our driver and would always be available. No doubt the generous tip would ensure her closed lips.\n\nAs we were walking to the door Veronica slid her arm around mine and pulled me aside. \"Did you mind me blowing Max?\" she softly asked.\n\n\"Heavens no! It was erotic as hell. Are you gonna fuck him?\" I smiled.\n\n\"I think so. Will you love me before we go to sleep?\"\n\n\"You know I will. So you're going to ask them to stay?\" I whispered.\n\nAs soon as we walked in the door Veronica said, \"Cheryl, Max, Lauren, join us in our bed, will you?\"\n\n\"Carol will you sleep with me, fuck me?\" asked a smiling Ashley.\n\nWithout replying Carol walked to Ashley, embraced her and began kissing her.\n\n\"Gosh, does that mean I'm stuck with Mary Claire's magic fingers and tongue?\" grinned Katrina.\n\n\"Yeah, but will you live through the night?\" smiled Mary Claire grabbing Katrina's hand.\n\n\"Sis, you want our bed? I can go with Mary Claire to hers?\" asked Katrina.\n\n\"Sure, after she's exhausted you, come on up and both of you sleep with us tonight,\" replied Ashley.\n\n\"Remember the contractor visits at nine in the morning. Everyone has to be presentable by eight-thirty. Cheryl did you bring a change of clothes? Lauren you can probably wear something of Carol's,\" said Veronica.\n\n\"Out in the car I have something for both Max and me,\" smiled Cheryl.\n\n\"I have a skirt suit in my car. I was kinda hoping this'd happen,\" replied Lauren taking my hand.\n\n\"Can we have a glass of wine before we go up?\" I asked.\n\nMary Claire heard the request and returned to the den with five glasses and an opened bottle of Veronica's chard. She poured three glasses, then asked, \"Max?\"\n\n\"How about a diet Pepsi?\" he responded looking at his mother.\n\nCheryl smiled, \"You're going nowhere tonight. One glass is okay if you want. Besides you need to learn how to become a responsible social drinker.\"\n\nI sat on the couch and was joined on either side by Lauren, Cheryl and Veronica. With a glass in hand Max sat in a wing chair and patted his legs and looked at Cheryl. She went to him and sat on his lap with her arm around his shoulders and her skirt hiked above the tops of her stockings. Max dropped his hand to her lap and caressed the inside of her thigh. \"Unbutton my top, please,\" asked Cheryl of her son.\n\nAfter taking three large sips and setting down his glass of wine, he unfastened the buttons and opened her top revealing an overflowing shelf bra. \"Unfasten my bra, please,\" she requested. As the top was pushed down and her bra removed she was naked from the waist up. With us all watching Max began squeezing her tits and Cheryl was cooing how nice that felt. After two minutes Veronica took a few sips of her wine, stood, slowly unzipped her dress, teasingly dropped it, stepped out of it and with all eyes focused on her, unfastened her bra. She slid her g-string down and off and sat down with her legs slightly spread and leaned against me.\n\nLauren quietly reached behind her neck, undid the two buttons on her collar and let the top fall to her waist exposing her firm breasts and hard nipples. She stood, unzipped the skirt, stepped out of the dress, and slid her g-string down. She sat sideways next to me with one leg folded under her and the other foot on the floor. I'd swear her pussy winked at me .\n\n\"Cheryl, has Max been practicing what I taught him last weekend?\" asked Veronica.\n\n\"He has, and getting damned good at it. Beth says so too,\" smiled Cheryl.\n\n\"Is he a good fuck?\" smiled Veronica.\n\n\"We've done it doggie, cowgirl and missionary, and yes, he's getting better each time. Why?\"\n\n\"Max would you like to fuck me with my husband watching or with Scott fucking your mother while you fuck me in the same bed?\" smiled Veronica.\n\n\"You expect maybe I'd say no,\" he replied.\n\n\"You never know, thought I'd ask,\" grinned Veronica. \"By the way, where's Beth tonight?\"\n\n\"I think she's getting laid, or is laying Judy at our house right now,\" he responded\n\n\"Judy, your ex?\"\n\n\"Yep, says she's a dedicated lesbian. I'm sure Beth'll let us know if it's true.\"\n\n\"Cheryl, did you tell Max what the rules are in our home?\" asked Veronica.\n\n\"The sexual rules? No.\" replied a smiling Cheryl\n\n\"Max you and your sister are welcome in our home and you're welcome to have sex with anyone you ask providing they acquiesce. 'No' means no. If someone tells you no, it's not negotiable. What we do, ... you do ... here, stays here, same as at your home. Of course you can talk between yourselves in the privacy of your home or vehicles, or anywhere no one else will overhear you. I'm sure you don't tell anyone you're being intimate with your Mom or Sister do you?\"\n\n\"No,\" said Max rubbing his Mother's back and pinching a nipple with his other hand.\n\n\"Are you going to leave your stockings on,\" asked Max hopefully.\n\n\"Yep, shoes too,\" smiled Cheryl.\n\n\"Come Max, let's go upstairs,\" said Veronica extending her hand to him. \"It's time for this old lady to get fucked by a good young cock.\" He gulped down the remaining chardonnay, stood, took her hand and followed my bare assed wife wide-eyed and eager. The boy has much to learn about how to drink wine, I thought.\n\n\"Lauren, Cheryl, shall we I?\" asked extending both hands after I stood.\n\nWhen we reached the bedroom Veronica had started the cameras and was in the process of getting him out of his pants and shirt. She backed away from him and patted her hand on our bed. He sat next to her and she scooted back then pulled him down to lay beside her. They rolled to their sides and began to kiss with his hand roaming her breasts and hers his side then his cock. I have to say he was a nicely built young man, broad shouldered, narrow hips, sculpted legs, the toned body of youth, and a nice cock similar in length and girth to mine. Maybe just a bit longer. I'll bet it brought Cheryl and Beth a lot of pleasure. Veronica was stroking his cock slowly and gently and he was becoming more erect.\n\nLauren stepped in front of me and said, \"Take me you sexy, sexy man,\" and reached for my belt. After disrobing Cheryl climbed on the bed first, then me, then Lauren. I laid on my back at first with Lauren kissing me and Cheryl running her hands over my torso.\n\nLauren's kisses became deeper, more insistent as she started moaning, \"I want you to make love to me. I want you to fuck me, slow and deep. Touch me, caress me, suck my tits. Ohh, yes, like that, touch my legs, lick my pussy.\"\n\nI began to concentrate on Lauren and heard rapid breathing from Veronica and Max. I wanted to know what was happening but realized I wanted to pleasure Lauren. I could replay everything tomorrow of my wife. Cheryl moved to the head of the bed, leaned against the headboard, spread her legs, and offered her arms to Lauren to lean against her. As Lauren shifted up, I moved down and began to nip her nipples. I then moved to her smooth, soft pussy and ran my tongue from her asshole to her clit, with just a light touch on her clit.\n\nVeronica and Max had turned end for end and her head was opposite mine as I was feasting on Lauren. I leaned over and passionately kissed Veronica as I pushed two fingers into Lauren's pussy. Lauren began to buck and moan as Cheryl made love to her breasts and kissed her turned head.\n\n\"Let me be on top Max,\" gasped Veronica. Max flopped down next to me with his hips less than two feet from my eyes. Veronica straddled him. While looking directly at me she began to slowly lower her pussy towards his purple headed erection. From two feet away I watched raptly as she wriggled a bit as he began to penetrate her. With not a hair around her opening, my eyes had an unobstructed view of her wetted lips engulfing him. As she settled down with him fully inside her she began to move her hips back and forth. She moaned in pleasure. Seeing me looking at her and Max she softly said to me, \"fuck her.\"\n\nI moved up and raised Lauren's legs over my shoulders and slowly entered her, \"Oh, fuck Scott, that feels go damned good.\" When I was fully in her I looked her in her eyes and she smiled, \"fuck me, fuck me slowly.\"\n\nI could feel the bed moving and glanced at Veronica who was moving more and more aggressively on Max's cock. She extended her hand to me and I took it in mine as she began to slowly build to an orgasm. I was badly off balance and was afraid that I'd fall on Lauren but Veronica began to come and her grasp tightened. Finally with her head thrown back she loudly groaned, \"Max that was nice, very nice, ummm, keep doing that to my tits.\" Max continued to caress and squeeze her breasts and pinch her nipples.\n\nRegaining my focus I slowly stroked in and out of Lauren. Her firm breasts wiggled as I thrust more firmly and more swiftly. A minute later her breath rate increased as we both came closer to coming. I dropped Veronica's hand as she bent down and began kissing Max. I watched their tongues entangle just before I did the same with Lauren. She came explosively with her vagina tightly caressing my cock. Even though my eyes were closed I replayed watching Veronica fuck Max in my mind and began spurting and filling Lauren. Now I understood how a man watching his wife being fucked could be so excited.\n\nAs we cooled down and I withdrew from Lauren, she stretched out on her back, turned her head and lightly kissed Cheryl's pussy then pulled me down against her. I knew I hadn't given my best to Lauren and I chastised myself for not giving her more attention, particularly since it was our first time together. Sure she'd climaxed, as did I, but I knew that it was little more than the dreaded 'wham, bam, thank you ma'am'.\n\nWhile I chastised myself, Veronica had straightened up and was dismounting from Max who was grinning from ear to ear. \"Did you enjoy that, Mrs. ... er Veronica?\"\n\n\"Yes, Max, I did, we'll do it again. Lauren will you eat me? I'd like to suck Scott's come out of you.\"\n\nLauren sighed, \"Of course I'd love too.\" I moved to the edge of the bed to allow room for the rearrangement, with Cheryl moving to Max and taking him in her mouth.\n\nLauren and Veronica got into a sixty nine with Lauren on top. As they were enjoying each other I began caressing Lauren's back, ass, and thighs. \"Handsome get some lube and finger fuck her ass,\" said Veronica pulling her mouth back a bit from Lauren's slit. I took the tube of lube out of the bedside table drawer, liberally covered Lauren's asshole and my finger then began working my index finger into her ass.\n\nShe bent her leg at the knee so I took her nylon clad big toe into my mouth and sucked and laved it while my finger was inside her ass. \"Oh my God, I'm going to come again,\" she gasped. Veronica increased sucking her clit and Lauren began bucking her hips. Within a minute she came, groaning and fastening her mouth tightly to Veronica's pussy.\n\nAs Lauren came down, I pulled my finger out with a definite 'pop', rolled off the bed and headed to the bathroom. Scott, your wife gave Lauren more focused attention than you did, I uttered to myself. The night was very enjoyable but I felt I spent more time watching than I did in making love to Lauren. She should have had my best and I just didn't give it. The door opened right behind me and it was Veronica. \"Are you okay with Max fucking me?\" she asked with a worried look.\n\nI pulled my nude woman to me and said, \"Of course, I told you I'd be. And I'm really looking forward to a return engagement. I'm also looking forward to watching the recording. You cougar, you. That'll be a keeper for sure,\" I grinned.\n\n\"Will you stick a plug in my ass and love me when we get back in bed?\" Veronica asked.\n\n\"Of course, let me wash my hands.\" I inserted the medium size plug of the three she had bought and we walked back into the bedroom with Max buried deeply in his Mother in the missionary position. Carol who'd just come from Katrina's bedroom and Lauren were tightly wrapped in each other's embrace and kissing.\n\nVeronica climbed on the bed and said, \"Lay down, handsome, I wanna be on top again.\"\n\n\"No, you lay back, I want to look at you.\" I countered. She lay back, spread her legs and arms and welcomed me atop her. \"I hope I don't feel like 'sloppy seconds', I don't know if Lauren got me emptied. I could feel something dripping down my leg standing in the bathroom.\"\n\nI caressed her still swollen slit with the head of my cock and then slowly entered her. \"You're wet, you're slick, I love how you feel,\" I sighed while looking into her eyes. The plug made her feel tighter and we both enjoyed the effect. We made slow gentle love and in twenty minutes we came together. I had felt some shaking of the bed while I was making love to my bride and from what I'd heard Max had filled his Mother while Lauren and Carol were bringing each other to shuddering mutual orgasms. Oh the advantages of youth, I said to myself as I thought about Max coming for the third time in less than two hours.\n\nAfter cooling down again, I took the plug out of Veronica's ass and we all in turn trooped through the bathroom to brush teeth, and address other necessary matters. Veronica pulled out sheer baby doll tops for herself and all three other women.\n\nThe guilt I felt over not doing a better job with Lauren was still in the back of my mind as I had made love to the love of my life to the degree that though Veronica was satisfied with our coupling, I wasn't. In all things I set high standards for myself, and I hadn't come close to them with Lauren and then I fell short with Veronica. While I felt bad about it and vowed not to let it happen again, and knew I'd make Lauren's next coupling special, I also knew I needed to talk to someone, another man, who may be able to help me.\n\nAs I wrapped my arms around my Veronica, Cheryl and Lauren snuggled together, and Max was lying next to Carol playing with her tits through the sheer top. \"Wanna fuck?\" I heard Carol ask.\n\n\"Love too, but don't have the energy, tomorrow maybe?\" he responded. So the boy does have his limits, I thought.\n\n\"Of course,\" replied Carol.\n\nI heard someone come into the room and as I looked up in the dim light I saw them turn off the camera then Mary Claire's face was close to mine and she kissed me, then Veronica. \"I love you both, more than you'll ever know. Good night.\"\n\nI hope you're continuing to enjoy this tale of a family and their lovers. I've a long way to go before I finish but the chapters may sometimes be published further apart because of my day job. I'd appreciate comments and if you have some ideas you'd like me to incorporate, please tell me and I'll consider them. I try to respond to all emails unless they're cranky. I'd like especially to hear from any female readers."
    ],
    "authorname": "Reindeer58",
    "tags": [
        "heel",
        "hose",
        "mmf"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/any-chance-we-could-ch-40"
}