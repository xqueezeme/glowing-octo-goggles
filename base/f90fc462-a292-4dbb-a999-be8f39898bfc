{
    "title": "Lockdown Christmas Miracle Ch. 17",
    "pages": [
        "It was Eric's turn to clean up after dinner and the girls wasted no time in scurrying upstairs as soon as they finished eating. Eric scraped dishes and loaded the dishwasher, wondering if things were okay between him and Ellie. He had slipped into their shared bathroom after they got back from skiing to find Ellie undressing, but instead of being eager take advantage of the few minutes they could be alone before dinner, Ellie had wrinkled her nose and kept him at arms distance.\n\n\"Oh, baby, I stink right now.\" Ellie made a face. \"And honestly...you do too. Let me take a shower and then I promised Cassie I would go help her with dinner.\" Her eyes softened as she saw his smile drop. \"I'll make it up to you later,\" she leaned in to kiss him lightly with the tips of her lips. \"Promise.\" She smiled. \"Now out!\" She pushed him playfully out the door to his bedroom before she peeled off the rest of her clothes. \n\nHandwashing the stainless steel saut\u00e9 and frying pans, he wondered if the newfound closeness between his sisters also included comparing notes about their recent extracurricular activities with their brother. He couldn't see Cassie volunteering that she had allowed Eric to take her picture topless, let alone with his dick in her mouth, but Ellie seemed so unpredictable at times that he fought a brief wave of anxiety thinking that she might have told Cassie everything that was going on between the two of them. He worked through his memories of how the day had gone between the three of them and didn't recall any indication that either of them was angry or upset with him, but something had changed in the dynamic and it troubled him that he just couldn't be sure exactly what it was.\n\nAs much as he had been eager to get some alone time with Ellie, the fact that the girls were doing something upstairs did mean that he could squeeze in some time gaming in the den before bed time. He hadn't set an exact time to meet up with Lisa, but had told her he would try to get online at some point that night to keep working on the fortress they had taken. Wiping down the counters and running the garbage disposal, Eric took one last look around the kitchen before deciding it was in pretty good shape. He took the garbage out and washed up before heading to the den to log into his gaming console.\n\nEric spawned in the hidden passage where he and Lisa had exited the game last night after securing the fortress. Lisa didn't look like she was online, but he sent her an invite and a location marker so she would know he was as he debated whether he should enter the fortress without her. The three players they'd killed would have been sent back to their original spawn point and would have lost everything on their person when they did. Most players kept a minimal cache of weapons, armor and gold at their spawn point for just such an occasion, but they would have lost half of their status to Eric when they died. Along with the status went a significant amount of strength, speed, ability to deliver and withstand damage and a corresponding drop in effectiveness of all of the unique skills that their chosen character types had or could acquire through the game at certain levels. Just as Eric had more than doubled his own status and unlocked a whole host of strength, upgrades and abilities when he killed them and took their life energy. \n\nIf the three had managed to return and get through the defenses and traps designed to prevent them from getting back in, they would each be significantly weaker and probably less well-equipped than they had been when Eric had ambushed each of them from behind. Still, if they had a secret entrance like the one Lisa had built that he and Lisa had been unable to discover, they could be waiting to ambush him somewhere in the fortress, they would have the element of surprise in their favor this time and it would be three on one. As much confidence as Eric had in his new weapons, armor and abilities, he wasn't sure he could hold off three attackers at once, particularly if one of them was behind him. His character was built for speed, stealth attacks and killing from a distance. Fighting in the open, particularly in an enclosed area with little cover, like a small room, or a hallway, was risky at best. Trying it against multiple opponents, while there was a chance that one of them could flank or ambush him to deliver damage from behind, was nothing short of suicidal. \n\nEric was just debating about whether he should follow the tunnel back to Lisa's hidden fortress to spend some time there or make a stealthy run through the new fortress, when he heard a heavy bass beat begin to pump steadily from the other side of the house. Pausing the game, he got up to walk down the hall, through the kitchen and out to the living room to investigate.\n\nThe lights were out in the hallway and kitchen and no one was in the living room, but much of the furniture had pushed back to clear additional space from the center of the room. The music was much louder once he'd entered the living room, with the EQ settings on the stereo turned up to give a visceral thump to the heavy bass beat. The lights in the living room had been dimmed and the armchair and a side table had been moved into the newly enlarged space, facing toward the kitchen. Some table lamps, including a couple of old lava lamps from Ellie's room had been added around the room to create a warm, intimate glow. One the side table, by the arm chair, Eric saw his pipe, lighter and a drink laid out. Taped to the cushion of the armchair was a note:\n\n\"Strip down to your undies, have a seat, a drink and a smoke. The show's about to begin.\" \n\nThe note was unsigned, but had two imprints in lipstick. Eric shrugged and took off his shoes, pants, socks and shirt to have a seat in his boxer shorts. He smoked from the pipe and took a drink to ease the tickle from the smoke in his throat. The song reached the end and heavy bass line faded away even as Eric began to feel the effect of the weed.\n\nThe next song began with a simple, mysterious riff that took a moment for Eric to place. When he heard Iggy Azalea's voice cut in and begin to rap about first things, a smile washed over his face as Ellie came strutting into the room wearing a plaid schoolgirl outfit like the one in the music video. Ellie had done her best to straighten and style her hair to match the look of the video, and while her cute bubble butt and strong, smooth thighs certainly filled out the area of the outfit between the short pleated skirt and the high white socks, her boobs pushing up out of deep 'v' of the soft yellow sweater put the girl in the video to shame.\n\nEllie danced up to the space in front of Eric and proceeded to bounce, writhe and grind in perfect time to the beat and lyrics, making an effort to emphasize the movement of her hips and bend seductively to reveal a hint of a white thong and the luscious fullness of her bare ass cheeks that the short skit were barely able to cover as she moved. As the song progressed, Ellie let the plaid jacket slide off of her body and made a display of slowly lowering the matching skirt while facing away from Eric as her hips kept a steady pulsing roll and pop with each beat and her perfectly full, smooth ass was slowly revealed as she did. Bending to lower the skirt all the way to the ground, Eric was treated to the sight of her perfect little mound, almost dayglow white in the purple-blue light of the lava lamp as the thin strip of her thong drew a wonderful line down the middle of her ass, now on full display for him. \n\nEric was already hard and his cock was standing up under his boxers as he reclined in the arm chair. His eyes traveled over the firm, smooth curves of Ellie's ass and down into the swollen mound squeezed into the white stretch fabric between her legs to catch the glint in her eye, as their eyes met over the tent his hard dick made in the thin fabric of his underwear and under the swollen lips of her throbbing pussy in her thong. Ellie held the lascivious pose, watching Eric's face as her offered hips, ass and pussy punctuated each beat and grind of the music. \n\nWhen Ellie stood, it was to turn and go through a saucy unbuttoning of her soft yellow sweater and revealing the lacy white bra that was pushing up her magnificent boobs into such luscious cleavage the whole time. There was something about the high thin straps and narrow triangle of her g-string that accentuated the curve of Ellie's hips and strong flat stomach in a way that Eric couldn't stop staring at as she body rocked in the thumping grind of the music. He couldn't help picture his hands grabbing her hips and his desire to spread her legs and thrust his achingly hard cock up in between her legs. As much as he already loved every inch of her body, seeing Ellie dance for him like this made him feel like he was seeing her again for the very first time. \n\nEllie turned slowly to peek over her shoulder as her hands traveled up to the clasp of her bra. She gave Eric a wink and a lascivious grin before batting her eyelashes and releasing the straps. He watched her back become bared as only the thin white lines of her g-string, glowing in the dim light, kept her from being completely naked from behind. Eric could see her pull the bra away from her body to be replaced with her cupped hands before she playfully turned around to grin at Eric's wide eyed admiration as he anticipated the reveal of her big bouncy tits, barely able to be contained in her small hands. \n\nEric took a drink as his mouth had gone dry watching the show Ellie was putting on for him. Part of him was dying to reach up and pull her hands away to see her tits immediately, while the other part of him couldn't get over how enticing it was to have her tease him with her hands covering her boobs like that. As much as he'd been able to see and touch her lately, he couldn't get enough of her body and it surprised him how much he wanted to see her in the moment, even as she denied him the ability to.\n\nAfter she danced over to Eric and turned to leave her nearly naked ass twitching in front of him, perfectly matched to the beat of the song, her hands briefly left her breast to playfully smack his hand away from reaching up to touch the smooth skin of her ass cheek. Ellie stepped away and turned, her arm covering her boobs, which threatened to spill out over and beneath it as her other finger wagged naughtily at him. She backed away like that, her full firm thighs and the delicious triangle of white slithering to the beat of the song ending before she reached the darkened doorway and finally lifting her arms away from her bouncing boobs, blew him a flirtatious kiss before disappearing into the dark as the song ended.\n\nEric sat up in the chair and exhaled a jittery breath of arousal as a new song faded in from the stereo. A deep droning keyboard tone and an underlying rhythm track rose in volume that Eric immediately recognized as the opening to \"Never Be The Same\" by Camila Cabello. As the first few lines of the lyric began Eric's jaw nearly dropped as Cassie walked slowly out of the darkness wearing the black and yellow vinyl costume of Silk Spectre from \"Watchmen\".\n\nWalking seductively, head tilted forward as she emerged out of the darkness, she was fully into the room before Eric realized that he must have stopped breathing at some point. He took a gulp of air and did his best to swallow through a mouth and throat that had gone completely dry. Eric never took his eyes off of Cassie as he reached for the glass on the table beside him and took a swallow. \n\nCassie had been trembling in the dark of the hallway off the kitchen as Ellie's song had ended and she was fighting the small voice that told her that she looked ridiculous in the vinyl costume with its garters and shiny long gloves and boot legs. She kept reminding herself of Ellie's instructions, delivered as they had worked out her routine for this song. As tough as it was to follow behind Ellie and her ability to move her body with such creativity and control to the music, Cassie did her best to reassure herself, just as Ellie had, that her part didn't require her to be able to dance like Ellie had.\n\nAs the music shifted, Cassie began to twirl slowly and insinuate her long body into the pleading lyric of the chorus, mirroring the longing and unsatisfied temptation in the song that Ellie insisted would be gripping Eric as he watched every guy's fantasy walk out in the flesh and begin dancing for him. She couldn't bring herself to look at his face, but as she rotated and rolled her head to make her long, shiny black hair drape around her face, neck and shoulders as Ellie had taught her, she couldn't resist a peek at the shape of his hard cock standing up beneath his underwear. Even though Eric couldn't see her blush in the dim light and the veil of her long, black hair, she felt warm and flush thinking about the moments that she had sucked lightly at that same dick while he had slept. \n\nAs the chorus swelled again, Cassie slowly unzipped the front of the black and yellow top to let it fall away from her body, revealing the black bikini top that she was wearing underneath. Slithering her long body through the undulations that Ellie had coached her through, she turned to bend forward from the waist as she edged the shiny hotpants down and let Eric see the bare cheeks of her ass revealed in the tiny black thong that she had been embarrassed to try on earlier, even in front of Ellie. She thought back to holding up the hand mirror in front of the long door mirror in her room as Ellie forced her to look at how beautiful her ass looked from behind. Eric couldn't see the nervous grimace she fought as the bottoms dropped free at her feet and she stepped out of them, hoping that Eric had meant every word when he had described her ass to Cali on the beach.\n\nEric could barely hear the music as the sound of his own heart pounded in his ears watching the sexiest possible version of his Silk Spectre fantasy come to life in front of him. The fact that he knew on some level that this was Cassie stripping for him only intensified his reaction as he felt his cock twitching and arching back toward his stomach as he was overwhelmed with excitement. The sight of Cassie's thighs filling out the tops of the long shiny legs of the boots and the tiny triangle of black fabric of the thong held in place by the thin strings rising up over her hips had him leaking precum into his boxers with every involuntary twitch of his dick.\n\nCassie's eyes finally met Eric's as she reached up to undo the strings of her bikini top. She watched his eyes travel up over the swell of her thighs, the narrow 'v' of fabric over her pussy and her long undulating torso with a look of awe that he couldn't conceal. Ellie was right. The effect of the costume and the lighting had mesmerized him and he looked fully caught up in the illusion of seeing the sexy character instead of his plain older sister. As much as she tried to resist and remain in character, she couldn't help smiling and looking away as Eric's eyes finally met hers. She turned slowly as Ellie had taught her before reaching out to visibly drop the bikini top from one hand to the ground beside her. She knew that Eric must be staring at her fully revealed ass cheeks, grinding back and forth to the sultry vocals of the song, as she felt it's yearning desire flow through her, reveling in the motion that Ellie had made her practice until she had been able to feel it connect to the music, just the way Ellie promised her it would.\n\nAs Cassie turned to walk slowly backward through the last part of the song, she did her best to maintain the look that Ellie had coached her through, her hands holding her full breasts in place and her hips giving the tiny twitch in time with each beat, while she fought the urge to panic that the heels of her shoes would get entangled in the clothes on the floor and cause her to trip before she could finish the song. \n\nAs she reached the semi-darkness of the doorway, Cassie lifted her hands slowly to reveal her tits, just as they'd rehearsed. Her hands ran languorously up the sides of her neck and cheeks before joining together with her arms fully extended above her head. Cassie pirouetted slowly and stepped into the darkness, behind the wall next to the doorway, just as the music ended. She smiled and let out a huge sigh of relief just before Ellie reached up to give her bare tit a reassuring squeeze from the darkness beside the doorway, as she waited for the next song to begin.\n\nThe crisp drum syncopation of the drum intro to Amy Winehouse' \"You Know I'm No Good\" filled the room as Ellie came strutting in the dark form-fitting bodysuit and the short red wig of a Black Widow costume that clung to her curves like it had been painted onto her. If Eric was still reeling from the memory of seeing Cassie as Silk Spectre, he was completely unprepared for how devastating an impression Ellie made in the Black Widow wig and costume. Her bouncy tits and the way her her full pouty lips and smooth cheeks were framed beneath the short auburn wig, along with the bewitching lines of her hips and waist made in the tight bodysuit, all made her look even sexier than the screen version that had captivated so many guys imagination since they'd first seen Scarlett Johansson play the part.\n\nRather than dance around seductively from a distance, Ellie came right up to where Eric sat and teasingly lowered the zipper on the front of the bodysuit to reveal her ample cleavage doing its best to spill out as she was clearly not wearing a bra underneath. Her hips moved sinuously to the urgent jazz backbeat and her eyes were locked dramatically onto Eric's as he licked at his dry lips and his eyes flickered back and forth between Ellie's own and the smooth, pale swell of her breasts as she slowly released them from the confines of the skin tight costume.\n\nAs her tits finally came free once the zipper reached the level of her belly button, \n\nEllie winked at Eric and spun on her heels to slowly lower her deliciously full bottom onto his lap. Using her hands to support her weight on the arms of the chair, she teasingly suspended her ass just over his hard cock and ground her bottom lightly over the underside of his hard dick in time to the music. As Eric's hands reached up from behind to squeeze her swollen tits, Ellie lowered her body even further and rocked her hips and butt back and forth to rub the underside of Eric's shaft and the tip of his hard dick across her pussy through the fabric of his boxers and the thin material of the costume she was wearing. As much as she tried to stay in character and orchestrate her teasing of him to the beat of the sultry music, feeling his hard twitching dick rubbing against her throbbing pussy lips forced a gasp of pleasure from her lips and an involuntary shudder from her body.\n\nWhen he felt Ellie's pussy lips squish against his hard dick it was all Eric could do not to shoot a load of cum into his boxers he was so worked up with anticipation. Between the weed and the drink he had downed during the first few songs, he was fully caught up in the moment. If he had wished for a chance to go watch some random girls get topless, he could never have hoped for the chance to have his own private show with Ellie and Cassie masquerading as the sexiest characters he could imagine for his own private pleasure.\n\nThrusting her chin up in the air as Eric ground the underside of his dick up against the folds of her pussy through the fabric between them, Ellie stood and rotated around with a swivel and roll of her hips to the throbbing beat and Amy Winehouse' smoky voice. Bringing her knees up onto the chair, Ellie crawled forward to dangle her luscious boobs in Eric's face and let his hands and mouth run over them as he wished. Her pussy strained against the light stretchy fabric as she lowered her body onto the tip of his hard dick and she could feel the wetness of her on the fabric between them as she ground the tip of his cock into the folds of her pussy and felt her hard little clit press into the spongy head of his swollen dick. ",
        "Ellie had only meant to playfully rub her bottom around on his lap as she moved seductively for him and revealed her tits after the tease of the first song, but the drinks the girls had shared, while setting up the living room before turning on the music, were making it harder to remember the plan that she and Cassie had laid out in advance. Feeling Eric's dick against her pussy felt so indescribably delicious that it was all that she could do not to grind herself to a climax against him. \n\nThrough the fog of her desire, she realized that the song was coming to an end and she reluctantly pulled herself up to step off and march seductively toward the door, with her hips punctuating the staccato beat of the last notes of the song. As she passed Cassie in the shadows beside the door, she could feel her slick pussy lips rubbing against the tight fabric as she hurried to go put on her final outfit.\n\nCassie bit her lower lip in the endless seconds before the low steady hum of Selena Gomez' \"Good For You\" began to emanate from the speakers in the next room, timing her entrance exactly as she'd rehearsed it with Ellie, Cassie stepped into view and began walking seductively toward Eric exactly as the vocals began. Doing her best not to hurry, just as Ellie had taught her, Cassie tried to ignore how quickly her heart was beating in anticipation as she mirrored her steps and the swagger of her hips to the slow building rhythm of the songs introduction.\n\nEric was as turned on as he'd ever been as the music started, fighting the urge to run after Ellie and satisfy his urge to cum in whichever way she would allow him in that moment. But when Cassie stepped into view wearing the Catwoman outfit, complete with the mask, from \"The Dark Knight Rises\", Eric felt like he'd been pushed into a dream. It was almost too much to bear how much she looked like the actress as she walked toward him with her hips describing an insouciant attitude that he knew his sister had never displayed before. If it was easy to believe that each of the previous costumes made the girls into the characters they'd chosen, in that moment, Eric was fighting to reconcile that the woman slinking across the room in that moment could possibly be his sister Cassie, rather than the movie character come to life.\n\nCassie had never actually seen someone's jaw drop in disbelief before and had always believed that it was really just a figure of speech, until the moment that she watched Eric as she approached him in the costume. As nervous as she'd been all evening, the drinks before the show had only given her enough 'liquid courage' to go through with the routines Ellie had planned for them. As she watched Eric's face pass through multiple stages of disbelief, awe and desire with each step, she finally found herself able to accept that Ellie had been absolutely right about the effect that she would have on him. In the strangest way, she felt incredibly powerful, even as she was trembling with excitement at the sensation of dancing for him and doing everything she could to fill him with pleasure and desire. She couldn't help wonder how intoxicating it would feel to do this in front of a room full of strange men.\n\nWith the mask to give her courage, Cassie was able to stare Eric down as she walked to him and perform the grinding turn with her hips as she offered her bottom for his view in the tight stretch material before lowering it to sit on his thighs. She felt Eric's hands rest lightly on her hips as she wiggled her butt into his thighs, but was completely unprepared as he slid her further up his thighs, his strong hands and arms moving her as easily as if she was a little girl. She continued to grind her hips and bottom against his lap, but could clearly feel his hard cock filling the cleft of her ass as he held her hips in place against him. \n\nEric was so inflamed it was hard not to thrust against Cassie's grinding ass and allow himself the release that he so desperately desired in that moment. As it was, he couldn't resist the urge to reach up and squeeze her tits with one hand through the thin, stretchy material of her catsuit. When he felt her reach up to unzip the costume and make her bare tits accessible to him, he reached up with both hands to cup them even as he felt her butt and thighs rubbing against him as her hips rotated and ground to the seductive lyrics. When Eric's hand slid down between her legs to touch her pussy through the cloth, her hips rocked backward and her pussy slid against his hard cock as if she had been shocked with an electric current.\n\nPushing up against the arms of the chair, Cassie lifted herself free, trembling from the contact of her brother's hard cock against her pussy and reeling from the rush of sensation and desire it had triggered inside her. Trying to regain some semblance of self-control she turned around and stood dancing in front of the chair, her mouth open as she panted from the intensity of the moment, her costume unzipped to her waist as her breasts were laid open to his view. Cassie looked down to see Eric's hard dick outlined through the cotton material of his boxers now clinging to his cock from the rubbing that she and Ellie had been applying with their damp costumes. Cassie leaned down, hypnotized by the memory that only hours ago she had taken Eric's dick into her mouth while he slept and Ellie watched. Reaching out, her hand stroked lightly over the length of it's pulsing shaft almost reverently while Eric stared in disbelief at how incredibly hot the image was of the masked Cassie, leaning over his knees with her tits exposed as she willingly, almost lovingly, stroked his hard dick through his underwear. \n\nIt was only the change in music that broke them each out of their reverie as the room went silent for a moment before Lana Del Rey's smoky voice sung about her old man being a bad man and Cassie realized that she had missed her exit and turned to see Ellie walk into the room dressed as the movie version Harley Quinn in her hotpants and \"Daddy's Lil Monster\" T shirt.\n\nCassie knew she was supposed to have left before her song ended, but Eric reached up to grab her by the waist and pull her onto the arm of the chair beside him. Her hand moved to zip up the front of her costume but Eric's reached across to stop her hand, holding it in place for a moment before releasing it to reach up and lightly pinch her swollen nipple with a possessive certainty that left her throbbing as she resisted the urge to cover herself while she sat beside him. Cassie watched her sister dance toward them as the hip hop beat came up under Lana's voice and the song fairly dripped with the temptation and desire that had gripped each of them in the last few minutes. \n\nIt was hypnotic how Ellie was able to become the character through the movement of her body. Her hair had been taken up into pony tails and her make-up had been changed to mirror the heavier, messier, more dramatic look of Harley, but the combination of playful sexiness and stalking menace of Ellie's movements made her irresistible to watch as she used the story in the music to pull both Eric and Cassie into the mood she wove with everything she did. \n\nAs the song reached the chorus and soared off the races, Ellie embodied all of the flirtatious sweetness of Lana's voice as she came and sat on Eric's lap, rubbing his engorged cock with her full bottom through the shiny hotpants and looking over her shoulder to lock eyes with Cassie as Lana sang 'ready for you'. Cassie could see a desire in Ellie's eyes that wasn't a part of her act.\n\nEric reached up to pull Ellie's shoulders back and as she fell back against him, he slid around her body to kiss her as her head lay on Cassie's lap. Ellie wondered for a moment what Cassie would think, but then she felt Cassie's cool hand alongside her face, cradling her cheek as Eric's tongue filled her mouth and his hand had lifted up the skimpy t-shirt over her bare breast and fondled her roughly. The song throbbed in her ears as hotly as the waves of desire throbbed through her body and when Eric slid her to the ground between his knees she didn't resist.\n\nLana sang, \"Light of his life, fire of his loins, keep me forever, tell me you own me,\" and Eric had pulled his achingly hard cock free and offered it to her as she kneeled between his legs. Ellie looked up to see Cassie watch her in fascination as she wondered whether Cassie knew that what she had caught Ellie doing that morning wasn't the prank she had pretended it was. Looking for any sign of shock or objection in Cassie's eyes, Ellie surrendered to Eric's desire and took him into her mouth as her brother and sister both watched her sucking her brother's dick. \n\nEllie could tell that Eric must have been very worked up because he was squeezing out a steady pulse of precum as she sucked up and down on his thick cock and stroked him with her hand. It only felt like a matter of moments before felt him tense up and she withdrew her mouth to the tip and prepared to swallow his cum.\n\nLana sang, \"My old man is a thief, and I'm gonna stay and pray with him 'til the end...\" and the first load of hot cum shot into Ellie's mouth.\n\nCassie had watched her sister sucking on Eric's dick playfully while he slept that morning, but this was different. Knowing that Eric was fully aware and watching her do it made it seem so much more intense and hypnotically erotic to Cassie. While she herself had struggled with the idea of taking a man's penis in her mouth, Ellie seemed to embrace it, sucking it with a slavish desire to please that struck Cassie as so submissive as to be almost humiliating when she looked at Eric's large veiny cock sliding in and out of her sister's beautiful mouth. Ellie's full swollen lips were making love to the tip of his dick at the apex of each stroke and doing everything she could to milk it with her hand at the same time she struggled to fit as much as she could into her mouth as she went down each time. As she felt Eric tense up beside her, she realized that he was about to ejaculate and she stared in fascination as she prepared to watch Ellie pull her mouth off in time to allow the cum erupt from her brother's dick. She had never seen a man achieve orgasm before and she felt her stomach flutter and a fresh release of excited wetness release from her pussy as she realized she was just about to.\n\nWhen Ellie didn't pull back from Eric's dick, Cassie underwent a moment of confusion, thinking she must have misread Eric's reaction, until she saw her sister's face clench up and her brow furrow with concentration as she began swallowing while continuing to suck the tip of Eric's dick. At the realization that Ellie was actually swallowing Eric's cum, Cassie was overwhelmed with disbelief that her sister would do that for him. Looking from Ellie back up to Eric's face she marveled at being this close to something so erotic and intimate that she couldn't believe she was being allowed to witness it.\n\nIn the back of her mind Ellie could still hear Lana singing as load after load of Eric's cum kept releasing into her mouth: \n\n\"Take him when He may, if He may\n\nI'm not afraid to say that I'd die without him.\n\nWho else is gonna put up with me this way?\n\nI need you, I breathe you, I'll never leave you!\"\n\nEllie had only swallowed Eric's cum a couple of times before and there hadn't been nearly this much either time. She struggled to keep up as she swallowed gulp after gulp of his hot slippery load, barely clearing her mouth the first few times before another spurt quickly followed. As the spasms of ejeculation finally began to taper off, she relaxed and felt a sense of pride that she had been able to take such a massive load without choking or gagging on it.\n\nLana sang, \"You never looked so beautiful as you do now...\" as Ellie finally opened her eyes and saw Eric staring, mouth open, as their eyes locked while she continued to suck at the tip of his dick and the last few drops of his cum as they oozed from his twitching dick. As much as she wanted to give Eric a lopsided, devilish Harely Quinn grin as she lifted her mouth away, she found herself blushing as her eyes dropped and the small smile that formed at her mouth was much more sensitive and demure than she had intended. Something about Eric's eyes had touched her in a way that she found hard to describe, but she felt a wave of awkward shy vulnerability in that moment, after having just swallowed his cum, that was hard for her to reconcile with how she had tried to project herself to everyone else in the world, including Eric.\n\nRemembering at the last moment that Cassie was right there the whole time, Ellie's eyes flashed up to see her sister staring open mouthed, either in amazement or desire, at her, as she blushed to realize that Cassie had watched the entire episode of her sucking off and swallowing their brother. Realizing there was nothing else for it, Ellie stood up to pull the small t shirt over her head and peel off the shiny shorts to stand naked in front of them before taking Cassie's hand and helping her up off the arm of the chair. Leading her sister out a step from the chair, Ellie turned Cassie by her shoulders to face Eric before pulling the top of her costume down off her shoulders and off each arm, leaving her exposed from the waist up. Eric watched Cassie, still masked, as Ellie stripped her, pulling the cat suit the rest of the way down her legs to leave Cassie standing in just the tiny black g-string she had worn underneath the costume.\n\nCassie kicked off the heels she was wearing and stepped obediently out of the legs of her costume, looking at Eric reclining in front of her, his hard exposed cock standing straight up as he sat naked, with his underwear around his ankles. Cassie pictured the movie she'd watched with Eric in the car and to both Eric and Ellie's surprise, she walked timidly over to the side of the chair and laid across the arms and Eric's lap as she'd seen the woman do in the film. Eric looked over the smooth skin of Cassie's bare back and legs, only interrupted by the narrow strip of her thong between her ass cheeks and over her hips, while Ellie stood naked in front of the chair with a look of surprised delight as Eric raised his hand to spank her sister's exposed ass cheeks. \n\nCassie bit her lip and grunted softly as she felt the slap of Eric's bare hand on her ass, her pussy throbbing from the sensation as much as the mental image of both Eric and Ellie seeing her this way. Closing her eyes, she couldn't see Ellie fingering her own pussy as she watched Eric deliver the spanking. Eric could feel his dick pulsing with excitement as he spanked Cassie, his hand lingering on her bare ass each time, her smooth warm skin growing pink in the dim light as he watched Ellie pleasure herself watching them. As Eric spanked her again, Ellie circled around behind her sister and held up her hand to stop Eric from spanking her again.\n\nCassie gasped aloud when she felt Ellie's soft lips kissing her stinging ass. She felt the cool imprint of each kiss as the air felt slightly colder where Ellie's moist lips had touched her skin as she lavished kisses slowly over each part of her ass where Eric's hand had landed. In the moments just after the last kiss had landed, Cassie gasped again and her back arched in reaction to the sensation of the tip of Ellie's tongue as it slid up along the cleft of her closed ass cheeks. Looking over as she felt Ellie circle around to the front of the chair and kneel beside her to kiss her on her mouth, Cassie slid herself to kneel beside her sister at Eric's feet. Ellie brought her mouth up to Cassie's again and kissed her deeply even as her hand took Cassie's own and lifted it to Eric's dick.\n\nEric couldn't believe how hot his sisters looked, Ellie still made up like a naked Harley in pigtails as Cassie still wore the Catwoman mask and knelt naked except for the g-string, kissing her sister as their hands stroked his hard cock together. When Ellie broke off the kiss, her lips went to Cassie's ear on the side facing away from Eric, nibbling on the lobe and sending shivers and goosebumps over her body. Cassie's large brown eyes looked up from behind the mask and found Eric's as Ellie whispered into her ear, \"Please suck his dick for me. I don't want to be the only one to do it in front of you and him.\" Ellie could feel her sister nod ever so slightly and Ellie ran her hand down Cassie's bare back and over her exposed ass cheeks, stroking her soft skin in grateful appreciation as Cassie turned toward her brother and prepared to take him in her mouth.\n\nShe should have been less self-conscious in that moment as Eric had already seen her with his dick in her mouth and even had a picture of it on his phone. Ellie had even seen her suck it for a few moments while he slept that morning, but it felt like a whole new level of intimacy to have Eric watch her actively sucking and pleasuring him with her mouth as she was preparing to do. It both embarrassed and excited her to think of Eric and Ellie watching her, just as she'd watched Ellie take him in her mouth a few minutes earlier.\n\nPicturing the woman from the movie she'd watched with Eric, she leaned over to take her brother's cock in her mouth. Using her hand as she'd watched Ellie do, she awkwardly stroked his thick shaft as she tried to coordinate the movement of her mouth while she bobbed up and down on the top few inches of her brother's dick. As ashamed as she felt to have her little brother Eric watch her do this for him, another part of her was overwhelmed with throbbing excitement that she was serving him this way. She urged herself to take his hard cock deeper into her mouth each time and did her best to abandon herself to the role of a cock-sucking submissive. She moaned with a mouthful of dick as her mind savored the word 'cocksucker' and knew that fully applied to her now. \n\nEllie grinned up at Eric as he stared wide-eyed at Cassie, kneeling between his legs and sucking his dick. He looked over briefly at Ellie and saw her smiling and giving him a wink as she slid in behind Cassie and reached down to run her hand up under her sister's pussy through the fabric of her g-string. Cassie's hips lifted in surprise as she felt her sister's hand touching her. Eric saw Cassie's eyes open in wide surprise and felt her gasp around the thick cock filling her mouth and felt himself twitch in excitement at the sensation.\n\nEllie reached down to slide the fabric of Cassie's g-string to one side and slide her fingers into Cassie's wet pussy, brushing the back of her knuckle over the hard little nub of her clit as she curved her fingers upward into her sister's body. Looking down to see Cassie's ass cheeks parted as she bent forward to suck Eric's dick, Ellie licked her finger and lowered it to insert the tip into the pink opening that clenched and puckered as it felt her finger make contact. \n\nCassie moaned into the mouthful of hard cock and slid forward, trembling from the contact of her sister's finger in her ass to bury as much of Eric's dick as she could in her mouth. Immobilized by the wall of sensation that washed over her from the effect of Ellie's hand sliding into her pussy while the tip of her finger gently wiggled it's way into her ass, Cassie could only bob slightly up and down on Eric's dick as it filled her mouth and tickled her throat. She slid her mouth up to hold just the plump head of his dick in her mouth as she whimpered uncontrollably, sucking desperately at the warm fleshy knob of her brother's cockhead, while her body lost all control and plunged into a thrashing orgasm and her mouth slid down again onto her brother's engorged cock. \n\nEric couldn't see what Ellie was doing with her hands to Cassie from behind, but he couldn't believe how good it felt to watch and feel her whimpering with her mouth full of his dick. As she bobbed on his head he felt another orgasm building and was about to warn his sister when she plunged her mouth as deeply as she could onto his cock and he felt the first spurt of cum jet uncontrollably into her mouth.",
        "Cassie felt the hot liquid of her brother's cum shoot into the back of her mouth and did her best to lift her mouth off as she choked in surprise, swallowing some of his cum as the rest spilled out onto his dick and dripped down onto his stomach. Her mouth hadn't quite cleared the tip when another load squirted up into her mouth and finished on her lips as her mouth lifted free. Her body was still wracked with wave after wave of orgasm as Eric's dick continued to shoot cum onto her chin and lower lip. Cassie swallowed to clear her throat closed her lips against the final spurts that shot more weakly from the cock in front of her face. She laid her face onto Eric's stomach with her mouth alongside the base of his cock as she felt the final lashings of her own orgasm twitch through her body as she realized that she'd let Eric cum in her mouth even as she'd cum herself.\n\nEric stared open mouth at Cassie as the last few drops of cum oozed from the tip of his dick. There was his masked older sister, his cum still clinging to her lips and her face resting on his stomach, still heaving from the gasping breath of his fading orgasm. Ellie looked up at him over the sight of their sexually spent sister and came around to climb up onto the arms of the chair, standing over her naked brother, her shapely thighs and trimmed pussy hovering over him for a moment before she straddled his mouth and began to grind her pussy against his tongue and lips.\n\nCassie looked up to see the underside of Eric's chin up between Ellie's legs as she fucked his mouth with slow grinding thrusts and rolls of her hips, her curvy bottom, clenching together each time she thrust with her hips and opening to reveal the pink rosebud of her ass each time she withdrew her pussy to thrust against Eric's mouth again. With a devilish grin, Cassie thrust her finger deep into her own pussy, covering it in her slippery juices before bringing it back up to position it where it would contact that most sensitive part of Ellie's ass the next time it opened and followed it through the pattern of her thrusting hips.\n\nEllie gasped as she felt the tip of Cassie's finger enter her and she adjusted her hips to allow her sister to penetrate her more deeply, pushing lightly against her finger as she held her pussy onto Eric's lips and tongue. She felt Eric's finger come up to fill her pussy, rubbing and pushing up against the roof, just behind her clit as Cassie gently vibrated her finger slightly deeper into her ass and her body froze before wave after wave of clenching spasms tightened against her siblings fingers and her thighs trembled from the waves of pleasure that left every bit of her tingling. Straightening up to free her ass and pussy from their touch as she grew too sensitive, she slid down onto Eric's sweaty naked chest, a limp rag doll, gasping for air. \n\nShe felt Cassie's bare breasts pressed into her back as her sister hugged from behind and Eric's big arms enveloped the both of them. After a minute had passed and Ellie's heart and breathing had slowed enough, she reached up to remove a strand of hair from her mouth as she panted softly and whispered, \"That is the hottest fucking thing that I've ever done in my life. I fucking love you guys so much.\"\n\nEric and Cassie both laughed as the three of them remained pressed together in a sweaty pile, no one wanting to move. Ellie sighed again and laughed softly along with them."
    ],
    "authorname": "jhealy55",
    "tags": [
        "ass",
        "blowjob",
        "brother",
        "cum",
        "oral",
        "oral sex",
        "sister",
        "suck",
        "swallow",
        "tits"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/lockdown-christmas-miracle-ch-17"
}