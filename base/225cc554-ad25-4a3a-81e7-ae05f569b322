{
    "title": "Kentish Town Lady",
    "pages": [
        "The mail delivery lying on my doormat had the usual mix of unsolicited advertising for chair lifts, recliners, tilting beds, and baths with doors. The delights of being old. But then I spotted a rarity, a handwritten envelope on crisp cream paper. The hand was not very firm, but well-formed, so I concluded that it was from someone at least my own age. This is a warning sign, because it's the way that news of the death of a friend or relative can arrive.\n\nI took the envelope in to the living room where I was halfway through a mug of coffee and sat down to open it. There were several pages, quite close written, and an address at the top that I didn't recognise. I started to read:\n\n\"Dear James\n\nI wonder if you remember 50 years ago when we shared 5 weeks in the summer of 1969? I think you might. I know that those weeks are lodged in a recess of my mind where I store my most precious moments. Mine has been a long life, and you will have worked out that I have now reached 90.\n\nWe were close. I was surprised -- almost shocked -- that we grew together so quickly and completely. As my life draws to a close, I wanted to find out if you were still living, and if so to say some things which I felt I needed to share. I asked my step-nephew if he could find you, and it seems that he didn't have much difficulty. James Vesey is not a common name, and evidently you have had an active life. It's difficult to believe that you are now in your mid-seventies.\n\n\n\nAfter the first two sentences I knew the author: Martha Jameson had drawn me into a life-changing period of my young life.\n\nI'm going back now to the summer she mentions, and to a gaggle of people -- I think that there were nine of us -- walking through the Soho district of London. It was early afternoon, and we'd been to an Italian restaurant for our regular Friday pizza and red wine lunch.\n\nWe were a development group of architects, engineers, quantity surveyors and the like, and I was with them for the year out that we architectural students spent after three years of our five-year course. I'm at the back of this group, talking to a mature woman who walked with style, and not the over-casual fast amble of us students.\n\n\"I'm really sorry that I haven't got to talk to you before on one of these jaunts -- I feel I've been missing out,\" she said\n\n\"It felt as if perhaps you were too grand -- a bit remote,\" I replied, \"I'm sure I was mistaken\".\n\n\"Oh dear. I don't feel a bit grand or remote, but that's no excuse.\"\n\nWe'd had an animated half hour of conversation in the restaurant, largely about the value of good old buildings in preserving some of the character of our environment. I hadn't thought as much about it as I should, but she was passionately committed to conservation of all that had value in keeping.\n\nThere was a short moment of silence, then \"If you haven't got plans for tomorrow afternoon I wonder if you would give me a hand moving a load of books? I've had them stored in my spare bedroom, but I like to have books around me, and I've built shelves in the living room which are now ready to be filled. I'd be happy to pay you because it will take a few hours, and it's quite heavy work.\"\n\n\"O.K., I'd be pleased to do that, particularly if you give me some supper!\" I said, a bit cheekily.\n\n\"It's a deal. I live in Kentish Town. I'll write down the address and instructions when we get to the office. It's easy to find, only 5 minutes' walk from Kentish Town station on the Northern Line.\"\n\nWe had reached the office. She gave me the details, but did it discreetly, pinned to a piece of office admin. I wasn't sure if it was to avoid embarrassing me or herself. But she was so self-confident that it was probably my blushes that she was saving.\n\nOn Saturday morning I was busy. I was never a late riser, so by 9am I was in the Safeway supermarket in Edgware Road buying our supplies for the week ahead. I shared a flat with 5 others, and 2 of us did mutual shopping and cooking. It was my turn this week as Bob had gone to visit his folks out of town. I had other things to do as I would soon be moving to another flat up the river, but I set off after a quick lunch of ham roll and a glass of milk.\n\nI walked up to Euston underground station, ducking back into the southern edge of Regents Park, which I loved, rather than walk along the Euston Road. That took about half an hour and then I had to catch the Northern Line to Kentish Town, where I arrived with about 10 minutes to spare: I had been instructed to arrive at 2pm.\n\nLondon in 1969 was a quite different place to the wealthy and exciting capital city it has become, some of it on the back of a lot of dodgy money. There were bombsites still evident, most of them used as car parks. The trolleybuses had only disappeared 7 years earlier and the buses still had open platforms and conductors, or 'clippies' as they were known. Parking meters were a new sight. Supermarkets were uncommon, and where they existed, they were still on the high streets.\n\nThere was dust, dirt and rubbish to go with the grey buildings that had accumulated years of grime from the soot and sulphur laden atmosphere. There were signs of regeneration, and some areas had survived the war with their charms intact; but mostly it still had the air of a city still struggling to get back on its feet.\n\nBehind the recently opened Sainsbury's in Kentish Town Road, which is where I was heading to find Martha's house, the tightly packed terraced houses were still largely rented or owned by people who did not have the financial resources to 'improve' them. 'Gentrification' had only just begun and Martha's house was one of only two or three which had clearly had money spent on them.\n\nBy the time I'd taken all this in and worked out where I was, I'd arrived at Martha's. When she let me in it felt immediately as if I was in a quiet sanctuary. Everything was clean and bright; walls had been removed so that, beyond the area immediately inside the front door, you could see through from living area to eating area and on to the galley kitchen and yard with lots of planting.\n\n\"Hi James, thanks for coming, and for arriving on time. It's a relief to see you because I would have struggled to manage these books by myself.\"\n\n\"It's good to come and see you in your natural micro-environment. It's as pleasing from the outside as it is in here, so I see you haven't adopted a camouflage!\"\n\n\"No, us middle class trendy pioneers like to run our flag up the masthead. I've only been here a year, but I wanted to get everything done quickly, not drag on. Anyway, come inside and sit down for a moment.\"\n\nThat's what I did, on a sofa facing the wall which had the evidence of two fireplaces that had once been in separate rooms until the dividing wall was removed. There was a series of alcove recesses between the chimney breasts, which were fitted with book-shelves but still waiting for the books.\n\n\"You can see the shelves to be filled, and the books are upstairs. I was going to make the room that they are in a study, with books being a natural part of that. But I've changed my mind, and quite like the idea of having a spare room. Your job is to bring the books down, and my job is to arrange them. O.K.?\"\n\n\"Fine.\"\n\n\"Let's go upstairs and see the cargo.\"\n\nThe stairs rose directly from the living area, with a half landing to turn it through 180<sup>0</sup>. Upstairs the landing had the main bedroom straight ahead, and the book-filled second bedroom to the right. The books were neatly stacked in piles. Beyond this room the landing led to the bathroom door.\n\n\"Would you like a drink before you start?\"\n\n\"No thanks. Let's get going and stop for a cup of tea a bit later.\"\n\n\"Good plan. I have tried to arrange the piles so that you can bring them down in some sort of logical order. Just let me know when you get to the bottom of a pile before you start the next one.\"\n\nShe stood and looked at me and her face opened up in a broad smile. \"This is going to be fun!\" she said and trotted off down the stairs.\n\nI will try to explain the oddity of my situation. Martha was my superior in almost every way: she had been my senior in our jobs, I guessed she was nearly twice my age, she had wider experience, better qualifications and seemed widely travelled. So it was difficult for me to fall into a comfortable friendship with her. But I sensed that she wanted just that, and I was going to have to try to ignore a sense of inferiority. I haven't often felt like that.\n\nI got on with my labours and before long we'd made good progress, probably nearly half the way through, and I was in danger of overwhelming her with books. It clearly took more time to arrange them than to carry them downstairs.\n\n\"How about me making a pot of tea, while you catch up here...\" I asked\n\n\"Great idea. See what you can find and shout if you're stuck.\".\n\nI went into the kitchen and had no difficulty in finding mugs (hanging up), teapot on a shelf, and next to it tea leaves in a caddy. Milk (no surprise) was in the 'fridge. \"All found\" I called. Teabags had been invented, but only about 3% of the population used them.\n\nWe sat with our mugs of tea looking at the filled shelves. They looked good.\n\nI hadn't really given myself time to examine the books as I carried them, but now I began to sense their variety. The books on architecture and architectural history were obviously still to come, but history, philosophy, poetry, humour, travel and languages were covered by what I had already moved.\n\n\"The books are a kind of autobiography\" she said \"Most of them I will probably not read again, but it's surprising how often I refer to them and look up particular bits. I couldn't be without them; I would feel diminished. It's also a very personal form of furnishing a room.\"\n\nI looked around the walls at the pictures. There were a few watercolours, exquisite in their way, but most of the pictures were abstract or semi-abstract, some geometric and some more free form. There were a couple of mounted photographs which I thought I recognised as Florence and Sienna. There were also some finely drawn pen and ink studies of Renaissance buildings which I guessed again were Italian. Just enough, but not an excess, they created an interesting and friendly atmosphere.\n\nWe chatted on about how we chose the artifacts we wanted to live with. Neither of us, it seemed, were grabbed by the minimalism of some (particularly architects), who want to strip out anything which interferes with the purity of the space. We both felt the need to have objects which referred to our own tastes and experiences -- mine, of course, rather less developed than hers.\n\n\"I'm going to begin stacking again before you begin to overload me again. Sit there and wait please.\"\n\n\"Yes Miss Jameson. I'll finish my tea and watch progress.\" She turned and gave me an amused look.\n\nShe was now bending to fill some lower shelves. The skirt she wore was just above knee length in a fine navy and white check, shaped to taper to the knee. As she bent it stretched, and each buttock was clearly defined by the cleavage.\n\nUp to this point I can honestly say that I had not really thought of Martha in sexual terms at all, largely because of the deference I've already described. But suddenly I did, as I realised that for all her near-40-years (which seems quite old when you're 22) she was attractively shaped.\n\n\"You've gone very quiet\" she said, rising and turning to me. I blushed, something I do very easily. \"If that flush is related to what you were studying then I'm very flattered. And now I'm ready for some more books.\"\n\nI took the mugs to the sink and went upstairs. I was a bit confused, and I felt the need to talk to her and find out a lot more about her. At the moment she was probably thinking of me as a teenage sex maniac who definitely needed watching, and it would be nice to put her mind at rest. I wasn't a teenager anyway.\n\nWe went on with our work and seemed to match our pace to each other's rather better, probably because I was beginning to tire.\n\nIt was mid-summer, so it was still light when we finished. Martha stood up and stretched. This time it was the breasts that I took in.\n\n\"Come and sit outside and have a glass of wine\" she said, not waiting to see if I was going to blush again. We went to sit in the little backyard, which was so cunningly planted that it almost qualified as a garden. We sat next to each other on a teak bench with a cold glass of white Bordeaux.\n\n\"I think we both need to find out a bit about each other because I feel our relationship is changing from how it's been for the last year. So you really have no need to be embarrassed when you look at me in a different way: it's quite natural, and I look at you in a new way too. It isn't a coincidence that I waited until you were leaving the group before I approached you. It would help if you could tell me about your experiences with females. Would you mind?\"\n\n\"I don't mind talking about it, but it isn't that interesting.\" I paused for a few moments to gather my thoughts. \"I suppose the essence of it is that I seem to have had extremely poor judgement. There have been girls who have formed a strong attachment to me which I have not reciprocated, and the opposite is equally true. My sexual experience is limited to some mutual masturbation, and to chastely sharing a bed with females, but I am still a virgin, and at my age that can become a bit oppressive. I feel I need to cross a boundary and begin living in a country that I've only looked at from near-distance. It looks enticing. Perhaps it will be a disappointment, but I'd sure like to try\"\n\n\"At the risk of sounding a know-all I have to say that I suspected most of what you have just said. It's just my instinct; there were no give-aways,\" Martha said.\n\n\"No, I'm not surprised. I'm not exactly a mystery wrapped up in an enigma am I?\"\n\n\"True; and thank you for sharing it with me. I must respond by telling you a bit about myself. You called me Miss Jameson earlier on, but I have been married, although I have chosen to revert to my maiden name. I was married to a man called Richard, who is still a friend. I was deeply attached to him, and stayed married for nearly 8 years, but he was a homosexual. I think he probably knew when we got married, but he became convinced as time went on, and he chose to do something about it.\n\nAt that time homosexual acts were illegal, so his activities were clandestine, and to me they were necessarily very seedy. Eventually he received a police warning for hanging around toilets on Hampstead Heath, but fortunately they couldn't charge him because they had no evidence that an offence had been committed.\n\nBy 1965 it was obvious that an act of parliament would soon remove the illegality of homosexual acts between consenting men over 21. Richard's ambition was to form a lasting same sex relationship, when that was legal. So he asked me to divorce him, and I agreed. I cared for him enough to want him to be happy, and anyway the marriage seemed to have become a bit of an empty shell.\n\nAre you all right with this so far? I really don't want this to become a heavy confessional.\"\n\n\"It's absolutely all right with me,\" I replied\n\n\"Thank you. Post-divorce I thought I might break free a bit, because Richard had been my only sexual partner, and that hadn't been a wild success. I accepted a date with a nice, ordinary sort of a guy, and quite enjoyed it, platonically. On the second date he started asking about sleeping arrangements and where we could share a bed. Slightly reluctantly I invited him back. It was pretty disastrous. He proved barely house-trained and in bed he was as subtle as an express train at full steam ahead. I couldn't wait to get rid of him\".\n\n\"To be brief there was one more similar experience before I gave up. The fact remains that I still yearn for a relationship with a man who sees sex as an element of partnership, but not the reason for it. Marriages or partnerships seem to work only if there's a reasonable equality of selflessness and I think that the way a man behaves in bed is an extremely good way of judging how selfless he can be. And vice versa of course\" she added with a grin.\n\nI thanked her for telling me this. I was a bit overwhelmed by someone of another generation being so open.\n\n\"Now, I think it would be a good idea if I went and made us some supper, which I have to say you have more than deserved. You are to sit inside and have a rummage through the books and find something to read.\"\n\n\"I need to use the bathroom first.\"\n\n\"Carry on, you know where it is.\"\n\nI did have a good rummage to form an idea of what was there. I decided not to try anything which might take a week to read, so I picked a translation of Bocaccio's Decameron, and re-read a few of the bawdy stories. I particularly liked the one where a hermit shows a young maiden how to put the devil (his) in hell (hers). Unfortunately for him she becomes insatiable and wants to put the devil in hell every day, and his advancing years can't cope with it. Of course now, approaching 75, I understand it completely but aged 23 it just seemed funny.\n\nI walked over to the kitchen area to watch what was coming. There was some rice on the boil, and a pan containing sliced courgette, chopped up bacon, onion, small mushrooms and tomatoes was bubbling away on the hob. When the rice was cooked and drained, Martha poured a glass of red wine into the frying pan and stirred it all around with the other ingredients.\n\n\"I'm sorry this isn't more imaginative, but I thought we'd both be tired, and I'd do something quick and easy. If there's opportunity I'll cook something a bit more special at our leisure.\"\n\n\"Don't worry, I'm looking forward to this.\"\n\nWe sat down at the table. It was very tasty. Our talk was limited: we'd been taught by our mothers that it's rude to talk with your mouth full!\n\nWhen we had finished, she looked me in the eye and said, \"you don't want to go home tonight do you?\".\n\n\"It's o.k., I'll be fine. I'm used to doing underground late at night.\"\n\n\"Do you have anything urgent to do tomorrow morning?\"\n\n\"No\"\n\n\"Then stay here. You'll have to share with me because, as you saw, I still have only one bed. But I don't think I snore, and I promise to give you a fair share of the bed.\"\n\n\"Selflessness in action? O.K. thank you.\"\n\nShe laughed.\n\nWe did the small bit of washing-up together. When we'd finished she came and stood in front of me, put her hands on my shoulders and looked me straight in the eyes.\n\n\"Am I intimidating you?\" she asked.\n\n\"A bit\" I confessed.\n\n\"I'm sorry. I suppose it was inevitable, but I'll work on trying to improve.\"\n\nShe moved her head towards me and pressed her lips on mine. I put my arms round her and hugged her warm softness. Her lips opened and her tongue made its way quietly into my mouth. My hands dropped to her buttocks and massaged them with gentle fingers. They were firm but yielding. She held my head in her hands and pulled it down towards her. Her tongue became an active invader, and I gently bit it. Our tongues performed a kind of hide and seek with each other: oral synchronised swimming perhaps. It was a delight. I was excited. Maybe she was too, as she seemed reluctant to pull away when I dropped my hands and disengaged my mouth. My excitement was obvious.\n\n\"What's the matter my dear?\" she asked softly.\n\n\"Nothing is the matter, but I wanted to ask you a question, which may seem odd, but is important to me.\"\n\n\"Ask away.\"\n\n\"Are we going to have sex?\"\n\n\"Why is it important to you to know in advance?\"\n\n\"Because twice I have been in a position with women when I have sensed that we were moving towards making love. On both occasions, as soon as my hand made a move to feel between their thighs they pulled away as if stung by a wasp, saying 'How could you think that I was that sort of girl?' The words were almost identical, but the incidents were several years apart.\"",
        "\"And you felt humiliated?'.\n\n\"Yes: it seemed almost like being outed as a potential rapist.\"\n\nShe returned to the 'hands on my shoulder' position. \"I don't know whether we are going to have sex. We are going to bed together, and that may happen. Let's wait and see. But I can promise you that you won't be humiliated, whatever does or doesn't happen. Do you trust me?\"\n\nI didn't answer. I just threw my arms around her in a big hug and buried my face in her shoulder.\n\n\"Come on Tigger. I'm going to use the bathroom, and you can sit here and read some more of the Decameron, and then use the bathroom while I read in bed, shawl around me, and wait for you. Just like an old married couple!\" she said laughingly.\n\nI did. We did. After I'd washed and given my teeth a good scrub with utensils provided, I put on a dressing gown which may have belonged to her ex-husband. I had nothing on under it, and when I entered the bedroom I saw that, as she had predicted, she was sitting up in bed reading with the bedclothes pulled up round her. I stood for a moment looking at her. She had put the book down and was watching me.\n\n\"This isn't fair\" I said, \"I've now got to expose all my not-very-beautiful body to your critical assessment while you sit there revealing nothing.\"\n\n\"O.K, you're right\" she said laughing, and dropped the bedclothes to reveal her breasts. It may come as a surprise to my readers that at 22 years old I had never properly examined what Peter Cook described as 'busty substances'. I had felt them, and caught glimpses of nipples, and seen countless pictures of them, but never had a confirmed siting of a complete set in their natural environment.\n\nMartha's breasts therefore had no competition to be assessed against. They would probably have won anyway because they were stunning. O.k. they were nearly 40 years old, which meant that they were not sticking out like sharpened pencil ends. But the nipples were looking up and smiling, not sulkily staring at the floor. They were light brown and large, but not large enough to look as if they had been grabbing territory from the creamy lands around them.\n\nI had a few moments to gaze before I was invited to remove my own covering. I took the dressing gown off and turned and hung it on the hook on the door. I was not fully erect but showing signs of interest.\n\n\"At the risk of embarrassing you I have to say that you have a divine little bottom, which I would like here beside me.\"\n\nI got into the bed and lay down. Martha leaned over and kissed me. We snuggled up together: I had one leg between hers, she had one of hers between mine. She felt my erection and liberated it to lie upright between us. She smoothed her hands over my buttocks, such an exciting sensation. We kissed again; a long saliva filled occupation of each other's mouths. We lay like this for many minutes -- if it could have been eternity and I would have been happy.\n\n\"Do you want to try coming inside me?\" she said.\n\n\"Oh yes please Miss!\" She pinched my bum.\n\n\"First of all you should explore where you're heading. Give me your hand.\"\n\nShe rolled over onto her back and took my hand. My hand was guided between her legs.\n\n\"What can you feel? Separate your longest finger from the others and push it gently down. It feels as if the soft tissue is opening? That's the lips of the vulva separating to allow penetration. I suppose it's a bit like opening your mouth to suck a lollipop. If you carefully move your finger backwards and forwards, it will become coated with a silky moistness, and if you push a bit further down you should find the vaginal opening. That's where you are heading.\"\n\nI tried to think of something to say, but I couldn't. I just needed to swallow hard.\n\n\"Roll over on top of me now. I'll guide you in, but this is your first time, and you will probably go off pop as soon as you get in. You mustn't worry about that. I expect we'll try again later, and it'll get better.\"\n\nEverything happened as she said it would. She guided me into her slippery cunt and it was so delicious, both physically and emotionally, that I fired a round of semen within about 15 seconds. I wanted to cry, partly because it was so beautiful, but also because my raw inexperience was so painfully evident. But she hugged me protectively, trying to save me from my own emotions I guess. I just felt overwhelmingly grateful.\n\nWe lay back in silence. Her hand found mine and squeezed it. Mother and child? I did feel rather a filial sense of dependence.\n\n\"Why me? Why anyone in fact since you said that you 'gave up'?\" I asked.\n\n\"Fair question. You are justified in feeling that you have been seduced, even if you were not unwilling. I really want to try to find out if there is a way of enjoying a physical relationship without being controlled and feeling used. Let's face it the relationship between men and women is still nowhere near an equal one. Men expect themselves to be in control: they feel it's part of their masculinity.\n\nI have the feeling that your generation is starting to be different, and men of your age, at least reasonably educated ones, don't seem so hung-up on templates for masculinity. Why you? Because I could see that you were a bit shy, but with a spark that didn't mind challenging the accepted norm. I suppose I thought -- I am hoping -- that we had something to offer each other.\"\n\n\"Do you have maternal feelings for me?\" I asked. There was a pause.\n\n\"I would be a liar if I gave a categorical negative. But I'm not really a very maternal person. I didn't have a role model. My mother was efficient but not very warm. And I spent much of my young life in a girls' boarding school. I've never had a great desire to be a mother.\"\n\n\"Quite a complicated way of saying that you don't know? I'm not sure that I'm particularly bothered one way or the other, but I'm not comfortable with smothering.\"\n\n\"I promise: no smothering.\"\n\n\"Do you feel entirely at ease with the whole sex thing? I mean you seem to know what you do and don't want.\"\n\nShe laughed. \"No. I have my inhibitions. I'm not comfortable with talking dirty or being talked to in that way. I think that may mean I'm missing out on a bit of raunchiness. I feel a bit constrained. Otherwise I'm quite relaxed about it. My mother was a nurse and was very matter of fact about health and sex.\"\n\n\"I have done a bit of acting in the last few years and did some bits of training,\" I said. \"It's recognised that actors can have hang-ups about certain words. We were taught a little game that can help. You think of a few words that fit the category that you baulk at. Then you get someone else to start saying one of them, and you reply using another. You're not allowed to repeat the word that's just gone. You start with just a whisper and gradually get louder and louder until you are both shouting the words at each other. Want to try it?\"\n\n\"The walls are quite thin. I wouldn't want to upset the neighbours by shouting obscenities.\"\n\n\"We'll need to pull the bedclothes over us then.\"\n\nSo we ducked under the sheet and blanket; whispering 'cock-tit-fucking-balls-cunt-arse-shit, then increasing the volume until we were trying to shout under the bedclothes and were overcome with giggling.\n\n\"Better?\" I asked. \"Now try to incorporate as many of those words as you can in a proper sentence.\"\n\nPause...\n\n\"Come and get your arse over here and shove your cock in my cunt up to your balls and give me a good fucking. (pause) How's that?\"\n\n\"Brilliant. I shall comply immediately Miss\".\n\nSo I did, and we did, and that's how I became a proper lover, sustaining my vigorous 'sink and draw' long enough for us to manage a more-or-less simultaneous, and quite noisy, climax. It was a relief for me, and probably for her. Maybe I wasn't going to be too much like hard work for her.\n\nThere was quite a lot of 'discharge' around before we mopped up, which prompted me to ask about contraception. The pill had been around since 1965, and I supposed I had assumed she would be taking it.\n\n\"I started taking the pill almost as soon as it became available and I found that it made my periods more regular and less painful. So I have stuck with it.\"\n\n\"Was our fucking good for you?\" I asked, expressing my feeble need for reassurance.\n\n\"You are not yet World's Greatest Lover, but you show promise and if we work on it we might at least get you into the first division\", she said with a broad grin.\n\n\"I guess I'm not really big enough to be WGL. I realise I'm not specially well endowed.\"\n\nShe threw back the bedclothes and we were lying there on our backs naked. Good job it was mid-summer. She picked up my cock and stretched it upwards.\n\n\"There we are, it's probably about 6\" extended which I believe is about average. Don't worry Tigger, it's enough for most of us. Anyway, just as penises vary in sizes, so do vaginas, and a large cock in a small vagina can be jolly uncomfortable. I know, because the last guy I lent my cunt to was enormous: so much so that when I first saw his cock I almost called a truce. I didn't, and I regretted it.\"\n\nI noted the casual use of 'cunt' and 'cock' and I thought that maybe the training was not going to be all one way.\n\nStill with my manhood in hand she said \"I think he needs a name. I shall call him 'the Prince', and I shall help to look after him and spoil him as befits a lady-in-waiting\".\n\n\"Why the Prince?\"\n\n\"Because he's clearly an aristocrat, is really quite handsome, and has a touch of arrogance.\"\n\n\"In that case I shall call his counterpart 'Cinderella'. Why? Because it took a Prince to celebrate her beauty.......and he found the right size for her!\"\n\nShe roared with laughter. \"Time to sleep I think\" she said. We lay like spoons, me behind of course. I was tempted to grab hold of her lovely buttocks, but instead I wrapped an arm over her and snuggled up. She wriggled a bit in response and then we both drifted quietly off to sleep.\n\nThe morning was predictable: my erect cock was already investigating the valley of anus when I woke. She turned enough to look at me and say \"it seems that the Prince is already in control?\" I had to admit that I didn't seem to have much influence on his behaviour. \"Well let's see what he and you are made of. Your task is to get into a position where you can rescue Cinders from another lonely morning.\"\n\nThis was the green light for me to start a light massage of her shoulders, and then a tender stroke down her spine. My kneading of the flesh below was respectful but inquisitive. As I eased the two cheeks apart my finger explored the valley and softly rubbed it. I repeated this sequence several times, allowing my free hand to reach round and take hold of a breast. I gently squeezed and took the nipple between two fingers. I felt the nipple respond by stiffening. After a bit I let this hand slip under her upper thigh and brought it back to rest on mine. There was space now to explore the forest that sheltered Cinders, and I rubbed the heel of my hand up and down the folds of the cunt lips, particularly the upper part where I sort of knew the clit was.\n\nThere was little response from MJ beyond a quiet moaning sigh. I thought it sounded promising. It seemed like the moment to find out if I could gain entry without making it seem like clumsy burglary, so I used the spread of my fingers to gently open up the vaginal canal. Now I needed to get a rampant Prince into position to make his dramatic entry, which I did with an elegant dance movement of twist and lift. Then he was in. Oh my, what delight!\n\nI thought it would be good to try to stay still for a while, and just enjoy the wonder of being joined together.\n\nStill no word from Miss. Perhaps I was doing all right? Teachers weren't usually backward in pointing out mistakes.\n\nThen, surprisingly, she started to move, pressing herself back onto me, then easing forward until I was almost ejected, back again and forward. A rhythm was building up and getting more and more animated as I began to thrust and withdraw in time with her movements, until my stomach was smacking her arse with a slapping sound that was highly erotic in itself. The movement had almost reached terminal velocity when she stopped. After a few seconds she gasped, \"push up inside me as hard as you can and hold it.\" I did. I felt the cunt walls gripping me, then about 10 seconds later she let out a muted shriek and I immediately climaxed with pulse after pulse.\n\nSilence. She turned and threw her arms round me. \"I'm overcome. That was quite wonderful. I don't doubt my hopes are going to be fulfilled.\"\n\nMore silence.\n\n\"Is this a way of telling me what a brilliant instructress you are?\" I couldn't resist asking.\n\n\"You're largely self-taught I think, but you've still got a lot to learn, young'un.\"\n\n***\n\nWe ate a breakfast together of warm rolls, strawberry jam and coffee, and talked about bits of our lives that we were curious about: parents, schools, siblings and how we spent spare time. There was a lot we had in common, and a lot more still to discover.\n\n\"I'd like you to come next week: not to work, but I'm sure we'll find things to do together. I've already committed to cooking you a decent meal, and you may like to walk up to the Heath. And there's obviously still work to be done at Aunt Martha's Sex School for Eager Learners... if you're interested.\"\n\nMy heart just leapt at that. I felt embraced by her warmth, just as I'd been held in her arms.\n\nMuch of the time her face was animated, but in repose it was quietly beautiful; no dramatic sculpting, but even and balanced features which shone with a soft openness and good humour. Her dark hair was loose at the back, to shoulder length, but in the front the strands that would otherwise have fallen irritatingly across her face were gathered back in a little pigtail. It was just charming. She was sitting upright, turned to face me with her hands resting loosely in her lap, looking straight in my eyes.\n\nI looked straight back, resisting a powerful need to lean over and kiss her. \"I think I might just have a space in my diary. But you'll have to let me do something for you.\"\n\n\"Oh I will!\"\n\nI think that I avoided blushing, but she lifted a hand from her lap and placed it on mine.\n\n\"I'll certainly come better prepared next time: pyjamas, slippers, face flannel and toothbrush for a start.\" I told her.\n\n\"Excellent. I'm sure you'll be the perfect gentleman guest. And you can come on Friday evening this time. Now you must go and do whatever you need to do, and I'm going to finish sorting the books.\"\n\nI collected what little I had brought with me and made for the front door. We stood for a moment together, then she gently put her arms round me, gave me a chaste kiss on the lips and I was away.\n\n***\n\nOn the way back to the flat I fell to thinking about the last 24 hours and how they might have changed me; but I was also curious about how we both felt for each other. I had never had lascivious thoughts about Martha, and because she was a bit distant for the reasons I've explained, I'd never thought of her as a friend.\n\nBut suddenly that had changed. I was already having stirring recollections of her body -- and remember this was a result of a totally new experience. Her sudden accessibility had me longing to take advantage of the opportunity she was giving me to understand my own sexuality. Not to mention get a lot better at it!\n\nI felt gratitude, and warmth towards her. I felt desire, but I wasn't sure if it amounted to lust. As for her, well was she doing any more than play a game with me? Time would no doubt tell. There was a chance that she would cast me aside when the new toy lost its novelty, but I felt that she was thoughtful and generous enough to be aware of the damage that might do to my psyche.\n\n***\n\nAs there was no email and no texting then, it was by telephone that she contacted me during the week to confirm that I could still come at the weekend. I was instructed to arrive about 7.30pm, which is what I did.\n\nI knocked on the door. \"Door's open, come in,\" from within.\n\nMartha was by the stove, and about to put something in the oven.\n\n\"Really good to see you,\" she said as she walked over, put her arms round my neck and kissed me. \"I've had a lovely week thinking about this weekend, and what we can do together. I have got some tickets for the Prom tomorrow night. I hope you'll enjoy it: I shan't tell you what's playing, but it's Adrian Boult conducting the LPO, and the BBC Chorus and Singers will be there too.\"\n\nWe had talked about music the previous weekend and found another connecting thread in our interest in all kinds of music, so I was really delighted with this opportunity. I had never been to a Prom before, although I had been to the venue, the Royal Albert Hall.\n\n\"That sounds really great. How will we get there?\" The Albert Hall is in west London and we were in the north, slightly east of the centre.\n\n\"Tube to Euston; Victoria Line to Victoria; District line to South Ken. Then it's a 10 minute walk. Coming back we might get a cab. It would probably take as long but be a lot more comfortable.\"\n\n\"And expensive,\" I added.\n\n\"Well, we might push the boat out once. Now, I put the lasagne in the oven when you knocked. Give it another ten minutes and we can eat. Meanwhile a drink is called for. I like to drink red wine with most Italian food: is that all right for you?\"\n\n\"Wonderful.\"\n\n\"You're very amenable.\"\n\n\"No, I just happen to agree with you most of the time. I'll let you know when that stops.\"\n\nShe poured us each a drink -- I think it was a Valpolicella -- and we sat down on the sofa. She was close enough to put her hand on my knee. I looked into her eyes, and thought I detected a slight tearfulness.\n\n\"Are you weeping, and if so why?\" I asked.\n\n\"Maybe. If so they are tears of happiness. I have so much looked forward to being with you again. It is difficult to explain, but I am realising that I have reached 40+ and that something has been missing from my life all this time. I told you that my mother was efficient, but not warm. Richard was kind, but only a buddy, never really a lover. So warmth, tenderness and reciprocated affection have been absent. Do you understand?\"\n\n\"I think I do, but as I have been lucky to have a gentle and loving mother, and I've not really developed other sorts of emotional relationships, it doesn't weigh on me as something missing. It is frustrating not to have managed to find what I'm looking for, but that isn't a match for your deprivation.\"\n\nShe reached over and moved to lay across me, head resting on my chest. I was sad for her, but I was so happy to feel I might have the potential to give something that she craved. I put my arms round her.\n\nQuietly she said \"I don't want to put any sort of pressure on you. You aren't obliged to fulfil my needs, and anyway I want to give you something that will help you lose some of your frustration, not just now, but in the future.\"\n\nShe picked herself up and planted a kiss on my lips, then stood up and went to finish serving the supper.\n\n\"I suddenly feel very grown up,\" I said, \"and I'm really only a child. I hope to remain a child forever, so I need to watch this transition very carefully. Incidentally, when you call me Tigger, I hope that you'll remember why he had his head down the w.c.\"\n\n\"O.K. Why?\"\n\n\"He was looking for Pooh of course.\"\n\n\"We have no further comment.\" Pause. \"You are an idiot.\" Giggles.\n\nWe sat down and ate a delicious meal, washed down with a lovely wine. She was a good cook. She admitted to being the sort that follows recipes very carefully, rather than the sort who has 'experiments' with variable success. I confessed to being in the latter category.\n\n\"Oh good. So what do you cook?\" she asked.\n\n\"Well everyday it's casseroles and stews, chops, fish, fry-ups, lots of salads in the summer. Special occasions it might be barbecued spare ribs or prawns in whisky. The last two are based on Robert Carrier recipes.\"",
        "\"Did you know that Carrier has a restaurant up the road in Camden Passage?\"\n\n\"No, I didn't. Would we be able to go there sometime?\"\n\n\"If you're a good boy we might see if we can book!\"\n\nWe nattered on about cooking, and t.v., and what was happening to Camden, which was being taken over by writers, publishers, actors, and polymaths, and changing its character. We had got to the stage of touching each other in various ways and places when she got up and explained that she liked to clear up because she hated coming down to dirty dishes in the morning. \"And when that's done I want to take you to bed,\" she added.\n\n\"Then I'll help with the dishes,\" I volunteered.\n\n\"No you won't, you'll distract me. Go and use the bathroom and do what I did last week: sit up in bed and read and wait.\"\n\nI followed orders. I'd been reading for five minutes or so when I heard her in the bathroom, and a short while later she appeared, carrying her clothes but otherwise naked. I really loved her body. Its shapeliness and soft curves were an invitation to caress, and its darker recesses an invitation to explore.\n\nShe got into bed and, lifting one leg over me, knelt over my outstretched legs. This position opened her pelvis so that as she lowered herself Cinderella met the Prince. Stiff cock and a gaping cunt at that proximity are bound to come together, but first I wanted to feel the soft hair around Cinders, and gently manipulate the folds of labia. I found what I thought was the clitoris. \"Am I in the right place?\" I whispered.\n\n\"Oh yes! Be gentle to start with...\"\n\nI'd got one hand busily engaged, and I then tried with the other to reach round behind her. This was a bit of a stretch, so she straightened her knees a bit, raising herself up so that she could lean towards me. Putting one hand on my shoulder she dropped the other one to grasp the rampant Prince. My free hand could now reach round far enough to take a handful of buttock and gently knead it; then a couple of fingers began to play with her anus.\n\nI think you could say we were now fully engaged.\n\nI don't think I need to describe the rest in great detail. There came a point when it was imperative -- for both of us -- for Martha to impale herself. She was in complete control, rising and falling to her own rhythm, and adjusting the depth of penetration at her choosing.\n\n\"Tell me what you are doing, what is happening, use the difficult words.\" I suggested.\n\n\"I've got your cock right up inside my cunt... My cunt is slippery with my juices.... Your cock is magnificently stiff... I'm moving up and down so that the Prince rubs the surface of my vagina, and it is MARVELLOUS! We're having a glorious FUCK!\"\n\nAll of it was true.\n\nI'd have liked it to go on for a long time, but one of the drawbacks of this kind of position is that the inferior partner has to accept that the superior is in control. Clearly Martha was also hoping to prolong this too, but there came a moment when I had no option but to give way to impulse.\n\n\"Just keep going,\" I implored \"don't worry about me.\" So it was another couple of minutes before she emitted a loud \"ohhhhh...\" and stilled all movement, slowly unwrapping herself from the ecstatic moment to look at me with such tenderness. Her face was a picture like that of a long-distance runner who has just crossed the finishing line the winner: joy, triumph, surprise, relief.\n\n\"I know you came early, and I'm so grateful you urged me to carry on. I hope I'll do the same for you one day, because we can't always have simultaneous climaxes.\"\n\n***\n\nWe fell asleep in the 'spoons' position again and woke soon after first light. It was warm, and there was a bid of birdsong; not exactly a 'dawn chorus' so deep into the urban jungle, but enough to remind me of my more rural past. In fact I was brought up in the suburbs, but in the 50s they were very much outer suburbs, and countryside was never more than a few minutes cycle ride away. We often went off fishing in parks and streams and ponds, and the life of farms and farmers was familiar.\n\n\"One day we should take a trip out into the countryside and walk in the Chilterns or the South Downs,\" I said. \"You being a city girl need the open spaces and the fresher air.\"\n\n\"I'd love that. As you have probably realised, I am a great walker. I haven't spent enough time walking in wilder country, but I'd like to walk with you up to Hampstead Heath this morning, if you're up for it.\"\n\n\"That sounds like a good compromise.\"\n\nWe lay for several minutes just stroking each other's bodies. It was not particularly sexual, but it was very sensuous. \"Sometime perhaps you would give me a body massage. I have often fantasised about losing myself in a sensual massage, but I haven't found anyone I'd like to do it... until now.\" She sighed, gently teasing the Prince as she said it.\n\nI clambered over to lay on top of her. \"I'd be honoured and privileged,\" I said, tweaking a nipple between thumb and forefinger and sucking quite noisily on the other one.\n\nMartha now had her hands grasping my buttocks.\n\n\"Please give the Prince to Cinders to look after while we lay quietly together.\"\n\nThese sorts of request are irresistible.\n\n***\n\nWell yes, we did walk to the Heath, entering at the south east corner, walking up Parliament Hill, taking in the fantastic views over London, and down again to the eight Highgate ponds before returning in a loop.\n\nHampstead heath is full of variety. There are all kinds of attractions which change from time to time, but sport has almost always been played there. There are three pools for swimming, and a lido. There are rugby and cricket pitches, a petanque court, athletics track and tennis courts. I can't honestly remember how much of this was there in 1969, but it was certainly a busy place to be at weekends. However, there are wilder bits, where grass is allowed to grow uncut during the summer. In all the 800 acres are a much loved and used part of the city.\n\nThis was the first time we had been out together, and I had wondered how that would be. Would she be embarrassed to be hand-in-hand with a man young enough to be her son? I got the answer quite soon: she took my hand and we linked fingers as we got into the park. We were both quite tall, so it wasn't difficult for my six foot and her five foot nine to match stride length, and our hands were more or less the same height. It felt natural and comfortable.\n\nOn our way back we stopped to pick up a warm and crusty loaf, some reasonable looking tomatoes (from a street trader), and a couple of bottles of beer, which we took back and consumed in the yard/garden with a piece of ripe Camembert cheese. The sun shone. I thought 'I can't possibly imagine wanting to be anywhere else.' Happiness is an elusive state, but this seemed as near as it comes.\n\n\"What would you say are your ideal qualities for a life partner, if you've decided?\" she asked in a dreamy sort of way that suggested maybe she was simultaneously considering her own ideal.\n\n\"Female,\" I said.\n\n\"Good start. Anything else?\"\n\n\"Beautiful, but not so beautiful that the entire male population lusts after her. Isn't that what they call a 'trophy wife'? It would be good if she had interests that diverged from mine, and some that we shared.\n\n\"What about political views?\" she asked.\n\n\"I doubt if I could live with someone whose political views were radically different to mine, and it would be helpful if we had matching intelligence, so that my natural intellectual arrogance wouldn't get out of control.\"\n\n\"What about sharing chores, and childcare?\"\n\n\"I hope they'd be fairly shared. From limited observation partnership seems to be about making it possible for your partner to do things that might not happen without you. Do you think that's true?\" I asked.\n\n\"Yes I do. But limiting expectation is also a good prelude to harmonious partnership. Don't expect too much of your partner or yourself.\"\n\n\"Last but not least I'd like my partner to be TOTALLY sexually compatible; body and soul.\" I added.\n\n\"I like your list, but I'm surprised that you aren't specific about physical type, like fat or thin, tall or short, fair or dark. And you don't mention nationality or ethnicity.\"\n\n\"I won't say I'm indifferent to those things, but my preferences aren't constant, so I suppose that must mean they aren't critically important.\"\n\n\"And the word 'love' is missing.\" Martha said.\n\n\"Not a word you use easily,\" I replied.\n\n\"You're right; the word is used in too many different ways, and we've got hung up on the idea that you need to be 'in love' before you try to create an enduring relationship.\"\n\n\"It sounds as if you don't go along with that idea.\".\n\n\"Well, being 'in love' is a form of obsession, and only a tiny minority sustain their obsessions through life. The one or two people I have been temporarily obsessed with have been like fireflies in the morning sun.\"\n\nWe sat in the yard for another hour or more, 'chewing the fat' as my mother would say. I loved to talk with Martha. There were always thoughtful, sometimes provoking, comments and replies to my immature certainties. A bit of the schoolmistress maybe, but one I could easily become obsessive about.\n\n***\n\nWe went to the concert. The whole evening was fabulous: music by Mendelsohn, Lennox Berkeley and Brahms; wonderful orchestra, great soloists, and a world famous conductor. Not to mention the enormous space that is the inside of the Royal Albert Hall, the domed ceiling of which had been recently part-covered with acoustic panels, which became known as the 'flying mushrooms' because of their inverted dome shape.\n\nOn the way there we were on the tube (what Londoners have always called the underground or subway) and sitting, holding hands, on the bench seats which face the gangway and the seats opposite. We were looking straight at a woman on the other side, probably fiftyish, with a miserable face which turned to a scowl when she noticed that we were in a hand-clasp.\n\n\"You ought to be ashamed of yourself,\" she suddenly blurted out, directing her gaze on Martha.\n\n\"Why is that?\" replied Martha\n\n\"He must be young enough to be your son.\"\n\n\"Yes, aren't I lucky?\"\n\nFortunately, the woman got up and went to stand by the doors with her back to us. The man she had been sitting next to raised his eyes and smiled at us.\n\nOn the way back we took a cab. When we got out the cabbie turned to me and said \"You're a lucky young man. Look after her.\" He grinned at me as he took the money.\n\n***\n\nWe were sitting together on the sofa having a drink, discussing the evening: the music, the food, the auditorium and the people. Martha was wearing a simple dress, just<sub> </sub>above the knee in brightly printed cotton, and she'd kicked her heeled shoes off. I had a striped blazer, with wide royal blue and navy stripes. I wore this most of the time in summer, sometime with a roll-neck, and sometimes, as tonight, with a collar and tie.\n\n\"That woman on the tube was an old cow,\" I said.\n\n\"Be a bit more charitable.\"\n\n\"Why?\"\n\n\"Think that she was probably ten years or so older than me, which means she'd have been in her early twenties when war broke out. It's quite possible that she lost a lover by one means or another. Nearly half a million British people died as a result of the war, and a large proportion of them were in her sort of age group.\"\n\n\"That's a possible explanation, but not an excuse is it?\"\n\n\"Agreed, but I'd forgive her even so. It was quite flattering in a way.\"\n\n\"I preferred the cabbie's way of flattering you!\"\n\nShe put her arm round my shoulder and took my drink to put it on the table. I turned towards her, and her other arm came round me. She gently pushed me back to lie on the unoccupied bit of the long sofa and gave me a deep and highly erotic kiss, while a hand sought the Prince, now in a state of agitation. He required a bit of adjustment for comfort, which her hand skilfully accomplished.\n\nDaringly, given past experience with other women, I put my hand on her thigh and pushed the hem of her dress upwards. The soft flesh of the inner thigh arouses me with the thought of where it is heading. It's like the overture to an opera...perhaps. Anyway, it is quite delicious. And my hand seemed to have been given a free pass.\n\nIn this sort of pose things can get a bit messy. To gain access to the promised land my hand would need to perform the several complex tasks involved in removing bits of clothing whilst prone and while locked together in oscular activity. I decided not to attempt this advanced manoeuvre. Instead I whispered to her, \"Can we go to bed?\"\n\nWe adjourned to the bedroom and stripped each other, and then lay naked on the bed cover. We entwined ourselves, exploiting the full tactility of bare skin.\n\n\"Now,\" she said once she was sure that I was fully erect, \"I want you to lie on your back and let me pleasure you.\"\n\nI thought this was a request I could reasonably comply with, so I did. Lying on my back as instructed I noted that the Prince was showing off by waving around in a near vertical position. Martha climbed over me, knelt to straddle my chest facing my feet, and began to suck the Prince with apparent noisy enjoyment. The sensation was divine, as was the rear view of my partner-in-lust. She had lifted her butt so that I was not asphyxiated, and what I could now do as she leant forward was to carefully part the labia so that my tongue could rhythmically lap the inner folds. This seemed to meet with approval. She abandoned the Prince momentarily to murmur.\n\n\"Oh yes, please lick my cunt. Oh darling you're doing such a fantastic job! But in a minute I'll need you inside me.\"\n\nSure enough in a few minutes she shifted down, lifted her beautiful bottom and landed safely and precisely where God obviously intended. The 'rise and fall' was heavenly; the dimensions of the vaginal canal might have been adjusted with precision instruments to softly enfold the Prince. Thinking back I can almost sense again that exquisite feeling even 50 years later.\n\nAlas, this could not last. Quite noisily we reached an almost simultaneous climax. She lifted herself off and lay down next to me. We joined together again and lay in total contentment for an age.\n\nI had noted the 'darling', used for the first time and in the heat of the moment. I had also noted, as we rose to the climax, a sort of lump in my throat, as if my body was expressing emotions that my brain couldn't articulate. These two things seemed to suggest that we had moved on from doing things to and for each other, to doing things together.\n\n***\n\n\"Are you an only child then?\" I asked\n\n\"Yes.\"\n\n\"Was that choice on the part of your parents, or circumstance?\"\n\n\"It could have been either. My mother was quite elderly to be having me, and she may have thought that it would not be wise to try again. She had been married before, to a man 20 years older than her and they had never conceived -- I never asked why.\"\n\n\"How did she come to marry your father?\"\n\n\"My father was an Oxford Don, and my mother and her first husband were also connected to the University. Mother met my father at an evening class that she attended 'to keep myself from becoming moribund' she said. When she'd got to know him she invited him to supper. He was a bachelor who taught evening classes to stop himself becoming too reclusive. Well he came to supper, and I think she must have had evil designs on him because she got him drunk and insisted he was not safe to go home.\"\n\n\"This is sounding a bit familiar!\"\n\n\"Shut-up and listen. She put him to bed in a spare room, and later that night, when she was sure that her ailing old husband was sound asleep, she snuck into the spare room and slid into bed beside my Dad. She told me that she had not had sex for about 10 years, and I think my Dad was the beneficiary of a lot of pent-up sexual energy. Did the trick, anyway. He was completely hooked - by his own admission.\"\n\n\"Whow! How long did they have to wait to get married?\"\n\n\"Only about a year until husband no.1 died. In the interim she used to visit Dad in his college rooms. The porters kept up a pretence that my mother was Dad's sister, for the sake of propriety, but apparently everyone knew or guessed the truth. Fortunately, my father was very popular with both staff and students, so they treated it all quite lightly.\"\n\n*\n\nWe were walking in Ashdown Forest. A sunny July Saturday had attracted many visitors, but in an area of 6,400 acres (about 7 times the size of New York Central Park) we were quite often walking without anyone in sight.\n\nThe Forest is only about 40% wooded, the rest being open heathland, famous and much-loved for its wide-ranging views and fantastic skies. It had taken a bit of a sweat to get there by train and bus, but it was already feeling worth it. I had really wanted to do a good walk with Martha. I've always found talking while walking a comfortable and helpful thing to do. Silences don't matter; the rhythm of the paces seems to help articulation; and the open air is somehow liberating.\n\n\"You've walked a lot?\" I asked.\n\n\"Probably more abroad than here at home. Put me in a new country or a new part of a country, and I'm like a hungry hamster, nosing out all the things of interest.\"\n\n\"That's walking with purpose, even if it's not a specific purpose.\"\n\n\"You're right, and I haven't done nearly enough walking for its own sake. It never is entirely for its own sake of course because you can't fail to absorb from your surroundings. What about you?\"\n\n\"I've always walked a lot. In the sixth form a few of us decided to take up President Kennedy's challenge to walk 50 miles in less than 20 hours. Most of us didn't get anywhere near that, and I rang for help at 25 miles responding to the excruciating pain from the blisters. I've tried once more since, but still only made 37 miles. I will do it one day when I grow up and find the right shoes.\"\n\n\"Not bad, though, for a skinny little thing like you.\"\n\nI slapped her on the bum.\n\n\"More, more!\" she cried.\n\nI grabbed her by the arm and hustled her into the woodland, pushed her up against a massive oak trunk, and pinned her by her shoulders.\n\n\"Now what are you going to do?\" she asked, grinning naughtily.\n\nI leant heavily against her and gave her breasts a robust massage.\n\n\"I'll tell you what part of me wants to do, and that's lift up your skirt, pull down your knickers and give you the fucking that you richly deserve.\"\n\n\"Why not?\"\n\n\"Because I'm not brave enough... yet.\"\n\nInstead I kissed her: a deep, can-I-taste-your-tonsils kiss. And my hands went round her to grab hold of sumptuous buttocks.\n\n\"Let's sit down darling,\" she whispered.\n\nI'd thrown off my tiny backpack when we arrived at the tree. In it I'd brought apples, sandwiches and water. We sat down on the dried out leaves from last autumn, and I pulled out the food and drink. We both drank.\n\n\"I think that your natural shyness still inhibits you. There are things you'd like to do, but you're not sure whether it's all right. Partly you don't want to be rebuffed again, but you're also worried about people finding you doing something which might offend and which is generally considered a bit anti-social. Also, being a bit of a control freak, you think that you ought to be able to control yourself.\"\n\n\"Am I that complicated?\"\n\n\"At least,\" she said, smiling. \"If it's any consolation I was a lot worse at your age.\"\n\nWe each grabbed a sandwich and started to chew. Silence. Then: \"Do you feel any more relaxed about sex than you did a while ago?\" Martha asked.\n\n\"Much more at ease with some of my feelings. Not so worried about becoming obsessive. I guess that what you want but can't have is bound to become an obsession, and I'd got a bit like that. As you say, I'm not one who likes to lose control of his emotions.\"",
        "\"Do you have any particular aspect that you still might obsess about?\"\n\n\"Bottoms.\"\n\n\"Pardon?\"\n\n\"I just love bottoms. And I love the word, which sounds like it ought to.\"\n\n\"Well that seems fairly harmless unless you succumb to 'wandering hands syndrome'. Anything in particular? I mean do you know why they have this allure for you?\"\n\n\"It's partly aesthetic.\"\n\n\"I think I follow, but isn't the aesthetic appeal very variable?\"\n\n\"Not really. If we didn't all have one we'd appreciate the look of them as an abstract work of art.\"\n\n\"Does this enthusiasm stretch to anal activities?\"\n\n\"I love to play with the rear orifice, because it can bring such pleasure and is part of the whole sexual orchestra. I have a bit of a problem with anal intercourse because it seems too much like an act of aggression, a violation, and often painful\"\n\n\"Interesting. Some women apparently love it, but that may be because it is playing to the submissive in their psyche.\"\n\n\"Maybe. I have a similar sort of reservation -- or rather dislike -- of a woman fellating a man from her knees, with the man standing over her. I'd like a world without domination or submission, and that seems to be both.\"\n\n\"So what you want is 'vanilla sex'?\"\n\n\"Do I? You're the expert,\" I replied.\n\n\"No, actually I don't think that's what you want. In fact I think you'd get bored with repetitive performances. I think you want to vary the context: how it happens is as important as what happens. You will get braver, and I'll try to help. But don't stop trying to innovate.\"\n\nWe both needed to pee. \"Don't go away and hide now,\" Martha said. \"Just stand there and pee against the tree, and I'll squat beside you and irrigate the leaves.\"\n\nSo that's what we did, and I watched her wipe herself with a tissue from her little bag, while I tucked myself in and zipped up. We picked up our things and walked back to the path and went on our way, holding hands and matching strides with ease. I had never felt closer to anyone.\n\nAshdown Forest is lowland heath, and I'm not sure that an equivalent landscape exists in North America. These heaths exist on impoverished, often sandy, acid soil. Because they were very unsuitable for cultivation they have often been left as wild places with important wild-life and scientific value. The Forest is now in public ownership with open access.\n\nWe had been able to pick a route that took us over the sparse grass with outcrops of heather, gorse and bracken, and into woodland. The woodland is largely oak and birch, and is sometimes dense enough to form a canopy, but often quite open to the sky. In summer this woodland has a magical quality, with the filtered sunlight constantly altering, and the colour of the filters a kaleidoscope of changing colours.\n\nIt was in every way a wonderful afternoon. The weather was dry, sunny and warm and not too hot, a situation which occurs about three times a year. We were in relaxed and joyful mood, delighting in the company. We had learnt enough of each other in our short time to feel comfortable, and I felt extremely lucky.\n\nI suppose I was also feeling safe, which is a strange thing for a male to admit, but lots of us males are not really equipped to face the world alone, whatever we may try to pretend. I was just prematurely aware of a frailty which many will not admit until later in life.\n\n***\n\nAs a result of intense discussion (Supper? /Fish and chips? /Yes, good) we stopped on the way from Kentish Town station to acquire our smelly, newspaper-wrapped parcel. Usual practice is to eat it from the paper as you walk along, but our up-bringing would not permit such 'common' practices, so we took it home, giggling at our own hang-ups, and ate it off plates, accompanied by mugs of tea. We then slobbered over a couple of large slices of fresh melon, and Martha produced a half bottle of a sweet wine from Bergerac to top it off.\n\nI had been commissioned to install a record player and speakers on one of the shelves thoughtfully enlarged for the purpose, so we put on a record of Mahler's 1<sup>st</sup> Symphony, turned the lights down, and relaxed together on the sofa. Well, perhaps 'relaxed' is not entirely appropriate as we kept fiddling with bits of each other, though always with the utmost decorum i.e. we didn't take anything out of its proper covering.\n\nOur energetic day, far from exhausting us, proved rather invigorating when we went to bed. There was a lot of \"you go this way and I'll go that way,\" and then \"we could try it back to front and/or upside down; or get out of bed and sit on it -- you on the bed, and me on you.\" It was enormous fun, and I found it much easier to sustain the Prince's interest, and for that matter Cinderella's interest, than I had thought possible. When we finally arrived at a mutually appropriate moment to climax we could possibly have wakened the neighbours if they were light sleepers.\n\nThere was a reverential silence for a few minutes.\n\n\"You're on the brink of Division 1 now young man. It's encouraging me to work even harder.\" I noticed she was panting slightly. I brushed hair from her eyes, and gently stroked her forehead and kissed each nipple in turn.\n\n\"Are you still fully functioning old lady?\" I enquired solicitously.\n\nNot unexpectedly she reached round and smacked my bottom. It was getting quite sore.\n\n*\n\nOur leisurely Sunday morning started with a long session of mutual stroking and cuddling; we did eventually conjoin, but it was quietly and tenderly in the 'missionary' position, and it was another 20 minutes before we chose to bring it to a successful conclusion. I smothered her with kisses, feeling gratitude that I was in a place that I could hardly have dreamt of being, and I told Martha so.\n\n\"It may surprise you to know that I feel the same. I'm just coming to realise that up to now I've made a series of false starts. I trust you as no-one before...and I adore you. Now we'd better get up; I'm sure we both have other things to do,\" and as she said it she pulled back the bedclothes and took off to the bathroom.\n\nWhile we had breakfast we discussed the next weekend. I really had to go to see my parents, who were on the point of moving across country, so that my just-promoted father could start his new job. Martha felt it was time she went to see her mother so we agreed that the next weekend we would go our separate ways. The weekend after that was different: we could plan a project.\n\n\"Have you been to Coventry Cathedral\" I asked. The new cathedral had been consecrated 7 years before. I had been to see it soon after consecration, but I felt I needed to see it again.\n\n\"I went to visit in 1963, but I'd be delighted to go again. Is there a particular reason for wanting to return?\"\n\n\"Last time I went it was primarily for the wedding of the daughter of one of the Coventry clergy, and I was, aged 17, hopelessly in love with one of her fellow secretaries at our London office. I was seriously distracted,\" I admitted slightly sheepishly.\n\n\"Oh how lovely! I shall definitely take you there and hold your hand tightly and carry a supply of tissues in case you burst into tears. At least you won't be distracted this time with any teenage emotions -- except nostalgia.\"\n\n\"I think I'm over it now.\"\n\n\"Oh I wouldn't count on it. First love always leaves an indelible mark -- or stain.\"\n\n\"Who said it was my first love?\"\n\n\"I shall pretend it was even if there were loads before her. What was her name?\"\n\n\"Rosalind.\"\n\n\"Ah! Rosalind: and you were hoping to be her Orlando and carve her name on every tree?\"\n\n\"Just 'cos you were already nearly over your first marriage, there's no need to mock my innocent young self.\"\n\nWe couldn't keep it up and both burst out laughing, but we were just serious enough to plan our trip for a fortnight ahead.\n\nI didn't want to leave, but I was eventually more or less shooed out of the door.\n\n\"Go on young Master Vesey, be off with you, I've got me housework to see to,\" she said in her best crone's voice, waving a broom at me.\n\n***\n\nSo it was nearly a fortnight before we met up again. I had become impatient. I missed Martha dreadfully. Not only had she introduced me to a sex life that I could barely even have fantasized about, but it was a refreshing change to be with someone of a different generation, and with a different outlook.\n\nI had been together with the same group of friends now for four years. In some ways it was great to have people my own age around, with similar preoccupations: architecture, art, music of all sorts, sport, the opposite sex, where to live, what to eat and where to drink on the few occasions we had enough money spend on it. But the other side of it was a kind of institutionalisation, which made you think, talk and act too often in a way which would conform to group expectations.\n\nWe embraced quietly and with relief. Murmurings about missing one another and anticipation of our time together. Her age was significant: she managed to be both warm and slightly detached, and that was something I couldn't manage: my embrace was definitely heated and far from detached.\n\nIt was my turn to cook, and I'd been to the fishmonger and greengrocer in Marylebone High Street before I came to buy prawns, tomatoes, shallots, cucumber, fennel, rocket, a little green lettuce, and a small pot of cream. I cooked Robert Carrier's 'Prawns in Whisky', a rich and extravagant dish, served with boiled rice and a green salad.\n\nI am famous for the amount of debris I accumulate in cooking a meal. Most men seem to have similar reputations. The difference is that I clear it up -- some as I go and the rest later. Aren't I good?\n\n\"That was sumptuous.\" It had all gone anyway. I had explained to Martha that I was largely self-taught, driven on by the quality of my mother's cooking, which made me unwilling to live, as at least one of my flat-mates did, on pies, kippers, sausages, bacon and eggs. I wouldn't be surprised if he died in his thirties.\n\nBefore I started I had been equipped with a fine green apron, which Martha explained really needed to be put on for me. Why? \"Because I felt like it, why did you think?\" So her arms went round me to fasten the ties at the back. Somehow this took longer than expected... \"Oh why, why can't I have you for always?\" she sighed, but then let go of me, as if to confirm that she couldn't.\n\nI had sat her down with a drink to wait, and put some music on, took off her shoes and lifted her legs onto the sofa. I tickled her feet, then I left her in peace, and cooked the supper.\n\nWhen we had finished eating she insisted on clearing up, while I sat and chose a record to put on. I was delighted to find one of the Bach Double Violin Concerto. You may think 'what the hell is that?' but you'd probably recognise parts of it if I played it, so much has been used in film and television. When Martha joined me, we lounged indulgently together and chatted about our respective parents, but we were really quite keen to go to bed.\n\nOnce again I learnt so much in bed. It helps to be naked: I felt a more attentive pupil without any clothes on.\n\nFor a start I was given a guided tour of the vulva, with explanations of the clitoris, the labia, and the urethra. Martha's mother had been a nurse and made sure that her daughter was well-informed about her body, but what I wanted to know was how best to please her.\n\n\"I'll show you the things that I really like. Bur what is most important is what we've talked about before: trust. I want to feel that we each have the other's best interest at heart, will do what we love and avoid what we don't like. It's extremely simple really, and I've absolutely no complaints so far with what we've managed together.\"\n\n\"Come on then, I'm a willing learner.\"\n\n\"I love being stroked -- anywhere. The head and neck, my ears, the spine, the insides of the arms, my buttocks, the insides of my thighs, my feet and toes.\"\n\nAs she went through this list she was stroking these parts herself.\n\n\"Now, when it gets to the more intimate bits you should take it slowly, and very gently. If the lady wants it harder she'll tell you.\" She demonstrated, first with her breasts, then labia and clitoris, all the time maintaining the lightest of touches. \"Be guided by the lady; she'll tell you if she wants more pressure.\"\n\n\"Any other special things you like?\"\n\n\"Yes, I just love having my rear orifice played with. That's a personal thing, and I guess not everyone likes it. But I don't want you to do things just because you have been told about them. Follow your own inclination, as well as mine or hers. And try out new things.\"\n\n\"What about the G-spot? Does it exist, and if so where is it?\"\n\n\"Yes, I think it probably exists, and I'll try to get you there by remote control when the time is right!\"\n\n\"I really think that I need practice, don't you?\"\n\n\"Well, obviously that will be rather tiresome. But in the cause of education I will agree to it. Now, my young student, is there anything you'd like to try that isn't illegal, immoral or too painful?\"\n\n\"Will you lie on your tummy please? Now put this pillow under your pelvis and spread your legs wide.\"\n\nThis was such a gorgeous sight that I nearly lost concentration, but I pulled myself together and knelt between her knees and began to stroke the backs of her legs. I tried to keep my touch as light as possible, sometimes just my fingertips. I lingered on the area round the knee folds, and then moved up onto the thighs. The touch was a bit firmer here -- almost a light massage.\n\nAfter several minutes I dug my nails in and started to scratch, deep enough to leave some red marks. I'd now got my thumbs on the insides of the thighs, and I had to control my urge to plunge into the glistening opportunity that lay between them. Instead I moved on upwards, and caressed the beautiful buttocks, rubbed the spine and stroked shoulders.\n\nNow I really was out of control. I grabbed two handfuls of buttock and pushed them apart, giving my tongue access to the deep red lips of the vulva. At the same time I managed to get my thumbs to do a test run around the wrinkled orifice which I had anointed with saliva, and then for one of them just to open the sphincter enough to get a centimetre or so in. After a few minutes of this there was a sighing sound, \"O.K. you win. Please, please get your stiff cock up my very wet pussy.\"\n\nI did, of course. Can't say I lasted long though. I came with what felt like a torrential offering.\n\n\"Do you need some other help?\" I asked.\n\n\"No I don't. Just stay where you are and keep your thumb moving.\"\n\nMartha had pulled her knees up to lift her bottom, but after a minute or two she subsided and lay prone while I detached myself.\n\n\"My goodness me,\" she said as she rolled over onto her back and looked me in the face. \"Aren't you proud of yourself?\"\n\n\"Why? I was just doing what I'd learnt at Martha's Academy for Backward Boys.\"\n\n***\n\nWe lay together in a half-and-half embrace: that's to say I was half on my back and she was half on her front, legs interlocked.\n\n\"Is this how you thought it would turn out when you invited me to be your slave 4 weeks ago?\" I asked.\n\n\"Well I hoped it would turn out better, of course, but all things considered I'm not too disappointed.\"\n\nI had a hand in the vicinity of an armpit, so I was able to administer a severe tickling.\n\n\"I love it that you manage to maintain a sense of humour in what could have been a humiliating situation. Being seduced by an elderly lady may sound exciting, but as you had little experience it could have been a bit of a nightmare. For us both,\" Martha concluded.\n\nI nuzzled into her. \"I know you told me of your reservations about the word 'love', but I can't really find another word to express what I feel for you. Admiration, gratitude, fascination, lust, friendship, even a bit of intimidation still. But I can't say all that every time I want to convey affection.\"\n\nShe was silent for a while. Then she kissed me, tenderly, on the lips. \"I caught myself using the word 'adore' a couple of weeks ago.\"\n\nI remembered. \"At the time I thought that you had regretted it,\" I commented.\n\n\"You're too sharp. I am very conscious that I have got you into this situation. I'm reasonably sure that it will be helpful to us both in the long run, but there is a risk. Still, it was true, I do adore you, and share all the emotions you say you feel including, you'll be surprised to learn, lust. I'm just wary of us finding ourselves without a satisfactory outcome.\"\n\nI thought that I could see what she was getting at, but I didn't want to think about it. I still felt like a youth, and for youth 'tomorrow' is another country. For now I was happy for us to fall asleep in each other's arms.\n\n***\n\nThe next day was fantastic. We caught a train from Euston to Coventry, and a 10 minute walk took us to the Cathedral. The new Cathedral stands next to the remains of the 14<sup>th</sup> century 'Old Cathedral', which was bombed in WW2, in a 500 bomber-plane raid that killed 568 people, destroyed 4,000 homes and much of the commerce and industry of Coventry.\n\nThe tower and spire were left intact, together with walls of the chancel and parts of the nave and these are linked to the new building by the new porch They form a separate part, dedicated as an outdoor chapel to Peace and Reconciliation.\n\nWe talked about the concept of new joined to old in this way, an idea of which we thoroughly approved and had put into practice. It seemed a remarkably imaginative thing to have done, and it was the architect of the new Cathedral who had insisted on keeping the remains. I told Martha that I had no objection at all to joining up with the old leftovers!\n\nMartha had reservations about the outside of the building, although we agreed that the entrance porch joining new to old is impressive, and the east elevation (the Cathedral is oriented more or less N/S) works well enough.\n\nBut the interior is a triumph. It is full of the works of a collection of great artists and craftsmen, at the top of their game at the latter part of the 1950s to early sixties. Yet it still manages to be a coherent and moving experience.\n\nWe walked around hand-in-hand, knowing that we shared both knowledge and appreciation. To take it all in we needed a couple of hours, and we each had our favourite bits, not always identical.\n\nI should have explained before that Martha was an exceptional lady. She began her architectural education in 1946, when the number of female students was tiny. Even when I started 18 years later the proportion was less than 10%. She then entered the Civil Service and succeeded in that male-dominated world. Later in the 1970s she was appointed to one of the country's most important building conservation roles.\n\nI'm telling you this because, as we strolled and studied and discussed, I felt privileged to be in her company. Once again I was pupil, she was the gentle tutor.\n\n***\n\nOur very satisfying tour was completed. Martha had brought her camera and had been taking pictures and now wanted one of us. A helpful bystander pressed the button for us while we stood in front of the entrance porch.\n\nWe found a pub called the Golden Cross that seemed to have reasonable beer and food. My memory is that we ate a classic of the time: scampi and chips, well cooked and washed down with a pint of best bitter, and it was great. Having used the facilities we tottered off back to the station.\n\nBy the time we reached Kentish Town and replenished supplies of bread and cheese, and walked back to Martha's little house, it was nearly six o'clock, time for a cup of tea sitting in the yard.\n\n\"I do love doing things with you,\" I said, \"I realise that you wanted me for my body, not my mind, but I hope you don't find me tedious company.\" There was a spluttering from herself in the middle of that little speech. I was rather needy of affirmation you'll notice, still am I suppose, 50 years on.",
        "\"I've been found out, obviously,\" she said, \"My drooling lust cannot be concealed any longer; nor can my intense boredom in your company. What a relief that you're going away after next weekend.\" I had told her that I had a long-planned holiday scheduled. \"Where are you going?\"\n\n\"I've no idea, except that it will be south, and we have a vague intention of making it to Athens. But I'm sure there will be an infinite number of possibilities for diversion. We've got three weeks, if the money holds out.\"\n\n\"I hope you have a wonderful time and make loads of discoveries on the way. You should be able to pass through a dozen countries without too much diversion. Some people seem to think that all Europe is the same, but every country is different, and so are the people.\"\n\nWe moved on to our supper of bread and cheese, masses of fresh fruit and a glass of wine.\n\n\"As it is your last weekend I'm going to try to book a table at Robert Carrier's for Friday or Saturday.\"\n\n\"How fantastic. Thank you Miss, you're so good to me.\"\n\n\"You are my favourite slave, and I will work you hard for your reward.\"\n\n\"I look forward to working, and being, hard for you.\"\n\n\"If you aren't exhausted by our day I'd really like a massage. I've got some almond oil which is lovely for the skin, yours as well as mine.\"\n\nSo when we retired later Martha found a large towel to spread on the bed. The oil was put on the bedside table and we went to 'shower'. There weren't any shower enclosures then, and anyway in the tiny bathroom there wouldn't have been room. Instead there was a fixture at the end of the bath that looked like an ancient telephone receiver on a hose, with a hook on the wall to hold it when you wanted to shower. There was a plastic curtain to stop the water soaking the rest of the bathroom.\n\nMartha showered first, while I sat like a garden gnome who's lost his fishing rod. I did have a rod of course, but I've never been inclined to boast about its length.\n\nIt was really a delight to sit and watch the intimate process of washing under running water, and Martha knew it. There was a bit of showmanship in the way her hands lingered in the soap suds as they dealt with bits of her body which probably wouldn't merit such attention normally. And the stroking gestures were not strictly utilitarian.\n\nWhen it was my turn she stood at the opposite end of the bath with a towel over her shoulders and stared. So I mimicked some of her movement, stroking between my legs, turning my back and massaging my small but neat bottom, and then subjecting the Prince to intensive attention.\n\nWhen I looked up she had a hand between her legs, and she was definitely not washing.\n\n*\n\nWe did get back to the bed eventually. \"Would you like to lie on the bed ma'am? Face up first would be very conducive to proceedings.\" I was sitting on the side of the bed, facing the head, with Martha lying to my right. I poured a little oil on a hand and rubbed my hands together. I started my massage with the calves, smoothing and stroking, gently squeezing and then moving to ankles and feet and toes. I concentrated for quite a while on the feet, and then moved to the knees and thighs.\n\nI had to ask her to keep her legs together for fear of (me) being distracted. The thighs were magnificent places to massage: I could just about span them to allow my thumbs to run up the inside while the fingers spanned the tops and started down the outside. I kept up the movement, knee to groin and back, over and over.\n\nThe next bit was going to be a test. I decided to treat the stomach, the belly, the mound of Venus and the lower rib cage as the plains and foothills of the twin peaks; so I let my hands move freely about, sometimes in circular motion, sometimes up and down, sometimes taking a little tuck between my fingers.\n\nIt seemed to work, as the twin peaks peaked, as it were. They looked beautifully firm and were just large enough to engage two hands cupped around to gently lift and stroke. The oil was still working well: I'd replenished it a couple of times, and now these beautifully anointed objects were glistening with pride. I resisted the temptation to fiddle with the summits -- this was, after all, supposed to be a massage, not a nipple-fest.\n\nI spent a while on the shoulders and neck and then asked the slave-mistress to turn over, which she did with grace. I placed a slim pillow under the towel at pelvis level and started again at the calves, feet, knees. I stopped there and moved to the shoulders. Knowing how stress and tension can home in on this area I gave it my special attention, gently lifting and rolling the shoulders and massaging round the shoulder blades and onto the neck. I used my thumbs as well as the fingers and heels of my hands. I ran my hands down the spine to the coccyx, and then tentatively on to the soft spheres that have always been my fascination. I managed to keep my mind on the job of massage. Well, no, actually I didn't, but I made a passable attempt at it. They certainly couldn't have complained of lack of attention. I was just wondering whether to make a tentative foray into more secret places when the subject pushed herself up so that her bottom was in the air, and at the same time opened up a gap between her knees.\n\n\"I hope that you are now getting a good view of the wrinkled orifice, which to be honest is demanding your attention. Can you please get plenty of oil on the middle finger of your left hand and start playing 'round and round the garden' with it? After a suitable pause you could try pushing to see if playtime has come, and if so insert it a little way.\"\n\nI did as instructed and soon had a finger partly lost from view.\n\n\"Now I want you to give my right buttock a good slap.\"\n\nThis instruction came as a bit of a surprise, I have to admit. But I obeyed orders. Smack!\n\n\"Now the other one, and get a rhythm going. I want you to make me really quite red. And keep that finger nested.\"\n\nI administered probably a dozen slaps to each cheek, and they were now warm red.\n\nThe Prince had been an alert spectator so far, but now he seemed to be registering a strong desire to participate. I think Martha had anticipated something of the sort because she turned her head round and gasped, \"Oh my goodness! I think you'd better put him up Cinderella before he goes pop. Just make sure you give her a really good fucking before you let him go. Otherwise she might turn back from a Princess to a prune... or something\"\n\nIt was quite difficult to follow instructions while keeping that finger wiggling on station and continuing to administer a few more slaps. Concentrating on these other matters was a good way of postponing the inevitable, and I didn't 'let him go' as my friend put it, for what seemed like a long time. With her rump in the air and head on the pillow Martha was having quite a ball as I ploughed her furrow. We exchanged information about where we were in the proceedings and managed to climax within the beat of a gnat's wing of each other. We collapsed in a sweaty mess, making noises which might have been laughter or tears, or just sighs of contentment.\n\nI suppose I have made this all sound like a jolly little romp -- which it was, of course -- but it was also an incredibly intense experience of two people getting as close as it is possible to be, completely trusting and with each other's pleasure being the principal motive. Utterly lovely...\n\n..as was Sunday morning. Quiet contentment, you might call it, as we foraged in our grapefruit, munched our warm rolls and supped our fragrant coffee. Almost as if, for the time being, there was no need for further communication.\n\nI was quite busy myself as I had a re-submission to complete and have assessed before I went away. So I left after clearing away the breakfast things. I didn't want to but...\n\n***\n\nI did finish and re-submit before the next weekend. My three holiday companions and I had settled on a mid-week start, so there was a reasonable chance of hearing if I'd passed before I went away. I was in Kentish Town by 6 o'clock that evening.\n\nI was very un-cool in my greeting of Martha, throwing my arms round her and planting kisses on her forehead.\n\n\"Steady on Tigger. Time for all that, but it is extremely good to be with you again. I have plans for tomorrow, but tonight is our posh dinner at Carriers, and it looks as if you've remembered.\"\n\nI was wearing my jacket in preparation. I didn't have many clothes, and I couldn't afford to have supplies in both Kentish Town and Marylebone. I carried some things in my small backpack but I couldn't stuff a jacket in it.\n\nI can't honestly remember what we ate that night, but I think it might have been spinach soup, stroganoff and zabaglione. I can't even confirm that we both ate the same thing. Although it was considered a 'smart' restaurant the atmosphere was quite relaxed. There weren't waiters hovering over you and filling your glass every time you took a sip. There was no-one in 'black tie' dress, and I think the tablecloths were checkerboard rather than white linen. Perhaps that was American influence, as Carrier came to Britain from the USA.\n\nAnyway we had a fantastic time: a bit of friendly banter with the waiters and waitresses, even the odd exchange with the next door table, kept things companionable, and the food was really lovely. We did have some quite intimate conversations as well. I remember Martha asking me if I had 'designs' on either of the girls I was going away with.\n\n\"One of them has been fellow resident in my flat for a year, and the other one I haven't met. So the answer clearly is 'no'. I am being used because I have acquired a car. It isn't in London yet because living where I do it would be as useful as ice blocks in an Alaskan winter,\" I said.\n\n\"I think you could visit at least eight countries without much of a diversion. With a slight detour you could visit Venice, which you really must do before it becomes over-run with tourists. I shall be thinking of you and wishing that we had the opportunity of enjoying some of Europe's wonderful cities together. I might even have been able to add a bit to the experience, by showing you things you might not have found or noticed.\"\n\n\"You have shown yourself to be a talented and knowledgeable guide, so I would expect nothing less,\" I said, looking straight into her eyes, and for once making her duck her head in something near to bashfulness.\n\nI suppose we were quite sensitive to the looks we got from our fellow diners, especially after the incident of the woman on the tube. There was nothing you could call remotely hostile, but women in particular showed interest and perhaps puzzlement. \"Jealousy\" said Martha. \"They've passed the flush of excitement that goes with the early years of a relationship and are just wondering if I've found a way to breathe the embers back into flame. If so, how do they get some of the action. I think I'll hire you out. Have to keep an eye on you of course.\"\n\n\"What do you mean by 'keep an eye on'?\"\n\n\"Do a Stephen Ward and fix up a two-way mirror.\"\n\n\"I didn't know you were a voyeur.\"\n\n\"So much you didn't know, and some of it still don't,\" she grinned.\n\n\"...and don't want to,\" I added.\n\n\"What a pity. I thought I could titillate you with my salacious stories.\"\n\n\"I don't need titillation\" I said.\n\n\"That's true.\"\n\nWe had finished our delicious desserts and decided that we needed coffee to finish.\n\nI think that decaffeinated coffee was available, but Martha rejected it anyway. I pointed out that the caffein would keep us awake. \"Exactly,\" was all she said.\n\n*\n\nWe considered walking the towpath back, but decided we might feel slightly unsafe, so decided on a compromise of taxi to the Royal College Street bridge over the canal, and then walk the rest of the way along the roads. It took about 15 minutes, and we huddled together, arms around each other.\n\n\"What have you planned for tomorrow?\" I asked.\n\n\"As it's Saturday it will be quiet in the City. I'd like to take you to the Sir John Soane Museum in Lincolns Inn. You've probably heard of it, but I want to try to enthuse you about architectural history, which as you've gathered is my passion.\"\n\n\"I have heard of it, and it would be great to visit. I reluctantly accept that I am not your only passion. Anything planned for the afternoon? Any other gaps in my education that you think need filling?\"\n\n\"Yes. With an ill-educated uncouth like you there just isn't enough time. But I thought that a walk along the Regents Canal, walking in a westward direction and then drop down along the side of Regents Park to the Royal College of Physicians.\"\n\n\"Oh yes! Excellent: that's my territory, Regents Park, walking distance both from the flat and from the Poly.\"\n\nWe were back to the house now. I filled with a warm anticipation when I knew we were going to shut the door on the world outside and retreat into our cocoon. My family home had always been welcoming, but increasingly it seemed like my parents' home rather than mine; and there was no way I could feel any sort of attachment to my London flats.\n\nSo we went in and fixed ourselves a whisky, hers with water, mine with soda, and sat on the sofa. I was in the corner, and she came and half lay on me as we continued our conversation about the Soane Museum and the Lasdun Royal College. After a while I started playing with a breast, and then found a nipple and started rolling it around.\n\n\"I'm being very puerile -- tell me to stop,\" I said\n\n\"Why, I like it.\"\n\n\"What do we call them? 'Tits' and 'boobs' are horrible. 'Bosom' is terribly 1930s.\"\n\n\"Careful: so am I. You once called them 'the twin peaks', which felt quite nice. Like what you're doing now.\"\n\nA little while later I gently pushed her off enough to get up and kneel in front of her. I put my hands under her skirt and pushed it back, then eased her thighs apart. My tongue started to massage between them. Her thin knickers were already damp when I started, and soon they were very wet.\n\n\"I'd really like to take them off,\" she said and managed it to her knees, where I took over to remove them entirely. Her bush was neatly trimmed, but not into fancy patterns, and I was now in an excellent position to make use of my recent education. My tongue started on the labia, softly moving up and down each side, enjoying the slightly acid taste, and then foraging a bit deeper. My right hand search for, and found, the little hood over the glans clitoris, and with extreme caution began to circle it with my thumb. I now moved my tongue up, over the urethral opening, and got it joining in the fiesta which my thumb had established around the glans clitoris. With my other hand I entered the vaginal canal, and two fingers began to cautiously rub the upper surface, just inside the opening.\n\nYou will be aware that I was trying to show off my newly acquired knowledge. Martha's hands were now holding my head. I thought she was going to move me away, but she seemed content to let me play. Basically, I just continued with my triple engagement: thumb, tongue and fingers, trying to set up complementary rhythms with each of them.\n\nFrom the time that I started playing with the nipples to this point possibly 15 minutes had passed. I didn't have to worry about my own orgasm, because my concentration was all on Martha and her state, but I thought it best if I asked where to go next.\n\n\"Darling please can you stop... what you're doing with the right... thumb, because the clit is now too sensitive... but please keep going with... your tongue and lips. Sorry I'm only just able to speak.\"\n\nI was only too happy to comply. Within a few minutes, just as I'd started gently sucking, Martha seemed to experience an overwhelming orgasm. It gripped her for quite a long time and I was astounded. Gosh! did I do that?\n\nThe little quiverings eventually subsided. She drew a deep breath and let out a long sigh and pulling down her skirt said \"Come up here and be cuddled. I can't think of any other way to express my feelings for what I have just experienced. I have never come close to that with anyone else.\"\n\nSo I did, only too happily.\n\n\"I feel guilty that you didn't get much out of that,\" Martha said.\n\n\"Bollocks. I was totally engaged in the nicest possible way.\"\n\n\"Well I'm going to take you to bed soon and give my body to you for free play. And I will respond to anything you'd like me to do for you.\"\n\nWe had another little tipple, then proceeded upstairs.\n\n\"Can we shower like we did last night please?\" I asked, and we made for the bathroom.\n\nIt was just as sexy as last night, and I did my best to pretend that I had a matchless body by running my hands all over the soapy surfaces trying to disguise its resemblance to a stick insect. As the night before she was sitting watching. I held the Prince in one hand, then thrust my pelvis forward and ran my other hand round my rump. She burst out laughing and clapped her hands. \"Bravo Mr Universe,\" she cried.\n\nI had a ball that night. I really wanted to see her lower herself onto the Prince, facing my toes, and let me play with what she called 'the wrinkled orifice'. And that's what she did, and I enjoyed the wonderful view and playtime in the back garden while the Prince nestled snugly in Cinders' welcoming folds.\n\nJudging that perhaps it was time to move to the next act she got off, turned me over and got the almond oil to massage my bum, and having got me wriggling with pleasure it was her turn at the w.o. -- mine this time -- and ever so gently she eased her finger in, probably as far as the second knuckle, and started a rhythmic sink and draw. I'd just got to the point when I thought I might elect to maintain this all night when she stopped again and got off the bed. She knelt down and rested her upper body on the bed.\n\n\"Come on Tigger: now it's your turn to let go. Come and give me a good fucking please.\"\n\nOf course I had no option. I got on the floor behind her and separated her knees, then took hold of a buttock apiece in my hands and, holding them apart I pointed the Prince at Cinderella's glistening portal and entered. I pushed as hard as I could. I really wanted to feel the flesh of her buttocks press hard against my groin, and I wanted her to feel my balls against her perineum. I then felt all was set for a fine fuck. It was quite vigorous... no, in truth it was an out-of-control rampage, which alas did not last as long as I'd hoped but was fantastic while it did. And we created that slapping noise flesh to flesh, that I find so stirring.\n\nI collapsed over Martha's back, nibbling the bit of neck and shoulder that I could find, and whispering my thanks and endearments.\n\n\"That was indeed a good fucking, my young lover. A+ for the Prince: Cinderella was well satisfied,\" my partner-in-lust announced.\n\n***\n\nNext day the mistress' plan was put into action, and we travelled by tube to Holborn for our visit to Sir John Soane's Museum in Lincoln's Inn Fields, a museum much-loved by architects for its quirky rooms and extraordinary collection of models, sculpture and paintings. In the crypt, which is the darkest part of the display, is an Egyptian sarcophagus: a stone coffin some 3700 years old.\n\n\"He couldn't stand his son and didn't want him to inherit the buildings and collection. So he had a Private Act of Parliament passed to create the museum and ensure that it stayed largely as it was in his time,\" Martha explained.\n\nWe spent some time in the museum: I had never been anywhere quite like it, and the building's interior with its fabulous contents, made an impression that would mean I visited it many more times over the next 40+ years.\n\nWhen we left the museum it was a pleasure to walk through an area of London that would have been busy on any weekday but was quiet and tranquil on this Saturday. We found a pub and consumed some bread, cheese, tomato and beer, and set off back to Camden Road to start our next pilgrimage.",
        "We joined the canal towpath off Kentish Town Road, and walked along one of the leafiest stretches of the canal on the north side of London Zoo and Regents Park. This is a great way to see bits of London without fighting the traffic and we sauntered along until we reached steps on the far side of the park which brought us up to road level.\n\nWhy were we going to a 1963 building designed and constructed for an elite body of doctors? At the time it was built there was precious little quality modern design being built, so the Royal College of Physicians became almost a place of pilgrimage to see what could be done. We paid homage to the simplicity, elegance and minute attention to detail of this stunning building.\n\nOur walk now took us back almost by the route that we had come on. Climbing back up to the road from the towpath we set off up Kentish Town Road. Just before the viaduct which carries the railway over the road there's a small area known as Camden Gardens. To call it a garden is stretching a definition to its limit, but there are some small trees, shrubs and areas of ground which might sometimes be green. I found myself being pulled into this area by a determined Martha and guided into one of the tunnels of the viaduct.\n\n\"Come and stand in front of me,\" she said, back to the wall. I did as commanded, slightly concerned as to what was coming next. Having a pee perhaps? She took off her knickers and handed them to me to stuff in my pocket; I was hoping that she was not intent on extending our range of places to fuck, but instead she pulled down her skirt and looked up at me.\n\n\"Norwich,\" she said.\n\n\"What?\"\n\n\"Nickers Off Ready When I Come Home.\"\n\n\"And there was me thinking that you were a nicely brought up young lady. I'm deeply shocked.\"\n\nSuppressed laughter. \"I was, but some of my girl friends were not. Taught me lots of naughties.\"\n\nWe returned to the footway and on up the road. Every so often she broke into a little trot and started pulling me with her. It was not much more than 5 minutes before we were in sight of the house. Now she let go of me and broke into a proper run. I saw her fumble with the key in the lock, then open the door and go in. When I got there the door was open and I went in.\n\n\"Shut the door!\" she shouted from the kitchen.\n\nI went through and got to the end of the living area from where I could see all of the kitchen. She was leaning on one of the kitchen worktops, skirt up over her back, displaying everything.\n\n\"For pity's sake get over here and behave like the animal you know you can be!\"\n\nI was wearing what we then called track suit bottoms -- jogging pants in modern parlance. So all I had to do was push them down and kick them off. The Prince was now looking princely, and in no time at all was behaving as I hoped my lover intended. Judging by the state of Cinders I fancy that she had been thinking of country matters rather than Royal ones. The two of them took over, anyway, and a fine time was had by all concerned. There was a lot of sighing and \"oh yes\" and \"more please\" and \"isn't this wonderful\". Inevitably there was a conclusion, which was physically and audibly spectacular. Followed by a quiet period of recuperation.\n\n\"First time I've ever had a purely vaginal orgasm,\" she announced proudly. \"I'd got pretty worked up by the time we actually fucked. It was very selfish of me, but I hope you didn't mind.\"\n\n\"I gritted my teeth.\" I said.\n\nAnd then we had a nice cup of tea.\n\n*\n\nThroughout the day I'd had the feeling that Martha was slightly subdued. I had really enjoyed myself. I love walking, and the locations we had been to make London a great place to walk. It had been a joy to visit places that meant we could discuss our mutual interests, and for me to gain wisdom from Martha's knowledge and experience. Perhaps it was that being 'the commander' was beginning to pall, and she would prefer a companion who was more of an equal?\n\nThere was of course the imminent separation. But it was only going to be for three weeks, and we'd already had a two week break without much heartrending.\n\nThen there was the rather bizarre episode that had just occurred, which seemed a bit out of character and possibly slightly desperate.\n\nI was having these thoughts as I cooked supper. This was my promised dish of barbecued pork ribs, served with rice and sweetcorn. I had got the ingredients in Marylebone and brought them with me on Friday.\n\nMartha was showering while I cooked, and then came down and poured us drinks, so I could sup my Cinzano Bianco, ice and lemon, while I tended the rice and corn. The ribs were cooking nicely in the oven.\n\nShe stood by me and talked.\n\n\"My parents never had what I'd call a cosy relationship like this. They didn't do domestic things together and I think my mother would probably have regarded it as an 'intrusion' into her territory if Dad had tried cooking or cleaning or laundry. I have to say that Richard was much the same, but he managed to find a male partner who was as domesticated as you are, and Richard is very competent at things like DIY and car maintenance. Happy coincidence. I suppose that you're good at those 'male' things too?\"\n\n\"I get by in most things but I'm not actually particularly good at anything.\"\n\n\"You are well on the way to becoming an unusually good lover.\"\n\n\"Mistress' self-congratulation?\" I teased. \"If that really did happen it might be a game-changer.\"\n\n\"You do lack a bit of self-confidence, which is a handicap. I think that having one or two successful sexual relationships could improve that, as well as make life more enjoyable for you.\"\n\nClearly she was thinking about me graduating from her particular school and moving on. I didn't really want to think about that. Coward.\n\nWe enjoyed our meal. I'd got a ripe pineapple and cut a slice and chopped it into smaller pieces which went well with barbecue sauce, and then we ate more slices for dessert, with whipped cream and little shortbread biscuits.\n\nWe cleared up together, then put on an LP of Menuhin playing Mozart violin concertos with the Bath Festival Orchestra. As before she lay against me with her head on my shoulder, which made me feel more protective and less dependent. We listened in silence.\n\n\"Mozart: moments of the sublime, and bits of banality,\" I said pompously at the end.\n\n\"Sweeping judgement with an element of truth,\" she said.\n\n\"I suppose I agree, but I'm not a music critic and I was just encapsulating the fact that when you sing Mozart you do realise that the man was desperate to churn stuff out to avoid starvation. So there are bits which you can sing for the first time and know pretty well what the next phrase is before you get there.\"\n\nWe nattered on for while in this vein. Then she asked:\n\n\"Have I been too bossy?\"\n\n\"No. You've been remarkably restrained. I have occasionally felt like an ignorant schoolboy, but that's because I sometimes am pretty ignorant. It's not just book knowledge that I lack, but experience of how the world works. You have helped me gain a tiny bit more wisdom.\"\n\n\"The motivation for this relationship was blatantly sexual, as I've confessed. I can't ask if it has worked for you, because you had no idea what was coming. As far as I am concerned I can barely remember what my hang-ups were. I think I had some idea that there was a sex life out there that I had missed out on. Now I know that was true. Past tense.\"\n\n\"Is it just the sex that has worked for you?\"\n\n\"Good heavens no. At the risk of being repetitive I have said that I adore you, and that means all of you: the quirky bits, the childish and the adult bits, the funny bits, the beautiful and the plain. You are a whole and an admirable human being... and of course will get even better!\"\n\nWe went to bed that night in quite a serious mood. We cuddled for a long time and eventually came together quietly in the position that I have described as half-and-half, each with one leg over and one under. There was a lot of stroking and clasping, and on my part at least, wonderment at the sense of completeness.\n\nIt took a long time for either of us to come to a climax. As Martha came to orgasm, aided by my manipulations, there was a sort of whimpering and her hands dug into my shoulders. My own climax was not explosive at all: more like the offering of a gift than a detonation.\n\n***\n\nWe woke next morning quite stiff -- our muscles I mean. We had slept conjoined in our interlocked position; added to our extensive walking the previous day it meant that a few minutes stretching were needed.\n\n\"Good morning darling. Thank you for your beautiful gift last night.\" She stroked my face. We need to talk now that you are going away.\"\n\n\"It's only for three weeks, and I hope that you can count on me being faithful.\"\n\n\"That isn't a problem because this will be the last time. Maybe the last time we will ever see each other. I'm going to ask you not to try to see me again, and I'll try to explain why.\"\n\nShe paused and drew a deep breath, \"I think we have been extraordinarily lucky to enjoy this brief period when we have got to know each other and help each other to slay some of our personal dragons.\n\nWe have got closer than I think either of us could have expected. In fact I think a romantic novelist would probably say that we have fallen in love: but I think you know how little significance I place on that expression. The question is: does the relationship have a future?\n\nI have just been offered my dream job. I will be looking after some of the most important historic buildings in the country. I will be travelling a lot and working odd hours. You will be trying to complete your course and find a job. We have no knowledge of our respective groups of friends, and it's a bit much to expect them easily to absorb someone with a twenty year age difference into their midst and I'm afraid I just can't imagine myself in a group of students socially. I have established myself here and am content to stay here. I'd be only too willing to have you as a tenant, but I doubt if it would suit you for long. You'll want to be doing your own homebuilding.\n\nPerhaps most important of all you want a family, and I'm so selfish now that I definitely don't want to upset my life for the sake of a dependent small person.\n\nBecause it has been so good these last few weeks I want it to end now, not wait until these things force us apart. It will be easier for us both if we say goodbye and agree not to contact each other at all.\"\n\nI looked her straight in the eyes. I saw the tears forming, and I knew that for her this was as hard a decision to make as it was for me to accept. But it was her decision, and I had to respect it because I owed her so much.\n\nI buried my head between her 'twin peaks'. I may have sobbed -- I can't remember, but it seems quite likely, and I wouldn't be ashamed if I did. Eventually I looked up.\n\n\"I accept all that you say, because it is you who has said it. I would dismiss it out of hand were it anyone else. When I walk away from here I will feel that I have been pulled apart, and an element torn off. But I guess that I will heal, and undoubtedly be the better for all of it. You have been so generous in every way. I'd love to have the opportunity of repaying some of it, but I guess it is not to be. So all I can say is a very inadequate 'thank you'.\"\n\nMartha took my head in her hands and almost whispered, \"Of course I would never have expected you to forget your 'thank you'. You were a very well-brought-up little boy. But I don't feel depleted by what I have given, only thankful for the opportunity to do it. Don't ever underestimate what you have given in return. Thank you.\"\n\n\"Please will you do something for me?\" I asked.\n\n\"Of course, if I can.\"\n\n\" First confirm that you really did mean 'no communication'. Then stay here in bed and let me dress and have a quick wash, get my things and leave? I promise to make sure the door is closed.\"\n\n\"If that's what you want then yes. And I did mean 'no communication'.\"\n\nSo that's what I did.\n\n***\n\n(Martha's letter contd.)\n\n\"...I need to go back to the end of that last week and explain how I felt. I'd told you how fond of you I had got. I was really frightened that we would become so wrapped up in each other that we would lose sight of the reasons for our coming together, and that our relationship could become an obsession that would be impossibly difficult to tear away from. The moment of your going away and having countless distractions on your holiday seemed too good an opportunity to pass by.\n\nBut I felt oh so guilty. I'd started this indulgence, and here I was unilaterally bringing it to a grinding halt. That was in addition to the fact that I had to come to terms with a bereavement, because that was what it was. There had been nothing in my life to compare with what I experienced with you, and now I had lost it. And we'd had so much fun!\n\nI thought that I would feel liberated, and in a way I did: I approached men with my previous subservience gone. I was entirely my own person: take me or leave me just as I am, and I'm doing nothing that I don't want to do. It felt as though this should make it easier to establish ground rules and make them obvious. \n\nThere was one problem: every time I thought about sex with someone -- which wasn't very often -- I immediately thought about you and I could never imagine that this new bloke would be a partner in the way that we were partners. The result was that I remained celibate.\n\nI wasn't that worried. I had means of satisfying the occasional need to remind myself what an orgasm felt like, stimulated by my memories of what we got up to. And I gained a number of good male friends who seemed as relieved as I was to be free of the tyranny of sexual expectation.\n\nI also had my dream job, which was entirely fulfilling, both of time and interest.\n\nIn fact I did join forces with another man, but it took another twenty years. Aged 60 I got married for the second time and retired from work. I won't say much about my second marriage, except to say that for both Christopher and me it provided companionship and affection at a time in life when we needed it. We did try having sex a few times but decided that it was surplus to either of our needs. I continued with my memories and my fingers and my toys. Much to the amusement of the staff here at the home -- at least those that I let into the secret -- I still have an occasional dream and play. They know about it because I need a certain amount of co-operation from them. Enough!\n\nChristopher died nine years ago, and I came here a few years later.\n\nSo the purpose of this letter is primarily to find out that you are still alive and that we share memories, but also to give you my profoundest apologies for what must have seemed a cruel act.\n\nEver yours\n\nMartha\n\nPS Cinderella is incommunicado these days, but I'm sure would want to send loving thoughts!\"\n\nI replied of course.\n\nI told her that it was wonderful to hear from her, but that I had understood we were not to communicate? Did she want to re-start our relationship? I felt sure we could test each other, probably to destruction...\n\nI gave her a brief run-down of my own life in the 50 intervening years.\n\nI went on: \"Going back to our parting of the ways your expectations of my response are largely accurate. I was stunned to start with, but then I thought carefully about all that happened in such a short space of time and I felt so grateful that any resentment soon evaporated. You were right about the holiday: it was so busy in every way that my opportunities for being miserable were extremely limited. When I did stop to think about it I just felt how joyful it had all been, and how my luck had changed the day that you decided to 'take me in hand'. No need for any guilt: you are absolved.\n\nI think there is a strong case to be made that those weeks affected my relationships for good. The increase in self-confidence that you predicted was real and important. I was able to say 'yes' and 'no',' please' and 'thank you' when it came to sexual relationships, so there was a greater certainty about what was going on. You made a difference, dear Martha, and I hope you can now feel justifiably pleased and proud. Most important of all, perhaps, is that for those special weeks we were happy and had a whole lot of fun!\n\nThank you.\n\nJames\n\nPS I'm not sure of the current status of the Prince, but if he isn't also incommunicado he will be the first to bless dear Cinders. \n\nI soon received a reply. It just said: \"No more need be said. Thank you.\"\n\nTwo months later I received a letter from the home where she had been for her last days. It said simply that they were sad to pass on the news of the death of a favourite resident, whom I would know as Martha Jameson. Enclosed was a small envelope addressed to me in Martha's own hand. In it was a mounted black and white photograph of two people standing hand-in-hand in front of the steps to Coventry Cathedral. On the back was written, again in her own hand: AS ALWAYS -- MARTHA.  \n\n \n\n \n"
    ],
    "authorname": "gnomelander",
    "tags": [
        "erotic coupling",
        "first time",
        "humour",
        "loving partners",
        "older woman",
        "seduction",
        "young man"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/kentish-town-lady"
}