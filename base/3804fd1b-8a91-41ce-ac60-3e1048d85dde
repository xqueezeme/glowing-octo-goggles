{
    "title": "Master! Master! Pt. 07",
    "pages": [
        "\"Come on, girls! Up! Up! Up!\"\n\nIt was early in the morning, hours before dawn. In the pitch-black bedroom, the sound of snowflakes hitting the window sounded like radio static. The girls all grumbled in annoyance, even the usual, perky Sonja. It didn't help that the bedroom was chilly. I turned on the lights but Momo and Sonja just pulled the blankets over their heads, trying to escape back into the warm darkness.\n\n\"Hmmmm, Masterrrrrr, just five more minutes...\" Momo whined.\n\n\"On your feet, I need your help. Come on, I told you three to expect this.\"\n\nAs I got dressed, Chloe crawled out from under the bed, leaving the comfort of her sleeping bag. She gave a wide yawn and rubbed her eyes with her ears drooping adorably. \n\n\"Master, I'm sleepy.\"\n\n\"I'm sorry, sweetie. Once I head out, you can go back to sleep.\"\n\nSonja managed to get up of her own volition, which left the three of us with the job of dragging out Momo by the ankles. They all got dressed and we headed downstairs. The reason we were up so early was because of the snowstorm outside. Hopefully, our rural road had already been plowed, but it would be a long time until my driveway actually got serviced. We needed to clear out just enough snow for my car to make it out. In Maine, there could be a hundred feet of snow in your driveway, but as long as the road is clear, you're expected to come into work. As the office manager, I had to set an example on days like these and come in regardless of the challenge. I did have the authority to close the office temporarily due to weather, but considering how busy my company was, I had to ask for permission from my superiors if I didn't want to get chewed out.\n\nWe didn't bother eating, as hopefully the job would be quick and we could have breakfast at our usual time. We put on our winter gear and I turned on the outside lights. We all took a deep breath and stepped out into the blustery cold. There were only two colors outside, the white of the snow and the black of the darkness, and if not for the howling wind, I could have sworn we were walking on the moon. Not only had a lot of snow been dumped, but the wind had dropped it in varying depths. The backyard had been swept clean, the snow only a foot or so high, but with my car and the driveway acting as nets to catch the wind, the snow at its highest was up to my chest. Branches and trees were also drooping under the weight of the snow, hanging down over the driveway. \n\nI grabbed one of the four snow shovels set on the porch and turned to the girls. \"Sonja, you're going to help me dig out the car. Momo, Chloe, I want you two to wade through the snow and make two paths in the driveway for my tires. When you reach the end of the driveway, look to see if the road has been cleared. Use your shovels to whack the low-hanging branches and knock off the snow. Then we'll all start shoveling. Got it?\"\n\n\"Yes!\" said the girls, each with a different level of enthusiasm. \n\nSonja and I went to my car and started digging all around it. It was below zero outside, so I also checked to make sure that the car would start. The battery seemed just fine and it kicked to life. I was lucky to have a Subaru out here.\n\nSafe, rugged, and dependable, a Subaru is the ideal car for any environment, ready for any job you need to do. Love, it's what makes a Subaru, a Subaru\u2122.\n\n\"Hup!\" \n\n\"Hup!\" \n\n\"Hup!\" \n\n\"Hup!\"\n\nMomo and Chloe were doing this kind of rhythmic chant as they waded through the snow. They were each jumping forward, using their legs to clear parallel tire paths. They held their arms out to their sides for balance and gave a loud grunt every time they jumped, taking turns one at a time. Poor Chloe, the snow was all the way up to her waist. It took her a lot of effort to make her way through it all. She needed to take repeated breathers and the lazy Momo was not one to complain. When they came across low-hanging branches, they knocked off the snow with their shovels until they swung up like the arms of catapults.\n\nTowards the end of the driveway, where the illumination from the porch lights faded, Chloe had to rely on Momo's feline eyes for help navigating in the dark. They reached the road but found no end to the deep snow. \n\n\"Master! The road isn't clear!\" Momo hollered.\n\nHearing her, I groaned. \"Out here, it doesn't surprise me. Come on, Sonja, let's start shoveling.\"\n\nSince we had cleaned off the car, we started hauling away the snow between the two paths that Momo and Chloe had made. Luckily the snow was light and fluffy, so it didn't take much effort to toss it, but it would definitely be a good idea to start saving my money for a snow blower. Momo and Chloe were doing the same thing but from the end of the driveway and we met up in the middle. The driveway still needed a real plowing, but my car would probably make it through.\n\nBy the time we were done, we were all hungry and exhausted, but too wired to simply go back to sleep. \"Thanks for all the help, girls. How about I make you all a special breakfast?\"\n\n\"Yay!\" they cheered.\n\nWe headed inside and stripped down to our normal clothes. First, I built up a fire in the stove to warm the house and then I started cooking. Bacon, eggs, and sausages; it was difficult to cook up three servings at once, but it was a labor of love. Even though they were tired, the girls crowded around me, impatient and hungry. I poured the feast into their bowls one at a time and they all assumed the position.\n\n\"Thanks, Master!\" they cheered before burying their faces in their meals.\n\nThey were done before I had even gotten a pot of coffee started. I set myself up with a steaming mug and a bowl of cereal and we all settled on the couch to watch the morning news. The whiteout had claimed the state but people were dealing with it. Most of the roads had already been plowed once and emergency services were all running as they should.\n\n\"Master, when is winter going to end?\" asked Chloe, keeping her hands warm with a cup of tea. \n\n\"Not for a while, I'm afraid. We're in January, next will come February, and things will start warming up in March and we'll get into spring.\"\n\n\"How many days is that?\" asked Sonja. \n\n\"Maybe sixty, seventy days.\"\n\n\"Momo is sick of winter.\"\n\n\"Well it's about to get a lot worse before it gets better.\"\n\nOn the news, the anchorwoman had confirmed my warning. Supposedly, New England was about to be hit with a frigid clusterfuck not seen since the North American Ice Storm of 1998. I had been just a little kid when it happened, but once you get hooked on TV, you don't forget two weeks without power. There had been rumors on the news for the past few days, but it seemed like now the meteorologists had confirmed it. The storm we had now was the very start. Luckily, I had been stocking up on food and supplies. This afternoon, I would get the last of the stuff I needed.\n\nI'm certain that Momo and Chloe heard the rumbling first, as they suddenly moved away from Sonja. Without warning, her ears perked up and she flew from the couch to the window overlooking the driveway. It was still dark out but the lights of a plow truck could be seen as it passed by our house. Her tail was wagging and I knew that she wanted to bark, but a hundred whaps to the head with a rolled-up newspaper had taught her to be quiet when people were outside.\n\nThe roads were clear, meaning that I had to go to work. It was a damn shame, because after all that shoveling, I really needed a nice nap. But I had to suck it up, so I got myself ready and headed out to work. The girls bid me farewell from the bed, with Chloe forsaking her sleeping bag for my spot in the middle. Seeing the three of them, all curled up under those warm sheets, I would have sold my soul to be able to strip back down and join them. There was always next time.\n\n---\n\nAs usual, I was the first one at the office. On one hand, it made me almost feel proud that I had such a good work ethic, but on the other hand, why the fuck did I have to be here first when everyone was dragging their asses?! Damn it, I could have snuggled with the girls some more! Oh well, as much as I hated getting up early, I did enjoy that brief span of time when the office was empty. I'd turn up the thermostat, start a pot of coffee in the break room, and settle behind my desk. Then I'd count the minutes until the next person arrived, thinking that I could have spent that many more minutes in bed. \n\nThe first phone call of the day broke the silence, and what a surprise, it was my boss.\n\n\"We're closing down all of the offices in the area until the weather clears.\"\n\n\"Do you have any idea how long that will be?\" I asked.\n\n\"I heard it will a week at least, and that's not counting the time it will take for the power to come on. Try and get everything in order by the end of the day, because after things calm down and people start picking up the pieces, we're all going to be busy.\"\n\n---\n\nMy coworkers streamed in one by one, no one late enough for me to bother mentioning. Every time the door opened, a frigid air would flush through the office and the rug would get peppered with snow. Once everyone had gathered, I told them all of the incoming hiatus and to get as much done as possible. Everyone was feverish for the rest of the day, half of the employees anxious about lost work hours and the possible damage to their homes from the storm, while the rest were just eager to have some time off, even if it was unpaid. I was certainly among the second half, overjoyed to spend a week or more curled up with my girls.\n\n---\n\nAfter leaving the office, I stopped off at the grocery store. I had almost everything I needed to wait out the storm, but there were just a few more things to pick up. The store was more crowded than I had ever seen, with every parking spot taken and people walking over after leaving their cars up to a quarter mile away. I ended up slowly rolling through the parking lot three times, looking for a spot while pedestrians waddled in front of my car like penguins. Countless other drivers were doing the same but I finally caught a break when someone left and I snatched their spot before some dick in a Humvee could take it.\n\nInside was even worse, with thick-coated Mainers pushing their way through the crowds, using their shopping carts like battering rams like it was Black Friday. The noise in the store was almost deafening, just the squeaking of the wheels on the carts making my ears sting. Many shelves had already been picked clean, every section taking a heavy hit. Well, every section except for the vegan section, because fuck you, vegans. We'd rather go hungry than eat your shitty food.\n\nI was lucky to get the last pack of toilet paper and some rolls of paper towels. Few people were grabbing toothbrushes and toothpaste so I didn't have to fight anyone for them. All the cereal was almost gone, but I grabbed a couple more boxes in case we ran out. Lastly, I got a cake in case the girls got stir crazy and needed some cheering up. But getting my stuff was the easy part. Paying for them and getting out was the hard part. Every aisle was open but so too was every line blended together, many of them stretching down aisles. Between when I got in line and when I was able to actually put my stuff on the conveyer belt, I beat three levels of Candy Crush and was waiting for another life.\n\nWhen I got back to my car and started unloading my stuff, everything behind me stopped. Two cars passing behind me had halted with their headlights on my back. I could feel the angry glares of the drivers as they waited for me to leave. When I got into my car and turned it on, I suddenly felt like I was in prison and had just dropped the soap. \n\n---\n\nI made it home safe and sound, though the roads were still very sloshy. I was glad to see my driveway had been plowed. There is nothing better than coming home, opening the door, and smelling dinner being made, except, of course, that same scenario but with three beautiful animal-eared girls coming to greet you at the door.\n\n\"Yes, yes, I missed you girls too,\" I said as they rubbed up against me like they were trying to scratch an itch. \"Did you three do what I asked today?\"\n\n\"Of course!\" Sonja cheered.\n\nI looked through the house, seeing piles of firewood stacked around the house, but set away from the wood stove and on top of sheets of newspaper to protect the floor. The girls had brought in as much firewood as possible in preparation. I would much rather we have too much ready than not enough and have to go out to the woodshed to get more. With one side of the house full of firewood and the kitchen stocked with food and supplies, we were running short on open space, but of course, that would change in the coming days. \n\nWe had dinner and settled on the couch, watching the evening news as we did every night. Every channel was talking about the huge chain of storms coming our way. Sonja was eager, almost masochistically so, Momo seemed uncomfortable whenever a meteorologist or news anchor said \"cold\", and Chloe was downright terrified.\n\nOutside, the wind was kicking up and it was starting to snow again. We weren't supposed to have until tomorrow, but it seemed that Mother Nature was feeling a bit impatient. \n\nThe mouse climbed into my lap and hugged me. \"Master, are we going to be ok? We aren't going to die, are we?\"\n\n\"No, we'll be fine. We aren't going to die. In fact, I'm looking forward to this. Think of this as the chance be cozier than ever in your life.\"\n\nHearing me, Momo's face melted into a hedonistic grin. \n\n---\n\nAt some point in the night, the smoke detectors beeped, telling me we had lost power. That wasn't enough to keep me from falling back to sleep. But I did wake up later, stunned by the feeling of something cold touching me. I realized that Chloe had crawled into bed with us, the sweet smell of her hair and ears filling my nose with her own nose pressed to my chest. \n\n\"Chloe?\" I grumbled.\n\n\"Sorry, Master! I wanted to be with you!\"\n\n\"No, no, it's fine. You're always welcome.\"\n\nThe tip of my own nose was cold as well, along with my exposed toes. Sonja and Chloe had their heads under their pillows rather than on top. The room wasn't just chilly, it was frigid. Was there a window open somewhere? No wonder Chloe wanted to come under the covers. That sleeping bag was made for camping, but it could never match up to the warmth of joined bodies. Much to my displeasure, I was forced to climb out of bed to check the temperature. I couldn't get a reading outside, but according to my phone, the temperature in the room was... 35\u00ba. Jesus! I had climbed out of bed just seconds ago and my nipples could already cut glass! I wasn't wearing underwear, simply because I didn't need to with the girls around, so I was already experiencing epic shrinkage. I did a quick check of the house by the light of my phone, making sure there weren't any drafts where cold air was coming in. I couldn't find any leaks.\n\nWorking up all of my courage, I put on my boots and stepped outside to check the thermometer I had out on the porch. The blizzard was going full force with no signs of stopping, and the moment I stepped outside, I was certain I had lost a year of my life! Wearing nothing but boots, I could actually feel my skin freezing. With frostbite forming and Old Man Winter dry-humping me, I held up my cell phone to the thermometer. Outside it was -20\u00ba. Sweet Black-fucking-Sabbath! No wonder it was so cold in the house!\n\nI went back inside and brushed the snow off my skin, alarmed that it hadn't automatically melted. I then threw some fuel into the woodstove to warm up the house. Our home had been made with Maine winters in mind. The pipes were well insulated and kept away from the sides of the house as much as possible, but if the inside temperature dropped below freezing, they could ice up. With steady heat radiating from the stove I returned to the bedroom. My eyes had adjusted to the dark, enough for me to discern the shapes of my three girls. Oh, getting back in there would be orgasmic. I grabbed Chloe's blankets under the bed and then threw them on top for a little extra warmth. Upon lifting the sheets, I saw three pairs of slender white feet and the tips of three tails. Momo and Sonja remained still, telling me they were asleep, but Chloe stirred, clearly still awake. I couldn't resist, I leaned down and left a small kiss on each little toe. I could faintly hear her giggle.\n\nAfter leaving some extra covering at the end of the bed for our feet, I slithered back inside, rubbing my nose on her chest in reversal of our earlier roles. \n\n\"Master,\" she whispered.\n\nI wrapped my arms around her small body and held her close, the two of us relishing each other's warmth. The four of us were completely hidden under blankets, save for some small gaps to let in fresh air. The air that came in was cold, almost making it a game to protect ourselves from the chill while letting us breathe. The warmth and softness were beyond description, every part of me touching either fabric or smooth skin. \n\nHalf-asleep, Momo rolled over and spooned Chloe, sandwiching her in between us. With Chloe's face buried in my chest, Momo had her forehead pressed to mine with a purr in her throat. Sonja did the same, wrapping her arms around me with her breasts smooshed against my back while she and I played footsie under the covers. The only sound was of our breathing and the howling wind outside. Both sounds made me happy beyond words, wrapped up in blankets with my girls, snuggled in a bastion of warmth. I didn't fall back to sleep, but that was out of pure will. This moment right now was so blissful, so comfortable and relaxing, I didn't want to miss out on it by being asleep.\n\n\"I love you girls,\" I said before fatigue finally took me.\n\n---\n\nMinus each of us going to the bathroom at least once, we stayed in bed as long as we could, not wanting to abandon the warmth and comfort of the bed and each other. It was probably sometime in the early afternoon that our stomachs all reached synchronicity in their growling. Eventually we would have to face the cold and go eat. It took us all encouraging each other to finally make that jump. We got out of bed and hurriedly got dressed.\n\n\"Girls, before we go eat, I think we need to move the bed. Let's bring the mattress downstairs and lay it out next to the wood stove. That way we won't get as cold as we were last night.\"\n\nWith Sonja and I taking the ends, and Momo and Chloe offering help from the sides, we dragged the mattress out of the bedroom and down the stairs. The narrow, bent staircase made it a major pain to worm it around corners, but we finally got it down into the living room and laid it out in front of the stove. I built up the fire and the room began to fill with warmth.\n\nThe world outside was pure white, the storm so thick that not even the trees could be seen. From the looks of it, my car appeared completely buried, but until the driveway got plowed, there was no reason to dig it out. It was time to make breakfast, but first I had to get us some power. I got all wrapped up in my winter gear and stepped out onto wild white yonder. I kept the generator at the back of the house, out of the wind. It was kept safe in a plywood box with my electric meter, basically an outhouse but without the john. It started with relative ease, but in these temperatures, relative ease is still a pain in the ass. \n\nI had about twenty-five gallons of gas saved and the generator could run for ten hours on a full four-gallon tank, but there was no telling how long we would be without power. Therefore, I would only keep the generator on for a few hours a day, one for making breakfast and one for making dinner, and some extra time for things like laundry and bathing. During those times, I would also charge my laptop and phone. I had filled up the tub with water for flushing the toilet, but still, I told the girls to save their #2s for when the generator was on. ",
        "I hurried back inside, my whole body shaking from the deathly chill. The girls and I had breakfast and settled in the living room. Unfortunately, even though we had power, both the cable and Internet were out for the whole area. \n\n\"Ok, girls, what do you want to do?\"\n\nMomo yawned. \"Momo wants to take a nap.\"\n\nI had been thinking more along the lines of playing cards or a board game, but actually, a nap sounded really nice. We all brushed our teeth, and as the girls settled into bed, I went out and turned off the generator. When I came back in, I saw three lumps hidden under the covers. We had set the bed perpendicular to the woodstove, all of us lying on it sideways so that we could receive equal warmth. The cushions had been taken from the couch and used to add extra space for our legs. \n\nI stripped down and crawled into the fabric den. Surprisingly, it was Sonja in the middle. Normally she stuck to the sides. I settled in between her and Momo, embracing Sonja from behind.\n\n\"I love cuddling with Master like this!\" she cheered under the blankets. \n\n\"Yeah, I love it too.\"\n\nIt didn't take us long to fall back to sleep. \n\n---\n\nI'm not sure when I woke up, maybe after an hour or so of sleep. I could have checked my phone, but it was in my pants and that would require me to leave the sanctity of the bed. I was cozy behind words, simply relishing the warmth and softness around me. For an unknown length of time, I simply lay there, listening to the breathing of the three girls. It was the simplest form of entertainment, waiting for their rhythms to sync up and for them all to breathe in or out at the same time. I would silently celebrate, then wait for it to happen again. I was still embracing Sonja, her back against my chest, me smelling her hair.\n\nSuddenly, her body began to twitch and I could hear soft whimpers. Her eyes were closed but she was giving tiny barks. Oh, she was dreaming about squirrels again. It had been a while since she did that. I started rubbing her belly to calm her down. \"Shhhh, it's ok.\" Her body became still but I continued to move my hand around her flat stomach, trying to taste her skin with my fingertips. She was so smooth, so soft. I leaned my head down under the covers and kissed her navel. \n\nCrap, I was getting turned on. Oh well, I might as well take it slow. I laid my head back and let my hand slide up her stomach and cup a warm breast. A shiver moved through her and she gently stirred, but not in a way to suggest displeasure. I massaged her breasts one at a time, seeing how long I could keep her from waking up. Her boobs were so huge, they practically overflowed out of my hand. Once I started tickling her nipples, she at last woke up.\n\n\"Huh? Master?\"\n\nShe then rolled onto her back and smiled but kept her eyes closed, giving me the all-clear to have my way with her. My lips found one of her areolas, pulling on the supple flesh and making her gasp. My hand abandoned the mountains and moved down to the canyon to tap the river. She was already wet, so my fingers slipped inside her. She was beginning to whimper, like a dog waiting for her master to come through the front door. \n\nI removed my hand from her labia with strings of liquid stretched between my fingers. I rubbed the liquid onto her other nipple, using my fingertips to tease it into a point, and then I licked it clean. Fully erect, I moved on top of her. She spread her legs and welcomed my manhood. She smiled and blushed as I penetrated her, but she forsook that smile so she could kiss me. With her legs wrapped around my waist, I dipped into her recesses again and again, hitting all the walls and making her pant, but keeping my movements slow and gentle. \n\nI came after a few minutes, painting her interior with a nice white finish. I hadn't brought her to climax, something that left my ego bruised, but it was probably for the best. Her howl would have woken Momo and Chloe and ruined the peace. The loving smile on her face told me that she was content, happy to bask in my affection. I would pay her back later. I gave her a kiss and she closed her eyes to fall back to sleep. After adding some more wood to the fire, I pulled the blankets back over my head and did the same.\n\n---\n\nSoft, wet, the sensations awoke me. With frequent scraping of teeth, I could tell that my manhood was in someone's mouth. I had my head above the covers, my eyes finding the pure whiteness of the storm outside the living room windows. In front of me, the blankets shifted as a head bobbed up and down, while in the darkness, saliva was slathered onto my hardening cock and then being licked away. But who was it? The mystery girl was massaging my balls while she stuffed her mouth. Had Sonja decided that she wanted to keep playing? No, I could feel her next to me, out like a log. Could it be Chloe? No, this was too aggressive. That only left Momo. \n\nHer diligence and effort were certainly commendable. She was trying to draw out my semen like the last glob of toothpaste. However, so soon after waking up, and having emptied myself into Sonja, it would take a lot more work to make me cum. As usual, her laziness surpassed everything else, including her libido, and she gave up. Instead, she slithered up my chest, poked her head out from under the covers, and kissed me. She was purring like a Harley as our tongues twisted, and became even louder as my hands grasped her rear end and squeezed it. \n\nContinuing to purr, she pulled away and rolled over on top of me, as if to make sure every part of her body made contact. With Momo lying on her back on top of me, I took this opportunity to fondle her breasts and fiddle with her slit, making sure it was ready. We both turned on our side towards the edge of the bed and lifted our legs like mirror images of each other. She guided me in, proceeding to rub her clit as I made my strokes. With us lying on our sides, it took a while for me to get the movements just right, but I was soon thrusting deep into her. Like with Sonja, I kept my movements slow and gentle, trying to maintain the cozy serenity of the moment. Using my position as the big spoon, I resumed fondling her breasts, this time supplementing it by running kisses up her neck and nibbling on the side of her ear. \n\nThe blankets were left hanging from our raised legs, letting air flush in. Even though we were right next to the woodstove, compared to the air of our cozy sanctum, the rest of the house was freezing cold. Rather than shivering, the cold air left Momo panting, the chill tickling her skin in contrast to the heat building up in her body from sex. It sent a continuous shock through her like she was hot steel submerged in water. Both her nipples and her clitoris became erect, the sweat steaming off her flat belly. She gave a single joyful whimper before her strength left her. Her leg dropped and she became still under the covers, her eyes closed as if she had fallen back to sleep. Had she climaxed? Normally she was loud as sin when she came. Perhaps she had experienced some kind of mini orgasm? \n\nI pulled out of her, unable to have my own orgasm before she gave out. But there was always next time, and I was tired. Still spooning Momo, I closed my eyes and fell asleep.\n\n---\n\nSonja was resisting the need with everything she had, but in the end, the call of nature could not be ignored. Forsaking the warmth and comfort of the bed, she went upstairs to use the bathroom, immediately yelping when she touched the cold toilet seat. Under the covers, Chloe stirred, awoken by Sonja's departure. She sensed an opportunity to gain some extra warmth and scooched into the middle of the bed. I was on my side, facing her, not so deeply asleep so as not to feel her crawl into my embrace. With my arms wrapped around her, she buried her face in my chest and closed every bit of open space between us, relishing my warmth. Sonja soon returned, taking Chloe's spot at the edge of the bed without issue. \n\nWe stayed like that for a good while, me holding Chloe's small body against mine, the two of us exchanging body heat. A spot on my chest became hot and wet from her breath. I rolled onto my back and sighed in relief from my muscles stretching, but Chloe couldn't be rid of that easily. She moved onto my chest, sleeping on top of me like a cat. Luckily, she was light enough not to restrict my breathing. More time passed, Momo and Sonja rolling over and clutching my arms. \n\nWith Chloe's naked body on top of mine, I was starting to get hard. No longer falling in and out of sleep, I simply lay there, feeling the pressure build. Unfortunately, Chloe was lying on top of it, crushing it, and I couldn't move it without disturbing the peace. My luck turned as Chloe appeared to wake up, probably from the feel of my erection against her stomach. She held herself up and her fingers wrapped around my member. I don't know whether she did it for my pleasure or hers, but she settled herself on it like she was plugging it into her. Buried up to the base in Chloe's pussy, I hummed in bliss. Rather than moving, Chloe simply lied back down on my chest and became still, seeming to fall back to sleep with me inside her. Is this what tantric sex is? I got to admit, it's kind of nice not having any of that exhausting movement.\n\nWe stayed like that for a while, both completely still. My cock pulsed inside her with every heartbeat. After a while, my erection gave in and I became flaccid, but still remained in Chloe. I was kind of glad to go soft, as I was starting to get sore. With our bodies linked, she and I drifted off to sleep.\n\n---\n\nJust like that morning, it was our rumbling stomachs that finally got us out of bed. What shocked me though was that the house was pitch black. I checked my phone, realizing it was already past 8 in the evening. We had slept through the entire day! Though, thinking back, it was rare for me to sleep that well. That might have been the best nap of my life. I went outside to turn on the generator, with the storm still raging. Out in the yard, where the wind normally swept away as much snow as it left, the powder was up past my waist. \n\nEven if it was just from a generator, it was nice to have electricity again. Unfortunately, without cable and the Internet, I was starting to go a bit into media withdrawal. I kept reaching into my pocket for my smartphone, tempted to use my cellular data, if I even could. My stinginess stopped me, but I was itching for electronic stimuli. I was so used to having a constant flow of information at my fingertips, that now, my brain was chewing on itself.\n\nI had to distract myself. I started preparing dinner. I made us something light, the perfect storm food; grilled cheese sandwiches and tomato soup. Next to me, Sonja was looking out the window with a somber expression.\n\n\"I'm tired of being inside. I want to go out and play, but it's too dark and stormy out.\"\n\n\"I know, honey, I'm sorry. But there are plenty of games we can play inside. Hopefully, tomorrow or sometime soon, we'll get a reprieve.\"\n\nLikewise, Chloe and even Momo were restless and didn't want to sleep anymore. On and off, we had all slept for twenty hours, so our circadian rhythms were a bit screwy. Rather than putting their food in their bowls, I poured their tomato soup into coffee mugs and let them join me on the couch with their sandwiches. I turned on my laptop and started a movie. Normally, the girls didn't pay attention to the TV, but I had downloaded the \"planet earth\" series, which would probably keep them glued to the screen. \n\n\"What are we watching?\" Sonja asked.\n\n\"Is it porn?\" Momo chirped.\n\n\"No, it's not porn. It's called a documentary. It will show you the world and the animals in it.\"\n\nIt was the first episode, \"Pole to Pole\", and the intro alone left the girls shocked and in awe. They had no idea that the world had so much stuff in it. It started with penguins in Antarctica, the girls laughing at the waddling birds.\n\n\"Are there penguins near us?\" Chloe asked.\n\nConsidering how little she knew of the world, her question didn't surprise me. Until now, her world consisted only of the woods around our house.\n\nI patted her head. \"No, sweetie, they are far away.\"\n\nIt then showed a polar bear with her cubs in the Arctic, causing Sonja to begin wiggling in excitement.\n\n\"They look just like me!\"\n\n\"Yeah, back when you were fluffier. You did kind of look like a polar bear.\"\n\n\"Momo wants a cub.\"\n\nI turned to her, shocked by her declaration. Was she feeling maternal? If I told her she was sterile, how would she react?\n\n\"You mean you want to have a child of your own?\"\n\n\"No, Momo wants a bear cub. They are small of furry. Momo wants to play with one and take a nap with it.\"\n\nAh, of course.\n\nFrom there, the girls' reactions depended on whatever animal they were looking at. When Sonja saw wolves or foxes, she would growl. Every time Momo saw big cats or strange birds, she would purr. Chloe would squeal and cover her eyes every time something was eaten, even insects. Scenes of great white sharks left them all terrified, and I even heard some tearful sniffles when a young elephant got separated from its herd. It finished again with the penguins, showing the hatching chicks, which made them all cheer.\n\n\"How was that, girls?\"\n\n\"Can we watch another?\" Momo asked.\n\nSonja got off the couch and started jumping up and down. \"Yeah, can we? Can we? Can we?\"\n\n\"Sure, girls, one more.\"\n\nI started the next episode, the mountains episode. Immediately, the girls were left awestruck, unable to believe that anything could be so big. None of them had ever seen a mountain before, so these huge rock behemoths might as well have been other planets. A shot of a churning volcano broke that awe and left them cowering, as if they expected molten rock to come pouring out of the screen. They settled back down when the scene shifted to a green mountain range in Ethiopia, soothed by the beauty and size. The sight of baboons left them puzzled, seeing the creatures climbing with fingers like their own. Sonja's tail was wagging, the baboons reminding her of squirrels. \n\nSoon, the mountain lions were the main focus, and Momo had a proud smirk on her face, overjoyed by size and strength of her fellow felines. After they took down an animal, whiteness took over the screen. It was an avalanche. Seeing the snow rushing down the mountain, Sonja again wagged her tail.\n\n\"I wanna ride it with my sled!\"\n\n\"That might be a little much for you.\"\n\nShe immediately forgot about snow when the bears appeared on the screen. It seemed she had found her new favorite animal. The documentary continued, the girls' reactions varying. As expected, Momo smiled when she saw snow leopards and Sonja cheered when she saw bears or monkeys, and Chloe simply admired the scenery. \n\nOnce it was done, I shut my laptop. \"That's enough for now. I'm going to go turn off the generator.\"\n\n\"But then won't it be dark? Momo doesn't want to go back to bed yet.\"\n\n\"Don't worry, I was actually thinking we could play some board games.\"\n\nThe girls looked at each other in confusion. \"Board games?\" Chloe asked.\n\n\"I'll show you in a minute.\"\n\nI lit some candles and went outside to turn off the generator. As always, the wind was howling and the snow was endless. Jesus, I couldn't remember the last time it had been this bad. I came back inside and grabbed the candles and a large paper bag from under the kitchen table where I had stashed all of our supplies. I sat us all down on the bed and pulled out several board games I had gotten from GoodWill. \n\n\"This is how people used to spend their time before computers. I'll start us off with something easy: Candy Land. This was the first game I learned how to play. Man, this takes me back.\"\n\nI set out the board between the four of us. It was an older version, much older, probably close to my age. I preferred it that way, it was exactly like the one I had as a kid. I assigned us player pieces and explained the rules. The girls didn't seem to understand the point of the game, but they would soon. I drew the first card and moved my piece to the corresponding color square. \n\n\"Chloe, your turn.\"\n\nShe tensed up, nervous from being put on the spot. \"O-ok.\" She picked the next card and it put her piece one square ahead of mine. \"S-sorry, Master!\"\n\n\"It's ok, that's the whole point of the game. You're trying to win. Momo, you're next.\"\n\nMomo didn't seem very interested, but she picked up a card and moved her piece. Her turn landed her ahead of Chloe, and the moment her piece touched the board, I could see a glimmer in her eye. The fact that she was ahead of someone in the game was stirring up her predatory instincts. Oh crap, had I just created a monster? Sonja ended up winning the game, with Momo of course demanding a do-over. We played two more times before I decided to switch it up. We moved on to the next game, 'Trouble', and after playing it twice, tried 'Sorry!'. The more we played, the more the girls had fun and got into it, and I was enjoying it as well. We munched on crackers and dry cereal as we played, as I didn't keep junk food in the house.\n\nI wasn't sure what time it was when we started playing 'Monopoly', it felt kind of late. I knew that even playing this game was a huge gamble. Monopoly had torn apart more families than alcoholism, but it was a fun game and I loved being able to play it again, plus it taught the girls the value of money.\n\n\"Rowr!\"\n\nNaturally, the cry came from Momo, but while normally it would be made in ecstasy, it was now done in frustration. She had just landed on one of Chloe's hotels and she was already running low on cash.\n\n\"Momo doesn't like this game,\" she pouted.\n\nI reached over and rubbed her ears. \"You're just saying that because you're losing. Relax, it's just a game. I'm really loving this, I haven't had fun like this in a long time.\"\n\nSonja's ears drooped. \"Don't you have fun with us?\" \n\n\"Of course I do, but there are different kinds of fun. I love playing with you girls, wrestling with you girls, throwing frisbees with you girls, but I also love sitting here, nice and cozy on our bed with the stove right next to us, playing board games by candlelight. A long time ago, I was having a sleepover at my friend's house. We were both maybe... nine? I have no idea. But it was late at night, perhaps the latest I had ever stayed up, and we were playing this game on his family's foldout couch. It was maybe two in the morning and we were watching late-night TV. It was a whole lot of fun.\"\n\n\"How old is Master?\" Sonja asked.\n\n\"I'm 26.\"\n\n\"26 what?\" Chloe asked.\n\n\"Years. I'm guessing you've lived about half a year. Momo is five, and Sonja is...?\"\n\nIt took her a few seconds of counting on her fingers and remembering the winters. \"I'm six!\"\n\n\"Master is old!\" Chloe squeaked.\n\n\"No, I'm still rather young. I won't be \"old\" until I'm at least forty.\" The girls were awestruck, unable to imagine living that long. \"It's weird, but you three let me feel like a kid again.\"\n\nWe all took our turns and it went back to Momo. She rolled the dice and ended up landing one of Sonja's properties. She threw a temper tantrum and flipped the board. \n\n---\n\nIt was around eight in the morning when we woke up. Despite all the sleep we had gotten the previous day, the dark of the night left us sleepy and yawning by the end of our Monopoly game. At least now our circadian rhythms would be back to normal. It was still blowing out there, but I didn't know if it was the same storm or a whole new storm. Even I was starting to get a bit restless, sick of being cooped up inside.\n\nAfter breakfast, I turned to Sonja. \"You want to go play out in the snow?\"\n\nHer smile lit up the house better than any generator could. \"REALLY? YOU WANT TO PLAY IN THE SNOW?!\" \n\n\"Sure, I kind of want to see how deep it is out there anyway. Momo? Chloe? Do either of you want to come out with us?\"",
        "Momo was snoozing and Chloe was reading a picture book. \"No, thank you,\" they both said.\n\nSonja and I got dressed in our full winter gear. I love wearing snow pants. When you put on snow pants, you're guaranteed to have a good time. We stepped out of the house with Sonja carrying a frisbee in her mouth. It was utterly freezing out, feeling less like Maine and more like Siberia, and the wind wasn't helping. We might not be able to stay out here very long. Then there was the snow, leaving my car completely invisible. The wind had cleared out some areas, giving the house a small membrane of open space, but the rest of the yard was buried beneath a good five feet of snow. The porch was completely surrounded by steep banks, like the trenches in WWI.\n\n\"Are you sure you want me to throw it?\"\n\nSonja's answer came in the form of her doing her happy dance and shaking her butt. I took the frisbee and tossed it out into the middle of the yard, hopefully not too far. Cheering in happiness, Sonja ran and jumped into the snow... and disappeared. She dove into the white ocean and the powder completely enveloped her in a mini avalanche. For a second, I couldn't see anything, as if she had vanished from the universe. Then the snow began to move and I saw her climb out. She scrambled up to the surface, every movement she made sending her sinking into the snow.\n\nAlready, she was panting like she had just run a marathon, and I couldn't blame her. She got on top of the snow and tried to move across it, but she would simply be swallowed up again as if by quicksand. It looked like a hellish trap, a nightmare to be stuck in, but that just made me want to jump in after her. I decided I would give her a hand in reaching the frisbee and leaped off the porch. I didn't feel solid ground beneath me, more like I had jumped into a swimming pool full of cotton balls, all compressing until I could sink no deeper. I had fallen forward, face-planting into the snow. That was unpleasant. I came up spluttering, and every time I tried to stand, my feet would just sink into the snow up to my waist. Sonja was in the same condition, sort of jogging in place but on all fours.\n\nShe and I began crawling towards the frisbee, the game now turning into a race. I'll say one thing about this: except for the snow in our face and in the gaps of our clothes, we certainly didn't feel cold. \n\n\"Got it!\" I was panting so hard that I thought I was going to throw up and it felt like all of my muscles were going to come undone, but I managed to beat Sonja to the punch and grabbed the frisbee.\n\n\"Ruff!\" Sonja pounced on me, sending the two of us rolling through the snow. \n\nShe and I wrestled for the frisbee, burying ourselves deeper and deeper. In the bottom of a crater formed by our bodies, I was holding the disk far out of her reach. I struck the sides of the pit, causing it to cave in. With that distraction, I managed to crawl back out, laughing like I had been turned into a kid. The race began again, the two of us worming our way through the snow, me trying to keep out of Sonja's reach. Every time she could get to her feet, she would jump on me with that big grin and we would roll around for a bit.\n\nWe at last made it back to the shelter of the porch, out of the snow and out of the wind. My lungs were absolutely killing me from panting so hard and my face was really stinging from the cold, not to mention my wrists from the snow getting under my gloves. Sonja was in the same state, her canine energy reserves depleted. We stepped inside and stripped down, our bodies feeling weightless.\n\n---\n\nIt was another lazy day. After lunch, we spent the afternoon with our various hobbies. I was reading on the couch, Momo was doodling, and Sonja and Chloe were playing checkers. More than once, I laid my book on my chest and drifted to sleep, only to be woken up minutes later by one of the girls saying \"king me!\". For dinner that night, we had ravioli and meat sauce. \n\nWith the generator humming outside, I was doing the dishes and wondering how we might spend our time. \"Hey girls, do you want to watch more of that documentary?\" \n\n\"Yeah!\" they all cheered.\n\n\"Ok, you get set up on the couch and I'll be there in a few minutes.\"\n\nAs the girls got ready, I reached into one of the cabinets and pulled out a container of hot cocoa mix. I had gotten it before the storm and forgotten about it. I got four mugs and let it heat up in the microwave.\n\n\"Master, we're ready!\"\n\n\"I'm almost there.\" The microwave dinged and I brought the mugs into the living room, setting them on the coffee table. \"Here, try this.\"\n\n\"What is it?\" Momo asked.\n\n\"Just try it, trust me.\"\n\nChloe took a sip and her tail became erect. \"Mmmmm! It's so good!\"\n\nSonja tried it and her tail started wagging. \"It's like drinking cake!\"\n\nA deep purr could be heard in Momo's throat. \"It's sweet and it's warm.\"\n\nWith the girls clutching their mugs, we watched two more episodes of the 'planet earth' series, and then it was lights out.\n\n---\n\nChloe's breathing quickened as my lips moved across her inner thighs. In absolute darkness, I had to go by feel, but I liked it that way. Momo and Sonja were on either side of her, moaning and panting as my fingers wiggled inside of them. My tongue found Chloe's clit and I traced around it, teasing her.\n\n\"Master,\" she whimpered. \n\nI sampled her wetness, licking it up and making her small voice chirp like a mockingbird. I gorged myself on her delectable body, using my lips to tease her flower petals while my tongue sent electricity through her nerves. She had her hands on my head, trying to both push me away and pull me closer, unsure of what to do against such powerful sensations. Her slender legs were clamped around my head and her back was arching and dropping. I brought her to climax, sending her voice echoing through our cozy cottage. \n\nMuch to Sonja and Momo's dismay, I had to remove my fingers from their pussies so that I could crawl up to Chloe. My tongue slipped between her lips and she returned to kiss, gently, as per her nature.\n\n\"I can still taste the cocoa in your mouth. When we're done, I want you to brush your teeth again.\" She squeaked in reply, embarrassed. I told her she could do it later, but she jumped out of bed and scurried upstairs to take care of it. I shrugged my shoulders and then moved over to Sonja. \"I'm not going to taste cocoa on your breath, am I?\" \n\nBefore she could reply, I kissed her to see for myself. This time, her tongue was faster, and she swirled it all around my mouth. A deep purr in her throat, her tail curling, Momo crawled over and embraced me from behind. I could feel each breath she took due to her tits pressed to my back. Her hand found my manhood and her low purr became pants of arousal. She stroked me to a full erection, playing with my cock in a way that gave her both animalistic and perverse joy. Some of my precum was streaked onto her hand, and she pulled it back and licked it away. Now with her palm wet with saliva, she reached back around and started stimulating me. Damn, sometimes a classic handjob reigns supreme. \n\nI continued to make out with Sonja, now leaning in to her so that the head of my cock met her entrance. Momo was still stroking me, trying to coax out my salty seed for her to lap up. My whole body tensed up as I came, pouring semen into Sonja's pussy. I rolled to the side, knowing what Momo would do. I was right, as she immediately bent her head between Sonja's legs and drank my cum out of her slit. She was panting and massaging her breasts as she felt Momo's soft, feminine tongue slither through her. But Sonja also wanted some salt. \n\nWith Momo following her, wanting to finish the job, Sonja crawled over to me and began trying to siphon any ammo I hadn't fired. Her lips formed a vacuum seal around the head of my dick and she was flitting her tongue in the opening at the tip to try and draw more semen. At the moment, I didn't have any more to give, but her efforts restored my erection and she wasn't going to let that opportunity get away. She straddled me, wagging her tail as my cock was buried in her up to the base. She started bouncing on me, moaning as I hollowed her out. Still purring, Momo crawled over and instinctively settled on my face, letting me gorge myself on her pussy. She too began to moan, addicted to the sensation of my tongue inside her. Two tails trembled, two voices chiming from ecstasy. \n\nMomo stared at Sonja's bouncing breasts, her feline eyes glued to them. Arousal and feline instinct merged, and she leaned over and began sucking on Sonja's nipples, one at a time. Sonja blushed and halted her movements, simply grinding herself on my cock while she fully appreciated Momo's lips on her areolas. \n\nMomo then moved off me, the shift telling Sonja that she wanted a turn. I was certainly eager to go along with it. Sonja dismounted me and I got up onto my knees. I turned back to Momo, face down with her ass sticking up, presenting her glistening fruit to me. I took her without mercy, mounting her from behind and hammering her with everything I had. Her moans became shrill, stopping every fraction of a second from each impact. I had a solid hold on her hips, with every thrust I made sending ripples throughout her body. She did not have the strength to hold herself up onto all fours, simply remaining with her face pressed against the mattress as I fucked her like a machine. The clapping of flesh on flesh was even louder than her lust-drunk hollering. I didn't stop even after she came, continuing to induce climax after climax until she could no longer respond.\n\nShe became limp and I pulled out of her, gasping for air. That pace really took a lot out of me. I glanced at Sonja, who even more excited after seeing how hard I had fucked Momo. Like me, her eyes had adjusted to the dark, so she saw my brutality and now wanted it for herself. The sound of small feet on the stairs then drew my attention to Chloe. Until I regained my strength, it might be a good idea to be gentle for a bit.\n\nShe crawled onto the bed and I invited her closer. \"I'm just going to taste toothpaste, right?\" Before she could answer, my lips joined hers. \n\nI held her in my arms, her petite body melting as the kiss continued. I laid her out and moved on top of her. Her legs spread, I penetrated her without difficulty. Due to her size, she was completely hidden beneath me, but I loved it like this. I held her against my chest, listening to her soft coos as I plunged into her with deep, slow strokes. Often, gentle and loving is more enjoyable than hardcore. \n\nBehind me, Sonja was starting to whine, impatient and lonely.\n\n\"Oh, all right. Come over here.\"\n\nShe smiled and joined us, lying on her back just behind Chloe. While I continued to delve into Chloe, my tongue probed Sonja's pussy. Momo had done a thorough job of licking up my cum, so Sonja was clean as a whistle. Chloe cried out from her orgasm, her small body trembling in my embrace. I had also shot one off, so I would be temporarily limp. I pulled out of her and leaned back, gasping for air. Damn, these girls gave me a better workout than any trip to the gym. I looked down, feeling lips envelop my member. It was Momo, having woken up from the sex coma I put her in. She was slower and gentler than she would normally be, obviously still fatigued. To pay her back, I rubbed the base of her spine, just above her tail. I had heard that cats really loved to be rubbed there. She licked up my salty cum, bringing me back to full mast in the process. But rather than presenting herself to me, she lied back down to continue resting.\n\nNext to her, Sonja was rearing to go. She was on her back, limbs spread, looking more like she wanted her tummy rubbed rather than to be fucked, but the aroma of her excitement said otherwise. I had caught my breath so I climbed on her, keeping myself in a pushup position rather than total missionary. I did this so that I could watch her breasts jiggle like two water balloons in an earthquake. Normally she would try to pull me closer and sit up to kiss me, but Sonja simply leaned back and smiled. Perhaps it was a developing feminine pride in her appearance or a pure-hearted joy that her body made me feel good, but she seemed to enjoy my ogling. \n\nRegardless of the view, my arms were weakening and I lowered myself down, now relishing the feel of her tits against my chest. Holding myself up on my elbows, I continued my thrusts, but rather than kiss her, I decided to tease her, blowing air into her ears. My breath sent shivers through her and she began to pant as her climax approached. Her howl erupted, her tunnel of love caving in as if to try and trap me inside. Having just blown my load in Chloe, I didn't cum, and pulled out with my manhood sore and drenched in Sonja's euphoria. \n\nI fell on my back, drained of strength, but someone wasn't content yet. Chloe crawled over to me, a nervous look on her face. \"M-Master? Do you think you could play with me a little more?\" Now this was a surprise. While Chloe enjoyed sex, she had never actually asked for seconds before. \n\nI cupped her cheeks. \"I'm always happy to play with you. But do you think you could ride me? I don't have any strength left.\"\n\nShe nodded and moved onto my lap. Her breathing quickened as I entered her, and she started riding me with watery eyes and moist lips. Her movements came with rhythmic squeaks, an automatic reaction to the sensation of her slender body trying to accommodate my mass in her. It was cute, the way she rode me. Momo and Sonja would normally bounce on my cock like it was a pogo stick, but Chloe would shake her hips, letting me whisk her pussy. I moved my hands down from her cheeks to her breasts, where I rubbed her nipples with my thumbs like I was playing a videogame. She squeaked from the tease, always surprised that I bothered giving her flat chest any attention. She knew I loved Momo and Sonja's tits, but her diminutive body just made her small breasts adorable. My hands fell farther down and I cupped her cute ass, her cheeks fitting perfectly in my palms. \n\n\"Chloe, I'm gonna blow!\"\n\nChloe scrunched up her face in concentration and gyrated her hips with more force, giving me all the stimulation I needed to empty myself into her. I grunted and shuddered beneath her and she collapsed on top of me, kissing my chest. Thoroughly exhausted and with the sweat steaming from our bodies, we all lay in our scattered positions and fell asleep. It wasn't until later in the night that we all came together back under the blankets.\n\n---\n\nAt last we had clear skies. More storms were on the way, but for today, we had sunlight and still air. We needed to make the most of it. After doing some work in the shed (first digging to and digging out the shed), I came into the house all dressed up in my snow gear.\n\n\"Come on, girls, let's go for a walk.\"\n\nThe girls' reactions were as expected; Sonja was overjoyed, Momo was unwilling but compliant, and Chloe was too nervous and obedient to have an opinion one way or the other. They got fully dressed and came outside, where I had eight long strips of wood, cut from a large piece of plywood I had found in the shed.\n\n\"Master, what are those for?\" \n\n\"These are going to help us stay above the snow.\"\n\nQuite simply, they were handmade skis, though not like the antiques you might find hanging above the fireplace at a fancy ski lodge. However, I was actually fairly proud of them. Each ski had a length of thin rebar duct taped to the bottom, strong enough to help keep the wood from cracking under our weight but light enough to not drain our stamina with every step. I had also found some scraps of tin roofing from the building of the house and added them to the ends as slopes to help them move over the snow. With nothing but several layers of duct tape, I secured everyone to their skis. It was certainly an awkward feeling, trying to get around with them on my feet, but my first steps out into the snow were promising.\n\nOutside of the house, the world was completely white, not a single tinge of hue beyond the clear blue sky. Snow had entombed everything, every tree and every pine needle, plastering itself into the ridges of bark at every angle and leaving nothing untouched. Every branch was weighted down with powder, hanging submissively like curtains. It almost looked like an alien world. The girls followed me, struggling to move with their skis, but at least they weren't sinking into the snow. \n\n\"Let's see if the road has been plowed.\"\n\nWe made our way over to the driveway, first checking my car. On average, the storms had dumped a solid six feet of snow, but around my car, being subject to the wind, it was twice that. Besides already knowing where it was parked, our only sign as to the existence of the car was the raised hill created by the snow replicating its shape as it was piled on. I brought a snow shovel with me and had to do lots of digging before I even reached metal. Jesus Christ, I had never seen a winter as extreme as this. I continued excavating around my car, only stopping when I finally exposed a window and could look inside. It almost felt like I was gazing into some ancient tomb.\n\n\"Girls, I predict a lot of shoveling in our immediate future.\"\n\nEven Sonja groaned at the prospect.\n\nWe then trekked down the driveway, past countless drooping branches with their ends buried in the snow. We would try to shake them loose whenever we could, but even when we cleared off all the snow, they still hung, despondent. It might take some time before they recovered and regained their rigidity. Hell, every man knows how hard it is to stay erect in the snow. We reached the end of the driveway, where we found good news and bad news. The good news was that the road had been plowed. Well, I had no idea when, but from the fact that there was only two feet of snow on the road, it proved that this road wasn't completely forgotten. The bad news was that the plow had left a huge wall of snow at the end of the driveway that would be a bitch to dig through.\n\nFrom there, we simply zigzagged through the forest, looking for any kind of paths we could use. By now, the girls and I knew these woods like the back of our hands, but there was no longer anything recognizable. Trees had been replaced with white pillars, ravines had been filled in, all manner of plants and brush were completely buried. It was an eerie reality, but it was also truly amazing and stunningly beautiful. I tried taking pictures with my phone, but they all came out as just a white flash.\n\n\"It's sort of like that documentary, isn't it?\" I hollered from the front of the line.\n\n\"I wish there were some polar bears around!\" called Sonja.\n\nI kept on looking back at the girls, checking their progress. Sonja and Momo had gotten the hang of their skis, though of course, Momo looked pissed off and wanted to go back to bed. Chloe was doing better than I expected. Due to her light weight, she was staying on top of the powder better than any of us.\n\n\"What do you think, Chloe? This all reminds me of your hair.\"\n\n\"Really?\"\n\n\"Yeah. Hell, your skin is so light, that if it weren't for your clothes, this would be perfect camouflage for you. You could strip down and be completely invisible.\"\n\nWhile the idea of taking off her clothes and disappearing into the snow did not appeal to her, the fact that I was thinking about her made her smile. But she then stopped in her tracks, unable to move beyond Momo who was standing still and looking down at the ground. Ahead of her, Sonja halted when she sensed the stillness, and I did the same when the forest behind me fell silent. Momo had a mournful look on her face, and after seeing that expression, Sonja gazed around at the surrounding woods and her tail drooped. Chloe was already clutching herself and sniffling.",
        "\"Girls? What is it? What's wrong?\"\n\nThey all turned to me.\n\n\"Master, we came out to this spot before Christmas to play and we found something,\" said Sonja.\n\n\"What did you find?\"\n\n\"A girl,\" said Momo, \"a girl like us. She was lying in the snow. She was dead.\"\n\nA shiver moved through me, starting from the tips of my fingers and toes and the top of my head, and moving towards the center of my chest. It felt like my heart was being twisted around a spool and reeling in every artery and vein out of my limbs.\n\n\"What did you say?\"\n\n\"I think she was a deer,\" said Chloe with a tearful sniffle. \"She was frozen. We buried her here under some sticks and brush.\"\n\nSonja looked down at the ground, wringing her hands. \"We wanted to tell you, but we didn't want to ruin Christmas.\"\n\nI struggled to speak, my throat dry as sand, my tongue feeling like it was swelling and cutting off my air. My eyes became wet, invoking the sting of the cold.\n\n\"Girls, you had better not be lying to me. Is there really a dead... is there really someone buried here?\"\n\nThey all nodded, and the silence hit me like a thunderous wave. My knees buckled, I fell to the ground. Guilt swept through me, no, such a word doesn't truly describe what I was feeling. Because of me, a girl was dead. Because of me, a human life had been created simply to be snuffed out by the cold. Was I lying in the exact same spot where she had lain in her final moments? Her naked body being bled of its warmth? Her bare skin feeling the frozen edges of the snow and ice? Her transformed mind filled with confusion and fear, knowing only for certain that she was going to die? I screamed and beat my fist against the snow, cursing myself and whatever power had forced an innocent creature to suffer and die. The girls rushed over me but I couldn't see them, blinded by tears and snow. I had feared this would happen. Every single day since this started, I had been terrified that this curse would create a human life and bring about its death, that would I rob an animal of their chance to live and they would die because I turned them into something they didn't understand and couldn't save them.\n\nIt had been a long time since I cried, but I did so now. I had created a person, as if they were my child, only for them to suffer and die. This girl, what had she been like? If I had found her, if I had saved her, how might my life be different? How might she make me smile? How might I make her laugh? How might I wake up beside her? How might she fall asleep beside me? \n\nI don't know how long I laid there. The girls stayed beside me, crying as well, afraid and unsure of anything they could do to make me feel better. Finally, the sun began to set, and they knew that we had to get home. They pulled me up onto my feet, and once standing, I began to think a little bit clearer. \n\n\"Let's go home,\" I said with my throat aching.\n\nWe trudged through the snow back to the house, none of us saying anything. We reached the porch just as the sun disappeared below the horizon. We cut the duct tape binding us to our skis and stepped inside, stripping off our winter gear. I walked into the kitchen and reached into a cabinet above the fridge, pulling out a bottle of Jack Daniels. I had never been a drinker, I didn't even know why I had bought it, but I was glad I had it now.\n\n\"Master?\"\n\nI didn't look at the girls. I couldn't. I walked into the living room and grabbed one of the blankets. \"I... need to be alone. There's plenty... of food, so you can fend for yourselves tonight. Don't disturb me.\"\n\nThey were crying but they behaved, not following me as I went upstairs. With no bed, I could have slept in the bathtub, but I wanted to be in a smaller place. I chose the bedroom closet, having just enough room to lie down. I pulled everything off the coat hangers, letting it all fall down to the floor to form a makeshift mattress, just something soft that would keep me warm. I wrapped myself in the blanket and crawled into my nest. I closed the door, and in the darkness, opened the bottle.\n\n---\n\nI spent the night and the following day in the closet, drowning my sorrows with liquor. I drifted in and out of a dreamless sleep, miraculously avoiding any spills. Every once in a while, I would hear the girls come up the stairs, most often to use the bathroom. They did as I told them and left me in peace, something I was grateful for, but every time they would come upstairs, they'd stop at the bedroom doorway and I could feel their eyes on the closet door. If I listened closely, I could hear them talking. They wanted so badly for me to come out, for me to tell them I was ok or just say a word to them, but I couldn't. I just couldn't face them. \n\nI didn't feel hungry, I had lost my appetite, but nature still called. At first I would go to the bathroom, but as soon as I emptied the Jack Daniels bottle, I filled it with pee so that I would no longer need to leave my enclosure. My mind was tearing itself apart, trying to figure out a solution to this. If I stayed here any longer, this would inevitably happen again. Some animal would turn into a human girl and end up freezing or starving to death, or even worse, wander out into the road and get run over. This ability, or curse, whatever it was, was it getting worse? How far from the house was that deer when she transformed? Chloe had been maybe fifty feet away from me back when she lived in the shed, but the girls found the other deer more than a mile from the house. Was the range increasing? I had no sense as to the frequency of this phenomenon, but would it now start happening more often?\n\nThis all started five months ago and I knew nothing about it. I didn't understand what was going on, had found nothing similar to this online, and hadn't taken a single step out of Square 1. What was I supposed to do? Where was I supposed to go? Where could I live that would let me provide for the girls but keep me far away from any animals? And even if there was a place I could go, my finances were all wrapped up in this house. \n\nIt took a long time, but at last I regained my composure, my grief receding to bearable levels. Taking a deep breath, I opened the closet door and pulled myself out. Part of me didn't want to leave my tiny sanctuary, but it felt good to breath fresh air and stretch my muscles. From the lighting outside, it looked to be late in the afternoon, probably close to 24 hours since I first went in. In the bathroom, I checked my appearance. Gaunt was the only word that could describe me. My bloodshot eyes were sunken and my face and body were pale and emaciated. It had only been one day, but it looked like I had been trapped in some POW camp for a month.\n\nI staggered downstairs and found the girls all on the mattress by the woodstove. They stared at me and shock.\n\n\"Master!\"\n\nAs one, they tackled me, each of them crying. They knocked be over, but I managed to grab the banister and slow myself down, just sitting on the stairs while the girls soaked my pants with their tears. \n\n\"I'm sorry, girls. I'm sorry for waking you worry.\"\n\n---\n\nI felt much better after eating some cereal and drinking some hot coffee. It wasn't until I came downstairs that I regained my appetite, and it was the hungriest I had ever been. The girls and I were sitting around the kitchen table, the three of them watching me eat with tear-streaked faces.\n\n\"Girls...\"\n\n\"We're sorry!\" they all cried.\n\n\"Wait, what?\"\n\n\"We're sorry for what we did! Please forgive us!\" It was amazing that they were all saying this in perfect synchronicity. But what were they apologizing for?\n\n\"Girls, you didn't do anything wrong. I know I told you to always be honest with me, but actually, I'm glad you waited to tell me. It really would have been a depressing Christmas. I'm not angry at any of you. I just feel guilty about her, about what could have been. It so easily could have happened any of you and I'm terrified because it will probably happen again. She died and it's my fault.\"\n\n\"It's not your fault! Nothing is Master's fault!\" said Momo.\n\n\"Master took care of us and gave us a home!\" said Sonja.\n\n\"We love Master!\" cried Chloe. \n\nI smiled, feeling my heart swell and unable to speak. I took me a moment for my throat to stop hurting.\n\n\"Come on, let's all get nice and cozy.\"\n\n---\n\nThe girls and I all ate, and once I turned off the generator, I followed them to the bed and crawled under the covers with them. I was covered head to toe in blankets, with Momo clinging to one arm, Sonja clinging to the other, and Chloe lying on my chest. The girls were all holding me extra tight, as if to make up for lost time.\n\n\"I love you girls. I love you with all my heart.\"\n\nAnd I did love them, more than I had ever loved anyone else. But for their sake and mine, perhaps it was time for the world to know about them.\n\n*****\n\nPlease comment! I'm desperate!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "cat girl",
        "dog girl",
        "mouse girl",
        "comedy",
        "cute",
        "romance",
        "romantic",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/master-master-pt-07"
}