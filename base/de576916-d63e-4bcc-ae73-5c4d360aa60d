{
    "title": "My European Summer Vacation (With+)",
    "pages": [
        "As I was editing , I decided that it was too long. It was double-digit pages and had five sex scenes where the same two people fuck. I cut out about 10% of the story including one sex scene and then published it. The response to the story was overwhelming positive. No one complained about it being too long or having too many sex scenes between the same two people. Instead, people asked for more. So for the one-year anniversary of the story, I'm publishing an extended version with an epilogue and what I had cut out restored. If you just want to read what I restored, it starts on the bottom of page 6 with the paragraph that starts \"From Oslo\" and runs to the paragraph that starts with \"The next night\".\n\n\"C'mere, are you lost?\" said a female voice.\n\nI looked up from the travel guide on my tablet and smiled sheepishly at a woman about my age. \"No. Just overwhelmed. I've been looking forward to vacationing in Europe for months and now that I'm here, I'm trying to decide what to see next.\"\n\n\"Well first off, welcome to Cork,\" she said as she held out her hand for me to shake. As we shook, she continued with, \"It's a wonderful city and I'm sure you'll fancy it. Are you a Yank?\"\n\nWas it that obvious I was an American? I guessed it was as I was wearing jeans and a Boston College T-shirt in Cork's English Market with a large backpack on my back.\n\n\"Yeah, from Boston. I graduated yesterday from Boston College, flew overnight to Dublin and then took the train down to Cork this morning.\"\n\nShe gave me a big smile. She was very pretty with long, dark blonde hair and pretty brown eyes. Tall and thin - I would guess 5' 10\" or so. She looked a year or two older than me. She was dressed in a simple royal blue dress. It had a conservative length and cut, but nicely showed off her figure and made her hair look stunning.\n\nI realized I was staring. \"I decided to come here first to buy some food.\"\n\n\"I don't have to work till this evening. I could show you around for a while if you'd fancy.\"\n\nReally? I've been in Cork less than an hour and a good-looking woman walks up to me and offers to show me around? \"I'd like that very much.\"\n\nThis didn't seem right. No, this was flat out incredible. I was a good-looking guy, but not good-looking enough that pretty women walked up to me and offered to show me around. Was she someone who worked with a partner to rob American tourists?\n\n\"Okay,\" she said. \"Let me finish buying my bits and pieces, then I'll take them back to my flat la and we'll be off.\" I followed her as she looked over some apples. \"Why didn't you leave your backpack in a locker in the train station? The best way to see Cork is on foot and that's going to get heavy fast.\"\n\n\"I don't know. I guess I was too cheap to think of paying for a locker.\"\n\n\"Well, it's your feet and back. Oh, I'm Sinead Hayes.\"\n\n\"I'm Noel Vaupel.\" My first name is pronounced like \"gnoll\", the race of humanoid hyenas in some fantasy games.\n\n\"Noel is my father's name.\"\n\n\"Seriously?\" She nodded her head. \"I've never met another Noel.\"\n\nI had hated my name as a kid. I had thought it was a girl's name. Many, many kids in school had taunted me with the same opinion. At one point, I tried to get everyone to call me by my middle name \"Liam\". That had failed because my mother had refused to go along - \"I named you Noel because I wanted to call you Noel.\"\n\n\"Noel is a good Cork name. Where's your family from?\"\n\n\"All over Ireland.\"\n\n\"But Vaupel isn't Irish.\"\n\n\"It's Hessian. Hans Vaupel was a Hessian mercenary who decided to stay in America after the Revolutionary War. But I'm seven-eighths Irish.\"\n\nDuring World War One, my great-grandfather James Vaupel had served in the First U. S. Division in France. There, he became best friends with Tip O'Sullivan of Boston and started corresponding with Tip's sister, Rosemary. After the war, he went to Boston and married her. Somehow, the Hessian looks have bred true as I had black hair and dark eyes, same as my father.\n\n\"What do you want to see in Cork?\"\n\n\"I don't know. I've always wanted to see Ireland, but I don't have a list of sights to see. I want to kiss the Blarney Stone at some point. Mostly, I just want to see Ireland.\"\n\nSinead gave me a smile. She had a brilliant smile that melted me. As we talked, she picked out some fresh fruit, berries and vegetables. She paid for her food and we left the market.\n\nSinead had a definite Cork accent. It was mainly how she pronounced her vowels, particularly before an \"r\". I had grown up listening to a Cork accent so I knew eventually I'd hear a \"th\" become a \"t\" as in \"think\" pronounced \"tink\" and \"three\" pronounced \"tree\". Mother would be \"mam\", pronounced like the American \"ma'am\". The Cork accent had a sing-song quality that made it very pleasant and I enjoyed listening to her talk.\n\n\"What degree did you get?\" asked Sinead.\n\n\"Computer Science.\"\n\n\"Same for me. From University College Cork last year.\"\n\n\"Are you a programmer?\"\n\n\"Aye, but I haven't been able to get a job programming. I've been doing volunteer programming projects for non-profits.\"\n\n\"What language do you use?\"\n\n\"C. I write iPad applications using Objective C. And you?\"\n\n\"M.\"\n\n\"M? What's that?\"\n\n\"It's a language that's ten letters more advanced than C.\" Sinead gave me a look that made it clear my joke had fallen flat. \"It's a language for high-speed data processing. The company I'm going to work for writes software for hospitals.\"\n\n\"When do you start work?\"\n\n\"September, the day after Labor Day.\"\n\n\"Are you going to tour Europe until then?\"\n\n\"Yes.\"\n\n\"That sounds savage.\" I took \"savage\" to mean \"great\".\n\n\"Should be fun if my money doesn't run out.\" I had a mission to complete in Cork before touring the rest of Europe. \"What applications did you develop?\"\n\nAs we walked down the quaint streets of Cork, Sinead told me of the programming projects she had done to help non-profits help other people. From the way she talked, she clearly knew how to code and to provide solutions to her clients. I was impressed.\n\n\"Here la,\" said Sinead as we arrived at a three story apartment building. The buildings all abutted each other on this street and all looked like apartment buildings. She took out her key and unlocked the front door. \"I'm on the second floor.\" Next to the door was a set of buttons and the one for number 203 had a card that read \"S. Hayes\".\n\nI was still wary about how friendly Sinead had been with me. At the same time, she was clearly a very smart, competent woman. Would someone like that lure Americans someplace to get robbed? If something bad was going to happen, this was where it was going to happen.\n\nI climbed the stairs to reach the second floor landing. Sinead started up the next set of stairs.\n\n\"Where are you going?\" I asked.\n\n\"To the second floor, silly goose. I told you my flat was on the second floor.\"\n\n\"This is the second floor.\"\n\n\"Na, na. This is the first floor. Come on.\"\n\nSinead continued up the stairs and I was forced to follow her. When she got to third floor, she walked down a hallway past a pair of doors and unlocked her door. No noticeable signal to her compatriots that a rich American was following her. As I entered the hallway, I braced myself to flee at the slightest sign of company. Sinead went into her apartment - 203 - and left the door open for me. I stuck my head in and saw no one else. It was a small apartment - a single room with a kitchen area on the far side. No one else was in the room and there were no doors for someone to hide behind. I felt foolish as I entered her apartment. Shouldn't she be worried about me jumping her once I got her alone?\n\nSinead said, \"I'll put this away then we'll be off.\"\n\n\"How about I fix us some sandwiches for lunch?\"\n\n\"Sandwiches sound good.\"\n\nI sat my backpack down and went over to her kitchen area. Everything looked old and/or second hand. The area needed a good cleaning. Not up to the standards of what I was used to. I opened a box marked \"Bread\" and got out a loaf.\n\n\"Do you have a knife for slicing the bread?\"\n\n\"Aye.\" Sinead handed me a massive bread knife that had seen many years of service.\n\nI thought of an old joke, smiled and then sang:<br><blockquote>I'm looking over<br>A four-loaf cleaver<br>That I overlooked before!</blockquote><br>I glanced at Sinead and she looked dumbfounded.\n\n\"Haven't you heard that joke before?\"\n\n\"Na, na.\"\n\n\"Well, it's a really bad joke and as I sang you the punch line, you wouldn't find it funny. You'll just have to read my mind to get the joke.\"\n\nShe shook her head with a slight smile on her face.\n\n\"It's easy to read someone's mind. Let me demonstrate.\" I set down the bread knife and put my right hand on her forehead. \"Think of a country that starts with 'D'. Got it?\" Sinead nodded her head. \"Now take the last letter of that word and think of an animal that starts with that letter. Thought of one?\" Again, she nodded her head. \"Now take the last letter of that word and think of a fruit that starts with that letter. Do you have that pictured in your mind?\" One last time, she nodded her head.\n\nI took my hand off her forehead, reached over to a fruit bowl and grabbed a fruit, which I held out in front of her. \"You're thinking of an orange, aren't you?\"\n\nShe smiled, gave me a you're-such-a-smart-ass look and then said slightly embarrassed, \"Aye.\"\n\nI smiled and picked back up the bread knife. \"However, I'm not good at reading people's minds on how thick they want their bread. Would this thick do?\"\n\n\"A little thinner.\"\n\nAs I cut her two slices, I asked, \"What kind of sandwich do you want?\"\n\nShe shrugged. \"Peanut butter and jelly.\"\n\n\"Have you ever had a peanut butter and banana sandwich?\"\n\n\"Na, na.\"\n\n\"I used to make them for my sisters all the time. Would you like to try one?\"\n\n\"Aye.\" Sinead seemed quite content to watch me work in the kitchen. \"How many sisters do you have?\"\n\n\"Two. Erin and Riley.\" I set everything down, got out my tablet and pulled up pictures of them. \"They're twelve and ten. I'm more like a junior parent to them than an older brother.\" I talked proudly as I showed Sinead my favorite pictures of them. When I was done, I went back to making the sandwiches. I took a banana out of the fruit bowl, peeled it, quickly sliced it and then arranged the slices on the peanut-buttered bread slices.\n\n\"It looks like you know what you're doing,\" said Sinead.\n\n\"I started cooking meals for my family when I was twelve. I enjoy cooking and I like to think I'm pretty good at it.\" \n\n\"Your mam must be proud of you.\"\n\n\"My mom is dead.\"\n\n\"Oh, na, na!\"\n\n\"She died in an industrial accident at her work a year and a half ago.\"\n\n\"I'm so sorry!\" Sinead stepped up to me and gave me a big hug.\n\nI stood there, enjoying the hug, different feelings warring in my mind. I missed my mother still and I appreciated the consolation. At the same time, I was being hugged by a pretty woman who I was very attracted to. The contours of her bodying pressing against mine felt wonderful. I was maybe three inches taller than her and I could feel all of her best parts as they were pressed against me. Were all Irish girls this friendly? Or had she developed an attraction to me as quickly as I had developed an attraction to her?\n\nI played it safe and kept my arms by my side. When she ended the hug, I said, \"Thanks.\" I was touched by her concern, but at the same time it made me feel uncomfortable as I felt I was getting too attracted to a stranger. \"Would you mind if I left my backpack here while we tour the town?\"\n\n\"Na, na. We'll come back here when it's time for me to change for work.\"\n\n\"Good. I'll get out my daypack and I'll carry our lunches in that.\" I got my daypack out. I had planned on living mostly on sandwiches, fresh fruit and vegetables as I toured Europe, so I was prepared. I unzipped my lunch box and took out my sandwich carrier and took it over to the sandwiches.\n\n\"What's that?\"\n\n\"It's a sandwich carrier I made out of a plastic milk jug. I made smaller ones for my sisters.\" Mine was big enough to hold two sandwiches. Sinead looked impressed, which made me feel flustered. \"Would you mind if we took some of your fruit to eat? I'll buy the drinks while we're out.\"\n\n\"I'd fancy that.\"\n\nI finished packing our lunches, zipped up my lunch box, and placed my lunch box and my tablet in my daypack. If someone robbed my backpack while we were gone, they were going to be disappointed - it only had clothes and my toiletries.\n\n\"Would you mind carrying my iPad?\" Sinead asked as we headed out of her apartment.\n\n\"Not at all.\"\n\nI thought iPads were seriously overpriced, but I knew not to start that fight. I tucked it into my daypack next to my Android tablet as she locked the door.\n\n\"Is there a country that starts with 'D' besides Denmark?\" Sinead asked.\n\n\"I don't know. I didn't take any Geographic Information System courses.\"\n\nSinead stuck her tongue out at me.\n\n* * * *\n\nWe hiked all over as Sinead showed me Cork. It was a wonderful city; very different from Boston. The buildings were so old, built to be used for hundreds of years. The churches were gorgeous. Cork didn't constantly tear down the old to make way for the new like Boston did. Every street corner seemed to have hundreds of stories that it longed to share with me.\n\nI took lots of pictures on my tablet. I got Sinead in as many of the pictures as I could. She had firm, toned legs and arms, but not the bulky musculature of someone who worked out with weights. I guessed she was physically active, probably a lot of it outdoors. With her conservative dress, I couldn't tell much about the size of her tits, but they seemed good-sized.\n\nLots of other guys checked her out. I was glad I checked her out subtly as guys openly checking her out made her obviously uncomfortable. Those were the only uncomfortable moments in our time together as we seemed to just click. There was rarely a pause in our conversation. When we hiked past University College Cork, Sinead told me stories of her college days and I told her stories of mine.\n\nWe were taking a water break when Sinead asked me, \"Don't you like beer? This is twice you've bought us water instead of beer.\"\n\n\"Oh, I like beer. However, I don't like paying for beer. If you want to buy me a beer, I'll happily drink it.\"\n\n\"I'm so used to guys offering to buy me a drink.\"\n\n\"Oh, I'm not a believer in the whole get-the-girl-tipsy thing. Women are too smart to fall for it. Instead, when I get them back to their apartments, I start cleaning their kitchens.\" Sinead smiled. \"I clean their counters and scrub their sinks\" - I acted out the cleaning motions - \"and they go wild.\" Sinead laughed. \"My experience is that a clean kitchen is an aphrodisiac for women.\" Sinead was laughing hard now. \"Women are like 'Take me now, you big sink-scrubbing stud'.\" Sinead doubled over.\n\nWhen she finally stopped laughing, Sinead said, \"You're so funny.\"\n\n\"You're a lot of fun to be with. Come on, we don't have much longer until you have to go to work.\"\n\n* * * *\n\nAround 3:30, we stopped in front of a restaurant in a trendy area a block off the River Lee.\n\n\"This is where I work,\" said Sinead. \"Stay here. I'm going to ask for the day off.\" Sinead disappeared inside. Several minutes later, she reappeared a little flush. \"I got the day off.\"\n\n\"Great! You've been a great guide and I've really enjoyed seeing Cork with you. How about I buy you dinner as a thank you? Someplace nice that serves traditional Cork food?\"\n\nSinead looked at me dubiously. I felt like I had said something wrong.\n\n\"Well, okay.\"\n\n\"Until then, let's keep walking.\"\n\n* * * *\n\nOn our way to dinner - I had finally gotten Sinead to name a restaurant - Sinead asked me, \"What was your mam's favorite Irish dish to make?\"\n\n\"Spaghetti.\"\n\nShe snorted. \"Seriously.\"\n\n\"Seriously, Mom hated to cook. She was all about getting food on the table with the minimum effort. I wouldn't have been surprised if she had skipped cooking the noodles and poured the spaghetti sauce over the raw pasta.\"\n\n\"I can sympathize. Is that why you took over cooking for the family?\"\n\n\"Yes and no. It's a long story.\"\n\n\"I'd fancy hearing it.\"\n\n\"Well, my parents almost divorced when I was nine. They fought about a lot of things, but the two things they fought about the most were money and cooking. Dad is great with a grill but useless in the kitchen. Mom hated cooking and hated that it was somehow her responsibility to cook.\"\n\n\"It wasn't her responsibility to cook.\"\n\n\"She responded by wanting to order pizza and eat fast food, which led to more fights about money. Dad also complained about how all the fast food was making Mom fat. It was an awful, scary time.\"\n\n\"Understandably.\"\n\n\"Then they had a big reconciliation, things calmed down and they decided to have another kid. One day, my parents told me Mom was pregnant and that once the baby came along, I would have to do more around the house. When Erin arrived, I helped out in different ways but cooking was the thing I enjoyed the most. Mom was a good cook - she just hated doing it - so she knew how to teach me to cook. At first, I got the ingredients out for whatever recipe she was making. Then I measured them as well. Later, I started making simple things like pudding all by myself. As Mom did less of the cooking, she scheduled more complex, better-tasting meals. Dad criticized Mom's cooking all the time, but he never criticized mine. The more I cooked, the less fighting happened.\"\n\nI looked over at Sinead. I had been wrapped up in my memories and hadn't been paying attention to her. Was this boring to her? She was staring raptly at me, so I continued.\n\n\"A year after Riley was born, Mom decided she was going to lose a lot of weight. She joined Weight Watchers, but she hated the weighing and the counting. One day, she came to me, showed me the Weight Watchers books and told me to figure out how to keep her on the diet. From then on, I did the menu planning. My parents gave me the grocery money every week and it was up to me to spend it wisely as whatever I didn't spend was mine. My mom lost weight, the fights over money stopped and they were much happier; kissing and holding hands a lot. Probably the two biggest reasons their marriage improved was that my dad got a big promotion and that my mom got a better job. Still, every time they got lovey-dovey, I felt proud of my contributions to strengthening their marriage.\"\n\nSinead seemed stunned by my story. Then she leaned forward and gave me a kiss on my cheek. \"That's the best story I've ever heard.\"\n\nI blushed. \"That's how I learned to cook. And that's how I learned to be cheap. I'd always buy what was on sale and figure out how to make a meal out of it. My sisters learned to forget about name brand snacks as store brand were just as good. I saved my money so if there was an emergency expense, I could help out. And every time I did help out, my parents sang my praises.\"\n\n\"Here la,\" said Sinead as we arrived at the restaurant. I was starving, having worked up a big appetite walking all over Cork.\n\nDinner was awkward. I had had such a great day with Sinead that I was happy to spend a lot of money on her, but she seemed somewhat withdrawn throughout dinner. It was the first time all day when the conversation didn't flow easily.\n\nWhen the check arrived, Sinead said, \"I'm going to pay half.\"\n\n\"I'd said I'd pay for dinner. I want to thank you for being such a great guide.\"\n\n\"It's not how I want to be thanked. I'll pay half.\"\n\nI thought about offering to pay more than half as she probably wouldn't have chosen this restaurant if I hadn't offered to pay, but I decided to let it go.\n\nAfter we left the restaurant, I said, \"Let's go back your place. I'll get my backpack then go to the youth hostel.\"",
        "\"Okay.\"\n\nWe walked quietly towards Sinead's apartment. I was slightly depressed - the day had been so great until dinner time. I felt like something wonderful was slipping away for reasons I didn't understand.\n\nSinead asked, \"You aren't angry that I paid for my half, are you?\"\n\n\"No. A little surprised, but not angry.\"\n\n\"Fellas ask me out to dinner all the time. It's gotten to the point where being asked out to dinner upsets me. It makes me feel like the fella is trying to buy my attention.\"\n\n\"I'm sorry. I had no idea. I was just trying to say thanks.\"\n\n\"I know, but it still bothered me. That's why I insisted I pay my half.\" We walked along quietly for a bit. \"You know what would be a great way to thank me?\"\n\n\"No clue.\"\n\n\"You could clean my kitchen.\"\n\nI laughed. \"I was joking when I said that.\"\n\n\"I know. I laughed at it, but what made it funny was how much I wanted my kitchen cleaned.\"\n\n\"I'll gladly clean your kitchen on one condition.\"\n\n\"What?\"\n\n\"You let me use it tomorrow morning. I'll leave the youth hostel early enough to get to your place for breakfast.\"\n\n\"Tomorrow? What are you going to cook?\"\n\nThe magic seemed to be coming back to our conversation. \"I don't know. I'll figure it out while I'm cleaning your kitchen.\"\n\n\"I'm sure it will be better than the boring toast and jam I always have.\"\n\n\"I promise it will. And after breakfast, I'll go to Blarney Castle. Care to join me?\"\n\n\"If you're willing to get back to Cork early enough for my work. I can't threaten to quit if they don't give me the day off two days in a row.\"\n\nShe had done what? Maybe she was attracted to me.\n\n\"That'd be fine. I think I'll enjoy seeing the castle more with a local guide.\"\n\nWe continued talking and now the conversation flowed easily. I had screwed up by asking her out to dinner, pushing her to pick an expensive restaurant and then forcing her to spend more of her money on dinner than she probably could afford. Talking with Sinead felt so easy, but there were obviously a lot of things I didn't know that could lead to problems.\n\nI suddenly realized how little Sinead how told me about herself. She hadn't said anything about her family or where she had grown up. We had talked a lot about programming, classes and college life, but she had shared nothing about her life before college.\n\nNear Sinead's apartment, I pointed out a handmade sign in a store window that said, \"Parking for costumers only\". We were soon almost crying from laughing so hard. As we turned a corner, I moved close to her and suddenly her hand was in mine. I didn't know if she had grabbed my hand or if our hands had come together by accident, but she didn't let go and I certainly didn't. Her hand felt warm and wonderful in mine. It was like our relationship had passed a turning point, but neither of us wanted to mention it. We held hands the rest of the way to her apartment.\n\nIn her apartment, I started cleaning her kitchen by taking everything out of her pantry. Everything that was expired went into the trash. \"If you can't remember using something in the last year, throw it away.\" She didn't have a big pantry so it didn't take me long to empty it. I cleaned all the shelves. Things had been placed randomly in the pantry before, so I discussed with Sinead how to organize the pantry and then put the remaining items in their right spots.\n\nNext, I cleaned out her refrigerator, again looking for expired items. It was small, not much bigger than what I had had in my dorm room. I cleaned all the shelves, put everything back and then cleaned the outside.\n\n\"For breakfast tomorrow, how does cinnamon French toast with minced berries sound?\"\n\n\"Savage.\"\n\nI cleaned the rest of the appliances, the counters and the sink, then swept the kitchen floor. While I cleaned, Sinead got out cleaning items for me and held the dust pan, but for the most part watched me work. I poured some hot water into a pot, added some white vinegar, and got on my hands and knees to scrub the kitchen floor. The kitchen area was small, so it didn't take long.\n\nOnce the floor was clean, I stood up and suddenly felt very tired. I staggered over to the couch and collapsed. \"I'm beat. Maybe it was all the walking or maybe it's the jet lag, but I'm exhausted. Please call a taxi for me. I can't walk to the youth hostel.\"\n\n\"Stay here. You can sleep on the couch.\"\n\n\"That would be great. I hope you don't mind, but I need to go to sleep now.\"\n\n\"Na, na, that's fine. I'm going to stay up for a while, but I'll try to keep the light to a minimum. The bathroom's down the hall. Here's the key. Go there, do what you need to get ready for bed, and I'll tuck you in when you get back.\"\n\nI dug out my toothbrush and went down the hall to a small, locked room with a toilet and a sink. I used the toilet, washed my hands, brushed my teeth and staggered back to Sinead's. It was like I had used up all my physical strength cleaning her kitchen and I could barely keep myself upright.\n\nI stumbled towards the couch, but Sinead steered me towards a small bed against the wall.\n\n\"I don't feel like digging out my extra blanket and sheets just yet, so I'll tuck you in here for now and move you to the couch later.\"\n\nI stripped down to my underwear and got into the bed. Sinead gave me a kiss on the forehead and soon I was fast asleep.\n\n* * * *\n\nI woke in the middle of the night. At first I was startled - I was in a room I didn't recognize in a sleep position I wasn't used to. I quickly remembered that I was sleeping at Sinead's. I had expected to wake up on the couch, but I was still in her bed. I was on my left side with my back against the wall and my left arm stretched out straight in front of me. Sinead was asleep in front of me, laying on her side and facing away from me. Her head was on a pillow partially laid on my arm. My right hand was on top of her side, a little above her waist. She was wearing a shirt of some sort, but the covers kept me from telling anything more. She had obviously chosen to sleep with me. Maybe she hadn't been able to rouse me to move me to the couch? Regardless, it felt good sleeping with her so close. I drifted back to sleep.\n\n* * * *\n\nWhen I awoke in the morning, Sinead and I were in the same positions. I laid there for a while, content to be this close to her.\n\nIt was crazy to think how we had gone in less than a day from strangers to sleeping together. Yesterday had been the best day of my life. I had never hit if off so well with a girl. Was she as attracted to me as I was to her? I decided to not push it, to let what happened happen. I would hate to ruin such a great relationship by making a move she wasn't ready for. As dinner last night had shown, I knew too little about Sinead and could easily do the wrong thing while trying to do the right thing.\n\nSinead woke, then quickly rotated onto her back and turned to face me. She smiled at me. God, she had such a dazzling smile. \"Last night, you didn't give me a chance to thank you for cleaning the kitchen. Thanks so much. You did an incredible job, far more than what I was expecting.\"\n\nWhen Sinead had rotated onto her back, my hand had come to rest on her stomach. As she thanked me, she slipped her fingers into mine. I took that as a very good sign.\n\n\"Good. You were a great guide yesterday and I wanted to express my appreciation.\"\n\nI stared at Sinead's face, drinking in her beauty. She had gorgeous dark brown eyes with long dark lashes and thin, dark brown eyebrows. Her nose was large enough to have character, but not too big. Her face was oval-shaped for the most part, with a pointed chin that nicely framed her smile. Her beauty seemed to pull me forward.\n\nI was starting to move my face towards hers when Sinead jerked on my hand to pull me close. She raised her lips towards mine then we were kissing. I kissed timidly at first, not wanting to rush anything. Sinead ran her left hand across my bare chest. I responded by running my hand across her stomach. I slipped my hand down and discovered she was wearing a long shirt of some sort that came down to her mid-thigh. I moved my hand down and softly stroked the bare skin of her lower thigh. Her skin felt so soft and smooth. Touching her made me rock hard.\n\nAs our hands explored, Sinead slipped her tongue into my mouth. My tongue wrestled with hers and then hers retreated so mine could follow into her mouth. I slide my hand up under her shirt and up towards her stomach. Sinead raised her bottom up so her shirt could ride up her body. Soon, I was running my hand over her trim, firm stomach while Sinead was running her fingers through my chest hairs, stopping occasionally to play with one of my nipples. Sometimes, she would quickly run her fingers through the hair on my head before returning it to my chest.\n\nI broke the kiss and went back to resting my back against the wall. I slipped my hand out of her shirt and laced my fingers in hers again. I had no doubt where this was going, but I couldn't resist savoring the feeling of being on the brink.\n\n\"I don't have a girl back in Boston. After my mom died, I went into a mild depression that lasted until January. I had a girlfriend when my mom died who wanted to keep the relationship going, but I told her that I wanted to grieve with my family. When I finally came out of the depression, I started planning this trip. It didn't make sense to begin a relationship when I was about to leave the country for over three months.\"\n\nSinead shook her head. \"Every other fella I've known would be groping me and pulling my panties off and you're telling me you don't have a girlfriend?\" She gave me a good-humored smile, then narrowed her eyes. \"Was that your way of asking if I have a fella?\"\n\n\"Yeah, but I did think you would like to know I was unattached.\"\n\n\"What if told you I've a fella who'll be home this afternoon?\"\n\nShe had said that in a teasing manner, so I decided to tease back. \"I'd feel bad for a few seconds, then I'd fuck your brains out.\"\n\nSinead laughed. \"Spoken like a true fella!\" She turned serious. \"When I graduated, I couldn't get a programming job. Most of my friends left Cork for places where they could find programming work like London and Germany. A friend of mine at Apple here in Cork promised me she'd get me a job there. So I took a couple of unsatisfying jobs and did volunteer programming. A few months after graduation, my friend got me an interview at Apple. It went very well and I was very excited. Then the hiring process dragged out for months. I went on a few dates during that time and they were flops. Three months ago, the Apple position came down to me and another person and they hired the other person. I was crushed. I decided to leave Cork as soon as I could afford to. So I haven't looked to start a relationship.\"\n\nSinead's face took on a determined look. \"Let me set some ground rules - I'm in charge. We do as much as I want to do and no more. When I say stop, we stop. When I say we need to leave, we leave. Understood?\"\n\n\"Understood.\" I'd agree with anything at this point.\n\n\"By the way, I looked up the four-loaf cleaver joke last night and it was really dumb.\" I chuckled. She raised up and gave me a quick kiss on the lips. \"Enough talking. I'm getting hungry and I'm looking forward to the cinnamon French toast with minced berries.\"\n\nI laughed. She pulled on my hand again and I fell forward to kiss her. Her tongue slid into my mouth. I dropped my hand down and brought it up under her shirt. She arched her back so I could raise my hand up high enough up to cup her tit. Sinead moaned into my mouth. Her right hand cupped my balls. We kissed and groped for a while. Sinead slipped her hand into my underwear and wrapped her hand around my cock. It felt so damn good.\n\n\"I'm going to explode,\" I said.\n\n\"Can't make a mess, can we?\"\n\nWith that, Sinead dived towards my crotch while pulling my underwear down so she could take my cock into her mouth. She bobbed her head up and down several times and then pulled up to swirl her tongue around my head.\n\n\"Jesus, that feels good.\"\n\nSinead slipped my cock out of her mouth, then dragged her mouth down one side of my cock and back up the other. As she returned to bobbing her head up and down, I threw the covers off of us the best I could do. Sinead slipped my underwear down my legs as she continued her ministrations.\n\n\"You're so good at that.\"\n\nSinead took my cock out of her mouth and said, \"I enjoy knob gobblin',\" before devouring it again.\n\nI tried to strip Sinead naked, but I couldn't manage it while she vigorously gave me head. I contented myself with my rubbing my hand over her pantie-covered ass.\n\nThe wonderful sensations overwhelmed me. \"I'm cumming!\" I cried. Pleasure exploded over me. It had been so long since I had sweet release like this. I shot my load down her throat. She kept bobbing her head up and down as she sucked down each spurt of cum. It was the best blowjob I had ever had.\n\nOnce I stopped cumming, Sinead stood up and started taking off her night shirt. \"I'm on birth control,\" she said as the night shirt cleared her head, exposing her beautiful tits to my view. \"So you don't have to worry about leaving anything behind in Europe.\" Her tits were a nice size; no sag as they stood proudly on her chest. She stripped off her panties, revealing a full but neatly trimmed light brown bush. As soon as she laid down on the bed, my head was between her legs. Her pungent aroma told me she was already wet.\n\n\"I like a fella who knows how to make a wan happy,\" she purred. I remembered that \"wan\" meant \"woman\".\n\nI was determined to do my best to make her happy. I ran my tongue up and down her slit to get a taste of her wetness. I liked the taste. I had always liked eating girls, getting them to squeal before fucking them. I made a wide circle around her clit to get the whole area excited. Then I explored her clit and the area around it with the tip of my tongue, listening to her breathing to try to figure out what she liked best. When her pants got regular and loud, I slipped my finger into her cunt. That brought a loud gasp. I pumped my finger in and out of her slowly while I made tight circles around her clit. As her juices coated my finger, I increased the speed. Her pants and gasps told me I was doing something right. It wasn't long until I felt her body bucking underneath me.\n\n\"Oh! Oh! Oh! OOOOOOOOOOHHHHHHHH!\"\n\nI held on lightly as Sinead's orgasm rocked her body. Once she had collected herself, I moved to take her in the missionary position.\n\n\"Stop,\" said Sinead. \"I'm in charge, remember. Lie down on your back.\"\n\nI laid down on my back as I was told. Sinead climbed on top of me, grabbed my cock and guided it into her as she mounted me. Being in her mouth had been great, but it was nothing like being in her cunt. She was tight, slick and hot. The pleasure was so intense as she slid herself up and down my cock. I grabbed her ass with both hands to help her fuck me.\n\nAs we fucked, I couldn't help but admire her beauty. Her skin was smooth and flawless. Her tits looked perfect to me as they swayed gently in rhythm with her body. Her gorgeous face looked even more attractive now that it was filled with lust.\n\n\"You're so beautiful,\" I told Sinead.\n\nShe gave me an impish grin and said, \"Shut up and fuck me good.\"\n\nI continued slamming her the best I could, but I couldn't get much leverage on the bottom. \"If a good fuck is what you want, let's try something different.\"\n\n\"What?\"\n\nThe couch being right next to us gave me an idea. I had Sinead stand up then bend forward to rest her head on the couch. I came up behind her and slid my cock into her cunt. We were in a standing version of doggie-style. She was tall enough that it was comfortable fucking her like this. I grabbed her hips and pulled them towards me as I plunged my cock into her. I went back to fucking Sinead steadily.\n\n\"I've never fucked in this position before,\" said Sinead.\n\n\"Neither have I. You inspired me.\"\n\n\"I like it. And I'm glad I inspired you.\"\n\nHer body was quite the inspiration. Her long, slim back was laid out before me and her long, beautiful hair was splayed out haphazardly around her shoulders. She felt so great as I increased the pace, fucking her faster and faster.\n\n\"Oh, Noel! Oh, God! I'm loving this!\"\n\nI loved it too. Standing up like this gave me a lot more freedom. I could feel my balls swinging back and forth as my hips rocked backwards and forward.\n\n\"Oh! Oh! Oh!\" Each time I slammed into Sinead, she said, \"Oh!\" Each slam made a wet slapping sound. It was such a delight fucking this wonderful girl.\n\nI fucked Sinead for a while with a steady rhythm. I was working hard at giving her a good fuck, panting and sweating. I knew I was close, so I picked up the pace and fucked her harder. The slapping sound got louder and my balls swung more and more.\n\n\"OH! OH! OOOOOHHHHHHH!\" yelled Sinead as she came. Her scream of pleasure tipped me over and I felt my balls explode with another cum. My hips slowed as I pumped shot after shot into her. I finally collapsed forward, wrapping one arm around her as I held myself up with the other.\n\n\"That was a great way to start the morning,\" I told Sinead.\n\n\"Now for the cinnamon French toast with minced berries.\"\n\n* * * *\n\nWe were waiting for the city bus to Blarney Castle when I asked Sinead, \"How many miles is it to Blarney Castle?\"\n\n\"Kilometers. It's about eight kilometers.\"\n\n\"Oh. Okay.\" I thought for a moment. \"How many miles is eight kilometers?\"\n\nSinead shook her head. \"Catch up with the rest of the world.\"\n\n* * * *\n\nThe grounds of Blarney Castle were quite large, but the castle wasn't. The Blarney Stone was set in a wall below the battlements of Blarney Castle. Though we had arrived early, a good-sized line had already formed to kiss the Blarney Stone. To kiss it, you have to climb to the top of the castle and then lean backwards while holding on to a couple of iron bars. Sinead told me that long ago to kiss the Blarney Stone, you had to be dangled by your ankles over the castle wall. Did I really want to kiss a rock that all of these people in front of me had slobbered on? Of course! Everyone back in Boston would give me such grief if I visited Ireland and didn't kiss the Blarney Stone.\n\nSinead and I chatted with other people in line as we waited. Sinead was wearing a simple white blouse which emphasized her lean body and ample tits, and a gray knee-length skirt which nicely showed off her small, firm ass. I was in a great mood. Sinead raved about the breakfast I had made her.\n\n\"So I'm your fella now?\" I whispered into Sinead's ear. She had described me as \"me fella\" in the last conversation.\n\nShe blushed and then whispered back, \"It sounds a lot better than the fella I met yesterday. I can't believe I met you only yesterday. Do you mind?\"\n\n\"No, I'm glad,\" I said in a normal voice. \"What fella wouldn't be?\"\n\nThat got me a big smile and a kiss. \"I really like you,\" said Sinead.\n\n\"And I really like you.\"\n\nAs we continued in line, Sinead asked me, \"Have you sent a postcard to your sisters yet?\"\n\n\"No. I hadn't thought about sending them a postcard.\"\n\n\"You should. You should send them one every day. You're off having a great adventure in Europe and they're stuck at home.\"\n\nI shrugged noncommittally.\n\nEventually, we made the climb up the castle. Sinead helped me bend backwards to reach the stone. It seemed like every other rock I've ever kissed - not that I've kissed many rocks - and I didn't feel any different after kissing it.\n\n\"You were full of malarkey before,\" said Sinead once we were by ourselves. \"You're going to be even worse now.\"\n\nI bowed. \"And all the Irish girls love malarkey. Or at least the only one I care about does.\"\n\n* * * *\n\nSinead and I hiked along a trail through the castle grounds while holding hands, stopping regularly to take pictures. My legs were a little sore from all the walking yesterday and it felt good to stretch them out. A beautiful day to be in a beautiful place with a beautiful girl.",
        "\"What's with the you're-the-one-in-charge bit?\" I asked.\n\n\"The fella is always in charge. It was fun to be charge in bed for once.\"\n\n\"But there's more to it than that.\"\n\nSinead shrugged. \"Yesterday, I had planned to be your friendly tour guide for only a few hours. Then I wanted more.\" Sinead blushed a little. \"But I knew nothing about you. If you had demanded that you be able to tie me up and have anal sex with me, I wanted no problems when I refused.\"\n\n\"I'm not into weird stuff. I just want to have fun, and I have a lot more fun if you're having fun too.\" We continued down the path, the dirt crunching under our feet. \"Has somebody demanded that of you?\"\n\n\"Na, na. He didn't demand it, but he did pressure me hard and then offered me a lot of money to do it. It was a scary, unpleasant time.\"\n\n\"I can see that.\"\n\n\"But the everyday things can be almost as bad. I'm very organized. I have a list in my head of all the things that need to be done. Do you know how long we have to walk around here before we have to catch the bus to get me to work on time?\"\n\n\"No clue.\"\n\n\"I do. When we did the tour yesterday, I had a list of places to go in my head, how long each would take and a rough map of where everything was located. I got you through the sights most efficiently.\"\n\n\"I kind of noticed that. You did a great job. Thanks again.\"\n\n\"So when I tell a fella it's time to go and he shows me he's in charge by saying there's time for another pint, it makes me angry. I feel disrespected.\"\n\n\"I'm easy, Sinead. If you want to be in charge, you're in charge. If you want to sing me lullabies at night, sing away. The happier you are, the happier I am.\"\n\nSinead squeezed my hand. \"That's good to hear. I need easy right now. I hate feeling out of control and I've felt that way since I graduated.\"\n\nWe walked in silence down the path to a fork. We were at a small triangle-shaped lake. We took the left fork which was longer but had more trees. I kept smiling all the time. The grounds were lovely and the flowers in bloom were pretty, but I knew I was so happy because I was holding hands with Sinead. Normally, I didn't like big silences but I was floating on a cloud and didn't feel like struggling to come up with something to talk about.\n\n\"I need a programming job,\" said Sinead. \"I'm a programmer. Programmers get a lot more respect than waitresses. The last couple of fellas I've gone out with couldn't accept that I was a programmer and kept treating me as a waitress.\"\n\n\"Well, they were stupid. You haven't gotten paid yet for your programming, but that doesn't determine the quality of your code. What matters with programming is can you solve the problem in an efficient, robust manner and it sounds like you've done that twice.\" Sinead squeezed my hand. \"How are we doing for time?\"\n\n\"We're doing fine.\"\n\n\"Do we have time to stop at the gift shop for a postcard?\"\n\n\"If we pick up the pace a bit,\" said Sinead. Then she shouted, \"Race you!\" as she took off running down the path.\n\n* * * *\n\nOne thing I enjoyed about Sinead was that she never asked about \"us\" or \"the future\". I didn't know how long I would be in Cork - it depended on how my mission went. I could be ready to go somewhere else tomorrow evening. Most of the girls I had gone out with would be pestering me now about how much longer was I going to be with them and what would happen when I left. What was the point of worrying about questions that had no answers? My favorite Bible verse is the one about worry not about tomorrow, for today has enough troubles of its own. With Sinead, I just wanted to enjoy being with her now.\n\nWe went back to Sinead's apartment for her to change for work. Sinead gave me a list of places to visit while she was at work. I had intended to spend my second day in Cork working on my mission, but it was too late in the day to start. I stopped at the first few places on her list, but touring Cork wasn't nearly as fun without her. I gave it up, found a park where I could sit in an area with wifi and did stuff on my tablet. What I really did was think about Sinead.\n\nI'd always thought \"love at first sight\" was a myth, a literary shortcut to get two characters in love without wasting time showing them actually falling in love. It wasn't love at first sight with Sinead, but it was close. I hadn't felt anything special about her when I first saw her and I wasn't in love, but I had fallen for her in record time. She made me happy like no other woman had ever had. She was everything I wanted in a woman and more. I was trying to keep my feelings for her in check as I knew I'd be leaving her and Cork soon. Once I was traveling, I'd hopefully find another girl, preferably a tourist like me. However, my mind kept coming back to how I could extend my relationship with Sinead. Maybe she could come visit Boston once I went home? I wouldn't have any vacation time to spend with her for a year. Could she come over for Christmas and New Years? She'd certainly want to spend Christmas with her family. Maybe she'd like to come take a week vacation for me once I had some? That would be fifteen months from now - both of us would probably be dating someone else by then.\n\nI went back to the apartment in a sour mood and waited for Sinead. When she got home, she wasn't in the mood for lovemaking. \"I'm never fit company when I finish work.\" I guessed she got a lot of unwanted attention at work, guys who'd leave her a big tip and then ask her out to dinner. Instead, we sat on her couch and did stuff on our tablets until we were ready for bed.\n\nOnce we were under the covers, Sinead sat up and sang softly:<br><blockquote>Lullaby, lullaby,<br>Sweet little baby,<br>Don't you cry.</blockquote><br>I had laughed after the first line, but I listened quietly to the rest of the lullaby. Sinead had a good singing voice. When she was done, she gave me a soft kiss on my forehead before snuggling into my shoulder.\n\n\"You're a silly goose,\" she said softly, \"but you make me happy.\"\n\nI felt a delicious glow as I fell asleep.\n\n* * * *\n\nThe next morning, we made love. We finished with me sitting up on the couch while Sinead rode me while facing me. I loved watching her tits bounce as we fucked. It was a position I had seen many times in porn but neither of us had tried it before. We seemed to bring out the adventurous in each other.\n\n\"I'm going to my other job today,\" announced Sinead. She seemed embarrassed. \"Twice a week, I'm a toilet attendant.\" She rushed on. \"It's an easy job that pays decent and without it, I couldn't afford this flat.\"\n\n\"But you didn't grow up dreaming of being a toilet attendant?\"\n\n\"Na, na. But you have to take life as it comes.\"\n\nI was fine with being on my own today as it was time to work on my mission. All I knew about my mom's life before she came to the U.S. was her date of birth, her maiden name of Margaret Murphy, she was born in Ireland and that she had had a Cork accent. She had refused to discuss her life in Ireland. My mission was to find out about it.\n\nIn January, Dad had suggested I go to Cork and find out about my mom's Irish life. I was beginning to come out of my depression and the thought of having a mission helped pull me all the way out. My mom's death had been so meaningless. She had been a chemical technician at a small chemical company. Somebody had stored some chemicals incorrectly and the subsequent explosion had killed her. The coroner had said chemicals had sprayed all over her body and then burnt her to death. When Dad suggested the trip, he pointed out that Mom would have never tolerated me going to Cork to poke around. We both had felt that if I could find out her history, why she left and maybe meet her family; it would give some meaning to her death.\n\nI hadn't mentioned my mission to Sinead because I believed Mom had left because of some scandal. I wanted to find out why she had left without stirring up the scandal again. It was probably stupid to keep my mission a secret, but I didn't see how keeping it a secret could hurt.\n\nMy mother had been nineteen when she arrived in Boston. Schooling in Ireland is similar to the Harry Potter books in that children went to a primary school and then a secondary school - the equivalent of Hogwarts - when they turned thirteen. It's five to six years to finish secondary school as it is common to skip the fourth year. So Mom would have been a recent secondary school graduate or possibly one year out of school. Sinead had graduated from college one year before me even though she was two years (and two days) older than me because she hadn't skipped her fourth year.\n\nMom had met Dad three months after she arrived and I was conceived two months later. My parents married when Mom was seven months pregnant. As I was now 22, which meant Mom had finished primary school 23 or 24 years ago.\n\nI had copies of three of Mom's engagement photos. She had been very attractive then with light brown hair and brown eyes. The pictures were only of her face as Mom and Dad hadn't wanted her pregnant belly in the pictures. Based upon my short time in Cork, she looked like she came from the Cork area with hair, face type, and body style similar to a lot of the people I've seen. Her Cork accent had almost disappeared before her death, but her accent when I was kid was like Sinead's.\n\nMy plan was simple - go to the secondary schools in the Cork area, look at their yearbooks from 23 to 25 years ago and look for pictures of Margaret Murphy which were similar to Mom's engagement photos. I would say I was looking for a friend's dad's picture. No one should notice that I was digging around into Mom's possibly scandalous past. Once I knew her school and the names of some her classmates, I would figure out what to do next.\n\nIrish secondary schools were in session in May. I dug out a folder from my backpack which had Mom's photos, a list of Cork secondary schools and a map of where they were located. I found the closest one and figured out how to get to it. I then made my lunch, put everything I needed in my daypack and set off.\n\n* * * *\n\nI entered the secondary school and went into the school office.\n\n\"Hello, my name is Noel Vaupel,\" I said to the school administrator who greeted me, a woman who looked to be around sixty. \"I'm an American visiting Cork. The father of a friend of mine is from Cork and he would have graduated from secondary school 23 or 24 years ago. I promised my friend that I'd try to get some pictures of his dad from his yearbook. Could I please see your yearbook from 24 years ago?\"\n\n\"A yearbook?\" she asked with a confused look on her face\n\n\"Yes, your yearbook. Do you have your yearbooks from back then?\"\n\n\"What's a yearbook?\"\n\nWe were off to a bad start. \"It's a book published by the school which has a picture of every kid who attended that year. It has pictures of teams and clubs too. You have something like that, right?\"\n\nShe gave me a look which made it clear she I thought I was spouting gibberish. \"Na, na,\" she said very slowly. \"We don't have anything like that.\"\n\n\"You don't have something you give the kids as a memento of their year here?\"\n\nShe continued to look at me with total incomprehension. \"Na, na. We don't give them any mementos.\"\n\n\"Would other secondary schools have yearbooks?\"\n\nAnother blank stare. She slowly shook her head before saying, \"Na, na. Not that I'm aware.\"\n\n\"Well, thank you very much.\"\n\nI went outside, not knowing what else to do. My plan had seemed so clever back in Boston. It had never crossed my mind that Irish secondary schools wouldn't have the equivalent of yearbooks.\n\nMaybe other secondary schools did. I didn't have any other plan, so I decided to continue with my old one and hope for better luck at the next school.\n\nAt the next secondary school, I got the same look of total incomprehension. I went to a third secondary school and got the same response. I got the feeling that I would have had better luck if I had asked about what druidic rituals the students had done 25 years ago.\n\nI went to a library and tried to think of alternative plan. Could I call up people named Murphy and ask them if they knew of a Margaret born 42 years ago who had moved to Boston when she was 19? How common of a last name was Murphy? I asked my dear friend Google and found out \"Murphy is the most common and widespread name in Ireland, especially in County Cork.\"\n\nFuck!\n\nI should have known all this before I came here. I should have asked people in Boston if my plan made any sense. But I had been so smart, so secretive.\n\nFuck! Fuck! Fuck!\n\nThere was no point in worrying about it now. It was almost three and Sinead would be home a few minutes after five. I wanted to have a great dinner waiting for her. My favorite Weight Watchers recipe was for Steak Diane and I had made it numerous times for my parents to celebrate their birthdays and anniversaries. I was going to make it tonight for Sinead. I had to figure out a couple of sides. Perhaps a bottle of wine to go with it. Sinead didn't want me to take her to an expensive restaurant, but I could make her that quality of a meal. After dinner, I'd ask her for ideas on how to find Mom's past.\n\n* * * *\n\n\"That was incredible,\" said Sinead after she finished the last bite of steak. \"I don't think I've ever had a better meal.\"\n\nI smiled, pushed my chair away from the table and leaned back into it. I felt satisfied - the meal had turned out as I had hoped and Sinead had raved about it the whole time we ate. \"Well, I think you are incredible and wanted to make a meal that would make you happy.\"\n\n\"Happy?\" Sinead pushed her chair back and stood up. \"You don't make me just happy, you know.\" She walked around the oval-shaped dining table. \"You make me crazy.\" She sat on the edge of the table in front of me. \"Do you know who I thought about all day today?\" She started doing something with the top of her dress.\n\n\"The Pope?\"\n\nSinead snorted. \"You. I have known you for three days now and I can't stop thinking about you.\" Whatever she had done had loosened the top of her dress and she pushed it down. \"Let me show how happy you make your crazy woman.\" Sinead unhooked her bra and tossed it across the room. \"Come suck your crazy woman's tits.\"\n\n\"You're in charge,\" I said as I stood up.\n\n\"That's right,\" Sinead said as she guide my mouth to her right tit. \"And don't you ever forget it.\"\n\nAs I sucked on her right tit, I cupped her left. I loved the feel of her tits. Her tit perfectly filled my hand.\n\n\"Oh God, Noel. You get me so hot.\"\n\nI took that as a challenge to get her hotter.\n\nI released her tit and kissed her, ramming my tongue into her mouth. I put my arms around her to support her back as I slowly tilted her backwards. She fought me at first, then relaxed. I kept one arm around her back and used the other arm to clear the table behind her the best I could. Sinead kept pushing her dress top down until it was bunched up around her waist. I broke off the kiss and started nibbling on her neck while grinding my crotch into hers. She was lying back far enough that she could support herself on the table using her elbows. I kept one arm around her back to support her while using my other hand to steady her as I dry humped her crotch.\n\n\"This is so crazy,\" she said. \"So fucking crazy.\"\n\nI had no plan in mind. All I knew was that I wanted this sexy woman here and now.\n\n\"Stand up for a sec,\" Sinead told me.\n\nI stood up while keeping my crotch pressed into hers. Sinead twisted while continuing to mostly lie on the table and grabbed the bottle of red wine. She poured a little wine over her right tit. \"I've spilled, Noel. Would you lick that up please?\"\n\nThe wine was running down her chest and heading towards the dress bunched around her waist. I intercepted it with my tongue and then slowly licked up her chest until I reached her tit, which I sucked into my mouth.\n\n\"I feel another spill coming on.\"\n\nI released her nipple and pulled back to watch her pour some wine on her left tit. I watched it run down her chest until it got close to her dress, where once again I intercepted it and followed it with my tongue back to her tit.\n\n\"My dress is going to be such a mess. Let me take it off.\"\n\nI backed away from the table. Sinead stood up, stripped off her dress and her panties. As she got back onto the table, I took my clothes off.\n\n\"I see another wine spill about to happen,\" said Sinead as she grabbed the wine bottle again. This time, she guided the bottle downward and poured a small amount of wine between her cunt lips. \"Lap that up, won't you?\"\n\nI dived in like a man desperate for fluid. Sinead was sopping wet. The wine and her juices made for an interesting flavor combination. I licked and sucked, licked and sucked while removing glasses and dishes from the table the best I could. Sinead was fully stretched out on the table with her butt right at the edge of the table and her legs bent sharply at the knee. With my arms, I supported her legs the best I could.\n\nAfter a couple of minutes, she grabbed my ears and pulled me up. \"Fuck me. I need to be fucked right now.\"\n\nI stood up, lined up my cock and plunged into her. She was so wet that I easily slid all the way in.\n\n\"Oh, God!\" she moaned.\n\nSinead arched her back and reached above her head to grasp the edge of the table. She was the perfect combination of beauty and animal lust. I grabbed her hips with both hands and slammed into her. The table squeaked beneath us. I pulled back and slammed, pulled back and slammed. I quickly fell into a rapid rhythm of fucking.\n\n\"Oh! Oh! My God, aye! Oh!\"\n\nI moved her legs into different positions as bending them sharply looked uncomfortable. I slipped my arms under her knees and spread her legs out wide. I let her feet hang down below the table top as I supported her legs with my arms. I eventually raised her legs straight up so that her feet were above my shoulders. The table squeaked, squeaked, squeaked as I continued to pound her hard.\n\n\"Oh God! Oh! Oh! Oh!\"\n\nThis fuck was the wildest and most intense in my life. I hoped it was as awesome for Sinead as it was for me and that she would be cumming soon as I knew I wouldn't last much longer.\n\nThankfully, Sinead's moans rose in pitch. \"Oh! OH! OH! OOOOOHHHHHHH!\"\n\nI felt her cunt tighten on my cock. At the same time, I felt my balls tingle and then I was cumming too. Squeak, squeak, squeak went the table in time with my spurts.\n\nWith my cock still buried in Sinead, I leaned forward and wrapped my arms around her. I lifted her off the table and staggered the few feet to the couch. I flopped down on my back as slowly as I could with Sinead above me.\n\n\"That was craziest thing I've ever done,\" said Sinead.\n\n\"It was the most memorable meal I've ever had.\"\n\nSinead gave me a small punch on my chest. I continued to hold her in my arms. She felt so good next to me. She burrowed in a bit, putting her head on my shoulder.\n\n\"This last few days have been so crazy,\" said Sinead. \"Noel...I want to ask you...Well, I should tell you something first. I didn't meet you by accident in the English Market.\"\n\n\"You didn't?\"\n\n\"Na, na. Let me back up. When I didn't get the job at Apple, I decided to move to Boston as soon as I could save enough money. I know it's very expensive to live in Boston and I was worried about how I could afford to stay there. So I came up with the idea of trying to befriend Yanks from the Boston area. Take them round, be friendly with them. Then I'd ask if I could stay with them when I moved out to Boston.\"\n\n\"Sounds reasonable.\"\n\n\"Three days ago, a friend of mine called to tell me that this cute fella wearing a Boston College shirt was headed towards the English Market. She kept an eye on you until I could get to you. Normally I would never walk up to a fella and start talking to him, but you seemed like a golden opportunity.\"",
        "\"I am. 'Golden Opportunity' is my middle name.\"\n\nSinead chuckled. \"You're so silly. Here's the thing.\" Sinead shifted so she could look me in the eye. \"I don't wait to stay with you in Boston. I know this is really rushing things, but I want to live with you in Boston.\"\n\n\"Live with me?\"\n\n\"Aye, as me fella. I probably should have waited to bring this up, but I kept thinking about it while you were fucking me. I want to be able to do crazy things with you every night.\"\n\n\"I'll have to talk to my roommate.\" I barely knew my roommate Doug. He was a friend of a friend of a friend who had a job near where I was going to work. We had gotten the apartment together in May, I had slept there a few nights between when classes ended and I left for Ireland. We hadn't discussed the possibility of girls moving in. He may want me to move out and find a replacement roommate. Which I would be happy to do if it meant I got to live with Sinead.\n\n\"Can you call him now?\"\n\n\"No. I didn't bring my phone with me.\" Roaming charges would have made carrying my phone cost-prohibitive.\n\n\"You can use my phone.\"\n\n\"I don't know his number. Don't worry about it. We'll fly to Boston together, I'll introduce you to Doug and once he has met you, we'll bring up that you want to live with me. What we need to do now is get you a ticket for my flight.\"\n\n\"I've wanted to go to Boston all my life, and now I'm going to do it.\"\n\n\"Why have you wanted to go to Boston?\"\n\n\"To find my mam.\" Sinead jumped off of me and sprinted over to her small desk. I admired her long legs, firm ass and strong back. \"I'm adopted. My birth mam was a single mother. She never told anyone who my father was.\" Sinead took an unmarked binder off the top shelf of her desk and opened it on her desk. \"When I was about a year old, she turned me over to my grandmam and flew off to Boston. No one has heard from her since. Her cousin Noel and his wife eventually adopted me and I call them Mam and Dad, but they aren't my parents.\" I stood up and walked towards the desk. Sinead pointed at a 8 1/2 by 11 picture in a clear sleeve that was the first page in the binder. \"Here's a picture of my mam with me. Her name is Margaret Murphy.\"\n\nI recognized the face instantly. I had a similar picture in a similar binder in my backpack. It was my mom.\n\nAnd that meant Sinead was my half-sister.\n\n\"I have lots more pictures of her.\" She started flipping pages. \"Do you think I look like her?\" I didn't answer as I was in a state of shock. \"I think I have a little of her looks, particularly her nose.\"\n\nI had just fucked my half-sister.\n\nSinead kept flipping pages. Occasionally, she said where the picture was taken or who else was in the picture. I said nothing as I had no idea of what to say. My mother kept getting younger in the photos. I recognized a lot of the looks in the photos - here was Mom laughing her laugh, here was Mom upset that someone was taking her picture without her permission, here was Mom with her \"smile for the camera\" fake smile.\n\nI had just agreed to have my half-sister live with me.\n\nI stood dumbstruck as she went through all of the photos. \"So I've always wanted to go to Boston to find her, to tell her that I forgive her, to tell her that I want to be her daughter and her to be my mam.\" She looked up from the pictures to me. \"Finding her is the most important thing in the world to me.\" Sinead gave me a hard hug. \"And I'm finally going to be able to thanks to you.\"\n\nI didn't hug Sinead back as my mind was in a whirl. Then I had a new thought - Whoa! Whoa! You're jumping to conclusions!\n\nMy mom was a great mom and she never would have abandoned me or my sisters. If Sinead was her child, she would have brought her to Boston.\n\nAnd wouldn't Dad had known if Mom had had a baby before? Seen some telltale signs of a prior pregnancy? I didn't know what. Dad had been very honest about his relationship with Mom when he suggested that I go to Cork, so I'm sure he would have told me if Mom had been a mother prior to my birth.\n\nAnd come on - Ireland has over 4.5 million citizens. It's implausible that literally the first person I talked to would be my secret half-sister.\n\nSinead's mom was probably only someone who looked a lot like my mom with the same name. I had already found out that Murphy is the most common name in County Cork. Margaret was probably also a very common first name. Both women looked alike because they both wore the same hair style, which was probably a popular hair style in Cork at the time. Similar looks in pictures taken over a year apart proved nothing.\n\nI was certain that if I found out any facts about Sinead's mom like her birthday, they would prove Sinead's mom wasn't my mom. I couldn't ask Sinead what her mom's birthday was as it would sound weird and she'd ask why I wanted to know. Now that Sinead had told me about her mom, she probably soon tell me more about her. Until then, I wasn't going to worry about it - the odds were prohibitively against her mom and my mom being the same person.\n\nMy thoughts were interrupted when Sinead said, \"Look, I'm guessing you've done all you want to do in Cork. How would you like to go to my parent's farm? It's an hour bus ride from here. I could show you around where I grew up.\"\n\n\"That sounds great.\"\n\nThat would be great - a chance for me to discretely find out for sure if Sinead's mom and mine were different people.\n\n\"I have to warn you that my mam's a prude. We aren't going to be able to sleep together. She's not going to understand my wanting to live with someone I met three days ago. Would you mind if we pretended we're just friends?\"\n\n\"No, that'd be fine.\"\n\n\"My dad has hinted he would help me out financially if I ever moved away from Cork. But the money would be from my mam as she controls the purse strings. For most of the day tomorrow, my mam will be at a weekly charity event she goes to so I'll be able to introduce you to my dad and ask him for money without her around. I'll show you around the farm and the town, and it will be a lot of fun. When my mam and my brothers get home, we'll have to be civil to them. Don't defend me or get in a fight with them! I'll be the dutiful daughter, have a civil but unpleasant evening with my family and we'll come back here first thing the next morning.\"\n\n\"You're in charge.\"\n\n\"Thanks. I don't feel in charge around my mam or my brothers.\"\n\n\"How many brothers do you have?\"\n\n\"Three. They're much younger than me. All of them are in secondary school. We fight a lot, but it's not serious - typical sibling tussles. It's my mam that I can't stand. I've always been a disappointment to her. She had wanted a girlie-girl who would wear frilly dresses, play with dolls and be best friends with all of the girls nearby.\"\n\n\"And you weren't that way?\"\n\n\"Na, na. I didn't want to play with dolls, I wanted to operate farm equipment. I've always gotten along better with boys than girls. When I was thirteen, I kissed a boy for the first time and that opened up a whole new battlefield. We've always butted heads.\"\n\n\"Going to your parent's farm sounds like a great way to see more of Ireland.\"\n\n\"One last thing - I haven't told anyone in Cork that I'm adopted. Being abandoned by your mother is very hard to talk about. So don't mention it to anyone. I only told you because I'll need your help to find my mam in Boston.\"\n\n* * * *\n\nThe next morning when we woke, Sinead wiggled her ass on my cock. I kissed her and ran my hands over her body. As we made out, part of my mind was deciding that it had been ridiculous to have thought we had the same mom. As I ate Sinead out, I wondered at my taking the idea seriously the night before. There was no way, I decided, this hot Irish babe that I was fucking doggie-style could be my half-sister. When we were done, I thought about telling Sinead about this crazy idea I had had the night before, but I didn't know if she would think it was funny.\n\nOn the bus ride out to her parents, Sinead called her dad and told him when we would be arriving. He agreed to pick us up, as the farm was a long walk from town.\n\n\"When I say I'm going to Boston, the elephant in the room will be my birth mam,\" said Sinead. \"None of my family will approve of me going to look for her. I'm not going to bring it up. Hopefully, they won't bring it up as well.\"\n\nWhen we got off the bus, Sinead ran over to her dad and gave him an enthusiastic hug.\n\n\"Dad, this is Noel Vaupel.\"\n\nI shook hands with Sinead's Dad. He was tall and thin with short blond hair that was graying. Strong handshake, no warmth in his smile. He seemed to spend a lot of time looking me over.\n\n\"I met him a few days ago. He's a Yank. I showed him around Cork for a wee bit and I offered to show him around our farm. In return, he's offered to let me stay with him in America until I can get established.\"\n\nWe headed towards his car.\n\n\"Where you from?\" asked Mr. Hayes.\n\n\"Boston.\"\n\n\"Many kids named Noel in Boston?\"\n\n\"No. I'm the only one I know of.\"\n\nHe was quiet after that until Sinead asked for the latest farm news. I listened to them talk.\n\n* * * *\n\n\"This is the farm's newest tractor,\" said Sinead.\n\nIt was huge. I climbed up the long ladder up to the cab. I had no idea tractors were this big. Sinead scrambled up behind me. There were two seats in the cab. I sat down in the passenger seat and Sinead sat in the driver's. She told me the specs for the tractor and all of the state-of-the-art features it had. I was amazed.\n\n\"Can I take him for a ride?\" Sinead called down to her dad.\n\n\"Na, na. I need to prepare a field for planting. I'll take you both out.\"\n\nSinead sat down on my lap. I wanted to give her hug, but I remembered we were to be just friends.\n\nMr. Hayes fired up the tractor. The engine roared and the whole tractor throbbed with power. How many pickups could it out pull simultaneously in a tug of war? We backed out of the shed and started down a road that led out to the fields. Mr. Hayes came to a sudden stop.\n\n\"Sinead, I left my phone in my office and I'm expecting an important phone call. Would you run and get it for me please?\"\n\n\"Dad, it's a long way from here to the office.\"\n\n\"I know, darlin'. Please?\"\n\n\"Okay, Dad\".\n\nSinead hopped off my lap, opened the door and gave me a look that she knew something was up. She climbed down the ladder and jumped to the ground.\n\nAs soon as she started running towards the house, Mr. Hayes said, \"You're Noel Liam Vaupel, son of Margie Murphy, my cousin.\"\n\n\"I am Noel Liam and my mother's maiden name was Margaret Murphy, but I doubt she was your cousin.\"\n\n\"She is. She named you after me. She used to send me a picture of you once a year with a letter. I still have the last picture of you she sent. You were probably around nine or ten.\" He rattled off a string of facts to prove that my mom was his cousin - Mom's birthday, my birthday, which toe of Mom's was angled funny because she broke it as a child. \"How she's doing?\"\n\n\"She's dead. Died a year and half ago in an industrial accident.\"\n\n\"I'm sorry to hear that.\" He looked away for a while. \"And you came here to meet her family?\"\n\n\"I came here to find out about her history. She never said anything about her life in Ireland.\"\n\nMr. Hayes nodded and then yanked his head towards the house. \"Sinead's your half-sister.\"\n\nMy guts twisted into a ball. I couldn't deny it now.\n\n\"You're going to help her live in Boston?\"\n\n\"Yeah. I'm going to arrange for her to stay at my dad's. He has an empty bedroom now that I'm out of the house.\" That was the story Sinead and I had agreed on to cover how involved we were.\n\n\"Good. She has no future here in Ireland.\"\n\n\"Why did my mom leave Ireland? Why didn't she take Sinead? Why didn't she try to contact Sinead?\"\n\n\"I can tell you what I know, but you have to make me some promises.\"\n\n\"Okay.\"\n\n\"First, you have to promise to take Sinead to Boston.\"\n\n\"She's already talked to you about money.\" I had gone for a walk around the farm to give Sinead some time to talk privately with her dad. \"She's going to buy her plane ticket today. We'll fly to Boston together when I'm done touring Europe.\"\n\n\"Good enough. Once you get to Boston, tell her what I'm about to tell you. Not a moment sooner.\"\n\n\"Okay.\"\n\n\"And tell her to never come back to Ireland. There's no future for her here. She'll be much happier in Boston.\"\n\n\"That's...harsh. Really?\"\n\n\"Really. Promise it or I'll tell you nothing.\"\n\n\"I promise.\" Like I have a choice.\n\n\"Swear by all that is holy.\"\n\n\"What?\"\n\n\"Swear by all that is holy.\"\n\nMan, he was serious. I held up my right hand. \"I swear by all that is holy that I'll take Sinead to Boston, that I'll tell her what you are about to tell me once we are there and no sooner, and that I'll tell her she's to never come back to Ireland. So help me God.\"\n\n\"All right.\" He let out a big sigh. \"I'm Sinead's biological father. When I was nineteen and Margie was fourteen, we were at a family gathering. I've always been good with machinery and animals, but not so good with people. For whatever reason, Margie took a shine to me. We slipped away from the family to do something and the next thing I knew she was kissing me. She was so beautiful, the prettiest girl for kilometers. One thing led to another and we were soon no longer virgins. I knew it was wrong, but I couldn't resist her. After that, we would get together once every week or two. She was on the pill, so we didn't have to worry about her getting pregnant. Each time, I would try to resist her. Each time, she'd smile at me, touch me and then I had to have her. Our affair lasted for three years.\"\n\n\"I graduated from University and got a job on this farm. The farmer's two eldest sons had moved to Dublin. He was afraid his daughter Maeve was going to do to the same. Maeve was the same age as me. The farmer encouraged me to court Maeve and when Maeve agreed to go on a date with me, I told Margie that we were definitely finished. Maeve and I got along well and soon we were engaged.\"\n\n\"I was heading to town one day when I saw Margie walking along the road. A spring rainstorm had caught her by surprise and had soaked her. I decided to give her a lift home. Once she got in my car, it was like old times - I couldn't resist her. She got my blood boiling, then I was between her legs, pounding away. Maeve has never filled me with lust like Margie could.\"\n\n\"I felt bad about cheating on Maeve, but I eventually shook it off as my last fling before married life. But Margie hadn't mentioned she had stopped taking birth control after we broke up. At my wedding reception, she whispered in my ear that she was pregnant with my child.\"\n\n\"It was a nightmare for me. If Maeve found out that I had knocked up my cousin while I was engaged to her, my marriage was over. Margie eventually got so big that it was obvious she was pregnant. Her mam demanded to know who the father was. Margie refused to tell her. Your grandmam is a real hellion...\" My grandmother? It was hard for me to remember that this was a story about my mother as it sounded like a completely different person. \"...and their fights were the talk of the town. Her mam would scream at Margie loud enough for the neighbors to hear that she had dishonored the whole family. Margie would scream back just as loud that it was none of her damn business. I prayed every night that Margie would keep our secret.\"\n\nMr. Hayes swallowed deeply. \"One day while Margie was out of the house, your grandmam found some love letters I had written to Margie. Margie had told me that she had destroyed them, but she had instead hid them someplace where she felt her mam would never find them. Your grandmam invited me over to repair something and confronted me with the letters. I confessed everything. When Margie got back, your grandmam told Margie that she knew all. Margie said that she loved me, that she was thrilled to be having my baby and that she would have more of my babies. I had thought their screaming matches had been intense. Their whispered fight that happened afterward was ten times worse.\"\n\n\"Your grandmam forbid me from seeing Margie again.\" He sighed. \"You have to understand that my family was poor and had been for generations. I had married into money and was using my position to help the other members of my family. Margie was threatening to not only ruin my marriage, but to bring down financial ruin on our whole family.\"\n\n\"I don't know what happened between Margie and your grandmam after that. Sinead was born and before she was a year old, Margie turned her over to your grandmam and flew off to Boston. Your grandmam told everyone she would never return and she didn't. Your mam never discussed it in her letters to me. I always destroyed a letter as soon as I read it, but I kept your picture until the next one.\"\n\n\"Maeve took a liking to Sinead - she was a cute baby - and felt that she needed a better home than what your grandmam could provide. She talked your grandmam into letting us adopt her. Maeve has tried to be a good mother to Sinead, but Sinead has never appreciated all that Maeve has done for her. She's always been fascinated with Margie, asking people for stories about Margie and pictures of Margie. She's always made it clear that one day she would go to Boston to find her. For a few years while Sinead was in secondary school, she stopped calling Maeve 'Mam' and called her 'Maeve'. That hurt Maeve badly. I finally convinced Sinead to go back to calling her 'Mam'.\"\n\nMr. Hayes sighed. \"Still, the damage is done. Sinead and Maeve fight like cats and dogs. Kids need a lot of financial help now days to keep their heads above water, but Maeve refuses to help Sinead. I think I can convince Maeve to help Sinead financially to move to America, but it's going to be a tough sell.\" His voice took on some extra urgency. \"But that doesn't matter. Sinead has to go. She has to leave Ireland. If I can't get money from Maeve, I'll borrow some from friends. Sinead has to get on the plane with you as you promised me.\"\n\n\"She'll be on that plane.\"\n\nAfter that, we were quiet. I watched Sinead in the distance jog towards us. Mr. Hayes' story was a huge amount for me to digest. My world had been turned upside down. My mother had not been the person I had thought she was.\n\n\"Does anyone else know about you and my mom?\"\n\n\"Now that your mother's dead, only you, me and your grandmam.\"\n\nI wasn't surprised. At the same time, I wished there was someone else to talk to. Maybe my grandmother? How could I get some time alone with her?\n\n\"My mom stopped sending pictures?\"\n\n\"She stopped writing. Said that writing to me was hurting her marriage. I never wrote her. I never kept her address. Too dangerous.\"\n\nSinead was close enough that I could see the phone in her hand. When she was about thirty feet away, her dad said, \"Remember, not a word to Sinead until she's in Boston. By all that is holy.\"\n\nSinead opened the door, handed her dad his phone and then sat down on my lap. \"Did you have a nice talk while I was gone?\" she asked.\n\n\"A very pleasant talk,\" said Mr. Hayes. \"You're friend here is quite the gentleman.\"\n\nYeah, a gentleman who's fucking your daughter, my half-sister.\n\n* * * *\n\nSinead borrowed a car and she drove me around. She showed me the primary and secondary schools she attended. We went to the main street of the nearest town and looked at the shops. I was glad she was driving as it gave me an excuse to not hold hands with her. That and we were supposed to be just friends. I paid attention while Sinead talked. Otherwise, I thought about my mother. Our mother.\n\nCars in Ireland drive on the same side of the road as England, which is the opposite of all sane countries. I thought I was going to die multiple times on the drive. Every time Sinead made a turn, I'd think You're driving on the wrong side of the road! And a car is coming!. Riding in a bus in Ireland hadn't bothered me, but driving in a small car was a white-knuckle ride for me.",
        "As we drove down one street, Sinead pointed out a house. \"See that white house la? My grandmam lives there. I lived there until I was adopted.\"\n\n\"Let's go in. I'd like to meet your grandmam.\"\n\nSinead shook her head. \"If I introduce you to her, she'll know I'm going to Boston to find my mam. We'll have a big row. I don't want to fight with her.\"\n\nWe drove around town a bit more. I got the feeling that Sinead wasn't showing me the town so much as she was saying goodbye to it.\n\n\"Time to go back to the farm and have you meet the rest of my family.\"\n\nWhen we came into the house, two boys were studying on the dining room table.\n\n\"Jamie and Luke,\" announced Sinead. \"I'd like to introduce you to a friend of mine.\"\n\nThey jumped up and came over to meet me. Another boy appeared out of the kitchen.\n\n\"This is Noel. Noel, this is Jamie, Luke and Aaron.\"\n\nWe all shook hands while Sinead said, \"Noel is from Boston. We met four days ago.\" Has it really been only four days? \"When the summer is over, we're going to go back to Boston together and he's going to help me get situated.\"\n\n\"A Yank, huh?\" said Jamie. \"You had your heart set on seeing an Irish farm?\"\n\n\"Has Sinead shown you where she works?\" asked Luke. \"She's in charge of the nicest jacks in all of Cork.\"\n\n\"She can show you which jack the Lord Mayor's wife uses when she needs to take a dump,\" added Aaron.\n\n\"I've shown him lots of Cork,\" said Sinead. \"But, little brothers, I haven't shown him where I work.\"\n\nThe \"little brothers\" dig made them wince. Jamie was almost as tall as Sinead, but the other two were clearly shorter. All three of the boys were unusually broad in the shoulders compared to the Irish men I had seen. A little short for a linebacker, but that general build.\n\nThe four siblings kept up the constant battle of wits, with the three boys trying to embarrass or make fun of Sinead and Sinead constantly putting them in their place. In all seemed good spirited, but it made me uncomfortable.\n\nA door opened. \"That's mam!\" said Jamie in a quiet voice. The three boys dived back into their homework.\n\nMrs. Hayes turned the corner and entered the living room.\n\n\"Hello, Mam,\" said Sinead in an almost formal tone. \"I'd like to introduce you to a friend of mine. He's Noel Vaupel and he's from Boston.\"\n\nMrs. Hayes strode forward in a regal manner and stuck out a hand, which I shook. Nobody would think she was the biological mother of Sinead as she was short and stout with the manner of an English bulldog. \n\n\"I'm very glad to meet you, Noel.\" We exchanged pleasantries for a bit. \"Vaupel is your last name? What brings you to Cork as you're not Irish?\"\n\n\"I'm seven-eighths Irish.\"\n\nWe made some more small talk, which consisted of Mrs. Hayes making some judgmental statement and me trying to establish that I'm a decent individual.\n\n\"Time to make dinner,\" said Mrs. Hayes. \"Coming, Sinead?\"\n\n\"Aye, Mam.\"\n\nOnce Sinead and Mrs. Hayes were in the kitchen, the boys slackened up on the pace of their studies.\n\n\"How many times have you been to a Celtics game?\" Luke asked.\n\n\"Six.\"\n\n\"Have you ever seen Kobe play?\"\n\n\"Once.\" As a loyal Celtics fan, I hated Kobe Bryant with the heat of a thousand suns.\n\n\"Isn't he the greatest?\" Luke did his best Kobe scowl while making shooting motions. I almost threw up.\n\n\"There are other players I like better.\"\n\n* * * *\n\nFor some reason, our simple dinner at a country farm felt very formal. Mr. Hayes sat at one end of the table and Mrs. Hayes sat on the other. I was squeezed in on one side with Luke and Aaron. Sinead was across from me and Mrs. Hayes to my right. Mrs. Hayes asked each boy what he had done in school that day and each boy told what he had done with all the excitement of a six-year-old boy reciting romantic poetry. It was Sinead's turn after the boys had been interrogated and she told Mrs. Hayes about our day with none of her usual enthusiasm.\n\n\"Noel, are you and Sinead a couple?\" Mrs. Hayes tried to ask it lightly, but I knew that the wrong answer would be very bad.\n\n\"We're friends. We met four days ago and Sinead has been kind enough to show me around Cork when her work schedule permitted.\"\n\n\"Today was my first day off,\" Sinead added, \"and I thought Noel would like to see Irish country life.\"\n\n\"Tomorrow when I get back to Cork, I'll head off to somewhere new.\"\n\n\"Where will you go?\"\n\n\"I don't know. I tend to make decisions at the last moment.\"\n\n\"Not a good habit to pick up, young man.\"\n\nMrs. Hayes then launched into a lecture on the sights and cities of Ireland. It was like my most boring History class on steroids. The boys and Mr. Hayes dismissed themselves from the table as they finished their meals, leaving Sinead and me to listen to Mrs. Hayes drone on and on. I kept spacing out, thinking about the bomb Sinead's dad had dropped on me. I still couldn't handle it, so I pushed it aside and tuned back into Mrs. Hayes' drone.\n\n\"With that,\" Mrs. Hayes finally concluded, \"you should be able to make a wise choice now about where to go next.\"\n\n\"Thank you very much for the information, Mrs. Hayes. I'll go to Killarney tomorrow.\" If there's a train going that way when I get to the train station.\n\n\"An excellent choice. Are you two spending the night?\"\n\n\"It's too late to catch the bus back now,\" said Sinead.\n\n\"I'll make sleeping arrangements then. Noel, you'll be sleeping on the couch in the living room. I'll go up and talk with the boys.\"\n\nMrs. Hayes stood up and regally marched up the stairs. Sinead and I cleared the dishes from the table and then started loading them into the dishwasher.\n\n\"What do you think of my mam?\"\n\n\"She's...uhm...a bit stern.\"\n\nSinead snorted. \"A bit? She's got everyone in the house under her thumb.\"\n\nWith an adopted mom like that, I could see why Sinead was obsessed with her birth mom.\n\n\"I wonder where I'll wind up,\" said Sinead. \"I normally sleep on the couch.\"\n\n\"You don't have a room?\"\n\n\"Na, na. Aaron took my room. Till tonight, I've only slept over at Christmas.\"\n\nI was surprised. It wasn't until I got my apartment that I gave up my bedroom back home. Even now, it was a guest bedroom-slash-junk room that I could sleep in if I wanted to. I loved spending the night with my family whenever I could squeeze it in.\n\nAfter we had started the dishwasher, I cleaned the kitchen while Sinead watched. I didn't know what else to do. I felt uncomfortable around Sinead for the first time since we met.\n\n\"Sinead!\" cried Mrs. Hayes from the foot of the stairs.\n\n\"We're in the kitchen, Mam.\"\n\n\"Sinead, you're going to be in Aaron's room tonight. He raised quite the ruckus about it. He can be discomforted for one night for the sake of his sister. At times I wonder...\"\n\nShe trailed off. I glanced at her and saw that she had stopped talking to watch me do my best to clean the top of the old gas stove. It had some nasty spots on it and I was working hard on an ugly brown one. Sinead was leaning against a counter with her arms folded and an amused look on her face.\n\n\"What are you doing?\" asked Mrs. Hayes.\n\n\"Cleaning the stove top,\" I said. \"Sinead and I have already loaded the dishes and I've cleaned the counters.\"\n\n\"Oh my. That's so nice of you.\"\n\n\"It's the least I can do after such a wonderful dinner.\"\n\nThat drew a little blush. \"It's nice to know that some young people now days can appreciate what others do for them.\" She looked at Sinead meaningfully. Sinead colored.\n\n\"I think I'll do the evening feedings now, Mam.\" Turning to me, \"Would you like to come along?\"\n\n\"Sure.\"\n\nOnce we were safely away from the house, Sinead said, \"Appreciate! Bah! Sometimes I want to choke her!\"\n\nAs we fed the animals and made sure they had all they needed for the night, Sinead steadily unwound. Again, I felt uncomfortable. I was glad our cover story of not being a couple gave me an excuse to not hold hands or kiss.\n\n\"What do you get from two percent of a cow?\" I asked\n\n\"I don't know.\"\n\n\"Two-percent milk.\"\n\nI was rewarded with a small chuckle and a big eye roll.\n\nBack in the house, I went upstairs and played Xbox with Sinead's brothers. Half-brothers actually, same as me. No way Sinead would consider any of them romantically and rightfully so. Sinead made snide comments as she watched us played.\n\nMrs. Hayes came into the bedroom and announced it was time for bed. I brushed my teeth then changed into a T-shirt, underwear and sweat pants for sleeping on the couch. Mrs. Hayes brought out a pillow and two blankets and soon I was bedded down on the couch. Mrs. Hayes turned off all the lights and went upstairs to turn in.\n\nI laid there turning over the news about Mom. She seduced her cousin at fourteen, tricked him into knocking her up, wanted to have more bastard kids with him, was forced to leave the country by my grandmother and then never contacted the child she left behind. I knew it was true, but I didn't want to believe it.\n\nMy mom had never freaked out at the possibility that I might have sex before I was married like so many of my friends' moms did. When I was a junior in high school and had started getting serious with one girl, mom had talked to me about how \"no\" means \"no\" and the importance of safe sex. As the girl and I got more serious, my mom had told me to always make sure the girl had enjoyed herself and that I should make her happy before she makes me happy. But nothing she had ever said would have led me to believe that she had thought it was fine to fuck a cousin at fourteen or to trick a cousin into knocking her up. Mom had seemed like an ordinary, typical mom.\n\nHow much did any kid know about their parents' sex lives? I'd guess that some of my friends' moms had been wild at fourteen, even though they're quite conservative now. It's not something parents discuss with their kids.\n\nMy trip to Europe was kind of Mom's parting gift to me. She had complained many times to management about the lax storage of chemicals and had kept a file at home of the emails she had sent. When she died, Dad had hired a lawyer to sue her company. Dad got a large settlement and he gave me a quarter of it. That was what I was using to pay for this trip and I'll have plenty in the bank when I decide to buy a house. So I had used the money I had gotten from her death to uncover the secret she had spent her life keeping from everyone.\n\nI heard footsteps on the stairs. The couch was ten feet from the bottom of the staircase and I looked up to see Sinead on the stairs. She waved for me to come to her then held her finger in front of her mouth to indicate I had to be quiet. I didn't know what she wanted, but I tossed off the blankets and headed for the stairs.\n\nWhen I got to the stairs, Sinead vigorously made the quiet sign. I slowly climbed the stairs, making as little noise as possible. Before I got to the top, Sinead slipped off to a bedroom doorway. She again motioned me to join her then made the quiet sign. I stealthily crossed over to her and entered the room. Once I was in, Sinead closed the door slowly so it wouldn't make a sound.\n\nI glanced around the room and it looked like a typical teenage boy's room. Posters of a soccer team and a rock band adorned one wall and a poster of another rock band was on another. No posters of hot babes like I had had, but I decided Mrs. Hayes wouldn't have approved of that. All the flat surfaces were covered with guy stuff. I noticed that the bedding had been stripped off the bed and was on the floor next to it.\n\nSinead hugged me from behind and kissed my neck. \"I've always wanted to sneak a fella into my room,\" she whispered as she slid one hand under my shirt and the other hand into my underwear and around my cock, \"and tonight is my last chance.\"\n\nThe bedding on the floor. The hand around my cock. I quickly put two and two together and realized Sinead wanted to fuck. That'd be wrong. Very, very wrong. She was my half-sister and now that I knew she was my half-sister, there was no way I could fuck her.\n\n\"Mam and Dad are right next door, so we'll have to be very quiet.\"\n\nJesus, how am I going to get out of this?\n\nSinead brought her hand down from under my shirt and used it to pull my sweat pants and underwear down to my knees.\n\nI had to stop this. I had to tell her to stop. But I couldn't whisper to her the way I was facing. I turned around to face her and as I did, Sinead pushed my underwear and sweat pants to my ankles.\n\nI tried to think of something to say. Sinead stood up after removing my underwear and sweat pants. I opened my mouth to whisper something but Sinead put her hand behind my neck and pulled my face down to kiss her. She rammed her tongue inside my mouth. She kept the pressure downward on my neck as she bent her own knees. I was leaning too far forward and I had to go to my knees to keep from stumbling.\n\nMy mind was moving in super slow motion. I knew I should say or do something to stop this, but Sinead kept moving things along too quickly for me to respond. Sinead pulled up her nightshirt to reveal she was naked too from the waist down. I was lying on my back on the bedding on the floor and Sinead was on top of me.\n\n\"It'll be quieter if you let me do all the work,\" she whispered into my ear. \"Just lie there.\"\n\nI knew I should throw her off of me. But how to do it without waking her parents? I pictured her mom flinging open the door and demanding, \"What the hell is going on?\"\n\nI felt my cock touch her opening and then Sinead sliding down my shaft. It was too late - I was in her.\n\n\"Just lie there,\" Sinead whispered again.\n\nI could feel my cock sliding out of her as she lifted her body away from mine and sliding back into her as she lowered herself. Whether I was willing or not, she was going to fuck me. And God it felt so good!\n\nPart of me was horrified that I was fucking my half-sister, but part of me still lusted for her as a beautiful, sexy women. The lusting parting of me was winning. I decided to surrender; that the best thing was to get this fuck over with quickly before we got caught, then it would be the last fuck we'd ever have.\n\nSinead wasn't looking at my face as I was thinking these thoughts. She had her head down by my ear so she could whisper instructions and was focused on using her lower body to fuck me quietly. I thought about grabbing her ass, but decided it best to let her be in complete control. Instead, I ran my hands up and down her thighs as she used them to lift herself off of me then to drop herself back down.\n\n\"Don't worry about me,\" she whispered. \"Cum as quickly as you can.\"\n\nSinead moved into more of a sitting position, put her hands on my chest and looked down at me. I gave her a big smile. Best to get it over with as quickly as possible. I wished she wasn't wearing a shirt so I could see her tits bounce up and down as we fucked. As it was, I could make out quite a bit of movement.\n\nI closed my eyes. It was so weird to do nothing. I focused on the wonderful feeling of fucking; of being all the way inside of Sinead then almost being all the way out. I was panting, not with exertion but with lust.\n\nI pictured all the times we had fucked - Sinead bent over the couch, Sinead's tits bouncing as we fucked on the couch, Sinead moaning in pleasure as I fucked her on the dining table. She was the best fuck I had ever had and I was going to miss it.\n\nI felt Sinead changing position so I opened my eyes. She had moved her legs so that she was now kneeling on her feet. \"Knees hurt,\" she mouthed. She had to lean on her arms a little more in this position to keep her balance. She kept up the pistoning with her legs. We were both panting hard.\n\nThen I felt it, that marvelous tingling sensation. I balled my body up a little bit as I came into her. Another intense cum, but all my cums were that way with Sinead.\n\nOnce I was done cumming, I relaxed. Sinead collapsed on top of me. \"God, that was hard work,\" she whispered. We held each other while our heart rates gradually slowed. \"Thanks,\" she whispered, \"for fulfilling a little fantasy of mine.\"\n\n\"Thank you,\" I whispered back, \"for another incredible fuck.\"\n\nWe pulled apart then quietly dressed. Sinead opened the door for me and I slowly, quietly made my way to the stairs and down to the couch.\n\nI have got to get away from her.\n\nI had given in too easily. I shouldn't have done it - fucking my half-sister next door to her parents. I knew that if I stayed around Sinead, I might give in again. I had to go somewhere far, far away.\n\n* * * *\n\nThe next morning, we waited at the bus stop for the bus to take us to Cork. We weren't holding hands as we were pretending to be just friends still. On the bus, I would tell Sinead that I was getting away. I reviewed how I was going to say it over and over. I checked my watch - a minute until the bus was due to arrive.\n\n\"Sinead!\"\n\nI saw an old woman walking quickly towards us.\n\n\"Grandmam!\" cried Sinead.\n\nSinead ran over and gave her grandmother a hug. My grandmother too. It was so weird to finally see my mother's mother.\n\nShe was shorter than Sinead, but had her general build. She looked older than I expected. Sinead's smile of joy now turned anxious as she got close to me.\n\n\"Grandmam, this is my friend Noel Vaupel. He's a Yank.\"\n\n\"So Maeve told me. She said he stayed over last night and he's from Boston.\"\n\n\"Aye. When he goes back to Boston in September, I'm going too. He's going to help me get situated there.\"\n\n\"I see the bus,\" I said. It was a few blocks away and would be here any moment.\n\nGrandmam took Sinead's hands into hers and looked Sinead in the eye. \"When you get to Boston, you're going to look for your mother, aren't you?\"\n\n\"Aye, Grandmam.\"\n\n\"When you find her, tell her I miss her.\" Tears came to her eyes. \"That I love her, that all is forgiven. Have her call me, will you?\"\n\nSinead hugged her fiercely. \"Aye, Grandmam. I'll tell her all that.\"\n\nThe bus was at the stop and the door opened. Sinead pushed me forward.\n\n\"Good bye, Grandmam! I'll call you as soon as I find her!\"\n\nThen we were in the bus. I walked between the seats towards the back in shock. Should I have told my grandmother that I'm her grandson? That she had two beautiful granddaughters in Boston? That her daughter was dead? I hadn't thought of talking to her until she had said that she loved my mom.\n\nI paused for a moment and Sinead said, \"Let's sit in the very back.\"\n\nI continued walking while trying to pull my thoughts together. If I had told my grandmother that I'm her grandson, then Sinead would have known that I am her half-brother. At the same time, I wouldn't have broken my promise to Mr. Hayes. I sat down in a window seat at the back of the bus, like I had on the way here. I could get out now and tell her. But before I could move, the bus driver closed the door and the bus pulled away.\n\n\"Are you okay?\" asked Sinead.\n\n\"Some indigestion. I think I burned the candle on both ends last night.\"\n\nSinead gave me a happy, knowing smile.\n\nWe were holding hands again. I felt very uncomfortable. I needed to end this quickly. We were in the far back and no one was close to us. I reviewed my speech one more time, then plunged into it.\n\n\"Sinead, I'm leaving for London tonight.\"\n\n\"What?\"\n\n\"I'm leaving for London tonight. There's an overnight ferry and I'm going to take it.\" I kept talking so Sinead couldn't protest. \"I had planned on touring Ireland for a while, but I know I won't enjoy it. The whole time I'd be seeing these sights I've always wanted to see, I'd be thinking about getting back to Cork and you. And I don't want to stay in Cork as I've seen everything I want to see there.\"\n\nSinead was surprised, but not obviously upset.\n\nI asked, \"So what would you think of in August quitting work two weeks early then we travel around Ireland together?\" I'd be \"delayed\" and we wind up meeting in Dublin just in time for the flight to Boston. At Boston, I'd tell her I'm her half-brother. No more sex for us.",
        "Sinead pulled out her iPad and started doing something.\n\nShe's taking this well.\n\nSinead continued working on her iPad for a bit and then asked with a hint of smile, \"So you want to travel with me around Ireland for two weeks?\"\n\nSinead, it's okay to get upset about my leaving you.\n\n\"I can't think of a better guide.\"\n\nHer smile widened at that. She kept doing whatever she was doing on her iPad. \"I haven't seen much of Ireland. I haven't seen much outside of County Cork.\"\n\nI was starting to get pissed at how well she was taking this. Two days ago, you asked to live with me and now you're willing to let me slip away for months without a fight? Something didn't make sense to me. Had I misjudged her feelings for me?\n\nSinead asked, \"Am I going to need a lot of money when I arrive in Boston?\"\n\nAn odd question. What did that have to do with us here and now?\n\n\"No. You'll be staying with me or my family. You won't need furniture. You won't need money for rent. You're going to need money for an immigration lawyer, but that's about it.\"\n\n\"In that case,\" said Sinead as she put down her iPad and looked at me, \"I can afford to go to London with you. To all of Europe for the rest of the summer.\"\n\nOh, shit.\n\nI said, \"I'm going to be traveling very cheaply, Sinead. I'm not going to be staying in hotels and eating in restaurants. I'm going to be staying in youth hostels. I'm going to be eating sandwiches and other food from the grocery store. It's not going to be a glamorous trip.\"\n\nSinead nodded her head up and down. \"That's what I'm counting on. I've developed a budget for the trip and I can only afford it if we travel cheaply. Perhaps in some places, getting a hotel room will be cheaper than both of us staying in a hostel. I may run a little short of money, but I'm hoping you'll have enough that I could borrow from you then pay you back once Dad gives me money before our flight to Boston.\"\n\nI'm so screwed.\n\nI said, \"My great-grandfather Vaupel fought in Europe in World War One. I have his journal. I'm going to follow his route on a bike. I don't know how long that will take. Won't you find that boring?\" I was reaching, but I didn't have anything else.\n\n\"That sounds fine. I love cycling. It'd be good to see the countryside. I'm still a country girl at heart.\"\n\nFuck, fuck, fuck.\n\nThis is it. She can't go with me. If she goes with me, she's going to expect to have sex all the time and that would be wrong. I have to tell her I'm her half-brother. She's going to scream and the people on the bus are going to freak out. I'd break my promise to her dad. But I had no choice - I must tell her.\n\n...But maybe, I don't. What if we were to break up during the summer? Surely she'll get sick of traveling on the cheap. Become miserable and then we'll have a fight and break up. Maybe she'll meet some Italian millionaire while we're traveling and dump me for him. Either way, I'll never have to tell her that I'm her half-brother. That's it! I'll just kick this can down the road.\n\n\"Sinead, I'd love for you to travel with me. If you're willing to travel like I travel, I'll lend you the money you need to keep traveling with me.\"\n\nSinead threw her arms around me, hugged me and kissed me. \"Oh my God! This is going to be so wonderful! But we leave tonight?\"\n\n\"We leave tonight. I already have my ticket for the ferry.\"\n\n\"I've so much to do! I have to give notice at work. I have to clear out the apartment and get it ready to be sublet. Oh my God!\"\n\nWith that, Sinead worked furiously on her iPad with an occasional break for a phone call. She ignored me, which was fine as I was wrestling with my thoughts. Had I done the right thing? Was having sex with Sinead all that bad? We'd fucked five times already, once after I suspected she was my half-sister and once after I knew. Was that any worse than any other pre-marital affairs?\n\nWho the fuck was I kidding? Of course it was far worse! It was \"you could go to jail for a long time\" worse. \"All my friends and family will disown me\" worse. I should tell her the truth and tell her that she can't go with me to London before she makes any irreversible actions.\n\nI faced Sinead to tell her that she couldn't go, but I couldn't get her attention as she was talking on her phone while working on her iPad. As I waited to catch her eye, the urge to tell her that she can't go with me dissipated. In the end, I decided I had missed the window. She was racing down the path of preparing to leave with me tonight and it would be awkward as hell to try to stop her now. I had made the decision to kick the can down the road and right or wrong, I was going to stick with it. We would be lovers touring Europe together, enjoying traveling and each other as much as possible. Hopefully it would blow up some day and I'd dodge the bullet from the gun I had pointed at my own head.\n\n* * * *\n\nWhen we got to outside of Sinead's apartment, two women about our age were waiting.\n\n\"Noel, this is Emma and Lucy,\" said Sinead.\n\nWe shook hands as Sinead unlocked the door.\n\nEmma said, \"I'm the one who spotted you heading towards the English Market. I called Sinead and then kept an eye on you until she showed up.\" Emma gave me a teasing smile. \"Now, I kind of regret not offering to show you around myself.\"\n\nEmma and Lucy were good-looking, though not as good-looking as Sinead. I was happy I wound up with Sinead. No I wasn't - she's my half-sister. Argh!\n\nI pushed the thought aside as I had become quite satisfied with my plan. Travel was stressful and travel on a tight budget was very stressful. Yeah, Sinead and I had hit it off magically so far, but it had been only five days. At some point, I'd make the wrong joke and we'd break up. When we broke up, I'd tell her that her mom was my mom, that Mom was dead and that there wasn't any reason to come to Boston. Sinead would be super-furious at me, so she wouldn't want to come to Boston. In the meantime, we would have fun together and I'd endanger my immortal soul by regularly fucking my half-sister. In the unlikely event we somehow managed to stay together all the way through the summer, I'd face the music in Boston.\n\nIn Sinead's apartment, the women discussed what needed to be done and the best way to sell the bigger items. A third women, Katie, showed up. \"I've never met a sink-scrubbing stud before,\" she said after Sinead introduced us. The other girls giggled.\n\nEmma was in the kitchen when she said, \"Wow, it is amazingly clean.\" She looked over at me. \"If you cleaned my kitchen as well, I'd give you the same reward.\"\n\nMuch giggling followed the comment. Sinead turned a bit pink as she seemed to ignore the remark.\n\nI helped to move the furniture to one side of the room and swept the floor. Sinead put clothes into a backpack that Katie had brought over and boxed up the rest. Lucy and Emma boxed up Sinead's pictures and knickknacks. Katie emptied out the kitchen shelves. We worked furiously to clean the apartment and to empty it of all but the few big pieces of furniture that Emma would later sell for Sinead. Emma would also arrange to sublet the apartment for the rest of the lease.\n\nAt one point, Lucy lay down on the dining room table and said, \"Sinead, why don't you lie down like this for a memento picture?\"\n\nMore giggling broke out.\n\n\"Sinead?\" I said with some heat.\n\nSinead came over to me, took my hands and looked me in the face. \"Some of the things we did made me so happy that I had to share them with my friends. I'm sorry to have embarrassed you.\"\n\nWhat the hell. I wrapped Sinead in my arms. \"Well, it's not like Emma, Katie and Lucy will be living next door to us. If it makes you happy, it's okay with me.\"\n\nLucy said, \"We're jealous of how happy you make her.\" Emma and Katie nodded.\n\nEmma added, \"And how much fun you two are having.\"\n\nI knew one day the fun would end, but it was nice to celebrate it for now.\n\n* * * *\n\nWe made the ferry with a few minutes to spare. Once we were in our cabin, we caught our breath. Sinead pulled out her iPad and started researching sights in London. She would occasionally ask my opinion of various sights.\n\nBy the time we got to London, Sinead had put together an agenda. As it was late in the afternoon, we hit a couple of sights and then went to the youth hostel. The hotels in London were so expensive that we were forced to stay at the youth hostel, which had no two-person private rooms available. The next day we had a great day in London. The next morning, I was having a good time, but I was feeling the effects of no sex for two days.\n\n\"Let's watch a movie,\" said Sinead.\n\n\"Okay.\" I was surprised as I thought Sinead would want to do sightseeing.\n\nWe caught the first show of the day at a movie theater. Sinead picked out a less-than-stellar movie for us to see.\n\n\"Are you sure you want to see this one?\"\n\n\"Aye,\" said Sinead with a knowing smile.\n\nSinead had us sit in the back of the theater. We were alone in the theater when the lights went down. Sinead slipped off her panties from under her skirt, removed her bra, and tucked them into our day pack. We made out like crazy. I fingered her to an orgasm, she sucked me off, I ate her out and she sucked me off again. Once we were sexually sated, we left the theater while the movie was still playing. Sinead said, \"That's the most fun I've ever had at the movies.\"\n\nSinead's friends will be giggling tonight.\n\n* * * *\n\nWe had a great time touring England, went to Paris for a brief time to rent bicycles and then went to Cantigny, France to follow my great-grandfather's campaign. He had been a farm boy in Kansas when he had joined the American Expeditionary Forces in 1917. He had fought from Cantigny to the Argonne Forest. I'd always been fascinated with the AEF campaign and had read about it extensively. It was great to see where he had fought and to picture what it had been like. I had planned out the bike route in exact detail. I had thought Sinead would find the ride boring, but she enjoyed being out in the country with me. Every morning, I'd pack us a picnic lunch. We would ride several hours until we found a secluded spot to pull our bikes into. We'd have a picnic lunch, make love on the thin blanket we had, and nap together. It wasn't the most comfortable way of making love, but it was different and fun. Napping with Sinead in my arms while we were physically and sexually spent made me feel so close to her.\n\nAfter the Argonne Forest, we returned to Paris. All of our clothes had been worn at least once, so we went to a laundromat as soon as we arrived. I loaded our clothes into the washing machines so Sinead would have the time to finalize our plans for Paris. Except she wasn't doing that - she was staring out into space instead. Once all of the washing machines were running, I sat down next to Sinead and pulled out today's post card.\n\nI hadn't written much before Sinead said, \"Noel, do you ever think about what it'll be like when we're in Boston?\"\n\n\"No.\"\n\n\"No?\"\n\n\"There's no point thinking about it. It's going to be so different that I can't imagine how it's going to be. I've never had a full-time job before. I know next to nothing about my roommate. I have no idea if he'll agree with you living with me. I'm sure you'll be able to find some under-the-table work, but I want you to get a green card as soon as possible and I have no idea how that's done.\"\n\nI could tell that was a very unsatisfying answer for Sinead. My plan was that we would go to my apartment from the airport. Hopefully my roommate would be somewhere else for the Labor Day weekend and then I'd tell Sinead there about our mother. After she had absorbed that, I would take her over to Dad's house to introduce her to her new family then she'd stay with them. It was a vague plan and I'd mainly play it by ear.\n\n\"Can I write on this post card?\" asked Sinead.\n\n\"No.\"\n\n\"Why not?\"\n\n\"Because my sisters don't know about you and you writing to them would raise a lot of questions that I don't want to raise.\"\n\n\"They know you're traveling with a wan.\"\n\n\"How would they know that?\"\n\n\"You're sending them a post card every day.\"\n\nA lesson in female secret communication methods.\n\n\"No, Sinead.\"\n\nI wrote a bit more then Sinead said, \"So who have you told about me?\"\n\n\"No one.\"\n\n\"You aren't in contact with anyone?\"\n\n\"Every Monday, I send my dad an email telling him I'm still alive and where I'm at. Every Tuesday, I get an email back from him saying he and the girls are fine. That's the only communicating I'm doing.\"\n\n\"So why don't you tell him about me?\"\n\n\"Because you're important and I don't tell important news to people by email; I do it in person. My dad is the same way. He's been dating a women for a while and if they got engaged while I was gone, he'd tell me in person when I got back. Unless something happens that requires me to head home right away, everything will wait until I get home.\"\n\nThat made Sinead very unhappy. She sat stiffly with her arms crossed fuming for a while. \"You were going to abandon me. Just head off to London and leave me behind.\"\n\n\"I had no idea you were willing to quit your jobs and travel with me. I told you why I decided to go to London when I told you I was going.\"\n\n\"It hurt me. And it still hurts.\"\n\n\"Sinead, when did you decide to travel with me?\"\n\n\"What?\"\n\n\"When did you decide to travel with me? I'm guessing you had decided to travel with me if I said yes to you living with me in Boston. Am I right?\"\n\nIt was Sinead's turn to get defensive. \"Well...more or less.\"\n\n\"But you didn't tell me. You knew I was going to leave Cork when we got back from the farm and you hadn't given me any clue that you wanted to come with me.\"\n\n\"I wanted you to ask me.\"\n\n\"Well, I thought it was pointless to ask. And you haven't told your father about me.\" Sinead called her dad every Wednesday morning around ten. We had had to find a quiet place for her to make each of those calls.\n\n\"That's completely different and you know it! I've asked him for money and he'll tell me I don't need it if I have enough money to gallivant around Europe with you!\"\n\nSilence followed. Sinead fumed. Bringing up her dad had been a low blow, especially as I had encouraged her to lie to him about our travels together. I didn't want her dad to know I was fucking my half-sister.\n\n\"Look,\" I said. \"We had a failure to communicate. Not your fault and not my fault. Nothing for either of us to be angry about.\"\n\n\"Well, I am trying to communicate with you now about what's life going to be like in Boston. I need to start planning. I need to start getting a picture of our life together in my head.\"\n\nDon't make any promises. Don't make any commitments.\n\n\"I can't help you, Sinead.\"\n\nMuch silence followed. I finished my post card. This was our first fight. We hadn't had any serious disagreements up to this point. I wanted to compromise. I wanted to meet her halfway, but I couldn't without either lying to her or telling her the painful truth.\n\nFinally, I couldn't take the silence any more.\n\n\"Sinead, you're the most wonderful woman I've known. I've enjoyed every day with you. I'm afraid that because life in Boston will be so different that anything I tell you now won't come true. I don't want to lie to you. I don't want to make you a promise that I can't keep.\" Sinead had unfolded her arms and I took her hands. \"I'll make you a promise that I can keep. Every day that you travel with me, I'll try to make it a great day.\" Sinead gave me a little smile. \"That's an easy promise for me to make because every day with you is a great day.\"\n\nI stood up and pulled Sinead up with me. I wrapped my arms around her. \"You're the most beautiful woman I've ever been with. You're the smartest woman I've ever been with. I respect you more than any woman I've ever been with.\" That seemed a satisfactory answer because she smiled at me when I looked down at her. We kissed. \"Of all the women I've been with, you're the best in bed. And on the couch.\" Sinead smiled. \"And on the dining room table.\" She giggled. \"And the very best in the back of the theater.\" She laughed.\n\nSinead hugged me tight. \"I'm so crazy about you, I can't stay angry at you.\"\n\nAnd so ended our first fight.\n\n* * * *\n\nAfter Paris, we worked our way North. We discovered that, early in the morning, the bathrooms on train cars are a fine place for a quickie. When we got to Oslo, Norway, we were burnt out on churches and museums and decided to take a multi-day hike through the mountains. We would regularly wander off the trail for some hot sex. After that, \"I'm pining for the fjords\" was my favorite code phrase for I wanted to fuck, preferably someplace different and fun.\n\nAt some point, I figured out why being in charge was so important to Sinead. Some of it was that she was great at researching and planning. Being in charge give her carte blanche to do so. I gave her time to research and plan by doing the shopping, the food prep and the laundry. Some of it was that she hated wasting time. She was up early, dressed quickly and was fast out the door. People who delayed us because they didn't know their job infuriated her. My approach to touring - we'll do the Louvre then decide what to do next - would have driven her crazy. And some of it was that she liked knowing what was going to happen. She was never anal about her plans and in fact enjoyed it when I'd spontaneously send us on a side adventure. Without her being in charge, I wouldn't have seen nearly as much and wouldn't have had nearly as great of a time. I knew that it bothered Sinead that she couldn't plan for what her life would be like in Boston, but there was nothing I could do. Fortunately, she never brought the subject up again.\n\nFrom Oslo, we went to Sweden and Finland. Russia isn't covered by a Eurail pass, so Saint Petersburg was the only Russian city we went to. We returned to Helsinki and got a private room in a hostel and were in bed together. I was on my back as usual with Sinead's head on my shoulder. She was playing with my chest hairs.\n\nSinead said, \"You're the best flatmate I've ever had.\"\n\nI chuckled then shook my head. \"I'm not your roommate yet.\"\n\n\"You more or less have been. We've spent more time together than I ever spent with a flatmate.\"\n\n\"Well, you're having sex with me and you didn't do that with your roommates.\"\n\n\"I did with one. I've roomed with two wans and a fella. The wans were my first two years at university. We ending up fighting all the time. The fella was during my last year of university. He had been a great boyfriend until I moved in, then things quickly fell apart. I was a little worried that I couldn't live with someone else.\"\n\n\"Sinead, you're easy to be with.\"\n\nShe was. She was almost always in a good mood and ready to laugh. Physical hardships didn't bother her at all. One time we were biking and a sudden rainstorm soaked us both. When we finally got to the next town, she had been more upset with the inaccurate weather forecast than being wet. She was always up for a little adventure and when things didn't work out, she'd laugh and chalk it up to experience. She was easy to talk with. I couldn't imagine a better traveling companion.\n\n\"For you\" Sinead said. \"Thinking it over, I've decided that I'm terrible at negotiating. I want my way and I get pissed when I don't get it. I get that from Maeve.\"\n\nWhile we've traveled, Sinead used \"Mam\" to refer to our mother and \"Maeve\" to refer to her adoptive mother.\n\n\"Having two people like that in a family is an explosive combination.\"\n\n\"Aye, it was. But unlike Maeve, I always get your input first and I get your agreement to the big picture, then I make my plan and I expect you to follow it.\"\n\n\"You're in charge.\"\n\n\"I am. And I like how when you want to change the plan, you don't say that you're going to do something else. You always ask my opinion on doing something else, letting me be in charge again.\""
    ],
    "authorname": "8letters",
    "tags": [
        "brother",
        "sister",
        "brother sister sex",
        "brother sister",
        "irish",
        "brother/sister",
        "siblings",
        "incest",
        "romance",
        "brother sister incest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/my-european-summer-vacation-with"
}