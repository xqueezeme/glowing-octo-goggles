{
    "title": "Park Bench",
    "pages": [
        "My dad gave me a nudge and in a soft voice said. \"They are summoning you to do your thing son. Remember, if it gets too hard for you, stop, take a few deep breaths before you go on, and you'll get through it.\"\n\nI had been zoned out for at least the last ten minutes worrying about how I would get through the speaking they wanted me to do. I had only agreed to do this because of who I was going to be speaking to. This was a biggie for me because I had loved her so much and I was determined to do this. For that reason there was no way I was going to back out of it.\n\nThe subject matter was going to be hard to talk about though, because I knew for sure there was no way I was going to get to the end without breaking down a few times. After all, I had been shedding enough tears to float a ship for the last four days, and to say a final farewell to someone that meant everything to me, had been, and is still hard to think about.\n\nMy mind went off on its own for a bit again as I was thinking to myself about that word farewell that had just passed through my thoughts. It was a word that was never used between Jewel and me. From the time we had first got together the only time I had used it was that final day in the hospital. I had thought that unwelcome word as I held my love in my arms and watched those wiggly lines straighten out on those machines she was connected to while the constant beeping they did went into a steady tone. That word made everything so final and it had hurt.\n\nDad gave me another nudge and mom gave my knee a pat... I noticed the usher had put that stool that had been by the side wall of the church by the casket. Holding back the tears that were already starting to fall I slowly got up and walked to the front of the church.\n\nAs I walked there I looked at that coffin she was in and remembered how vehemently Jewel had only wanted that rental coffin for the service in the church. Just so people would have something to see her in and not some ugly vase with ashes in it. She was going right after the service to be cremated so the rental would be returned to the funeral home. She had planned out most of her funeral and had been insistent there would be no grave for her, thus the cremation.\n\nAs I sat on that stool I put on the microphone they wanted me to wear and it was only then I looked at Jewel... Damn, she looked beautiful.\n\nI took a few seconds to get the frog out of my throat before saying, \"Hi Jewel, you look very pretty today even with that wig you never liked because it itched so much. I think you would be happy with the way they made you look. They made you look like you always looked to me, and not like some made up freak you usually see in coffins. They even got your unique smile just right.\"\n\nI had to stop for a long pause as I was admiring her and thought about how I remembered her and the interaction we had... It was also so I just could forget there was a congregation out there watching and listening to me.\n\nI then told Jewel, \"I guess I should tell everyone why I'm talking to you instead of everyone in the congregation. It started when I was asked by your mom and dad to say some words about our time together, and of course the priest thought it would be a good idea too. You know how much I hate public speaking. My tongue can get so tied up all that comes out of my mouth is gibberish. The idea of speaking about you in front of a bunch of people scared the bejesus out of me.\"\n\n\"Well Jewel, my mom came up with the idea that that I speak to you face to face about anything that came to mind instead of standing behind the pulpit and facing the congregation head on. That way I could tell everyone some of what we did in our time together. I thought it was a great idea since I can do that so easily because you always made talking to you about anything so easy. The priest wanted me to wear this headset though. Just so the congregation can hear what I say to you.\"\n\nI again paused before saying, \"I thought long and hard about what I would share with you and found there is not much I want to say that you don't already know. I racked my brains out and really didn't come up with an idea on how to present what I would say, so I guess, as I think about things I will just ramble on from one muddled thought to another. So be patient with me if things sound unorganized as I jump from one topic to another.\"\n\nI gazed at her for a while more, then said, \"I know calling you Jewel in public like this will upset your dad because it is not your given name and how your parents like you to be addressed. Remember how your dad would get upset and always correct me when I called you Jewel. Jewel is the name I have always used for you, and that's the name I will always associate with you. To me Juliette is so not you. It sounds like you are part of a Shakespearian play or something, and you never did like Shakespeare in school.\"\n\nI thought for a minute then spoke again, \"I know you are watching me from above, because I can feel you in my heart. I'm sure that's where you went, and they will take good care of you, and just think, they will probably make you one of their shining angels.\"\n\nAnother pause as I choked as I tried to get the words out, \"You will make an excellent angel.\"\n\nI then stated, \"Angels?\" Then in a softer voice I added, \"Remember that time sitting on our favourite bench in that park behind your parent's place. We discussed religion and beliefs for one whole afternoon. After much going back and forth, from the scientific view on things to the churches view, we made our own decision on the topic and decided that if there was someone watching over us when we died, we would go to meet him. We called this guy god because we couldn't think of a better name for him. We thought God would meet everyone after they died, and then make them angels. He then would put those angels in a special place in the sky to shine down on everyone. In our way of thinking everyone called those shiny things in the night sky stars, just because they don't know any better, but we knew they were actually angels.\"\n\nI had to take my dads advice and stopped to take a few deep breaths to compose myself. Once I got that rock out of my throat, I started again. \"Anyway, your uncle did a fine job with your eulogy and pointed out to everyone just how wonderful of a person you were... Mind you everyone already knew that, but you should see everyone. Their eyes are still wet from that speech he gave. It's going to be a hard job following a speech like that.\"\n\nAfter another pause I said, \"In the time I knew you, you were always so considerate of others. I don't think there is anyone that doesn't like you.\" I then chuckled a bit and stated, \"Well... maybe there is that Mel guy you went to school with. I still laugh when I think of your confrontation with him at your graduation dance. I'm still sorry I missed witnessing what happened, but I can visualize it from what you told me.\"\n\n\"Our graduations were a fun time. Your school's graduation was one week ahead of my schools, but yours was the best. All the primping and stuff you and your mom did to get you ready was well worth it. You were always good looking but when I saw you, all made up and in that fancy dress I couldn't believe the vision in front of me.\"\n\n\"Anyway, at the dance we were having a good time and I felt like I was escorting a princess. At one point you were waiting for me when I went to the washroom. That Mel guy came over and asked you to dance. Even if you didn't like him too much, you were in such a good mood you agreed. I was almost back from my trip to the washroom when I heard a loud scream. When I got back to the dance floor I saw you stomping across the floor towards me. A few minutes later a few guys were assisting an obviously in pain Mel out the door and taking him to the hospital.\"\n\n\"I asked you what had happened and all you said was, \"The jerk wanted to dance and when we were on the floor he tried to feel me up. I think I accidently stepped on his foot while we danced, and I guess he got hurt.\" You then said, \"The night is still young, and I don't want anything else to spoil the evening.\" You then pulled me back on the dance floor where we had a lot of fun for the rest of the night.\"\n\n\"Jewel, I couldn't stop laughing when a few days later you explained that Mel had done the screaming because when you told me stepping on his foot, was actually you, stomping a high heel into the top of his foot as hard as you could. I could see why Mel finished out the school year with a cast on his foot. I already knew not to piss you off and that event sure confirmed that for me, that's for sure.\"\n\nI took another break for some more deep breaths and to wipe my eyes, then continued by saying, \"I think I will now make some apologies that I owe you and your parents. I've said this to you before, but I can't say it enough. The first apology is a big one to you from me. It's about that time I ran from you when you told me you had leukemia and it was going to be terminal. I just couldn't handle the thought of you not being with me and had to get away. I just didn't know how to handle the situation and I admit it scared me to death... The next day I came to realize how much I hurt you. Thank god my dad got me to think of the bigger picture of how much we meant to each other and what you would be going through without me there to help you. After he told me that, he advised me I had to go back and apologise and hope you would let me back into your life.\"\n\n\"You know, I'm glad I came to my senses, I almost missed the last three years of being with you. So, I apologise for being more concerned about my feelings than thinking of you.\"\n\nI paused. This time because I was thinking of something. \"Hey Jewel, I just remembered the day you accepted me back in your life after I pulled away from you. It took a bit to get your dad to assist me in my plan to get your forgiveness, but he finally agreed. He had to get you out on your front veranda at a certain time, so I could hide behind that thick hedge at the front walkway. As he talked to you I would stick out placards around the corner of that hedge so that you would understand just how much of a fool I had been to you, and this was my way of asking for you to please forgive me.\"\n\n\"I still remember a few of those placards. There was one that said I am an ass. Another said I am now here for you and will always be here, I beg you to forgive me, I love you and a lot of other ones like that. You saw those goofy placards I held out pleading for you to forgive me and you did what I was hoping you would do. You forgave me by coming down to my side of the hedge laughing at me, then you gave me a big kiss and called me a dumb lunk and that I should know you could never stay upset with me. You then asked. You really love me? That's the first time you ever told me that. Then you took my hand and led me to our bench in the park behind your place where we spent the rest of the day crying with each other about your situation until there were no more tears left.\"\n\n\"You don't know just how much that day meant to me and how much weight you forgiving me took off my shoulders. Mind you, you always were thinking of others before yourself.\"\n\nI then softly said to her, \"I only hope that I was there enough for you since then.\"\n\n\"I guess the second apology I have to make isn't really an apology to you. It involves how we met. Over the time we have been together our parents have asked on more than one occasion how we met. We have always brushed off the question because you made me promise that I would never tell them since the fact of the matter was you were out doing something you shouldn't have been doing, plus it was something they told you specifically not to do. You didn't want them to be disappointed or mad at you thus the secret.\n\nI think I can tell them now because since you made me make that promise, I have thought of a loop-hole in it. Your exact words were \"As long as I'm alive, please never tell them how we met and what I did.\" You are no longer here, so I will tell them. That way they might understand a little more about how we started to become so connected.\"\n\nI turned around on my stool and looked at my second set of parents. \"I'll tell this to you from my outlook on things. I had just got my first car and some friends wanted to go out to the lake for a beach party and wiener roast. Seeing as I now had wheels, John and I stuffed about fifteen people in our cars and we drove the bunch of us out to the beach for some fun. After dark, we were sitting around the fire when this cute girl came up behind me and said. Could you help me?\"\n\nI turned to look at her and asked her why. She then said to me, and I quote here, \"I came out here with a friend and her boyfriend and now the two of them have snuck off somewhere to be alone. The only thing is her boyfriend told some of his friends where he was going and what he had planned for my friend. Those friends thought they would get in on the action and came out to. They all have been drinking heavily and aren't nice guys and they scare me. One of them has attached himself to me and has let it be known that he and I were going to get it on later. He has been kind of rough with me when I said no to him. The other guys were laughing at what he was doing and told him that when he was finished they wanted a turn too.\"\n\nShe then told me, \"I managed to sneak away, but I can't find my friend and those guys are looking for me. So, can you please help me?\"\n\nI then told Jewel's parents, \"It's not every day a guy gets to rescue a damsel in distress, so I agreed to help and quickly told some of the other guys what was going on. My friend Don lent her his team jacket and I put my baseball cap on her head. That made her look totally different and when that group of drunk guys came around looking for her I had her straddling me on the stump I was sitting on. She was giving me a hug and hiding her face in my neck and she was acting like she was my girlfriend. Those guys never recognized her and after a lot of swearing they left the area. The thing I liked was she never broke the hug and told me she liked the way I felt. Who was going to complain with that, so I let her continue to hug me.\"\n\n\"It wasn't long after that we all packed up and headed home. She sat beside me on the trip home. As we talked the rest of the people in the car might as well have not been there. I was fascinated with this girl and spent a long time driving in circles to drop everyone else off so that she would be the last drop off. We were talking so much it was about four in the morning when we finally parted. I got her phone number and dropped her off at what she called her sister's place.\"\n\n\"I found out later that she didn't have a sister and that I had dropped her off at her friend's place. She had a rough night because her friend never came home, so she spent the night by herself sitting outside her friend's door.\"\n\n\"So, that was the secret she had. She was scared to tell you because she was supposed to be at a pajama party at her friends and not partying at the beach. Especially with a bunch of drinking guys where who knows what would have happened, and almost did. It's a good thing me and my friends were there. When I had dropped her off, she still wasn't sure about me, thus the sister story, but she came clean with me a few days later when I called her, and she let me come over to your place and we sat on your veranda talking. That's where she made me promise not to tell you about how much she had broken your trust in her.\n\nI guess my apology comes from both me and Jewel for not trusting that you would forgive her. She loved you two so much she was so afraid and scared that you to be disappointed in her and not love her anymore. That love you had for her was cherished by her and she didn't think she could go on without it.\"\n\n\"So, for both Jewel and me, we apologize.\"\n\nI turned back to face Jewel and told her, \"That's done... I know your parents always loved you, so I could never understand why you made me make that promise, but for you, I would do anything.\"\n\nI paused again as I thought about what to say next and when I did think of something I said, \"Jewel... That sitting on your veranda that first time where I found out you didn't have a sister led to our first date. Remember our first date? Now that was a blast. We were going to that new blockbuster movie, but when we got there the place was sold out. We decided seeing as we were already in the movie house to go to a vampire movie that started ten minutes later. We were the only ones in the theater and we understood why when the movie started. It was so bad it wasn't even a B movie and should have been rated a D or E. We were disappointed until there was a close-up of the vampire. That's when out of the blue you said, \"Can you imagine eating a hamburger and fries with those fangs.\" I almost chocked on my popcorn and we started giggling. After that the two of us tried to outdo the other with so many off the cuff comments about the show we were laughing so hard we couldn't stop... That was the first of many fun times we had together. I also think that was the time when I first realised I was falling in love with you.\"\n\nI sat thinking for a bit as I looked at her lying there then said, \"You look so peaceful and calm. I bet you are happy there isn't someone disturbing you every two minutes to poke some needle in you or send you for tests or treatment for some obscure reason or another. I don't understand how you could take all that they did to you. This last six months you always took whatever they did calmly and with a smile, even if that smile seemed to be forced. You were a lot stronger than I am, because I would have gone crazy. You don't know how many times I could see the pain you were in and how many times after visiting you I went home and cried for you.\"\n\nDuring another pause, I never realized I did it, but I stood up and reached into that coffin and took one of her hands in one of mine and said. \"I guess I should thank you for a few things. The first thing is for always being so accepting of what I was doing. No matter what kind of jackass I was, you were always quick to excuse me. Then there was that smile you always had for me. Whenever I came into a room that you were in, you always had a smile on your face for me. Those smiles were an immediate pickup for me no matter how I had been feeling.\"\n\n\"Then there were the talks we had... God, we must have had a million of them... There sure were a lot of debates. You were always so insightful and many a time it changed the way I was thinking, and always for the better. those talks mostly took place on that old green bench in that park and it was so nice to sit there with you and connect. I'm glad we stumbled upon that old bench back in the corner of that park when we were walking about that one hot day.\"\n\nI thought about that bench and added, \"Looking back on it summer or winter, whenever we weren't doing something with our friends we sat there and talked about everything. We planned, we read books and told each other about them, we did homework, we made up funny stories about the people that were in the park and later after I got a job what I did at work or anything else we could do sitting there. That bench was our special space where we shared everything.\"\n\nI paused for a fairly long time as I got the thoughts in my mind sorted out before I said, \"I know this may sound silly to you but thank you for letting me love you. You made me feel so warm inside and I treasured every minute of my time with you. I did love you so much. The way you acted around me by always touching me somehow or other made me always know I was the only thing in your life that mattered. You don't know how wonderful and happy those touches made me feel. Even that last few months when you had to stay in the hospital and I came in to sit beside you, you always reached for my hand wanting to be closer to me. That felt so good to me that one time I took a chance and lay down beside you and held you, just so I could get closer to you.\"",
        "I smiled as I remembered something that had happened because I did that and reminded her of it. \"Remember the first time I did that? The nurse came in to check on why your vital signs had normalized and saw us laying there with me telling you a story and holding you in my arms. She later told us that when she informed the doctor about it, he made sure all the staff knew I could do that anytime I wanted, because it helped you a lot... Laying beside you and holding you became the norm and I was happy to do it even if it was for my own greedy pleasure.\"\n\nI lost it there and had to take a fair bit of time composing myself before I could continue. I'm sure the congregation could hear my sobs as I said, \"I do have one more thank you I just have to give you. I must thank you for letting me into your life and sharing what precious time you had left with me. I was always amazed you actually wanted me there. That is the best feeling in the world for a guy like me... Gee babe, there are so many more thank you's I could give you, but I would be here all day if I tried.\"\n\nI stopped and looked around at our parents for a bit and then turned back to Jewel. \"I don't think I have too much more to tell you, but I must tell you I found the perfect spot to spread your ashes. You requested I do that, and to make sure it was someplace nice. I had to think long and hard over where to leave your remains for your final resting place, but I think you would approve of the location I picked. Your dad isn't happy with me, not only for being the one to spread your ashes, but the spot I chose. He objected, because he wanted you in his garden in the back yard.\n\nI don't care what he thinks, I am going to honor your wish and do as you asked. I'm going to take your ashes a bit at a time, just so people don't wonder what all those ashes spread about are and scatter them around that park bench we spent most of our time sitting on. We spent so much time on that bench we thought it was our own personal space. I can't think of any better spot than where we shared so much of ourselves with each other.\"\n\nYou could hear the smile in my voice as I said, \"I'll always remember that bench is where we first kissed and let me tell you that was the greatest kiss.\"\n\nThe tears were flowing freely now, and I had a hard time speaking but I did tell Jewel, \"Come to think of it you were the one that made the first move... That's another thing I should thank you for. After that first kiss there must have been a million more and they all felt just like the first one.\"\n\nI really was having a hard time holding on to it now and was grateful my mom came up and put a hand on my shoulder which helped to steady me.\n\n\"Jewel.\" I said, \"I have another thing I have to say to you. This is something I should have said to you a heck of a lot more than I did... I love you... I will always love you...Never ever doubt for an instant that I didn't love you from the bottom of my heart. I really don't know what I am going to do without your love.\"\n\nThe sobs and tears were constant now as I said. \"I have to go now so I will end things by saying those words we spoke as our way of leaving each other. We always said, take care... That way we would know there would be no goodbyes for us. Goodbyes sounded so final, and we didn't want any of our partings to be final.\"\n\nI took a long time looking at Jewel laying there, and I leaned over and kissed her for what I knew was going to be the last time. As I stood up I whispered, \"Take care love, let me know if you become an angel and where you are in the sky.\"\n\nThe tears were a river now and having said what I had to say I took off that microphone and turned with slumped shoulders and a tear streaked face as I slowly walked to the front door of the church and outside.\n\nI just had to be alone for a while... I was trying to get my mind straight and barely heard the organ play the final hymn as I sat around the corner of the church on a bench that someone had donated. It took a bit before I realized that someone was watching me. As I was pulling myself together my mom sat beside me and gave me a loving hug.\n\nWhy do mother's hugs always feel so comforting and make a guy feel so good? I was overcome with emotion again and I felt myself start crying again. It felt really nice that she was there to console me like she had always done.\n\nOnce I got myself under control again she hugged me harder and spoke these words to me. \"I can't imagine how hard that must have been for you... You did really good in there and I'm sure Jewel heard every word and loved what you said to her.\"\n\nIn a soft voice I said, \"I'm going to really miss her.\"\n\n\"Yes, I know you will miss her and all the things you two did together. You just have to go on and take things one day at a time. For what it's worth that's about all the advice I can give you.\"\n\nMom hesitated a bit before she added, \"You've grown a lot in the last few years. I just got to know, when did you change from being my little baby I used to hold in my arms into this very loving, fine, mature man. I couldn't be prouder of you and how you spoke to Jewel like you did. I'm honored to call you my son. I'm sure everyone now understands just how deep that love between you two was.\"\n\n**********\n\nThere was a gathering at Jewel's old house and when I couldn't take one more hug and comment on how sorry everyone was, or how she was going to be missed I snuck out and went to our bench. It was soon real dark, and I was sitting there in the cool evening air and intently watching the sky. I must have sat there forever, just zoned out again thinking of how much I would miss Jewel and was startled by Jewel's mom sitting down beside me and covering the two of us with a blanket. She put her arm around me and just sat holding me for a bit before she gently said, \"So this is that bench you guys always talked about. It took a bit to find you, but I can see why you two sat here all the time. It's so peaceful and private here.\"\n\nThe two of us sat there for a few minutes before she spoke again, \"You know I think I'm going to enjoy walking over here to visit her. This is a real nice place, and I can see why you picked out this spot to spread her ashes. I'm sure she would be happy here.\"\n\nShe hesitated for a good long bit, then with a serious tone in her voice she slowly and softly said, \"Jewel really loved you deeply you know. Never forget that. Her dad, and I were happy she found someone like you that cared so much about her. We could see the two of you were special right from the start.\n\nWe were even more happy when we saw the two of you this last two years. It's not every day that someone would care so much about someone that wasn't going to be around too much longer like you did with her. Near the end, I don't think she, or for that matter me and my husband would have been able to take what was happening to her without you there. Your love eased a lot of the pain she was in and I'm sure she appreciated it. We will always owe you a debt of gratitude for being there as much as you were.\"\n\nShe then looked up like I was doing and was admiring the display of those little lights twinkling in the sky. She asked in a questioning voice, \"Do you really think she will be an angel like you told everyone in the church?\"\n\n\"Yes, I do,\" I said, \"I'm sure she will let us know where she is.\"\n\nJust then a shooting star streaked across the sky. Just as it got right above us it disintegrated and gave off a small pulse of light for a second. When that pulse of light dissipated there was a star shining there. Jewel's mom exclaimed. \"Did you see that? She really showed us where she is.\"\n\n\"I knew she would, she was that kind of girl.\" I added in a soft voice, \"She does look like an angel up there doesn't she.\"\n\nWe sat for a long while just looking at our angel and later when we finally got up to leave I said to Jewel, \"Take care Jewel. I will look for you every night.\""
    ],
    "authorname": "Justtoold",
    "tags": [
        "church",
        "girlfriend",
        "memories",
        "saying goodbye"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/park-bench-1"
}