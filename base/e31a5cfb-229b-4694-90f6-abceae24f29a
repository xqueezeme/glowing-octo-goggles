{
    "title": "Ingrams & Assoc 3: American Life 02",
    "pages": [
        "Today was the last day of the inquest. The verdict was death by misadventure. That Todd kid, I dunno. He sure see's things differently from me. He spent an hour telling everyone how I should have saved them all. That it was my fault. That I was perving out by following them, that I'm some sort of twisted nutcase. I tried to point out that the only reason I was there was because I was fishing, and there isn't anyone else there after dusk, so there's no one else to disturb the waters. Well, until that little group showed up, anyway.\n\nI explained that I only jumped in when the branch they were swinging from broke \u2013 the three of them went tumbling into the shallows. It was obvious that they were hurt \u2013 it's strange how drowning looks. It doesn't look like it does in the movies. But I knew. I jumped in and grabbed one and got him out, and then other one, and then the third one. Sure, I wasn't gentle, but at that moment I was just panicking. I needed to get them out, and fast.\n\nSo two survived and one did not. He broke his neck on a submerged log. I don't know how that was my fault, but somehow it became my fault, at least in the press. I think the ringleader \u2013 Todd Byerland \u2013 was terrified it would be pinned on him. He's the son of the local mayor, and he obviously dotes on him, so once again, I get the painting. The strange old guy that hardly speaks and looks like a mountain man. I'm not surprised. I'd be scared of me and I _am_ me.\n\nI guess I'll just lie low \u2013 I'm just glad they got my name wrong. Tara won't find me... I'm not moving again. I've done that too many times just to get away from the way my life is. I'll just hide out. It won't be hard \u2013 no one knows where I live. No one really cares anyway. And why should they? One more burn out \u2013 why would anyone care? I wouldn't.\n\nIt's a strange thing to save a life and be told it's your fault that you didn't save them all. It's a strange thing to have to hide for doing something like this. But I don't regret it. Life is too precious, as Manny would have said. I miss Manny. I should look him up, send him a card or something. I don't even know if he's alive. It's been eight years since I last spoke to him.\n\nIt's just the way my life goes. C'est la vie.\n\n*****\n\nApril guided the nose of her convertible into the parking lot of the Gettysburg Apartment complex. The building was old and run down, but in a leafy glade. There were lots of small nooks with trees and benches, and as she got out of the car, locking it, two kids, a boy and girl, ran past her, throwing apple pieces at each other. The boy was enjoying tormenting the small girl and she was screaming and loving every second of the attention. As the kids ran past, she smiled at them, wondering whose they were and thinking about her own biological clock.\n\nAfter they were past, she looked around for the office signs, and saw them next to a sign about construction. Half of the parking lot was fenced off, and one of the apartment buildings in the complex was in the process of being razed.\n\nShe walked over to the office and pushed the door open. Sitting behind the desk, looking harassed, was an older woman on the phone. She looked up, saw April and gestured at her to sit down while she finished her conversation.\n\nApril sat down and studied the woman. She was older, with bleached and highlighted hair. She wore eyeglasses, the kind with the lanyard that went around her neck and her makeup was too heavy. She was plump and wore a shapeless and loud dress with red and yellow flowers.\n\n\"Oh, I know Juney. I know. She should be ashamed of herself. At her age. Who does she think she is? I mean come on. The tango? At her age? Who is she kidding?\" the older woman said into the phone, glancing at April, who smiled amusedly back.\n\n\"Oh I know. It's ridiculous, that's what it is. I know. Look, I have to go. Got a customer. Who is obviously too nice for this place, that's for sure.\" She smiled at April in a conspiratorial way when she said this, and April's smile broadened. She could like this woman.\n\n\"Yes, I'll call you later. Yes. Later. I don't know. What difference does it make? Yes. Later. After your nap. Bye, dear.\" And with that, she put the phone down.\n\n\"Dear god, that woman can talk,\" said the older woman. \"I'm Sarah Atwood. How can I help dear?\" she enquired of April.\n\n\"Hi, Sarah. I'm April. I was wondering where I might find apartment 3612?\"\n\n\"Oh no, dear,\" said Sarah, sucking on her teeth, \"no, you wouldn't. That's in one of the buildings they've already pulled down. Asbestos, don't you know. How they could use that and not know the perils I don't know, but several of the buildings here have had to be pulled down over it. Building 36 was one of them.\"\n\n\"Oh.\" April looked at the piece of paper in her hand, not sure where to go next.\n\nThere was a moment's silence and then, on cue, Sarah said, \"Were you looking for someone in particular, dear? Maybe I can help? I've worked here for years, know everyone, if you know what I mean.\"\n\nApril suppressed a smile. She did, indeed, know what she meant. It meant that Sarah was the older lady who disapproved of the parties you held, when you had blinds instead of curtains and tsked at you if you didn't hold the door open for anyone over forty.\n\n\"I'm looking for Julian Sullivan.\"\n\nSarah just looked at her and then said, \"You aren't a lawyer are you?\"\n\nApril was surprised. \"No, not at all. I work as a counselor and I wanted to talk to him about a case I'm on. This is the last address I have for him.\"\n\nSarah was still wary. \"It's not for that harlot, is it? I won't help if it's for that whore.\"\n\nApril was silent as she digested this. \"No, I don't think so. I can't really talk about it, but I can say it's military in nature.\" April knew she was taking a chance, but instantly Sarah relaxed.\n\n\"Oh, well, in that case. Yes, he lived here. With that harlot he married. She was bad news from the word go, that one. Sunning herself at the pool and wearing almost nothing while he was out, trying to get that business started. When she started carrying on with his salesman, well, it was scandalous. It just was. We could all see it, but he couldn't. None of us could bring ourselves to say anything, I mean, it's just not your place, is it?\"\n\nApril just nodded as this font of information flowed almost non-stop. She was glad she had her iPhone recording, because the details came fast and furious.\n\nShe learned that Joe Sullivan had indeed lived here, years ago, with his wife, Penny. Joe had worked hard to build his own business. He had had some problems in the past, Sarah told her, but he didn't talk about them. She assumed he wanted to leave them behind while he built a new life with his wife and started his new business.\n\nAs the business grew, Joe had hired an eager, younger salesman to help handle the increasing business. The new guy had taken to the job as though born to it, but he'd also taken Joe's wife, Penny. \n\nPenny had announced she was pregnant, and right after the baby was born, she'd left Joe for this young salesman, moving out of the complex. It was the height of scandal that the baby wasn't his. Joe had left shortly afterwards, a broken man. She'd not seen him since.\n\nSarah had no idea where Joe might be living now. It was almost a dead end.\n\nBut April wasn't beaten yet. She had the resources of Ingrams at her disposal, and all she needed were the right details\n\nShe learned that the company name was Sullivan Design, and the salesman's name was Mark Glasso. Penny Sullivan had apparently married him, once Joe was gone, so Sarah had heard. Sarah hoped they had a miserable time of it \u2013 Joe hadn't deserved what she'd done to him, but he'd borne it, like he bore everything.\n\nThen April got onto why Sarah considered him for sainthood. Apparently one night Sarah had been returning from the grocery store, laden down with bags, and passed by a bunch of teenagers, who had felt it their job to taunt her. Coming from the generation were you didn't put up with that, Sarah had put down her bags and verbally launched into them. \n\nThey were surprised at that, and aggression showed in their eyes and for the first time, she suddenly started to worry about her safety. Then, just as suddenly, one gave her the finger and all the rest pushed off the fencing they were leaning against and ran off down the street. Sarah was surprised and impressed at herself for seeing them off like that, but then, as she turned to pick up her bags, she found Joe Sullivan standing behind her, arms crossed, staring at the teenagers who were high-tailing it down the road.\n\nHe looked at her and wordlessly picked up her bags and carried them back to her apartment. He didn't say a word and just smiled at her while she protested that she could handle the bags.\n\nFrom that point onwards, he organized grocery runs for her and several of the older women in the complex. Never said anything about it, just pulled up to her door on a Thursday and told her to get in, he was going to the grocery store anyway, and he could use the company, since she knew more about what he needed to get than he did. It wasn't true of course, just an excuse, but as excuses went, it went pretty far with her.\n\nAfter an hour of conversation, two coffees and some giggling about the latest boy singer sensation, April exited the office, pretty sure she'd just made a new life long friend. She was damn sure she'd be going back there to just talk \u2013 it was amazing how in an hour what you could learn, and Sarah was just the kind of irascible older woman she really hoped she'd turn out to be. Someone who knows herself, knows the world, knows how it ought to be and was, by god, going to live in that world.\n\nShe was less impressed at what she'd learned of this Penny woman, and their marriage ending, but she wanted to keep an open mind. Julian Sullivan might have been a complete asshole \u2013 although she doubted it \u2013 so she tried not to prejudge. But from what she had heard, she was finding it hard not to. She needed more data.\n\nAs she sat in her car, she pulled out her phone and dialed work. She got the usual Ingrams receptionist, Rose, and she gave her a identity code and asked her to get Dermot on the line for her. Dermot McConaughey was the general manager of Ingram's &amp; Associates, and as such, everything that the company did went through him. If she wanted access to the research department for this unique situation, regardless of what Desirea said, she needed to clear it with him first.\n\nShe waited a minute or so before the phone was picked up. \"Hey April, how are you doing? Desirea filled me in, you ok, girl?\" Dermot's Scottish brogue was almost imperceptible by now, with his many years in the U.S., but it was still there if you looked for it.\n\n\"I'm surviving, boss man. Can I use R&amp;D? Desirea said it would be ok, but I wanted to be sure first.\"\n\n\"You looking for background on your mystery man?\"\n\n\"Sort of. Need to find his ex-wife. I think she can lead me where I need to go.\"\n\n\"And where is that, April?\" asked Dermott, point blank.\n\nThere was silence for a second, before April answered, \"I honestly don't know. But you know I can't let this go. He died saving me. I owe him. I need to find out who he is, and see if there is someone left I can help.\"\n\nThere was more silence. April could almost see Dermott considering his options.\n\n\"Ok, go ahead. But only a couple of days, ok? We do have irons in other fires.\"\n\n\"Thank you, boss man. Big kiss on the cheek. Can you ask Tina to look for records on a business named Sullivan Designs, based out of the Westside of Washington. I'm looking for history and an address on Penny Sullivan. She would probably be remarried by now and have a last name of Glasso. Her husband would be Mark Glasso; he was the sales guy for the Sullivan's Design outfit. Anything they can get me would be great, as soon as possible.\"\n\n\"Will do, April. Keep your cell on. And April?\"\n\n\"Yes?\"\n\n\"Be well. We all know what happened and we're here for you. If you need anything else, let me know, ok? Come and talk to us.\"\n\n\"Sure thing, boss man. I'll be back soon.\"\n\nApril broke the connection and smiled. She knew Dermot meant it. \n\n*****\n\n\n\n\n\nHillier waited until he finished swallowing the last donut bit before he answered the trilling phone. It was a stereotype that all cops ate donuts, but in this case, it was true, mainly because a grateful parent kept delivering them to the station. Two years ago, Hillier and his partner - God rest his soul - had found and arrested three gang bangers who had terrorized several homeowners, burgling them late at night and tormenting the homeowners. The homeowners had formed a little club to support each other and after Hillier found the perpetrators, they'd solemnly decided it was their duty to keep the cops in donuts. Because all cops liked donuts, right? They'd even bought into a donut store together to ensure it would be regular.\n\nWhile Hillier liked donuts as much as the next guy, he also knew this was going to cost him twenty minutes on the treadmill later. Oh well. What the hell. It was worth it. They were good donuts. \n\nThe phone continued to ring and he scooped it up, licking the fingers on his left hand as he did so. \"Detective Hillier here.\" \n\n\"Hello, Detective. I understand you wanted to talk to me?\" said the voice on the other end of the line. \n\n\"And this is?\" asked Hillier. He thought he knew, but better to be sure.\n\n\"This is Manny Trueso here. I got a call from the VA saying you wanted to talk to me, and you left a message earlier today?\"\n\n\"Ah yes, Mr. Trueso. Thank you for calling me back so promptly. I hope you can help. I have a John Doe here, and he has a tattoo that I'm having trouble identifying. I spoke to our contact at the VA here in Washington, sent him a copy of the tattoo, and he got back to me an hour later and said I'd probably want to talk to you. Do I want to talk to you Mr. Trueso? Would you know what I am looking at here?\"\n\nThere was a laugh on the line and Manny answered, \"First, call me Manny. Mr. Trueso was my dad. Secondly, hard to know without seeing it. Can you describe it?\"\n\n\"Yes, it's blue with age. Got a logo with what looks like a serpent, tied around a bullet, and a Latin phrase under it.\"\n\n\"Unum Superesse, right?\" said Manny.\n\n\"Yes, that's it.\"\n\n\"That's the Cambridge tattoo. Had by the appropriate people to remember the Cambridge event in 1992 in Kuwait. It means 'Survive Together'. It's to remind a bunch of people who survived something really bad that survival comes when you work together. The event itself we called the Cambridge Event. I'd rather not go into why. It just takes too long.\"\n\n\"Interesting. So our John Doe was in Desert Storm and part of this event?\"\n\n\"I would say so. There were about thirty to forty people involved in that, though. What else do you have that might identify the guy?\"\n\n\"Two bullet holes, one in the shoulder and one in the pelvis area.\"\n\nThere was dead silence on the phone, then a deep sigh. \"Fuck. Fuck fuck fuck.\"\n\n\"Manny?\"\n\n\"You've got Joe Sullivan right there. No question.\"\n\nAmbrose Hillier lurched forward and wrote the name down. \"How can you be sure?\"\n\n\"Only one guy came out with those wounds. That was Joe Sullivan. That wasn't his real name though; I think he was Julian or something like that - Joe to all us. What happened to him?\"\n\n\"I can't tell you much, Manny. He was killed protecting a lady from a mugging that went bad. He just stepped in and stopped someone knifing her, and in doing so, took that knifing himself.\n\n\"Goddammit. Fucking Joe. He just couldn't help himself. Always had to be the Boy Scout. Do first, think later.\" Manny's voice broke, but Hillier could detect a note of pride in it.\n\n\"Can you tell me what happened in Kuwait?\" he asked, curious about this man, Julian Sullivan.\n\nManny sighed and Ambrose could tell he didn't want to.\n\n\"Long time ago. We were a mobile hospital; Joe was part of the security detachment. We patched up servicemen and also the locals who got caught up in fire fights. Pretty much anyone who needed help, honestly. They'd not seen a hospital out in those areas ever.\n\n\"Anyway, one day the local mullahs got angry and came by, demanding tribute. We told them where to get off and three hours later, we were under attack. We tried to tell them we had children and wounded, but no, they kept coming. Joe was one of the guys holding them off.\n\n\"After the first attack \u2013 there was never just one \u2013 Joe ran out and grabbed weapons from the dead. Several AK47's, some pistols and a rocket launcher. He made a point of arming the doctors and nurses. We all figured it was just a matter of time. The initial attack had taken our defensive force down from twelve to eight. One more heavy attack and we were done for. But no one was going down without fighting.\n\n\"They came again at dawn. Joe and the other guys mowed them down as much as they could, but some got in. Joe literally took out two guys a foot from me. I was lying in a bed there, holding a rifle and trying to stay awake. I was loaded with morphine from an earlier mortar attack and it was hard to stay in the moment.\n\nJoe took a shoulder wound and was shot in the leg or pelvis right at the point the Blackhawks arrived and made mincemeat of the local thugs.\" Manny's voice quavered with emotion as he detailed the events.\n\n\"Jesus. Was he invalided out after that? I presume he got a medal?\"\n\nThere was a snort on the other end of the phone. \"Christ no. This was Desert Storm. This wasn't the Iraqi invasion. His CO \u2013 who by the way, wasn't even present, but was at HQ - wanted to bounce him out for disobeying orders, for abandoning his post. He was lucky to be allowed out without a dishonorable discharge or court martial. The CO was an asshole of epic proportions, but those were the times.\"\n\n\"So, he got wounded, kicked out and no one even said thank you?\"\n\n\"Mr. Hillier, have you ever been in combat?\"\n\n\"Not in the way you have, no. I've been shot at, but not like you have.\"\n\n\"Then you'll never know the way we deal with this. The CO might have been an asshole, but me and lots of other Joes and kids are only breathing because he did what was right at the time. I owe Joe my life. Don't get me wrong, he didn't do it all by himself \u2013 there were seven other guys there who did as much, if not more. But Joe was one of them. I haven't seen him in a few years, since that bitch Tara did a number on him, then he married Penny. I was best man for that. Penny did him no good either.\"\n\n\"So, married twice then? Do you have any idea where he might be living now? This Penny woman?\"\n\n\"Oh no, that ended a while ago. She fucked him over too. Joe's life is all about him being fucked over and him just trying to pick up the pieces.\"\n\n\"Do you know where she lives now? Or Joe, for that matter?\"\n\n\"No, sorry, I wish I did. Like I said, once Penny screwed him up, I lost touch. He just seemed to vanish. I doubt the VA even knows where he is, although they might. They still mail me a check; maybe they do for him too. Detective, can I ask you to do something for me?\"\n\n\"What might that be, Manny?\"\n\n\"Let me know where the funeral is. I should be there.\"\n\n\"Of course. As soon as I know, you will too. Do you have any details on this Tara or Penny, so I can find them?\"\n\n\"Honestly, no. I only met Penny at the wedding and the last time I spoke to Joe, there wasn't much coming from him except how much he hated and loved her at the same time. She led him to believe that they had a child together, but in fact she'd been fucking Joe's salesman, and the kid was his. It destroyed him. That's why I think he went feral.\"\n\n\"Well, thank you for calling me, Manny. I'll be sure and be in touch as soon as I have more details.\"",
        "\"You are welcome. The world is a poorer place without Joe in it. I'm going to the bar to get loaded and raise a glass to him, poor bastard. Always on the receiving end, that guy. What a life.\"\n\n*****\n\nI bought a shack today. An honest-to-god shack. It's the last shack in the row of cabins at Trolleys Field, out of Virginia. We used to come here as kids. I brought Tara here, once. She would never come again. And I brought Penny here a couple of times too. It seems... fitting. The guy who runs the place told me about this broken down cabin off at the end of the row. He couldn't rent it, so I offered to buy it. $10k, flat out. The deal is that I do it up, and when I move on, he gets it back. He's happy and I'm happy. My name won't show up on any deeds and Tara won't find me. \n\nIt's small \u2013 three rooms \u2013 and needs work, but I can do that. The guy here who owns the place, Marco, said if I did a good job, I can be his handyman. I know I can do that. Maybe it's time for some peace. I'm obviously not meant to be out in society \u2013 every time I've tried it's been a disaster. Maybe I need to be a hermit, like Obi-Wan Kenobi. Of course that would suppose there was a Luke Skywalker out there for me to be looking out for. That would be nice. \n\nI was thinking that maybe I could buy a TV and see what everyone is talking about, about that show Lost. It sounds appropriate.\n\n*****\n\nThere was a knock at the door and Penny Glasso looked up irritated from the Hello! Magazine she was reading, following the latest exploits of Lindsey Lohan. Who could be here at 2:00 p.m. on a Tuesday?\n\n\"Aaron!\" she yelled, not moving from the couch. \"Is one of your dopey friends at the door?\"\n\nThere was silence. There was another knock. \"Aaron!\" yelled Penny Glasso, a second time, louder. Still silence.\n\nGrumbling, Penny threw the magazine down on the table and got up and answered the door.\n\nOutside, she found a blond woman, with neat hair and a glossy lips and a ready smile.\n\n\"Hello\", said April, \"Are you Penny Glasso? I was hoping to find the Glasso residence?\"\n\nPenny looked at her, eyeing her up and down. \"Who wants to know?\"\n\n\"I do!\" replied April, with a smile, being as perky as she knew how.\n\n\"Why?\"\n\n\"Well, lets just say I'm tracking down people associated with one...\" she consulted a piece of paper, \"Joe Sullivan? He has, unfortunately, passed away. I'm one of the legal staff who are executing on his will. He left a considerable amount of money in that will, and since it hasn't been updated in quite sometime, my understanding is that some of this will come your way. However, there are some small things we need to go over first. Can I come in?\"\n\nApril watched Penny's reactions closely. Her instinctive reactions would be very informative as to how she left the marriage from Joe, and April was extremely interested in finding that out.\n\nPenny's eyes went wide at the news of Joe's demise. There was the start of honest regret and sadness, coupled with shock. But the moment a will was mentioned, the eyes tightened and with it, a sense of restrained interest. In that moment, April knew all she needed to about Penny, who she was and her relationship with Joe. But she needed to complete the charade and find out as much as she could\n\nPenny stepped back and gestured to April to come in. \"He's gone? Seriously? Shit. Joe is gone. What happened?\"\n\nThe words were there, and the intent behind them was genuine, but the overall posture was that of someone who wanted something.\n\n\"He was killed while defending a woman from a mugging downtown. It's very sad,\" said April, as she walked into the apartment and sat down on the couch.\n\n\"Well, that was Joe,\" said Penny, sitting down opposite and rolling her eyes as she did so, \"always rushing in when it was the right thing to do, at least in his mind. Doesn't surprise me in the least. Although, if I were totally honest, I think that's how he would have liked to go. Doing good like that. He was a total do-gooder.\"\n\n\"Yes, I'm sure he was,\" replied April. She pulled out a pad and made a show of consulting notes. \"So, you were his second wife, is that right? The first, a Tara something or other, ended before he met you, is that right?\" \n\nApril had nothing in the way of information, but this was the best way to find out. Give someone incorrect partial information and most of the time, if they have it right, they'll fall over themselves to tell you. No one ever sits there and says 'wait a minute, aren't you supposed to know this stuff?'\n\n\"Yes,\" said Penny, \"she'd left him and he was on his own, trying to make a go of that business when I met him. We met on a cruise, in Alaska. There was just something about him. When I met him, you know? An aura of some kind. He just felt...safe.\"\n\n\"How long were you married?\" asked April.\n\n\"Three years. It came to a natural end. I ended up marrying his chief salesman. Obviously Mark couldn't carry on working for Joe once that happened, so he struck out on his own. He's been quite successful, too.\"\n\nApril made herself look down in her notes to not give away her reaction to that statement. She knew a fair bit about Penny and what had happened, and that statement wasn't in any way complete or even accurate.\n\nShe'd been on the treadmill in her apartment, sweating out the drinks she'd had the night before with Desirea \u2013 who'd dropped in, unannounced \u2013 when the phone had rung from Tina at R&amp;D at Ingrams. Tina had some interesting info on Penny Glasso. \n\nThey'd found her via tax returns \u2013 April hadn't asked how they'd got that information \u2013 and provided both a current address, a state of her marriage and some other more pertinent information. \n\nAn ex-employee of Glasso Design had posted a blog about his time there and was very forthcoming on opinions on the moral turpitude of Penny and Mark Glasso, both professionally and personally. Recorded also were his opinions on the divorce from Joe Sullivan, and contained within were some interesting facts of information. Firstly, it was patently obvious from comments made in the blog that Mark and Penny had been getting it on for months before Joe found out about it, and it was equally obvious that Mark had taken all of Joe's clients when he left. How, no one knew, but Mark was a silver tongued devil, it had to be admitted.\n\nUpon meeting her, most of April's preconceptions were confirmed \u2013 Penny was a gold digger and Mark had more gold. \n\nFollowing the phone call from R&amp;D, just as April was getting off the treadmill, a text had come in, from a number she didn't recognize. It simply said, \"Your guy's name is Joe Sullivan. Ex Military. More when I have it. Ambrose.\"\n\nShe looked at the text, smiled and said, \"Two days too late, Ambrose. You're good, but I'm better,\" and went to get ready to visit Penny and Mark Glasso.\n\nApril got control of her face and looked back at Penny, taking her in. She was short \u2013 5'4\" \u2013 not quite pudgy but not slim or angular. She was well-endowed up top but her dress sense was sloppy. Mismatched top and pants, and shoes that were at least four years out of date. Her brunette hair was rich and had a distinct red tint to it, but it was carelessly brushed and tied up. A woman who didn't see many people and didn't care about what she looked like at home.\n\n\"Is your husband at home, Mrs. Glasso?\" asked April.\n\n\"He'll be here any moment,\" she replied. \"He just called. He's late again because of client meetings, but he's on his way.\"\n\n\"Ok, yes, that's not a problem.\"\n\n\"So you mentioned a will? When did Joe write it? I mean, we haven't been married for almost eight years now. I would have thought he'd have....\" Her voice died away as she looked past April, and her face scrunched up in annoyance.\n\nApril looked behind her, at whatever Penny was looking at and saw a boy in the door way behind her. He was tall, willowy and had a mop of curly black hair. He smiled at April and said, \"Hi there!\"\n\n\"Hi back!\" smiled April back.\n\n\"You're pretty,\" said the boy, innocently.\n\n\"Well thank you, kind sir. That's a very nice thing to say,\" said April, smiling even more broadly.\n\n\"Aaron, what do you want? I was yelling for you,\" said Penny, in an annoyed tone.\n\n\"Sorry, mom,\" said the boy. He held out a fine-toothed comb. \"Can you brush my hair? They told us about nits today at school and I've been trying but I can't find any nits. But I can't see what I'm doing. Have you seen a nit, Miss? They showed us at school. They look like little aliens, like from Doctor Who. I'm going to be an actor when I grow up. I want to play the Doctor. He's cool. Do you ever wear bow ties? Bow ties are cool.\"\n\nThe words just came tumbling out and April couldn't help but keep smiling.\n\nShe looked back at Penny, who smiled at her apologetically. \"I'm sorry, that's Aaron, my son. He's completely into some British show called Doctor Who. Can't stop talking about it.\"\n\nShe then directed her speech to Aaron. \"Honey, I'll be there in a minute. I'm talking with this lady right now, ok? Go on, run along.\"\n\nAaron smiled again at April and then turned and vanished back through the door he'd arrived from.\n\n\"Cute kid,\" said April, \"is he from this marriage or..?\"\n\n\"Oh this marriage. Definitely Mark's!\" smiled Penny, with that forced smile of someone who doesn't want to talk about it. She then tried to get the conversation back on course. \"So, you mentioned a will?\"\n\n\"Yes, I did. But I need to cover a few other things first. Do you know where Joe lives currently? We tracked him to the Gettysburg complex \u2013 where I believed the two of you lived until you split, but we've no address since then. Might you have that?\"\n\nPenny's eyes narrowed. \"Did you talk to that old battleaxe, Sarah? Is she still there?\"\n\n\"I believe that would be the person we talked to, yes,\" said April, suppressing a grin. No love lost there, obviously.\n\n\"Damn, I'm surprised she's not pushing up daisies. Although I shouldn't be. That old trout sold her soul to the devil years ago. She'll still be going strong when the rest of us are dead and gone. She may be pickled, but she'll still be there. Bitter old goat.\"\n\nPenny leaned forward, conspiratorially. \"She thought the ground that Joe walked on was fucking made of gold. I mean she loved that man. If she had been thirty years younger, she'd have thrown herself at him. It was sad to watch. She thought he was such a saint. Well, he may have been a saint, but she didn't have to live with him. You ever lived with a 'good man', miss..?\" \n\n\"I'm Mary. Mary Hougham. And no, I haven't. A few devils, yes, never a saint.\"\n\n\"Well, Mary, it's not all it's cracked up to be. The better the man, the more you feel shit about yourself. They make you feel bad about every decision you ever make, just by breathing. You know they'd never spend a hundred bucks on shoes, so if you do, well, aren't you the idiot. They make you feel like shit just for being human. It sucks, let me tell you.\"\n\nHaving delivered this little homily on the perils of good men, Penny sat back, with the self-satisfied look of women the world over who have just convinced themselves that their own bad behavior was someone else's fault.\n\nApril looked down at her pad.\n\n\"So the will, yes, let me...\"\n\nThe front door opened and in walked Mark Glasso. He stopped in the doorway, stared at April and then looked enquiringly at Penny.\n\n\"Miss Hougham here is a lawyer. She's here to talk about Joe Sullivan's will!\" Penny said, almost containing her excitement. She cleared her throat. \"Miss Hougham says Joe died the other day.\"\n\nMark Glasso grunted and put down his brief case. April took the opportunity to look at him. He was dark-haired and dark-skinned. His hair was receding and had silver at the temples. He had bright eyes, one blue and one brown. He needed a second shave, and when he smiled, it never reached his eyes. It was the smile of a born salesman, sizing you up. He was barely taller than Penny, but gave the impression of being taller since his posture was so upright.\n\nHe smiled at April and sat down next to Penny, who shifted to move up to him. The look Penny gave him was full of affection but he never even glanced back, staring at April instead. She could see his interest in her physically. Penny didn't even notice it. That was interesting.\n\n\"So the old guy kicked it, did he? Sad. I have no idea what happened to him after we left. I heard his studio shut down but past that, nada. Where's he been all these years?\" Mark Glasso's voice was deep and throaty, like he'd been doing steroids all his life.\n\n\"That's what we are trying to ascertain, Mr. Glasso. So you don't know where he's been either? That's disappointing.\"\n\nApril was talking and saying anything. Now she'd met Glasso in the flesh, she desperately needed to check something out. She just had to figure out how.\n\n\"So the will, we in it then? The old guy hadn't updated it?\"\n\nApril smiled back, forcing down a desire to slap Mark Glasso. She desperately wanted to put this man down for some reason. He just brought that feeling out in her.\n\n\"I can't tell you what the will offers you, Mr. Glasso. Well, I can \u2013 it doesn't offer you anything. It's your wife who is mentioned. However, I cannot tell you what it is, because we haven't opened it yet \u2013 Your wife's name is just one of the required attendees. The reading is next week, on Thursday, at these offices, at 10:00 a.m.\" She handed them a card. \n\nGlasso accepted the card and handed it to Penny.\n\n\"Well, time for me to go. Actually, before I go, could I use your bathroom? Feminine needs?\" She said, imploringly to Penny. April had learnt a long time ago that if you don't want a guy interested in a reason why you do something, make it about periods. No guy wants to get involved in a discussion about that.\n\n\"Back there, first on the right,\" answered Penny, gesturing at the door that Aaron had appeared from.\n\nApril got up, taking her bag with her. She left her iPhone on the table and thanked her earlier self for having the foresight to leave the hidden recording app running. \n\nShe went back to the bathroom and there, as she'd hoped, was the fine-toothed comb that Aaron had been using. She could hear noises coming from one of the other doors, a wheezing groaning noise. She figured he was watching TV. She dumped out her handbag and pulled out the false bottom. In her world, you always traveled with some protection and useful items. \n\nThe extra space in her bag contained a Taser, handcuffs, spare panties and two specimen bottles. In her line of work, it was sometimes necessary to get specimens from individuals in order to ascertain linage, exactly as she was trying to do here. She grabbed three hairs from the comb and put them into one of the tubs, closing its airtight lid. She then put everything back in her bag, used some toilet paper, flushed the toilet, ran the water for a second, then exited the bathroom.\n\nShe went back into the living room and Penny and Mark stopped talking and looked at her expectantly. \n\n\"One thing though \u2013 we really do need to find where Joe ended up. We have no idea if there is a current Mrs. Sullivan, or any other dependents. The will we have was from years ago and we've not seen him since, so we've no idea what his current marital status is. Obviously that will affect the execution of the will. Do either of you have any ideas on that?\"\n\nMark shook his head. \"No, we didn't part of the best of terms. He wouldn't have clued us in.\"\n\n\"Marianne!\" said Penny, suddenly and abruptly.\n\n\"I'm sorry?\" said April.\n\n\"Marianne...er....something ski. Dewski. No, Dubrowski. That's it. Marianne Dubrowsi. She'd know.\"\n\n\"Who might that be?\" asked April, getting her pad out and writing the name down.\n\n\"She's his therapist. Or was, at least. When we met, he was seeing her twice a month, to get over and understand what that other bitch did to him.\"\n\nApril noted the term 'other' in that sentence. That gave away a lot. The act of using the word 'other' meant there was more than one, and Penny, subconsciously or not, knew who the other one was.\n\n\"I see. I would assume she is local? Was he still seeing her when he was with you?\"\n\n\"Yeah, off and on. When we got married I think it went slow, but I know he still saw her from time to time. I would imagine that when we...broke up, he would have gone back to her. She'd know where he was living, if anyone did.\"\n\n\"Well thank you, that gives me something to go on. I guess I'll see you next week then?\" said April, scooping up her phone from the table.\n\nPenny stood and smiled at her, her eyes shining. Mark grunted and thrust out his hand to April, looking for any contact he could get. She shook his hand gingerly and walked to the door.\n\n\"Thanks again,\" she said as she walked out the door, not looking back.  \n\n*****\n\nListening to the recording later, she could hear Penny and Mark discussing the likelihood of what they'd get. Mark was of the opinion that if the will was still what it was when they were married, and what else could it be, since Joe would have taken her out of the will entirely once he got dumped, then they should get it all. He was practically salivating at the prospect.\n\nPenny, to her credit, was tearful about Joe's demise. She kept reminding Mark of the ill they had done him, how they had to do it, for Aaron's sake, and how they really should give some of what they give back, because it wasn't really right. There was at least some contrition there. Not enough to not accept what they thought they were going to get, but at least Penny had enough conscience to say something, thought April.\n\nEither way, it didn't matter. They would get theirs when April was ready.\n\n*****\n\nToday I closed the business. It wasn't doing that hot anyway, not since...since I fired Mark. Or he left. Whatever. Two years of trying and barely making ends meet. Two days ago, I had Mercano's hot shot rep show up. He wanted to 'give me business', 'whatever I wanted'. At least that's what he said. I know why he was here, even if he didn't. After I told him no three times, the arrogant little shit wandered around my office, poking at stuff, and said what was really on his mind. Marianne told me I needed to be specific when I wrote in my journal, so I'll try and remember what he actually said. \n\n\"Frankly, Joe, I have no fucking clue why they sent me out here. 'Make him every offer' they said. So like a good boy, here I am. Now you've said no, I can go back and be grateful. Who the hell wants to deal with a penny ante outfit like this? Word is that you were some hotshot in the day, but couldn't keep it in your pants and now you are here, barely making a living. How the mighty have fallen, eh? Well fuck that. Fuck being nice. Being nice gets you this. I'm glad you said no. Now I don't have to kiss your worthless ass.\"\n\nAnd more along those lines. I didn't bother to correct him or explain. What would be the point? \n\nI did give him a message for Tara. As he left, I told him 'Please tell Mrs. Western that she can fuck off and die, alone in flames. Tell her to Leave Me Alone.'\n\nI have no idea if she'll get the message or not \u2013 probably not in the terms I gave it, but it felt nice to actually say it.\n\nSo, after that, after he left, I was shaking. I was so angry. So I decided the best thing would be to just shut down and go. That way she has no other way to try and 'help.' The business wasn't worth shit anyway. I'm ok at what I do, but without a salesman, it's all scraping the bottom of the barrel, and I'm not doing that again. Once I sold everything, I was left with thirty-two grand. Not much to show for seven years effort. But enough to go and do something else.\n\n*****\n\nThe next day, April got up late, went to the gym to swim her fifty lengths, then showered and dressed in her \"work appropriate attire,\", as she called it. Professional suit, boring blouse, sensible shoes. The only thing she wouldn't do was pantyhose, and that was because it made her feet smell. She was terminally embarrassed about that, and as a result, never worse pantyhose, only stockings, and even those only for a particular purpose, usually involving eliciting an erection.",
        "She was even wearing beige tinted makeup, which just made her look even more bland and boring. But it was necessary, for the meeting she was having today.\n\nShe arrived at Marianne Dubowski's office at precisely eleven a.m. She'd been surprised and then not surprised at how easily she'd found Marianne Dubowski's practice. One Google search and there she was. Still practicing as well, though she was well into her sixties now.\n\nThen it had been a simple matter of calling, making an appointment, being given a cancellation, and here she was.\n\nApril still wasn't sure how she was going to handle this, straight up or with a story \u2013 she decided to make that decision once she'd met the therapist and had time to size her up.\n\nShe sat in the waiting room, reading a three-month-old copy of People, waiting for her appointment to start. Judging by the lingering scent of paint, April guessed that these were new quarters for Marianne's practice.\n\nAt eleven precisely, the large soundproofed door to Mariannes office opened and a wizened older lady, with too much makeup, leaned out.\n\n\"April Carlisle?\" she called.\n\nApril got up, smoothed down her skirt and nodded at the face poking out of the door.\n\n\"Come on in, dear. Lets get a look at you. Sit anywhere.\"\n\nApril took in the office. It was very well designed and furnished. Recessed indirect lighting, neutral to dark walls, comfortable seating. A desk but there were three different seating arrangements, and in the corner there was a play area set up. That indicated that Marianne offered child therapy services too.\n\nShe noted that Marianne stayed in the doorway. That way, April would have to make the seating decision and Marianne would just follow and sit with her. Clever. April went and sat behind the desk, in the large charge designed for Marianne.\n\nMarianne raised an eyebrow, but sat in the easy chair across the desk.\n\n\"How can I help you, Ms. Carlisle? You obviously aren't here for marital dysfunction, as you said on the phone.\"\n\n\"Ms.?\" Asked April.\n\n\"No ring, no shadow of a ring indentation on that finger, plus you have a slight tan and it's all over that finger \u2013 no white where a ring would be. You come in here, no hesitation, sit down in my chair, which is a direct challenge to my authority here. I can accept that, but it's not the actions of a woman who is either upset or looking for absolution. I don't quite know why you are here, but I'm sure you'll tell me, or you wouldn't be here in the first place. So yes, Ms. Carlisle. Seemed safest.\"\n\nApril smiled broadly at Marianne, enjoying this. So nice to meet such a smart woman. \"Oh you'll do. You'll do for sure. You got more?\"\n\nMarianne sat back and said, \"Oh, it's show and tell time? Time to make the therapist dance? Very well. Lets see. The ensemble you are wearing is very calculated. All neutral colors, but obviously business attire, so you are demonstrating you are a professional. Or at least, that's the image you want to display. Which means you know what professional looks like, even if you aren't one. More than likely you are though. Who buys those clothes and never wears them, apart from a con artist. You could be one of those, but what would you want here? Then there's the attitude. You call and say you are having marital dysfunction, yet you march in here like you own the place. And lastly, you are having your own private laugh behind those eyes when you ask me 'is there more'. This is a game to you. Very well, I will play it. For now. It's your money for the session. Is that enough?\"\n\nApril took a deep breath, got up and moved from the seat and sat on the couch.\n\n\"Very much so. Thank you, Marianne. I needed to see who you were and what I was dealing with here. I apologize of the blatant challenge. It was rude, but necessary.\"\n\nMarianne didn't move chairs, she just swiveled the one she was sitting in round. She said nothing for a moment while she studied April.\n\n\"You are an investigator. No, you're more than that. You are trained. You looked around this room when you came in like you were looking for things. You've been trained in checking out a room. And in mind games. Not FBI \u2013 they don't hide things. They are right out in the open with them. No imagination. CIA? Possibly, but what could you possibly want here? I don't have any high profile clients right now. NSA? No, I know all the in-house psychologists at the NSA here in town. Hell, I've treated two of them myself. Hmm, probably shouldn't have said that. So, who are you with?\"\n\nApril was not at all happy with the way this conversation was going. She was about to say something when Marianne snapped her fingers.\n\n\"Oh! Smart attire that obviously isn't normal, arrogant attitude, smart, playing head game \u2013 you're one of Ingrams' people.\"\n\nThere was a stunned silence. April had never been made in the three-plus years she'd worked at Ingrams by anyone that she didn't want to. It had never even come close. And this woman had done it within five minutes of her being in the same room. What's more, Ingrams &amp; Associates was a somewhat secret group. They had no website, no formal declaration of what they did. Only those who would have a use for their services knew who they were, and Marianne Dubowski, perceptive as she was, was not one of those people. The most important thing right now though, was not to confirm.\n\n\"Oh, you'll never admit it. But you are. I can see the micro expressions in your face. Shock, determination to not show it, decision on a course to distract questions. It's all there, dear. You are good though, I have to say it. But you aren't the only one to have been around the block. Interesting though. I've never had one of Ingrams' people in my office before. Be very interesting to hypnotize you.\"\n\nApril didn't know what to say. She needed this woman's information, but she couldn't just come out and say what she did.\n\n\"I cannot confirm or deny anything you just said. I can't. You know I can't. But whatever you think, I do need your help.\"\n\nMarianne just waved her off and got up out of the swivel chair and sat in another of the easy chairs in front of April.\n\n\"You know I can't break patient-therapist confidentially. You know that.\"\n\n\"Well, in this case you might. It is about one of your patients. But he's dead now. So not sure the confidentially still really applies.\"\n\nMarianne considered for a moment and then said, simply, \"Who?\"\n\n\"Joe Sullivan.\"\n\n\"Well.....shit. Joe eh? How did he go? No, let me guess. Something heroic? Something stupid? Both?\"\n\nApril decided that since her cover was blown, she might as well go for broke. Plus there was something about this woman she liked. \n\n\"He saved my life. At the expense of his own. I never even saw him coming. I was being mugged, one was behind me, with a knife, Joe took him out. He got stabbed for his efforts. He died in my arms.\"\n\nThere was a silence for a moment, then Marianne said, \"And I'll bet that make you angry, doesn't it? So angry. You need to find these people and punish them. And you need to do something for Joe. You are in his debt and it needs to be paid, right?\"\n\nApril went silent and still. Marianne had just cut to the core of her need right now. She would find the men who killed Joe, even if two of them were already in custody. They would pay. And she would find some way to help Joe. That's why she was following every lead, to find out more about him and where he lived. She needed to go there. To be in all the communication with him she could get. And this woman had seen all that in two minutes of conversation. This woman was not someone she wanted to be after all. This woman was dangerous. She could see inside your head. What was worse was that while April understood the clinical definitions of 'being on a mission', she still didn't really understand herself well enough to know why she felt this way. Why she had to do this, she only understood that she did have to do this.\n\nAnd then Marianne proved that, by saying, \"And now you are terrified I can see inside your head. It's ok, April, is it? I've seen this before, more than once. You aren't the first. And what's more, if you stopped to think about it for more than ten minutes without the emotion coming on, you'd understand why.\"\n\nApril just stared at her, and said, unwillingly, \"Suppose you tell me anyway?\"\n\nMarianne sighed and said, \"I had hoped you might be further along. Ok then, so be it. You are a control freak, April. Everything planned, everything executed, and you are usually the smartest person in the room. Certainly the one with the most secrets and the best at manipulation. \n\n\"You are also extremely arrogant, which comes with the set of abilities you have and the uses to which you put them. How can you not be? You are the puppet master and everyone else dances to your tune. But in this, there is no situation to be controlled. It's already happened, it's happened outside of your control and that's just something that neither your training nor your personality can take. Yes, your personality,\" she said. April, shocked, opened her mouth to say something, but Marianne continued, \"Why do you think Ingrams picked you in the first place? They picked you because you are already what they needed. You already had that personality in place. They just had to teach you how to use those traits to their advantage.\n\n\"Be that as it may, to return to the issue at hand, someone died for you. And without your knowledge or intervention. Just a selfless act \u2013 it was selfless, right? You didn't know Joe, you weren't sleeping with him and he wasn't a target?\"\n\nApril shook her head, trembling. This woman was taking her apart, piece by piece, showing her who she was and it wasn't pretty. April was smart and knew that this was potentially who she was at heart, but she'd done a great job of burying that beneath platitudes about wanting to help people. Oh, the platitudes were real enough, but it didn't really cover her own deep needs and desires. And that scared her. So she ignored them, because what else could you do in that situation?\n\n\"Right, ok, so someone you don't know sacrifices himself for you. How would you imagine you would react? Someone is going to pay. And you'll find them. That's what you do. Normally you put people together again, but you can't do that without knowing how to take them apart in the first place, right? You have a fearsome skill set, April. Has it never occurred to you that those skills can be applied in reverse? Just like doctors can cure diseases, they can also generate them as well. I think you need to worry about what your response is going to be when you find these people. And anyone else you think needs a little retribution along the way.\"\n\nThat last one stung. April had already started to make plans about doing something about Mark and Penny Glasso, dependent on what the DNA lab reported to her. And it wasn't pretty.\n\n\"Look April, I don't know what you want from me, but I can tell you this. I think you need support and help. And I'm here for you. And when you've calmed down a bit, you'll understand that too. Until then, I'm afraid of what you might do. You sit there, looking all perky and in control, but you aren't, are you?\"\n\nApril just stared back at her.\n\n\"Yeah, I thought so. Burying the anger in work. Classic. Of course you can't see that yet, but you will. But you didn't come here to be analyzed, did you? You wanted something else.\"\n\nApril again, didn't say anything, she just looked pensive.\n\n\"Ah, Joe. Right. You want to find out about Joe.\"\n\nApril bit her lip. It was nice to be in control again. The last part was pure acting, so Marianne would think it was her idea to spill on Joe. And she was falling for it.\n\n\"Very good. You really are very good at this. Make it my idea, eh? My goodness. I don't know what they are putting in the water in that building, but I'd like some here, if you have it.\"\n\n'Well, so much for that idea,' thought April, miserably.\n\n\"Don't pout. It doesn't become you. You need to read up on micro-expressions April. You give yourself away too much. So what is it about Joe you need to know? One professional to another.\"\n\n\"Where did he go? I tracked him to Penny Glasso, but he dropped off the world after that. Is there someone else with him? Where did he live? I need background. I need to know if there is someone waiting for him?\"\n\n\"Oh, I see. Yes, the Active Knight complex. Well, not sure I can help. He was living at the apartment with the chatty women when I was seeing him. After that dissolved, he moved out and he came here one last time and said we were done. I didn't really try and dissuade him. We'd talked as far as we were going to. There's only so many times you can say 'It's not your fault, you just chose badly' that you just stop when someone isn't hearing you. \n\n\"Joe was, at heart, a good guy. A very good guy. He blamed himself for everything that went wrong \u2013 from the thing in Kuwait \u2013 you knew he was ex-military right? There was an operation there that was quite bloody, he was involved, he tried to do the right thing and got kicked out of the Army for it. The first marriage, to Tara, that ended badly when she traded up. The second marriage, that ended when the scum-bag salesmen he hired made off with his business and his wife. He came here and told me he couldn't afford to come any more and I honestly didn't see how I was going to be able to help him anyway.\"\n\n\"So where did he go?\"\n\n\"I don't know. I do know that he was involved in something else though. There was an incident, in a town west of here, in West Virginia. Three boys saved in a creek \u2013 well, two of them. One died of head trauma. Looks like they were all drunk as skunks, decided to go swimming in the river, using some local rope on a tree thing. \n\n\"What I read,\" Marianne said, \"was that three boys got drunk and decided to go in the river. The water was too rapid and too shallow, and they were injured. Joe pulled them out, but one had already died. The locals blamed Joe, and even though he was cleared, you know how things like that stick.\"\n\n\"You're sure that was Joe?\"\n\n\"I think so. They got the name wrong in the press report. But I'm pretty sure it was him.\"\n\n\"How do you know this?\" April asked.\n\n\"I set an alert on Google on Joe's tattoo. The kids' description mentioned it, so I got an alert. Really, this is basic 101 stuff April. You guys need better training.\"\n\n\"So, where was this?\"\n\n\"Some small place, called Shannondale Springs, on the border of West Virginia and Virginia. It's on the Shenadoah River. It's right between Charles Town and Purcellville. I figure he was living out that way somewhere.\"\n\nApril thought about the truck, how it was spattered with mud. You'd get mud near a river.\n\n\"Well, it's definitely a place to start. Anything else you can tell me that might help? Anything that you feel ok telling?\"\n\n\"Dear, I've already told you way more than I should. But yes, there is one person. Have you talked to Tara yet?\"\n\n\"Tara, that's his first wife, yes?\"\n\n\"Yes. The one that traded up. Career woman who decided someone else was a better stepping stone to shattering that glass ceiling. She hadn't figured out that the glass ceiling is called that so those men who are underneath get to peek up the skirts of the women who stand on it. The dissolution of that marriage was the reason he started talking to me in the first place.\"\n\n\"No, I've not spoken to her. I found Penny \u2013 what a piece of work that one is \u2013 but not Tara.\"\n\n\"Well, her name is now Tara Western. Or it was, anyway. If I recall, she got divorced a while back from the new husband. Again Google is your friend. She's not hard to find. On the board of several companies now, so obviously the trade up decision worked out for her. Pity it didn't for Joe. Anyway, go find her. She and Joe were...well they were close. She may well have a clue where he ended up. \n\n\"He really loved her \u2013 when it all came apart he had real problems trusting. He was just starting to get over that with Penny, when she did the same thing. He honestly believed after that that it was him, that this was his fault some how. You know how men are \u2013 they look at statistics and believe whatever they want to believe. He kept saying that two out of two meant it had to be him \u2013 he was the only common component. I kept trying to point out that a sample of two means it's almost meaningless in the scheme of things but he just wouldn't see it that way, no matter what I said.\"\n\nApril smiled genuinely, for the first time. She knew exactly what Marianne was talking about.\n\n\"In the end, he just wasn't listening any more. There are only so many times you can draw a man's attention to the problem they don't want to confront. He fell on harder times when the company closed down and he used that as an excuse to stop coming. Basically, I let him. \n\n\"I'd pointed out everything I could think of, multiple times, and he just wouldn't stop blaming himself, trying to work out what he'd done wrong. He'd come in here every week asking 'was it this she didn't like?' It was just...sad. I'm sure you know what I mean. In the end I was just taking his money for the sake of it. He wasn't going to heal in here, more's the pity. \n\n\"He's one of those that got away from me, and I don't like that very much. He had no one else you know. No one to confide in. He was an only child and his parents died while he was in Kuwait, of a car accident. He had some Army buddies, but while they had that Cambridge thing as a connection, he just couldn't go to any of them and talk. They are all spread out and besides, it's a macho military bullshit thing, you know.\"\n\nThere was a pause, and April could hear the tick of the clock on the mantelpiece in the office.\n\n\"Can I ask you something, dear?\"\n\nApril considered. With this woman, one question could lead to her revealing nuclear launch codes. \"What?\"\n\n\"What do you hope to get out of all this? What is driving you?\"\n\nApril looked at Marianne strangely. What a question to ask.\n\n\"Well, he died in my arms. I'm here because he is not. I owe him something. I would have thought that was obvious.\"\n\n\"Yes, I know all that. So do you. But what's the end game here? What resolution are you going for? Are you expecting to find a wife and kids at home that you can help? Get revenge on the man who killed him? What? What is going to put this to bed for you? When are you going to return to regular life?\"\n\nApril had to consider that one. She'd been in full on investigation mode from the moment Joe had died, and hadn't really considered what the end would be. She just needed to find out more about Joe, to understand him, to find someone she could help, so means to deal with the obligation and guilt she felt. Guilt! That was the first time she'd formed that thought! She was guilty. She'd survived and he had not. She had survivor's guilt!\n\n\"I see something just occurred to you. If I was to hazard a guess, you just realized you feel guilty and are driving yourself because you feel compelled to do something. I don't think you have really examined what the end is going to be, have you dear?\"\n\nThere were suddenly tears in Aprils eyes, unbidden and unwanted.\n\n\"I...I just...\" April looked imploringly at Marianne who got up and came over and sat on the arm of the chair and gathered April into her.\n\n\"Hush there, child. It's ok. It's alright. This is a natural result of the experience you've been through and who you are. It's going to be ok. You just have to get those feelings out there. Nothing you are doing is wrong and it's probably a good thing. Someone needs to follow Joe and know where he has been and what's he's done. It's ok...\"\n\nThey sat there for five minutes like that, April sobbing for a second and Marianne just holding her tight, making soothing noises. At the end of five minutes, Marianne disengaged and looked at April, who was wiping her eyes and wondering what she looked like now.",
        "\"Now, we have fifteen minutes left. Anything else you want to talk about?\" said Marianne, standing, cracking her back and then sitting down at her desk again.\n\nApril looked at her and opened her mouth to speak."
    ],
    "authorname": "jezzaz",
    "tags": [
        "btb",
        "ingrams",
        "cheating",
        "wife",
        "revenge",
        "criminal"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/ingrams-and-assoc-3-american-life-02"
}