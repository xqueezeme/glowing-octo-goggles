{
    "title": "Home for Horny Monsters Ch. 68",
    "pages": [
        "Hi all!\n\nWith the cliffhanger that was last chapter, I certainly can't wait for you to feast your eyeholes on what's about to happen next!\n\nNew readers, you should go back to chapter 1. I've had 67 chapters and two spinoff novels worth of plot to get to this point. Why? Because apparently I'm insane and people like it.\n\nReturning readers, welcome! I will warn you in advance that this chapter does contain strong romantic undertones, including hand holding(!), but no sex. For what it's worth, there is a shockingly intense sex scene next chapter, so you will have to wait.\n\nThanks to everyone who keeps taking the time to rate and comment. I do read through your thoughts and criticisms and want to say thank you to those who have given serious thought to where you think I can improve. When I say that this site has some of the best readers, this is one of the things I am referring to. I appreciate the passion that drives your comments. It means you care about this world I've made, for better or for worse.\n\nI won't keep you much longer. I hope you're having an awesome week, and I can't wait to see your thoughts!\n\nThe Devil of the Forest\n\nThe Nirumbi emerged from the woods, their bows out and arrows nocked and ready. Mike walked backward toward the cabin, then jumped when the door banged open and Velvet emerged. She scowled at the Nirumbi, counting their numbers.\n\n\"There are way more than last time,\" she muttered.\n\n\"I see that.\" He raised the rifle and took a shot at Leeds. The moment he pulled the trigger, Leeds vanished as if he melted into the shadows. \"You know this guy?\"\n\n\"Nope. But I do know that those arrows are bad news, and we're almost in range. If they can take down Uncle Foot, then we don't have a chance.\"\n\n\"Mike.\" Dana was nearby, and she raised her hands off the ground. \"I'm willing to help, but I need to be let loose.\"\n\nHe looked at her, then at the others. Yuki's snowballs were forming up on top of each other, and she was able to slow down the Nirumbi by casting defensive volleys of ice. Bigfoot crossed over to the barn and ripped the door off its hinges, using it as a shield against the few arrows that were landing nearby. Quetzalli had an intense look on her face, and her horn was glowing with energy. Dark clouds were forming overhead.\n\n\"Are you sure that's a good idea?\" he asked the dead girl.\n\nDana bared her teeth. \"I promise I won't bite. Well, anyone I know.\"\n\n\"Sounds good enough for me,\" Velvet decreed, then unfolded her sword and severed Dana's chains. Dana moved with astonishing speed, dragging her broken chains behind her in the snow. When she disappeared into the trees, there were cries of alarm from the Nirumbi.\n\nI hope that wasn't a terrible idea, Mike thought, aiming his rifle at a Nirumbi that had broken free of the trees, sprinting toward Yuki. When he pulled the trigger, the Nirumbi spun around before collapsing into the snow. It reached a single arm to the heavens and let out a wail of agony.\n\nSomething about that anguished cry struck a chord deep inside of him. When they had been ambushed, he had mostly run interference, scaring them away with his screams. While his friends did the heavy lifting, it had been easy to disconnect from the idea that they were living creatures, but now?\n\nHe shivered. It wasn't from the cold.\n\n\"Yuki! Bigfoot!\" Mike raised the rifle again, watching for more movement. Pondering the ethics of the situation would have to wait for later. He pressed his back to the cabin and kept both eyes open. They couldn't get to him from behind, but knew for damned sure he was vulnerable on his sides. \"Tell me who we're dealing with!\"\n\nBigfoot ignored him. He used his shield to make a dash into the nearest group of trees and then disappeared. Mike heard him roar a few seconds later, but now he was on the other side of the clearing. The Nirumbi cried out in alarm, and he saw a few go flying through the air.\n\n\"I don't know,\" Yuki responded. She was holding her tarot cards as the snowballs finished assembling themselves into snowmen. As the featureless bodies hopped past her, she was jamming cards into their torsos and tossing others into the ground. Large stick arms emerged from the snowmen, and they paused only long enough to pick up the swords that Yuki had summoned. \"Ran across him once. Claimed to be the Devil, but Emily told him he was full of shit. Did some sort of mumbo-jumbo on us that got us locked in the Everglades for a week.\"\n\n\"How did you beat him?\"\n\n\"We didn't.\" Yuki paused, looking away from her makeshift army. \"He got bored and let us go.\"\n\n\"You'll find me far more entertaining today.\" Leeds' voice came from everywhere at once. \"You have something that I want, and I shall not rest until it is mine.\"\n\nVelvet cocked her head, then pointed to the West. \"He's over there,\" she said, then spun around just as a trio of Nirumbi appeared at the corner of the cabin. They raised their bows to fire, but their shots went wide when Dana tackled them from behind.\n\nShe hit them hard enough that they scattered like bowling pins. Dana let out a growl and sank her teeth into the throat of the one closest to her and ripped. It was like watching a speed eater at a chicken-eating contest, except with far more blood and shrieking.\n\n\"Jesus Christ,\" Mike muttered. He could almost hear Lily chastising him for his language.\n\n\"Sword!\" Dana whipped her head toward Velvet, her hand outstretched.\n\n\"What do you need it for?\" asked Velvet as she tossed Dana the blade.\n\nDana snatched the sword out of the air and beheaded the Nirumbi she had just bitten.\n\n\"Zombie birth control.\" She tore into the other two before they could regain their footing and stabbed them in the head to prevent them from turning. Dana bolted into the woods, leaving a trail of blood behind her footprints.\n\n\"I think I'm gonna be sick,\" Mike muttered, then placed a hand to his stomach. He was feeling woozy.\n\n\"It's us or them,\" Velvet told him, then ran back into the cabin. When she emerged, she was carrying her father's pistol. \"We didn't start this. Remember that.\"\n\nThe steely glint in her eyes steadied his resolve, and he continued to watch the trees. The snowmen charged into the forest, filling the air with cries of alarm. With her army finished, Yuki returned to Mike's side and summoned tall walls of ice around them while leaving windows for him to shoot through.\n\nNirumbi charged at them, and he fired. Once they fell to the ground, he tried to ignore their cries while reloading, doing his best to focus on the task of protecting the others. Quetzalli summoned lightning blasts that struck her horn, allowing her to redirect them into small clusters of attackers that died on impact. The metallic smell of ozone filled the air.\n\n\"Something feels off about this,\" Yuki said, after almost ten minutes of killing Nirumbi. \"It's clear that the Nirumbi are outmatched, just like before.\"\n\n\"There are way more of them now,\" Velvet replied, then raised her gun to take down a Nirumbi that had scaled the wall. \"Maybe it's a numbers game?\"\n\n\"No, Yuki is right.\" Mike scanned the tree line. \"What would be the point in sending them in just to die? Why would they do it?\"\n\n\"Because they are less afraid of you than they are of me.\" The voice came from behind him, and when he spun in place, he saw Leeds standing on the roof of the cabin.\n\nBoth he and Velvet opened fire, but Leeds flickered as the bullets went through him.\n\n\"It's a projection,\" Yuki explained.\n\n\"What do you want?\" Mike asked.\n\nLeeds chuckled. \"That's simple, dear Caretaker. I want this land.\"\n\n\"Why not just ask? Why not find a different way to reach out?\" Mike felt his anger growing as his magic roared inside of him. Tiny sparks formed on his fingertips, but he clenched his hands, willing them away. \"I feel like you had options.\"\n\n\"Mike, don't.\" Yuki grabbed him by the shoulder. \"Really, don't even talk to him. He's manipulative.\"\n\n\"Oh, I will only be honest with you, Mike Radley.\" Those crimson eyes glowed, as if burrowing into Mike's soul. \"You see, I wanted to do this long before you took notice of this place. It would have been so easy to take this land, to become part of the Great Game before you even knew what was happening.\"\n\n\"So why didn't you?\"\n\nLeeds shook his head. Mike still couldn't see his features. \"Because the spell I used to get everyone in required too much time. I couldn't accomplish it while that human was about, the father of the Arachne. On more than one occasion, he disrupted my runes without even knowing it. When he died, I only had to wait for the spiders of the forest to slumber to complete my plans.\"\n\n\"My dad?\" Velvet lowered his gun. \"You were afraid of him?\"\n\n\"Afraid is the wrong word, little spider. I respected him. He demonstrated true dedication to defending this place and an attention to detail that his progeny lack.\"\n\nYuki started to ask something, but Mike didn't hear what she said. Instead, he heard the distant hoots of the Nirumbi. They were excited again, which meant that something had changed, but what?\n\nWhen he turned to look back toward the forest, he saw an immense figure moving just behind the trees. A pine was toppled as the being pushed its way into the light. Standing taller than even Bigfoot was a creature with stretched-out limbs and the head of a deer. It snatched up a Nirumbi that tried to run past and shoved the whole thing in its mouth. It chewed on its snack and let out a howl before charging at them.\n\nMike opened fire, but the thing kept coming. Velvet fired off a couple of rounds before Quetzalli summoned a lightning blast that knocked the creature off its feet. After only a couple of seconds, it leapt into a standing position, its whole body smoldering. Yuki summoned a wall of ice to protect them, but Mike knew it wouldn't last long when the creature dragged long fingernails against the other side and let out a howl of anger.\n\n\"Many men have met my Wendigo, Mike Radley. None have lived to tell the tale.\" Leeds laughed, then vanished. The Wendigo raised massive fists and slammed them into the ice, causing it to crack.\n\n\"Bastard distracted us.\" Mike chambered another round and raised the rifle. Did it have a weak spot? \"What do we know about Wendigo?\"\n\n\"Eaters of flesh.\" Quetzalli snorted in disgust. \"Not like Dana, not at all! They are once-men, driven by greed and power! Dark spirits walk these lands, and I will have none of it!\"\n\nHer eyes flashed a bright purple and lightning from above blasted her horn. Instead of discharging, her whole body glowed as she stored it inside her body and repeated the process. Mike covered his ears and closed his eyes. He could feel the thunder rushing through his body and the hair on his body stood on end as the dragon's electrical charge grew.\n\nThe Wendigo shattered the ice and tried to force its way through when Quetzalli let loose a lightning blast that caught the Wendigo in the chest and hurled it away from them. There was an explosion, and the air filled with the scent of blood and burnt flesh.\n\n\"Gah!\" Mike's ears were ringing, and he couldn't hear what Yuki was shouting. But he did see the Wendigo stand up, its body smoldering. It picked up the nearby corpse of a Nirumbi and devoured it, walking toward them with purpose as it feasted with every step. A large hole had been blasted in its chest, revealing the Wendigo's rib cage.\n\nSomeone yanked on Mike's arm. It was Velvet. She pointed at Quetzalli, who was lying down on the ground.\n\n\"Understood!\" he said, his voice sounding muffled to his ringing ears. When he knelt down to grab her, a jolt of energy ran through his body, numbing his legs. Cursing, he stumbled for a moment before scooping Quetzalli up in his arms.\n\nThe Wendigo growled, then snatched up a Nirumbi that ran up and prostrated itself. Upon consuming the little person, the Wendigo's wound closed even further.\n\nThey're feeding themselves to it?!? Mike stumbled into the cabin and laid Quetzalli on the ground. She was still breathing, but her horn was hot to the touch and she was out cold.\n\nHe made a quick detour to his room and dug through the potions that Zel had sent with him. The healing ones had cute little handwritten labels that described their application, but he didn't want those. Instead, he dug for the ones that Zel had put warning labels on. He scooped up a bright red one.\n\nDragon's Breath, the label declared. Use with caution.\n\nMike and Zel had become coated in Dragon's Breath shortly after they first met. He could still remember her stern warning to wash it off immediately and definitely to never scratch it or the burning would get worse.\n\nHe ran out of his room and then straight out the front door. The Wendigo's legs had been frozen to the ground and the Nirumbi were rushing within arm's reach.\n\n\"I can't stop them all,\" Yuki said as Velvet fired her gun at the Wendigo, shattering part of an antler. \"There are too many of them!\"\n\n\"Where are your snowmen?\" he asked.\n\n\"Fighting off the rest of the Nirumbi!\" She chanced a look over her shoulder. \"Mike, there are hundreds of them!\"\n\nHis jaw dropped. Hundreds?!? \"Wh...why aren't they all attacking?\"\n\nShe turned her attention back to the Wendigo. The ice had encased its waist, but cracks had already formed. Was the Wendigo getting bigger?\n\n\"They're luring the snowmen away from here. Leeds is out there too, taunting Bigfoot further into the woods. This is intentional, he's spreading us too thin! I think he knows the Nirumbi don't pose a threat, but this...\" she paused to hurl an icicle at the Wendigo. It shattered on hard, white flesh. \"This thing is something else.\"\n\n\"Let's see if we can buy ourselves some breathing room.\" He held up the potion. \"I don't think I can throw it from here without missing.\"\n\nVelvet looked over at him and snatched the potion from his hand. \"Seriously, a Dragon's Breath?\"\n\n\"Yep. Will do some damage, chase it off maybe.\"\n\n\"Roll to hit, add in that Dex modifier.\" Velvet smirked, then launched the potion. It soared through the air and shattered on the Wendigo's chest, coating the creature in a thin film of red.\n\nThe Wendigo immediately tried to remove the clinging slime, but only succeeded in smearing it across its chest and stomach. Frustrated, it tried to wipe its hands in the snow, but whatever Zel had added to turn the fine powder into a liquid wasn't coming off.\n\nMike watched in satisfaction as it started scratching.\n\n\"That's right, itches, doesn't it?\" He grinned when the Wendigo let out a growl, followed by a whimper. It had stopped grabbing Nirumbi and was now just scratching itself. A few Nirumbi had been exposed to the substance and were already rolling the snow in an attempt to get it off.\n\n\"Magic itching powder?\" Velvet cocked an eyebrow. \"Seems a little\u2014\"\n\nThe Wendigo roared, then broke free of its prison, scratching furiously at its chest. The red liquid had turned crimson, staining the Wendigo's paper-white skin. It tumbled about in the snow, trying to rid itself of the Dragon's Breath.\n\nMike expected the Wendigo to bolt. Instead, he was horrified when it crouched down and dug large nails into its own flesh and started peeling. Yuki gagged when the Wendigo yanked a large strip of its own skin off and tossed it to the side where it slapped loudly against a tree.\n\nYuki tried to encase it in ice once again while it proceeded to skin itself, but it was enraged now and easily broke free.\n\nHow the hell were they going to stop this thing? If they couldn't hurt it, then maybe they could trap it? But how? Yuki's ice wasn't slowing it down much, and the guns couldn't kill it. As long as the Nirumbi kept lining up to be snacks, there was no way they could continue to keep it away.\n\nThe Wendigo tossed the rest of its ruined flesh to the ground and then regenerated by stuffing its face with more Nirumbi. It moved toward them, growling ominously.\n\n\"Retreat!\" Yuki summoned another series of ice walls. \"Into the cabin!\"\n\nVelvet went in first, followed by Mike and then Yuki. Once inside, they bolted the door shut and ran around to the nearest window. The Wendigo had reached the porch, and it rammed its foot into the front door.\n\nMike expected it to explode, showering the room with shrapnel. Instead, the kick was little more than a muffled thud. The Wendigo repeated the attack, then shifted over to a window and punched it. Instead of the glass breaking, the Wendigo's knuckles split apart, revealing bone.\n\n\"That's not what I expected.\" Velvet put her hands against the glass. \"You can't even feel the vibrations from the hit.\"\n\nMike shook his head in disbelief. \"So you're telling me the exterior of the home is unbreakable?\"\n\n\"Guess so.\" Velvet shrugged. \"It's not like this has happened much. Even during the goblin attacks, their arrows would stick in the exterior. They never wielded anything bigger than a club, and dad would shoot them before they got close.\"\n\n\"Well okay, then.\" He would have to bring Ratu out here and figure out how to do something similar to the house defenses.\n\n\"We may be safe for now,\" Yuki said, her arms crossed. She was in the kitchen, her attention directed outward. \"But we're trapped. Bigfoot and Dana are out in the forest, Abella is missing, and help isn't coming. I'm trying to bring the snowmen back, but they're outnumbered and I don't think they'll do any good against the Wendigo.\"\n\nMike groaned, then looked back outside. The Nirumbi had formed an outer perimeter and the Wendigo, whose flesh had regrown, was busy trying to rip the siding off the house. Every time those sharp claws dug into the side of the cabin, they seemed to slip right off. Would the magic that protected this place be enough? And if so, how long could they hole up here?\n\nUp on the roof of the barn, Leeds reappeared. His laugh became a screeching sound, filling the air like thousands of angry cicadas. The Nirumbi were lighting torches, their angry little faces highlighted by the flames.\n\n\"Uh...\" Velvet backed away from the windows. \"I really hope this place is fireproof.\" She was wringing her hands together, her unblinking eyes stuck on the torches that had surrounded her home.\n\nThe Wendigo roared, then punched the front door again. This time, the wood groaned and a split appeared in the wood.\n\n\"Yuki?\" Mike's throat had gone dry. \"Have any tricks up your sleeve?\"\n\n\"Always.\" Dark lines had appeared on her face and she was shuffling her tarot cards. \"Is there a back door to this place? I'll hold them off while you run.\"\n\n\"You can't hold them on your own,\" he whispered.\n\n\"Probably not.\" When she looked over at him, there was a wild look in her eyes. \"This is a bad situation, Mike. Very bad. That thing out there is possessed by some type of spirit that possesses an affinity for the ice. I can't hurt it.\"\n\nHis heart raced when he realized that she was planning to buy them time with the cost of her own life.\n\n\"We need a plan,\" he replied. \"A trap, maybe? What cards do you have?\"\n\nThe door creaked again. The Nirumbi were chirping in delight, and Leeds was now speaking to them in a stilted language Mike didn't recognize.\n\n\"Velvet.\" Yuki looked at the Arachne. \"Drag him out of here if you have to.\"\n\n\"I...I...\" Velvet's hands went to her throat and squeezed the dog tags that she wore. She opened her mouth to say something, then paused, her eyes on the window.\n\nCurious, Mike peered outside through the glass. The Nirumbi were still cheering, but the Wendigo had gone still, its gaze toward the heavens.\n\nWith a sound like a car crash, Abella smashed into the Wendigo from up above. When she rose, the firelight from the torches revealed that her face was covered in purple blood. She grinned at the Nirumbi, revealing all of her teeth, then looked up at Leeds. The Wendigo had gone still beneath her feet.",
        "\"Rock beats slithers,\" she yelled. \"Definitely not my first snake.\" With a grunt, she grabbed the Wendigo by the antlers and ripped its head off.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nAbella had been trapped beneath the ice with that giant snake for over an hour as it tried to crush her in its coils. They ended up on the murky bottom of the lake, the serpent incapable of crushing her, and Abella unable to swim away. Her lucky break had come when it had tried to swallow her whole.\n\nWhen the serpent had opened its cavernous maw to devour her, she had spread her wings and tail wide. During the struggle to swallow her, she had grabbed its fangs and held on for dear life. The snake had attempted to dislodge her, but once her grip was solid, she started pushing the snake's fangs apart.\n\nThe serpent tried to spit her out, but she refused to let go. After a short eternity in darkness, light appeared overhead as the snake moved into the shallows and tried bashing her into some rocks.\n\nUndeterred, Abella continued to press, and one of the fangs shifted suddenly as it snapped at the root. She wiggled it back and forth, trying to pull it free.\n\nOnce they broke through the surface ice, the serpent let out a hiss like escaping steam, then smashed her into the shore. Abella sank her talons into the rocky ground, finding purchase on a huge boulder. The serpent cried out and coiled around her, trying to push her away from its head.\n\nWith a ripping sound, the fang came away in her hand. She flipped it over and jammed the giant tooth into the roof of the serpent's mouth. It let out a hiss of pain and then released her in a bid to get away.\n\nThough she had an opportunity to escape, Abella wasn't about to let it get away after trying to eat her. What if it came after the others? She dragged it further onto the shore, her talons ripping holes in its iridescent scales. It tried to put up a fight, but now that she was on solid ground, it was easy enough to bludgeon it to death with her fists. Once it was dead, she noticed a beautiful gemstone embedded in its forehead. Curious, she plucked it out, spraying blood all over herself.\n\nRacing back, her whole body hurt. The cracks in her left wing were getting worse, and her legs felt stiff. She could hear the distant cries of the Nirumbi in the direction of the cabin and hoped she would make it in time.\n\nThe creature beating on the cabin was incapable of withstanding over a thousand pounds of angry stone coming at velocity. Its head came off with a satisfying rip that stunned the Nirumbi into silence.\n\nHowever, the head she now held was hollow on the inside. It hadn't been obvious from the outside that it was simply the mummified head of a rather large deer. Stunned, she found herself staring down at the creature beneath her.\n\nIt growled and then tossed her away like a piece of trash.\n\nShe pulled her wings in and rolled, then smirked when several tiny arrows shattered on her hide. When the beast stood, she realized it was nothing more than a human that looked like it had been stretched out from the inside to fit on something over ten feet tall. It was emaciated and had milky white eyes that matched bloodless lips.\n\nWhen it howled, she could see all of its blood-stained teeth. It came at her so fast that she almost didn't react. Her instincts kicked in and she slammed her fist into the creature's jaw so hard that there was an audible pop as the bone shattered. Dark blood spilled across her knuckles, but it kept moving.\n\n\"Wha\u2014\" Abella gasped as she was lifted into the air and tossed toward the barn. She smashed into the wall and fell down into the snow, her wings hanging limply around her. Up above, Leeds' burning-coal eyes regarded her with hatred.\n\n\"You never should have returned,\" he growled, then disappeared into the shadows. \"Wendigo! Kill her!\" Leeds reappeared in front of her and waved his hand.\n\nAbella was yanked into the air by shadow hands and thrown toward the Wendigo. The Wendigo clamped powerful claws onto her legs and spun her in a circle before throwing her into a nearby tree.\n\n\"Putain!\" she exclaimed upon impact. The trunk had snapped, and the pain in her wing was getting worse. How in the hell was this thing so strong?\n\nThe snow crunched under the Wendigo's feet as it charged her. She looked up in time to get kicked through the trees. Branches snapped beneath her weight and she crashed into a Nirumbi, killing it on impact.\n\n\"Ow.\" She picked herself up and dodged out of the way when the Wendigo threw the tree she had felled at her.\n\nA pair of shots rang out, and the Wendigo turned its attention toward the sound in time to see Velvet to leap onto its chest and shove a gun against its forehead.\n\nEach bang was like a hammer on steel, and the Wendigo went down in a heap. Velvet leapt free and rolled across the snow, landing in front of Abella.\n\nDumbfounded, Abella could only stare until the twang of a bowstring being plucked made her extend her wings forward to protect Velvet. A pair of arrows shattered against her wing, sending pain up into her shoulder.\n\n\"It's going to get back up,\" Velvet said, then turned back toward the Wendigo. It was crawling toward them, both flesh and bone mending on top of its neck.\n\n\"How is it still alive?\"\n\nBefore Velvet could answer, bands of darkness grabbed her around the body and hurled her away from the Wendigo. Abella tried to follow, but the Wendigo stood up in front of her, its skull reformed now. Glowing blue light resided where its eyes should be as skin grew over muscle, and then its eyes reappeared.\n\nIt said something in a language she didn't recognize, and then came at her. She jumped into the air and raked its face with her talons. The Wendigo took the hit and grabbed her by the head with both hands and squeezed.\n\nThe pressure was incredible. She grabbed at its hands, then its wrists. Her talons scraped off the skin on its chest as her heart thudded rapidly. Her core temperature was rising dramatically now, and her vision was going black.\n\n\"You should have stayed at the bottom of that lake.\" Leeds spoke to her from somewhere nearby. \"I only hope that you spared the offspring of the Estakwvnayv. A warrior like you would have been welcome in my new world, but not if you are already harming the natives.\"\n\nAbella groaned, then bit into the Wendigo's palm. The flesh tasted like oversalted fish that had gone bad.\n\n\"I've worked hard to come this far,\" he continued. \"And not only will I get what I want, but you will have lost your life for nothing! Nothing! You stupid gargoyle!\"\n\nSomewhere in the woods, Mike screamed in pain.\n\nAbella took a deep breath through her nose, pulling in as much oxygen as she could. Her kind didn't need to breathe, not for survival. No, they had big lungs for something else entirely. All the while, she kept chewing, causing the Wendigo to adjust its grip. Its blood was black, but it was also slippery.\n\nThe Wendigo lost its grip and fell backward. Abella fell to the ground and saw the Wendigo was now missing a hand.\n\nDana stood in the snow, her blade gleaming. The Wendigo reached for her, but she slashed away, lacerating its other arm. Dark shadows wrapped around her waist and pulled her into the darkness.\n\n\"Your friends are fighting for you,\" Leeds told her as she rose. \"And they will die for you as well.\"\n\n\"Do you ever wonder why humans cut off our heads and make us gargle rainwater?\" Abella rose to her full height and took another deep breath. She didn't bother looking for Leeds, the Nirumbi, or anyone else. Her entire attention was on the Wendigo as it came for her again, a skeletal hand emerging from its amputated limb.\n\nTime distorted and slowed as she took one more breath. On the day she had hatched, she had been the smallest of her clutch. It had been suggested to her mother that she would be too weak to survive, too small to contribute meaningfully. But in those first moments of existing, she had let out a cry louder than any of her siblings, a cry that had commanded attention.\n\nThe name Abella meant breath. Although she wasn't the strongest or the biggest of her clutch, it was neither of these things that mankind feared the most from her people.\n\nMike was hurt. Whether physically or emotionally, it didn't matter. Her friends had fought for her, even though she was stronger and immune to the arrows of the Nirumbi. Her rage ignited within, flooding her whole body with an immense heat that caused her stone skin to glow an eerie red.\n\nWhen her own kind had turned their backs on her, she had lost her direction, there was no longer any purpose. Protecting the house had been her primary function, but she had come to know those who lived inside. Ever since Mike had moved in, she had also come to know them all better than ever. Her roof, once a lonely place, was shared with Kisa and occasionally Lily. The faeries would tease her until she gave chase, and there had even been a couple of nights where she had sat with Cecilia, the two of them watching romance shows on her tablet.\n\nNo, they weren't just her family. They were her clan. She would fight for them, and they for her. And there was no doubt in her mind that they would die for her if needed.\n\nShe couldn't let that happen. Her heart pounded, each beat like thunder in her ears. Opening her mouth as wide as possible, Abella used the pressurized air in her lungs to expel the flames that had formed inside, releasing her Heartfire in a high-pressure stream.\n\nThe icy-blue flame turned the Wendigo's hand into ash on impact, and she quickly lost control of her Heartfire as she always did. She had to kneel and sink her hands and talons into the ground beneath the snow to keep from blowing herself head over heels as she filled the air with a fire so hot that nearby trees ignited. The Wendigo didn't even have time to turn and flee as its skin then muscle flaked away into nothingness.\n\nLeeds had been so determined to isolate her that she knew everyone was far enough away that they could run if necessary. The woods around her were filled with smoke and steam, and she could no longer see the cabin. Large swaths of snow contained Nirumbi that had been killed so quickly that they looked like smoldering statues.\n\nOnce ignited, her Heartfire was difficult to stop. The air in her lungs was superheated, unable to simply cool on its own. The Wendigo was a melted lump of flesh and stone now, so she turned her head toward the sky and bellowed fire into the night, chasing away the shadows. Several minutes passed before she could swallow it away, and her body cooled. She stood now in a patch of scorched earth, surrounded by slushy banks of snow. Her head pounded from the internal pressure of her breath attack, and she slumped down.\n\nGroaning in pain, she turned to check on the Wendigo. Small tendrils of flesh looked like they were trying to form into a network of veins, but one swat of her tail knocked it over and it ceased to move. A dark mist formed above the corpse, then dissipated into the night.\n\nThe forest was burning all around her. She picked up the Wendigo and tossed its body into the nearby flames before limping toward the cabin.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\n\"Abella!\" Mike cried out as he ran back outside. The Wendigo had just knocked her away, so he opened fire on it, hoping to pull its attention back. His body flooded with a chill and he threw himself to the ground as a spear shot through the air.\n\nRight. The Nirumbi were still a threat. He tried to reload the rifle, but his fingers were wet from the snow. His vision filled with red fur as Yuki leapt in front of him and sent a swirling mass of snow toward their attackers.\n\n\"Get up!\" she cried, then hurled even more ice outward.\n\n\"We have to help Abella,\" he commanded, then got to his feet. He turned toward the Wendigo and saw that Velvet was already over there, attacking it with a gun.\n\n\"Go back inside!\" Yuki yelled at him, but he didn't listen. He started running toward Abella, but slid to a stop when he saw Velvet get tossed away. She crashed through the woods and disappeared.\n\n\"Shit.\" He could hear the Nirumbi hooting where Velvet had gone. Indecision flooded him, and when Abella collided with the Wendigo, he realized that there was very little he could do to help her. It was a clash between titans, and his one trick would disable her.\n\nBut Velvet could help, and right now, he could help her. He sprinted through the woods, dodging errant arrows as he went. Behind him, Yuki yelled his name as she followed, but all he could think about was Velvet. Was she hurt? Had the Nirumbi gotten her? His heartbeat roared in his ears as he leapt through the trees and landed in a small clearing, his rifle pointed toward the sky.\n\nThe Nirumbi were in a circle around Velvet, their spears held ready. The ground was littered with their bodies, and Velvet stood in the middle, her upper body covered in brown, spiky armor. She turned her head at his arrival, and he slid to a stop, stunned by the sight.\n\nVelvet pinwheeled through them, dodging blows and impaling them on the thick spikes protruding from her body. She moved like the wind, kicking out with her legs and smashing the Nirumbi through the trees.\n\nA small cluster of Nirumbi readied their arrows. Mike charged them, using the rifle as a club. They were so intent on Velvet that they didn't see him coming.\n\nThe stock cracked when he slammed it into the head of the first Nirumbi. The creature's eyes went wide before it fell to the ground. Its compatriots dropped their bows and drew knives, and Mike held up what was left of his rifle.\n\nThere was a flash of metal, and now Dana was there. She growled, a feral sound that made him back away. She carved her way through the Nirumbi, taking hits from them that she didn't seem to notice.\n\n\"Abella needs help,\" he told her. \"Back, by the cabin!\"\n\nDana said nothing, just looked at him with red-rimmed eyes, then sprinted back the way he came, passing Yuki in the process. The kitsune threw a tarot card in the air that summoned a handful of razor-sharp blades that tore through the remaining Nirumbi.\n\n\"I'm almost out of cards,\" she yelled, then sent out a blast of frost that knocked nearby Nirumbi away. \"We need to get back to the cabin!\"\n\n\"We need to get to Abella!\" He looked over at Velvet, who was in the middle of breaking a Nirumbi's spine.\n\nHis mind blanked from the carnage. Though his home had survived many attacks, it had never been this brutal or visceral. He could see the panic in the eyes of the Nirumbi as they were killed, watch them stare in disbelief and wonder as their brethren died. This was death, up close and personal. The last time he had seen such a thing was...\n\n\"Mike!\" His mother reached toward him, the flames igniting her skin.\n\n\"Mike!\" Yuki tackled him, an arrow whizzing through the air where he had stood. Velvet dodged a few arrows of her own, then used a couple of nearby Nirumbi as shields. \"We need to go, they have reinforcements!\"\n\n\"I...\" He looked at his feet and saw the blank stare of a Nirumbi, its eyes focused on eternity. The flames were suddenly real again, his mother's screams for help filling his ears.\n\nHe stumbled around, suddenly lost. There was too much movement, and the forest was filled with noises that overwhelmed him. He fell, then got back up and staggered backward when he saw that he had blood on his hands.\n\n\"Move!\" Yuki grabbed him and pulled. He blindly followed, his gaze sweeping across the woods. Velvet was behind them now, blocking the rear with one of the swords that Yuki had summoned.\n\nDisoriented, he stumbled over a log and fell to the ground. Yuki turned around to help him up, and between her splayed tails, he saw a Nirumbi step through the brush and aim its bow at her back.\n\nThe moment the bow twanged, he yanked Yuki toward himself and spun around. His gut was flooded with ice-water, but he held strong as the arrow struck him in the back. He cried out in agony and the world fell out from beneath him.\n\nYuki and Velvet both screamed his name, but everything was going dim. He felt hot, as if he was being cooked from the inside. Gasping through the pain, he pressed his face into the snow and let out a sigh that became a rattle.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nVelvet saw Mike fall to the ground, the arrow protruding from his back. Both of her hearts stopped, the wind suddenly knocked from her body. Despite growing up in these woods, she suddenly felt lost and was unsure of how to proceed.\n\nYuki let out a shriek of rage, and her auburn hair developed several thick, white streaks as the snow exploded all around them. Velvet was suddenly lost in the snow flurries, and she stumbled forward until she found Mike lying on the ground. His skin was pale and he was barely breathing.\n\n\"Get him to the cabin!\" Yuki screamed. Velvet couldn't see the kitsune but did catch a glimpse of something with bright white fur as it passed her by. \"Give him the potions he brought!\"\n\nVelvet knelt down and shed her armor. She was much faster without it, and time was of the essence. Scooping Mike up in her arms, she picked a direction and ran.\n\n\"Uncle Foot!\" she cried out. \"Please, I need you!\"\n\nShe hadn't seen him since he stormed off after the Nirumbi. Where could he be? As she moved through the forest, she caught sight of the blazing light of a fire and headed toward it. She really hoped it wasn't the cabin.\n\n\"Just gotta...\" Mike's hand reached away from her. \"Need...pull me out...hot.\"\n\n\"It's not hot, now be quiet,\" she whispered. If her uncle wasn't within earshot, she didn't want anyone else knowing their position.\n\n\"The fire is too hot!\" he screamed, his eyes opening briefly. Around her, the forest came alive with hooting. At first, she thought they were coming for her, but was relieved when Dana stepped through the forest. She was covered in blood, and her left arm was broken in at least two places. There was a wild look in her eyes and a complete lack of recognition.\n\n\"Um...you good?\" Velvet asked.\n\nDana scowled, her brow furrowing. After a couple of unintelligible grunts, she nodded.\n\n\"He's hurt,\" Velvet began. \"We need to...\"\n\n\"Leave me ALONE!\" Mike's scream was magnified by his magic, and Velvet almost dropped him. \"Let me out of the car, the fire is so hot! My world is burning! Oh god, my whole world is burning!\"\n\nVelvet headed toward the fire with Dana right behind her. Mike's shrieks were unintelligible again, and his breathing was unsteady. When they emerged from the woods, there was a clear line to the cabin.\n\nThe two of them ran and were over halfway there when Leeds landed in front of them.\n\nDana charged first, but Leeds grabbed her head with his forked tail and twisted her around. She slammed into the ground, her head now crooked on top of her neck. She let out an angry grunt, then fell silent.\n\n\"Leave us alone,\" Velvet whispered as she set Mike down.\n\n\"No.\" Leeds waved his hand, and bands of darkness grabbed Velvet by the legs, pulling them apart so that she fell to the ground. The sudden impact hurt her abdomen, and made her painfully aware of the precious cargo developing within. Her eggs shifted, making her queasy.\n\n\"After I rip your legs off, I'm going to sit here and wait for your dear Uncle to come back and find you.\" Leeds chuckled, then pointed at Mike. \"And when this one dies, it all becomes mine.\"\n\n\"Why are you doing this?\" she asked, then screamed when the bands pulled on her legs.\n\nLeeds turned away from her. \"It doesn't matter. You are already dead.\"\n\nA bundle of white fur exploded from the trees and charged toward them. Shadow hands lifted free of the snow and reached for Yuki, but she slipped between their fingers and expanded upon impact with Leeds. The fur on her body was as white as the snow. Foxfire drifted free from her tails as she shoved her hands into Leeds cowl and shrieked with rage.",
        "Dozens of icicles manifested and pierced his body. Leeds let out a cry of pain, and then the shadows ripped Yuki off of him and slammed her into the ground. Held in place by the icy spears, Leeds frantically tried to free himself by smacking his hands against them.\n\nVelvet heard the heavy crunching of a pair of massive feet. Bigfoot stormed out of the forest, toppling a pair of small trees. His features twisted in rage as he smashed a fist into Leeds. The icicles shattered, and Leeds sailed through the air like crumpled paper.\n\n\"Why?\" Bigfoot demanded, tears in his eyes. \"Why have you brought this hell to my doorstep?\"\n\nLeeds groaned, then pulled himself up. His cowl had fallen free, revealing ram horns atop a horse's head. He blinked, his crimson eyes wincing in pain.\n\n\"Hello, old friend.\" Leeds struggled to stand. \"I thought you were far away from here.\"\n\n\"Bah. Chasing one of your stupid dopplelgangers when I ran into the Katshituashku. Really, Leeds? Turning the creatures of the land against me?\" Bigfoot stomped closer. \"I had to kill it, Leeds! To kill such a rare and beautiful thing! But you knew I would, didn't you? Because that's what you do, you force people to make choices that break them!\"\n\nLeeds chuckled. \"The creatures of this continent are no friends of yours. You turned your back on the wilds, Sasquatch, and now the wilds have turned their back on you.\"\n\nBigfoot stomped toward Leeds. Once he was close enough, he lifted a massive foot in the air over Leeds.\n\n\"You will betray them,\" he stated. \"Just as you betrayed me.\"\n\nLeeds laughed, then winced. Bigfoot brought his foot down, and Leeds exploded into black smoke that drifted away into the air.\n\n\"Is he dead?\" asked Velvet.\n\n\"No. But he is hurt very badly.\" He knelt down and picked up Dana, who snarled at him. He was shrinking back down to his usual size. \"I'll get her. You get Mike inside. I can come back for Yuki.\"\n\n\"I've got her.\" Abella limped from the darkness, her tail dragging behind her in the snow.\n\nVelvet picked up Mike and rushed him toward the cabin. The Nirumbi had gone silent, and she assumed it was because they had seen their leader get dusted.\n\nOnce inside the cabin, she laid Mike down on his belly. The arrow sticking out of his back had gone through pretty far, and she suspected that it may have hit a lung by the strange wheezing sound he made.\n\nBigfoot stepped into the cabin and roughly shoved Dana inside the closet. He held the door shut and shook his head at Velvet. \"The poison they use will kill him. I'm sorry, fluffy girl.\"\n\nShe shook her head in denial, then knelt down by Mike and lovingly stroked the hair away from his face. Black lines had formed along his veins and were getting wider.\n\n\"I'm sorry, I'm so sorry.\" Tears spilled freely and she covered her eyes. The door opened again and Abella came inside with Yuki. The kitsune stumbled over to Mike's bedroom and disappeared inside just long enough to come back out with a handful of potions.\n\n\"It isn't going to work,\" Bigfoot warned. When he saw the look that Abella gave him, he shrugged. \"I don't want you to get your hopes up. If it almost killed me, it will definitely kill a man.\"\n\n\"He isn't most men,\" declared Yuki. She grabbed the arrow and pulled it free, causing Mike to groan in agony. \"And he isn't dead yet.\"\n\nBigfoot nodded. \"He should be dead already. Perhaps there is hope after all.\"\n\nEmery descended from the rafters, clutching his hands nervously. \"What can I do?\" he squeaked.\n\n\"Bandages. Any first-aid supplies. Bring them to me right away.\" Yuki's eyelids fluttered, and her fur shimmered brightly and then faded back to its brown color. \"And some coffee. Or tea. Anything caffeinated. I'm exhausted.\"\n\nEmery flew away.\n\nVelvet knelt by Mike's side and took his hand in hers.\n\n\"Please be okay,\" she whispered. A reassuring hand squeezed her shoulder. Assuming it was her uncle, she reached up to squeeze it back and was surprised to discover that it was made of stone.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nThe flames of his mother's station wagon curled around his legs like slippery ropes, threatening to pull him further into the blazing wreck. He could hear her screams of agony behind him like a record stuck on repeat. When Mike tried to close his eyes, he discovered that he couldn't\u2014the flames had melted them away.\n\n\"I told you, Mike Radley!\" The shadow sat in the back seat of the car, buckled in place so that he was hanging upside down. \"Your world will burn!\"\n\nMike cried out for help, but none came. Every time he tried to crawl out the window of the car, he was dragged back in again. Each attempt seemed to pull him closer to his mother, who was now trying to grab his ankles.\n\nThe inside of the car was distorted and huge, and the passenger window was nearly ten feet away. Was he shrinking? Or maybe just burning up?\n\nIt hurt to crawl. His shoulder was numb with pain, and he could no longer move his arm. Black lines ran up and down his skin, lines that smoldered with the flames.\n\n\"Hold him down!\" someone yelled, and then he felt phantom hands on his body.\n\n\"Please!\" he shrieked. \"Somebody, anybody!\"\n\n\"I can help,\" the shadow whispered. \"But it will cost you!\"\n\nThe flames were climbing Mike's legs now, threatening to consume him. When he reached for the window again, the world outside was dimmed by a large figure who blotted out the sun.\n\n\"Help me!\" He crawled forward, his legs now numb as well. Was he dying, or had he found his own personal hell?\n\n\"How is he this strong?\" someone wondered, and then he felt pressure on his shoulders, as if someone was holding him in place.\n\n\"Can anybody hear me?\" He rolled on his back and tried to kick his mother's hands away.\n\n\"Mike Radley, of , we can hear you.\" Death now sat in the backseat next to the shadow. He was holding his cup of tea upside down to keep it from spilling. \"You are making quite the commotion.\"\n\n\"I don't want to die!\" He kicked at his mother again. \"I'm not ready yet!\"\n\n\"I'm afraid nobody is ever ready.\" Death sipped his upside-down tea. \"Dying is quite like reading a book and having it close itself unexpectedly. Absolutely no one enjoys that.\"\n\nGasping for air, Mike sobbed as the flames crawled past his waist. His scars burned, the wounds suddenly fresh in his memory.\n\nPowerful hands gripped him by the wrists, and he looked up to see Tink. She smirked at him, then looked over her shoulder.\n\n\"Tink has good grip! Pull!\"\n\nThey slid across the car, the metal warping to extend the cab. His mother's arms stretched as well, but they eventually became too thin like putty and melted, leaving a trail behind him. Tink gritted her teeth as they were dragged into the sunlight. Once Mike's hands passed outside the car, he felt the body of the vehicle shrink around him.\n\n\"Pull!\" someone yelled. More hands grabbed his and the air was filled with the sound of wrenching metal after he was squeezed free of the wreckage. He looked back over his shoulder to see that the car was collapsing on itself until it resembled a bit of flaming tin foil no larger than a soda can.\n\n\"Well, that was close.\" Lily stepped forward and booted the foil off the sandy beach of the Dreamscape and into the ocean.\n\n\"You really shouldn't litter.\" Sofia scowled at the succubus.\n\nMike groaned, then rolled onto his side and puked. Instead of food, it was technicolor sand that stained the ground.\n\n\"Nasty.\" Tink forced him to sit. \"Husband in bad shape, have big fever.\"\n\n\"Fever?\" He looked around. \"Why am I here?\"\n\n\"You're dying.\" The voice was stern, but sounded like several melodies blended together. With Tink's help, Mike sat up to look at the speaker.\n\n\"Hello, Titania.\" He did his best to greet her, but his head drooped at the last second.\n\n\"Hmmph.\" Titania, the faerie queen, crossed all four of her arms and frowned. \"I truly didn't expect our agreement to be so short-lived, Caretaker.\"\n\nDue to the soul swapping nature of his magic during sex, his Dreamscape was occupied by many of the women he lived with. Whenever he slept, they were there for him in whatever way he desired.\n\nTitania was the exception. Indivisible by nature, the queen of the fae had avoided swapping souls with him after their interlude. Allowed to use his mind as a private sanctuary, her presence meant that she had come on purpose.\n\n\"Why are you here?\" he asked. His vision dimmed, but Tink held him up. \"Did you come to save me?\"\n\n\"Hardly.\" She shook her head. \"I am here on unrelated business. I've been waiting for you to fall asleep, but apparently, you are slipping in and out of consciousness as you die.\"\n\nAgain with the dying. His memories were fragmented, and all he could remember was snow and smoke. \"What happened?\"\n\n\"You tell me.\" She gestured over his shoulder.\n\nWhen he turned to look, he saw that the island of his mind had shrunk down to roughly the size of a football field. The ocean had gone black, and the skies were gray. A replica of his house was in the middle of the island, but it was a miniature version, no taller than five feet. Rushing around the island were blurred figures that vaguely resembled the women of the house. These grim specters were using shovels to maintain the borders of the island, shoveling sand into the waves. It was nonsensical, but so was the Dreamscape.\n\n\"I'm dying.\" He suddenly felt cold inside.\n\n\"All things die, Caretaker.\" She squatted down next to him, then grabbed his chin and inspected his face. \"Hmm.\"\n\n\"Can you help me?\"\n\n\"No. To interfere with mortal affairs would put me at odds with those who wish to usurp me.\" She sighed, then sat next to him. \"However, your resident souls have contributed immensely to your survival. It seems that they are holding you together, metaphorically and literally.\"\n\nMike held up his hands. The dark lines were all along his skin, shifting back and forth like snakes. \"I was poisoned. By an arrow. There are these little people called the Nirumbi, they attacked me.\"\n\nTitania nodded. \"Nirumbi poison is always fatal to humans within minutes at most, yet I suspect you have lasted far longer.\"\n\n\"But how?\" He felt a small hand grab his own, and he looked over at Tink. The goblin grinned, showing all her teeth.\n\n\"Goblins are immune to poison.\" In the Dreamscape, Mike could vividly hear Velvet's voice. Was that something he had gotten from Tink? It was an ability that he never would have discovered otherwise.\n\n\"Not completely immune, though.\" He looked at his fingers and then shook his hands. Some of the lines fell off like wet ink. \"And not dead yet.\"\n\nTitania held out her hand. \"It would seem not. Come. Let's assess the damage.\"\n\nHe took her hand, marveling at how soft it felt. They walked the perimeter of the land, and he saw that most of the foliage had died.\n\n\"If I survive, this will all come back, yes?\"\n\nTitania nodded. \"This place is as resilient as the human spirit. But you stand on death's door, Caretaker, and I fear that is not the worst news I have for you.\"\n\n\"What could be worse than dying?\"\n\n\"I am here with grim tidings. Days in your world are only mere seconds of my own, otherwise, I would have been here sooner. Sulyvahn has sent word that your house is missing.\"\n\nMike paused, contemplating a stationary wave in the ocean. It looked as if it had been poorly painted in place. \"Can you run that by me again?\" he asked.\n\n\"Your house is missing. Its counterpart from the Underworld has taken its place. Sulyvahn's message implied that some sort of assault took place. I have been unable to contact Cecilia, who has vanished with the house.\"\n\n\"Someone stole... my whole house.\" He groaned. What was he even supposed to do with that information? Who could it have been? What was the name of the guy who controlled the Nirumbi? Leeds? Had Leeds done it? Who was Leeds anyway? Was he a member of the Society? \"So what do you suggest I do?\"\n\n\"Live.\" She turned to him, her golden eyes blazing. \"Otherwise, I will be very upset with you.\"\n\n\"You...wouldn't be able to track me down in the afterlife, would you?\"\n\n\"Is that something you really want to find out?\" Titania chuckled. \"Due to your current condition, your control on this place is minimal. I have interceded on your behalf. Moments in your world shall be minutes or even hours here. Your body is weak, but your spirit is strong. You may yet survive, but it will take everything in your power to do so.\"\n\nMike nodded, then looked back out at the ocean. Part of the sky had crumbled away, revealing a blank void behind it. There was simply nothing for his eyes to focus on.\n\n\"We are trapped in Oregon,\" he told her. \"By someone named Leeds. He put together an army of Nirumbi and a...\" he could picture the white monstrosity in his front yard, but the word wouldn't come. \"A windy something. It kept eating the Nirumbi.\"\n\n\"A Wendigo.\" Titania pursed her lips. \"They are not known for following orders. And the Nirumbi were destroyed, but apparently, my information is bad.\"\n\n\"So no idea who Leeds is?\"\n\n\"Without meeting him? No. But I have a suspicion that he is none other than the Devil of Jersey. By himself, he is dangerous. But leading an army? That sounds very unlike him.\"\n\n\"He wears a hood. Has hooves for feet.\"\n\n\"Then it must be him.\" Titania paused, her gaze on the water.\n\nThere was a large mass moving toward the beach that broke apart as it came close. It broke into lumps, each shape bobbing in the water until the waves carried them up onto the sand. Though covered in seaweed, it was easy to recognize the distorted features of the Nirumbi.\n\n\"Oh god.\" Mike fell to his knees, his hands pressed into the sand. \"Why are they here?\"\n\n\"It's called regret, Caretaker. Oftentimes, we find ourselves doing unpleasant things in the name of progress. Our actions can and do leave stains that cannot be scrubbed away.\"\n\nIt was suddenly hard to breathe. Mike choked, his hands clutching his throat. Not only had he killed some of them, but he had watched so many come to a brutal end that it was all he could picture.\n\nThe skies darkened, and the beach was now littered with their corpses, their eyes staring at him in blank accusation. The ocean hungrily gobbled up the sand, and he suddenly felt light-headed.\n\n\"Stop.\" Titania pulled him to his feet and embraced him. His face was forced between her breasts as she clutched him tight. \"Now is not the time.\"\n\n\"But I just watched them die!\" He thought back to arriving in Oregon, how he had practically skipped through the woods with Quetzalli as the others had fought them. What had he been thinking? \"There had to be a better way! Maybe we could have reasoned with them, or something!\"\n\n\"Altruism is considered a highly noble trait, and you wear it adorably. I believe your mortal saying is something about hindsight being perfect. The truth of the matter is that altruism can go fuck itself.\"\n\nMike twisted his face up toward the queen, suddenly wondering if she was actually Lily in disguise.\n\n\"There's this idea that it's possible to rise above your basic instincts, to pursue a greater good. The belief that everyone should have an equal chance is a wonderful one, but consider this. You should never assume that anyone is capable of meeting you halfway on anything. I know little of the Nirumbi today, but the Nirumbi of the past were a ruthless people. They hungered for the flesh of the living, and never would have considered a compromise for it.\"\n\n\"But they aren't animals,\" Mike began.\n\n\"Please. You humans are still animals. Would you elevate the Nirumbi above your own kind?\" She laughed. \"I realize that I speak so casually. Your lifetimes are like days to me. Up until recently, I found myself fairly uninterested in the inner workings of the mortal realm. And yes, while you may have done a fair amount of work to change my opinion, I still had to be willing to listen to reason.\"\n\nHe thought back to the battle he had with Titania inside his own head. It had taken quite some time to convince her to stand down and talk, and had only worked because he was effectively immortal in his own Dreamscape.\n\n\"Would you allow them to come inside your head, one at a time?\" Titania put her foot on one of the Nirumbi. \"Bring them to your home? See if they are willing to chat?\"\n\n\"I don't know,\" he admitted. \"I don't know enough about them to judge.\"\n\n\"And what little you do know is this; if you die, it was their fault.\"\n\nHe shook his head. \"Not really. Maybe Leeds tricked them, or\u2014\"\n\n\"No. Stop making excuses for others.\" Titania kicked the Nirumbi and it shattered like glass. Motes of darkness rose into the air. \"This place stinks of grief. If you were to die now, you would undoubtedly become a troubled spirit, much like that shadow of yours. Is that what you want?\"\n\nThe idea that he could become a tormented soul chilled him to the core. Would he wander and slowly lose his sanity? What if Cecilia couldn't help him to cross over? He might come back and make trouble for the others.\n\n\"No.\" He sat on the edge of the beach and pulled his knees up to his chin and hugged them. \"I don't want that at all.\"\n\n\"Then get your shit together.\" She picked up one of the Nirumbi and shook it at him. Its body flopped like a ragdoll in her hands. \"This thing chose to attack you. When you make the effort to take someone's life and then lose your own, that's on you, not them.\"\n\n\"But\u2014\"\n\n\"No!\" Titania hurled the Nirumbi out into the dark waters of the ocean. It bounced off of the water and came to rest beneath a wave. The wave came to life and grew several teeth before slamming down on the corpse. It made a loud sucking sound, the water swirling open to reveal a mouth that snapped shut on the Nirumbi.\n\n\"What the fuck was that?\" Mike asked. Was that one of his nightmares? He turned back to Titania to see that her golden eyes had gone wide.\n\n\"I honestly don't know,\" she whispered. \"That is no being that you or I should encounter. I can only pray that it's a result of the poison, but you should definitely avoid it at all costs. But on this note, I must take my leave. On the chance you die, I do not wish to be inside your mind as it becomes swallowed by eternity.\"\n\n\"Titania, I...I don't want to be alone.\" He looked down at his feet. \"Can you stay?\"\n\nThe faerie queen smirked, then let out a laugh.\n\n\"Absolutely not,\" she told him. She knelt in front of him and leaned forward to place a kiss on his forehead, suffusing his body with warmth. \"But, for the record, you should know that I actually considered it. Make sure you stay alive in here until they can fix you out there.\"\n\nThere was a light pop, followed by the tinkling of bells. Ribbons of light hung in the air, shimmering like glitter as they fell into the sand.\n\nThe hungry waves moved closer to the shore, and Mike scooted away from them. There was a flurry of activity as the others, his soulmates, brought sand from inside the house and placed it on the shoreline. Though they were blurry and lacked defining details, he could tell them apart by shape alone. The little green smudge was Tink. The largest one was Sofia. Somehow, one of the blurs moved with an attitude problem. This was clearly Lily.\n\nWhat did he look like to them? Was he a stationary mass? Did they wonder why he wasn't helping? He didn't have the first idea of what to do, and his legs felt weak beneath him.\n\nDespite being surrounded by the others, he felt alone. Up above, a star emerged from the darkness and fell, crashing into the water and shattering like glass. The dark lines on his body were receding, but he estimated that the waves would claim the little island long before his skin was clear.\n\nHe buried his face in his knees. His friends were working hard to save him, but he felt like he couldn't even save himself. The bodies of the Nirumbi dotted the beach, and he couldn't help but feel like there was a better way.",
        "\"Penny for your thoughts?\"\n\nHe flinched, then turned his head to see that Velvet sat next to him.\n\nShe reached out and took his hand and gave it a squeeze.\n\n\"You're in here, too.\"\n\nShe nodded. \"Just woke up, actually. I've never been to the beach before, I've always wanted to go.\"\n\n\"Yeah, well...\" He pointed to the mess on the sand. \"It's usually even prettier.\"\n\n\"I bet.\" She squeezed herself in next to him and put her head on his shoulder. He put his arm around her and pulled her close. Somehow, she seemed to fit perfectly against him.\n\n\"Still waiting on those thoughts,\" she said.\n\n\"You never gave me a penny.\"\n\nShe laughed. \"I don't even own a purse. Not sure where I could dig up a penny.\"\n\n\"I'm sorry for all of this,\" he told her. He didn't know what else to say.\n\n\"Yeah, well, I'm not.\" She snuggled up against him. \"This is the closest thing I've ever had to a date.\"\n\nHe snorted. \"You set a very low bar. This place is just a mass grave that hasn't been covered yet.\"\n\n\"Then let's change that.\" She stood and pulled him with her. \"This is your head, isn't it? Why look at such terrible things when you don't have to?\"\n\n\"Because sometimes you need to face awful truths.\" He set his jaw. \"It's all I can think about.\"\n\n\"My father used to feel the same way. He saw some things in Vietnam. Had terrible nightmares until he met my mother. It was her venom that brought them together, isn't that strange? When she bit him, it helped him to forget, to move forward a bit. But it all came back after she died.\" Velvet leaned in close. Her hair smelled of hot springs and the forest. \"But I don't think it was just her bite that helped him, not after a while.\"\n\n\"What do you mean?\" he asked, curious.\n\n\"She gave him something to focus on. Raising us, protecting her. Fighting with Uncle Foot. There were plenty of happy times, but I know he always kept one foot in the past, no matter what. My whole life, I used to catch him talking to somebody who wasn't there. His brother died over there. So did the rest of his squad, for that matter. For the longest time, I thought that maybe my dead uncle was an actual ghost. Dad always knew where I was hiding when we played hide and seek, and I can climb on the ceiling. When I got older, I started to think that maybe his mind had split and that something else had activated, like a sixth sense or something.\"\n\n\"So which was it?\" he asked.\n\nVelvet put her forehead against his. \"It didn't matter. Either way, he was haunted just the same. I would never wish that on you. My father had to kill the enemy for survival, and it wasn't any different for you. You can mourn them. You can even respect them. But don't you dare place the burden of their choices on your own shoulders.\"\n\nHe had no argument. When he turned his head to look along the sand, he noticed that the beach was no longer receding. A bunch of the Nirumbi were now gone. A small pocket of warmth had found its way inside his chest and he clung to it like a child with a night light.\n\n\"Come on,\" she said, then took him by the hand. \"I've always wanted to walk in the surf.\"\n\n\"I wouldn't,\" he said as she dragged him toward the water's edge. \"It's dangerous, and\u2014\"\n\nThe dark waters sparkled with light and came to life as she walked through them. Laughing, she let out a cry of delight as the surf curled around her ankles and sprayed them with foam.\n\nStunned, he watched her as she ran away from a wave and then chased it back out to sea. The doom and gloom of the island avoided her like the plague.\n\nLetting out a yell, Velvet picked up a turquoise crab.\n\n\"This one tried to pinch me!\" She dropped it on the sand and chased the crab in circles, laughing as the frightened crustacean scurried away into the water. As she continued her dance, he realized that a beam of golden light surrounded her, sending the darkness away. He craved that light, and everything it meant to him.\n\nHis arms felt wet. When he held them up, he saw that the dark lines had become even shorter now, and vanished around his elbows. There were no more Nirumbi on the beach.\n\nWith a laugh of his own, he joined her. The two of them played together in the surf as a patch of darkness peeled away up above, revealing a blue sky behind it.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nIt was almost two in the morning when Eulalie felt movement in her web and her eyes popped open.\n\nShe was hovering in a woven web over Murray's breakfast nook. Down below, a pair of rats were watching the monitors with strict instructions to wake her if they saw anything. Whoever had disturbed her web had somehow snuck past the rats monitoring the exterior of their current base.\n\n\"Sofia.\" Eulalie's voice was little more than a whisper, but the cyclops, who had stayed up to watch the house, heard her. Sofia leaned around the corner of the kitchen, concern on her face.\n\n\"Front door.\" Eulalie closed her eyes to concentrate on the near-invisible threads she had attached onto the doors. \"Someone is coming.\"\n\nSofia nodded and then disappeared. Eulalie frowned, wondering who it could be. Sulyvahn was busy watching Mike's house, so he wouldn't be of any immediate help.\n\nThere was a loud yell, followed by a flash of light. The rats below her took up weapons and created a protective ring beneath her as the sound of roaring fire filled the front entryway. Eulalie almost panicked but managed to keep her cool long enough to wait it out.\n\nA minute later, Sofia appeared. Her sword was in her hand. \"Got him,\" she said. \"He's taking a nap right now, but he was expecting trouble. Tried to use this on me when he saw my sword.\"\n\nEulalie's eyes widened in surprise when Sofia tossed a magic wand onto her table. It rolled to a stop against a recharging drone.\n\n\"That thing real?\" she asked.\n\nSofia held out a portion of her robes with a hole burned clean through it.\n\n\"Let's get him upstairs,\" Eulalie said. \"See if he can answer some questions.\" Obviously this intruder had realized that someone here was watching the house. The fact that he had a magic wand made it even more disturbing. Was he part of the society she had heard about? What was he up to?\n\n\"Okay, but...\" Sofia frowned. \"Is that a good idea?\"\n\n\"Why wouldn't it be? As long as we take precautions, he should be rendered harmless. And if he's traveling with friends, we need to know. Maybe prep an escape route.\"\n\n\"It's not that, it's...\" Sofia groaned. \"I'll just be direct. He's a man. What if you see him and want to mate with him? Is that something you can even control?\"\n\nEulalie snorted. \"Even if I wasn't molting, which is super uncomfortable, by the way, the answer is no. I've just never had any interest in mating. Not even when I met Mike, who is definitely the hottest guy I've ever seen. I suspect that may be due to his magic.\"\n\n\"That's...unexpected.\" Sofia looked puzzled. \"I thought all Arachne had a high drive to eat and reproduce.\n\nEulalie shrugged. \"You have to remember that my mother deliberately waited to have defective eggs. For the longest time, I assumed that just meant a lower than normal prey drive, but there's room for interpretation. I thought maybe it was something that wouldn't happen until I met the right person, but I've never actually had any of those thoughts. I've been curious about it, but it's been more like a spectator sport. No desire to participate. But my mom and sister? All the time. The only reason Velvet ever uses the computer is to watch porn and look up new modules for dungeons and dragons.\" She almost mentioned her own fascination with rope binding, but figured it was something Sofia didn't need to know. The thought of tying someone up excited her, but sex itself? Meh.\n\n\"I literally have no words. But if you say it's fine, I believe you.\"\n\nSofia folded up her sword and left. She reappeared with a man slung over her shoulders. When she headed for the stairs, Eulalie followed. She cocked her head to get a better look at his face as it dangled over Sofia's back. His face was pockmarked with scars, and his wrinkled forehead and grey hair gave away his advanced age.\n\nWhen they got him into Murray's bedroom, it was an easy feat to strip him to his boxers and tie him to the bed. Eulalie secured a pillowcase over his head and then unscrewed the only bulb in the room. The last thing she needed was for him to scream in terror upon seeing her.\n\nOnce they were finished, Eulalie attached her silken line to the man's toes and then they headed back downstairs. She nestled back into her little hammock, making sure that she was connected to their new guest.\n\nSofia just shook her head in amazement as she dug through the man's white coat. It was like watching a cartoon as the cyclops kept pulling objects from his pockets that were far too large to fit.\n\n\"Wake me if anything else comes up,\" Eulalie said with a yawn.\n\nSofia nodded in the affirmative as she tossed the coat into a nearby closet with the rest of the man's clothes.\n\nSteepling her fingers together, Eulalie used a leg to swing her hammock, her mind racing as her body relaxed. This was a new development, a thread that demanded to be pulled. What secrets would she unravel when their new guest awoke? One way or another, she would get some answers.\n\nIf not, maybe she would eat him. Smirking at the silly thought, she drifted off to sleep, but not before she noticed that some of the rats were using the butts of their spears to keep rocking her.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nFor those of you wondering about the stranger, you can learn who he is and why he's here by reading Dead and Horny.\n\nWith so many threads now pulled wide open, it's time for me to trim some strings and finish weaving the pattern so that I can pull things nice and tight for you in the next ten chapters (or so).\n\nAs always, don't forget to rate and review, and take time out of your day to do kindness to others, or even just yourself. You're worth it.\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "the jersey fucking devil",
        "rock paper slithers",
        "monstergirl harem with more legs than girls",
        "lewd hand holding",
        "bigfoot gets pissed",
        "leeds is a dick",
        "abella vs wendigo",
        "eulalie makes a friend"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-68"
}