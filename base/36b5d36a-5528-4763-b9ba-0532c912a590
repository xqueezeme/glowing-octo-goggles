{
    "title": "Caught by the Tide Ch. 08",
    "pages": [
        "With my heartfelt thanks to Tory_del_Ricoh, for reminding me to be true to myself...\n\n*\n\nI awoke with a start, uncomfortably warm, the bedclothes stifling, wrapped far too tightly around me. Judging by the darkness, it was still very early. In fact, somehow the room appeared a little too dark. Puzzled, I lifted my head and shoulders from the bed to look towards the window, wondering whether there'd been a power cut and the street lamps were out. But to my astonishment I couldn't see the window. \n\nI couldn't see a thing.\n\n\"Fuck!\" I gasped, sitting bolt upright and waving my hand in front of my face. \"What the fuck?\"\n\n\"S'okay,\" a male voice murmured sleepily. \"Lie down, babe. Go back to--\"\n\nI screamed, scrambling out of bed as fast as I could. \"Fuck!\" I yelped again as it occurred to me exactly whose voice it was, my heart thudding painfully in my chest. \"Oh God!\"\n\n\"Good morning to you too.\" Luke sounded both amused and apologetic. \"I should've known there wasn't a chance you'd sleep straight through.\"\n\n\"What? Where am I? Where are you?\" Hearing movement, I peered through the gloom, just about managing to make him out. \"Why the hell is it so dark in here?\"\n\n\"You're at my place, in my bed. Well, you were in my bed. And it's the middle of the night, why do you think it's dark? \" He patted the duvet. \"Come on, Becks, get in again. Let me cuddle you back off to sleep.\"\n\n\"Your place?\" Desperately trying to remember how I'd landed up there, I stared at him, suddenly realising the reason I was so warm was because I was still fully dressed, minus my shoes. \"Your bed?\"\n\n\"You fell asleep while we were driving, just for a change. What is it about my car? And before you ask me why I didn't wake you up, I tried, okay? Maybe not that hard, but you were out for the count. You didn't even stir when I carried you up here.\"\n\n\"You carried me up here?\"\n\n\"Are you just going to repeat everything I say? Babe, you really need to get some rest. Back to bed, now.\"\n\nI didn't move, the previous day's events streaming back to me like a clip show on fast forward. The operation, the conversations I'd had with Sarah, with Daniel, with my mother. With Luke...\n\n\"You're not going to do as you're told, are you?\" he said at last, sounding resigned.\n\nI hesitated, playing for time. \"I need the loo.\"\n\n\"Of course you do.\" He sighed. \"Okay. Hang on.\" I heard him fling back the duvet and then a click, the room suddenly flooding with low warm light. I blinked hard, watching as he slid out of bed himself, rather relieved to see he was wearing a dark T-shirt and boxer shorts. \"Bathroom's just there,\" he said, pointing towards a door in the corner of the room. \"The light switch is on the wall outside.\"\n\n\"Thanks,\" I mumbled, already stumbling across the room. And flipping on the switch I burst through the door, closing it behind me as fast as I could. But when I turned around, I felt my jaw drop in astonishment. \"Wow.\"\n\nThe bathroom was as big as my bedroom at my mother's house. Bigger, probably. Alongside the toilet there was a huge white bathtub with gold-coloured fittings, on the other side a black-topped vanity unit with two gleaming white basins. And to my right there was a walk in shower--good grief, a huge shower, big enough for a family of four to wash in all at once. On closer inspection I saw not one but two shower heads and a ridiculously complicated-looking control panel. \n\nBut even more disconcertingly, as I took a few tentative steps forward I discovered I could see myself from every conceivable angle in the mirrors banding the walls. Every surface glittered beneath the tiny spotlights in the ceiling, the wall tiles above and below the mirrors shining like highly polished marble. \n\n\"Becks?\" Luke called as I drew level with the bath. \"I've left you some towels and a toothbrush by the sink. Help yourself to anything else you need. There's a T-shirt there too if you want to get out of those clothes.\"\n\nI hesitated, looking at the neat pile on the vanity unit. \"You know--maybe--maybe you should just take me home.\"\n\n\"Babe...\" His sigh was clearly audible through the door. \"It's two in the morning. I'm not taking you home. And before you ask, I'm not calling you a cab either. If it makes you more comfortable, I'll sleep on the couch and you can have the bed, okay?\"\n\nI bit my lip, knowing from his tone he wouldn't back down, not entirely sure I wanted him to. \"I'll sleep on the couch,\" I said at last. \"It's your bed.\"\n\n\"I don't think so.\" There was a pause--a pause in which I could easily imagine the half-amused, half-irritated expression on Luke's face. \"I'll go and make us some hot chocolate.\"\n\n\"What?\" \n\nBut there was no reply.\n\nTrying to ignore my three hundred and sixty degree reflection, I used the loo then padded across to the vanity unit. And after peeling off my clothes, I had a quick wash, burying my face in one of the wonderfully soft white towels when I'd finished. \"This is crazy,\" I whimpered, wondering whether I could stay locked in the bathroom for the rest of the night, knowing that if Luke so much as kissed me, I'd be lost. I wanted to be in his arms, in his bed. I longed to feel his skin against mine, to feel him inside me, filling me in the way that only Luke could fill me, thrusting slow and deep. But I couldn't let that happen. Not while there were questions that still needed answers, questions I was frightened to ask. Questions I had no right to ask.\n\nSighing, I lowered the towel and studied myself in the mirror. \"Hey there, gorgeous,\" I muttered sarcastically, shaking my head at the sight of the dark rings beneath my eyes and my mussed-up hair. But then Luke had never seen me looking exactly at my best, had he?\n\n\"Your hot chocolate's ready. What the hell are you doing in there?\"\n\nI started at the sound of his voice then grimaced at my reflection. \"Nearly--nearly done,\" I called back, unfolding the T-shirt he'd left me and rolling my eyes at the logo emblazoned across the front. Oxford University. Well, of course he'd gone to Oxford.\n\nWhen I finally emerged Luke was standing outside the bathroom door holding two steaming mugs. \"Nice,\" he murmured with a smile, eyeing me up and down, his gaze warmly appreciative. \"You look so much better in my clothes than I do.\"\n\nI felt the colour flooding my cheeks, growing hotter still when he noticed my discomfort, his smile broadening. He'd seen me naked more than once, yet somehow I felt way more exposed like this, his T-shirt barely reaching the tops of my thighs.\n\n\"Come on then.\" He jerked his head towards the bed, already moving towards it. \"Come and try some of this chocolate. It's my Granny's recipe. I promise you'll never--\" And then he stopped, seeming to realise I wasn't following. After placing both mugs on the bedside cabinet he turned around, his smile waning. \"Okay, I get it. I've got to sleep on the couch, haven't I?\"\n\nNot at all sure what to say, where to start, I stared back at him miserably, watching as his expression hardened.\n\n\"This is about Chloe, right? You want me to tell you what happened. Now?\" He blew out a sigh. \"What is it with you and this need to have middle of the night chats?\"\n\nI swallowed hard. \"You don't have to tell me anything,\" I managed at last, unable to look at him any longer, my gaze dropping to the cream carpet. \"Because it isn't any of my business, is it? And you're probably thinking that you shouldn't need to explain. That I should be able to trust you--after everything we've been through together, after what you did for my Mum. And you're right, I should. The trouble is, it isn't you I don't trust, Luke.\" \n\nI paused to draw breath, feeling oddly weak. \"It's me. I can't trust my own judgement. I spent all those years with Daniel, believing everything he told me, believing all his lies. How could I have not seen what was happening, what he was doing? How could I have been so stupid? I let him treat me like a fool. I was a fool.\"\n\n\"Oh no, babe.\" Having neither seen nor heard him approach, I gasped as Luke's arms swept around me, his voice gentle in my ear. \"No, no, no. You're nobody's fool. He was the fool. He didn't deserve you, darling, d'you hear me? He never deserved you.\"\n\nStunned to hear the almost fierce tenderness in his tone, I closed my eyes, allowing him to gather me close, feeling his fingers raking repeatedly through my hair, the sensation soothing yet arousing at the same time. And I don't know how long we were locked together like that, how long my head was pressed against his shoulder, how long I listened to the steady, reassuring thump of his heart, only that when he finally spoke I almost jumped out of my skin.\n\n\"I met her at a nightclub.\"\n\nDrawing back to look at him, I shook my head as my gaze landed on his. \"You don't have to tell me anything. It really isn't any of my business.\"\n\nHis blue eyes seemed darker than usual. \"Oh yes it is. Well, I'd like it to be, anyway.\"\n\nI stared at him in astonishment. Did that mean what I thought it meant? \"Luke--\"\n\n\"But let's get you back to bed first. You're getting cold, babe.\" Taking my hand he drew me towards the king-sized divan. \"I promise you, if you don't want me to stay here with you afterwards, all you have to do is say the word and I'll sleep in the living room.\" \n\nI had no reason to disbelieve him. And after he'd arranged my pillows so that I could sit comfortably propped up against the headboard, I slid back beneath the duvet, watching as he crawled up the bed to perch cross-legged in front of me, his expression grave, his gaze remaining steady on mine. \n\n\"You already know what sort of guy I used to be,\" he began quietly. \"Tim used to call me 'Love-'em-'n'-leave-'em Luke'.\" He winced slightly. \"With good reason. I really couldn't tell you just how many women there were. I didn't sleep with them all but I slept with quite a few. Mostly just the once. I'm certainly not proud of it now, but if I'm honest, I guess I was at the time. It was like a game. To me, anyway. I doubt the women saw it that way.\"\n\n\"Some of them probably did.\"\n\nHe gave me a rueful smile. \"Don't go trying to make this easy on me, babe. There's no question I was a self-centred, egotistical bastard.\"\n\n\"But you said you weren't a bastard,\" I said, suddenly finding I wanted to make light of his words, struggling to cope with the images that were already flashing into my head. Luke, in bed, with girl after girl, making love to them the way he'd made love to me... \"You said you were a tosser, not a bastard. You said that you knew who your parents--\"\n\n\"Becks.\" His eyes softening, he reached forward and took my hands between his own, squeezing my fingers gently. \"I'm sorry. I know you probably don't want to hear all this, but I think you need to know. I want to be honest with you because when I'm done, I need to know that whatever decision you make about me is made for the right reasons. I'm not going to lie to you. I'm not going to sugar-coat anything, okay?\"\n\nOnce again, I found myself intrigued by his choice of words. Was it possible Luke really did want something more to happen between us? \"Okay,\" I agreed at last, squeezing his fingers in return. \"Go on. I'm listening.\"\n\nHe lifted my hands to his mouth and kissed them. \"Tim blames my womanising on the fact I'm a short arse,\" he said, with another rather shame-faced smile. \"Now he's a clinical psychologist so maybe I should accept that he knows better than me but I think it's a piss poor excuse. Yes, I got bullied a bit in primary school for being, shall we say, vertically-challenged? But it wasn't like anything else was ever a problem. I was a smart kid but I wasn't a geek. I liked learning, it came easy to me. I still had time to be the class clown. And I guess when I hit my teens, flirting with the girls was kind of a natural progression.\"\n\n\"Tim's a clinical psychologist?\" Somehow I found it hard to believe that the lanky guy I'd seen on the beach was also a doctor.\n\nFor the first time in a while, Luke grinned. \"Yeah. I tell him that the only reason he specialised in that field was so he could figure out why he wasn't a hit with the girls.\"\n\n\"Well, it couldn't have been easy being your best friend.\"\n\n\"Probably not,\" he conceded, sobering quickly. \"Poor sod. God only knows why he stuck around but he did. Actually, he probably became a psychologist because he spent half his life counselling all the women I never called again.\" He gave a mirthless laugh. \"I can't believe that hasn't crossed my mind before.\"\n\n\"So why didn't you call any of them again?\" I frowned. \"Were you scared of commitment or something?\"\n\nLuke looked sheepish again. \"In all honesty--God, this is going to sound shallow--I never thought about having any kind of long term relationship. I was having far too much fun. My first couple of years at Oxford were a blast. Partied hard, drank too much. Had to rein it in a bit when I started working on the wards but somehow I found time to have a damned good social life, right up until I qualified and got myself a job here. \n\n\"After that, it got tougher to fit everything in. Working eighty hours a week as a house officer kind of takes it out of you, especially when you're studying for exams but I still managed some play time. Bloody stupid. It was obvious that sooner or later the shit was going to hit the fan.\"\n\nHe grimaced. \"I failed an exam. A major one. And you'd think that would've been the wake-up call I needed but instead of dealing with it I just acted as though nothing had happened. The day I got the results I took myself off to a nightclub and got well and truly hammered. The next morning, I woke up in yet another strange bed lying next to a girl called Chloe.\"\n\n\"Ah.\" Even though I'd known it had to be coming, I still experienced an odd jolt in the pit of my stomach at the name. \"So that's when it happened?\"\n\n\"Apparently.\" Luke's expression was curiously unreadable. \"Though to this day, I don't remember anything about that night. I'd seen Chloe at the club a few times, that's how I knew who she was. She'd always made it quite obvious she was interested in me but to be honest, she wasn't really my type and I'd never made a move on her before. I don't remember leaving with her, I don't remember going back to her place and I certainly don't remember sleeping with her.\" \n\nHe shrugged. \"I do remember having the hangover from hell and true to form, I didn't hang around too long that morning. And this may sound terrible but it's true--I didn't give her another thought until she turned up on my doorstep a few weeks later and told me she was having my baby.\"\n\nI stared at him, puzzled. \"But Chloe always said that he--I mean you--were her boyfriend. She said that you'd been out on quite a few dates.\"\n\n\"Nope. It was just that one night. Though,\" he hesitated, his eyes narrowing, \"it makes sense, in a weird sort of way, that she'd managed to convince herself it was more than that. The things she said, the way she behaved.\"\n\n\"What?\" I frowned. \"What do you mean?\"\n\n\"Well, it was all a bit surreal, actually. As I said, she just turned up one evening. I've no idea how she found out where I lived. But from the moment I opened the door she seemed, well, away with the fairies, to be honest. As if she was high on drugs. Maybe she was.\" He shook his head. \"Calling me 'sweetheart' and 'lovey', making big eyes at me. Very bizarre.\"\n\n\"Very.\" It was my turn to hesitate, aware we were getting to the part I already knew and steeling myself to hear the worst.. \"So what happened next?\"\n\nLuke rolled his eyes. \"Well, I invited her in. Like you do when a girl turns up at your door and tells you she's having your baby.\"\n\n\"Happened a lot, huh?\" I couldn't resist the jibe even though I was quaking inwardly.\n\n\"Ouch.\" But there was a hint of a smile playing at the corners of Luke's mouth. \"No, she was the first. And the last.\" He sighed, the smile vanishing. \"She was kind of hysterical. Manic, even. Didn't let me get a word in edgeways, gabbling on about how wonderful it was that she was having my baby, that we were going to be a lovely little family, that she knew--she just knew it was going to be a girl and we could call her Daisy--\"\n\n\"Daisy?\"\n\n\"--and when were we going to get married? Because it would have to be soon otherwise she'd never be able to find a dress big enough.\"\n\n\"What?\" I gave an astonished choke of laughter. \"She just assumed you'd get married?\"\n\n\"Oh, she'd gone beyond assuming.\" He looked grim. \"Way beyond. As far as she was concerned, it was a done deal. She told me she'd already found the engagement ring and the wedding ring she wanted, that she'd phoned the Registry Office and that there was an available slot for us to get hitched two weeks on Saturday if that was okay with me. Oh and did I have any preference for a photographer?\"\n\nI gazed at him in disbelief, rendered speechless for a moment. \"She's always been a bit over the top, a bit melodramatic,\" I faltered at last, shaking my head a little. \"But you're making her sound psychotic.\"\n\nHe closed his eyes briefly. \"I've discussed this with Tim a thousand times, asked him what I should've done, what I should've said. Because there's no question I handled it all wrong. But it'd been one hell of a day, I was tired, I'd been in theatre all day and most of the night before. And she wouldn't listen to me, wouldn't listen to reason, wouldn't let me say a word, just went on and on and on.\" He grimaced. \"I know I shouldn't have done what I did. It was just a knee-jerk reaction, I lost my rag.\"\n\nI bit my lower lip, unable to meet his eyes any longer even though I finally understood. \"And you hit her.\"\n\nThere was a silence--a silence that soon developed into an uncomfortably lengthy pause. All at once I could feel the blazing heat of Luke's intense gaze. \"She said I hit her?\" he said slowly. \"She actually said I hit her?\"\n\nI experienced a rush of shock at the dismay in his tone. \"You didn't?\"\n\n\"Becks!\" He sounded as distraught as I felt. \"Do you honestly believe I would've done that? You really think I'd...?\" He released my fingers abruptly, dropping his head into his hands. \"Fuck!\"\n\n\"But--\" I gazed at him in consternation. \"She said that was why. She said that you shoved her. That she fell and that that was why she--\"\n\n\"Lost the baby?\" he finished, raising his head to shoot me another startled look. \"That's what she told you? That's what she told everybody?\" \n\nI found myself cowering beneath the ferocity of that stare, my heart beginning to thud violently against my ribs. \"Look, I didn't know her back then. I didn't meet Daniel until a couple of years afterwards.\"\n\n\"Fuck.\" But Luke's expression had already softened considerably. \"Well that explains a lot.\" He drew in an unsteady breath. \"My God, that explains a lot.\"\n\n\"You didn't know?\"\n\n\"I knew they blamed me. Hell, I blamed me--I didn't have a problem with that. But Becks, I swear to you--I swear to God--I didn't touch her.\"\n\nI looked at him, not knowing what to say, wanting to believe him so much it actually hurt. \"Then what...?\"\n\nHe winced. \"I lost my temper. You have to understand, she just wouldn't stop, going on and on about how happy we'd be, how great it'd be to be married, to raise our baby together. And though I tried to talk to her, she wouldn't listen, wouldn't let me speak. So in the end, I yelled. Roared, in fact. Swore at her. Told her she was crazy, out of her mind--a fucking lunatic.\" Luke looked ashamed. \"I've never felt as out of control as I was that day and I hope to God I never do again. It was unforgivable.\"\n\n\"You yelled at her?\" It was my turn to send him an incredulous glance. \"That's all?\"\n\nBut he didn't seem to have heard. \"The next thing I know, she's grabbing her tummy, doubled up in pain and there's blood soaking through her jeans. Just like that, no warning. And I didn't know what to do, how to help--\" He stopped then shook his head, no longer looking at me. \"Well that's not quite true, of course I knew. I knew it was too fucking late to do anything. I knew there wasn't a chance in hell she could lose that much blood and not lose the baby. I took her to the hospital, of course, but...\" He gave a helpless shrug.",
        "\"You yelled at her?\" I repeated, moved by his obvious distress. \"Luke, I'm no doctor but even I know that shouting at a pregnant woman wouldn't cause her to have a miscarriage.\"\n\n\"I know. Don't get me wrong, I do know that. I know that it almost certainly would've happened anyway.\"\n\n\"Then--\"\n\nHe held up a hand. \"And I know that something like one in three pregnancies end in spontaneous abortion in the first twelve weeks, okay? But I made it about ten times worse for her.\"\n\n\"You made it worse?\" I was aware I was echoing everything he said but to be truthful, I was finding it difficult to understand why he still felt responsible. \"Luke, she was the one who turned up at your door, babbling on like a mad woman about you two getting married. Did she really think--?\" And then I stopped, his words suddenly sinking into my consciousness. \"Wait a minute. Chloe was more than twelve weeks pregnant. She's always said she was four months pregnant. That'd be what, more like sixteen, seventeen weeks?\"\n\n\"Nope.\" Once again, Luke's face was hard to read. \"The guy on call in Obs and Gynae that night was a friend of mine. He showed me the ultrasound pictures. She was around ten or eleven weeks along at the very most.\"\n\n\"What?\" I shot him a bewildered look. \"I don't understand. Why would she say she was four months gone when she was only ten or eleven weeks? Surely she wouldn't have got that wrong? Why would she think--why would she say that she--?\" And then the penny dropped, my eyes widening. \"Oh...\" \n\nHe didn't respond, his solemn gaze continuing to hold mine as I regarded him with mounting horror, the last piece of the puzzle finally falling into place. She'd lied. Oh, she'd wanted him to be the father--of course she'd wanted him to be the father. Luke was a doctor, a surgeon, someone who could provide for her, give her the standard of living she'd always wanted, that she'd craved since the death of her father in her early teens and had continued to crave, if her most recent relationship with the married merchant banker was anything to go by.\n\n\"It wasn't your baby.\"\n\nLuke gave his head an almost imperceptible shake. \"No.\"\n\nI stared at him, almost at a loss for words. \"But you let everyone believe it was!\"\n\nHe raised his eyebrows. \"You think anyone would've believed me if I'd said it wasn't?\" Reaching across to the bedside cabinet, he picked up both cups of hot chocolate and handed one to me. \"Try this. Should be just right to drink now.\"\n\n\"Luke!\"\n\nHe took a sip from his own mug before smiling at me over the rim. \"Go on.\" \n\nObediently, I tipped a little into my mouth, swallowing quickly. \"But you should have told them,\" I protested, still struggling with the idea he'd taken the blame. \"It would've been easy enough to prove that you--oh...\" I stared at him in wonder as I finally tasted the warm, velvety liquid, Luke's smile broadening as he monitored my reaction. \"Oh, wow.\"\n\n\"Like it?\"\n\nHe watched me with obvious pleasure as I readily took another mouthful, my assaulted taste buds reeling at the flavours. The creamy sweetness, a hint of spice--was that cinnamon? Nutmeg? And there was something else, something that gave the syrupy concoction one hell of a kick. \"Chilli?\" I ventured in astonishment.\n\nTaking another swig from his own mug, he nodded. \"Just a little. My Granny usually puts a fair bit more in but it's a stimulant and you need to get some sleep at some point tonight.\"\n\nI regarded him with suspicion, now detecting a faint but distinct alcoholic note. \"What else is in this?\"\n\nLuke grinned. \"I can't tell you that. Family secret. My grandparents went off travelling around the world when my father left home. They ended up spending quite a while in Mexico--my Granny picked up the recipe there. When Julie and I were kids we used to beg her to make it for us.\"\n\n\"Cornish Granny?\"\n\n\"Yep. She's almost ninety now, but she swears by the stuff.\" He grinned again, motioning to me to carry on drinking. \"She looks pretty well on it, too.\"\n\nI took another sip, delighting in the way the chocolate coated my tongue, closing my eyes as it slid easily down my rather dry throat. But even as I drank, my mind was turning cartwheels, frantically trying to digest what he'd told me and attempting to match his version of events against the fragments I'd heard from Daniel. And suddenly I let out a gasp, my eyes shooting open, the mug jerking in my hand. \"They beat you up.\"\n\nLuke was still watching me, his eyes soft. \"I know,\" he said, gently catching my fingers and righting the mug.\n\n\"Luke!\" I gazed at him in dismay. \"Daniel and his mates--they went round to your place and--\"\n\n\"--kicked the shit out of me.\" He gave a small smile. \"Yes, I know. I was there.\"\n\n\"But you hadn't done anything! You didn't hit her--you didn't make her lose the baby. It wasn't even your baby!\" The full horror of what my former fianc\u00e9 and his friends had done washed over me like a huge icy wave. \"They could've killed you!\"\n\n\"Hey, they did me a favour,\" he said lightly, gesturing towards his face. \"I never liked my nose that much before anyway.\"\n\n\"They broke your nose?\" \n\n\"Amongst other things.\"\n\n\"Oh God, Luke.\" My voice cracked on the words.\n\n\"And I deserved it.\"\n\n\"What?\"\n\nHearing my outraged tone, he shot me that rueful smile again. \"I deserved it. No, hear me out,\" he added as I began to splutter. \"Maybe not because of Chloe, I'll admit, but babe, I was an utter bastard.\" He sighed. \"All those girls, all those one night stands. Someone needed to teach me a lesson. Someone needed to show me I couldn't carry on like that, treating women like objects. Don't get me wrong, I was always bloody careful, I always made sure I used a condom, but accidents happen. Sooner or later I really would've got one of them pregnant, screwed up her life--and for what? For ten minutes of hedonistic pleasure?\"\n\nI stared at him, unable to think of a single thing to say, my mouth opening and closing uselessly. \"Luke,\" I faltered at last, shaking my head slightly. \"I--you didn't--\"\n\n\"It's okay.\" He reached forward, cupping my cheek in his hand. \"I'm actually grateful they did what they did. It was the boot up the rear I needed. It made me completely rethink my life--what I was doing, where I was headed, why I was doing what I was doing. I was training to be a surgeon, for heaven's sake. To save lives, not stuff them up.\" \n\nNudging the hot chocolate back up to my lips, he waited while I drained the mug then gently prised it from my fingers, setting it back down on the cabinet with his own. \"When the bones and bruises healed, I took myself off to the gym and got fit.\" He grimaced \"Boy, was I out of shape. I stopped going out every night, stopped drinking, started studying, passed that exam I failed and started getting on with what was really important. My father once said it was the making of me. He's probably right.\"\n\nI regarded him in silence for a while as his words swam around in my head, realising he meant every one of them. Good things really could come out of bad situations. Incredible though it seemed, when Daniel and his friends had beaten Luke up after Chloe's miscarriage, they'd set in motion a whole chain of events that had led directly to him developing the skills required to save my mother's life. But had he really been celibate ever since that fateful day? Right up until the afternoon he'd rescued me from the beach?\n\n\"What do you think?\"\n\nFor a moment, I feared I'd actually voiced the thought aloud. \"Wh-what?\"\n\nHe smiled. \"Do I have to sleep on the couch? Or--\" he tugged gently at the top of the duvet \"--do I get to spend the rest of the night here with you? It's your call.\"\n\nOh boy. I felt an almost violent tug in my womb as I gazed back at him, my traitorous body reacting even faster than my mind to the idea of Luke lying down next to me and scooping me into his arms. \"Of--of course you don't have to sleep on the couch,\" I managed at last, my heart beginning to hammer in my chest as I pushed at the duvet in turn, making it obvious I wanted him to climb in.\n\nHe smiled, rising to his hands and knees and clambering beneath the covers. \"Thanks babe,\" he said, yawning hugely before sliding down beside me and pulling the duvet back over us both. \"It's pretty comfy out there but this is so much better and I really do need to get some sleep. So do you.\" And stretching out an arm, he leaned across to the cabinet and switched off the bedside lamp. \"We'll talk some more in the morning, okay? Get some rest, now.\"\n\nThat was it? I stared into the darkness in astonishment. The conversation was over and now it was time to sleep? Without so much as a kiss or even a hug? I turned to retrieve the pillows from behind my back and rearranged them for my head before easing down the bed myself, so disappointed--so frustrated--I wanted to cry. Had I completely misinterpreted the way he'd been looking at me, the things he'd said? It seemed that way. And when Luke heaved a sigh and rolled on to his side, turning away from me, I grew sure.\n\nStupid, a little voice screamed in my head. This was Luke, king of the one-night stands. Not only that but if he was to be believed, he hadn't had any kind of relationship with a woman in years. What on earth had possessed me to think that anything could ever happen between us? Nothing was going to happen, was it?\n\nBut then again, a much more rational part of my brain argued, if that was the case, why had he bothered telling me the whole sorry tale? He hadn't needed to tell me any of it but he'd said he wanted to. And why had he made sure he was the surgeon who operated on my mother? Why would he have done that if he hadn't had some kind of ulterior motive? To hell with getting some rest. I needed to know. I needed to know now...\n\n\"Luke?\" I whispered, tentatively touching his shoulder. \"Are you asleep?\"\n\nThere was no reply. Cursing under my breath, not brave enough to wake him, I too rolled over, at last daring to slip my arm around him before cuddling into his back. It wasn't enough--it wasn't nearly enough--but it was something. I could pretend he was mine, at least for now. And closing my eyes, I breathed in his scent, burying my face into the back of his T-shirt.\n\n*\n\nI was in Luke's arms. At some point, he'd turned over and gathered me close, his body pressed to mine, his hands beneath my T-shirt, warm on my bare flesh. I could feel the bulge of his erection against my inner thigh, felt the rhythmical, primal undulating of his body against mine. Was I awake\u2014was this why I'd awakened? I wasn't sure, didn't know that I wanted to be sure, my eyes remaining firmly closed as my hands embarked on a tentative expedition of their own, slipping beneath Luke's T-shirt, roaming across his smooth skin. \n\nWhen I lifted my head, his mouth found mine, my lips parting readily, welcoming the dizzying pleasure of his languorous kiss. Oh this was good, this was heaven... Who cared if I was dreaming so long as he was kissing me like this? As the kiss deepened, I found myself rocking into him in turn, the need to feel him against me, inside me, growing steadily more acute. \n\nHis hands were moving now, over my shoulders, the length of my back, my spine tingling beneath his touch. In turn, I responded, emboldened by that kiss, by my heady desire, my own fingers sliding lower to his waist and dipping beneath the elastic of his boxer shorts. I heard his soft groan against my lips, one hand coming down to join mine, helping me to push the fabric down and away, freeing him from the confines of his underwear. \n\nAnd as my fingers closed around him, marvelling at the feel of the silky soft skin stretched over rock hard flesh, his fingers found the evidence of my own arousal, the copious moisture pooling there. I writhed against him as he caressed me, my heart beating wildly, my breathing growing ever more ragged until at last he relented, easing me on to my back, settling into the cradle of my thighs. \n\nI cried out when he finally entered me, the stretching sensation exquisite, my legs curling around his as he opened me wide. I'd almost forgotten the pleasure, the overwhelming sense of completion, how right this felt, how well we fitted together. Yet this was even better than before, the friction sweeter than ever...\n\nStill fearing this was a dream, I kept my eyes firmly closed, revelling in the feel of each and every thrust, Luke moving oh-so-slowly, stroking that sensitive place he'd found deep inside me before. But once again, this seemed different. Though that familiar tension was building, a river of pleasure walled up behind a dam, somehow he was holding me there. Somehow he was holding me in that place between plateau and peak, that pressure low in my belly growing and rising, far beyond anything I'd ever experienced, almost frightening in its strength and intensity.\n\nUntil wonderfully, the dam broke, my orgasm surging through me in a violent wave, rolling over and over, radiating from my very core to the tips of my fingers. And as I trembled beneath him, Luke too gave a shudder, plunging deep inside me one last time, finding his own release.\n\nBreathing hard, he wrapped his arms around my still quivering body, easing us both on to our sides, one hand coming up to gently caress my hair. When I opened my eyes I found he was smiling at me, the approaching dawn allowing just enough light into the room for me to see his expression. \"Hi,\" he murmured, kissing me tenderly. \"It's early. Back to sleep now, babe.\"\n\n\"Luke--\"\n\n\"Uh uh.\" He shook his head, still smiling. \"No you don't. Not this time. No more night time chats.\"\n\n\"But--\"\n\nHe groaned softly, his arms tightening around me, his hand tucking my head against his shoulder. \"Ssh,\" he whispered, dropping another kiss into my hair. \"Not now, you're going to sleep.\"\n\nAnd giving up the fight, exhaustion settling over me like a heavy blanket, I allowed my eyes to drift closed once more, surrendering to the warmth of his embrace.\n\n*\n\nThank you so much for being patient with me! I tried to make it worth the wait. The exam's all done and dusted now and I passed it--yippee! The wait for Chapter 9 shouldn't be so long...\n\nAll votes and comments very much appreciated!\n\nLily -x- "
    ],
    "authorname": "evanslily",
    "tags": [
        "romance novella",
        "surgeon",
        "drama",
        "sleep"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/caught-by-the-tide-ch-08"
}