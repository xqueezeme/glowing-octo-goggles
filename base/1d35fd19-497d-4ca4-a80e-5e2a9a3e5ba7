{
    "title": "A Haunting on Water Garden Island",
    "pages": [
        "Author's Note: The horror genre has always been one of my favorites. I had a great deal of fun writing this one. If you enjoy it, please feel free to vote and comment. Thanks!\n\n*\n\nThe cool fall evening was beginning to turn dark as the sounds of dead leaves crunched underneath our feet. We could see the bonfire in the distance grow bigger with each step and my friends were starting to come into focus. This was the moment I've been dreading all week; introducing my new girlfriend to my super rude and immature friends. Girlfriend? That even seemed a bit premature. We had only been on a couple dates. This was a mistake. Why did I bring her here, I wondered. \n\nHer warm hand gently gripped mine, comforting me that she wanted to be here. That she wanted to be with me. And also, probably to help with her own anxiety. I spent the entire drive and even the short boat ride over to this island explaining how my friends were like the uncensored version animal house. I don't think she believed me, but she soon would. \n\n\"Garret, you fuck face! What took you so long?\" Paul shouted out as we came within earshot. Despite his average height, he had the confidence of a giant. \"And who's the hottie? Oww Oww!\" He howled. \n\nWe hadn't even reached the group yet and already my stomach was in knots. This was a mistake, I repeated in my head. \n\n\"I'm Julie.\" She said confidently as we took an open spot on a log, completing the circle around the dancing flames. \"You must be Paul. Garret told me how charming you were.\"\n\n\"Damn straight.\" He said as he shot back a swig of beer and gave her a wink. \n\nThe group oohed and giggled. \"Don't mind him. I'm Kelly. Paul's girlfriend. Please don't hold that against me.\" She slapped Paul in the arm. \"It's great you could make it.\"\n\nKelly was by far one of the prettiest girls I knew. Her wavy, light brown hair fell just below her shoulders, always looking purposely out of place like she just woke up. I was always surprised how Paul ended up dating her, but I supposed it took a guy as obnoxious as him to even approach her. Her baggy, maroon hoodie that was clearly too big for her hid her toned curves as she handed us each a beer. \n\n\"And I'm Jim and this is Laurie.\" The remaining couple said with a friendly grin. \"Seriously, we're not that bad. Unless we're drinking.\" Jim said as he finished his beer and grabbed another. \"Unfortunately, much of this trip will involve drinking, though.\" He laughed and downed half of the new bottle. \n\nJim and Laurie were always a more reasonable couple. Still quick with a joke, but generally less offensive and seemed to tame Paul's behavior. \n\n\"Alright, guys. That's enough. You've made your point.\" I said trying to remain cool. \n\n\"I was expecting worse.\" Julie joked, taking a big swig of her own beer.\n\n\"Be careful what you wish for.\" Paul said, as he leaned back and his large grin was glowing in the shadows. \n\n\"What is this place anyway?\" I asked hoping to change the subject. \"It looks like...\" I had barely been here and really the only way I could describe the place was creepy. The jagged, leafless trees seemed to stretch out like dying, bony hands as they reached for the cloudy sky. The old Victorian house in the distance looked like it belonged on the cover of an old novel from a different era. \"It looks... fucked up.\" I finally gave in. As much as I had matured in the past few years after college, I couldn't help but stoop to their level whenever I hung out with this group. I'm not even sure when the last time I swore was, but it came easily just moments after seeing them again. \n\nAfter the laughing died down, Paul began in an overly deep voice. \"Welcome to Water Garden Island.\" \n\n\"Water Garden? What part of this island looks like a garden? Looks more like a wasteland. I said, not realizing how much I was complaining. \"And who chooses a decrepit island for a getaway anyway?\"\n\n\"People on a budget.\" Laurie chimed in. \"Unless you wanted to pay an arm and a leg...\"\n\n\"And a dick,\" Paul added. \n\n\"This was the best we could find and still get a whole house to ourselves for an entire weekend.\" Laurie continued. \"It was surprisingly cheap. Like dirt, dirt cheap.\"\n\n\"Maybe there's a reason for that.\" I said with a snarky grin. \n\n\"Maybe no one wanted to take a long ass drive around winding cliffs only to then still have to take a tiny ferry the last mile to this shack of an island.\" Paul said already growing bored with the conversation. \n\n\"Not to mention it's prime thunderstorm season around here. Guaranteed to rain about 80% of the time.\" Jim added. \"And I haven't had cell service since I got here. Just saying.\"\n\n\"Or, maybe it's haunted...\" Laurie said with a subtle smile. \n\nThe group erupted with laughter. She was always trying to tell about some ghost here, or seeing some spirit there. It was hard to take any of it seriously she had cried wolf so many times. \n\n\"There is this legend...\" Jim leaned forward and had a way of quieting the group. \"They say on this island lives a terrifying creature.\" His eyes darted around, making sure we were listening. \n\nWe couldn't help but mirror his body language, and soon we were all leaning in, listening eagerly. \n\n\"It only comes out at night and goes after girls in particular. They say a hot girl brings out the beast in him.\"\n\nWe were half giggling and slightly on edge. I felt Julie hold on to my arm as he continued. \n\n\"In fact, they say on a night like tonight, underneath a full moon, the hairy creature hangs. Oh God! Julie it's right next to you!\"\n\nJulie turned to her side and screamed, as Paul was bent over with his pants down, mooning her right in front of her face. Without hesitating, she slapped his hairy dick and balls that dangled below his spread cheeks. \n\n\"OWW!\" Paul screamed as he quickly turned around and sat back down, before even pulling his pants back up. He held onto Kelly as the group erupted in laughter once again. \n\nKelly gently patted his exposed penis, \"careful with that thing...I'm going to need it later.\" She said playfully. \n\nJulie's eyes were fixed on the sight. Still breathing heavily, she reached over and gave it a squeeze. \"Sorry, didn't mean to hurt the hairy monster underneath the full moon.\" She said as her hand trailed off of his shaft. \n\nThe group was speechless as they watched, even Paul didn't know what to say. \"Uh, no, my bad. Sorry.\" He said awkwardly as the whole group stared at the strange sight of her hand on his dick. \"It was a stupid joke.\" He added while he finally pulled up his pants. \n\nJulie cuddled back into my side as if nothing happened, and the group stared silently into the mesmerizing flames. \n\n\"Anyway...\" Laurie started again, \"I was being serious. Whether you believe it or not, there is a legend about this place. A real spirit that supposedly haunts this island.\"\n\n\"Oh please, that's a crock of shit and you know it.\" Jim said, going against his girlfriend. \n\n\"No, she's right.\" Kelly said. \"At least that there is a legend about this island. Whether or not you believe it, it's at least a well-known tale.\"\n\nThe group grew silent, hoping she would continue. \n\n\"Well don't make us beg for it. What is this tale?\" \n\nKelly grinned, enjoying the attention. \"Legend has it...\" she started slowly and watched as we all leaned in. \"This island is haunted by a beautiful temptress who will make you do...unusual things...\" she had a gentle, high-pitch laugh that echoed through the crisp air. \n\n\"Paul does unusual things wherever he is.\" Jim interrupted. \n\nPaul had his wicked grin on full display, nodding his agreement. \n\n\"It's all nonsense, anyway.\" Jim added. \"Sorry Kelly, but it's just a dumb legend.\"\n\n\"I've heard it too.\" Julie jumped in. \"I actually read about it.\"\n\n\"You read about it?\" I asked a little surprised. \n\n\"You think I'm going to some creepy island with people I don't know and not read up on everything I can find about this place?\" She said quickly. \n\n\"And what did you read?\" Paul asked plainly, while locking eyes with Julie. \n\n\"A bunch of things. It used to be a retreat location for a strange group of hippies in the 70s. Free love for all. But not all of them made it back.\" Julie said staring right back into Paul's eyes. \n\n\"And where, pray tell, did they go?\" Paul asked, inching closer to Julie. \n\n\"No one knows. But there's no record of them after this trip. Some crazy lady lured them here with promise of unending pleasure. Nobody really knows after that.\" She said in an almost amused whisper. \n\n\"Do you believe any of that?\" Paul asked, taking a final swig of his beer.\n\n\"Enough to keep an eye out while I'm here.\" She said, jabbing right back. \n\nPaul chuckled, breaking the tension. \"Suit yourself.\" He stood up and threw his empty beer bottle deep into the woods. The eerie sound of glass breaking on dying trees pierced the air. \n\n\"Dude, global warning.\" Jim said in a tone just hard enough to tell if it was sarcastic or serious. \n\n\"From one bottle?\" Paul asked as he turned his back to the group and loudly unzipped his fly.\n\n\"Gross, go in the woods or something!\" Kelly called out. \n\n\"We're already in the middle of the woods.\" Paul said back, and soon the sound of his stream hitting the crunchy leaves filled the air. \n\n\"I wouldn't do that.\" Julie said seriously. \"These are her sacred grounds.\"\n\n\"She can suck my sacred dick!\" Paul added as the sound of his stream strengthened. \"It's all bullshit.\"\n\nThe growing tension between Paul and Julie was starting to make me uncomfortable. \"Alright, alright. Everyone calm down.\" \n\n\"If it's all bullshit,\" Julie wouldn't back down, \"why don't you turn around and piss in the fire and call her out?\"\n\nHis stream stopped immediately, and his head cocked to the side looking over his shoulder at the group with an unsettling grin. \n\n\"Paul, that's enough.\" Kelly yelled. \n\n\"Now, now.\" Paul's voice turned raspy and cold. \"I don't want to be impolite and disappoint our new friend here.\" \n\nHe turned slowly, with his exposed penis fully on display as he stood facing everyone. \n\n\"That's enough, Paul!\" Kelly shouted louder but the words didn't seem to register. He stepped closer to the fire, closed his eyes and took a deep breath.\n\n\"Ohhh eeeevil spirit.\" He chanted in a deep voice. \"Please take my piss as a personal invitation to come suck my dick. I promise to let you know before I cum in your mouth.\" The smoke billowed as his stream arched high and sizzled as it hit the flames. \n\nSlowly, he raised his arms out to the sides. \"Wait, guys...I think I'm getting something.\"\n\n\"What's that evil spirit? You want me to fuck my girlfriend in the ass for the first time? I don't want to, but if you think it's best.\" He couldn't hold back his smile any more as the group threw pebbles and dirt at him. \n\n\"Oh shut up, Paul.\" Kelly called. \"You're such an asshole.\"\n\n\"Come on, it's all bull shit. But just to be safe, we should probably try anal tonight.\" He added with a goofy grin. \n\nHis last comment earned him a punch in the arm from Kelly. \"Keep dreaming, bub.\" She said, tucking his thick penis back into his pants. \"It is getting late, we should probably turn in.\" As she patted his bulge, she added, \"I'll see what we can do about this. NOT THAT!\"\n\nJim and Laurie turned in as well, apologizing for the nonsense before leaving Julie and me cuddling at the fire. \n\n\"Wow.\" Julie said softly. \"You weren't kidding.\"\n\n\"You've been here all of a couple hours and already saw my friend's penis.\" I paused, \"but you still haven't seen mine.\" I said, unsuccessfully trying to conceal my jealousy. \n\n\"Your friends are crazy.\" She said. \"In a good way.\" She laughed. \n\n\"You just liked seeing his dick.\" I joked, again confronting and ineffectively concealing my jealousy. \n\n\"That's gross. Don't be ridiculous.\" \n\n\"Whatever. You even touched his...\" I said, wondering why I couldn't just leave this alone. My friends would have scared off almost any other girl, and here I am admonishing her for being a good sport. \n\n\"No, I didn't. That's disgusting.\" She said it so seriously and convincingly, I wasn't even sure if she knew she did slap it...and then later rub it. Did I make that part up? Now that I think about it, why didn't Kelly say anything about it? She probably would have been pissed if she saw another girl touch her boyfriend's dick, right? Maybe I'm going crazy. \n\nThe fire crackled and then began to sizzle. \"What is that, the haunted spirit peeing on the fire?\" I joked. \n\n\"No, I think that's one of the storms they were talking about.\" Julie added with a playful squeal as the clouds opened up, quickly soaking us to the bone. \"C'mon!\" She grabbed my hand and soon we were sprinting across the woods towards the house. \n\nA few near slips and several laughs later, we were inside the old Victorian house. The dim chandelier barely lit the foyer. Our damp clothes clung to our bodies, and we finally locked eyes. I could see her chest beating rapidly, with beads of rain and sweat dripping down her face and chest. I dove in first, gripping the back of her neck as we made out as if our lives depended on it. My hands grabbed her hips, pulling her in tight. Wasting no time, my hand slid up and over her soaked shirt, feeling her heaving breasts. \n\n\"Not here.\" She whispered and took my hand, heading up the dark stairwell. Each step creaked louder than the last. As we ascended the fragile staircase, I noticed the half-illuminated portraits on the walls, and the tan and burgundy paisley wallpaper with detailed filigree. Just as we neared the top, a giant bolt of lightning lit up the room, before the room went completely dark. It must have fried the circuits as I appreciated the dim light from the chandelier all the more now that it was gone. The creaking continued, but as far as I could tell neither of us was moving. \n\n\"Was that you?\" I asked, suddenly on full alert. \n\n\"Was what me?\" She asked in between kisses on my neck as we were practically falling on the stairs. \n\n\"Nothing.\" Returning to the task at hand, letting my fingers wander, circling her hard nipples poking through the dampened fabric. I pushed her up against the wall once we got to the top of the stairs and was ready to have my way with her right here in the hallway. Her moans were nearly sending me over the edge. \n\nI felt her hands move down my stomach, gripping my belt buckle in one hand and rubbing my bulge with her other. \n\n\"Fuuuck.\" I muttered in a breathy whisper as another bolt of lightning in the distance brought a little light to the pitch-black house as shadows flickered down the empty hallway. The curtains blew off the window at the end of the hall and clung to an invisible silhouette, giving it a solid form. \n\n\"Holy fuck!\" I shouted and pulled away from Julie. \"Did you see that?\"\n\n\"See what?\" She asked slightly annoyed. \n\n\"There was someone there. Something. At the end of the hall!\" I pleaded. \"Look. Just look and tell me if I'm crazy.\"\n\n\"The only thing I want to see is right here.\" She said and grabbed my crotch once again, teasing my length and nibbling my ear temporarily distracting me. \n\nHow did she do that? I found myself wondering I was now sliding my hands under her shirt, feeling the patterns of her lacy bra. Just as I unhooked it, the lightning struck and lit up hallway in tempered bursts. The silhouette returned and disappeared in the flickering light, growing slightly bigger each time when I finally realized it was getting closer to us. \n\n\"Julie!!!\" I whispered in a painful screech, \"It's right there!\"\n\nJulie's hand slid in my boxers and felt her way down to my shaft, unaware of what I was seeing. \n\n\"Right there!!!\" I whispered with all the voice I could muster. \n\n\"Right there? Yeah, like that?\" She said now starting to grip my length pulling the skin gently. \"Right there, baby?\" She moaned in my ear. \n\nThe floor creaked as bits of the mysterious silhouette came into view when the sporadic lightning resumed. \"JESUS FUCKING CHRIST!\" I screamed forcing Julie to turn and see the figure that was right behind her. \n\nParalyzed I had nothing left in me as the lighting finally subdued. Total darkness once again. Julie clung to me as she started to sense it as well. \n\nAn eerie high-pitched laugh formed all around us. I felt the fingernails dig into my flesh, as Julie held on for her life. \n\nThe flickering light buzzed and the dim chandelier came back on. \n\n\"Boo.\" \n\n\"AHHHHHGHH!\" Julie and I screamed in unison as we finally realized what was in front of us. \"Jesus fucking Christ, Kelly. You nearly gave us a heart attack.\"\n\nKelly was holding her belly she was laughing so hard. Now that the light was coming back the whole thing seemed rather foolish. \n\n\"I'm sorry. I'm sorry.\" She paused again to catch her breath. \"I only came out to use the bathroom. It's all the way in the basement, and I didn't want to...uh, interrupt anything....\" She lightly chuckled. \"Just so you know, you guys are staying in the room on the end. Power comes and goes as you've learned by now, but there are flashlights in your dresser.\" And again, she laughed silently. \n\nI was starting to gather myself and realized she was wearing only a loose white T-shirt. \"Fucking hell. You look like a damn ghost in this stupid shirt.\" I said still trying to calm down. \n\n\"This? This is Paul's. Didn't bring anything to sleep in.\" She gave us a sly wink as she held out the bottom of the shirt far away from her body, revealing a little more of her bare thighs in the process. \"But clearly, I'm not going to just come out here in my, well...you know.\" She giggled again and her soft, high-pitched laugh hung in the air. \n\n\"Anyway, now that you know where your room is, I suggest you go there and pick up where you left off.\" She gave me a playful look and a smirk to Kelly before wedging herself between us. I looked down and her loose shirt barely fell below her waist as her round cheeks poked out, nearly rubbing against my crotch as she squeezed between us making her way down the stairs. My eyes not-so-subtly followed her bouncing cheeks as she disappeared out of view, earning me an eye roll from Julie. \n\nOnce Kelly was gone, we laughed softly and went into our own room. It was dark, and the air was stale. \"I can't believe...\" \n\n\"Shhhhh....\" Julie interrupted me mid-sentence. \"Yes, I get it, but let's not let that take away from where this evening was headed.\" She gave me a deep kiss, wrapping her arms around my shoulders and neck. \n\n\"Mmm, you're right.\" I kissed back immediately returning to groping her breasts like a teenager. \n\n\"Not so fast.\" She said playfully and placed a hand on my chest, gently pushing me until I sat down on the bed. \"Let's make this a night to remember.\" She took off three of the pillow cases and used one to tie my wrist to a bedpost and then tied the other. \n\n\"Oh wow, kinky. Didn't know you were into this...\"\n\n\"Shhhh!\" She snapped. \"No talking.\" She said with a wicked grin and used the third pillow case to tie around my eyes as a makeshift blindfold. \n\n\"Is this really necessary? I can barely see it's so dark already.\" I added. \n\n\"Quiet! I said no talking!\" She snapped. \"I'll be right back. I have a surprise I have to go get...don't go anywhere...\" She said teasingly and I felt the soft touch of her lips on mine one more time before hearing the floor creak as she left the room and closed the door. \n\nThis was so weird. I couldn't help but wonder if her new attitude was partly from me staring at Kelly's ass a moment ago. Laughing to myself, I tried to remain calm. So many fucked up things this evening and she still wanted to have a crazy, kinky night. There are worse things than this, I reminded myself. \n\nThe blindfold left my world completely dark, and my senses were on overload. I heard the old house settle, the storm outside had slightly calmed down and the stale smell of the room seemed to grow fouler. ",
        "The door creaked opened and then creaked again as it slowly closed. I expected to hear footsteps against the old floorboards, but there was no sound. \"That was quick.\" I said anxiously, awaiting what she had in mind. The room was completely silent. Not even the rain was making a noise. What the hell is she doing? I had crazy thoughts of her in leather, maybe with a whip standing there eyeing me down. Maybe none of that was true. Not knowing was torture. \n\n\"Oh shit, right no talking.\" I said apologetically, hoping that's what was causing the delay. \n\nFinally, after what seemed like hours I heard the floor boards creak again, and the felt the mattress adjust from the added weight on the bed. My belt was pulled out from my loops in what I can only imagine looked like a waiter pulling a tablecloth out from underneath a fully set dinner table. The sound of my zipper slowly being pulled down came next. Fuck, this was hotter than I thought it would be. \n\nThe damp air in the room tingled against the bare skin above my cock as she pulled my boxers down, slowly at first, and then even more torturously slow after that. Millimeter by millimeter I felt my penis become exposed and wondered more than anything what she was thinking as she saw it come into view. The boxers were only about halfway down when I felt a damp lick across the top half of my shaft. \"Fuck.\" I said softly. \"Shit, sorry.\" I reminded myself not to talk and do my best to just enjoy this exotic treat. \n\nMy boxers moved lower and I was growing harder the lower they went. By the time they were pulled off and over my tip, my shaft bounced free. No sounds, no compliments, not even a breathy moan. She was good at this teasing game, I thought to myself as I felt her tongue brush against the base of my sack and up along the full length of the underside of my cock. \n\nMy body twisted from the strange mix of pleasure and lack of control I had. A sharp tingle shot through my stomach as her fingernails dug into my belly, scraping their way downward and a pleasant warmth engulfed my cock as she took me in her mouth. \n\nI felt the texture of her tongue more so than with any other girl before. So many new things I noticed with the blindfold. Her fingertips scratched at my ribs and down my sides, painfully digging in as she continued to suck on my cock. The storm started up again and the sound of rain crashing on the roof dampened any sounds of her slurping on my shaft, swallowing her saliva as it coated my length. \n\n\"Ouch!\" I screamed as a twinge of pain shot through my body. \"What the fuck was that?\" I shouted. \n\n\"SHHhhhh...\" a gentle wave of sound rushed through the room. As I felt my cock slide in her mouth again, slowly at first, building up speed. An internal heat was surrounding my cock. \n\n\"Fuck!\" I screamed as another twinge of pain shot through me. What is that, her teeth? I twisted and tried to break free from her grip. \"STOPPP!\" I wanted to shout, but found my voice was suddenly frozen as I felt my ass lifted up off the bed, as if she was lifting me up just from her mouth pulling on my cock. \n\nEverything hurt, I could have sworn I was bleeding by now as her nails dug in my elevated lower back, over my ass cheeks and scratched my balls. It felt as if she was trying to get me off with steel wool. Despite all my protests, she continued on, scratching at my ass, teeth scraping on my tender skin. I wanted to scream but couldn't. Instead I found I was only getting harder, as if my anger and pain was strengthening my erection. \n\nFuck, could this be? I wondered as she sped up and I felt the unmistakable, no-turning-back sensation as my hips writhed, bucking off the bed bringing me to the edge before a moment of respite, as I erupted in her mouth. Speechless, I felt burst after burst of cum shoot out of me unlike ever before. My cock twitched involuntarily, pulsing as the last few spurts found their way out. \n\n\"Holy fuck!\" I whispered, completely out of breath. \"We need a safe word.\" I joked as the darkened room spun in my head. I blinked a few times and was lightheaded as the darkness seemed to turn even darker inviting me in as I came in and out of consciousness before giving in and passing out. \n\n\"Garrett...?\" I heard a soft voice say. \"Garrett...??! Are you sleeping?\" I felt her shake me and untie my blindfold. \"Jeez, I just went to go change into some lingerie and you fell asleep? I'm so flattered.\" Julie said as I slowly regained my vision. \n\nI took in the room around me, looked down and saw that my pants were still on, belt still buckled. \"How can that be...?\" I sat up dizzily once she untied my hands. \"You were...and you had my...oh god.\" The room was spinning faster now. \n\n\"You just blacked out. Guess you had more to drink than you thought.\" She said clearly disappointed. \"Good night, Garret. Maybe tomorrow will be the night we won't forget.\" She rolled over and curled up into her pillow away from me. \n\nHow can this be? I wondered, feeling my stomach and inside my boxers. No scratches, no saliva, no lingering cum remnants on my tip or my boxers. Did I really imagine the whole thing? That thought ran through my mind over and over as the pattering of rain on the roof grew louder and took over my thoughts before passing out.\n\nLike most mornings, I awoke the next day with an intense erection. I lightly teased my length and saw Julie sleeping peacefully next to me. I tucked it back into my boxers and threw on a T-shirt and headed downstairs. I needed to clear my head and figured she could use the rest. \n\nThe smell of coffee coming from the kitchen was a pleasant change from the rest of the house. \n\n\"Morning sleepy head.\" Kelly said playfully. \n\nI wiped my eyes, \"What are you doing up so early?\" I ask letting out a big yawn. \n\n\"Early? Half the morning is already gone.\" She said beginning to stretch and I noticed she had on running shorts and a yellow tank top. \n\n\"Morning people are the worst.\" I shook my head jokingly and helped myself to a cup of coffee from the brewing pot. \"What the hell was up with you last night? You were like Casper the nudist ghost.\"\n\nShe blushed. \"I told you I didn't want to interrupt.\" Kelly said with a sly grin. \n\nThat didn't answer my question. I was more curious why she practically rubbed her bare ass on my crotch in front of Julie, but I decided to leave it alone for now. \"Seriously though, I'm glad you're here. I have to tell you what happened last night with Julie. It's so fucking weird.\"\n\n\"As much as I love a good kinky sex story, I'm about to go for a run before another storm rolls through. You're welcome to join and tell me...if you can keep up.\" \n\n\"Ugh.\" I weighed my options. As much as I didn't like running, I needed to get this off my chest. \"Let me go change.\" I said, clearly annoyed. \"Stupid running.\" I mumbled under my breath as she laughed. \n\nHalf an hour and several torturous gasps later we stopped for a break out in the middle of the woods. \"Hold on. I need to...to die.\" I said dramatically between deep, full-body wheezes, bracing myself with my hands on my knees. She glistened from some sweat, but was clearly not in the same state of disarray as I was. \n\n\"We barely hit a jogging pace. You really should try to add some more cardio in your workout routine.\" She smirked. \n\n\"Noted.\" I said finally regaining my breath. \"Now last night...\" I began to tell her the whole tale as we wandered through the woods for a cool-down walk. \"Don't you think that's weird?\"\n\n\"So let me get this straight. You had a dream that some...thing gave you head and you think your girlfriend was acting weird?\" She asked trying understand the crazy tale. \n\n\"It's more than that.\" I said almost frantically, wondering why she wasn't as creeped out by it as I was. \"The whole thing was weird. The pain I felt, the blow job, the fact I was still dressed after it happened. It didn't feel like a dream at all.\"\n\n\"Sounds like you just had too much to drink and got carried away from that stupid legend we were talking about.\" She said logically. \n\n\"Perhaps you're right.\" I conceded, maybe I did imagine it all. \n\n\"Good. Now quit imagining your girlfriend playing with my boyfriend's dick.\" She had a plain look on her face. \n\n\"What did you just say?\" I blurted, not believing what I heard. \n\n\"Jeez, calm down. I said quit imagining things.\"\n\n\"That's not what you said!\"\n\n\"That's literally what I said...word for word. Seriously, are you feeling ok?\"\n\nThis was getting creepy. I know I didn't imagine that. Did I? God, now I'm asking myself questions. I'm going crazy. \"Yeah, I'm alright. I think it's just all this fresh outdoor air that makes me crazy.\" I said jokingly, trying to leave it alone for now. \n\nShe raised an eyebrow and slightly adjusted her hips as she let out a deep fart. \"Feel better now?\" She joked. \n\nI sniffed audibly. \"I do, thanks.\"\n\n\"Any time.\" She said with a wink. \n\n\"Gross.\" I chuckled back. She had always been a super chill girl. I was glad she could be cool enough to take this whole thing in stride. \n\nMy mind wandered back to a few things that still weren't adding up from last night. \"But how do you think it's possible that...\"\n\n\"Shhh, shut up for a sec.\" She raised a hand and closed her eyes, concentrating on something off in the distance. \n\n\"What is it?\"\n\n\"SHHHH. Do you hear that?\" She said with a hint of excitement as she walked around some trees and bushes. \n\nI followed her as she tracked some invisible trail like a bloodhound. We came upon a rocky facade, that had a small slit, barely bigger than Kelly. I finally heard the noise she was talking about. It sounded like soft, bubbling water. She looked at me with a daring smile. \n\n\"Oh don't even think about going in there. There could be bats. Or bears. Or...\" I trailed off as she was already sliding in between the tight opening and out of sight. \n\n\"Kelly?\" I waited, but heard nothing. \"Kelly! You okay?\"\n\n\"WHOA! No way!\" Her muffled shouts made their way to me. \"You have to see this.\"\n\nI knew I would regret it, but I forced my way between the tiny crevice and inched my way into the cave. It was so tight I wasn't sure I could make it through. Kelly's soft giggle echoed off the inner walls as I neared the end of the passage. \n\n\"Holy cow. This is beautiful!\" I said as I emerged into the cavernous space, and felt an incredible warmth in the air. \"What is this?\" I asked, staring at the bubbling water in front of us. \n\n\"Don't you see?\" She said pointing at some crude letters carved into the stone wall: AQVA GAVDEN. \n\n\"It's a hot natural spring! This must be the water garden the island's named after.\" She said with a giant smile. \"I had no idea there was one of these on the island. We have to go in!\"\n\n\"I'm not getting my clothes all wet.\" I said trying to still grasp the situation. \n\n\"You don't wear clothes in a natural spring silly.\" She started taking off her shoes and socks. \"That would be...unnatural.\" And quickly pulled her tank top off and tossed it to the side leaving only her sports bra and running shorts on. \n\nI was torn from the choices, but just froze as I watched her undress in front of me. \"Even if we're not wearing clothes, how are we going to explain why we're completely soaked when we get back to the house?\" I asked, still trying to find excuses not to do this. \n\nShe slid her shorts down over her toned thighs and stepped out of them. Now just in her pink panties and black sports bra, \"Chances are it's going to storm before we even get back to the house anyway.\" She said as she reached behind her back, adjusting her bra. \n\nThis was starting to get interesting. And a strong flash of guilt rushed through me. \"What about Paul and Julie?\"\n\nShe finished unhooking her bra, and let it slide down over her shoulders, holding the cups against her barely covered breasts. \n\n\"Paul can moon and flash everyone last night, and Julie can slap and rub his dick in front of you and me, and you don't think we can go skinny dipping in a natural spring?\" She asked as she let her bra fell down her arms, leaving her chest exposed. In the humid air, her tiny pink nipples stood atop two perfect breasts. \n\nMy shoes and socks were already off, and I didn't remember removing them. \"Fair point.\" I said pulling my shirt off and tossing it to the side. This was a horrible idea, but her naked flesh seemed to convince me otherwise. \n\nShe turned, with her side facing me, lowered her panties down her legs. I watched as her breasts bobbed as she bent over, and saw the curve of her ass with the crack just coming into view before she stood upright again. Now with her back facing me, her cheeks formed perfect half circles above her legs that just barely spilled out wider than her hips. \n\nJesus, I thought to myself. Paul's one lucky guy. No, you're lucky...you're with her right now! An unfamiliar voice whispered inside my head as I quickly pulled down my own shorts and boxers. \n\nShe looked back over her shoulder, eyeing my naked body up and down, giving an extra glance to my exposed cock before slowly walking into the bubbling, steamy spring. \n\n\"It's really hot!\" She said, settling into a cozy spot. \n\nI walked toward her, completely aware of how naked I was. Our eyes were starting to adjust to the dimness, and more things came into focus. It felt as if there was a spotlight on my thick penis that bobbed with each step I took. \n\nHer eyes seemed to be glued to my crotch and she wasn't hiding it. A subtle smirk crossed her face before she finally looked away. \n\nThe hot water stung my feet and shins as I stepped in, before wading into the deeper center. \"You weren't kidding.\" I said as the heat was coating my legs and my penis was just above the water, before finally submerging as I lowered myself and made my way next to her. \n\nI didn't know if I should sit across from her or next to her, but ultimately settled on not looking eye to eye to be less awkward of the two. \n\n\"This is incredible.\" She said, taking in a deep breath and arching her back. Her nipples just barely poked out of the water before disappearing as she exhaled. \"Like a glorious spa that no one in the world knows about.\" She let out another breathy moan as the natural jets massaged and relaxed her every fiber. \n\n\"Huh.\" My brow furrowed. \"You don't think...?\"\n\n\"What?\" She asked curiously.\n\n\"Nah it's stupid.\" I deflected. \n\n\"Jesus, don't make me beg for it...\" she slid closer to me so arms were now touching. \n\nI lost my train of thought from her distracting touch. \"Just glad we found this hidden treasure is all.\" \n\nShe wrapped her arm in mine and I could feel the side of her breast rest against my upper biceps. \n\n\"Uhhh...?\" I didn't know where this was headed. I certainly didn't want it to go too far, and it already seemed like we crossed that point several minutes ago. \n\n\"I hope Julie makes you happy. You deserve the best.\" She said in a sincere tone and gave me a kiss on the cheek. \n\n\"Thanks. That's really sweet of you.\" Again I wanted to ask who she was and what she did with Kelly. But maybe this was the real Kelly underneath it all. \n\n\"Don't mention it.\" She said and gave me wink before shutting her eyes and breathing deeply. \"Mmm...\" She let out a deep sigh. \"That feels sooo...mmm...\"\n\nShe kept slightly moving and I finally caught on. She was adjusting her body so the hot spring would hit her just right. \n\nI unsuccessfully held back a giggle. \"Are you....?\" \n\n\"Shhh...\" she whispered back. I felt her hand on my thigh again, but she wasn't trying to touch anything, she was bracing herself as her moans got louder. \n\nHer eyes completely closed, softly she rocked back and forth to a hidden rhythm in the water. And again, I giggled. \n\nStill with her eyes closed, she grabbed my hand and lowered it to my leg. \"What are you doing?\"\n\nNo answer as her hips started to move a little quicker and she guided my hand toward my inner thigh until it bumped into my floating dick. Gently she grabbed my wrist and lightly motioned back and forth with it, encouraging me to join her in this self-pleasuring session. \n\n\"I don't think I should...\" I said now noticing how completely hard I was under the water as my hand rested on my shaft. \n\n\"Shhhh...\" She whispered again between moans, \"don't let me experience this all by myself.\"\n\nMy hand seemed to involuntarily move back and forth over my length. Barely sliding over the skin. Her eyes were still closed, but I could see her smiling knowing I had started. My pace quickened and I felt her breast bounce against my arm as my increased strokes made my arm jut out to the side a little more. I was almost more focused on the feeling of her nipple grazing against my arm over and over than I was on the actual sensation my hand was creating on my shaft. \n\nHer breaths sped up and she gripped my arm tightly, biting my shoulder and trying to control her spasms as she shook with pleasure. I sped up as she was calming down, watching me stroke furiously under the water. I heard her breathy moans echo off the stony walls. \"Mmm...\" She whispered in my ear as my strokes became more focused around just the tip. My erection felt thicker than it ever had, almost giving a fleshy glimpse of it through the water. \n\n\"Mmm...\" she moaned again. I felt her hand rest on my thigh and heard her say in a deeper voice. \"Do it.\" Her fingernails dug into my thigh as my cock erupted powerfully. My hands slowed, just holding onto my pulsing shaft as creamy beads of cum floated to the surface of the spring. \n\nMy eyes were closed, wondering what I've done. I heard that same high-pitched laugh echo in the cave and rattle inside of my brain. I looked over at her and she had a plain, lifeless look across her face. She looked at the floating cum, then looked at me and then down at herself. Without a word she stood and walked out of the spring toward her clothes. \n\nI watched as her beautiful cheeks bounced with each step, picking up speed the further she got. \n\n\"Kelly...wait.\" I shouted as she gathered her things and left the cave. \"This wasn't what I wanted!\" I screamed out. She was the one encouraging this whole thing and now she leaves without a word like I'm the creep? What the fuck?\n\nI sat there in this beautiful natural spring, and all I could think about was how I might have jeopardized my future with Julie and ruined my friendship with both Paul and Kelly. I didn't want to jerk off here. I didn't! I told myself over and over hoping Kelly never muttered a word about this to anyone. \n\nI stood up, naked, water dripping down my body and noticed my erection hadn't calmed down in the slightest. I stepped out of the spring and over to the wall that had the engraving AQVA GAVDEN, feeling the indentations with my fingers. They were worn away and barely visible after all these years. Pretty crazy that Kelly saw it at all. \n\nJust as I was about to walk over to my clothes, I saw another engraving on the wall below AQVA GAVDEN. It was covered with thick patches of mud and almost impossible to read. I dusted away some dirt and debris, and grabbed a long stone on the ground and dug out the remaining gunk until it was clear. \n\n\"shee who cums, has some fun, but will remember none he whoo cumms, remembers all but will soon be undone\"\n\n\"What the hell?\" I repeated it aloud a few more times, before getting dressed and making my way out of the cave. What on earth did that mean, I wondered as I stepped out into the cloudy woods and tried to remember which way we came from. The sky opened and as if taunting me, started to pour just as I came out of the cave. \"Great.\"\n\nBy the time I got back to the house, I was completely soaked, cold and confused. As I headed up the stairs to my room for a change of clothes, I saw Kelly coming out of her room. She was completely dry again and back in jeans and a hoodie. \n\n\"Kelly! We need to talk...\" I whispered. ",
        "\"About what?\" She asked plainly. \"Jesus, you're completely soaked. Did you fall in a lake?\"\n\n\"What? No! We need to talk about the moment we shared earlier.\" I said suggestively. \"You know after our run this morning...?\"\n\n\"Moment? You mean when I farted?\" She laughed. \n\n\"No, when you came.\" I whispered loudly. \n\n\"When I came? What the fuck?\" She whispered and pulled me to the side of her bedroom door away from the hall. \"You're gonna give me shit about masturbating? Everyone fucking does it from time to time. So I masturbated this morning, big deal.\" She said, clearly defensive. \n\n\"No, no! That's not what I...\"\n\n\"How do you even know about that? I was doing that in my room while Paul was asleep this morning. Were you spying on...?\" The look of disgust on her face was gut-wrenching. \n\n\"No, nooo...shhhh!\" I whispered trying to calm her down. \"I wasn't spying. I was with you. We did it together. In that hidden spring. Remember?\"\n\n\"I don't know what you're talking about, but I'm really concerned about you. Seriously, I think this island is getting to your head. Are you okay?\"\n\n\"Yes, maybe. Hold on. You mentioned you remembered farting in front of me earlier, yes?\" \n\n\"Yes, you said the fresh air was messing with you. So I farted. It was a joke. Jeez...\"\n\n\"Yes, then what happened? What do you remember after that?\" I asked desperately. \n\n\"You said it was gross and we came back here. That's it.\" She shook her head. \"Seriously, get some rest and maybe lay off the drinks tonight. And don't spy on me! That's fucking creepy.\" She walked away.\n\n\"I didn't...\" It was no use. She was already gone and clearly had no idea what I was talking about. How is that even possible?\n\nShe who cums, remembers none. The thought flashed in my mind. It can't be. That's just a stupid poem carved in a cave probably by drunken hippies years ago. It can't possibly mean anything. Could it?\n\nMaybe Kelly was right. Maybe I needed some rest and to not drink tonight. Suppose it couldn't hurt. I went to my room for a nap, but only tossed and turned. I took off my shirt and stripped down to my boxers to relax. The storms started up again and the pitter patter started to soothe me. Just as I was beginning to doze I off, the urge to pee woke me up. If it not one thing, it's another, I muttered to myself. \n\nReluctantly I stood up, but didn't bother putting on pants. The house was so dim, I figured no one could see me. And who would care if they did? I wandered down the hallway, remembering the other night with Kelly scaring us half to death. That was just a funny joke. Maybe all of this is just silly pranks and me overthinking it. The ornate chandelier flickered on and off, and I made my way down the stairs, creaking with every step until I got to the bottom and turned the corner to find the basement stairs. \n\nWhat kind of stupid house only has a bathroom in the basement? One that was probably built before indoor plumbing I reminded myself, thinking this was at least a step above an outhouse. \n\nI descended the stairs and the air was cold and damp. I pulled the chain cord from the lone light bulb in the center of the room. The light flickered a few times and eventually produced a low, orangey glow briefly illuminating clusters of old furniture covered in white sheets. There was only one door in the whole basement, and I walked towards it figuring it had to be the bathroom. \n\nThe light bulb flickered behind me, casting spastic shadows before going out completely. Why didn't I bring a flashlight, I cursed to myself. \n\nThe bathroom was completely dark and reeked of rotted wood. At this point I was ready to whip out my dick and pee on a wall for all I cared, I just wanted to get the hell out of here. I took a few steps toward where my best guess of where the toilet was and slipped my penis out from my boxers and tried to relax. \n\nI couldn't pee for the life of me in this bizarre place. I took another deep breath and felt a strange warmth on my dick. \"Oh no, please no...\" I whispered to myself as my shaft started to thicken. \n\nWarm and mysterious hands stroked my length, cupping my dangling balls below. I let out a breathy moan, not sure I could fight this anymore. Not sure I even wanted to, it was starting to feel a little better. \n\nA cold draft blew through the room as an incredible warmth and wetness surrounded my cock. \"This isn't real. This isn't real!\" I reminded myself as the motions sped up. The tongue wrapped around my tip in the darkness, and slid along the underside of my shaft down to my sack and back up again taking me into her mouth. Her? God I hoped it was a her, whatever it was. \n\n\"This isn't real!\" I reminded myself. \"You're probably asleep and dreaming while jerking off.\" \n\nBut the sensations grew stronger, and unlike last night, this actually felt...good. Like really good, I thought as the bobbing head seemed to glide up and down my shaft effortlessly, swallowing more and more of my length. \"Jeez, I'm close...\" I finally muttered aloud as if to warn this imaginary spirit of my impending orgasm. \n\nThe delightful sensations continued, giving my whole body a wave of pleasure as I started to gasp and shake...\"fuck, I'm about to...\"\n\n\"Yeah, cum for me baby.\" I heard a real female voice say as I shook and erupted involuntarily, shooting out several ropes of thick cum in her mouth.\n\nAs my penis pulsed a few more times and slowly went limp as it slid out of her mouth, flopping against my balls. She stood and I could hear her licking her lips and exaggerating her swallowing noises. \n\nAs the lights flickered on barely, I saw the shadowy figure in front of me, before the room brightened fully. LAURIE? Holy fuck. Holy fuck. No, no, no, no, no, NO! I tried as hard as I could to will it and wish it to not be real. \n\nLaurie's eyes were mostly shut, clearly drunk. \"Come to bed, Jim. It's your turn now. I'm gonna sit on your face so hard.\" She never opened her eyes. Was she sleep walking? Did she really believe I was her boyfriend? \n\nI followed her up the stairs and watched her go in her room. I put my ear up to the door and heard the sounds of giggling that soon turned into moaning. \n\nOh god, oh god, this is baaaaad. I didn't even know how to describe this confusing feeling. Guilt? Pain? Fear? It was awful. \n\nI walked over to Kelly's room hoping to share what happened. She might be the only person who I could remotely talk to about this, but we were already on shaky terms from earlier. As I was about to knock on her bedroom door, I heard the clear sounds of sex, moans and swearing going on inside the room. At least someone is having sex with their actual partner. I was annoyed and relieved at the same time. Guess I'd have to wait to tell her what happened and figure out how to approach this with Julie later. \n\nAs I started to walk away, I heard someone coming up the stairs. \"Kelly?!\" I practically shouted. \"How are you here..., who is in there...?\" \n\n\"Slow down there, chief.\" She looked amused. \"What seems to be the trouble?\" She asked rather jovially. \n\nWhether or not she remembered anything from this morning no longer concerned me. I got closer and whispered frantically, \"I think Paul is sleeping with Julie right now!\"\n\n\"HA!\" Kelly belted out. \"He wouldn't do that.\" She didn't even seem remotely concerned. \"Not my Paul.\" She said confidently. \n\n\"What have you had a lobotomy?\" I shouted in a whisper. She seemed to take offense to that. \"Sorry, just this house, this island has a way of making people do things. He probably doesn't even know it's not you, but that doesn't mean it's not happening.\"\n\n\"This is really getting tiring, Garret. You've said some pretty fucked up things lately. Stop making all of this shit up.\"\n\n\"I'm not!\" I said as loudly as I could, still in a whisper. \"If I'm making it up, go in there and see.\" I realized I didn't actually open the door, so I can't say I saw it, but I definitely heard it. \n\n\"Garret.\" She said as she placed a hand on my shoulder. \"I'm going to go downstairs, get myself a drink and go get the bonfire started.\" She swallowed and added. \"Do yourself a favor, and just trust me Julie isn't sleeping with Paul right now. Go lie down and try to come to your senses before you do anything rash.\" She turned and disappeared down the stairs. \n\nMaybe she was right. If two people think the opposite thing, how do you know you're right and not the crazy one? I went to my room and found Julie asleep, peacefully under the covers. After letting out a huge sigh of relief, I cursed this place. Julie didn't do anything. I'm the one who just got head from another girl. I practically laughed at how far south this trip went. Julie stirred and then moaned as she rolled to her other side. The sheet was barely covering her, and her hidden curves were visible underneath the thin fabric. \n\nI walked over and felt like a creep for even thinking about this, but I lightly lifted the sheet and saw her curled up, completely naked. Her breasts were squished in between her arms and her bent legs concealed everything more than the side of her crack, but my original fear was confirmed. Completely naked. She told me once she didn't like to sleep naked, the feeling of the fabric on her intimate skin always kept her awake. \n\nIs it possible she really was fucking Paul, and then dashed over here when she heard me scream at Kelly in the hallway? Is she just pretending to be asleep now? I set the sheet back down, covering her again and gave her a gentle nudge on the shoulder to see if she was sleeping, or to test her acting skills if she was pretending. \n\n\"Julie...\" I whispered and lightly touched her shoulder. \"You awake?\" \n\n\"Nnnnmm.\" She mumbled. \"Not again...I'm too tired.\" She smiled and rolled back to her other side. \n\n\"Again? Too tired for what?\" I had a pretty clear guess what that could be, but it still didn't really prove anything. Besides, people who just got head from another girl shouldn't go picking fights. \n\nI decided to get dressed and join Kelly in making the bonfire. As I put my shorts back on, I felt a strange solid object in the pocket and pulled it out. It was the stone I used in the hot spring to uncover the message on the wall. Maybe I didn't make that up. \n\nI examined the long narrow stone, and noticed it had a rounded tip at the end, a smooth long middle and a bulbous blob on the opposite end. This almost looks like a small, stone dildo, I thought to myself. Maybe if I showed this to Kelly she'd remember and believe me. Or maybe she'd have me committed. I needed to try either way, and threw on the rest of my clothes and ran out of the room. \n\nAs I rushed down the hall, tiny stone dildo in hand, I felt a distinct push on my back forcing me airborne as the stone flew out of my hand down the hall. After bracing my hard fall, I turned to see who it was. Maybe Jim for getting head from his girlfriend, maybe Paul for masturbating with Kelly. But there was only an empty hallway behind and in front me. Dim, dank and silent. No sex noises coming from bedrooms, no rain on the roof. Just silence and darkness. \n\n\"This isn't funny!\" I shouted to no one. \"Who the hell did that?\" id that, id that, at...at...my voice echoed down the hall. \n\nDefeated, I sat there trying to find my resolve. I needed to talk to Kelly. Beg her to listen. Where is that stupid stone dick?\n\nOn my knees, I searched the dark corners of the hall where I thought it flew. Finally, I found it wedged under a door. It was too tight to pull out. I tried opening the door only to find it was locked. Why does that not surprise me?\n\nI thrusted my shoulder into the door several times, before finally dislodging it. The door slowly swung open, creaking with every inch. The room was the dustiest I've seen yet. What is this room? Too small to be a bedroom, no furniture anyway. Nothing really. Why was it locked?\n\nJust as I picked up the stone, another bolt of lightning struck illuminating the barren room. It was almost completely empty. Almost. \n\nUp against the wall there was a shapely wooden box. Is that carved to look like a heart? I wondered as I got closer, noticing the two round curves on top with a slight taper underneath. My hands traced down the curves of the heart-like structure and found a narrow slit of an opening down the center. \n\nThis isn't a heart, I almost laughed to myself. This is an ass and that slit is carved to look like a pussy. Can that be? I felt the slit further, as it seemed to adjust and shift to my touch. As if that wasn't weird enough, I noticed a tinier hole right above it. An asshole? This really is an ass-shaped box, and a surprisingly detailed one at that. \n\nA random thought popped into my head, and I pulled out the stone dick from the spring. \"Worth a shot.\" I said aloud as I placed it near the slit, but it was too big to fit in the hole. I grabbed the top curves and rested my thumb on the synthetic asshole as I tried to maneuver the stone. The slit seemed to adjust slightly, as if accepting the stone after a little foreplay. I twisted the shaft of this strange stone dick and the curvy cheeks of the box popped open. \n\nIt was a key all along! Inside box there was a very old, leather-bound book. I blew off the dust and ran my fingers over the gold-printed letters and a wave of heat passed through me as I read the title aloud. \"AQVA GAVDEN\"\n\nI opened it slowly and my heart sped up. It looked to be handwritten in ornate calligraphy. Flipping through the pages, I saw various erotic sketches. There was a man tied up on a bed getting a blowjob. Then there was a small sketch of a guy and a girl sitting in the spring. I started to put it all together; these were sketches of what was happening this weekend. This was it...proof I'm not crazy!\n\nI slammed the book shut and raced out of the room to show Kelly, and once and for all prove I didn't make this up. At the opposite end of the hall, Kelly was already standing there, staring blankly at me. \"It's been hours. Where have you been, Garret?\" She asked.\n\nAs I came closer I saw she was only wearing the white T-shirt from the night before. Had it really been hours? Did this book make me lose all track of time and she was already going to bed?\n\nI ran toward her, but she seemed to be impossibly far from me as she turned and walked away. \n\n\"Kelly...wait!\" Book in hand, I sprinted across the hall and still seemed like I wasn't getting any closer. \n\n\"I've been waiting for you...\" She said looking back over her shoulder and she kept walking away toward a new set of stairs I had never seen before. Kelly began ascending them and I finally felt like I was getting closer as I reached the foot of the stairwell leading up to god knows where. She was already halfway up the stairs, as I ran after her, her beautiful cheeks were poking out of the T-shirt swaying from side to side as she continued going up. Her slit was almost visible when she'd take a step up, and then disappeared when her legs came back together, and this repeated with each step she took. \n\n\"Kelly, stop!\" I shouted as I sprinted up the stairs after her. Finally reaching the top, we were in a cavernous attic. Kelly's back was to me, her hair fell just over her shoulders, the thin white T-shirt stopped halfway down her ass. \"You have to see this. I have proof.\" \n\nStill with her back to me, I ran up right behind her. \"Kelly! Look...I have proof!\" I placed my hand on her shoulder, urging her to look at me. Her shirt was cold and almost damp, and still she remained facing away from me.\n\nI tried to slide around, to get in front of her. But every move I made, I still seemed to be facing her backside. She was holding her T-shirt up by her hips, leaving her whole ass exposed. \n\n\"Kelly, god damn it, look at me!\" I screamed, holding onto her shoulder. She bent forward away from my hand, and I tried to pull her back. I felt her round cheeks, bounce off of my hips, as I tried to get her upright and looking at me. \n\nI pulled harder and faster, feeling her bounce off my hips repeatedly, slapping into my crotch. My hands gripped her waist trying a new approach to make her turn around, but all I heard was the sound of her high-pitched laugh that echoed all around me. \n\n\"Stop!\" I screamed, completely frustrated but wondered why this felt so good. Finally looking down, I saw my completely erect cock disappear into her impossibly round cheeks. In and out, in and out. How long had I been fucking her? Why wasn't I stopping? I wondered as my thrusts picked up their pace, the intoxicating scent of sweat and sex flooded my system. I couldn't stop. \n\nThe high pitch laugh squealed with pleasure as I was nearing my climax. \n\n\"Garrett!\" She seemed to call off in the distance. I slammed into her firm ass harder and faster, growing stronger and bigger with each thrust. \n\n\"Garrett...stop!\" The voice grew louder and I finally realized it wasn't coming from her. A hand on my shoulder pulled me back. I felt her insides grip my shaft, giving the final tug as I shot first my spurt of cum inside her right before I was pulled free from her intimate hole. \n\nFalling toward the ground, more hands held me down and she seemed to turn around instantly. Her eyes were blackened and her face was sunken in like a skeleton with extra pointy teeth. She let out a room-shaking roar and snapped at my falling dick like a cobra before evaporating into thin air. \n\nThe room was still dark, and her little laugh echoed once more as I felt a few gentle slaps on my face, bringing me to. \n\n\"Are you okay?\" Jim asked. \n\nI blinked a few more times and saw everyone huddled over me. I wheezed a few times, coughing extra cold air from my lungs still catching my breath. \"You saw that?\" I asked more concerned they witnessed it, rather than anything else. \n\n\"Yeah, what the fuck was that? Jim said. \n\n\"I'm not sure what I saw.\" Kelly said, who was wearing jeans and a hoodie, not the T-shirt I just saw her in. Or thought I did.\n\n\"That was her.\" I gasped. \"Her. It. Whatever this legend is.\" I said barely able to hold myself up. \n\n\"Dude, I've known you for years and had no idea that's what you were packing.\" Paul said sounding impressed. \n\nI looked down and saw my floppy dick resting against my leg. Even in its soft state, it still seemed bigger than I recall it ever being. I tucked it into my boxers and felt the added weight of it. It was definitely different. Was that from...is it possible that thing made it bigger?\n\n\"I agree with Kelly. I'm not sure what I saw.\" Laurie said. \"Kinda just looked like you were jerking off.\" She blushed. \n\n\"I wasn't. At least not voluntarily.\" I said. \n\nJim handed me some clothes. \"Thought you might need these.\"\n\nAfter getting dressed, I told the group about almost everything. All of the parts I couldn't explain. It was a relief to finally get it off my chest. \n\n\"You waited until you were air fucking this thing to tell us? Why didn't you say anything sooner?\" Paul asked. \n\n\"I tried, but everything just got...I tried. Kelly thought I was crazy. Hell I even started to think I was crazy.\"\n\n\"None of that matters now.\" Kelly said somewhat deflecting any guilt. \"What are we going to do now?\"\n\nI showed them the mystery book I found. \"I think the answers are in here. I've only flipped through it, but I think it will help.\" Now I know I sounded crazy. \n\n\"What on earth makes you think that will help?\" Kelly called out. \n\n\"I can't explain it, but I can feel it. So far everything I've read in this book has already happened. I think it will have what happens next.\" I gulped and added. \"I don't think we have any choice but to do what it says.\"\n\n\"No choice? Of course we have a choice. We can fucking leave this instant.\" Jim called out. \n\n\"We can't leave.\" Kelly said. \"The ferry doesn't come as often in storm season. Next one won't come until Monday.\"",
        "\"Even if we could, then what? Have this thing follow us back to our homes? To our lives? It's clearly attached itself to us and it's been getting stronger. If we don't stop it now, who knows what it will do to us.\"\n\n\"To us? US? Maybe it will just do something to you. We didn't do anything.\" Jim yelled. \n\n\"Didn't you? I know you've been eying Julie like a piece of meat since we got here. Saw it on your face the second you got here. And you Paul, I heard what you were doing in your room earlier with her.\"\n\n\"This is bull shit!\" Paul shouted. \"I didn't do anything!\"\n\n\"Why the fuck did you pee in the goddamned fire and taunt it anyway? This whole thing is your fault?\" Kelly screamed. \n\n\"My fault? I wasn't the one who stripped down to her puss 'n boobs and got off in a spring with some other guy!\" He said letting out his frustration. \n\n\"Guys, guys! This won't solve the problem. Don't you see? We'll be screaming at each other for the rest of our lives if we don't end this now.\" I added. \n\nPaul relented. \"What does your stupid book say to do anyway?\"\n\n\"I haven't gotten that far, but I have a feeling it will be weird and unpleasant. We all need to agree that before we start whatever this book says to do, that we promise to finish and not give up in the middle. No matter what.\"\n\nThose words hung heavy in the air as everyone sat silently, contemplating the severity of the situation. \n\nSlowly the nods came. The mood was somber. There was nothing else to do. \n\n\"Very well then. Let's begin. Laurie, I saw some candles in the corner, please place them around us and light them.\" I said calmly. \n\n\"Does the book say to do that?\" She asked hesitantly. \n\n\"No, but with the storm, there's no guarantee the power will stay on. I don't want to be caught in the middle of this with my pants down. So to speak.\"\n\nThere were grumbles at that poorly timed joke, but she complied. \n\nThe flames flickered around us as I opened the book. The first few pages had changed completely from the last time I opened it. There were detailed sketches of erections, breasts, and vaginas dripping with cum. \n\n\"Charming.\" Laurie said. \n\n\"Wait, no way.\" Kelly said softly. \n\n\"What?\" Paul said concerned. \"No way, what?\"\n\n\"Look at that one there.\" She pointed to a beautiful labia complete with detailed shading for a very realistic looking depth of the folds. \n\n\"What about it?\" I asked seriously. \n\n\"It's mine. That's my...\" She gulped. \"That's my fucking vulva.\"\n\n\"Impossible.\" Jim said not really believing any of this. \"How can you tell? I've seen a million pussies, and I couldn't pick one out from a lineup.\"\n\n\"Ouch!\" Laurie said, slapping her boyfriend. \"Offend much?\"\n\n\"I didn't mean that, I just meant it's impossible to know that's hers. It could be anyone's.\"\n\n\"No, no it couldn't.\" Kelly said. \"It's mine. You just have to trust me...\" she stopped mid-sentence with a soft gasp. \n\nI was tracing the outline of the lips on the page with my finger, making my way up to the clit when I heard Kelly moan. \n\n\"Fuck, I can actually feel that.\" She let out a deep breath as I gave it one more soft stroke. \n\nMy fingers felt a strange sense of dampness coming from the dry page. Curiously, I gently raised the fingers to my nose and inhaled. I nodded my confirmation, noting the intimate, intoxicating scent. I held my two fingers out and Jim inhaled. \n\n\"How is that possible?\" He asked and grabbed my wrist pulling my hand in closer for a deeper whiff. He let out a powerful sigh with a subtle smile. \n\n\"Quit smelling my girlfriend's pussy!\" Paul shouted. \n\n\"Boys, calm down.\" Kelly was still coming down from the sensation and looked slightly amused at all the attention her intimate spot was getting. \"I think this proves whatever is going on here is real. We've all experienced it in some way.\" \n\n\"And I have a feeling it's going to get much weirder than that.\" I added. \n\n\"Are you saying my pussy smells weird?\" Kelly joked and we all shot her an annoyed look. \"Sorry, just trying to lighten the mood.\"\n\n\"Are we ready?\" I asked eying them individually, and one by one they nodded their commitment. \n\n\"Then let's begin.\" I slowly turned the page as we all took a deep breath. \n\nThe text stated in beautiful calligraphy:\n\nTo overcome what has been done, Secrets must be none. Your deepest thoughts of one another, Your hidden fantasies you must uncover. When you've said your true desire, Only then the flames grow higher. \n\n\"Uhhh...what?\" Jim called out. \"What are we supposed to do with that?\"\n\n\"I think it's pretty obvious. Tell a secret or a desire you've had.\" I explained. \n\n\"That's easy. I'll go first. I secretly wanted to have anal sex with Kelly this weekend. It didn't happen by the way.\" Paul called out obnoxiously. \n\nWe all looked around and nothing happened. \"I don't think that really counts. You mention that in almost every conversation. It's not much of a secret.\" The group chuckled a little at that. \n\n\"I've got one.\" Julie said softly. We all turned a bit surprised. She had been the most quiet this whole time. \n\n\"Good, the floor is yours.\" I said wondering what she might say. \n\n\"I came here to...\" she paused awkwardly and looked at the floor. \"To lose my virginity.\"\n\n\"What? You're a virgin?\" I asked finding that hard to believe in this day and age. \n\nShe nodded. \"And when Paul played his hairy monster prank, I actually was a little excited. I told you I didn't remember touching it, but I did. I was excited to see what a penis felt like.\" She said now mostly embarrassed. \n\nThe room grew slightly brighter from the growing flames on the candles surrounding us. \"Holy shit it's working.\" Paul said, forgetting completely that she just admitted she was excited to touch his penis. And that his was the first one she ever touched. \n\nI nodded. \"It looks like that's the kind of secret we need to share. Thank you for your honesty.\" It was hard to say that, but we had to get over our petty emotions and jealousies. \"Who's next?\"\n\n\"It's my turn.\" Jim said, \"I can't even believe I'm going to say this.\"\n\n\"This is a safe zone.\" I reassured him. They all gave me a funny look. \"Okay, maybe judgement free zone is more accurate. Let's hope we stay safe as well.\"\n\nJim nodded, \"When I first saw Julie she reminded me of an ex of mine.\"\n\n\"That's it?\" Paul said mockingly. You said you've seen a million pussies and Julie reminds you of one of the girls you used to date? Big fucking deal. I thought we established these need to be serious secrets. Not just stupid stuff.\" Paul was clearly frustrated. \n\n\"Easy there, Paul. Let him finish.\" I said trying to ease the situation. \n\n\"I probably have seen a million pussies. Probably more.\" Jim said softly. \n\n\"Gross, I don't want to know that.\" Laurie said. \n\n\"But not from girls I've dated. Just porn. I've watched more porn than any one person should probably ever see in a lifetime.\" He said clearly embarrassed and ashamed. \n\n\"That's the magic of the internet, baby!\" Paul, the smartass, chimed in. \n\n\"That's not funny, dick.\" Kelly said, appreciating his honesty. \n\n\"Truth is I've only dated one girl before you Laurie. And she kind of broke my heart. I thought I was over it, but when I saw Julie...it all came flooding back. There are still some deep wounds there.\"\n\nThe group looked at him silently. Stunned by how serious he turned. \n\n\"That's it. Fuck you all.\" He added trying to appear tough as the flames grew even higher around us \n\n\"Thank you for sharing, Jim. That sounds painful.\" I said sympathetically. \n\n\"Alright, enough of this Dr. Phil bullshit. Someone say something juicy.\" Paul said. \n\n\"Screw you. What's your big secret? You want anal? Who doesn't?\" Jim added, now back to his tough-guy self. \n\n\"Alright, fine. But this shit stays here, you understand me?\" \n\n\"I think we're past that, Paul. What is it?\" I encouraged him. \n\nHe shook his head as if psyching himself up for what he was about to reveal. \"You guys know how I went away to private school the last year of high school?\"\n\nThose of us who knew him, nodded that we did. \n\n\"Do any of you know why?\" He asked. \n\n\"Rumor had it you got caught with a prostitute and your parents wanted you to be under constant surveillance. You were a legend!\"\n\n\"I started that rumor. Pretty sure at this point you know that's not true.\" Paul said. \n\nWe were dying for him to continue. \"What did you do?\"\n\n\"I did get busted for trying to have sex...but it wasn't with a prostitute.\" He paused, regaining his composure. \"It was with my sister.\"\n\n\"Oh my god.\" \"Jesus.\" The group seemed to mutter these things softly. \n\n\"It was probably the lowest point of my life. I needed help and clung to whoever was around. Obviously I didn't know how to deal with my feelings and, and...I tried to have sex with her.\"\n\nYou could see the brightened faces, from the giant flames around us. \n\n\"Then what? Don't stop there!\" I found myself calling out. \n\n\"The flames already went higher. My turn is done.\" He said. \n\nWe stared at him blankly. \n\n\"Fine, whatever. I tried to kiss her. I tried to do a lot more than that and she screamed for my dad and he stopped me before anything happened. I was sent away. Doesn't really matter. I got help and worked it out over several years, but it's my most embarrassing secret I have. Now everyone shut the fuck up and someone else go!\"\n\nIt was a mix of chuckles and contemplation. I wondered how Kelly felt about that. \n\n\"Thanks, Paul. If we make it out of here, it might be because of you.\"\n\nHe flipped me the bird and a disgusted look. I couldn't help but smile despite the insane situation. \n\n\"Who's next? Laurie, I don't think we've heard from you.\" I said hoping to prolong the time I had until my turn. \n\nShe shook her head almost violently. \"No. Please someone else.\"\n\n\"We'll all have to go eventually.\" I reminded her. \"How about I go this time, and then you can go next?\"\n\nShe still looked scared but didn't resist the idea. \n\nI took a deep breath. This was much harder than it looked now that I actually had to do it. \"I think...I think one of you gave me head on this trip.\"\n\nThe group looked more confused than alarmed. \"From Julie?\"\n\nI shook my head. \"No, not Julie.\"\n\n\"You already mentioned you thought you got head from that ghost thing. I thought we have been through this. Must be something new.\" Paul added. \n\n\"I'm not talking about that.\" I looked around the room and focused on one person in particular. \"Laurie. You gave me head earlier today.\"\n\nShe shook her head side to side. \"No I didn't. No I didn't!\"\n\nI went to pee and headed into the basement bathroom. It was dark and lights weren't working. I just wanted to pee and go back to bed. I walked up to the toilet with my dick out and I felt this warm sensation. I thought it was that thing again just like the last night, and convinced myself it wasn't real. Over and over I said that and let it finish me off and swallow my...\"\n\n\"We get it, but go on...\" Kelly added. \n\n\"After it swallowed, I assumed that was it. But then you got up and the lights came back on and I saw you go back to your room. It was you.\"\n\nShe shook her head. \n\n\"Sounds more like the ghost to me.\" Jim said not wanting to believe it. \"How do you know it wasn't the ghost?\"\n\n\"The ghost disappeared the other times. Laurie never disappeared. I watched her walk into her room and then I heard you guys fooled around after that. I'm sorry...to the both of you. I didn't know it was real.\" I said with a heartfelt confession and the flames rose. I did it; I shared something deep enough to appease the ghost. \n\nMy immediate sense of relief was overturned by guilt. I saw how awful Julie felt, looking at me, her new boyfriend who just admitted to getting head from someone else. I saw the look on Jim's face who wanted to kill me. And worst of all, I saw the torn look of Laurie. I felt for her most of all. \n\n\"I'm so sorry Laurie. This is probably the worst time to say this, but it's your turn.\" I hated myself in that moment but had no choice. We needed to move on. \n\nShe was speechless. Her mouth opened as if she was ready to say something, but then closed it again. \n\n\"It's alright, babe. I don't blame you for what he did.\" He said giving me an evil look. \"He's a fucking pervert.\"\n\n\"Harsh words from someone who wants to fuck my girlfriend because she looks like your ex.\"\n\n\"Doesn't mean I did anything, you throat fucker.\"\n\n\"Easy, guy. I was just trying to take a piss and got a blowjob. Don't shoot the pisser.\"\n\n\"You are so fucking dead.\" \n\n\"Stop! STOOPPPPP!!!\" Laurie shouted. \n\n\"It wasn't his fault. It was mine.\"\n\nThe group quietly looked at Laurie. \n\n\"It was my fault. I was half asleep, but that's no excuse. I remember it happening.\" She paused and added, \"I knew it wasn't Jim's dick, but I couldn't stop myself. I don't know what came over me, but I wanted nothing in the world more at that moment than to suck on it. I don't know how to explain it.\"\n\nThe flames rose and that made everyone calm down. \n\n\"I know you want to kill me, Jim. That's fine. If we make out of here alive. You can kill me then.\" I said. \n\n\"Whatever. This whole thing is fucked up. What's next?\" Jim asked nearly giving up. \n\n\"We haven't heard from Kelly. Can't turn the page until she shares.\" Our eyes focused on her and she squirmed. \n\n\"I'm really sorry guys, but I don't have any crazy secrets. You already know about the weird natural spring situation, which I don't remember happening. We mentioned that I masturbated this morning. I do that most mornings. Some evenings too...\" she looked around jokingly. \"See no flames. I don't know what to tell you.\"\n\nWe were all silent. I suppose we couldn't force her to have some deep, dark secret. But my mind kept churning and something about her story just wasn't adding up. \n\n\"Humor me. Let's go back to our run one more time, step by step to see if we missed anything.\" I said still trying to figure where my thoughts were taking me. \"I told you about my crazy dream with that ghost blowing me the first night. You remember that much.\"\n\nShe nodded. \"Yes, so?\"\n\n\"And then you asked if I was feeling okay.\"\n\nShe nodded. \"And then you blamed it on the fresh air.\"\n\n\"So you farted.\" I said plainly, not meaning for it to be a joke but the group laughed. \n\n\"Are you still on that? Jeez, yes I farted as a joke.\" She mockingly said it louder. \"I Kelly, a girl, farted! Let the flames rise up!\" She laughed noting the lack of change in the flames. \"Guess my gas isn't a secret either.\"\n\n\"Are you done? That wasn't my point of retracing our steps.\" I said a little irritated. \n\n\"Yes, sorry. Go on.\" She blushed. \n\n\"You said it was the last thing you remembered, and that we went back here after it happened. Correct?\"\n\n\"Yes, that's all I can remember from it.\"\n\n\"But my bigger question is, how did we even end up there?\" \n\n\"I don't know. Must have been at the end of the trail.\" She said more confused than ever. \"How the hell should I know? I told you I don't remember what happened.\"\n\n\"I get that, but there were several trails to choose from. What made you pick the one we were on? The only one that led to that natural spring?\" \n\nShe paused. \"I, I..\" her mouth closed. \"I really don't know. Maybe that stupid ghost made me choose that path? I don't fucking know. Can we move on? I feel like I've told you everything about me. You already know I masturbate a lot. I watch porn from time to time, not to the extent of Jim, but still a lot. I watch guy and girl stuff, gang bang scenes, lesbian stuff not because I'm bi, but because it just looks fun.\" \n\nShe glanced at Paul. \"I saw my brother naked as a kid. I thought it was kind of a turn on in a weird way, but I never wanted to have sex with him.\" \n\nTurning her gaze to Julie, \"I'm no virgin but I did imagine having sex at this cabin. Maybe even with more people than just Paul, but it was just a fantasy.\" She said as her breath sped up. \"As far as I can remember I didn't give head to anyone, other than Paul. And I thought it was fucking hot when you all saw the sketch of my pussy in that book. Weird as hell, but hot nonetheless.\"\n\nShe was nearly panting now from talking so fast. \"I think I've had almost all the same thoughts, fears and fantasies as all of you. I just don't think it's a big deal. I'm more open about it I guess, which is why I don't have any crazy secrets.\" She looked empowered and exhausted from the speech. \n\n\"I guess that's fair.\" I said, not knowing what else to say. \"We can move on if we all agree?\"\n\nEveryone slowly nodded. Paul brought her in close to him and kissed her on the top of her head. \"It's going to be alright, babe.\" He said reassuringly. \n\nI reached forward and slowly turned the page. A gust of wind rushed through and extinguished all the candles. It was pitch black and there were shouts and screams from the group. \n\n\"What's happening, Garret?\" Paul called out. \n\n\"How the hell should I know?\" I yelled back. \n\n\"You've got the book dumbass.\"\n\n\"I can't read in the dark DUMBASS!\" I shouted back. A few streams of lightning struck nearby, the sound of the thunder was nearly overlapping with the bolt, telling us it was dangerously close. As the distant light flickered, the silhouettes of the group appeared. Mysterious shadows sat before me as I saw the ghostly figure right beside Kelly. It looked like it licked her face. \n\n\"What the fuck was that?!?!\" Kelly screamed. \n\nThe room slowly came into focus again as Laurie relit the candles one by one. \n\n\"I just felt something cold on my face. What the fuck!?\" Kelly was in a near panic. I didn't know if it was wise to tell her what I saw. \n\n\"I don't think we're alone.\" I said softly. \n\n\"This is too creepy. Can we just go?\" Julie said timidly. \n\n\"We're in too deep to stop now. We need to see this through or else...\" I couldn't even finish the sentence, but everyone understood. \n\nAs the light increased, the book came back in view. And I continued where I left off. \n\nTsk, tsk. Tis a shame, When there's only one to blame. The stakes have been raised, Now your lips must graze. Around the circle at a steady pace, Lock lips for a lovers embrace.\n\n\"What is this spin the bottle at the ice cream social?\" Paul said as he planted a long kiss on Kelly. \"Now everyone kiss your partner and let's move on.\"\n\n\"I don't think that's what that meant.\" Kelly said softly. \"I think you'll have to kiss Julie next.\"\n\nJulie sat quietly just to the side of Paul. \n\n\"You can't be serious.\" He said to Kelly. \n\n\"Does it seem like this thing is joking around? Look what happened last time we didn't obey.\" She said in a panicked, elevated pitch. \n\n\"I'm not going to kiss someone else. I love you. Ghost or no ghost.\"\n\nLightning struck at that very moment. The powerful thunderclap shook the floor of the attic. As the room lit up, I saw the figure once more behind Kelly. Its tongue stretched impossibly far and licked Kelly's lips. She was paralyzed with fear, feeling every terrifying sensation, but unable to see what was happening. The dark arms wrapped around her torso, and groped Kelly's breasts, ripping her shirt open.\n\nKelly shrieked louder than I thought was possible, crossing her arms trying to cover up.\n\n\"Holy fuck.\" Someone shouted. \"I think I saw something. It. Something!\" Jim shouted. \n\nPaul quickly pulled Kelly next to him. \"I've got you.\" He said as she was shaking, arms still crossed and covering herself up. \n\n\"What the hell is happening?\" Jim called out. \"I thought this was supposed to stop the ghost.\"\n\n\"If we do what it says, I believe it will. If we do only some of it...I think it's making her stronger.\" I said somberly and added, \"I think she's already chosen who she wants.\" I took a careful and slow, deep breath. \"Kelly, I think it's been behind you this whole time.\"\n\nKelly nodded, terrified but not surprised by that. \"Paul if you love me, you have to kiss Julie. You have to do what it wants.\" She said starting to fear for her life. \"Jesus I'm the only one who's practically tits out because of this thing. Who knows what it will do next.\"",
        "\"No you're not.\" Julie said softly as we all turned our attention toward her. She quickly pulled her shirt up over her head, and sat there in her white lacy bra. \n\n\"What are you doing?\" I asked. \n\n\"Showing some support.\" She said reaching behind her back with both hands, unhooking her bra. The straps fell to her shoulders and she held the loose cups against her breasts.\n\n\"You don't have to do that.\" Kelly said, also covering her breasts with her hands. \n\n\"I know I don't have to, but if this will make your last...\" she stopped herself mid-sentence. \"If we don't make it, what do I care if everyone sees my tits. If we do make it, I couldn't live with myself for not trying to help you out more.\" She said sincerely, as she let her bra fall down her arms. Her bare breasts drew everyone's attention, even the girls'.\n\n\"Thank you.\" Kelly mouthed the words silently, and finally dropped her arms revealing her own breasts through the tattered fabric left on her body. \"Now Paul, it's your lucky day. I'm telling you to kiss a topless girl.\"\n\n\"I sure as hell wouldn't call this lucky, but you've made your point.\" Paul gently leaned over to Julie, awkwardly puckering his as if to avoid as much contact as possible. \n\nJulie quietly returned the effort as they met in the middle. Their lips near a half inch off their faces, they looked like siblings being forced to do this as some cruel form of punishment from psychotic parents. \n\nJust as I thought the kiss would end, their faces slowly started to relax. Their shoulders dropped, exhaling softly as their lips gently glided over each other before finally breaking their embrace. \n\n\"Holy shit.\" Paul's eyebrows nearly jumped off his face. \n\nJulie breathed heavily, her nipples had grown erect right in front of us. She had no words, as she steadied herself. \n\n\"That was...that was...\" Paul began. \n\n\"That was helpful. Thank you Paul and Julie.\" I said, not wanting to hear the rest. I'm sure Kelly felt the same. \"Julie and Jim. You're up.\"\n\nI cringed at the thought of watching my topless girlfriend kiss another guy...for the second time, but it didn't do any good to dwell on that. \n\nJim wasted no time leaning in as Julie did the same. Jim's hand gently caressed her face as their lips softly touched. His hand went down her shoulder, slowly lowering with spread fingers. \n\n\"Okay, that will do.\" Laurie called out. Clearly uncomfortable watching her boyfriend kiss another girl, and topless at that. \n\n\"Jim, Laurie, you're up. This shouldn't be a big deal since you've obviously done this a thousand times.\" I said. \n\nThey nodded and kissed each other rather uneventfully. \n\nAfter finishing, Laurie leaned over to me. \"Apparently I've already given you head, what's a kiss at this point?\"\n\nHer hand balanced herself on my thigh as she leaned in. The heat from her body passed through me, warming me up from the inside. \n\nIt was stronger than any kiss I had felt before. I found myself lightly holding her neck, as I felt the energy pass through us before breaking contact. \n\nFinally it was time for me to kiss Kelly. With her torn shirt, breasts half exposed, she had a strangely calm demeanor as she stared me in the eyes as if she was looking through me. Those unwavering eyes never flinched. \n\nI gulped and leaned in. Her lips felt like lava against mine, burning away my flesh. I tried to push her away, but my hand found her breast gently squeezing, soft at first, playing with the nipple between my fingers. Her hand slid up my thigh. Everything about it hurt, but I kept going for more, gently grinding my hips so my cock would rub harder against her hand through the fabric. \n\nThe lava-like feeling crept inward as if my throat was being suffocated from the inside out. Grasping for anything to end this, I pulled away with everything I had and completely ripped off whatever was left of her dress. \n\nShe sat there in just her panties staring blankly at the group. I nearly passed out, but the soft, cute laugh echoed in my ears. \n\n\"Jesus, back off man.\" Paul said as he was tending to Kelly. \"Are you okay?\"\n\n\"What happened?\" She was starting to come to. \"Where are my clothes?\"\n\n\"Grabby Garret over there ripped them off. I'm surprised he didn't try to fuck you just now.\n\n\"I don't, I don't remember any of that.\" Kelly said. \n\nThe rhyme from the spring popped into my head once more.\n\n\"She who cums, has some fun, but will remember none. He who cums, remembers all But soon will be undone.\" I said softly to the group. \n\n\"That's enough. Seriously. I can't take this. Kelly let's go. We're leaving.\" Paul stood up just as another burst of lightning ignited the room, shaking me to my core. Thrown to the floor, paralyzed I felt a presence around me tearing away at my body like a sharp hairbrush made of dry ice. \n\nA constant clicking sound echoed in my ears as I realized it was my body's attempt to breathe before I felt the instantaneous relief of whatever it was letting go of me. My breaths grew louder as I sat up and steadied myself. \n\nThe rest of the group was just starting to sit up. Blinking, still coming too I wanted to shout out what the hell happened to your clothes, Paul? But I looked down and it was just as I feared. My clothes were completely torn off and my uncontrollable erection was practically poking me in the belly button. \n\nI was tempted to try to cover up, but it didn't seem like it would do much good. \"So much for getting up and walking away.\" I said, staring at Paul. \n\nHe nodded back. There was no way out but further in. \"Turn the page. Keep reading.\" He said with no emotion. \n\nI quickly glanced around, noting everyone had next to nothing on due to the last punishment from Paul's defiance. \n\n\"Very well.\" I turned the page once more. \n\n\"To raise the flames higher. Explore a one way desire, Bring her to the brink, By sharing a most intimate drink.\"\n\n\"An intimate drink? What the fuck does that mean?\" Jim shouted. \n\n\"I have one guess.\" Kelly said, covering her slit. \"I think it means going down on someone.\" She blushed. \n\n\"Maybe she's right.\" Paul said, starting adjust his legs preparing for an oncoming blowjob. \"Go ahead, Kel.\" He said as he took out his thick cock from what was left of his tattered boxers. \n\nKelly shook her head. \"That's not what it said. It clearly said bring her...I think it's gotta be the guys going down on the girls.\"\n\n\"Fine, whatever.\" Paul said a little frustrated and adjusted his body practically dive bombing his face at her crotch before her hand pushed him off. \"What now?\"\n\n\"As much as I would prefer you going down on me, that's not the order we've been going in. You have to do this to Julie.\" She said with mixed feelings, clearly not excited to watch this. \n\n\"Whoa, what? I don't want Paul to go down on me.\" Julie said, but deep down knew it had to be that way. She lowered her head, slightly shifted her panties to the side exposing her soft slit and just the tiniest bit of hair above it. \n\n\"I'm sorry, Garret.\" She called out and spread her legs wide as I saw Paul lower himself right in front of her.\n\nAll I could see was the back of Paul's head barely moving right in front of my girlfriend's crotch. Not only was he licking her pussy before I did, he was touching it, smelling it, all before I did. It hurt even more to watch as I saw her hand run through his hair as she leaned back letting out a few moans. \n\n\"Okay...okay...time's up.\" I called out, not able to take it anymore. \n\n\"Dude I barely even did anything.\" Paul said. \n\n\"It says bring her to the brink, not make her cum. That will do, thank you.\" My jealousy was jeopardizing all of us and I knew it. \n\n\"Garret.\" Kelly said softly. \"She needs to be brought to the brink of cumming according to the book. Unless she's the world's fastest cummer, I really think Paul needs to continue.\"\n\nI reluctantly nodded. Who knows what would happen this time if we didn't follow the orders. \"You're right. Please continue.\" I said softly and proceeded to watch Paul lower his face right in front of Julie's crotch for the second time. \n\nHer hand returned to his hair, guiding him as her mouth fell slightly open. Sloppy, wet licking noises echoed in the room and Julie's gapped mouth soon turned into a subtle smile. She let out a few deep breaths and her motions became more tense. Gasping audibly the flames rose as she started slightly shake. \n\n\"Okay...\" Kelly called out. \"I know that sound...your turn is officially done.\"\n\nThey both agreed and Julie's face was a mix of blushing and smiling. If she really was a virgin, that might have been the first time anyone had ever done that to her. \n\n\"Thank you both.\" I said softly. I couldn't blame them for following through, but I still hated watching it.\n\n\"Am I next?\" Jim asked. \"If it's only girls for this one, I'd go down on Laurie?\"\n\nI nodded thinking this one would be easier since they were already dating. \n\nJim started to lower himself toward her. \n\n\"No!\" Laurie protested. \"I'm not ready.\"\n\n\"C'mon babe. I do this to you every night.\" Jim was a little confused. \n\n\"I know, I know. I just need a moment. Garret, why don't you go with Kelly first. I promise we'll do it before you turn the page.\" She said, again delaying the inevitable. \n\nI looked over at Kelly and she too looked like she needed an extra moment, but nodded her consent just the same. \n\n\"Very well.\" I said moving closer to Kelly and saw the look on Paul's face. I imagine it's what I looked a moment ago, but Paul didn't say anything. \n\nSoon I was on my belly, right in between her bare legs. Only a foot away from her slit, and I could already smell her intimate anticipation. I ran my hand over her labia, feeling the delicate folds before leaning in and kissing her clit. \n\nShe gasped as my kiss turned into a light suckle, teasing her tiny button in my mouth. Her eager lips dripped with arousal, and I licked it all up starting at the bottom of her slit all the way to the top, making several sideways motions around her budding clit. \n\nI felt her hand run through my hair softly, and I assumed this turn was nearly over. But the flames didn't budge. I continued to lick, kiss and started to pick up the pace. \n\nKelly gasped, \"I'm close...\"\n\n\"You have to keep going.\" Laurie said as she monitored the low flames. \n\nMy pace quickened again and I slid a finger inside her warmth, tickling her inner ridges and continued to paint her slit with my tongue. Sliding my finger in, I felt an addictive warmth. In and out, in and out, I heard the same soft laugh echo in my ear, getting deeper and fuller, richer and lower. \n\nI looked up to see the unnatural smile on Kelly glowing in the dark, revealing just a few too many teeth. \n\n\"You fools.\" The voice echoed in the room. \"You thought this would get rid of me?\" The gentle laugh turned into a deeper, maniacal bellow as Kelly stood up, completely naked and only half visible. The light of the flames danced on her body as if she was a composite of illuminated curves and shadows from every angle. \n\nThe room smelled of sweaty sex, rotted wood and smoke. My lungs tightened up as the air turned cold, suffocating from the inside out. The room turned dark. An impossible darkness that imposed a deafening pressure, shrinking my entire body as the room seemed to collapse. \n\nMy eyes blurred. I could barely make out the foreign shapes in front of me. Blinking a few more times, things started to come more into focus. \n\n\"Garret...\" they called. \"He's waking up.\" More familiar voices said. I gasped with everything I had and spat out some phlegm to my side. \n\n\"He's awake!\" A male voice called out. \n\nI looked around the room and saw my more than half-naked friends staring at me with relief. \"We thought we...\" Julie said with tears of joy. \"We thought you were dead.\"\n\n\"He's fucking going to be dead.\" Paul said as I felt the force of his fist meet my cheekbone and throw me back down. \n\nThe group corralled him and held him back. I sat there dizzy, still out of breath and now certain I had multiple broken bones in my face. \n\n\"Someone...please...\" I gasped. \"Tell me what happened.\"\n\n\"You know exactly what happened. You ate out my girlfriend. She turned into god knows what and went god knows where. And you're still fucking here.\" He said still boiling inside. \"But not for long. If you don't bring her back right now I'm going to beat you to death just so I can summon you back and fuck your ghost ass with a baseball bat.\" His body panted and his shoulders were bouncing from catching his breath. \n\nI sat up, forgetting I was completely naked and put all the pain aside. \"Kelly's gone? That can't be.\" I paced around the room muttering that over and over. \n\n\"Jesus, Garret you got that damn book. You read all those awful things. What were you thinking?\" Jim asked helplessly. \n\nMy eyes darted around the room. \"Wait a minute.\" I said starting to gain some excitement, surveying the nearly naked group. \"Everyone go to your rooms, put on some warmer clothes and shoes. Grab your flashlights too.\" \n\nThe group stared at me, eager to follow anything that sounded hopeful. \"We're going to leave this house.\" I added with a determined look. \"And I think I know where we can find Kelly.\" \n\nEveryone was back down at the bottom of the stairs, dressed in hoodies with flashlights in hand. \"Where the hell are we going to go?\" Jim asked. \n\n\"Follow me.\" I said calmly, leading the way out the back door. \"It's about a 30 minute jog.\"\n\n\"You want us to run in this?\" Paul asked. \"That's nuts. It's pitch black and storming like I've never seen.\"\n\n\"Any of you are welcome to stay here. Alone. In the dark. With that...that...whatever that was.\" I gave them my last effort to try to convince them. If they didn't want to go, I didn't have time to wait around and make them. \n\n\"Whatever dude, just lead the way.\" Paul relented. \n\nWe made our way down the muddy trail. Twigs and branches covered in clouds of fog came into view as our flashlights bounced around. Eventually we found our rhythm as we moved almost halfway efficiently. We were like a group of soldiers marching during boot camp, only not as fast or coordinated, and we complained a hell of a lot more than they would. \n\nEventually we came to a rocky facade. A large, overpowering stone wall towered over us in the stormy night. \"We're here.\"\n\n\"Where? We're in the middle of nowhere.\" Paul said. It was hard to make out their faces in the dark, but I knew they were not feeling optimistic. Not sure I even was at this point, but what choice did I have?\n\n\"This is it. The natural spring where I think Kelly first connected with it.\" I said humbly. \"It's through here.\" I snuck through the tiny slit of the rock and began to feel the heat from inside the cave coming off the water. \n\nOne by one they slid through the opening and joined me in the cavernous, sauna-like natural wonder. \n\n\"Whoa.\" Laurie said. \n\n\"I know. It's incredible.\" Julie joined in. \"Under normal circumstances this would be a paradise.\"\n\nOur flashlights provided just enough light to illuminate the whole area. The warm water steamed in front of us, and the group stood on opposite sides surrounding the spring. \n\n\"Now what? Where's Kelly?\" Paul asked impatiently. \n\n\"Look!\" Laurie said, pointing her flashlight at where the engraving was on the wall. AQVA GAVDEN. \"So this is the aqua garden you think?\"\n\n\"Not exactly. I think we made a horrible error.\" The group stared at me unable to take any more bad news. \n\n\"What now? Just say it...rip it off like a band aid.\" Julie said. \n\n\"I don't think this is really the water garden. I don't think this island should actually be called Water Garden Island.\"\n\n\"It's clear as day, right there on the wall.\" Jim shouted. \"Granted, it's in some fucked up font, but pretty sure it means Water Garden.\"\n\n\"I don't. I should have seen this earlier, it doesn't say water garden at all.\" I said somberly. \n\nThe group stared at me blankly. \n\n\"Is this another riddle? Some stupid puzzle?\" Paul blurted out, clearly the most upset. \n\n\"It's not a puzzle. It's not English.\" I said softly. \n\n\"Then what the hell is it?\" Jim asked. \n\n\"Latin. The ancient text in Latin only had 23 letters, and used a capital V as both the letter V and also the letter U. Which would make that properly stated as Aqua Gauden.\" I added. \n\n\"Gauden? Gauden? That's not a word.\" Jim shouted. \n\n\"Not an English word, but in Latin it is. Roughly translated it means Water...\"\n\n\"Orgasm!\" Paul chimed in. \n\n\"That's right, Water Orgasm.\" I agreed, finally feeling like we made some progress. \n\n\"How do you know that?\" Jim asked Paul, completely surprised. \n\n\"While I was off at private school as punishment for not being able to control myself, I did get the benefit an intense curriculum. One of the few schools that still taught Latin.\" He said with pride. \n\n\"And they taught you the word for orgasm?\" Laurie laughed. \n\n\"No. But in the first week most of us learned all the dirty words before the serious stuff.\"\n\n\"Boys will be boys.\" Julie added. \"But how does that help us?\"\n\n\"I'm not exactly sure, but I know this place is key. This is where Kelly and I shared that pleasure session.\" I said awkwardly. \n\n\"You both had a water orgasm.\" Laurie said softly. \n\nI nodded my agreement and the group started to follow. \n\n\"That thing already messed with me the night before when I thought it was giving me head, but maybe that only happened so I would want to follow Kelly on her run the next day. Maybe it was leading us here.\"\n\n\"That seems like a stretch.\" Jim said. \n\n\"Do you have a better idea?\" Paul added starting to become a little more cooperative. \"What were you thinking this could mean?\"\n\n\"I still don't fully know, but the answers are in here. I can sense it.\" As I walked over to the wall and felt the letters, AQVA GAVDEN, I read the lines below aloud. \n\n\"shee who cums, has some fun, but will remember none he whoo cumms, remembers all but will soon be undone\"\n\n\"Does that mean anything to anyone?\" I asked hoping someone had a clue. \n\nThe group was mostly quiet. \n\n\"Nothing other than the obvious that when Kelly came she didn't remember any of it. And when you came...maybe you're being undone...like this is your demise?\" Laurie said more as a question than a statement. \n\n\"It clearly makes sense for Kelly.\" I started to think aloud. \"She thought I was crazy because she had no recollection of this. But me being undone? I just don't get it.\"\n\n\"It's a pretty janky poem, whoever wrote it.\" Paul said, almost laughing at it. \n\n\"What do you mean?\" I asked, not leaving anything to chance. \n\n\"He's just upset there are no pictures to go along with it.\" Jim said. \n\n\"Quiet, I want to hear this. What seems odd to you about it?\" I was genuinely curious. \n\n\"Lots of things. The rhythm is all wrong, tons of misspellings, it barely rhymes and the punctuation is inconsistent. It doesn't even have a period at the end.\" \n\n\"Latin, poetry, grammar, when did you become so studious, professor?\" Laurie asked. \n\n\"Seriously though, it's like a stoned idiot wrote this. Anyone can do better than that.\" Paul added. \n\n\"Holy shit. He's right.\" I said frantically running to the wall. \"Think about it. This is in English. Poor English, but English nonetheless. No hints of Latin. The other poems were definitely fucked up, but they didn't have errors like this.\"\n\nThe group grew silent from this revelation. \n\n\"And there's no period because this isn't the end of the poem. There has to be more below.\" I continued and felt around the wall beneath the visible words. It was almost perfectly smooth, too smooth to be a stony wall. It became obvious that a thin layer of clayish mud had been added over the stone wall. This wasn't an accident, it was put here on purpose to cover up whatever was underneath. I wished I still had that stone dick, as I tried reveal the rest of the message jamming my flashlight into the wall breaking off shards of clay. Eventually more came into focus as I read aloud once more. ",
        "\"shee who cums, has some fun, but will remember none until She's done. he whoo cumms, remembers all but will soon be undone. At lasst, more than one joiins the fun, Her reign will forever be done. from one, all must come.\"\n\n\"Holy cow, guys! Notice anything about the capital letters? Only Her and She are capped...and not all of the time.\" I pointed it out, growing more excited at the breakthrough. \"The she is Kelly and the She is It, her, whatever It is. Someone else must have written this trying to help others fight against Her.\"\n\n\"So what? What do we do with that?\" Laurie asked, crossing her arms not ready to believe it. \n\n\"I think you know what it means.\" Julie said, as she took off her top and tossed it to the side. \n\nPaul took off his shirt. \"More than one join the fun.\" He unbuckled his belt and quickly slid off his pants.\n\n\"This is nonsense.\" Laurie said. \"Even if you believed that, it doesn't say all. Just more than one.\" Still crossing her arms, she grew very uneasy. \n\n\"She's right.\" I added as I took off my shirt. \"There's nothing that says we all have to do it. And there's no guarantee it will work.\" Quickly I undid my belt and unzipped my fly, as all the others, excluding Laurie, were down to their underwear at this point. \n\n\"None of you have to do anything you don't want to.\" Paul said, bravely removing his boxers, now the first one to be completely naked in front of everyone. Not bothering to cover up, almost using his nudity as a symbol of vulnerability. \"But maybe the more of us who join in, the better shot we have. I just want Kelly back, I don't care about anything else.\" He said with his arms out to the side as if knowing we were all secretly making comments and judgements in our heads about his exposed body. \n\nThe group grew silent and couldn't help but stare at his naked form. He had always been the tough, smart ass who didn't take shit from anyone. Here he was, naked as the day he was born, asking for help. \n\nPaul walked into the water and found a cozy spot, which happened to be right where Kelly sat the other day. \n\n\"I'll join you.\" Julie said, finishing removing her bra, and quickly slipping off her jeans and panties. She too paused as if to give the group a chance to awkwardly see her nudity. She crossed her arms, but that only seemed to prop up her breasts and left her flat stomach on display, slightly tilting her hips bringing her small patch of dark brown hair above her slit toward us. \n\n\"I'm sorry Laurie, but I have to join them.\" Jim told her, torn between helping his friends and sticking by his girlfriend's side. Soon he was naked as well. His penis dangled awkwardly away from his thighs, already getting a little excited as he joined Paul and Julie in the spring. \n\nI saw a small tear form in the corner of Laurie's eye as she watched her naked boyfriend walk into the water with the others. This wasn't fair to her. This wasn't fair to any of us. \n\n\"I know.\" I said, walking up to her and gave her a hug. \"It's pretty fucked up, but if we stick together we'll be okay.\"\n\nShe nodded her understanding as her face was muffled into my shoulder. \"Hopefully. I just need a moment to process all this.\" And she walked toward the narrow opening to the cave. \n\n\"Where are you going?\" Jim shouted out from the water. \n\n\"I just need a walk. I'll be right back.\" She said looking back at the group once more before disappearing out of sight. \n\n\"Wait!\" Jim shouted and stood up, now fully erect. His shaft bobbed sideways back and forth right in front of Julie. She grabbed it so it wouldn't smack her in the face. \n\nThe sobs of Laurie echoed through cave as she caught a glimpse of what just happened. \n\n\"Laurie, wait!\" Jim shouted, \"I need to go talk with her.\" He said to the group. \n\n\"No you stay. Looks like you're already in the middle of something.\" I said, noting how Julie was still holding onto his erection. Jim looked down, as if noticing this for the first time. He had a reluctant smile on his face and slowly sat down next to her. \n\nIt's just the cave. It's just the island. It makes you do things you wouldn't normally do. I tried to remind myself as I left through the slit to go find Laurie. \n\nThe rain had calmed down to a light drizzle. I didn't see Laurie anywhere, so I started wandering around calling out for her. \"Laurie? Laurie?\" No response. \n\nI sloshed around in the wet grass and circled around the cave to the other side. By the time I made a full circle around I could barely even recognize where I was. Underneath a large tree, I saw dark figure curled up in a ball sitting on a rock. \"Laurie?\" I called out and ran toward her. \"Laurie?\"\n\nHer face was tucked in between her pulled-up legs that her arms wrapped around, gently shaking from soft cries. \n\n\"Mind if I sit?\" I asked as I approached. \n\nShe shrugged her shoulders, barely looking up as I sat down next to her. This was so awful. She was crying, everyone was terrified and our friend was missing. Not to mention she mistakenly gave me head earlier in the day. \"You okay?\" I asked, instantly regretting that. Obviously she wasn't. Who would be?\n\n\"I'm so sorry about everything.\" I said, not really knowing where to begin. \"This is without a doubt, in the top five weirdest weekend getaways I've ever been on.\" I said dryly, finally getting a chuckle out of her. \n\n\"Garret!\" She rolled her eyes and rotated her body, cuddling up next to me as she wiped away her tears. \"What are we going to do?\"\n\n\"I don't know.\" I wrapped my arm around her and rubbed her shoulder. \n\n\"I think I owe you an apology...for blowing you earlier.\" She said. \n\n\"Ha, I think I owe you a thank you for that.\" I joked. \n\n\"Shut up!\" She cuddled closer. \"But seriously, I think I really messed things up with Jim. You saw what was about to happen with Julie back there...maybe he's just trying to get even with me for sucking your...\" she trailed off. \n\n\"Maybe. Or maybe this island is just messing with him. Messing with all of us. Or maybe he's just trying to get Kelly back the only way we've heard so far.\"\n\nShe nodded. \"Do you think it will work? Do you really think a \"water orgasm\" will bring Kelly back.\" She said water orgasm using her fingers for air quotes. \n\n\"I don't know, but are we any worse off if it doesn't?\" I asked. \n\nLaurie shrugged her shoulders. \"I understand. I get why he wants to help. And I want to help too, really I do. I just don't think I can bring myself to an orgasm now. Not like that...in there.\" \n\n\"You mean a haunting spirit on a cold, stormy night in the middle of nowhere isn't a turn on for you? It's like I hardly even know you anymore.\" I said, again trying to lighten the mood. \n\n\"Do you ever stop?\" She asked with a reluctant smile, and cuddled up even closer to stay warm. \n\nMy hands rubbed her arms, and now from her recent shift of position fell to her belly, just below her breasts. I continued gently rubbing, hoping to keep her calm. \n\n\"If I stop, what's left?\" I asked somberly. My hand lightly rubbed a little higher, I could feel the weight of her breasts on the back of my hand as I was practically right underneath where they fell. As fucked up as this was, I felt a familiar rush of blood, as my penis started to stir.\n\nHer hand rested on my thigh, breathing softly, her mind was deep in some other universe. She didn't even realize she was nearly touching my thick bulge down my inner leg. \n\n\"Do you think he's fucking her?\" She asked saddened by the thought. \n\nWithout asking who she was talking about, I knew exactly what she meant. I wanted to say, of course not! But all I ended up saying was, \"I don't know. Maybe.\" Truthfully I didn't know, but my hunch was yes. My hand glided up, now massaging her breast without hiding it, the same way I was rubbing her belly a moment ago. \n\n\"It's going to be okay.\" I said, lightly feeling her hardened nipple through her hoodie, realizing she wasn't wearing a bra.\n\nShe let out a little gasp, but didn't stop me. \"I'm sorry, it's just...it's been a while since I've had an orgasm. Actually I think I'm the only one of us who hasn't cum on this trip.\" She said softly. \n\n\"What are you talking about?\" I asked, slowly moving my hand under her hoodie, feeling her warm belly as I made my way upward. \"How do you know that?\"\n\nShe gasped again as my hand found its way to her breast, taking in the weight. It was surprisingly firm and full. I had known her since middle school, long before she developed. It was a little weird now feeling her chest for the first time under these conditions. Her hard nipples lightly moved in between my fingers, and I felt her hand slide over the outline of my cock in my jeans. \n\nMy hand finally released her breast, and slid down her belly, making short work of the button on her jeans. I felt the lacy texture of her panties, and the incredible warmth radiating as I made my way lower over her dampened mound. Pulling her in close, I rubbed her slit over her panties a little faster and realized she never answered my question. \n\n\"How do you know you're the only one who hasn't cum?\" I asked, realizing I was now lightly kissing her neck. \n\n\"Oh, please don't stop...\" she said as she unbuckled my belt and quickly freed my eager shaft. \n\nI felt her hand hold onto the length, lightly sliding the skin up and over the tip and using my pre-cum on the way back down. \n\n\"How do you know?\" I asked again, now sliding her panties to the side, and feeling her wet slit. I'm not sure what came over me, as I found myself on my knees, pulling her tight jeans down over her hips, feeling her smooth thighs as I pushed them down past her knees. Instinctively she spread her legs, inviting me in for more. \n\nThis felt so wrong, but I found myself kissing her right, inner thigh as I rubbed her other leg inching my way toward her center. \"How do you know?\" I asked again, between breathy kisses, beginning to inhale her intoxicating, intimate aroma. \n\n\"Don't stop.\" She whimpered almost painfully, as I felt her fingers run through my hair. \"Just don't stop...\"\n\n\"I won't...as long as you tell me...\" I felt like I was in some kind of intimate negotiating session, as I kissed closer and closer, lightly licking where her inner leg met her groin just barely apart from her slit.\n\n\"You and Kelly...\" she said between gasps, \"already said you came.\"\n\nI kissed as close as I could without reaching her actual slit. \n\n\"I watched Jim jerk off last night, and this morning.\" She said softly. \n\nI slid my nose just over her slit, taking in her unique scent, barely grazing the wet skin while letting out a soft breath on her intimate area. She shivered from the mix of temperatures. \n\n\"Paul...if he didn't fuck Kelly last night, I at least caught him jerking off in the basement today. Pretty sure he knew I was watching.\" She said with a mischievous smile. \n\nI rewarded her with a soft lick, starting at the bottom of her slit working my way up to her clit, flicking it with my tongue a few times before surrounding it with my full mouth. \n\nBriefly removing contact with her pussy to ask, \"And Julie...?\"\n\nWith her fingers still in my hair, she held me close and started to grind methodically against my mouth, gasping louder and louder the closer she got. \"And Julie...\" her voice dropped, and added with a wicked laugh. \"I made her cum.\"\n\n\"Whaa...\" I tried to ask, but she forced my mouth into her slit as she continued to frond on my face.\n\nShe was impossibly strong, and I couldn't break free. \n\n\"I'm pretty sure you heard us earlier. In fact, I made sure you did. We were in Paul's room.\" She said plainly, still not letting me up. \"She was reluctant at first, but soon she bent to my will just like you're doing now.\" She laughed, \"Jeez, I barely had to cuddle with you before you tried to save the damsel in distress. So predictable.\"\n\nMy mouth still pressed up tight against her slit, my eyes looked up and locked with hers. Cold and dark, they stared right through me. \n\n\"From one, all must come.\" She laughed, \"You immature fools. That line wasn't talking about an orgasm. It's about how you arrived. I'm the one who brought you all here...for Her.\"\n\nMy head was spinning with all that was happening. This can't be. She gripped my hair harder, preventing me from backing off. \n\n\"You were the closest to solving the poem on the wall, but like most guys you stopped just short of the real goal.\"\n\n\"What arrh y takh bout?\" I mumbled and screamed through a mouthful of pussy. \n\nShe laughed at the vibrations from my slurred words. \"Oooh, I like that.\" She slid her hips around as if she was dragging this out as long as she could. \"Keep talking...\" she said mockingly. \n\n\"Th fck ss goin onn?\" I mumbled, feeling her slit slide all over my mouth. \n\n\"You did such a good job deciphering that poem, I thought for sure you'd figure it out. But you forgot the most important part. She who cums last, joins forever.\"\n\nI had stared at the poem for so long it was engrained into my head like a photograph. Recalling all the misspelled words. \n\nshee whoo cumms lasst, joiins forrever. \n\nHow did I not see that? I thought to myself as her juices ran down my chin. \n\n\"I didn't even have to summon her. Your virgin slut of a girlfriend and that bimbo Paul took care of that on the first night. I was all set to have a little seance later that evening, but jeez...pissing in the fire and calling Her out like that worked far better than any seance ever could.\" She laughed and adjusted her hips slightly so my mouth rested right on her clit. \"After that, I just had to be the last one to cum. She has a way of making everyone do...interesting things, but only those worthy of her can withstand the immediate gratification. Resist these earthly temptations for everlasting pleasure. Just like the Bible, only real.\" She said that last part as if I was some religious figure taking personal offense to it. \n\n\"Once you bring me over the edge...it will all be over.\" She laughed and moaned as she grew closer. \n\nI pushed away with all my might, but she had unnatural strength holding me up to her slit. She chuckled carelessly, \"Even if you did get away, it wouldn't matter. I could just finish myself off...and I'd still be the last to cum. I just thought it would be more fun cumming from you.\" She laughed at her bad pun. \n\n\"Whrr KLLY?\" I screamed through her slit. \n\n\"Oh fuck yeah, you have to try that on Julie. If you make it out of here alive.\" She cackled and leaned back as a bolt of lightning struck in the distance. \n\nI did the only thing I could, and bit down on her pussy as hard as I could. The soft flesh practically crunched in my mouth before she ripped herself away and slapped me. \n\n\"Naughty little thing.\" She said with a hint of amusement. \n\nMy face was finally free and I crawled away on my back, face up still looking at her. My erection hadn't lost a beat, and her eyes grew wide as she stared at it. \n\n\"That could come in handy for this task.\" She said playfully. \n\n\"Where's Kelly? I finally said clearly. \n\n\"Hmmm, Kelly? Brunette, nice ass, cute tits, and has some attitude. That one?\"\n\n\"Laurie, this isn't you. That thing is making you do this.\" I said still crawling away. \"What did you do with Kelly?\" I screamed. \n\n\"Me? What did I do with her?\" She said, tossing her jeans and panties to the side, now completely naked. Her breasts jiggled slightly as she slowly walked toward me. \"No, no, no, no, no, no...not me. I didn't do anything with her.\" She said as she grabbed my cock, gripping it extra hard as if payback for the bite I gave her. \n\n\"Kelly's being held until SHE gets what SHE wants. And we're going to make sure SHE gets exactly what she wants...\" As Laurie finished, another bolt of lightning struck nearby, casting an array of shadows over her curves as she straddled me, still holding my cock with a wicked grip. \n\nI rolled, twisted and unsuccessfully tried to break free. \"How the fuck are you so strong?\"\n\n\"Once again you have it backwards. I'm not any stronger than I ever was...yet.\" She slid her hips around my midsection, lightly rubbing her spread slit over my abs. \"You're just weaker. Every time you came in Her, you grew weaker and SHE grew stronger.\"\n\nShe cackled once more and squeezed my scrotum like a stress ball. \"You've already inseminated her twice. The third time will set her free.\"\n\n\"No...no!\" I screamed, already knowing what was coming. Another bolt of lightning struck, illuminating a shadowy figure approaching. Her hourglass curves mysteriously shifted in the dark the closer she came. \n\nLaurie slid her hips up my chest and spun around, now sitting upright with her butt right in front of my face as she watched Her approach. I could feel Laurie trembling with nervous excitement as her plan was nearing fruition. \n\n\"I've done everything needed...he's ready for you.\" She said talking to the shadowy figure approaching. Laurie slid backwards, her round cheeks parted over my face, once again grinding her pussy forcefully on my mouth.\n\nI tried to pull her off, move her to the side to see. But my strength was gone. I felt a strange coldness grip my cock, stroking it like sandpaper before the figure sat down on it. My view was blocked by Laurie's cheeks spilling over my face, but I could feel the thing, it, starting to slide my erection inside her. Cold at first, hot a second later. Painfully hot, like I was fucking a bonfire. \n\nLaurie cackled as I writhed from the strange sensations. \"That's it, Garret...cum in her one last time and She will regain all Her power.\" \n\nI barely heard the words, as I felt Laurie's slit grind up and over my mouth to my nose and back down again, while I felt all of my energy being drained from my cock. As if It was pulling my life force through my insides and out my dick. \n\nAs terrifying and painful as this was, I still felt the urge to cum growing stronger. The more I tried to get Her off, and the more I twisted to move Laurie's ass off my face to see, the more I felt my penis throbbing. All the kegel exercises in the world couldn't withstand this amount of supernatural pressure and pleasure. \n\nLaurie sped up with more focused movements, as she neared her climax. The deep and echoing laugh surrounded me from whatever was riding my cock. I could barely breathe, as Laurie's intimate juices and earthy aroma filled my senses. My will gave out, as the feeling of a thousand hands stroked my cock while still inside her. My balls tightened, and it felt like I was cumming from inside my soul as I erupted, shaking violently. Laurie began to tremble on top of my face and an earth shaking laugh lingered as lightning struck all around us. Everything turned pure white, brighter than bright. The deep laugh transformed into the same high-pitched laugh that's rattled in my brain this whole trip. \n\nI closed my eyes and the pure white faded to a cloudy darkness as I saw a glimpse of the mysterious figure riding me to completion, pulling out every last drop of cum and energy I had. The most beautiful face I ever saw smiled at me, as the light faded and shadows overtook her face, darkening her eyes, her pearly white teeth turned sharper and her gorgeous cheeks faded, revealing the bones underneath before disappearing entirely. \n\nI blinked a few times and dawn was starting to break. Nude and shivering, I clung to the warmth in front of me holding the bare flesh that rested on my hips. My hands explored before my eyes did, as I realized I was caressing a pair of breasts. Still on my back, I pulled the form down to my chest and felt her breasts flatten as she rested on me. It wasn't until she adjusted her hips and legs to lie flat against me that I realized I was still inside her. Panic set in, but I was too weak to throw her off. Was I still inside this thing? \n\nFinally my vision started to come into focus as I felt her hair tickle my chest. ",
        "\"Garrett?\" The familiar voice called out as she started to wake up. \n\n\"Kelly?!\" I exclaimed, hugging her bare body tightly, forgetting I was still inside her. \"You're alive.\"\n\n\"Holy fuck!\" She screamed grabbing her crotch. \"What is that, a baseball bat?\" She asked, clearly in a little pain. \n\n\"Shit, sorry.\" I carefully pulled my throbbing shaft out of her and she watched it bounce free against my body. \n\nShe let out a huge gasp, staring at my penis still coated with her juices. \"THAT was inside of me? You were inside of me?\" She screamed. \n\n\"No! Sort of. It's not what you think. I don't know how it happened...\" I stammered. \n\nHer friendly high-pitched giggle echoed in my ear as she gave me a hug. \"I don't know why, but I get the feeling I should be thanking you.\" She said as she gave me a soft kiss on the lips before sliding off and collapsing into a spooning position right in front of me. \n\nI hugged tightly, and pulled her in close, feeling the heat of her back warm up my body. My cock was still painfully erect and nestled in between her soft, round cheeks that kept my midsection toasty. \"I'm just so glad you're alive.\"\n\n\"Of course I'm alive.\" She said, starting to stand up and eyed us both up and down. \"Seriously though, why are we naked? And cuddling on the ground? Jeez, how much did I drink last night?\" She laughed and didn't seem too phased by it. \n\n\"It's a long, long story.\" I said, standing up, giving her one more long hug, practically poking her with my erection. \"I'll tell you all about it when we're with the others.\"\n\nShe nodded and asked, \"And where the hell are our clothes?\"\n\n\"I have one guess. Follow me.\" I said, leading her around to the entrance of the cave. \n\n\"What is this place?\" She asked as if she was seeing it for the first time, feeling the heat radiate from the spring. \n\nI looked around and saw no sign of our friends nor our clothes. The words \"AQVA GAVDEN\" were still on the wall, but the poem beneath it was covered with a fresh layer of gunk, effectively concealing it once again. \n\n\"Whoa, do you think this is the water garden this island is named after?\" She asked. \n\n\"Something like that.\" I said softly. \n\n\"What are you waiting for? It's not every day you see a natural hot spring. Let's go in!\" \n\n\"NO!\" I shouted and she looked almost frightened by my aggressive response. \"Sorry, it's just, I'm sure everyone is wondering where we are. Let's go back and get dressed and maybe we'll come back later.\" I added, knowing I would never return. \n\nWe carefully treaded through the forest with my arm around her shoulder, sliding my hand up and down her side to keep her warm. Occasionally I'd bump the side of her breast or her butt in the process as we covered the bumpy terrain. She'd giggle innocently as if to encourage it. \"This is never going to go down if you don't stop doing that.\" She said, lightly holding onto my still hard shaft. \"When we get back to the house, you should really take care of that...\" she said, giving it a soft stroke before letting go. \n\n\"I'll keep that in mind.\" I said, having no intention of cumming on this island ever again. \n\nThe walk surprisingly flew by, despite being cold, naked and exhausted. I was relieved to finally see the sun again. The clouds had disappeared and storm season had come to an end. As we neared the house, I could hear names being called out. \n\n\"Kelly? Laurie? Garret? Where are you?\" One shouted. \"Guys! I think I see them!\"\n\nMoments later we were in the middle of several hugs, tears of joy, laughter and sadness. No one seemed to care we were still naked. We all embraced as if it was a miracle we were alive. And it was. \n\n\"Laurie?\" Jim called out. \"Where's Laurie?\" Panic set in as he saw the look on my face. \n\nI didn't have the heart to tell him she orchestrated this whole thing, that she wanted to be with that thing, that she nearly killed me. I wanted to leave Jim with as best of a memory as possible. \n\n\"I'm afraid she didn't make it.\" I said softly as he started to weep. \n\n\"I'm really sorry, Jim. If it wasn't for her, Kelly wouldn't have survived.\" That seemed like a stretch, but what did it matter at this point? He had lost his girlfriend forever. \n\nAfter our hug fest was over, we all went inside, got dressed, packed and ready to leave. \n\nJulie hugged me once we got into the privacy of our room. She was crying. \n\n\"I know, I know, but it's over now.\" I tried to reassure her. \n\nJulie nodded. \"Last night, I'm not sure what I did...with Paul and Jim...I think I might have...\"\n\n\"It's okay.\" I said softly. \"It wasn't you. It was this damned island. We all did things that I don't think we ever meant to. We just need to move on.\"\n\nShe seemed relieved and hugged me once more. We went down into the foyer and met up with the others. Bags in hand, we all marched out to the dock for the ferry ride back to the mainland. \n\nI saw the girl at the entrance of the boat ready to take our tickets as she called out angrily, \"Next!\" Ushering us through quickly. Guess nobody likes coming to this island I thought. \n\n\"Hi, if there's anything I can do to make your ride more enjoyable, don't hesitate to let me know.\" She said as she took my ticket and gave me a warm smile. \n\nThat was weird. I remembered her being quite unpleasant on the trip over here. \n\nOnce aboard, I saw Kelly in the back of the boat looking with determined eyes at the island steadily shrinking in the distance. \n\n\"You okay?\" I asked. \n\nShe shrugged her shoulders before nodding. \n\n\"Do you remember anything in the past 24 hours?\"\n\n\"Just bits and pieces.\" She said softly. \n\n\"I mean you were gone. Disappeared and then back. I don't know how to explain it. Do you know where you were? What was it like wherever you were?\"\n\n\"What I remember doesn't really make sense. I can only make out lasting sensations of pleasure and pain without an end.\"\n\nI nodded. That was probably as close of a description as I could have hoped for. \n\n\"What do you remember?\" She asked curiously. \n\n\"Too much.\" I joked, but it was true. I could recall every horrible moment and it still hurt. Changing the subject I added, \"Laurie believed that whatever was on that island would give her everlasting pleasure. That's why she chose to stay.\"\n\nKelly smiled softly at first, but it grew into a wider grin before letting out a chuckle. \"That's what she thought?\" \n\nHer high-pitched laugh shifted into a deeper, echoing bellow that seemed to cradle my ears. \"There is no pleasure on that island. She damned herself to an eternity of torture.\"\n\nChills ran down my spine. \"How do you know that?\" \n\nHer eyes darkened, turning solid black and a wicked smile came over her face. \"Because she took my spot. There is no pleasure ahead of her.\" Her evil cackle practically made my bones vibrate. \"You...you on the other hand.\"\n\nThis wasn't happening. I backed away, terrified and she slowly followed. \"You though, have earned everlasting pleasure.\" Her hand reached for the growing bulge in my pants. \"You will live out your days finding your every carnal need satisfied however you wish.\" The deep voice whispered softly in my ear. \"After all...you freed me.\" Her eyes shifted even darker, as if you could see into an infinitely deep black hole. \n\nHer hand stroked my engorged shaft through my jeans. She blinked a few times and her eyes returned to a beautiful light blue. \"Gah!\" She gasped. \"Sorry...not sure what came over me.\" She said returning to her normal voice as her hand flew off my crotch. \n\nStaring at my bulge, she added. \"I hope I'm not the cause of that.\" \n\nWe both just looked at it awkwardly. Impossibly thick down the side of my leg, I don't recall it ever being that big. \n\n\"Maybe Julie will take care of that for you. Or those twins in the captain's quarters who have been eyeing you. Or...\" \n\nKelly was interrupted by a gorgeous server from the boat. \"Anything I can get for you?\" She said offering me a drink menu and noticed the outline of my thick shaft down my leg. \"If there's anything you want that's not on the menu, I can try to make accommodations for you. Anything at all...\" she smiled and walked away. \n\n\"Yes, Garrett.\" Kelly's eyes turned dark for a split second, and had a strange grin. \n\n\"Anything I want? What the fuck are you talking about?\" This made no sense. I just wanted to forget everything and move on.\n\nShe whispered, \"he who cums,\" and mouthed the words \"in me.\" Walking closer, she continued, \"remembers all,\" and mouthed \"and sets me free.\"\n\nI shook my head. This isn't real. This isn't real. I closed my eyes and heard her whisper, \"but soon will be undone.\"\n\nI took a deep breath and opened my eyes. Kelly was on the opposite side of the boat, chatting with the others. They were laughing as if they didn't have a care in the world. Like none of this ever happened.\n\nI walked over to the group and tried to join in their light conversation, but couldn't force myself to act as carefree. \n\nJulie cuddled up beside me. \"Why the long face?\" She asked. \n\nShe really did have no recollection of this weekend. None of them did, like it was...undone.\n\n\"No reason, just a tired.\" I said. \n\nJulie gave me a kiss on the cheek. \"Why don't you go get a blowjob from that server?\"\n\n\"What did you just say?\" I said quickly, not believing my ears. \n\n\"I said why don't you go get a drink from the server?\" She said plainly. \n\n\"You don't mind?\" I know what I heard, whether or not she remembered saying it. \n\n\"Why would I mind? You can have anything you want.\"\n\nKelly overheard our conversation and winked at me as her eyes returned to her normal blue. Her smile faded and mouthed the words, \"Anything at all...\"\n\nThe end. "
    ],
    "authorname": "Jjonest",
    "tags": [
        "ghosts",
        "island",
        "natural spring",
        "water",
        "friends",
        "haunted"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/a-haunting-on-water-garden-island"
}