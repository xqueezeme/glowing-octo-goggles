{
    "title": "S7: Holy War",
    "pages": [
        "Again, thanks to Jezzaz for the loan of his characters.\n\nAnd I did research on everything I wrote, so if you're Catholic, don't be angry. I have no feelings for your religion one way or the other, but I do respect it, and I mean you no offense.\n\nAnd yes, the main character is a bit over the top, but sometimes that's what is needed. I remember Harddaysnight taking me to task about making the hero of 500 Annies a bit unrealistic years ago.\n\nOf course, after reading his opus Lady In Red, about a group of absolutely normal teenagers, I have to agree with him. Normal is much more entertaining.\n\n*****\n\nI came back to England happy for Polly and the fact that she would soon be close to me again. I came back sad for me, for the marriage I thought I had, and for the way it all turned out.\n\nAfter the episode with Jo before the wedding, I rethought the whole thing. In the end, even if I would have done things a bit differently if I had given it more thought, I was satisfied I had done the right thing.\n\nI had to admit to myself that if I had gotten my other career choice I would probably have given it up. It was just too depressing, too soul consuming for me to be happy. You'd always see the worst in people, whether you intended to or not.\n\nAnd I believed Jo actually loved me, but how much of the real me did she love and how much was the construct of me she carefully crafted? Plus I really believed her when she finally said she was sorry.\n\nBut it was too little too late, and I wasn't going to try to rewrite the past. Probably the best thing that happened was my partial reconciliation with my mother.\n\nPolly and Jess both showed up at my suite with the determined jut to their jaw they inherited from their mother.\n\n\"We're here to do a little demanding and a lot of begging. Not for Mom, or Grandpa, but for Grandma. She's just been miserable the last few years, pining for her only son. She told us she did you a great wrong, but she wanted to explain why she did it, and it led to the hardest, most public fight I've ever seen between them.\"\n\nWhen Polly stopped Jessica started. \"So we had her write you a letter, and promised her on the souls of her grandchildren we would get you to read it. It's just a couple of pages, so, for the love of your children, will you please read it?\"\n\nI really didn't want to, preferring to keep the past the past, but we do strange and difficult things for our children. And like they said, it was only a couple of pages. I opened the envelope.\n\n\"My son,\n\nI know I've lost you. I won't ask for mercy, or expect anything, but I had to tell you the truth.\n\nYes, I did a terrible thing to you, twice. I should have told you the minute I found out, but they talked me out of it, using some pretty valid arguments. If I had told you, which was my first instinct, it would have been the end of you and Jo, and you were so much in love with her, and she thought she was pregnant for real at the time. Plus, your friendship with Mike, the man you considered a brother, would have been gone forever.\n\nAnd just as you did when the truth finally came to light, any relationship you had with your father would have ended. And so it came to pass.\"\n\nI stopped for a minute, surprised at the honesty. It must have been terribly difficult for her to write this.\n\n\"So I held it in. But my friendship with Mike ended that day. I no longer considered him another son. No son of mine would have done what he did to his brother. He tried several times over the years to justify what they had done, but I would immediately change the subject and he got the message.\"\n\n\"My relationship with your father suffered. It was never quite the same after I found out. I couldn't help but speculate if he could do something like this to his only child, what kind of agendas and secrets did he keep from me. Was he really just a courier? What exactly did he do while he was gone? He repeatedly assured me all he did was deliver messages, but I was never sure.\"\n\n\"And then I wronged you again years later when I caught Jo out on her 'date'. I should have told you then. But unlike Jo, I never underestimated you. I knew deep down, that there was a core of steel in your makeup. Some things you just wouldn't forgive. It took Jo a long time to realize that, and by then it was too late.\"\n\n\"I knew you would divorce her immediately, even though the children were just coming into their teens. There was a chance she would move, and I would lose my only grandchildren. I couldn't bear the thought of that, so I lied to you again through omission. I have to admit I'm wondering how you found out, because I never breathed a word.\"\n\n\"To sum it up, by trying to protect you, I ended up hurting you far worse than if I had told you the truth. You would not believe the hours I've thought about this, and I realize something. I no longer have a right to your love, so I won't ask for it. What I do ask for is forgiveness. Pardon a foolish woman for her crimes, committed out of love and confusion. Promise me you'll attend my funeral when I pass, that you'll see me one more time. It's important to me, so please give the girls your answer.\"\n\n\"I'll always love you, my darling boy.\"\n\nMom\n\nWow. I thanked the girls and told them how proud of them I was for standing by their grandmother. I told them to take a message to her. I would agree to her requests, and I would think about our relationship prior to the truth coming out. That was as far as I would go.\n\nI ran into Jo's mother at the wedding. She was a couple of sheets into the wind and proceeded to unload about my marriage, her clipped Boston tone even more pronounced due to the alcohol. There were a few people around who got to hear it, mouths hanging open.\n\nI waited her out, then told her I needed to thank her. \n\n\"For what?\"\n\n\"For making me realize I made the right choice when I divorced your daughter. If the axiom of looking at your mother-in-law to see what your wife would look like in twenty years holds true, I got out just in time. You look like a scarecrow that fell into a vat of Botox and bad hair dye.\"\n\nHer mother was trying desperately to beat the clock, and the clock was winning. She dieted to the verge of anorexia, and was always having 'a little something done'. My mother was two years older and looked five younger, and all she did was live sensibly. \n\nShe recoiled like I had punched her. \"You...you...YOU TAKE THAT BACK!\"\n\n\"Sorry, Marie, but I think it's time for a little tough love. You're not attractive, you're not healthy, and you're not happy. Step back, take a look at yourself. I'm not being cruel here (well, yes, I was), I'm being honest. You need to talk to somebody, family, priest, professional counselor, somebody, and soon.\"\n\nI really did feel bad when she dissolved into tears, but I got over it quickly. Maddie was looking at me with something akin to shock as we walked away. \"I really, really need to remember to never seriously piss you off. Was all that necessary?\"\n\n\"No, but then again, before I always had to take it for the sake of Jo. Marie always thought her daughter married beneath her. I endured slights and disrespect my whole married life, and now I finally got to say what I really felt. And it was the truth. She really needs to change her outlook on life.\"\n\nI did the math in my head. \"She's 67, and she'll never make seventy at this rate.\"\n\nOf course a tearful Marie told Jo all about how mean I was, and she headed over to my table with a full head of steam. To my surprise, Maddie stood and held out her hand.\n\n\"Stop! Whatever you were going to say, think first. I heard the whole conversation, if you can call a one sided rant a conversation. I don't know you mother, but she deserved a little comeuppance for the way she was treating Pete. Now then, keep it civil, we are, after all, at your daughter's wedding.\"\n\nWhatever she was about to say died on her lips. After fumbling for the right thing to say, she just turned and started to walk away. I put my hand on her arm.\n\n\"I'm sorry, Jo. Marie never liked me, and I bet she did cartwheels when we divorced. I wonder, does she know the real story, or did you let the lawyer in you spin it? Doesn't matter, I stand by my statements. She needs help, Jo, or she's not going to be around much longer. You're her only child, do something now, at least for the sake of her grandchildren, or regret it for the rest of your life.\"\n\nShe looked down at my hand on her arm, then looked up with tear filled eyes, nodding.\n\nWe were at one end of the family table, with all my kids and Jack and his parents between us, Jo, Marie, my mother and my sperm donor at the other. I'd made it clear to the kids it would be very bad if he attempted to speak to me. Very bad. Apparently he got the message, although I caught him staring a couple of times. The second time I caught him I grinned and slid one hand across the wrist of the other in a cutting motion. He went so pale I seriously thought he was going to faint.\n\nI sat thinking about Marie, and the letter my mother had sent, and before I realized it I was up and beside her, hand extended. \"Wanna dance, Mom?\"\n\nHer hand flew to her mouth and tears started, but she was up so quickly she knocked her chair over. I pulled her on to the dance floor, where she collapsed and clung to me as the tears fell. She was almost in control when the dance ended, trying to talk . I pulled a napkin away from an empty table and gave it to her.\n\n\"You did a bad thing Mom, really bad, to your only child. If I didn't believe in my heart you were only trying to keep the family together, I would never forgive you. This does not mean ALL is forgiven. Whatever your reasons, it was still a terrible thing to do, and you knew it was wrong.\"\n\nShe started to tear up again, and I shushed her as she tried to speak. \"Mom, call me every once in a while, or better yet, get Josh to teach you how to Skpe. We'll start slow, see if we can rebuild. It's the best I can offer you. And Mom, as angry as I was, I stilled loved you, and I still love you now.\"\n\nShe was full out bawling as the girls rushed up. Polly was furious.\n\n\"Dad! How dare you be mean to Grandma like this, on my wedding day no less! Shame on you!\"\n\nI just smiled and kissed her cheek, telling her to talk to her Grandma, then come back to me if she thought I'd done any wrong.\n\nFifteen minutes later both girls were all over me, and Polly thanked me for the best wedding present ever.\n\nAfter they left Maddie looked at me. \"God, I wish I could love like that. If I wasn't like I am, I'd have your ring on my finger so fast it would be unreal.\"\n\nThat surprised me, a little. Maddie had told me repeatedly that long term relationships were forever in her past, and would never say why. When we got into bed that night, she asked in a small voice if I would just hold her. So I cuddled and stroked her hair until she fell into a restless sleep. The next day I went off to England and she went to wherever she was traveling to next.\n\n... \n\nWork was piling up with what we had recovered and what was coming to us through the contacts Lord Bevington had developed. Being three short of our original seven didn't help, but bringing in someone new made us a little unsettled, so he left us to our own devices. \n\nHe did, however, bring in a couple of more teams. We interacted with them, but never really hit it off with any of them. They knew we tended to get the more important stuff, and there was a little resentment.\n\nPolly and Jack were frequent visitors. I still missed my other children, but managed to fly them over a couple of times a year. Jo never came.\n\nJessica said there was a new man in Jo's life now, a middle manager with a major corporation. She said he reminded her of me, in a lot of ways. I hope she doesn't treat him like she did me.\n\nIt had been two years since the wedding. I dated fairly often but not seriously. One student at the college came on to me, surprising me no end.\n\n\"Do you know how old I am?\" I was forty-eight, but I kept fit, still had my hair and teeth, so I was a pretty well preserved forty-eight.\n\n\"Just shy of fifty, if I had to guess. I'm not some silly college bimbo. I started my education much later than normal. I'm thirty-five, doing post graduate work here. I'm a little tired of the college boys trying to score with the old broad. I'd like to go out with someone who can actually hold a conversation without thinking about sex every ten seconds. Besides,\" she grinned, \"Your reputation proceeds you. Word is you're a bit of a mystery but a lot of fun to be around, in and out of the sack.\"\n\n\"Well good,\" I grinned, \"and at my age, I don't think of sex more than twenty times in an hour.\"\n\nShe laughed, we talked more, and we did go out. It was fun, the conversations were stimulating, the sex was great, but we both realized there was no future in our relationship. We had a pretty deep discussion the last time we were together.\n\n\"You don't trust anybody, do you?\"\n\n\"I trust my colleagues, my boss, my children, and one or two more, but that's it. Let's just say my past makes it difficult to trust anyone, especially women and leave it at that.\"\n\nWe were in bed, and she stroked my cheek. \"She must have really done a number on you. It's a shame, really. You're a nice guy, Pete. If you'd let yourself, I'm sure there's somebody out there who would be happy to love you. Might want to think about therapy, before it's too late.\"\n\nWe parted as friends, and a month later she saw me with Maddy and smirked. There was never any love between Maddy and me, but there was a fondness for each other. One night, she brought up Mike.\n\n\"Why didn't you kill him?\"\n\n\"That would have been the easy way out. Mike was really vain about his size, his ability to get any woman he wanted. He always came out on top, reveling in his spot as the alpha male. No, I reduced him to a mere mortal, and he'll have to live the rest of his days knowing he could never be top dog again, that people looked at his disabilities now and feel pity. That was far more satisfying than anything else I could have done.\"\n\nShe went silent a few minutes before grinning.\n\n\"You would be so good if you ever went over to the dark side. Want an update?\"\n\n\"Not really, but if you need to share, go ahead.\"\n\n\"He married his little honey. They lasted a year before he caught her cheating. It was another devastating blow to an already fragile ego. Now he goes out occasionally, but he's only after sex, and when the woman realizes it, she dumps him. He's thirty pounds overweight now, and his hair is starting to go. If your aim was to make the rest of his life miserable, you succeeded. His war stories have been getting wilder, and his drinking buddies are starting to ignore him. He works, goes home, and drinks. I'm betting he doesn't make sixty.\"\n\nWas I glad? Somewhat. But in the end, I just didn't care. He was getting what he deserved.\n\nShe changed the subject. \"You know he was in deep cover, it's why his death was faked. I really thought he was dead like everyone else, but he was working for a group with a different set of letters than ours. These guys do all the really scary shit, I don't even like to talk to them, but when you had your little adventure one looked me up. I had a hard time selling him on the fact that you really were just a college professor who did research and helped collect artifacts. He even said he might offer you a job. I told him not to bother, you were our little secret weapon and we didn't share.\" She grinned while I snorted.\n\n\"You know, I wish you'd let up on the Superman bullshit. I got lucky when I fell into the group, the other four guys were all military men that had seen combat, and they knew how hairy things could get. Sherry and Fatima both knew the risk, just from being who they are. I was just some stupid geek off seeking a grand adventure.\"\n\nShe grinned. \"Maybe, but I've talked to everyone, and they all say they wouldn't have made it out without you. Your ability to think on your feet and use deadly force when you had to kept the story from turning out much differently. So even if you think you're just a geek, talk to your friends, they won't hesitate to give a different opinion.\"\n\n\"I did all those things because I was scared shitless. I didn't want to die, and I didn't want my friends to die. So I did what was necessary, lied and manipulated, killed who I had to, to get us out. Don't confuse terror with valor, Maddy. Oh, and I don't want to do anything like that ever again.\"\n\nShe grinned and kissed my cheek. \"In my line of work, Pete, there is a very thin line dividing terror and bravery. You did as well or better than most seasoned operatives would do.\"\n\nShe sighed. \"Enough about that. Back to Mike. According to his handler, his communications were getting more and more infrequent there at the end. Speculation was he may have been been burned. In my opinion, he was in imminent danger of turning. That would have been really bad. So you did everybody a favor when you stumbled on to him, although it would have probably been better all round if he'd been beheaded.\"\n\nI shuddered a little. She once told me she was his closest friend in the agency. With friends like her...\n\nI had one more odd conversation shortly afterwards, immediately after I'd managed bringing her to three orgasms in forty minutes. She'd had the last as she rode me, keening softly as she relaxed on to my chest, then giggling five minutes later.\n\n\"I'm going to risk offending you, but in a nice way. I've been with more men than I care to remember, and I have to say, you're the third best lover I've ever had.\"\n\n\"Just third?\"\n\n\"Yes, hon, but that's a good thing. The other two had training, and yes, you prude, every country has some sort of sex school for selected operatives. Pillow talk has destroyed more governments than any war ever will. You throw everything you have into pleasing your partner, and we girls appreciate it.\"\n\nA stray thought hit me and I blurted it out before I thought. \"Is Mike one of the top two?\"\n\nShe actually laughed. \"No. Mike was too much of an alpha male, looking to satisfy his needs whether his partner had pleasure or not. Mike doesn't even make it to the top twenty.\"\n\n\"Top twenty? Wow.\"\n\nShe grabbed my equipment and squeezed. \"Don't judge. How many women have you been with since your marriage?\"\n\n\"Three. And you are hands down the best I've ever made love to.\" I didn't tell her that while the others were good and the sex was fun, aside from her I felt no emotion at all. It was like an enjoyable workout or a good run, that left me satisfied physically, even if I never ran that path again. And I did have a fondness for Maddy, and felt close to her when we were intimate. The woman had skills, no doubt, but it wasn't anywhere close to the soul stirring enthusiasm that Jo had.\n\nShe cooed and kissed my cheek. I couldn't help asking how the other two were better, for research, purely.\n\n\"One was a Saudi. He already had six wives, so he had plenty of practice. He was like you, only on steroids. The Russian, ah...\" She drifted of into a memory for a few seconds. \"The Russian was from a different planet. He had excellent equipment, great stamina, and stellar technique. It didn't last though. He wanted me to do corporate espionage, and when I refused we drifted apart. I heard he died three years later of a massive heart attack. Seems he was mainlining a Russian version of a souped up Viagra. What a waste.\"\n\n...\n\nWe worked steadily, making new discoveries every once in a while. One scroll turned out to be a treasure map, and we got Teddy in on it pretty early. He turned the map over to the proper owners, who immediately looted the site and sold the artifacts. Teddy bought most of it through cutouts. It was a sad lesson.\n",
        "I don't think Moshe, Sherry, or Fatima realized it, but we avoided the things we had recovered from our last trip. Too many painful memories, I suspect. I thought about it a lot before telling them I was going to start working on them, and they could join me if they wanted.\n\nThey left me alone for about a month, until I called them together, telling them it was important. They were surprised when I took them outside, for a quiet walk in the country. We'd got about a mile before they couldn't restrain themselves any more. Moshe stopped in the middle of the path, blocking me.\n\n\"Alright, what have you got? I've never seen you like this, so it must be big.\"\n\nI looked at them, seeing the interest evident. \"I wanted to be as far away from prying eyes and ears before I said anything. What I'm about to tell you is big. HUGE. When it comes out it will create a shitstorm of epic proportions. We always joke that someday we'll find something that will change the history of the world. When we carried those scrolls and books home, we did.\"\n\nI had their interest now. Moshe arched an eyebrow and told me to stop being a drama queen and tell them what I'd found.\n\nI was so paranoid I wouldn't say it, handing them a note, written in Latin, that hit the highlights.\n\nTheir reaction to the note was written all over their faces. \n\n\"Are you sure?\"\n\n\"As positive as I can be without more intensive testing and research. I'm asking for your help. You guys are the only ones I trust, if I brought in somebody new and it leaked what we had, it could get really hairy. I don't want your answer right now, I need you to think about it. And please, when you talk about it with each other, make sure no one can overhear you.\"\n\nThere was a bit more discussion, and we walked back to the labs, each lost in our own thoughts.\n\n...\n\nI had lunch the next day with Teddy, at his club, insisting on a private room. He knew I had something important, he could see the tells that I gave out when I got excited. After an excellent lunch he ordered a brandy, and when it was served and the door was shut, he leaned back and grinned.\n\n\"All right, spill it. Whatever you have must be huge, I haven't seen you this excited since we first put the team together.\"\n\nHe stopped smiling when I told him, aware of the import of the things I had found, before he grinned.\n\n\"Well, well. It looks like we're all about to be famous, whether we want it or not. By all means, carry on. I assume everyone else is on board?\"\n\n\"They haven't given me their answers yet. But you know they will all want to be involved, after all, how many times does an opportunity like this fall into your lap?\"\n\nHe frowned. \"We're going to have to update security. We'll be refitting your lab immediately. Can't be too careful, now can we?\"\n\n\"Not in the least.\"\n\nOf course, every one was on board. and anxious to start. We went painstakingly slow, and for a group like us, that meant glaciers moved faster.\n\nWe worked on nothing else for the next three months, only stopping when exhaustion forced us to rest. It was nothing to hear a gasp from one of us, and then have an intense discussion on what had been revealed. The knowledge made my head ache at times. I would often wake in the middle of the night, wondering if we should just stop, and let it go, but then I would think how I would react if I found out someone was deliberately keeping something this important from the public. I decided to carry on, and let history decide if I did the right thing.\n\nThe security upgrade was done as quietly as possible, but it was state of the art, the most advanced technology available, and I knew the technicians would have to wonder what was so valuable. As a cover, Teddy had all the workrooms upgraded, but none were anywhere near as advanced as ours.\n\nWhat was all the fuss about? The scrolls were written and collected by Matthias, the Disciple chosen to replace Judas. Seems he was a little bitter about being chosen by the casting of lots, instead of on his own merits. In one of the letters he saved, he asked Bartholomew if both candidates were qualified, why was only one chosen? Shouldn't they be recruiting all the qualified people they could to carry the message of Jesus forward?\n\nIn another saved letter, there was an entreaty from Jesus to Simon, urging him to be more circumspect when dealing with the authorities of the places they traveled through.\n\nSimon had been a Zealot before joining Jesus, and old feelings died hard, apparently. It seemed he thought overthrowing governments and replacing them with one of their own was still a good idea. The thought of reading something that was supposed to be written by Jesus made even an agnostic like me shiver.\n\nAlso in the urn was the gospel of Mary Magdalene, and notes about the dynamics of the Disciples after Jesus died, stating her disappointment with the others for ousting her from their movement, and a letter to Matthias speculating that Judas had been set up and poisoned, and that was why there were rumors about him swelling to the point of bursting.\n\nThere was also a fragment of the Gospel of Judas, which was nothing like what had been discovered earlier.\n\nThere were a few copies of letters from other lesser known disciples who had returned to their old occupations after the death of Jesus, all with an undertone of bitterness that they had been excluded from having a more active role in moving Christianity forward.\n\nAll the scrolls were written in the first hundred years after the death and resurrection of Jesus, by a priest who claimed they were copied from the originals. Some of the originals were also in the urn, in very fragile condition. I doubted they would survive unrolling. There was also a full copy written in the fourth century by a priest named Brother Joshua, with a note from him stating that he did them in secret, away from his fellow priests, because he thought they would be destroyed and he would be tossed out of the church as a heretic. His copies were in Latin, with notes on occasion when he wondered if he'd gotten the translations right. \n\nTeddy cautioned us that when the scrolls were published it would be a good idea if we were all on vacation in parts unknown for a few weeks.\n\n\"The Catholic Church is going to have a conniption fit when this hits, along with most of the Christians of the world. Expect to be very unpopular for a long while.\"\n\nI had been thinking about this a lot. Maybe I had been influenced by too many movies casting the Catholic Church in a bad light, but I knew enough from a historical standpoint they could be quite ruthless if the situation called for it. We had scanned and indexed all the scrolls, including the ones we hadn't examined yet, and we could work off those without harming the originals.\n\nI made a suggestion to Teddy, that upon reflection, he agreed with. I broke the news to Sherry and Fatima.\n\n\"Sherry, I think you're long overdue for a visit home, don't you? I'm sure the prince and the rest of your family would love to see you.\"\n\nFatima froze, a look of terror in her eyes. When they married, they tried to keep it secret for their own protection, but one of her nieces paid a\n\nvisit on her way to France for her annual shopping spree, hoping they would accompany her. They were delighted to see her, until they caught her staring at their rings.\n\nShe surprised them by smiling. \"I'm offended. My favorite aunt, and she doesn't even invite me to her wedding. I'll never forgive you.\"\n\nAfter they were assured she was all right with their lifestyle, they agreed to go with her. Like any woman needed an excuse to shop. They even brought a few things for themselves, including matching lingerie. One of the attendant servants, however, was not pleased, and announced it to everyone she knew when they returned home. The Prince sent for her, and expressed his displeasure for broadcasting the private affairs of his family. She disappeared, and her family never saw her again. The message was loud and clear. Private affairs of the royal family were not fodder for gossip.\n\nWhen the radicals found out, they called for a public stoning of both. The Prince met with them, but there was no middle ground. It ended with the radicals being escorted out of the country, and told never to return. ISIS had a field day, and used it as evidence that the royal family had slipped into decadence under the influence of western devils. One attack occurred, and the Prince did what he promised me years ago, and launched a personal Jihad against them. After dozens died, an uneasy truce was reached. Leave the royal family out of their wars and never enter the country, and they would be left alone.\n\nStill didn't stop some radical priest to do a Youtube rant once in a while. The girls found themselves with bodyguards, and wisely never objected.\n\nI quickly put their fears to rest. \"I don't really expect you to go, but if anyone asks, that's where you're headed. You will fly to another airport, board another private jet, and head to your real destination. Along the way, I want you to drop some packages off. Don't tell me where, and don't tell me who receives them, just make sure they are safe. Your original jet will fly to your country, where the Prince will visit it for a few hours. It will then take off and return here, after stopping to pick you up. You will not discuss the whereabouts of the packages to anyone, especially me. Do you understand?\"\n\nThey did.\n\nDespite our security, word started leaking out. I suspected it was one of the technicians who installed our security system. He was overly interested in what was so valuable, even wandered over to my table. Everything was locked up securely, the only thing on the table with a notepad, with random words scribbled in Latin. It was a habit I had developed early, using key words to remember whole sections, or to research the subject further. Apparently he read Latin.\n\nTeddy came to see me, telling me of his suspicions and concerns. I was really glad we had moved the documents, and that neither Teddy or myself knew exactly where they were. Nixon was right, always have plausible deniability.\n\nI knew we had serious trouble when I heard someone yell my name, someone I didn't recognize. \n\n\"Jake! Hey Jake!\"\n\nA quick glance confirmed I didn't know him, so I kept walking. He rushed to catch up with me.\n\n\"Jake! Hold up for a second, will you?\" He said this while gripping my arm. I looked down pointedly, and he let go.\n\nI examined his face, and reaffirmed the fact that I'd never met this man.\n\n\"Jake, is there somewhere close we can go to talk? It's freezing out here. I only need a few minutes of your time.\"\n\n\"Do I know you?\"\n\n\"No, I'm...\"\n\n\"Someone I have no interest in talking to. And just to clarify, I haven't gone by Jake in years. I never really liked it, and I go by Pete now. You need to do a little better job on your intel. Have a pleasant trip back to where you came from.\"\n\nI strode off, leaving him with his mouth hanging open. I'd only gone a few steps when I heard him rushing up. The man just didn't learn, grabbing my arm more firmly, spinning me this time. I clamped my hand over his, rolling my body and dragging him along until he lost his balance and fell. His scarf came open, exposing his clerical collar.\n\n\"You're a little too free with your hands there, Padre. Now, go away, before I have this nice policeman escort you to the local goal for assaulting me.\"\n\nHe looked up, seeing the campus security guard coming towards us. He'd been standing just inside the building we were passing for warmth, and witnessed the whole thing.\n\n\"Please, Ja..er, Pete. Just a moment of your time. It is vitally important.\"\n\nBy then the policeman was there. I helped the priest up. \"Let me think about it for a bit. All right, I've made a decision. No. If you want to speak to me you have to go through my boss. I'm sure you know who that is. Have a peasant day, now.\"\n\nI walked away as he called out for me. I called Teddy immediately. I could almost hear the glee in his voice. \"Well, they've heard rumors, then. Let the games begin.\"\n\n...\n\nTwo days later a formal request was made, and after making them wait a week, Teddy granted it.\n\nSo one blustery winter afternoon Teddy, Moshe, and I were sitting at a table in a private room at his club with a Bishop of the Catholic Church.\n\nTeddy made small talk, smoozing with ease, then asked what the meeting was about.\n\n\"It, um, has come to our attention you may have something that belongs to the Church. This is a formal request to turn it over to us.\"\n\nTeddy would have handled it better, but I stepped in. \"All right, just what specifically do you think we have, and what claim does your religion have on it?\"\n\nThe Bishop looked uncomfortable. \"Please, understand, information like what you have could take years to examine and interpret. It would be better if it were taken to the Vatican, housed in the archives until we can understand it better.\"\n\n\"By interpret, I take that to mean you're going to take it and bury it, never to see the light of day again. Tell you what, we'll give them to you on the condition that my team comes along and continues our own research. I'd love to get a crack at the stuff you've got stored in your archives, maybe we could take a peek now and then, what do you say?\"\n\nThe Bishop was unsettled and a little angry by then.\n\n\"That is the most foolish proposition I've ever heard! You're not qualified to interpret those scrolls, they belong in the hands of true scholars.\"\n\nThat little statement sent Moshe off. \"What you really mean is you're too afraid to let someone with an objective opinion anywhere near them. Also, for your information, Pete here is considered one of the top three researchers of that time and area. I'm one of the others, and the senior woman on our team rounds out the trio. So then, you have the three most foremost people in our field working on them, and you don't think we're qualified? Seriously? What's really going on here, Bishop? You seem awfully nervous about all of this. It makes me think perhaps there's something in those scrolls you don't want anyone to see. We've only worked on perhaps a third of them, who knows what we'll find? I'll tell you. Everyone. We'll make it our mission.\"\n\nTeddy interjected. \"Boys, boys, calm down. I'm sure the good Bishop has his reasons. But he hasn't made a formal request yet, and when he does, I'm afraid I'll just have to refuse, and tie it up in world courts for the next several decades if he pushes his agenda.\" \n\nHe turned to the Bishop. \"Well, Henry, you made your pitch. Go tell the Vatican it didn't fly. And Henry, tell them to be really careful about how they proceed, understand? This doesn't have to be nasty.\"\n\n\"Very well, Teddy. But you know it's not over. The Church has ways of getting what it wants. We'll just take another path.\"\n\n\"Is that a declaration of war?\"\n\n\"No, just intent.\"\n\nI grinned as I got up. \"Well, good luck with that. As far as I know, you haven't had an Inquisitor in a few centuries, and the Church itself helped murder all the Knights Templar. A little tidbit here for you to consider. You try coming at us through our families, and it will go very, very badly for you. This is a promise.\"\n\nThe Bishop smirked and started to say something, but Teddy put his hand on an arm. \"Careful, Henry, you really don't want to anger these people. They're a little more than they seem.\"\n\n\"They're researchers!\"\n\nMoshe grinned. \"You keep thinking that, Bishop. It'll keep the nightmares away.\"\n\n...\n\nMoshe and I shared a cab back to the campus.\n\n\"What do you think is going to happen now?\"\n\nI nodded to the driver and spoke in general tones. \"Oh, they'll keep trying, it's in their nature. They're one of the biggest, richest, and oldest groups in the world. Enormous power is at their fingertips. If it gets sticky we go to Plan B, agreed?\"\n\n\"Agreed. Your name is the one they will see, so be careful.\"\n\nI nodded, seeing the truth in the statement. Walking in to my flat, I dug out the Makarovs, hidden away all this time. I cleaned them carefully, loading them with fresh rounds. I also took out my Ismali dagger, checking the edge. I wouldn't carry the weapons since technically I wasn't supposed to have them. The boys in the agencies knew about them, we had spent time together on one of Teddies' estates that had an informal firing range. They even fired them, impressed with their accuracy.\n\nWhen we first got back from our last trip, I was going to send them home, but Teddy told me to keep them handy. One just never knew. As far as I know, Moshe still had his weapons, Sherry still had her pistol, and Fatima had claimed the cut down shotgun for her own.\n\nTeddy stepped up security, guards increased in numbers and the frequency of their patrols. It didn't matter, two months later there was a break in. These guys were ultimate professionals with state of the art equipment. They went in through the roof, removing a section so quietly the guards never heard it. The roof was wired, and they had spliced everything to read normal. These guys were ultimate professionals.\n\nMoshe and I started taking turns sleeping in the lab on random nights, just to make us feel better. Besides the scrolls we were working on, there were eight urns that remained to be opened.\n\nThis particular night was one I chose to sleep in the lab, on a sofa I had dragged to a corner. They were so quiet I might have slept through the whole thing if one hadn't sneezed. I peeked over the sofa. Three men, in tactical gear, with night vision goggles on. They moved cautiously over to the urns, trying to decide which to take first, when I flipped on the lights, blinding them. They clawed at their masks as I yelled out for them to be still. I hadn't seen any weapons, and was surprised when they fumbled with their pistols. One was quicker than the others and got a shot off in my general direction.\n\nI had borrowed Fatima's shotgun, and I cut loose, aiming for their legs because of the vests. When the buckshot hit two went down screaming. The other shot back, the bullets too close for comfort. I gave him three rounds in the chest and helmet before he dropped.\n\nDropping the shotgun, I pulled my pistols off the sideboard where I had put them, and started screaming for them to put their hands up. One was down and immobile, and the other two were too busy trying not to bleed out to obey me. I had triggered the alarm and opened the doors remotely, and thirty seconds later security burst through the door.\n\nThere were a tense few minutes when I refused to drop my weapons, but luckily the security captain recognized me. In forty-five minutes, Moshe, Teddy, and the girls were there, along with the police and three ambulances. \n\nTwo were dead. One was hit almost point blank in the groin, and the arteries in both legs were punctured beyond closing. The one I shot in the chest and face died when one of the buckshot managed to make it through the lining of his mask at his neck, lodging on his spine and severing a vein. He literally drowned in his own blood. I'd hit the third lower down and he survived, although his kneecaps were shattered.\n\nNaturally, my weapons were seized and I was taken to the police station. Before they got to question me Heath showed up, waved his credentials around, cited National Security, and escorted me home. Heath was from the British equivalent of Homeland Security, and was one of the first to make contact after our ill fated trip, to access if there was a chance any of it would follow us home. He knew Maddy, slightly, and it eased the way into a casual friendship.\n\nTeddy, Moshe, and the girls showed up, and Heath asked if they needed to be here. I told him definitely, then explained the whole situation to him. He paled at the implications. \"Surely you don't think the Church has anything to do with it, do you?\"",
        "I grinned. \"That would be your job, Heath. At least you have a suspect to question.\"\n\nHe snorted. \"Yes, one. Three would have been better, but I understand they weren't very open to surrendering.\"\n\nI shrugged. \"I asked them nicely. They didn't seem to want to cooperate.\"\n\nHe grinned, gave me back my weapons, and left. I spent the rest of the night in my flat, shaking like a leaf. I was definitely getting too old for this.\n\nIt made international headlines despite our attempt to keep it quiet. The men were all dressed in standard British military gear, right down to their sidearms. Two automatic assault rifles were found on the roof, also military issue.\n\nThe lone survivor had never been in the military, and had a pretty impressive international record, although he was never prosecuted for most offenses, due to lack of evidence and high priced lawyers. He was truly screwed this time, though, and knew it. \n\nHe was held without bond, in an undisclosed location. A lawyer came forward, demanding to see him and arrange bail. He was refused, and became very quiet when he was asked who engaged him. \n\nThe burglar talked, after a plea deal of sorts. He would do ten years, a cakewalk compared to what he was facing if he didn't cooperate, but his testimony led to an electronic trail that was traced back to an Italian millionaire.\n\nThe man was outspoken about the deteriorating morals of society, especially in western countries. He was an old style Zealot, a firm supporter of the Catholic Church. His donations each year totaled several million. He'd had audiences with the last four Popes, a reward for his loyalty and support.\n\nHe was arrested quietly by Interpol, and extradited after lengthy legal wrangling. The Church petitioned quietly for clemency, but could do nothing openly, for fear of fallout. Seems the Italian had learned of our work, and took it on himself to retrieve the scrolls for the Church. In the end, he did three years at a Camp Cupcake type facility.\n\nThe sad truth were his efforts were for nothing, the urns visible had already been examined and nothing significant had been found. They were window dressing, the real urns were in an eight inch walled stainless steel vault, built into the lab and hidden behind a work counter. The codes to get in were known only to three, and would only work at random times. It was supposed to be the best system in the world.\n\nWe received a full apology from the Catholic Church, and we really believed it sincere. However, the publicity pushed it out in the open. Teddy stunned the world by offering the supposed letter from Jesus to Simon for world viewing. It sent shock waves throughout the Christian world.\n\nIn a press conference, Teddy gave out transcripts of the letter, along with a promise that he would allow anyone qualified to examine it to do so, under tightly controlled conditions.\n\nTo my surprise, a coalition of American faiths sent a man I welcomed with open arms. He was my former assistant, the man who'd taken my spot when I left for England.\n\nThe Catholic Church sent their own man, a Scot, complete with red hair. He was six-seven, with a body that looked like it came from central casting of any Highland movie. He had excellent credentials, held two Phd's and was working on a third. He was also a priest, his current assignment was to Vatican City, where he was one of the assistant curators of the fabled archives. He actually had several papers out that the team immediately looked up and read.\n\nThey were well written, concise conclusions drawn and backed up by undisputed sources, but I didn't like the tone much. The team agreed with me, it felt less like objective research, and more like tailoring the facts to fit the conclusions.\n\nWe didn't work like that. We tried our best to tell the truth about our conclusions, whether it fit our beliefs or not. It was what it was.\n\n...\n\nMaddy came to see me, acting very circumspect, accompanied by a man who exuded a quiet arrogance that came only from true belief. Maddy seemed nervous, so after about three minutes of boring small talk I held up my hand.\n\n\"Stop dancing around and tell me what you want, in clear terms. Otherwise, I'll wish you a good day and go about my business. The clock starts now.\"\n\nMr. Executive looked startled and then annoyed, and Maddie burst out laughing, addressing the man.\n\n\"I told you Bob, but you just had to see for yourself. It takes a lot to impress him, and authority figures irritate him. I promised you an introduction, more for the amusement of watching than anything else. You're on your own now, I'll just sit back and watch.\"\n\n\"Mr. Trammel, I represent a section of the government who appreciates what you've done with those scrolls. We also know how your team acquired most of them. Lord Bevington is to be commended for his vision, and your team for your efforts. All that being said, the rest of the information you're sitting on could be of great benefit to your country. The position we'd be in, the concessions others would give, could prove very fruitful. Think of the service to your country! It would be...\"\n\nI was appalled at his sheer gall, and more or less tuned him out. He finally stopped speaking, bathed in self-righteousness, and waited for me to bow to his every wish.\n\n\"Just to clarify, you want me to betray my friends, my boss, a country that has adopted me as a son, the countries that entrusted us with their past, and my personal values, hide things that need to be shared with all, just so you could gain advantage? Are all government employees like you? For the first time in my life, I feel like I need to call my ex and thank her for what she did all those years ago(he of course had no clue what I was talking about). I think you need to leave now. And just to clarify the answer is not just no, but HELL NO! Maddy, honey, always a pleasure to see you. If your schedule allows, maybe we can spend a little time together before you leave.\"\n\nBy now I was standing at the door, holding it open. Maddy got up laughing and took his arm, pulling him gently. \"Come on, Bob. Don't try to convince him, you'd be wasting everyone's time. Pete, I'll give you a call.\"\n\nHe was stuttering and protesting as she led him out. Just before I shut the door I heard him say \"Maddy? Really?\"\n\nThe tone of her voice wasn't warm. \"Yes, Maddy. He's the only one who will ever call me that. You try it, and I'll give you a closeup look at your balls. I know you won't listen, but you need to leave him alone.\"\n\nHe was still complaining when they got into the car. I left right behind them, calling Heath as I drove. When I got to his office I laid it out for him. He sighed.\n\n\"So it's come to this. I know Teddy has been visited by a few of the chaps from the Home Office. I would guess they made the same appeal. Ask Moshe, and I'll bet his folks have done the same. The knowledge you possess is possibly the hottest thing on the planet right now. To quote those old Yank westerns I loved as a boy, it may be time to circle your wagons.\"\n\nI did ask, and they all, including Fatima and Sherry, said they had been approached at different times. It was a somber group.\n\n\"Fuck this! The only way to stop this is publish everything we've got, and let the chips fall where they may. It might get them to leave us alone.\"\n\nTeddy shook his head. \"Won't work, dear boy, now they'll always think we're hiding something. From now on, I fear, someone is always going to be looking over our shoulders.\"\n\n...\n\nRight in the middle of all that was going on around us, I got some very good news. Polly and Jack came to see me, grinning.\n\nI stood as they entered the restaurant, Polly pushed me down, plopping into my lap and giving me a LOT of kisses.\n\n\"Guess what, Daddy? My horny hubby has been doing some nasty things to me. And I like it! Especially when it gets me pregnant! Congratulations, old man. How does Grandpa sound to you?\"\n\nJack grinned as the realization of what she said, struck me. A grandchild!\n\n\"Well that's just wonderful! Jack, I hope the kid has better bowels than his or her mother. MY God, could she fill up a diaper! Several times a day! Invest in air freshener now.\"\n\nPolly was squealing and struggling to get off but I just hugged her tighter. \"Daddy! That's not true! You always told me I was a perfect little princess!\"\n\n\"You are,\" I said, kissing her cheek, \"and you always will be, to me. Both of you.\"\n\nShe cooed and relaxed against me, kissing me one more time before sliding off my lap and onto her husbands'.\n\n\"We don't know what it's going to be, and we don't want to. If it's a boy, his name will be Simon Peter, after our fathers. If it's a girl, It will be Joanna Estelle, after our mothers. If it's twins and one of each well, everybody wins.\"\n\n\"Have you told your mother?\"\n\n\"Not yet, Daddy. Jack has leave coming, and we're flying home for two weeks. We'll gather the family together and tell them the news.\"\n\nWe spent a pleasant evening together while I tried to absorb the news. Polly had to use the restroom, something I told her she would be doing with increasing frequency for the next nine months, and left Jack and I. I held up my wine.\n\n\"Again, congratulations. I'm sure fatherhood will give you great joy.\"\n\nHe touched his glass to mine. \"I'm sure it will. I might have to call on you for pointers. Polly told me you were the primary parent for most of her life. Now, before she comes back, I need to ask you something. Do you know a man named Bob Tilden? I don't know who he is, but he has spook written all over him. He has a little pull, getting me ordered to talk to him. He pumped me for about fifteen minutes before I told him to give it up.\"\n\n\"Things went downhill pretty fast after that. He idly reflected how a young, pregnant wife would feel if her husband was posted in a third world country. Would she stay behind, of go with him, living in danger and dealing with poor health care?\"\n\nHe saw me go white and put his arm on my shoulder.\n\n\"I told him my postings weren't up to him, but should the unlikely event occur, I would resign immediately. I've had some pretty lucrative offers in the past few months, I'm sure I'd land on my feet.\"\n\nI grinned, imagining Bob's face. Teddy must have thought something was up, and he offered Jack a job in security. Basically, he wanted to hire Jack to protect me.\n\n\"I don't want you to lose your career, Jack. I know you'll make the best decision for you two, just consider what you do carefully.\"\n\nWe didn't get to talk more because Polly came back, but I invited him to work out with me the next day. Polly rolled her eyes. \"Fine! I'll see if Fatima and Sherry are up for a day at the spa, courtesy of my loving father.\"\n\nI just grinned and told her to go ahead. The girls put a hefty dent in my bank account, and Jack put some pretty good bruises on my body. Either he was getting faster or I was getting slower. I suspect it was a combination of the two.\n\n...\n\nTaken totally by surprise, I received a call from Jo. She made small talk for awhile before she got to the point. \"I'm coming over for the last month of her pregnancy. Josh and Jess will come a few days before the birth, in case our grandchild comes early. We'll all be together again, for a little while. How does that sound?\"\n\nI could hear the apprehension in her voice. You could almost see her shock when I answered.\n\n\"That would be great! Can you get away from your job for that long?\"\n\n\"I...I have eight weeks of vacation due. I'll have all my projects wrapped up before I go. Besides, I'm a partner now, so I get a little leeway.\"\n\n\"Good for you! Look, if you haven't already made arrangements, let me handle it. The college has a few very nice houses for visiting lecturers, and I'm sure I can stretch a point and retain one for you, my treat. That way we'll all be close when her time comes.\"\n\nShe seemed stunned. \"Are you sure? I wouldn't want to impose on you.\"\n\n\"I insist. It will be nice, although I don't know how much time I'll get to spend with you guys. Work's kind of hectic lately.\"\n\nI heard the humor in her voice when she answered. \"I know. Mother was approached by the Archbishop of Boston a while back, wanting to know if she could influence you. Mom laughed so hard she cried, before answering. She told him he'd have a better chance sending the devil himself to sway you.\"\n\nShe went silent for a minute. \"I need to thank you for what you did at the wedding. I thought it was pure spite at first, but you were never a cruel person. At least not before. I insisted she see her priest, which led to a counselor, which led to a very expensive two month stay at a specialized spa. She came back ten pounds heavier and a lot more fit. Her doctor says she's in better shape now than she was fifteen years ago. Her attitude towards life has improved tremendously. She's become friends with a man five years younger, and they have hit it off to the point of going on a cruise next month. When people compliment her on her change, she says she owes it to her ex son-in-law. Oh, before I forget, both she and your mother are going to be with us when we come.\"\n\nI felt a bit of a chill. \"Will my sperm donor be there?\"\n\n\"NO, he's chosen not to come with us. I get the feeling he's afraid of you.\" \n\nI let that comment slide, and even though I didn't want to I asked if she had a significant other coming with her. Her laugh was bitter and sad at the same time. \"No one. You?\"\n\n\"Same as you. You know I see Maddy when she's in town. That's about it.\"\n\nFor some reason that seemed to cheer her up. After another minute of small talk, she rang off.\n\n...\n\nThe priest and my old assistant settled in, and after exhaustive research, decided the papers were from the right era. Th Catholic Church fought hard to acquire them, but we refused, saying they belonged to the country where they were found, refusing to tell them what country it was.\n\nTrevor, my old assistant, was working with Moshe and Sherry, which left the priest, Ian, with Fatima and me. He was a pleasant sort, mostly, the only time it would get uncomfortable was when the religious debates would start. Moshe and the girls took him seriously, but I needled him relentlessly. He threw up his hands in frustration one afternoon.\n\n\"You! You're the worst of the lot. All the others believe in something, even if it's misguided. You just smile your smug smile and work away, not caring the least how it might change the world!\"\n\n\"You're about as wrong as you can be, Ian,\" said Sherry quietly. \"He feels very deeply about how it might change the world. All this,\" she said, sweeping her arms around the room, \"this is his church. And he has to be true to his beliefs. He doesn't have agendas, or have theories to prove or disprove, he just bears the burden as a warden of knowledge. To him it doesn't matter if regimes fall or history has to be rewritten, as long as what he reports is the absolute truth as near as he can determine. Do you understand?\"\n\nHe shrugged. \"Not really. I still feel a little more control would be helpful.\"\n\nMoshe spoke up. \"Well then, Ian, who would you suggest be the best to hold this knowledge? A church that thinks the knowledge should be buried and suppressed? Have you ever thought for once that it might be the will of the God you worship that this knowledge be shared? That He led us to it, at great personal cost, to make us remember the sacrifice it took to bring it out? Did that ever once cross the minds of you and your superiors? Pete isn't God, Ian, but he is a force to be reckoned with. If he decides the knowledge should be shared with the world, he'll do it, with our full support.\"\n\nIan started to speak several times before shrugging and going back to work.\n\nMoshe took a week off to visit his family, flying back on a diplomatic plane with the gospel and letters of Mary Magdelene. We did the letters first, content that it would prepare the world for what was coming.\n\nWe got requests for interviews from National Geographic, Smithsonian, Time, and all the top tier magazines from around the world. Teddy pulled a hat trick, being on the cover of Time, BBC Historical Magazine, and National Geographic the same week. He also did the top talk shows in the U.S, Britain, Germany, and Israel.\n\nTo his credit, he never once forgot to mention us, and we were shown in a group photo in each magazine. They were fascinated when he told them originally there were seven of us, a Saudi, a Turk, an Israeli, an American, a Russian, a Syrian, and a Kurd, but two had passed and one went back to fight for the establishment of a new country, separate from the current government.\n\nWe also got interviewed, as a group, for BBC, and it was picked up by a network in the States, and shown on a prime time news magazine type show. Josh and Jess both called me, telling he about it.\n\nThe interview created a demand for more, and somehow I was elected spokesperson.\n\n\"You're American, Pete. The rest of us are from unsettled areas, and still have family there. And who knows who'll take offense at something we say? Your nationality leaves your family safe, so it's best for everybody.\n\nTeddy appeared with me in a couple, before becoming bored and leaving me with it.\n\nBad mistake.\n\n...\n\nI'd been interviewed by the BBC twice, and had officially been named a correspondent for the BBC History Channel on ancient Middle Eastern history. Maybe once every three months I'd get face time, but no matter what the subject I'd be asked about our research and if any papers would be forthcoming. I always deferred the questions to Teddy, whose answer was invariably \"Soon.\"\n\nTrevor had to travel back to the States for the new school term, even though he was hooked on what we did. I had a feeling the Dean would be sending me a sharp note when he resigned after the end of term. Teddy had already offered him a job, and we agreed he would be working with us.\n\nFather Ian was still around, showing no interest in leaving. He was about to wear out his welcome, in my opinion. He was more than pissed because we wouldn't let him examine anything until we were done with it and Teddy had published the results. I told him bluntly if he didn't like it, leave. No one was forcing him to stay.\n\nI took the opportunity to burn some vacation time and travel back with Trevor. I never told my family, and they were stunned when I just appeared. Jess was single and had a nice apartment, and she insisted I stay with her. She called Josh and Jo, making plans for a nice dinner sometime in the next few days.\n\nJess had takeout delivered, and after a nice meal she opened a bottle of wine, and seemed very anxious about my opinion of it.\n\n\"It's good, Jess, really good. The taste is pleasing, and I suspect there's not much alcohol in it. It's an excellent table wine. Why are you asking?\"\n\n\"Because my boyfriend made it, at the family winery. I wish he could be here to hear your opinion.\"\n\nI'd noticed a few things, razors and a man's deodorant in the bathroom, magazines geared to males on the coffee table, and the fact that she kept her bedroom door closed.\n\n\"Where did you banish him to? Really, Jess, you're an adult. You really think I don't remember what young people of the opposite sex do with each other? Call him and tell him to come home.\"\n\nAfter going about eight shades of red and stuttering, she told me they had been together for eight months and it looked really serious. She made the call, assuring him it was all right, and he didn't have to spend the night with his parents. He was there in less than thirty minutes.\n\nHe was tall, good looking, quiet until you got him started on subjects he was passionate about, like Jess and wine making. He promised me a tour before I had to return home.\n\nI woke up around two, hearing familiar noises coming from her bedroom, and her trying to keep him quiet. I smiled and turned over, out like a light in just a few seconds. When she asked me how I slept I told her I though she had mice, because I heard little squeaks around two.",
        "Miles choked on his coffee and Jess flamed red, before I grinned. \"Then again, it might have been sounds of passion from two people in love. Let's go with that. I hate mice.\"\n\nWe went to the vineyard, acres of grapes on rolling hills, the leaves shining after an early rain. He showed me the labs, the holding rooms, large casks stacked almost endlessly on racks. He took us to the tasting rooms, where his uncle and sister were pulling samples, and we tasted a few. Most were quite pleasing, but a couple I didn't care for. Apparently I didn't like dry wines.\n\nIt wasn't until we walked the fields that he truly looked happy.\n\n\"Let me guess, you're the farmer in this operation, right?\"\n\nHis smile was his answer. \"Yes. Celeste and I are cross trained in all aspects of the operation, but her degree and inclination runs to the inside of the business. She'll bury herself in the lab for hours, testing and analyzing. That hill over there is one of her experiences, bringing in peat and mushroom compost to replace chemical fertilizers. Her first vintage will be released this year, and tastings have gone extremely well. Most of our stuff is casked in French oak, but hers is in specially made casks of oak from our property. That was my one contribution to the experiment.\"\n\n\"My uncle watches the inner workings, and I work the land. We know have four different varieties of grape, each producing a distinctive taste. These vines are my babies, until my real ones come along.\"\n\nJess colored a little, and I figured I'd be paying for another wedding soon. I got Miles alone a few hours later, and gently probed him on his intentions. He told me enough that I told him not to pick the ring until he talked to me first. I explained I had a good relationship with a top flight jeweler in Tel Aviv, and could get him the same deal I got for Jack, giving him his number and telling him to call, and Jack would explain.\n\nI did a guest lecture at my old university, that turned into an event so large it had to be held in the campus auditorium. I talked about our luck in getting to translate the scrolls and books, and what we had learned in general so far. The question and answer session was fun, even if there were hard questions.\n\n\"Do you really think that you held in your hands a letter written by Jesus Himself?\"\n\n\"I couldn't tell you. I can only tell you what I transcribe. There is a strong argument that Jesus was illiterate, but it talks in the Bible of Him in synagogue reading from the Book Of Isiah, and most Hebrew boys of the time were taught at least the basics.\"\n\n\"What do you think of the letters from Mary Magdalene? If it is her, of course.\"\n\n\" Even if it isn't her, I think they echo a common complaint through the history of mankind. She's disturbed because she can't break in to the 'boy's club' that the Apostles were. Remember, it was a much more male dominated society than it is now, and still today, many women can't break the 'glass ceiling'.\" It went on for a bit, and I enjoyed the give and take for the most part, until I told them this would be the last question.\n\nA man of Middle Eastern appearance stepped up to the microphone, holding a paper. \"Is this true?\"\n\n\"Is what true?\"\n\nHe held the paper higher, and the closed circuit television system in the auditorium zoomed in on it. I felt the earth crumble beneath my feet.\n\nIt was a newspaper run by Al-jazeera, in English. The headline read: INTERNATIONAL THIEVES AND TERRORISTS REVEALED. BEHOLD THE INFAMOUS GANG CALLED S7!\n\nIt was all seven of us, in pictures made to look like mug shots. I read the article later and had to say it was pretty accurate up to a point. After the bare facts, it veered into some pretty wild accusations, that would have had us operating for at least a dozen years, with claims we had raided holy sites we had never been to.\n\nOf course, I had no comment and got off the stage as quick as decently possible. I called Maddy immediately. She was beyond pissed.\n\n\"Seems our buddy Bob did a little horsetrading, and shared a little information he wasn't entitled to. The intelligence community is up in arms, and his name is mud to us. I see an early retirement for him. He thinks you'll seek protection now, and he can do what he wants.\"\n\n\"You tell my ol' buddy Bob to come and see me, and we'll discuss who needs protection. I'd love to show him my collection of weapons, especially the Makarovs.\"\n\n\"Pete!,\" she said sharply, \"calm down. We'll figure something out.\"\n\nI called Jo and cancelled the family dinner we'd planned. She was upset that I'd cancelled, but even more upset over the reason why. \"Are we in danger?\"\n\n\"I doubt it, Jo. We were separated and later divorced while all this was going on, and our parting wasn't pleasant, at least on paper. I'll make sure you guys are safe. If it gets bad, and a total stranger comes up to you and says, say, \"I hear you make a really good apple galette\", you'll know he's from me, and you need to do what he says. Understand? Just in case, ask him if he thinks it has too much cinnamon in it, and if he, or she, says there's no such thing as too much cinnamon, they're on the level.\"\n\nThere was a little humor in her voice when she answered. \"Really? Our lives might be in danger and you're thinking of my pies?\"\n\n\"They were damn good pies, Jo. And it's not all that I miss. Be safe, and watch out for the kids. All this is probably for nothing, I'm just being paranoid more than likely, but better safe than sorry.\"\n\nThe next day I got a delivery. An apple galette. I opened it and inhaled deeply, pleasant memories of when the kids were small and I'd come home to one of the rare times Jo would be home before me, the smell of the apples and cinnamon permeating through the house bouncing around in my head.\n\n...\n\nI came home to discover we'd all moved. Teddy had put us in a series of connecting apartments, sitting high on a hill. After we settled in he took me to the side.\n\n\"These apartments were built on top of an old monastery. Underneath your feet is a series of interconnected tunnels with several exits. The doors are behind the master closet walls, cleverly built to slide open. If it gets bad, if they come after you, this is your way out. Tell no one, understand?\"\n\nI did. We all spent a little time familiarizing ourselves with the tunnels. My favorite exit was into a drain tunnel that emerged four hundred yards from the apartments, in a small wood, allowing you to go in any direction under cover.\n\nWe got a new set of neighbors when Anatoli's wife, realizing when the article came out she and her children might be in real danger because of her location, fled to England and called Teddy. He brought them to us, and we welcomed them. Her son Josef was ten, and his sister Tatiana was twelve. None of us could reasonably pronounce her name but me, so they called her Mrs. Baranov. She just laughed and told us to call her Sasha. \n\nThey integrated slowly, but I think the fact that we adopted her kids helped a lot. They bonded with the children of Moshe and Ruth, another boy and girl set roughly the same age. Sherry and Fatima treated them like nieces and nephews, getting especially close to Tati. That left Josef with me, and remembering Josh, I took him out, often with Moshe and his son Adam, hiking the highlands, boating, exploring castles and ruins. Adam was in a soccer league, and Josef was a fine goalie in his home country. His nickname was 'glue', because the ball just seemed to stick to him every time the opponents tried to score. Three games in he was given a shot, and the old goalie took a field position. Both boys were happy, the first goalie didn't like the position, much preferring being a fielder.\n\nOur whole group would make a point to be at every game we could, shouting encouragement in a mix of languages, just for fun.\n\nThree months went by, and Polly was in her last days of pregnancy. Jo had shown up two weeks ago. Jack told me she was in town, so I wasn't really surprised when she showed up at my door.\n\n\"Hello, Jo.\"\n\n\"HI Ja..I mean Pete. Surprised to see me?\"\n\nI motioned her in, got her a drink. \"Not really. Jack told me when you arrived. I'd been meaning to call but things have been a little hectic.\"\n\nShe grinned. \"You always were one for understatement. How are things, really?\"\n\n\"Well, let's see. I have two terrorist groups offering a million dollar bounty for my head. The Catholic Church isn't quite that bad, but I'm pretty sure they don't love me. We've got the government of three countries demanding we give what we brought out back, and we weren't even in one of those countries. And you probably haven't heard this, but we have a group who are suing us for DNA samples from the Jesus letter. We use gloves, always, but damn, that letter has been handled off and on for an estimated two thousand years. There could be hundreds of DNA markers on them, Even if they sort them out, how will they determine which marker belongs to the Son of God? Even them, are they going to test for descendants? How, and more importantly who would they test? Rumor has it they want to test all the royalty of Europe and the Middle East, and all the Popes entombed in the Vatican, as well as the living ones past and present, and the mega-rich of the world.\n\nTo give you a short answer Jo, my life is kind of a mess right now. I'm not even sure it's a good idea to be around my family, but I don't think all the terrorists in the world could keep me from the birth of our first grandchild. I'm sure it's a girl, I can just feel it. What do you think?\"\n\n\"Oh, it's definitely a boy. Either way, we'll know soon enough.\" She relaxed, and we drank a brandy or two and caught up with what was going on in our lives.\n\nShe was a senior partner in her firm, but said some surprising things about her career. \"I'm staying with the firm for two more years, then I'm retiring. You left me in good shape financially, and even though you never cared to know, I have a pretty hefty retirement fund. My parachute won't be golden when I go, but it will be pretty high quality silver.\"\n\n\"I'm surprised you'd give that up after all the years it took you to attain it. What are you going to do, start your own firm?\"\n\n\"I'm joining a pro bono company that works largely with Amnesty International. Most of the lawyers are part time, so I'm to be managing partner when the old one retires, right before I join them. It comes with a modest salary that I'm going to refuse. I'll have more than enough to live on comfortably for the rest of my life, so I don't need the money, they can plow it back into the agency, so we can help more people.\"\n\nI was truly surprised. All she'd even wanted professionally was hers now, and she wanted to give it up? \"Why?\"\n\nShe blushed and hung her head a little.\n\n\"Doing pro bono work was always part of my dreams, I just let it go while I chased success. The companies I worked for discouraged things like that, because it took focus away from working to make them richer. I guess I learned first hand how it was to have your dreams taken away by someone who thinks their agenda is more important.\"\n\nI frowned a little, and started to speak. She held up her hand. \"I'm sorry honey, I know it's a weak comparison. The only good thing that came out of our divorce was forcing me to look at myself unfiltered. You were a lot more right than you can imagine about what I had become. I was a self centered, entitled bitch who molded her world to her specifications, with you and in business. It took the shock of you divorcing me to see that. I realized that even though I was satisfied, I wasn't really happy, and hadn't been since I was that idealistic sophomore in college, ready to make the world a better place, and desperately in love with you.\"\n\n\"Jo, I...\" She held up her hand.\n\n\"Please let me finish. When I apologized to you at the wedding, I was truly sorry. But it's taken the last couple of years of true self inspection to really understand the hurt I caused you. It's too late for me to do anything about you, but I can fix the rest of my life. So, the minute I qualify to get the severance I need, I'm through with the corporate world, and I'm going to go try to get some of my soul back. I just wanted you to know, honey, that I'm not a completely lost cause.\"\n\nI really didn't know what to say. Was the Jo I fell in love still in there some where? Or was she still the same manipulative bitch underneath, pushing my buttons to herd me along in the direction she desired? A bit of anger surged forward but I pushed it down. If she wanted to ride the byways of England naked while singing in Greek, it wouldn't be my concern. I wasn't bulletproof, but her actions had me develop a pretty thick hide.\n\nJo, perceptive as ever, saw the look and sighed.\n\n\"I don't expect you to believe me, but it doesn't matter. We gave up, I, gave up on that expectation a few years back. All I can ask is that you judge me by my actions in the future. Now, let's talk about something else we know is going to happen. Miles and Jess. You know he's here with her, and it's all she can do to keep his attention on Polly and Jack. She's afraid if she turns her back he'll be through the tunnel, headed for French wine country.\"\n\n\"Teddy has some good friends in the Bordeaux region. Maybe he can arrange a private tour.\"\n\n\"You would be his hero, but wait until after the baby comes.\" She yawned, and rose.\n\n\"I have to say I really enjoyed the evening. But I'm still adjusting to the time difference, and find myself very tired. Would you call me a cab?\"\n\nI looked at the mantle clock, surprised to see it was almost three in the morning.\n\n\"I'll be hard to get a cab this time of night, Jo. Why not stay?\"\n\nA parade of emotions went across her face, including embarrassment. \"I couldn't possibly. What would the children think?\"\n\n\"All sorts of lewd and lascivious things, none of which would be true. I'm offering you a bed, Jo, not a bed with me in it. You're wobbling now from the brandies and exhaustion. Come on, I'll show you the guest room.\"\n\n\"I don't have anything to sleep in,\" she protested weakly.\n\n\"Sleep nude. It never bothered you while we were together. I can give you a shirt, if you want.\"\n\nIn short order she had changed into my biggest soccer tee, asleep almost before her head hit the pillow. I stayed up for a bit, thinking about the past. I checked on her before I slept, and she was smiling on her sleep.\n\n...\n\nThe smells of apples and cinnamon woke me the next morning. I stumbled out to find Jo in the kitchen, bustling happily. She gave me a big kiss on the cheek, thanking me for letting her stay.\n\n\"Breakfast is in the oven, warming. I'm surprised you have such a well stocked kitchen. I'm making the galette as a thank you. Now let me work and enjoy breakfast.\"\n\nI ate, enjoying something that I didn't have to cook for a change, while she finished her pies. Jo was still in my tee, and when she bent over to place the pies in the oven the shirt rode dangerously high on her thighs.\n\n\"Are you wearing panties?\"\n\nIt came out before I thought, and I flamed red.\n\nShe turned, grinning at my embarrassment. \"No, and as you can plainly see, I'm not wearing a bra either. It feel so good to let the girls free for a change. You don't mind, do you? If you get a flash, well, it's not like you haven't seen it all before. In fact, if memory serves me, you used to enjoy it.\"\n\nI grinned. \"Yes I did. Even now, at our age, you still turn heads.\"\n\nShe flushed at the compliment, before smiling. \"And you've become more handsome. You've acquired, I don't know, an air of confidence, and when you're truly angry, your eyes tell everyone in the room that they're looking at a truly dangerous man. It makes the men nervous and the women antsy. How come I never saw that while we were married?'\n\n\"Probably because it wasn't there until after we parted. Life changed me Jo, and I can't put the genie back in the bottle. It doesn't mean I don't still love my family and friends as deeply, it just means I'm more aware of how tenuous life can be. How easily things can go wrong and cause pain. And I'm not just talking about you and I, more about my life after us.\"\n\nTears welled up and she moved to hug me, then hesitated. I took the decision away from her by opening my arms. She held me so tightly it was as if she was afraid I'd disappear if she let go, crying quietly into my shoulder. Finally she shook herself and stepped back.\n\n\"Pete, I...\"\n\n\"Shh. It felt really nice. Don't over think here. I'm glad you're here, Jo, really. I just don't want you to...\"\n\nShe put her fingers to my lips. \"Don't say any more. I know. Now, I have just enough time for a shower before the pies are done. Lots to do today. Sherry, Fatima, and Ruth have organized a baby shower, along with Pollys' friends. Wanna come?\"\n\n\"Let me think about that no. I'm taking Jack and Miles to the club, with Moshe and Teddy, to toast the husband. I'll try to see he's in reasonable shape when we return him.\"\n\nShe grinned as she walked out of the kitchen. I was refilling my coffee mug when she called out to me. I turned to see her naked and grinning. She tossed the jersey to me.\n\n\"Thanks for the loan of the shirt, Pete, It was really comfortable.\" She turned slowly, and I watched as her hips swayed slowly as she sauntered away. I looked down, and it was no surprise to see my robe tented. Damn, she was still hot!\n\n...\n\nWe had a lot of fun waiting for the baby. I'd taken two weeks of vacation, and woke up at four in the morning to someone beating on my door. The security lights had already come on, and the camera showed it was Jo and Josh. They rushed in when I opened the door.\n\n\"Let's go! Jack just called, her water broke and they're on the way to the hospital!\"\n\nI threw a pair of jeans and loafers on, struggling into a shirt as we went out the door. Miles and Jess were with Jack, along with two of the girls Polly worked with. Missing Jess, she had bonded with them.\n\nWe were in time, but just barely. Forty minutes later the nurse came out. \"Congratulations! You're all relatives with a brand new baby girl. You'll be able to see her in about an hour.\"\n\nJack came to us, still crying. He was hugged to within an inch of his life, while he babbled happily the whole time. We all trooped down to the nursery, where we oohed and ahhed over her. I felt something and looked down. Jo had locked down on my hand while the tears flowed. It just seemed the right thing to do, so I held her. The waterworks really started then.\n\nShe finally gathered herself enough to step back, and my mother took her place, soaking the other side of my shirt. Marie was standing, alone,in a sea of hugging so I pulled her into my other side, which surprised her no end. But she soon surrendered to the emotions in her heart, and hugged me back, adding to the soaking Jo had given me. I was gonna have to change shirts.\n\nWhen they had finally cried their eyes out, they both stepped back. Jo was standing there with her mouth hanging over, as were the kids. What the hell, if there was ever a time to bury the hatchet, it was now.\n\nJo reclaimed her spot murmuring into my chest. I lifted her face and looked in her eyes, asking what she said.\n\n\"I said I'm such a fool, and still a fool for you. Thank you, Pete, for being who you are.\"\n\nI didn't know what to say, so I stepped back and asked if anyone wanted breakfast. The younger ones were starved, so we all went except Jack and Jo. They wanted to be there at feeding time, to hold the baby. Josh told them we'd bring them something, and off we went.\n\nWe ate like starved dogs, apparently high emotion causes quite the appetite. The conversation was all over the place, but it kept coming back to the baby.\n\nJess was looking at Miles like he was the last double cheesburger at a weight loss convention. When the ladies did their joint migration to the facilities, Miles opened up. \"I called Jack about the ring, and he hooked me up with the jeweler. I can't believe what I'm getting for nothing. I can never repay you.\"",
        "\"Treat her right, love for the rest of your life, and we'll call it square. Oh, and if you happen to have a few children, I'll make you the same deal Jack has. Diamond earrings for the first one, a nice necklace for two, three and over gets her a really nice mother's ring in the right colors, all from you, of course. My name doesn't need to come up in any of this.\"\n\nHe just grinned while Josh hung on every word. \"You better have one in reserves, Pop, just in case.\"\n\n\"Already taken care of. No need to rush though. When you find her you'll know. I did with your Mom. One look at that skinny little spitfire protesting against the inequality of the world, or doing leg work for a pro bono case she was helping a lawyer on, and I knew.\"\n\nMiles and he were looking at me wide eyed, and I heard a gasp from behind me. I turned to see Jess with her hands to her face. \"What happened between you, Daddy? Mom refuses to talk about it, she just says it's her fault. When did you stop loving her?\"\n\n\"People change, honey, and sometimes you don't like what they change into, and just so you know, just because we're no longer together doesn't mean I don't love her still. But the trust was broken beyond repair, and I'm doing a Forrest Gump here. That's all I have to say about that.\" \n\n...\n\nWe all got to hold the baby. When I got her they almost had to tug her out of my arms. She was perfectly formed, and I saw a string of broken hearts in her future. Maybe I'd need to borrow the shotgun from Fatima in about fifteen years.\n\nWe let the happy couple rest and reconnect, and I took everyone else to France for a holiday. Teddy had made introductions, and we were the guests of a French Count, at his estate. His vineyard was huge, and Miles was like a kid at Christmas. The first day was filled with all things wine. Miles talked to everyone from the laborers to the business manager., soaking up knowledge like a sponge. We literally had to drag him out of the fields.\n\nThe Count was about my age, tall, tanned, and he had the aristocratic thing down pat. All the women were meant to be awed, and the males were supposed to realize they were in the presence of a superior man. It didn't work out like that at all. We were Americans, and it took more than a title to impress us.\n\nThe ladies soon noticed the undercurrent around the table, and a few minutes later Jo was smiling. I caught a glance at her and had to turn away before I laughed out loud. She had sized him up and he didn't stand very tall. After about twenty minutes of tales from his glorious ancestry, Jo asked a simple question.\n\n\"Tell me, Count, what contribution have you made to your glorious lineage? Tell us a tale of YOUR daring and courage.\" She batted her eyes and seemed breathless as she waited his reply.\n\nHe blustered a bit before shrugging his shoulders. \"Alas, it pains me to tell you there hasn't been an opportunity in my life yet to test my mettle. Surely you know what that is like, madame. After all, your husband is a professor and researcher, from what Teddy told me. Not much of an opportunity for adventure and battle in that field.\"\n\nHe was smirking at me, and was shocked when he turned and saw Jo trying to hold her laughter. When she got her breath back she agreed.\n\n\"I'd rather have a live professor than a dead adventurer, am I right ladies?\"\n\nMom and Marie were also holding in laughter as they agreed, and the Count, knowing there was a joke there he wasn't getting, changed the subject to wine, boring most of us to tears.\n\nIt soon became pretty apparent he didn't know what he was talking about, but we were polite as he droned on until it was time for bed. If his stories were correct, his ancestors had practically invented the grape.\n\nJust when I thought I might actually kill him if he told one more boring story of his genetic superiority, he announced that his butler would show us to our rooms. Mom and Marie had decided to share a room, and we dropped them off before continuing down an enormous hallway, stopping for Miles and Jess, then Josh, finally ending up at the end of the hall.\n\n\"The guest suite.\" said the butler, expecting us to be awed. One room? I started to speak but Jo smiled and said she was sure it was lovely.\n\nI started to protest after the door closed but she shut me up. \"Suck it up, Pete. We slept together for almost twenty-five years, one more night isn't going to kill you. Besides, I have the feeling if I was alone, I'd have a late night visitor, extolling the joys of being allowed to bask in his presence. Now let's go to bed, I'm tired.\"\n\nShe disappeared into the bathroom, coming out later in a gown that hit just above her knees. It was almost transparent and I could see the matching panty underneath. She saw me and twirled, grinning.\n\n\"I like this gown. It's really comfortable. I didn't know we would be sharing, but I don't care. If you see something different, feel free to comment on it.\"\n\nShe flounced as much as a woman of her age could over to the bed, slipping under the covers. \"I'll probably be asleep by the time you finish your shower. Try not to be too loud, please.\"\n\nShe was indeed asleep when I returned to the bedroom, right in the middle of the bed. Apparently she now slept like a rock, because it was all I could do to get her moved over enough to get in, and I was right on the edge at that. She rolled over, dragging me along, until we were spooned together. I must have been exhausted myself, for I too was asleep within minutes.\n\nI woke a few hours later with Jo pushing her butt into me, and I was reacting accordingly. Feeling me grow, her hand snaked around, gripping me tightly. Just as I was about to speak she rolled over and I don't believe I've ever experienced a better kiss. By the time it was done we were both gasping. She pushed me back and mounted me, her fingers on my lips.\n\n\"Hush, Pete. Don't overthink this, all right? Just let it happen.\"\n\nApparently her panties had evaporated sometime in the night, because they were gone. She gripped me as she slid slowly down, until she was fully seated. Letting out a satisfied sigh, she started rocking lightly, grinding into me as she rotated her hips, then she'd bounce rapidly for a few seconds before returning to her slow rotation. I held out for about five minutes before I rolled her over, pumping slightly faster and with more force. As soon as she started moaning I stopped, slipping, slowly, gently, back and forth.\n\nThat lasted a few minutes before she locked her legs round me, hissing into my ear. \"Enough playing, damn it! Fuck me until I scream! Then go harder!\"\n\nI followed her instructions to the letter. She had been teased past the point of control, and I felt the gush of liquids as she screamed into the pillow. I got faster, slamming into her with so much force the bed was moving. She just managed to scream out her second when I flooded her. It had been a while.\n\nI flopped over to the side, and Jo immediately crawled on top of me, and started kissing her way up. nipping my nipple when she reached it, giggling as I jerked. She kissed my neck, nibbling to the point I thought she'd leave marks, before putting another full lip lock on me.\n\nThen she sighed and went to sleep. I let her lay as long as I could stand it and then gently slid her over, where she immediately snuggled to me and started snoring. I had to prod her to roll over so I could get to sleep.\n\nA couple hours later I woke just as she started riding me reverse cowgirl, pistoning harder and harder until I had to get a firm grip on her ass to keep her seated. It only lasted a few minutes, and Jo squealed as she joined me. Then she bounced up giggling and disappeared into the bathroom, appearing again in a different gown sans panties, with a warn cloth, which she used to clean me thoroughly. Jo giggled again as she bounced into bed, warning me.\n\n\"No more hanky panky, mister. Enough is enough.\"\n\nI started to remind her she was the instigator both times, but she was already asleep again.\n\nJo was not through with me, because I woke about seven to find myself engulfed to the root. It was warm, wet, and loving, and she refused to stop until I filled her mouth. That might have been an exaggeration, because I was pretty well drained from the night before.\n\nShe popped out from under the covers grinning, kissed my cheek, and dragged me to the shower. I thanked her for her kindness by wrapping my arms around her gripping one nipple firmly and proceeded to massage her to an orgasm that left her shaking and drained. To keep from screaming she'd bitten my arm to the point of drawing blood. We got out, dried, and started getting ready for the day. Dressed, she wrapped her arms around me as I shaved.\n\n\"We're not going to talk about this, ever. It happened because we wanted it to happen, and that should be enough. Now, get dressed, I'm suddenly very hungry.\"\n\nShe did managed to smack my butt with a wet towel as she walked out grinning.\n\nThe Count was in a definitely bad mood at breakfast. Miles, Jess, and Josh were joining The Count's nephew for a tour of some neighboring vineyards, on horseback. They were packing a picnic and couldn't wait to get started.\n\n\"Perhaps you'd like to tour the East Wing before lunch. It has several antiquities you might enjoy.\"\n\nIt was less a request than a demand, but we followed the Count, more to keep the peace than anything else. Say what you will about the Count, he did have some pretty famous ancestors. There was a photo of a small man, sitting at a desk, with a pistol in plain sight. The same pistol was in a presentation case beneath the picture.\n\n\"My uncle,\" said the Count, proudly. \"He was a radio operator for the Underground. He was exposed, and as they closed in me took his own life, to keep from betraying his compatriots.\"\n\nThe next case held a full uniform of a WW1 French captain, complete with gas mask. The Count explained it belonged to his great grandfather. There were several medals, some quite high, on the breast of the jacket. We continued onward until even I was bored, until at last we got to the end.\n\nI have to say it was impressive, even by my standards. A full suit of armor and white tunic of a Knight Templar. I was amazed at how vibrant the red on the tunic was, even after all these centuries.\n\n\"My great uncle, thirty one times removed. He was one of the last nine burned at the stake, wiping the Knights out completely. All his belongings were carefully hidden away. This estate it the only thing left of his once vast holdings.\"\n\nThe Count beamed as I admired it. Just beyond it was a display case with a Knights' sword and six scimitars, spoils of battle no doubt. He reverently unlocked the case and handed the knight's blade out.\n\nIt was a standard Templar sword, just a little over three feet long from pommel to tip. You could tell it was much used by the wear on the handle, and the nicks on the guard from the swords of enemies. The blade, though, was in excellent shape, true to balance and still sharp.\n\nThe scimitars were a mix, and I pulled out the longest, over five feet, much less curved than the others. I knew enough to know it was Polish, and wondered how it came into the collection. Testing the balance, I went through the first few moves of the Persian Manual Of Arms, reveling in the feel.\n\n\"You're familiar with this weapon?\"\n\n\"I am, Count. I actually own one, probably made in Syria. It's shorter and the blade is more curved, but still a very effective weapon.\"\n\n\"Come out into the garden, examine it in natural light.\"\n\nIt was more a command than a request, so Jo and I shrugged and followed him. He turned and grinned, going through a series of moves.\n\n\"Well done, Count. You've obviously trained.\"\n\n\"Not to brag, but I'm considered expert by my peers. Care for a little match?\"\n\n\"Not a good idea with naked swords. Do you have practice swords? I wouldn't mind the exercise.\"\n\nHe smirked. \"Come on, I'll take it easy on you. Or are you afraid?\"\n\nI grinned. \"That's it exactly. I'm afraid.\"\n\nJo looked at me in surprise. \"Afraid? Really? After...\"\n\n\"Enough, Jo. And what I'm afraid of is hurting him.\"\n\nHis smirk became a snarl as he heard what I said.\n\n\"Do you think a mere commoner could best me? I've trained for years. I guarantee I would have you unarmed and begging at the tip of my sword in less than a minute. But please, hide behind your wife and excuses. I'm surprised though. I thought the leader of the infamous S7 would welcome such a challenge.\"\n\nJo flared up. \"You'd best be afraid. You have no idea who you're dealing with. He's...\"\n\n\"Just a professor of ancient languages and a researcher. But, Count, I have trained, in several styles. The one I'm currently studying is pretty vicious. There are no half moves. Every one is designed to kill as quickly as possible. Never underestimate your opponent.\"\n\nHe was a stubborn bastard. \"Come now, I'm sure you can maintain discipline. Tell you what, if you best me you can keep the sword.\"\n\nHe must believe in his heart he could win or he would never have made the offer. Still, I smelled a trap.\n\n\"And if I lose?\"\n\n\"Ah, if you lose, I get to enjoy a night with your wife. I'll try not to ruin her, but once she's been with...\"\n\nJo cut him off. \"It's a bet, you condescending bastard! Honey, try not to hurt him...too badly.\"\n\nWe were both stunned, but the Count strode to the middle of the stone patio and raised his sword.\n\n\"En garde!\" \n\nI just stood, the scimitar held low, waiting.\n\nFinally he attacked. I'll give him his due, he was good. I spent the first couple of minutes defending, looking for a weak spot. Apparently he didn't have any. I finally countered, and while he was hard pressed, he defended himself well. We went back and forth across the patio several times.\n\nIt wasn't until I changed to my new style, the Phillipine form that was the basis for the knife training the Russians, U.S., and the Israeli taught their elite forces, that momentum shifted decidedly in my favor.\n\nHe thrust, and I deflected the sword, twirling around until I was behind him, leaving his back exposed. I grinned as I brought the flat of my scimitar across his backside as hard as I could. That was gonna leave a mark.\n\nThe Count literally roared in rage and tried his best to kill me, even nicking my arm pretty good. I think Jo screamed at that point, but I was so focused it barely registered. Once again he over committed and I brought the flat of my sword hard against his hands, forcing him to drop his weapon. Instantly I had the blade to his throat. \"I think, Count, that the contest is over. Well fought.\"\n\nJust to be sure, I kicked his saber away and turned my back. Jo was smiling until I was almost to her when her expression changed to one of horror. She opened her mouth just as I heard the footsteps behind me. Not bothering to turn, I dropped like a rock.\n\nI didn't make it all the way down when it felt like my head exploded. I lay there, stunned, as the Count grinned down at me. \"I practice Savate, and wear a white sash. I'm going to enjoy kicking you to...\"\n\nThat was all he got out before Jo hit him with a ceramic vase, one of many placed around the patio. It broke, and he dropped. He fell beside me, and before either of us could move, people started running by me. \n\nThe kids were just starting their ride when they saw us on the patio. They just watched in wonder until he kicked me from behind. They immediately abandoned the horses, and Josh and Miles dragged the Count away from me. Jess was right behind them, and before anyone could stop her she'd nailed him in the balls with her riding boot. Twice. He threw up and passed out. His nephew pulled her off to keep her from killing him. Miles and Josh immediately got off the Count, and started towards him.\n\n\"STOP!\" I yelled with just enough authority to still the whole crowd. His nephew had let go of Jess and was kneeling beside his uncle.\n\n\"Perhaps you'd like to call a doctor,\" I suggested quietly, once I had his attention.\n\nHe shook himself, gathered his thoughts, and made a call. Forty-five minutes later the Count was being wheeled towards an ambulance. I walked up as he was being loaded and bent down so that only he could hear me.\n\n\"We both got a valuable lesson today, Count. Never turn your back on a live enemy. I for one will not forget. After you've recovered, if you want a rematch, you know how to get in touch with me. But I'm afraid it might be a little harder for you if my back isn't turned. You talk of the honor of your house, but I bet right now they're all rolling in their graves, especially the Templar. Your mettle was tested, sir, and you were found lacking. I thank you for your hospitality, but I think we'll end our holiday a little early.\"\n\nThe doctor looked me over, put three stitches in my arm, and looked at lump on the back of my head. He told Jo to keep an eye on me for a few days, giving her a list of things to watch for.\n\nI sat in the back, dozing fitfully while Jo kept an ice pack on my lump all the way back to England. I was definitely getting too old for this.\n\n...\n\nWe visited with Jack and Polly, drooling over the baby for the next three days, until the kids went home. Jo stayed another three weeks, in the house I procured for her, finally going home when her vacation ran out. We enjoyed several nice dinners together, but there was no repeat of what happened in France. She hugged, kissed and cried all over each of us until she almost missed her flight.\n\nTwo weeks later she got a call from Maddy, telling her she was forwarding something from me. It was the scimitar. I got a warm call and a nice thank you.\n\n\"I'm hanging it over the mantle, and smile every time I look at it, and tell the whole story to anyone who asks about how I got it.\"\n\n\"Seriously? Nobody will believe a story like that.\"\n\nJust before she hung up, she told me to go to Youtube and check out a video. I looked it up, to see almost the whole sword fight, including him hitting me from behind and Jo clobbering him with the vase, captured on the phones of my children and Miles, They spliced together the best shots, and released it under the title \"COWARDLY COUNT GETS HIS ASS KICKED BY AN AMERICAN COLLEGE PROFESSOR!\"\n\nBy the time I saw it there had been a little over one million hits. The BBC got hold of it, and wanted me to do an interview while they played the clip. I declined, saying it was just friendly competition that got out of hand. The Count was humiliated, and tried to sue me, but the legal system in France dissuaded him. One lawyer put it best.\n\n\"What, exactly, will you be suing him for? If you do find a reason, the press will be all over it, playing the clip almost every time they broadcast. How many more millions do you want to view it?\"\n\nTeddy gave me hell. \"You rude American! No breeding at all. I swear, what shall become of you?\" Then he laughed, and said he deserved it. \"Insufferable bastard, really. I only tolerate him because my brother's company distributes his wines. Good on you for teaching him a little humility.\"\n\nThen he got down to business. \"Our paper is done on the Mary Magdalene letters. That should stir the pot a bit.\"\n\nApparently Mary and Peter did not get on well, each jealous of the position the other held. She was less than flattering of his abilities in at least three of her letters. Her gospel would have been legendary because of the way she thought women should be treated in this new religion, holding much larger roles in important positions, including ministering. If it was the same Gospel the church held, no wonder it never saw the light of day.\n\nIan was almost incoherent when we finally let him read it. \"No bloody way will I let you publish this!\n\n\"Well, Ian, it's a good thing you don't have the authority to stop us, now isn't it? Why are you so afraid?\"",
        "He spouted some asinine rhetoric about traditional roles in the church.\n\n\"Oh, I understand, you don't want the least hint of independence in women. You would prefer they remain in subservient roles, am I correct?\" \n\nBefore he could start about me being an enemy of his religion I stopped him cold.\n\n\"Look, the Catholic Church has done many great things since it's inception. But it's done a lot of bad things too, just like all major religions. When you get to the point that religion is business, you lose sight of faith. To preserve the status quo, you get rid of boat rockers.\"\n\nHe opened his mouth but I was on a roll. \"You got rid of married priests and female ministers around 500 C.E., give or take. Realistically, how is celibacy working out? Read a headline lately? I understand the politics of celibate priests, but human nature can't be overridden. After all 39 of your Popes were married. When did the church decide to enslave women, exactly?\"\n\nHe was almost screaming. \"We don't enslave women!\"\n\n\"Galway Laundry all the way to 1965. You enslaved young women to provide free labor. And what was their crime? All someone had to say was that they suspected them of impure thoughts and in they went. The only way out was to become of legal age, or die. Oh, there was another option, the family could buy the girls back. A fine example of a benevolent church, don't you agree? When the whole mess came out, despite enormous pressure, the Irish government decreed the victims couldn't sue the Church for slavery and unlawful imprisonment. Wonder who influenced that decision?\"\n\nI knew all this because I'd met a seventy year old woman who had been a victim. She was held for three years, and still had scars on her hands from the work she had to perform. She cleaned my flat, as well as others to make ends meet. I always gave her a generous tip every month, and a weeks pay at Christmas.\n\nIan and I were nose to nose by then. Sherry and Fatima got between us, and dragged me outside to cool off.\n\n\"Calm down, Pete. It doesn't matter what he says, he can't influence Teddy. The truth doesn't always win out, but in this case I'm sure it will. Now calm down, and let's go back to work.\"\n\nThey talked me down, and I was just going in when it happened. We'd gotten complacent as the months went by and no harm came to us. This even as the rewards for our deaths went up. I was worth three million now, the girls, Moshe, and Said two. \n\nSo I didn't expect the attack. They looked like any other college student on campus, dressed in jeans and sweatshirts. As they reached us they both pulled out knives, screaming about faithless whores and foreign devils, and attacking. Sherry was knocked down instantly, and the man stood over her knife in hand. The other was after me.\n\nHe had no talent or skill at all, swinging the blade clumsily. I deflected the blow, and crushed his windpipe with the other hand. He went down, choking and clawing at his throat. I screamed at the other and he looked over before turning back to Sherry. His last vision on earth was Moshe as he shoved the Israeli issue commando knife through his throat, hard enough to sever his spine. We'd been gone so long he came out to check on us. Back to back, we looked around wildly, but there was no one else.\n\nHeath sorted it out later. They weren't particularly militant or religious. They were broke, living in a slum, unable to support themselves. It was strictly for the money. \n\nUrban England is literally saturated with closed circuit cameras, to the point that when people wanted to protest they wore masks to conceal who they were. The one on our building and the one on the building across from us the caught whole thing on tape. It was very disconcerting to watch yourself kill someone, even if it was because you had to.\n\nOf course, security tightened around us. It was a somber group for the next two months, even our work gave us no pleasure.\n\nThen word came to us that our old friend Said had been killed, murdered by his own troops for the reward. From what we found out, they tried to take him alive because there was a bonus in it, but Said, ever the warrior, refused to surrender.\n\nHis commander, furious, executed the ones he could catch, publicly.\n\n...\n\nTeddy called us together. \"I know there are tons of research and translations to do, and you're the best at what you do, but the decision has been made to shelve the project, at least for awhile. As important as it is, it isn't worth the life of a single one of you.\"\n\n\"What will happen to everything we've collected? Do you still intend to publish our work?\"\n\n\"Most definitely, Pete. Never doubt that. And we'll translate and publish every thing else, but not right now. I'm putting you all on a one year sabbatical. Go home to your families, try to lead normal lives for awhile. When we deem it safe, we'll start right back up. Now, I know it will take a month or so to finish up some odds and ends. But you WILL take this time, let things cool for a bit.\"\n\nWe were closing out the last of our research when Teddy called, commanding us to come to London in four days. He also told us to dress in our nicest clothes. We all wondered why until the car we were in went through a series of security checks and delivered us to the front of Buckingham Palace.\n\nTeddy grinned as he welcomed us, hurrying us along. Suddenly, we were in the presence of the Queen. Despite myself, I was impressed. She was a sharp old bird, asking a few probing questions before praising us for our work, and presenting each of with a letter of merit, while the official photographer snapped away. I still have the photo.\n\nWe were about to leave when Teddy took me to the side. \"Stay, please. I have something urgent to discuss.\"\n\nHe led me down several hallways, stopping in front of a door guarded by two very serious looking men. Teddy showed his credentials as well as mine, and the door was opened. I looked at Teddy.\n\n\"I'm not going in, Pete. He was very specific in asking for you alone. And Pete, please, keep a civil tongue in your head.\"\n\nI knew who he was the minute I saw him, and wasn't very surprised to see Ian in the room. It was the Pope. He was here on an official visit, and had sent word through Ian that he would like to see me, and I had politely declined, which sent Ian into fits. \n\nThe Pope actually grinned. \"Hello, Mr. Trammel. To quote a different religion, If Mohammed won't come to the mountain, well...\"\n\nI couldn't help but smile back. \"Good afternoon, your...\" I looked at Ian. \"Your Holiness!,\" he hissed, grinding his teeth.\n\n\"Well, good afternoon Your Holiness. I'll shake your hand, but I'm not kissing any rings.\"\n\n\"Fair enough then,\" he said, rising and offering his hand. I thought Ian was going to pass out. \"Walk with me, Pete, if you would.\"\n\nWe walked out into a private garden. He turned, still smiling. \"Relax, please. I just wanted to meet the man who is going to make my life interesting for years to come. Poor Ian hasn't slept well since he met you.\"\n\n\"Ian is a good man and an excellent researcher, Your Holiness, even if he is a little rigid in his interpretations sometimes.\"\n\n\"I'm sure he'd be shocked to hear you say that. He thinks you hate him.\"\n\n\"Not at all, although I do admit to stirring him up once in a while, for fun.\"\n\nPleasantries out of the way, he turned to the subject at hand.\n\n\"How revolutionary is it?\"\n\n\"Generally, not as much as you'd think. The letters are interesting, exposing the Apostles and Mary as somewhat ordinary people aside from religion. Mary REALLY didn't like Peter, and wasn't wild about some of the rest. Apparently they all weren't fond of Judas, because he controlled the money, and wasn't above allowing himself a few luxuries the others didn't get. And Peter returned the feelings Mary had for him.\"\n\nThe Pope nodded, before asking the big one. \"And her Gospel?\"\n\n\"Probably won't set well with the Church. A lot of it is just common sense, but some of it, well, let's just say Ian won't be the only one in the Church who loses sleep.\"\n\n\"And you intend to go forward with the publication?\"\n\n\"Absolutely. Once it's out, you can choose to acknowledge it or ignore it, but millions will read it. I'd advise you to have your priests ready for some hard questions.\"\n\nHe sighed as we walked back inside. \"So be it. If it's the will of God that it come to light, it will. Thank you for meeting with me, Pete. Be careful and go with God.\" He stuck his hand out and I shook it, and the audience was over.\n\nI thought about it on the way home. He was a nice guy, had lived an interesting life before becoming a priest. Heck, he was even a bouncer for a while, so he was pretty grounded in what real life was like. Maybe he would use our information to better his Church.\n\nI was really surprised two weeks later when Ian presented me with a small gold cross, a present from the Pontiff, blessed personally by His Holiness. There was also a picture of us shaking hands. I didn't remember a photographer. To Ian's surprise, I donned it immediately, and still wear it. Despite my beliefs, it couldn't hurt. I put the photo beside the one with the Queen.\n\nWe decided as a farewell gesture to turn some of the artifacts back over to the countries that had stable governments, regardless of what they did with it. We had the knowledge they contained, and that would be enough.\n\nWe had packed carefully, and had decided that all of us would go, our last act as a group for a long time. Teddy had made all the arrangements, and all we had to do was show up.\n\nSasha had taken her kids back to Russia for a visit, and we all missed them, well, the kids anyway. Sasha was a bit remote, and I caught her staring at each of us on different occasions. I always thought she resented the fact that her husband had died saving us. She'd realize she was caught, blush, and look away.\n\n...\n\nIt was nine at night, and Sherry, Fatima, and I were having a nightcap when the shooting started. Automatic weapons, at least three. They had to be shooting at Moshe and his family since we were all together.\n\n\"Into the tunnels! Quick!\"\n\nI gave Sherry one of the Makarovs and a spare clip. \"If anyone comes down the tunnel and doesn't identify themselves, shoot. I'm going to help Moshe.\"\n\nI slipped into the tunnels and came to his closet, giving the designated knock sequence, and shoved it open. Ruth and the kids were huddled together on the floor. I got them up and headed towards the exit point. \"Yell when you go around corners so the girls will know it's you. No matter what you hear behind you, do not stop until you are all safe. Understand?\"\n\nThey nodded as they hurried off. I peaked into the living room to see Moshe behind the couch, his AK 47 in his hands and his pistol beside him. He almost shot me when I called his name. When he recovered he gave me a summary. \"Four, that I can determine, all with automatic rifles. One has a grenade launcher. It looks bad, Pete.\"\n\n\"That's why we're getting out of Dodge! You family is already in the tunnels, we need to catch up.\"\n\nWe closed the doors gently, wondering how much time we had before they entered the apartment and discovered us missing. Before going down the tunnel, I popped into the girl's apartment, grabbing the shotgun and pistols. I risked peeking out and saw them systematically shooting into all the apartments. When they swept by me I stuck the shotgun out of a broken window, and shot one at almost point blank range. His head literally exploded, and I swept the gun, shooting another who had his back turned right in the ass. His lower extremities seemed to lose control as he sank to the ground. There were three more and as they turned their attention to me I scooted into the tunnels. Moshe had paused to wait for me and stood guard as I reloaded the shot gun. We both heard the explosions, and knew the apartments were toast. \n\nWe were running down the tunnel when it hit me. Just ahead was a little nave, that protruded a little on one side. If you were going down the tunnel and looked back, the person couldn't be seen. I stopped, indicating the curve ahead.\n\n\"Get into position. When the shooting starts, help me out.\" He nodded and ran around the curve.\n\nIt took them so long to find the tunnels I had time to get my breathing under control. They were moving rapidly, pausing time to time to listen. I'd underestimated their numbers, and five went by me. I waited until they were almost to the curve before stepping out. I had no mercy, and put two down with head shots before they realized I was there, I ducked back into the nave, and thirty seconds later heard Moshe let loose on full automatic. I jumped back out to see only one standing, and I almost had the shotgun to his chest when I pulled the trigger. It almost blew him in two.\n\nNot hanging around to see if there were more, we rushed to the meeting point, yelling loudly at every curve. We went out into the woodland, to find them in defensive positions, covering the entrance.\n\n\"I called Heath and the locals have to know something is up with all the arms fire. He's on his way with help, and told us to hold our position if we could. I told him to approach carefully and make himself known, because we're not putting down our weapons.\" Sherry said all this while holding the pistol tightly. \n\nI gave Fatima the shotgun, fully reloaded. Ruth and the kids were clustered around Moshe, and I was shocked to see him bleeding.\n\n\"You're hit!\" I said in surprise.\n\nHe managed as much as a grin as he could through the pain. \"So are you.\"\n\nI reached up, feeling the blood seep down my forehead. The bullet had cut a perfect furrow across my scalp, that required twenty stitches. Moshe was shot through his upper left arm, and had a furrow in his skin just above the hip bone. \n\nHeath arrived forty minutes later with a full squad of SAS, who immediately split, part locking the area down and administering first aid, while the other half swept the tunnels. The squad leader came out minutes later wanting to know how many were involved in the firefight, amazed that such a defense could be mounted by two men. He gave us a little intel as we waited to be evacuated.\n\n\"As far as we can determine, you accounted for eight of the attackers. There were four more, two fell in fights with the campus security and local constables, but two seemed to escape, and one was definitely wounded. Sadly there are two dead on our side, one constable, one campus security.\"\n\nWe could hear multiple helicopters approaching and we were led into a field, loaded and taken to a military base in Scotland, where we were on lockdown for four days before Teddy appeared.\n\n\"Hell to pay,\" he said, when we asked him what was going on. \"We found one terrorist. He'd been shot in the head by his mate we assume, because he was slowing down their escape. Thanks to CCTV and informants, we followed the back trail to their supporters. Eleven arrests so far, all looking at life for their part, and so far none have talked. They think the last attacker is in France now, but they've lost him. I've talked to all your families to let them know you're alive, and you can call them as soon as we leave here.\"\n\nHe sighed. \"You can go back to university to pack up your belongings, but you can't stay. Parents are threatening to pull their children out of class if you return.\"\n\nAll of us understood. We'd taken a peaceful college village and turned it into a war zone. It would only have been a matter of time before there was 'collateral' damage. Heck, there already was if you counted the two officers who had fallen. Definitely time to leave town.\n\nSashas' apartment was a bombed out shell. The girls' home took the next highest amount of damage, but they were able to salvage most of their personal stuff. Moshes' and mine were the least damaged, if you count being riddled with bullets. We gathered our stuff, made arrangements, and two days later we were all standing at the airport.\n\nI was going back to the States, Moshe back to Israel, and the girls were bound for parts unknown. We had been together almost five years, shared experiences normal people could only imagined, risked our lives for each other, so the bond was deep.\n\nThere was an understanding between us and Teddy. He had two more papers to write that would take close to a year, and then we were going to meet again, and return as much of the stuff we'd taken as humanly possible.\n\nI stood and watched as jets took them away, sad and relieved at the same time. I turned to see Maddy standing behind me. She touched my arm almost shyly, then hugged me. Hard.\n\n...\n\n\"I'm glad it's over. Pete. You've already beaten the law of averages too many times. Sooner or later your luck would run out. Come on, I'm taking you home.\"\n\nMaddy flashed her credentials and we were escorted to a private jet, soon winging over the Atlantic. We were in the back, and after about two hours she whispered something to the steward. He smiled and closed the privacy panel. She came over slowly, shedding her clothes. Even at her age, she had a very nice body.\n\n\"Time for your induction into the Mile High Club, sweetheart. Lose those clothes and join me.\"\n\nShe didn't have to ask twice. It had been a while, and a loving, physical session with a good looking woman would do wonders for my bruised body and mind. I approached her and she commanded me to stand still. I obeyed, sensing it was important to her.\n\nShe was slightly taller than me, so it was easy to kiss my head where the bullet struck, then kissed my arm where that bullet went through, back up to the scar on my cheek. It was at that moment I realized how truly lucky I was, being that close to death three times and still standing. She sat down and pulled me to her, kissing the scar on my stomach and giggling. I'd gotten that wound while with her, rolling around in a warm summer rain. Neither of us saw the corkscrew we'd dropped, and I rolled right over it, putting a six inch gash in my belly. It was hard for either of us to keep a straight face in the emergency when the nurse asked how it happened. She caught on at once and smiled, telling me to be more aware of my surroundings, no matter how distracted I got. It slowed us down, and she had to do most of the work, but we still made love three times that weekend.\n\nShe reached for my erection, gently stroking it as she continued to kiss my stomach. I looked down and saw her ring flash, bringing another smile to my face.\n\nShe was really surprised that I knew her birthday, even more surprised I knew her ring size. Three small diamonds in white gold, her favorite, custom built by my Israeli jeweler. I slipped it on her finger during the nice dinner I'd taken her to. She didn't know how to respond, so I kissed her to stop her budding protests.\n\n\"You've been there when I've really, really needed a friend, the only one besides family who knows the whole story of my life. I know there will never be anything permanent between us, but I will always love you for what you are, a good friend. So wear the ring, look down every once in a while and remember there is someone out there you can always count on. Call me and I'll come, for anything you need. Anything.\"\n\nTough, strong, resilient Madeline cried like a baby, and has always had it on since. In some countries in Europe the right finger is the marriage finger, and if we'd go somewhere on one of her infrequent holidays, if people asked if she was my wife, I'd grin and say she was right now, which always made her blush.\n\nWe made slow languid love, neither of us in a mood to hurry. By now I knew her triggers, and tried to make it remarkable. By the way she cried when we were done, I believe I accomplished my goal. We drifted off the sleep.\n\nShe woke me later, pulling me on to her. \"We need to hurry! We'll be landing in twenty five minutes, and we need to be presentably.\"",
        "We slammed into each other hard, need and urgency leading our actions. When we went to disembark, I looked a little rumpled, and grinned when Maddy walked down the ramp, looking at her fine bottom, knowing she was without panties and probably leaking. She gave me a passionate kiss and told me she would be in touch.\n\n...\n\nI spent the next three months wandering around places I'd always wanted to see but couldn't because of money, scheduling, children, or the fact that Jo never wanted to go there.\n\nI walked the Appalachian Trail through part of North Carolina and Virginia, including the section known as 'The Virginia Creeper'. I veered off when I got close to Washington, and went down to Key West in time for Fantasy Fest. \n\nIn a stroke of drunken genius, I had my body painted as a target, because that's what I felt like at times. The painter was one of the most famous, and was so intrigued with my idea he did a full body job, centering the bullseye over my crotch.\n\nThe only article of clothing I had on was a red jockstrap, and you'd be amazed at the women, and a few guys, who wanted to hit the bullseye. I had a short beard, my uncut hair in a ponytail, and sunglasses on. I doubt if anyone would recognize me in a million years, despite all the photos that were taken.\n\nI ended up with a topless Annie Oakley, wearing a cowboy hat, body paint, and leather chaps. We went back to her room, where she decided to see how many rounds my rifle held. Four, it turns out, if I was given sufficient time to reload. We never talked, or exchanged names, we just fucked, kissed each other goodbye at noon, and went our separate ways.\n\nFrom there I went to Canada, and spent two weeks walking the streets of Montreal, enjoying all the town had to offer.\n\nI'd call the kids or Jo once in a while, listen to their frantic pleas to come home, tell them I was fine, and travel on. A guy tried to mug me in Chicago and I slammed him into a building and broke his hand, leaving him laying in the street whining, without another thought.\n\nI rolled into my hometown on a brand new motorcycle, visited a barber shop to have my hair trimmed and my beard shaped, and went to see the Dean. I'd bought the most expensive bottle of rye Canada had to offer and I held it out to him.\n\nHe didn't recognize me until I spoke. Then he was all over me, pouring us a drink and catching up. He tried his best to have me return, and I told him I'd do a guest lecture now and then, maybe sub if someone was sick, but I didn't want a regular schedule.\n\nHe wondered about my finances, but I assured him I was fine. When Said died, I got a package from his old commander. It was every gem in his share, plus three gold bars of irregular shape and weight, along with a letter.\n\n\"Pete, if you have this, then I'm dead. I hope I went out in a blaze of glory. I have no relatives, so I held this, planning to give it to my wife and daughters. Sadly, it appears my line has ended. I want you to have it, for your children and grandchildren. Every time you give them a trinket, tell them about your friend. It will be as close to immortal as I'll ever get.\n\nYour brother in spirit, Said.\"\n\nI tried to give it back, but the commander, who had traveled to England to deliver it personally, refused.\n\n\"He wanted you to have it, and I honor his wishes.\"\n\nI sent it to the jeweler, giving him a small sapphire to hold them for me. He sent me an estimate later. Apparently jewels and especially the gold had appreciated since we had last talked. Just what he gave me, not counting what I still had, was valued at almost five hundred thousand. I never learned where the gold came from.\n\nAside from that, I had almost three hundred thousand in a Dubai bank, courtesy of several unnamed benefactors and Sherry's brother.\n\nAnd that didn't include what I had in my regular account. Teddy paid us very well, and our lodging was free. I didn't keep a car since everything I needed was in walking distance or a short bike ride away. There was just under two hundred thousand available, and my paycheck would continue for another nine months.\n\nI waited until I thought Jo would be home, and rode over. I could see her peeking out the window as I strode to the door, removing my helmet.\n\nIt took knocking at the door for three minutes and a phone call before she open it. She just stood, taking in my beard and long hair, now more salt than pepper, before she started and welcomed me.\n\nShe sat there for a few minutes making small talk before she exploded. \"Where the hell have you been? We've been worried sick, and even Maddy couldn't find you. We were afraid you were dead, or worse.\"\n\n\"I've been...yondering,\" I said using a word from one of my favorite Westerns, \"seeing what's over the next hill, drifting around as I pleased. For the first time in forever I felt free, Nobody was depending on me, no one was trying to kill me, I didn't have a deadline or goal to achieve. You should try it sometime, Jo, it's very liberating. Besides, I called often enough to let you know I was all right.\"\n\n\"Some of us have jobs, responsibilities. We can't just take off and wander. Don't you think I've dreamed of something like that? Hell, all people do. I guess I'm just angry because I wasn't with you. The old Jake would have bent over backwards to include me. I guess the new Pete just didn't give a shit.\"\n\nShe stopped, tears in her eyes. Where the hell did this come from? I hadn't seen her since she left England, and the baby was ten months old now. before I could speak she started again.\n\n\"I'm sorry, really. That was uncalled for. I'm just under a lot of pressure right now. I'm right in the middle of a monster project, one of my last if things go well, and I've had to plan a wedding by myself. Our mothers are willing to help, but since I'm footing the bills I have to be hands on. And I think Josh is finally getting serious about someone.\"\n\nI jumped in when she ran out of steam. \"So Miles finally popped the question? Excellent. Stop worrying about the wedding. I'll foot the bills, write the checks while Mom and Marie plan it. It will make them feel useful again.\"\n\nJo looked at me in awe. \"I think I like Pete much better than Jake. Forceful, making decisions with the snap of your fingers. A girls panties could get wet around a man like that.\"\n\nShe grinned at the look on my face. \"Relax, honey, it was a joke. But I will accept your help with the wedding, if everything gets run by me first. I have a budget, after all.\"\n\n\"No you don't. I said I'd foot the bill, and I will. If you want to contribute, do like you want, supervise. Maybe give them a nice honeymoon destination.\"\n\nShe was off the couch and in my lap in a second, kissing me hard. Then Jo jumped up, a gleam in her eye.\n\n\"Go clean up, and put on something decent. We're going to have a house full of guests pretty soon. Oh, and order some food, who has time to cook?\"\n\nI went up, showered, brushed my hair and beard, and after donning jeans and a tee shirt, went back downstairs. Using her computer, I was amazed at how many new restaurants were in town. I ordered Chinese and Italian, just to cover all the bases.\n\nDozing on the couch, I was awakened when Jess dove on me, kissing me all over my face while she cried. Jo laughed and had Josh and Miles pry her off me. Just as soon as she was removed, Mom jumped into my arms, doing basically the same rant Jo had done. When she calmed down I looked at Marie. She just grinned.\n\n\"What? As much grief as I gave you when you were my son in law, I think you deserve a pass. Still good to see you though.\" She did kiss my cheek before going into the kitchen to help organize the food.\n\nWe laughed,sharing a meal and the love of family. It was a feeling I savored, not having experienced it in a long time. Halfway through the meal a thought struck me. \"Miles, we forgot your mother. I apologize. She should be here. Call her, and if she's not busy, see if she'll come over.\"\n\nMiles was amazed but made the call. Clara was there in thirty minutes. She had met every one but me, so she was soon at ease. When I told her I expected her to help plan the wedding, she cried.\n\nThe official GET JESS MARRIED IN STYLE COMMITTEE held their first meeting at the dining table, shooing Josh, Miles, and me out of the room. We went outside and they admired my bike.\n\n\"I never thought I'd see my Dad on a motorcycle, but then again I never thought I'd see you do half the things you've done. Are you okay, Dad?\"\n\nI shrugged. \"I'm pretty happy, really. Oh, every once in a while something will trigger an unpleasant memory, but I get over it pretty quickly. And I'm home now, at least for the next nine months.\"\n\nChanging the subject, I asked if the rumors I'd heard about his love life were true. His grin was about a mile wide.\n\n\"Pretty much, Pop. I hope the jewelry chest isn't empty.\"\n\n\"Don't you worry about that. I'll have what you need. Do I know the girl?\"\n\nMiles was grinning as hard as Josh. \"You've actually met her. Her name is Celeste. My sister, remember?\"\n\nI remembered a tall blonde in a lab coat wearing big glasses. She seemed pretty enough, but it was hard to tell in that outfit. \"How did that happen?\"\n\n\"We would all hang out together at our apartment. It took a few months, but they drifted closer and closer. Then BOOM! They couldn't keep their hands off each other. It's been like this for about five months now. That's the quick version, if you want details, get them out of Josh.\"\n\nJess came skipping out about then, wrapping her arms around my waist. \"Daddy, Mom wants to know what kind of budget the committee has to work with.\"\n\n\"I don't know, baby. Do you have a ballpark figure?\"\n\nShe fidgeted a little before coming out with twenty thousand. Wow, I wondered how much mine had cost. It was only money, so I looked at her sternly.\n\n\"Sorry pumpkin. I can't live with that figure.\"\n\nShe hung her head, tears forming. I tilted her chin up until she looked me in the eye. \"That can't possibly be enough. It seems we spent at least thirty thousand on Polly, and I'm sure prices have gone up since then. Let's go with thirty-five, all right? If it runs over let me know, otherwise, except for the time and the place, leave me out of it. Acceptable, sweetie?\"\n\nShe let out a scream that must have had the neighbors wondering who got murdered and ran towards the house, stopping halfway and running back into my arms. \"Thank you, Daddy!\" Then she kissed me and ran back into the house.\n\nIt took them two hours before they calmed down enough to leave. I walked out, planning on getting a hotel room for the night. Jo was right behind me.\n\n\"Don't you even think of cranking up that noisy thing. Come to bed, you can move it tomorrow.\"\n\nShe saw my look in the security lights. \"That's all I'm offering you, Pete, a bed. Not a bed with me in it.\"\n\nThen she giggled. \"However, I am open to negotiation. Just kidding. Maybe. Seriously, come to bed. We'll talk in the morning. I'll even make breakfast.\"\n\nI thought about it for a minute, grabbed my bag, and hit my old guest room. It took me a while to get to sleep, being here, in my old house. The memories seeped out of the walls, swirling around me. I heard the kids in the backyard when they were just school age, screaming with the joy of new life, laughing as that big ugly mutt we'd rescued from the pound chased them around, barking and slobbering all over them. I heard their wails of sorrow when he passed a few years later, coming to grips with the concept of death for the first time. His headstone was still standing in the back corner.\n\nI heard the excited whispers between the girls when they fist noticed boys, holding them when they got their tender young hearts broken for the first time. I could see then posing with their dates in their prom dresses, and then it was my heart breaking a little because I knew it was the beginning of the end of their childhood, I could see Josh in that God awful purple tux. The way his date looked at him he could have worn rags and she wouldn't have noticed.\n\nI could hear Jo as she cooed and screamed during our lovemaking, in every room of the house and every inch of the patio and backyard. I could see her tired but triumphant smile as I brought her and the twins home, knowing our priorities were forever changed.\n\nThen I'd remember the fights, the coldness, why we were divorced, and wondered if this wasn't just another manipulation. Time would tell. Besides, I'd be apartment hunting tomorrow.\n\n...\n\nJo was unhappy when I told her my day would be spent apartment hunting. She seemed hurt.\n\n\"Really, honey? You could just stay here, you know.\"\n\n\"Not a good idea, Jo. As much as I've become lately of enjoying your company, I need my own space. Besides, wouldn't it be awkward if I was lounging around when your dates showed up?\"\n\nI said the last in jest, but saw the flicker in her eyes.\n\n\"Is it serious?\"\n\n\"Sort of. He wants more than what we have but I'm not sure. He's a good guy, Pete, and I'm comfortable being with him, but the spark I'm looking for just isn't there, and I don't know if it will ever be.\"\n\n\"Don't lead him on, Jo. That's all I'm going to say. If he wants more and you don't, tell him upfront.\"\n\nBreakfast was awkward after that, and I told her I'd do the dishes while she got ready for work. Forty minutes later, dressed in her lawyer clothes, she left. I didn't want to hang around with all the memories, so I drove two towns over and started looking. Why two towns over? I wanted a little space from my family if my past came looking.\n\nI got lucky, despite my appearance, once they found out I was a college professor, they wrote the hair and bike off as academic eccentricity, or maybe a late midlife crisis. To my relief, no one recognized me for my past exploits, even though the last attack had been on the international news for weeks.\n\nI found a nice one bedroom condo, complete with a gym and pool. The price seemed a little high, but then again, I told them right off it was only going to be a year, unless things changed. I offered them a hundred less a month and told them I would pay for the full year in advance. They accepted it right away.\n\nI did the same thing with the car I got, a one year lease, paid in advance. It was big and boxy, but it had a powerful engine and four wheel drive. I went to the post office and got a box, again, I didn't intend to make it any easier on anyone looking.\n\nDid I expect trouble? Not exactly, but three mil is a pretty powerful motivator, even if you're not religious.\n\nThe family was a little upset I wasn't close, especially Jo. I explained my reasons, and it was clear she hadn't even considered it. She never said another word.\n\nThe wedding committee was doing an outstanding job of depleting my bank account. But your little girl only gets married once (I hoped), so I didn't complain.\n\n...\n\nI'd gotten badly out of shape in my wanderings, so I hit the condo gym pretty hard, and found a new martial arts place to train. I couldn't help but grin at the irony. It was a Savate academy, taught by a Frenchman who'd worn the white sash for fifteen years. He was impressed with my resume and asked why I chose his studio.\n\n\"I recently ran across another white sash, and was intrigued by how similar it was to the last system I studied. Both are no nonsense styles born of necessity. They're not pretty, they're not fair, and they're both damned effective.\"\n\nI adapted to the style pretty easily, and the instructor would often match me with more experienced sparring partners. I'd sometimes revert to one of my old styles, just to confuse them. Still, I was pretty much continuously bruised on one body part or another for three months. It reminded me I would soon turn 50 and maybe I needed to ease up a little. Then I'd remember someone shooting grenades in our windows, and I worked harder.\n\nI also went through the course and applied for a concealed carry permit. It took three months before I got it, and I made a habit of carrying my pistol even before the permit was approved. The course was sponsored by a gun club with a very nice range, so I joined.\n\nThey tried to be helpful. I was a college professor, after all. They made all kinds of suggestions and were more than surprised when I showed up one Saturday morning, with both pistols.\n\nThe range master examined them, declared them fit to fire, and set me up a lane. I didn't realize it until about thirty minutes later but I had an audience. Always handy with a pistol, I'd gotten bored just shooting at the bullseye, so I started shooting patterns into the target. I put two eyes, a nose, and a crooked smile on one. drew an X across one, a circle on another, and a heart on the breast area of another. None of them were perfect, but it was easy to tell what they were supposed to be. What stunned them was my shooting with both hands, emptying the magazine in the one in the right hand, then the one on the left.\n\n\"Where did you learn to shoot like that?\"\n\nI shrugged, trying to downplay my skill. \"I've been around guns all my life, and I've always been ambidexterous, so it came naturally.\"\n\nI grinned, \"but I'm terrible with long guns. Never got the hang of it. I'm a shotgun man, all I need to do is get close.\"\n\nHe hit me up to join the club's shooting team, but I begged off. \"I don't know how much longer I'm going to be here. I wouldn't want you to depend on me and then up and leave.\"\n\nI grew to become something of a challenge to them. Discovering I had a competitive streak when it came to shooting, I would regularly shoot against whoever was available. I beat all but one with pistol, and we seemed to split, winning as often as losing. No one could touch me shooting with both hands, but I usually got the crap kicked out of me with rifles.\n\nOne of the guys I hit it off with introduced me to skeet shooting. It was love at first pull. After two months I started getting bored, and asked them to throw multiple clays at the same time. Two were easy, three were interesting, four were challenging.\n\nI took Josh and Miles with me a few times. Josh said it was okay, but Miles got the fever and soon bought matching shotguns, twelve gauge for him, twenty for Jess. Genetics must have kicked in, and she was a natural, outshooting Miles on a regular basis. She got so good that my club put on a father daughter competition, and we won easily. Way to easily. The other clubs hinted they brought in a ringer, but they countered, saying we were just a college professor and an accountant.\n\nOne guy wouldn't let it go, Googled me, and saw my recent past. Soon everyone knew who I was. It got so bad I quit going to the range, and five of the members showed up at my condo, promising to make sure no one bothered me if I returned.\n\nThey caught me as I was returning from the pool, a towel wrapped around my waist. Three of them were veterans, and recognized my scars for what they were, battle wounds. I think their opinion of me went up. It bothered me a little.\n\nTom had gotten hit with shrapnel, and had little scars all over his back. Bill had survived an IED that destroyed the Humvee he was riding in, and had taken two bullets while pulling his crew out of the vehicle. They were warriors, I was just a stupid nerd who ended up in the wrong place at the wrong time, with a knack for pissing off dangerous people.\n\nAfter the small talk, they got to the point. \"You need to come back. We'll make sure you're left alone as much as you want. You're not military, but you stand up for your friends and beliefs, have gone through scarier stuff than I could imagine. At least my time in the service had me facing pretty easily identified enemies, and I didn't operate in enemy held territory.\"\n\nThey finally convinced me to come back, even though I had been identified now, and it wouldn't take long for anyone to find me. They just grinned. \"It's a gun club, buddy. A lot of us are vets from more than one war. They might get surprised.\"",
        "...\n\nMaddy came to see me about a month after I settled in, slapping me for dropping off the radar, then kissing my cheek to make it better.\n\n\"Asshole! You know how hard it was to keep track of you? And every time we found you you would disappear again. Fantasy Fest? Really? We got there about six hours after you left. Same when you crossed into Canada. You were probably in Chicago before we knew. What did you do to not leave a paper trail?\"\n\n\"Prepaid debit cards. I went to six different stores and loaded each with two grand. I learned it off a movie.\"\n\nShe grinned. \"Wow, you would be so good at tradecraft if you'd just learn. Now, you owe me a nice dinner, and I expect you to model that red jockstrap when we get back.\"\n\nShe stayed three days, screwing my brains out (like that took a lot of effort) while I pampered her with everything I could think of. The day she left she surprised the hell out of me.\n\n\"I'll be eligible to retire in a few months, Pete. Thirty years, you know how rare that is? It's one of the reasons our retirement package is so great, because they never expect anyone to make it that long. I'm going to do it, settle down in a little college town, maybe take up with some professor that is a little more than he seems. Think of the possibilities.\"\n\nShe broke down at the look on my face, before kissing me. \"I'm serious, Pete. After thirty years I don't really enjoy what I do anymore. Looking back for the last four years, the only happy memories I have are of you. You're the only person I've been with in decades who doesn't want anything from me but me. In my world, you wouldn't believe how rare that is. I'm not saying that as soon as I retire we're going to settle down into domestic bliss. Even if you won't admit it, you're still hung up on your ex, and I know you've banged a few of those pool pussies that are always around. They have a running bet on who lands you. I hate it for them, but they don't have a chance. Think about it, baby.\n\nI'd be really good for you.\"\n\nShe paused to gauge my reaction before continuing. \"I know I have competition, but I have an edge. I'm absolutely ruthless when I want something, and I want you. Now, I have time for one more romp in the bedroom before I have to go. Come on, I want to give you something to remember me by while I'm gone.\"\n\nShe used skills I never knew she had, reducing me to a quivering pile of goo twice before she let me go. Two hours later, she gave me a kiss that would melt steel, and was gone.\n\nShe left me with a lot to think about. And a sore dick.\n\n...\n\nJo told her lover that there would never be a future for them past what they had now, and he slowly drifted away. Jess told me she dated once in a while, mostly for business related events.\n\nI'd see her every week or so, mostly for wedding related plans. Surprisingly, they just barely stayed in budget. Jack was taking three weeks of leave, and he and Polly were due to arrive in two days. Polly was going to be Matron of Honor, and Jack was going to be a groomsman.\n\nMaddy couldn't make the wedding, which I think pleased Jo. She still called me every week or so from some exotic (translation: dangerous) location, reminding me the clock was ticking.\n\nI had given it a lot of thought. The love I had for her wasn't the white hot passion I'd had for Jo, But a more mature, thoughtful love. And one thing Maddy had going for her that Jo didn't was that I had absolute trust in her, pretty odd considering her career. Maybe I was wrong, but I really didn't think so. I shelved my thinking on the situation, and concentrated on the wedding.\n\nJack and Polly arrived, and we nearly drowned little Jack drooling on him. Polly had to almost pry him out of Jo's arms. The women went of to do wedding related activities, and Jack got me alone, giving me a letter from Teddy.\n\nSeems things had calmed down, but we were no longer welcome at the college, He was thinking about moving the operation to the U.S., but it was still up for debate. He signed off with a warning to not let my guard down.\n\nTo my surprise and pleasure, Moshe and his family showed up for a visit, bringing Sherry and Fatima with them. It was the first time we'd been together in eight months. We went out as a group, and raised a glass to Said, our farewell to a friend.\n\nSherry told us her father and brother were still monitoring things, and it seemed we were old news and our enemies were concentrating on other, more pressing problems. Good for us. They also said the bounties were still out, so we should never let our guard down.\n\nThe wedding went off without a hitch. Jo had given them a river cruise through Europe as a honeymoon gift. No doubt that Miles would drag Jess through every wine region he could.\n\nNeither Jo nor I had dates, so we shared the table with the new in laws, their parents, and ours. Again, I sat on one end and they sat on the other. Every one knew better than to try to put us together. Marie had gently brought it up a month before and I not so gently rebuked her. I saw a flash of fear and calmed myself, but she got the message.\n\nWhat I didn't tell anyone is I ran into him just after her attempt. He was in my town, for some reason, and was walking out of a coffee house as I was walking in. He looked at me like a deer caught in headlights. Making a snap decision I told him, not asked, but told him to sit back down and order another coffee. I got mine, and we sipped for a few seconds in silence.\n\nHis voice was tentative when he spoke. \"Does this mean...\"\n\n\"This means I get to tie up a loose end. I don't think you'll ever understood what you did to me, so I'm going to spell it out in simple terms you can understood. I can kind of understand what Jo did, and I know Mike did what he did out of jealousy and spite, but I'll never understand your betrayal. Out of the three you were the only one that was blood. You were my father for God's sake, you should have defended me, told them to let me make my own choices in life. That's what a good father would have done. You manipulated me out of self determination when it came to my life. What kind of father does that? I'll never forgive you, not in this lifetime.\"\n\n\"You ever think about how your manipulations turned out? I divorced my wife, lost my relationship with my mother, destroyed Mike, and despise you with a passion. Yeah, things really worked out, huh?\"\n\nHe fidgeted. \"I was only doing what I thought was right.\"\n\n\"Bull-fucking-shit. Maddy told me a little about your career. You became a courier when every agency you applied for turned you down. I think a lot of what you did was fear I could actually succeed where you failed. This discussion is over.\"\n\nI left him sitting, and as I walked by the window I was surprised to see him wiping tears off his cheek. I felt no pity at all.\n\n...\n\nThe wedding was a huge success, and Celeste caught the bouquet. I think the fix was in. She grinned and tossed it to me. We'd had a quiet conversation during a dance, and at the table later.\n\n\"I hear you own a jewelry store, Pops. Just so you know, my dream ring is a diamond circled by small emeralds. Or large. I think the term is substantial without being gaudy. I've seen the bling your daughters and wife wear, so I'm sure I won't be disappointed.\" She was grinning as she said it. I very seriously told her I'd tell Josh.\n\nThe wine flowed, all from the family business, of course. Jo and I danced several times, then I danced with my daughters and soon to be daughter in law, then Mom and Marie had to have a turn. I looked around at my kids, all coupled now, with the first of what I suspected would be many grandchildren.\n\nWe stood and cheered as the limo whisked them away to begin their first adventure as one. I hope they have many over their lifetimes.\n\nJo was crying silently as she stood, my arm casually draped over her shoulders. It just seemed the same to do. \"Cheer up, honey, we only have to do this one more time, at least until the grandkids grow up. How many do you think we'll end up with?\"\n\nInstead of cheering her up, it made her cry harder. As the guests drifted off, I walked Jo to her car. She looked up at me, still teary. \"Can I spend the night? I just need held, you understand? Let me go to sleep in your arms like I used to, let me pretend the last few years didn't happen. Let me pretend for one night you still love me.\"\n\nI kissed her cheek before answering. \"I do still love you. I always will. Yes, you can stay, if you understand that tomorrow will be the same reality as this morning. You can't unring a bell, Jo.\"\n\n\"I'll take it. Can we leave now?\"\n\nI took her to my condo, the first time she'd ever seen it. She went into my closet for a shirt, then pulled me into the bathroom. The shower was slow and loving, touches instead of gropes. We snuggled into bed and she spooned to my back, asleep in seconds. I listened to her quiet breathing, regretting all the hurt we'd been through. But regrets don't change facts, or what had happened.\n\nI felt get out of bed sometime in the night. She came back and assumed the same position, and I was just conscious enough to realize she had lost the shirt. Her naked body pressed against mine felt really good as I slipped back into slumber.\n\nWe'd rolled over some time during the night, and I woke pressing my morning erection into her bottom. She wriggled sleepily until I slipped in and sighed as we began the age old dance, both of us shuddering as we peaked. She woke me after daylight, pulling me by my erection on top of her. Again we were in no hurry until we neared the finish. Tears were leaking out of her eyes as she moaned out her finish. I slipped off her and she snuggled under my shoulder as we drifted off yet again.\n\nI woke up just after nine to find her gone, a note on the kitchen table.\n\n\"Thank you for last night, Pete. It was just what I needed. I'll have the girls drop your car back later, I forgot I was supposed to go to lunch with Polly and Celeste. Preplanning for another wedding, I suspect. Since Celeste's mother is alone, she'll need all the help she can get. You might want to have Josh call your jeweler friend.\"\n\n...\n\nLife drifted on. I did the odd guest lecture on campuses all over the country. Teddy, after long discussions with both countries, decided to do the rest of the translations in America, but hadn't decided on a location yet. Sherry and Fatima were living in California now and seemed to like it, so I suspected it would be a west coast facility we ended up at.\n\nTeddy decided we'd do a quick trip to several different countries, to return artifacts and generate good will. There would be a large security presence, from the host country and England, SAS I suspected. It took a lot of coordination and planning, but almost a year to the day I left I was on a plane back to England.\n\nOnce again Maddy was with me, and she brought four guys with her. \"This is my last assignment, Pete. I'll be your companion for the whole trip, and if you say one word about separate bedrooms I'll kick your ass. And I hear you might be relocating to California. Did I ever mention I was from Northern California? Still have a lakeside cabin there, courtesy of my grandparents. Convenient for weekend getaways, don't you think?\"\n\nI had been giving Maddy a lot of thought. No doubt, I still loved Jo, but I was pretty sure it was time to move on, finally. Maddy was not an attractive woman in the standard sense. She was more a handsome type, too much character showed through to make her beautiful. But she had a smile that would melt an iceberg, she was sensitive when she let down her guard, and sexually there was no comparison. Jo was good in bed, but to compare her to Maddy would be like comparing a high school quarterback to a seasoned pro. Not that I didn't love our times together, but Maddy took it to a whole new level. And though I never asked, I knew in my heart that if we ended up together there would never be another man for her, as there would be no woman for me. And on reflection, that was just fine.\n\nI smiled and kissed her hand, making her blush, which her crew found hilarious. \"Do you have a boat?\"\n\nShe found the question odd. \"No. Why?\"\n\n\"Oh, it's just an old joke. A guy posts an ad on a singles site. 'Man seeks woman. Must love to fish, and own a boat. Please reply at P.O. Box X. P.S. Send picture of boat.' \"\n\nIt took her a second to process what I'd said. Then she was all over me while her crew laughed. \"We'll go boat shopping as soon as we get home, honey. I promise.\"\n\nI had to wonder how she could possibly be effective as a bodyguard when she refused to let go of my hand.\n\nAs we spent more time together we got to really know each other. She admitted to me that her single biggest regret was never having children, and wondered if mine would accept her.\n\n\"What a silly question. Polly has a bit of hero worship where you're concerned. The rest will come around, you can be pretty lovable when you feel like it. If you're not careful they'll start dumping the grandkids on you for an adult weekend. Ever changed a diaper?\"\n\nThat sent her off on a little crying jag. When she stopped sniffling she said she'd be the best grandma ever. I laughed. \"I can see it now, you teaching little Jack how to kill people with just a stapler, or how to clone a phone.\"\n\n\"Well,\" she laughed back, \"what did you expect I'd do? I don't know how to bake cookies.\"\n\nI lay awake one night, just thinking. I was tired, even the year off hadn't helped. I was ready to live a quiet life, away from the world. I wasn't even sure I wanted to return to my research. At least something good had come out of all this. I gently eased the ring off Maddy's right finger, and put it on her left, smiling as I went to sleep.\n\nWe were a plane to Dubai before she noticed. I thought she was going to break my hand when she saw it. \"Really?\"\n\n\"Really what?\"\n\nShe squeezed so tightly I thought my bones actually broke. \"Don't fuck with me, Pete. I don't have much of a sense of humor.\"\n\nI leaned over and kissed her. \"Really. You need to think about what kind of ring you want to go with it. Any combination of diamonds, emeralds, rubies, and sapphires, as big as you want.\"\n\n\"This one will do just fine.\"\n\n\"No, I want to make a statement. This woman, my woman, deserves the very best. If you don't pick something I'll made it so gaudy it'll be embarrassing.\" I thought she was going to break my fingers again.\n\nSherry, Fatima, and Moshe met us in Dubai, and we soon were attending receptions and dinners. We were at the university when the Greek professor I'd been with came up. Seems she'd gotten a better offer and taught there now. Maddy knew all my secrets, and Aphrodite thought it was funny the way Maddy was acting until I told her what she did for a living. She immediately stopped the light flirting, and I eased my arm out of Maddy's hand, knowing there would be bruises later.\n\n\"I know you have green eyes, honey, but don't get greeneyed. She was a long time ago.\"\n\nMaddy backed down, muttering. \"Bitch better be in the past. I find it otherwise and she'll lose her ranking on the top one hundred. She'll be lucky if they recognize her as human when I get done.\"\n\n...\n\nI listened as the phone rang, knowing that it was a call she wasn't expecting. She could say what she wanted, but I knew that deep down Jo thought she could get me back, that eventually I'd come around and we were going to be together again. I'd thought about it quite a but, time has a way easing all pain, but in the end, I just couldn't.\n\n\"Hello?\"\n\n\"Hi Jo. It's me. How are you. How are the kids? Josh proposed yet?\"\n\n\"Pete! It's so good to hear your voice, honey. And the kids are all fine. Josh showed me the ring. I'm a little jealous. You're going to have to open that wallet again pretty soon. Where are you?\"\n\n\"I'm in Dubai for some meetings to establish a timeline to return some of the stuff we collected. There are several groups claiming ownership so it's a bit muddled. I have some personal news, Jo. Maddy and I are together now, and I intend to make it an official union soon. I wanted you to hear it from me, not some second hand way.\"\n\nThere was a period of silence on the phone, and I thought maybe the connection had broken. \"Jo, are you still there?\"\n\nThere was a muffled sob before she spoke. \n\nI...I'm happy for you, Pete. It's just that I'd always hoped that...\"\n\nShe was full on crying now. \"I'm sorry Jo, I really am. You're a good woman at heart, and I'm sure there is someone out there for you. It just isn't me any longer.\"\n\nShe tried to reply, but kept crying so she hung up. I sighed and put the phone down.\n\n\"Let me guess, she didn't take it well.\"\n\nI stroked Maddy's hand. \"Not really. But she'll recover. She's a strong woman. Now that the past has finally been laid to rest she can move on. I truly wish her happiness.\"\n\n\"You're a good man, Pete. I can't wait to spend the rest of my life with you.\"\n\nI snuggled her tighter, happier than I had been in a long, long time.\n\nThe disputes of ownership were getting more strident, and Teddy, in his wisdom. got a panel together, two each from the countries and groups claiming the books and scrolls, and had them present their claims to a three judge tribunal, none from the countries in dispute. They were all highly ranked religious leaders, two mullahs and a priest, with reputations beyond reproach. The petitioners grudgingly agreed to abide by their findings.\n\nThere was a lot of bickering and name calling, but when the tribunal made their decision they all agreed to abide by it. I wasn't surprised when a lot of the material ended up in the hands of the Catholic Church. Wonder how much that cost?\n\nSherry's brother was there, and surprisingly, her father. He was pretty high up the ladder, a confidant and advisor to the King, and was well thought of. Of course, officially he condemned her lifestyle, but privately never mentioned it.\n\nHe was keen to meet me, and it was a very pleasant experience. He was witty, fluent in six languages, and would in midsentence slip into another, seeing if I could keep up with him. I'd reply to whatever he said in a totally different language, which he found vastly amusing.\n\nHe had heard about my audience with the Pope, and bore a gift from the Grand Mufti of his country, and a message.\n\n\"I hear you subscribe to no religion, so I send you this gift. Wear it beside the Christian cross, between both I hope you will be protected. And the Prince has assured me that when you journey to my country, I will get to spend a little time with you. Allah Akbar.\"\n\nHe signed his name in perfect flowing script, a name so long and complex I wouldn't pretend to try to use. I mentally dubbed him Al. I opened the package, a gold medallion on a heavy chain, bearing the name 'Allah' in flowing letters. I immediately put it on, feeling it rub against the cross, wondering which religion the lightning strike would come from. I looked forward to meeting him.\n\nThe visits took almost three months, with extremely heavy security the whole time. Surprising everyone, there were no attempts at all, and intelligence heard very little chatter about us. We all started to relax.\n\n...\n\nI had a long talk with Maddy, and resigned. Returning the things we'd studied would be my last act as a member of S7. Teddy wasn't particularly surprised.\n\n\"None of you are returning. Sherry and Fatima are happy in California, and are seriously thinking about a baby, with Fatima bearing, because of age factors. Ruth has been worried sick since the attack on your apartments, and has begged Moshe to stay home. Now you. Maddy will be very happy. Have you told her yet?\"\n\n\"Of course. She's my life partner now, and there will be no secrets going forward. We're going to stay in her cabin for awhile before I look for something to pass the time. There is a small college nearby with a stellar reputation, and several community colleges in the area. I think I'd like to be a History teacher. Maddy says she not going to do a thing but be domestic for the first time in her life. She doesn't know I know, but she's been cruising adoption websites, looking for boy girl siblings from ten up. Looks like I may be raising another family.\"",
        "Teddy gave me an odd look. \"Tell me, Pete, how well do you like Josef and Tatiana?\"\n\nI didn't understand the question. \"Well, I didn't get to spend that much time with Tati because she was always off with the girls, but Maddy adored her, they even went to lunch a couple of times alone, for \"Girl Talk\", as Maddy put it. Josef and I bonded, because he was without a Dad and I was missing Josh. He's a good kid, and smart as a whip. Why?\"\n\n\"This stays between us. Sasha came to see us about a month after you left, asking if we could watch the kids for a couple of weeks while she went home to tie up loose ends, according to her. She never came back. We kept them for awhile, but when it became apparent she wasn't coming back we put them in boarding school and had ourselves appointed temporary guardians.\"\n\nAll I could say is \"Wow.\"\n\n\"Indeed. It gets worse. I called in a favor, and they tracked her from her home town to China, and then she showed up in Turkey. We fear she's been radicalized, her fingerprints were found on a bomb that didn't detonate during an attack.\"\n\nSasha? I realize I didn't know her that well, but she seemed sweet, and seemed to enjoy watching the kids interact with us. Then again, I'd caught her staring at one or the other of us several times, with a blank look on her face.\n\nThen I thought about the attack. Her place had been hit with a grenade, but almost no fire was directed into it. The next two were the girls and Moshe, both high value targets, Arabic lesbians and Jews, and then mine, also mostly bullets and no grenades. Sasha was out of town with the kids that weekend, a lucky coincidence, I thought.\n\n\"Do you think the kids...\"\n\n\"I don't think so,\" Teddy sighed. \"I've had them watched closely, from a man we planted as a teacher and from the two security men I assigned to them, telling them it was for their protection.\"\n\nI was still a bit confused. \"What does all this have to do with Maddy and me?\"\n\n\"Well, I was hoping you could take them to America with you, at least for awhile. They would be safe, and they'd make great cover. Who's going to be looking for an older couple with two kids, one a retired government clerk, the other a history teacher? Think about it, run it by Maddy. It would be good for everyone.\"\n\nI did think about it for a day or two before I talked with Maddy. At first she wasn't sure, then she was afraid she would be able to handle it. I laughed.\"\n\n\"You've faced and overcome some of the most dangerous men in the world, lived through things that would kill most humans, and you're afraid of two teenagers? What's the worse thing they can do, scream 'I hate you' and storm off to their rooms?\"\n\n\"YES!,\" she said through tears. I snuggled her until she calmed down. When she was quiet I told her the truth.\n\n\"They're going to say things like that to you, knowing deep down you know they don't really mean it. But there will also be a lot of 'I love you Mom', and 'You're the best mother ever!' in there too. Be careful, honey. If we take them, even for just a while, they'll work their way into your heart. Then they'll do something terrible to you. They'll grow up, and you'll watch them leave and wonder where the time went. But they'll always be your kids, even if they're thirty.\"\n\nShe was pretty quiet for two days. That night, as we snuggled, she pulled me as tight as she could. \"I want them. Can I have them?\"\n\nI kissed her, feeling the tears. \"You'll never have them, but they'll always have you. Yes. Let's see if this thing works.\"\n\nI don't think she slept a wink. I woke to find the bed empty, and could hear her at the table, talking to herself and making notes. She woke me in the morning with an intense bout of loving, leaving me drained while she seemed to be bouncing off the walls.\n\n\"That was great, honey.\"\n\nShe kissed me, grinning. I was surprised to notice how much softer the lines on her face appeared. \"That was to hold you until you get to England. I have somewhere to be.\"\n\nI got a horrible feeling. I thought her past was behind her. \"Where do you have to be?\"\n\n\"At Dorset. I have to pick our children up, it's a school holiday. Two weeks. I'm going to explain about their mother, honey, and hope they don't hate me. Then I'm going to shower them with all the love I've been saving up, even if I didn't know for who until now. I don't pray, Pete, but today I'll offer prayers to every known deity on the planet for this opportunity.\" \n\nShe made plans to take them straight to America, if they wanted to go. Maddy could be pretty persuasive if she wanted something, so I had no doubt they would be with her when I returned. She left her team, telling them that if anything happened to me past a hangnail it would be very, very bad for them. They believed her.\n\n...\n\nIt was finally over. Despite the high profile, no one offered to touch us. I have a feeling Sherry's family had a lot to do with it.\n\nWe all sat together as we approached Heathrow, exchanging rememberances and swearing to keep in touch. We'd survived a lot, gave a lot of knowledge and more than a little speculation about the world's past. It was time to let a new team shine. Teddy had already lined up Trevor, and Ian. Moshe recommended a bright young woman he'd once mentored, and Sherry suggested Teddy let a couple of her cousins join, both well qualified. They were all in their thirties, and the enthusiasm would be almost immeasurable.\n\nIn a move that surprised the Church and most of the world, the Pope did a short video for broadcast, thanking our team and me in particular, for bringing the information about the Apostles to light.\n\n\"Of course.\" he said, as he drew the message to a close. \"we can never know if what they brought us was true, but I'd like to think there was a feisty woman in the mix, showing us their humanity while they served the greatest of causes. I've had the Achivists examine the scrolls we have in our possession, and they are strikingly similar. Perhaps the Church made a mistake in not giving women a more active role. Nevertheless, we can't change the past, but it is my intention to bring women deeper into the folds of the Church, and expand their roles in the Catholic community.\"\n\nWow. He more or less just validated everything we found. There would be a buzz in the upper echelons for quite a while.\n\nTeddy grinned as we deplaned, telling us he had arranged a small surprise. We cleared the airport with a minimum of hassle, diplomatic papers go a long way in making people more agreeable. The SAS and my team remained vigilant as we walked to the parking lot.\n\nThere, standing at the edge, were Ian, Trevor, and a priest I didn't recognize, along with my whole family. Jo, and the kids were waving and clapping, beside Ruth and her two children. On the other side of Ruth stood Maddy, flanked by Josef and Tati, smiling and waving. Boy, I thought, my Christmas list was going to kill me in years to come.\n\nJo , Ruth, and and all the children were rushing towards us, while Maddy held back a little. My smile was a mile wide as I opened my arms, knowing She'd get the last and absolutely best hug.\n\nThere was a cleaning crew sweeping the lot, pulling those huge wheeled garbage cans along.\n\nThere was a group of three Muslim women, in robes and burkas, chattering happily as they walked towards us. The wind was blowing pretty good, and the women were having trouble with their headscarves.\n\nOne blew open, and from twenty feet away I recognized Sasha. At the same time she saw her kids, and started running away from us, screaming in Russian. \"GET DOWN!\" \n\nI immediately looked around, and the workers were throwing the lids off their bins.\n\n\"GET DOWN! ATTACK!\"\n\nI no more than got the words out when one of the women pushed the button, blowing herself and everyone in a twenty foot circle up. She was more or less directly behind Jo, and the force blew her into me, hard. I felt something in my face break as she slammed into me. The SAS and my team reacted, but by then the garbage men had AK 47's spraying in all directions. I saw Maddy fall after she pushed the children to the ground.\n\nJo was trying to say something, but the blast had deafened me. I held her as the light went out of her eyes. There was chaos, and bodies everywhere.\n\nTeddy was down, Sherry was down and Fatima was holding her. Moshe was bleeding from the face, the blood gushing.\n\nI looked around wildly and saw my guards, two with pistols drawn. I surged out from under Jo, rage consuming me, grabbing the pistols and staggering towards the shooters. I was screaming but didn't know it, shooting with a calmness borne of rage. Three of the shooters went down, but two more were still standing. I was just about to shoot one in the head when something hit me and I fell.\n\nI lay there, letting the rage seep out of me. I was very tired, and couldn't remember why. I shut my eyes, ready for a nice rest, when something wet hit my face. I managed to get one eye open to see Maddy, crying hard and cradling my head on her lap. \"This sure feels good,\" I thought, as I drifted off.\n\n...\n\nI thought I was done with this story after the first chapter, but it kept calling me back.\n\nHere's an excerpt from Chapter three, and judging by this one, it will take me about a month to write unless some free time becomes available in the near future, and I don't see that happening.\n\n...\n\nS7:Jihad\n\nI sat on the comfortable cushion, inside the huge room, in a castle built centuries ago, and waited.\n\nI wasn't upset at the wait, it had taken me 37 months to get to this place, a few more minutes or hours wouldn't kill me. I idly hefted the bag they had allowed me to carry in, after they inspected it. The man who handed it back gave me a wolfish grin, recognizing a kindred spirit.\n\nI looked back at the journey that brought me here. In the blasts and gunfire that erupted that afternoon in England, many things had changed.\n\nJo was dead. Josh was dead. Teddy died, as did Sherry. Polly will carry the scars on her shoulder and in her heart for the rest of her life. Jack was injured so badly he was given a medical discharge, ending a promising career. He was healthy enough now to work, but he'd never wear a uniform again.\n\nMaddy was wounded twice, the first from the blast and the second from a bullet, but made a full recovery. She had managed to push Josef and Tati down and they didn't have a scratch. Tati was still in therapy after watching her mother blow herself and people she thought of as family up.\n\nShe had them now, in the cabin by the lake, waiting for my return. She knew I had it to do, and she didn't argue, just kissed me and told me to get it done. I hadn't seen her in almost a year.\n\nAnd me? I was dead too, shot down as I fought to defend my family. Maddy showed me the video, my face a mask of blood as I staggered forward, screaming in rage, with eighteen inches of my intestine hanging out of my stomach. It showed the shot that put me down, an AK 47 round that ripped through my chest, puncturing my lung, and showed Maddy cradling me as she cradled my head.\n\nAnd me? Well, I died too, officially. The force of the blast had thrown Jo into me so violently that her head smashed my face. Broken nose, broken cheek, fourteen teeth knocked out and a jawbone shattered in three different places. There wasn't enough left to rebuild, so they replaced.\n\nMy jaw was a lot squarer now thanks to the implants they had to put in, my nose was a totally different shape, my cheekbones more pronounced. If you looked at me now you would never know who it was. My voice was even different now, thanks to a damaged voice box.\n\nAnd my hair had gone white, which no one could explain. I roused from my reverie as three men entered the room, dressed in traditional garb, down to the scimitars strapped to their backs.\n\nOne took a seat opposite me, while a woman came in, served us tea, and left. We saluted each other with our bowls, and sipped in silence.\n\nWhen he spoke, it was softly, but carried well, especially as he had his face covered.\n\n\"You know who I am?\"\n\n\"Of course, Eminence. You are the Old Man Of The Mountain. You know who I am?\"\n\n\"Naturally. You were Pete Trammel, leader of S7, although now you're know only as The Ghost.\"\n\nWe eyed each other for a second. \"So then, what may I do for a ghost?\"\n\n\"What your group has done for over a thousand years. Kill a man for me.\"\n\nHe nodded. \"Ah. Just so. But you could easily kill this man yourself, why would you need us?\"\n\n\"Because I want him to know it's coming, and he can do nothing to prevent it. I have a gift for you, Eminence.\"\n\nI looked into my bag, pulled out a head and gently rolled it towards him. \"An enemy. I would have brought him to you alive, but he didn't want to cooperate.\"\n\nHe picjed the head up, inspecting it. I could feel his grin through the mask. \"Just so, Ghost. You know I offered a handsome bounty for anyone who could bring me his head.\"\n\nI waved my hand. \"It is a gift, just as you give me a gift by allowing me to live, knowing how much I could bring from my enemies.\"\n\nHe laughed. \"A Ghost has no enemies. It would be almost impossible for me to get them to accept you at face value. Besides, I think life will be much more interesting with you alive. So, what is this job you would ask us to do?\"\n\nI pulled the other two heads out. \"Recognize them?\"\n\n\"One. The other is without a doubt his brother. How did you acquire them?\"\n\n\"The old fashioned way. I took them. What I want from you is to deliver these, while he sleeps, with a message. The rest of his family is next, and when they're gone, only then will I come for him. Pin it to his pillow with this dagger.\"\n\nI pulled out the dagger I had given Josh. His guards stiffened and put their hands on their weapons. Their leader said something to them and they relaxed. I lay the dagger undrawn in front of him.\n\n\"Put in the note that this is one of a matched set, and I'll be along directly to get it back, and enjoy it when both are wet with his blood.\"\n\n\"This intrigues me. You can pay the fee?\"\n\nI handed him a card, which one of the guards ran through a computer sitting in an alcove, returning it and nodding.\n\n\"It is done. Are you sure you wouldn't like us to handle this for you You know one look at his sons and he will know who's coming.\"\n\n\"Some things, Eminence, you have to do yourself.\"\n\nHe nodded, and made a hand gesture. The audience was over. I rose, and bowed with respect, bringing my face close to one of the heads. There still seemed to be a surprised look on his face, The one thing I regretted as I looked at it was not putting the brand that was in the middle of his forehead on while he was still alive. Oh, well, maybe next time.\n\nI followed my guide out, ready to be blindfolded as I left. The head looked out blankly, the large S7 plain on his forehead.\n\nIt was the opening thrust of my personal Jihad."
    ],
    "authorname": "qhml1",
    "tags": [
        "loving wife",
        "sequel",
        "action",
        "war"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/s7-holy-war"
}