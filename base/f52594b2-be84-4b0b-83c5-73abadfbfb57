{
    "title": "Ryan Ch. 08",
    "pages": [
        "A week later everything was back to normal. Dani was back at work and feeling great. Crystal was home and James was back at school; but Ryan us up to something. Dani hadn't a clue what it was, but he'd asked her not to make any plans for the weekend. They'd talked about going on a dinner cruise for a romantic evening, but that was a few weeks ago and Ryan hadn't mentioned anything more about it. \n\n* \n\nA few days later Dani and Ryan were having a leisurely night at home watching movies on DVD when she decided to broach the subject of their plans for the weekend during a commercial break. She was too excited to be subtle about it. \n\n\"Ryan, when are you going to tell me what you're up to?\"\n\n\"At the appropriate time,\" he said, his eyes twinkling. \n\n\"Aw, come on, you know I can't stand waiting,\" Dani complained.\n\n\"Yes, I know my love, but you do like surprises. You wouldn't want to spoil it by knowing ahead of time, would you?\" he asked as he absently stroked her thigh.\n\n\"Well, I guess not,\" she conceded reluctantly, laying her head against his shoulder.\n\n\"It's not the dinner cruise is it?\" she asked with an impish grin. \n\nLaughing at her persistence, Ryan said, \"I'm not telling you, so just be patient.\"\n\nDani was silent for a moment, then sexily rubbed her breasts against his arm and asked, \"Are you sure you don't want to tell me?\"\n\nNot waiting for an answer:\n\n\"Pretty, pretty please,\" she entreated while stroking his cock into firmness.\n\nThe next thing Dani knew, Ryan was on top of her, kissing her voraciously and grinding his hard on into her thigh trapped between his legs. \n\nHis oral mastery was thorough and Dani struggled to catch a breath as she withered and clawed at his back as he plowed her mouth. She counter attacked sucking and biting while trying to rip his clothes from his body. \n\nWhen Ryan finally came up for air, he smiled at her and said calmly, \n\n\"Don't think that I'm going to let you use your sexual wiles to get information. I'm just not that kind of a guy.\" \n\nDani stared at him, and then blinked. The look of shock on her face was priceless.\n\nShe was so stunned at the cessation of their tongue duel that she didn't fully comprehend what he was talking about. Then slowly a smile spread across her face. \n\n\"Once you shoved your tongue into my mouth, I forgot what the hell we were talking about,\" she admitted unabashedly. \n\nRyan dropped his head down to her shoulder and within seconds he was quaking with laughter. \n\nDani joined in laughing until she cried. \n\nAfter that, she didn't try to wheedle any information from him. She was curious, but he was right; she would have been disappointed if the surprise was spoiled.\n\nStill her efforts weren't in vain. That night Ryan spanked her into ass warming bliss. She even demanded a second round for being a very, very naughty girl. \n\n* \n\nThe next evening Ryan was preparing dinner with Dani sitting at the breakfast bar when she suddenly shrieked, \"Oh, my God, I forgot about Christmas!\"\n\n\"No need to worry, baby, it's still coming,\" Ryan grinned.\n\n\"That's not what I meant, Ryan Sinclair, and you know it,\" Dani huffed indignantly. \n\n\"I know it's coming, that isn't the problem. The problem is that so much has been going on that I forgot to even write my list. I'm usually done with all of that by now. It's the sixth already.\" \"You still have a lot of time,\" Ryan said taking a seat next to her. \n\n\"Yeah, but I hate malls,\" Dani moaned. \n\n\"There's an easy solution,\" Ryan said.\n\n\"I'm listening.\"\n\n\"Now that we are together my folks consider you a member of the family. In our family everyone puts their name in a bowl and whoever gets your name buys you a present. That takes care of having to run around like crazy people dodging the mall crowds and traffic.\"\n\n\"Hmm, that actually sounds like a good idea, especially for a large family,\" Dani said, losing some of the feeling of panic.\n\n\"I could see how the gift giving could get out of hand if you didn't do something like that.\"\n\n\"Yeah,\" Ryan agreed.\n\n\"We went through a few of years of over indulgence before my Mom and Dad put a stop to the madness. We have a large extended family and it was just way too much.\"\n\n\"What about everyone else?\" Dani asked.\n\n\"We can buy everything on-line and request express shipping. If something comes in and you or I don't like it, we'd still have time to buy something locally which wouldn't take nearly as much time. As for gifts to our mutual friends and your parents, we'll buy them together as a couple.\"\n\n\"All right, it sounds like a plan.\" Dani agreed thinking that Ryan lived up to the nickname Crystal gave him, Mr. Fix It. \n\n* \n\nIt was Friday afternoon and Dani was finishing up a letter dictated by her boss when Ryan called on her cell phone.\n\n\"Hey, Ryan, what's up?\"\n\n\"Hi, sweetheart; when you get home, pack a bag for two days, casual stuff. Oh, and a bikini. We're leaving at seven.\" \n\nTo say Dani was flabbergasted would be an understatement. For a moment she was speechless.\n\n\"You still there, baby? Ryan asked.\n\n\"Yes, I'm still here, I just didn't think things would go down this fast. Ok, I'll be packed and ready to go; anything else?\"\n\n\"No, that's it. I'll give you more details later or maybe not,\" he teased.\n\n\"Grrrrr, you beast!\" Dani barked.\n\n\"Only for you, baby. I'll wrap up things here and see you at home.\"\n\n\"All right, Ryan. I love you,\" Dani whispered.\n\n\"Love you too, angel. Bye.\"\n\nDani quickly wrapped up the letter and put it on Mr. McClain's desk. He was already gone for the day, but before leaving he gave her permission to leave as soon as she finished.\n\nBefore going home, she stopped at her place to pick up a few things. \n\nShe got to her condo around four thirty and immediately went to her walk-in closet where she pulled out a suitcase and a travel size make up bag. She then took a shower and changed into a pair of red jeans and a gray and red pullover top. After filling the suit case, she locked up and headed to the place that was now home. \n\nOnce she got there, she went to the closet in the master bedroom and packed a few other things, including some personal hygiene items and sunscreen. Even though she didn't have a clue as to where they were going, she knew one thing; there would be water somewhere near, either in the form of a pool or the beach. \n\n* \n\nRyan came through the living room as Dani walked out of the bedroom. He was removing his shirt when he looked up and saw her.\n\n\"Hi, baby, all packed?\" he asked. \n\nSeeing her nod, he replied, \"Good. I need a quick shower, and then we can hit the road.\"\n\n\"Care to tell me where we're going now?\" Dani asked, forgetting her promise not to ask any more questions.\n\n\"Ummm, no,\" Ryan said resolutely.\n\nHe stopped in front of her and planted a kiss on her forehead before heading to their bedroom.\n\nWhile Ryan was in the shower, Dani called to let Crystal know that she would be out of contact for the weekend.\n\n\"Hey, Dani, I was thinking about calling you,\" Crystal said. \n\n\"Isaac's spending some time with Briana this weekend. She's been acting up and he figured she might need more daddy time. I thought we could do something tomorrow, if you weren't busy.\"\n\n\"I would love to do something any other time Crystal, but Ryan and I are going away for a couple of days. That's why I'm calling. He hasn't given me a clue as to where we're going, except to tell me to pack something casual and a bikini. \n\n\"Oh, wow. Mr. Fix It is so romantic.\" \n\n\"Yes, he is romantic, but closed mouth. I don't even know what accommodations we'll have when we get there,\" she said. \n\nThen she confided, \"I keep trying to find out what Ryan's doing, but I still want it to be a surprise. It must be a sickness Crystal. \"\n\n\"Nah, you've been like that since you were a kid. Christmas was the worse for you.\"\n\n\"Yeah, I remember.\" Dani sighed.\n\n\"I'm sorry about this weekend, Crystal, but could you give Mom and Dad a heads up. I don't want to call because you know Mom, she'll wrangle me into a long conversation.\"\n\n\"Ok, Sis, I'll do that. Have a good time and tell Mr. Fix It I said hi,\" Crystal chortled.\n\n\"All right, I will,\" Dani said. \"Bye and thanks.\"\n\nDani went back to the bedroom to see if Ryan needed any help. \n\nShe was sitting on the bed thinking about their trip when he came out of the bathroom, naked. She enjoyed the sight of his hard muscled body and the pleasure it gave her. Following the light trail of blond hair down to his big cock, she gasped, always in awe of his endowments. Even soft, it was big. She lamented that there wasn't enough time to indulge her ever present desire. \n\nHearing Dani's gasp, Ryan smiled at her as he went over to the chest of drawers and got a pair of black briefs and socks, giving her a front row view of his awesome ass and broad muscled back. She licked her lips and imagined kissing him all over. Unaware of her lustful thoughts, Ryan went into the closet. He came out dressed in a pair of black slacks with a dark gray long sleeve pullover shirt and carrying a suitcase. \n\nSetting the suitcase at the foot of the bed, he sat down and started humming I'm In The Mood For Love as he put on his socks and shoes. After he'd finished, he got up and said, \"Be right back, I need to do a security check and then we can leave.\"\n\nHe returned ten minutes later.\n\nSmiling he declared, \"Ok, everything is secure. Let's go, baby.\" \n\nDani got off the bed and picked up her purse and make up case while Ryan picked up the suit cases. He walked out of the bedroom without another word. \n\n\"Huh,\" she thought, \"he's turned into Mr. Mysterious.\"\n\nDani set the alarm and locked the door while Ryan put their luggage in the trunk of the Jag.\n\nOnce they were on the Interstate, she realized that they were heading south; that still was a lot of real estate. Dani really didn't mind not knowing where they were going, she was just happy to be with Ryan. They'd been together seven months and she almost couldn't remember what it felt like not to have him in her life. \n\n* \n\nAfter a time, Dani began to see the signs pointing to Sarasota. \n\nShe'd never been to Sarasota, but knew a little about it. It had the Ringling Museum of Art and some beautiful beaches. Her friend, Charlotte, had relatives there and visited them often. \n\nLulled by the moving car, she eventually fell asleep not waking until Ryan rousted her by gently shaking her shoulder.\n\nHer eyes fluttered opened and he said, \"We're here, baby.\"\n\nDani was groggy, but when she got herself oriented, she looked out through the windshield and saw a large beach house. The porch light, which was controlled by a timer, was on. \n\nShe was mesmerized by the sight. \n\n\"Ahem!\" Ryan said noting her stunned expression.\n\nDani smiled and took his offered hand and he helped her out of the car. \n\n\"What do you think?\" he asked, his hand sweeping out to the beautiful panoramic scene before them. \n\n\"It's gorgeous,\" Dani said excitedly. \"Is this your place?\"\n\n\"No, it belongs to Mom. My Father left it to her.\" \n\n\"With all our relatives, someone manages to be here most of the time. My Dad's brother Ken and his wife Janet were here last. I called and spoke to Ken a couple of weeks ago and told them I wanted to bring you here.\"\n\n\"We didn't kick them out, did we?\" Dani asked concerned.\n\n\"No, we didn't,\" Ryan said. \"As a matter fact, they stayed a few days longer than they'd originally planned knowing we weren't coming until today.\"\n\nTaking her hand, he pulled her along, \"Come on, sweetheart.\"\n\nOnce they were on the wrap around porch, Ryan turned Dani around to face outward from the house and put his arms around her waist from behind.\n\n\"Now look out there,\" Ryan whispered in her ear, his warm breath making her shiver. \n\nDani's breath caught, because until they got on the elevated porch, she couldn't see the great expanse of water. The house was just off the gulf, about a hundred yards. The full moon sparkled off of the water creating the perfect postcard picture. \n\nDani felt a slight pleasurable breeze as she stood there wrapped securely in Ryan's arms. She couldn't think of a more romantic setting. There were even red roses twining through the white washed wooden railings of the porch. \n\n\"Let me show you the rest of the house, I'll get the luggage later,\" Ryan said taking her hand.\n\nInside the house was just as lovely. The furnishings were light and airy, but solid and exquisitely crafted. The interior had the feeling of a traditional beach house, but the d\u00e9cor was elegant without being pretentious. \n\nRyan showed Dani around, pointing out things he thought would be of interest to her. She knew that he was proud of the place as he explained that his father spent many summers at the beach house as a child. Helen and Dan even spent their honeymoon there.\n\nSince neither of them had eaten, by the end of the tour they were hungry and went to the kitchen in search of dinner. Leaving nothing to chance, Ryan had given his uncle a list of foods to stock which assured that he wouldn't have to leave the property for anything for the next two days. \n\n*\n\nAfter the meal, they went out on the porch to enjoy the serenity of the calm peaceful surroundings. \n\nThey were settled in rockers and Dani wondered if they would be sitting like that, holding hands, when they were old and gray. \n\nAs she pondered their future, Ryan's voice broke through her thoughts.\n\n\"Are you happy, baby?\" \n\n\"Extremely,\" she said without hesitation. \n\n\"There is no place I'd rather be. But, there is one thing I'm dying to know. How long have you been planning this little trip?\"\n\nSmiling at her with his eyes sparkling, \"About two months,\" he answered.\n\n\"Two months!\" Dani exclaimed.\n\n\"I'm impressed. I don't know a woman who can keep a secret that long.\"\n\n\"Oh, I'm great at keeping secrets. I told Micah because he's in charge of emergencies at the bar while I'm gone, but no one else. He's about as closed mouth as I am. If there's something he can't handle, he knows he can reach me on the house phone, my cell phone is off. So, here I am spending a romantic weekend with my woman,\" he said with a smile.\n\nThey spent another half hour talking and just enjoying the pleasure of each other's company. \n\nAlong the way, their conversations led them to a discussion of music.\n\nDani loved I Don't Want to Miss a Thing by Aerosmith. To her surprise, so did Ryan. He said that every time he heard that song, he thought of her. He even had it on a Cd in his office. \n\n\"That song really gives me the warm fuzzies,\" Dani said with a sigh. \n\n\"In that case, come with me,\" Ryan said with mischief in his eyes.\n\nHe took both of her hands in his and pulled her out of the comfortable rocker and led her into the house. \n\nAs Dani stood in the middle of the living room, Ryan went over to the stereo and searched through the CDs. \n\nWhen he turned on the stereo system and put the CD in, she heard the first notes of the very song they were talking about. Ryan came back to Dani and took her into his arms. With their bodies pressed together, he guided her around the room. \n\nAs she heard the refrain of the song, she knew in her heart, that she felt the exact same way about Ryan.\n\n\"Ryan,\" she whispered, looking up at him, \"I don't want to be anywhere, with anyone else, just right here with you.\" \n\n\"Sweetheart, I've never felt so in tuned with anyone, so bound by that connection,\" Ryan said. \"I could probably think of a number of reasons why, but none of them would really explain how much I miss you when we're not together or how happy I am to see you each morning, in my arms, in my bed.\" \n\nHe kissed her soft lips and stepped away from her. \n\nSeeing her confused looked, he smiled and said, \"I'll be right back.\" \n\nDani watched, frowning, as Ryan headed back outside. \n\nShe was sitting on the sofa, her back to him when he returned. \n\nComing around the sofa, he stopped, looked at her for a couple of seconds, and then knelt in front of her. \n\nDani stared, wide eyed.\n\nHer gaze fell from his eyes to the flat 4 inch squared green box in his hand. It was the type of box that could contain a bracelet or necklace. Dani didn't know what to think. \n\n\"Open it,\" Ryan urged.\n\nTaking the box from his hand, Dani opened it and her jaw dropped. Nestled in the white satin was a ring. Not just any ring, an exquisite engagement ring. While she struggle to give her mind time to accept its significance, Ryan said,\n\n\"Danielle Marie Carter, will you marry me?\" \n\nDani hesitated, her brain still coming to terms with what Ryan was asking; and then she whispered, \"Yes.\"\n\nAs she looked at Ryan, seeing his joy, tears started to burn the back of her eyes. Then helpless to stop them, they rolled down her cheeks and unable to contain her joy, she cried out, \n\n\"Yes, yes, yes, yesssss!\"\n\nSmiling through her tears, Dani slid off the sofa down to the floor where Ryan still knelt and threw her arms around his neck sobbing and repeating that one word over and over again. \n\nRyan held her tightly, stroking her back as he whispered words of love and happiness.\n\nAfter some minutes, Dani regained a bit of control, but she was truly stunned. She wanted to pinch herself to see if it was a dream. Sitting back on the sofa, Ryan's arms around her, she asked, looking down at the ring with its twinkling diamonds, \n\n\"When did you get this?\" \n\n\"Remember that corporate trip out of town?\" he asked.\n\nShe nodded.\n\n\"The necessity of the trip was real, but I took the opportunity to kill two birds with one stone. I bought the diamonds while I was there. My Dad has a friend who's been in the wholesale diamond business a long time. When I got back in town, I had a local jeweler custom make the ring and set the diamonds. I kept it in my office safe at home.\"\n\n\"No one in the family knew about my intention to ask you to marry me, not even Micah. I had it put in that over sized box so that you wouldn't suspect what it was right away,\" he said.\n\nRyan took the ring out of the box, sat the box on the table and held Dani's left hand as he slipped the ring on her finger.\n\n\"And you call me sneaky,\" Dani charged.\n\n\"You are, I'm just better at it,\" he stated. \n\n\"Mrs. Ryan Sinclair,\" she sighed, looking down at what would be the symbol of their union.\n\n\"It's the most beautiful ring I've ever seen, Ryan.\" \n\n\"Only the best for you, sweetheart,\" Ryan vowed, caressing the side of her face.\n\n\"Now that we're getting married,\" he said, \"we have some things to talk about. We've talked about how important family is to each of us in general, but now it's time for us to talk about what we want for our own family.\" \n\nSmiling, Dani said, \"I've actually given a bit of thought to that question. With my Mom frequent reminders about grand kids, how could I not? Anyway, I'd like at least two kids and as many as four.\"\n\n\"I was thinking eight,\" Ryan said without batting an eye. \n\n\"Eight!\" Dani squeaked. \n\n\"What will I do about little Ryan time? I'll be too tired and knee deep in diapers for more than a decade; that's assuming I could get pregnant that often. \n\n\"I'm kidding, baby,\" Ryan said with a grin. \n\n\"I think eight is a bit much, but four would be great; maybe five?\" he entreated.\n\nDani saw his dimple and stared at it for a few moments before caving in.\n\n\"All right, if God is willing, I can do five little Sinclairs. Heaven help me if they're all boys,\" she sighed dramatically. \n\nThen she spoiled it by laughing with Ryan joining in.\n\nWhen they recovered, Ryan said,\n\n\"What about the wedding? I was thinking April in the garden at home. The flowers will be blooming, it would be beautiful. We could have all the food catered with a wait staff.\" \n\n\"That's a great idea,\" Dani agreed.\n\n\"Four months gives us enough time to plan everything and get out the invitations without rushing. I'm sure your mom and Haley will help, as well as Crystal.\"",
        "\"I don't think we need to worry about help. Once my Mom and my sister hear that we're going to be married, you will be hard pressed to get rid of them,\" Ryan laughed.\n\n\"Aww, I wouldn't want to get rid of them, they're sweet. Besides, they planned their own weddings, I could use that expertise. They'd certainly have to help with the guess list, you too. I don't know who all you might want to invite, but the thought of a huge wedding is kind of daunting,\" Dani said.\n\n\"The wedding can be as small as you like, but I have a feeling that once you actually start writing your own guest list it might be longer than you think. Remember our folks will have people they will want to invite and you might find it hard to say no.\"\n\n\"Yeah, I guess so,\" Dani sighed.\n\n\"Sweetheart, I don't want this to be a strain on you. If you think you can't or don't want to handle all of this, we could elope, but I think our parents would kill us,\" he said only half joking. \n\n\"No, I don't want to elope,\" Dani said. \"I want to have a traditional wedding, but I just have to make sure that I know what's all involved. Did you know that most people take about a year to plan a wedding? \"\n\n\"Not happening,\" Ryan declared. \"I'm making sure you don't change your mind.\" \n\n\"Seriously, baby, if it's too much, we can always hire a wedding planner to do all the work. As a matter of fact, I think that's a good idea. You still get to make all of the decisions. The planner will just carry out your wishes and make sure that everything goes off without a hitch.\" \n\n\"I didn't think about that,\" Dani said. \"But, even if I wanted one, I don't think I could afford it on top of the wedding and reception. I know the parents of the bride are supposed to pay for the wedding, but I'm going to pay for it myself.\" \n\n\"No,\" Ryan said emphatically. \n\n\"Weddings are expensive and I don't want you to spend everything you've saved or do without something that you really want. I want this to be the wedding of your dreams. To make myself clear, while planning this wedding what you want should be your only concern, not how much it costs. I'll set up a separate account at the bank in your name. I can afford it, so let me do this. Agreed?\" \n\nDani started to protest, but the bottom line was, she couldn't afford the wedding of her dreams on her own. \n\nInstead of mounting a protest that she wouldn't win, she thanked him for his generosity and kissed him.\n\nRyan grunted when the kiss ended and repositioned their bodies so they were lying facing each other. Then he licked Dani's lips and kissed her, deeply. \n\n\"Ummmm.\"\n\nHe caressed her breasts through her top as he slipped his leg between hers, rubbing his thigh against her warm heat. Breaking the contact with her lips, he looked into her eyes, feeling an ache growing in his body.\n\n\"You know I want to make love right now, don't you?\"\n\nDani nodded and ran her hand down his chest and over his hardening cock. \n\nRyan's breath came out in a hiss.\n\nHe bit her bottom lip and then soothed it with his tongue, while his hand caressed her plump ass. Reaching down, he grabbed her wandering hand placing it back on his chest.\n\n\"We still have some details to iron out. Let's do that first, then we can indulge our lust for each other,\" he promised with a wicked grin.\n\n\"Oh. Ok, party pooper!\" Dani groused.\n\n\"I'll remind you that you said that later,\" Ryan assured her.\n\n\"I can barely wait,\" Dani said saucily. \n\n\"Now then,\" Ryan said as they regained their former upright position, \"the next decision is the honeymoon. Anywhere you want to go is fine with me; I don't intend to spend time looking at the scenery anyway.\" \n\n\"Does that mean, you're not going to give me a chance to see the scenery either?\" Dani asked with an arched brow. \n\n\"Oh, you'll see scenery, but it just won't be outside.\"\n\n\"You're so bad.\" Dani charged.\n\n\"That's news to you?\" Ryan fired back.\n\n\"You've got me there. Well now, I just thought of a great piece of scenery I'd like to see on our honeymoon and it's not your man parts. Well, I do want to see that and lots of it, but I have something else in mind too.\" \n\n\"Would you care to share with me?\" Ryan asked.\n\n\"Nope, you get to be surprised. Just the thought of it is making me achy,\" Dani said, batting her lashes at Ryan. \n\nRyan arched his brow, but his quirky smile ruined what was supposed to be a stern expression. \n\nStroking the hair at his temples, Dani turned serious and said, \"I love you so much.\"\n\nRyan gave her a long deep kiss that left her whimpering.\n\nWhen the kiss ended, he said, \"I love you too, Dani. There is a lot to talk about, but I think it can wait until later, I can't. Right now I want to make passionate love to my sexy wife to be.\" \n\n*\n\nWhen they got to the bedroom, Ryan flipped on the light and asked Dani to sit at the foot of the bed. He then knelt in front of her as she watched him closely. When he started taking off her shoes, she smiled.\n\nThe room was quiet except for her sighs of anticipation. \n\nRyan ran his finger up and down the instep of her foot and up her leg and heard her gasp of pleasure. Looking up he smiled at her and said, \"More to come, sweetheart.\"\n\nAfter taking off her shoes, he unbuttoned and unzipped her jeans. Gathering up the waist band and the back of her panties, he pulled both garments down, saying \"up\" so that Dani lifted her butt, holding on to his shoulders for stability. \n\nWith ease, Ryan pulled them down below her knees. He then left off removing her jeans and panties to concentrate on her beautiful luscious bosom. After pulling her top over her head, he released her bra from its front closure, sucking in a tight breath as her succulent breasts spilled forth. He removed the bra with haste and pressed his nose between her breasts to inhale the light scent of jasmine mingled with Dani's own heady aroma.\n\nQuickly he divested Dani of her pants and panties and stood up to undressed himself. Naked, he knelt again between her legs, the fragrance of her arousal assailing his senses. He grunted as he felt his cock swelled. \n\nDani stroked from his head, down his neck to his upper back. She loved the feel of his corded muscles, his strength. She heard him moan as she pulled him into her body, his mouth seeking and then opening to cover her right nipple. \n\n\"Oh, yes Ryan. Suck it... suck....ummm,\" she groaned as his warm mouth and wet tongue wooed her teat into a hard sensitive pebble. Giving attention to its twin, he continued to suckle as she stroked his face and caressed his shoulders.\n\nRyan came up for air and leaned back to look at her face. His eyes were intense, his breathing labored. He put his hand behind her neck and gently brought her forward until his lips were pressed to hers. He slid his tongue into her mouth and engaged her in a sensual game of thrust and parry. \n\nInterminable minutes passed as they plumbed the warm depths of each other's mouth, breathless and aching for more. Separating to fill their lungs, they tried to slow their rising ardor.\n\nRyan took great gulping breaths as he fought to lose some of the immediacy of ejaculation. Pressing his hand to Dani's chest, he pushed slightly and said, \"Lie back, baby.\"\n\nDani did as instructed, her inner walls tingling in anticipation. Then she groaned as Ryan lifted her legs and placed them over his wide shoulders. \n\nIn short order he pulled her butt to the edge of the bed and in the same motion pressed his lips to her aching pussy. \n\n\"Ooooohhhh!\" \n\nDani wailed as Ryan's tongue pierced her opening and slipped into the heated core of her womanhood. His thick tongue was every bit as potent as his big dick and drove her insane with pleasure. Time after time he brought her to the edge of orgasm before he finally allowed her to trip over into a glorious bone melting climax. \n\nThat night was a night to remember as Ryan laid claim to Dani in every position they'd ever tried, then a couple more. Through the long hours of the night and early morning, they reaffirmed their love and celebrated their commitment to each other in the throes of mutual sexual heat. \n\n* Dani awaken the next morning to a feeling of well being. \n\nHer body hummed like a well tuned machine bearing witness to her thorough satisfaction. Ryan used all the tricks he knew to wind her up and then send her thrashing through orgasm after orgasm. She was sore deep in her body, but she wouldn't have had it any other way. Even now, just thinking about how Ryan mastered her body made her tingle in her tender places. \n\nRyan was lying spooned behind her, her head tucked under his chin as he slept. Wrapped in his warm embrace, his hand cupping her breast, Dani sighed with contentment. She luxuriated in the knowledge that she would soon be his wife. The gorgeous ring on her finger was proof of his promise and commitment to her. \n\nAs Dani gave thought to the wonderful future held out to her, she felt Ryan stir. He pulled her closer to his solid body and squeezed her breast, achy and sensitive from their love play.\n\nMoaning softly, she turned over until she was facing him.\n\nWith his eyes still closed, Ryan adjusted his body to accommodate their new position. There was a slight smile on his lips, his breathing deeper. Dani reached up and caressed his jaw, feeling the slight rasp of stubble as his eyes opened. Those glorious green orbs stared at her for a long while. \n\n\"Morning, baby,\" he said finally, his voice deep and husky.\n\n\"Last night was something, huh?\"\n\n\"Uh, huh. I want more, too,\" she said, her fingers sliding down to stroke his hard muscled buttock.\n\nChuckling, he said, \"I thought you said that I wore you out and that you wouldn't be able to move for a week.\"\n\n\"You did and I did say that. But, it's morning now and things are kinda fuzzy. I think you need to do it again, to refresh my memory,\" she explained with a sassy grin.\n\nRyan nuzzled her neck.\n\n\"I will, but not until you soak in the tub. I know you have to be sore. Are you sore, baby?\" he asked, stroking the folds between her thighs.\n\n\"Yes, a little,\" Dani said as she grimaced at the contact. She was sore, but she still wanted Ryan again. \n\nAfter kissing her softy, he got out of bed and pulled her along with him to the bathroom. They brushed their teeth and washed their faces and Ryan shaved before he ran warm water in the tub while Dani poured in scent free bubble bath. \n\nRyan loved taking baths with her, but he didn't like what he called the girly smell of bubble bath. Dani, being a sensible woman, bought some scent free bubble bath; she sure as hell wasn't going to give up bathing with him. \n\nThey stayed and played in the bath for thirty minutes, the big iron claw foot tub keeping the water warm the entire time, easing much of Dani's soreness.\n\nAfter rinsing in the shower, they dried off. Ryan slipped into a pair of boxers and Dani put on a white knee length night gown sans underwear. Together they changed the linens on the bed. \n\nWhen they were back in bed, Ryan slipped between Dani's thighs and pulled up her grown until she was bared to his lust filled gaze. He plumped her breasts loving the contrast of his hand on her sweet caramel skin. He stayed a long time at her breasts enjoying the tasty dark chocolate treat at their center, cupping her flesh as he licked, turning her breathless sighs into urgent moans. \n\nRyan slid his hand from her breast down to the apex of her thighs, his fingers seeking entrance to her throbbing warmth. As he opened her thighs further, Dani arch against his hand, inviting him in. There was only the faintest echo of soreness, while her wetness eased his entrance into her pussy. \n\nRyan's finger slipped in all the way, his thumb rasping against her aching clitoris. It pressed into the tight little bud igniting sparks through her entire body.\n\nDani continued to rub against his hand, more urgently now. When he added another finger, she gave a soft squeal and more sweet liquid flowed from her aching core.\n\n\"Damn, baby, you're so wet,\" Ryan croaked as he thoroughly caressed her soft walls, his lips trailing kisses down her body to the place where they met his fingers.\n\n\"Ahhh, fuck!\" he cried out as her pussy gripped his fingers.\n\nEasing his fingers out until only the tips remained inside Dani; Ryan pressed her clit hard with the tip of his tongue, at the same time thrusting his long digits back into her pussy setting up a steady rhythm. Dani's body bowed and her back came off the bed as her orgasm suddenly caught and hurled her into delicious screaming pleasure. \n\nLater, after regaining her senses, Dani smiled at Ryan and traced his silky brow with her finger as he lay next to her. Gently, she caressed his face, sliding her hand down his neck to settle on his chest. She felt like she could just look at the smothering desire in his eyes and come again, so great was her appetite for this man. \n\n\"Ummm,\" She murmured, stretching as she pressed her entire length against him.\n\n\"My sexy kitten,\" Ryan chuckled and pulled the covers over their bodies. \n\nFrowning, she said, feeling his erection against her belly, \"You haven't come yet.\" \n\n\"I will after you've rested. It was an eventful day and I kept you up most of the night. Sleep,\" he said, kissing her on her soft lips, \"and dream of me.\"\n\nPurring like the kitten he called her, Dani nuzzled his neck and in a few minutes was asleep.\n\n * \n\nAfter opening the door to their home, Ryan picked Dani up and walked over the threshold with her in his arms. \"I'm getting in practice,\" he said.\n\n\"I like it. I can barely wait for the real thing.\"\n\nSetting her on her feet, he said, \"Be right back, gotta get the suitcases,\" then headed back to the car.\n\nDani sigh with pleasure.\n\nShe could barely believe that she was going to be married to Ryan and make babies with him. She felt so happy, so fulfilled when a year ago the last thing on her mind was meeting a man and getting married. \n\nThey agreed to be married in April, but between now and then there was a lot to do, starting with informing their families of their engagement. Tomorrow would be soon enough or the next day as far as she was concerned. Dani wanted to keep the news to herself for just a few days more. She knew what would follow would be questions, then a huge amount of work to plan the wedding. \n\nWhen Ryan came back with the luggage, she locked the door, re-set the alarm and followed him to the bedroom. He set the cases down inside the closet, at Dani's request. She'd put the dirty clothes in the washer tomorrow, tonight she wanted to bask in the glow of being newly engaged.\n\nThe trip from Sarasota was only an hour and a half, which gave them a little more time at the beach house. They were able to indulge their libidos and shower before leaving. Now, they partially undressed and sat on the sofa. Ryan in his boxers, Dani slipped into a black silk night shirt. The room was bathed in soft glowing light and with the push of a button on the stereo remote, soothing music softly filled the room. \n\nRyan reclined on the wide comfortable sofa with Dani's warm softness draped over his hard frame. She idly hummed to the music and twirled her finger through the dark golden mat of hair on his chest. She was happy and he couldn't think of anything that gave him more pleasure than knowing she would soon be his wife. \n\nShe exhaled deeply, bringing Ryan out of his revelry.\n\n\"What's the matter, sweetheart?\" \n\n\"Ugh, I really do not want to go back to work tomorrow. I just want to lie here with you and wallow in my happiness, maybe think of work in a few weeks,\" Dani groused.\n\n\"Well, you know you don't have to work. You can be home all the time if you want,\" Ryan said.\n\n\"Yeah?\" Dani questioned.\n\n\"Yes. There is no financial reason for you to work and it would be easier for us to take off on the spur of the moment to go somewhere like the Caribbean. It's up to you; I know you enjoy your work.\" \n\n\"I do like my job and you're gone during most days anyway. I don't know. Maybe things will be different when we have kids. I'll have more to do with my days, but it will be harder to leave on the spur of the moment then. I'll think about it, but I won't make any decision until we talk again, ok?\" Dani said.\n\n\"Ok,\" Ryan agreed. \n\n\"Now let's get to the situation at hand. When and how are we going to tell the folks about our engagement?\" \n\n\"I think it will be fine to call my parents since they live out of town,\" Dani said, \"but I definitely think we need to tell your parents in person.\"\n\nThinking a bit, she added, \"Better yet, why don't we just invite them to dinner Friday night. We could invite your immediate family and Crystal, the rest of our friends and family we could tell later.\" \n\n\"How are we going to keep it secret until then? That's a big rock on your finger and someone is bound to notice and let the cat out of the bag,\" Ryan reasoned.\n\n\"There is that,\" Dani acknowledged, lifting her hand to once again admire the fiery sparkle of the diamonds. \n\n\"As much as it pains me, I can put the ring away until Friday.\"\n\nGrinning, Ryan asked, \"Are you sure you can keep a secret that long?\"\n\nWith a grunt Dani acknowledged, \"Barely,\" which made him chuckle. \n\n\"One thing though,\" Ryan said, \"We can have dinner brought in. That way we don't have to stress out about the meal after work. We'll decide on the menu tonight and I'll call Callahan's for delivery.\" \n\nCallahan's was a full service restaurant that also did special order and catering with enough notice. \n\n\"That would be great,\" Dani agreed. \"Getting off work, then preparing a big meal would have been hard.\"\n\nDani started to say something else, when a thought popped into her mind.\n\n\"Oh man, Crystal is going to kill me for keeping this a secret.\"\n\n\"Don't worry, baby, I'll protect you from your big bad sister,\" Ryan teased. \n\n\"Huh! She'll kill both of us,\" Dani laughed.\n\n\"Well, before we have to meet our maker, how about practicing the honeymoon again,\" Ryan said with a shameless leer.\n\n* \n\nRyan ended up calling the members of his family while Dani called Crystal. Everyone's partner was invited but, unfortunately, Amber was on another business trip, Amanda was visiting her parents in New York, since she would be spending Christmas with the Sinclairs and Isaac was working late. \n\nWith the dinner coming up, there were still other things to do. Although Dani had gotten the majority of her on line shopping done, there were a couple of things that she needed to purchase locally. She took a couple of hours off her work day, in the morning, to go to the mall. Everything went smoothing and she had all the presents wrapped and put away by Thursday evening. \n\n* \n\nFriday arrived and Dani was on pins and needles. She left work at three o'clock, which gave her enough time to shower and change clothes. The delivery from Callahan was expected at five thirty. Their family was due to arrive at six. \n\nShortly after Dani got home, Ryan arrived and they took a shower together. As usual, it got heated between them, but Dani slowed things down knowing that they didn't have time. She agreed to let him have his wicked way with her after everyone one left, which left both of them in a state of anticipation all evening. \n\nThe food arrived on time. Dani placed the dishes either in warming pans or in the oven until everyone was ready to eat. \n\nCrystal was the first to arrive and she was already curious about the dinner invitation, but she didn't let on. It wasn't that she hadn't been invited to dinner with Dani and Ryan before, just not with his family in attendance. \n\nHaley and Matt arrived ten minutes later, closely followed by Ryan's parents, then Micah and Caleb who came together. Almost everyone was in a good mood and happy to have received the dinner invitation, but there was something going on with Caleb who smiled, but didn't exude his usual teasing charm. ",
        "Dinner was buffet style with the food set out on the large center island in the kitchen. Everyone filled their plates and sat down in the adjoining dining room. Ryan sat at the head of the table with Dani at his right. \n\nThe dining room was large, fully able to accommodate up to twelve people easily. \n\nDinner was a boisterous affair with everyone contributing to the conversation discussing everything from little Michael to Micah's newest client. It was obvious that no one knew that Ryan and Dani had gotten away for the weekend, except Crystal and Micah, who hadn't said a word. \n\nAfter they'd finished eating, Ryan, not wanting to wait any longer, decided it was time to get the real party started.\n\nLooking around at everyone, he said, \"By the way, Dani and I went down to the beach house this last weekend.\"\n\nTurning to Dani, Haley asked, \"How did you like it. Isn't it just glorious?\n\n\"Oh my god, Haley,\" Dani gushed; \"the house was absolutely gorgeous with a picture perfect setting. It was really hard to leave; I hope that wasn't our last trip there.\" \n\n\"I'm sure it won't be,\" Haley said, purposely looking at Ryan, who only smiled at her. \n\nContinuing, she said, \"I know what you mean. Matt and I spent a couple of weeks there last summer. It was so peaceful. Although it's isolated, we didn't feel like anything was missing. We're on the go a lot, especially since we have Michael now, so we're really looking forward to our next trip down there.\" \n\nJoining in Helen said, \"Besides being so peaceful, it's so romantic. I remember when Dan and I first went there. The flowers were in bloom, the weather was beautiful, clear and sunny the entire time. It was like being in paradise.\" \n\n\"Except, we didn't see a lot of the outside,\" Dan interjected to Helen's embarrassment. \n\n\"Dan!\" she admonished.\n\nSmiling Dan said, \"Uh, we didn't get outside much because we just really enjoyed the interior d\u00e9cor. How's that, honey?\"\n\nShaking her head, Helen smiled and said, \"That's just as bad. You're incorrigible.\"\n\n\"Yep, that's me,\" Dan replied with a twinkle in his eyes.\n\n\"Ahem!\" Ryan said, \"I don't think we'll ever be old enough to hear stuff like that from you Dad. We'd rather be left with the illusion that we all came via the stork.\"\n\n\"Amen,\" Micah said in agreement while the others chuckled.\n\nGetting to his feet, Ryan said, \"Since we're all together, I'd like to say something.\" \n\nAll eyes turned to him, expectantly. \n\n\"This has been a great year for us as a family and I'd just like to say something to remind us of our many blessings. First of all, there was the addition to our family of Mallory, Haley and Matt's beautiful baby boy.\" \n\nLooking at his parents, he said, \"I wouldn't count on that being your only grand kid.\"\n\nEveryone chuckled, naturally assuming Ryan was referring to Haley's love for children. \n\nContinuing, he said, \"Then there is Caleb, the guy whose gift for gab was parlayed into a successful career as a writer. His third book was published and damn if it didn't hit the top of the New York Times Bestseller List last week. Congratulations, again, Brother,\" Ryan said nodding to Caleb. \n\nNodding back, Caleb smiled proudly.\n\n\"Now, we come to Micah, my partner in crime.\" \n\nMicah chuckled at that. \n\n\"He recently sold custom guitars to Eric Clapton and Carlos Santana, in the same week. Seriously Brother, you are an incredible artist,\" Ryan said. \n\n\"Thanks, Ryan, that means a lot coming from you,\" Micah said with feeling. \n\nRyan went on to say, \"I don't have the patience or imagination for writing and never in a million years would I have the touch Micah has when crafting his art and you can forgot about me carrying a baby.\"\n\nThat comment was met with hoots of laughter that soon reduced everyone to tears.\n\nBut, I did have some success of my own,\" he said when they'd all calm down. \"I saved the acquisition of a major property for the corporation earlier this year. However, my proudest achievement was having the good sense to fall in love with a woman who knows I'm not perfect, but still thinks I'm the best thing since sliced bread.\"\n\nTurning to Dani, Ryan raised his glass and said, \n\n\"Danielle Marie Carter, you're everything I ever truly wanted or needed in my life. Thank you for sharing the journey with me and agreeing to become my wife.\" \n\nEveryone looked stunned for a second, but when the realization of what Ryan said seeped into their brains, they all started talking at the same time. \n\n\"What?!\" Crystal squeaked.\n\n\"Oh, my God!\" came from Haley. \n\n\"When?!\" was all Helen could manage.\n\nMicah looked over at Caleb and they both said at the same time, \"Damn.\"\n\nDan just sat back in his chair and smiled thinking, \"More grand babies.\"\n\n\"I know you all must have questions and we'll answer them all,\" Ryan said grinning from ear to ear.\n\nCrystal sitting next to Dani, hugged her and said,\n\n\"Congratulations, Sis. I'm so happy for you. Mom is just going to flip out.\"\n\n\"Ryan and I will call them tonight,\" Dani said.\n\n\"They're crazy about Ryan. They both will be over the moon,\" Crystal whispered.\n\n\"Ok, people,\" Ryan said, \"let's go to the living room for the Q and A session. \n\nAs they all headed off to the living room, Ryan held Dani back. \n\nHe opened the drawer to the china cabinet and took out the box with the engagement ring in it. He slipped the ring on her finger and kissed the back of her hand. Smiling, they joined the family on the big sectional sofa. \n\nCrystal was the first to catch sight of the ring since she was sitting closest to Dani on the left.\n\n\"Let me see! Let me see!\" she gasped grabbing Dani's hand.\n\n\"Oh Dani, it's gorgeous.\"\n\n\"Thanks,\" Dani said, \"Ryan has good taste. It was tough taking it off so the announcement would be a surprise for everyone.\"\n\nDani was patient as everyone took turns holding her hand to admire the ring. After everyone was seated again, Ryan said, \"Mom, I know you're champing at the bit. Is there anything you want to ask us?\"\n\n\"I'm still a little shocked,\" she said beaming, \"but I do have one question. \n\n\"Did you get engaged at the beach house?\" \n\n\"Yes, we got engaged last Friday,\" he said. \n\n\"That's a week ago,\" Crystal said, shocked that her sister could keep a secret that long and a little peeved that she didn't tell her first. Then she realized that it wasn't about her. Dani was a grown woman, a woman about to be married. Besides, she didn't know if she could have kept the secret herself had she known. As it was, she so wanted to tell someone, anyone. But most of all she was happy for her sister and she admitted, just a little bit jealous. \n\n\"I planned the trip to the beach house a while back solely for the purpose of asking Dani to marry me,\" Ryan revealed.\n\n\"I've known for a long time that I wanted to marry her and couldn't think of a better place to do it. Once we got back, we decided to tell you all at the same time. We're going to call Dani's parents and let them in on the good news tonight and tell our friends in the next few days.\" \n\n\"Two down and two to go; what say you, boys?\" Dan asked, his eyes gleaming as he looked at Micah and Caleb.\n\nEveryone laughed at the hounded expression on their faces. \n\n\"Now, Dad...\" Caleb started and then just clamped his mouth shut, rolling his eyes toward the heavens as if in supplication.\n\nMicah clapped Caleb on the back and said with a now amused look, \n\n\"Buck up Bro, all we have to do is stand our ground.\"\n\nAfter a hearty round of snickers, Ryan and Dani continued to answer questions regarding their plans. \n\nThey were having such a great time together, that it was after eleven o'clock before they all left. But before doing so, they helped clean up, which both Dani and Ryan appreciated. \n\nWhen the house was quiet again, they put in the call to Dani's parents. It was a little later than Ryan would have wanted to call, but she assured him that they would still be up. So, they'd called and as Crystal predicted her parents were over the moon at the announcement. It was well past midnight when they ended the call and went to bed.\n\n* \n\nDani decided not to jump into planning the wedding right away. She wanted to wait until after Christmas to have that as her only focus. In the meantime, she was just going to enjoy being engaged. With all the help she was getting the lost of a little time wouldn't matter. \n\nShe decided to use a wedding planner after all. The wedding was going to be larger than she initially anticipated, Ryan was right as usual. She didn't want to be tired and stressed out on her big day, nor did she want that for those assisting her. Letting a professional do the grunt work was the best option. \n\nTo ease the process along, she asked Haley and Helen to start working on a vendor and guest list. They agreed that once things got underway, they would all meet at Dani's and Ryan's place to arrange everything, along with the planner. In the meantime, Dani would have time to read a couple of wedding books and organize her thoughts. Even though she was using a planner, she still needed to make all of the decisions. \n\n* Dani went back to work on Monday and was overwhelmed as well as pleased by the reaction of her co-workers to her engagement. They congratulated her and complimented her on her beautiful ring. A few even admitted to being a tad jealous.\n\nCharlotte stated emphatically that she wanted to be a bridesmaid. Dani grinned at her and called her pushy, but they both knew as one of Dani's closest friends, she'd be in the wedding party. Dani didn't have long to bask in the glow of her friends' well wishes as there was plenty of work to do. * \n\nThere was hardly time for Dani to get back into her routine when Christmas rolled around. Crystal was spending the holiday with their parents and taking Isaac along, he was spending Christmas Eve with his girls. James wouldn't be coming home. He only had Christmas Day off from his job and decided to spend it with a classmate who lived near the campus. \n\nChristmas day Dani and Ryan called her parents. Once again, they told them how happy they were that Ryan was going to be a part of the family and that they loved them both. Her mother didn't mention grand kids and Dani was perversely disappointed. Now that her mother could be expected to talk about grand children she hadn't uttered a word. \n\nDani put in a call to her friend Trina Willis. Trina and Quincy moved to Canada almost 2 years ago to be near her family. They got engaged shortly afterward, but were not as yet married. \n\nDani's long time friend was happy and excited for her. She assured Trina that she would send them an invitation and asked her to be in the wedding party. Trina accepted happily. They spent more than an hour catching up and reliving the good old days, realizing just how much they missed each other. Trina was pleased that Dani had found the right man for her. Dani wished them Happy Holidays and ended the call with a promise to keep in touch.\n\nAll in all, the holidays were a fun, albeit tiring time for Dani. \n\n* \n\nA week later with the celebrations behind them, Dani settled in back at work. Mr. McClain went out of town for a conference in Chicago which had been scheduled a month earlier. He would be gone all week long, but he left instructions for Dani that included a courthouse records search. \n\nDigging through old records was tedious, but Dani found that she was more focus on doing it after she'd gotten all or most of her other work done. With that in mind, she scheduled a block of time toward the end of the week to do her research. It she were lucky, it wouldn't take more than an afternoon to complete the task.\n\nThe week went by fairly quickly with few problems. Dani had plenty to do, but it was mostly routine work. She did end up getting extra work from McKinney because his secretary had to leave on a family emergency late Thursday morning. She didn't mind, but it put her a little behind with regard to starting her research at the courthouse. \n\nAfter finishing McKinney's letter, Dani changed her voice mail to reflect that she wouldn't be in the office the rest of the day and headed downtown. She really did hate going downtown with all the one way streets and noisy traffic, but sometimes it couldn't be avoided. Then there was the parking. Street parking was definitely out, so she looked for a space in one of the covered garages. \n\nAfter parking on the garage's second level, she locked her car and headed for the main courthouse. The research she needed to do was straight forward, it just took time and sifting through old records.\n\n* \n\nIt was about four o'clock when Dani completed her research, which took less time than she had anticipated. However, it had been a successful trip. She'd found a couple of case laws which might be useful. Another good thing was she had more than enough time to avoid the dreaded five o'clock rush hour traffic. \n\nDani opened her car door and was about to get in when she saw a motion in her peripheral vision and her breath caught in her throat. Turning, she recognized Keith as he approached. While breathing a sigh of relief, she still eyed him cautiously and wondered what he was doing there.\n\nNoticing how Dani seemed startled upon seeing him, Keith said, \n\n\"Hey, I'm sorry, didn't mean to scare you. I just wanted to talk to you for a minute.\" \n\nFeeling a sense of D\u00e9j\u00e0 vu, Dani asked, \"What are you doing here?\" \n\n\"Like I said, I'm here to talk to you,\" he said slightly peeved. \"I can never seem to find you alone.\"\n\n\"What?\" Dani said, starting to get alarmed. \"Have you been following me?\"\n\nWithout answering the question Keith said, \n\n\"You gave me the brush off in the grocery store, don't think I didn't notice. I just wanted to talk. You always seem to be with someone or at the River Lakes Estates. I guess that's where your boyfriend, the white guy, lives. I know you can't afford to live there,\" he said with his lip curling into a sneer. \n\n\"Are you living with him?\" he snapped.\n\nDani was too flabbergasted to even answer. He was following her, just like before.\n\nNot liking her silence, Keith grabbed her right wrist and pulled her toward him and asked in a hard tight voice, \"I asked you a question, are you fucking living with that bastard?\" \n\nNow, really afraid, Dani squeaked, \"Yes.\" \n\nIt was when she put up her left hand to push him back from her, that he saw her engagement ring.\n\n\"What the fuck?!\" he hissed grabbing her left wrist in a bruising grip. \n\n\"You're engaged to him?!\" he shouted, not expecting an answer. It was obviously an engagement ring. \n\nDani was scared, really scared. She opened her mouth to scream when Keith grabbed a fist full of her hair and banged her head against the car door frame several times in quick succession, drawing a moan from her, while blood seeped from a wound at her temple.\n\nWith one hand still grasping her hair, Keith held her throat in a choke hold with the other. Pressing his big body against her, he snarled, \"If you scream, I'll fucking kill you. Hear that bitch?\" \n\nDani slowly nodded, fighting the nausea. \n\nKeith was getting angrier by the minute; she had to think of a way of getting away from him. He was too close and holding her too tightly for anything she knew to be effective. \n\n\"You thought you were too good for me, but you're fucking some white guy. I was crazy about you, but you were so prissy you didn't even want me to touch you. I could tell. Oh, you tried to hide it, but as soon as my dick got hard, you'd push me away, just like a fucking tease. I bet you get down on his dick, don't you bitch?\" he barked, increasing the painful pressure on her throat. \n\nFeeling dizzy from the lack of oxygen, Dani fought to stay conscious. \n\nWhen she heard faint voices approaching, she did the only thing she could think of, she let her entire body go slack. Caught off guard, Keith loosened his hold on her. It was then that he heard the voices too. They were too close for comfort, so he brutally shoved Dani and fled, never looking back as she hit the cold hard concrete garage floor. \n\nA man, seeing Keith running away, called out. \"Hey, stop! Stop!\"\n\nDani, already weak from being strangled and having her head banged against the car, was unable to stop herself from falling; hitting her head on the solid surface, she lost consciousness."
    ],
    "authorname": "MissPrimrose222",
    "tags": [
        "white man",
        "black woman",
        "drama",
        "interracial romance",
        "interracial drama",
        "interracial novella",
        "romance novella"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/ryan-ch-08"
}