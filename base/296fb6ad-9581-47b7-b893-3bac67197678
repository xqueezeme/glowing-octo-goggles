{
    "title": "Surefoot 01: Ch. 04",
    "pages": [
        "USS Surefoot, Deck 2 - Cadets' Quarters\n\nAlpha Squad's quarters were unevenly bisected, with the smaller side taken up by three sets of bunk beds and storage spaces for each occupant, and the larger side side by a desks, chairs, information and entertainment wall screens, and the door to the corridor, and the door to the twin toilets, sinks and sonic showers.\n\n\"I only had to share with one person back at the Academy,\" Neraxis groused, sitting on a bean bag on the floor, her boots and socks removed, rubbing her toes. \"Now it's six?\"\n\n\"The Academy is planetbound, spread out over many hectares of area in San Francisco,\" Jonas reminded her, sitting nearby perusing the files on the desk terminal. \"Space is at a premium on these older, smaller vessels.\"\n\n\"And it promotes teamwork,\" Sasha added distractedly, glancing through the entrance to the sleeping area, where Eydiir was occupying herself. She had been distant, silent, even more so than usual, since their arrival, and Sasha couldn't figure out why. \"We work the same shifts, learn to compromise, not hog the sonic showers, all that.\"\n\n\"Hey, I'm not complaining,\" the Bolian assured them. \"I grew up with six brothers and two sisters. I just hope the head in there can handle what I have to offer.\" She straightened out one blue foot and nudged Jonas in the rear. \"Hey, you want to share a bunk with me, Scrappy?\"\n\n\"Me? Why me?\"\n\n\"You're lighter, you're less likely to rock the framework at night when you're having a good hard think about Commander T'Varik.\"\n\n\"What? Why would the bunk rock if I was-\" He blushed beetroot and looked away again. \"Don't know what that means.\"\n\nNeraxis grinned. \"Like I said, six brothers.\"\n\n\"This isn't right.\"\n\nSasha's attention turned to Giles as he spoke again, still sitting in the other side of the room, face still abject as it had been since he arrived and found out not only he was bunking with her - but that she was the Squad Leader. \"To be fair, T'Varik warned you.\"\n\n\"But my Major's Command.\"\n\n\"And your Minor is Flight Control, like you told us when you were peacocking about on the transport. Every squad needs a member from one of the six Majors. And we needed a pilot on our squad for Away Team missions and simulations.\"\n\nHe looked up at her, sneering. \"I bet you're loving this. Being on Daddy's ship, being made Squad Leader.\"\n\n\"Weren't you the one walking around before crowing about how you'd be made Squad Leader and get posted on your aunt's ship?\"\n\n\"That was different! It's clear who would make the better leader!\"\n\n\"Watch your attitude there, Giles,\" Neraxis warned mildly, \"Or you'll end up on the Naughty Step again.\"\n\n\"Stay out of this, Bolian! What would someone in Security know about career progression? Your job is to give up your life for everyone else around you!\"\n\n\"I can make exceptions,\" she assured him, grinning.\n\nThere was a loud, deliberate snapping of a case being shut from the other room. Sasha and Neraxis exchanged glances, before Sasha bit the proverbial bullet and entered. The tall, dark-skinned Capellan kept her back to everyone, standing there, doing nothing but holding her kligat, a wicked three-bladed throwing weapon from her homeworld; though the girl was studying medicine, she remained as formidable as any other member of her people.\n\n\"What's wrong, Eydiir? What did I do?\"\n\n\"Nothing.\" She set the weapon down on an adjacent table.\n\n\"Come on, friend. Dishonesty is not your way.\"\n\nNow she spun around, her face one of taut anger. \"I told Giles Arrington that I would not abide nepotism or favouritism. Do you think I will abide it from my friend?\"\n\n\"What? What the hell are you talking about?\"\n\n\"This ship! Your father's ship! And your position in the squad! Do not tell me it is a coincidence! Even that fool Giles realises it!\"\n\nFrom the other room, Giles' voice called out, \"You know I can hear you in there?\"\n\nSasha ignored him. \"You think I knew about this? It was as much a surprise to me as to the rest of us!\"\n\n\"Are you saying you don't want to be here?\"\n\n\"Of course I want to be here! I want to be with my father! Is that so wrong? I spent six terrible years thinking he was dead along with my Mom! And then the Universe gave him back to me! As for my position, I earned it! You know I earned it before anyone even knew he was still alive, before he ever got this command! You can't compare me to that idiot out there!\"\n\n\"I can still hear you!\" Giles reminded them.\n\nSasha couldn't believe this was a conversation she was having with her best friend. After all they had gone through to get here! She wanted to cry. She chose to fuel her anger instead. \"Look, you can believe me or not, but I swear, you continue to stomp about in here and spoil it for the rest of us, I'll hit you so many times you'll swear you're surrounded!\"\n\nEydiir scowled, hands balled into fists - but then, just as quickly as it had started, it ended, with her offering a relaxed posture. \"I believe you.\"\n\n\"And another- wait, what?\"\n\nThe Capellan embraced her warmly and roughly. \"I needed to see the truth in the fire of your eyes. I have done so. Forgive my doubts.\" She straightened up formally. \"If you wish, you may strike me, and I promise not to kill you for it.\"\n\nSasha stared, feeling her temper settle again. \"Maybe later.\"\n\n\"If you two have kissed and made up,\" Neraxis called in, \"You'd better get back in here.\"\n\nCurious, the girls returned, to see Giles halfway out the door, leaving it open as he looked back at them. \"I'm not putting up with this. I'm getting this straightened out once and for all.\"\n\n\"Giles-\"\n\n\"This isn't right, and this isn't fair.\"\n\n\"I agree,\" Sasha said, taking him and some of the others by surprise. But she had to stay calm, and had to try and reach him; he was a member of her squad, like it or not, and she felt a responsibility towards him. \"And I'd probably be feeling the same way as you do. But think about it: how will Commander T'Varik react if you storm up to her now and tell her she made a mistake? She's not exactly a fan of impulsive behaviour.\"\n\nThat gave him pause, though he still asked challengingly, \"And what would you do?\"\n\n\"Me? I'd do everything by the book. Make a formal, respectful query about the reasons why I got it and you didn't. It will also demonstrate your professionalism.\"\n\nThat actually seemed to sink into his brain. He pursed his lips and nodded. \"Maybe you're right.\"\n\n\"And...\" she added, though she didn't expect to hear herself saying it, \"I can accompany you and support your request for answers.\"\n\nHe blinked, paling. \"You'd do that?\"\n\n\"Yes. You are on my team. I support my teammates.\"\n\nJust then, a newcomer announced, \"Excuse me, please.\"\n\nAll eyes turned to the new arrival in the still-open doorway: a slender, hairless humanoid with smooth lime-green skin patched in blues and purples within the wattles under his extended face, wattles extending down to his flat chest, necessitating a cosmetic adjustment to his uniform. He had large red eyes with black vertical slits, open nostrils that flexed with each breath, and webbing on his long, slender fingers, which he now brought together in a self-clasp after setting down his bag. His voice was mild, like someone always commenting on the lovely weather. \"Forgive my lateness in arriving, I was required to visit the Chief Medical Officer first.\"\n\nSasha smiled; she'd been reading up about the last member of their squad, and in fact had seen him onboard the transport, but never approached him. Now she did, imitating the clasping gesture. \"We Stand Together, Kitirik Abyss Zuinthinem, uh... Emijiz.\" She hoped she'd said it correctly, not having had much time to memorise it after reading his biofile in the squad roster.\n\nThe newcomers throat rapidly shifted in colour, and his eyes brightened as he lowered his arms. \"We Stand Together. You honour me! Thank you! I am filled with delight!\"\n\nSasha lowered her hands as well, grinning; he was like a puppy out on its first walk. \"Did I get the name right? I was practising it in my head but wasn't sure.\"\n\n\"Very much so! Although if it is easier, I accede to answer to Kitirik alone, or even Kit. I am told that Kit is very charming.\" He beamed at the very notion.\n\n\"It is, Kit. I'm Sasha Hrelle, Squad Leader.\" She ignored the reaction from Giles as she introduced the others; as she proceeded, Kit clasped his hands together again and nodded to all of them.\n\n\"Bring any brandy with you?\" Giles asked ruefully. \"Could do with some.\"\n\nKit looked to him, confused. \"Forgive me, Respected Colleague, I did not know I was supposed to.\"\n\n\"You know he's not Saurian, don't you?\" Sasha pointed out.\n\nGiles flushed. \"Oh, uh, sorry.\"\n\n\"Way to be racist there, Sport,\" Neraxis chuckled. \"Do all reptoids look alike to you?\"\n\nKit turned to him. \"No offence is received, I can assure you. I am Qarari.\"\n\n\"They're a non-Federation world,\" Sasha noted to the others. \"First contacted ten years ago; talks are ongoing now about their joining the Federation. And Kit is the first of his race to join Starfleet.\"\n\n\"Yes, indeed, Respected Squad Leader. Thank you for honouring me in this way.\"\n\nShe smiled. \"I'm a quick learner. Guys, the party is in an hour; I figure that'll give us time to choose our beds, unpack and unwind, maybe even get a look at a map so we don't get lost.\" She looked to Eydiir. \"You want the top or the bottom?\"\n\n\"Top; I can watch for enemies better.\"\n\n\"Right. And I believe Neraxis has claimed the second one with Jonas.\"\n\nThe Bolian grinned at Kit, nudging Jonas again as she joked, \"He's my husband.\"\n\n\"Not really,\" Sasha clarified, seeing Kit's - and Jonas' - reaction. \"So that leaves you and Giles.\"\n\nKit turned to Giles. \"I will gladly accept either bunk, Respected Colleague.\"\n\nGiles, for his part, shrugged and picked up his bag. \"It doesn't matter to me. I don't think this day could get worse.\"\n\nNeraxis chuckled. \"Giles, you gotta stop saying things like that. The Universe loves a challenge.\"\n\nSasha tended to agree, but kept silent. Giles was already worked up without her adding to it.\n\n*\n\nDeck 1, Mess Hall/Lounge:\n\n\"Oh, I don't think I like the look of you.\"\n\nT'Varik paused, while Hrelle just looked amused. The gathering wasn't just a chance for the cadets to meet and greet the officers and crew of their new ship, but also for T'Varik. She had never served onboard a starship before, her entire career having been centred around the Academy.\n\nHe probably should have warned her beforehand about Chief Petty Officer Grev, in charge of Engineering. He was a Tellarite, a short humanoid with a snout, fur, hoof-like hands with just three fingers each, and deep-set eyes surrounded by rough skin. And for Tellarites, arguing was a sport; when meeting a new person they would start off by complaining to them, but if there was nothing to complain about they would simply resort to insulting the other - as he just did to T'Varik.\n\nBut before he could mollify the situation, the Vulcan straightened up a little more and replied with, \"Were you assigned to this vessel because you are as old and decrepit as it, and Starfleet thought you would feel at home?\"\n\nGrev grunted, approving. \"Pleasure to meet you, Commander.\"\n\n\"And you, Chief.\" She turned as she noticed members of Alpha Squad mingling, and motioned for one of them to draw closer. \"Mr Ostrow, this is CPO Grev, who will be your supervisor and instructor. Chief Grev, this is Engineering Crewman Jonas Ostrow. Mr Ostrow, I should warn you that Tellarites-\"\n\nJonas stared directly at the Tellarite and finished with, \"-Stink like a zertith pelt left in the sun too long. The smell must be awful in Engineering.\"\n\nGrev laughed uproariously, clamping a thick hand on Ostrow's shoulder. \"He understands the Banter!\"\n\nJonas beamed. \"My Mom works with Tellarites in her salvage company. I grew up around them. Despite that, somehow I still managed to learn something.\"\n\nGrev's beady black eyes fixed on Hrelle. \"Ooh, I like him!\" Guiding Ostrow away, he promised, \"Come on, meet the others.\"\n\nHrelle tried not to laugh as they departed. Elsewhere, he saw Neraxis Nemm with Security Chief Lt. Abed, a tall, robust-looking Terran with bronzed skin, short sable hair and beard, and a love for a lamb phall dish that the Bolian was currently spicing up with chilli sauce.\n\nThen there was the Chief Medical Officer Dr Ling, a Terran woman of Asian descent, with a flat face, narrow chin, and a stony demeanour that could put a Horta to shame. But her meeting with the equally implacable Eydiir Daughter-of-Kaas took both women to a corner of the room to bask in their mutual taciturnity.\n\nAnd the Qarari Science cadet, Kitirik, was chatting excitedly to her supervisor and instructor, the ship's Counselor, Kami Shall, who seemed equally charmed by the newcomer.\n\nHrelle frowned to himself as he looked at Kami. In the weeks since taking command of the Surefoot, he found himself getting along well with all of his small crew, just as he was getting used to being a Captain again, and just about everything else.\n\nBut Kami was different... they didn't have Counselors onboard ships back in his day, though it was understandable that given his circumstances he would have to see her as a patient on a regular basis, just as she was there for the cadets, monitoring their mental and emotional health while they were participating in the AWE Program.\n\nShe was Caitian, too, the first one he'd seen in years: middle-aged, with distracting curves and a full mane of honey-blonde hair and darker fur, who preferred the minidress version of the new uniforms to allow her tail free access, as well as going barefoot to accommodate their people's particular foot structure. As for her scent...\n\n\"Is there a problem, Captain?\" T'Varik asked.\n\nHe pulled himself from the distraction. \"Mmm? Oh, uh, I think something's up between Sasha and Giles.\"\n\n\"'Up'? For good or ill?\"\n\n\"I'm not sure yet. They don't seem to be at each other's throats.\"\n\n\"Indeed? I must confess to the notion that I might have erred in assigning him to Alpha Squad.\"\n\n\"Erred? You?\"\n\nShe raised an eyebrow. \"I believe I stated 'might'.\"\n\nAs if hearing them, the two cadets approached. Hrelle couldn't contain his delight at seeing her, though this time he did manage not to reach out and pull her in for another fatherly embrace. He did offer a nod at Giles, when Sasha spoke. \"Sir, Ma'am, Mr Arrington and I would respectfully request clarification as to why I was selected for Squad Leader and he wasn't.\"\n\n\"Crewmen,\" T'Varik replied. \"This social gathering is an inappropriate venue for this discussion-\"\n\n\"Commander,\" Sasha interrupted. \"With all due respect, Alpha Squad is scheduled to start our first work shift at 0800 tomorrow. It would be logical to settle any outstanding matters in order to maximise efficiency.\"\n\nT'Varik gave her a look that Hrelle would have called amused derision at anyone trying to apply logic against a Vulcan -- that is, if any Vulcan would ever admit to expressing such emotion. \"Very well, if you are comfortable discussing this here...\"\n\nShe turned to Giles, folding her hands behind her back. \"Mr Arrington, your Leadership scores are indeed high, as are Ms Hrelle's. However, she exceeds your scores in terms of Maturity, Empathy, Interspecies Relations and Teamwork. Your own scores in these fields may improve in time, with remedial courses and general life experience, but at the moment, she is overall a more qualified Squad Leader than you.\"\n\nHe was clearly taken aback by the bald assessment. \"That- That can't be true- It's her father's doing-\"\n\n\"Before you make any claims involving favouritism on the part of the Captain, you should be made aware that under the terms that allow Sasha to serve onboard with her stepfather, it was agreed that I would manage all decisions regarding the cadets, in order to avoid any such notions. The decision is mine, made logically and impartially. You will still study on the Command track, but your practical work will be based in Flight Operations.\"\n\nGiles face reddened, and for the first time, Hrelle felt sorry for him. He reached for a flute of champagne, his whiskers twitching as he brought the rim of the glass to his muzzle, hoping that the kid would take the hint and accept it.\n\nBut he didn't. \"Perhaps... Perhaps I can exchange places with someone on one of the other squads?\"\n\n\"The selection of cadets for this vessel was carefully chosen; I will not create further inconvenience to satisfy your desires.\"\n\nNow he raised his voice. \"No, but you don't mind inconveniencing me, do you?\"\n\nSasha looked to him. \"Giles-\"\n\n\"Sasha,\" her stepfather said softly. \"Go mingle.\"\n\nShe looked to him, and then nodded and departed. Alone with T'Varik and Giles, Hrelle focused on not letting his prior history with the boy and his family colour his words or tone. \"Mr Arrington, when you've been in Starfleet long enough, rest assured you'll be inconvenienced. You'll miss shore leave, you'll miss promotions, you'll get transfers to places and positions that aren't even your third choice much less your first or second. Holidays, birthdays, anniversaries... all get rescheduled, because the needs of the Service come first. And rank will mean nothing; in fact, the higher your rank, the more likely it will happen.\"\n\nGiles tensed further. \"I request permission to send a message to my father immediately-\"\n\n\"Denied,\" T'Varik said flatly. \"Submit your request through the prescribed channels, and a response will be made in due course.\"\n\n\"Giles,\" Hrelle said, drawing closer, resting a hand on his shoulder. \"I remember being your age, planning on being Captain at age thirty, Admiral at age forty, and Ruler of the Universe by the time I died at fifty. And I hated anyone and anything I thought was getting in my way. I had to set aside the Command track myself as a midshipman and work up through the ranks of Security.\n\nAnd you know what? It made me a better leader. I learned what it meant to swallow my pride and take orders, to serve, to help me see the responsibilities I had to those who would eventually be under my command. And I think this will make you a better leader, too.\n\nIn the meantime...\" He pointed to a tall, thin Nordic woman with platinum blonde ponytailed hair. \"That is Chief Helmsman Lt. Irina Velkovsky, your supervisor. Go introduce yourself. She's had a fascinating career, and has even participated in the Delos 5000 Solar Race. I think you'll get along well with her.\"\n\nBut Giles continued to stand there, face reddening even more, until T'Varik added, \"I do not believe that was a suggestion, Cadet.\"\n\nHe turned and departed, and T'Varik turned to Hrelle as if to speak to him.\n\nBut not before both of them heard Giles mutter under his breath, \"The Bel-Zon must have neutered him when they cut off his tail.\"\n\n\"WHAT DID YOU SAY, BOY?\"\n\nHrelle's vision had gone red as he stormed up to a frozen Giles, roughly spinning him around, relishing the terrified look in the boy's expression as the Caitian was in his face, teeth bared, nostrils flaring, voice still loud as he snarled, \"Say that to my face! Go on, you little runt! Say it!\"\n\nT'Varik was at his side, \"Captain, allow me to deal with this-\"\n\nHrelle ignored her. \"You think that's funny? You think it's a big joke what they did to me? DO YOU, YOU LITTLE BASTARD?\"\n\nGiles had paled, looking like he would faint at any moment. He was terrified.\n\nGood.\n\n\"Captain,\" T'Varik repeated, more forcefully.\n\nSuddenly Hrelle was aware of everything again. Aware of everyone in the room starting at him. Aware of the smell of urine from Giles. Aware of the broken champagne glass in his hand, the blood now pooling into his fist. Aware of the fear he saw in Sasha's eyes.\n\nHe glanced at his First Officer, snapping, \"Deal with this. I'll be in my quarters. I don't want to be disturbed by anyone, understood?\"",
        "\"Yes, Sir.\"\n\nHe couldn't flee quickly enough without actually running.\n\n*\n\nHe was in his bathroom in his quarters, removing the shards of glass from his palm and washing the blood away -- Mother's Cubs, just how many litres did he have left in him? -- when he heard his door slide open, despite his ordering a lock on it. He called out, \"I said I didn't want to be disturbed.\"\n\n\"I heard,\" came a cheery, familiar, unwelcome female reply.\n\nHe poked his head out. \"That includes you, Counselor.\"\n\n\"I know,\" she admitted, \"And it's adorable that you think that's going to stop me.\" Kami stood there, carrying a black medical kit on a sling under her arm, her tail swishing behind her. \"I smelled the blood and saw the broken glass, and I knew a Big Proud Male like you wouldn't be smart and go to Sickbay to get fixed up, so...\" She indicated the kit. \"Thought you'd like to play Doctor.\"\n\n\"I'm not interested. Get out.\"\n\nShe set the kit down on his desk, regarded him and smiled.\n\n\"What's so amusing?\"\n\n\"That expression of yours, that tone -- it reminds me of my cub.\"\n\n\"Your... cub?\"\n\nShe nodded, opening the kit. \"He's all grown up now. But when he was only knee-high, and refused to get in the bath, he'd stand there by the tub, arms crossed, scowl on his face as he declared, 'No! No Bath!' And he'd try to be fierce, but all I could see was this beautiful little naked cub that I made. And I'd sweep him up in my arms, spin him around and hug him and tell him how much I loved him... then I'd put him in the bath.\"\n\nHe approached her, still clutching his cut hand. He wasn't in the mood for her. \"I'm not your cub, Counselor.\"\n\n\"I'm glad to hear it, given all the filthy fantasies I have of you.\"\n\n\"Get out!\" he growled - baring his teeth in her face for good measure, knowing how wrong he was for doing so, even as he did it.\n\nSwifter than he expected, her hand shot out, claws raking the left side of his muzzle, making him gasp, stagger back and clutch his face with his good hand.\n\nShe stood there, claws still extended from the tips of her fingers, no longer the facetious, flirtatious woman he knew, her eyes narrow, her face taut, her growl low and dangerous. \"Listen carefully: I'm your Counselor, and I'm your friend. But don't ever bare your teeth at me unless you mean it. Do you understand me?\"\n\nHe shook. He physically shook, as shocked by his own unforgivable action as he was by her reaction. Too long he had lived among humans, who bared their teeth to show pleasure rather than threat. He had forgotten what it meant to his people-\n\nNo. He knew what he was doing. And he was ashamed of it.\n\n\"I'm sorry,\" he finally offered. \"That was uncalled for. And I knew it as I did it. I'm... ashamed of myself. And I need your help.\" He held his hand. \"With this, as well as what happened with Giles.\"\n\nShe regarded him, lowering her striking arm and retracting her claws. \"Wow: six open, honest statements at once. If I knew I could get that from you I would have scratched you from the start.\" She indicated his chair at the desk, her demeanour calm again. \"Sit down, I'll take care of the face as well as the hand.\"\n\nToo chagrined and defeated to argue any further, he complied, setting the wounded hand palm up on the desk while she withdrew the sterilisers, tricorder and autosuture from the kit. He watched for a moment, before looking away again. \"What happened after I left?\"\n\nKami ran the tricorder over his palm, confirming no glass remained in the cuts, though the bleeding continued. \"Well, Sasha demanded to know what Giles had said to get that reaction from you. She was ready to finish what you started, almost to the point of insubordination with T'Varik.\" She snorted as she began cleaning the cuts. \"Seven Hells, she may not look Caitian, but she certainly has our spirit.\" She smiled. \"Anyway, her squad convinced her to back off and return to their quarters. Your First Officer then sent Giles to the Brig.\"\n\n\"The Brig? Seriously?\"\n\nShe nodded. \"Article 89: Disrespect Towards a Superior Commissioned Officer. To be fair, I think her first choice might have been confining him to his quarters, but since he shares them with Sasha, that might have constituted capital punishment.\" She paused and added, \"The party fizzled out after that, so I guess we're all eating leftover vol-au-vants and Andorian bhajis for breakfast. So... want to tell me what he said?\"\n\nHe shook his head. \"It doesn't matter, I didn't have any right to get angry about it like I did- Oww!\"\n\nHe almost pulled his hand away. Kami, still holding the autosuture, looked up innocently. \"What? Oh, sorry, it's the device. It not only repairs cellular damage, it also delivers a painful charge whenever you talk crap.\" She shrugged as she resumed her work. \"It's probably best not to talk crap.\"\n\nHe stared in disbelief. How had this woman managed to get a medical licence? \"You can't really believe I had a right to lose my temper over a stupid remark?\"\n\n\"Why not?\"\n\n\"Because I'm the Captain. I have to be held up to the highest standards- Owww! Stop that!\"\n\nShe indicated the autosuture. \"Warned you about talking crap. And you can drop that 'highest standards' garbage. How can anyone aspire to that? How can anyone relate? Nobody wants to serve under Captain Perfect, he sounds like a massive sodbox. So I'll ask again, what did he say?\"\n\nHe breathed out, wishing he'd had some liquor in his quarters. \"He... made a remark about my losing my tail, that's all.\"\n\n\"Oh? What about when he mentioned you getting neutered?\"\n\n\"You already knew he said that?\"\n\n\"Of course, I was there, I heard.\"\n\n\"Then why bother asking me?\"\n\n\"To catch you lying, of course. So... you were outraged, you got into his face and made him wet himself.\" She nodded. \"Good.\"\n\n\"What do you mean, 'Good'? It's good that I scared some kid into wetting his pants?\"\n\nHis hand was numbing as she continued to repair the cuts. \"Listen, it might not have been textbook Starfleet behaviour, but it wasn't as if you went Full Klingon and gutted him, either. You never even touched him, just shook him up; if he was Caitian, he would have had his snout smacked. And I'd have been more worried about you if you did all that and didn't come back here to mope around like you were ready to join the First Martyr on the Wheel.\"\n\nHe grunted. The woman was unbelievable.\n\nNot that he didn't like what she had to say. Then he straightened up. \"Oh no... Sasha...\"\n\n\"What about Sasha?\"\n\n\"In all the years I was a part of her life, I never so much as raised my voice in her presence.\"\n\n\"So?\"\n\n\"So now, tonight...\" He shook his head to try and dispel the memory. \"I don't- I don't want her to end up afraid of me- Arrgh!\" Now he pulled his hand away completely. \"Mother's Cubs, stop that!\"\n\nKami looked up at him unapologetically. \"You know, if you keep this up, I might have to find a Klingon pain stick to use on you.\" She pulled his hand back for a final check. \"Let's get one thing clear: you can't do wrong as far as that girl's concerned. She's defended you time and again when others thought you had betrayed her and your wife and your oath to Starfleet and was living the high life on Orion. She's stood up to the media, to upperclassmen, to senior officers, and she'd probably bare her teeth to the Great Mother Herself to protect you. You have no fear of losing her.\"\n\nShe tilted her head as she looked at him. \"Your hand's done. Now, let's see about that face.\" She leaned in with the autosuture from where she sat, but seemed to find the position awkward. \"Wait.\"\n\nShe rose, drew closer, and lifted up the hem of her uniform to straddle him without preamble, her legs wrapping around him, her tail snaking around one of his legs. \"Yes, this is better.\"\n\nHe gasped. \"What the- Get off me!\"\n\n\"Stay still, I won't be long.\" She shifted slightly. \"Think clean thoughts, Captain, or I'll be the first to know otherwise.\"\n\nHe tried not to react, but the heat from her on his lap was... Mother's Cubs... \"Are you usually this outrageous with all your patients?\"\n\nShe leaned into the scratched side of his face, her voice a teasing murmur. \"Most people are actually easy to communicate with. Then there are sodboxes like you who always come in with their shields raised. They need to be constantly thrown off-guard, whether it's with a flirt or a swipe across the snout. And it works.\"\n\nShe moved the tip of the autosuture over the scratches she gave him on his muzzle, as her voice took on a gentler, more sympathetic tone. \"Esek... I know you feel guilty about frightening the boy, no matter how justified everyone else thinks you were for doing so; that's part of what makes you such a decent man.\n\nSo... go to him. Don't apologise - that will only let him off the hook for what he said - but explain why you reacted the way you did. Cubs Giles' age tend to say and do things out of ignorance. You two might even reach an understanding.\"\n\nHe considered her advice, having had similar thoughts already. \"Assuming our First Officer hasn't already arranged to ship him off to a penal colony.\" He breathed out. \"I don't care what all the other Arringtons have done to me, I don't have any desire to punish this kid.\"\n\n\"There's more of that decency.\" She smiled. \"You can always go to T'Varik and appeal to the logic in minimising overall disruption to the Program by not punishing him.\"\n\nHe thought about it, finally nodding in agreement. It made sense. \"And the rest of the cadets, our crew? After my outburst, what are they going to think about me?\"\n\nShe leaned back. \"They're probably going to thank you for making this very routine assignment a little less routine.\" She switched off the autosuture, resting her hands on his shoulders. \"There, all done, and you went a whole minute without getting shocked. I should get you a lollipop as a reward for being a good cub.\"\n\n\"No thank you. You can get off me now.\"\n\nKami purred, moving teasingly on him. \"But I've just got comfy.\"\n\nHe rolled his eyes. \"Go, I have work to do.\" With her still not budging, he reached up between them to tap his combadge. \"Captain Hrelle to Commander T'Varik.\"\n\nA second later, the Vulcan's voice joined the room. \"T'Varik here.\"\n\n\"Report to my office, please, I'd like to discuss what happened tonight.\"\n\n\"On my way.\"\n\nKami smiled, saying aloud, \"Take your time, Commander.\"\n\n\"Excuse me, Sir?\" T'Varik asked.\n\nHe screwed up his face. \"Never mind, Number One. Hrelle out.\" He tapped his combadge once more to end the link. \"Damn, I'll never get used to the protocols on these. Vacate my lap, Counselor, immediately!\"\n\nShe was sniggering as she rose and straightened herself up. His eyes wandered - and then he looked away again. \"And perhaps next time you can act more professionally!\"\n\n\"Oh, yes, Sir, Captain Sir, absolutely.\" She didn't sound too convincing, though. She packed up the medical kit and slung it under her arm. \"Nighty night!\" She winked at him as she departed, her tail swishing behind her.\n\nMother's Cubs...\n\nHe hoped he would be more composed when his First Officer arrived.\n\nTO BE CONCLUDED"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "science fiction",
        "space",
        "federation",
        "caitian",
        "starfleet",
        "fanfic",
        "fan fiction",
        "sci-fi"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-ch-04-friendly-counsel"
}