{
    "title": "Anal Exploration - Violet",
    "pages": [
        "She had just finished the perfect application of her deep red lipstick when she felt a flutter in her stomach. Difficult to pin down but it felt like a mixture of nerves, anticipation, a slight fear of the unknown and delight all at once. \n\nThey had been talking the previous evening about different sexual experiences, what they had and hadn't tried and what they had always been curious about. The subject of anal came up. Immediately she baulked and started dismissing it as something she would never do again. \n\n\"Tried that once, never again. It hurt so much and I can't see how that could ever be enjoyable. No!\" \n\n\"Did he know what he was doing?\" came the reply. \n\n\"I guess so, he just went in as he normally would,\" she said with a shudder. \n\n\"Then he had absolutely no idea what he was doing!\" he exclaimed. \n\n\"There's an art to it. Anal can be the most pleasurable experience you have ever had, but it's got to be done right. Get it wrong and you just cause pain. Get it right though and you'll become addicted. Seriously. It's that good!\" \n\n\"Hmm, I'm not convinced,\" she replied, rebuffing him. \n\nHe looked deep into her eyes. There was seriousness to his gaze along with a stark honesty. \n\n\"Trust me,\" he said to her very softly and very calmly. \n\nShe loved it when he took that tone with her. Dominant, yet reassuring and safe all at once. It was the same voice he used when he was taking charge of their sessions. Dulcet in delivery, with a silky velvet husk, underpinned by a forcefulness that stirred a carnal need in her. He had the ability to seduce her instantly with just a single word. She felt a tingle between her legs and her chest flushed as she adjusted her position. The familiar sensation of secretion escaped her between her thighs. \n\nCaressing her hip in reassurance, they never once broke eye contact. She felt wetness between her legs that had become almost an expectation whenever they were alone together. \n\nShe paused for a few minutes in contemplation. Having already been through a bad experience with anal before, the last thing she wanted was to repeat it. But she trusted him. She trusted him implicitly and knew that their explorations together so far had been nothing short of mind blowing. \n\n\"I can't even begin to imagine how that could ever be pleasurable,\" she continued. \n\n\"I mean I've thought about it and often wondered why people seem to like it so much but trying it was just a terrible experience, I felt on fire and not in a good way.\" \n\n\"The last thing I want to do is pressure you into something you have reservations about. This kind of thing takes time, patience and expertise. If done properly it will become the most addicting sensation you have ever experienced. I learned the hard way that if the preparations and technique are wrong then it ends in disaster.\" \n\nHe looked at her intently and continued. \n\n\"My ex and I were really interested in learning how to do it properly. We would spend countless nights trying out different positions, reading about it, buying toys and aids, the works. By the end it was such a regular part of our sex life that it became normal. Long gone was the pain and discomfort. We trained her body to accept the intrusion and mastered it down to a fine art.\" \n\nHe spoke with a confidence that she found riveting. The words coming out of his mouth could have been gospel she trusted in him that much. She knew he was far more sexually experienced than her and with that came a pleasantness of emotion that soothed her. Knowing beyond all reasonable doubt that he knew precisely what he was doing. Hell, the last few months had been a whirlwind of sexual exploration. He had unleashed a primal hunger in her that she knew existed but never knew how to unlock. Steadying her resolve, she took a deep breath and looked into his eyes. \n\n\"Ok,\" she nervously replied. \"I trust you.\" \n\n\"Good girl,\" he said with a grin. \n\n\"I'll pick up what we need in the morning.\" \n\nThe rest of the evening passed with no further mention of what they had discussed. In her mind she recalled her previous bad experience and felt uneasy. The thought of that incompetent, inexperienced cock banging recklessly into her backside, causing her nothing but agony, chilled her to the core. \n\nShe wasn't at all convinced if she could enjoy it and the thought of the physical act didn't fill her with joy either. She rationalised it to herself in the most simplest of terms. Babies come from vaginas, penises make babies, and penises go in vaginas. Nothing good comes from arseholes, penises have no place there. \n\n\"Stop it girl!\" she said internally. \n\n\"Your body also creates pleasure and pleasure comes in many forms. Don't be so basic!\" She scolded, having a full blown argument with herself in her head. \n\n\"You trust him and you know firsthand the pleasure he can give you. He knows what he's doing.\" \n\nThis was getting silly. Her internal monologue had become chaotic. \n\n\"Just remember when he showed how good a squirting orgasm could be. You thought then that you were just peeing on him but oh how wrong you were! This is no different.\" \n\nBreathing deeply she steadied herself. Tired of the argument in her head she dismissed the voices and focussed on him. She glanced over his body, taking in his fully tattooed arms, each picture telling a story. He had serenity to him that she was entranced by. While her head was gripped with uncertainty and madness, he seemed perfectly peaceful and wonderfully self-assured without ever appearing arrogant. It was his best quality. A quality that made her ravenous for him. \n\nShe still had reservations but regardless, her trust in him superseded her doubt. She knew beyond all the uncertainty that he knew what he was doing and the anticipation of fully experiencing new sensations soon came to the fore. They enjoyed the rest of the evening together before retiring to bed. \n\nThat night he took her into his arms and held her tightly. Reassuring her once more in his embrace. She kissed him and be entered her. Nothing extravagant, just simple, pleasurable, gratifying sex. They slept happily and content next to one another. \n\nShe awoke the next morning to find him gone save for a note on her dresser. \n\n'Beautiful Violet, \n\nI know you're uneasy but I will guide you. Follow my instructions to the letter and your doubts will be replaced with an intensity of sensation you will remember for a long time. \n\nI will be back this evening which gives you plenty of time to prepare. \n\n1- Open a bottle of red and enjoy. The more relaxed you are, the more you will enjoy it. Don't eat. \n\n2- Pamper yourself. Take a long, hot bath. Cleanse yourself inside and out. \n\n3- Dress for the occasion. Lace underwear, dark smoky eyes, and deep red lips. Become my goddess. \n\n4- Relax. I promise you nothing but pleasure. \n\nLove always \n\nX.' \n\nShe did as she was asked. Opening a bottle of red she sipped and sipped until the glass was empty. \n\n\"Must be nerves,\" she assured herself. Pouring a second she slowly enjoyed its sensuous taste as her body began to relax. Making her way to the bathroom she turned on the taps and started to fill the tub. \n\nAn hour passed and the bottle was nearly empty. She had done what he asked and had cleansed her body completely. \n\nWhile bathing she slid a hand down between her legs and cupped her intimacy. The firmness of pressure on her delicate areas made her feel secure. A finger lightly massaged her clit and she began to stir. Masturbation in the tub relaxed her like nothing else. Never quite enough to achieve orgasm, but just the sensation of touching herself calmed her immensely. \n\nWith her hand between her legs, her mind turned to thoughts of what the night would bring. Inquisitively, her digits roamed down, circling her opening and continuing south. \n\nReaching down, she arched a leg over the side of the bath to allow greater access. The water dripped onto the tile from her toes. Her fingers curled around into her crease and she drew lines over her tightest of holes. She felt its puckered form and pressed ever so gently on the surface. It felt sensitive in a way her pussy didn't. It felt naughty and forbidden. Her finger pressed at the entrance a few times, each touch applying slightly more pressure and allowing water to creep inside. \n\nShe had naturally washed herself down there more times than she remembered, including just a few moments ago. There was nothing sexual in that act. It was purely functional. \n\nThis time however, she was touching herself erotically. Charged with thoughts of how her man would feel when he entered her, she closed her eyes and applied more pressure to her hole. It felt nice. Slightly unnatural, but certainly not an unpleasant feeling. \n\nA few moments had passed and she snapped out of her daydream, realising he would be home soon. She restrained herself from proceeding too far with her self-exploration, wanting her first pleasurable backdoor experience to be with him. \n\nKnowing full well it was a deep seated fetish of his. She wanted it to be a moment she savoured and shared rather than secretly enjoying by herself. \n\nStepping out of the bath she wrapped in a luxurious towel and made her way to the bedroom. All the while her mind was racing with scenarios and thoughts of what the evening would bring her. \n\nWould she be subjected to the same pain and discomfort she had endured during her last foray into anal sex? She couldn't quash the doubts that this evening was going to end badly. \n\nHowever, the little adventure she had just had with her finger gave her cause for optimism. Again reassuring herself that she trusted him, she sat on the edge of the bed and stared at the mirror on the dresser. \n\nHer mind cast back to when he had first proposed rope bondage to her. The nerves she felt during the build up to that evening were on par with what she was going through now. \n\nShe had doubted whether she would enjoy being bound so completely and she was nervous that she would somehow do something wrong. \n\nCome the end of that evening, she remembered how her body had been wracked with multiple orgasms and she was left with a satisfaction that she had never before felt. She ended up bound, exposed and in full submission to him as he mercilessly fucked her in front of the very same mirror. She recalled watching her form tightly wound in rope as he took her from behind and insisted she not take her eye of the sight in the reflection. \n\n\"Mmmmm,\" she muttered under her breath. Her nipples hardened as she relived the sensation while staring at her reflection. \n\nNext came her lingerie. \n\nShe loved nothing more than dressing up for him. The look on his face when she presented herself to him, resplendent in all her feminine glory, sent warm ripples through her body. He adored her and she knew it. His eyes were always full of the most intimate lust when he saw her dressed up for him and she knew by his gaze that he was mentally fucking her before they had even touched. It was so empowering and deeply erotic. \n\nSo much so that she regularly masturbated thinking of nothing but that look whenever she was alone. \n\n\"Black lace French knickers and matching lace bra...perfect,\" she said to herself with an air of self-satisfaction. \n\nA classicist at heart, her idols were Bettie Page and the pin up girls of days gone by. They had created the epitome of sensuality with simple lingerie ensembles which remained timeless. Goddesses of a bygone era, she loved to emulate their flawless look and revelled in the self-empowerment it gave her. \n\nOnce adorned in her underwear, she sat back down on the bed and began to sheathe her legs in nylon. Classic stockings in opaque black, topped with intricate lace. Bunching the hosiery in her hand she slowly unfurled it up her shapely leg, adjusting the lace adornment to sit perfectly midway up her thigh. \n\nJust one final piece. For her birthday he had bought her a pair of Louboutin heels. Jet black with a shimmer and the trademark red under sole. She slid her feet into the heels and wriggled them to a snug fit. \n\nOn their first date she wore a pair very similar. Not quite the designer pair she had on now but a good imitation. She couldn't help but notice that his eyes barely left them. Whenever they stood or walked, his eyes transfixed on her heels. \n\nTaking note she wore them twice more on their subsequent dates, though never brought up his fixation with them. When she decided to invite him in after their third date, she walked him upstairs to the bedroom, deliberately stepping ahead of him so he could follow her heeled feet up the steps. \n\nWhen they arrived at her bedroom, she dropped her dress to reveal the same classic lingerie set she was currently sporting. His mouth dropped agape and his excitement was prominently visible through his jeans. \n\nAs they kissed and began to undress one another, she leaned into his ear and whispered in a sultry tone \"I'll keep my heels on for you.\" \n\nThe sex was explosive! \n\nHe took her with such lustful intent that she was completely swept off her feet. As he lay on top of her plunging his engorged member into her for the first time she wrapped her legs around his waist and dug the heels into him. This only enraged his passion and they came together in a shared orgasm that was practically volcanic. \n\nThat morning he confessed to her his uncontrollable fetish for stilettos and the beauty of a woman's sexuality when she dressed up. \n\nThat was where the fetish talk all started. \n\nHe bought her the designer shoes for her birthday that year and here they were now. Accentuating her femininity and simultaneously delivering his fetishistic urges to him while they indulged in yet another new experience together. \n\n\"Perfect,\" she complimented to her reflection and gave herself a little wink. \n\nShe wrapped her figure away in a short, black, silk gown and moved to the smaller mirror on a vanity table to apply her makeup. This entire phase of transformation made her feel like a deity. Her eyes became dusky and alluring and her plump lips took the pigment of her lipstick. Deep crimson was her colour. It shone with lustre against her pale complexion and perfectly matched the red in her shoes. \n\nShe stood before the mirror in admiration. \n\n\"You're a goddess,\" she told herself. \n\nYears before, he had instructed her to compliment herself in front of a mirror every single day to help build self-esteem. Struggling with her body image for as long as she could remember, this small act of self-appreciation helped her love herself in her own skin as time progressed. \n\nNow she was dressed for the evening she felt an overwhelming sensation of power. She looked like something straight out of a fantasy. Classically presented in black with the deep red lips accentuating her femininity. Her violet hair slung low down her back completing the look and her dark eyes gave her an alluring aura of the purest sensuality. \n\nResplendent in all her feminine magnificence, she was prepared. \n\nShe heard the door. \n\nHer heart skipped and the knot in her stomach gave her a rush of anticipation. Sipping her wine to quell the nerves she made a few final adjustments and went to meet him. \n\nStanding before him enveloped in the black gown, she smiled and welcomed his return. As he turned from the closing door he stopped suddenly, mesmerized by her beauty. \n\nThe black gown fitted her figure wonderfully. The V-shaped neck hung low and deliberately loose, exposing the sumptuous mounds of her ample breasts. She had one leg slightly forward from the other so the split in the gown parted just at the top of her mid-thigh, offering a glimpse of her stocking clad leg. The heels she wore made her stand tall and she knew the effect they would instantly have. \n\nHis mouth was aghast. He slowly and ever so deliberately ran his eyes across every inch of her, trying to take it all in. \n\nShe slowly untied the gown, gently grasping the edges and opened it slowly. Her breasts were first to emerge, clad in soft, slightly padded lace. Crossing her legs and putting one heeled foot in front of the other she discarded the gown put herself on total display for him. \n\nHis jaw dropped and a gasp of breath escaped him. He poured over her voluptuous form for what seemed to be an age. Marvelling at her breasts, down her stomach and towards the inward mound of her divinity. Down her legs his eyes travelled, his penis visibly aroused and bulging in his jeans. He brought a hand up to his mouth in shock as he basked in her beauty. \n\n\"My goddess!\" He exclaimed. \n\nHe quickly moved forward towards her, sliding his hands inside her gown to touch her soft skin. He pulled her body towards his and kissed her deeply. \n\n\"You look stunning my love. What did I ever do to deserve such a beautiful woman?!\" \n\nHis words enriched her soul. She felt a love and a desire for him that was unparalleled. \n\n\"I'm ready for you my love, just as you asked.\" She uttered. All hesitation gone from her voice. \n\nTaking his hand, she discarded the gown, turned her back and led him upstairs. Her stomach fluttered with nerves though the feeling of trust steadied her. She knew that she was going to give herself over completely to him. \n\nAs before, she rose up the stairs first, allowing him to view her from behind. Her ass looked magnificent in the lace French knickers she had chosen. Rounded and plump, she intentionally flicked her hips slightly as she ascended to accentuate her behind and let him know that soon he was going to have it. \n\nHis eyes danced between her heeled feet and her pert ass as they climbed the stairs towards the bedroom. \n\nThey reached their destination and she stood there motionless. Not entirely knowing what she should be doing. Still feeling empowered by her appearance, she took the initiative and moved into his space. She pressed her lingerie adorned body against his and kissed him deeply, throwing her arms up around his neck. \n\nHer nerves had morphed to passion and her body ached for his touch. She threw everything into the kiss, all of her uncertainty and anticipation came out, beyond her control. Her tongue darted into his mouth as she pressed her scantily clad form into him. \n\nEnjoying the intimacy he held her waist and pushed her backwards. \n\n\"Slow down my love, I told you to relax.\" He expressed calmly. \n\n\"I know, I'm sorry,\" she muttered. \"I'm just happy you're home.\" \n\n\"Let's have a drink and enjoy one another tonight.\" He said in that alluring voice. \n\nHer reply was simple... \"Always.\" A smile breached her lips and was met by a similar retort. She felt at ease knowing he was back with her. \n\nHe removed his boots and shirt and stood there in his jeans. His cock uncomfortably enlarged and pulsing against the restraining denim. \n\nShe went over to the vanity and poured two glasses of wine. \n\nDelivering it to him, she sat on the bed and looked up at him longingly. \n\n\"I've prepared myself, just as you asked.\" \n\n\"So I see!\" he exclaimed excitedly. \n\n\"You look magnificent.\" \n\n\"I love dressing up for you, you know that.\" \n\n\"You will receive my sincerest gratitude my love.\" Came his response. \n\nThey sipped the wine for a few moments. She could feel her underwear soaking through already. Her excitement had reached a fervour which was becoming consuming. The aroma of her moist underwear began to pierce the air. \n\nShe knew he could smell her sweet sex. He adored her scent, he found it intoxicating. \n\nTaking the glass from her he placed them on the vanity then proceeded to remove his jeans and underwear. His erect member sprung from its trappings, the tip excreting a droplet of pre-come indicating his intense state of arousal. \n\nShe stared at his throbbing cock and let out a hum of satisfaction. \n\n\"Excited my love?\" she said playfully. \"Of course. Tonight I'm going to fuck the ass of a goddess,\" he forcibly replied. ",
        "His candid admission of what was to come delivered in that stern, velvet voice sent shockwaves through her body. As if her mind and particular orifice were in perfect synchronicity, she felt her ass tighten and clench through sheer excitement. She knew she was so ready for this after the prolonged preparation. \n\nHer nerves turned to excitement as she felt the flow of her juices between her legs soak her underwear. She shifted her position and parted them ever so slightly in the hope that she would release her pheromone into the air. \n\nShe succeeded. As he slowly moved towards her, he caught her aroma in the air and stood for a moment to savour it. \n\n\"Mmmmm, such a sweet scent,\" he uttered. Tilting his nose upwards to catch the entirety of her musk. \n\n\"Climb onto the bed, on all fours,\" he told her masterfully. Shooting her a glance of dominance. \n\nHer smile was uncontrollable; she loved being told what to do. \n\nDutifully she obliged, she took up position on her knees, rested her weight on her elbows and arched her back, presenting her ass to him. Her lace panties framed her backside beautifully. \n\nHe took a deep breath, knowing how lucky he was. The female ass is a sight to behold and one that he knew was his made it all the more special. \n\nTaking his place on the bed, he caressed her cheeks. The firmness of her beautiful ass threw him into rapture; he knew that once he had prepared her, he was going to be inside her. \n\nKnowing from experience how intensely pleasurable anal sex could be his hard cock raged. \n\nStroking her cheeks gently, he traced lines down her crevice, flitting across her most sacred of holes and down to her pussy, spending a few extra seconds massaging her clit. \n\nHis fingers caressed through her sodden underwear in a circular motion slowly and deliberately. \n\nHer moans filled the air as he touched her intimately. \n\nHe pulled her underwear down to reveal her succulent ass and the scent of her sex rushed towards him like a wave. Her moist opening glistened in the dim light of the bedroom. \n\nInhaling deeply to savour her aroma he visually explored her intimacy. The delicate contours of her pussy were slick with moisture. Her pussy was pretty, with its subtle folds guarding her clitoris, the hood of which struggling to protect her arousal. \n\nSitting just above her soaked opening was his goal for the evening. Her puckered hole was an appealing fleshy pink, slightly darker than the entrance to her vagina. He watched intently as it pulsed and twitched in her excited state. \n\nTaking position behind her, he began to lap his tongue between her legs. Starting low down at her clit he slowly licked all the way upwards in one long stroke. His face buried between her cheeks as she maintained her prime position. \n\nHis tongue lashes parted her lips as he hunted for her clitoris. The hooded security receded under the pressure of his tongue. Licking backwards and meeting her sensitive nub, he circled and darted his mouth around her causing an intense sensation. \n\n\"Oh my God!\" She murmured. \n\n\"I'm so wet for you, that feels amazing.\" \n\nSpending a few minutes tongue massaging her clit, he continued upwards towards her opening. The nectar fell into his mouth as he lapped up her sweet honey. Placing a hand around her thigh he pushed his tongue forward, penetrating her vagina. \n\n\"Ahhhhhhh!\" came the moan. \n\nLicking around her entrance, he lavished attention on, around and inside her intimacy and devoured every last drop of her wetness. She writhed in her position and shifted her body towards him. She loved being eaten out, especially from behind. The added exposure the position gave somehow quadrupled the sensations. \n\nAfter penetrating her vagina for a few moments he continued his cunnilingal journey upwards until his mouth reached her ass. \n\nHis tongue made laps around her tight hole, circling the puckered, fleshy opening. He had gone down on her countless times, though this was the first time her ass had received the same attention. \n\nShe threw her head down and exuded a deep groan of pleasure. What a sensation! She had never felt anything like it. The added vulnerability she felt intensified her enjoyment no end. \n\nHis hands roamed her cheeks and down the sides of her legs as he circled her secrecy. Rising up slightly he applied forward pressure and punctured her hole with his tongue. \n\nShe gasped audibly at the feeling. \n\nHe held her cheeks firm and spread them apart, exposing the fullness of her anal cavity. Applying further pressure he penetrated her tightness and began to tongue fuck her ass. \n\n\"Fuuuuck!\" she groaned, savouring the new feeling. \n\nShe felt compelled to push herself backwards into him to meet his tongue thrusts, not caring about whether she should be enjoying it. The sensation was incredible and she wanted more of it. \n\nThe cheeks of her ass pressed into his face as he buried himself between them, each lash trying to reach deeper than the last. \n\nHe reached a hand up to her mound and caught a drop of nectar that had escaped. She was absolutely dripping wet. His fingers parted her lips and he resumed the massaging of her clitoris while he continued to tongue her behind. \n\nThe experience was becoming too much and before long her orgasm started to build. She felt the familiar rush of pleasure as her body prepared for release. \n\nFeeling her tight hole close around his marauding tongue, he removed himself from her behind and retreated his fingers from her folds. \n\n\"Fuck, I'm so close!\" she cried in frustration. \n\nHe took the dulcet, dominant tone with his response, knowing full well the reaction it would illicit. \n\n\"You will come when I allow you to.\" \n\nHis words drew a quiver in her body. The carnality of being so completely under his control placated her frustration as she became awash with submissive desire. \n\nTrying to steady herself and muster a response, she breathlessly uttered \"My body is yours.\" \n\n\"Good girl,\" He proclaimed. \n\nPulling away from her he reached down to a bag on the floor. She had no idea what was coming but her body had taken over. The feeling of his tongue in her ass was intoxicating. She had never felt anything quite like it. She wanted more and was now completely at the mercy of her desires. \n\nShe lay there in her exposed position, feeling her secretion cascading from her opening and down her inner leg. Vainly attempting to regain her composure. Her ass tingled with the lingering embers of pleasure from the last few minutes. \n\nThe scent of her sex filled the air. \n\nTaking out a bottle of lubricant and a small plug he began his preparations for the next phase. \n\nShe heard the rustling and craned her head back to see what he was doing. \n\n\"Eyes forward goddess,\" he calmly commanded. \n\n\"Yes sir.\" She replied meekly, resting her head down on the pillow and adjusting her position on her elbows for comfort. \n\nOpening the bottle he squeezed the transparent liquid onto the plug and massaged it around the delicate shaft. Not much bigger than a finger, he knew it was just the right size to begin training her body. \n\nTaking the base in hand he pointed the plug towards her waiting ass. \n\n\"It's time,\" he said with a reassurance. \n\nShe took a deep breath and buried her head down into the pillow. Elevating her hips, she brought her ass up to him, ensuring her legs parted to spread her cheeks as much as possible. \n\nThe nerves had subsided during the past minutes though she felt a knot resurface in her stomach. A tongue is one thing but she knew that now she was going to be penetrated. She wanted it badly given how incredible his tongue made feel, her body relaxed. She was ready. \n\nHe caressed her pussy with his fingers, covering them in her nectar. Dipping two into her with consummate ease. His internal massage was thrilling. He always curled his fingers up inside her to reach her most orgasmic areas. \n\nIncidentally, this is how they discovered she could achieve a squirting climax. After a few hours of orgasmic experimentation one evening, they found that with the right combination of depth, speed and rhythm she could expel her nectar just as she peaked. \n\nMoving upwards to her ass, he smothered her most secret of openings in her own juices. The sticky liquid moistened her backside as it tingled under his touch. He smeared her until she was slick and sufficiently moistened. \n\nThe digit circled her opening and lightly applied pressure. It felt similar to the indulgence she administered in the tub, though his intent to push deeper than she had dared magnified the sensation. \n\nHe pressed with a firmness of purpose which breached her entrance as the tip of his finger entered her down to the base of his finger nail. \n\nA soft moan escaped her lips. \n\nHer opening retracted around his digit then relaxed. He pushed his finger further inside her, down to the middle knuckle. \n\nFeeling no pain or discomfort she closed her eyes and pushed her backside higher, trying to meet his finger. \n\nHer muscles again tightened and relaxed before he inserted the remainder of his digit. She was warm to the touch and her relaxed body was willingly accepting of his probing. \n\nHe rested his finger inside her ass for a moment so she could savour the feeling and become accustomed to it. \n\nSlowly retracting and removing from her she sighed in deep satisfaction. Gentle ripples of pleasurable sensation breezed over her. \n\n\"Good girl,\" he complimented her. \n\n\"That felt amazing, I want more,\" she said hungrily. \n\nSmiling at her response he reached down to the floor to retrieve the plug. A finger and a half in width, he knew this would be an ideal tool to train her body with. \n\nApplying a touch more lubricant he brought it up to her presented ring and pressed the small black plug against her hole. \n\nShe bit her lip in anticipation as he began to push the plug inside. Her ass opened to receive the toy with little resistance and she barely felt any discomfort. \n\nThe slightly ridged edges of the plug sent little jolts of pleasure through her as he pressed it deeper. Each millimetre resonating with her as her body willingly took it inside. \n\n\"Oh my...GOD!\" she cried loudly. Her volume control was null and void at this point and she had scant restraint in expressing what she was feeling. \n\nSlowly and deliberately, he pushed the plug into her completely, right to the base. It had a flared end which punctuated her hole with a delicate elegance. \n\n\"FUCK!\" came another loud cry. \n\nStroking her cheek in reassurance he sat backwards to marvel at the sight. He took great satisfaction in seeing her filled in this way. His erect cock dripped with pre-come as he stared at her behind. The jet black flare of the plug base nestled into her behind provided a delightful image. \n\nHaving the plug in her ass made her head spin. The size was perfect. Not too big, yet large enough to feel. She had never experienced anything quite like this sensation. \n\nHis finger felt great but this was on a whole other level. \n\nThe plug was firmly buried into her ass and despite all her original misgivings, it felt incredible. She felt full and completed in a way she never had before and laughed inwardly to herself for ever being so doubtful. \n\nBreaking her out of her hypnotic state, his next instruction followed. \n\n\"Lie in your back goddess.\" \n\nDutifully she obliged, turning her form around to a seated position. As her behind pressed down on the sheet, the plug pressed upward inside her. \n\n\"Oooh!\" she unwillingly exclaimed. \n\nNot painful by any means, the pressure of her own weight pushing down on the plug made it nestle deeper into her bottom. Her new accessory was quickly become a new friend. \n\nShe lie back, legs up with her knees together, this applied a different pressure on the plug which brought her yet more enjoyment. Adjusting the pillow under her head looking up at him, she basked for a moment in thought. \n\n\"If his tongue felt that good, then his finger even better and this new toy even better still, then his cock will surely feel astonishing!\" \n\nExcited beyond words she smiled and craved. She wanted his cock inside her ass. \n\nSlowly and seductively, she spread her legs before him. The immense wetness of her pussy shimmered in the light as a fresh wave of scent took the atmosphere. The plug protruded from her behind like a dot of black paint on a white wall. \n\nHe took one look over her and exclaimed his satisfaction. \n\n\"You are truly stunning,\" he remarked with a lustful look. \n\nTravelling up her body, he removed her bra and began kneading her ample breasts. They felt divine. Her nipples became erect as he lightly worked them between the knuckles of his fingers, pinching gently to accentuate her pleasure. \n\n\"Mmmmmmm!\" she moaned under his touch. \n\nLeaning down he took an erect nipple into his mouth and lightly suckled, massaging her wonderful form in his hand while he did so. \n\nAll the while she could feel the plug at home in her ass and the moisture from her opening trickling down onto the base. The flared end caught the liquid and it swirled down around her penetrated opening, providing a blissful warm lubricated feeling. \n\nCaressing and kissing down her body he arrived between her thighs. Her pussy was soaking wet with the exploits of her new insertions. He started lapping at her clit, taking it into his mouth and gently sucking her rounded pearl, sending wave upon wave of pleasure through her body. \n\nSquirming under his tongue, her back arched and she drove her mound into him, amplifying the force. \n\nHe reached down between her cheeks and pushed on the base of the plug. Its slender form delved further into her ass and she let out a prolonged moan of intense gratitude. \n\nPositioning his fingers at the entrance of her vagina, her wetness glistening in the dim light of the bedroom, he began circling her entrance. Her nectar poured from inviting hole as his fingers entered her smoothly. \n\nPressing two fingers into her, he penetrated her with lustful intent. Never before had she been filled in two holes simultaneously. The sensation was invigorating as he worked his digits inside her sodden pussy with one hand and pushed the plug deeper with the other. His tongue continually lashing and licking at her clit. \n\n\"Jesus Christ!\" she screamed. Her eyes rolled into the back of her head, completely taken aback by the dual sensation. \n\nArching his fingers upwards as before and rapidly increasing momentum to reach her most pleasurable of areas, she felt the now familiar rush of a cascading orgasm hurtling full speed towards her. The pressure being applied to the toy in her ass increased the sensation exponentially. She was going to gush all over him any second. \n\n\"Fuuuck! I'm coming! I'm coming!\" she cried as her pussy began to flood. \n\nSeconds before her explosive release he stopped abruptly and swiftly removed his fingers from her. \n\nShe panted uncontrollably as the sudden tsunami between her legs was cruelly halted at the very last moment. \n\n\"FUUUUUUUUCK!\" she screamed, slamming her hands down by her side! Almost angry at him for denying her release. \n\nThe scent of her denied orgasm shot up from her exposed intimacy and filled his nostrils with the most intoxicating aroma. Liquid remnants of her halted climax dripped from between her folds. For a moment he perceived her pussy as crying in anguish at being denied orgasm so very close to the edge. \n\nHis cock grew rigid and bulged, throbbing between his legs at the sight of her fluid. He reached down and gave himself a complimentary few strokes, stimulating his arousal. \n\nHer rapid breathing had slowed to become laboured and shallow. The forbidding of such an intense orgasm wracked her body with such frustration that every sinew and fibre of her being ached for release. \n\nShe lay in frustrated denial long enough to feel the sensation once again of the plug buried in her ass. Her tight opening had tensed around the plug as she nearly came. As her muscles relaxed around its trappings, she once more succumbed to the feeling of completion it provided. \n\n\"On all fours goddess,\" he commanded with subtle dignation, breaking her from her sensation. \n\nDutifully she obliged, pulling her pleasure ravaged body upwards to a prone position and once again offering her ass to him. The glistening wetness of her divinity dripped downwards, pooling on the bed sheet. \n\nHer mind was not her own anymore, she was completely and totally at the mercy of him. All she craved was his touch and his pleasure and the sweet release she so desperately needed. \n\nArching her back downwards, she poised her delicious ass outward to him in a submissive display of need, want and unadulterated desire. \n\nGripping the base of the plug, he began to retract it from her. The slight ridges along its shaft sent ripples of sensation coursing through her body. Slowly and deliberately he pulled at the base, ensuring each ridge brushed her ring to maximise her enjoyment. \n\nThe toy became smaller until the tapered end was all that was left. Caressing her behind in a display of assurance that she had performed masterfully, he removed the final inch from her. \n\nHer puckered hole slowly receded back to its natural state and gleamed with her abundant wetness. \n\nShe let out a blissful sigh as her emancipated hole was released. She closed her eyes and eagerly awaited the next act. \n\nRising up behind her he took the bottle of lubricant and generously poured it down the crease of her behind. Given her advanced state of arousal he was sure she would no longer require it but as it was her first real experience of anal, he took extra measures to ensure her complete satisfaction. \n\nHis right hand massaged between her cheeks, scoring over her now loosened hole while his left went underneath her and worked slowly at her clitoris, accentuating her pleasure. \n\nTaking his hands away he applied the viscous substance to his palms and massaged down the length of his shaft as he prepared himself for what he most desired. The sensation was palpable. He had spent the past however long administering her pleasure he had completely forgotten his own. \n\nHis cock tensed and pulsated in his grip. Rigid and stiff beyond measure, he was ready to take her. \n\nHe rose to his knees and positioned behind her, his cock at full attention and pointing directly at her exposed openings. \n\nTaking his member in hand he guided it into her pussy, the slick lubricant coupled with her own excretion saw him enter her with ease until his hips pressed against her behind. \n\n\"Aaahhhh!\" came her satisfied murmur. \n\nWithdrawing his length completely, he gave a deep thrust of his hips forwards and began to slowly become one with her. She was wet beyond belief and the warmth of her pussy lavished his cock. Her pussy was awash with moisture which only served to ease his entry into her. His erect member slipped effortlessly in and out of her divinity. \n\nA few slow and deliberate thrusts followed as his balls smacked against her. He held on to her hips as he delivered his meaningful strokes with poise and deliberate precision. \n\n\"God!\" she expelled. Blissfully in another world. One of pure pleasure. \n\nPausing for a moment, he reached down and took the plug in hand, then reached around her thigh with the other and palmed the contours of her pussy. Scooping a generous portion of her delicious nectar in his hand. \n\nHe massaged the silicone plug with her elixir to lubricate then positioned the rounded tip at the entrance to her tight ass. \n\nDrawing back his hips, he left the tip of his engorged cock just inside her, enough to still feel her warmth. Pausing for what seemed an eternity, he began to move his cock forward into her inviting hole once more while simultaneously pushing the plug back into her behind. He deliberately took his time, ensuring the ridges of the plug rippled against the border of her ring as it plunged deeper. His cock followed inside her vagina at the same deliberate pace until his hips pressed against her ass cheeks and his thumb applied the final push to the plug in unison. Double penetration. ",
        "She gasped sharply at being taken so completely and buried her head down into the pillow, clawing at the bed sheet and moaning uncontrollably in ecstasy. \n\n\"Fuck! Fuck! Oh god...fuck!\" \n\nNever before had she experienced anything like the sensation. She writhed and squirmed, thrashing and moaning as his cock nestled deep inside while the plug filled her ass entirely. She felt utterly fulfilled and encased in a penetrative tornado of pleasure, incomparable to anything her body had been treated to before. \n\nHe held her supple hip with one hand and pressed his thumb to the base of the plug with the other, applying gentle pressure before once again thrusting inside of her. He stiffly fucked her from behind while applying pressure to the plug, plunging deeper and deeper into her with every stroke. The pressure on the plug was piercing, like a syringe of pure bliss. With each thrust of his cock into her vagina, he matched it with a push on the plug. Her moans increased exponentially as she moved her hips backwards to meet his momentum. Catching his rhythm and forcing him to the very depths of her intimacy. She was gone. Completely at his mercy and thoroughly enraptured by the dual pleasure she was experiencing. \n\nShort, sharp thrusts combined with deeper, slower and more deliberate ones to intensify her enjoyment. Her orgasm raged within her once more, having already been denied the chance to release twice already. A hurricane of orgasmic juices welled up inside her pussy; her walls tensed and applied a vice-like grip to his shaft. Her anal muscles contracted and spasmed around the base of the toy. Feeling her body convulse and the grip on his cock inside becoming tighter he once again dramatically withdrew from her opening just at the point of her climax. A stream of vaginal nectar trailed from his cock as he pulled himself out of her. Her hole flared and contracted with intense need as he removed himself from her opening. \n\nHer frustration was audible and tears streamed uncontrollably from her face as for the third time in succession she was denied the opportunity to release. Her pussy coursed with electricity and took complete hold of all her senses. The powerful scent of her aroma filled the air with lustrous fervour. \n\n\"Fuck I need to come so fucking much. Please, please, please let me come. Fuck me, I need to come!\" \n\nHer begging and pleading gave him immense satisfaction. He had her so tightly wound up and literally fit to burst, like a beautiful coiled spring put under immense pressure. Her femininity filled the atmosphere, the scent was overpowering. His cock thronged and twitched for its own release, accentuated by the intoxicating perfume of her pussy which flowed with her liquid sexuality. \n\nNow was the time to take her ass. \n\nTaking the base of the plug in his hand once again, he slowly retracted it. Once again, the slight ridges down its shaft punctuated her pleasure as she gained freedom from it. Inching it out gently she felt an inward rush of pleasure and pure desire as she knew what was to follow. \n\nHe stroked the arch of her back and down her cheeks in a reassuring gesture then moved up behind her once more. \n\nHer anticipation was at a fever pitch. Gone were the doubts and nerves she had toiled with given the prolonged period of intense pleasure and orgasm denial her body had been subjected to. The muscles around her ring relaxed and her sumptuous form bowed and ebbed with an intense lust. She was willing to be taken by him in any manner he desired. Her need for satisfaction and to be allowed to orgasm was overwhelming she no longer cared how she achieved it. \n\nHis cock was slick with a combination of the lubricant and her own moisture. The sensual lighting of the room illuminated her moistened holes which still pulsated with lingering spasms of pleasure. The air was thick with the smell of sex. \n\nHe rose behind her and placed the tip of his penis against her tight ass. Pre-come seeped out of his engorged end and fell into her puckered kiss. The plug had created a suppleness to her opening which would allow him to enter her most secret of entrances with greater ease. Her breathing became more laboured as she steeled herself for what was about to happen, coupled with the formidable physical urge to release her orgasm. \n\n\"Relax goddess, take deep breaths,\" he said to her reassuringly. \"Slowly push yourself backwards onto me, give it time and go at your own pace.\" \n\nShe obliged and began gingerly moving her hips back onto his enlarged cock. Her ass opened and started to take him inside. He was much bigger than the plug and the sensation was something far more intense. As the tip and head entered, the grip on his member was all encompassing; he threw his head back in bliss. Her muscles flared and stretched to allow the head to pierce her and vanish inside her sacred, and until now, forbidden hole. \n\nShe paused for a moment to acclimate to the intrusion as swathes of intensity enveloped her. She pushed herself backwards onto him further, taking more of him into her void. \n\nThe discomfort was unavoidable, only this time the training her behind had just received, coupled with the slick lubricant soon changed discomfort into pure pleasure. She felt a twinge of pain which morphed, almost tangibly, into euphoria. \n\nHalfway down his shaft, she paused again; she didn't feel like she could take anymore of him inside though she wanted to be filled completely. The further she pushed back, the more discomfort she felt but as with the head it was soon replaced by an intensity of pleasure. The resistance of her ass was growing stronger. A plug is one thing but an enlarged and raging cock is something far greater for a near virginal ass to handle. She steadied her breathing and willed her body to acclimate to the penetrative force of his throbbing cock. She wanted him inside her ass entirely. Nothing less than full and total penetration would do at this point. \n\nTaking deep breaths she summoned all her remaining strength and pushed slowly backwards one final time. Her muscles stretched and resisted as the discomfort increased. The pain she felt was more pronounced, however the rush of pleasure wasn't far behind. It felt invasive yet captivating all at once. \n\nHe looked down at her with a perfect stillness and devoured the magnificence of her ass swallowing his entire length. Her supple behind was gorging on the feast of his cock as her ring expanded to allow the penetration. She looked spectacular, beautiful and wonderfully filthy all at once. This goddess of a woman who not so long ago was presenting her feminine glory to him was now willingly impaling herself anally onto his proud member. He marvelled at the sight and drank in the unadulterated sensation of her ass engulfing his cock. \n\n\"Holy fuck!\" she cried. \n\n\"Holy fuck, you're in my ass!\" \n\nNever before had she felt so filled and utterly penetrated. The feeling of him inside her ass was incredible. She felt stretched, vulnerable and completely at his mercy. Her secret entrance gripped his cock with a fierce longing, enclosing around his shaft. She felt warm, tight and unbelievably arousing to him. \n\nStroking her back and her soft cheeks in a gesture of reassurance, she felt divine. He was right. This does feel incredible. Her entire body coursed with waves of intense sensation. It felt new and exciting, invigorating and wonderfully submissive. He had his cock buried in her backside for the very first time. She felt an unequivocal certainty that it was most definitely not going to be the last. \n\n\"I'm an anal girl,\" she thought to herself with a wry smile. \n\nShe stayed motionless for a few minutes while she adjusted to having him inside her so completely. \n\nSteadying her breathing she bit down on the pillow and raised her arms above her head. This caused her back to arch and her bottom to push further backwards. His hips pressed harder into her cheeks and she could feel his abdomen pressing against her naked skin. She couldn't believe how wonderful the sensation was and how it intensified the deeper he was. Now all she wanted was to be fucked and to be allowed the sweet release of orgasm. \n\n\"I'm ready,\" she said to him. \n\nPlacing his hands on her hips he started to retract his cock, right back to the tip, almost removing himself entirely. Then with one deliberate forward motion he reinserted his entire length into her ass. Her entire body became euphoric; his deep and penetrating thrust into her backside shook her to the very core and brought a tidal wave of glorious sensation. \n\n\"Oh my GOD!\" she exuded in sheer delight. \n\nAfter a few delicate retractions and insertions his pace quickened, her ass was fully inviting to him now and he was entering her with ease. Deep thrusts into her backside brought pleasure cascading through her body. Her tightest of holes acting as the focal point. She felt the tip of his cock reach the very deepest parts of her soul as he plunged in and out of her with powerful intent. The denial of orgasm soon had her body building towards its crescendo once more. Expletives escaped her uncontrollably as she was completely and totally enraptured by the new experience. The smack of his skin against her bare arse, coupled with his groans of immense enjoyment provided the soundtrack to her new found love. She joined him in a chorus of sexual animalistic song and screamed out to him. \n\n\"Fuck me! Fuck me! Oh god fuck me!\" \n\n\"Fuck me! Oh god, oh god, oh god, oh god!\" \n\nHe gripped her hips and intensified his thrusts, no longer taking delicate care, he felt her body had accepted him and he could be more forceful. He moved a hand backwards and brought it crashing down on her exposed cheek, spanking her with vigour. \n\n\"Ahhhhhhhhhhhhhhhhh! FUCK!\" she screeched. The sting of his bare palm slapping her bountiful ass created a loud smack. Her body reeled under the strike and intensified her pleasure. \n\nThree more strikes followed as he fucked her ass with great intent. He could feel his own orgasm building as he penetrated her; the grip around his cock was all consuming. His pace quickened further as he struck her ass twice more. \n\n\"FUCK!\" she ecstatically screamed. \n\nThe wetness of her pussy dripped from her lasciviously, her entire mound drenched in her juices. \n\nReaching a hand down around her thigh and between her legs, he met her soaked clit and stimulated her while continuing to thrust into her backside. His body rested on her behind as he masterfully worked her clit, taking it between his fingers and rubbing her drowned nub ferociously. \n\n\"Oh god, oh god, oh god!\" her voice pierced the air as she was completely lost to the pleasure she was experiencing. \n\n\"I'm coming, I'm coming!\" she screamed. \n\n\"I'm coming, harder, harder, oh god FUCK ME!\" \n\nHe deepened his thrusts, moving into her right down to the base while massaging between her legs, he was almost there too. His cock effortlessly glided in and out of her tight hole. He could feel her opening grasp and clench his length with every deep insertion. \n\n\"Come for me goddess,\" he instructed... \n\nThrowing her head back and pushing deeply behind into him, she met his thrusts and rhythmically moved with his body. He rose up and grabbed a handful of her violet hair in one hand and struck her ass repeatedly with the other. With each pounding thrust inside her wonderfully tight hole he pulled backwards on her hair, yanking her head back. She screamed in pure ecstasy as her pussy flooded. The muscles in her vagina and ass contracted and her orgasm reached its devastating crescendo. \n\nHer contractions set his orgasm ablaze. He pulled her hips into his body as he charged his cock into her pulsating behind. The rush of orgasm shot through his raging member and he erupted with a vengeance. His hot, creamy seed burst from his cock and into her waiting warmth. Spurt after spurt of his lust escaped him as he ejaculated into her ass. \n\n\"Fuck, FUCK! Oh FUCK!!\" \n\nShe moaned and screamed out in pleasure in tandem with him, her body lost all control. She felt the hot liquid eject into her tight hole, her pussy gushed as she violently squirted her orgasm, and her entire body convulsed under the intensity as her sweet nectar cascaded like a waterfall from her exposed divinity. Hours of denial from release gripped her as her fluid poured from her orifice. He reached a hand down between her legs to catch her sweet elixir. He felt her drip through his fingers as he massaged her pulsating clit. The orgasm caused her to collapse her legs and fell flat on her stomach, his cock still spitting ejaculate deep into her ass. She writhed and bucked under his weight as her pussy sank into the pool of moisture she had just expelled. His cock twitched inside of her as her ring convulsed around him. \n\n\"Oh my fucking god!\" he exclaimed in pure ecstasy, completely lost in the moment. \n\nThey lie there for moments together, completely encased in their dual satisfaction. Their entwined forms fully one with each other, their breathing laboured and their bodies spent. Her pooled liquid soaked his balls as he fell deeper from her. \n\nHe rose up and gently retracted his spent cock from her ass. He watched in glorious satisfaction as his seed seeped out of her hole and tricked downwards. Her behind twitched and slowly returned to a state of normality, fully gratified and thoroughly pleasured. His hand brushed lightly over her sodden pussy to ensure she felt the lingering sensation. She hummed in blissful gratification that she had been so deeply enjoyed and pleasured. \n\nLying motionless on their stomachs, his hand draped across the small of her back. Their shared experience had an intensity the likes of which they had never felt; they were completely at one with each other. He stroked her behind with a gentle assurance, the hand print on her skin lightly stinging under his touch. \n\n\"Mmmmm,\" she exuded, completely devoid of her cognitive ability and completely lost in her orgasmic trance. \n\nThey looked at one another with a deep sense of satisfaction and shared a long, passionate kiss. \n\nTheir bare skin pressed closely together, totally enraptured with each other. Her smile was uncontrollable; she was beaming and radiant with a glow. Her entire body felt elated. \n\n\"That was incredible!\" she expressed. \n\nHe looked at her with a loving smile as he gently caressed her curves. \n\n\"Good girl,\" he replied. \n\nShe rolled over onto her side and nestled her body backwards into his. Her ass still tender and completely satisfied pressed into his now flaccid penis, still warm from her internal heat. She enjoyed the residual feeling of his come dripping from her ass. She wanted to retain the feeling of what they had just enjoyed together for as long as possible. He wrapped an arm around her and held her breast. She felt safe, secure and completely at peace as she closed her eyes and enjoyed the last remaining sensations of her first proper anal adventure. \n\nThe deep scent of raw sex hung heavy in the air and enveloped them like a blanket. She smiled to herself and whispered to him softly with a hint of desire. \"My ass belongs to you now.\" "
    ],
    "authorname": "OutlawedSubversion",
    "tags": [
        "anal",
        "plug",
        "ass",
        "toy",
        "first",
        "squirt",
        "rimming",
        "squirting",
        "ejaculation",
        "lingerie"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/anal-exploration-violet"
}