{
    "title": "Nothing as Sexy as a Man in a Skirt Pt. 02",
    "pages": [
        "I apologize ahead of time to the Brits, the Scots, the Masai, Rednecks, Grammarians, and military people in general. I did some research, enough to not screw up the basics too badly. So, forgive the things I got wrong, and try to enjoy the story.\n\n...................................................\n\nThe wedding was getting closer. And we both were getting nervous.\n\nHer mother had decided to come, at the last minute. Amanda was a mess. I probably didn't help much.\n\n\"I'm sure we'll get along, honey. And if we don't, it won't matter. I'll still love you. But, if she starts trying to change your mind, or belittles either one of us, I have no problem asking her to leave, politely or forcibly, it really won't matter much to me.\"\n\nI think it surprised her.\n\n\"Let's hope it doesn't come to that,\" she said wanly, trying to smile.\n\nI kissed her fiercely. \"Nothing will ever come between us. Ever. I'll always love you. Always. Every action I take from now on will be tuned towards your happiness. You are the most important thing in the world to me. Understand?\"\n\nShe hugged me tighter, crying lightly.\n\n\"Thanks, honey. I think I needed to hear that.\"\n\n\"Speaking of things you need to hear, I promised to tell you the story of my tattoo, as well as other things about my life. Now is as good a time as any.\"\n\nWe were snuggled together on the couch, tea and scones on the coffee table. She wiggled around until she was comfortable.\n\n\"All right honey, tell me of your wild and misspent youth.\"\n\n..................................................\n\n\"I wish you had met my parents. They were really great. We weren't rich, but I never lacked for anything, especially love.\"\n\n\"I was eleven when they passed. It was no one's fault, they just hit an icy spot and slid into a river. It was cold, dark, snowing heavily, masking their tracks going over the bank. I'd like to think they didn't suffer.\"\n\nI felt her tighten her grip while I continued.\n\n\"An only child, if my grandparents hadn't taken me, I'd have ended up in the system, and who knows how I would have turned out.\"\n\n\"They lived near, and I was there a lot, listening to my grandfather tell stories of his time in Europe during the Second World War, or how he met grandma an swept her off her feet.\"\n\n\"Grandma owned a dance studio. I don't think she made much off it, but it kept her fit and away from grandpa. She loved him but said she needed outside interests to keep her sane. I could waltz before I was seven, tango at eleven. It gave me confidence, and when I hit middle and high school, I was ahead of the curve. The fact that I wasn't shy and could dance well made me popular with the girls, not so much with the guys.\"\n\n\"I took a few of my friends to my grandma, and she gave them a few basic lessons. It helped, and soon some were taking regular lessons. One was a cornerback on the football team, and when his balance, speed, and agility increased, he told the coach it was from taking dance class. He came in one night, observed, and soon almost every one on the team was a student, even a few of the coaches. The team got the nickname 'Dancing Fools Of Central High', we even performed routines with the cheerleaders during halftime. People laughed, but we won enough games to make the playoffs three years running, and once we won the state title for our size. The school even brought her in as a consultant, to teach the basics in PE class.\"\n\n\"When I was thirteen one of grandpa's old war buddies showed up for a visit. He never left. His name was Fergus MacLough, the same last name as ours. They had been stationed near each other, even did a few joint operations. When he found out there was a Yank named MacLough, he looked him up. They became fast friends.\"\n\n\"They taught me how to shoot, how to behave as a young gentleman, and box. All and all it wasn't a bad life.\"\n\n\"When I was sixteen my grandfather passed away. It was the only time I saw Fergus with tears in his eyes. He never moved out of the house after the funeral, and eighteen months later he married my Grandmother. Grandma passed four years after the wedding, and then Fergus passed when I was twenty five.\"\n\n\"There's a strong tradition of military service in our family, going all the way back to the Civil War. A MacLough never seemed able to back away from a fight. It was pounded into me by my parents and grandparents, and later by Fergus, a career military man himself. I joined the National Guard when I was eighteen. At first we were called out for floods, snow storms, things along that nature, but when the first Gulf War happened I opted to go active.\"\n\nIt really wasn't a war. It didn't last two months, my part anyway. But it was a really intense two months, for me. You never forget the first time you're in combat. I'm proud to say I upheld our family tradition.\"\n\n\"After two years, I went back into the Guard, going home to my factory job with no interruption in seniority.\"\n\n\"Then came 9-11, and every thing changed. I didn't have to volunteer, they called us up, and off we went...\"\n\n\"The Taliban was NOT the Republican Guard. Those guys were serious, and the end justified any means. Women, children dying, it didn't matter, as long as they got their target.\"\n\n\"Of course, we didn't know how serious they were, at first. But we learned real quick.\"\n\nI paused for a second, to catch my breath and order my thoughts. Amanda snuggled a little closer.\n\n\"It was my second tour, and I ended up very near a Scottish troop. I was like a bear to honey. We mingled occasionally, and when I introduced myself to a couple, using the light brogue my step grandfather had instilled in me, they were shocked.\"\n\nI grinned, remembering.\n\n\"I would ride the few miles between camps every week or so, or my two best 'mates', Charlie Wallace and Angus Jones, would make it a point to pop over. My guys could always tell when I had been around them because of my speech pattern.\"\n\n\"The day my life changed was the same as all the ones before, miserably hot, dusty, making you wish you were anywhere but where you were.\"\n\n\"The Scots were encamped at what was one time an old castle from the times of the Crusades. The real estate had changed hands many times over the centuries, and lastly it was an important mosque, commemorating a great victory of defeating the infidels for the last time.\"\n\n\"Of course, it had changed hands again, and was off limits to the faithful, a fact that had the Taliban incensed.\"\n\n\"They hadn't seen action in days, routine patrols with no sign of activity, so they were relaxing, cleaning gear, had a homemade grill going, roasting a lamb they had bought locally. No one had their vests on, it was just too hot and they thought they were secure. I was there because Charlie was a piper, and he'd just gotten his pipes. He was supposed to play that afternoon, and when I showed up with three bottles of Scotch and three cases of beer, they welcomed me like a long lost brother.\"\n\nI shut my eyes, picturing it in my head.\n\n\"The best bottle of Scotch went to their commander. 'Compliments of my commander, sir.' I said, watching his smile spread.\"\n\n\"Excellent,\" he said, grinning. \"Give my regards to your Captain. Tell him to be careful, we'll make a proper Scot of ye yet, laddie.\"\n\nThe first volley caught us all by surprise. His top NCO went down immediately, dead before he hit the ground. His lieutenant was hit, his arm almost completely torn off. And the major went down right in front of me, shot through the thigh, the bone broken and sticking through. I was hit at the same time, but I had my vest on. Still broke a rib.\"\n\n\"They still don't know how so many of them got so close without detection, but they estimated the enemy later at at least sixty. The Scots had forty men. Four died instantly, nine had serious wounds, and maybe half a dozen more slightly. Of course, we didn't know that at the time. The ones who could started returning fire. There was a real danger we would be over run.\"\n\nI paused, remembering the cries of our enemies, the screams of our dying and wounded. I could still smell the dust and the blood.\n\n\"I grabbed the Major and dragged him into the command building. He was raging by then.\" \n\n\"Get me a weapon, laddie. Now!\"\n\n\"I grabbed a couple of light machine guns and a half a dozen magazines. He covered me while I grabbed the lt., raging at me to get under cover.\n\nI could see the blood gush from his shoulder. He'd bleed out if it wasn't stopped soon. He was a big guy, but fear and adrenalin gave me what I needed to handle him like a child. Angus had made it by then, and between them they were keeping most of the Taliban under cover. The other men had found what cover they could, returning fire when they actually had something to shoot at.\n\nWe doctored the lt, putting a tourniquet on his shoulder and filling him full of pain killers.\"\n\n\"The Major was railing at the attack, frustrated because they were pinned down. They had gotten a sniper into position and he had already hit three men, killing two.\"\n\n\"Somebody needs to get that bleedin' sniper, give the men covering fire so they can retreat! I bet they're about out of ammo.\"\n\nI stopped, feeling her snuggle into me tighter. Stopping to kiss her hair, I sighed. It had been a long time since I'd thought about that afternoon.\n\n\"I knew he was right. Things were getting a little tense, you could hear the cries of the wounded and the screams of the dying. Looking at their weapons locker, I saw a couple of their sniper rifles. I grabbed one and ran out the back. The commander and Angus thought I was deserting them. As I was going out the back I noticed Charlies' pipes and without thinking I picked them up.\"\n\nI ran into the mosque, climbing into the minaret on top. There was a PA system there they had used to call the faithful to worship. I knew I needed to provide a distraction, so I switched it on and started playing, strutting back and forth. diverting their attention. It worked, because it took them a little time to process what they were seeing.\"\n\n\"I know what I had done right before I started playing was stupid, but it seemed the thing to do at the time. Fergus had given me his old tam before I left, for good luck. He'd worn it on the beach at Dunkirk, one of the last pipers to play in a combat situation. He'd been shot twice before he had to stop playing, and had two holes in the tam, bullets that had missed his head.\"\n\nI paused, while she watched me, eyes wide at the narrative. \"I took off my helmet and put it on. When I started playing it was like everybody stopped, wondering what the hell was going on. I stopped as fire started concentrating on me, yelling into the microphone. 'Retreat, retreat! Run, you wankers!'\n\nI had forgotten about the sniper, until I was hit, again to the vest, resulting in two more broken ribs, the bullet strong enough to go through my vest and lodge just under my skin. I went down, but the distraction had proven to be enough. Most of the troop had gotten to safety.\"\n\nBy now the Scots had gotten under cover and mounted a determined defense. Seeing a golden opportunity slip away, the Taliban concentrated a lot of firepower in my direction. I was hurting like hell and unfamiliar with the weapon, so I wasn't as accurate as I wanted to be. Through the scope, I could see a knot of men who had to be leaders, especially one, yelling instructions. \n\nI wanted to take the leader out, but hit another man close beside him. When his head just seemed to explode they started ducking for cover. I emptied the weapon, hoping to keep them down long enough for me to get away.\"\n\nI was idly rubbing my side, remembering the pain.\n\n\"It worked, until they came up with an RPG. I saw it through the scope, threw the rifle down, grabbed the pipes, and beat feet down the stairs. I almost made it when the RPG hit, and the whole thing came tumbling down. They told me it took them two hours to dig me out, and they found me huddled over the pipes, protecting them. By then all manner of help had arrived, choppers, my outfit, fighter planes, everything but the kitchen sink. Before I knew it, I was on a plane to Ramstein, to recover.\"\n\nThey had a British newsman embedded with the troop, and he had the presence of mind to video me pulling the major and lieutenant to safety, and later a clip of me strutting back and forth, playing the pipes as bullets flew all around me. He even filmed them digging me out of the rubble, still clutching the bagpipes. It was big news in the UK, seems the major was the Earl of Ferth, thirty third in line to the throne of England.\"\n\nMandy stirred, looking up at me. \"Wait a minute. He's the Colonel, right?\"\n\nI nodded. \"Yeah, he got promoted over the action, fighting and directing the troops while gravely wounded.\"\n\n\"What did you get out of it?\"\n\nI laughed. \"I got a purple heart, a bronze star, and a royal ass chewing from my captain and the major for doing something so stupid. I also got a certificate of valor, sighed by the Queen and Prime Minister, that also made me an honorary member of the British Army.\"\n\n\"I was banged up, Charlie had taken a round in the arm, and Angus got a nasty concussion when an RPG hit the wall he was hiding behind. He was stone deaf for two days before hearing started to return. The Major was the worst of us, his leg took three surgeries to repair, and it looked like his war was over. \n\nI was waiting for orders, three broken ribs, a nasty gash on my forearm that took eight stitches, and a spot over my left ear where the bullet grazed me guaranteed I would be off the lines for at least three months.\n\nI never realized who the Major was or how much pull he had, but suddenly I had a full colonel standing in front of me, saying perhaps a little medical leave was in order. I was pretty much ordered to England. The Major put us up in his London townhouse as a thank you, and left for a week, on personal business.\n\nWe had the run of the place, a car available should we like to see anything, any desire we had granted. Charlie was the wild one, and we had to pull him out of a couple of pubs before the end of our stay. Fortunately we did nothing to dishonor his house.\"\n\n\"The Major came back, with a guest. He introduced him as Charles, and he shook all our hands, telling me his Mum was keen to meet us. He seemed like a nice guy. I wasn't an Angliophile, so I didn't make the connection. Angus smacked me on the back of my head when he left.\"\n\n\"That was Bonny Prince Charley, you twit! His 'Mum' is the bleedin' Queen of England! Show a little respect.\"\n\nWe did get to meet the Queen, and she was indeed keen to see the mad Yank who had pulled her cousin to safety. I have the royal photo around here somewhere, of her presenting me with the certificate.\"\n\nI paused, to gather my thoughts. Mandy giggled.\n\n\"My snobby little Mum is going to flip when she finds out she has a son in law who has met the Queen. Any more to the story?\"\n\n\"Well, since you asked...\"\n\n\"I stayed with the Major for another three weeks. Their doctors examined me, declared me combat ready, and I was waiting orders.\n\nThe Major liked to walk in the evenings to build up his leg, so we developed a habit of walking a course, down to the park, around the perimeter, back through the middle of the park, and home. Charlie and I usually went with him. Angus had returned to active duty and was back with his mates.\"\n\n\"There were four of them, coming out of the bushes, armed with knives, screaming in Arabic. Seems one of the guys we hit, actually the one I hit with the rifle, was kind of an up and comer in the movement, and Daddy and the powers that be decided the world needed an example made.\"\n\nWe didn't think, we just acted. I shoved the Major behind me as he ranted about helping, and Charlie and I had a really interesting time for a few minutes. If they'd had the least bit of training, it could have gone very badly for us, but they were just students, trying to make a statement for their cause. Charlie got a nasty gash on his arm, and I got that scar you asked about on my chest. The Major actually took out the last one, bashing his head in with the brass knob on his cane.\"\n\n\"I killed one, Charlie another, but two survived. They're still in prison, and will be for life. There were other people in the park, and one filmed the attack on his phone, while others called for help.\"\n\n\"It didn't take long for the police to realize this was above their pay grade, and soon some fellows in suits showed up, escorting the Major to a secure location. He insisted we go along, said he refused to travel without his bodyguards, as he called us.\"\n\n\"They interviewed us all separately, and my light brogue threw them off. When they realized I was a Yank, and a soldier to boot, our people got involved. We were treated at a private hospital, and released, free to go.\"\n\nI stopped, smiling a little. Despite the attack, it had been one of the best periods of my life.\n\nThe upshot of the affair was a visit from the same colonel who saw me in Ramstein. He interviewed me alone, and then smiled.\n\n\"We're in a bit of a quandary here, son. The Major wants to keep you around. Seems he thinks you're good luck. He's going to be promoted soon, and his rank will match mine. As you can see by the attack, he is not safe, even here. He has specifically asked that you stay, as one of his bodyguards. It's highly unusual, but the President got a call from a concerned family member, and granted her a favor. You'll spend the rest of your active duty here, with the Major. It's called \"detached service\", and it usually applies to advisors to other armies or political postings. Oh, and you've been promoted to Master Sgt. Congratulations.\"\n\n\"Well, what could I say? We went to Scotland, where the Major lived, and were stationed at the nearby base, though Charlie and I were rarely there. He was serious about bodyguards, so we were sent to bodyguard school, taught the basics, went through the driving course, and when we completed that he sent us to work with the SAS for deeper training.\"\n\n\"Those guys were tough, the British equivalent of Navy Seals, Green Berets, or Delta, and when they found out I was a Yank they gave me hell. I was in the best physical shape of my life when we were done. We even participated in their graduation drill, just for fun. We had to get from point A to point B without being discovered and captured. We actually finished first, much to their embarrassment, but we had an edge. I was an American, and Charlie was black, even though he was fourth generation Scottish. We stole some civilian clothes and a backpack, and hitchhiked to the check in point, pretending to be students out exploring. Charlie didn't talk much, and I laid my Southern accent on pretty thick, and it did the trick.\"\n\nI smiled, remembering the look on the Captains' face when we got dropped off at the check in point, and strolled in ten hours before anyone else completed the exercise. We weren't even dirty.\n\nManda sighed. \"Quite a story. How much longer did you stay?\"\n\n\"Almost three years. The Colonel got heavily involved in veteran's affairs, championing the needs of those returning from combat, especially with disabilities. Angus, his tour up, came home and joined us a civilian. He was the obvious bodyguard, and we carried our pipes with us, to play at official events. Nobody noticed the pipe players, but we both had our sidearms under our jackets, with extra magazines and a small backup weapon in our sporrans, because we wore military kilts.\"\n\n\"It was pretty boring most of the time, appearances at veteran's hospitals, the occasional ribbon cutting, that sort of thing, until the Ferth VA Center.\"\n\nI stopped, remembering, silent for a long time.\n\nManda stirred, getting us some fresh tea and settling back down. \"What happened then?,\" she prompted.",
        "\"It was the high point of the Colonel's efforts. A brand new center, with a staff of counselors, therapy rooms, a fully equipped gym, it even had a daycare center. And all services were free. He cut the ribbon while Charlie and I played, then toured the building and attended a reception. The center was built on the banks of a river, and there was a really large deck built out over it. Most of the attendees ended up there, by the buffet tables.\"\n\n\"We were relaxed yet vigilant, and most of the crowd were veterans and college students, part of the new staff, all vetted, so we didn't see a problem. The Colonel had his wife, his youngest sister, and her six year old daughter, his favorite niece, along for the ceremony. His sister, following tradition, was married to the Danish version of a Duke, and was home for a visit.\"\n\n\"Angus noticed them first, three college students with large backpacks. We're still not sure how they got them in, but the best guess is they were already there, and they retrieved them when it was time. What made them stand out besides the backpacks were their hair color, they were all blonds with dark skin.\"\n\n\"Backpacks, three, on blonds.\" Angus had spoken quietly into his ear piece, and we noticed them instantly.\n\n\"I got the one in the middle,\" said Charlie, as he dropped his pipes. \"Left,\" I said, targeting the largest. Angus didn't answer, just walked towards the one on the right. The kid saw him coming, screamed something in Arabic, and fumbled with his back pack. He was standing at the top of a set of stairs, and Angus tackled him, both tumbling down. We heard the boom as the deck rocked.\"\n\n\"I didn't hesitate, pulling my weapon and putting a round between the eyes of my target. He dropped like a rock, but not before his backpack opened and the bomb came into view. Following my training, I turned, pushing the Colonel, his wive, and her sister over the railing, thinking they would be safer in the water. I grabbed the child and held her to me as I jumped.\"\n\n\"I had barely cleared the railing when it detonated, and I felt a blow to my back. Luckily, the water was only four feet deep, and when I surfaced I saw the family huddled together. I held the child up and walked over, handing her to her mother and fumbling in my sporran. I pulled the back up weapon and gave it to him. \"Here, Colonel. I think you might....\"\n\n\"That was all I got out before I passed out. I went face first into the water, and they told me later my back looked like hamburger. The bomb was filled with small ball bearings. They pulled twenty seven out of me in hospital. That's what those scars you see on my back and legs come from.\"\n\n\"Angus died saving people, smothering the bomb with his body. Charlie hardly got a scratch. putting two rounds into his target, and throwing the backpack downriver. It was retrieved later, and the bomb squad was amazed it hadn't detonated.\"\n\n\"The bomb on the deck killed three and wounded six, but most had a few seconds of warning and got away. It could have been much worse.\"\n\nI sighed, remembering. It had been a long time since I let myself think about it.\n\n\"Charlie came to see me four days later as I lay in my bed, and we congratulated each other for doing our job and surviving. He had sneaked a flask of brandy in, and we had a toast.\"\n\n\"To Angus,\" he said.\n\n\"To Angus,\" I repeated, \"may he rest in peace.\"\n\nCharlie told me the funeral was going to be tomorrow, and he wished I could be there to help him pipe Angus to his rest.\n\n\"What time is the funeral, and where?\"\n\n\"At one, at the Colonel's Castle. Angus had no family, and the Colonel wants him buried in the family plot, saying we were as close to family as he ever had.\"\n\nCharlie left, and an hour later monitors started going off as I unhooked myself from the machines.\n\nI was looking for my clothes as people rushed in, demanding to know where I was going. \"The Highlands,\" I replied as I pulled up my kilt, \"I have a funeral to attend.\"\n\nThe doctors tried to talk me into lying back down, but I was having none of it. The had me backed into a corner, an IV stand in my hands, as they stood in front of me with syringes. Nobody was keen to rush me, because I told them the first two would need their own beds.\n\nThe Colonel had been called and he strode in. \"Soldier! Stand down!\"\n\nForce of habit made me snap to attention. When he asked I told him what was going on. He looked me over, noticing the paleness. I probably was about two minutes from passing out, when he turned to the doctors.\n\n\"Have an ambulance and a competent nurse standing by. He will leave at seven, which should give him plenty of time. If he is not on my estate by 12:30, it will be very bad for this hospital. Very bad, understand?\"\n\nThey must have, because I was up at 5:30, fed, helped to don the dress uniform of our unit, the only variant on it a small American flag, on the left shoulder. My service ribbons and hardware was attached to the Jacket.\n\nI sat in a wheel chair until they carried Angus into the graveyard before I stood, my wounds weeping into my jacket, Charlie beside me, and we piped Angus home. We stood ramrod straight and never missed a note, even as tears streamed from both of us.\n\nI dropped heavily into the chair as the last notes died. Instead of being taken back to hospital, I was settled into a guest suite in the South wing, with a doctor on call and a nurse beside me constantly. Many of our old mates came to see Charlie and I, including the ones from Iraq.\n\nWe toasted fallen comrades and raised our glasses to the ones who made it home, glad we were among them. I stayed for eight weeks before being declared fit.\n\n\"What happened then?\"\n\n\"I was given a medical discharge along with a small pension, and sent home. Due to my wounds, I couldn't pass the annual physical, so I was out. The Colonel wanted me to stay, but it was time for me to go. I came home, returned to my job, and married Kim. I'm glad now it didn't work out, because I wouldn't have you if it had.\"\n\nShe had cried a little at my story, soothing me with her hands and lips. \"I don't see how you couldn't pass a physical, honey. You're the fittest man I know.\"\n\n\"Oh, I'm fine, for a little while. But prolonged exertion is out of the question. After two or three hours, I would be useless.\"\n\nShe snuggled back down, about to tell her tale, when I interrupted. \"One more thing, honey. The press were all over the story, and posted pictures of me flying over the railing, the child in my arms. She never got a scratch, by the way. There was quite an uproar for a couple of weeks before the press turned to something else. Two months after it happened, when I was finally healed, the Colonel ordered us into our dress uniforms and took us to London. We took a drive that ended up at Buckingham Palace. In a small room, Charlie received the St. George's Medal, and was Knighted by the Queen.\"\n\nI knew I had her attention then, \"What did you get, honey?\"\n\n\"I got the highest medal the British can give to a foreigner, and I was also Knighted. It's just an honorarium, the title dies when I do, but when we marry, you'll be Lady Amanda McLough for the rest of your life.\"\n\nShe started to speak, but I held up a hand. \"One more thing. The Duke was so impressed by my sacrifice in saving his daughter and wife he had me brought to Denmark, and in a public ceremony I was again given a Knighthood, I'm also Sir Ewan McLough of the Danish Court.\"\n\nMandy face had almost disappeared in her grin. \"Wait until I tell me Mum.\"\n\n\"I would appreciate it if you didn't, until the ceremony. Let it be a surprise.\"\n\nShe promised me she would try very hard, but made no guarantees.\n\nOh, and the tattoo was the crest of the Scottish regiment I was embedded with, the initials around it were those of fallen comrades.\n\n.................\n\nMandy sat for a minute, mulling over what I had told her, before sighing.\n\n\"I was born and raised in Africa. My father met Mum at a local ball held for visiting dignitaries, and sparks flew. They were together for ten years before they split up. Mom was tired of Africa, and wanted to move back to England, but Dad couldn't leave because of his business. He was one of the largest importer/exporters in the country, and couldn't just pack up and move away, unless he sold the business. He actually considered it, got several nice offers, but in the end he couldn't let go of the company he had built from scratch.\"\n\n\"I was nine when they split, and elected to stay with my father. Mother fought it, saying she wanted her daughter raised in a civilized country, which didn't earn her any points with the judge. She was a foreign national and Dad was a well respected local. The laws at the time made it impossible for her to win, so she had to settle for summers.\"\n\nDad was a good man, but had no idea how to handle a child, especially a girl. Oh, he loved me deeply, but his business kept him away for long hours, and I went through a succession of nannies before my grandfather showed up one day, wanting me to spend some time with him, to learn the ways of my people, the Masai.\"\n\n\"I ended up living in his village for two and a half years, learning the ways of my people. something about the village got to me, and I loved the life I was living. I was on my way to becoming a proper Masai women, my grandfather had already arranged a marriage for me, to a son of the chief of a neighboring village, when Mum came for me. There was almost a riot, but she had hired guards, and they brandished weapons as I was loaded, kicking and screaming, into a Range Rover, and spirited out of the country.\"\n\n\"Mum had a little money and connections of her own, and a British court deemed my former life unsuitable, and she was awarded full custody. There was bad blood between my Mum and Dad for years. He made three trips a year to see me, infuriated that it had to be under supervision. To this day her refuses to speak of her, and I have no idea what's going to happen at the wedding.\"\n\nShe stopped, sniffling a little. I held her tighter. \"I do,\" I told her. \"I talked to your father, and he has agreed that this will be your day alone, and he will not bring up ghosts of the past. When your mother arrives, I'll sit her down and explain as gently as I can that if she causes any friction at all, she'll be back on a plane to Cardiff within the hour. The Colonel has promised he would be there with me, to make it plain he will help. If she's as struck on royalty as you say she is, it might just do the trick.\"\n\n\"You'd really toss my mother out on her ear if she doesn't behave?\" \n\n\"More like her ass, honey. I think she'll see the light. Now please, continue.\"\n\nAmanda sat up and gave me a firm kiss, before starting again.\n\n\"I was, as you can imagine, a pretty rebellious kid. I got the tattoo at sixteen, for two reasons. The first was to remind me of my heritage, and the second was to piss my Mom off. It worked, and she sent me off to boarding school.\"\n\n\"Away from family distractions, I calmed down and applied myself to my studies, rising through sheer determination to make up for lost time. When I turned legal age, I applied and won a position at Duke Medical School, and here I am, about to live happily ever after. Not as exciting as your story, is it.\"\n\nI grinned and kissed her again. \"Maybe not as exciting as just different. And your Masai warrior is just going to deal with the fact that you love and are going to marry someone else. I hope whoever tells him lets him down easy. And if he wants to fight over you, I'm more than willing.\"\n\nAlthough I didn't know it at the time, but truer words were never more spoken.\n\n.............................\n\nAll our friends had shown up, having been flown over by the Colonel. Her mother was more than a little condescending at me until the Colonel told her what great friends we were, and that I had saved his life at least three times.\n\nIt was good to see my old mates, and when they went bar crawling without me, the Colonel and I had to bail them out and pay damages. Seems Charlie took offense over some redneck telling him what a nice dress he had on. It would be hard for him to tell anyone anything else until his jaw healed.\n\nFinally, on a sunny early June day, the local Preysbeterian church was overflowing with well wishers. My boss sat in the front row, as well as the Colonel's wife and younger sister. Her second daughter was flower girl. her oldest, a teen now, sat beside her and smiled, remembering a cold muddy river a long time ago. Her husband, the Duke, sat on the other side.\n\nAmanda's new stepmother sat in the front row, a Masai woman who worshiped her father, as he did her. She was much younger, and judging by her size, Amanda was going to have a younger sibling very soon. As a surprise, her grandfather was there, dressed in traditional robes, with two of his wives.\n\nHer mother sat a couple rows back, with her new husband. They didn't look nearly as happy as her father and his new bride.\n\nI was in my military kilt, complete with ribbons and medals. Charlie and the Colonel were co-best men. As we waited in front of the altar for her to appear, I whispered a quick promise to God, swearing absolute love and devotion to my soon to be wife. I had my eyes closed, and when I opened them, she had appeared, dressed in the traditional robes of a Masai woman, bracelets and earring gleaming, with an elaborate necklace covering her throat. It was so stunning it took my breath. Her father, also in traditional dress, escorted her down the aisle\n\nAmy and Molly, her co-maids of honor, followed, also in Masai robes, hair woven into intricate braids. Robbie, Mike, and Dave were my groomsmen, and Amanda rounded out her court with friends she had gone to medical school with. I'm sure they talked about the wedding for years.\n\nThe ceremony was officiated by the local minister, along with his bishop, and part of it was in Latin, but we all got the gist. After I had kissed my new bride, the Colonel stepped forward, his booming voice filling the chapel.\n\n\"Ladies and Gentlemen, it is my distinct honor to introduce for the first time Sir Ewan Mclough, and his wife the Lady Amanda McLough! May their union be blessed with happiness... and bonny wee ones!\"\n\nThe Duke had risen, and with his wife translating, did the same thing. Her mother actually fainted, realizing her daughter had married a Knight of not one, but two realms.\n\nWe exited the church to find many of my old regiment, in full uniform, and a local piper's group formed up at the front steps, their swords raised high, forming a tunnel for us to walk through to the tune of the bagpipes, cheering as we passed.\n\nThe reception lasted far into the night, and was talked about for years. When randy Highlanders are mixed with tipsy Southern Belles, interesting things happen. We didn't witness much of it, because we had a plane to catch. \n\nWe had three weeks to honeymoon, two of them vacation and the third a gift from my boss. \n\nAmanda had a lot more trouble getting the time. Dr. Krall was very vocal in his objections, but the Colonel once again stepped in, pulling strings, and there was nothing he could do. He fumed under his breath, vowing to make her life and his very difficult when they returned.\n\nAmanda and I traveled on a private plane, along with her father, his new wife, her grandfather, and his wives, and after many long hours landed in Kenya. The Colonel and his wife were along, for business, seems he owned, through a co-op, a large sheep operation, the wool almost as highly prized as that of his Highland stock. He had a finger in a few more pies, and explained that while we may get together for dinner a time or two, most of his time would be spent dealing with his business interests.\n\n............................................\n\nWe arrived at the beginning of the greenest season, and I couldn't believe the lush and vibrant colors. We spent most of the first week in Nairobi, with her father, as he squired us around to show us off to his friends and business contacts. They looked at Amanda with unabashed admiration, and me as if I were an alien, with my shining red hair and beard offset by my bright blue eyes.\n\nAfter four days, Amanda's grandfather arrived, insisting we spend time with him and his tribe, many who remembered Amanda from her childhood. She seemed a little reluctant, while I was keen to go. \"Women aren't very well respected, honey, their status is just above the animals in Masai society. Some men actually value their herds more.\"\n\nI swept her up into a kiss as the old man and his wives watched. \"I'd make a terrible Masai man, then, because you are more precious to me than every cow and sheep on earth.\"\n\nHer eyes were moist as I let her down, grinning. \"Now, if there were chickens involved, I may have to rethink the whole thing. You know how Southerners are when it comes to fried chicken.\"\n\nShe swatted my arm and engaged her father in conversation much to rapid to keep up with, even if I spoke the language. Finally, they all nodded.\n\n\"We will leave tomorrow morning. It is a long drive, so we need to pack plenty of water and snacks. I hope you like it, honey. Most foreigners never get this close to the actual workings of a Masai compound. OH, and it is an old tradition that the men can share their wives with their friends if they want. You won't mind, will you?\"\n\nShe was laughing while she spoke, but settled down. \"It isn't practiced often any more, it has mostly died out with my grandfather's generation, along with taking multiple wives. It's still legal, but economic factors have come into play, and most can't afford more than one. You've got a little money, my honey, maybe we can find a really nice looking girl around sixteen. In this economy we could probably get a deal.\"\n\nShe broke out laughing at the look on my face. \"The only drawback to that plan is I would kick the little bitch's ass, then yours. Private property, agreed? Besides, could a little girl do this?\"\n\nWe were lying bed while we talked, and with that statement she stopped talking and started doing other things, very pleasurable things, with her mouth. I decided to go the silent route myself, twisted her around and started returning the favor. We both found our voices after a while, right there at the end.\"\n\nSated, we snuggled up and she giggled. \"Get some rest, husband, tomorrow we go back in time.\"\n\n.................\n\nAs we approached the village, I started to believe my bride. It's one thing to watch shows on television, another entirely when you experience it first hand. As I said, the land was blooming, and the people, in their colorful robes, stood out against the landscape. I saw her grandfather really smile since the first time I met him, as yet two more wives greeted him. Amanda was immediately swarmed by a group of women roughly her age, childhood friends I'd guess. She had switched flawlessly back into the language, and I knew she was very happy. Blushing, she grabbed my hand and pulled me along, smiling, introducing me to her friends, who wouldn't look me in the eyes. A cultural thing, I guess.\n\nIt was a different vibe with the men, though. Most welcomed me, but a few were reserved, and a couple looked downright hostile. One of the men who could speak English explained. \n\n\"That is Laibon and his friend. They think we should reject modern times and go back to the old ways. Highly impractical. yes? We are too accustomed to the improvements your culture has brought us to ever go completely back to the old ways.\"\n\nThen he grinned. \"He not only doesn't like you because he views you as a foreign devil, you married the girl that was promised to him.\"\n\nSo then, this was the man her grandfather chose as her husband. Amanda's mother had killed those plans.\n\nThey were all attractive people, especially the young ones. One thing I noticed was there was very few obese people. Amanda said it was because they lived such active lifestyles. Most of the women were tall compared to Caucasian women, and though I was tall, most of the men had an inch or two on me.",
        "My new friend, who wanted me to call him Charles, took me to watch some of the dancing the Masai was so famous for. I was watching a moran perform the traditional jump dance, marveling at their ability, when one detached himself from the group and stood in front of me, bouncing up and down. It was Laibon, challenging me, his way of seeing who the better man was.\n\nLaibon was actually short for his people, almost an inch shorter than me, a fact that he found embarrassing, so he tried to make up for it with aggression. It made him few friends in the tribe.\n\n\"He is challenging you,\" said Charles, grinning. \"He wants to embarrass you when you refuse.\"\n\nI grinned at Laibon and took off my shirt, standing in my cargo shorts and trainers. There was a rumbling among the men when they noticed how muscled I was, and they were impressed with my scars, the bullet holes from the sniper long ago, the shrapnel scars from the ball bearings, and the long scar down my chest from when the students attacked the Colonel in the park. The respect grew in their eyes, knowing they were looking at a true warrior. It seemed to infuriate Laibon.\n\nI walked into the circle, and as they sang I started jumping. I had done high jump in high school, and the muscle memories came back as I jumped. You were supposed to jump alone a few times, and fade back into the group to let another show off, but after about four jumps Laibon stood before me, eyes blazing. He started jumping with me, and grew angrier when he realized I jumped just a little higher every time.\n\nI could see it in his eyes, he was getting ready to slam into me, and when he did I remembered my days as a linebacker, and body checked him hard. It knocked him on his ass. The singers stopped, just staring, and I turned to walk away. When they gasped I knew he had risen and was after me, so I surprised him by turning to my left, grabbing his arm and twirling, sending him flying across the packed dirt of the village. He slid to a stop, stunned.\n\n\"Tell him to get up and walk away. Tell him if he gets up and comes at me again, I will stomp him until he looks like the dirt he is lying on. And tell him to stay away from me. I'll be gone in a few days, and he can go back to being cock of the walk.\"\n\nI don't know how literal Charles was was in what he told him, but I could see the fury blaze in his eyes. It was about to get really interesting when the chief, who had been watching the last of our confrontation, said something to him, and he stormed off.\n\nHe had Charles tell me to follow him, and he came along to translate. Amanda had been told what happened, and showed up with about a dozen women. Normally a woman would have been nowhere near the chief when he talked to warriors, but he told her to stay, to make sure he got the translations right.\n\nHe asked a question and Amanda took a long time answering it. I found out later she was telling of my military exploits, and being knighted in two countries. I could tell the old boy was telling her something that made Amanda frown. \n\nLater, in our tent, she explained things.\n\n\"Grandfather was impressed with your war stories, and says you are at least a senior warrior, and would probably be a junior elder in our culture. He also said that Laibon came to him, trying to assert his claim on me, the marriage contract he made so long ago. Grandfather explained that I was your mate now, that I lived in a different world now, and we had to start letting go of things from the past. Laibon became very angry, but the chief had spoken, and there was little he could do. Watch for him honey. He and the few friends he has think the tribe should reject western culture and go back to the old ways, and you caused a lot of damage to his reputation by outdancing him, and then putting him in the dust.\"\n\n\"I snuggled in to her, kissing her hair. \"We'll be gone soon, honey. I wouldn't worry too much about it.\" Boy, did I get that wrong.\n\nTwo days later I was sitting with her grandfather, when I heard a scream that brought me to my feet. It was Amanda, and she came into view, her dress ripped, one breast exposed, running as fast as she could. Laibon was right behind her. She saw me and ran to me, hiding, as Laibon stopped and grinned. He stopped grinning when I hit him right between the eyes, knocking him cold. I was about to give him an old time Southern ass whipping when Charles and another man got between us.\n\nThe chief had stood, and was demanding angrily to know what was going on. Amanda translated.\n\nSeems Laibon had decided to take Amanda, to teach her a lesson and return her to her traditional role in his culture. While mate sharing was still a tradition, rape wasn't, and Laibon was in deep shit. If Amanda went to the authorities and pressed charges, he could go to prison for a long time. That, however, meant Amanda would have to stay to testify, and she didn't want that. I looked at the Chief.\n\n\"All right, we won't press charges. IF I get the asshole to fight me man to man. He needs a lesson about the real world, not the fantasy he seems to have in his head,\"\n\nAmanda went pale and tried to stop me, but it was too late. I had just challenged Laibon to a duel, a serious thing in their culture.\n\n......................\n\nLaibon woke, his face in the dust. Again. While he was clearing his head, he heard the foreigner issuing the challenge and smiled. Now, he would get his chance, and show the devil what a real Masai warrior could do.\n\nJumping to his feet, he set the terms of the duel, expecting the devil to pale and be afraid. Instead, he just smiled, and accepted, saying it would take him three days to prepare, the custom of his people. He was glad to see his woman was terrified. When he killed the enemy, he would take her. It would probably take a lot of beatings, but he would get her trained, eventually. He took his few friends into the bush, to prepare.\n\n...............................\n\nThe Chief tried to talk me out of is, saying the consequences to his people would be dire if it was discovered. I looked him in the eye and gave him a solemn promise that if I won I would never speak of it, and if I lost there would be no repercussions. The official report would say I died in a bush accident. He looked deeply into my eyes before accepting my hand. He spoke a few words and left.\n\nI asked Charles what he said. He grinned. \"He say try not to kill him.\"\n\nAmanda was terrified, and I tried to calm her. \"Honey, I have a lot of advantages. I trained with the very best, in the very best form of hand to hand combat. And I have trained in sword and dagger until I'm quite proficient. Plus, I've actually been in combat, and looked an enemy in the eyes when I killed him. I won't say he won't get hurt, he needs a lesson pretty badly, and he touched you. I may not kill him, but I might castrate him. Now, we need to go to Nairobi. I need to see the Colonel.\"\n\nI made the trip back while Amanda stayed, under her grandfather's protection. I wanted to make it clear to all concerned that I was returning. Instead of the long drive, Charles drove me to a nearby farm, where for a little money, the farmer flew me back, and agreed to wait a day to bring me back.\n\nI got hold of the Colonel, and he met me at Amanda's fathers' condo. They both went wide eyed when I told them what happened. \n\n\"Are you sure about this, Laddie?\"\n\nWhen I told him I was, he made calls. Don't ask me how he found a two handed Claymore almost exactly like the one I had at home, or the shield, but he did. Instead of the traditional dagger, I went with two British fighting knives, something I was comfortable with. We also went to a theatrical supply store, for something very specific. The Colonel was impressed, grinning. \"Don't even think about leaving me behind. I wouldn't miss this for the world.\"\n\nWe sent the farmer home with thanks, and got into the larger plane the Colonel had chartered. Laibon had been telling everyone I had run away, and if I didn't show up her was taking her, as spoils. He was not happy when I returned, with her father.\n\nAmanda was shocked and amazed at what I was doing, seeing the merits at once, even grinning once or twice. \"He's going to shit his knickers!.\" she laughed, before snuggling down into my arms.\n\nThe next morning, at the appointed time and place, Laibon stood, in full regalia. His hair and face were painted red, a traditional color. He had his lion spear, a sort spear with a very long blade, his sword and dagger in his belt, along with his brightly painted shield. He was standing proudly, enjoying the admiration of his peers, when an shocked whisper went through the crowd.\n\nThat night, I had shaved my beard, and Amanda had woven my hair into tight corn rows. I was fighting like the traditional Celt of the past. I was naked, except for the belt holding my knives. Not only was I naked, my entire body was painted in bright blue, wit a white accent stripe across my forehead, and one diagonally across my chest, roughly following my scar. Amanda had even shaven off my pubic hair, which made my penis look larger than it was. To highlight it, she had painted it white.\n\nI was beyond shocked when she went out that morning and came back with her long, shining hair shaved off. She giggled nervously. \"It's the traditional thing to do for a Masai woman when she marries. After you beat this bastard, we will be having a full Masai wedding. It's been planned since we got here. So don't get hurt, I want you in top shape to perform afterwards.\"\n\nShe stroked me until I was almost fully erect, giggling. She stopped and stood. \"There, that should give the girls something to think about, and I want it to look like you're excited when you face him. A few of the women who know say he isn't very impressive, equipment wise. This will be just another reminder that he is facing a better man.\"\n\nJust before we walked out, she pulled me down and gave me a tremendous kiss. \"Don't get hurt. And if you do, all guarantees aside, I will kill him.\"\n\nThe shock was apparent on all their faces when we came out of the tent. Besides me, Amanda wore the same blue paint, and she was topless, wearing her kilt. People gasped and scrambled out of our way.\n\nI was surprised to see the Colonel has flown in four pipers, people he could trust, and they formed an honor guard, two in front and two behind, playing 'Scotland the Brave' as we walked to the center of the village.\n\n..............................\n\nLaibon looked on in pure amazement at the creature before him, and his companion. They looked like demons from an old folk tale. For the first time it occurred to him he may lose. He shook off the thought. This was a man before him, and soon his red blood would cover the blue paint.\n\nThe Chief asked again that they not do this, and when both refused he asked that they stop short of death, if one was bested the fight was over. The foreign devil agreed, Laibon did not.\n\nThey stepped to the open area. It bothered Laibon to see the man grin. He was a warrior! He had killed a lion in single combat, something outlawed and illegal. No man could stand a chance against him.\n\nHe struck his spear against his shield in the traditional salute, signifying his readiness. The devil did the same, then threw down his shield, gripping the massive blade two handed. Laibon thought he had an advantage, but the foreigner fought like the devil he appeared to be.\n\nThey went back and forth for five minutes before Laibon saw an opening and thrust, fully expecting to pierce him through the heart, but the spear found nothing but air as the devil twirled, bringing his massive sword down, shattering the spear at the point that it fitted the handle.\n\n.............................\n\nI'll give him one thing, he wasn't afraid. The spear caused me a little worry, and as we battled back and forth I knew he intended to leave my dead body lying in the dust. Finally I got him to overextend, and broke the spear where shaft and head meet.\n\nHe dropped the spear butt immediately, running backwards while trying to draw his own sword. He suddenly stopped to laughter, because I hadn't pursued the advantage, standing there with my weapon down, waiting.\n\nThe Claymore had a reach at least ten inches more than the traditional Masai blade, and I used it to every advantage, running him ragged, taunting him the whole time as people yelled translations. I let him charge and stepped aside, bringing the flat of my blade down on his backside. His loincloth did little to dull the pain. I don't know at that point whether he was screaming in pain or embarrassment.\n\nI got a little careless and he scored a hit, a light gash across my stomach. It stung like hell, and it did make quite a contrast against the blue paint. Amanda almost fainted. Laibon stood back smirking, until I dipped a finger in the blood and used it to make lines across my forehead.\n\nI'd like to say I put him in the dust, but he was a bonny fighter when it came down to it, and we fought across the village square at least four more times before he made a mistake. It cost him, and I laid the flat of the Claymore against his head in an almost baseball like swing. The thunk was loud. and he fell instantly. I dropped the sword, pulled a dagger, and severed his hair at the base of the elaborate top knot he wore. It just seemed to be the thing to do at the time.\n\nI held it aloft as I walked towards Amanda. Her eyes went from amused to horror, and I knew something was wrong. Instead of swerving to the left or fight, I dropped to the ground, and Laibon tripped over me, sprawling. He started to stand, but I had my knives out by then, and with no remorse at all I put one through his right foot all the way to the hilt. Before he could scream I had him by the front of his loincloth.\n\n\"Yield, or die an eunuch!\"\n\nHe didn't understand what I said, but the meaning was clear. He dropped is sword and put his hands up in supplication. Just to make my point, I gave him a nasty gash across his groin. He wouldn't be trying to force anyone for a long while.\n\nI staggered up, and Amanda ran to me, sliding under my arm. I walked slowly up to her grandfather.\n\n\"It is over. Finished, understand? He's a good fighter but he's also a fool, and unless he gets over that the next fight might not end with him alive. And until we leave, if he so much as gives Amanda or I a dirty look, I'll finish what I started and castrate him in front of the whole village. Make sure he understands.\n\nOne of the pipers was also a field medic, and he dressed my gash, before going to check on Laibon. He was gone, carried back to the bush in shame and defeat. Amanda's father told us later he refused treatment by western medicine, depending on the witch doctor to heal him. His foot became so infected that by the time they got him real help it had to be amputated. He left the tribe shortly afterwards and no one knew where he went. And no one went looking.\n\nWe had our traditional wedding, and the celebration went on far into the night. Her father had a plane waiting, and we left the next day. Her grandfather gave me an elaborate bracelet, and Amanda said it was kind of like a medal, and I was now considered a junior elder of his tribe. He also gave me a Masai name, which loosely translated meant Red Warrior. I knew it was a big honor and thanked him profusely, before gifting him with the Claymore and the knives.\n\nWe spent two more days in Nairobi before we left, flying to Cardiff to visit her mother.\n\n.......................\n\nIt was less of a visit. more of a grand performance. She made sure everyone knew her new son-in-law was the legendary Mad Yank, pulling out old photos of me with the Queen and the Danish court. We went somewhere for a formal tea every day. Amanda was getting pissed, but I grinned.\n\n\"Let her have her day in the sun. It isn't often you have your fondest dream come true. And I have a surprise for her. Wait and watch.\n\nA car arrived that morning, a gleaming Rolls Royce, and we got in. A note was attached to the seat.\n\n\"Sorry, old boy, business and all that. Please, accept my apologies. I'll see you at the castle.\"\n\nWe took a two hour scenic drive, ending up at a castle. It was the summer home of Prince Charles and Camilla, though I didn't know it at the time.\n\nAmanda's Mum Claire did, and she nearly fainted when the Colonel strolled up, with Charles and his wife Camilla, pushing a stroller that held his youngest grandchild, a little girl. Three nannies hovered nearby. The parents were out for a day trip, and would be home before dinner.\n\nWe had an enjoyable tea, until Charles and the Colonel nearly bored us to tears talking about horse. Camilla finally had enough and spoke out.\n\n\"Enough, you two. Dear, you have your youngest granddaughter here, and you've practically ignored her all day. Mummy and Daddy will be back soon, and then she'll be gone.\"\n\nThey both immediately changed subjects, and Charles held the baby, and we got to see the next King of England, blowing and kissing on her tummy, making nonsensical noises as the baby laughed. Claire even got to hold her for a few minutes, and she made sure Amanda took plenty of pictures.\n\nIt was probably the best day of her life. Amanda said she nearly crashed her Facebook when the hits started coming. Claire got me to the side just before we left. \"I know I can be an insufferable snob, but I really only want what is best for my daughter. And know what? I believe she has it. Look for visits, especially when the babies start coming. Now, off you go. And make Amanda call me every once in a while.\"\n\nWe shook the dust of England off our heels and went home to North Carolina.\n\n.................................\n\nThe band had voted to take some time off while I was away. Tony was pretty sure he was going to get custody of his daughter when his ex remarried, and was concentrating on that, and Mike had a few projects he wanted to work on.\n\nMolly, Rob, and Amy were bored. When Robbie told them he and Molly were going to do a few shows on their own, no one got angry, knowing they were the serious musicians of the group. Amy jumped on board, to keep an eye on them, as she told Dave.\n\nThey picked up a guitarist, bassist, and a drummer, leaving Rob free to sing more. He had developed a stage presence, and they put on a good show, playing under the name Rob'N'Molly.\n\nA man in a suit came up to them after their last show, and gave Molly, Rob, and Amy cards. Seems he was an agent, and was interested. When they told him this was just a side project and not their normal band, he smiled. \"Not interested in any one else, just you three. Your vocals and stage presence is what will sell the shows, musicians are a dime a dozen. Think about it, and give me a call.\"\n\nIt was the beginning of the end of The Tub Thumpers, we just didn't know it yet.\n\n.............................\n\nFinal chapter next. Hope you've enjoyed it so far. "
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/nothing-as-sexy-as-a-man-in-a-skirt-pt-02"
}