{
    "title": "Extra Credit Club Ch. 06",
    "pages": [
        "All good things must cum in the end.\n\nErr ... wait a second. That's not right. All good things must come to an end. Yeah, that's it.\n\nHonestly, I should have seen it coming. After all, a relationship between two people is hard enough to figure out. A relationship with four people is a virtual minefield of regrets, hurt feelings, and broken hearts. Watch where you step.\n\nI think deep down I realized something was wrong earlier in the day. Not in that \"Oh my God! Something's horribly wrong!\" kind of way. More of a \"hmmm ... that just feels out of place\" itch in the back of my mind\n\nIt was the middle of a hot and sunny summer day. None of us had summer classes at the university, so Tessa suggested we all go for a dip in the university swimming pool. Quinn and Nicole immediately liked the idea and I certainly wasn't going to argue. After all, three gorgeous ladies all wet in barely-there bikinis. I mean, come on. What do you expect me to say?\n\nThe pool did a lot of business during the summer months. We got in for free with our student IDs. The general public had to pay, but that didn't deter them in the slightest. There had to close to a hundred people swimming. Now granted, it's an enormous university pool, but still, stuff a hundred people in it and it gets a little crowded. \n\nWe found an area on the edge of the kids' section and jumped in. Actually Tessa shoved me in and giggled when I glared at her, but that's beside the point. It certainly seemed like a great day in the making. A relaxing do-nothing morning. A pleasant swim in the afternoon. Add in some wild sex when we got back to Quinn's apartment and you've got one hell of a well-spent summer day.\n\nAfter doing a few laps, Nicole waded in the water next to me. She'd certainly bloomed recently. When I first met her, she'd been so shy and insecure. She was the kind of person who'd wear long sleeves and slacks in the middle of summer just because she was that bashful. \n\nBut not any more. I can't imagine the old Nicole ever owning a bikini, let alone wearing hot pink one in public. And it's a good thing too. She really had an attractive body. Maybe not quite as lean as her twin sister Tessa, but still deliciously slender and athletic. And her face was just so cute, especially when she smiled. She had this small nose with wide blue eyes.\n\nI came up behind her and placed my hands on her hips, pulling her towards me.\n\n\"Mmmm,\" Nicole murmured with a smile. \"I wonder what you're thinking about.\"\n\n\"Is it that obvious?\" I whispered in her ear. \n\n\"With that poking into me? What do you think?\"\n\nI crossed my arms and hugged under her breasts. \"Unless I missed my guess, you're thinking the same thing, right?\"\n\nShe tried to hide the guilty look on her face, but I knew her too well. She'd bloomed all right, into the most relentlessly sex-starved human being I've ever known. And next to Quinn and Tessa, that was saying a lot.\n\nShe reached back, her fingers lightly touching my thigh, dancing upwards.\n\n\"Hey, Nicole!\" Tessa shouted. \"Come over here!\"\n\nNicole rolled her eyes. \"What is it?\"\n\n\"You've got to come over here and see the baby! He's so cute!\"\n\n\"Baby? Where?\"\n\n\"Over here, silly!\"\n\nNicole tore out of my grip and started swimming towards Tessa, who stood waist-deep in the kid's section. Sure enough, next to her was an inner tube with a tiny occupant in a blue swimming cap (not sure why a baby needs a swimming cap, but it was cute), and a plump woman in her thirties. Probably the mother.\n\n\"I swear, sometimes those two act like they have one mind,\" I said. \n\n\"Well they are twins,\" Quinn said directly behind me.\n\n\"Ah!\"\n\n\"Oh, whatever is the matter, Dave?\"\n\nI turned around. \"Don't sneak up on me like that!\"\n\nQuinn half-smiled. It wasn't a friendly smile. Or a mean smile. It was one her patented smiles made of pure refined confidence and an absolute sense of superiority. \n\nAnd that was it. Conversation over. No witty comebacks. No appeal. She was right and I was wrong. She hadn't even said anything and she was right. That's Quinn for you. I've never met anyone like her, and frankly, I'm glad I haven't.\n\nWhere Tessa and Nicole were attractive in a slim way, Quinn was classically beautiful with a full voluptuous figure. She'd clasped her long red hair in a ponytail for the swim. Her green eyes watched me for a moment, almost daring me to say something, then glanced over at Tessa and Nicole.\n\nThat's when I noticed it. Normally Quinn was so completely in control it's almost shocking when she wasn't. She watched the two twins doting over someone else's baby boy and I could see the . . . not anger in her eyes. No, it wasn't anger.\n\nIt was worry.\n\nIt was gone so fast I almost thought it hadn't been there.\n\n\"You going to join them? I hear the baby's cute.\"\n\n\"No.\" \n\n\"Huh. Just no? Any reason?\"\n\n\"I'm not in the mood.\" Quinn said. She turned away, swam over to the nearest ladder, and climbed out of the pool.\n\n\"Okay! Bye! Have fun by yourself!\" I said, waving enthusiastically.\n\nShe wrapped a towel around her waist, not looking back.\n\nSo yeah, like I said. Not an \"Oh my God it's the end of the world!\" kind of a thing, but it did give me pause. I think I knew something was wrong more on a gut level than a brain one. But then, being the dumbass that I am, I dismissed it as nothing, enjoyed the rest of my swim, and did the best I could to hide my erection as I stepped out of the pool.\n\nYeah, I was definitely looking forward to some wild sex.\n\n* * *\n\nSaying the sexual tastes of these young ladies were a bit unusual would be an understatement. Saying they like sex would also, likewise, be an understatement. But really, that's all fine by me. Sometimes things got a bit weird, especially with Quinn and Tessa's tastes, but I was usually game.\n\nQuinn and Tessa. Boy is that an interesting problem/situation. I suppose I think of Tessa as the most girlfriend-esque of the three. I've called her my girlfriend and she's never objected ... but I know Tessa has very strong feelings for Quinn which may or may not be reciprocated. Where Nicole fits into that mess ... I'm not sure.\n\nBut enough of that.\n\nThe bedroom door in Quinn's apartment was closed. I pressed my ear against it.\n\nYeah, I could definitely hear something going on in there. The girls liked to tease me like this, which was fine because the door never failed to open in the end. It was an interesting, if unusual, form of foreplay I suppose.\n\nI heard footsteps and backed away. The door opened and Quinn slipped outside, a hungry grin on her face and nothing on her body. Without so much as a word, she took my head into her hands and our lips met. She pushed her tongue into my mouth and we kissed, fast and passionate.\n\nI clenched my hand over her high and heavy breast and felt her taut, excited nipple. She pulled me closer, a hand on my ass, and our stomachs pressed against my erect cock.\n\nWhen she'd had enough, she pulled away and I sucked in an eager breath.\n\n\"You ready for something wild?\" she asked.\n\n\"Is that supposed to be a serious question?\"\n\nShe smiled, opened the door, and let me in.\n\nThe twins were on the bed, one on top of the other gently sixty-nining. Both of them had their arms bound behind their backs and their eyes blindfolded. Cuffs on their ankles tied back to the bed posts via thick cords. They had some freedom of movement, but not a whole lot.\n\nMy eyes took in the array of strap-ons, vibrators, dildos, and anal beads on the bed next to them. Wild indeed.\n\nQuinn put a leg up on the bed, exposing her moist sex. \"Tessa and Nicole have been enjoying themselves. Why should we rush to pleasure them?\"\n\nI couldn't agree more.\n\nI knelt down and caressed her thigh, loving the smooth feel of her pale flesh. I breathed in the musk of her sex then kissed and licked her inner thigh, slowly making my way upwards. Quinn exhaled deeply as my lips found her clit.\n\nWhatever she'd been doing to the twins had moistened her cunt. I slipped a finger effortlessly in and stroked it slowly as I lapped my tongue over her clit.\n\n\"Yeah . . .\" she breathed contently as I worked her over.\n\nI played with her clit faster, flicking it, sucking on it, and added a second finger to her sopping cunt. She moved her hips harder into my face, urging me on without words. I felt her fingers entwine in my hair and she pulled my face into her more insistently. She started breathing heavier, and I poured all the loving attention I could into her cunt.\n\nI quickly slipped my two dripping fingers out, turned my hand, and pushed my thumb into her cunt. I felt up through her ass crack, found her anal rosebud, and insert a single finger. Her tight ass resisted for only a moment before I was in, stroking both her cunt and ass with one hand while orally pleasuring her clit.\n\nQuinn breaths came quicker now. I could feel her muscles tensing up as her pleasure built towards climax. I added a second finger to her ass and shoved my fingers in as deep and fast as they'd go. She clenched her fingers in my hair so tightly it almost hurt, and she started panting and sweating, just on the edge of climax.\n\nSo I did what any complete bastard would do. I stopped. She tried to hold me in place, but I pulled out of her grip.\n\n\"Such a tease,\" Quinn said, her face flush with excitement.\n\n\"Look who's talking,\" I said, smirking up at her.\n\nI selected a double-ended strap-on from the range of implements on the bed. It was Quinn's favorite toy, and she regularly used it on all three of us. With little effort, I pushed the thicker end into her flushed cunt and helped tighten the straps on either side.\n\n\"I suppose we've neglected these two long enough,\" Quinn said, stepping around the bed. She lightly touched the twin on top, causing her to shiver. \"I wonder which hole I should start with.\"\n\nTessa and Nicole waited in silence, bound to the bed and blindfolded. It was impossible to tell which was which by just looking.\n\nQuinn grabbed the twin on top by her blonde hair and wretched her head back sharply, eliciting a surprised gasp. Not a painful gasp. Quinn didn't do pain. It was all about power to her. The sensation of total control against helplessness.\n\n\"We'll start here,\" Quinn said. She lined her fake cock with the twin's mouth, pushed it through her lips, placed both hands at the back of her head, and drove insistently deeper. Quinn started stroking it in and out, not quickly, but deeply and completely. The twin on top had trouble taking the long strap-on all the way down her throat, and she coughed and gagged a few times, but went back at it, eager to please.\n\nSo it was Nicole's on top. Tessa could take that and more in her throat without a flinch.\n\nI stepped up to the bed opposite Quinn. From top to bottom I had Nicole's ass, her cunt, and Tessa's mouth to choose from. I wish all choices in life were this good. I urged Tessa's head down over the side of the bed, straightening her throat. She opened her mouth wide, ready for my rock-hard cock.\n\nI pressed the cockhead against her soft lips and slipped in, just as slowly as Quinn. Tessa effortlessly took every inch I fed her. I pushed in, enjoying the soft wet confines of her throat until my crotch pressed against her lips.\n\nHer nipples were taut with excitement, and I clenched her breasts as I began stroking her throat. It took a lot of effort not to fuck her mouth senseless. After all, as skilled at deep-throating as Tessa was, I doubted even she could sustain an assault like that without gagging. So instead I stroked her nice and slow, enjoying the sensations of her playful tongue and lips over my engorged member.\n\nI fucked her mouth for a few minutes while Quinn worked Nicole over from the other side. Nicole raised her hips off Tessa and wiggled her ass in my face.\n\nWell, if she wanted more I'd be happy to oblige.\n\nWith my cock still deep in Tessa's throat, I pried Nicole's ass apart with my thumbs and buried my tongue into her ass crack. She tasted fresh and clean. It'd taken me a while to get over my dislike of orally pleasuring a woman's ass. There was dirty and then there was disgusting. But Quinn made sure everyone cleaned up and cleaned out before each round of marathon sex. Excellent hygiene and wild sex make a wonderful couple.\n\nI alternated between rimming her anal rosebud and spearing into her sphincter with my tongue. Her ass was so hot and delicious. It didn't taste bad at all, and I attacked it with abandon. Her hot cunt dripped from her sister's oral attention, and I shoved two fingers into her and reamed her out as I dug at her ass with my tongue.\n\nNicole moaned loudly, her mouth stuffed with Quinn's strap-on cock. At the same time, I noticed Tessa sucking on my cock more insistently. Quinn had shoved a vibrator deep into her ass. I started fucking her throat faster and I felt my climax finally hit me.\n\nMy balls tightened and I grunted. Stars flashed in front of my eyes as cum jetted out of my cock, splattering the depths of Tessa's throat. She swallowed every drop without hesitation, and sucked on my member as if hungry for more. I paused, panting and sweating, enjoying Tessa's mouth around my slowly shrinking cock. She worked at it eagerly, and I could tell it wouldn't be long before I was ready for another round.\n\nBut in the meantime ...\n\nI grabbed a string of anal beads from the bed, balled them together and set them down in the small of Nicole's back. I then took a jar of lube, scooped a dollop out with a finger and began swirling it around Nicole's rosebud in shrinking circles before pushing in with my finger.\n\nNicole moaned as I slid a single finger in and out of her ass, occasionally adding more lube to make sure she felt as much pleasure and as little pain as possible. She wasn't as anally experienced as the rest of us, but like her deep-throat attempts with Quinn's strap-on, she hungered to experience it all.\n\nI added a second finger and drilled it deep. Nicole groaned. Her ass slowly loosened up, and I felt it was time to see how she liked anal beads. The string wasn't too long, but each bead was as thick as my cock. I pressed the first one against her ass and pushed.\n\nIt popped in, causing Nicole to gasp as Quinn continued savaging her throat. I pushed in the next bead, and the next, and the next, slowly filling her ass. I could feel her muscles tense up a little, so I started fingering her cunt with my free hand, but I didn't stop adding beads. One by one, I filled her ass up.\n\nFinally, every last bead was in. I slipped a finger through the ring at the end, and started really fragging her cunt with my fingers, pumping them in and out so fast and hard my fingers started to cramp. When I felt she was close to orgasm, I pulled the beads out in one swift motion. The sensation of thick beads popping out of her ass pushed her over the edge.\n\nNicole gasped, causing Quinn's strap-on to pop out of her mouth as her intense orgasm slammed home. Quinn quickly grabbed her hair and silenced her by forcing her strap-on back into down her throat.\n\nTessa had worked her oral magic on my cock, and I was ready for another round. I pushed Nicole's ass down so that Tessa could pleasure her sister's cunt. Nicole may have just climaxed, but that hardly meant anything with her. She could outlast all of us.\n\nTessa started lapping at Nicole's cunt as I pried her ass apart and aimed my stiff cock. I pressed in, forcing my way through her tight anal ring and into the hot, smooth depths of her ass.\n\n\"Nice and tight,\" I said.\n\nI pushed in further, filling her ass with inch after inch of my firm cock. She was incredibly tight, but my fingers and the anal beads had loosened her just enough for full penetration, allowing me to bottom out in her ass and start stroking.\n\nI grabbed her hips for better leverage and really plowed into her ass, faster and faster until I was fucking it like a cunt. Quinn had stopped fucking her mouth, and Nicole squealed loudly with each thrust. I pounded her ass remorselessly as Tessa worked her cunt over.\n\nI grabbed Nicole's bound arms and pulled her up so that her upper body arched as I fucked her.\n\n\"Aah, God!\" she exclaimed. \"Fuck!\"\n\nI ran my hands from her firm stomach to her pert breasts and squeezing. She turned her head and we kissed deeply, passionately. Saliva had dribbled down her lips from Quinn relentless fucking. That and her blindfold made her look so fucking hot. Our tongues dueled as I played with her breasts, squeezing and kneading their firm flesh and rolling her nipples.\n\nI fucked her ass even faster now. Sweat covered both our bodies, dampened our hair, and dripped from my forehead.\n\n\"I'm close,\" I whispered in her ear.\n\n\"Cum in me!\" she said. \"Cum in my ass!\"\n\nHer body tensed up and she cried out as a second orgasm slammed through her. Her ass clenched and throbbed around my cock, and I felt my seed boil up from my balls. I buried my cock deep in her bowels and shot off ropes of thick, hot cum.\n\nI let her down. She flopped limping on top of her sister, panting in post-coital joy. I wiped the sweat from my forehead and pulled out of her ass. My cock twitched as it shrank.\n\n\"Wow,\" I breathed, looking up.\n\nWhere was Quinn?\n\nI felt hands on my waist. Quinn playfully bit my ear and tugged. Her strap-on pressed against the small of my back.\n\nOh, fuck me.\n\n\"How about I repay you for earlier,\" she said, guiding me, kindly but firmly, to the side of the bed. I lay down with my stomach on the bed and her on top of me. She kissed my cheek, my shoulder, kissed and caressed my back all the way down to my ass.\n\n\"This should be enough for these two,\" Quinn said, picking up a vibrator, forcefully stuffing it into Nicole's ass, and turning it on. Now both twins had vibrators humming in their asses as they played with each other's cunts.\n\nQuinn pried my ass open and forced her tongue in. It felt great. She was so firm, so confident, and she opened me up like she had so many times before. I let out a slow, content exhale as she worked my ass with her tongue.\n\nQuinn took her time, lavishing my ass with oral attention. It didn't take long before my cock was hard once again, despite having cum twice. She grabbed my shaft with her hand and slowly stroked it as she loosened me up.\n\nThen I felt her tongue pull out and her long finger burrowing in. She stroked her greased digit in and out, prepping my ass for the pounding to come, and I lay happily motionless as she worked her magic. My ass loosened up and she added a second finger, thrusting and twisting as her other hand danced over my hard cock.\n\nQuinn took her time, setting a slow pace and sticking to it. My ass started to feel really good. Quinn knew how to work someone's ass, knew all the right places to touch, and her fingers stirred me up from the inside.\n\nShe pulled her fingers out, and I felt the head of her fake cock touch my ass. She pried me apart and pressed in. I let out a slow exhale and pushed outwards as the head penetrated my ass. It slipped in, the first inch filling me.\n\nQuinn let another inch sink into me before pulling back, stroking me a little at a time, pushing insistently deeper with each stroke. She grabbed my hips when she was halfway in and started picking up speed.\n\nI remembered the first time she'd done this to me, how nervous and freaked out by her kink I'd been. But now I could just relax and enjoy her undeniable skill. She loved the power sexual control brought her, but she shared the pleasure.\n\nFinally, her fake cock filled me all the way. Quinn started fucking me in earnest, pulling out until just the tip was left, then thrusting all the way back in. I grunted under the onslaught as she picked up speed, fucking my ass faster and faster, filling and emptying me in firm, confident strokes. Her hips slapped against my ass with each complete thrust.",
        "Quinn was relentless. Her pounding went on and on for what had to be over ten minutes. Finally, the opposite end of her strap-on did its job and Quinn cried out as she climaxed, burying her fake cock deep in my ass. My cock was rock hard from her relentless pounding and the tip dripped with precum.\n\nQuinn collapsed onto my back, her hot breath near my ear. I could feel her full breasts squished against my back, her chest heaving with each deliciously fulfilled breath.\n\nHer hand reached under me and grasped my cock.\n\n\"Your turn now,\" she whispered.\n\nShe rolled me over, removed her strap-on with a wet sigh, and tossed it to the floor. Next to us, Nicole and Tessa's cries grew louder as the twins worked each other to a frenzy. Quinn released the clasps holding their arms bound, and both twins starting fingering and groping each other.\n\nQuinn straddled me on the bed, grabbed my cock with both hands and guiding me to her dripping cunt. The sudden wet tightness of her cunt almost pushed me over the edge, and I had to focus to not cum on the spot.\n\n\"Ahh . . . yeah . . .\" she sighed, lying down on top of me. I held her close, my arms on her back, and we kissed deeply as she started a nice slow rhythm. Her nipples were hard against my chest, and her hands played with my hair and held the back of my neck.\n\nDespite this being my third time that night, it didn't take long for the anticipation of release to build in my balls. With Quinn's full, voluptuous body pressed against mine and her hot cunt hungrily devouring my cock, I didn't last long. \n\nI grunted and my cock spasmed in Quinn's cunt, shooting my load deep into her as we continued to kiss. Both of the twins cried out almost at the same moment as their own orgasms hit. Quinn climbed off of me, and we crawled over to untie them.\n\nAfter that, we cuddled up with each other, falling asleep one by one in with our lovers close by.\n\n* * *\n\nWhat a crew. That's all I've got to say about these girls. What a crew. \n\nQuinn, Tessa, and Nicole. The dom, the sub, and the incestuous nymph, though that's probably an unfair generalization. Each of these ladies is extremely complex ... and messed up in their own special ways.\n\nTo begin with, Quinn was raped by her step-brother. That episode ended if not badly then at least weirdly with her getting revenge by first drugging him, then raping and threatening to kill him. He's living somewhere in France right now, I believe. Hell, I'd be on another continent too if Quinn wanted to kill me!\n\nQuinn met Tessa three years before I came into the picture. The two went from friends to confidants to lovers, and Tessa has told me more than once that she loves Quinn.\n\nYeah ... that just makes me all warm and fuzzy on the inside.\n\nAnyway, that's where Quinn's ... unusual sexual tastes fully surfaced. I seriously doubt Tessa came into the world a sex-starved submissive. No, Quinn made her into that. Willingly? Unwillingly? That question is up for debate.\n\nHow I originally came into the picture ... I'm not sure. Thinking about it, if Tessa loved Quinn and Quinn loved Tessa ... then the need for a third person, let alone a guy, isn't there. After all, Quinn has her toys. There's really no explicit need for a real cock in this picture, though all three of the girls are definitely bisexual. Sometimes I feel like I'm just another sex toy for the girls. Other times I think they actually care about me. \n\nWhatever the truth may be, I'm Tessa's official boyfriend ... for whatever that's worth.\n\nAnd then there's Nicole. What a mess she turns all this into. Naturally, as Tessa's twin sister, we have an incest issue. I don't know if there are different degrees of incest wrongness, but at least this one can't result in kids. And honestly, two hot blonde twins going at it really works for me.\n\nI'm pretty sure Nicole doesn't feel anything for Quinn. But that doesn't help things at all because I think she has feelings for both me and her twin sister! Quinn was initially furious when she learned Nicole and Tessa were going at it, which begs the question of why I'm tolerated. The answer to that one? Don't know.\n\nSo, yeah. Like I said. What a crew.\n\nOh well. Might as well enjoy it while it lasts, right?\n\n* * *\n\nAs usual, I woke up last. The mourning's light filtered through the blinds and right into my eyes.\n\n\"Ggrr ... bleh-whaa ...\"\n\nI slung my legs off the bed, sat up, and rubbed my face. I could hear the excited bustle of girls making breakfast in the kitchen. The warm aroma of sausage and toast made my mouth water.\n\nBut first things first.\n\nI lurched over to the bathroom, evacuated, found some clothes, and headed for the kitchen.\n\n\"Good morning, Dave!\" Tessa said from the counter, waving a spatula. I could tell it was her from the black oval-rimmed glasses she favored over the Nicole's contacts.\n\n\"Glippeddy whadda-who ...\" I slurred.\n\n\"If there was a sentence hiding in that mess I missed it,\" Quinn said.\n\n\"Figgle-bottom...\"\n\n\"If you say so.\"\n\nI pulled up a stool and sat down next to Nicole. Before I knew it, Tessa set down a plate with sausages, buttered toast, scrambled eggs, and hash browns. Nicole poured me a cold glass of orange juice, and I drank the whole thing in one go. She smiled and poured me another.\n\nGod. How can these girls be so cheerful in the morning when they sleep less than me? Here I am barely awake and they're prancing around with zip to rival the Energizer Bunny. It's just not fair.\n\nQuinn turned the page of her newspaper.\n\n\"Anything good in there?\" Nicole asked.\n\n\"Good? No,\" Quinn said. \"Tuition's going up ten percent.\"\n\n\"What, again? What excuse are they giving this time?\"\n\n\"Budget deficits. Same as in December.\"\n\n\"Well that's just stupid. All they have to do is spend less money than they earn! It's not that hard! I do it every month! Don't those idiots know how to balance a budget?\"\n\n\"Apparently not.\"\n\nNicole nudged me with her elbow. \"What do you think, Dave?\"\n\n\"Blurgle ninny-hammer.\"\n\nNicole smacked me in the back of the head.\n\n\"Ouch ... what did I do?\"\n\n\"Were you even listening?\"\n\n\"Sure ... ahh, what was the question?\"\n\n\"Our tuition's going up!\"\n\n\"That's not a question.\"\n\n\"I was asking for an opinion, Dave!\"\n\n\"Umm, they're all a bunch of idiots?\"\n\n\"Thank you for the insightful fiscal commentary,\" Quinn said. \"I am sure the university executives will be forced to adjust their policies based on such breathtaking reasoning.\"\n\n\"You're making fun of me, aren't you?\"\n\nQuinn smiled and winked as she turned the page.\n\n\"Don't worry about it, sis,\" Tessa said.\n\n\"But I barely made ends meet with the last increase! What am I supposed to do? Find a second job? Take out another loan?\"\n\n\"You're forgetting something,\" Tessa said as she sat down at the counter. \"You can move out of your apartment. Right, Quinn?\"\n\nNicole's smack to my head must have helped wake me up because I noticed how very still Quinn sat before answering.\n\n\"Sure,\" Quinn said finally. \"It's not a problem.\"\n\n\"Really?\" Nicole said. \"You sure it'll be okay?\"\n\n\"Don't worry about it. It's not a problem,\" Quinn said, not looking up from her paper.\n\n\"Oh, thank you! You have no idea how big a help this is!\"\n\nThere was that feeling in the back of my skull again. The itch that told me something was wrong. But I was also hungry, so I ignored it and dug into my eggs and hash browns.\n\n\"Hey, Quinn,\" Tessa said. \"I told you about the fourth, right?\"\n\n\"Yes. Don't worry about me.\"\n\n\"The fourth?\" I asked. \"What about the fourth?\"\n\n\"Mom and Dad want us home for Independence Day,\" Nicole said. \"They're organizing a big family event and want all us kids home.\"\n\n\"Oh, they're just upset we haven't visited them once all summer,\" Tessa said. \"We just show up, say our hellos, watch some fireworks, say our goodbyes, and head back. We'll be back here before you know it.\"\n\nGreat. Me alone with Quinn. That's just fucking great.\n\nOf course come to think of it, the last time we were alone together was pretty cool. I learned I still suck at golf, she gave me a blowjob on the eighteenth hole, and the day ended with absolutely no bondage play. But still, this is Quinn we're talking about. Girls are hard enough to figure out. Quinns are ten times worse.\n\nStill ... even if she were to ...\n\n\"When do you leave?\" I asked.\n\n\"Later today,\" Tessa said. \"We'll be gone all tomorrow and be back on the fifth.\"\n\nI looked over at Quinn, not sure what to expect.\n\nShe winked at me again and went back to reading her paper. Oh for fuck sake, what did that mean? What sort of twisted kinky ideas were going through her head? I bet she wasn't even reading the paper. She was probably just dreaming up ways to out do her previous kink record.\n\nLittle did I know just how right I was ... while being totally wrong at the same time.\n\n* * *\n\n\"So,\" Quinn said, sitting on the couch next to me. \"You consider this fun.\" \n\n\"Yes, this is fun!\" I said, glaring at her 50\" LCD.\n\n\"Obviously. How could I think otherwise? Is that why you almost threw the controller at the screen?\"\n\nI gritted my teeth and tried twisting the Xbox 360 controller apart. The epilogue level for Call of Duty 4 loaded again, and I paused the game.\n\n\"I wasn't actually going to throw it, you know! I was just really really frustrated with this stup\u2014 fantastic, high-quality game!\"\n\n\"What are you trying to do, anyway?\"\n\n\"Rescue the hostage!\"\n\n\"And what happens if you rescue him?\"\n\n\"I get twenty gamer points!\" \n\nI unpaused the game. Thirty-five seconds later Quinn said, \"Wow. You just got ... what was that word? Powned?\"\n\n\"Oh, do shut up,\" I said, tossing the controller onto the coffee table.\n\n\"Seriously. You consider this fun? I can think of a dozen better ways to spend an afternoon.\"\n\n\"Yeah, and I bet they all involve tying me up.\"\n\n\"Oh, you'd be surprised.\"\n\nI snorted out a laugh.\n\nQuinn leaned over and whispered in my ear exactly what she was thinking. I looked over at her.\n\n\"You\u2014 You're serious, aren't you?\" I said.\n\n\"Am I ever not serious?\"\n\n\"And I can do anything to you? No restrictions?\"\n\n\"Only what I just said.\"\n\n\"But in order to do that ...\"\n\nShe put a finger to my lips. \"Use your imagination. Impress me.\"\n\nI swallowed, my throat suddenly dry. Holy shit. This was Quinn we're talking about. Quinn! And she'd just\u2014 She was going to\u2014 \n\nWow ... Sweet.\n\n\"Tomorrow night,\" she said, standing up.\n\n\"What, not tonight?\"\n\n\"I feel like going out to see a movie tonight.\"\n\n\"Err, okay. I could ... I could join you?\"\n\n\"It's a romantic comedy,\" she said, walking away.\n\n\"Ghn!\"\n\n\"Yeah. But look at it this way!\" she called back. \"You've got a whole day to think up something good!\"\n\nShe closed her bedroom door, leaving me alone in the great room.\n\nWell. That was unexpected. A part of me wondered what brought it on. Occasionally Quinn liked to swap dominance roles with Tessa, but not often, and certainly never with just me. This was a first.\n\nYeah, I wondered what brought it on ... for all of about five seconds. Then I got busy thinking about what I was going to do to her. Heh heh heh.\n\nTessa's bedroom opened. She stepped out, dragging two roller suitcases behind her.\n\nA thought struck me. I stood up. \"Here. He me help you with that.\"\n\n\"Don't worry,\" Tessa said. \"I've got it.\"\n\n\"Nah, it's no trouble,\" I said, taking hold of one suitcase, rolling it out the door, and holding it open for her.\n\n\"Thanks.\"\n\n\"No problem.\"\n\nWe took the elevator down to the apartment's basement garage. Nicole was already waiting in her 2000 Chevrolet Cavalier, which lacked a rear fascia. I stopped about halfway to the car.\n\n\"Hey, Tessa?\"\n\n\"Yeah?\"\n\n\"You mind if I ask you a question?\"\n\n\"Sure. What's up?\"\n\nI scratched the back of my neck. The idea seemed fine when I thought it up. After all, when in need of kinky ideas go to the expert, right? It certainly seemed simple enough. Tessa knew what she was. I knew what she was. She knew I knew what she was. However, the words caught in my throat. We just didn't discuss it. Not often, at least.\n\n\"What is it?\" she asked. \"Come on. We've got to go now or we'll be stuck in rush hour traffic.\"\n\nI took a deep breath. \"So, like, I was wondering ... what's the wildest thing you and Quinn have ever done?\"\n\nTessa blushed fiercely. She looked away, unable to meet my eyes.\n\nI was worried for a second, but then her lips curled into a sly smile. Her cheeks were red, and she still couldn't look at me, but at least she wasn't upset. \n\n\"Why? Looking for ideas?\"\n\n\"Maybe.\"\n\n\"Oh, but there are sooooo many to choose from.\"\n\n\"Just pick something that stands out.\"\n\n\"Well if you insist,\" she said. She put on a show of thinking, but I had a feeling one came to mind very quickly. \"Well, there was this one time ... before I met you. You remember the story I told you about how I lost my virginity?\"\n\nLet's see here. Quinn got you drunk, tied you up in the shower, drugged you with a medicated enema, and took your virginity without asking. Umm, yeah. That about covers it.\n\n\"Vaguely,\" I said.\n\n\"Well, there was this one time she did something almost like that. She started with enemas and kept filling me up. And then she made me hold it for what seemed like forever. She told me afterwards I had six quarts in me. I looked like I was pregnant!\" \n\n\"Ouch. Wouldn't that hurt?\"\n\n\"Not if you go slow,\" Tessa said. \"You just have to make sure your partner isn't in pain. It's really the same as ... as ... you know ...\"\n\n\"Butt sex?\"\n\n\"Yeah. Same as that. Pain is bad, but the body can get used to all sorts of stuff.\"\n\nAnd you certainly are an expert at stuffing foreign objects in strange holes, aren't you?\n\n\"And that feels good?\" I asked.\n\n\"Well, it's not the same as regular stuff. It's more a kind of foreplay. You see, Quinn started by\u2014\"\n\nTessa explain the whole encounter to me. When she was done, my jeans felt way too tight and my dick hurt. God, it was going to be tough getting through the day without jacking off.\n\n\"So, you actually like it when she gives you enemas?\" I said.\n\n\"Yeah, definitely! How about trying it yourself?\"\n\n\"What? No!\"\n\nTessa rolled her eyes. \"I mean trying it on me, silly.\"\n\n\"Oh ... uhh ... well ...\"\n\n\"Hey! What's the hold up!\" Nicole shouted from the car. \"If we don't leave now we'll spend the next two hours stuck in traffic!\"\n\n\"Looks like you two think alike,\" I said.\n\n\"Yeah,\" Tessa said. She gave me a quick peck on the cheek. \"Think about it.\"\n\nTessa grabbed both bags and hurried over to the car. Nicole said something angry as she loaded her bags. I waved as they pulled out of the garage.\n\nWell, that was certainly something to think about. Enemas, huh? I suppose I'll just add that to Tessa's extensive list of fetishes.\n\nI went back upstairs. Quinn came out of her room, all dressed up for a night on the town. I offered to join her again (not really sure why), but she told me the plot of the movie. That was enough to kill my interest. Romantic comedies. I mean really, what is the point of their continued existence?\n\nShe left for the night and I went back to sucking at Call of Duty 4. After I got tired of my own suckage, I nuked myself a dinner in the microwave and was asleep by the time she got home.\n\n* * *\n\n\"What? You don't like surprises?\" I asked as I blindfolded Quinn.\n\n\"No, I like surprises. I just don't like disappointment.\"\n\nOh ho! We'll see how smug you are when I'm done with you! I jerked the blindfold extra-tight. She just smiled in that smug way she always does. \n\nI stepped back and took a good look at her. She was already naked except for the blindfold and bondage cuffs around her wrists and ankles. Her pale skin glistened under the dim bedroom light. I stepped behind her, pulled her arms back, and clipped her wrist cuffs together. Her high and heavy breasts rose and fell with each confident breath.\n\n\"Not even a hint about what you plan to do?\" she asked, cocking her head to one side and smirking.\n\nDamn. Even tied up and blindfolded she still managed to be in charge.\n\n\"I can offer you a suggestion if you're out of ideas,\" Quinn said.\n\nI snapped my fingers. \"That's what we're missing.\"\n\n\"And what might that be?\"\n\nI opened the nightstand's bottom drawer and rummaged until I found a ball gag. It was bright fluorescent orange.\n\n\"Hey, Quinn?\n\n\"Wha\u2014 gnnnh!\"\n\n\"There! Much better.\"\n\n\"Mmmnn ...\"\n\nI pressed myself against her from behind and took her full breasts into my hands. She moaned contently as I massaged her flesh and played with her nipples. I started nice and slow, sometimes caressing her stomach or kissing her neck before coming back to her breasts. Tessa and Nicole had nice bodies, no doubt, but Quinn's was just fantastic, and it wasn't every day I got free reign over it.\n\nI still had my pants on and given the tightness in my crotch, I'd be shedding them very soon. I placed a hand on her bound arms and guided her towards the bathroom. I don't know what she thought I was going to do, but she hadn't expected this. I could sense her apprehension, however well she hid it.\n\nThe shower was a really classy one with a cylindrical, all-glass exterior and more than enough room for two people. I pulled the shower door open with my free hand and guided Quinn inside. She stumbled as she stepped down the shower's depression, but I kept hold of her.\n\n\"I asked Tessa for some advice. Can you guess what she suggested?\"\n\nI guided her to her knees, unclipped her wrists, and re-clipped them to the waist-high railing. I then spread her legs, surprised to see her tremble a little. When she was wide and exposed, I clipped her ankle cuffs to eyebolts along the base. It made me wonder just how many times Quinn had tied Tessa up here before she had fucking eyebolts installed in the base.\n\nI lifted her behind, spread her cheeks with my thumbs, and buried my face in her ass. She moaned as I pushed my tongue into her, teasing her open for the onslaught she was about to suffer. She was tight, but I got the tip of my tongue past her rosebud and drove it in deep. I pumped my tongue in and out, not quickly, but firmly and deeply each time. I then rim her a few times, then went back to probing her depths. All the while she groaned helplessly through her gag.\n\nI worked on her like for around ten minutes, really savoring the experience and drawing it out. I knew she liked it too. She squirmed a bit as I reamed her out with my tongue. Not much; this was Quinn after all. She had self-control to spare, but she was clearly relaxing and enjoying the attention lavished on her ass.\n\nI pulled back, massaged her ass cheeks, then pressed the tip of one finger into her anal rosebud. Her sphincter squeezed my digit as I pushed it halfway in.\n\nBut then I stopped and abruptly pulled my finger out. I could tell the move surprised her.\n\n\"No. Not quite yet,\" I said, standing up. \"Just wait here. I'll only be a minute.\"\n\nI could only imagine what Quinn was thinking as I stepped out of the bathroom, but I had other plans. I made my way to the girls' gear closet: their truly disturbing collection of bondage toys, outfits, and stuff I couldn't even identify. I found the (surprisingly large) box labeled \"Enemas\", tossed in a few miscellaneous sex toys for good measure, hefted the box, and took it back to the bathroom.\n\nI set the box down, making sure the contents made a nice rattle.\n\n\"Oh, let's see what we have here. Ah. This'll do.\"\n\nI selected an enema like a jumbo syringe, filled a bucket with warm water, and stepped into the shower. I sucked up a quart with the enema, knelt down behind Quinn, and pushed the tip in.\n\n\"Mn!\"\n\nI slowly emptied the enema into her ass, filling her bowels with warm water. She moaned, but didn't protest, and I took my time, watching for any signs of discomfort. She took the whole quart without a problem, so I set the enema down and removed her ball gag, letting it hang from her neck.",
        "\"There. How's that feel?\"\n\n\"Kind of ... full,\" she said.\n\n\"Here comes another one.\"\n\n\"I\u2014 ...\"\n\n\"Yes?\"\n\nShe shook her head. I refilled the enema, stuck it in her ass, and pushed another quart into her. She started breathing faster, gasping even, and I slowed down each time she looked uncomfortable. But the moment always passed and I got the whole quart in.\n\n\"Here comes another.\"\n\nQuinn bit into her arm and whimpered as I filled the enema again and pushed the load into her bowels. Her stomach bulged quite a bit now. Tessa wasn't kidding about it making her look pregnant. Quinn breathed in quick gasps as a third quart of warm water filled her colon.\n\n\"God!\" she gasped.\n\n\"Does it hurt?\" I asked.\n\n\"A ... a little ...I'm a little cramped.\"\n\nI rubbed her bloated belly, and this seemed to help. She breathed a little slower now. Sweat covered her body in a glistening sheen.\n\nI refilled the enema syringe with another quart.\n\n\"No more!\"\n\n\"Did you stop when Tessa first asked you to?\"\n\n\"I\u2014 ...\"\n\nI smiled. Quinn's confidence was melting away.\n\n\"You can take it,\" I said. \"I'll go slow.\"\n\nI stuck the fourth load into her ass and pushed. Quinn's body trembled and she let out a long groan as I filled her up. She gritted her teeth a few times, and I stopped and waited before continuing. But each time she'd relax a little, and I eventually got the whole fourth quart into her. Her belly swelled from her overfilled colon, and I massaged her stomach as she panted.\n\n\"There. It's all in.\"\n\n\"I\u2014 Gnh! I can't hold it!\"\n\n\"Come now. That's only four quarts. How long did you make Tessa hold hers?\"\n\n\"Fif\u2014fifteen min\u2014 gnn!\"\n\n\"Fifteen minutes? Can't you hold it for at least five?\"\n\n\"Please! I can't! I can't!\"\n\n\"Oh, what am I going to do with you?\" I said, standing up. I turned on the shower. Quinn gasped as cold water hit her back, and I adjusted the temperature until it was nice and warm.\n\n\"Gnn! I can't\u2014! It won't\u2014!\"\n\nI stepped out of the shower, shed my pants and underwear, and waited.\n\nQuinn barely lasted two minutes. She actually screamed in pleasure as she let the enema out, and slumped against her restraints when her colon was empty. I didn't see any mess (thank God for small favors), but that really didn't surprise me. Quinn had already had a much smaller enema to clean her bowels for anal sex. If there was any mess, the shower drained it out of sight and mind.\n\n\"Wow. You really enjoyed that.\"\n\nQuinn panted, her head down, limbs slack against her restraints.\n\nI grabbed a bottle of lubricant, knelt down behind her, lifted her ass, and pushed the tip of my cock in. With one hand, I twisted the cap off and poured some on my cock. Quinn exhaled through clenched teeth as I forced my cock into her ass.\n\n\"Still nice and tight,\" I said, setting down the bottle and grabbing her hips. Warm water washed over us as I eased my cock in, slowly opening her up.\n\nIt didn't take long before I lodged my whole cock in her ass. I pulled everything out but the tip, and Quinn gasped. I plunged it back in, and she grunted. With a grin of satisfaction, I began fucking her ass, stroke by stroke picking up speed as she loosened up.\n\nI think of all the sexual positions, this is the one I enjoy the most. There's just something special about watching my cock disappear all the way into a girl's ass over and over again as she takes it doggy style. It's impossible to tire of that sight.\n\nWith Quinn's ass loosened up, I started really drilling her, really fucking her ass as hard and deep as I could. She grunted with each complete thrust, taking everything I dished out.\n\n\"You love it up the ass, don't you?\"\n\n\"Yeah\u2014 Gnh! Hah! God!\"\n\nI reached under her, pulled her torso close to mine, and I continued slamming her ass. Her nipples were hard as rock under my palms, and I roughly groped and knead her firm globes.\n\nIt wasn't long before I felt my balls clench with anticipation. I wanted to last as long as possible, to really give it to her good, and so I tried to hold off. But the tightness and the smooth heat of her ass were too much, and I grunted, thrusting deep into her and shooting my cum into her colon.\n\nI paused there, my cock still firmly lodged in her. I kissed her neck and said, \"You haven't cum yet, have you?\"\n\n\"No ...\"\n\n\"And I'm not going to let you until you earn it,\" I said, pulling out of her ass. I stepped out of the shower and grabbed an anal toy from the box of goodies. It was one of those dildos meant for anal play. The ones that look like a bunch of plastic balls all packed together in a row. I shoved it all the way into her ass, then placed my cock against her lips.\n\nShe took my cock down her throat without a moment's hesitation, pausing with just an inch still left outside. I placed a hand on the back of her head and urged her to take it all in. God, it felt great to have her lips around the base of my cock and the tip deep in her throat. She gagged a little, and I pulled back, letting her catch her breath before sliding in again.\n\nMy cock softened from my recent climax, allowing her to take the whole thing without any problems. She wasn't as good with her mouth as Tessa, but then, I think that girl was born without a gag reflex.\n\nWith one hand, I guiding her head up and down my shaft. With the other, I slid the dildo in and out of her ass, occasionally twisting it, stirring up her insides. She loved it, moaning around my cock, speeding up whenever she really liked what I was doing to her.\n\nI ran my fingers through her damp ginger hair, pushing it out of her face as she deep-throated me. My cock started hardening once again, and Quinn began having difficulty taking all of me down her throat. But she kept at it all the same, gagging a few times, but still ending each swallow with her lips around the base of my shaft.\n\nWith one final thrust deep down her throat, I pulled out. She gasped for air, saliva dripping from her lips, but didn't complain at all. Damn did she look hot like that.\n\nI pulled the toy out of her ass and knelt down behind her, placing the tip of my cock against her well-used ass.\n\n\"Not there ...\"\n\n\"Hmm?\" I said with a delighted smile. \"What was that?\"\n\n\"Not there ... p\u2014please ...\"\n\n\"I'm sorry. You'll have to speak up. I can barely hear you.\"\n\nWith that, I shoved my cock all the way up her ass in a single stroke. She grunted as I bottomed out. Her ass had loosened up nicely by now, and I began fucking her fast and deep right from the start.\n\nWith my last climax so close, I felt more in control of my next one and made a conscious effort to hold it off. I wanted to prolong her anal foreplay for as long as possible before I finally let her off. She squirmed under me, not really resisting, but clearly wanting my cock in a different hole.\n\nI stroked her ass over and over again. If it weren't for the shower, I'd have been drenched in sweat. My muscles ached, and Quinn grunted like an animal as I plowed her ass.\n\n\"Please! Please let me get off!\" she shouted.\n\n\"Not yet,\" I said, barely a whisper next to her frantic shouting. I pulled her gag back up into her mouth and tightened it. With my cock still in her ass, I unlocked her ankle restraints and turned her over.\n\nShe grunted and squealed as I ravaged her ass. I loved the way her breasts bounced with each thrust. She planted her feet, and her hips moved with me, trying to more of me in her with each stroke, as she desperately, almost franticly, tried to get off. But whatever she did, however good it felt up her ass, it couldn't push her over the edge into orgasm, and she lingered on that edge\n\n\"Ngh! Gnh! Gnn!\"\n\n\"Just a little more.\"\n\nFinally, I couldn't take it anymore. My ball tightened, and I grunted, ejaculating deep in Quinn's bowels. She tried to get a few more strokes out of me, but I held her hips firmly still, panting over her as warm water washed over both of us.\n\n\"Mnngh ...\"\n\nI pulled out of her ass and shut the shower off. I unclipped her restraints, pulled her arms behind her back, and locked them in place. She didn't resist, just stayed motionless wherever I moved her. I couldn't help but smile. All that cold arrogance I so despised in her was gone; just her burning sexual desire remained.\n\nI grabbed a thick vibrator from the box, shoved it up her ass, and turned it on. She moaned as it stimulated her from the inside. I stepped out of the shower and grabbed a towel. She lay in the shower, motionless and silent as I dried off. When I was dry, I stepped back in and dried her off. I wanted to do her in bed. No point in making a mess, right?\n\nThere was something incredibly sexy about Quinn's body, and I'm not talking about just the naughty bits. Everything about her was so gorgeous: the narrowness of her hips, the arch of her back, the firm curves of her calves, the lush silkiness of her hair. I relished every inch of her body as I dried her off, and to my surprise, I was getting hard again.\n\nQuinn still had the vibrator humming in her ass. I set the towel aside and lifted her up, surprised by how light she was. Despite being as tall as me, she barely seemed to weigh anything, and I carried her to the bed without a problem. My rock hard cock brushed against her bare ass.\n\nI set her down on the edge and spread her legs. Finally, it was time. I guided my cock to her drenched cunt and pushed the first inch into her. She moaned softly as I eased in. I could feel the vibrator churning up her insides. It felt great against my cock, separated only by a thin membrane as I slid further into her.\n\nI took a nipple into my mouth, groped the other breast, and started fucking her tight cunt. Quinn grunted, groaned, and practically screamed as her first orgasm of the night hit like a sledgehammer. Her whole body tensed as she cried out through her gag, and I kept drilling her.\n\nShe came three more times before I finally couldn't take it any more and came again inside her. She screamed during each one, trembling immediately afterwards as she bucked against me, hungry for more. Finally, we both collapsed on the bed, me on top of her, sweating and tired and sore.\n\nI removed the vibrator and bondage cuffs, then her gag and blindfold. I couldn't help feeling a little apprehensive as I looked into her eyes. \n\nBut my concerns were unfounded. Her face looked so honest at that moment. I don't know how else to describe it. All the barriers she put up to keep people out, all her defenses were down. It was just Quinn in front of me. Not Quinn the arrogant brain, or Quinn the dominating vixen.\n\nJust Quinn. A woman and a lover.\n\n\"Did you like that?\" I asked, looking into her vivid green eyes.\n\n\"Come here,\" she whispered, pulling me close. I lay on top of her, and we kissed long and slow, gently savoring each other's mouths.\n\nWe cuddled for a while after that, then settled in for the night. Quinn put her head on my chest. After all that work, I was ready to go to sleep, so it surprised me when Quinn wasn't.\n\n\"Dave?\"\n\n\"Hmm? Yeah, what is it?\"\n\n\"Mind if I ask you something?\"\n\n\"What? Oh, sure. What do you want to talk about?\"\n\n\"Do you think ... do you think I'm a bad person?\"\n\n\"Huh? Do I think what?\"\n\nShe cuddled up against my chest a little hard. \"I'm curious. That's all. Do you think I'm a bad person?\"\n\n\"Well, no. Of course not.\" Geez. What brought this on?\n\n\"Are you sure? There's no need to hold back. I can take it.\"\n\n\"Well, geez, Quinn. Even if I thought differently, and I'm not saying I do, but even if I did, do you really expect any other answer?\"\n\n\"No, I suppose not.\"\n\nI waited for her to say something else. Quinn was acting a bit weird, and any time I'm with a girl and I don't understand what she's doing or why she's doing it, that's just a recipe for disaster. Best to let the girl say something first.\n\n\"I've done a lot of thinking recently,\" Quinn said.\n\nOh, fuck me. There's no way this is a good thing.\n\n\"What about?\" I asked.\n\n\"Life in general, I suppose. You, me. Tessa and Nicole. Where we are. Where we're going.\"\n\n\"Sounds like deep stuff.\"\n\n\"I suppose it is. Do you know what Tessa wants most in life?\"\n\n\"Something long and hard up her ass?\" I know it was a mean thing to say, but it's the first thought that came to mind.\n\nQuinn chuckled. \"No. Nothing like that. She wants children.\"\n\n\"Really?\"\n\n\"Is it that strange?\"\n\n\"Well, I thought you and she\u2014 I mean, she really digs you, right? I never got that serious a vibe off her.\"\n\n\"Not children with you. Just children in general.\"\n\n\"Oh.\"\n\n\"Now you see the problem, don't you? She loves me. We all know it. But the one thing she wants more than anything ... I can't give her.\"\n\n\"There's always adoption.\"\n\n\"It's not the same,\" Quinn said. \"There's something special about carrying a life inside you and seeing it come to fruition. It's something women naturally desire.\"\n\nI thought on this for a moment. \"Wait. You mean you\u2014 You too!\"\n\n\"Why are you so surprising?\"\n\n\"Well ...\" Holy fucking shit.\n\n\"I've done such a horrible thing to her.\"\n\n\"I think you're being a little rough on yourself,\" I said.\n\n\"Do you believe Tessa's capable of a normal relationship after what I've turned her into?\"\n\n\"Umm ... well ...\"\n\n\"No, she isn't,\" Quinn said, shaking her head against my chest. \"She was so young and na\u00efve. I took her and turned her into what she is today. I stole her virginity, abused her, made her into my own personal plaything. And in the end she loved it, loved me, and craved it all the more.\"\n\n\"You know, it takes two to tango. It's not like you kept her chained to the bed night and day. Umm, you didn't actually do that, right?\"\n\n\"Of course not. But psychological chains can be just as strong as physical ones.\"\n\n\"I guess.\"\n\n\"Do you know why I'm like this?\" Quinn asked.\n\n\"You mean why you're so into control?\" I shrugged. \"I don't know. I suppose you're like that because of what happened between you and your step-brother.\"\n\n\"That's ... almost true.\"\n\n\"What do you mean?\"\n\n\"Being raped by my step-brother and his friends over and over again was the worst experience of my life, but it's what came afterwards that truly terrified me ... I found myself ... fantasizing about being raped ... by my step-brother, by his friends, even by total strangers ... and I feared I might one day seek out those experiences again.\"\n\n\"Quinn ...\"\n\n\"That's why I did what I did to Tessa. Not because I desired control, but because I feared my own longing for the opposite. And with someone like Tessa, it's so very easy to stay in control. I'm not saying it's a good reason, but it worked well enough. Even when Tessa and I would share a man, I never left a position of power ... until you.\"\n\n\"Umm ... sorry?\"\n\n\"Don't be,\" she said. \"But ever since you came into our lives, I haven't fantasized about my step-brother raping me.\"\n\n\"Well, that's good.\"\n\n\"Not really. You see, I've fantasized about you raping me.\"\n\n\"Err ...\"\n\n\"And what does hearing that make you think of me?\"\n\n\"Umm ...\" Geez, what could one say to that? \"Well, honestly?\"\n\n\"Honestly.\"\n\n\"Quinn, I think you had a terrible youth that left a lot of invisible scars. I mean, everyone has messed up fantasizes. I'd be in jail for life if I acted out every fantasy of mine. Some of them are quite violent and involve high school classmates with their heads on pikes. So fantasies are just that: fantasies. Compared to mine, yours are tame.\"\n\nQuinn chuckled. \"That's very kind of you. And a little disturbing.\"\n\n\"Your welcome.\"\n\n\"You know, I've never told that to anyone before ... not even Tessa ...\"\n\n\"Do you feel better now?\"\n\n\"A little.\"\n\nShe cuddled up a little tighter. I could feel her chest rise and fall with each breath. And then I noticed something else.\n\n\"Quinn are ... Are you crying?\"\n\n\"Yeah ...\"\n\nQuinn let out a long sob. It wasn't a sissy girly sob. That wasn't Quinn at all. This was quieter, more honest. Her tears fell from her cheek to my chest.\n\nI ran my fingers through her hair. \"You okay?\"\n\n\"No, but it doesn't really matter.\"\n\n\"Huh?\"\n\n\"Haven't you figured it out yet?\"\n\n\"Figured what out?\"\n\n\"I'm leaving.\"\n\n\"Uhh ...\"\n\n\"I already put in the paperwork. I'm moving to a different university.\"\n\n\"You're serious, aren't you?\"\n\n\"Completely. What do you think of that?\"\n\n\"I ... I don't know. If I told you to stay would you?\"\n\n\"No.\"\n\n\"Then I guess it doesn't matter what I think.\"\n\nI sighed and thought about this while playing with her hair. She sobbed a few more times, then fell asleep. I followed her shortly.\n\n* * *\n\nThe morning came. We made love to each other, and I'm using the term very specifically. We did not have sex. We made love, and there's a world of difference between the two.\n\nI can safely say that's the first time I ever made love to someone, though I'm at a loss to describe the exact difference. It's just something you feel deep inside, you know? It's just different and you know it and feel it as an experience that's more than just physical. Afterwards I wondered if some people might go their whole lives without knowing the difference. The thought made me a little sad.\n\nIt was the first time Quinn and I were ever intimate without kink. Always before, there was something between us, be it bondage play or toys or even Tessa (in a very literal, double-stuffed sense). Not this time. This time it was just her and me and nothing else.\n\nAnd you know what? I found I really liked it.\n\nWhich made Quinn's revelation even harder to swallow. During breakfast, she made me promise not to tell Tessa. She'd do that herself when the time came. I gave my word. What else should I have done? Quinn was right. Tessa loved her, not me. This was their mess to clean up, right?\n\nRight?\n\nOh boy. What have I gotten myself into?\n\nTo be concluded ... "
    ],
    "authorname": "slowMINE",
    "tags": [
        "enema",
        "strap-on",
        "bondage",
        "bisexual",
        "fffm",
        "femdom",
        "twins",
        "three women one man",
        "blowjob",
        "rimming"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/extra-credit-club-ch-06"
}