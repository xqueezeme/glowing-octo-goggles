{
    "title": "Saturday Night School Ch. 02",
    "pages": [
        "Charlie didn't know what to expect when Monday came. He spent most of Sunday in his room, listening to music, distracted by thoughts of Michelle and the Saturday night they'd spent together. How would things be different for them at school? Would they start eating lunch together? Would she come by his locker to talk to him? Should he ask her to go somewhere after school? Or maybe wait for Friday, take her to a movie, a real date?\n\nSeveral times, he thought about calling her. But he realized he didn't have her number, and no one he could ask for it.\n\nHe didn't have a class with Michelle. He wasn't even sure of her schedule. When Monday came, he walked through the halls with his head turning constantly to the left and right, scanning each cluster of teenagers to see if Michelle was among them. Every time he saw long dark hair, his heart pounded, but each time it turned out to be someone else.\n\nIt wasn't until after third period that he saw her. She came out of a classroom with two other girls, smiling and talking with them, just as Charlie was walking by. She glanced over at Charlie. Abruptly, the smile dropped from her face, and she looked away.\n\n\"Hi, Michelle!\" he said.\n\nShe looked at him. \"Oh... hi...\" Her voice was barely audible, and she immediately looked away again. She didn't stop. She passed right by.\n\nCharlie felt so hurt and confused that he stopped in the middle of the hallway and turned to watch her walk away. What had just happened?\n\nReality, he told himself coldly. Saturday night hadn't changed anything. She was still Michelle the beautiful, he was still Charlie the loner, and they didn't really know each other. \n\nCharlie shook his head, as if he could dislodge that cruel voice. He walked to his next class, but the teacher might as well have been speaking Russian for as much as Charlie heard her. All he could think about was Michelle, and the way her smile had disappeared when she saw him. \n\nDespite that first meeting, he still dared to hope for a warmer reception the next time he walked past her, later in the day. This time she was alone, and perhaps that would be the difference. But Michelle carefully avoided looking at him as she passed, staring fixedly at the wall, and Charlie's greeting died on his lips. He felt the coldness settle into him as he swallowed the bitter truth.\n\nShe didn't care about him. Saturday night hadn't meant anything to her. The holding hands, the sex, none of it had meant a thing. She'd just been indulging a weird fetish, and he'd benefited because he'd been there. That was it.\n\nNevertheless, he continued to think about her constantly, even as he accepted walking by her in silence. Sometimes, he even imagined that her gaze followed him as he passed But he kept his head locked forward like a robot, pretending he didn't see her, didn't know her.\n\nA few days into the week, he looked across the cafeteria to where Michelle normally ate lunch, and caught her looking back at him. She looked away instantly, turning back to her circle of friends. He watched her for a minute, desperately wishing she would look his way again. Why had she been looking at him? Had she been thinking of Saturday? Or regretting it?\n\nHe was eating with sometimes-lunch-companions Andy Meadows and Greg Arden, and they were joined by Michael and Dinesh from the AV crew. Charlie struggled for a way to express his turmoil without mentioning anything specific.\n\n\"Let me ask you guys a question,\" he said. \"Imagine a Victoria's Secret model comes up to you and says she wants to have sex. But the catch is, both of you have to pretend that it never happened afterwards. What would you do?\" Even as he spoke, Charlie knew what a ridiculous question it was, and the resulting smirks from the table of boys gave him his answer before they even spoke.\n\n\"Are you serious?\" Greg replied. \"I'd say, hell yes. Who would turn down that deal?\"\n\nCharlie tried again, knowing it was useless. \"But I'm saying she would act like it never happened. She would act like she didn't even know you afterwards. And it would never happen again.\"\n\n\"I see. So you're saying you don't get to brag about it.\" Greg shrugged. \"So what? You get to have sex with a Victoria's Secret model. Who cares if anyone knows?\"\n\nThe other boys chimed in their agreement. Charlie leaned over his plate and shoved a spoonful of bland mashed potatoes into his mouth. He didn't know how to explain the mix of emotions that churned within him. In a way, what Greg said made absolute sense. Charlie had gone in that Saturday to edit a basketball video. Instead, he'd escorted a beautiful naked girl around the school, finally making love to her in the lab classroom. How could that be considered anything but a win? Didn't the experience stand on its own, regardless of how she treated him afterwards?\n\nGet over it, he told himself, and ate another bite of mashed potatoes. \n\nAnd he did get over it. Or at least he tried to. But as the weekend approached, a thought began to smolder in his mind. What would happen when Saturday came? Would Michelle come back to the school? Daryl was back, so they couldn't repeat the adventures of the previous weekend. But Michelle possessed keys to the school, and permission to be there. Maybe she would just show up, and find him in the AV room. Maybe she would keep him company while he worked.\n\nShe thinks you broke in, he reminded himself. She won't expect you to be there again, if Daryl is back. \n\nBut maybe she would come to the school anyway, for something cheerleader-related, and maybe she would see Charlie's car at the back of the building. Maybe she would pop in and visit.\n\nMaybe she would come in to explain why she wasn't talking to him.\n\nCharlie came in earlier than usual that Saturday. He told himself that he still had the basketball game to edit, since he hadn't worked on it barely at all the previous Saturday. Daryl was already there when he arrived, and Charlie barely sat down before the security guard dropped by to say hello. Charlie chatted with the guard for a while and looked at Daryl's pictures from Miami.\n\nDaryl was a tall, thin man in his mid 40s. His family had come to the United States from the Dominican Republic when Daryl was just a kid. He had worked as the security guard for the school for fifteen years, and intended to work there until he retired. \n\n\"I don't need much,\" he told Charlie once. \"All I need is a roof to sleep under and a TV to watch when I'm not working.\" Daryl was divorced, and seldom talked about his ex-wife. Charlie gathered he hadn't heard from her in years. Daryl never seemed particularly intimidating. He had a wide smile and an easy gait, as if he never needed to hurry anywhere. Pine Hills had a low crime rate, and Daryl's biggest problem most nights seemed to be boredom.\n\nDaryl chatted with Charlie for more than half an hour. They talked about Miami mostly, although Charlie itched to ask the security guard if he'd ever seen Michelle Santos around the school on the weekends. He couldn't find a way to casually slip the question in, and finally Daryl excused himself to return to his patrols.\n\nCharlie tried to return to editing the basketball game, but he was distracted by his thoughts, and before long he found himself hunting for his video from the homecoming pep rally. He imported it into a project, and watched it for a while. Head Cheerleader Vanessa Watson was the focus of the shot, but Michelle was at the edge, and Charlie watched her as she jumped up and down, waving her pompoms and smiling. \n\nBefore long, he was combing through footage from the previous season's football games, searching for shots of the cheerleaders. Every time he saw Michelle, he cut out and imported that piece of footage into the project. What was he going to do with all of it? He didn't know. But suddenly those moments where the camera panned over her seemed like secret treasures to him, and he wanted to find as many of them as he could.\n\n\"I never knew,\" he thought, as he watched a clip where for some forgotten reason he had decided to film a close-up of Michelle as she danced to a song the marching band was playing. \"I filmed her and I never even knew who she was.\"\n\nDaryl popped in every now and then, when his hourly patrols took him through that part of the building. Charlie explained that he was editing some football clips together, and Daryl didn't question it. The football team did appear in most of the clips on the screen; they just weren't the part Charlie was interested in. \n\n\"You gotta go home, Charlie,\" Daryl finally told him, as the time clicked past midnight. \"You been here all day.\" \n\nAll day, and no sign of Michelle. Charlie felt defeated as he walked out to the dark parking lot. Her words from the previous Saturday echoed in his mind. She'd told him it would never happen again, and she had meant it. \n\nAt school, Charlie continued to walk past Michelle in silence, pretending that he didn't know her secrets, pretending that he didn't know her at all. He watched her when he could, looking to see if she spent time with anyone, perhaps a boyfriend he was unaware of. Several times, he watched in jealousy, certain that a boy who was talking to her was her boyfriend. But his subtle inquiries towards her relationship status yielded no clear results. If she did have a boyfriend, it wasn't widely known among the student body.\n\nHe came to school for long hours on Saturdays, and now all his time was spent editing together footage of Michelle. He had no clear idea what he was making, and knew it served no purpose other than making himself look like an obsessed stalker of the pretty cheerleader. He told himself it would give him closure. He would put all his feelings into the video, and then save the video onto a thumb drive and throw it in a drawer. Or throw it in the trash. In that way, he would symbolically let her go, and move on. \n\nDespite the pride and energy he put into the project, Charlie didn't want Daryl to catch him working on it. It wasn't hard to hide one of the smaller cameras by the window, and rig a wireless feed of the video to appear as a small box at the corner of his screen. He could keep an eye out for motion from the camera, and this gave him a few minutes warning if Daryl approached. Long enough to minimize the project he was working on and replace it with a generic football edit.\n\n\"You spending a lot of time in front of that computer lately,\" Daryl observed. \"Don't your eyes get tired, staring at that screen?\"\n\n\"I'm putting together an editing reel,\" Charlie said. \"I want to have something good I can send to film school.\"\n\n\"Really?\" Daryl was impressed. \"Hey, let me see what you got.\"\n\n\"When it's done, okay? Some of it's still pretty choppy.\"\n\n\"Sure, sure. When it's done.\" Daryl nodded and went back to his patrol.\n\nThe project had turned into a fifteen-minute tribute to Michelle, complete with a soundtrack. Charlie had collected every bit of footage he could find showing Michelle and edited it into a visual collage of the four years Michelle had spent at Pine Hill High. At times, he imagined presenting it to her on graduation day. Just a little something I put together, he would say. A reminder of all the years you spent going to school here. \n\nAll of it, minus a particular forgotten Saturday.\n\nOther times, he would understand realistically that he could never give this project to her, or show it to anyone. All of the video of her, shot from a distant camera, edited together with love songs playing over it... it looked like the work of a stalker. No, when it was done, he would hide it away and forget about it. Or even destroy it. \n\nDaryl would sometimes stop by with two Pepsis from the vending machine. Charlie wasn't sure how, but he suspected the guard had a way to get the sodas for free. They would open the drinks and chat for as long as it took Daryl to finish his Pepsi. From the moment Charlie had mentioned film school, it became the security guard's favorite topic. \n\n\"It's a great time to be alive,\" Daryl said, leaning back in a chair. \"Used to be, you had to wait for someone to give you a chance. But nowadays, if you got talent, you can put together your own thing for cheap, put it on the internet for all to see... suddenly, bam. You're rich, famous, working with the A-list.\"\n\n\"It does happen,\" Charlie agreed. \"You get a good script, cast a few of your friends. Put something together for the film festivals.\"\n\n\"Exactly! Exactly! These days, it happens all the time! That's all you gotta do, boy. You learn what you can in film school, but never buy into their system, all right? You don't have to pay no dues. Not these days. Put your hard work into your own thing, make something special... you'll be on your way in no time.\" Daryl brought his Pepsi to his mouth only to find it empty. He tossed the bottle into the trash. \"Ah well. It's time I gotta make the rounds. See you in a few.\"\n\n\"See you.\" Charlie listened to the guard's footsteps leaving the AV room. He counted to ten then opened the window at the corner of his screen to watch Daryl head down the hallway. As soon as Daryl was out of view of the camera, Charlie opened his Michelle project.\n\nHe knew he had about forty minutes before Daryl would return to that part of the building. Forty minutes to immerse himself in editing. Charlie pulled up footage from the previous year's dance production performance. Michelle had danced in a hip-hop routine, and he had some pretty good shots of her. \n\nSuddenly, he caught movement in the corner window of the screen. He looked down, but now it just showed the empty hallway. Was Daryl returning already? Maybe the guard forgot something? Charlie quickly closed his editing window and opened the football footage. He started a clip of a touchdown play and pretended to focus on it, waiting to hear the approaching tap-tap of the guard's shoes on the linoleum. \n\n\"Charlie...\"\n\nA whisper from behind him, almost an exhale of his name. Charlie looked over his shoulder. His eyes went wide.\n\nMichelle stood five feet behind him, her hands pressed against her legs. She was completely naked.\n\nCharlie stared at her, stunned speechless. \"Michelle!\" he finally managed to say. \"Are you crazy?\"\n\n\"HI, Charlie...\" She smiled, her teeth nibbling at her bottom lip. She took a step towards him.\n\n\"Daryl's here! The security guard! He's here today!\" Charlie turned quickly and opened the window on his screen that showed the hallway. The hall was empty, thankfully. \"He was just in here! That's his Pepsi in the trash can!\"\n\n\"I know.\" Michelle stepped closer. \"I saw him walking outside. I peeked at him from around the corner. He didn't see me. He was walking towards the auditorium.\"\n\nCharlie could smell the perfume on her, that familiar perfume. She was close enough that he could reach out and touch her if he wanted. \"You were naked outside?\" His voice sounded like something was pressing against his throat.\n\nShe bobbed her head. \"Just for a little bit. You left the back window of your car open a crack. So I took off my clothes and slid them through the crack. Now they're in your backseat.\" She shrugged. \"Your car is locked. So after I did that, I was stuck naked.\" She squirmed, her hands stroking her bare legs. \n\nCharlie shook his head in amazement. Maybe she really was crazy. \"What if he saw you?\"\n\nMichelle shrugged again, smiling carelessly. \"He will. I want him to.\" She abruptly lowered herself onto Charlie's lap, draping her arm around his neck. Charlie was astonished, overwhelmed by the feel of her body pressing against him, and the scent of her. Her face leaned in close, and she had a mischievous smile. His heart pounded in his chest, anticipating a kiss, but she only swayed in his lap, as if teasing him. He quickly became erect, knowing that she must be able to feel the line of his hard penis jutting against her ass.\n\nCharlie had no idea what was going on. After three weeks of being treated like he didn't exist, suddenly Michelle was sitting naked in his lap, acting like she was his girlfriend? It made no sense. Nevertheless, he couldn't resist putting his hand on her breast and squeezing it, reveling in the softness of her and the feel of her hard nipple against his palm. She leaned against him, her head lightly bumping against his.\n\nHe looked down at her nakedness, intoxicated by the idea that her body was his to play with. She had offered no resistance when he touched her breast, and he suspected he could put his hand between her legs, slip a finger into her, and she would let him. He wanted to, wanted to badly, but he also couldn't deny the danger of the situation.\n\n\"We can't stay here,\" he told her. \"Let's go to the AV closet.\"\n\n\"We can go wherever you want.\" Her fingers tangled in his hair. \"Soon. But right now I want to stay here.\"\n\n\"We'll get caught. You'll get caught.\"\n\n\"I want to get caught.\" Her eyes danced with excitement. \"I know you lied to me. You didn't break in, before. You come here all the time, on the weekends. And I know you're friends with Daryl. Right?\"\n\n\"Yes... \"\n\n\"So if he catches you making out with your girlfriend in the empty school, he won't make a big deal of it. Maybe he won't even mention it. Maybe he'll just keep it to himself.\" She leaned forward and pressed a kiss on his lips. Her lip-gloss tasted like strawberries.\n\n\"You want Daryl to catch us?\" he whispered when she broke the kiss.\n\n\"Not exactly,\" she murmured. \"I want to sit on your lap, naked, and I want you to touch me however you like. I want to be your little stripper girl giving you a lap dance. And when Daryl comes by, I want to not care that he can see me. I don't know what he'll do, exactly, but I want to be naked for you and not care about anything else. Okay?\"\n\nCharlie's head was spinning. It wasn't fair. How could he rationally consider the consequences of what she was proposing when she kept kissing him? How could he resist her when he felt her bare body pressing against him? He glanced at the window on his screen. The hallway was still empty. \"I don't know. You really want me to...?\" He struggled to find the words.\n\n\"I don't want you to do anything but just relax...\" She kissed him again, her dark hair falling around him like a curtain. The chair creaked underneath them as she leaned into him, kissing his cheek, the line of his chin. Her breath was hot on his ear as she whispered, \"It's the not caring that turns me on. Did you know that? More than the risk of being seen. I love the not caring if I'm seen. I love the letting go.\"\n\nCharlie caught her beneath her knee, pulling her up against him. His hand slid across her smooth leg before daring to venture between her thighs. She sighed as his fingers found her wet pussy. \"I'm so hot right now...\" she breathed, before leaning in for another kiss. He could feel the hunger in her mouth as he moved a finger in and out of her. She opened her legs wider, allowing him room to explore.\n\n\"Do you know what I realized?\" she murmured. \"Since last time?\"\n\n\"What?\"\n\n\"It makes more sense to people when I'm with a guy. If I'm nude by myself, people can't understand it. Girls aren't supposed to do that. But if I'm with my boyfriend, they understand it. They still disapprove, but they understand it. They think that you want me to do it, and I'm doing it to make you happy. You know?\"\n\n\"Yeah.\" It was odd to hear himself referred to as her boyfriend after being treated like he didn't exist for the last three weeks. Charlie searched for the bitterness that had infected his thoughts of Michelle recently, but now that snarl of emotions seemed as insubstantial as a sheet of gauze. Would she treat him like he didn't exist again on Monday? Probably. But he found that while she was sitting naked in his lap, he didn't really give a damn about what would happen on Monday.\n\nThe idea of intentionally getting caught by Daryl made him a little uncomfortable. Did he really want the security guard to catch him being intimate with a naked girl? It almost seemed like being intentionally caught by his parents. ",
        "Then again, the guard was always nagging him that he should do something more with his weekend than hang out in the AV room. It would probably blow his mind to walk in and see Charlie making out with a naked Michelle Santos.\n\nWas that the only reason Michelle wanted to make out with him? In order to flash the guard and pretend it was an accident?\n\n\"Will we hear him when he walks in?\" Michelle asked anxiously. Her vagina tightened around his finger. \n\n\"If we're not distracted...\" Charlie said. \"I'll see him over there first.\" He noddeed at the monitor screen. Michelle glanced over her shoulder and her vagina abruptly clinched his finger again. \n\n\"Oh my god! Is that a camera? You have a camera on the hallway?\"\n\n\"Yeah. To give me a little warning before Daryl pops in.\"\n\n\"Is it recording?\" He could feel her body tense in agitation, and recalled she had just walked naked through that part of the hallway. For a moment, he had a wicked impulse to lie and say that it was recording, just to see how she would react.\n\n\"No, it's not,\" he told her. \"It's just a feed.\"\n\n\"Oh my god.\" She leaned against him. \"Why do you want to be warned if he's coming? Are you watching porn or something?\"\n\n\"Something like that.\" Charlie considered what he would have done with the footage if he'd really recorded her walking naked past the camera. Would he have added it into the Michelle tribute project? The grand finale of the project? Or would he have just deleted it, so it could never embarrass her?\n\nMaybe he should delete the whole Michelle tribute. Now that he had her in his arms again, what was the point of his silly video project? \n\nMichelle slid off him, only to climb back on, this time facing him and straddling him with a knee on either side. Instead of settling down onto his lap, she kept her body straight, so that her breasts were at his eye level. She leaned towards the back of the chair, her hands on either side of his head, letting her perfect breasts dangle toward his mouth. Charlie took the bait, catching one of her nipples in his mouth and sucking it into a hard point. \n\nHis fingers dug between her legs again, his middle finger sliding in to the last knuckle. She moaned, moving her hips back and forth so that she pushed against his hand. Once again, he had a wicked impulse and began to swivel his chair to the left as he rubbed his finger back and forth across her clitoris. Michelle looked nervously at the window that opened to the hallway. While Charlie had the chair angled towards the computer, Michelle was mostly hidden by the tall back of the chair. But when he swiveled the chair sideways, it put her in profile, and anyone peering in the window would not only see that she was completely naked, but would also see Charlie's hand between her legs. \n\nHe waited to see if she would protest, but she accepted the way he displayed her to the window, continuing her slow grind against his hand. He could see her eyes peeking to the side every few seconds, nervously checking to see if she had an audience. \n\nFor a moment, Charlie thought about freeing his erection from his pants and pushing her down onto it, fucking her in the chair, and the thought made his erection rage to where it felt like it was going to pop. He thought she would probably let him do it. But it was too explicit a scene. He could let Daryl catch him with Michelle on his lap, but he wasn't ready to put on a porn scene for the guard. Slowly, he continued the swivel of the chair, putting Michelle's back to the window then continuing the rotation so that finally the back of the chair hid her again. He could see the relief in her face when he stopped the turn, and it almost provoked the wicked part of him to start turning the chair again.\n\nHe brought his hand behind her head and pulled her down for a kiss. His other hand slid up her body to clutch her soft breast. She made a noise deep in her throat as he pushed his tongue into her mouth. He wanted to close his eyes, but he left his left eyelid open a crack, watching the camera feed. He saw motion, Daryl turning the corner. \n\n\"Here he comes. I just saw him.\" \n\n\"Oh my god.\" Michelle tensed immediately. Her eyes flickered around the room wildly, and Charlie knew she was looking for something with which to cover herself. But her clothes were far away in his car, put out of reach by her earlier incarnation, who must have known she'd have second thoughts when the pivotal moment came.\n\n\"This is what you wanted,\" Charlie reminded her. \"Let go... there's nothing you can do to stop this now.\" Michelle bit her lip and nodded, but he could feel her trembling.\n\nCharlie suddenly remembered to close the camera feed. He stretched out and fumbled with the mouse, minimizing the display on the screen. Michelle was putting kisses all over his face like raindrops, as if she had forgotten how to make out with him and only knew that she must kiss him. Charlie put his hands on her back, feeling her long hair as it fell between her shoulder blades, and pulled her close to keep her breasts against his chest. His heart pounded so hard that he was certain she could feel it.\n\nNow he could hear the tap of the guard's shoes in the hallway outside. He had to repeat to himself the same thing he had just told her - there was nothing they could do to stop this now. He considered the position of the chair and the position of Michelle, making a small adjustment. He hoped the guard wouldn't be able to see how completely nude she was, but on the other hand, if she was too hidden, the guard might walk all the way in before realizing what was happening.\n\nThe tapping passed outside the window without slowing. That meant Daryl hadn't bothered to peek through the glass. Instead, he was heading straight towards the door to the AV room. Charlie swiveled the chair to the left, trying to keep the back of the chair angled towards the door.\n\nClick, clack, click, clack. Surely the guard must be looking in the doorway by now? Michelle, her eyes closed, pushed her lips against his mouth, kissing him hard, although Charlie felt too tense to respond. Despite his panic, his penis was hard as a rock, and Michelle was slowly grinding her pelvis against it. Charlie let his hand fall down her back, and found himself cupping her vagina. Michelle let out a low moan, and to Charlie's ears it sounded as loud as a gunshot in the quiet room. The click of the guard's steps abruptly stopped.\n\nCharlie wished he could know what was happening behind him. What did the guard see? Was Daryl standing in the doorway? Or sneaking silently closer to get a better look? Michelle had her eyes closed, and wasn't any help. She continued to rub herself on the bulge in his jeans, moving back and forth in a slow rhythm. What if she had an orgasm while Daryl stood there? Would she try to hide it? Or would it turn her on for him to watch her naked body quivering in pleasure?\n\nHow long would they wait before they turned around to check? It seemed very important that they appear obliviously unaware of Daryl. He would have the option to pretend he hadn't seen anything, and all of them could go on pretending nothing had ever happened. Charlie thought about counting to twenty, or to fifty, or to a hundred. How long was enough?\n\nBetter just to follow Michelle's advice. Let go. Stop caring. Forget Daryl. Just worry about Michelle and let the time pass. Charlie held her tight and kissed her. She returned his kiss hungrily, and that kiss was followed by another, and another. How many kisses? Twenty, fifty, a hundred? He quickly lost count. \n\nClick. Click. Click. Now Charlie could hear the tap of Daryl's shoes again, moving slowly, stealthily. The footsteps came from the doorway, and now they grew fainter as Daryl moved out into the hallway. At a certain distance, the tapping returned to a walking rhythm, as the guard apparently decided he was too far away to be heard, and the footsteps faded away.\n\nCharlie dared to glance over his shoulder. They were alone. \"He's gone.\"\n\nMichelle stretched up and peeked over the back of the chair. \"Did he see me?\" she asked anxiously. \"How much did he see, do you think?\"\n\n\"I have no idea. I'm sure he could tell you were sitting on me and we were kissing. I don't know if he could tell you were naked. I think the chair hid you. He saw your legs, probably.\"\n\n\"Oh my god,\" she breathed. \"I can't believe we just did that. That was so risky.\"\n\n\"I can't believe it, either.\" Charlie could still feel his heart pounding. \n\n\"It's fine. We're fine. He saw us, but he decided to leave us alone. I knew he would.\" Michelle peeked at the window again. \"Where do you think he went?\"\n\n\"I have no idea. How long was he there? It seemed like he watched for a while.\"\n\n\"Oh my god. Did he?\" Michelle waved at the computer. \"Can you turn on your camera again?\"\n\nCharlie reached over and opened the window. The camera showed an empty hallway.\n\n\"I wish you had those all over,\" she said. \"We have no idea where he is.\"\n\nCharlie's phone chirped from where it sat on the desk. Michelle jumped at the sound then giggled at her reaction. She picked up the phone and glanced at the screen.\n\n\"You have a text. It's him!\" She passed the phone to Charlie. \"He's at the front T.\"\n\nCharlie read the message: \n\nNEED TO TALK. MEET ME BY THE FRONT T.\n\nHe winced. So much for the idea that Daryl would pretend he hadn't seen anything. Charlie hoped he wasn't in too much trouble. He hoped he wouldn't have to give up his key to the school.\n\n\"I'd better go,\" he told Michelle, who hadn't made any move to get off his lap even though she'd read the message.\n\n\"You're going to leave me here naked?\"\n\nHe wasn't sure if she was being serious or playful. \"I'll get your clothes. You can get dressed here while I talk to Daryl.\" He pushed her gently, and she reluctantly climbed out of his lap.\n\nCharlie stood, feeling unsteady. He gazed at Michelle, standing so close to him, and couldn't resist putting his arms around her and squeezing her. He kissed her again, letting his hands slide down her back to rest on her bare ass. His erection was crushed between their bodies, pressing against her stomach.\n\nFor a moment, he reveled in the feel and scent of her. But Daryl was waiting, so he had to release her. \"Be right back.\"\n\nHe walked quickly to his car. Just as she had said, his back window was slightly open, and her clothes were in a pile on his back seat. He unlocked the car and retrieved the garments. A shimmering blue bra with matching thong panties, a tiny black skirt, a diaphanous black blouse. She had come to the school that day in a very sexy outfit. And then she had stripped off even that, choosing instead to greet him completely naked.\n\n\"She's crazy,\" he muttered to himself. But he felt foolishly pleased that she had dressed up for him, even if he hadn't seen it.\n\nHe returned to the AV room and found Michelle sitting in the editing chair. \"Here.\" He thrust the clothes at her. \"Get dressed. I'm going to see what Daryl wants.\" He turned and walked away.\n\nAs he stepped into the hallway, he knew he was losing her again. She would be gone when he returned, and on Monday she would walk by him in the halls like she didn't know him. It almost made him turn around to get one last precious taste of her. But instead he kept walking, following the corridor, turning towards the front T.\n\nDaryl waited, slouching against the glass window of the office, facing the front doors of the school. His face was expressionless as he watched Charlie approach. Charlie's stomach clinched in dread. \n\nThen Daryl broke into an enormous smile and he held up a hand for a high five. \"God damn! My man Charlie! I just peeked in on you and I couldn't believe what I saw. You got a girl in there?\"\n\nCharlie clasped the guard's hand, still feeling awkward. \"Yeah... sorry. Um, we thought you weren't around...\"\n\nDaryl laughed. \"It's cool. You looked pretty distracted there. Since when you had a girlfriend? She go to Pine Hills?\"\n\n\"She's not really my girlfriend...\" Charlie started, and that made Daryl laugh again, even harder. \"Yeah, she goes here. She's a senior. Michelle Santos?\"\n\nDaryl pretended to stagger backwards in astonishment. \"Michelle Santos? I know the one. Damn! Cheerleader, right? She's a pretty one. I underestimated you, Charlie. You got some game!\"\n\n\"I don't know...\" Charlie looked down, trying to decide how much he could say. \"I didn't really do anything. You know that weekend you were in Miami?\"\n\n\"Yeah?\"\n\n\"I came to the school to do some editing, and she was here. She...\" Charlie hesitated. \"I mean, we kind of got to know each other. She hung out in the AV room. We walked around the school. She liked that we could be here while it was empty. She has some... crazy thoughts...I can't really figure her out, to be honest...\"\n\n\"Sure, sure.\" Daryl nodded.\n\n\"Like just now.\" The words rushed out of Charlie, and he realized how long he'd wanted someone he could talk to about Michelle. \"I told her, let's go someplace private. I told her that you were at the school, and you stopped by the AV room all the time. I said, we're going to get caught. And she didn't want to stop. She didn't seem to care...\" He hesitated. \"Like the danger of it turned her on.\" He hoped he wasn't betraying her secret.\n\n\"Aha. So she's one of those?\" Daryl grinned. \"I've dated a few. It's always the ones that seem shy, right?\"\n\n\"I don't know.\" Charlie frowned. \"But here's the other thing. I thought... after that first weekend... we'd hang out more... eat lunch together and stuff... but at school she won't even talk to me. And then she shows up here on the weekend, and she's all over me again, acting crazy again...\"\n\n\"Like multiple personalities?\"\n\n\"Yeah! Exactly. Like two completely different girls. I just don't understand her.\"\n\n\"Charlie...\" Daryl shook his head, smiling. \"You gotta be careful not to overthink it. Every girl you meet is gonna be like that. Different when she's alone with you than when she's with her friends. One day she's one way, the next day she's acting the opposite. All women are like that. You can't try to figure it out. You just gotta go with it.\"\n\n\"But at school, she doesn't even talk to me!\"\n\n\"So? Maybe you're a secret for her right now. Maybe she's not ready for everyone to know. You really worried about that? If she didn't like you, she wouldn't be here right now. Probably waiting for your dumb ass to get back to where you left her in the editing room.\"\n\nCharlie shook his head. \"I think she probably left already.\"\n\nDaryl chuckled. \"You deserve it if she did. This is your idea of a fun time for your girl? Watching you edit film at the school like you do every Saturday?\"\n\n\"I told you, she just showed up...\"\n\n\"Right, right. Michelle Santos. When I think about it, she's on the list... she got a key. She's allowed to be here.\" Daryl shrugged. \"If you two want to hang out here, spend time together, I don't got a problem with it. Both of you got keys. You just gotta give me a heads up. Introduce her to me when she comes in. I don't mind giving you two a little privacy. Just warn me where you're going to be, all right? So I know when to look the other way.\"\n\n\"Okay. Uh...thanks.\"\n\n\"Now, let me tell you what I'm gonna do right now. I'm going to take a twenty minute break or so, drink another Pepsi by the benches outside the cafeteria. Twenty minutes. You and her got that much time to get yourselves straightened. Then I'm resuming normal patrol, and you can't act surprised when I come by. Okay?\"\n\n\"Okay.\"\n\n\"Twenty minutes.\" The guard grinned. \"That should give you enough time, young folk like you. More than enough time.\" He clapped Charlie on the shoulder. \"Go on back, and if she's not there, I'll give you ten bucks.\" He laughed as he turned in the direction of the cafeteria. \n\nCharlie returned to the AV room. He could immediately see that he wouldn't be claiming any ten bucks from Daryl. The chair had its back to the door, but he could see Michelle's arms on the armrests, and the tip of her dark hair poking above the back of the chair. He came closer and abruptly stopped. Did it really surprise him that she was still naked? Her clothes, still bundled into a tiny ball of fabric, sat next to the computer.\n\n\"What did he say?\" she asked, rotating the chair to face him. He gazed at her nude body slouching in the chair and felt his erection swell.\n\nTwenty minutes. Could they have sex in twenty minutes? Of course they could. The way that he felt, he'd have trouble even lasting thirty seconds. \n\nHere? In the editing bay? In the chair?\n\nWhy not? \n\nTwenty minutes. Twenty minutes to have sex with her, get her dressed, send her out into the world. Sure, that was enough time. Plenty of time.\n\nThen, on Monday, she would be a stranger again, passing him in the hallway without a look. Maybe that was just how it went. Standing in front of her, looking down at her, it definitely seemed worth it.\n\n\"He said he saw us. He wasn't mad. We're not in trouble.\" He crouched in front of her. \n\n\"Did he know it was me?\" she asked anxiously. \"Could he tell I wasn't wearing anything?\"\n\n\"He knows its you. He said you had permission to be here, so it was okay. He was just surprised. He told me to give him some warning next time. I don't think he could tell you were naked. He didn't say anything about it.\" He glanced at her clothes. \"You didn't want to get dressed?\"\n\n\"Well...\" She smiled. \"I didn't think we were done yet.\"\n\nCharlie put his hands on her knees and leaned forward to kiss her. She met him halfway, her arms tangling around his neck. While they kissed, he slid his hands up her thighs, enjoying the smooth silkiness of her legs, until his palms rested on her hips. \n\nThey broke the kiss. \"Here?\" Michelle asked breathlessly. \"Or somewhere else? The AV closet?\" \n\nCharlie opened his mouth to answer, intending to simply say \"Here.\" But then, a thought whispered in his mind, a scandalous thought, and he couldn't speak for a moment, stunned that he could even consider what he was thinking.\n\nNo. No way. \n\nShe would hate him.\n\nOr would she?\n\nWhere was the line for her? How far was she willing to go?\n\nShe might not talk to him ever again.\n\nBut then, based on the last few weeks, she might not talk to him ever again anyway.\n\n\"I know a place,\" he told her. \"I'll show you.\"\n\n\"Where?\" \n\n\"It's near the cafeteria. By the benches.\"\n\n\"Outside?\"\n\n\"No. Inside. But we need to go outside for a minute to get there.\"\n\n\"Okay,\" she said. \"But where's Daryl now?\"\n\nCharlie looked away. \"Um... he said he was going on a break for twenty minutes.\"\n\n\"Okay. Let's hurry then.\" She stood.\n\nHe hesitated. \"Do you want to get dressed before we walk there?\" Offering her one last chance.\n\nShe smiled. \"Do you want me to get dressed?\"\n\nCharlie didn't answer. He could barely breath as he offered her his hand. She slipped her small fingers into his, and timidly followed him as he led her out into the hallway, her clothes still tangled in a ball on the editing bay desk.\n\nHe peeked at her out of the corner of his eye. Her nervousness was palpable, her eyes in constant motion, scanning for any signs of movement. Her hand was pressed against her bare leg, sliding up and down. \"I can't believe I'm doing this again...\" she whispered. He couldn't tell if she was talking to him or to herself.\n\nIt wasn't the same. Before, he'd been unsure where the limits of her fantasy lay. But this time, she'd all but acknowledged they were looking for a place to have sex. He abruptly pulled her to a stop.\n\n\"What?\" she asked uncertainly.\n\n\"I want to feel how wet you are,\" he told her, and put his hand between her legs, letting his fingers push into her slick vagina. \n\n\"Charlie!\" she gasped in surprise, but didn't stop him as he fingered her in the middle of the hallway. Her eyes darted back and forth, on constant guard for unexpected watchers. Despite her paranoia, he noticed she moved her feet further apart.",
        "He leaned forward and kissed her while he stroked her between her legs. She held onto his shoulders, wobbling against him as he pressed his thumb against her clitoris. He could scarcely believe the way she surrendered herself to his touch. Just a few days ago, she had walked by him in this same hallway, acting as if she didn't know him. Now she was naked and he was free to touch her wherever he wanted. He could put her against the wall and fuck her, and had no doubt she would let him. \n\n\"Let's go,\" he said, taking hold of her hand again. He could feel her stickiness on his fingers. They walked down the hallway, and maybe he'd reminded her she didn't need to restrain herself, because the hand that once stroked her upper thigh was between her legs. \n\nThey reached the hallway that led to the cafeteria. Charlie turned in that direction. It was a wide hallway with a bulletin board on the left, where flyers and proclamations were posted. The only doors in the hallway were on the right, just before the cafeteria, two brown doors marked with the symbols for boy and girl bathrooms. The doors that led into the cafeteria were glass, and they could see the empty tables inside. \n\n\"It might be locked,\" Michelle said, and when they tried the doors, the left one was locked. The right one opened.\n\nFor a moment, Charlie paused, holding the door. He felt like he trembled with dread, and he wanted to ask her again if she should get dressed. Maybe put an extra emphasis on it, a warning. Didn't she REALLY want to get dressed, wasn't that a REALLY good idea? Because there might be a REALLY good chance she was about to get caught? But she slid right through the open door, and now she pulled him along by the hand, into the empty cafeteria.\n\nThe food area of the cafeteria was sealed away by a lowered metal barrier, which was locked, so they only had access to the rows of empty tables. Michelle stopped and gazed at him. \"Wouldn't it be crazy to do it in the cafeteria?\" she breathed.\n\nHe wanted to. The way she looked at him made his heart race. He came close to seizing her and pushing her down onto one of the tables. But he held himself back. \"Not yet,\" he told her. \"Come outside with me first.\"\n\n\"It's still daylight...\" \n\n\"It was daylight when you dropped your clothes through my car window.\" He pulled her hand. \"Come on.\"\n\nThey walked to a silver door with the word \"EXIT\" glowing above it. Charlie pushed it open. A warm breeze entered the cafeteria. \"You have your keys, right?\" Michelle asked as she stepped out after him. \"Because if we get locked out...\"\n\nThat was as far as she got. Daryl was outside, leaning on one of the tables, a half-full Pepsi sitting next to him. He had raised his head curiously to see who was coming out, and did a visible double-take when he saw Michelle. Michelle froze in place. Her hand clutched Charlie's hand tightly, her fingernails cutting into his skin.\n\nDaryl straightened, staring at her. His eyes travelled up and down her naked body. He opened his mouth as if to speak, but couldn't seem to find his words.\n\nCharlie glanced at Michelle, seeing her as Daryl did, as if for the first time. She stood completely still, too shocked to think of even covering herself up with her hands. Her perfect body was on clear display. Her eyes were wide. She almost seemed to be holding her breath.\n\nCharlie forced a casual smile, doing his best to act as if this situation was perfectly normal. \"Hey, Daryl,\" he greeted the guard. \"You said I should introduce my girlfriend to you, right? This is Michelle. Michelle, have you met Daryl before?\"\n\n\"...no...\" Michelle's voice was barely audible.\n\n\"Michelle, this is Daryl. He's been the security guard at this school for... what? Fifteen years, right? Daryl, meet Michelle. My girlfriend. She's head of the spirit squad. Maybe you've seen her come by the school on the weekends before.\"\n\nDaryl had quickly overcome his initial shock, and now struggled not to smile. He went along with the charade that this was normal. \"Hi, Michelle. Pleased to meet you.\" He put out his hand for her to shake.\n\nMichelle automatically reached out to take his hand. Then she froze and flinched her hand back. Charlie remembered she'd been touching herself between her legs and her fingers were coated in her scent. \n\nUnable to resist, he spoke up, \"Michelle doesn't shake hands. She's a hugger.\"\n\nDaryl raised his eyebrows, and Charlie expected Michelle to glare at him, but she didn't. Instead, she took a deep breath then opened her arms. She took a step towards Daryl and wrapped her arms around him in a tight hug, pressing her body against his. Daryl looked astonished. After a moment, he returned the hug, lightly hovering his palms over her bare back like he was afraid to touch her.\n\nMichelle released the stunned security guard and stepped back to stand beside Charlie, taking his hand. \"Nice to meet you, Daryl,\" she said.\n\nDaryl shook his head incredulously and laughed. \"God damn.\" He smiled at Michelle. \"Charlie's a lucky guy. I been telling him he should go out and find himself a woman. Have to say, I didn't expect he'd find one half as lovely as you.\"\n\n\"Thank you,\" Michelle said shyly. \"I like Charlie a lot. I would do anything for him.\"\n\n\"I guess you would.\" Daryl's eyes flicked down to her body again.\n\nFeeling reckless, Charlie said, \"We're on our way to the athletic building. Are you okay with that? Michelle has a key.\" He squeezed her hand. \"I thought I'd take \n\nher there and have sex with her.\"\n\nMichelle's eyes darted in his direction, startled by his blunt words. She squirmed as Daryl shifted his gaze to her. She didn't deny or protest Charlie's statement.\n\n\"You know what...\" Daryl said slowly, \"I didn't just hear that. In fact, I didn't see you at all. I'm going to go back on patrol. I'm going to check everything real careful and slow, and the last place I'm going to check is the athletic building. All right?\" He met Charlie's eyes to convey that he was serious. \"So don't be there when I get there. All right?\"\n\n\"All right.\" Charlie prayed that he hadn't gone too far.\n\n\"Nice to meet you, Michelle,\" Daryl said.\n\nMichelle let go of Charlie's hand. \"Bye, Daryl. It was nice to meet you, too.\" She slipped in close to the guard, sliding her arms around him again in another tight hug. This time, she lifted her head and pressed a kiss on Daryl's lips as she held him. He was clearly surprised, but happily returned her kiss. His hands weren't as reluctant this time, sliding down her back and roaming over her bare ass. \n\nMichelle wriggled free of Daryl's embrace and stepped back beside Charlie, taking his hand again. She stood calmly, with her other hand tucked behind her back and her left hip jutting out. Her wide eyes blinked in deliberate nonchalance as she gazed at Daryl, as if challenging him to suggest that what she had just done was anything other than a normal goodbye.\n\nDaryl picked up his soda bottle and chugged the last few swallows. He tossed the bottle into a garbage can ten feet away. \"Break's over for me. Have a good afternoon, you two.\" He walked back to the cafeteria as if he'd already forgotten them.\n\nCharlie started walking towards the parking lot, and Michelle fell into step beside him. They stepped onto the asphalt and into the sun. It no longer seemed to distress Michelle that she was walking naked through the bright daylight. The encounter with Daryl had electrified her and she could barely hold still. \n\n\"Oh my god!\" she burst out, when she felt Daryl was sufficiently out of earshot. \"I can't believe we just did that! That was so crazy... I can't even get my thoughts straight! My heart is beating a thousand times a minute!\" She leaned towards Charlie, her head bobbing. \"I almost died when we walked out and saw him standing there. I thought we were dead. But you! Oh my god, Charlie! The way you handled it... you were so smooth! You were awesome!\" She laughed.\n\nCharlie peeked at her out of the corner of his eye. She didn't realize he had set her up. She thought it was just a chance encounter, that Daryl had unexpectedly taken his break at the same place they'd been headed to. \n\nIf that's what she thought, he wasn't about to correct her. \n\n\"Do you think he'll tell anyone?\" The words rushed out of her. \"He won't, right? I don't think he will. I don't think so. Because he let us go, and I don't think he'll want anyone to know he let us go. We should be in trouble but we aren't. My god, I'm walking across campus naked right now, and he knows it!\" \n\nShe looked over her shoulder, but Daryl had disappeared into the building. Charlie felt like the guard was still watching them, maybe peeking at them through a window. But maybe that was just paranoia. Michelle's nakedness under the blue sky made him feel like they were on display to the world.\n\nMichelle clutched Charlie's hand in both of hers, pressing it between her breasts. \"That was a fantasy of mine, you know. To have a stranger kiss me while I'm totally naked.\" She gasped, as if astonished she had revealed such a secret. \"Is that a crazy thing to get turned on by? I know it is. I know it, I know it. But I just did it. I never thought I would ever really do it but I just did.\"\n\nThey reached the glass doors of the athletic center. Michelle tugged at the door. It rattled but didn't open.\n\n\"Oops. I don't have my keys,\" she said. \n\n\"I have them.\" Charlie fished them out of his pocket.\n\n\"Oh. Thank goodness.\" She laughed. \"I mean, obviously I don't have them. I don't have anything. Here, let me do it.\" She took the keys and unlocked the door. Charlie pulled it open so she could enter.\n\n\"Where?\" she asked, standing in the doorway.\n\nCharlie considered the layout of the athletic center. Basketball court, swimming pool, locker rooms. \"Let's take a shower,\" he suggested.\n\n\"Okay! Boys or girls locker room?\"\n\n\"Girls?\"\n\nShe smiled. \"The forbidden temple? Okay. That's good, because I can go to my locker after.\"\n\nThey used Michelle's keys to access the girl's locker room. Michelle flicked on the switches, bathing the room in the bright glow of white fluorescent lighting. As soon as the door closed behind them, Charlie reached for her. He palmed her breasts, squeezing them gently, marveling at their softness. Michelle put her arms around his neck and kissed him while he continued to fondle her.\n\n\"Feel how wet I am,\" she whispered. He reached between her legs and was amazed at the dampness there. His finger pushed into her with only the slightest pressure. \"Oooh!\" she exhaled. \"Oh! I'm so hot right now.\" He kissed her hard while sliding his fingers in and out of her, feeling her body tremble.\n\n\"Let's go,\" he said, urging her towards the shower area. Michelle paused to scoop up a tall stack of clean towels from a bin. \"We need all those towels?\" he asked.\n\nShe grinned. \"I'm not lying down on the hard tile.\"\n\nThe shower area was divided into four sections, each with walls on three sides and lines of shower heads. Charlie had pictured them standing together under the hot spray of one of the shower heads. But Michelle entered one of the sections and turned on every shower, so that hot water sprayed from all three sides. Her body was already covered in a gleam of droplets when she returned for the towels. She layered three towels on top of each other in the center of the floor, a space that wasn't directly sprayed by any of the showers but caught a warm mist from all of them. \n\nShe returned to him, smiling. Drops ran down her body as she tugged at his shirt. \"You're still dressed?\" she teased. \"Hurry up!\" \n\nCharlie grinned and pulled his shirt over his head. Michelle worked on the snap of his jeans, popping it and pulling down his zipper while he flung his shirt towards a dry corner of the locker room. She reached into his pants and found his hard penis, squeezing it and pulling it free. He scrambled out of his shoes and pants while she tugged him into the shower by his erection.\n\nAs soon as Charlie stood on stack of towels, Michelle dropped to her knees. He felt her mouth on his penis, kissing his shaft as she crouched in front of him. Charlie stood with his legs slightly apart, feeling the mist from the showers bead on his body and in his hair, stimulated by the feel of Michelle's lips and tongue on his erection.\n\n\"Did you ever imagine that you would be getting a blow job in the shower of the girl's locker room?\" She peeked up at him, smiling. Before he could answer, she put the head of his penis to her lips and let it slide into her mouth, taking in as much of it as she could. She moved in a rhythm, sucking him.\n\nIt felt amazing.\n\nThe towels were quickly becoming saturated with hot water, and it felt like standing on a sponge. Charlie closed his eyes, losing himself in the sensation of Michelle's eager mouth on his throbbing penis. He let his hands rest on her wet hair, now dripping from the mist. A steamy haze drifted around them. \n\nMichelle did something with her tongue that made him inhale audibly, and his penis twitched in her mouth. She pulled off and looked up. \"You okay?\" she asked.\n\nInstead of responding, he crouched down himself and took hold of her waist. He turned her over so that she was on her hands and knees. She waited in that position while he took a moment to admire her gleaming pussy. Then he clutched her by the hips and slid into her. She felt so tight around his swollen penis, yet he quickly had his entire length inside her, with his stomach pressed against her ass.\n\nThe water drizzled around them, making their bodies slick as they moved against each other. Charlie fell into a slow rhythm, pulling out until only the head of his penis was in her then savoring the intense pleasure of plunging back into her. He knew that he had to go slow to have any chance of prolonging their sex; the pressure of climax had already begun to form in his groin, and his penis urged him to surrender to the animal side of his nature and fuck her with abandon.\n\nFinally, he had to give in, and lost himself in the quick rhythm. Michelle cried out with each deep thrust, making no effort to hold back her noise, and the cavernous room echoed her. Charlie fell onto her as he climaxed, filling her.\n\nHe waited a moment before pulling out. Silently, he stood and helped her to her feet. They walked under one of the showers and let the water spill over their heads. Charlie rinsed himself off before padding back to the bin to grab some fresh towels. \n\nMichelle was still cleaning herself off when he returned. He dried off with one towel and left the other hanging for her. He was already dressed by the time she turned off her shower, and watched her walk in a circle, turning off the other showers. \n\n\"Can you throw the wet towels in the hamper near the door?\" she asked. Charlie peeled the towels from the shower floor and carried them to the dirty towel hamper. After he dropped them in, he looked for Michelle, and found her at her locker, pulling out her cheerleader uniform.\n\n\"This time you're going to walk out dressed?\"\n\nShe laughed. \"Yup. I've had enough excitement for the day.\" \n\n\"What now, then? Back to the AV room?\"\n\n\"Can you give me a ride? I parked my car not too far away.\"\n\n\"Sure. But what about your clothes? They're in the AV room.\"\n\n\"Maybe you can get them for me?\"\n\n\"Sure.\"\n\nShe dressed quickly. Charlie watched her, remember the cheerleading footage he'd edited into his tribute video. What would next Saturday bring? Back to the video? Would he be able to stand sitting alone in that chair in that room, knowing that she could show up at any time, knowing also that she might never show up again?\n\nHe opened his mouth to ask her about it. Twice now he'd had sex with her. Did it mean anything yet? What was going to happen Monday? Would they ever hook up again?\n\n\"Okay,\" she said, closing her locker. \"I'm ready.\"\n\n\"Okay.\" He hesitated then turned away. The questions could wait. \n\nThey checked the locker room one last time, making sure they hadn't left any evidence. Charlie clicked off the lights just before they stepped out. Michelle locked the door behind them.\n\nOutside, it was still bright, although the sun had started its descent towards the horizon and the shadows were stretching. They surveyed the parking lot, but Daryl was nowhere to be seen, and the only visible car was Charlie's. They started walking toward his car.\n\nCharlie peeked at Michelle out of the corner of his eye. Her previous chatty exuberance was gone and now she walked in silence. She seemed pensive. It was as if by putting on her clothes, she had become that other girl, the other side of her split personality, the one he didn't know. \n\nSo strange that he'd spent so little time with her while she was dressed. She'd been naked almost the entire evening when they'd hooked up the first time. Only at the end of the night had she put her clothes back on. This time, it was the same. She'd been naked up to the point she put on that uniform. What would the guys think, if he tried to explain that to them?\n\nOh, Michelle Santos? Yeah, I know her, I'm just not used to her wearing clothes.\n\nLess than an hour ago, he'd been walking with her in the hall, stopping her on a whim so he could put his hands between her legs. Could that have really happened? It was unbelievable! How could he not be her boyfriend, when she granted him that power?\n\nHe peeked at her again. To his surprise, he felt his penis swelling, pressing against the front of his jeans. He suddenly wished they had stayed in the locker room a while longer. They could have taken their time in the shower, spent more time holding each other. He could have spent more time putting his hands on her body.\n\nThey stood next to his car. \"Can you get my clothes for me?\" Michelle asked. \"Can I wait in your car?\"\n\n\"Sure,\" Charlie said. He gazed at her, in her tight uniform. Her wet hair was combed back, straighter than usual. He saw a drip of water trickle from just behind her ear and slide slowly down her neck.\n\n\"Charlie?\" she asked hesitantly.\n\nCharlie stepped towards her. He put his hands on her waist, catching the bottom of her shell top in his fingers. He peeled the top up her body and over her head. He yanked the garment off her arms and tossed it on the hood of his car.\n\n\"Charlie!\" She had distress in her voice, but she didn't stop him as he crouched in front of her and pushed her skirt and dancer shorts down her smooth legs. He let them fall to her ankles. She was naked, and her perfectly groomed strip of pubic hair swayed directly in front of his eyes. Of course it was perfectly groomed. She had left the house intending to be seen naked, after all.\n\nCharlie got to his feet and reached for his zipper. Michelle's eyes were wide as she realized what he intended to do. She looked around the parking lot nervously as he pulled his hard penis free. He leaned forward, letting his penis press against her stomach. He kissed her. \n\nShe leaned backwards against his car. Her mouth opened and he felt her tongue tangle with his. She had her palms pressed against his chest, as if she intended to push him away, but her arms didn't exert any force against him.\n\nCharlie reached down and caught her legs. Pressing her against the back seat window, he lifted her legs up, sliding her up the side of his car and then letting her drop onto his waiting erection. She gasped and her legs wrapped around him. Her eyes closed and she seemed to forget that they were outside in the daylight as he had sex with her against the side of his car.\n\nBecause her eyes were closed, Charlie gazed at her openly, tracing her perfect features with his eyes. Her long black hair, glimmering in the sunlight; her deep dark eyes; her perfect skin. He studied her lips, the way her mouth hung slightly opened as she took in sharp breaths. If only his eyes could capture this moment, save it forever. Where would he put it in his video? This was Michelle having sex. This was Michelle when he was deep inside her. This was Michelle as she longed to be, naked outside, letting go. ",
        "He sighed as he came inside her. She wrapped her arms and legs around him, clutching him tightly as his penis spasmed within her.\n\nUnsteadily, he lowered her legs, letting her feet touch the ground. He took a step away from her, fumbling his still erect penis back into his jeans. She remained leaning against the car, catching her breath. Her eyes were barely open, watching him through slivers. \n\nCharlie hadn't noticed the strain of holding her while they were having sex, but now that he had released her, his arms felt weak and slow to respond. He fumbled with his keys, finally managing to press the button to unlock the car. He pulled the driver's side door open. Michelle lowered herself into the car, perching sideways on the edge of the seat. \n\nCharlie retrieved the pieces of her uniform and Michelle silently accepted them, bunching the garments in her lap and making no move to put them on. \"I'll be right back,\" he told her. \"I'll just go grab the rest of your clothes.\" He waited a moment for her to answer, but she just nodded.\n\nCharlie unlocked the green door and entered the school. He rushed through the hall to the AV room, praying that he wouldn't run into Daryl. The room was empty. He grabbed the bundled ball of her clothes, still sitting where she had left it. The computer was still on, and Charlie hesitated a moment before turning it off. He told himself he could always return and clean up after he dropped Michelle off. But maybe he wouldn't just drop her off. Maybe they would spend some more time together. \n\nHe started out the door before remembering the camera he'd hidden by the window. He retrieved the camera and shoved it in a drawer, telling himself he would sign it back in later. He didn't want to leave Michelle by herself for too long, especially since he suspected she would still be naked when he returned.\n\nHe turned off the lights and jogged back to the green door, Michelle's clothes tucked under his arm. He pushed open the door and blinked at the car.\n\nMichelle was gone. Charlie peered through the front window, but she wasn't in the front seat or the back seat, and all the doors were shut. Charlie opened the driver's side door. He noticed a white paper on the seat and picked it up. No writing. Only a large heart drawn in the middle of the paper.\n\nCharlie looked around, but didn't see her anywhere. He got into his car and started it up. Driving slowly around the end of the parking lot, his eyes scanned back and forth, looking for a dark-haired girl in a cheerleading uniform. But he didn't see her.  \n\nWhen he reached the end of the school's driveway, he paused at the stoplight, waiting even as the light turned green. Where was he going? Where had she parked? If he drove up and down the streets, he might find her getting into her car...\n\nHe shook his head. The light was green. He put the car in motion, turning right. Driving home. When he reached the next stoplight, he glanced over his shoulder and noticed a smudge on his back door window. The imprint of Michelle's naked back, pressed against the glass. \n\nCharlie looked down next to him, where Michelle's heart picture rested on the seat. After a moment, he picked up his phone and pointed it at the paper. He turned on the video and focused on the heart.\n\n\"Same to you, Michelle,\" he said. \"Same to you.\"\n\nThe stoplight turned green. Charlie set his phone down and drove off."
    ],
    "authorname": "jessica_tang_vonharper",
    "tags": [
        "submission",
        "public nudity",
        "public sex",
        "exhibitionism",
        "voyeurism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/saturday-night-school-ch-02"
}