{
    "title": "The Twelve Zenati Pt. 36",
    "pages": [
        "Authors note: Hello everyone. I am told that I worry too much when I write these days, but I should recognise the traditional owners of the Kriol lands and people. I am no expert and mean no disrespect with my work of fiction.\n\nAgain, I am grateful to MsSensualiT for her continued help to be my second set of eyes. I hope those of you who enjoy this series continue to do so.\n\n~ellie. \n\nChapter 36\n\nMarcella struggled into a pair of soft boxer shorts and a tank top, ignoring how the fabric teased her skin with gentle caresses as the plastic still wrapped around her lower leg crinkled out its discomfort. Since being taken to the clinic, all she had done was shower and gather more red dust and dirt from the interminable desert that was part of life in the Northern Territory. The fact that Noah was not yet back offering to help her with her shower made her grumpier than her injury's awkwardness.\n\nIf she was honest with herself, she knew she was grumpy because she was frustrated and horny. Bloody Noah had gotten her so worked up so many times, and they had been interrupted each time. Now, it seemed he didn't even have time for the foreplay. So, she used her crutches to make her way to the kitchen in search of scissors to release her leg from the plastic surrounding it. Now that the shock of the crocodile attack had worn off, she had expected to feel the pain more acutely, but it was nothing more than a dull throb beneath the bandages, which was manageable with the pain relief she had been given.\n\nDeciding she would be fine; she went in search of food. It was dark outside now, and after an adventurous morning, she had been poked, prodded, stitched, wrapped and thrown in the car for the longest drive of her life to yet another foreign land or place or whatever this was. Not once had she thought about food until now, and now, she was starving! The kitchen was surprisingly well-stocked with items meant to last. She pulled two frozen pizzas from the freezer and an extra salami from the refrigerator. Tomato and cheese were not options, but she guessed dairy wouldn't keep long in the heat of this place. There was powdered milk in the cupboard, which she thought would work for coffee if she needed it in the morning.\n\nWhen the pizzas were nearly done, she felt large hands cup her hips and pull her back against a hard-muscled body. She relaxed into Noah's scent, a little wild and dusty, but still his. She turned in his arms, peering up at his handsome face. Her fingers twined into the hair hanging at his nape, not for the first time, and she wondered if it was getting long enough to pull back into a messy ponytail? Not a man bun, but a messy ponytail could be a look that would suit his tanned skin, marked by a few scars here and there, making him look more rugged than pretty with his beautiful dark brown eyes. He leaned down, smiling as he pressed his mouth to hers gently and then straightened, sniffing the air.\n\n\"Smells amazing, Marcie. I'm starving,\" he murmured low in her ear, letting her know the food wasn't the only thing he was craving. She smiled, turning back to the bench where she had been setting out plates with his hands touching at her back, her shoulders, her hips. She laughed lightly, smacking his hands away, \"How about you do something useful like getting the pizza out of the oven for me.\"\n\nHe grumbled plaintively and pulled her back against him, showing that pizza was not what he wanted just then. She scowled slightly when he turned the oven off but didn't take the pizza out after opening the door just a sliver. He didn't seem to notice her scowl; however, as he lifted her onto the bench, she was pushing the plates out of the way.\n\n\"I thought you were starving?\" She whispered against his chest as he started to pull up her tank top. Of course, she was horny too, so what the hell, but it still irritated her that he felt he could take advantage of her agreement to stay with him away from Konrad's machinations. He would learn eventually that she would and could never be a good submissive wife for him. He'd change his mind, and this honeymoon fuckfest would be over, so she might as well enjoy it while she could.\n\n\"I am, and I've been waiting all day for this. All fucking day,\" he groaned, pulling her top from her freeing her unfettered breasts. He leaned her back so that her head hung off the other side of the island bench, upside down. It sent a pulse of arousal through her, unable to see what he was doing, and he gently led her hands up so they too hung. He rumbled deep in his chest, his hands gliding up her stomach to the fleshy orbs of her breasts, cupping and massaging them. He felt her shudder under him, her chest rising and falling a little quicker as she mewled for him. He pinched her nipples lightly and rolled them between his fingers, plucking at the pink tips. His mouth brushed over her ribs, tongue flicking out over the skin. Her thighs trembled, and she made to move, but he set a hand on her ribs, just under her arm, \"Stay.\"\n\nIt was a quiet command, powerful in its intensity, and she found herself battling her inner need to rebel against any demand and obey him. Hung out like this, she could feel her pulse pumping and racing all through her body, sending tingles of electricity from wherever he touched. His fingertips slid down the line of her stomach before sliding back up her side to her breast. He pinched her nipple again, pulling on it until he heard her breath hitch, and she wriggled slightly. He rumbled deeply and leaned over her, his jean-clad hips forcing their way between her thighs, pressing tightly against her core as he lapped up her ribs. Her injured leg hanging safely to the side of his out of harm's way.\n\nHe caught her nipple between his lips, tugging slightly as he held her hips tightly so she couldn't escape. She mewled softly and panted, remaining still under his attentions as he suckled at one nipple and rolled and pinched the other one.\n\n\"Noah, I need more. I can't take any more teasing!\" Her thighs twitched around him, and she gave a soft sound underneath him as she pushed back, finally sitting up.\n\n\"You're leg he said gruffly,\" as he caught her around the waist, pulling her up tighter against his body as he panted softly. He had to lean down to press a kiss on her again, hard enough that their teeth met, and he grunted, pushing his tongue into her mouth. She whimpered; and her arms wrapped around him as she tried to push back against him again so she could answer his concerns, but instead responded with her heated response to his kiss.\n\nHis hand slid up her back tangling in the hair at the nape of her head, pulling and tugging her head back. He attacked her throat with his tongue and teeth, groaning at the taste and feel of her soft skin. She let out a soft heated breath. Her fingers worked through his hair as he worshipped her. He stood back up, pulling her against him again with a firm grip around her waist. He started to shove her boxer shorts down her hips, pulling her panties with them. Her eyes went wide as he pushed her thighs apart. He was having trouble being gentle with her, possibly because of all their interrupted moments earlier in the day.\n\nNoah's hands worked furiously at his belt, trying to get it open, and he cursed softly under his breath, finally getting it undone and was unbuttoning his pants when his name rang out. He went utterly still, and Marcella saw a dark shadow cross his face as he bared his teeth and growled. They remained silent for several long moments, and there it was again.\n\n\"Noah! Marcella! I'm coming into the room in ten, nine, eight,\" Hector continued to count.\n\nNoah let out a roar that made Marcella jump, his hands coming to rest on the edge of the bench, gripping the edge so hard his knuckles were white. She could see he was hard as she leaned up, looking around for her discarded tank top with a smile. He growled and then turned a mournful expression towards her as he passed her the top. He wrestled his jeans back in place, pulling the belt closed as he sighed longingly. There was a hard knock at the door, and Hector walked in as Noah watched Marcella pull on her top and slip off the counter to gather another plate for the pizza.\n\nHector, Noah, and Marcella spoke about their plans while eating pizza and ice cream for almost two hours. The frozen pizza had never been a favourite thing to eat, but it was okay for filling the hole in her belly that seemed to be massive by the time she got around to eating.\n\n\"So, you think he had a mole inside your family property?\" she asked as she took a spot on the couch so Hector could remove the bandages and examine her leg. \"One of the watchers?\"\n\n\"We don't know for sure, but if he has contacts in the Battaglia, we think he has people everywhere he can get them except perhaps the Papillo who take their isolation to extreme levels. The guys who were with you this morning and got you to the clinic so fast will go through a secondary vetting process before becoming your personal security. Until then, we are with the only people I trust to watch our backs aside of my family,\" Noah explained.\n\n\"Whipper and Kylie might as well be family,\" Hector agreed. \"Now about this leg, I tease Helena, but she was right to be worried about infection. I'm starting you on a dose of oral antibiotics tonight, and you must keep it covered for at least a week while we are on the muster. I'll spray on some second skin which will help as you go in-country. How's the pain?\"\n\n\"It's just a dull ache, really unless one of the stitches twinges,\" she admitted.\n\n\"Okay, I'll be close by if you need me, but I think Noah can handle the bathing and changing of bandages for you,\" Hector said. \"Don't put any extra strain on your leg during the muster. Stick to four wheels or the birds, okay?\"\n\n\"A muster?\" she looked up at Noah, alarmed. Then took the tablets Hector pressed into her hand and the glass of water from the table in front of them.\n\n\"We'll be on the move for a few days. It will be harder for Konrad to locate a moving target, and I will keep you safe, I promise. We're taking a few quads and two small helicopters known as birds. It will be a challenge, but you thrive on challenges. I've seen you do it,\" he said with a slight grin.\n\n\"I'll leave you two to discuss this further. Let Marcie get a decent night's sleep,\" he waggled a finger at his cousin with a smirk. \"I'll check in with you before you leave in the morning.\"\n\n\"Thanks, Hector, this can't be your idea of fun either,\" she pulled a face. \"I appreciate everything you and Helena have done for me.\"\n\n\"Thanks, Hector,\" Noah said, walking with him to the door. \"She will get some sleep. You have my word.\"\n\n\"How much sleep is the question,\" Hector chuckled and walked down to the Doctors residence at the end of the wing.\n\nNoah picked Marcella up in his arms, cradling her and burying his face in her hair. He held her tightly, turning his face to kiss her. He smelled like sweat and the red dust that permeated everything out here. She didn't seem to care as she kissed him back and winding her fingers into his hair again. He sighed against her skin and then shifted her tighter up against himself.\n\nHe pressed his mouth to hers, his tongue flicking out across her lips, tasting her as she tasted him. She pulled him closer, her legs gripping his sides tightly. He was trying to say something against her mouth, and she pulled back to hear him murmuring, \"I love you\" against her mouth, her cheek, her neck. Her first instinct was to react and pull away, but this wasn't a new thing. He had been claiming to love her for weeks, if not months. The buzz of his lips murmuring the declaration of love ran through her, and honestly, she was tired of being alone, just like Chella said. She may not be ready to accept the words as gospel, but she wouldn't push them away right now either. She arched to his touch and then pulled her shirt off. She needed this fuck just as much as he did.\n\nNoah marvelled at her for a moment before his gaze turned hungry, and he kneaded her ass. She wriggled up against him, unbuttoning his shirt and pulling it open, her tongue swiping across his collar bone before he groaned, setting her on the dining room table, seemingly unable to continue through to the bedroom.\n\nHe pulled at her boxers. Hesitation over her injury dropped from his movements in his desperation. She worked at his belt buckle, in turn, pulling it free and then pulling his jeans open. He grabbed her hips tightly, pulling her towards himself. She let out a loud whimper of need, staring down her body at his cock, straining towards her. It hadn't been easy between them the first few times they'd had sex. But in the last few days, she couldn't imagine anyone but him touching her, tasting her, making her moan in ecstasy. She would never be an easy woman for him to handle, but something had definitely shifted in their dynamic over the weeks and even months since he forced his way into her life.\n\nShe guided him against herself, feeling the thick mushroom head slide against her folds, ready to take him inside without further foreplay. Instead, his hand slid over hers, holding it in place as he thrust against her, groaning at how hot she felt. His head slid over her clit, rubbing and grinding against it, driving her insane. She wriggled and whimpered, rocking her hips to show her need for him to stop teasing her and just fuck her already!\n\nNoah groaned loudly, the vibration rolling through his chest as he found her entrance and pushed into her. She let out a sharp cry, her back arching as her lashes fluttered closed.\n\n\"Fuck, I'm sorry,\" he moved to check that her leg wasn't bumping against the table or him. \"Tell me, what hurts, kitten,\" He went still, and she shook her head, her brow creased, and she rocked against him as if not understanding why he stopped.\n\n\"Noah, if you value your balls, you will stop being a dick and fuck me now!\" she demanded. Her nails dug into him as she tried to push herself on him as he gaped at her. \"Any other time, you'd be begging for me to scream for you and tell you how big your cock is!\" she accused angrily. Noah slammed forward, making her take all of him without preamble. He was so incredibly hard! Her head rocked back against the table as he grabbed her hips, pulling back before slamming back into her again.\n\n\"Fuck! Kitten! So hot!\" His pace was fast and hard, slamming into her while ensuring her leg was stable against his own as he moaned louder. Her breasts were bouncing as she held onto the edge of the table, aware it was creaking in protest. He knew this time that her cries and screams were all for him as her body rocked against his. He loved it more than he thought possible that she wanted him as badly as he wanted her, even if she couldn't admit it to him beyond sex yet. Her voice rang beautifully with each thrust and filled his ears with her individual melody. Something he would never tire of hearing. He pumped into her petite body harshly, holding her in place as his hips met her thighs, the sharp slap of skin-on-skin ringing through the room. He ended up having to hold onto the edges of the table to keep it from sliding away as he snarled in need and effort, leaning over her.\n\n\"Say, you want it, Kitten! Tell me you want me just as much as I want you!\" he growled against her. He knew to ask her for a declaration of love would be too much, but it was not out of the realm of possibility for her to admit she enjoyed fucking him.\n\n\"Oh fuck, yes! Give it to me,\" she shouted as she looked down her body from between her bouncing breasts. He grunted and groaned, snapping his teeth as he shoved into her arching his back with the effort, reaching down her body to swirl a thumb around her clit. Her eyes snapped wide open as she threw her head back with a squeal. She bucked wildly underneath him, and he had to grab her hips again to keep her from pulling away from him. Her body tensed as ripples of pure please began to circulate through her. She whimpered and mewled, feeling her climax build as she shook her head, panting harshly.\n\nGritting his teeth, Noah grasped one of her bouncing breasts, squeezing harshly as he pounded into her. She was too tight, too hot, just too much! He gripped her ass, lifting her off the table and holding her at the perfect angle to titillate them both. She suddenly arched her head, banging it softly on the table as she screamed wordlessly, her nails digging into his arms, the only part of his body she could reach in that position. He nearly dropped her as she shook, but he grasped her tighter against himself, slamming home in an awkward rhythm as he fought off his own orgasm.\n\nMarcella's pussy pulsed tightly on his shaft, squeezing and massaging him, trying to draw him deeper as she squealed and screamed. He continued to pound through her orgasm, forcing his rock-hard cock in and out of her pulsing pussy, his teeth clenched tightly with control. When her orgasm slowed, she was left shaking and gasping for breath. Finally, he groaned loudly and pulled out of her, and carried her to the bedroom. He sat her on the edge of the bed while he pushed his boots and jeans off of his long, muscular legs before climbing onto the bed with her. He flicked his tongue off of her nipple, drawing it into his mouth, his possessive gaze taking in all of her. He groaned softly, dipping his fingers into her hot wet pussy.\n\nMarcella shuddered as he swirled his fingertips around her clit, her bottom lip trembling with anticipation. He shifted back slightly, showing off his large cock shining from the wetness of her, and she looked up at him with wide eyes before she laid herself over his thigh. She stroked his cock before leaning up to lap at the head of his cock eagerly. She mewled softly, her tongue working a pattern over his stiff arousal. Finally, she wrapped her lips around his head and suckled at him, drawing a deep groan from his chest. He stroked her hair, panting and then raised his hips towards her, needing to feel more of her wet warm mouth.\n\nShe took his hint, lapping up and down his cock, sucking here and there before wrapping her mouth back around him to bob her head and take as much of him as she could. It was uncomfortable for her while her leg was bandaged and aching, so she leaned back, looking up at him in apology. She allowed him to pull her into his lap, setting her hands against his chest for support as he guided himself against her, pushing slowly into her again. His hands smoothed her legs out alongside his hips and behind him. He groaned as he leaned back, his hands coming to rest on her waist to help her as she leaned forward, riding him in slow torturous drags. Groaning louder, he panted hard and tried to push up against her harder, his heels digging into the bed as she leaned back against his thighs.\n\nShe leaned back, changing the angle again and threw her head back, sending her hair flying and bouncing as Noah fucked her and her leg angled awkwardly. His legs kicked slightly as he tried to hold on to her, gripping her hips with large hands as he tried to pump into her before rolling them over. She screamed, and her hips pushed up against him as her nails dug into his chest. He slammed into her harder, his brows knit as he bared his teeth, and she cried out for him.\n\nNoah was in heaven. Marcella felt slick and tight and amazing. He was so close! He looked her over, the half-pained, half-lust-filled look on her face, her breasts dancing as he slammed into her, the roll of her belly and hips with each of his thrusts, her welcoming body, her pussy lips puffy and pink, wrapped tight around his thick shaft. Her wetness encased him in slick pleasure, and he moaned louder.\n\n\"Fuck, Kitten!\" He tried to pull away from her, but she moved with him.\n\nHer head was thrown back, refusing to let him go as he pumped into her just as hard. She came again for him, squeezing him tightly as she rocked forward, her entire body consumed with the need to have him lose himself inside her. His cock pulsed and twitched inside of her as he bucked, gripping her tightly while he slammed into her one last time before going still within her. It felt like the pressure was going to make her fly apart, and she squeezed and spasmed around him, giving a deep mewling cry, panting hard, her breasts heaving with the effort. He leaned against her, remaining inside her for several long moments. Finally, he let out a soft groan, leaning down to press a kiss to the top of her head.",
        "Untangling their bodies, Noah lay on his back and pulled her against him ensuring her leg was still cradled against one of his. She shuddered and mewled, and he sighed against her hair, rolling to the side slightly but bringing her with him so she was lying across his stomach this time.\n\n\"You're perfect, Kitten,\" Noah stroked up and down her back, giving another soft groan. She was purring softly against his chest as her hand played over the hair that sprinkled over his pecs. She smiled softly against his skin, turning to brush her lips over the spot between his pecs. He smiled lightly, stroking her hair out of her face, \"I adore you, Marcella. Never doubt that.\" He didn't want to move to clean them up. He wanted only to stay like this for a week. Calm and sated. No stalkers, homicidal maniacs and most of all, no having to argue with the woman he loved about how much he loved her. She may not be ready to admit the depth of her feeling for him, but he could feel it now, and he would do whatever he needed to do to protect her.\n\nLost in thought, he felt her relax and fall asleep, her soft breath brushing over his nipple. He smiled softly as he gazed down at her and shifted, sitting up and moving her to her pillow on their big bed. Noah made his way to the bathroom, wetting a cloth with warm water and walking back to the woman who was his whole world. He cleaned her up before doing the same to himself. When he came back from tossing the cloth into the laundry, she was happily curled up around one of his pillows. Climbing back into bed, he leaned over her, brushing her hair back from her cheek and kissed the corner of her mouth.\n\n\"Mine,\" he breathed.\n\n\"Yours,\" she sighed sleepily, surprising him and making him unsure if she was genuinely asleep even while his heart soared hearing the single word.\n\n*****\n\n\"Little One, wake up now,\" Genesis said softly and watched as the woman he loved blinked those beautiful eyes open and focused on him in the dim light.\n\n\"What's wrong?\" she asked.\n\n\"Nothing but we need to move, get dressed quickly,\" he murmured.\n\nOlivia slipped from the sheets, her perfect little body still showing the marks of Genesis use earlier that night, making him groan in appreciation and pull her close, kissing her deeply. His cock immediately started to swell. Such was his desire for his sweetly submissive girl. Recent events may have made her confidence grow and her ability to make good decisions flourish, but she was still his in every sense of the word.\n\n\"I thought you wanted me to hurry,\" Olivia said breathlessly when he let her up for air.\n\n\"There is always time for me to show you how much I love you,\" he murmured and let her go smacking her arse lightly to hear her squeak. He watched her cover-up each fading pink line as she dressed in dark leggings and a dark long-sleeved shirt. He helped her put her blonde locks up under a cap and joggers on her feet.\n\n\"I trust you, Genesis, more than anyone else in the world, but can you tell me what is going on because you're starting to frighten me?\" Olivia asked.\n\n\"At the moment, there are four or possibly five people that Konrad could use to get to Marcella. Not because he truly wants her. Rather, he just wants the thing we will fight him over--a precious part of our family. You and Vivienne are two of the people Marcella would lose her mind over and do something silly like trade herself to him for your release. Gideon and I don't want that to happen not to you or Viv or Marcie, so we are going into hiding too. You said you trusted me, well now is the time to do that,\" he held out his hand to her, and she took it as he began to walk from the room.\n\n\"We don't know why but Konrad appears to be obsessed with you and your sisters. What Noah did in Perth with X and again today was change the game board and hide some of the pieces. We plan to make the Gamemaster play our game now, not the other way around. So, we need to get you somewhere safe with only people I trust,\" Genesis continued to explain as he pulled her along with his fast steps towards a loading dock at the back of the building. \"No talking until we are on the road,\" he instructed.\n\nOlivia nodded, and following his lead, she found herself in the back of a large van that smelled of bread, making her belly rumble. Genesis smiled and handed her a small paper bag that held a ham and cheese croissant.\n\n\"Eat quickly. We have to move fast at every changeover, okay?\" Genesis said softly. Olivia nodded and took a large bite of the pastry.\n\nA little bewildered by all the cloak and dagger stuff, Olivia followed Genesis through every changeover of vehicle until finally, they were at a small dock at the rear of a large house. A small motorboat waited there, and she was bundled below deck without the chance to take in more than that. When she finally emerged again, the sun was high in the sky, and they were moored next to a sailboat. She smiled widely. It wasn't her sailboat, but it wasn't that much bigger. She was reasonably sure that she and Genesis could sail it together without any help. She was excited, and it was all she could do not to squeal in excitement when Genesis helped her board the sailboat.\n\nOnly when she was on board did she notice the other two boats. Both were single mast sailboats like she stood in, only slightly different in size and shape. The motorboat that brought them this far chugged away, and she turned to look at Genesis with an eyebrow cocked.\n\n\"Welcome to our home for the next week,\" he grinned, and Olivia finally let go of a squeal of delight as she stepped into his arms to embrace him.\n\n\"This is amazing, thank you,\" Olivia said. \"Is Gideon taking Vivienne away too?\" she asked.\n\n\"Gideon and Vivienne flew out shortly after we left the facility. They are headed home to her family, who have some of the best safety protocols of any family and only their own hand-picked recruits as watchmen. Though by now Konrad knows we no longer trust any watchman from the Battaglia, which will play into his game of dividing the tables; only the Battaglia are supporting the investigation of the men they trained and are taking particularly harsh steps with any they find to have links to outside agencies like the Varangian Guard,\" Genesis gave the full explanation to forestall any further questions.\n\n\"So we are all moving further away from each other again rather than staying close,\" she said with a frown.\n\n\"It's only temporary little one. As soon as this is over, there will be baby showers and weddings, and we will all get sick of seeing so much of each other, trust me,\" Genesis soothed. \"In the few days since Noah and X pulled their magic circle together, the net has been closing fast on Konrad and his Varangian guard. They have very few places to go now and very few allies to hide them.\"\n\nGenesis had to give Xavier his due. While he had been cultivating friendships and links with the other journos and media experts on the other tables himself, he didn't have the same depth of knowledge and power of the other tables at his fingertips that Xavier did. It surprised him that each of the men in his circle would trust his word as if it were indisputable fact and act accordingly. He had to admit, he was proud his brother shared that power with their table leader.\n\n\"Noah is with Marcie now, though, isn't he?\" Olivia asked.\n\n\"Yeah, he is. I don't think wild horses could drag him from her side again, especially after the crocodile attack on what should have been a safe beach,\" Genesis mused. \"She probably isn't as happy with her hiding spot as you or Vivienne are, though,\" he chuckled.\n\n\"Why?\" she asked, \"He didn't make her go to a hospital, after all, did he?\"\n\n\"No. But she might wish for that when she realises she will be roughing it with half a dozen ringers on a muster,\" he chuckled again.\n\n\"I'm not even going to try to pretend I understand what you just said,\" she blinked at him. \"Just promise me Noah will not let anything bad happen to her now.\"\n\n\"Noah would protect her with his life, and we have not just our table, but all twelve tables working together to bring Konrad and the Varagian's down. Konrad miscalculated badly, bringing my family into the mix before his final plans to break the tables apart took root and were unshakable. Such is his ego that he can't understand the tabled families will always come together against a common enemy regardless of the minor internal battles,\" Genesis explained, feeling pride to be part of such a solid family-based organisation.\n\n\"We are going to stay here for a bit and sail on this afternoon, so let me show you the cabin, and we can catch up on a little of that sleep you lost this morning,\" he invited, having no intention of letting her sleep, not yet anyway.\n\nOnce inside the cabin, he pulled Olivia to him. She curled her fingers into the fabric of his shirt, relaxing into his possessive hold and feeling the power exchange clicking into place with the feel of his equally possessive kiss. This man was her master, and she sighed with pleasure and joy at the hungry need that seemed to roll off him when they were alone like this. The need to claim and take her as a Dominant would take his submissive. She shivered in eager anticipation as he ended the kiss, and he lifted his head to look at her.\n\n\"I adore you, Master,\" Olivia whispered.\n\n\"Of course, you do,\" Genesis grinned with arrogant male satisfaction of owning his girl's heart and mind. He chuckled, tightened his arms around her to immobilise her, then nibbled at her lips, her ear, and neck in retaliation to the small giggle that escaped her lips at his response.\n\n\"You are all mine, Little One,\" he reminded her, \"And I could not be happier. He released her and picked up one of the bags that had companied them on their travels that morning and removed swimming trunks for himself and a bikini for her as well as two sarongs.\n\nOlivia looked at the clothes Genesis laid out for her to wear and frowned. She thought they were here to rest and well fuck. Usually, he couldn't get enough of her, but here they were completely alone and unfettered by the worries that had plagued them recently, and he gave her clothes?\n\n\"I doubt we will have time to unpack properly and assume we will live in these,\" he spread his hand out toward where he had rested the clothes on one of the bunks indicating the swimwear and sarongs. \"The rest we can deal with another time.\"\n\n\"Now, let's get rid of these, shall we?\" his voice became husky as he pulled her shirt up over her head.\n\nAlmost naked, Olivia was caught by her reflection in the cabin mirror. A blonde with lightly tanned skin, she looked good in the pastel underwear her master had chosen for her in the dark this morning. Even so, Olivia sighed at the thought of exposing so many of her scars to the people on the other boats when she wore that bikini on deck. She would have to be creative with the sarong.\n\n\"That is the third sigh since we came down here,\" Genesis used one finger under her chin to tilt her face. \"Talk to me, Little One. What's going through that brilliant mind of yours?\"\n\n\"The bikini,\" she admitted. She wouldn't lie to him even to save face now.\n\n\"And....?\" He questioned, not understanding.\n\n\"I worry that it won't look good, you know, with the scars and....\" Her voice trailed off. There was a long pause as they both looked at each other, marshalling their thoughts.\n\n\"My little love. Come here,\" He positioned her in front of the full-length mirror on the closet door, standing just behind her, and their eyes met in the reflection. He cupped her shoulders. \"Look at this exquisite woman in the mirror. There is not one thing I would want to cover or hide. You are beautiful in every way and should be proud of your body, just as I am proud to be the one you share it with,\" he mock scolded her.\n\nOlivia met her own gaze. Flushed and nibbling on her lower lip, the blonde practically naked woman in the mirror looked mildly embarrassed. Genesis's tanned hands contrasted starkly with her light gold, fine-grained skin. His fingers stroked along her shoulders as she watched. She loved the possessive heat of his touch.\n\n\"Look at her,\" he urged, \"what lovely soft skin she has.\" His hands slid up her neck, curving around her with gentle pressure until his index fingers slid into the hair behind her ears. \"Silky blonde hair of all shades, women spend fortunes at salons for hair like this. Sparkling eyes so clear and honest, I get lost in them all the time.\" His hands slid down over her shoulders to cup her breasts so he could lift and feel the weight of them. Olivia's nipples hardened eagerly under his caressing fingers. She sighed with pleasure when he toyed gently with her nipples. \"The curve of this breast is irresistible, and these nipples...,\" his firm, deep, possessive tone of voice thrilled her, \"are mine. How pretty they are when they stand up like this, eager for my touch.\"\n\nOlivia gulped loudly. Her heart kicked into double time. Genesis moved one hand down over her belly. She watched it move in the mirror, mesmerised.\n\n\"I love the way this belly swells right here,\" he murmured, cupping it. \"I particularly adore the little curves that swell from your waist to flare your hips, and this,\" he brushed a finger repeatedly in a circle around her belly button. \"It marks the centre of my love, my life, my whole world.'\"\n\nWhich explained to Olivia for the first time why he often kissed her belly when beginning foreplay. Heat rolled off Genesis and seeped into her as they stood there locked in the mirror's frame. He stood so close behind her she could feel his cock harden as his deep voice poured over her like warm, sweet chocolate. He explored and narrated what he saw when he looked at her and revelled in the woman that was his now and forever. He moved both hands back to her hips and cupped them, pulled her body back tighter against his making her arch slightly.\n\n\"Look at this lovely shaved pussy. So soft like satin, and mine,\" Genesis continued. He used both hands to pull her apart and expose her clit, but refrained from touching it. \"Look at the lovely deep pink colour, a perfect match to these delicious nipples.\" Then a rumbling groan worked up his chest, vibrating through her bare skin as he stroked his hand between her legs, probing her. \"My pussy is ready for me, isn't she?\" and he dipped a finger lower to confirm what they both already knew from the rising scent of her. \"Do you know how much it excites me, Little One, that you are always so ready for me?\"\n\nShe whimpered in the back of her throat as his finger tested her, dipped deep; her wobbling knees threatened to give way. Genesis held her upright with a steadying hand on one hip, pressing her back until she could feel the length of his hardened cock along her lower back. With slitted eyes, she watched his finger stroke inside the girl in the mirror, feeling the movement within her body.\n\n\"Yours,\" she moaned. \"Always yours,\"\n\n\"Yes! Mine!\" he withdrew his hand slightly and smacked her pussy, making her jolt and squeak in surprise rather than pain. He dipped his finger in and out of her for a minute more before repeating the process smacking her pussy three times in quick succession, feeling her grow even wetter. \"I love this woman in the mirror.\" Genesis said in a fierce whisper, \"I fucking crave this woman. I crave you and all that you allow me to do and with you.\"\n\nHer lower lip trembled as strong emotion suffused her. Love. Joy. Humility. Pride. Genesis kept his finger inside her while moving his other hand to lift her chin and meet his gaze in the mirror.\n\n\"You are everything I could ever want and more,\" he assured her. \"The most beautiful, kind, caring, strong woman, and you are mine,\" his arrogant pride shone through again. \"Now and always,\" he confirmed. \"Look at the woman in the mirror, Little One. I love and worship this woman because each blemish and scar tells me part of her life story and brought her to me so I can love each one as I love her. When she is dressed in the clothes I have chosen for her...\" he broke off and spun Olivia about, bringing her to his chest for a breath-stealing hug. \"It's all I can do, not to tear those clothes off and take her.\" He muttered fiercely into her hair, then turned her and pressed her face down over the high foot of the bed.\n\nGenesis freed his aching cock and drove himself into her from behind, both hands tight on her hips and positioned for his pleasure. And hers. She moaned into the bedspread as he thrust into her. He turned her head to the side where the mirror barely caught their reflection as he slammed home over and over.\n\n\"Look into the mirror, Little One. See the irresistible girl who commands my whole world,\" He slapped her ass as if it were something she did on purpose.\n\nShe turned her head to gaze at their reflection, and lust jolted through her at the sight of them. Genesis, standing behind her fully clothed except for his unzipped pants and rampant cock that ploughed into her deliciously, insistently. She wasn't sure when he had ripped her panties, but with her ass high in the air and her body repeatedly rocking under the impact of his, she could see the remaining wisps of lace fluttering around her middle.\n\n\"Look at this beautiful woman as she takes all of me and loves it, craves it, needs it as much as I do,\" he crooned and slapped her again.\n\nShe moaned, and her body tightened, roaring with heat and tantalising sensations. Her eyes remained on the mirror. The sound of them! The scent of them! The sight of them -an exquisitely erotic voyeuristic experience as the couple in the mirror fucked like animals. She looked like a fair maiden to his regal dark Italian looks. Olivia whimpered with the sheer power of the vision before her eyes and the tingling jolts of electricity singing through her body with each powerful thrust and smack.\n\n\"Touch yourself, Little One. Play with your clit and cum for me,\" Genesis demanded and watched as her head buried deeper into the mattress, and her ass rose higher as she reached back with both hands to follow his instructions. Fuck he was in heaven, and he leaned over her to grasp her breasts, clenching them tightly to hear her whimper and mewl even louder.\n\nOlivia obeyed without even thinking about it. And when she moaned with all her pent-up heat and passion, her master praised her with whispered words of love and delight. Her clenching pussy milking his orgasm out of him, and he growled low in response to her cries of pleasure.\n\n\"Mine,\" he growled at her.\n\n\"Always,\" she responded, closing her weary eyes and letting out a long slow breath as Genesis withdrew from her and went about cleaning her and making her more comfortable in the bed as she napped to catch up on the sleep he had denied her this morning.\n\n******\n\nGideon felt like he'd had his heart sliced in pieces when he farewelled his brothers and then had spent the morning flying Vivienne to her family before returning to his own. His father picked him up when he returned, and together, they went to the family home for a conference for the ages.\n\n\"Xavier had been canny in the way he went about pulling the other tables in before approaching his father for fear that he would refuse the help,\" Armando began to talk into the weighted silence of the car. \"What Xavier didn't understand, however, was that the thirteen had set up the alliance between their children for just this reason. To forestall misplaced pride and petty grievances when faced with a greater enemy to all. It was Christo Donati who had seen the need for their circle of sons as friends and allies. It was he who had seen the destruction of the tables if they did not work together for the common good. It was probably what had him killed in the end,\" Armando sighed.\n\n\"It was Noah who saw the pattern. Well, he and X and Dom puzzled it out, with a little bit of Gen's help,\" Gideon clarified.",
        "\"That's true, and I am immensely proud of all of you for the part you played in this,\" he sighed, trying to find the words he wanted to say. \"When our ancestors retook their names and refused to be hidden behind a wall of shame, they became a combined force that was virtually unbeatable in the wars for territory and status of the middle-ages,\" Armando sighed. If their timeline was correct, Christo Donati was one of the first to lose their life to this mad man, and he refused to have his family suffer as the Donatis had.\n\n\"I get it, Papa. That's why I am here rather than in hiding with my pregnant wife,\" Gideon growled slightly. \"Over my dead body will this man put my brothers or the women they love in any more danger, and Vivienne agrees, which is why she agreed to head home to her brother where she will be the safest.\"\n\nArmando pulled into the home he had grown up in that now belonged to his brother Tony. Today would be a historic occasion and one that was badly needed. Cars lined the drive, so he parked around the back and strode to the house. He hoped the questions that plagued him the most would be answered today. First, he needed to know why the three Gambaro girls and their families had been targeted. Second, he wanted to know how deeply the Varangians had infiltrated each of the tables through the Battaglia, which seemed to be the gateway into the twelve tables.\n\n\"Bruno Battaglia has put off his retirement to stand with Marcus and accept the mistakes he had made in his recruitment processes which were now being overhauled. What we hope, however, is that some of those behind the recruitment of men for the Varangian would have given them answers about why the Gambaro girls seemed so important to him, particularly Marcella,\" Armando explained as if to reassure himself of the reasons the Battaglia called this meeting.\n\n\"Don't get me wrong, knowing the motivation behind someone's actions is always good, but I think we are beyond that now. As of this moment, we just need to find the Varangian,\" Gideon said through clenched teeth making his father turn his head to look at his son.\n\nThey entered the athenaeum to see everyone who could be there was present. Gideon took a chair alongside his father and looked to the end of the room, where a wall was covered in screens. He discovered both generations of the current tables were joining the meeting from their family locations around the country. When the last of the tables had joined the discussion, Gideon gauged which tables had included only the chairs and oracles and which seemed to show a full table at the conference. Protocols had undoubtedly changed with the more recent times and innovations.\n\nBruno Battaglia had called the conference, so he cleared his throat to start the conference. He also went a long way to enabling the networks to all route through his master server for this meeting to show his trust and faith in his Tabled fellow men. He began his opening speech by praising Noah and Xavier for making the links to the tragedies that had befallen the families in the last decade back to the one-person, circumstantial evidence or not, in the early days which had led each table to make recent discoveries of their own.\n\nEach family went through past incursions and animosities between tables they believe could have been caused by Konrad. Then, they created a timeline of sorts leading from the warnings of Christo and his subsequent death up to the issues of today and the three Gambaro women who had been used to cause ill-feeling amongst up to six tables.\n\n\"Between Theo's investigation as well as our own,\" Bruno indicated Marcus and a few others who sat beside him. It would appear that the Varangian promised Apollo Martino stewardship of Perth and, more importantly, The Kimberlie region combining the two areas under one main figurehead. Which is why he needed Marcella to help make the transition from the tables as we know them, to a new regime overseen by the Varangian guard.\"\n\n\"From what we understand, Jessa and her husband would have taken over Adelaide before that relationship was destroyed when Severino and his brother messed up again by attempting to force the return of Marcella in Darwin. I don't think Severino ever had any intention of handing Marcella over to Apollo except in name only,\" Bernardo Gambaro spoke up, and Tomaso Farnese confirmed his words about the city of Adelaide.\n\n\"It would seem,\" Bruno raised his voice to be heard again above the murmurs. \"That Konrad's plans began to fall apart when Joseph Donati did not play the Varangian's game as expected, and he lost control of two significant pieces on his game board.\" He didn't need to state the names. They all knew the stories of what had preceded Joseph and Antonia's deaths. \"It seemed Joshua Donati, with his oracle and the support of the new mother was not the easy prey he thought they might be either. He lowered his head in acknowledgement of the Donati leader. So, he focused on the other tables and the plans he had in place there, like the wrongful internment of Marcella in the Battaglia facility and the use of Ballino Martino to begin the destruction of the Vitali family.\"\n\n\"This is True,\" Roberto Vitali nodded, confirming his words.\n\n\"I'll say it if no one else will,\" Mateo Vitali said solemnly, from where he sat beside his father. \"Veronica Donati caused chaos and destruction in my life and family as much as she did in her own. Just as my mother and her brother began the destruction in the generation before ours, and I am sure you all have the stories to match. The fact is both the Donati and my own family were, if not saved by them, greatly advantaged by the women who came to us with new blood and new ways of looking at our families. Konrad thinks we are so mired in tradition and ritual that we will not deviate from that to save ourselves. This conference says otherwise, and I am happy to be part of this exercise in trust and camaraderie as we face a common enemy. I think my brother Ricco has already demonstrated what can come from being a team player against this man.\"\n\nSeveral families discussed the nests they had found had also exposed those who were collaborating with Konrad's men in the hopes of taking over the table's businesses and lifestyles themselves. It had only been a matter of days since the might of the twelve had come together in a new and improved thirteenth table where the bonds of family ties held them tightly together regardless of their misgivings.\n\nGideon listened to it all, but at the end of the day, his brothers and the women they loved, not to mention his wife, had gone into hiding until they could be sure this man was dealt with for good. If he were as clever as the stories gave him credit for, especially his being ahead of the other players in the game, it would be surprising if he didn't already know where each of the girls were and had plans to take them as he had threatened to do Marcella. They were living bait, and he couldn't bear it much longer. He looked at his father, who seemed of the same mind and finally broke his silence for the both of them.\n\n\"This love fest is all well and good, but my sons are out there being used as bait for this man now. I want them back, sooner rather than later, so someone tell me how we accomplish that?\" Armando had risen to his feet as he spoke his words loud and clear in the room. \"I want my children back, and I want them back now,\" he demanded, including the women in his demand for his children.\n\nGideon was shocked at his usually steady and calm father's outburst. Like him, the room and all the screens remained silent for some time after Armando's words died off when Bruno spoke again.\n\n\"Armando, like Ricco Vitali last year, your son, Noah, is the hero of the hour with his keen insight and understanding of the bigger picture rather than our individual tables, while he has been fighting his own battles for the woman he loves with the Varangian, he was thinking not of his own life and his own family, but rather the Twelve Tables as a whole. We are indebted to him and his brothers, and you have our assurances that we are each doing everything we can to make sure they make it home to you as soon as possible,\" Bruno said gruffly.\n\nArmando lowered his head and sat down. How could he so selfishly demand the return of his sons when one of them was the hero they spoke of that looked outside his own family and needs to protect others. He sighed and tried to believe in the plans Noah had put into place with his brothers. He felt Gideon beside him reach out the grasp his shoulder.\n\n\"They are coming home, Papa. You have my word on that,\" Gideon said solemnly, not that he could do anything more than his father. That and be the link between his brothers and the tables.\n\n*****\n\nValdemar Zenati looked at the peeling paint on the hotel and grimaced. He had ridden over the border into Queensland for this meeting, and he hoped the guys he was supposed to meet were already here. Pushing in through the doors, he was grateful for the air conditioning and took a breath before he spotted Lorenzo Donati and assumed the other two men with him were Chase Vitali and Paulo Farnese.\n\n\"Fella's,\" he drawled, nodding his head and taking a seat. He lifted a finger to the barkeep for whatever he had on tap that was cold and turned to the men he had come to meet. \"We live in historic times, cousins.\"\n\n\"Indeed, Red Sergi and Zed Gastone are here as well,\" Lorenzo said. \"Interesting times indeed.\"\n\n\"Red and Zed?\" Val smirked, placing a fifty on the bar and accepting the beer the barkeep handed him. \"Whatever these dickheads want too,\" he grinned. Then, turning back to the men he knew held the same position as him on their own tables, they were all motorheads of some description, and he knew he would enjoy their company for whatever happened from this point forward. If it was a madman's game they played now, the pieces on the game board were shifting. The trick, he knew, would be to stay ahead of those shifts and beat the Varangian to the end square.\n\n\"Zed for Zakari,\" a man walking up to the group from the pool table said as he held out his hand.\n\n\"Just Red,\" the guy behind him said, also offering his hand.\n\n\"We've been waiting for you,\" Chase said casually. \"We're going to ride out a bit and camp up near the lookout. You down?\"\n\n\"Yeah, alright, but let me finish my beer first,\" Val said, surprised by the eagerness Chase had to leave this air-conditioned haven. He considered the guys around him. Honestly, he didn't know any of them well. Even Lorenzo, who he probably knew the best, was perhaps not what he would call a friend. More of an acquaintance than anything. Still, he'd been sent here with a purpose, and he assumed these guys had been too.\n\nThe guys made small talk in the pub, Lorenzo lamenting about the end of his racing career and showing photos of his pretty wife and babies in explanation. Eventually, they rode out into the desert near Poeppel Corner, remote, uninhabited, hostile desert land, or so Valdemar thought. Instead, he found a small tent city set up under the guise of an archaeological dig by palaeontologists who regularly worked in the region. Road trains with multiple wagons encircled the camp and gave off light and electricity to the services through solar panels and huge batteries. The base camp was small enough that everyone knew each other's faces, and entering the camp got you a photo ID tag you needed to wear at all times.\n\n\"So now we can talk properly,\" Chase said once they were through with the security checks and had all entered a large tent containing a round table where the men from the other tables all looked back at him.\n\n\"So they kept this a big secret then,\" Val mumbled.\n\n\"Phil saw a future where we could save the day,\" Red Sergi said from where he was sprawled in a chair.\n\n\"Being that he's the one they all listen to right now, we're here to save the mother fucking day,\" Zed chuckled loudly. \"Even the new guy over there.\" He pointed to a man Val didn't recognise.\n\n\"Hey, new guy, I'm Val,\" he stuck out his hand to the man.\n\n\"Orpheo Pellegrini,\" the man said, surprising Val with his American accent. \"Good to be on the winning team.\"\n\n\"Here's to that,\" Lorenzo said and passed Val a beer.\n\n\"So, we just wait until they find some intel and let us know where to go?\" Val questioned.\n\n\"Not at all, my friend, we make our own rules out here, and each of us collected our own intel on our way out to the rendezvous point. In this remote corner of the land, communications could be dodgy at best, so we have waited for you to pool our information and make a plan. All signs seem to say he is headed north at this stage,\" Lorenzo said. 'The sooner we do it, the better as far as I am concerned, so let's get this hero shit underway.\"\n\n\"You've been waiting for me?\" Val said. \"I wouldn't have minded if you started the party and left me to catch up,\" he frowned at the other men.\n\n\"Relax, most only arrived in the last few hours,\" one of the others waved away his comment.\n\n\"Are we all mechanics?\" Val asked. He was having trouble keeping up with all the new faces, but that knowledge would help him place the name to the face.\n\n\"I prefer the term mechanical engineer, but sure why not,\" Chase said. \"As long as it has an engine and goes fast, I can drive it or fix it.\" There were murmurs of assent and a few guarded conversations around favoured vehicles.\n\n\"I've seen some pretty wild footage of bull catching in the territory where they build their own rigs with large-arse metal yokes on the side to walk them next to the truck while they force them to a tree to tie them up by the horns,\" Orpheo said with a little bit of awe in his voice.\n\n\"True that,\" Val nodded. \"I've got one of my own rigs out on Kriol country. There's big money in organic beef, and you don't get more organic than wild bulls. The ringers have nerves of steel, but I like the adrenalin rush when I go out country.\"\n\n\"Geez,\" he shook his head. \"You and me are going to be friends, and I am going to come to visit so that you can take me to play with the ringers.\"\n\n\"Sure, we come from opposite ends of the country, but why not. I can always use another bestie,\" Val chuckled and held his hand out for a fist bump. \"So any clue what we do from here? What's your intel say?\"\n\n\"Honestly, I don't think the grunts know anything, and we haven't found any generals amongst the bikers who are massing a bit further north,\" Lorenzo said.\n\n\"Red herring?\" another asked.\n\n\"Maybe. What did you see on your side of the line?\" Lorenzo asked.\n\n\"Nothing, or at least no one riding with colours or in groups,\" he frowned.\n\n\"Red see if you can get hold of Phil again because if there is some divine plan for us being here, I'm not seeing it,\" Lorenzo frowned.\n\n\"Wait, how far north are they?\" Val asked, getting to his feet and digging his phone out of his back pocket. \"They could be heading towards a cross over point up near Doomadgee or Nicholson. That would bring them out on Kriol country. It doesn't make sense, though. It's the wet season up north.\"\n\n\"Explain,\" Chase and Larry said almost in unison.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "dominant",
        "submissive",
        "outback"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-36"
}