{
    "title": "Suzie's Lessons Ch. 04",
    "pages": [
        "This is a fictional account.\n\nSuzie woke Monday morning, got ready, ate a light breakfast to watch her diet, and walked to the bus stop to meet Janie. It was a great spring day and April had arrived. She was also happy because the bathroom scale showed her down three pounds already in one weekend. She had selected one of her short skirts and low cut blouses to wear for the day. With her low boots she looked great. At least Janie thought so when they met at the bus stop. Suzie had opened her coat to discreetly show Janie her outfit. \n\n\"Maybe clothes are my problem too,\" Janie figured.\n\n\"Ya know, you're probably right and I think we should do something about it,\" Suzie added.\n\n\"Yeah, but I don't have a rich boyfriend to buy me all my clothes,\" Janie lamented.\n\n\"No, but there are many things we could get ya that won't run that much,\" Suzie said.\n\n\"Like what,\" asked Janie?\n\n\"I could borrow my Mom's car and we could go to the mall and shop for thongs, bras, and a few nice but inexpensive outfits. You do have some money don't ya? And to help my best friend out I might just buy ya something myself,\" Suzie stated.\n\n\"Cool Suzie, that would be great,\" said Janie.\n\n\"How about this afternoon after soccer and drama class, we could meet at my house? I'll call my Mom now to ask if it's okay to borrow the car,\" Suzie said.\n\nJanie nodded agreement as they got on the bus and took their seats in the back. With the warm spring day, Suzie had left her coat unbuttoned as she made her way down the aisle. The young kid Todd from down the street ogled her as she past. It gave Suzie a sense of the impact she could have on boys as she reached for her cell and placed the call. Her Mom answered. She'd be home at 4:00, so yes they could borrow the car as long as it was straight to the mall and home. Also, it needed to be alright with Janie's parents too. They also needed to be home for dinner at 6:30 her mom had said. Janie called home and it was fine with her mother too, so the plan was set. \n\nThe girls talked in whispers about the types of clothes to get Janie. Suzie looked forward once and noticed Todd staring back at her. He quickly turned and looked ahead. She smiled to herself but looked down to make sure she wasn't exposed anywhere more than she wanted. She was not use to wearing these short skirts and blouses and had to remember to move more purposely than in the past. Suzie told Janie how Todd was checking her out and they both chuckled over the power she now had to attract attention. Sure, Todd had looked before but this time his eyes seemed to be bugging out of his head. Other boys too, that had never seemed to notice before, all seemed to be casting glances at her. \n\nThey got to school and agreed to talk more at lunch. They parted for lockers and then first classes. Suzie had once again noticed Todd staring at her the whole walk inside. Actually, she could feel a lot of eyes on her and it made her feel important and attractive for a change. \n\nSuzie finished at her locker, leaving her coat there, and proceeded to her first class but swung the long way to go past Curt's locker on the off chance of seeing him. She spotted him just as he closed his locker and hurried to catch him before he headed down the busy hall. Suzie could feel her boobs bouncing considerable as she covered the short distance. All of the guys and even some of the girls noticed the movement of her breasts. With the low cut neckline her exposed cleavage jiggled noticeably and her tits in general bounced considerably more with the lighter weight bra. The bras Curt had bought her with the matching thongs were thin. Her thicker older bras were more restrictive and more concealing. Curt saw her coming as she neared and smiled as she pulled to a stop by him. \n\n\"Suzie, you better be careful there girl, you're going to knock yourself out with those incredible boobs if you're not careful,\" he chuckled. \"What's the big hurry,\" he asked?\n\n\"I wanted to talk with you about Janie,\" she said. \"She was bored to death with you and me hanging out all weekend. She would like to meet someone too. Can you think of someone,\" she asked?\n\n\"What're you hoping we can double date or something,\" he asked?\n\n\"Well, maybe,\" she answered. \"Would that be so terrible?\"\n\n\"No, but what exactly have you been telling her,\" he asked?\n\nThe stunned look on Suzie's face told him all he needed to know. \"You two have talked about everything haven't you?\" He let that hang for a few seconds then added, \"That's alright, and I expected you two would since you are best friends. Unlike guys, girls tell their best friends everything,\" he said. \"I understand.\"\n\n\"You do,\" she asked? \"You're not mad because I know we were supposed to keep everything secret.\"\n\n\"Well can Janie be trusted to keep silent,\" he asked? \"That is where the secret will get out in most cases I would think.\"\n\n\"Oh she can,\" Suzie stated. \"I told her this was a life or death secret.\"\n\n\"I guess maybe she will,\" Curt responded. \"You know it'll hurt you more than me anyway if it gets out.\"\n\n\"I know,\" said Suzie. \"I'll reminder her.\" \"What do ya think though? Is there someone you might recommend for her?\"\n\n\"Let me think about it,\" he said. \"Ya know I like Janie and would not want to hook her up with any old jerk. If its training she wants like you, maybe I could take on two students at once,\" he joked. \"I'm sure Cyclops would like that,\" he whispered to her.\n\n\"No way,\" she smiled back. \"Cyclops and I have a thing going. Besides Master, I need your undivided attention if I'm going to reach my full potential,\" she whispered too.\n\n\"Speaking of which,\" Curt said, \"How're we going forward with your training beyond just the weekends? We need to have at least two mid-week work outs as well for maximum affect. Do ya have Drama Club everyday after school,\" he asked?\n\n\"I do,\" she answered. \"It runs until close to 4:00 each day. I cannot miss any either or I will definitely not get the lead in Romeo and Juliet,\" she responded.\n\n\"Well, how about this,\" Curt asked? \"What if I pick you up every morning for school so you don't have to take the bus and I wait for you till you are done at 4:00?\" \"We could change and work out before dinner.\"\n\n\"Curt that is a great idea. I would love to get off that stinking bus with all the underclassmen but won't you be bored waiting for me till 4:00,\" she asked?\n\n\"Not at all,\" he said. \"I normally do my heavy weights then and it takes till around 4:00 usually anyway. I normally run afterwards and then shower but I can wait to run with you if you don't mind me being sweaty,\" he asked?\n\n\"Wow, that sounds like it'll work perfect,\" she said. But then she showed a sad face.\n\n\"Why the sad face then,\" he asked?\n\n\"I was just thinking about Janie being alone on the bus,\" she said.\n\n\"Oh, that is no problem,\" he said. \"Both of you be ready in front of your house instead of the bus stop,\" he said. \"Actually, I've wanted to give both of ya a ride for a long time but between my football schedule and Becca, it never worked out till now.\"\n\n\"Curt that is wonderful,\" she said and moved to kiss him on the lips but caught herself at the last minute afraid to give too much of their deal away.\n\nThe bell sounded for class and they both needed to hurry. \"Why did you hold up,\" he asked?\n\n\"I was afraid you would not want me kissing you in front of everyone,\" she said.\n\n\"Why would I be afraid of that,\" he asked? \"It's not like I have a girlfriend anymore and a kiss alone is not going to disclose our deal,\" he added.\n\nSuzie held back a brief second then kissed him. \n\nThey hurriedly parted but not before Suzie asked him if it was okay to start work outs tomorrow as her and Janie had talked of going to the mall together today. He agreed to that and they said goodbyes. \n\nThe rest of the day went fairly normal. However, she was really getting noticed by the boys in the halls and even heard a few girls whisper as she walked by. She did not care if they were making comments. She was proud of the way she looked and would not let her misgivings get in her way anymore like they had almost done with Curt. She was excited for Janie and her to be off the bus finally and in Curt's car for school. She told Janie at lunch about the discussion with Curt. Suzie told her about his agreeing to help find her an appropriate guy and about the rides to school in the Torino. Janie was elated. She too was happy to be off the bus and for Curt's help. Janie kidded with Suzie that Suzie would always have shotgun. But even as she did, they both knew that is how it should be. After all, Curt was her guy and Janie was just a friend needing a ride. \n\nAs they joyously parted from lunch, those thoughts darkened Suzie's otherwise great mood the rest of the day. The big question still seemed to remain, was she Curt's girl or just a friend he was helping with a problem? Had he not said he did not have a girlfriend now? Was she still just a project to him and someone to suck his dick in between girlfriends? Or was it becoming something more? To her it feel like something more. She wanted it to be. Curt was a great guy, an old friend, someone she had always been able to share things with, and now much more. Did he only think of her as a friend? Was there nothing more? Once her training was over, would this end suddenly? What about the prom and then later college? Did he care enough to hold them together through all the things that lie ahead? She was sure she felt more than friendship. Or did she? Was it just temporary infatuation with the guy who had taught her so much? Did she just like him but not love him? How could she know for sure with her limited experience? \n\nMaybe she was the one jumping to conclusions as he was her only reference point. Maybe she would meet someone even better at college? She could not bring herself to believe that though. Curt was a great guy and seemed to be all she had hoped for in a man. Did she really need to look further? Let's face it, when it came to sex anyway, Curt was a master. She loved Cyclops, of that she was sure. These thoughts troubled her the rest of the day, off and on throughout Drama Club, and until she met Janie at her house at 4:15 for the mall. Janie noticed her off mood right away as they got in the car and departed for the mall.\n\n\"What's bothering you,\" she asked? \"I'd think you'd be on cloud nine like I am,\" she added.\n\n\"I should be,\" Suzie responded. \"But I can't stop thinking about Curt and me and where this is headed. Janie, I'm not sure if I love him. I'm even less sure if he even thinks of me as anything more than a friend. He said today, he doesn't have a new girlfriend. What am I then, just a friend with a problem? Is he trying to help his friend while the friend sucks his dick as payment for his help? I'm just so confused right now,\" she said.\n\n\"Wow,\" Janie gasped. \"You really do have a brain on overload. How can I help? You want me to ask him if you two are going steady or to the prom or something,\" she said.\n\n\"No, please don't do that. I need to work this thing out myself with Curt,\" Suzie stated.\n\n\"Okay, but you sound really confused. How do ya plan on finding out if he really cares,\" she asked?\n\n\"I don't know but I need to get a hold of my true feelings before I can expect to understand Curt's,\" she said.\n\n\"Wow, that sounds very wise of you Suzie,\" Janie commented. \"I'd probably be more inclined to hint at things with Curt until he caught on and gave me an answer.\"\n\n\"Well, that is about the only thing I'm sure of,\" commented Suzie. \"If I understand what I want, then I can go for it. Until I get there whatever Curt says will only be part of the equation, so I might as well understand my feelings first,\" she said.\n\n\"Good idea,\" Janie added. \"Now what about my clothes I need. You're sure looking hot today and I want a little of that action too,\" she laughed.\n\n\"Yeah, I was sure getting looks today,\" Suzie laughed back. \"You should have seen me run down the hall to catch Curt. I thought I might pop a tit out in the hall in front of half the school. Wouldn't that have been embarrassing,\" she added?\n\n\"Oh, I wished I'd seen that,\" Janie joked.\n\n\"Well, most of the boys in the hall at the time noticed and some girls too,\" she laughed.\n\nThey entered the mall around 4:30 and shopped till 6:00. They had done well getting Janie two new bra and thong sets first. Suzie even bought herself one she liked a lot that Janie said she looked devastatingly beautiful in. Janie, with her 32B cup size was jealous of Suzie's 36C/D and lamented her small boobs. \n\n\"How're guys ever going to love these tits when they can't even find them,\" she joked?\n\nJanie was a cut up and had them laughing the whole time. They bought Janie two short skirts and three low cut blouses even though Janie joked what for. She said her cleavage was so far apart that they wanted to pave the middle into a road. They'd ogled some great heels and boots in the mall but they were just too much money. They finished shopping at the discount shoe store outside the mall. There they bought two nice pairs of supposedly designer heels and a very nice pair of low cut boots. With Janie's athletic build, the shoes highlighted her fantastic legs. Suzie told her how great she looked in the shoes and boots. Sure as long as you aren't around Janie said, I might get a leer or two from dirty old men she joked. \n\nSuzie bought her a few nice pairs of socks to go with her boots. They exited the store, loaded packages in the car, and proceeded home. They arrived right at 6:25 for dinner. Suzie dropped Janie first at her house and helped her with her packages. Janie's Mom wanted to know why it looked like Christmas. She thought they were only going for a couple things. They assured her they had spread the money wisely. \n\nJanie would have to be careful exiting the house for school like Suzie was being. Janie's Dad was like hers and wouldn't understand. They discussed outfits to wear the next day to school as they dumped the packages in Janie's room. Janie walked Suzie back down and thanked her for the socks and the help with her choices. They hugged and told each other how much fun they had. Suzie told Janie about the small breast jokes, look on the bright side; at least you can see your feet in the shower. They both cracked up as Suzie left and went home for dinner and studying. \n\nSuzie entered her house with her few packages and in her happy mood had carelessly left her coat open. Her Dad noticed the length of her skirt and the low cut blouse as soon as she entered the hall. He immediately became enraged and an argument ensued. It engulfed her mother and sister Beth as it feed over into the dinner hour and after. Her father was, of course, mad about her risky dress and also wouldn't listen to her reasons of being older and needing to dress more current. Her mother, though clearly on her father side, tried to bring reason and compromise to the situation. Beth supported her sister but her vote seemed to be completely discounted by her father, which she resented. \n\nWhen all the various points had been made, the standing argument was still her Dad's that she would be forbidden from wearing these clothes to school again. Suzie had fled to her room in tears screaming he was ruining her life and she would never forgive him. Beth, still mad at being discounted, got her two cents in and left for her room too. Their mom endured all and still fought uselessly for calm and rational behavior. Suzie through tears could still hear her dad even with the closed door arguing with their mother as he held steadfast to his position. \n\nIn the morning, Suzie got ready for school keeping in mind her father's direction. She would not wear the short skirts, short dresses or low cut blouses. That she knew he would never allow but she could be defiant in other ways. She wore a tight t-shirt with one of the new thinner bras and her new tight jeans with the new long boots. She did still look very hot she thought despite the restrictions. As she descended for breakfast, her mother was there as usual but so was her dad as if to check on her. \n\n\"What's this,\" he scolded.\n\n\"What,\" Suzie shot back? \"I'm not wearing anything you objected to yesterday. Do you want me to go without any clothes to school?\"\n\n\"Don't talk back to me young lady,\" he said. \"That shirt is still too tight and so are the jeans. Where did you get those boots?\"\n\n\"Curt bought them for me,\" she said. \"Kids wear jeans and t-shirts like this to school everyday,\" Suzie added.\n\n\"Not my daughter,\" her father returned.\n\n\"Well you don't want me wearing the other skirts and blouses so this is all I have left,\" Suzie said.\n\n\"Don't tell me that young lady, you have plenty of good clothes to wear that are proper clothes for a girl your age,\" her father countered.\n\n\"I do not,\" Suzie screamed back! I'll never be caught dead in the garbage you want me to wear. I'd sooner not go to school than look like a complete nerd,\" she added.\n\n\"You'll do as I...,\" her father was cut short by her mother's arm on his. \n\n\"This isn't getting us anywhere,\" Suzie's mother said. \"Suzie is going to be late for school if you both keep this up. Let her go as she is today and we can talk about it more tonight,\" she added.\n\n\"No way is she...,\" her mom cut him off again.\n\n\"Honey, she has no time to change now anyway. Let her go to school in the jeans, t-shirt, and boots for now and we can straighten this out tonight,\" she commanded. \n\n\"But...,\" he started to say but again she cut him off. \n\n\"After all she did listen to your instructions initially on the other clothes. You're the one changing things now,\" her mom added.\n\n\"But...,\" \n\nHer mom interrupted again and said, \"Suzie, you can go but we aren't finished with this young lady. Is that understood,\" she stated.\n\n\"Yes, this is not over by a long shot,\" her father had to get in for good measure.\n\nSuzie just grabbed her book bag and stormed out. She forgot all about breakfast and even forgot to grab a coat. Fortunately, it was another mild early April day and she was not to cold as she walked to the front of the house. As the storm door closed behind her, she could still hear her parents going at it in the kitchen. As she rounded the front of the house, Suzie spotted Janie already seated in the backseat of the Torino and she and Curt were talking while patiently waiting on her. \n\n\"Someone over sleep,\" Curt joked as she got in the car. However, the look on her face said something was worse than that. He pulled away from the curb.\n\n\"What is the matter,\" Janie asked? \n\n\"My parents are such old fashioned nerds,\" Suzie burst out. \"I can't stand their puritain ways and more. They're driving me crazy,\" she added.\n\n\"Oh, let me guess,\" Janie said. \"They're not happy with your choice of clothes.\"\n\n\"Oh, this is my fault,\" Curt added.\n\n\"No it isn't,\" answered Suzie. \"This is how I want to dress and they won't let me.\"\n\n\"I'm afraid I'm in for the same argument when my parents find out,\" Janie said.\n\n\"My, what have I started,\" Curt said.\n\n\"It's not you Curt! You were right, we both needed to get with it and start dressing like seniors not freshmen anymore. This is so unfair to treat us like little kids. We're old enough to vote and drive and even go into military service if we wanted to,\" she stated. \n\n\"How'd you manage to get out of the house if they didn't want ya dressed like that,\" Curt asked?\n\n\"My dad caught me last night coming in from Janie's with my short skirt and low blouse. He forbade me to wear those again to school. So this morning, I put these on instead. When I went down to breakfast, he threw a fit again. Luckily my mom realized I would be late for school if we kept arguing and let me go but with the understanding we would talk more after school,\" she said.\n\n\"I'm afraid they aren't going to left you dress like that anymore,\" Curt said.",
        "\"This is definitely not fair,\" Janie objected also to join her friend.\n\n\"I have to find a way to convince them to let me wear what I want,\" Suzie said.\n\n\"You do look hot,\" Curt smiled.\n\nSuzie looked down at his comment. She loved the boots with the jeans and was about to thank him again when she looked to her t-shirt. Her nipples, from the cool air, were prominently poking through her thin bra and shirt. \"Oh, I see what you like,\" she chided him with a smirk. \n\nJanie said, \"What,\" from the back.\n\n\"My hooters are hooting,\" Suzie answered her.\n\n\"Are they ever,\" Curt laughed.\n\nSuzie cuffed him lightly on the arm as Janie replied, \"That's what you get for having so much to hoot about.\"\n\nThe following laughter cut the earlier sour mood and they talked easily the rest of the brief ride to school. Curt reminded Suzie of her work out after Drama Club. She said she would be ready. They agreed to meet in the parking lot by his car. As they parked and the three friends walked into school, Suzie got looks from every boy and even some girls as they passed. Janie was wearing one of her new short skirts and low cut blouses but her coat hid most everything plus all eyes were on Suzie anyway. They parted company once inside but not before Janie told her she was never walking anywhere with her again. She always stole the show. They laughed together and parted. \n\nThe day passed as normal with the exception of the constant looks Suzie was getting. I few of the more popular boys that had never talked to her much before said hi now. Sean and Brian both said hi and Sean even walked with her a short way asking how she was. \n\nAt lunch Janie was glowing also. Several boys had talked to her and she was getting looks from most too. Several girls had asked both of them where they got the cute clothes and more than a few drooled over Suzie's boots. When they got their food from the caf\u00e9 line, they headed towards their normal table. \n\nOff to the side, Janie noticed Andy, a boy from her Spanish class, sitting by himself. Janie had always thought he was cute and whispered to Suzie that she wanted them to sit with him. Suzie easily agreed and they moved to the table Andy was at. Upon stopping next to it, Janie asked Andy if they could join him. He looked up shocked that a girl was asking to sit with him and when he saw first the speaker Janie and then Suzie, his jaw dropped. He glanced at them both up and down quickly, then caught himself and stuttered something about they could sit down if they wanted. \n\nJanie, being the cheery personality she was, immediately started to talking to him about Spanish class. It seemed to break the ice for Andy and he was soon adding to the conversation. He was comfortable talking to Janie, but cast frequent guarded looks at Suzie. She was such a beautiful blonde blued vision he couldn't keep his eyes off her for long. Like a moth to the light, he was drawn in her direction constantly. Janie didn't seem to notice or if she did, she didn't let it show as her conversation with either Andy or to Suzie continued nonstop. \n\nAfter they finished eating lunch, Janie and Suzie got up to leave. They said goodbye to Andy and it was nice sitting with him. \n\nAs they turned to go, Andy blurted out to Janie, \"Would ya like to see my new car.\"\n\nJanie and Suzie weren't sure, they didn't want to be late for class and the parking lot was a good walk. \n\nAndy said, \"He had parked on the street to avoid getting dinged in the parking lot and his car was just outside the lunchroom hall door. \n\nSuzie said, \"You two go, I should get to class.\"\n\nBut Andy said, \"It would only take a minute and wouldn't she come too. They both agreed and followed him out the door. He was talking a mile a minute about the car. It was a new Camaro his parents had given him as an early graduate gift and for being accepted to Colgate. Andy walked them to the car talking constantly and looking back and forth between them. Suzie could feel the cooler air making her nipples erect again. Andy sure noticed too as she caught him glancing at her tits several times. He showed them the car. It was a beautiful metallic blue with chrome mag wheels. He opened the car for them and insisted they try out the seats to look at the dash. Andy helped Janie get in the passenger door and Suzie slid into the back. Janie could feel his eyes on her great legs as she swiveled in the seat. He got in the drivers side and started the engine. The car roared alive and he cranked up the stereo for them. \n\n\"What do you think,\" Andy asked them both?\n\n\"It's a great car,\" they chimed together. \n\n\"It's a real beauty,\" Janie said. \"I love the interior and it sounds hot.\"\n\nAndy went into more details about the engine, horse power, and transmission and was about to start in on other aspects of the car when Suzie announced she better get to class. Janie said she would stay a minute longer with Andy as her class was close. So Suzie departed and made the quick walk back to school. As she reentered the school, it was obvious every boy was checking out her nipples as she walked to class. \n\nSuzie finished classes and then went to Drama Club. The final auditions for Juliet were taking place today. It was down to her and two other girls. Mrs. Wood had them each audition for her by reading the same four sets of lines each from different parts of the play. Suzie went second and thought she nailed it. She had found it curious though that several times she thought she saw Mrs. Wood staring at her breasts. She was sure her nipples had relaxed again and were not nearly as obvious as when she had come in from outside. So why would Mrs. Wood be staring at her breasts? She let the thought drop as it would soon be time to meet Curt. Mrs. Wood announced at the end that she would be posting all parts on the fine arts bulletin board the next day. \n\nSuzie grabbed her book bag and hurried to the parking lot. Curt was sitting in the Torino when she got there. She still liked his car the best, even if it was a classic versus a new car. She got in, fastened her seatbelt and spun to face him. He was smiling at her. \n\n\"Did ya have to wait long,\" she asked?\n\n\"No, besides I'd wait for you forever,\" he stated.\n\n\"Wow, that's a nice thing to say,\" Suzie said.\n\n\"Hey, don't look now but your headlights are on again,\" he mused.\n\nSuzie laughed with him and said, \"Those dare things have been doing that all day\" she joked. \"I hope they go down before my dad sees them.\"\n\n\"Me too,\" Curt said. \"I might not be able to see them again soon if he does.\"\n\n\"You and half the boys in school,\" she laughed.\n\n\"Those guys ought to be thanking me,\" Curt kidded.\n\n\"Hey, guess what,\" Suzie said. \"Both Sean and Brian talked to me today. Sean even walked with me to class a bit.\"\n\n\"Wow, that's progress,\" he said. \"And already, what a good teacher I am. You must be thrilled. You are getting exactly what you wanted. Maybe, he'll ask you to the prom like you wanted?\"\n\nSuzie's surprised and long face disarmed Curt. \"What'd I say? Ya want him to ask you to the prom don't you,\" he asked?\n\n\"Well, that would be nice but I was rather hoping someone else would ask me,\" she said.\n\n\"Oh, you really want Brian after all,\" Curt thought out loud.\n\n\"No not him either,\" Suzie said.\n\n\"But who,\" Curt asked? \n\n\"Oh, never mind,\" she said. \n\n\"You're not going to tell me,\" he asked?\n\n\"You'll know at some point,\" she said.\n\nThey had left the parking lot and were most of the way home. Suzie told Curt about the announcements of the leads tomorrow and to keep his fingers crossed for her. He promised he would. He dropped her at her house to change. He waited in the car as he was already in sweats. Suzie ran in the door, dropped her book bag and rushed up the stairs to her room. She pulled out her workout clothes and proceeded to change. \n\nSuzie's mom, having heard her come in, asked if they could talk. Suzie told her through the door she was changing for her workout with Curt. Her mother said okay, they would talk after dinner. Suzie asked what time dinner would be. Her mother said around 6:30 as her dad would be a little late. Suzie finished dressing and hurried out of the house. \n\nCurt and Suzie drove to the Jr. High which was pretty empty this late. At 4:30 only a few holdovers from the school day and some local kids were at the school. Curt and Suzie pretty much had the track to themselves. They went through the same basic workout that was becoming their custom. Suzie was still pretty tuckered after the second quarter mile of running. So she sat on the infield while Curt ran a third mile. They were done by 5:30 and walked back to the car. \n\nAs they got in the car, Curt asked if she wanted to go home right away. Suzie told him she had about an hour before dinner, so she could stay a little while. He asked if she wanted to go to the cabana and maybe even take a quick dip in the hot tub. The hot tub sounded delightful to her. They parked at Curt's house and went round back to the cabana. They found their suits were they left them Sunday hanging in the shower. \n\nCurt said, \"You can change in the bathroom and I'll change in the outer room.\"\n\n\"Why,\" Suzie said. \"You've seen all of me before. We don't need to be modest around each other anymore.\"\n\n\"Okay, that suits me fine\" he said. \"Just don't hold me responsible for any reaction you might get from Cyclops.\" \n\n\"Oh, seeing me naked might appeal to Cyclops,\" Suzie joked.\n\n\"No maybe about it,\" Curt said. \"He knows when to salute beauty.\"\n\n\"That's so sweet of him and you,\" she said. \"For being such a great admirer, I might have to give him some special kisses,\" Suzie smiled.\n\n\"He's a big fan of your special kisses\" Curt joked back as he removed his sweat shirt and t-shirt. Suzie gazed upon his chest as it came into view. His muscled torso looked rock hard. She wanted to run to him and touch his muscles.\n\n\"Hey, no fair just watching me,\" he said as his sweat pants fell to the floor. \n\n\"Sorry. I was just admiring how great you look,\" she said. \n\nSuzie peeled her sweat shirt over her head revealing a sports bra Curt had bought her. Then she dropped the sweat pants to the floor as well. She was stripping like she might for strip poker. Her sneakers and socks came next so she was down to her panties and bra. Suzie could see the budge in Curt's boxers, normally large anyway, grow even bigger. Before it got to big he pulled the boxers to the floor. \n\nSuzie loved to look at Cyclops. She loved him hard or soft and even semi-hard like now. The impulse to close the short distance between them and grab Cyclops was near irresistible. Not to be outdone, Suzie pulled the large straps from her shoulders and then raised the sports bra over her head. As she brought her arms back down to drop the sports bra on the floor, her large firm breasts jiggled seductively. Curt's dick gave a noticeable bounce and swelled to greater thickness. Cyclops nearly had his eye looking at Suzie now. \n\n\"I don't know if this undressing together is a good idea,\" Curt said. \"After not seeing you for two days, Cyclops is really glad to now. So happy in fact, I'm not sure I can convince him to calmly go into my swim trucks.\"\n\nSuzie pulled down her panties and let them fall to the floor. That was all it took and Cyclops seemed to bolt upright to stare. \n\n\"He does seem to want to look at me,\" Suzie laughed.\n\n\"He's way beyond just looking my dear. He wants to become one with you,\" Curt smiled back. \n\n\"I bet he'd like to meet Ms. Pussy,\" Suzie joked as she parted her legs a bit and reached down to spread her cunt lips a little. \n\n\"Boy would he ever,\" Curt said!\n\n\"Well, Ms. Pussy is a big tease,\" Suzie said. \"She needs to stay away from Cyclops but I would sure like to give him some of my special kisses,\" she added.\n\n\"Cyclops is all ready for that,\" Curt said. \"However he could use a shower first. How about we skip the hot tub and take a shower together?\"\n\n\"That's fine with me. I could use one too after that workout,\" Suzie said.\n\nCurt set the swimsuits aside and started the shower. As they waited for the water to get hot, Suzie leaned in for a kiss. It was hard to kiss straight on as Curt's dick acted like a spacer bar keeping them apart. She pressed herself to him at the hip. She ran her hands over his chest and arms. He felt so powerful it made her swoon a bit to think about those arms holding her tight and safe. \n\nSuzie stood on tiptoes as she wrapped her arms around his shoulders and neck and he bent to envelop her in his arms and kiss her. It was a deep wet kiss and she purposefully ground her aching nipples into his chest. Their tongues danced together as she let a hand drop to his hip. It was only a brief pause and then her hand closed around his cock. It felt like a steel girder to her. It was so stiff, the thought of it sawing into her pussy made her groan into his mouth. They broke the kiss and Curt moved to open the shower door. \n\nThe water was hot and they moved inside and shut the door. They each took turns under the water spray getting wet. Curt's hands were all over her nipples while she wet her hair. They jiggled around as she moved her arms to soak her hair. Curt had fun watch them and playing with them as she did. Suzie enjoyed the treatment to her breasts and the action to her nipples was having an effect on her pussy. \n\nAs Curt got wet, Suzie put soap on her hands and washed Cyclops. She was careful to avoid his eye as she washed his head and shaft. She paid a fair amount of attention to Curt's balls as well. With her hand all soapy, she loved the way they seemed to try and escape capture but never could. She rolled them in her hands and tickled them with her nails. When they were fully wet, they took turns soaping each other up and doing their hair. After about ten minutes they were squeaky clean. Suzie had Cyclops in hand as Curt said to her how should we do this.\n\n\"You're the teacher,\" Suzie joked.\n\n\"Well there is no seat in here and the floor is pretty hard for kneeling,\" he said. \"I could lift you up and flip you around into a 69 but your feet would probably hit the ceiling. Why don't we dry off and get comfortable in the other room.\"\n\n\"That sounds fine to me,\" Suzie said. \"But I'm sort of sorry we could not try that 69 move. It sounded interesting.\"\n\n\"Maybe we still can,\" he responded.\n\nThey both exited the shower and dried off with the same towels from Sunday. They exited the bathroom and it was still a little cool in the main room. \n\nCurt said, \"You ready?\"\n\n\"What,\" Suzie started to say as he twisted down and grabbed her waist. \n\nCurt's strong arms easily lifted and flipped her around. When she was done spinning, she found herself with Cyclops touching her cheek. She just cleared her head from the spin when Curt wiggled his tongue into her cunt. Oh my God she thought he can eat me standing up like this. She moaned at the wonderful feeling he was generating in her. It was like he was scratching an itch but instead of calming, it kept building bigger and more intense. Not to be totally outdone, Suzie moved her arms around to grab Cyclops. She was not sure how long she could hang upside down without passing out but she guessed she might find out. \n\nSuzie licked the head of Curt's dick and stuck her tongue into his hole. She would have liked to go slow but this wasn't the position for it. She sucked his head into her mouth and laved it with her tongue. Curt groaned into her pussy and she was rewarded with a sweet taste of pre-cum. They both worked each other with a sense of urgency they had not had before. After about five minute though, Suzie was starting to see stars and really wanted to get back to earth. Curt sensed this and asked if she wanted to move to the couch. She quickly agreed and he walked them there with her still upside down. He lowered her down a bit and then unceremoniously dropped her to the cushions below. She bounced briefly on the cushions and he laughed. \n\n\"Funny,\" she scolded.\n\nBut he just continued to chuckle as he swung up on top of her. He moved his dick back in line with her mouth and his to her pussy. The last time they had 69ed it had been with her on top. She wasn't sure she liked this position much until he spread her legs wide and drove his tongue deep into her cunt. She nearly came on the first plunge. The groan that escaped her lips was deep and primal. \n\nNot to be outdone, she engulfed Cyclops and immediately took him into the back of her mouth. The head of Curt's dick wedged into her throat. For a second she thought he might lower his hips in this position and drive the head into her throat. She panicked a bit but Curt never lowered his hips. \n\nSuzie didn't like this position as much. She knew her neck would soon tire as it bobbed up and down on his cock. Those thoughts left her though as Curt began to attack her clit with his tongue. She climbed her orgasmic ladder quickly as his tongue teased her button. Within a minute she was shuttering to a wonderful orgasm. It radiated out of her pussy and moved like a wave across her body to her brain. She had to spit out Curt's dick to keep from choking. \n\nSuzie had tried to clamp her legs around his head and pull him in. But in this position Curt's strong arms held her legs open so he could continue to lap nonstop on her pussy. \n\nSuzie was barely coming down from the first orgasm when it started again. Curt was sucking on her clit and licking his tongue viciously over the tender bud. She still had not resumed sucking him as a second more intense orgasm burst in her brain. She arched her back as hard as she could with him above her and fought off a scream. The resulting sound was like a loud muffled wheeze in her throat. Her nails dug into his back most likely drawing blood. She turned her head to the side to keep from choking on her own saliva. \n\nAs her orgasm faded, she felt Curt pull off her clit and dive into her pussy. He licked her hard and deep sucking out her juice. She went back to licking his dick but still needed to gather back strength to resume much of an attack on him. Suzie tried pushing on his chest with her arms to signal she wanted to get up. Curt got the hint and shifted off her to kneel on the floor by her head. Suzie looked at him and once again he was wet completely on the lower half of his face. He leaned in and kissed her.\n\n\"Did you like that,\" he asked?\n\n\"Oh God yes,\" Suzie said. \"It felt so good I could have died and not cared.\"\n\n\"That's good, I like giving you pleasure but I think my back paid the price,\" he joked.\n\n\"Oh Curt, I'm so sorry. I couldn't help myself. You drove me out of my mind. Let me make it up to you please,\" she asked? \"What time is it?\"\n\n\"It's 6:15,\" he said.\n\n\"Okay, I've about 15 minutes, sit on the couch,\" she said as she spun off to the floor.\n\nCurt sat down on the couch and Suzie immediately came between his legs. She pushed his dick up onto his tight abs and proceeded to suck and lick his balls. Curt was soon groaning from the extreme pleasure to his nuts. Suzie then slid her mouth along his cock licking as she went. As she got to the spot just below the head where all dicks are the most sensitive, she sucked and licked back and forth on this spot. \n\nFor his part Curt had his head hanging back on the couch and all he could do was moan through his wide open mouth. Suzie's hands played with his balls and ran up and down the underside of his shaft. This attack lasted a good minute or two and Curt was starting to shake and his nuts were tightening signaling his impending release. He had been so wound up with the two day break and now seeing Suzie's hot body that he knew he would cum soon. He felt like he was nearly there when Suzie pulled off his dick and balls entirely. He eased down from his peak and looked down at Suzie. She was smiling at him.\n\n\"What,\" he said. \"I was almost there. Why did you stop?\"",
        "\"I saw that girl in the porn movie the other day work that one guy up to his peak only to stop just before the end. He seemed to like it so I thought I would try it on you,\" she said.\n\n\"You naughty nasty girl,\" Curt said with a smile. \"Do you know that drives a guy crazy? You can give him what is called blue balls by not allowing him to cum. However, if you do it several times and then bring the guy off, it can be even more intense than just a normal cum.\"\n\nSuzie smiled and picked up his dick off his belly. There was a huge drop of pre-cum in the eye and she licked if off. Suzie realized she loved pre-cum. She loved its sweet and sour taste and the way it made her tongue slick. Suzie bathed Curt's dick head in her mouth and resumed playing with his balls and shaft. \n\nSoon Suzie sucked the head in and licked it furiously. Curt was groaning again as she took the full head into her mouth. She sucked for a minute and then started bobbing. She started slow but picked up speed constantly until she could feel his balls tightening in her hand. Curt was nearly there and she stopped again. \n\n\"Oh you bitch,\" he said. As he looked down and frowned at her. Suzie was smiling back at him. \n\nCurt started to say you wait but before he could get it all out, she dove back down on him to the back of her mouth. She swallowed repeatedly and tried to swallow the head. She managed to get the head into her throat without gagging but the reflex grew too strong and she had to back off. Undeterred, Suzie dove back down achieving the same result. She was able to hold it a moment longer but did have to pull off again. \n\nCurt was groaning and watching her instead of leaning back. Suzie looked up with her gorgeous blue eyes teary from the effort. She began a fast paced bob on his cock. Her mouth was making suction noises as the head repeatedly rammed the back of her mouth and then pulled back. She popped the dick in her mouth a couple times and Curt bucked on the couch. She rolled a ball between her fingers and stroked his dick up and down with her hand along with her mouth. \n\nSuzie felt Curt's dick head expand in her mouth and knew he was there. The thought rushed to her head, I need to be ready for this. What if it is more than usual? I can barely handle his load normally. If what he says is true and he cums more, I won't be able to handle it. That was the last clear thought she remembers for about a minute. \n\nCurt's cock exploded in her mouth like a cannon. She remembered enough from before to try and swallow but even as she did she could feel the corners of her mouth lose seal and allow two rivers of cum to escape. The second explosion closely followed the first and was more than a mouthful. It threatened to go up her nose and destroyed whatever seal she had tried to maintain with her lips to his head. An all out gush of cum escaped her lips before she could swallow again and reseal her lips. \n\nThe third load was huge but she managed to swallow it down in time to catch the fourth. Normally small, it to flooded her mouth and she fought to swallow to contain it. Only with the fifth ejaculation did she notice a considerable decline in volume. She caught that and the next two small ones in her mouth. Curt had grabbed her wrist that was stroking his dick and held it in a death grip as he groaned deeply through his orgasm. \n\nSuzie soon realized he was cutting off the circulation to her hand. She tried to pull back but to no avail until he realized his grip and let go. Curt eventually opened his eyes and looked at Suzie. She was looking back at him with her mouth closed but with large strands of cum stringing from the corners of her mouth and hanging off her chin. Large drops were all over the base of his dick and his balls. \n\nCurt looked at Suzie again. She reminded him of a porn star with cum all over her face. As he looked at her, she opened her mouth to reveal a mouth full of cum. She pushed it around with her tongue as if showing him her prize. As he stared with burning intensity, she tried to smile but fought hard to avoid losing any of her reward. She closed her mouth and noticeably swallowed the mouth full of his cum. When it was gone to her tummy with the rest, she opened her mouth to show him what a good swallow girl she was. \n\nAs Curt looked on speechless, she bent down and started to lick up his cock and balls for the escaped cum. She worked in his public hair to gather all she could and clean him. He was wet with her spit when she was done but no more cum was visible anywhere. \n\n\"Wow, you're incredible,\" he said. \"That had to be the best head I've ever had and may ever have,\" he added. \"You are the best.\"\n\n\"Thanks,\" she said. \"You are really good yourself. I was just returning the favor.\n\n\"Well ya did and then some,\" he said.\n\nCurt glanced at the clock. It was 6:45. He told Suzie and they hurried to straighten up. Suzie washed her face in the bathroom sink. She dressed quickly as did Curt. They left the cabana as is for he said he would come back and straighten up. He walked her to her house and gave her another breath mint. \n\n\"Thanks,\" she said. \"You're a life saver, no pun intended with these mints,\" she laughed.\n\nCurt looked into her eyes. \"You're the best,\" he said very seriously as he kissed her.\n\nThey kissed passionately for a long minute but broke realizing they were already late. Curt told her he would pick Janie and her up again tomorrow and they parted. He watched as she entered the house and waved goodbye. \n\nShe was just in time for dinner. Within five minutes of her entering the house they were all sitting at the table eating. Beth said something about it being nice it was light later now with daylight savings time. Everyone agreed. \n\nThe conversation went fine until her dad once again brought up when were they going to discuss her clothes. The dinner turned ugly quick with Suzie and her dad on opposite sides of the issue. Suzie had Beth on her side which helped make it more a family problem than just Suzie's. For that she was thankful to Beth. Her mom seemed to be caught in the middle. She clearly sided with Suzie on her need to fit in and look good but jumped to her husband's side when it came to the nature of the clothing. \n\nHer parents were opposed to her showing to much skin especially on top. After a lot of fighting back and forth and eventually her mother coming to her aid, she was allowed to wear most of the new clothes. However, under no circumstances was she to wear those low cut blouses to school. Everything else was approved but very reluctantly on her father's part. He also wanted to do more investigation of what the other kids were wearing before allowing a final opinion to be cast. Her mom had surprised Suzie by being more supportive than she expected. Her dad was not pleased, but he was overruled by the majority of three. Really it was her mom that held the critical vote. \n\nSuzie helped with the dishes and putting things away. Her dad retired to the family room in a less than pleasant mood. Beth excused herself for homework. After they both left, it gave Suzie a chance to talk to her mom.\n\n\"Mom, thanks for being so understanding and supportive,\" Suzie said.\n\n\"Well Suzie, I must admit I agree more with your father than I may have showed. I will probably catch heat for this for a while yet, but I felt you needed my support. I have watched you these last two weeks and I can see you are much happier than before. We had not talked about it but I knew not having dates and maybe not being asked to the prom were weighing heavy on your mind. You seem much happier now that you are seeing Curt,\" she said.\n\n\"Well, we're not officially going steady or anything like that. I'm just spending time with him as he helps me with my workout training. It has however, lead to some great times together with him,\" she stated. \"Curt is great fun and I enjoy his company. I think he enjoys mine too. I guess we have always gotten along since we were kids.\"\n\n\"Suzie, are all the new clothes a way to look more appealing to the guys at school,\" her mom asked? \"And why is Curt buying you things?\"\n\n\"Well, to be honest mom, I told Curt how depressed I was about my lack of interest from boys. He told me I needed to dress more with it, and he was right. He offered to help me buy some of the things. He had money saved from his summer job and with his full scholarship to college has a bit more leeway to spend some. I offered many times to pay more but he insisted,\" Suzie said.\n\n\"That sure was sweet of him to do but he should still save his money for himself,\" her mom said. \"What do you mean Curt was right,\" she asked?\n\n\"Well, I've noticed a change since I've been wearing my new clothes. A lot more of the kids are talking to me and many of the cuter boys are saying things too,\" she said.\n\n\"Suzie, just remember this. There is a fine line between being sexy and being slutty. It's okay to be a little sexier, though I'm not sure high school is the right place to start, but you don't want to be trashy. Do you understand me,\" she asked?\n\n\"Yes, mom I do,\" Suzie said. \"I will be careful.\"\n\n\"Well, I'm glad we had this talk together Suzie. Please remember what I said the other day too about being a good girl. You only have one reputation you know. So make the best of it,\" she said.\n\n\"I will mom,\" Suzie responded.\n\n\"Suzie, why was your hair wet went you got home,\" her mom asked?\n\n\"Curt asked me if I wanted to go in the hot tub after our workout,\" she said. \"It felt great too so I'm glad he invited me.\"\n\n\"Where's your swim suit,\" her mom asked?\n\n\"I bought a new one the other day and had it at Curt's cabana,\" she said.\n\n\"Okay, but be careful dear,\" her mom added.\n\n\"Thanks again for your support mom. It means a lot to me. I'm happier by far now than I was two weeks ago,\" she added.\n\nSuzie finished up with her mom, kissed her good night, and went up to her room. She poked her head in Beth's room to thank her too for her support. Beth said anytime. Suzie asked here if her date was on for this Friday still and she said it was. Suzie told her okay and left as she had homework to do yet. \n\nSuzie peeled off her sweats and put on her pajamas. She brushed her hair and her teeth. She laughed to herself while brushing her teeth as all the white suds filled her mouth. I don't think I'll swallow this stuff she joked to herself. She curled up on her bed with her books but could not bring her mind to her work. Instead she figured she would call Janie and then maybe she could study afterwards. \n\nJanie picked up on the first ring.\n\n\"Where have you been,\" she said. \"I've been waiting for your call since 5:00.\"\n\n\"Hello to you too,\" Suzie quipped back. \"Curt and I went to use the hot tub after our workout,\" she said.\n\n\"Oh, lucky you hooking up with a guy with his own hot tub. Did he make a move on you in the hot tub,\" Janie asked? \n\n\"Not exactly,\" Suzie joked.\n\n\"What then,\" Janie shot back.\n\n\"He put a move on me as we were getting changed and we ended up in the shower together instead of the hot tub,\" Suzie revealed.\n\n\"My God,\" Janie yelled into the phone. \"What did you do,\" she asked?\n\nSuzie told her the whole story. Janie only interrupted a few times and mostly just to groan or say how hot that sounded. At one point she joked you have me so horny, I am going to need my special toy to do me tonight. Also how Janie wasn't luck to have a guy to take care of her like Suzie had. Especially, a hunk like Curt. She wanted to hear again the part about being held upside down. \n\nWhen Suzie had finally finished retelling that part, she remembered to ask Janie what happened after she left her with Andy in the Camaro. Was she okay with him alone in the Camaro? Janie said they only stayed another minute but it was fun. Janie thought Andy was cute and even though he got overly excited about his car. He had calmed down when they walked back into the school and seemed really quite nice. \n\nSuzie then told Janie about the dinner conversation over clothes and that she could not wear the low cut blouses anymore but everything else was okay for now. Janie asked if it was okay to refer her parents to Suzie's mom if they ever got on her case and Suzie agreed. \n\nSuzie asked Janie what she and Curt had been talking about while waiting for her in the morning. Janie told her mostly about trying to find her some nice boy too. Curt also asked if you were having fun with the training and I said yes. Janie and Suzie talked a little longer but Suzie really needed to get some homework in before bed so they said goodbyes and that they would see each other in the morning. Suzie did about an hours worth of homework but then started dozing off so she packed everything up and went to bed.\n\nIn the morning Suzie got ready for school. She decided since today was the announcements for the play, she would dress up a bit in the hopes she got the lead. So she picked out one of the two new short dresses and heels. She hurried to get something to eat before Curt arrived. Because of the argument over dinner, she had only picked at her food and now she was starved. The good news however, was she was down nearly five pounds already and feeling good about herself. Even the dress, which had been really to tight when they bought it, fit somewhat better. Fortunately for Suzie, her dad had left early for a business breakfast and so only her mom greeted her in the kitchen.\n\n\"Don't you look lovely today,\" her mom said.\n\n\"Thanks mom. I forgot to tell ya they are announcing the leads in the play today. I'm really hoping I get Juliet,\" she said.\n\n\"Oh, I hope you do sweetie. That's one of my favorite plays and if you are the lead I'll just have to drag your father to see it too,\" she said.\n\n\"He's not much into plays is he? I guess he probably wanted boys not girls,\" Suzie said.\n\n\"He loves you girls you know that but I think he'd have liked a son too,\" she admitted.\n\n\"Mom, Janie's mom might call you. She has some new clothes too. I think you even told me you thought she needed to wear better clothes. Anyway, they might call you to check things out on that,\" Suzie said.\n\n\"Okay dear,\" her mom said. \"Will you be working out again today after drama?\"\n\n\"Yes, everyday from now on or at least until Curt gets tired of training me,\" she smiled.\n\n\"Fine, dinner will probably be around 6:30 again,\" she said.\n\n\"Okay, bye mom,\" Suzie said.\n\n\"Have a great day sweetie and good luck with the lead,\" her mom called to her.\n\nSuzie grabbed her light jacket and book bag and headed out the door. She walked around the front but no one was there. As she reached the curb, Janie called to her from two houses down as she walked up. Janie had just reached her when they spotted the Torino backing out of Curt's garage a couple houses down. \n\n\"Hi Janie,\" Suzie said.\n\n\"Hi Suzie, hey you don't mind me riding with Curt and you do ya?\" Janie asked?\n\n\"No, why would ya say that,\" Suzie asked?\n\n\"Well, I sort of feel like the third wheel,\" Janie said. \"Probably Curt and You would rather be alone.\"\n\n\"Don't be ridiculous. First of all you're my best friend. Secondly, Curt and I aren't even officially going together. And lastly, I wouldn't want to see you back on that bus alone anyway. So shut up,\" she joked.\n\n\"Okay, thanks,\" Janie said. \"You're right I'd hate to be on the bus alone.\"\n\nCurt pulled up and they got in.\n\n\"Every guys dream to pull to a stop and have two beautiful ladies get into his car,\" he smiled.\n\n\"Such a smooth talker but thanks,\" Janie yelled from the back seat.\n\nSuzie shifted in her seat to look at him and agreed with Janie, he was a smooth talker. They all laughed together and headed off to school. \n\nMost of the talk was small talk about the chance of rain later but both Curt and Janie remembered to wish Suzie luck on the play. They parked in the school lot and walked into school together. Before he left for his locker Curt commented on how great she looked in her new dress. Suzie thanked him as he left. \n\nSuzie thought Janie looked good in her tight jeans, heels, and a low cut blouse they bought together. So she told Janie so before they said their goodbyes. The morning was busy, so it was just before lunch when Suzie had time to swing by the fine arts bulletin board. \n\nSuzie spotted the list of parts for Romeo and Juliet. Hers was the second name on the list. Right after Justin Williams as Romeo was Susannah Johnson as Juliet. She yelled out \"yes\" and got some odd looks from people passing by. She did not care she was so happy. \n\nSuzie hurried to lunch to find Janie. When she spotted her walking toward the cafeteria she ran to her to tell her the good news. Janie was thrilled for her and they hugged right there in the middle of the hall getting looks from everyone. When they finally settled down, they got in line for food. When they had their trays and paid, they looked for a table in their usual spot. Janie though noticed Andy again sitting at the same table as the previous day. He was looking at them exiting the caf\u00e9 food line. \n\n\"Suzie, okay if we sit with Andy again,\" Janie asked?\n\n\"If ya want to sure,\" Suzie said.\n\nThey walked over to his table and asked if they could join him. He said of course so they sat down. Janie was right across from Andy and Suzie to her side. \n\n\"How're you doing Andy,\" Janie asked?\n\n\"Fine,\" he replied.\n\nSuzie has some excellent news. She was just picked for the lead of Juliet in the school play of Romeo and Juliet,\" Janie said.\n\n\"Wow, that is great,\" said Andy.\n\n\"Thanks,\" Suzie said. \"I wasn't sure I would get it as several other girls were trying for the part too. I did think I did well in the reading yesterday though.\"\n\n\"I'm sure you'll be the best ever,\" Janie said. \n\n\"Yeah, I bet you will too,\" Andy agreed.\n\n\"Thanks, I hope so,\" Suzie said.\n\nThey talked about school and a few things when Andy's car came up again. He asked if they wanted a ride. Suzie said she had drama after school and then would be meeting Curt Clayton. Janie said she had soccer but was free after that. Andy had swimming but could hurry and do his laps quick. He asked Janie what time she was done. Usually around 4:00 or 4:15 she told him. He would wait for her in the parking lot and drive her home. \n\nThey talked a bit more as they ate and then parted for afternoon classes. The rest of the day was a blur to Suzie. People kept coming up to her that were in drama or had heard and they congratulated her on getting the part. She heard Amy, one of the other girls up for the part, was really pissed she did not get it. \n\nIn between thanking people, she had time in several classes to think about the play. She had known Justin, the lead for Romeo, for several years. At one time she had thought he was cute but he never paid her much attention. He and Amy however, were closer and probably hoped they would get both parts together. Suzie hoped that they could work together but also felt uneasy about kissing him. These thoughts stayed with her till Drama Club. \n\nMrs. Wood handed out lines and broke the troupe into groups to study lines. She explained to them how the preparation for the play would commence and when opening day was. She studied lines with Justin and a few more of the key roles. Amy had an important part and was in their group. Suzie noticed her looking in her direction with a scowl a couple times. Amy had not congratulated her and Suzie thought that was small of her. She would have congratulated whoever won the part. \n\nAt one point too, she thought she noticed Mrs. Wood staring at her. After rehearsal was over, she hurried to the parking lot to find Curt. He was waiting for her by the Torino. She had not seen him all day and he rushed to her as she approached. Congratulations he yelled when they were still ten feet apart and hugged her as she came into his arms. He kissed her and she thought this is the best congratulations of the day. They both got in the car and drove out of the parking lot. As they were leaving, Suzie noticed Andy waiting by his blue Camaro for Janie. ",
        "She asked, \"Curt do you know Andy.\"\n\nCurt looked to see who she was talking about. He said, \"Yes, that is Andy Glenn from his math class.\"\n\nSuzie asked, \"Is he an okay kid?\" \n\nCurt said, \"Yes. He's on the swim team too. He asked \"Why do you want to know?\"\n\nShe told him, \"Janie and I have been sitting with him at lunch. He was waiting for Janie to give her a ride home.\"\n\n\"Oh,\" Curt said. \"Does that mean Janie doesn't need my help getting a date?\"\n\n\"To early to tell yet but she does think he's cute, so we'll see,\" Suzie said.\n\nThey talked the rest of the drive home about the play and his lifting. He waited for Suzie to change and they drove off to the Jr. High. The workout was similar to the others and they finished in about an hour. On the ride back, Curt asked if she wanted to go home right away. Suzie said her dinner was going to be 6:30 again, so she was okay till then. He asked if she had anything she would like to do. Suzie said no but she was too sweaty to go anywhere nice. He asked if she wanted to try for the hot tub again and she agreed. They drove to Curt's house and went to the cabana.\n\n\"This time you better dress in the bathroom and me out here,\" he said as they entered.\n\n\"I guess you're right,\" Suzie laughed.\n\nShe went into the bathroom, handed him his trunks, and shut the door. She stripped down and put the bikini on. The swim suit was still very tight even after losing five pounds. She thought it must have shrunk a little the first time it got wet.\n\nSuzie exited the bathroom and Curt had a robe laying out for her. She put it on and went to the door. He was already outside removing the cover and adjusting the heat. As she caught up to him at the hot tub, he turned to greet her. Everything is ready, you can step in he said. They both removed their robes and got in as he turned the jets on. They sat side by side with their backs to his house. The hot water and soothing jets relaxed Suzie and she sighed with content. Curt too was enjoying the warmth and comfort of the hot tub. Suzie turned sideways to look at him. Curt turned his head to face her. She ran her fingers to the back of his neck just like he taught her in the car. \n\n\"Curt are you happy spending so much time with me,\" Suzie asked? \"I mean on my training and all?\" \n\n\"Sure,\" he said. \"You're great company. Why what do you mean,\" he asked?\n\n\"Well, I don't know. I just wanted to make sure you didn't feel I was dominating your time or anything,\" she said.\n\n\"No, I've had great fun training you. And the sex isn't bad either,\" he joked.\n\n\"Okay, well tell me if ya need more space or anything. Like when we are done working out we don't always have to do something afterwards. You can just drop me off if ya want to do homework or have other plans,\" she said.\n\n\"Okay but the same is true for you if you have homework or want to go shopping with Janie or anything,\" he stated.\n\n\"Alright then. I just wanted to mention it,\" she said.\n\nA long silence followed. Suzie continued to play with his hair as he shut his eyes with his head facing forward. Suzie thought to herself, you fool, way to bring everyone down. Did you really have to say that now? \n\nSuzie leaned forward and kissed his cheek lightly causing him to open his eyes and turn to face her. They stared at each other for a few seconds but then Curt leaned over sideways into her lap and kissed her on the lips. She kissed him back and pretty soon they had a good tongue war going on for space in each others mouth. When they finally broke the kiss both were panting a bit. \n\nCurt went to sit back up but Suzie caught him and pulled him around so his head was on her breasts and his shoulders in her lap. He had his legs up on the sit on the other side. Suzie stroked his head as she held it against her tits. Curt cocked his head back and they could kiss upside down in this position. They lay like this for a while and kissed but then Curt broke free and swiveled around to face her. \n\n\"Suzie, you're wonderful,\" he said. \"I never realized how much we're alike and liked the same things.\"\n\n\"Me either,\" Suzie said.\n\n\"And, I must admit,\" He said, \"I never noticed your beauty fully until recently. You're just fabulous. I mean just look at you in that bikini. You make my mind go numb with desire.\"\n\n\"Curt, I feel the same way,\" she said. \"Never really noticed how great you are either.\"\n\nCurt's hands came out of the water and caressed her face on either side. He was looking deep into her radiant blue eyes and seemed to be lost there for a moment. Suzie had her hands on her own legs but slid them forward onto his. She leaned forward more and they kissed very soft and tender. They continued to kiss passionately. \n\nSuzie slid her hands up under the pant legs of his swim trunks. About half way up the right leg, she hit a soft but large obstruction. Her fingers closed over the end of it. She teased the head of his penis with her fingers marveling at the soft texture. Her other hand had kept going, had reached the top of his trunks, and now sought out his balls by attacking from the other side. Soon she was massaging his balls and tickling his dick head. Curt's cock began to lengthen and thicken. \n\nFor his part, Curt's inside hand, which was partially hidden from the house by the edge of the hot tub, closed over her right breast. He kneaded the flesh and felt for the nipple. When his thumb and forefinger closed on it, he caused Suzie to moan in appreciation. It was at that moment that they heard the backdoor screen close. They both sat up and looked in the direction of the house. Curt's younger brother, an eighth grader, was walking towards them. \n\n\"Can I join you guys,\" he asked.\n\n\"No, go away,\" Curt said.\n\n\"Hey, it's my hot tub too,\" he shot back.\n\nCurt looked at Suzie and she back at him. They shifted to face into the middle of the hot tub as his little brother approached. He had a terrycloth robe on too and hung it up just before he got in. He had a swim suit much like Curt's.\n\n\"Hi Suzie,\" Chad said.\n\n\"Hi Chad, good to see you again,\" Suzie added smiling.\n\n\"Don't you have homework or something,\" Curt said.\n\n\"I did mine already, that is probably more than I can say for you,\" Chad shot back.\n\nTo keep the peace Suzie thought she better intervene.\n\n\"How is eighth grade Chad,\" she said.\n\n\"Oh, it is okay,\" he said. \"But I can't wait to get to high school in the fall.\"\n\n\"Are you planning on playing any sports like big brother here,\" she said smiling at Curt.\n\n\"Probably baseball,\" Chad said. He was more slightly built than Curt. Not quite as tall and much leaner. \n\n\"That's a nice sport, I like baseball,\" she said. But she quickly added \"Almost as much as football.\" She stole a glance to Curt and he was grinning at her.\n\nThey talked for a few more minutes with Chad. Suzie noticed him trying to catch looks at her boobs every chance he got. Curt must have noticed too because he suggested they get out now and move to the cabana. He jumped out and grabbed her robe. He helped Suzie put it on but she had to stand on the seat to keep from getting it wet and Chad's eyes were frozen as she moved. It was only a few seconds but the boy had enough mentally recorded for a month of wet dreams. Curt threw his robe on. Suzie said good bye to Chad. His tongue seemed tied as he stuttered to say bye too. Suzie and Curt moved quickly to the cabana. Once inside they shut the door and locked it.\n\n\"That little pain,\" Curt muttered.\n\n\"He's cute,\" Suzie said. \"He probably just wanted to see what we were up to.\"\n\n\"Yeah, he wanted to see you in that bikini is what he wanted,\" Curt stated.\n\n\"Now, now no harm done. Can't we just pick up where we left off,\" she asked?\n\n\"It's not too safe with him out there,\" Curt said. \"Besides look at the time.\"\n\nThe clock on the wall read 6:18. He was right they used up most of the time they had.\n\n\"Your right,\" Suzie said. \"But are you going to be okay? I mean is Cyclops hurting?\"\n\n\"Not the best, but he'll survive. Let's change and I'll walk ya home,\" Curt said.\n\nThey changed separately again back into their sweats. They exited the cabana and Chad was still in the hot tub. Suzie waved good bye and they left through the side yard gate into the neighbor's yard. Curt held her hand as they walked. When they got to her yard he kissed her. \n\nSuzie smiled, \"No need to give me a mint tonight.\"\n\n\"Yeah, I guess not,\" Curt grumbled.\n\n\"Hey, sweetie, I'll make it up to you, okay,\" Suzie said.\n\n\"Okay, sure,\" Curt said. \"See ya tomorrow for school.\"\n\n\"Great,\" she said and they kissed again.\n\nHe waited again for her to disappear inside. She hoped he didn't go back and kill his brother. \n\nSuzie slept intermittently that night as she kept thinking about how she left Curt frustrated. She was sexually frustrated too but declined to masturbate preferring to save her orgasms to share with Curt. \n\nEverything about Wednesday was normal except one time during the morning at school she had rounded a corner in the hall and spotted Curt ahead. He had his back up against his locker with Becca leaning in close to talk with him. Suzie stopped in her tracks to avoid being seen. She watched for a moment wishing she could hear what was being said. Then she turned and went the longer way to class to avoid passing them. \n\nAt lunch, Suzie mentioned it to Janie before they sat down with Andy. Janie told her that she had seen them talking in the afternoon on Tuesday. But Janie tried to assure Suzie it was nothing to worry about. \n\nSince they had not talked the night before, Suzie asked how Janie's ride home with Andy was. Janie said it was fun and he is a very nice boy. Janie thought he might be getting up the nerve to ask her out. She hoped so. With that they sat down with Andy for lunch. The afternoon was progressing along when Janie came rushing up to Suzie in the hall between last hours. \n\n\"Suzie, I don't want to alarm you but Mary told me she saw Curt and Becca get into the back seat of the Torino during their lunch hour,\" Janie gasped.\n\n\"What,\" Suzie said? \"Are you sure?\"\n\n\"I didn't see it Mary did but she was sure,\" Janie stated.\n\n\"Oh my God,\" Suzie said. \"It's because I left if frustrated last night,\" she whispered.\n\n\"What, why'd ya do that,\" Janie asked?\n\n\"His little brother came out to the hot tub just as we were getting into it and then we ran out of time,\" Suzie explained.\n\n\"Well, that may not have been a good maneuver because Becca, I hear, wants him back. You may have given her an opening,\" Janie lamented.\n\n\"Oh fuck Janie, you don't think so do you,\" Suzie asked fighting back tears? \n\n\"I hope not for you sake but sounds suspicious them getting into the back seat. You know they have done it there before, remember,\" Janie said.\n\n\"Yeah, I remember and the slut is all too eager to spread her legs for him too. I wonder if she is telling him she will suck his dick now to get him away from me. If that is the case, she is giving him everything he wants sexually and I'm still holding out on him with my pussy,\" Suzie cried.\n\n\"I don't want to push you to anything but ya maybe better reconsider staying a virgin if ya don't want to lose him. You may be right about her offering oral sex as a way to get him back. After all, that is supposedly what broke them up originally,\" Janie added.\n\n\"I know,\" Suzie whispered as tears welled in her eyes and one escaped and ran down her cheek. She looked around but so far everyone else seemed not to notice her crying. \n\n\"Janie, I was starting to think I might do it with him if he took me to prom. But that may never happen now,\" Suzie said as another tear trickled down her cheek. \n\n\"Suzie, you going to be okay? I have to get to class and so do you. We can talk later, okay,\" Janie asked?\n\n\"Yeah, I guess so, see ya later and thanks for telling me,\" she whispered.\n\nThe rest of the day, Suzie went through the motions but her heart and mind were clearly elsewhere which wasn't good at rehearsal. It was clearer than ever to her now what her feelings for Curt were and she would need to fight to get him back. Those were her thoughts as she walked to the parking lot and the Torino.\n\nSuzie got into the Torino and fastened her seat belt as Curt left the parking lot. They said hellos as she swiveled in her seat to face him and moved her left hand to the nape of his neck. She caressed him and leaned across to kiss his cheek. An evil thought entered her head. She snaked her right hand to his lap. She would try to gauge if he had fucked Becca by seeing how interested he was in sex now. \n\nSuzie thought he should be very horny from last night and if he isn't it must be because he got to shoot off in Becca. As her hand closed on the flaccid bulge of his cock, she squeezed softly. She slid her hand back and forth massaging his dick as she went. When she lightly squeezed the head he spoke.\n\n\"Hey, this isn't a good idea if we are going to work out. Let's save it for later,\" Curt said.\n\n\"Oh, but I want to make up for not taking care of you last night,\" Suzie said.\n\n\"That's okay,\" Curt said. \"I can survive until later.\"\n\n\"I bet you can,\" Suzie shot back.\n\n\"What does that mean,\" Curt questioned?\n\n\"Oh nothing, just I heard about you,\" Suzie stated.\n\n\"What did ya hear,\" He asked quizzically?\n\n\"You know, do I have to say it,\" Suzie scolded.\n\n\"I'm not sure what... oh, does this have to do with Becca,\" he asked?\n\n\"You know it does,\" She said.\n\n\"Well, she has been after me to get back together,\" he said.\n\n\"So I guess you are then,\" Suzie lamented.\n\n\"Well no not exactly,\" Curt said. \"Suzie, it is true, I did fucked her in my car at lunch. She has wanted me to get back with her for a week now. She promised she would change and welcome oral sex. She wanted to be with me bad and I guess I let myself be maneuvered into it,\" he said. They arrived at Suzie's house for her to change.\n\n\"So, she promised to blow you and you go right back to her. Did she and was she good,\" Suzie asked?\"\n\n\"Suzie...well, if you must know yes, but only briefly before we fucked,\" he said.\n\n\"Was she good,\" Suzie asked? \"I suppose you're getting both things from her now so you're happy.\"\n\n\"No, she lacks interest in doing it. A guy can tell. And, are you saying that because you and I are only having oral sex,\" he asked?\n\n\"Well, yes of course. I've not let you fuck me yet and you probably miss that and hold it against me,\" Suzie admitted.\n\n\"Suzie...\" Curt said.\n\n\"What,\" she replied bordering on tears?\n\n\"I guess I'm really confused. When you and I put this training together, I thought it was to get you in shape and noticed by guys like Sean or Brian. I was going to help you look sexier and understand guys better. I was trying to build your confidence and help you feel better about yourself. Basically, I wanted to teach you to be sexier and attract attention so as to get Sean or Brian to ask you to the prom.\" Curt said.\n\nCurt continued, \"The sex between us was part of the bargain and to be part of the learning. I wanted to build your confidence through understanding of the male and his desires. I thought it was working too. You seem much more confident and comfortable with yourself. You're attracting attention, you said so yourself. Yes, the sex was great, fantastic even, but I thought the plan was to get you ready for Sean. I was surprised the other day when you said he was not your interest for a prom date anymore. Neither was Brian and you would not tell me who,\" Curt stated.\n\n\"Well, I'd go with those guys but I had someone else in mind first,\" Suzie said.\n\n\"It sounds like you still don't want to tell me,\" he said. \"But that does not matter anymore to me because...\" Curt hesitated.\n\n\"Because why,\" she asked?\n\n\"Well Suzie, I have to tell you one reason I broke up with Becca in the first place was I wanted to go to college without the commitment of a girlfriend. I didn't think it would be fair to Becca or I if we stayed committed as I was assuming it would be hard to remain faithful. Plus, I guess I just wasn't sure what I had with Becca was truly love forgetting about the oral sex thing for a minute. I wanted to continue to look for my truly love and if after college, neither of us had found someone better, we could then get back together.\"\n\n\"I never really explained this to Becca the way I am to you but that is the truth. So, when I started these lessons with you, it was never with the intent of anything more than to help you out, while keeping me satisfied too. I felt that way I could make it at least to the summer without the need for another girlfriend or a series of one night stands. But all that has changed now somehow. I have something to ask you,\" he said?\n\n\"What,\" Suzie asked?\n\n\"If I asked you to the prom, would you go with me,\" he asked?\n\nCurt was looking into those gorgeous blue eyes and saw them fill with tears.\n\n\"What's the matter,\" he asked? \"If ya don't want to go with me, just tell me. But wait, before you do let me explain. I never intended this but I have found a feeling with you I have never felt before. I'm not sure what it is but it is unlike anything I have ever felt before with any other girl. I can't explain it but I know I want to be with you more than anyone,\" he said. \n\n\"This thing with Becca today was weak on part. It was because I was so confused I guess. I guess I also wanted to see if what she and I had had any life left to it. It didn't and afterwards I regretted doing it with her. I told her afterwards it was the end and I did not want to get back with her. I know that makes me look like a jerk but I needed to know.\"\n\nSuzie slipped off her seat belt and leapt across the distance between them. Tears were running down her cheeks as she kissed him hard. She came across the stick shift and into his lap. Her ass hit the steering wheel and the horn sounded briefly. They smiled at that but resumed kissing with deep passion. They kissed for at least five minutes. He had his arms around her keeping her off the steering wheel and she hugged him tight. When they finally broke, he asked again.\n\n\"Is that a yes? Will ya go with me to the prom,\" he asked?\n\n\"I love to,\" Suzie cried. \"I was hoping you'd ask for at least a week now,\" she added. \"You're the reason I didn't want to go with Brian or Sean anymore.\"\n\nThey kissed for a few more minutes. Suzie sat back with a smile on her face.\n\n\"What,\" Curt asked?\n\n\"I was just thinking how the most wonderful things happen to me sitting in front of my house in your car,\" she joked.\n\n\"Yeah, I guess that is true for both of us,\" he laughed too.\n\nThey kissed again. Curt then patted her on the ass.\n\n\"What,\" she asked?\n\n\"Shouldn't you think about getting into your sweats now,\" he asked?\n\n\"Are we still going to workout,\" she asked? \"I just want to be with you and please you for making me so happy.\"\n\n\"Well, that sounds nice,\" he said. \"But you aren't getting out of your workout that easy,\" he barked.\n\n\"Oh, what a taskmaster,\" she said. \"And I was going to make you feel so good.\"\n\n\"We'll have time later. How about I take you to dinner to celebrate and we'll have more time together,\" he asked?\n\n\"Oh, that sounds wonderful. I'll tell my mom as I'm changing,\" she said. \n\nSuzie shifted to get out his side as he opened the driver side door for her. She ran into the house. Suzie headed right for the kitchen and found her mom and Beth unloading grocery bags. She helped while she talked. \n\n\"Guess what you two! I have a date for the prom! Curt is going to take me,\" She exclaimed.\n\n\"That's great Suzie! I'm so happy for you,\" her mom said.\n\n\"Congratulations,\" Beth said.\n\n\"Mom, I need to get a dress. Can we go this weekend,\" Suzie asked?\n\n\"Sure dear. I think there are even some sales on. Isn't the prom in two weeks,\" her mother asked?\n\n\"Yes, a week from Saturday,\" Suzie said.\n\n\"Well, that is great news Suzie. I bet you're thrilled. Curt is a nice boy too,\" her mom said.",
        "\"Nice,\" Beth said. \"He is the hunk of the senior class. Way to go Sis,\" Beth smiled.\n\n\"Thanks Beth and you too mom. Mom is it okay if I go to dinner with Curt? We're going to celebrate going together,\" Suzie said.\n\n\"No problem dear. Are you two officially going steady,\" her mom asked?\n\n\"I guess I would say yes,\" Suzie smiled. \"I got to run. Curt is in the car and we're still going to workout. He is such a taskmaster,\" she joked.\n\nSuzie dashed upstairs and changed into her workout clothes. She was back at the car quickly. She and Curt drove to the track and did their normal workout. Suzie was so high and energized she managed to run three \u00bc miles this time before she tuckered out. \n\nCurt was going to drop her back home to change but Suzie wanted to shower with him, so they went to the cabana. They stripped off their clothes quickly as soon as they were locked in the bathroom of the cabana. Curt started the water to get it hot and they kissed waiting for it to heat up. As they kissed, Suzie pressed her tits into Curt's chest. Her excited nipples poked his chest and brought Cyclops up. \n\nAs they kissed the distance between them expand as Curt's cock did. Suzie reached between them to feel Cyclops. She was temped to drop to her knees and kiss Cyclops but then she remember he was probably sweaty and the last place his cock had been was inside Becca. That thought bothered her otherwise surreal mood. \n\nThe water was hot so Curt opened the door and they both stepped in. Washing was not the first thing on their minds and they kissed while both stood beneath the spray. They French kissed while their hands went to work. Curt was kneading her ample tits and playing with her stiff nipples. Suzie had Cyclops in hand and was stroking him back and forth. \n\nCurt was the one to break the action indicating they should wash. They took turns soaping each other up. Suzie washed Curt's dick and balls until she was sure she had removed any trace of Becca. She thought to herself, from now on only one set of lips and pussy is going to enjoy this beautiful dick. \n\nThey finished washing and exited the shower to dry off. As soon as they were dry, really before, Suzie was in Curt's arms. She kissed him deeply as they stood in the bathroom with the steam from the shower still fogging the mirror. Cyclops was at full mast and Suzie grabbed for him. Curt was quicker though and dropped down and picked her up in his strong arms. He carried her to the door as they kissed. He managed to get the door open and took Suzie to the couch. \n\n\"Me first,\" Suzie said. \"Lay back and let me at Cyclops.\"\n\n\"How about we 69,\" Curt said. \"That way we're each getting something.\"\n\nSuzie pouted, \"I'm hungry to have you in my mouth. I like it better when I'm just concentrating on you. You do my pussy so good, I lose focus on you and I want to do you badly,\" she said.\n\n\"Okay but let me do you first and then you can take your time on me,\" he said.\n\n\"Well alright, but hurry because I need to taste you so bad I don't think I can wait long,\" she said.\n\nCurt slipped to the floor into position between Suzie's legs. He leaned in and sucked her breasts. He played with each one in turn. His mouth on one while his hand played with the other. He twisted her nipples with a little force and rather than hurt it made Suzie juice in her pussy. She wondered if he was going to make her cum just from playing with her tits. \n\nCurt played with her tits a little longer but eventually kissed down her belly to her navel and then down to her inner thighs. He kissed Suzie all around her pussy but avoided touch it for a while until she moved her hands to his head to show her need. He moved towards her pussy and she helped by pushing him there. He kissed and licked around her outer lips. He was glad to see she was shaving still but keeping the landing strip on top.\n\nCurt nuzzled in her hair and then dragged a stiff tongue straight down into her slit. It parted the folds as it went, dragged over her clit which made her groan, and then dripped into her cunt hole. He wiggled it around in the opening and Suzie's hips squirmed underneath him. Curt reached up with both hands to grab her nipples. He took each between thumb and forefinger and pulled and twisted them as he burrowed his tongue into her center. \n\nSuzie was groaning nonstop now and her fingers were tightening in his hair. Oh God, he knows just how to work me she thought. Curt continued to drive his tongue into her cunt and taste the wetness there. When he thought she was primed and ready he eased his tongue up and licked her clit. He brought one hand off her nipple and pushed a finger into her pussy. He pushed in until he could feel the membrane that kept her a virgin. He wanted so bad to push his penis into her vagina until she was a virgin no more but would have to wait until she was ready. \n\nInstead he sawed the finger in and out causing Suzie to push her ass off the couch. He sucked her clit into his mouth and that was all it took. She groaned loudly above him as she pushed his head into her pussy. She had clamped her legs around his head and he fought to move from her clit to her cunt hole for his reward. He kept his hand working on her nipple but slid the finger below from her hole to massage her clit as he licked up her cum. \n\nRockets were going off in Suzie's head. She had been so aroused but his asking her to prom. The feeling he was beginning to love her as she did him, translated into a burning need for him and a screaming orgasm now. It seemed to last minutes but really wasn't. \n\nSuzie groaned constantly and had fought the urge to actually scream out this time. As she settled her ass back to the couch, he stopped playing with her nipple and touching her clit. He continued to lightly lick her pussy seeking her juice. When he was sure he had it all, he came off her pussy and looked up. Suzie's eyes were still closed. He thought she looked like a contented angel as she lay there with her breath beginning to return. His breath too was returning and he could feel wetness all over his face. Suzie eventually opened her eyes and looked down at him. She smiled a weak smile as he looked at her amused.\n\n\"Want me to try for two,\" he asked?\n\n\"No please,\" she said. \"That was perfect for now. I want you.\"\n\nSuzie switched spots with Curt. Cyclops was stiff and ready for action with a drop of pre-cum in his eye. She looked at Curt's dick and up into his eyes. He was watching her as she licked her lips sensually. She moved her hands to his balls and shaft. She teased both as she continued to look at him. She remembered what he had said once about dirty talk. \n\n\"Oh, look at that big juicy purple head,\" she said as she continued to lick her lips. \"It has a drop of pre-cum just for me. I'm going to eat that and make him give me more tasty stuff. I want to taste him and suck up his cum. Oh, what a big boy he is, so stiff and hard just for me. Can I swallow all your cum Curt, can I please,\" she begged?\n\n\"You certainly can you nasty girl,\" he responded. \"But please hurry, you're driving me crazy,\" he added.\n\n\"Oh, does poor Curt want to stick his dick in Suzie's little wet mouth? Does he want her to suck and lick it until his balls are ready to burst? Does he want her to swallow all his man juice and take it to her tummy,\" Suzie chided?\n\n\"God, you naughty girl, you know he does,\" Curt answered.\n\nSuzie smiled at him as she leaned in and swiped her tongue across the head capturing the enlarging drop there. She made a point of licking her lips and tasting it for him. Her hands worked him gently as she moved her tongue to the underside of his enlarged head. She teased the area there with a stiff tongue and he groaned above her. When she pulled away another drop had formed in his hole. She swiped that one too. \n\nSuzie wondered if she could keep this up and went back to teasing his glands with her tongue. She was soon rewarded with another large drop of pre-cum and savored that too. Suzie licked up and down the underside of his shaft and sucked and licked his balls. She took each ball into her mouth and played with it with her tongue. She pushed his balls and cock up onto his belly and sucked on the bottom of his ball sack. As she did this, she tickled the area between his balls and his asshole with her nails. Curt moaned like a man wounded in battle. \n\nWhen Suzie pulled his cock back up to go after the head again, pre-cum was leaking in profusion down one side. She locked her lips over that area of the head and licked up his juice. God she loved pre-cum she thought to herself. She would have to repeat that same maneuver if it gave her this much another time soon. Even she could wait no longer and Curt was obviously well along above her. \n\nSuzie attacked his head sucking it into her mouth and licking it brutally. She swiped the underside with her tongue as he groaned nonstop. She was rewarded with more of her favorite nectar. Her hands picked up there pace on his balls and shaft. Suzie started bobbing on his cock unable to wait any longer. She sought his release as much or more than he did. \n\nSuzie popped his dick from her mouth a few times by creating as much suction as she could. He groaned loudly at the changes in press to the head of his dick. Then she took him to the back of her mouth. She tried swallowing the head as it wedged into her throat. She found that the right angle helped and rose upward to get there. After two or three attempted she felt the head slide into the beginnings of her throat. Suzie tried to fight off the gag that wanted to expel his dickhead and to hold her breath. She managed to do so but only for a few moments before she pulled off. \n\nAs she backed completely off his cock for air and to rest a second, a strand of saliva trailed from her mouth to his cock. She sucked it back in like spaghetti knowing she might need the lubrication. \n\nSuzie dove back down on his dick and worked it into her throat again. She still had two inches to go but was forced to back off once again. She attacked his cock bobbing mercilessly and fondled his balls. They were tightening against the shaft preparing for release. \n\nSuzie trailed a finger from his balls to his asshole and teased the opening. That was all it took and Curt tried to drive his cock through the back of her head. He had never pushed this hard with Suzie before cumming and she was not prepared. With the head wedged into her throat the first blast went right down. She pulled back just in time to catch all of the second in her mouth. It was huge and she swallowed with a tremendous gulp. Her throat just had time to close off when the third major pulse exploded in her mouth. She swallowed that too. The rest trailed off and she captured those to savor in her mouth. \n\nCurt's legs, which had stiffened during his release, now slowly relaxed beneath her. Suzie sucked lightly on just the head as it began to soften. Her tongue teased the head to coax out the remaining cum. When she was sure she had it all, she backed off and looked at him. His eyes were just coming open. \n\nSuzie thought again of the porno and how that woman had showed the guy his cum in her mouth. Suzie opened her mouth again as she had once before to show Curt. He stared at her intently as she moved her tongue slowly around pushing the cum as it pooled on her tongue. Then she made a point of let him watch her swallow the mouthful in one big gulp. She opened her mouth to show him she was a good girl swallowing all his cum. \n\nCurt smiled at her as she formed a kiss with her lips at him. Suzie looked down at his cock. It was softening rapidly in her hand but a drop of cum had formed at the opening. She leaned down and took the much smaller soft head into her mouth and sucked up the droplet. She teased the head a little with her tongue until he touched her shoulders. She looked up as he sat up. He kissed her tasting his own cum in her mouth. They hugged and he whispered to her she was such a good naughty girl. "
    ],
    "authorname": "BlewWater69",
    "tags": [
        "still a virgin",
        "hot tub fun"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/suzies-lessons-ch-04"
}