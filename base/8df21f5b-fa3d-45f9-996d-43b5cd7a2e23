{
    "title": "The Cleaning Lady Ch. 04",
    "pages": [
        "Please read chapters 1, 2 and 3 before reading this one.\n\n*\n\nOn Tuesday, Nicholas was lying back and watching television. It was close to eight o'clock and he was not expecting guests. When a knock on the door came, he was quite surprised.\n\nDressed in his black fleece shorts and a loose T-shirt he went to the door and opened it. He was beyond surprised to see Ping standing in the hall. He invited her in and she smiled shyly. He led her to the living room and she sat on the couch looking at him with trepidation. He offered her wine which she gratefully accepted and then sat opposite her.\n\n\"What brings you here Ping?\" he asked her as his stomach did a couple of somersaults in anticipation.\n\nShe blushed and looked at the floor and then looked up at him. \n\n\"Good evening Mr. Nicholas,\" she said diffidently. \"I hope you are not disturbed that I come to see you.\"\n\nNicholas smiled and shook his head.\n\n\"No, that's okay Ping,\" he said as he looked at her hungrily. \"I don't mind you coming to visit.\"\n\nShe was wearing a form-fitting black skirt that went past her knees and a light blue blouse. Nicholas wanted her desperately but he was still having difficulties reading her. The look she was giving him right now could be construed as anticipation, extreme shyness or even downright fear; it could as easily be something he hadn't even considered and he was frustrated at his inability to guess her mood.\n\n\"I am glad,\" she said with obvious relief. \"I was uncertain if you would consider my visit to be an intrusion.\"\n\n\"Not at all!\" he said with a scoff. \"I like seeing you Ping. You should know that by now.\"\n\n\"Thank you Mr. Nicholas,\" she said as she looked down. \"I enjoy seeing you too.\"\n\nShe looked up again and tittered quietly as she met his eyes. \n\n\"Was there a reason for your visit tonight?\" he asked her. \"Or is this just a social call?\"\n\nShe blushed again and looked down.\n\n\"I am here,\" she said slowly, \"because I am... I wanted to say to you...\"\n\nShe frowned and continued to stare at the floor and Nicholas could see she was having difficulties. He just didn't know why.\n\n\"Is there something wrong Ping?\" he asked as he moved to sit beside her on the couch.\n\nShe looked at him as he sat and then looked down once more.\n\n\"What I have to say is... difficult,\" she said slowly.\n\nNicholas immediately thought that she was about to tell him she and her sister were angry. He was convinced they were upset about how things had escalated. It had started with simple views of their nipples while they cleaned to giving him hand jobs and blow jobs; he had even fucked the two of them, one after the other on his bed. He frowned and looked down sheepishly.\n\n\"I'm sorry Ping,\" he said sadly. \"I hope you and Minh are not too angry with me. Just don't stop coming to my house to clean. I promise I won't touch you or even look at you.\"\n\nPing looked at him curiously and knitted her eyebrows in confusion.\n\n\"Yes, I know things have gone too far already, and I'm sorry!\" he said quickly, \"I have the utmost respect for you and your sister and I only hope you can forgive me.\"\n\n\"I do not understand,\" she said.\n\n\"I want you to forgive me,\" he said. \"I don't want you angry with me.\"\n\n\"Angry?\" she asked. \"You are angry?\"\n\n\"Me?\" he said, blinking in surprise. \"I'm not angry. I thought you were angry.\"\n\n\"I am not angry,\" she said.\n\n\"You're not?\" he said with a sigh of relief.\n\n\"No,\" she said. \"I am very happy. My sister very happy!\"\n\n\"You are?\" he said.\n\n\"Yes,\" she said. \"I am trying to say this, but it is difficult for me.\"\n\n\"You're happy?\" he asked inanely.\n\nPing looked at him, cocking her head to one side in confusion.\n\n\"I am very happy!\" she said. \n\n\"Oh,\" he replied and then sat back awkwardly.\n\n\"Mr. Nicholas,\" she said, laying a hand on his knee. \"I am very happy to know you. Since my sister and I have been cleaning for you, you have been most kind to us. We are very grateful to you. The reason I have come here is to tell you how happy I am to know you. I would like to visit you more than once in a week if that does not disturb you.\"\n\n\"Really!\" Nicholas said with his eyes wide. \"You want to see me more often?\"\n\n\"Yes,\" she said and then stared at the floor. \"Unless I am imposing on you.\"\n\n\"No,\" he said. \"You're not imposing at all. I'd like to see more of you too!\"\n\n\"Yes?\" she said, looking up and smiling.\n\nWith her almond shaped eyes and her full lips surrounding her smile, Nicholas found it hard not to scoop her up in his arms and ravish her on the spot.\n\n\"Oh yes!\" he said as he put one arm on her waist and drew her closer to him.\n\nHe put his lips to hers and kissed her. She sighed softly and then willingly gave in to his kiss. He lifted her and set her on his lap and hugged her closely. She put her arms around his neck and moaned as their kissing became more passionate. She hooked one foot behind his calf and snaked her tongue into his mouth with abandon. \n\nHe placed his hand on her midriff and pushed it up inside her blouse. She sighed as he cupped her breast and then whimpered softly. He pinched her nipple between his fingers and she opened her mouth and kissed him fiercely.\n\nShe put her hand on his groin and squeezed his cock softly. She stood up and quickly unbuttoned her blouse. Nicholas watched eagerly as her bare breasts came into view. She dropped her blouse on the end table and motioned him to stand. \n\nShe fell to her knees and pulled his shorts to the floor. Then she took his swollen cock between her lips and proceeded to give Nicholas an inexperienced but very enthusiastic blow job. \n\nHe held her by the hair as her mouth moved back and forth. She sucked his cock as far into her mouth as she could take it and made love to it with her tongue. She cupped his testicles with one hand and placed her other hand on his buttocks. As she sucked she traced her finger lightly over his perineum and all around his anus. \n\nShe wet her finger in the saliva that was pouring out of her mouth and all over his cock and then gently pushed it just past his sphincter. She continued sucking, laving his cock with her tongue and sucking it with fervor as she wet her finger some more.  \n\nNicholas was moving his hips with her, pushing into her mouth and then drawing back until just the head was between her lips. He felt her push her finger to the knuckle in his anus and then she was tickling his prostate. \n\nHe cried out and then he came. She gripped his cock and held the head with her lips. The sperm shot into her mouth as she stroked him with both hands. \n\nShe hummed as he filled her mouth and then looked up at him and grinned around his cock. She swallowed his semen, savoring the white sticky fluid as a small stream drooled down her chin.\n\nNicholas fell back into his chair and Ping smiled at him. He was drawing his breath in gasps and he felt like his testicles had been completely drained. \n\nNicholas reached forward and pulled her into his lap. She sighed and whimpered a little as he parted her thighs on either side of his hips. Her form-fitting skirt was now bunched up around her waist and Nicholas gasped when he saw she was not wearing panties. \n\nPing settled into his lap. She put one hand on his shoulder and the other on his cock, coaxing it into hardness once more. After just a few strokes, it began to grow again.\n\nShe was still very tight. She stared him in the eye as she swiveled her hips. She held his cock fast against her opening and closed her eyes from time to time as it slowly eased inside. \n\nNicholas put his hands on her tits and kneaded them as she coaxed his cock inside her. She muttered something he didn't understand and then gasped sharply. She made a series of \"Oh!\" sounds and clenched her eyes shut. Nicholas put his hands on her hips and held her steady. After about a half a minute, she sighed deeply and opened her eyes. \n\n\"I do not do that with my husband even before he left,\" she said with lidded eyes. \"I give sex with him and he give me sperm, but I do not feel the same way. He has finished and I think it is the way of things. My sister tell me I can feel like this too, but I do not believe her.\"\n\nShe leaned forward and groaned as his cock slid more deeply into her.\n\n\"She tell me she feel like this many times,\" she went on. \"I think her husband was better lover maybe.\"\n\nShe straightened herself and moved her hips from side to side a little and sighed again.\n\n\"Since Saturday, I can feel what my sister say,\" she purred happily. \"She tell me she feel like this before, but not like this with her husband. She tell me you are more manly than her husband. When I tell her I want to see you tonight, she is happy. She tell me I should feel good just like you feel good. You feel good?\"\n\n\"Oh yes,\" he said. \"I feel great!\"\n\n\"Good!\" she said with a swirl of her hips. \"I feel good too!\"\n\nNicholas watched her as she moved. Her bare breasts jiggled as she fucked him. Her nipples were swollen to a deep crimson color. \n\nHe smiled and put his hands on her tits. She sighed and then began moving up and down on his cock a little more rapidly. He looked down and saw his member sliding in and out of her. The flesh of her lips seemed to grab at him as his cock moved out and was then pushed in as he moved inside. \n\nShe was dripping wet and his cock felt like it was inside an oven it was so hot. She started moving ever faster and she whimpered with every thrust.\n\nHer wetness was now soaking both of them and her skin slapped against him as she moved. She moaned again and began making another series of \"Oh!\" sounds. Each time she sank on to his cock, she squealed her \"Oh!\" and he smiled at how she must be enjoying it. He gripped her hips and helped her with her movements lifting her slightly on every up stroke and then letting go as she sank down again. \n\nShe was literally bouncing in his lap now. \n\nNicholas picked her up off his lap and set her on the floor. He positioned her with her tummy on the couch and her knees on the floor. He knelt behind her and lifted her skirt clear of her pussy and then just admired the view for a moment.\n\nHer tiny bum framed her pussy beautifully. He held his cock head with one hand and guided it to her entrance. He opened her lips with his fingers and pushed forward slightly. Then his head was nestled just inside and she looked over her shoulder with wanton desire. \n\n\"Please Mr. Nicholas,\" she panted. \"Please take me!\"\n\nHe pushed and she squealed loudly. With her tiny body he felt like he was splitting her apart.\n\n\"Oh yes!\" she screamed. \"Take me Mr. Nicholas!\"\n\nWith that he shoved himself all the way in. She squealed again and he felt her shudder. He started pounding her as hard and fast as he could. She started chanting again, squeaking a high pitched \"Oh!\" each time he thrust into her. Her vagina clenched down on his cock and he thrust two more times before he came. \n\nHe pushed in hard and held still as his semen filled her channel. She groaned as she felt him shoot and then sighed in contentment as his cock shrunk and fell out of her with a wet plop. Some droplets of cum oozed from her pussy and she moaned as he leaned forward and breathed heavily.\n\n\"Oh Mr. Nicholas!\" she gasped. \"You make me feel good!\"\n\n\"Me too Ping,\" he panted.\n\n\"My sister is right!\" she whimpered. \"You are very manly!\"\n\nNicholas chuckled and fell to his side and sat next to her on the floor. He grinned at her and she smiled languidly, trailing her fingers along her pussy lips and coating them with his semen which was still dribbling out of her vagina. He put his own fingers there and scooped up a small amount and put it to his lips. She watched him in amazement and then took his finger and put into her own mouth. \n\n\"Thank you Mr. Nicholas,\" she said slowly. \"I feel good.\"\n\nNicholas smiled and kissed her.\n\n\"Thank you Ping!\" he said. \"You can surprise me like this any time you want.\"\n\nShe smiled again and lay back staring at the ceiling. Nicholas put his hand over her mound again with his palm cupping her clitoris and his fingers teasing her lips. She sighed and spoke in Chinese and then turned toward him. \n\n\"Feel good,\" she whispered.\n\nHe smiled and put his lips over her nipple. He poked at it with his tongue and sucked it into his mouth. She sighed and giggled and he pushed his fingers into her tunnel. She gasped and then he started pushing his fingers in and out of her while he suckled her. She gasped again and soon she was squealing and trembling through another orgasm.\n\nShe lay back once more and then reluctantly pushed herself to her feet with a sigh. Nicholas looked at her questioningly and she gave a rueful smile.\n\n\"My sister,\" she said hesitantly. \"She wait for me at home.\"\n\nNicholas nodded and pushed himself to his feet. He grasped her hand and pulled her into his arms. He kissed her deeply and then let her go. He sat back in his chair and watched as she adjusted her skirt and pulled on her blouse. \n\n\"I'll drive you home,\" he said.\n\n\"That is most kind Mr. Nicholas,\" she said. \n\nShe walked toward the door and bent down to pick up her purse. Nicholas put his hand on her skirt and squeezed her bum. She gasped and looked back at him with a giggle. He slipped his hand under her skirt and up her thigh and she gasped again. When he trailed his hand up the inside of her thigh, drawing her skirt up and over her buttocks with the other hand, she sighed and leaned one hand against the wall.\n\nNicholas swished his fingers around in her pussy. He shoved them here and there inside her and up and down her lips. Ping moaned and pushed back against his hand. \n\nHe pulled his shorts down to his thighs and lined his cock up with her vagina. He shoved it inside and she gasped again. He held her firmly as he moved. He was in no hurry. He slipped into her more loosely than he had the other day, but she was still incredibly tight. He moved slowly back and forth and Ping moaned and sighed.\n\n\"I want to cum inside you again Ping,\" he said fiercely. \"I want to shoot right up inside your pussy when I cum!\"\n\n\"Oh Mr. Nicholas,\" she whimpered. \"I feel good!\"\n\nHe moved his hips slowly and steadily. She pushed back against him and looked over her shoulder.\n\n\"Maybe you put sperm in my mouth?\" she asked with a lick of her lips.\n\n\"Do you want me to cum in your mouth?\" he said with a groan.\n\n\"Oh yes Mr. Nicholas!\" she begged him. \"Put sperm in my mouth!\"\n\nNicholas grunted as his balls tensed and Ping whirled around and mouthed his cock. She held it firmly between her lips and used one hand to knead his balls and another to grip his cock at the root. She tickled his anus with one finger and stroked his shaft as she sucked on the head.\n\nNicholas grunted and came. It was a weak orgasm in that he didn't have a lot of semen left in him. It still made his eyes cross and his knees almost buckled with the intensity. \n\nPing had no trouble taking all of it in and didn't lose a drop. She grinned and smacked her lips as his cock shriveled while still in her mouth. She licked it lovingly, ensuring it was clean of any trace of cum. \n\nShe stood up, swallowing his load and then beaming up at him with her broad smile. \n\n\"I hope my visit tonight has not disturbed you,\" she said. \n\n\"You can visit me whenever you want to Ping!\" he gasped as he awkwardly pulled his shorts up.\n\n****************************************************\n\nOn Saturday Ping and Minh showed up as usual. They were both grinning as he invited them in, also as usual. \n\n\"Good afternoon Mr. Nicholas,\" Ping said. \"We will clean fast today.\"\n\n\"Okay,\" he said. \"So you don't want anything to drink?\"\n\n\"No thank you Mr. Nicholas,\" she replied. \"We will work very fast today.\"\n\nPing was wearing a blue denim miniskirt and a white short sleeved sweater. She pulled the sweater over her head and Nicholas blinked as her bare tits came into view. She was about to pull off her miniskirt but Nicholas lifted the hem to see she was not wearing underwear.\n\n\"Wow!\" he said. \"That's very sexy!\"\n\nPing blushed and translated for her sister. Minh giggled and put her fingers to her mouth shyly.\n\nMinh was wearing a white knee length cotton skirt with blue flowers printed on it. She lifted the front of her skirt showing Nicholas her bare pussy and then spoke in Chinese.\n\n\"My sister say she maybe look sexy too?\" Ping said.\n\nNicholas stepped over to Minh and dipped his fingers in her vagina. It was wet and slippery.\n\n\"Yes she is!\" he said.\n\nMinh and Ping both smiled and then Minh unbuttoned her white blouse. When both girls were topless Nicholas sat on the couch and watched them. They slipped their skirts off, both of them smiling and giggling as he watched, then they went to begin their cleaning.\n\nThey worked quickly and efficiently. Before one hour was done the apartment was clean by anyone's standards.\n\nAs Ping was finishing the dusting of the living room Nicholas moved behind her and brushed her bum with one hand. He had discarded his own clothes shortly after they began cleaning so his erect cock was quite visible to her when she turned and smiled at him over her shoulder.\n\nHe pressed himself against her and he felt her wetness on his penis as he pushed it between her bum cheeks. She grinned again and spread her thighs a bit wider. He bumped against her opening once more and then she was reaching her hand between her legs and guiding his cock inside her. \n\nShe put her hands on the end table and bent forward. He slid into her slowly; at least as slowly as he could. He wanted her so badly it was hard to hold back.\n\nShe grunted when his head pushed past her lips and spread her legs wider still. He shoved again and she moaned softly. By the time four inches were inside her he felt Minh press her naked tits against his back. She reached around his waist and held the base of his shaft as he entered Ping. \n\nMinh got on her knees behind him and started licking his testicles. She cupped his sac with her hand and ran her tongue over it. She moved her tongue a bit and started teasing his anus. She snaked her tongue past his sphincter and tickled the inside. \n\nNicholas groaned and started thrusting into Ping. Ping sighed and raised her bum to give him unfettered access. \n\n\"Oh!\" she gasped in response.\n\nMinh spoke in Chinese and Ping replied. Minh reached around Nicholas and gripped his cock. She spoke in Chinese again and Ping cried out and thrust her bum back at Nicholas rhythmically.\n\nPing started gasping \"Oh!\" repeatedly as her orgasm approached. Every time Nicholas' cock slid into the hilt, she cried out. Their hips were slapping together quickly and Ping chanted her mantra at least twenty or thirty times. Suddenly she stiffened and Minh tickled Nicholas' perineum. Nicholas gasped too and then he shot his cum inside Ping as she shuddered through her own orgasm.\n\nMinh went to her knees once more and urged Nicholas to turn. When his cock slipped out of Ping's pussy, Minh gripped it with her lips and sucked him to the back of her throat. After she cleaned it thoroughly she let it flop out. \n\nPing sighed heavily and smiled. \n\n\"Oh Mr. Nicholas,\" she said breathlessly. \"You surprise me! We have not quite finished yet.\"\n\nMinh spoke in Chinese and Ping's smile grew wider.\n\n\"My sister say we have finished for today,\" she said. \n\n\"Good!\" Nicholas said. \"Then we have time for other things.\"\n\n\"Oh yes!\" Ping said as she straightened and stood up. \"My sister is eager for you to take her. It has been one week since last time and she has feelings.\"\n\nMinh smiled and nuzzled the back of Nicholas' neck, pressing her hard little nipples into his back.\n\n\"I think we should do something to help her out,\" he said with a grin.\n\nHe took Minh's hand and led her to the couch. He sat down and pulled her up until she was standing on the couch and facing him with her feet on either side of his legs. He cupped her bum with his hands and pulled her close. She fell forward against him and he buried his face against her mound. He growled softly into her pussy and smacked his lips. He pushed his tongue inside her and he heard her giggle and gasp. He pushed further and she sighed in contentment. ",
        "Nicholas moved his tongue around inside her, licking and tonguing in every direction. Minh gyrated her hips and groaned as he swabbed at her insides. She grunted in Chinese and put her hands in his hair. Ping spoke to her and she replied with a throaty moan. \n\n\"My sister say you are very good!\" Ping whispered as she watched Nicholas' tongue slip back and forth across Minh's pussy lips.\n\nNicholas felt a warm wetness engulf his cock. He guessed that Ping was sucking it. He sighed happily and continued licking Minh. \n\nAfter several minutes Minh crawled off the couch and both girls grabbed him by the hand and led him to the bedroom. \n\nMinh lay on her back and beckoned to him whispering throatily in Chinese.\n\n\"My sister say she want you to take her now,\" Ping said in a husky voice.\n\nNicholas crawled on the bed and between her thighs. He leaned on his hands and she guided his cock to her vagina. He slipped it inside and eased himself down to lie across her. Minh sighed and put her mouth to his ear.\n\n\"Fuck me good Mr. Nicholas!\" she whispered in her heavily accented English. \"Fuck me and cum good!\"\n\nHe started pounding her right away. He moved his hips up and down hard and fast and Minh held on for dear life. She gasped and cried, cooed and sighed as he fucked her. Their bodies slapped together loudly and they were bathed in sweat.\n\nPing sat on the bed beside them and absently ran her finger in and out of her pussy as she watched.\n\nMinh shouted in Chinese and Nicholas grunted and then they were racing toward a shared climax. Nicholas growled and gritted his teeth. Then he tensed and his balls emptied. He thrust inside her hard and froze. Minh cried out and sank her teeth into his shoulder. He pumped his semen inside her and she began to tremble. With one last cry she fell back onto the bed and Nicholas collapsed on top of her.\n\nHe rolled off her and Ping took his flaccid cock into her mouth and licked it clean. She giggled as she watched them lie side by side gasping for breath.\n\n\"I think you like my sister Mr. Nicholas,\" she asked playfully.\n\n\"Oh yes!\" he gasped. \"I love your sister! I love you too!\"\n\nThe girls exchanged a meaningful glance and giggled together.\n\n\"You like me and my sister when we are naked,\" Ping said as she played with his limp cock. \"Maybe you do not like us so much when we are not naked?\"\n\nNicholas groaned as his cock began to grow again and closed his eyes.\n\n\"I like you and your sister when you're almost naked too,\" he said.\n\nPing giggled and mouthed his cock as it grew.\n\n\"Mm,\" she said. \"I like you naked too. Maybe you take me again when you have rested?\"\n\n\"Oh yes!\" he said. \"You can count on that! And after we've taken each other as many times as we want, I'm going to take you and your sister out for dinner at a fine restaurant.\"\n\nPing grinned and translated for Minh. They both smiled.\n\n****************************************************\n\nNicholas added cab fare to their regular fee and sent them on their way to get changed for dinner. Of course, he had fucked both Minh and Ping once more before they left. He had lain on his back while Ping rode his cock and Minh squatted over his face. After each of them had cum, they changed positions and Nicholas happily licked away at Ping's pussy while Minh bounced up and down on his penis. \n\nWhen he came both sisters bent to take turns with his cock in their mouths. Ping took the first two spurts and Minh giggled watching her sister's cheek puff out as the semen pumped into it. Then Minh bent and took the next spurt between her lips. She hummed happily as the sperm continued to drool out of his cock and giggled when Nicholas groaned. Her mouthing his cock long after his ejaculation felt like delightful agony.\n\nNow with visions of the sisters in his mind, he grinned as he got ready to go out. \n\nDressed in his beige slacks and black corduroy blazer he picked the girls up at their house. They giggled and chatted in Chinese as they drove. By the time they pulled into the parking lot of the steak house the girls were laughing happily.\n\nNicholas opened their doors and as they climbed out admired their attire with a big grin.\n\nMinh was wearing a blue silk dress that had sheen to it. Each time she moved the light reflected from her tiny body in a myriad of sparkles and sequins. It fell almost to her knees and had a conservative but very alluring neckline that offered just a hint of her cleavage. It was belted at one side and Nicholas had to admit she looked entirely delectable.\n\nPing's dress, although more simple in design, accentuated her petite features elegantly. It was black and had an open back well past her shoulder blades. The bottom hem floated just above her knee and the dress was completely unadorned. It was form-fitting and it showed off her body immensely and Nicholas drew a sharp breath every time he looked at her.\n\nNicholas turned toward the restaurant but stopped when he heard the girls giggling to each other. He turned back with a questioning glance and Ping smiled.\n\n\"My sister and me will like to show you something,\" she said with another giggle. \n\nThey looked at each other and grinned. Minh nodded and they both lifted the hems of their dresses together. Nicholas guffawed but smiled brightly just the same. Neither of them had worn panties and their sweet little pussies came into view between their small but shapely legs. Nicholas marveled again at the sparse black hair that covered their mounds. The hair was straight instead of curly and pointed down at their puffy pink lips. \n\nBoth girls giggled again and dropped their hems back into place.\n\n\"My sister say you are happy if you know we have no underwear,\" Ping said with a deep blush.\n\n\"Your sister is right!\" Nicholas said. \"I won't be able to think of anything else while we eat.\"\n\nPing giggled again and translated for Minh. Minh smiled and leaned forward slightly just before Nicholas opened the door to the restaurant. When he looked at what she was doing he saw her strawberry-like nipples as she pulled the dress open for him to see. She laughed out loud and spoke to Ping who giggled in response. \n\n\"My sister say I should show you my chest too,\" she said with a blush. \n\nBefore she could say another word, Minh's hand darted out and gripped the front of Ping's dress. She pulled it down to expose the nipples on both her tits. The girls laughed uproariously and Ping batted Minh's hand away.\n\n\"My sister is very bad,\" she said.\n\nMinh opened the door and walked on through with a devilish glance toward them. \n\nNicholas held the door for Ping and then addressed the Maitre-D. The man smiled at his request for a table and led them to a dimly lit corner. His eyes flickered from Minh to Ping and back, taking in the sight of their bodies surreptitiously. He smiled at Nicholas once more before leaving. Nicholas grinned to himself knowing the effect these two girls were having on him and every other man in the room.\n\nBy the time their meal was done, the girls were giddy from the red wine Nicholas ordered to go with the food. He noticed the waiter seemed to come to their table a bit more than he actually needed to. Nicholas could see the man watching the girls as he stood close by. He grinned again feeling he was the envy of every man in the room. \n\nAt one point the girls were working on their second glass of wine. Nicholas reached for Ping's thigh and wormed his hand up between her thighs. She paused in her conversation with Minh and blushed as she grinned at him.\n\n\"Mr. Nicholas!\" she gasped softly. \"Someone will see!\"\n\nNicholas moved his hand against her bare pussy, feeling the wet warmth with his fingers.\n\n\"No one can see,\" he said impishly. \"They might see you squirm when I do this though.\"\n\nHe pushed his fingers inside her and she gave a tiny squeak.\n\nShe batted at his arm and said something to Minh. Ping looked at Minh with a look of shock and Minh nudged her with her elbow.\n\n\"My sister say I should feel good,\" Ping said with a blush. \"She say she want to feel good too.\"\n\nNicholas nodded and Minh rose from her seat and moved to his other side. She sat and rested her head against his shoulder. She sighed and sipped at her wine. \n\nNicholas placed his right hand on her thigh and Minh grinned broadly and spread her legs wide under the table. He moved his hand under her dress and tickled her lips teasingly. She said something in Chinese and Ping gasped in shock once more.\n\n\"My sister say she would like to go under table to make you feel good too,\" Ping said haltingly, although Nicholas noted her flush wasn't completely the result of the wine.\n\n\"We can do that later,\" he said as he brushed his fingers against both their pussies. \n\nThey giggled and gasped as he moved.\n\nThe waiter came to see if they wanted anything else and Nicholas told him to add up the check. As he fished his wallet out, Minh stood from her seat and the waiter caught a glimpse of her neat little pussy just before she put her feet on the floor. He blinked in surprise and stared after both girls as they walked to the bathroom. He turned back to Nicholas and gave him a knowing look before taking his credit card away. \n\nNicholas couldn't help but notice that the man timed his return so the girls would be coming back from the bathroom. The waiter watched Minh intently as she scooted into her seat and was again rewarded with a glimpse of her upper thigh and just a hint of her puffy little lips peeping from under her dress. He gulped and glanced at Ping. By now Ping was more than a little drunk and was sitting with her legs apart and her dress riding high on her thighs. From where the waiter stood, he had a perfectly framed view of her jet black pussy hair pointing straight down at her tiny slit. Because of the wine her lips were swollen and bright pink. \n\nThe waiter withdrew with a grin and a large tip, not to mention a large bulge in the front of his slacks. Nicholas saw a woman in her late thirties at a table a short distance away glance toward the waiter. The woman's eyes went wide and then she grinned. She glanced toward her dinner partner and sighed with relief that her reaction to the waiter's bulge had gone unseen.\n\nNicholas grinned as he watched her squeeze her thighs together and her nipples harden under her knit dress.\n\nNicholas led the girls out and they walked a little unsteadily but chatting together happily. They gushed their thanks to the Maitre-D who grinned wolfishly at them. Nicholas held the door for them and followed them outside. He glanced back once to see both the waiter and the Maitre-D watching the girls as they wobbled out the door. They glanced at Nicholas and grinned at him. Nicholas grinned back and then followed the girls to his minivan. \n\nHe opened the back door and Ping bent forward and crawled inside. Nicholas grinned as her dress rode up exposing her bum and her pink pussy lips. She lay flat on the back seat with her arms and legs splayed. Nicholas looked at her and chuckled. In her position on her stomach like that, her pussy was wide open to his view. Minh laughed and smiled gratefully as he held the front door open for her. \n\nHe went around and sat in the driver's seat. He had just gotten settled into the cushion when Minh began tugging at his belt. He started the car and put it into gear. By the time he pulled into the street Minh had his pants open and his cock in her mouth. She slurped at it hungrily as he drove, turning her head from time to time to grin at him around his shaft. At one point he turned on to a side street and parked. He felt his orgasm coming and he didn't think he could concentrate on driving while he ejaculated. \n\nMinh grinned and took his cock to the back of her throat. She slurped and sucked, locking her lips on it as she moved her head up and down. When Nicholas grunted and came, Ping poked her head over the back of the seat and grinned down at Minh.\n\n\"My sister make you feel good?\" she slurred.\n\nMinh looked up at her and smiled. She straightened and leaned toward Ping. The girls put their lips together to share his cum. This time they tongued each other and moaned softly. Minh took Ping's head in her hands and kissed her tenderly.\n\n\"Mm, you taste good in my sister mouth,\" Ping said.\n\nThey continued kissing, both girls panting and sighing as their kisses became more passionate. They put their arms around each other and drove their tongues deeply into each other's mouths. When they paused for breath Ping looked at Nicholas and smiled shyly.\n\n\"This happen when my sister and me drink,\" she said apologetically. \"We do not drink often because we know this.\"\n\nShe leaned forward to kiss Nicholas and then it was their tongues twisting and intertwining about each other. Minh continued stroking Nicholas' cock as she watched them and then she leaned forward to kiss him. He kissed her hungrily but then shook himself as he looked around.\n\nThey were on a side street just off the main road and he knew they would have little or no privacy there. He put the car in gear and found a parkette just down the street. He killed the engine and then hurriedly jumped into the back of the van. Minh followed him and then all three of them were groping each other in the back seat.\n\nNicholas sat on the bench seat with the girls on either side of him. Ping crawled onto his lap facing away from him. She squatted over him, leaning forward slightly and her puffy little pussy came into view from under her form-fitting black dress. \n\nNicholas guided his cock to her entrance and then put his hands on her hips. She looked over her shoulder at him with her eyes wide and her mouth open wide. \n\n\"Please Mr. Nicholas,\" she whispered. \"Fuck me! I want you! Fuck me good!\"\n\nShe swiveled her hips and then his cock was between her lips. She gasped softly and began lowering herself onto him. She moved her hips up and down while still squatting over his lap. With each little upward motion, he went a little further inside her on the downward motion. Soon he was all the way inside her and she was moaning and cooing with pleasure. She turned toward Minh who was kneeling on the floor in front of her. Minh was teasing her own pussy with one hand while the other held her dress up out of the way. \n\nMinh leaned forward and kissed Ping. She put her hands to Ping's shoulders and tugged, pulling her dress down until her tits were exposed. As the sisters kissed, Minh cupped Ping's left breast, pinching the nipple softly and weighing the tiny globe with her hand. Ping groaned and spoke in Chinese. \n\nMinh reached back and unzipped her dress and pulled it down to reveal her own tits. Ping immediately leaned forward and took her pebble-like nipple between her lips and suckled it. Minh sighed and held her sister's head gently with one arm as she tongued her breast. \n\nNicholas took a firmer grip on Ping's hips and lifted her up and then dropped her down onto his cock. He repeated the move again and again until both he and Ping were gasping. He pushed Ping to the floor and then entered her from behind. He began pumping into her very hard and very fast grunting with each stroke. He groaned and held her still as his cock spewed into her pussy. \n\nPing cried out. She gasped an \"Oh!\" sound again and again as Nicholas came and then she shivered and went limp in Nicholas' grip. She crawled up into the bench seat with a satisfied smile and leaned back with her legs spread wide and her chest heaving.\n\nMinh crawled to Ping and put her lips against her mound. She kissed her pussy softly and then started lapping at the cum drooling out of her opening. Ping moaned and put her legs onto Minh's shoulders and then gripped the sides of her head with her hands. She sighed and then groaned as Minh licked her clean. \n\nNicholas crouched behind Minh and coaxed his cock back to life. When it was semi-hard he pushed it against Minh's entrance. Minh moaned and opened her legs wider in invitation. \n\nIt was only semi-hard, but Nicholas managed to push it in. As Minh's hips began to swirl in response to the cock inside her, it became harder. He put his hands on her hips, squeezing her soft little bum as he pushed in and out of her. \n\nThen he was fully hard again and Minh was sighing and moaning as she licked and tongued Ping's pussy. When Nicholas came this time it was a weak one; barely a few teaspoons of semen managed to ooze out of his cock as he pushed inside her as far as he could. \n\nWhen he was done he sat back and watched. Minh crawl up onto the bench seat with Ping and throw her leg over her shoulder. Nicholas eyed them with fascination as they pleasured each other in a sixty-nine. \n\nWhen they came it was not with a scream or squeal. The two sighed together softly and held very still. After about thirty seconds of just holding each other's tongues inside their vaginas, the girls simply fell apart from each other and lay back breathing contentedly. When they looked at him, Nicholas could see the white from his semen all over their chins. They had licked each other clean of cum and now they smacked their lips, relishing each other's taste.\n\nNicholas dressed and crawled into the front seat. He drove the girls home as they sprawled lazily in the back of the van. When they reached home, they each gripped one of his arms and led him inside and to the guest bedroom. They undressed him and then each other and then lay down to sleep on either side of him."
    ],
    "authorname": "brian473317",
    "tags": [],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-cleaning-lady-ch-04"
}