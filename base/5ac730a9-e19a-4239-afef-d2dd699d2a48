{
    "title": "Uncharted Territory Pt. 05",
    "pages": [
        "For a complete understanding of this series, please read all other sections first.\n\nPart V: Finality\n\nNo matter how well one prepared for an occurrence or an event, particularly a potentially adverse one, not to mention in unfamiliar surroundings, no amount of planning ever was sufficient.\n\nAs Ron entered the hallowed halls of justice, he instantly realized he had never been inside a real courtroom. Of course, he had watched numerous legal dramas on television and at the movies. But somehow, this step into uncharted territory with its cold marble floors, stately columns, dark wood paneling and towering judge's bench all presented a frightening sense of impending evil or misfortune.\n\nAnd then, if that wasn't bad enough, to have to sit across the room from Dana with her perennially sad expression, was a form of torture no one should be required to endure. If only this would end soon.\n\nBut it did not. The docket was overloaded to begin with, an attempt by the judge to hear as many cases as possible in light of his impending medical issues, and then there were the cases ahead of Ron that just seemed to drag on and on. Try though he did to ignore it, the idle time acted as a catalyst to stir his memory into reliving the years with Dana.\n\nRon had been friends with her brother, Jim, and they'd all hung out together. After he'd broken it off with Mary, Dana had actually been a comfort to him, and before he knew it, they were dating, which they did for several months. A year or so after that, they were married. Dana had not been then, nor was she still not bad looking\u2014not on par with Jenna, Debi or Mary\u2014but still an eye catcher. They'd had enough fun during their dating years that the lack of sex had not been an issue. Even in the early years of their marriage he tolerated it under the guise of her getting used to it. But she never did.\n\nHe convinced himself that that was his lot in life and concentrated on enjoying all the other good things about her; such as her cooking. Throughout all those years, the one item about her that he took comfort in was the fact that he knew she really loved him, even if she rarely said it aloud. That was just part of her upbringing. Her family wasn't the emotional, expressive type. Her brother, Jim, had often joked that the only three times he could be certain his parents had ever had sex was to conceive him and his two sisters.\n\nUnfortunately, the true love, good cooking and other small endearments were not enough. They had no real friends except the ones he still had from college, the majority of whom were female, which didn't sit well with Dana. She would allow him to drag her to their parties (which is where she met Mary and later had it out with her for still having feelings for Ron), but she didn't enjoy them. Nor was she interested in making any friends; she enjoyed spending time with her family and considered her mother and sister as her best friends. Fortunately, Ron was friends with Jim, so that made her family gatherings a little less sufferable.\n\nThe beginning of the end was when he became involved with the organization through another friend, a woman. Ron liked women and their company probably more than he did men. The fact that the organization had more women volunteers than men only made it more appealing to him. As time went on, not only did he enjoy the work he did for the organization more and more, he also savored the friendships he developed with other volunteers, the women particularly. Eventually, he found that he preferred doing work for the organization more than spending time at home, and so, he frequently volunteered to attend meetings and conferences above and beyond what was required.\n\nOn one occasion, a conference was held at a swank hotel in another city. Dana wanted to come with him, not to attend the conference, but just as a get away. In an attempt to dissuade her without being obvious, he told her that he would be tied up in meetings with little time to spend with her. But she came anyway, even though he had to be there Friday morning and she would have to come by herself when she got off work Friday afternoon.\n\nThe hotel room they were assigned was on the 30th floor, and while it offered a fabulous view of the city, it took a long time just to wait for the elevator. One of his female friends wanted to attend a workshop in the afternoon, but her room was not yet available for check in, so Ron offered to allow her to stow a dress on a hanger in his room until hers was ready. \n\nNaturally, Dana checked in while Ron was in a meeting and found the garment spread out on the bed. Ron appeared a few minutes later and explained. Then the woman called to see if she could collect the dress and Ron said he would meet her at the elevator so she wouldn't have to wait.\n\nWhen Ron returned to the room a few minutes later, Dana was fuming. Regardless how hard he tried, he couldn't convince her that nothing was going on with the woman, that it was exactly as he said it was, and that he had never cheated on her.\n\nThings were never the same after that weekend. Living in the aftermath, Ron came to the realization that he and Dana had grown apart. He did the right thing and attempted to work it out, but among their other traits, Dana and her family were unforgiving. Ron even considered resigning from the organization; however, all indications were that it was too late for that. In one final effort, he attempted to convince Jim, but in their clan, blood was positively thicker than water.\n\nRon found his apartment a week later, moved out and filed for divorce. Dana was not far behind. The house went on the market and sold fairly quickly.\n\nThe first several months of living alone were hell for him, and it was only through continued talks with Chelsea that he gradually adapted.\n\nThen along came Jenna, and in the last couple of weeks, he hadn't had time to be lonely.\n\nBut now, seeing Dana again for the first time in months, even with her sad face, sentimentality kicked in. There had been many good times with her. Had he been too selfish? As much as he enjoyed the organization, was it worth his marriage?\n\nHis cell phone vibrated, jarring him from this tormenting reverie. It was a text message from Chelsea. How's it going? she wrote. They long ago agreed never to use instant messaging slang.\n\nStill waiting, he typed back.\n\nHow is it seeing her again?\n\nNot easy . . . makes me wonder.\n\nYou know you're doing the right thing! It was never a question with Chelsea.\n\nNot sure that makes me feel any better.\n\nDo I need to come down there and slap some sense into you?\n\nRon chuckled.  No.\n\nBe happy. You're about to start a new relationship.\n\nNew development. Had dinner with Mary Wednesday.\n\nShe still in the running?\n\nYes, but there's more.\n\nWe'll get plastered tonight and you can tell me about it.\n\nDon't know if I'll feel up to it.\n\nA tap on his arm brought Ron back to the harsh reality of the courtroom. \"We're next,\" Tim advised.\n\n\"Okay.\" He checked his watch. Fucking 2:00 p.m.\n\nI'm up. Gotta go.\n\nLeave it to me. You'll feel up to it. Good luck.\n\n* * *\n\nNo matter how adverse one anticipated a situation to be, even if the nature of the situation was inherently untoward, normally, after all was said and done, it just was not that bad.\n\nAs Ron departed the courthouse, that was the realization to which his attorney attempted to bring him, even in light of the fact that Dana's attorney, at the last minute, sprang on them a charge of adultery. Ron had been horrified and vehemently denied that he had cheated on his wife during their marriage. But they had photos of him and Jenna at the Italian restaurant, at the club, at her apartment, and kissing Brianna goodbye at the marina. Ron argued that these were taken after he and his wife had split up and were no longer living together. However, the judge pointed out that until he signed the divorce decree, Ron and Dana were still legally married. The judge also admonished Dana's attorney for such a cheap shot. But that did not prevent her from filing a motion for divorce on grounds of adultery.\n\nThe judge allowed Ron and his attorney to discuss the matter for a few minutes, and the lawyer tried to convince his client that such a charge meant nothing anymore. Sure it would be in the public record and in the final divorce decree, but in the grand scheme, nothing would come of it. Conversely, if Ron chose to fight it, which Tim was more than willing to do, they would be dragging out the divorce for several more weeks. Tim's advice was to just go along with it. It just was not that bad.\n\nRon finally agreed and everything was finalized.\n\nNow outside in the fresh, crisp, fall air, Ron came to the realization that Tim was correct: it just was not that bad. Particularly because, now, he was free, could do what he wanted with whomever\u2014or with however many whomevers\u2014he wanted.\n\nThat is, until Dana and her attorney crossed paths with Ron and Tim. There were a few awkward moments.\n\nThen Ron felt he should say something. Extending his hand, Ron said, sincerely, \"Dana, I wish you nothing but the best. I hope we can remain friends.\"\n\nBut her face took on an expression of complete and utter disdain and scorn. \"You cheating bastard, I have nothing to say to you. Get out of my face.\" And with that, she scurried off with her attorney in tow.\n\nAnd in an instant, it got just that bad.\n\nTim attempted to sooth Ron by telling him it was just her anger of the moment and that it would pass, but Ron just held up his hand to shut up the attorney.\n\n\"I'll call you,\" Ron said and walked off.\n\n* * *\n\nThe vibrating cell phone snapped Ron back to reality. He realized he had not taken it off silent. Glancing around outside the windows of his SUV, he discovered he had no idea where he was. Obviously, he had been riding around preoccupied with the display of hatred Dana had shown. He had always prided himself on liking everyone\u2014even people he had no use for\u2014and being liked by everyone. But this was a trip into the dark side of uncharted territory\u2014and it hurt. It hurt deeply.\n\nSwitching his phone off of silent, Ron read the text message from Chelsea.\n\nAnywhere near finished?\n\nRon had to pull over to text her back. Yes.\n\nAnd . . .\n\nNot good.\n\nMeet me.\n\nNot in the mood.\n\nThen I'll be at your place waiting . . .\n\nShit! She wasn't going to let this go, Ron thought in exasperation. He really wanted to be alone, but he didn't want to have to drive around to do so. He could get a hotel room. However, Chelsea would just continue to text him; or now that she knew he was out of court she'd probably start calling. Of course, he could simply turn off his phone. Aw, hell, he might as well just go home and get it over with. Maybe he could convince her he was okay and she would go away and leave him alone. Although, that was not likely with the thoughtless responses he had texted her.\n\nRon cranked up his GPS, set it to take him home, and off he went.\n\n* * *\n\nNo matter what expectations Ron had when he arrived at his apartment, of one thing he was certain: whatever was in store for him would not be what he expected.\n\nHe put his ear to the door before inserting his key, but heard nothing. Well, of course, Chelsea would not be here. How would she have gotten in? He didn't notice anyone sitting in a car in the parking lot.\n\nStill, he unlocked the door with trepidation.\n\nNo one was in his field of view\u2014until he closed the door. There, standing behind it not only was Chelsea\u2014he had to blink a couple of times to make certain his eyes weren't deceiving him\u2014but also Jenna and Mary. And if that wasn't enough, they were all dressed in very sexy negligees of very similar styles; nothing see-through, but low-cut to show enough of each woman's breasts and cleavage, mid-thigh length, but in colors to suit each lady: coral for Jenna, fire engine red for Mary, and royal blue for Chelsea. A myriad of thoughts flooded his already overtaxed brain. Who had arranged this? How had they gotten in? How long had they been here? Why were they so dressed? And potentially the most frightening question of all: what had they discussed and how had they gotten along?\n\nBefore he knew what was happening, Chelsea was placing a cold beer in his hand, Jenna was removing his coat and Mary undoing his tie. Still stunned, he allowed them to lead him to the couch where he sat down. Jenna and Mary sat on either side, Chelsea on the love seat. Mary finished removing his tie while Jenna unbuttoned the top two on his shirt.\n\n\"Tell us . . . when you're ready,\" Chelsea urged, albeit softly.\n\nIn a daze, but uncertain whether it was due to the miserable day or the three beautiful women waiting for him, Ron glanced at Jenna with much of her medium sized tits exposed, her nipples standing out against the nylon material, the hem of her nightie high on her thighs; and then over to Chelsea, her breasts a little bigger but with an equal amount revealed, her nipples also pushing against her nightgown, as much of her legs available to his view; and then to Mary, her large globes and nipples straining against her negligee nearly revealing her areolas, not the mention her beefy thighs . . . it was clear why they were doing this: to take his mind off of the divorce. But was he really in the mood for it?\n\n\"Dana's lawyer pulled a last minute stunt and had the reason changed to adultery. They had pictures of Jenna and I from last weekend. So now, I am divorced on grounds of adultery\u2014\"\n\n\"So's mine,\" Mary interrupted. \"It's no big deal, Ron.\"\n\n\"Mine, too,\" Jenna added. \"She's right. It doesn't really mean anything.\"\n\n\"Yours?\" Ron repeated, turning to Jenna in amazement. \"But yours was consensual.\"\n\n\"Yes, well, Jerry was under this mistaken impression that it would be damaging,\" she laughed, \"like I would have to wear a scarlet letter or something.\"\n\nMary giggled at that. \"For some people, it's like a little victory where there's nothing to be won. And unless you tell people, no one will even know.\"\n\n\"It'll be printed in the newspaper,\" Ron said, dejectedly.\n\n\"Way in the back in print so small no one can hardly read it,\" Mary countered.\n\n\"It's a matter of public record.\"\n\n\"How many people do you know that go searching through county records to see who's got a charge of adultery?\" Mary asked.\n\n\"Besides,\" Chelsea chimed in, \"it doesn't mean a thing to the people who know you and care about you, like the three of us.\"\n\n\"They're right,\" Jenna agreed.\n\nWith a heavy sigh, Ron said, \"Okay.\"\n\nBut Chelsea could tell something by the tone of his voice. \"There's more. What is it?\"\n\nReluctantly, Ron told them about Dana's parting words.\n\n\"That sounds almost exactly like what I told Jerry when our divorce was final a couple of weeks ago,\" Jenna informed them.\n\n\"And what I told my ex a couple of years ago,\" Mary noted. \"And look, we ran into each other last weekend at the mall, had a civil discussion, and now he wants to get back together.\"\n\n\"I just wanted us to stay friends,\" Ron said.\n\n\"Wait until the dust settles,\" Chelsea recommended.\n\nRon had been sipping his beer throughout, and now, he drained the bottle. Chelsea immediately collected it and fetched him another, then brought glasses of wine for the ladies and her.\n\n\"What are you trying to get me drunk?\" he asked.\n\n\"If that's what it takes,\" Chelsea said.\n\n\"What the hell's going on here, anyway?\" Ron wanted to know, lifting the hem of Jenna's negligee and letting it fall, to substantiate his question.\n\n\"We just wanted to make you feel comfortable,\" Jenna answered.\n\n\"And wanted,\" Mary added.\n\n\"You set this up?\" he asked Chelsea.\n\n\"I did,\" she admitted. \"To ease your mind.\"\n\nHe nodded. \"To what end?\"\n\n\"To whatever end you want,\" Mary filled in.\n\n\"And however you want it,\" Jenna concurred.\n\nRon mustered a smirk and asked, \"Do you realize the implication of that offer?\" It was a reference to a conversation they'd had a couple of weeks ago before the first time they had fucked.\n\nJenna grinned, \"Do you realize the offer that has been implied?\" It was the same answer she had given.\n\nBut then, he became serious. \"I do. But here I am with three beautiful, nearly naked women and I don't even have an erection to show for it.\"\n\nSensing that there was some hidden meaning to that exchange, Mary jumped in, \"Oh, I bet it's around here somewhere. We just need to find it. Don't you agree, Jenna?\"\n\nSeeing what she was about, Jenna answered, \"Absolutely. Where do you think we should look?\"\n\n\"Well, we should start in the most obvious place.\" As she was saying this Mary's hands were sliding down Ron's zipper.\n\nJenna didn't waste a second attending to his belt.\n\nRon glanced over at Chelsea, who just seemed to be enjoying the show, if her hard nipples were any clue. He bet if she spread her legs he'd find a very wet pussy. She merely smiled at him, winked and nodded. It must have taken a massive amount of convincing to get Mary and Jenna together, all to help him get through the remainder of the day. Perhaps it was time for him to cease wallowing in his own self-pity and show some appreciation.\n\nGlancing back down to the action, Mary had slid off the sofa and dropped to her knees to pull his trousers and jockeys off\u2014having first removed his shoes and socks\u2014while Jenna was handling his shirt. Of course, he had to assist by lifting his ass for Mary and leaning forward for Jenna. In no time, they had him undressed.\n\n\"Wow!\" Mary exclaimed. \"It's not often I get to play with a soft cock.\" She cupped his balls. \"It's kinda nice.\"\n\nJenna held up his flaccid dick, moving it around in her hand. \"Yes, it is. And I've never really watched one grow. Have you?\"\n\n\"No.\"\n\nAs they were saying this, with hands from two different women on his penis and scrotum, he gradually began to grow. Jenna joined Mary on her knees and both watched in fascination as his cock made the conversion from limp sausage to bone-hard, solid hunk of meat. The lust in their eyes was unmistakable as their mouths attacked what their hands held.\n\nWhile Jenna was giving Ron a very sensuous blow job, using her talented mouth to coat his steel rod with saliva, her tongue massaging the very tender underside, Mary moved aside to give her room. Mary then knelt on the sofa beside Ron and leaned in for a passionate kiss, swapping spit and dueling with their tongues. After a few minutes, Jenna looked up, saw what Ron and Mary were doing, decided she wanted some of the same and assumed a position similar to Mary's on Ron's other side. Mary's hand reached down to stroke Ron's cock, keeping it alive, and when Jenna leaned in for a three-way kiss, Mary felt his dick expand with excitement. That prompted her to have a taste and she went down to take him in her mouth.\n\nWith one eye open, Ron spotted Chelsea all alone on the love seat, her heavy breathing signifying her arousal over what she was watching. He gestured with his hand for her to join in, but she merely shook her head.\n\nGlimpsing that, Mary stood, stepped over to Chelsea, pulled her up and walked her over to the sofa, then helped her to squat over Ron's cock. Mary grabbed it and held it up so she could easily impale herself. Jenna stopped her kissing, assisting Chelsea to steady herself.\n\nA deep sigh escaped Chelsea's lips as she sank down, feeling the glory of Ron's saliva-coated dick touching every inch of her wanting vagina. Once she established a front to back motion, the other ladies each put an arm around her and the other around Ron. Jenna held the back of Ron's and Chelsea's heads and moved them together until their lips met. Jenna then started placing kisses on Ron's head, ears and neck, prompting Mary to do the same on the other side. Ron was able to latch on to a breast of on each of the women on the side of him.",
        "Mary and Jenna pivoted a bit more to face him, and from this angle, he was able to let his hands drop and slide a finger into each of their drenched pussies. Unchartered territory: fucking one woman, while finger-fucking two more.\n\nWhat the hell had he been so down about before?\n\nWithin minutes, Chelsea's breathing intensified and her moaning grew louder. Withdrawing his pussy-soaked fingers, Ron wrapped his arms around her and pulled her to him to see her through her orgasm. She did likewise around his neck. Then feeling wicked for a moment, with his arms crossed around Chelsea's back, he fed a finger into Jenna's and Mary's mouths, and whether either realized she was sucking the other's pussy juice off his digits, it didn't seem to matter; they went at it hungrily.\n\nChelsea's climax was intense, the others having to support her from falling over backwards. She collapsed on him when she finished. Though none of the others came, all were breathing heavily.\n\nWhen all had caught their breath, and were sitting side by side on the sofa, their heads leaning against the backrest, Jenna said, \"Wow, that was hot! Let's take this to the bedroom where we can really have some fun!\"\n\nAll arose, and as they walked off, Chelsea said, \"You go ahead. I think my work here is done.\"\n\n\"You can't go yet,\" Ron said. \"We're only just starting.\"\n\n\"You three are only just starting,\" Chelsea corrected. \"I promised my husband I wouldn't be late, and if I go back there with you, I have a feeling I'll never leave.\"\n\nMary and Jenna each hugged her.\n\n\"Thanks for organizing this,\" Jenna offered.\n\n\"My pleasure.\"\n\n\"You two go get comfortable,\" Ron suggested. \"I'll see her out.\"\n\nAfter the other two were gone, Ron asked, \"What was this all about? And how did you get those two together?\"\n\nChelsea retrieved her clothes from the dining table, removed her negligee and dressed. \"I had a feeling this would not be a good day for you and that you would come home pretty much in the mood you did. So, I thought about possible solutions, and this seemed best because I thought you would need what just happened and what is yet to come\u2014pun intended.\"\n\n\"Did you consider that getting those two together could be explosive?\"\n\n\"Seems like it is and will get even more so.\"\n\nRon shook his head. \"That's not what I meant\u2014\"\n\n\"I know, I was just attempting to lighten you up. Look, from the moment they met, Jenna and Mary got along as though they were best friends. They are two very special women. No wonder you've had such a hard time choosing. They've even had some discussions\u2014\"\n\n\"That's what worries me.\"\n\n\"Well, don't,\" Chelsea said reassuringly. \"The matter is well in hand, and I suspect by the time the first one leaves, a decision will have been made. Trust me.\"\n\n\"Okay, you've never steered me wrong.\"\n\n\"Now, you're talking.\"\n\n\"How did you even know how to contact them, and for that matter, how did you get in here?\"\n\n\"You've told me a number of times where you hide your key,\" she told him as though he was a dummy. \"And I'm not a senior executive assistant for nothing. If you only knew the similar types of things I have to do for the boss\u2014this was a piece of cake.\" She leaned up and kissed him. \"Now, you go on. You've got two beautiful young women anxiously awaiting you. We'll talk on Monday.\" And with that, she was gone. \n\n* * *\n\nThe light in the bedroom was muted in shades of red and coral. The reason was instantly clear as the women had draped their negligees over the two bedside lamps to provide just a small amount of illumination. That meant both ladies were obviously naked under the covers. They were facing each other, each on one end of the bed, leaving a narrow spot in the middle for him. He crawled up from the foot of the bed and they lifted the covers for him to join them.\n\nOn his back, Jenna, to his right, and Mary, on his left, scooted closer all the way against him on their sides. The softness of their skin pressed against him was comforting. There was just nothing like the feel of naked skin against naked skin. Jenna turned his face slightly to her and kissed him, her tongue finding its way past his lips. It lasted only a minute before she relinquished his lips to Mary. If this was a contest, there was no way he could pick a winner.\n\n\"This is almost scary having the two of you together,\" Ron noted.\n\n\"Why? Did you think we were going to duke it out or something?\" Jenna asked in between kissing.\n\n\"Or something.\"\n\n\"You didn't think we would get along?\" Mary added, after her turn kissing.\n\n\"Well, I didn't know what to think.\"\n\n\"Turns out, we really like each other,\" Jenna noted.\n\n\"You do?\" Ron said, somewhat amazed, although where Jenna was involved, he shouldn't have been. Mary, on the other hand, could be showing a new side to herself.\n\n\"If you don't believe us . . .\" Without another word, the two women stretched their necks over his head and kissed each other as sensually as they had him.\n\nRon though he was going to pass out. \"Did Chelsea put something in my drink? I must be dreaming.\"\n\nBoth women pushed the covers down below all of their knees. Kissing him again, Jenna also grabbed his rock hard again cock and stroked it, while Mary, with a hand on his abdomen, sucked on his left nipple. He put his arms around both of them and they took that as encouragement to kiss each other again. Jenna was still holding his rod, which seemed to be getting harder if that was possible, and went back to kissing him. Mary went down on his tool, taking it all the way down to Jenna's hand. The latter cupped the former's cheek every time she went down. Jenna's hand and Mary's mouth went up and down in unison. A minute later, Jenna moved down, stopping briefly to press her lips against Mary's before the two traded positions.\n\nMary kissed Ron again, but was more interested in sucking his nipple once more. She alternated between that and his lips, Until Jenna moved up and kissed the side of his face, then she and Mary locked lips again.\n\nIt was a turn on, to say the least, being able to watch two women kiss directly above him, but then to have those two ladies be Jenna and Mary was even more incredible. But perhaps the most amazing part of it all was the fact that, on one level they were adversaries, but on the other they had become lovers. It didn't surprise him much about Jenna, but he had no idea Mary had a bi side.\n\nNow, they were ready to escalate this m\u00e9nage \u00e0 trois. Mary laid back next to Ron turning on her side away from him. She lifted her leg to signify her desire. He was all too happy to accommodate her so he guided his oozing cock easily into her wet snatch and started pumping away. Jenna was kneeling on his other side with her hand on Mary's ass, and she alternated between kissing him on the lips, then Mary. Again, he was astonished at how much the women were getting into each other. Ron moved his arm under Mary's neck and around to play with one tit while Jenna played with the other.\n\nAfter several minutes of this, Ron pulled out and lay on his back. Jenna quickly mounted him, facing his feet, and began bouncing up and down while Mary went back to kissing him. He grabbed Jenna's hips as she rubbed Mary's thigh.\n\nJenna soon tired of her position and rolled onto her side between Ron and Mary, almost without letting his cock slip out. A flick of her wrist had him back inside her juicy pussy.\n\nMary and Jenna were now facing each other, and as though they had found some new miracle drug, their mouths joined again and their hands covered each other's breasts. They even took turns sucking each other's nipples. It was great having his cock in either pussy, but with the action going on between the ladies, he didn't know how much longer he could last.\n\nBut Jenna was the one who didn't endure. She came hard, flooding Ron's cock as Mary backed away to watch. Sensing Ron was not far away; Jenna pulled away, and turned Mary over guiding her to a position on her hands and knees. She then directed Ron around behind to take Mary doggy style. Jenna was lying beside Mary on her back and she reached up to play with Mary's big dangling boob. Mary reached over and did the same to Jenna.\n\nHowever, even as close as Ron thought he was, he still held out as Mary climaxed, her juices running down hers and Ron's legs. \n\nThey all collapsed in a heap, and Ron was exhausted even though he had yet to come. When the ladies saw his pole still standing rigid, they attacked it with their mouths, heads sideways, sliding up and down his shaft in unison, the remnants of both their orgasms providing lubrication.\n\nThat was all it took before he started spurting. Each woman managed to capture some in her mouth with the remainder landing on the side of their faces. After they'd each had a chance to suck him dry, they naturally licked the residual come off of each other's face.\n\nMuch to his surprise\u2014although he shouldn't have been with these gorgeous, horny women and what they were doing\u2014Ron didn't deflate right away. He almost felt as though he could keep going. But as they relaxed on their backs next to each other, with him again in the middle, he gradually went soft.\n\n\"God, that was incredible,\" Jenna exclaimed.\n\n\"Yeah, I've forgotten how much fun threesomes can be,\" Mary agreed.\n\n\"So, you've done these before?\" Ron asked.\n\n\"A few times,\" Mary answered. \"Does that surprise you?\"\n\n\"I guess I've just lived a sheltered life.\"\n\n\"That's what I've been trying to tell you,\" Mary sighed.\n\n\"You know, you see this kind of stuff in porno movies and read it in erotic literature, but like what you see and read in regular movies and books, you know much of it is not real,\" Ron mused. \"So, you think it doesn't really happen.\"\n\n\"Oh, but it does,\" Jenna noted. \"Way beyond what you can probably imagine.\"\n\n\"Yes, I'm beginning to realize that.\"\n\n\"And was a threesome everything you dreamed it would be?\"\n\n\"It was with the two of you,\" Ron grinned devilishly. \"I don't know that I could ever get tired of that.\" He caught Jenna and Mary exchange a look of . . . what? So, he tactfully added, \"Particularly, since the two of you seem to be getting along so well. I'm still anxious to know how that came about.\"\n\n\"Chelsea didn't explain?\" Mary asked.\n\n\"She only skimmed the surface. It made me believe there was much more.\"\n\n\"She called me this afternoon,\" Jenna explained, \"identified herself, said your divorce hearing had been pushed up to today, and that she had texted you and received a reply that concerned her, that maybe it wasn't going well. She said that she had been having this feeling all day that you were probably going to come home in a rotten mood and thought it might cheer you up if she could get a few people together. She didn't elaborate on who the few people would be and I didn't ask. She then asked if I thought I could come to town and be there. I said of course I'd be there.\"\n\n\"That's almost exactly the discussion we had,\" Mary said. \"I had to reschedule an appointment, but that wasn't a problem.\"\n\n\"So, the three of you sat around all afternoon waiting for me?\" Ron asked in amazement.\n\n\"Yes,\" they answered in unison.\n\n\"I'm afraid to ask what you talked about.\"\n\n\"Why are you so worried about Jenna and me meeting and talking?\"\n\n\"I guess because I've never had good luck with my girlfriends getting along. I mean, look at you and Dana.\"\n\n\"No offense, Ron, but Dana is a backward prude. She belongs back in the '50s,\" Mary said condescendingly. \"I'll be the first to admit that I didn't give yours and my first go 'round a chance because I was too wild and reckless. But I still liked and cared for you even after we broke up. I couldn't just turn that off\u2014not like Dana thought I should. Jenna and I are very much alike, so is it so hard to believe that we could actually like each other and get along, so much so that we're doing a threesome with you?\"\n\n\"I think Ron's real concern, Mary,\" Jenna attempted to explain, \"is us finding out how he feels about us. I think he needs to know that we both know the dilemma he is dealing with in trying to choose one of us.\"\n\n\"Oh, my God, you both know about that?\" Ron asked, horrified.\n\n\"Well, as you pointed out,\" Jenna said, \"we had a lot of time to talk. And it seems Mary knew more about it than I did.\"\n\n\"That's only because she's got a decision to make also.\"\n\nFeigning anguish, Jenna whined, \"So, what, I'm the leftover? Mary decides she wants her ex so then you have no choice but me?\"\n\n\"No, no,\" Ron denied, trying to calm her. \"It isn't like that. I didn't ask to have to make a decision between the two of you. I don't want to have to make a decision between the two of you. I was forced into it. I\u2014\"\n\n\"Now, you're saying you don't want either of us?\" Mary jumped in.\n\n\"No, no,\" Ron cried. \"You're twisting this out of shape. I love both of you, but it's too painful to have to make a decision\u2014\"\n\n\"Well, what makes you think the decision is yours to make?\" Mary shot back.\n\n\"Yeah,\" Jenna agreed. \"Maybe Mary and I will just decide if either of us really wants you. Maybe you'll be lucky to get one of us.\"\n\n\"Oh, please,\" Ron pleaded, \"you've got this all wrong.\"\n\n\"Maybe it's you we've got all wrong.\"\n\n\"What do you mean?\"\n\n\"I mean,\" Jenna said, \"here you are this great looking guy, with a man-size cock any woman would die for, and you're acting like a school boy who can't get a date for the prom.\"\n\n\"What?\" Ron asked, appalled.\n\nAt this point, Mary burst out laughing, and Jenna could help but join in.\n\nNow, really confused, Ron sat up. \"What the hell is going on here?\"\n\nThey pushed him back down and each woman slid as close to him as she could get, each hooking a leg on one of his, their pussies rubbing against his hips, a breast of each laying on his chest.\n\n\"I'm sorry, baby, we were just having a little fun at your expense,\" Jenna confessed.\n\nBoth ladies pressed kisses against the side of his face, taking turns on his lips.\n\nHaving calmed down, the softness of their bodies against him helping, Ron asked, \"So what did I do to deserve that?\"\n\n\"Are you mad?\"\n\n\"No, I can take a joke.\"\n\n\"You were just so concerned about Jenna and I talking and spending time together,\" Mary explained, \"we just thought it might prove to you that it was okay. We know we put you in the position of having to choose between us and we want you to know that it's just not a problem. We don't want you to have to stress about it. If you don't want to make a decision, don't.\"\n\n\"What does that mean?\" Ron wanted to know.\n\n\"You're the one who keeps saying that we should just take it as it comes. But right now, nobody's coming\u2014and that's what we should be doing.\"\n\nWithout waiting for a response, Mary grabbed his hardening cock and sat on it, sliding it easily into her still wet cunt. She was facing Ron's head. Not skipping a beat, Jenna threw her leg over Ron's face, her pussy landing squarely on his mouth. They might have duped him once, but he was ready this time. His tongue darted into Jenna's hot, moist snatch, lapping up her juices while he automatically started thrusting up to meet Mary.\n\nRon couldn't see what was going on above him, but he felt Jenna lean forward. What he didn't know what that she and Mary had reached out to embrace each other, which of course, led to their lips meeting. There was nothing like the taste of a soft, sweet pussy, and then to have his cock in the warm, velvet embrace of another\u2014well, for that, they could tease him all they wanted.\n\nRon allowed his tongue to travel past Jenna's vaginal opening to that area of skin between it and her anus. After several strokes, she got the idea and slid forward enough for his tongue to saturate her puckered hole. He forced it in, and the yipe she emitted was a sign of her enjoyment. He reached his hand up to her pussy, stroking her clit while tongue-fucking her ass. She came in minutes, drenching his face in her saccharine juices. Worn out by the effort, she swung her leg over and laid down beside Ron.\n\nThey were both concentrating on Mary, each lifting a hand to tease her nipples, twisting, squeezing, lightly rubbing the tips. Mary bent down to kiss and lick Jenna's juices off of Ron's face. Witnessing this, Jenna pulled the other woman's lips to hers to taste herself.\n\nHaving a new idea, Jenna pulled Mary off Ron onto herself to continue their kiss. She then directed Ron to take Mary from behind. When he slid back in, her pussy was resting atop Jenna's. Not only could Jenna feel Mary's cunt rubbing against hers caused by Ron's thrusting, the feeling was heightened by his balls slapping against her vagina. Ron had been holding himself up on extended arms, but Jenna pulled him down, wrapping her arms around both him and Mary.\n\nThis caused Mary to climax with loud moans, which in turn, triggered Ron's. \"Come in me,\" Mary pleaded.\n\n\"But save a few drops for me,\" Jenna begged.\n\nSo after shooting three jets into Mary, Ron quickly pulled out and jabbed into Jenna's snatch to deposit three more bursts into her. When he finished, and was certain Mary was, he rolled off onto his back. Mary rolled the opposite way putting Jenna in the middle.\n\n\"Damn, you come up with some great positions, Jenna,\" Mary complimented.\n\nAs the afterglow gradually faded, slumber slowly took over.\n\n* * *\n\nLike clockwork, Ron's internal alarm went off at six a.m. on Saturday morning. Normally, on weekends, he just turned over and went back to sleep for an hour or two. But this morning he was starving.\n\nHearing the gentle breathing of the two gorgeous creatures beside him was a reminder of Friday's events. His day in court was now a vague memory. However, the events following his arrival home were still very vivid. That brought a smile to his face.\n\nHe eased out of bed very quietly to avoid awakening the ladies, and before he stepped into the bathroom, he took a moment to admire the sleeping forms that adorned his bed. God, they were beautiful: Jenna with her trim\u2014not skinny, just enough meat on her bones\u2014body and rounded conical breasts and perhaps the best ass on the face of the earth; and Mary with her buxom\u2014not plump or fat, just a little more meat than she might like, but it appealed to him\u2014body and her large, ball-shaped tits and globular behind . . .\n\nJenna, so even-tempered, easy-going, and willing to do anything (sexually, as well); and Mary, a bit more strong-minded, mostly agreeable, but always eager to please . . . and both such intelligent women.\n\nIn that moment of watching them, he instantly made his decision\u2014as though he had been driving in a fog and it suddenly cleared. And surprisingly, it was easy.\n\nHe quickly used the bathroom, slipped on some boxers that he normally slept in and went to the kitchen where he put on a pot of coffee and toasted a couple of slices of bread.\n\nWhile the coffee was brewing, he spread some jam on the toast and contemplated his decision. But oddly enough, his mind was blank. He found he had nothing to analyze. He was very comfortable with his decision, unlike the many situations over the last two weeks in which he had spent hours in reflective thought. Now, he had no need to self-psycho analyze. That in itself was an eye-opener.\n\nIt was just as well, because only minutes later, a groggy Mary appeared in an oversized T-shirt that she had probably grabbed out of his dresser\u2014it looked better on her anyway\u2014and her almost non-existent panties. The coffee had finished dripping, so before uttering a word, she poured them each a cup, sat beside him, taking a bite from the half-slice of toast that was left and finally spoke. \"Good morning.\"\n\n\"No, it's a great morning,\" he said, enthusiastically.\n\nThat caused her eyes to blink wider, as though that was too much cheeriness for her to take this soon. \"Okay, why is that?\"",
        "\"I've made my decision.\"\n\n\"Oh,\" Mary responded quietly. \"And that is?\"\n\n\"Well, I think we should wait for Jenna.\"\n\n\"Uh, I don't know how to tell you this, but I've made mine also.\" Mary almost sounded somber. Or was she just not completely awake yet?\n\nThe tone of her voice was a dead giveaway. His mood slowly sank. \"It's not me.\"\n\nWith a grimace, Mary said, \"This is not the way I wanted to tell you.\"\n\n\"You've gone too far now.\"\n\n\"Now that I've met Jenna, I can see why it's been so hard for you.\" She reached out and touched his hand. \"It's been just as difficult for me. Believe me, it has. A big part of me wanted us to resume to see where we would have gone had we stayed together years ago. But another part felt I should give Rusty the chance I never gave our marriage.\"\n\n\"What was the deciding factor? Was it something I did?\"\n\n\"No, no, Ron, not at all.\" Her eyes watered. \"I love you very much. I never stopped loving you. I think a part of me will always love you. But meeting Jenna yesterday and talking to her, getting to know her and seeing the two of you together . . . the two of you belong together. She is more right for you than I will ever be.\"\n\nRon had that gripping, tingling feeling in his throat, like he was going to cry. He said nothing.\n\n\"I can see by the Dana look on your face,\" Mary observed, \"that you're not happy, meaning you don't agree with my decision, meaning Jenna was not your choice.\"\n\nSwallowing hard, with difficulty, Ron forced himself to speak. \"You were both my choice.\"\n\nMary frowned with incomprehension.\n\n\"I was going to talk to the two of you about maybe us being a threesome. The two of you got along so well and we had so much fun last night.\"\n\nLeaning closer and gazing deeply into his eyes, Mary said, \"Ron, when I said I'd only had a few threesomes\u2014\"\n\n\"I'm not just talking about sex.\"\n\n\"I know. Just hear me out. When I said I'd only done a few threesomes, what I didn't add was that I was a hesitantly reluctant participant. And the one with another woman was really hard to swallow\u2014if you'll pardon the pun. But the special thing about Jenna is that her sexual aura is so strong, I found myself not only doing things with her I'd never done, but really wanting to do them. And better still, this morning I don't regret doing any of it. I'll even go one step further and say that I'd spend another evening some time doing the same things with the two of you. In fact, I'd really like to.\n\n\"But to live the lifestyle you're suggesting . . . that's not for me. At least at this time in my life. Besides, I do really want to give Rusty another chance. He's really a great guy\u2014maybe as great as you. I think he deserves it.\" Mary paused to study Ron. When he still said nothing, she added, \"Perhaps the four of us could get together sometime, go to dinner or something.\"\n\nPulling himself together, Ron said, \"That would be nice. I'd really like to meet him.\"\n\n\"Good.\" She looked at him closely again. \"Are you okay?\"\n\n\"Yeah, I'll be fine. I just . . .\" He started to explain, but instead just said, \"It was an impulsive thought. If I'd taken the time to think about it, I probably would have seen the impracticality of it.\" Maybe that was true.\n\nMary grabbed his head, pulled it to her and kissed him passionately. \"Jenna's one lucky girl.\"\n\n\"It'll never be too late to change your mind.\"\n\nBut before she could respond, Jenna appeared, similarly attired. \"You two look too somber for the morning after such a wonderful night.\"\n\nLooking up at her, Mary explained, \"Ron has made his decision. He doesn't want to choose between us. He wants us to be a threesome. A permanent threesome.\"\n\nWith raised eyebrows, Jenna commented, \"Wow, now there's a concept.\"\n\n\"Mary has come to a decision also,\" Ron informed her. \"She wants to give her ex another chance.\"\n\n\"Really?\" Jenna said in a surprised voice, though she wasn't really. \"And all of this happened while I was sleeping? Just goes to show, snooze and you lose.\"\n\n\"I just don't think I could live a life like that,\" Mary said in her own defense. \"Besides, I think the new me really does need to give Rusty another chance. But I truly enjoyed last night. In fact, I'd like to get together again some time and do it again with you guys.\"\n\n\"Well, I don't know that there's going to be a 'you guys.'\"\n\n\"What?\" Ron and Mary chimed in unison.\n\n\"You said Ron's decision was for a threesome. Now that you've subtracted yourself from the equation, he hasn't said what that leaves.\"\n\n\"Gotcha.\" Mary nodded her understanding. \"Then it sounds like the two of you have some talking to do, so I'll leave you to it while I go shower. I'm meeting Rusty for lunch. We've got some talking to do.\"\n\n\"You've already called him?\" Ron asked, surprised.\n\n\"No, we set this up earlier yesterday. There are some compromises to be made.\"\n\n\"Now there's an interesting concept,\" he remarked.\n\nAfter Mary walked off, Jenna noted, \"Sounds like that last statement was directed at me.\"\n\n\"Earlier this week,\" Ron began as Jenna helped herself to a cup of coffee, then took the chair formerly occupied by Mary, \"I stopped at a lounge after work for a couple of beers and I ended up sitting with a psychologist. We got into a discussion, which led to me telling her about our board meeting weekend, the following week with Debi and Mary and the next weekend with you. I left out Chelsea, Brianne and Bret because I didn't want to over complicate the story. Anyway, her advice was that I get to know you and Mary better. Well, I had just spent the weekend with you, so I called Mary because, frankly, I thought that maybe her saying she wanted to get back together was just heat of the moment talk. But it wasn't. So, I thought that would be my quest: to get to know the two of you better.\n\n\"The other issue we discussed was the wild sex. I fear that after a while, after too much of it, I would get burned out. So, the psychologist's other advice was compromise. It couldn't be all about what you or Mary wanted, there had to be compromise.\"\n\n\"And yet,\" Jenna concluded, nodding, \"You wanted a permanent threesome with us.\"\n\nRon shook his head. \"That was an impulse. When I got up this morning and saw the two of you sleeping so innocently in bed, I thought it would be wonderful to wake up like that every morning. But I didn't think it through. I was going to wait until both of you were awake to mention it, but upon hearing Mary's decision, I had to tell her.\"\n\n\"So, are you disappointed by Mary's decision?\"\n\n\"If I had taken the time to think about,\" Ron admitted, \"I would have realized that it probably wouldn't have worked. So, no, I'm not disappointed.\"\n\n\"Actually, what I meant was, are you sorry it's her and not me pulling out?\"\n\n\"Absolutely not.\"\n\nJenna arose from her chair, moved over to Ron, pushed his chair back, fished his partially hard cock out of his boxers\u2014once in her hand it grew the rest of the way\u2014pulled aside the leg of her panties, then straddled him inserting his rod into her. She just sat there unmoving, feeling him pulse within her. \"Because I can compromise. I will compromise. But in order to do that, I think we need to define terms.\" She gave a few back and forth moves just to keep him hard, then stopped.\n\n\"What does that mean?\"\n\n\"Of all the sex you and I have had, which of it would you call wild?\"\n\nRon wasn't certain what her purpose was in sitting on him with his cock jammed in her while having this discussion, but he tried to stay focused. \"Just about all of it.\"\n\n\"All,\" she repeated, almost anticipating that would be his answer. \"Then what was not?\"\n\n\"The night in your apartment when we returned from the club.\"\n\n\"That's all?\"\n\n\"All that comes to mind. What do you consider wild?\"\n\n\"I'm glad you asked,\" Jenna grinned, moving a few more strokes. \"For me, wild would have been the drive home from the meeting, the boat trip with Bret and Brianne, and of course, last night.\"\n\n\"Then what was the rest?\"\n\n\"The rest was great sex performed in a manner to make it great. You probably think it's wild because it's straight sex in a manner in which you were not accustomed. To be truthful, even what I said was wild was not really. It was just sex with multiple partners, but because it was, most people would probably call it wild.\" She rotated her pussy in a couple of circles. \"Do you understand what I'm saying?\"\n\nForcing himself to think about what was her point instead of the glorious feeling of his aching cock sheathed in the warm and wet glove that was her pussy, he realized that she was right. For so long, he had associated ordinary sex as what he had with Dana and that what he'd had with Jenna, sans extra participants, was inventive, but in his mind, so much of it was so way beyond Dana that he considered it wild. \"Yes, I do. It's almost a revelation.\"\n\n\"So, we're good to go?\"\n\n\"I think we are.\"\n\n\"Outstanding!\" She pressed her lips to his in a passionate kiss, let her hips go again, but this time, did not stop.\n\n\"You call this talking?\" Mary asked, all dressed and ready to go.\n\nJenna felt Ron's cock swell when he saw Mary, so she backed off the kiss, glancing at Mary herself. She was hot in a short skirt and low-cut top showing off all of her best attributes. \"We're speaking the language of love. But he likes what he sees so if you could stay there a minute, I think the volcano is about to erupt.\"\n\n\"Maybe this will help,\" Mary offered. She leaned over, not only providing him with a view down her top, but she also gave him a wet kiss with lots of tongue action. She turned his head to the side so Jenna had a good view. Jenna responded by squeezing her mouth in with theirs. The corners of their mouths were touching, and their tongues entwined in a spit-swapping dance.\n\n\"Oh, yeah!\" Ron managed to get out, followed by a blasting orgasm.\n\n\"My sentiments exactlyyyyyyyy,\" Jenna groaned through gritted teeth, following him.\n\nMary backed off to let them finish, but was feeling a little wet in her own panties.\n\nWhen Jenna got up off of Ron, Mary eyes widened at the sight of his luscious, still hard cock glistening with his and Jenna's combined juices. She licked her lips.\n\n\"Help yourself,\" Jenna offered.\n\n\"I'd love to, but I have to go.\"\n\nThe two ladies hugged. \"Stay in touch.\"\n\n\"I will, you lucky girl.\"\n\n\"It's not too late to change your mind,\" Ron said, slipping his slimy penis back into his shorts.\n\n\"Well, if Rusty and I don't come to an agreement or if it doesn't work out, I might just.\"\n\nThey hugged and kissed. \"One way or the other, let's not make it a few more years like it was.\"\n\n\"Oh, don't worry,\" Mary reassured. \"Jenna and I are on the same page, unlike Dana and I who were in different volumes.\"\n\nShe kissed them each again, and then departed.\n\n* * *\n\nThey spent the remainder of the day\u2014and weekend\u2014lazily. They talked and made love and talked and fucked . . . and even managed to fit in some meals.\n\nIn the end, they made few rules for themselves and their new relationship, deciding to just let things happen as they may and take things as they came. If one or the other did something that one or the other didn't like, they would try to discuss it rationally and come to an agreement.\n\nAs to the rest . . . the journey into uncharted territory had come to an end, they had now reached familiar ground. And while there might still be unknown highways to travel, anything from here on would simply be adventures . . . beyond the ordinary . . .\n\nThe end of the Uncharted Territory series . . . but Ron and Jenna will return."
    ],
    "authorname": "RonCabo",
    "tags": [
        "novella"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/uncharted-territory-pt-05"
}