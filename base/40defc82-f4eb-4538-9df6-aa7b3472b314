{
    "title": "Everything You Want Ch. 03",
    "pages": [
        "Angie tried to concentrate on her desk, her work, but nothing was registering. Her eyes continued to wander around her office as her mind fuzzed over. She wasn't really sure what was wrong, but she knew that staying at work was out of the question.\n\nShe knew if her boss came by and saw her staring blankly into space, he would shoot a critical look her way. But she didn't care. She was in a serious funk. \n\nLooking down at the off-white file folder on her desk, she tried to focus on its contents. It was a grisly murder scene. She should have been used to it, working on the Homicide Unit. But it was always a little rough to take when murders involved children. \n\nSighing, she shut the folder. There were a lot of things wrong today. She hadn't heard from Connor in over a week, since he spent the night after Roxie's wedding. She had to run an errand that morning and left him a note, saying she'd be right back. When she returned, he was nowhere to be found. \n\nAfter calling his cell phone and his apartment for three straight days, she gave up. Angie supposed she should have been used to his moods. When his mom was in the hospital for pneumonia four years back, he holed himself up in his apartment for nearly a week before she had to break in and threaten to drag his ass to the hospital. She was used to Connor's brooding ways, but it still annoyed the hell out of her. \n\nStanding up, Angie knew she couldn't stay there any longer. Grabbing her jacket from the chair facing her desk, she left her office quickly. Turning the corner to head for the stairs, she nearly ran into a warm body. She glanced up irritably into the laughing green eyes of her partner, Sean Reilly. \n\n\"Angie, you okay?\" he asked, steadying her. \n\n\"I'm fine, Reilly. Look, can you tell Chief I'm heading out early?\" she asked, shrugging on her waist-length black leather jacket. \n\nSean eyed her. \"No prob, partner. You look a little worn. Everything okay?\"\n\n\"Yeah, I just need to crash.\"\n\nSean smiled. \"Do that. After all, you're the one supposed to be watching my ass and I want you fresh and spry.\"\n\nAngie smiled tiredly. \"Bite me, Reilly. Oh, I left that Morelli case file on my desk. Have a look-see at it, will you?\"\n\n\"Will do, Ange. Now go home and get some rest.\"\n\n************************\n\nHurriedly leaving the precinct, Angie's breath hung in the chilly December air. Cursing herself silently for not wearing a warmer coat, she shoved her hands into her jacket pocket for the little warmth it would provide.\n\n\"Fucking city weather,\" she muttered aloud. Checking her watch, she realized that it was only 1:30. Deciding that going home to watch soap operas and talk shows would be too lame, she walked into the first coffeehouse she could find. \n\nAngie sighed contentedly as a blast of warm, muffin-scented air greeted her as she bustled into the shop. After ordering a large English toffee cappuccino and an extra-large cranberry muffin, she settled herself at a cozy table by the window to people-watch. \n\nWarming her hands around her cappuccino, she remembered that she and Roxie used to come into the city all the time and people watch. The park or some little window shop was the best place to do it. Roxie used to make up elaborate back stories for everyone they came across: a jilted ballerina dancing for her lost love, a man, once a whiz kid on Wall Street now playing guitar for change after a multi-billion dollar corporation collapsed and lost him millions. \n\nThey would buy ice cream and giggle as the world passed them by. And now her baby sister was a married woman and off living life in whirlwind of passion and love from an incredibly wonderful man. \n\nRoxie. She missed her sister. It had been over a week since she heard from her too. Angie brought the large, steaming bowl-shaped mug to her lips and took a generous swig from it, nearly burning her tongue in the process. Connor always joked that she could never wait for anything to cool. \n\nPopping a piece of the muffin into her mouth, she chewed slowly and pondered her situation. Without her sister or her best friend around, everything seemed so gray. Looking out at the overcast sky, Angie sighed when she noticed the little white swirling orbs falling. It was snowing already. \n\nGuess I'll take a cab home, she thought gloomily. She closed her eyes, and pinched the bridge of her nose to try and stave off the coming migraine. \n\n\"Playing hooky today, huh Detective Hartley?\" a deep voice asked.\n\nAngie's eyes flew open. It took a second for her eyes to focus, but when she did, she couldn't help the goofy smile that spread across her tired face. \n\n\"Well, look what the Hudson dragged in,\" she said, pulling the man into a hug.\n\n************************\n\nConnor took a huge bite of the bacon cheeseburger. Chewing slowly, he sipped the cranberry soda next to his plate. Swallowing, he sighed with relief. It had been a stressful week. Work was hectic. The fall and winter months were quite unpredictable at the firehouse. \n\nFrom little old ladies leaving their decorative lights on too long, or kids getting stupid with too many candles for a Halloween s\u00e9ance, it seemed like the lunacy would never end. \n\nHe was taking a well-deserved break in the kitchen of the firehouse, enjoying his meal when Luca Branzo walked in. Luca was a decent guy and one hell of a firefighter. Tilting his chin in greeting, Connor continued to plow his way through his extra large burger and side of fries. \n\n\"Gavin, jeez. Here's hoping you don't choke.\" Luca opened the fridge and helped himself to bottled water. \n\nConnor swallowed the lump of food. \"Bite me, Branzo.\"\n\nLuca took a large swig of water. \"I would, but I'm afraid I'd never see my hand again. What's up, Gavin? Tapeworm getting you down?\"\n\nConnor gulped down the rest of his soda. \"Nah. I don't know. Just been too busy for food. Now I'm not.\"\n\nLuca sat down at the table. Swiping a fry from Connor's plate, he crunched down heartily. \"Uh huh. So what's up man? You seem kind of pissy lately. What's wrong, hand not enough for you these days?\"\n\n\"Shut the fuck up Branzo,\" Connor said, laughing. \"We all know you hold the jack off record in the house.\"\n\nLuca laughed. \"Hey, man I gotta do something. Ever since my wife's been pregnant the shop's been closed. I've been going fucking stir-crazy, man. Three more months, dude.\"\n\n\"You realize that you can have sex with a woman when she's pregnant, right?\"\n\n\"Yeah, I know. But damn it just freaks me out. I don't say no to a blowjob.\" Luca chuckled. \"So, what's up with you? The boys and I have a bet going on. We're trying to see how long it's going to take for you to get laid. The pool's at about 250 dollars.\" \n\n\"Well, I'd hate to disappoint you guys. Come back to me when it gets up to 500.\"\n\n\"You're ridiculous, Gavin. You need to find yourself a girl and quick.\"\n\n\"Thanks mom,\" Connor retorted, polishing off the rest of his burger. \"I'm serious, dick.\" Luca replied. \"Whatever happened to that one chick you're always hanging out with? The black chick with the nice ass. She's fucking smokin' dude.\"\n\nConnor let his mind wander. Angie. He was avoiding her, he knew it. But he wasn't sure he could face her after what happened the night of Roxie's wedding. That dream was so real; he could almost taste her sweetness on his lips. \n\nCoughing, he brought himself back to reality. \"Uh, we're just friends,\" he said. \n\nLuca gave him a look that clearly said 'yeah right'. \"Uh huh. That's why when I just described her you had a look on your face like you just came in your pants.\" He gave his comrade a good-natured slap on the back. \"Dude, you need to be hitting that. Hardcore.\"\n\nConnor tried to shake those thoughts. \"What? No, man. Angie and I are friends. I've known that girl since grade school.\"\n\n\"Even better. She knows all the dumb shit about you and still wants to be around you. You've got a nice set up.\" Luca rose from the table and headed for the door. \"Think about it,\" he added, tossing his bottle in the trash and heading out into the hallway.\n\n************************\n\nConnor needed some air. Grabbing his black parka, he headed out into the snowy world of the city. \n\nHe felt like such an ass. He ignored Angie's calls because he didn't know what to say. \n\nCursing himself silently, he pulled his black and grey cable knit cap from his pocket and jammed it on his head. \n\nHe found himself walking the eight blocks to the precinct where Angie worked. It was now or never. He had to tell her how he felt.\n\nHis hands felt the icy pins and needles pricks as he walked into the heated building. Looking around, he was slightly overwhelmed. The place was buzzing with ringing telephones and the hum of voices from various desks all over. \n\nWalking over to the large front desk, he was flashed a brilliant smile by the pretty blonde officer seated behind the desk. \"How can I help you?\" she asked in a breathy voice, sitting up a bit taller now.\n\n\"Hey there. I'm looking for Angela Hartley.\"\n\n\"Oh,\" sighed the girl, feigning a look of interest. \"Angie left for the day, something about not feeling well. You can leave a message if you want, or you can just take it to her yourself. I'm sure she'd love to get something from her boyfriend.\"\n\nConnor had to laugh at the woman's not-so-subtle way of trying to see whether he was Angie's boy or not.\n\n\"Thanks, doll. But I'm not her boyfriend, just her best friend. I'll try and stop by her place; you know bring her some soup and all.\"\n\nHe gave her a friendly smile and turned to head back out into the cold. Flipping out his cell phone, he dialed her house. There was no answer. He tried her cell, but it was the same thing. \n\nPutting the phone back into his coat pocket, he began to walk again, careful not to step in the slick patches of ice. It was unusual for it to be this snowy, especially so early in November. \n\nConnor tried to think of places that Angie would go. Knowing her, she'd probably be holed up in some random coffee shop.\n\nTurning around, he headed in the opposite direction. He knew where she would be. There was a little spot two or three blocks from the precinct. A yoga instructor he hooked up with had a studio around the corner from the station. While he waited for her to finish her classes, he would stop in there for a quick cup of coffee and a bagel. It was nice, not too big but big enough for anonymity. \n\nThe shop was in his line of vision. Connor knew he had to apologize big time for being a dick but mostly, he needed to get his feelings off his chest. Angie was his best friend, the one person with whom the bullshit didn't matter. Tell her how you feel, his brain screamed. If at worst, she doesn't feel the same way and the friendship becomes a little awkward.\n\nConnor entered The Coffee Cup. It was warm and smelled like fresh muffins. The shop was a little busy, the air buzzing with the voices of pleasant conversation. Out of the corner of his eye, he spotted Angie sitting at a table right in front of the large window, the corners covered with the hint of frost. \n\nTaking off his hat, he walked over to where she was sitting. She looked good, a little tired. She was wearing a grey cable knit sweater that clung to her curvy waist, a French blue button down collared shirt underneath. Her grey wide-leg tailored trousers were pressed neatly and her pointy-toed heels completed her sleek look. \n\nAngie was busy sipping her drink out of her large bowl-like mug so she wasn't going to see him saunter over to the table. Walking up, he cleared his throat. \n\n\"How'd I know you'd be here?\" he asked, smiling.\n\n\"Maybe it's because you just left the table two minutes ago,\" she replied still looking down at the newspaper in front of her. Raising her head, her grin faltered slightly. \"Conny? I didn't know it was you.\"\n\n\"Oh, were you expecting someone else?\" Connor noticed a jacket hanging on the chair opposite her. \n\nAngie sipped her cappuccino. \"Actually I was. He just went to the bathroom.\"\n\nConnor felt a twinge of jealousy. Who the fuck is he, he fumed silently. \"He?\" he asked. \"He who?\"\n\n\"He me,\" a deep voice replied. \n\nConnor turned to the direction of the voice and his face fell. \n\n\"Hey there, Gavin. Long time no see,\" the man said, extending his hand. \n\nFeeling his throat going dry, Connor swallowed. His hand instinctively went out to grasp the man's outstretched palm. \n\n\"Likewise, Charlie.\"\n\n************************\n\nTo say that Angie was surprised to see Charlie was an understatement. After he helped her out with a favor for Dex and Roxie, the most contact she had with him was a couple of infrequent phone calls. \n\nShe definitely was shocked to see him standing there at her table.\n\n\"Charlie Mercado, it's been awhile.\"\n\n\"Yeah it has,\" he said, taking the seat opposite her. She studied his face. He was still very attractive. A product of a Puerto Rican mother and Italian father, he was blessed with golden looks. Skin the color of warm caramel, wavy black hair, and thoughtful gray eyes, Charles Diego Mercado was the object of many a girls' desire back in high school. \n\nUnfortunately for them, he only had eyes for Angie. They dated between their sophomore and senior years until Charlie left halfway through senior year to move across the country to live with his relatives in Echo Park, California. \n\nThey had parted amicably, whispering teenage promises to call and write each other often. She talked to him once in awhile during college and when she discovered that they both went to work for respective police departments, they maintained an online friendship. Although they talked on the phone and through email she hadn't seen him since the day he left New York over eight years ago. \n\nAnd now he was here for reasons unknown. \n\nAngie glanced up at the two men, who seemed to be sizing each other up. Connor's usually twinkling blue eyes were now a stormy midnight color. Charlie looked pensive yet amused. Things were always strained between the two men since high school. Angie decided to deflect the situation before they started pulling down their pants and playing the \"Who's Got the Bigger Dick\" game. \n\n\"So, Connor what's up?\" Angie asked. \n\nConnor turned to look at her. \"Uh, nothing.\" He glanced back at Charlie who seemed to be studying him with a small smile. \"Can I talk with you for a moment? Outside?\" \n\nHe gave Charlie a terse nod before turning to walk towards the door. Angie stared at his retreating figure before rising and putting on her coat. \"I'll be right back,\" she said to Charlie.\n\nSitting down, he flashed a grin. \"Sure. He okay?\" he asked, jamming his thumb in the direction of Connor who was outside pretending not to glare at them. \n\nAngie smirked. \"Who knows with him? Guy acts like he's on his period 24/7.\" She left the warmth of the coffee shop, shivering slightly when the icy blast of December slapped her in the face. \n\nRubbing her hands together, she eyed Connor beadily. \"Okay, Carla you wanna tell me what your issues are?\"\n\nConnor stared at her, her dark face shaped lovingly by her feathered brown bob cut just a few inches below chin length in that choppy way. She wore a little styling product it in, giving her cute punky layers all over. He couldn't be mad at her when she looked that way. \n\n\"What's he doing here?\" he grumbled. He was being a complete ass, and he knew it. But it didn't exactly stop him from running his mouth. \n\n\"Dunno. He came in for a visit. Stopped in to see me. Why?'\n\n\"Dunno. Just asking. I just think it's highly coincidental that he stopped in here like he knew exactly where you were going to be.\"\n\nAngie scoffed. \"Connor, this shop is like three blocks from the precinct. Charlie went there looking for me, and they told him I left early. Sean must have told him that I usually stop in here. No big deal. Besides,\" she eyed him suspiciously. \"Why do you even care? I haven't seen you in like a week.\"\n\nConnor shrugged his shoulders. \"I've just been busy. Things at the station have been a little crazy. You know how it gets close to the holidays.\"\n\n\"Whatever Gavin, that is bullshit and you know it. You're never too busy for a phone call so I'm not buying that.\" \n\nConnor heard the disappointment in her voice. \"Dammit, Ange I'm sorry. I've been a real tool lately, but I've been going through some major shit. I don't mean to take it out on you.\"\n\n\"Connor you know if you have a problem you can tell me. We don't keep secrets from each other.\"\n\nIf you only knew how much I want to say this to you, he thought. \"I know, hellcat. And I promise, when it's the right time I'll clue you in. But this one's gotta stay locked up for a while. In the meantime,\" he said, opening his arms. \"Will you accept an 'I'm-sorry-for-being-an-asshole' hug from your best friend?\"\n\nAngie grinned. He looked like a hulking puppy dog, standing in the middle of a semi-crowded New York sidewalk with his arms open wide. Faking a dramatic sigh, she shrugged her shoulders. \"I suppose. But if you're ever an ass like that again, I get to kick you in the face. For serious.\" \n\nConnor laughed and reveled in the feeling of having her in his arms. He knew that she really wasn't big on hugs, so it was a good sign that he was forgiven. I could get used to this, he thought happily. \n\n\"Got it, threat duly noted\" he said. \n\n\"Good. Now, do you want to come back inside and join us? It's pretty freaking cold out here.\"\n\nHe was reluctant to leave her, but he knew that being in Charlie's presence at this time was a bad idea. He didn't mind the guy, but he couldn't shake the feeling that he dangled over his head the fact that he had Angie and Connor didn't. Had, his brain reminded him. He doesn't have her now.\n\n\"Nah, I've got some things to take care of at the apartment. But give me a call later tonight. We need to hang out.\"\n\nAngie studied him. There was definitely something he wasn't telling, but she wasn't going to pry. \"Okay Conny. I'll see you later.\" She turned and headed back to the warmth of the coffee shop. He watched her sit down at the table, the way she greeted Charlie, the way he smiled at her, and the way his hand slid across the table to gently brush her arm.\n\nConnor watched it all, and felt the encompassing feeling of loneliness wash over him. \n\nHe realized that he was losing her.\n\n************************\n\nAngie smiled as Charlie finished his joke. He always had a way of making her laugh. Sipping her now third cup of cappuccino she grinned at him. \"So, Charles you never told me why you're in town.\"\n\nCharlie's grey eyes met hers. \"Well, I was planning to visit my grandmother. I haven't seen her in such a long time.\"\n\nAngie eyed him. \"You came all the way from California to see your grandma? Bullshit.\"\n\nHe laughed, and it warmed Angie's cheeks. She remembered his laughter, melodious and crisp, like rain on pavement. \n\n\"Alright, you caught me. I never could get anything past you, Ange.\" He drank the last bit of his coffee. \"I wanted to see you. It's been so long, and I had some vacation time so I took a trip. Seeing my grandmother is just a bonus.\"\n\nShe smiled. \"Ah, you know just what to say to make a girl feel all special inside.\"\n\nHe grinned. \"Now, who's bullshitting whom? I recognize that 'Yeah, Right' Angie grin from a mile away.\"\n\nThey both laughed. Wow, I miss this Angie thought. It had been so long since high school, but Charlie was still the same: handsome, funny, and thoughtful.\n\n\"So how's the little sister? Still doing her grown and sexy thing?\"\n\n\"Yeah, she's due back from Australia any day now.\"\n\nCharlie whistled lowly. \"Man, must be nice. I can't believe Roxy's the first one outta all of us to get married.\"\n\n\"Yeah, but she snagged a good guy. She had to act fast before Hollywood caught up with him and turned him into a world-class ass, although I can hardly see that happening to Dex.\"",
        "Charlie nodded. \"Yeah, he's a standup guy from what I've seen.\" \"Heard anything about Stern lately?\"\n\n\"Not much. He's doing about 3 years. Still squawking about getting lawyers involved about his broken nose. Roxie clipped him good. The boys and I still laugh about that one.\"\n\nAngie grinned. \"Well, my girl was always tough. She learned from the best.\"\n\n\"That she did.\"\n\nHer whole body was warm now, but it had nothing to do with the cappuccino. The looks he gave her still made her brain shoot tingles all over her body. \n\n\"How's the love life, Charles?\" she asked, trying to keep her voice casual. \n\n\"Can't complain, although all my exes will. Work keeps me busy, so having some sort of concrete relationship is kind of difficult.\" He held her gaze. \"My mother always said no other girl ever came close to you.\"\n\nShaking his head, he stood up. \"Well, we have officially been sitting here for over two hours. Do you want me to drop you at your house?\"\n\n\"Yeah that would be nice.\" Shrugging on her jacket, her mind was still reeling with his words. What exactly was all this supposed to mean, she thought.\n\nShe waited on the corner of the block while Charlie retrieved his car from the precinct parking garage. She smiled as he pulled up in a sleek black Lexus. When he got out and jogged to the other side to open the car door for her, she laughed. \"Mercado, you are so smooth,\" she said, easing into the warm interior of the car. The supple camel-colored leather caressed her body.\n\nCharlie laughed. \"Don't you forget that, girl.\" Closing the door behind her, he got in on his side. After giving him directions to her place, she settled back and enjoyed the smoothness of the car. \n\n\"Charlie I know you aren't thinking about taking this nice ass car to your grandma's house. As I recall she still lives in the Bronx, right?\"\n\n\"You mean that house in Parkchester? No. She moved to Yorktown Heights, just outside the city. She lives with my cousin Donnie and his family.\"\n\n\"Oh, well nice to see you've kept me informed.\"\n\n\"Nice to see you're still a bossy pain in the ass, too.\"\n\n\"Yeah well some things never change.\" Turning to her, his grey eyes darkened. \"I hope not.\"\n\n************************\n\n\"Angie, when did you move in?\" Charlie looked around at the sparse d\u00e9cor in the apartment. With the exception of a comfortable leather sofa and two plushy leather club chairs, the living room didn't offer much furniture. There was a spectacular 52-inch plasma screen television mounted on the wall, but not much else.\n\n\"Why the hell does everyone always ask that?\" \n\n\"Because it looks like a cheap frat house.\"\n\nAngie laughed. \"I'll decorate sometime soon.\"\n\nTaking off her coat, she led him to the living room, sitting on the couch. \n\n\"Charlie, I need to know something.\"\n\n\"Sure,\" he said, placing his coat on the arm of the sofa. \"What's up?\"\n\n\"Seriously, why are you here? Not that I don't enjoy seeing you. It's just since you left almost eight years ago, you never bothered to come back until now.\"\n\nCharlie stared at her. She shivered slightly although the heat was on. There was always something about his gaze that made her do that. She never could tell what he was thinking. When they were dating it unnerved and thrilled her at the same time.\n\n\"I'm going to be honest. I can't stop thinking about you, Ange. After seeing your sister in L.A. and helping her and Dex out, I realized how much I've missed you.\" He hands covered hers and Angie felt her heartbeat quicken. \n\n\"You were my first love, Angela. You were my first. We have a history together. I know things can't be the way they were in high school, but I want us to give it another go-around.\"\n\nAngela was stunned. This wasn't what she was expecting. \"Charlie, I...\"\n\nHe put up a hand to silence her. \"You don't have to say anything right now. I don't even know if there's another man in your life right now. To be honest I don't care. I just want this.\" He leaned in close, his lips nearly touching hers. \"I want us,\" he whispered, covering her mouth with his own. \n\nAngie felt her mind turn to mush as her body succumbed to his kiss. Wrapping her arms around his neck, she gave herself over to him. \n\n************************\n\nConnor flipped through the television channels at breakneck speed. He wasn't looking for anything in particular. The television was background noise. \n\nHe needed something to take his mind off what it was concocting. Right now it was lewd fantasies of Charlie and Angie together and it was enough to make him sick. \n\nHe threw the remote down angrily, nearly smashing the thing into pieces. \n\nFucking Mercado. Had to come back, with his swooping words and gestures. Connor couldn't blame him. If he had lost Angie, he'd fight hell and all her minions to get her back. \n\nBut seeing as how he never had her to begin with, hating Charlie for trying to ruin his chances seemed like the best option. \n\nConnor was still brooding when a small but powerful knock boomed on the door. Grudgingly, he rose from the couch to answer. He was about to tell whoever it was to go fuck themselves, when he saw the person on the other end. \n\n\"Hey Jess,\" he said gloomily. \n\nJessica Flanagan smiled. \"Hey yourself, cousin. What's wrong, expecting someone else?\" She pushed past him into the apartment. \n\nConnor groaned. Not now, he thought. \"No, Jess I wasn't but I really want to be alone right now.\"\n\nJess grinned. \"No can do, cuz. Your mother sent me over here with a pot of beef stew because she's convinced that you're starving yourself.\"\n\nHe noticed the large brown paper shopping bag in her clutches. \"What else is in there?\" \n\nJess shrugged. \"A bunch of other foodly items she thought you'd like. Now be a good boy, take my coat and I'll show you what I've brought.\"\n\nConnor smiled in spite of his dour mood. He could always count on Jessica to cheer him up. She was his mother's sister's only girl, the Irish Rose amidst in the sea of chaos that was her house. She was the baby girl with three older brothers. Jimmy, Timo, Mikey, and Connor watched out for her since the day puberty hit. \n\nHe admired her beauty as she took off her forest green tweed pea coat and matching tweed hat and gloves. Her thick green sweater was the color of Ireland and matched her fiery red hair which fell in loose waves down to the middle of her back. Green eyes completed her look and a sprinkling of freckles she owned since birth dotted her nose. \n\n\"Jess who are you dressed up for?\" he asked, noticing the form-fitting sweater and grey denim jeans.\n\n\"Not for you, punk\" she said. \"I was having dinner with my folks and yours when they ambushed me.\"\n\nConnor laughed as they went into the kitchen. \"Ahh, so who was it this time?\" Since turning twenty-four this past summer, it seemed all the family wanted to do was marry Jess off before what they called \"old maid-hood\" settled in.\n\n\"You remember Patrick Maguire, right?\" she placed the brown bag on the countertop and began pulling out various items.\n\n\"Yeah, that kid we grew up with. He was such a jerk-off.\"\n\n\"He still is,\" she replied. \"I don't know what the hell is wrong with our family. You, Mikey, and Timo are still single and they don't give you guys crap about it.\"\n\n\"Don't remind me about being single,\" he said.\n\n\"Well maybe you'd have some prospects if you cleaned up once in awhile. You look like hell, Vinny\" she said, using the nickname she gave him all those years ago.\n\n\"It's been a long day, Jess.\"\n\n\"Really? Well, your dad sent you something that might make it all better.\" She reached into the bag and pulled out a large bottle of Irish whiskey. \"Ta-da!\" she exclaimed. \n\nConnor smiled. It wasn't her fault he was in such a bad mood. \n\nShe served them both hot, steaming bowls of Mrs. Gavin's thick beef stew. Connor felt his mood changing with every sip. \n\n\"Jess, have you heard from Roxie yet?\" he asked. \n\n\"Actually I have,\" she replied, taking a sip of red wine. \"She's back stateside, just got in last night. She's supposed to be coming out for Christmas.\"\n\n\"That's awesome. I know you and the girls will be glad to see her.\"\n\n\"Yeah, we will. Now why don't you tell me what's bothering you?\"\n\n\"Jess,\" he started. \n\n\"Vinny, you were always so secretive. Sometimes you gotta let people in, you know?\" Connor sighed. It was no use keeping it all in. \"Charlie Mercado is back in town.\"\n\nJess was silent for a minute as she drained her wine glass. Holding the glass up to the light, she sighed. \"Hell, it might be time for the whiskey.\"\n\nShe rose from the table, taking the empty soup bowls with her, returning with the whiskey and two shot glasses. Setting down the glasses, she poured to the brim for each.\n\n\"So, where does this leave you and Ange?\" \n\n\"What do you mean?\"\n\nJess shot him a 'no bullshit' look. \"Vinny,\" she started.\n\n\"God Jess, what do you want me to say? That I love her? That I can't stop thinking about her? That all I want to do is be near her?\" He felt his chest constrict and he reached for the shot and downed the whiskey clean. \n\nJess smiled knowingly at him. \"Well, that would be a start.\" She offered the other glass to him, which he quickly drank. \n\n\"Jess, what am I supposed to do? I can't say all these things without looking like an ass.\"\n\n\"Vinny what are you afraid of?\"\n\nConnor sighed. He took a large swig from the bottle. \"I don't want to hurt her. I don't want things to be awkward. But most of all, I'm just afraid that she won't feel the same way as I do.\"\n\n\"Vinny, I understand all that. But you can't possibly know what's going to happen unless you man up and make a damn move.\"\n\n\"Maybe it's too late. Charlie's back now. She's supposed to be with him, I guess.\"\n\n\"Oh come on, Gavin,\" Jess snorted. \"Stop being a fucking pussy and do the damn thing.\"\n\nConnor was bolted out of his funk by her words. He turned to look at his cousin with something akin to admiration. Jess never cursed, unless she was extremely drunk or extremely irritated. She hadn't touched the whiskey at all. \n\nHe laughed. \"Damn, I think that's what I needed.\"\n\nShe smiled. \"I know.\" Rising, she grabbed her coat from one of the hooks by the door. \"Now, I have to go meet Nina and Carrie downtown. We've got tickets to see Wicked on Broadway.\" She shrugged on her coat and kissed his cheek. \n\n\"I'll tell your Ma you say hello.\" Opening the door, she turned back around, smiling. \"See to it that whiskey gets put to good use.\"\n\n************************\n\nAngie was reluctant to see Charlie go, but he had dinner plans with his family. She knew that he was just as hesitant to leave her. \n\nShe sighed as she remembered the taste of him on her lips. It went no further than a heavy make-out session on her leather sofa, but she knew that he was hoping for more.\n\nIt didn't surprise her that she opted to stop. No, what bothered her was the reason. \n\nShe couldn't stop thinking about Connor. \n\nShe saw his face when she walked back into the coffee shop to join Charlie. He looked confused and a little jealous, but that was the norm. No, what was bothering her was something else. \n\nHe had looked so lonely, like he lost the most important thing to him. \n\nShe tried to shake it off, but the feeling wouldn't budge. \n\nAngie was jarred from her thoughts by the sound of the telephone. \n\n\"Hello?\"\n\n\"Is that my gorgeous big sister I hear?\"\n\n\"Kiddo!\"\n\n\"That's Mrs. Kiddo to you.\"\n\nAngie laughed. \"So it seems. How was it Down Under?\"\n\n\"Oh, it was beyond fabulous. Australia was nice too.\"\n\n\"Ah, I see we've gotten sassy on our honeymoon.\"\n\n\"What can I say, my husband is quite insatiable.\"\n\n\"That might have been TMI, Rox.\"\n\n\"Listen, you wanted to know. Anyway, I talked to The Parents already, but I wanted to drop you a line. How's everyone?\"\n\n\"Everyone's good. Charlie's in town.\"\n\nRoxie paused. \"Really? Well, how's Connor taking it?\"\n\nAngie snorted. \"Why would Connor have to take it any kind of way?\"\n\n\"You know why, Ange.\"\n\nAngie felt her heart throb. \"Roxie, you've been saying that shit for years...\"\n\n\"...and I'll keep saying it. Talk to him, Angie. You know he's not the type to admit to anything. Remember when you guys were thirteen and went hiking and he fell down that incline? He didn't let anyone know his arm was broken until you were in the car halfway back to the house.\"\n\nThey laughed. \"It's not my fault he's an idiot, Rox.\"\n\n\"Yeah, but that doesn't change the present situation either. Although the addition of Charlie makes it a helluva lot more interesting. Christmas is going to be quite the adventure.\"\n\n\"I can't believe I have to wait three weeks to see you.\"\n\n\"Yeah, I know it sucks. Dex says hey.\"\n\n\"I thought you'd be tying him up by now.\"\n\n\"How do you know I'm not doing it at this very moment?\"\n\n\"Oh, eww. And on that note, I'm hanging up.\"\n\nRoxie laughed. \"Bye, big sister. Talk to Connor. You'll see.\"\n\n\"Bye, Kiddo.\"\n\nRoxie hung up the phone and shook her head. She sat in the middle of the bed in her and Dex's room and stretched her arms above her head.\n\n\"Hello there, Mrs. Ryan.\" She glanced up and saw her husband emerging from the bathroom. His onyx hair was wet and slicked back from his shower. He was naked, save for the dark green towel wrapped around his waist.\n\n\"Hey yourself, handsome. Angie says hey.\"\n\n\"How's everything on East Coast going?\" Dex sat down on the edge of the bed, his back facing her. Grabbing the bottle of lotion on the nightstand next to the bed, she squirted some in her hand and massaged it all over his broad back. \n\nWorking out the kinks on his shoulders, she said, \"Not bad. Everyone misses us. Charlie is back in town for a visit.\"\n\nDex groaned. Her fingers were like magic. \"So, gone to swoop Angie off her feet, has he?\"\n\nRoxie leaned down and kissed the nape of his neck. \"Mmm, seems that way. I told her to talk to Connor.\"\n\nDex reached behind him and started to stroke her thigh. \"It's about time. Those two really need to get together already.\"\n\nTurning to his wife, he admired her beauty. She was naked, the black bed sheet wrapped around her brown body. Standing up, he removed the towel from around his waist, his arousal obvious. \n\nRoxie licked her lips. It had been nearly four months and she still couldn't get enough of him. \"Do you have to go on set tomorrow?\" she asked, her eyes never leaving his erection. She slid to the top of the bed, resting her back on the pillows. Sliding the sheet down, she exposed her mocha-hued beauty to him.\n\n\"Not until four,\" he managed to gasp out. Dex crawled up the bed, coming to rest between her thighs. His mouth covered hers and they both groaned softly. \"I love you,\" he growled.\n\n\"Do you?\" she teased.\n\n\"Of course.\"\n\n\"Good.\" She lifted her hips to meet his, connecting their bodies and making both of them gasp. Grabbing his ass, she pushed him in deeper. \n\n\"Now show your Kitten just how much you love her.\"\n\n************************\n\nAngie rapped softly on the door of Connor's apartment. She could hear faint sounds coming from the other side, but nothing more. \n\nGrabbing the door handle, she turned it and was surprised that the door was unlocked. Connor never did that. Instinctively her hand went to her side as if to reach for her gun. She realized her off-duty weapon wasn't there. Calm down, Hartley she thought. He probably did just forget to lock it.\n\nOpening the door, she wandered in silently. The sound wasn't coming from the television, but rather the stereo system. \n\nWalking into the living room, she found Connor lying on the floor. His eyes were closed, his fingers clasped behind his head. \n\nKneeling down, she touched him. \"Conny, are you alright?\"\n\nConnor's eyes flew open. Angie noticed that they were bloodshot. \"Ange? What are you doing here?\" She wrinkled her nose. He smelled like straight booze and he was slurring slightly.\n\n\"We were supposed to hang out together. Are you drunk?\"\n\nHe smiled lazily. \"Yep. And on a Thursday, too. I haven't done this in years.\"\n\nShe grinned, in spite of his stupidity. Drunk Connor rarely made appearances, but when he did, it was always exciting.\n\n\"And what, pray tell, were we imbibing tonight?\"\n\nConnor struggled to sit up, settling for propping himself unsteadily on his elbows. \"Whiskey, of course. What else?\"\n\nHe turned to the stereo. \"How the hell did I get on the floor?\"\n\n\"Dunno. That's where I found you.\" She rose, offering him a hand up. He came up easily, stumbling only a little. He wrapped his arms around her waist in an attempt to steady himself. \n\n\"Whoa,\" he said softly. \"Sorry Ange.\"\n\n\"It's okay, Connor.\" \n\n\"No, not just that. I mean for everything. I'm sorry for being such a dumbass. It comes natural.\"\n\nAngie smiled. \"I know. It's one of your most endearing qualities. I have to say, this side of you is so rare to see.\"\n\n\"Yeah, I don't like you to see me like this.\"\n\n\"I do. Not the falling down drunk part, but I like you vulnerable. You're always so reserved. Lets me know you're still feeling.\"\n\nAngie noticed that he still had his arms wrapped around her waist, and he was stroking the middle of her back softly. She wasn't going to admit it, but his movements were spreading a fire line down to the apex of her thighs.\n\nConnor began to sway involuntarily when the song changed. \"Hey, I remember this one,\" he said quietly. The sounds of the acoustic version of \"Everlong\" filled the room. \n\n\"Do you remember when I played this for you?\" he asked. \n\n\"Yeah,\" she said, drawing closer to his chest. She enjoyed the feel of her 5'6 frame being dwarfed by his 6'3 bulk. He was so strong. \n\n\"You know, that summer when you left, it was so hard for me.\"\n\n\"I know.\" Her arm went out to prevent him from falling. \"Okay, cowboy. It's time for you to hit the hay.\" She used the remote to power down the stereo.\n\nPlacing his arm around her shoulder, she helped him walk down the hallway to his bedroom. Sitting him on the bed, Angie looked around the room. As much as Connor was over at her apartment, she'd only been to his maybe a half dozen times and almost never went into his room.\n\nIt was decidedly masculine, with dark woods and rich colors. The walls were painted a deep navy blue and matched the navy and celery-colored bedspread on the large sleigh bed. \n\nConnor swayed dangerously on the bed, falling back softly. Angie smiled. He could normally handle his alcohol pretty well. \"Conny how much did you drink?\"\n\n\"Dunno. Maybe's there's a corner left,\" he slurred. His eyes were closed.\n\nShe removed his shoes. Sitting next to him on the bed, she unzipped his jeans and slid them down, tossing them aside. Lifting his torso up, she took off his t-shirt. \n\nAngie admired his body for the briefest of moments. He wasn't ridiculously ripped, which was good. He had a swimmer's build and the beginnings of abs, but not that much. \n\nUnconsciously, Angie traced the outline of his appendix scar and heard his slight intake of breath. She stopped when she heard the soft whisper of her name.\n\nClad only in his boxers, she laid his head on the pillows and covered him with his blankets. \n\nTurning off the lights, she was about to leave when she heard his voice cut through the darkness. \n\n\"I wish you knew.\"\n\nShe turned around. \"What?\" she asked.\n\nHe was quiet for a minute or two. Angie was sure she had imagined it when he spoke again. \n\n\"How much I love you.\"\n\n\"I know, Conny. I love you too.\"\n\n\"No,\" he said. She could hear him moving, like he was turning on his side.\n\n\"Not that kind. I mean real love. I think about it all the time. What it would be like if you loved me like that. How you'd look at me. How it'd feel being inside you, waking up next to you every morning knowing that you were in love with me. Ever since that day you left for college I've been addicted to you. Kissing your lips that night, I fell hook, line, and sinker. This is why I wish you knew. So saying all this wouldn't be so awkward for me. But I can't help it. I love you, Ange. You're my chuisle.\"",
        "Angie was stunned. She didn't know what that last word was, but she knew what the rest meant. \n\n\"Connor, I...\"\n\n\"Please, don't say anything.\" He sighed heavily. \"I know how the script will go. You'll say I'm drunk, I'll pass out. I'll wake up the next morning with the hangover of Zeus, and we'll act like nothing was said. Later on it'll become an awkward joke between us. But I'm not that drunk and I'm not joking. I love you, Angela. Drunk or sober, I still want you.\"\n\nAngie stood frozen in place. He knew her so well, it was scary. She was going to pass it off as drunken talk and ignore it tomorrow. But it seemed like he wasn't going to let her forget. \"Connor,\" she pleaded. \"Please don't make me do this. Not tonight.\"\n\nHis silence worried her. She thought he had fallen asleep when she heard. \"Okay, fine. But this isn't over. I know Charlie wants you back. Any man would be a fool to pass you up. But I'm letting you know right now. This is my official challenge statement. I want you, Ange. And I'm going to have you. I'm prepared to wait as long as it takes. Hell, I've been waiting for eight years now. But you and I, we will have our chance.\"\n\nAngie was silent for a few minutes. When she heard his soft snores coming from the bed, she closed the door quietly. "
    ],
    "authorname": "nerd4music",
    "tags": [
        "romance series",
        "romance novella",
        "interracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/everything-you-want-ch-03"
}