{
    "title": "Emma Ch. 03",
    "pages": [
        "It is sometime in May, I'm not sure of the exact date. I should be thousands of miles away in another country on another continent, sitting in my office and doing mind-numbingly boring paperwork. Instead, I'm standing in a hotel room in downtown Tokyo overlooking the urban expanse of neon lit skyscrapers. I had taken an extended leave of absence from work to be here; admittedly a rather irresponsible decision, but one that I don't regret for a second. But that's not the strangest part of my current situation. The strangest part is that behind me on the bed sits Emma Watson. This wasn't some girl who happened to share the same name as the famous actress; this was the famous actress. This was THE Emma Watson of Harry Potter fame. \n\nAs I looked out across the city, I thought back on how we got here. Officially, Emma was here to shoot a television ad for a popular Japanese soft drink which in her words tasted \"pretty savage\". Unofficially, we were merely using this as an excuse to escape from our respective lives. Emma was desperate to escape her celebrity lifestyle for awhile and a low key trip to Japan was the perfect way to do this. My situation was a bit more complicated. I was still a middle class working 23 year old trying to make ends meet. So after Emma and I rekindled our romance at a film premiere in Sydney earlier this year, she stayed at my quiet suburban house in Australia for awhile. But when the paparazzi caught wind of her presence, it got to be too much. I also suspected Emma wasn't really content with sitting at home alone all day while I continued to work 9-5, and so we left Australia after only two weeks. This wasn't a particularly wise career decision on my part but my job had gotten to be rather monotonous and just a tiny bit soul crushing. Also, when Emma Watson asks you to run away with her, you don't say no. We had been in Tokyo for a little over three weeks now, and so far, it was paradise. \n\n\"I finally checked my email today,\" Emma said interrupting my daydreaming. \n\nI turned away from the window and faced her. She sat casually on the bed in her pyjamas reading from her iPad.\n\n\"Yeah? Anything interesting,\" I asked. \n\n\"My agent is still begging me to take on another project, my publicist is insisting I take part in a DVD/Blu-Ray promotion tour for my last film and Warner Brothers wants to fly me out to LA to have my face scanned for a new line of Harry Potter toys. Oh, and there was also a spam email about Viagra pills.\"\n\nI raised an eyebrow at her. \"You trying to tell me something Em?\"\n\n\"There are a few things I would improve about you, but everything in that department is working just fine,\" she replied with a smile. \n\n\"So you gonna go?\"\n\n\"Go where?\"\n\n\"LA; you just said they want to fly you out.\"\n\n\"I think the world can survive without new Harry Potter toys. And I know for a fact Daniel won't be heading to LA anytime soon and without him, there's no new Harry Potter action figure and without a new Harry Potter action figure, there's new no toy line.\"\n\nEven now with the level of familiarity and intimacy between us, it was still rare to hear Emma talk about anything Harry Potter related. Although coincidentally, one of the films was on Japanese television the other night, which resulted in us having a good (albeit drunken) time watching it and laughing at the overly enthusiastic Japanese dubbing. Still, it was strange to hear her mentioning Daniel Radcliff's name with such casualness. Although having recently found out that her contacts list on her phone reads like a who's who of Hollywood, perhaps it shouldn't have surprised me.\n\n\"Besides, you don't really want to go to LA do you? It's chaotic for people like me,\" she continued.\n\n\"That's okay, Japan suits me just fine. As long as you're with me,\" I said as I climbed on the bed and lay down beside her. \n\nEmma leaned back and rested her head against my chest. I ran my fingers through the long hair and I thought the lazy morning we had spent in the hotel room.\n\n\"You want to eat out for lunch again?\" I asked, \"I found a good sushi place yesterday that's only a 10 minute walk away. It's near the train station\"\n\n\"It's Japan Nate, every sushi place is good,\" she said with a smile. \"Besides, I think I know the place you're talking about. The one with the big neon fisherman sign out front, right? There are betters sushi bars.\"\n\n\"You've eaten there have you?\" \n\n\"No, but I can always tell,\" she said stubbornly.\n\n\"No you can't!\" I exclaimed, while chuckling.\n\n\"Shush, I'm worldly and well-travelled, I know these things,\" she said jokingly in a typically posh British accent.\n\nI shook my head and laughed before replying in a mockingly, \"Okay, where would you like to eat then Miss 'Worldly and Well-Travelled'?\" \n\n\"Why don't we just stay in and order room service instead? I want to finish my book.\"\n\nI chuckled and said, \"Again with the book. I can't believe you. You ask me to runaway with you so you could escape from your life, and on the second week, you enrol in a university.\"\n\n\"I've been meaning to complete my degree for ages, but work always got in the way,\" she said defensively. \"Besides, it's only part time study online, not exactly the most demanding timetable.\"\n\nThis was something else I had learnt about Emma quite recently; she was smart. Like, really smart. Ivy League university smart. There hadn't been anytime to learn stuff like that when we were busy having sex in hotels during her promotional tours, but now that we had a chance to slow down and really got to know each other, I liked her even more. Emma had spent a lot of our time in Japan just reading and doing her assignments. It was interesting to see how much enjoyment she got from it. \n\n\"Okay, no sushi, but we're not ordering up again,\" I said,\n\n\"That sandwich they brought up to the room yesterday did taste pretty bad,\" she said, nodding in agreement. \"But I am getting hungry so...\"\n\nEmma pressed a button on her iPad and suddenly the familiar Siri tone rang out. Emma said spoke into the microphone,\n\n\"Siri, where is the nearest 5 star restaurant?\"\n\n\"There are several restaurants close to your location,\" said the robot-like Siri voice. \n\nI tried to take a peek at the iPad screen but Emma had it angled away from me. \n\n\"Anything?\" I asked.\n\n\"Fine, let's just go to your sushi place\" she said as she sat up.\n\n\"That was the only result wasn't it?\" I asked with a satisfied smile.\n\n\"No comment,\" she said with the tiniest hint of a smile. \n\n\"It was wasn't it?\" I said as I wrapped my arms around her slender waist and began kissing her neck. \n\n\"Let me go.\" \n\nI slipped my hands up her shirt and ran them up her smooth flat stomach until I could feel her breasts on tips of my fingers. I traced my fingers fleetingly along the underside of her young firm tits before pushing my hand up between them, savouring her silky smooth skin and the way her tits parted before my hands. \n\n\"Still want me to let go?\" I asked as I took both nipples between my thumb and forefingers and tweaked them ever so slightly.\n\n\"Mmm,\" she purred before replying, \"Yes.\"\n\nWith one hand held between her breasts, I slid my other hand down the length of her body and into her panties before running my hand down the length of her vagina. I angled my head so I could see her face and slowly slid my index finger inside of her. As I expected, a small smile to spread across her face as my finger penetrated her. \n\nEmma and I had had enough sex by now that we knew each others rhythms, likes and dislikes and small quirks. I knew how she'd react if I began to finger her or fondle her tits. She knew that I always enjoyed her tits and reacted accordingly by taking off her shirt. I gave her left breast a firm squeeze and her nipple a gentle suck before laying her down flat on the bed and moving between her legs. Without a word, she raised both legs and I pulled off her pants and panties and once. As Emma lay naked on the bed, she closed her eyes like she always did. I've assumed she does it because she likes to be surprised when I first enter her. At this stage, our love making was passionate and still frequent, but we had admittedly settled into a comfortable routine. And so, I decided to give her a surprise.\n\nI took both her legs in my hands and forcefully spread them as far apart as possible. I lowered my head between her legs and I slowly stuck my tongue out and gently pushed it inside of her. Emma gasped loudly and grabbed at the sheets with her hands as her thighs tried to clamp down on my head. I forced her legs apart again and pulled my tongue out before planting a kiss on her clitoris and gently sucked on it causing her whole body to quiver momentarily. I looked up for a moment to see Emma looking down the length of her body at me. I always did like seeing her from new angles. I maintained eye contact for as long as possible as spread the lips of her vagina apart with my fingers before running my tongue up and down the length of her slit. Emma's jaw dropped but not a sound came out; at least not until my tongue entered her again. Emma moaned loudly and from where I was looking, rolled her eyes back into her head and squirmed in ecstasy. I hadn't gone down on her since we first met all that time ago, perhaps it was for that reason that she tasted extra sweet. \n\nI pulled back for a moment and looked at her tight hole, covered in a fine sheen of my saliva. I gently placed a couple of fingers on either side and spread her apart again before pushing my tongue as far inside of her as I could. Emma arched her back and moaned once more before she tapped me on the shoulder and said in desperation,\n\n\"Oh God, just fuck me! Fuck me now!\"\n\nWith my tongue still inside of her, I reached up and blinded grabbed at her breasts. I took both her nipples between my fingers. \n\n\"Oh God! I need to cum right now! Just fuck me!\" she begged.\n\nI was happy to oblige and pulled my tongue out of her and moved up her body before guiding the tip of my penis between her legs. I'd done this so many times now I didn't even need to look and easily slid inside of her. Emma moaned right into my ear and continued to do so as I began to push in and out of her. She was a tight girl, but her insides were well and truly wet by now. Emma turned her head to me and our lips met, soon followed by her tongue. It turned my on even more to know Emma could probably taste her own juices as she kissed me. I made a note to myself to ask her later whether this was the first time that had happened. I wasn't pacing myself and was thrusting in and out of her as fast as I could. Our bodies and our mouths were pressed tightly against each other as we lay moaning in pleasure on the bed. \n\nEmma laid her hands on my chest and gently pushed me up so that we faced each other. I didn't let this stop me and continued to fuck her, but I did ask,\n\n\"What?\"\n\nEmma shrugged and said between deep breaths and gasps, \"I was... thinking...let's just...ahh...let's just order up room service.\"\n\nI smiled widely and Emma chuckled. I wrapped my arms around her and thrust into her with more force than usual. Emma cried out in pleasure and suddenly, I rolled us over on the bed until I was on my back and Emma was on top of me.\n\n\"Can you take it from here honey?\" I asked teasingly.\n\nEmma gave me a mischievous smile and placed her hands on my chest and moved up her knees so that she straddled me. And just like that, she began to ride me. I marvelled at her beauty as I looked up and so her hair flowing wildly, her perky tits bouncing up and down and those piercing brown eyes of hers looking right at me. I tore my eyes away from her momentarily and reached for the phone on the bedside table and quickly dialled a number. As I put the phone to my ear, I reached up and put my hand over her mouth and muffled her moaning. A heavily accented Japanese woman answered the phone,\n\n\"Room service.\"\n\n\"Hi, are you guys serving the ramen noodles yet?\" I asked while struggling to keep my voice calm as Emma bounced up and down on top of me.\n\n\"Yes sir, we serve everything on the menu 24/7,\" the hotel clerk replied.\n\n\"Great, send up two bowls to Miss Watson's room,\" I said before abruptly slamming the phone back down.\n\nThe moment I did so, Emma slapped my hand away from my mouth and continued to cry out in pleasure. Emma began gyrating her hips as I began to feel myself build towards an orgasm. Emma arched her back once more, thrusting her chest out as I continued to move in and out of her slick and tight hole. I reached up and grabbed her bouncing tits, kneading them in my hands.\n\nSuddenly I saw her whole body tightening up as her thighs pressed hard against my sides. Emma slammed herself down hard causing me to groan, whether in pain or pleasure, I'm not sure. She arched her back even further and threw her head back. I angled my head so I could see her face. Her eyes were squeezed shut tightly as he mouth remained open but not a sound came out. Suddenly, I felt a fresh wave of moisture envelope my penis and ooze out of her tight hole. Emma remained still for awhile when suddenly a long low moan came out of her mouth as her body softened. The mere sight of Emma's full bodied orgasm was enough to bring about my own as I felt myself ejaculate coating her insides even further.\n\nWithout another sound, Emma fell forwards and crashed on top of me. I wrapped my arms around her and held her close. I could her Emma's deep panting as I felt her hot breath on my ear. \n\n\"Still just as good as the first time,\" Emma muttered.\n\nAnyone watching as Emma lay exhausted on top of me could've been forgiven for believing this was her first time or was the first time in a long time that she had had sex. But the funny thing is, we had only just fucked earlier that morning, and yesterday, and the day before that, and the day... well, you get the picture. \n\n***\n\nMy eyes opened to find Emma lazily tracing her finger up and down my chest. I could feel her breasts against my arm, her leg slung over mine and her wet pussy pressed up against my leg. I turned to her and she simply shook her head and said,\n\n\"Typical male. One fuck and you go right to sleep.\"\n\n\"I'm not the one who woke up the whole hotel with her moans,\" I replied.\n\nEmma playfully hit me on the chest and said, \"I wasn't that loud.\"\n\n\"You were actually. In fact, ever since I met you, you've been getting progressively louder.\"\n\n\"You point being,\" Emma said with a hint of admission in her voice.\n\n\"Have I gotten that much better?\" I joked.\n\nEmma laughed and replied, \"I thought it wouldn't look very ladylike if I was screaming at the top of my lungs like a whore on first meeting.\"\n\n\"No one could ever call you a whore Em.\"\n\n\"Of course not. My publicist would never allow it.\"\n\nI laughed as I sat up and looked at the clock. I frowned and turned to her,\n\n\"Where the fuck is our food?\"\n\n\"I don't know. Call them again,\" she said as she inspected her nails in a surprisingly sexy manner.\n\n\"It never takes this long.\"\n\nI began to reach for the phone when Emma said, \"Hold on, you told them to send the food up to \"Miss Watson's\" room didn't you?\"\n\nI gave her a quizzical look and replied, \"Is that a trick question? Of course I did.\"\n\nEmma sighed, \"There is no one by the name of \"Emma Watson\" checked in at this hotel. We checked in as Mr and Mrs Bond. Remember? You thought it would be hilarious if people called you Mr Bond.\"\n\n\"Fuck,\" I muttered as I realised my mistake. \"Why didn't you tell me before?\"\n\n\"Because I busy cumming. Like, a lot,\" she replied nonchalantly.\n\nI smiled before looking at her and asking, \"Still want to go to that sushi bar?\"\n\n***\n\n\"I still don't know how you could forget. Has no one called you Mr Bond in all the time we've been here?\" Emma asked.\n\n\"The concierge did on the first day but since then, nothing.\"\n\nEmma smiled as we sat down at our table. After looking around at our surroundings, Emma warily took off her sunglasses. \n\nI chuckled, \"You know, if you want to go incognito, stop with these preposterously large sunglasses and get dye your hair or something.\"\n\n\"Nah. I don't particularly fancy being a blonde.\"\n\n\"I didn't say blonde.\"\n\n\"What then? You want me as a redhead? Or maybe I should have jet black hair?\"\n\n\"I'm just saying, this whole sunglass wearing thing on dreary overcast days is a little weird.\"\n\n\"Well maybe I should cut my hair then,\" Emma said as she played with her long tresses.\n\n\"As long as it's not that damn pixie cut you had a few years ago. I remember seeing it on the internet at the time.\"\n\n\"I loved my pixie cut,\" she said defensively. \"What is it with guys and their obsession with girls with long hair?\"\n\n\"I can't speak for other guys, but personally I-\"\n\nSuddenly I became of the two young children standing next to our booth with their father. With a little urging from the father, the youngest child, no more than 10 years old, said in broken English,\n\n\"You Hermione?\"\n\nEmma smiled widely and replied, \"Yes, what are your names?\"\n\nThe two children smiled widely and said their names. They spoke way too fast that I wasn't able to catch either name. I'm not sure if Emma did but for their benefit, she nodded along and smiled. Having been around Emma for this past month, I got pretty good at telling her real smile from her fake one she often put on for fans; this one seemed real. While Emma complains about being hounded endlessly as a result of her fame, her ire is mostly directed at the paparazzi; she generally seems to have no problem with most fans who approach her, especially children. \n\nSurprisingly, Emma wasn't recognised as often as you'd think. When she's not dolled up and ready for a premiere, Emma looks like any other ordinary 24 year old and as a result, no one pays her much attention. Emma even took to going out without makeup to keep up her \"plain Jane\" appearance. Although as I repeatedly told her, the \"plain Jane\" no make up and regular shirt and jeans combo still looked absurdly sexy. \n\nAs Emma continued to talk to the two kids (an agonisingly long process given the language and age barrier) and even posed for a photo. Eventually, the father ushered them away leaving Emma smiling widely and the kids practically bouncing. When she didn't speak immediately, I said,\n\n\"You know, I was just thinking. The whole sunglass wearing thing; I get it now.\"\n\n\"Be nice,\" she said quietly. \"They were adorable.\"\n\nI simply smiled and began to look at my menu. Neither Emma nor I could understand a word of Japanese, so every trip to a restaurant always involved picking the food that looked tastiest. I put the menu down and was about to recommend a dish to Emma when I suddenly became aware of the sudden interest from everyone in the restaurant.\n\n\"Is this going to be a problem?\"\n\nEmma looked up and me and then around the restaurant. She even waved at a couple of particularly enthusiastic people before turning back to me and replying,\n\n\"Nah, they're just fans. We caused a circus in that karaoke bar last week and nothing ever came of that. I couldn't even find anything about it on the internet the next day. As long as the paparazzi don't catch wind, we'll be fine.\"\n\n\"Don't remind me of the karaoke bar. I was ready to catch the first flight out of the country after hearing you attempt an AC/DC song,\" I laughed.\n\nEmma laughed out loud and put down her menu. \"Oh really? Sing ABBA's 'Dancing Queen' again.\"\n\nAs I sat there laughing with her, I thought back on the various adventures of the past month, I couldn't help thinking how good life was. Sex, sushi and clubbing in Tokyo. For me, it was a life of extravagance with a famous movie star; the stuff of dreams. For her, it was the first time in a long where she could just kick back and relax in privacy and seclusion. Perhaps in some ways, she was also making up for an adolescence lost in the limelight. Our respective lives were a distant memory. Well, my life was at least; Emma's was about to catch up to her. ",
        "***\n\nTWO DAYS LATER\n\n\"Good morning Miss Bond!\" Mr Mori, the concierge called out as we entered the lobby a few days later.\n\n\"Good morning Mr Mori,\" Emma replied.\n\n\"I need to tell you. You should use side entrance this morning,\" Mr Mori said as he waddled up to us in an almost comical fashion.\n\n\"Is there a problem?\" \n\n\"There are lots of photographers outside.\"\n\nEmma and I exchanged glances immediately. Neither of us were happy to hear this but at the same time, we weren't surprised. Emma looked back to Mr Mori and asked,\n\n\"How many?\"\n\n\"I count five,\" he replied.\n\nI turned to Emma and shrugged, \"That's not too bad.\"\n\nEmma didn't look like she agreed and asked, \"Do they know I'm staying here at the hotel?\"\n\n\"No, absolutely not. You signed in under Caroline Bond, they ask for 'Watson'. We tell them 'no Watson here',\" Mr Mori replied with pride. \"But they...how do you say it...suspect you here.\"\n\n\"Well shit,\" I muttered, to which Mr Mori nodded in fierce agreement. \n\n\"Could you go out there?\" Emma said to me.\n\n\"What?\"\n\n\"Scout the place out. I don't want to have to leave unless we have to?\"\n\n\"Leave?! Do you mean the hotel or the country?\"\n\n\"Could you please just...\" Emma begged as she trailed off. \n\nIt was plain to see from her expression that this sudden turn of events hadn't gone down well for Emma. For the first time since we arrived in Japan, she actually seemed mildly stressed. It was not a state of mind I liked to see her in. I simply nodded and without another word, headed towards the exit. \n\nOutside of the hotel, it seemed like another normal day in Tokyo. However as I looked more carefully, there were several people on the other side of the road setting up tripods and cameras. They found us. \n\nLike Mr Mori said, there were only five of them. It didn't seem like much now, but Emma subscribed to the \"when it rains it pours\" belief when it comes to paparazzi. By some dumb luck, one of them was Caucasian. I crossed the road and approached him. Long story short, after a quick talk with the photographer I discovered that they had received an anonymous tip that Emma was staying at the hotel. None of them were sure, but then staking out hotels and other such places was their job. After a few minutes, I walked back into the hotel to find Emma and Mr Mori were standing right where I'd left them. \n\n\"I hear Paris is wonderful this time of year,\" I said.\n\nEmma closed her eyes and lowered her head before muttering, \"Shit.\" \n\n***\n\n\"India?\" Emma asked expectantly.\n\n\"I don't like Indian food,\" I replied.\n\n\"You're writing off an entire country because you don't like the food.\"\n\n\"This from the girl who took 20 minutes to order sushi the other night?\"\n\n\"Fair point; and I'm still disappointed I didn't order the noodles,\" she muttered and before asking, \"Switzerland?\"\n\n\"Maybe. But just to clarify, you're still against Paris?\"\n\n\"Too many paparazzi. It can be almost as bad as LA,\" Emma said as she continued to look at the travel brochures laid out in front of us. After a few moments, her suddenly eyes lit up and she said, \"Come to think of it, if we bought a Eurail pass, we could stop in Paris for a day or two on our way to Switzerland. We could even visit a bunch of other places while we're at it. Travelling on the Eurail trains is much more private and hassle-free than flying.\"\n\n\"I like that. A romantic train ride through Europe ending with you naked on a rug in front of a roaring fire in the Swiss Alps.\"\n\n\"Why is it that every time I list a new country, all you can do is picture where I'll be naked?\" \n\n\"Because it is a very VERY beautiful picture. And if you don't believe me, I suggest you strip right now.\"\n\nEmma smiled and teasingly replied, \"Of all the guys in the world and I had to pick the one with the maturity of a horny 16 year old as a boyfriend.\"\n\nI smiled, \"Do you realise every time you mock me, your voice sounds at least three times more English.\"\n\n\"I am English,\" she said plainly as she continued to read a Eurail brochure. \"So should I book the tickets?\"\n\nI simply nodded in reply as that smile that I loved so much spread across her face. \n\n***\n\n7 WEEKS LATER\n\nTwo days in Mykonos.\n\nFour in Venice.\n\nThree in Rome.\n\nTwo in Paris.\n\nThree in Madrid.\n\nTwo in Ibiza\n\nIntersperse in between these stays was an accumulated total of two weeks spent idly riding the Eurail trains and stopping at various European locales. \n\nAll in all, it was a hell of a journey. We had a great time at each location whether it was the Mykonos beaches, gondola rides through Venice or simply sitting in a pizza bar in Rome. Emma seemed to particularly enjoy being on the trains. She craved anonymity but not necessarily isolation, so it was nice environment in which to relax and take in the sights as we zoomed through the European countryside. And the best part of this trip was that we only encountered the paparazzi once when I dragged Emma along to a soccer match in Madrid. Otherwise, we slipped in and out of each city so quietly and we were never in one place for long enough to make much of a splash. We of course ran into many of Emma's fans, but the occasional autograph and photo was a small price to pay.\n\nEventually, we ended up in Geneva as agreed. And wouldn't you know it; we haven't encountered one paparazzo since. Even the hotel staff seemed surprisingly blas\u00e9 about Emma's presence. This suited us just fine and for the first time since Japan, we decided to get settled in for a long stay. We'd been here for over two weeks, and although downtown Geneva wasn't quite in the Swiss Alps, it was still cold enough that we could curl up naked in front of a fireplace in each others arms. \n\nPerhaps ironically, at that moment Emma was holding the one thing she had been trying to get away from; a camera.\n\n\"This is a nice photo of you in Paris,\" Emma said as she tilted the camera's screen so I could see.\n\n\"I love that one,\" I said as I habitually traced my finger around her breasts. \n\nEmma didn't seem to mind as she continued to flick through the photos, \"This one of us is gorgeous. Isn't this the one that nice Asian couple took for us?\"\n\nI craned my head to see a shot of us on a boat on the Seine in Paris. \"Yeah. Nice photo, although your nipples are pointing through your shirt,\" I said while simultaneously tugging gently at her nipple with my thumb and forefinger.\n\n\"Ow,\" she said as she slapped my hand away before replying, \"It was a chilly morning and I wasn't wearing a bra. Oh well, still a nice photo.\"\n\nI took a moment to look at her; completely naked, wearing no makeup and illuminated by the fireplace and by the camera's LCD screen. She was absolutely stunning. \n\n\"I have half a mind to turn that camera on you right now,\" I said. \n\n\"Don't you dare,\" she said, placing the camera to one side. \"I bought that camera so we could take some photos during our trips, not so you could make some sleazy sex tape.\"\n\n\"Still paranoid about that?\" I laughed.\n\n\"Put it this way, things like that have a way of leaking onto the internet. And with what we've done,\" Emma said with a shudder.\n\n\"Will you relax, I was joking. Besides, if I wanted to film you, I'd have done it while I had you tied to the bed back in Venice.\"\n\nEmma smiled and shook her head. \"I still can't believe you talked me into that.\"\n\n\"You didn't take much convincing,\" I said, before leaning in close to her and speaking softly into her ear; \"And admit it, you enjoyed it; laying there spread-eagled and helpless as I teased you to an orgasm.\"\n\nEmma was silent for a moment and struggled to stifle a smile. She wasn't very successful and in fact looked just a little bit turned on as she replied,\n\n\"It was okay.\"\n\n\"You came three times,\" I said smugly as I lay back down.\n\n\"Two times. Don't exaggerate.\"\n\n\"I'll say this much, you enjoyed being tied down more than you did the anal.\"\n\n\"Oh God, we're never doing that again,\" she said firmly.\n\n\"We were in Rome, and when in Rome,\" I said with a chuckle.\n\n\"It wasn't so much the 'when in Rome' spirit so much as a drunken game of truth or dare,\" Emma replied with a smile. \n\n\"You shouldn't have picked dare,\" I said before adding, \"I think we were supposed to use more lube.\"\n\nEmma laughed and replied, \"Trust me, lack of lubricant was not what make that experience bad.\"\n\nSuddenly, the telephone rang. I gave Emma a quick kiss on the cheek before getting up. I could feel her eyes on my body as I walked towards the phone and picked it up. \n\n\"Yes?\" I answered.\n\nA man with a thick European accent was on the other line and replied, \"I've cleared the area as you asked. It's yours for the next hour.\"\n\n\"Thank you. We'll be there in five minutes,\" I replied before hanging up.\n\nI grabbed a hotel bathrobe that was slung over the couch and put it on. Emma furrowed her brow as she looked at me. \n\n\"Who was on the phone?\" she asked.\n\n\"Grab your robe,\" I replied.\n\n\"My my, haven't we become spoilt. There's a naked actress in front of a roaring fireplace and you ask her to put on clothes,\" Emma tutted teasingly. \"You've changed Nate.\"\n\n\"Don't worry, you won't be wearing them for long.\"\n\nEmma looked confused as she slowly sat up and looked around for her robe. In a way, Emma was right. It is remarkable how I've gotten so use to seeing her in various states of undress. In that moment, I thought back to the first time I saw her naked in that Sydney hotel room so long ago. She was wearing a hotel bathrobe back then too. We had only just met the night before and yet suddenly she was at my door in the middle of the night inviting me into her room. I still remember the sexy little motion she had made to shrug her bathrobe off. I remember those tiny pink panties and the flimsy tank top she wore underneath. And I of course remember seeing Emma Watson naked for the first time. I remember going straight for her tits and filling my hands with them while sucking long and hard at her nipples; Emma Watson's nipples.\n\nI'd tried to convince myself many times since then that I was attracted to her because of her personality as oppose to the fact she was an insanely attractive movie star. Looking back, I'm not sure how true that is. After all, I remember thinking to myself for days afterwards, \"I fucked Hermione Granger\". But that was then. All I know is that right now, her fame was more of a bother than a turn on. I loved her for her. I don't know when the transition occurred, maybe earlier this year when we were reunited in Sydney. But in any event it doesn't really matter. It was just validating to know how far our relationship had matured.\n\n\"Where to now?\" she said, interrupting my reminiscing.\n\n***\n\nThere was something delightfully mischievous about walking through a hotel late at night wearing a bathrobe and nothing else underneath. The lack of clothes seemed to concern Emma more as she clung tightly to her robe. Emma remained oblivious as to what I had planned but followed me nonetheless down the hallway, into the elevator and all the way up to the top floor. Eventually we reached a set of double doors and walked through to find a hotel staffer I knew as Alexander. After a quick exchange, I handed him a couple hundred Euros before shaking his hand. Alex left and closed the doors behind him. \n\nI turned around to see Emma standing by the edge of the indoor pool. Most of the lights in the pool area had been turned off. The room was mostly illuminated by the lights at the bottom of the pool and from the Geneva city lights pouring through the plate-glass windows on two sides of the room. \n\n\"Romantic,\" Emma muttered.\n\n\"And expensive. You'd be surprised how much it costs to close down an indoor pool area for an hour.\"\n\n\"I'm afraid I left my bathing suit back in room,\" Emma said.\n\n\"Won't need it,\" I said as I walked up behind her and reached around, grabbing both sides of her robe. Emma's hands shot up and stopped me at once.\n\n\"Are you sure we're alone?\"\n\n\"Tinted windows and no cameras,\" I replied confidently.\n\nShe slowly let go of my hands and put her arms down by her sides. With one fluid motion, I pulled her robe back and down the length of her body letting it drop silently to the floor. Emma didn't look back and instead knelt down before sliding silently into the pool. I stood for a moment and watched her naked body gliding quietly underneath the water, softly illuminated by the pool lights. When she came up for air, her hair was swept back behind her head and shone in the dim light. She turned to look at me seductively, her nipples barely visible beneath the surface of the water. \n\nWithout another thought, I shrugged off my robe and dove into the warm waters. She looked almost angelic as she floated in the middle of the pool waiting for me. I dipped my head underneath the water and waded towards her. From underneath the water, I could see the blurry outline of her nude body coming closer and closer with every stroke until she was right in front of me. I came up for air and there she was in front of me. The chlorine in the water forced me to shut my eyes momentarily but even before my vision had even cleared, I felt familiar lips brush against mine and soon we were kissing in the middle of the pool. I lifted her ever so slightly out of the water and ran my hands over her wet, slippery breasts. I firmly squeezed one only to have it slip out of my hand. Emma similarly ran her hands up and down my back before groping my rear. I broke our kiss and began planting kisses along her long slender neck.\n\n\"This was a great idea Nate,\" she said softly.\n\nEmma began to playfully float away but I grabbed her by her hips and pulled her back to me. Emma didn't exactly have supermodel's body; in fact she was a small girl with a lean build. As a result, I had no trouble holding her in place against me as I began to run my hands across her lithe body from her slender neck and down to the top of her wet slippery breasts. Emma craned her head back as we continued to kiss. As her arse pressed against my throbbing erection, I fought the urge to take her then and there. But with an hour alone with Emma in the pool, I decided to pace myself. Instead, I reached around with my other hand and slid it between her legs. \n\nI began by ever so gently stimulating her clitoris. Emma moaned softly but continued to kiss me. We floated in the middle of the pool like that for some time. It was hard to gauge how wet she was given our current circumstances but as my fingers began to rub her sensitive area harder and quicker, Emma's breathing became shallower. Once I was satisfied that Emma was sufficiently turned on and desperate for an orgasm, I inserted two fingers inside of her as I had done so many times before and felt the walls of her vagina contracting tightly. \n\nEmma's whole body shook at the penetration. She leaned forward slightly and splashed around for a moment. I held her firmly in place by the waist and let my hand have free reign over her vagina. I started thrusting my fingers in and out of her as I continued to rub her clitoris with my thumb. Not knowing what else to do with her hands, Emma reached up and began to fondle her own breasts with one hand and with the other, pulled my head towards her. I obliged and began planting kisses up and down the length of her neck. As my fingers probed deep inside of her, I could slowly begin to differentiate between the water and her juices. I ran my lips up and down her neck before whispering into her ear,\n\n\"Tell me when you cum.\" \n\n\"Not yet,\" she said with ragged breaths.\n\nI began to curl my fingers back inside of her and pushed hard against a particularly sensitive area. I suddenly felt Emma's hips rock back but I continued to hold her firmly in place. \n\n\"Not yet,\" she said again.\n\nI pushed my two fingers as deep inside of her as I could, eliciting a soft cry from her lips. I applied pressure on her clitoris with my thumb and once more, curled my fingers back inside of her applying even more pressure inside of her. Emma arched her back and for a moment, the top half of her body rose out of the water as her wet tits glistened in the pale light. \n\n\"Almost,\" she said in barely audible whisper.\n\nI decided to substitute force for speed and began to rub her clit faster while swirling my fingers around inside of her faster and faster. Soon I put my whole arm into it and assaulted her most sensitive areas without mercy. Emma threw her head back, causing her hair to flick back sending water flying across the pool. The sight of that only made me grow harder and made me finger her more intensely.\n\nIt was hard to tell whether she was cumming because of the water, however after spending months with Emma, I didn't need to feel her juices squirt onto my hand to know she was having an orgasm. Without warning, Emma's jaw slackened as she audibly exhaled and her whole body stiffened.\n\n\"Now I'm cumming!\" Emma gasped raggedly.\n\nI held her tightly as I sunk my fingers deep inside of her one last time, firmly pressing against both her clitoris and her g-stop deep inside her vagina. She bucked against me, thrashing in the water violently as she instinctively pushed her hips back against me once more. Emma let out a loud cry that seemed to reverberate across the large room. I quickly took my hand away from her waist and brought it up to cover her mouth. With one hand still between her legs, forcing her arse against my own groin while my other hand covered her mouth, Emma's muffled moans continued as her orgasm reached its peak and began to slowly subside. I could feel her lips spreading and her loud cries reverberating against my palm as she continued to convulse for at least another minute. Eventually, she weakly reached up and pulled my hand away from her mouth and leaned against me silently. I tread water for the both of us as Emma composed herself.\n\n\"Too loud,\" I eventually chuckled.\n\n\"Shut up,\" she mumbled in reply.\n\n\"I love you too Em.\"\n\n***\n\nWe had sex in the pool once more and messed around poolside until the time came for us to leave. As we were walking back to the room, Emma said,\n\n\"By the way, some German diplomat will be staying at the hotel soon.\"\n\n\"And we're afraid of Germans because...\"\n\n\"No,\" Emma laughed. \"It just that this guy is apparently a big deal so the concierge is expecting a lot of press, which means we might want to get going soon.\"\n\n\"Okay. How about we go to that hotel we had drinks at the other night, I liked that one.\"\n\n\"Really? You want to stay in Geneva?\"\n\n\"Why not, I liked it here. Don't you?\"\n\n\"I love it, even though my boyfriend is too afraid to go skiing with me which kinda defeats the purpose of holidaying in Geneva.\"\n\n\"I like taking your clothes off, not adding on thick coats.\"\n\n\"And you're afraid of hurting yourself on the slopes.\"\n\n\"Well yeah, that too,\" I admitted.\n\nEmma chuckled and said, \"Besides, I'm starting to get sick of the cold. I was thinking we could go to London?\"\n\n\"London?!\" I said sounding more surprised than I had intended.\n\nI didn't have anything against London, but when Emma and I decided to runaway together, she told me she wanted to avoid what she referred to as \"paparazzi hot zones\"; this included Los Angeles, New York, London and Paris. We had risked a short trip to Paris during which Emma was worried the whole time that our private vacation might turn very public. Being Emma's home, going to London seemed like heading straight into the hornet's nest; or at least that's what she had led me to believe.\n\n\"I know what I've said before,\" Emma replied as if reading my mind, before continuing, \"But I'm keen on seeing some of my family and friends. This is the longest I've spent away without at least paying them a short visit.\"\n\n\"You're willing to risk the ensuing media circus?\"\n\n\"I am actually; but it shouldn't be a problem. We'll be in and out just like in Paris. Besides, it's not the end of the world if the paparazzi do see us and they take a few snaps.\"",
        "\"Really? Because back in Australia, you seemed ready to murder any photographer you saw.\"\n\n\"That was then. These past few months have done wonders for me.\"\n\nI'm not entirely sure what I was anxious about; the paparazzi, meeting Emma's family and friends, the yearning I suddenly had to go back to my own family and friends or the notion that Emma might be getting tired of our globetrotting. Once again, it was as if Emma could read my mind (and after all our time together, she probably could) and said,\n\n\"Look, I just want a couple of days in London to recharge and then we're off again. I want to go somewhere where there's sunshine and in case you don't know, London sunshine is an oxymoron. I need to work on my tan; I'm starting to feel pale and pasty.\" \n\nI smiled and was just a tiny bit relieved and replied, \"You're beautiful. Besides, you're British; pale and pasty is a given.\"\n\n\"Guilty. But I'm getting sick of walking around with stiff nipples poking through my shirts so I say after we're done with London, we find ourselves a beach.\"\n\n\"Back to Mykonos?\" I suggested.\n\n\"Nah, I know a place,\" Emma replied. \n\n***\n\n10 DAYS LATER\n\n\"Okay, you were right. Caribbean beats Switzerland,\" I said as I stretched back on the beach towel and closed my eyes.\n\n\"Chocolates and expensive watches have nothing on sunshine and crystal clear waters.\"\n\n\"That reminds me, I think I accidentally left one of my watches back in the hotel room in Geneva.\"\n\n\"Which one? Not the Breitling I hope,\" asked Emma.\n\n\"No, the Omega.\"\n\n\"Ah, no big deal; that only cost 700 euro. I'll buy you another one,\" Emma replied nonchalantly. \n\n\"Yeah, 'only' 700,\" I mumbled.\n\nIt was nice to be able to be alone with Emma again after London. If I'm being honest, I was glad to have left. The city itself was great. Being able to see Buckingham Palace and Big Ben went a long way to crossing a few more things off my bucket list. However, Emma seemed far too comfortable there for my liking. I know it sounds selfish, and it almost certainly is, but for the days we spent in London, I was beginning to wonder if she would want to leave. I met some of her friends and played the part of the boyfriend, although we both agreed it was best for me to not meet her parents. Still, Emma enjoyed herself and seemed happy to be among family and friends after all our time alone together. She seemed so happy that for a lot of the time, she seemed to forget I was there. I don't hold it against her of course, she'd been away from home for a long time. So had I for that matter. \n\nBut none of that really bothered me, not least because I knew it was a bit selfish to expect to be the focal point of her attention 24/7. What bothered me was even when the paparazzi inevitably caught wind of our presence, we still stayed there in London for an extra three days. For those few days, Emma had gone back to reality, and in stark contrast to the Emma I had met in Sydney, the attention from paparazzi didn't seem to bother her at all. When we were at Heathrow getting ready to leave, she was noticeably quiet. Part of my worried she was getting sick of all our extended furlough which to this point still had no end date. However, the Caribbean sunshine seemed to lift her mood and several cocktails later and we were back to doing what we did best, sight-seeing, shopping and sex.\n\nI was distracted by my thoughts when I felt a thin piece of material fall between my fingers. With my eyes still closed, I fumbled around with it for a moment before realising what it was. I opened my eyes and looked to my left to see Emma beside me, topless and soaking in the rays of the sun. \n\n\"That's bold of you,\" I said as I gawked at her. \"I know this is a topless beach but is that a good idea?\" \n\n\"Have you seen one phone or camera since we got here?\"\n\n\"No. It's a private beach, there's a ban,\" I said. \n\n\"Then it's a great idea,\" she replied.\n\nIt made sense I guess. This beach was part of a luxury resort that we had an all access pass to; a pass that in Emma's own words was \"expensive, even by my standards\". Privacy was guaranteed. \n\n\"Besides, I've heard from friends who've done this. They've never had a problem,\" Emma continued.\n\n\"Which friends? Famous friends?\" I asked with avid interest.\n\n\"Maybe,\" she replied teasingly.\n\nI looked at her again; her hair wild and untamed, her breasts bare and in full view, her perfect skin shining in the sunlight and wearing nothing but bikini bottoms and a pair of large sunglasses. She looked utterly perfect. I looked around the beach and while Emma drew a couple of stares, they were mostly innocent and there was not a camera in sight. Emma has always said she craves normalcy and anonymity; this wasn't quite that, but it was close enough. \n\n\"You're staring,\" Emma said.\n\n\"Can you blame me?\"\n\n\"Aren't you sick of me by now?\"\n\n\"I could never get sick of you.\"\n\n\"This is a nude beach Nate. Consider this the only time where I won't get angry if you snuck a peek at another girl's tits,\" Emma said before raising her hand and pointing to the water. \"For example, there's a smashing blonde over there with what must be double D's frolicking in the water.\"\n\nEven with the sunglasses on, I could tell Emma was looking directly at me as she said this. Despite my sudden interest in the topless blonde in question, I didn't avert my gaze and kept my eyes firmly on her. \n\n\"Not interested,\" I replied.\n\n\"If I recall, there's also stunning dark haired girl about 30 metres behind us with very perky tits,\" she said teasingly.\n\n\"Her boyfriend took off his bathers about 5 minutes ago which kinda spoils the view, and in any case, not interested.\"\n\n\"Well then surely you'd enjoy watching that very exotic blonde over there. She's not even wearing-\"\n\n\"Not interested,\" I said, cutting her off.\n\nEmma peered over the top of her sunglasses and said, \"Seriously. Even I'm tempted to have a roll around in the hay with her.\"\n\nI laughed, \"Now THAT, I'd be interested in. But you're still all I need.\"\n\nI leaned over and kissed her. Her lips were as soft as supple as ever. I was suddenly overcome with lust and unconsciously moved my hand to her belly before slowly moving up between her breasts, pushing both of them aside. Emma let out a pleasurable sigh and before I knew what I was doing, my hand had slid down to her belly again and begun to move into her bikini bottoms as I felt her pubic hair on the tips of my fingers. Emma moaned softly before grabbing my wrist and pulling my hand away.\n\n\"This may be a nude beach Nate, but I think they draw the line at finger banging.\"\n\nI gave her a quick peck on the lips before lying back down beside her. We were silent for a moment, taking in the sun and savouring the sounds of the beach, from the waves lapping onto the shore, to the volley ball game in the distance to the seagulls up above. After a full minute, Emma suddenly said,\n\n\"It may not be a Swiss hotel pool, but I bet we could have some fun down in the water.\"\n\n\"Can I invite the blonde?\" I said with a cheeky smile.\n\nEmma laughed out loud as she stood up, baring her perky breasts bare for all to see. She extended me a hand and added, \"How about for now, we leave the blonde out.\"\n\n\"For now?\" I asked.\n\nEmma laughed again and without another word, made her way towards the water. I ran after her. \n\n***\n\nTWO DAYS LATER\n\nThe sound of Emma's phone vibrating on the glass coffee table shook me out of me sleep. The only other sound was the waves crashing against the shore in the distance. I groggily sat up and looked at the clock; it was 3:05 am. I collapsed on the pillow again and mumbled:\n\n\"Someone's calling again.\"\n\n\"They'll hang up,\" she murmured, clearly having also been woken up. \n\n\"It's the third time tonight. I think they're gonna keep calling.\"\n\n\"Fine,\" she groaned.\n\nWith my eyes still closed, I could feel Emma climbing off the bed. I listened as her heavy footsteps walked across the room and pick up the phone. \n\n\"It's Wendy,\" Emma said.\n\nWendy was Emma's publicist. I had met her during both of Emma's trips to Australia. \n\nI could already feel myself drifting back to sleep but still managed hear Emma talking on the phone as well as Wendy's soft and undiscernible voice coming from the phone's speaker. \n\n\"Wendy, is this important? It's 3 am where I am,\" Emma said. There was a short pause before Emma replied testily, \"No I haven't. Because I'm in the bloody Caribbean and it's 3 am.\"\n\nAnother pause. Emma sighed as her frustration grew but eventually I could hear her mumbling \"okay okay\". As they continued to talk, I felt sleep overcome me. However, it must have only been for a few seconds because suddenly I heard Emma called out,\n\n\"Oh my God!\"\n\nDespite the obvious concern in her voice, I was just too tired to care. \n\n\"Oh my God!\" Emma called out even louder.\n\nMy eyes opened again as I sat up wearily in time to see Emma walking back in holding her iPad. \n\n\"Shit!\" Emma shouted.\n\n\"What's wrong?\" I asked. \n\nWithout a word, Emma threw the iPad onto the bed as she continued to speak into her phone.\n\n\"What do I do?\"\n\nI picked up the iPad and looked at the image on screen. For a moment, I thought it was some kind of sleazy internet advert. But as I rubbed the sleep from my eyes, the image became familiar and it carried a nasty implication. The picture was of Emma and I sunbathing on the beach two days ago. I wore my swimming trunks and Emma wore her bikini bottoms; she ONLY wore bikini bottoms. I looked at the other images that were on the webpage and saw many variations of the same image, but there was one constant, Emma was topless. I looked up at Emma and said,\n\n\"Put your phone on speaker.\"\n\nEmma looked at me for a moment; it was dark, but I could tell that all the colour had drained from her face. She had a reputation to maintain. This vacation of ours was meant to take her away from the limelight and into obscurity for a few months. With this latest turn of events, we had clearly failed. Emma pressed a button on her phone before tossing it onto the bed. Suddenly, Wendy's voice rang out loud and clear.\n\n\"Wendy, I just put you on speaker phone, Nate is here with me,\" Emma said as she sat down on the bed with her head in her hands.\n\n\"Hi Nate,\" Wendy said.\n\n\"Hey. What do we do about this?\" I replied\n\n\"Can I assume from your reactions that that is you in the photos?\"\n\n\"Yeah, it's me,\" Emma said glumly.\n\n\"Well, we have three options. Confirm it's you in the photos and release a statement, deny or keep quiet. If we do any of the first two, we can get the lawyers involved.\"\n\n\"Why would I confirm it?\" Emma said.\n\n\"You control the story. The media will make it more about your invasion of privacy than your sordid Caribbean getaway. It might generate more sympathy for you that way.\"\n\nI continued to stare at the photos as Emma and Wendy continued to talk. Part of me was angry at the invasion of privacy, another part of me was just the tiniest bit aroused by the sight of me making out with Emma. The photos were blurry and clearly taken from a distance, but were still damning. The only saving grace was that there didn't seem to be any pictures of our more amorous activities in the water. Also, Emma's glasses were so large they-\n\n\"They cover half your face,\" I said, finishing my thought out loud.\n\n\"Pardon?\" Emma asked.\n\n\"Those sunglasses of yours, they cover half your face.\"\n\n\"So what?!\" Emma replied impatiently.\n\n\"So, Wendy look at the photos objectively and tell me you can really identify Emma in these photos.\"\n\n\"It IS me in those photos,\" Emma replied.\n\n\"But can you be identified? All I see is a young girl, early twenties, about 170 centimetres, dark hair and wearing sunglasses that cover up half of her face. The photos are so blurry you can't make out any real detail. I can't see your freckles or any real detail in the lower half of your face. I mean, it's not like you have any distinguishing features. I mean, Wendy, isn't the whole reason for your call to make sure those picture are of Emma.\" \n\nEmma picked up the iPad and looked at it carefully. After a few moments, she seemed a bit calmer and asked,\n\n\"Wendy?\"\n\nA few moments of silence followed before Wendy's voice came through the speaker, \"He's right. It certainly looks like you but it's far from definitive. And you're right Nate, I wasn't 100% when I first saw them. But I need to know, did you take your glasses off at any point?\"\n\n\"I don't know, maybe. We were there for awhile.\"\n\n\"Wendy, are these all the photos?\" I asked.\n\n\"Apparently. I'd have to think that if there were any that clearly identified Emma, they would've been posted.\"\n\nSo what do we do?\" asked Emma anxiously.\n\n\"I say we stay quiet a couple of days and see what the response is from the public. If a lot of people are also sceptical and newspapers refuse to print the photos, then we deny and release an official statement. You could even send out a joke tweet on your Twitter account making light of the whole thing. We can control this.\"\n\n\"Okay, that's sound good.\"\n\nThere was a moment of silence on the phone followed by a deep breath before Wendy said:\n\n\"Emma, I understand why you need this vacation and I'm not about to lecture you again on how this might effect your reputation or your career. But I just want to tell you that you need to be more careful.\"\n\n\"It was one slip up Wendy,\" Emma sighed.\n\n\"I know, but be careful. Which reminds me; next time you two want to get drunk in a Madrid nightclub, it helps preserve anonymity if you don't buy everyone drinks. And it's not my business, but staying inside a Geneva hotel room for six straight days creates a lot of gossip amongst hotel staff.\"\n\n\"You know about all that?\" Emma asked.\n\n\"And the drunken night spent on a beach in Mykonos and your amorous activities onboard a Eurail train and a whole bunch of other interesting pieces of gossip. I'm a good publicist and I've had my work cut out for me these past few months. It's a miracle I've kept things so quiet in the media with the time you two have been having.\"\n\n\"Thanks Wendy,\" Emma and I both said at once. \n\n\"Goodnight you two.\"\n\nWendy hung up and Emma and I were both left staring at each other and thinking back on our time together and what other occasions we may have been sloppy. Emma angrily snatched up the iPad and sat down on a chair in the corner and began to furious type away on the screen.\n\n\"What are you doing?\" I asked.\n\n\"Booking the first flight out of this fucking country,\" Emma said in an uncharacteristically angry tone.\n\n***\n\nONE WEEK LATER\n\n\"I can't believe you wanted to come here,\" I said as I stared out the window with excitement. \n\n\"What do you mean? You're the one who wanted to come here,\" Emma replied in a mildly curt tone.\n\n\"I didn't think you would agree.\"\n\n\"It's fine, I've already booked our flight out of here for tonight. We'll be gone before any of those arseholes know we're here. I just hope you're okay with only spending one day in Los Angeles.\"\n\nI looked at the taxi driver in front of us before leaning to one side and whispering to Emma,\n\n\"I don't mind. Besides, that's plenty of time for sightseeing, shopping,\" I said before adding suggestively, \"And other things.\"\n\nEmma rolled her eyes while simultaneously smiling widely. She didn't reply but instead just looked at me with a hint of judgment and more than a hint of arousal. I stared right back and said: \n\n\"What? I've been keen to fuck you on every continent.\"\n\nEmma stifled a laugh and once more looked to see if the driver heard anything before replying, \"We can discuss the logistics of that later, but in the meantime we'rehead to Rodeo Drive for a little shopping.\"\n\n\"Isn't that place really high class?\"\n\nEmma smiled, \"Like I've said many times before Nate, I can-\"\n\n\"You can afford it, I know,\" I said interrupting her.\n\nEmma smiled before changing tone and saying, \"By the way, I forgot to mention. I want to stop by Wendy's office later.\"\n\n\"She's in LA?\"\n\n\"Yeah, she's a Hollywood publicist, she spends half her time here.\"\n\n\"She must be glad that whole topless photos thing blew over,\" I said.\n\n\"Not as glad as I am. I still can't believe we got away with it. I mean, I didn't think anyone could believe it was anyone other than me in those photos.\"\n\n\"Neither did TMZ. They were still running a \"is it Emma Watson in those photos\" poll as recently as yesterday,\" I said as Emma shook her head. I looked at her for a moment before adding, \"I'll never make fun of your massive sunglasses again.\"\n\n\"Wendy said I should get them mounted and framed,\" Emma chuckled.\n\nI chuckled before asking, \"What time do we go see her?\"\n\n\"Actually, I think I should go alone. I think Wendy might be more than a little bit annoyed with you. Something about you stealing her client's heart and being distraction to said client's career.\"\n\n\"Fair enough,\" I laughed. \"You go see Wendy, I'll be out spending your money for you.\"\n\n***\n\nTHREE DAYS LATER\n\nLA was surprisingly uneventful. Fun, but uneventful. I got to see the one of the most famous cities in the world for the first time, Emma met up with Wendy and we both made use of Emma's credit card. Not to mention we didn't have one run-in with any paparazzi. We decided to stay in the States and currently found ourselves in Las Vegas, because, to quote Emma, \"no one in Vegas so much as blinks at a deformed freak much less an actress who most of the internet didn't recognise when she had her tits out.\"\n\nFor the past two days, we've just been fine dining and gambling non-stop. And for the record, gambling with Emma is one hell of an experience. It was currently 2 am and we were stumbling through the door of our luxury suite at Caesars Palace \n\n\"How much of my money did you lose?\" Emma asked as she kicked the door shut while simultaneously refilling her champagne glass.\n\n\"We,\" I corrected her. \"We lost a bit over $5,000.\"\n\n\"We? It was my money,\" Emma said in a vaguely drunken tone.\n\n\"And you were the one who decided to double down on that last hand and then lost.\"\n\n\"I felt lucky,\" she shrugged before saying excitedly. \"Let's go to the Bellagio again tomorrow. Caesars has been nothing but bad luck.\"\n\n\"I say we head to the roulette tables and drop everything on red.\"\n\n\"Define everything. I have very deep pockets.\"\n\nI stumbled towards the bedroom, suddenly becoming acutely aware that I was just as drunk as she was. \n\n\"We should fuck,\" I blurted out.\n\nEmma laughed. \"How romantic.\"\n\n\"Is that a yes?\" I asked without turning around.\n\nThe sound of the zipper on her dress being pulled down was all the answer I need. I smiled and walked into the bedroom. I sat down on the front of the bed and watched the door. Emma walked lightly across the carpet and entered the room wearing only her black bra and panties. I smiled as she walked over to me and stopped in front. I leaned forward and planted light kisses all along her belly while running my hands up and down her thighs. Every inch of her body felt so familiar by now. I knew ever curve, every detail and every imperfection of which there were very few. I'd touched those thighs many times, planted kisses on almost every area of her body. I knew her so well by now. I didn't think anything could ruin what we had; especially not 127 pieces of paper bound neatly together. \n\n\"Give me one minute,\" Emma said before giving me a kiss.\n\nThe smell of the alcohol on her breath lingered for a moment as Emma skipped into adjoining bathroom. I began to take off my shirt and moved further up the bed when I felt something beneath the covers. I reached underneath only to pull out a movie script. The mere sight of it filled me with dread. I ran my hands over the title on the front page and asked out loud,\n\n\"What's 'Two of Us'?\"\n\n\"Pardon?\" Emma replied distantly.",
        "\"This is a script,\" I said.\n\nEmma leaned out of the bathroom and saw me looking at the script before replying, with a tiny hint of anxiety in her voice,\n\n\"Yeah. My agent gave it to me.\"\n\n\"Did he send it by post?\" I asked.\n\n\"No. I went and picked it up at his office in LA,\" she replied. My expression must not have looked good because Emma instantly asked, \"Is that a problem?\" \n\n\"No, I'm just a bit confused. I thought you only went to see Wendy in LA. And last I checked she was your publicist,\" I said, before adding, \"Also, I thought you weren't taking on any projects. Isn't that the whole point of this vacation?\"\n\n\"Yeah, but my agent said the script was really good. I figured at the very least I could get some reading material.\"\n\n\"So you're not taking the part?\"\n\n\"I haven't even read it yet.\"\n\n\"But if it's very good, would you take it?\"\n\nEmma stepped out of the bathroom and stood leaning against the wall. Her silence said it all. Perhaps it wouldn't happen immediately, but I knew then that my days of globetrotting with Emma Watson were numbered. She avoided my gaze as my mind wandered. If she goes back to her life, where does that leave me? Do I go back to Australia or do I follow her? A dozen different scenarios ran through my head; some of them included Emma, some didn't. Emma, as if sensing my concerns, said:\n\n\"Look, we both knew this wouldn't last. I wanted to run away for awhile, clear my head and have some fun, but I never intended to spend the rest of my life this way. I just got a little burnt out from the lifestyle but it doesn't mean I wanted to leave it forever. I still love what I do.\"\n\nI was quiet. None of this was news to me, but it hurt nonetheless. For the first time since I'd met her, I couldn't look at Emma's face. Instead, I averted my eyes and said,\n\n\"I know, I just hoped we'd get more time together. I mean, I know it's been about 4 months, but it hasn't felt like it.\"\n\n\"Barely felt like 4 days,\" she said fondly before adding nervously, \"You could come with me.\"\n\n\"And do what? Stay at home all day in London while you go off and shoot your films.\"\n\n\"Would that be so bad? Many people do it.\"\n\n\"I just don't want to be a layabout at 24 years old.\"\n\n\"I'm not asking you to be a layabout.\"\n\n\"But that's what I'd be if I was anywhere but Australia. And besides, I do love my life there. I needed a break from my boring, meandering life just as much as you needed a break from yours. But there were still a lot of good things I left behind. I have friends and family I haven't seen in months and I miss them.\"\n\n\"No more than I miss mine.\"\n\nThere was silence between us. We had gotten comfortable with silence during our time together. We had become that close and developed that intimate a relationship. But this was difference. Tension pervaded the air.\n\n\"This thing of ours; it's over isn't it?\" I asked eventually with an air of resignation.\n\n\"Nate, I haven't even read this damn script much less taken the job. I'm still yours,\" she said unconvincingly.\n\n\"Why this script though? I know your agent said it was good, but hasn't he been saying that about every script?\" I asked, more out of curiosity than anything else, as I began to flick through it.\n\nEmma took a deep breath before replying, \"This one is different. Spielberg is going to direct it.\"\n\nI laughed in spite of the situation and said, \"Oh fuck, you are so taking this role. I know how much you want to work with him.\"\n\n\"I don't know what I'm going to do,\" she replied reservedly. \"Worst part is, it's such short notice. The film starts shooting soon.\"\n\nI narrowed my eyes and asked, \"How soon?\"\n\n\"A little over two weeks,\" she said rather quietly.\n\n\"Fuck!\" I said louder than I expected.\n\n\"The actress they originally cast in the role dropped out at the last minute. I just have to read for Spielberg and if he likes me, the job is mine.\"\n\n\"How could he not like you?\" I muttered before asking, \"Okay, maybe we're just blowing this out of proportion. How long would you be away if you did this?\"\n\nEmma thought about it for a moment before replying, \"About five weeks.\"\n\n\"See, that's not too bad. You do this film and we pick up where we left off,\" I said optimistically.\n\n\"That's not the point Nate,\" Emma said quietly. \"We can't keep doing this. I love you, but having sex, travelling the world and spending tens of thousands of pounds isn't exactly a good long term plan.\"\n\n\"So what do we do?\"\n\nEmma shrugged and walked over to the bed and sat down next to me. I only just realised then that she was still wearing only her bra and panties. While still very much affected by the champagne and without a great desire to continue talking about such grim topics, I leaned over and kissed her on the lips. It started out simply; just a small peck on the lips. But Emma continued to lean in and soon we were locked in a passionate kiss. A whole array of senses overwhelmed me from the taste of her lips, to the smell of her intoxicating perfume and even underlying sweat on her skin. Soon I felt her warm skin on the tips of my fingers followed by the touch of her bra. Fumbling blindly behind her, I felt her bra come loose and with a quick shrug of her shoulders, the straps fell to one side and I pulled the bra from her and threw it away.\n\nAs I looked at her naked breasts, I recalled the excitement from the time I had first seen her naked so long ago. I remember touching her body and repeating her name again and again in my head, as if to convince myself it was happening for real. Because even though I could feel her, touch her, smell her; being with Emma Watson had seemed like a scenario reserved only for my wildest fantasies. As I looked at her now, as I kissed her neck and cupped her firm, ample breasts; I was struck only by a feeling of familiarity. We'd had sex so many times in so many different places in so many different positions that I had forgotten about how absurd this situation was. For the first time in a long time, I sat there and reminded myself of who this woman was. She was Emma Watson, movie star, icon, millionaire and my girlfriend. I didn't deserve her. But the last thing I wanted was to lose her.\n\nWithout thinking, I lifted her body onto the middle of the bed and climbed on top of her. I think we both just wanted to delay our conversation. Our relationship had begun with sex; perhaps it was fitting that it would end with it as well. There was a different mood this time, as if we both knew that our time together was now limited. Emma lifted her legs up and slid off her panties as I took off my own clothes. I planted a long row of kisses from her lips, to her neck, down to her breasts, past her belly and squarely on her vagina. Emma watched me the whole time, with one hand on my head and another behind her own. As I moved back up, I placed a hand over her left breast and felt her heartbeat pulse beneath my hand. I looked up and down her body with lust and longing. \n\nI moved on top of her and soon felt her fingers wrap around my fully erect penis. It hovered there, mere inches above the opening of her vagina. For a change, Emma watched me all the way as she slowly guided me it to tight opening and all but begged me to push it inside of her. With one hand still on her breast and another holding her thigh, I entered her with one long fluid movement. Warmth engulfed my body as I remained imbedded inside of her for several long seconds. Our eyes were locked and as I pulled out of her before pushing back in, I watched her mouth open silently and her eyes cry out in pleasure. I began to settle into a slow rhythm and moved in and out of her at will. Emma kept her legs spread wide as she could and pulled me in close. I was determined to maintain a slow and steady pace as Emma began to moan quietly. I was soon moving in and out of her with ease as her vagina became soaking wet.\n\nI held my body against hers, savouring the warmth from her skin and the feeling of her breasts pushed up against my chest. We continued to quietly fuck with only the sounds of my scrotum slapping against her vagina and her quiet moans filling the room. With my hand still on her chest, I could feel her heartbeat growing quicker and quicker. I continued to go slowly but slowly began to thrust inside of her with increasing force. At the height of each thrust, I held myself deep inside of before pulling out slowly. Emma began to softly cry out in pleasure right into my ear as she always did, breathing her hot breath into my ear. Soon she was begging me to go harder and faster. \n\n\"Harder! Faster! Make me cum Nate!\" she pleaded. \n\nI didn't disappoint and decided it was time for both of us to get out release. I braced myself against her body and began to vigorously assault her tight wet opening. Those first few thrusts caught her by surprise as she cried out loudly and gripped my body tightly against her own. She squirmed beneath my body as I felt myself build towards an orgasm. For a moment, I felt myself slip out of her. I looked down for a moment to see her vagina; soaking wet and twitching ever so slightly as she all but begged me to enter her again. I guided the tip of my penis into her tight little hole once more and almost at once, we both wrapped our arms around each other and prepared ourselves. With every long, hard thrust, I could feel myself ready to burst until finally, I felt myself squirting my semen deep inside of her. I grunted loudly and was ready to collapse on top of her. Unfortunately, she wasn't done yet.\n\nNot wanting to disappoint the lady, I forced myself to continue to thrust in and out of her. I could feel her insides soaked with our respective juices and with every thrust, I could hear a soft squelching sound as it began to ooze out of her. I knew I couldn't last much longer as all my energy began to leave me at once. But as I placed my hands on her buttocks and pulled them apart and forced myself as deep inside of her as possible, I suddenly felt her body tense up as every muscle began to stiffen. I knew instantly what this meant, having witnessed it countless times before. First came the tensing up, then came the nails across my back, then the long cry of pleasure directly into my ear and then her legs wrapping tightly around my waist before finally a fresh wave of moisture came pouring out, mingling with my own semen before it gushed out of her. A cry of pure ecstasy continued to fill my ears until she was all spent. I was about to roll off of her body, but she immediately held me in place and gasped between deep breaths,\n\n\"No...don't move...just stay there...just stay there.\"\n\nI did as I was told and just laid on top of her, her heart racing beneath me, her hot breath against in my ear and our collective juices oozing out of her. How many more times would we get to do this, I thought to myself. Could I possibly live without her after all we've been through? My penis remained relatively stiff inside of her for some time as we just lay there together; naked, sweating and our groins covered in cum. Emma remained still beneath me as I began to lazily kiss her on the lips. She responded weakly but still made the effort to slip her tongue into my mouth. We remained like this for sometime until I felt my penis finally become flaccid before finally rolling off her body. I moved my hand between her legs and touched her vagina with the tips of my fingers. She was still dripping wet. I became aware that she was looking at me. I returned her gaze and placed my hand on her face, just above her neck. Emma kissed it and didn't seem to care remotely that I had inadvertently smeared some of our juices onto her cheek. We both knew that our distraction was over. \n\nWe lay together for sometime, just staring into each others eyes. Sex had always played such a crucial part of our relationship, but we knew it wasn't enough this time. We had to discuss the elephant in the room. We needed to continue our talk.\n\n\"I was always afraid the long distance would be what killed our relationship,\" I muttered.\n\nEmma looked at me longingly before saying, \"Even if I do take the job, it's not going to end immediately you know. We still have two weeks together.\"\n\n\"Two final weeks of travelling, shopping and fucking?\"\n\n\"Maybe just the last one.\"\n\nI chuckled and nodded in agreement before saying something neither of us really wanted to hear. \"I think we both know you're going to take this job. You don't want to give up and opportunity to work with Steven Spielberg.\"\n\nEmma didn't even try to deny it. Even if she did, I'd see right through her. We'd been together long enough for me to know these things about her. Despite all her misgivings and complaints about the celebrity life, she did love making movies. And Spielberg was one of those directors who she had always wanted to work with. Once I realised Emma wasn't going to say anything, I said,\n\n\"Okay, so you take this job, we spend our last two weeks together and then you go shoot your movie for five weeks and I go home to Australia visit family and friends. That much is obvious. But what happens after?\"\n\n\"Well, since neither of us want to try long distance; one of us would have to move across the world to be with the other. Or if we can't do that, we have to break up.\"\n\nI thought about this for a moment. Somehow, I didn't think Emma would move to Australia to live with me anytime soon. But would I move to England? I couldn't work as a lawyer anymore. At least not without some lengthy extra education which I wasn't too keen on. Or perhaps I could pursue a hobby in my free time. I always did like to write. The idea sounded absurd; me sitting in a house in London writing a crappy novel while waiting for my famous girlfriend to come home from whatever exciting place her career had taken her. But then again, the moment you count Emma Watson as your girlfriend is the moment where nothing ever really sounds absurd anymore. Was I really ready to put Emma before everything else in my life?\n\n\"What do you want?\" I asked.\n\nEmma avoided my gaze. \"I want you by my side. We can't keep doing what we've been doing these past few months, as lovely as it's been, but I still want you in my life. But I know that's could be asking a lot, and I don't want to make the decision for you,\" she said, clearly choosing her words carefully. \n\n\"I don't know what I'm going to do. 24 years old isn't exactly the ideal age in which to shirk all responsibilities, quit your job and start living off your girlfriend's money. But then again, if I went back to my life, I'd miss you too much. I'd probably end up calling you within a couple of days.\"\n\n\"When I finish the movie and you aren't there waiting for me, I'd probably call you first. I want to be able to pick up the phone and call you and know you're only a few minutes away instead of on the other side of the world,\" she said before frustratedly adding, \"God, this would be so much easier if you just lived in Europe! Hell, even the States would be better. It's still long distance but at least it's manageable. But Australia! That's a 21 hour flight from London. You couldn't pick a worst place in which to have a long distance boyfriend.\"\n\nI sighed and said, \"Is it possible we're just making this out to be more complicated than it really is?\" \n\n\"I don't know, maybe,\" she shrugged. \"But the fact is, we both love the comfort of home just as much as each other.\" \n\nShe was frustrated, she was stressed and she was sad. I turned to Emma and touched her face again. With a finger on her chin, I tilted her head so I could look deep into her dark brown eyes as I said,\n\n\"So what do we do Miss Watson? What do we do?\"\n\nOur eyes were still locked as I asked the question. I had no answer. Neither did she. I love her and she loved me. Was it enough? \n\n***\n\nEPILOGUE -- THREE MONTHS LATER\n\nIt is sometime in October, I'm not sure of the exact date. In my gut, I know I should be thousands of miles away in another country on another continent. Instead I'm right here standing by the window overlooking downtown as the sun sets below the skyscrapers. Had I made the right choice? It's a question I'd been asking myself many times since Emma finished shooting her movie. The eternal battle of heart versus head. In the end, I made my choice and it was the right one.\n\nSuddenly my phone begins to vibrate on the desk. I slowly move towards it. I have about 90 contacts on my phone, but I only want one of them to be calling me. I pick it up and looked at the caller ID:\n\nEmma.\n\n***\n\n***\n\n***\n\n***\n\n***\n\nAFTERWORD\n\nAs I've stated previously, \"Emma\" was originally planned to be a standalone story and as such, I had no intention to write a sequel much less two. However, I changed my mind in large part as a result of all the wonderful words and the requests I've received. Also, given that all of my stories so far, including the non-celebrity ones, concerned the beginning of relationships, I felt it only right that I write a story about what happens next. And as you can see, what happened next is that Emma and Nate date for awhile before they, well, decide for yourselves. \n\nI may return to these characters one day, but for now, I'm all out of ideas. Hope you've enjoyed the stories. And as before, comments and votes are appreciated. "
    ],
    "authorname": "clownprince2008",
    "tags": [
        "emma watson",
        "harry potter",
        "hermione granger",
        "pool",
        "hotel",
        "cunnilingus",
        "romance",
        "beach",
        "actress"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/emma-ch-03-3"
}