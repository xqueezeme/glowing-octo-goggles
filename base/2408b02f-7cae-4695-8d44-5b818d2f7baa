{
    "title": "Run and Hide Pt. 04",
    "pages": [
        "Chapter 13\n\nIn retrospect, it probably wasn't a good idea for Paul to sequester himself for a long weekend with nothing the meager contents of his refrigerator and a well-stocked liquor cabinet.\n\nThree days. Three days of silence from Steven. Three days of messages from Ace. Three days of hating himself.\n\nPaul felt like such a fool. And, worse, he knew better. He'd always known better. This was why he had rules. This never would have happened if he had followed his instincts as he'd always done.\n\nEven if the path he'd been following led to an empty life.\n\nRight now, though, that path looked mighty good. At least Steven was there.\n\nWell, that damage had already been done. He hoped his brother would eventually come around and speak to him again, but his hope sank with each day of silence.\n\nThe despair would be bad enough if that was all Paul was battling. The jealousy over seeing Ace with that muscled gremlin was rubbing him absolutely raw. Tanner was touching his man like he had some sort of right to, and everything inside Paul went ice cold.\n\nHe didn't want to hear excuses. Didn't want to hear that he'd been taken for a fool. So he didn't do anything but hide -- the one thing he'd always been good at. He hid in his condo and hid in himself.\n\nPaul hated how stupid he felt. He thought he and Ace were on the same page. He had never -- never -- felt so at home with himself before. There were times he looked at Ace and saw his love mirrored in those beautiful blue eyes.\n\nFor the first time, he really fit with someone and could be his true self. At least while they were alone together.\n\nApparently, he should have been worrying about the times they weren't together.\n\nFucking Tanner Caldwell. Paul had meant to talk over that clusterfuck with Ace, but then Steven had happened. And then it happened.\n\nPaul peered down the neck of his nearly empty bottle of Jack Daniels and swallowed the remainder in one gulp.\n\nAll those baby steps he'd painstakingly made weren't enough in the end. Ace obviously wanted someone who wasn't so much trouble to be with. Someone easy.\n\nThat college punk was the very definition of 'easy.'\n\nLacking any more liquor, Paul slumped on the couch and waited for night to come so he could go to bed.\n\nNone of these scrambled, bitter arguments changed the fact that he was still completely in love with Ace, and Ace clearly, visibly didn't feel the same way.\n\nThe doorbell shook him out of his thoughts. He opened the door and found his arms full of Holly, who squeezed him tight.\n\n\"Is it okay that I'm here?\" she squeaked against his chest, still bear hugging him. \"I couldn't wait any more. I mean, this has been killing me, knowing all of this -- oh, but I mean I know it's been killing you worse than it's been killing me, of course. You poor thing!\"\n\nPaul chuckled, the first laugh he'd really meant since that day at Ace's house.\n\n\"Well,\" he said. \"I guess that makes us a couple of really sad corpses.\"\n\nThat made Holly hug him even harder before she finally pulled back. \"Now, don't kill me,\" she said.\n\n\"Kill a corpse?\" Paul arched an eyebrow. \"Overkill much?\"\n\nHolly leaned out into the hallway and pulled Steven, looking sheepish and wary, into the foyer.\n\n\"Hey,\" Steven said in a small voice.\n\n\"Hey,\" Paul echoed, his face drawn carefully back to neutral.\n\nHolly looked back and forth at the two men as the silence filled the room. Then she stepped in to mediate.\n\n\"Okay. It's time to make up,\" she announced. \"Apologize if you have to -- and I mean both of you. Or, you know, don't apologize. You're guys. Fight. Punch things. Then make up. I. Mean. It. No excuses.\"\n\nShe squeezed Paul's arm and gave Steven a peck on the cheek, then darted out the door.\n\nNeither man wanted to be the first to break the silence, so they both stood there, looking anywhere but at each other.\n\n\"So, you wanna?\" Steven finally said.\n\n\"Wanna what?\"\n\n\"Fight. Punch things.\"\n\n\"Will that make me less gay?\" Paul was still hurt that his best friend was acting this way, and he could feel his strained emotions fray further.\n\nSteven winced at the word \"gay.\"\n\nPaul sighed harshly. \"You're not ready to do this. Call Holly and tell her to come get you.\" He turned to go back to the couch, but Steven reached out to stop him.\n\n\"No,\" he said. \"I can do this. I have to do this.\" Steven took a deep breath. \"Holly is little, but she can be unbelievably scary.\"\n\n\"I hear that,\" Paul said.\n\nSteven cocked his head. \"Well, she can't be that scary to you, though, right? I mean, you had already told her about, you know...\" He gestured toward Paul.\n\n\"The g-word?\"\n\n\"Yeah.\"\n\n\"Well, she didn't really give me a choice.\"\n\nSteven frowned. \"Would you have told her? I mean if she hadn't figured it out?\"\n\nWould he have? If Holly wasn't pushing on one side and Ace on the other, would he have stayed silent and alone? Probably. Although right now, silent and alone sounded like a paradise compared to this hell he was twisting in.\n\n\"I don't know,\" Paul finally said.\n\nSteven was still having trouble meeting his eye. This was going to take a while.\n\n\"So, whiskey? I think whiskey,\" Steven said. He held up a bag he brought with him as a peace offering. \"You still drink whiskey, right?\"\n\nPaul rolled his eyes. No, being gay has changed every single thing about me, including the type of liquor I prefer.\n\nSteven poured two tall glasses of Jameson over ice, and the brothers sat on opposite ends of the couch to drink them.\n\n\"So,\" Steven started in a tight whiskey voice, \"you're gay now.\"\n\n\"Yep. Just now.\"\n\n\"How long? I mean, have you known?\"\n\n\"Kinda always.\" Paul had a feeling that wouldn't go over well.\n\nAnd, right on cue, Steven's frown deepened. \"So you've been lying to me kinda always?\"\n\n\"I never wanted to,\" Paul said, a pained look twisting his face. \"I'm just --\" How did he explain this?\n\n\"Just what?\" Steven snapped. \"Just chickenshit? Is that it? You were just afraid?\"\n\n\"Yes,\" Paul said quietly.\n\nSteven's mouth dropped open, as if he wasn't expecting Paul to admit that. \"How could you be afraid?\" he asked, incredulous.\n\nPaul stood suddenly, his frustration pushing his feet around the room. \"Have you ever really listened to guys when they talk? Do you realize how totally homophobic most guys are? Especially in a locker room or even just in a group? You should listen sometime. Count the jokes about fags and pussies.\"\n\n\"Oh come on,\" Steven protested. \"It's not that bad.\"\n\n\"Well, your radar's not tuned to it. I heard every one.\" Paul sighed and ran his hand through his hair. \"I was trying to not get my ass kicked in high school. So, yeah, I was scared.\"\n\nSteven downed another big gulp of his whiskey and coughed at the burn. \"And after?\" he asked. \"It's been twenty years since high school. What scares you now?\"\n\nPaul sighed again and sat down. \"You.\"\n\n\"You think I would kick your ass? Over this?\" Steven's face twisted in pain. \"That's how you see me?\"\n\n\"No, of course not,\" Paul said. \"I know I can take you.\"\n\nSteven shoved him lightly, but with a smile, which Paul was relieved to see. \"Then what?\" Steven said.\n\n\"I didn't want to disappoint you.\"\n\nSteven's mouth dropped open again. \"Disappoint me?\" he squeaked. \"My big brother the doctor didn't want to disappoint me?\"\n\nPaul rolled his eyes. \"Come on, I've always known you looked up to me.\"\n\nSteven ducked his head, acknowledging the truth.\n\n\"I didn't want you to look at me any differently,\" Paul said. \"So, adding everything up -- plus Mom and Dad and how they would react -- I figured it was safer to keep this stuff to myself. I was -- I don't know.\" He took another sip of his drink. \"It was cowardly, I know.\" He turned to look at his brother. \"But then when I told you, you just left like that, and it was like my nightmare came true.\" He swallowed hard against the pain that was still fresh and on the surface.\n\nSteven looked down for a moment, then back up at Paul. \"You're not gonna cry, are you? Are you a crier now?\"\n\nPaul punched him on the arm and smiled. He could always count on Steven to tease him out of a bad mood.\n\n\"I am sorry that I bailed on you like that,\" Steven said quietly. \"It was a lot to take in, and I just didn't know what to say.\"\n\nPaul nodded and took a deep breath. \"I'm still me, you know.\" He wasn't convinced that Steven really understood that, actually.\n\n\"Yeah,\" Steven said. \"Well, sort of. But there's this big part of you I don't know anything about. Feels weird.\" He looked Paul in the eye. \"Thought I knew everything about you.\"\n\nPaul cocked his head. \"Do you really want to hear about it? About two guys?\"\n\nSteven shifted uneasily in his seat. \"Um, sure.\"\n\nPaul snorted a laugh. \"No you don't, liar.\"\n\n\"Okay, maybe not. Not yet.\" He finished his drink and gestured to Paul with his glass. \"But I don't want you to hide stuff from me, bro.\"\n\n\"I'll have to figure out what to filter,\" Paul said. \"Keeping in mind your squeamishness.\"\n\n\"You know what works on squeamishness?\" Steven said, standing. \"More whiskey.\" He refilled his glass and topped off Paul's. They clinked glasses and Steven plopped back down on the sofa.\n\n\"How you doin' there, B?\" Paul asked after a few silent sips.\n\n\"Still processing,\" Steven murmured. \"I mean, it's not like I have anything against gay people. Like Ace, for instance.\"\n\nPaul's heart clenched at the name. \"Yeah?\"\n\n\"Yeah, he's great. Holly has practically adopted him. So it's not the fact that you're gay or anything.\"\n\nPaul blew out a breath. \"But there's a thing?\"\n\nSteven frowned, still processing. \"I'm not sure how to say it.\" He paused and stared off into space. \"It's like my world view has been knocked off its base. If I had this big thing about you all wrong, then everything could be wrong, you know?\"\n\n\"Huh.\" Paul frowned. \"I never thought of it that way.\"\n\n\"I don't know if I used the right words,\" Steven said. \"It's a big thing I'm trying to work out. Just need more time to think about it.\"\n\n\"Not too much more, I hope?\" Paul didn't know if he could handle even another day without his brother still in his life. These last three days were torturously long and empty. Without dinners at Steven's -- and without any Ace anywhere -- Paul discovered exactly how little he had in his life.\n\n\"Nah,\" Steven said. \"No more radio silence from me. I really am sorry about that.\"\n\nPaul nodded, infinitely relieved at Steven's growing acceptance. \"And I'm sorry for not telling you sooner,\" he said. \"Maybe this would have been easier if I'd come out in college like everyone else.\"\n\nSteven thought about that. \"Nope,\" he said. \"It still would have thrown me. But it would have been better without the years of lying.\"\n\nThey toasted to that and drank in unison.\n\n\"So, this is why you don't have a date for my wedding?\" Steven smirked.\n\nPaul groaned. \"Oh man, I will be so glad to stop dodging that question.\"\n\nSteven scoffed. \"You're not off the hook yet, brutha. I know at least two bonafide gay guys -- well, apart from you, that is.\"\n\nPaul gave a panicked start.\n\n\"I think I'll start with Ace,\" Steven mused. \"He's a great guy, and he seems more like your type than my realtor. Well, not that I really know what your type is any-\"\n\n\"Don't,\" Paul interrupted. He couldn't listen to anything about Ace right now.\n\nSteven frowned. \"What? What did I say?\"\n\n\"There's kind of a mess there,\" Paul grimaced.\n\n\"You mean you already --\" Steven stopped in realization. \"Of course you already -- I always figured you for a ladies' man.\" Confusion crossed his face. \"What's the gay version of that, anyway?\"\n\n\"I'm not up on all the vocab,\" Paul muttered.\n\n\"Wait,\" Steven said, \"a mess? There's a mess?\" His face grew comically uncomfortable. \"As in -- messy?\"\n\nPaul shook his head. \"I told you you're not ready for this stuff. This is a job for a fag hag.\"\n\n\"Ah, I know one of those now,\" Steven said triumphantly. \"I should call her anyway. Let her know that she was right, as always. She loves hearing that.\"\n\nPaul went to the kitchen to gather some snacks as Steven called his fianc\u00e9. Once alone, he took in a deep, relieved, load-lightening breath. This was like having a fever break -- that blessed soaking sweat that drives away the shivering heat of the flu.\n\nBut he knew he wasn't out of the woods yet. He glanced at the calendar on the fridge and saw the Fourth of July circled -- when his parents would be in town.\n\nJack and Helen McDonnell. The next big hurdle. The next round of pain.\n\nBut Steven was back now. Those few days were among the worst he'd ever known. He honestly didn't think telling his parents could possibly hurt worse than when Steven walked out his door.\n\nNow if only Ace --\n\nHe ruthlessly killed that thought.\n\nBefore he went any further, Paul needed to tell Holly about the whole situation with Ace. He didn't want to talk about it yet -- wasn't ready to forgive -- but there was no way he could keep this from Holly Shipley.\n\nHe gathered a bag of chips and some salsa and prepared himself for the upcoming conversation.\n\nAce wanted to play around? Fine. Paul was done playing.\n\n*****\n\n\"...so, anyway, if you could just ... just call me back. I miss you. Um, bye.\"\n\nAce sighed and disconnected the call.\n\nErik had silently come in just as Ace was finishing his latest message for Paul. Erik's face probably reflected his own, he thought -- sad eyes, downturned mouth, worry etched into every muscle.\n\n\"No word from Paul,\" Ace said. \"On the plus side, also no word from Tanner. Think he's given up?\"\n\n\"He's been quiet at work lately.\" Erik sat next to Ace on the couch. \"But then again, I gave him a shitty, complicated assignment to punish him.\"\n\n\"Such a good friend you are.\"\n\nErik squirmed in his seat.\n\n\"He's not answering any of my calls or returning any of them,\" Ace moaned, back on his Paul obsession. \"He must absolutely hate me.\"\n\n\"I doubt that. I'm sure he's just hurt. We all do stupid things when our heart gets stomped on.\"\n\n\"But I know I can fix this hurt,\" Ace fairly wailed. \"It will take exactly two minutes, using small words even. I'm afraid he's going to cut me out of his life and start over in another Sparks, another back room.\"\n\n\"You don't really think that.\"\n\nAce made a face. \"Fine. I don't think that. I worry that. I fret that. All I think about are the worst of the what-ifs. What if he never talks to me again? What if he's changed his mind about coming out? What if he tells Steven he's going to try to be straight, just so his brother will talk to him again and he starts fucking some slutty blonde who looks like me but with boobs? And then he gets trapped in a loveless marriage and starts trolling the back room for anonymous blowjobs?\"\n\n\"Wow, that's...\" Erik said slowly. \"That's not the worst of the what-ifs. That's the weirdest of them.\"\n\n\"I can't help it.\" Ace planted his face in his hands. Lola, as the official comforter in residence, twirled around Ace's feet and meowed up at him. It was almost as if she was saying, 'Snap out of it.'\n\n\"But you know what's the worst one?\" Ace groaned. \"The worst of the what-ifs is the one where Paul's so hurt that he gives in to goddamn Tanner. Who doesn't mind fucking in a closet because he's twenty-two and horny and doesn't give a fuck about anyone else.\"\n\nErik's face twisted with pain and guilt, but he didn't respond.\n\n\"Tell me I'm wrong,\" Ace said. \"Tell me that's impossible.\"\n\nErik didn't respond.\n\n\"You can't, can you?\" Ace cried. \"Oh, God! Has Tanner said something to you? Is that why Paul won't call me back?\"\n\n\"Not exactly.\"\n\n\"What then?\"\n\n\"Promise you won't hate me?\" Erik said in a small voice.\n\n\"Hate you? How could I hate you? You're my best fr-\" Ace stopped himself. \"Wait. Why? Do I have a reason to hate you?\"\n\nErik stood and started pacing. \"I might have accidentally let Tanner know about you and Paul.\"\n\nAce blinked. \"What? What does that mean, accidentally?\"\n\n\"It sort of slipped out once.\"\n\n\"It slipped out,\" Ace said flatly. \"You told my freelance Web monkey -- the little stalker who's been bugging me for a second ride -- about my secret boyfriend? A guy who's taking tiny baby steps out of the closet and you told a 22-year-old perpetually horny fag about him?!\"\n\n\"Remember that time when I said don't hate me?\" Erik whispered.\n\nAce gaped at his best friend for a long moment while Erik squirmed.\n\n\"Why,\" Ace said finally. \"Why would you ever --\"\n\n\"I missed you, okay?\" Erik interrupted. \"You were off with your hot secret boyfriend having hot chiropractor sex and I was back to staring at my own walls on Sundays.\"\n\n\"So, you did this to get back at me?\"\n\n\"No!\" Erik barked, frustrated. \"Just let me try to explain this. I don't have many non-Richard-related guy friends in this town. Just you, actually. My social life ended when I broke it off with Richard. So for months and months, it's been you and me on Sundays, working on your beautiful cocoon here, protecting ourselves from getting hurt again.\"\n\n\"Hey,\" Ace protested, \"you never had to-\"\n\n\"Let me finish!\" Erik sighed deeply. \"It's been great. Wonderful, really. Just you and me. I can't tell you how much I looked forward to every Sunday. And then it disappeared.\" He ran his hands over his face. \"I was losing you to a guy who was still in the closet, just like your last asshole boyfriend, the man I've been verbally ripping apart with you for a year, and I had no one to talk to about how it was killing me.\"\n\n\"You sound jealous.\"\n\nErik ducked his head. \"I guess I do.\"\n\nAce wasn't sure how to process that. So he did what he always did: ignored the stickier friend-or-lover issue and focused on his anger.\n\n\"So you told all this to Tanner, of all fucking people?\" Ace growled.\n\n\"I didn't seek him out or anything! He kept asking questions about you. I don't know, I thought maybe if he knew about Paul, he'd back off. Like I --\"\n\nErik stopped himself, but Ace knew how that sentence was going to end.\n\n\"I didn't know he was going to --\" Erik broke off again. \"I'm really sorry, Ace.\"\n\nAce squeezed his eyes closed and shook his head. \"I can't talk to you right now.\"\n\nErik nodded and silently walked out the door, leaving Ace to process everything. Ace reached for Lola, but the comfort ambassador immediately sauntered out the kitty door in the kitchen.\n\nAce poured himself an unnecessarily tall glass of Jameson and took a long, burning pull from it.\n\nIt felt like everything was unraveling this week. The last time he'd felt this way, he'd quit his job and moved to Kansas. A brand-new thirty-year mortgage kept him from thinking seriously about doing that again.\n\nStupid mortgage.\n\nBut it was more than that. It wasn't just a whim that made him plant roots in Lawrence; he wanted those roots. Craved them. Needed them to help derail his usual pattern. His whole life, every time things got weird or awkward or painful for him, he ran. Every time.\n\nHe couldn't do that this time. Didn't want to, either. Not really.\n\nSo, running was off the table. The only option left was to clean up the mess his life had become. Starting with Erik.\n\nA second gulp of whiskey went down a little easier than the first.\n\nIt was easy to blame Erik at this moment, but it didn't solve anything. Though it was comforting to have someone to blame other than himself.\n\nAt this point, Ace knew two things: He needed Erik in his life, and he needed Paul to forgive him.\n\nThe real question was: could he keep Erik as a friend -- and keep Paul as a lover? Without hurting his best friend?\n\nTime to find out.\n\nAce went outside to head for Erik's place and found him on the porch swing with Lola curled on his lap.\n\n\"Well?\" Erik said in a low, sad voice.\n\nAce sat down next to Erik and pushed them both in a slow swing. \"I'm still kind of pissed, but I'm still here,\" he said finally.",
        "Erik sighed deeply, relief flooding his face. \"Thank you. It's been making me sick.\"\n\nThey sat and swung in silence as the early evening faded into a cool, clear night. Two friends together, but in a kind of limbo, both wishing things could be as they were before.\n\n\"So,\" Erik said, breaking the silence. \"What's your plan for getting Paul back?\"\n\nAce turned and blinked. \"You want me to get him back? Even after --\" he gestured between them.\n\n\"I want you to be happy, Ace,\" Erik said. \"I had just hoped you might decide one day you could be happy with me.\"\n\n\"Erik --\" Ace swallowed hard against threatening tears.\n\n\"Don't worry about it,\" Erik waved him off. \"I'm not your type, I get that. I've known this for a long time.\" He leaned back in the seat and pushed them into a stronger swing. \"I'd rather have you as a friend than not have you at all.\"\n\nAce felt the tears well in his eyes. \"I don't deserve you, you know that?\" He pulled Erik into a hug.\n\n\"This is my burden,\" Erik joked through his own tears, his face pressed into Ace's shoulder.\n\nThey both sniffled and pulled back to compose themselves.\n\n\"So, I've been thinking about it, and I've decided your situation calls for a grand gesture,\" Erik announced.\n\nAce looked at him with skepticism. \"This is not a wacky Matthew McConaughey movie.\" His face went temporarily dreamy. \"Mmmm, McConaughey.\"\n\n\"Please, I would not stoop to that reference,\" Erik scoffed. \"I was thinking more 'Say Anything.' You know, boom box over your head, Peter Gabriel, the works.\"\n\n\"I got rid of my boom box after college.\"\n\n\"Or, to be a shade more classical about it, you could write him a long letter, a la Mr. Darcy,\" Erik offered.\n\n\"But I want to see him,\" Ace insisted. \"Want him to see me. Want him to really see that I need him. That I lo-\" he stopped abruptly and swallowed. \"That I love him,\" he finished softly. \"I do. I can't tell him that in a letter.\"\n\nErik nodded at him and smiled softly. That was the first time Ace had admitted the depth of his feelings out loud.\n\n\"It's not enough to tell him the L-word, you know,\" Erik said. \"You have to let him all the way in.\"\n\n\"So to speak,\" they said in unison.\n\nErik looked all around Ace's bright, stuffed, artful living room. \"You've built a beautiful cocoon here. Lots of projects, lots of protection. Make sure he knows he's welcome in your turf. And I don't just mean on this couch.\"\n\nAce frowned again. Paul was here all the time. Hell, he could still smell hints of him in the cushions. How much more did Erik want?\n\nAll the way in, he said. Did Paul not know how he felt about him? Was it not obvious? Was that why Tanner was able to scare him off so easily?\n\nErik was right. Ace hadn't let anybody in -- really in -- for a long time. Instead, he'd filled himself up with projects and work and distractions and this simmering, heavy anger. How could anybody new find a place in all that?\n\nRemarkably, Paul had. He was persistent, stubborn and irresistible. And now it felt like he could slip away forever.\n\nThat scared Ace more than any deep, dark closet.\n\n\"So, it sounds like the only plan available is to stand outside his door and wait for him to show up,\" Erik said. \"Go and put yourself in his face.\" He smiled over at Ace. \"Seriously, who could resist that face?\"\n\nAce managed a watery smile.\n\nErik gave his thighs a definitive slap and stood up. \"I'm going to go. Get to work on this plan and report back, if you please.\"\n\n\"Yes sir,\" Ace said. So easy to say that, he thought. Come up with a brilliant plan. Wait for a miracle to happen, skip to the end.\n\n\"He loves you too, you know,\" he said, pausing at the bottom step. \"I could see it right away. And that doesn't go away as quickly as you're afraid.\"\n\nHe left Ace alone with his thoughts and his purring cat.\n\nAce meanly thought that, really, Paul should be giving him the benefit of the doubt. Ace had suffered more than a few indignities in the short time he'd known Paul. The least that man could do was answer his damn phone.\n\nBut Ace knew how it must have looked with Tanner -- a young, admittedly hot, eager guy touching him like that. Ace tried to imagine how he would have taken it if he'd seen Paul in a similar position. The fury that raced through his veins made him almost dizzy.\n\nAnd it came at possibly the worst time for Paul, right when he was experiencing the darkest part of coming out. Ace could remember that hopelessness, the cold plastic swing and the rusted chains against his hands, staring down into the scuffed dirt at his feet. He remembered how alone he'd felt -- right until that moment Sonya came by and pulled him out of his funk.\n\nHe wanted to be there for Paul, especially now. But being there would involve chasing after him. How ironic. All this time, Paul had been doing the chasing, and Ace had been holding him off.\n\nNow he found the roles reversed. He was going to have to be persistent, to not take no for an answer, everything Paul had done to win him over. Could this be fixed with a sexy back rub? Some cotton candy?\n\nThis was utterly new territory for Ace. He had never before understood the concept of fighting for someone. If a guy didn't want to be with him, what good would it do to try to change his mind? To twist his arm into loving him? Then they would both always know that one of them had to beg and the other wasn't completely on board. It's why he was able to walk away from Cameron even though it broke his heart to do so.\n\nBut right now, Ace wanted to fight -- fight to be understood, fight to get back in Paul's arms, fight all comers.\n\nA dramatic act, Erik had said. A grand gesture. Maybe it wouldn't take anything grand.\n\nMaybe just something slightly sneaky.\n\nChapter 14\n\nHe could probably get away with not telling them.\n\nPaul was a few blocks away from the Gaf, where he was meeting his parents and Steven and Holly for lunch. For the entire drive from Lawrence, he'd been debating with himself -- well, arguing, really -- whether to tell Helen and Jack McDonnell his big secret.\n\nHis bruised, cowardly angel said: They've lived their whole lives just fine without this little bomb being dropped on them. And it's not like they live in town or that you see them very much.\n\nHis also bruised, angel-knows-best side said: You're lying to them. There is no excuse for that. The lie compounds the pain.\n\nCoward: It will probably hurt them worse to know the truth about you. Their son is a fag! Think they're going to be proud of that? You can spare them that pain.\n\nBetter angel: Tell them. Mom's going to keep pushing for you to get a wife and give her grandchildren. Stop lying to your mother.\n\nCoward: Do you really want your dad to look at you that way? Like he's tasted something awful? Do you know how much that will hurt? Look at us! At these bruises we already have! Nobody is going to shield you from this. You can't take much more.\n\nBetter angel: You've come this far. You are strong. You can do this.\n\nHe pulled into the small parking lot and gathered his nerve. He hated feeling like this -- uncertain and nervous. The confident mask he wore for the world didn't fit so well anymore, especially around the people who had known him the longest.\n\nHe didn't have long to sit in his car before he saw Steven find a spot near his. Their parents were staying with Steven while they were in town, which meant he was also their duly appointed chauffeur.\n\nAn older version of Paul unfolded himself from the back seat of Steven's car. At age 60, Jack McDonnell's hair was a little grayer and his face more lined, but apart from that, he and his son could be mistaken for brothers. They shared the same grey blue eyes, the same wide smile, even the same long-fingered hands.\n\nJack gripped Paul's hand in a firm handshake, and Paul pulled him into a hug. He hadn't seen them since Christmas, a fact his mother was sure to mention.\n\n\"Hey, Dad,\" he said. \"How was your flight?\"\n\nHis mom beat her husband to the answer. \"Oh, I just hate flying, don't you just hate flying, Jack? So exhausting, aren't you exhausted? Traveling just takes it out of me.\"\n\nA short, stout woman with mostly silver hair and large glasses squeezed in between her husband and son to claim her hug. Paul leaned down to hug her back.\n\n\"You look tired, sweetie, doesn't he look tired, Jack? He works too much. That's it, isn't it? You always work too much. You should get some rest. Visit us in South Carolina. We're right by the beach, but you never come to see us and we miss you.\"\n\nThe McDonnell men stood back and absorbed Helen's speech with long-practiced patience. Paul leaned back down and kissed his mother's cheek. \"It's good to see you, too, Mom,\" he said with a smile.\n\n\"Hey, let's get inside you guys,\" Steven said. \"I'm starting to melt, and it's barely noon.\"\n\nJack took his wife's arm and followed after Steven into the restaurant. Holly tugged on Paul's arm. Her eyes were wide and alarmed.\n\n\"Oh my God, Paul,\" she whispered. \"I mean, oh my God.\"\n\n\"That bad?\" Paul grinned.\n\n\"Well, not that bad, but oh my God.\"\n\nPaul laughed. He knew his mom was an acquired taste on a normal day, but the reason they were in town was to help with wedding plans. Which meant Holly was catching the brunt of his mother's daughterless enthusiasm for the event.\n\n\"I'm trying very, very hard to keep an open mind about her suggestions,\" she said carefully, \"but I don't think your mother ever met a wedding clich\u00e9 she didn't love.\"\n\nPaul winced and chuckled. \"I'll run interference for you,\" he said. \"I'm pretty sure I owe you.\" Regardless of how that particular scenario was currently playing out.\n\n\"I'm starting to think about a little chapel in Vegas,\" Holly muttered.\n\nHe hugged Holly's shoulders in support and steered them both inside.\n\n\"So this is what they did with Romanelli's,\" Jack said, looking around the Irish pub from the foyer. \"I tell you what, I loved that Romanelli's.\"\n\n\"Well, sure and who didn't?\" John swept around the corner with menus in hand. \"There's not a day goes by that I don't hear someone mourning the old place. And with good reason. Yes, with good reason. But we still serve Romanelli's marinara, if that's what you'll be needing.\"\n\nSteven introduced his parents to the owner, who immediately welcomed them as extended family of the Gaf.\n\nHe lifted Helen's hand to his lips. \"And it's plain where your strapping boys get their good looks,\" he smiled. \"Why it's right there in your lovely eyes, isn't it?\"\n\nHelen giggled. \"Oh, I haven't been flirted with in years,\" she said.\n\nJack reclaimed her arm. \"I'll have to rectify that, then,\" he said with a low voice and a twinkle in his eye.\n\n\"Well, let this be the place to do it then,\" John trumpeted. He led them to Steven and Holly's usual table and took their drink orders, half of which he knew already.\n\nJack looked around with approval. \"Well, if this place had to change, I suppose it could have been worse.\"\n\n\"High praise, Pop,\" Paul smiled. And it was, Paul knew, high praise coming from his dad. The man did not approve of much change, and his inflexibility had gotten worse as he'd gotten older. Maybe that was a function of age, but age plus a stubborn Irish temper didn't make for the most open-minded of men.\n\nWhich didn't bode well for Paul's announcement.\n\n\"Oh, I just love planning a wedding!\" Helen gushed as the waiter arrived to distribute their pints. \"I should have had a daughter. I was born to be the mother of a bride. If only we still lived in town. I could be there with you every step of the way!\n\nHolly shot Paul a quick, alarmed look.\n\n\"Paul, sweetie, you need to find a nice girl like Holly,\" Helen continued, squeezing Holly's hand. \"I want another daughter-in-law like her. It's high time you settle down, you know.\"\n\n\"Your mother's right, son,\" Jack said.\n\nThat was unusual. Usually his dad let Helen have the floor almost exclusively -- and always when it came to Paul's love life.\n\nHolly poked Paul in the side from her seat at his right. It was time. This was as good an opening as any. Paul cleared his throat and took a long, fortifying drink.\n\n\"Yeah,\" he said. \"I've been meaning to talk to you both about that.\"\n\n\"You're seeing someone?\" Helen chirped. \"I knew it. That's why you're getting no sleep, right, am I right? Not that I want all the details, of course, but am I right?\"\n\nPaul fought a groan. \"Not exactly, no.\"\n\nBoth parents looked at him expectantly, and the silence threatened to swallow up all of Paul's practiced words. He fought to get the next words out.\n\n\"The thing is,\" he said, \"there isn't going to be a nice girl for me. Ever.\" He let that sink in.\n\nHelen was still confused, but Paul could see understanding dawn in his father's face.\n\n\"You mean you broke up with somebody?\" Helen guessed.\n\n\"Not exactly, no.\"\n\nHolly squeezed his leg under the table and gave him a bolstering smile.\n\nPaul tried again. \"The thing is --\"\n\n\"You're queer,\" Jack said flatly. The air left Paul in one big breath and he looked at his dad warily. The face he found was filled with comprehension, yes, but also incredulity and thinly masked disappointment.\n\nHelen smacked her husband's arm. \"Jack! How can you say that about your son! That's not what he means! Paul, tell him that's not what you meant.\"\n\nPaul swallowed heavily. \"It is what I meant. I'm gay, mom.\"\n\nThis time Helen had no alternate explanation. Only silence.\n\nAt that moment, John popped by their table. \"How're we doing here, folks? Have you decided what you'll be having?\"\n\nSteven broke the silence. \"Give us a little more time?\"\n\n\"Not a problem, take all the time you need,\" John said. He patted Paul on the back as he left, and Paul knew in that moment that he told more than his parents his news.\n\nJack's face was growing red and his jaw was ticking with the strain of clenching and unclenching, but he said nothing.\n\nNot so his wife. \"But, I don't understand,\" she spluttered. \"How can you be -- gay?\" She whispered the last word, as if she was talking about cancer. \"You're so -- well, look at you! You're so tall and good looking and you have a beard!\" she wailed.\n\nPaul smiled sadly. \"Not all gay men look the same, Mom,\" he said gently.\n\n\"And facial hair is rarely one of the indicators,\" Steven chipped in.\n\n\"Don't make fun of your mother, boy,\" Jack said sharply.\n\n\"I wasn't!\" Steven protested. \"I just --\" He gave up and sank back into his seat.\n\nHelen wadded up her napkin and carefully blotted tears from her eyes. \"I just don't understand,\" she said. \"All this time...\"\n\n\"Yes, all this time,\" Jack said with a tight, gruff voice. \"How long have you known this, exactly?\"\n\n\"High school,\" Paul admitted.\n\nHelen gasped. \"But, but your girlfriends! You went to prom with that nice Bannister girl! I have pictures of it!\"\n\n\"I was trying to be a normal guy,\" Paul said.\n\n\"You were normal,\" Jack spat. \"Then.\"\n\nPaul swallowed down his irritation at the implication. \"Actually, I wasn't. Not when I was hiding from everyone.\" He looked at Holly and Steven. \"I feel a bit more normal now.\"\n\n\"I see,\" Jack said shortly.\n\nAnother awkward silence descended. These silences were the worst part of this process for Paul. Wasn't this supposed to get easier with practice?\n\n\"This is really hard for him, you know,\" Steven said quietly. He looked at Paul. \"Probably as hard as it was to keep this hidden, right?\"\n\n\"And just how long have you known about this, Steven?\" Jack asked. \"Have you been helping your brother in all this hiding?\"\n\n\"No! I didn't --\" He stopped himself and cleared his throat. \"I've known for a few days.\"\n\nJack nodded curtly and turned to Paul. \"Well, I suppose there's some small comfort that you've been lying to everyone all these years, not just your parents.\"\n\n\"I haven't lied!\" Paul snapped. Which was, of course, a lie. And he knew it. But something in his father's voice took him back to his teenage years when everything his parents said felt like an attack, whether that was true or not.\n\n\"Of course you've lied!\" Jack thundered. \"It's a lie of omission! You let me believe my eldest son was --\" He swallowed his unspoken words like they left a bad taste in his mouth.\n\nPaul fought against the old urge to yell back. He and his dad hadn't been adversaries in a long time, aided by the years and the physical distance between them. But they were both cut from the same stubborn-as-hell cloth, and Paul tended to lose his hard-won patience around Jack McDonnell.\n\nAnd his dad had a point, much as he hated to admit it. He hadn't been simply hiding. He had been lying -- to himself and to everybody. He hated being caught in this lie. It felt exactly as it did when he was a kid and he found himself in trouble. He was defensive, indignant -- and most of all, disappointed in himself.\n\nHe had assumed that the biggest sticking point for his parents would be the actual fact of his sexuality -- the thing that his dad would find unbearably distasteful and the thing that would break his mother's heart. Then there was the Irish Catholic thing; his parents were devoted church-goers. He expected some old-fashioned wrath of God, or at the very least a heaping helping of Catholic guilt.\n\nBut apparently, just as with Steven, the deception upset them most.\n\nHe refused to apologize for being gay, but he knew an apology was called for.\n\n\"I had my reasons for keeping this to myself,\" Paul said quietly. \"But I am sorry for not being completely honest with you both. I was worried about how you'd take it.\"\n\nHelen sniffed loudly and wiped her tears -- and most of her mascara -- from her face while Jack sat stone-faced beside her. She gave him a watery smile and reached across the table to take Paul's hand.\n\n\"So, sweetie, do you have a nice, um, b-boyfriend?\"\n\nThough she stumbled on the b-word, Paul was relieved that he could always count on his mother to get right back on track.\n\nHe hesitated before answering her, and Holly gave his leg another reassuring squeeze. Did he have a boyfriend? One week ago, he would have said yes, happily. One week ago, he didn't know about Ace's frat boy on the side.\n\nAnd yet, he wasn't ready to say no. Wasn't ready to officially, out-loud close the door on Ace. Even the thought of it -- of his life with no Ace ever again -- was enough to make his heart dangerously tight in his chest.\n\nFinally, he cleared his throat. \"Not exactly,\" he said. \"It's more of a maybe. I hope.\"\n\nHolly's smile widened, and he knew Operation Yenta to the Rescue was about to launch. Just as soon as he survived this lunch.\n\nHis mother perked up a little at the thought of a maybe boyfriend. He never thought he'd be so utterly grateful for his mother's indefatigable push to see him mated. But it looked like -- at least for now -- she wasn't put off by the idea that his mate would be a man.\n\nHis dad, on the other hand, looked entirely uncomfortable with the whole concept.\n\n\"Is this how it's going to be now?\" Jack asked tightly. \"We're going to talk about boy-\" He stopped, unable to say the word. \"No, no, I can't. I need to --\"\n\nHe stood abruptly. \"Steven, your keys, if you wouldn't mind. I assume your brother can give you a lift home.\"\n\nSteven handed over his keychain, and Jack held out his hand to Helen. \"Let's go, dear,\" he said.\n\nHelen bit her lip as if she wanted to protest, but she gathered her bag. She gave Paul an apologetic look as she hurried after her husband.\n\n\"Don't forget,\" she called out to Holly from the entrance, \"we still need to talk about centerpieces!\"\n\nSteven and Holly stared at Paul in the long moment that followed. Paul just stared at his empty Guinness.\n\nOnce again, John magically showed up to fill the silence.",
        "\"More stout, boys? Yes, that's just what's needed here,\" he said, sweeping away the empty glasses. \"And I think I'll be sending out some of the shepherd's pie. The lamb's quite the stuff today.\"\n\nSteven nodded. \"Thanks, John. You really are the best.\"\n\n\"Not at all, lad, not at all. And just so you know, laddie,\" he said to Paul, \"one of our waiters is your way. He's going to be so chuffed when I tell him!\" He pounded Paul heartily on the back and left for the kitchen.\n\nHolly sighed happily. \"Love John.\"\n\nSteven leaned over to Holly. \"Chuffed is a good thing, right?\"\n\nPaul hung his head, unable to process any more today. This much turmoil in his life in the past seven days was starting to get to him.\n\n\"Cheer up, bro,\" Steven said. \"Dad just needs a little time. You know how the McDonnell men are. Some of us are just slow.\"\n\nSlow to change, that was their dad's motto. Paul knew Steven was right. Patience and time were the only way out of this. He learned that -- painfully -- with Steven.\n\n\"Your mom was surprisingly cool about it all,\" Holly said. Paul could tell her estimation of the woman improved because of how she took the news.\n\nPaul shrugged. \"Not that much of a surprise, actually. This increases the odds that I'll be dating someone. She'll be planning a New York wedding for me before they leave the state this week. Boyfriend or no boyfriend.\"\n\n\"Anything to take her mind off my damn centerpieces,\" Holly muttered under her breath.\n\n\"Speaking of boyfriend or no boyfriend,\" Steven said, \"any word from Ace?\"\n\n\"A few,\" Paul mumbled.\n\nSteven nodded like a bobblehead doll, waiting for further clarification. \"Have you said any words back?\"\n\nPaul shrugged by way of response.\n\n\"Hey,\" Holly punched him lightly in the arm. \"Do not lose him. I mean it. Want me to get into this?\" She mimed rolling up her sleeves. \"I fixed you and Steven. I can fix you and Ace.\"\n\nSteven made a scoffing noise. \"Yeah, you did all the heavy lifting there.\"\n\nHolly waved a solemn finger in his face. \"Do not mock.\"\n\nPaul took a deep breath to try to clear the thoughts threatening to choke his brain. \"I know I need to talk to Ace. But what if --\" he stopped himself. \"What if he and that guy -- I mean, this whole time -\"\n\nHolly cut him off. \"Do. Not. Lose. Him. Fight for him, if you have to. After all it took to get him in the first place, you're just going to give up now?\"\n\n\"I don't like to share,\" Paul muttered.\n\n\"That's a fact,\" Steven said under his breath.\n\n\"I'm serious, Paul,\" Holly said. \"Talk to him. Don't make me sic your mom on you.\"\n\nOh good Christ. Holly was playing dirty.\n\n\"I'll think about it,\" he said. Holly gave him A Look. \"I promise,\" he assured her.\n\nAnd it was true. He doubted he'd think of much else but Ace.\n\n\"Listen,\" he said to Steven. \"I'm going to bow out of the Royals game tonight. Take Mom and Dad,\" he said over their objections. \"You can sell my ticket if you want. I don't want to ruin a good night for them any more than I already have.\"\n\nSteven grudgingly gave in. \"It won't be the same,\" he said. \"I don't think I've ever been to the K without you.\"\n\n\"I guess change is the theme today, huh?\" Paul said. And not just of the day. He wanted to pound his better angel for talking him into all this.\n\n\"Want some company?\" Holly asked. \"I could skip the game, too.\"\n\n\"And deprive you of more wedding planning with Helen?\"\n\nShe stuck her tongue out.\n\nJohn brought out their meals, and they dug in to their decidedly non-Fourth of July feast.\n\nAs Holly insisted that she wasn't going to cave on her flower choices, no matter what Helen had to say, Paul was surprised to find that he could breathe a little easier. On the whole, it felt like a burden had been lifted. But, man, did it threaten to crush him at times.\n\nStill, for the first time, Paul felt free. The most important people in his life knew his biggest secret, and even though he came close to losing them, a weight was lifted from his chest. He grinned at the thought of what he could do with this freedom. Now he could go to Sparks with Ace and --\n\nBut there was no Ace and him. Not exactly.\n\nThat night, instead of watching the fireworks flash above Kauffman Stadium, Paul sat on his back patio and listened to the scattered pops and booms of the neighborhood kids' illegal celebrations. He couldn't see the explosions, but he felt each one rumble up through the earth.\n\nChapter 15\n\nThis is such a bad romantic comedy move.\n\nAce sat in his truck in a nondescript little strip mall, waiting for a reasonable time to arrive for his fake appointment with a real chiropractor. He had been in the parking lot for nearly an hour, having grown too antsy to stay home any longer.  \n\nThe weekend had been agonizing, three days of limbo knowing that Paul was just a couple miles away -- close enough to potentially see and touch, but so far away in every other respect.\n\nNow Ace was even closer to his goal, and he still had no idea what he was going to say once he saw Paul again. That was assuming, of course, that Paul would listen to him.\n\nHe braced himself for the possibility that Paul might not, in fact, want anything to do with him anymore. And even though Ace knew it was all based on a stupid misunderstanding, if Paul wasn't willing to listen to him when he was standing right in front of him, he was probably going to give up. Masochism was never his thing. But pride certainly was.\n\nCould it really all end this way, after all it took to get here? Derailed because of that damn Tanner?\n\nNot just Tanner, you dumbass. Ace could have dealt with him earlier. Could have pushed him back that night in his foyer. Could have done something except just stand there with his fly down.\n\nAce squared his shoulders at the office door, ready to do what it took. Before he opened the outer door, he remembered to plaster on a grimace of pain to support his claims of back pain.\n\nThe chirpy woman who answered the phone in the morning gave him the day's last appointment after he had filled his voice with imaginary and debilitating pain.\n\nShe was on the phone when he entered the empty waiting area.\n\n\"Uh huh. Uh huh.\" She rolled her eyes at Ace and made jabbery motions with her hands. \"Hon, let me put you on hold a sec, 'kay?\"\n\n\"Sorry about that,\" she said. \"You're Mr. Gillen, right?\"\n\n\"Yep, Lucas Gillen,\" he said, giving his brother-in-law's name.\n\n\"Well, you're nice and early!\" she smiled. \"Plenty of time to fill out our form for first-timers.\" She handed him a clipboard and a pen. \"And I can take your insurance card now to get that out of the way!\"\n\n\"Uh, I don't actually have insurance,\" he lied, taking the clipboard from her. \"But I can pay for this without insurance, right?\"\n\n\"Sure thing. Less work for me, actually!\"\n\nThis woman seemed to speak in constant exclamation marks. It was going to give Ace a headache. He retreated to a lime green office chair to invent some fiction about Lucas Gillen for the forms.\n\nThe secretary, meanwhile, had resumed her phone conversation. Ace busied himself with a month-old Newsweek magazine.\n\n\"Yeah, Dr. Z has been kind of a bear this last week, but I think it's a good sign, actually,\" she said.\n\nThat caught Ace's attention. He didn't really mean to eavesdrop, but in a tiny waiting room like that, with a receptionist who lacked volume control, it was hard not to.\n\n\"Well, you know how I get when I break up with somebody. I think Dr. Z has called it quits with his mystery woman.\"\n\nAce fought the dual pain of that statement. Obviously, Paul hadn't told his receptionist the big truth yet.\n\n\"Oh, I totally know he's been seeing someone. He's been this sickening fool for weeks. Sooo frustrating.\"\n\nThat helped ease the pain a little. Nice to know Paul was feeling it, too.\n\n\"Yeah, I think I'll just have to offer the good doctor some of my special comfort. Every man can use a little pick-me-up after a breakup.\" The receptionist looked over to Ace, who couldn't hide that he had been listening. \"Am I right?\" she asked him. \"Every man could use a good rebound girl, right? Like that Beach Boys song, what's it called,\" she trailed off.\n\n\"Rhonda,\" Ace croaked. \"Help Me Rhonda.\"\n\n\"Yeah!\" she smiled, then spoke into the phone again. \"Like 'Help Me Rhonda' or something. I'll totally be Rhonda for Dr. Z. Mmmmm.\"\n\nJealousy attacked Ace's better sense and filled his ears with screaming insecurities. Every fear he'd ever had about closeted gay men -- every convoluted scenario he had been torturing himself with for the last week -- everything came rushing back at him.\n\nWhat if Paul decided that ultimately it wasn't worth it to be out of the closet? What if he's decided to dig way the hell back into that closet? Hell, he might even start fucking women just so he could find some release! And God knows they'd be lining up for him, starting with that vapid blonde at the front desk. Who cares that Paul would be fantasizing about dick when his eyes were closed?\n\nHis grand scheme -- his dramatic gesture -- was instantly abandoned in the face of these horrifying possibilities. Ace had to get out of there.\n\n\"Listen, uh, miss?\" he said, approaching the front desk, ready to bolt. \"I need to reschedule, I think. I need to, uh, be somewhere. I totally forgot about it.\" He put his hand on the door handle and kept inching his way out.\n\n\"Well, but I'm pretty sure you'll have to pay a cancellation fee or something,\" the woman said. \"It's policy for any missed appointments.\"\n\n\"No problem, whatever you need to bill me is fine,\" he said in a rush. \"I just need to --\"\n\nHis words stopped at the back of his throat the moment Paul's office door opened. The chiropractor was leading an older gentleman to the waiting area.\n\n\"Nicole, will you get Mr. Reynolds set up for his next appointment,\" Paul said to his secretary. \"Thank y-\"\n\nBoth men locked eyes and froze. Ace caught a flash of something in Paul's eyes -- joy, maybe, or hope? -- before it disappeared and anger took its place.\n\nHe wondered what Paul saw in his own face. Probably shock, fear, guilt. Would Paul see this flare of desire that shot through him? Would he pick up on a quickening heartbeat, shallow breath, dilated pupils? He's a doctor, it wouldn't be unheard of. Ace could feel every emotion being tattooed on his face, and he couldn't find the will to move or hide.\n\nIf he ran out the door right now, would Paul follow? Would they have it out in the parking lot, or would Paul just let him go?\n\nIt was too late to make a graceful exit, too late to escape. It was time to stay put and make himself heard.\n\nPaul recovered first and said goodbye to his other patient. Ace was finally startled out of his deer-in-the-headlights stance when Mr. Reynolds needed to exit through the door he was blocking.\n\n\"Mr. Gillen, so, did you want a new appointment or something? Or do you have time to stay?\" The receptionist looked like she wanted him gone, probably so she could give Paul a help-me-Rhonda blowjob. Ace clenched his jaw and stepped closer to Paul.\n\n\"No, I probably have time after all, thanks.\"\n\n\"Okay then,\" she said. \"Dr. McDonnell, this is Lucas Gillen, your 4:15 appointment.\"\n\n\"Mr. Gillen,\" Paul said blandly. \"Follow me, please.\"\n\nThe receptionist stood and leaned over her high desk. \"He's your last patient for the day, Dr. Z,\" she said sweetly. \"I'll stick around afterward just in case you need me or something.\"\n\nPaul smiled back at her. \"Thanks, Nicole.\"\n\nAce's atoms and molecules were screaming at him to flee, to sprint away like a spooked bunny, but he girded himself and followed after Paul.\n\nThis was a bad idea. Never take dating advice from Matthew McConaughey, you moron!\n\nHe knew better than this. Once in the closet, always in the closet. Or at least, never farther than a few steps away from the closet.\n\nAce's fears started to morph into anger -- anger at always having to be the patient one, anger at being fooled by yet another closeted guy. Most of all, anger at letting himself fall in love with Paul, who was so quick to run out on him without letting him explain.\n\nBy the time Paul had closed his office door, Ace was ready to explode.\n\n\"Mr. Gillen, please take off your shirt,\" Paul said disinterestedly.\n\nFine. He wants to play pretend? Let's play.\n\nAce whipped his T-shirt over his head. \"So, your secretary's name is Nicole, huh?\" he said tightly. \"She's cute. Nice set of tits she was pushing out there. Said some interesting things about you when she was on the phone.\"\n\nPaul, who had been avoiding eye contact and scribbling something on a clipboard, paused briefly and looked up, but not at Ace. \"Oh?\"\n\n\"Not very professional of both of you, Dr. Z.\"\n\nThis time Paul did look at him. \"Excuse me?\"\n\n\"Well, if you're going to fuck your secretary, you both should have the decency to be a little more discreet. In front of patients, I mean.\"\n\n\"You think I'm fucking Nicole?\" Paul barked. \"That's what you think of me?\"\n\n\"Well, what the hell am I supposed to think?\" Ace spat. \"Like it's unheard of for a deeply closeted fag to try to convert himself.\"\n\nThat broke the dam. They both started shouting at each other, right in each other's face.\n\n\"You hypocritical asshole!\"\n\n\"I'm hypocritical? You ran out without a backward glance! Had your fill of my ass, is that it?\"\n\n\"Oh, that's just rich coming from you! How often have you fucked that little beefcake Tanner?\n\n\"Christ! Why do I even bother?\"\n\n\"Are you ever not fucking somebody?\"\n\n\"We both know you were always going to be the one who did the leaving here. Same old fucking story!\"\n\nThey both stopped abruptly, panting for breath from their release of anger. Their faces were inches apart, sharing their hot breath, not breaking eye contact.\n\nPaul broke first, lunging at Ace's mouth with his own. They both moaned at the first touch of skin on skin, of teeth clacking together.\n\nAce met him in passion, tongues clashing battling for dominance. One strong man facing another, until one submitted to the claiming.\n\nHe knew his lips were going to be puffy and even bruised when this was all over, but he didn't care. Part of him was so grateful to be touching Paul again, but he still needed to explain himself. He wrenched his mouth away from Paul.\n\n\"Wait, wait,\" Ace said breathlessly. \"I need to tell you things. I want to -- need to explain what you saw.\"\n\nPaul's roaming, hungry hands reached for Ace's face again. \"I don't care,\" he growled. \"I need you so fucking much.\"\n\nAce moaned into Paul's open mouth, briefly losing himself in another kiss.\n\nWith herculean effort, Ace tore himself away. He didn't want this to be about just sex anymore. Maybe it started that way, as a way for a mutual itch to be scratched, but it hasn't been that way for some time now. For either of them. He needed Paul to know how he felt -- before anything more happened.\n\n\"Please stop,\" he panted. \"I need to tell you this. Tanner was a one-time thing before I met you, nothing more at all. He kept trying to make it more. I should have done more to stop him, but --\" Ace stopped himself. This wasn't a time for excuses. It was time for begging.\n\nHe searched Paul's eyes for understanding, willing him to believe in him. \"I don't know how to prove that to you,\" he said, feeling helplessness creep into his voice.\n\nFor a terrible moment, Ace thought that Paul ultimately wouldn't believe him, that his mind was made up. After all, wouldn't a guilty man say the same things he had? How could he make him believe? He could drag Tanner over to Paul's house to make him confess, but he didn't trust that little fucker anywhere near his man.\n\nAce took Paul's face in his hands. \"Please, please believe me,\" he begged. \"There is nobody for me but you. Not since the moment I met you. I should have told you that weeks ago,\" he said, his voice rough with sadness.\n\nPaul stared back at him with eyes still darkened by lust and a wild look, hungry and conflicted.\n\nWhat if he couldn't accept this? Ace knew he could never walk away like he told himself earlier. He needed this man too much.\n\nThe seconds dragged on, and Ace's breath kept coming as harsh panting -- not from exertion this time, but from growing panic.\n\nMaybe Paul needed more time -- to process, to miss him, anything. It would ache to be away from him again, but whatever it took, he was willing to do.\n\nAce gave up and started to pull away, his head bowed and tears pricking his eyes.\n\nPaul caught him back in his arms and tugged him sharply to his chest.\n\n\"Where do you think you're going?\" he said, low and rumbling. \"You giving up on me so soon?\"\n\nAce's heart leapt. Did that mean?\n\n\"I'm sorry,\" Paul said softly.\n\nAnd Ace's heart took a nosedive, the abrupt u-turn making him dizzy. \"Sorry for what?\" he asked carefully.\n\n\"For wasting this whole week,\" Paul murmured, his mouth hovering over Ace's. \"One whole week when I haven't been touching you, tasting you.\" He briefly licked his tongue into Ace's mouth, then pulled back. \"Loving you,\" he whispered.\n\nTears swum in Ace's eyes. He could hardly believe what he was hearing, not after everything that had happened this awful week.\n\n\"Oh God, me too,\" he moaned. \"Me too everything. Fuck, I've missed you.\"\n\nPaul growled into a possessive kiss, and Ace felt himself harden swiftly, almost painfully. A week of frustrating dreams, of an empty bed and a heart squeezed to the breaking point -- he wasn't going to last very long. He needed Paul inside him, needed to feel turned inside out again, needed their sweat to mingle on each other's skin.\n\nPaul's hands groped everywhere, like he was afraid Ace would disappear before he could have him. Ace knew the feeling.\n\nTheir bodies would be covered with little finger-shaped bruises come morning, and Ace welcomed them. Welcomed every bit of evidence that Paul was touching him.\n\n\"I should tell you,\" Ace said breathlessly, struggling with Paul's buttons, \"there's nothing wrong with my back, Dr. Z.\"\n\n\"Better check your backside just in case, Mr. Gillen,\" Paul smirked.\n\nHe flipped Ace around to bend him over the desk, roughly pulling the jeans down his legs.\n\n\"As I suspected,\" he gasped. \"Looks like your backside does need a doctor's attention.\"\n\nPaul pressed his full body against Ace and bit into his neck, pulling a low moan from Ace.\n\n\"Can you be quiet during my examination?\" Paul whispered, his voice filled with unspilled laughter. \"Don't want Nicole to think there's something wrong.\"\n\n\"Please,\" Ace scoffed. \"You're the one who likes to talk dirty and comes like a bear.\"\n\nPaul growled as if to prove Ace right and dropped to his knees. He pressed hungry kisses along the smooth flesh of Ace's ass, and Ace melted further at the rasp and scratch of Paul's close-cropped beard. Paul teased his fingers against Ace's opening with one hand and reached around the take Ace's aching length with the other.\n\n\"God, I need you,\" Paul breathed. He stood abruptly and backed away. \"Don't move.\"\n\nAce nearly cried out in frustration, but he stayed where he was, panting and dripping, bent over Paul's desk.\n\nPaul returned with a bottle of KY jelly.\n\n\"You keep lube in your office?\" Ace asked, incredulous. \"Now who's the Boy Scout?\"\n\nPaul merely chuckled, then took Ace's head in his hands and wrenched his face around to claim another bruising kiss.\n\nHe coated his fingers with the lubricant and sank into Ace's hole. Paul was hot and forceful, wringing pleasure out of Ace like he knew all his secrets -- which, Ace, figured, wasn't half wrong. Paul knew all he had to do was curve his finger toward Ace's prostate and just tickle it while he sucked on the pulse point under Ace's ear and he'd-\n\n\"Wait, wait!\" Ace gasped. \"Not yet -- need you in me! Give me your cock.\"",
        "\"It's all yours,\" Paul rasped. He pulled away to retrieve a condom and quickly sheathed himself. With more lube slathered on his straining erection, Paul finally, finally pushed into Ace.\n\nAce struggled to keep from crying out and sharing his bone-filling pleasure with the world -- or, at least, with the receptionist just outside the door.\n\nSoon, though, all thoughts of being discovered melted from his mind, replaced with the overwhelming, blinding relief of having Paul inside him.\n\nTheir lovemaking turned frenzied and hungry, like they hadn't eaten for days, like this was a dream and they were racing the dawn.\n\n\"Not gonna last,\" Paul groaned. \"So tight ... so fucking good ...\"\n\n\"Do it,\" Ace grunted. \"Fill me up.\" He reached down to his own painful erection, determined to join Paul in this release.\n\n\"Awww, fuck!\" Paul moaned, entirely too loud. \"Love you so much!\"\n\nAce tripped over into ecstasy at that moment, in the most ferocious orgasm he'd ever known.\n\nHe was so out of it that he didn't register Paul's cleanup or maneuvering them to the floor, boneless from their exertions.\n\n\"I'm sorry I ran out like that,\" Paul said quietly when his breathing had returned to normal. He couldn't quite meet Ace's eyes. \"When I saw that guy, I thought you were just playing with me and, well, I didn't want to need you more than you needed me.\"\n\nThat wrenched Ace's heart. He had done that to Paul. This is what his fears had led to.\n\n\"I'm sorry, too,\" Ace said.\n\n\"What for? That kid was basically a stalker, not your boy on the side.\"\n\n\"No, I'm sorry for not telling you sooner.\"\n\n\"About the gym rat?\"\n\n\"About how I feel.\" Ace swallowed thickly. \"I made you do all the hard work -- coming out, dealing with the fallout, the fear. And all the while, I just expected more and more from you. I didn't give you much, did I?\"\n\nPaul draped an arm around Ace's shoulders and tugged him to his side. \"You have no idea how much you've given me.\" Ace felt the words rumble through Paul's chest and echo through him.\n\n\"Well, I should have said it out loud. Should have told you that I'm in love with you. That you're not alone.\" He looked up at Paul, wanting him to really hear that last part. \"You're not alone. Not in this. Not ever again. Not as long as you want me.\"\n\nPaul pressed his lips against Ace's head. \"There will never be a time I'll stop wanting you,\" he whispered.\n\nAce hugged Paul tighter and let himself fall the rest of the way. Paul's heart beat into Ace's ear in time with his own. Their stubborn brains had finally caught up with their prescient bodies.\n\nHe held that pose as long as he could before reality intervened. They were mostly naked on the floor of Paul's office on a Tuesday afternoon. They needed to return to the world.\n\n\"Think Nicole is still out there?\" Ace asked.\n\nPaul groaned. \"God, I hope not. This is going to be embarrassing.\"\n\nAce regretfully pulled away from Paul's embrace and stood. \"Better get it over with.\" He pulled Paul up from the floor.\n\n\"Another bandaid to rip off,\" Paul muttered.\n\nNicole was, in fact, still at her desk when they tiptoed out of Paul's office.\n\n\"Everything okay, Dr. McDonnell?\" she asked carefully.\n\n\"Very okay, Nicole,\" Paul said. He self-consciously ran a hand through his hair. Ace put a reassuring hand on the small of Paul's back. He hadn't been there for Paul for the other bandaids, but he would do what he could for this one.\n\n\"Um, Nicole, I want to introduce you to someone,\" Paul started.\n\n\"Well, I've sort of met Mr. Gillen already,\" she said slowly, as if she were talking to a child.\n\n\"Yeah, the thing is, that's not my name, actually,\" Ace confessed with a small smile.\n\nPaul snuck his arm around Ace's waist. \"This is Ace Hoffman. My boyfriend.\"\n\nAce's heart filled with pride for this brave man, and he felt his love lift and expand.\n\nNicole's face turned a bright shade of pink and she sat there speechless for probably the first time in her life. Ace could see comprehension fully dawning on her face as she added up the sounds she must have heard earlier and the still flushed and happy faces of the men in front of her.\n\n\"Nicole?\" Paul said. \"You okay there?\"\n\nNicole shook her head as if to untangle her thoughts. Then she straightened and smiled.\n\n\"Well, this sorta explains things, huh?\"\n\nAce blushed, wanting to apologize for how they acted in the office. And for the noises she most likely heard.\n\n\"I guess I don't have to wear that pushup bra to the office anymore, right?\" she continued. \"I feel kind of silly now.\"\n\nPaul put a reassuring hand on her shoulder. \"I should have told you a long time ago. But I was being a coward. I hope you can forgive me.\"\n\nNicole smiled, a real one this time. \"No sweat, Dr. Z. I don't blame you at all. He's super cute.\"\n\nShe gathered up her purse and stood. \"Well, I think I'll take off.\"\n\nAce could tell she was eager to leave, but he didn't think it was because she was uncomfortable. She looked like she was bursting with excitement. This must be a gossip hound's wet dream.\n\n\"Thanks, Nicole,\" Paul said. \"For everything.\"\n\nNicole's smile widened and she scurried out the door.\n\n\"Those poor single girls,\" Ace said once the outer door closed, \"teased by all those hot gay men.\"\n\n\"She seemed okay with it,\" Paul said with relief.\n\n\"You realize she's going to tell everyone she knows, right?\" Ace said. \"I've known her for a total of five minutes and I can already tell.\"\n\n\"Oh, she will. I know.\"\n\nAce rubbed Paul's arm. \"You worried?\"\n\n\"A little. I've dodged all the big guns so far. We'll see how my patients take the news.\"\n\n\"Oooh, speaking of delivering news, I better call Erik,\" Ace said. \"He'll want a post-op report.\"\n\nPaul reached for his phone. \"That reminds me. Holly will not take kindly to any delay in getting this information. Plus, she'll love a break from my mom.\"\n\n\"Your mom? Are the parents in town?\"\n\nPaul smiled. \"Oh, there is so much to catch you up on. I hope you don't have any plans tonight.\"\n\n\"You kidding? I have a looooong list of things I absolutely need to do tonight,\" Ace teased. \"And they all involve nudity.\"\n\nPaul grinned and pulled him into a deep, wet kiss, right there in the strip mall parking lot on a Tuesday afternoon in that smallish Kansas town. Paul didn't even hesitate.\n\nAce wondered what he could ever do for Paul that was as brave and as trusting as this huge change Paul has made for him. He pulled Paul's face back to look him in the eye.\n\n\"I am so lucky, you know that?\"\n\nPaul's smile crinkled all over his beautiful face.\n\n\"Just wait until we get naked again,\" he smirked. \"I'll teach you a new meaning of lucky.\"\n\n*****\n\nFrom his silver sports car parked near the chiropractor's office, Tanner witnessed the passionate kiss his two new obsessions shared.\n\nIt left him equally annoyed and hard.\n\nHe'd been waiting for Paul to leave his office to see if he could catch him in a weak moment and talk him into a quick suck and fuck. Hell, it worked once with Ace; Paul couldn't be that much different. Blowjobs were like Tanner's calling card -- a friendly sample of his skills. It was really only polite to accept once offered.\n\nInstead, it appeared that the two secret lovebirds had made up. Both their faces had the blissed-out look of the freshly fucked.\n\nThat sucked. And not in a good way.\n\nBut that didn't mean he'd lost. He didn't lose. Didn't believe in it.\n\nLosing was giving up. And he didn't like to give up when he had a chance of winning.\n\nTanner still had a couple of options left. Doc Z didn't look all that thrilled at the idea of being out and proud -- and Tanner believed all fags should be upfront about it. When he met a guy who was in the closet, he wanted to forcibly drag him out of it.\n\nTanner would just have to keep his eyes open. He'd find a way to squeeze between Ace and Paul.\n\nChapter 16\n\nHe had no idea where to put his hands.\n\nOf all the things that were on Paul's mind as they walked along Eighth Street toward Drayton's, the thing that bugged him most was that he couldn't decide what to do with his hands.\n\nThis was a date. A date-date, as Ace called it that day at the ballpark. Paul was on a date. With a man. In public. In his hometown. On a Friday night. He even made reservations, like you do for a date-date.\n\nHe had struggled over what to wear, what to do, where to go -- but his hands were tripping him up.\n\nOh, he knew where he wanted to put his hands. Answer: anywhere on Ace. But that old bogeyman of fear tickled at his periphery and made him doubt himself.\n\nPaul thought he was getting past that old kneejerk reaction. He and Ace had spent three glorious nights in Ace's house, hungry for each other's touch as if it had been a year they were apart, not just a week. And it was perfect, it was home, it was exactly what he wanted.\n\nBut it wasn't what they needed. What his boyfriend needed.\n\nPaul had thought all the bandages were good and ripped off, but he had forgotten the big, unwieldy bandage called \"everyone else.\" Everyone as in his patients, his neighbors, random people on the street.\n\nThose random eyes he felt boring a hole in him Eighth Street.\n\nThis should be basic stuff, stuff that other guys learned to do in their teens and twenties. How to walk next to a date. When to casually hold hands. But he didn't even know how close to walk next to Ace. Should their shoulders touch? Would it be weird for them to hold hands? Would people stare? And judge?\n\nAnd there was that bogeyman again. His brain was warring with his heart, and the battle was sending conflicting messages to the nerves in his hands, which twitched at his sides.\n\nAce noticed. He playfully bumped against Paul's side.\n\n\"Relax,\" Ace said, \"your tenseness is contagious.\"\n\n\"Relax, he says,\" Paul muttered under his breath. \"Do you know how long it's been since I've been on a date? A date-date? I'm pretty sure there was a corsage involved.\"\n\n\"Well, I feel cheated,\" Ace pouted. \"I didn't get a corsage. And I've already put out and everything.\"\n\nThis time Paul bumped him. \"I'm trying to do this right, you know? I'm just so completely without practice.\"\n\nAce smiled softly. \"You don't have to hold my hand, you know.\"\n\nPaul blinked. \"How did you --\"\n\n\"You're sending a kind of sign language there,\" he said, pointing to Paul's still-twitching hands.\n\nPaul stuffed his hands into his pockets to try to calm the tremors.\n\n\"Stop worrying that you're doing this wrong,\" Ace continued. \"You're doing it. Period. You're incredible.\"\n\nPaul stopped them in the middle of the sidewalk and stared into Ace's smiling, deep eyes. That bogeyman was being disarmed, blade by blade.\n\n\"I want to kiss you right now.\"\n\nAce grinned. \"You do like to skip ahead, don't you?\"\n\n\"The theme of our relationship,\" Paul grinned.\n\nWhich was an understatement. I fucked him before I knew his full name, and suddenly holding his hand is the big scary step.\n\n\"Well, you have my permission to kiss me or hold my hand or anything you're comfortable with,\" Ace said.\n\nPaul nodded, determined. He pulled his hands from his pockets and took Ace's right hand in his left as they continued toward the restaurant.\n\nInstantly, Paul was aware of two things: one, how perfectly right Ace's hand felt in his. How warm and living and anchoring it was. After all the dirty things they had done to each other with their hands (among other things), this simple touch was knocking his senses out.\n\nAnd two: he could feel a thousand eyes pounce on him. Which was an exaggeration, of course. But he did catch some stares. Mostly, they were from smiling people, college girls who ran their eyes over the pair of them and sighed in appreciation. Old married couples who grinned at a display of love. Another pair of men who smiled at them as comrades.\n\nBut a few eyes came with frowns, and those, of course, only added to Paul's nerves.\n\nAce caught those same eyes. \"Just ignore them,\" he murmured. \"What did Eleanor Roosevelt say? No one can hurt you without your permission?\"\n\n\"Something like that,\" Paul said. He stopped looking out for any more judging eyes and concentrated instead on the pleasant if foreign feeling of walking hand in hand with his man.\n\nThey walked past Drayton's outdoor seating area, and Paul caught the eager look in Ace's eyes. He wanted to sit outside tonight, Paul could tell.\n\nYet another test to pass.\n\nDrayton's was a block off the busy Mass Street traffic, and on a warm midsummer Friday night, it was filled with people eager to relax and imbibe -- married couples who had wrangled babysitters for one evening's escape, groups of recent college grads flush with proper paychecks, professionals still in business suits letting deep glasses of wine loosen their neckties. This was not a place to bring kids, but it definitely was a place to bring a date.\n\nPaul gave his name to the hostess, then paused. \"Is there any way we could get a table on the outside patio?\" He cut his eyes to Ace in time to catch a delighted smile.\n\n\"It might be a few minutes longer,\" the hostess warned.\n\n\"We'll wait,\" he decided.\n\nThey each picked up a glass of wine from the bar and settled into a plush loveseat in an open, artful -- and rapidly filling - waiting area. Paul bravely draped an arm along the back of the seat and encouraged Ace to settle in closer to him.\n\n\"How did you know I wanted to sit outside?\" Ace smiled.\n\n\"Your face is easy to read,\" Paul said. \"It's one of the best things about you.\"\n\n\"That I'm easy?\"\n\n\"I meant your face,\" Paul said, serious. \"Your lack of artifice. How deep your eyes are.\"\n\nThe eyes in question melted a little further.\n\n\"And, also, you're easy.\"\n\nAce jabbed him in the side and grinned.\n\nAs they waited for a table, Paul spotted a handful of familiar faces, mostly past or current patients. The sight of Dr. McDonnell with his arm around a handsome man caused a few double takes.\n\nPaul thought about ignoring them all -- good and bad -- and focusing on his date, but he wanted everyone to know that he was comfortable with himself. He wanted them to see it in his eyes.\n\nSo he tugged Ace a little closer and kept his eyes roaming about the waiting area.\n\n\"You know, you've got to let everybody else take baby steps with you, too,\" Ace said softly.\n\nPaul frowned in confusion.\n\n\"It took you most of the summer and thirty-six years to get to this point,\" Ace said. \"Your patients might need some time, too.\"\n\n\"And if they don't want the time?\" Paul pulled his arm away and shifted to face Ace on the loveseat. \"If they already know what they think? If they immediately find a new chiropractor?\"\n\n\"Then you didn't want them as patients in the first place,\" Ace said firmly. \"I know you can't always pick your clients, but wouldn't you rather not have to give adjustments to known homophobes?\"\n\n\"True.\" It sounded so simple when Ace framed it that way, but Paul knew that fewer patients could mean trouble for his practice. \"And if a majority of my clientele turns out to be homophobic?\"\n\nAce shook his head with a quirked grin. \"I think you underestimate the population of Lawrence, Kansas. This isn't the back woods, you know. It's a college town. A pretty cool town even without the university influence, actually.\"\n\nBefore Paul could counter with another worst-case fear, the hostess called his name to show them to a table.\n\nIt was an ideal night for sitting outside for dinner, the heat of the day having melted away with the sunset. In another month, when August had the land fully in its grasp, even the evenings wouldn't be safe for such casual dining. Everyone would huddle in air-conditioned buildings for safety, leaving nature to those that could handle the heat. In other words: cicadas.\n\nBut tonight they could share the outdoors with bugs of lower volume and let the wind ruffle their hair and tease them with the aromas of other diners' meals.\n\nPaul wanted to capture this moment and return to it every day. This is what life could feel like when he wasn't afraid. He could eat a meal with the man he loved on a pleasant evening and not let fear ruin it. He didn't have to feel -- or be -- alone.\n\n\"Mmmm, perfect,\" Ace hummed as he settled into his seat and looked around. His face glowed with happiness, and Paul was surprised to find that his man could look even more beautiful than before.\n\nPaul realized he wasn't the only one experiencing new territory tonight. As much as this date was an exercise in pushing Paul's boundaries, it was also a long-overdue moment for Ace, who had to suffer through years of hovering near closets.\n\n\"Last time I was here with my friends Olive and Vince, I had some kind of decadent duck thing, and I nearly died of happiness. I made some embarrassingly loud happy noises,\" Ace said, scanning the menu. \"I hear they change the menu a lot, but I really hope they kept that one.\"\n\n\"You should definitely have something that causes happy noises,\" Paul smiled.\n\nLuckily for Ace, the decadent duck was on the menu, so they both ordered it and made almost-orgasmic sounds when the first taste hit their tongues.\n\nAs they ate, they talked about everything and nothing. Paul gave updates on Steven and Holly's wedding plans, and Ace told stories of his travels and the places he'd lived. It was easy to think they were the only ones in the world.\n\nUntil the world interrupted.\n\nAn older couple was slowly progressing toward the exit when the gray-haired woman caught sight of Paul through the restaurant's large windows facing the outdoor patio and lit up in a smile. Valerie Martinson, one of Paul's first patients in Lawrence, changed course and headed for their table, with her husband in tow.\n\n\"It's my favorite chiropractor, out of the office and out on the town,\" she announced. \"What's the occasion?\"\n\n\"Mrs. Martinson, how's your back tonight?\" Paul said, taking her hand in a gentle handshake.\n\n\"Oh, still going strong, my dear,\" she said. She turned to Ace and said, \"I always feel years younger after I see Dr. McDonnell, you know. My George gets so jealous.\" She leaned down closer to Ace. \"And if I were a few years younger, he'd have good reason to be.\"\n\nAce grinned up at her and whispered, \"Me too.\"\n\nPaul looked over to the George in question, whose face was twisted in a half smile, half grimace. George must have added up Paul plus Ace and became supremely uncomfortable with the result.\n\nValerie had done the same equation, but hadn't quite reached the sum. \"So, who's this young man here?\"\n\nPaul cleared his suddenly tight throat. \"This is my boyfriend, Ace Hoffman.\"\n\nAce gently shook Valerie's hand and offered to shake George's, but the older man stepped back like he suddenly smelled something foul.\n\n\"Oh!\" Valerie chirped. \"Why, I had no idea! This is --\" She stopped and looked at her husband. \"Well, what a surprise! Isn't it a surprise, George?\"\n\nGeorge grunted his agreement. \"We need to go, Valerie.\"\n\n\"Right. Mustn't interrupt their date.\" She squeezed Paul's hand briefly. \"It is so good to see you out.\"\n\nAce coughed on his drink. She didn't mean it that way, of course.\n\nPaul swallowed roughly. \"So, will I still see you for your appointment next month?\" he asked softly.\n\n\"Valerie!\" George called sharply from a few steps away.\n\nValerie leaned in to Paul. \"Absolutely,\" she whispered.\n\nPaul smiled in gratitude, then caught George's persistent scowl over Valerie's shoulder.\n\nAce nudged his foot under the table, which brought Paul's attention back to his date.\n\n\"Well,\" Paul sighed shakily, \"that was --\"\n\n\"Not half bad,\" Ace finished.\n\n\"Which half were you watching?\"\n\n\"The half that wasn't a grumpy old man.\"\n\n\"I hate to break it to you, but I treat a lot of grumpy old men.\"\n\n\"Well, while you were focused on George's sour puss, I'm seeing all kinds of smiles being sent our way,\" Ace said. \"Actually, a couple of them worry me. I'm going to have to fight some guys off, I think.\"",
        "Paul chuckled and briefly envisioned Ace battling wannabe suitors. Shirtless. Sweaty. Fierce. He shifted to ease a sudden tightening of his pants.\n\n\"Incoming, two o'clock,\" Ace murmured.\n\nPaul blinked. \"Two o'clock?\"\n\nPaul turned around to see Mrs. Donaldson, one of his favorite patients, approaching their table with her eyes lit up in delight. Paul skipped over the question phase and immediately introduced Ace as his boyfriend.\n\n\"Oh I wish I had known about this!\" Mrs. Donaldson cried. \"I could have introduced you to my nephew. He's the sweetest boy, and you're a doctor and everything!\"\n\n\"Well, for my part, I'm glad you didn't,\" Ace said with a smile.\n\n\"At any rate, you boys make a handsome couple.\" She squeezed Paul's upper arm. \"Congratulations, sweetie.\"\n\nShe walked away muttering, \"A doctor, too! My poor Shane could have had a doctor.\"\n\n\"You know what I miss from the closet?\" Paul said, once Mrs. Donaldson was out of earshot.\n\n\"Anonymous, terrified sex?\"\n\nPaul gently kicked him under the table. \"Fewer matchmakers. They are absolutely legion.\"\n\n\"Well, consider your match made,\" Ace said. \"You're safe from the yentas.\"\n\n\"Honestly, I figured it was the older folks who would have the biggest problem,\" Paul said.\n\n\"I think it's actually the more middle-aged who are likely to object. Grandparents are a lot more live-and-let-live. They know there's more to life than bitching and moaning. Well, about things other than their hip pain, I suppose.\"\n\n\"Maybe for our next date, we can go somewhere with fewer grandparents,\" Paul muttered. \"They're kind of throwing me off my game.\"\n\n\"Who says you've got game, doc?\"\n\nAce and Paul spun their heads to the fence and found Tanner standing on the other side of the fence surrounding the patio.\n\nOf course. Of course he's here. Every fucked-up cake needs its icing.\n\nTanner easily hopped the low fence and sauntered over to their table.\n\n\"So, Ace, you finally pushed the bone doc out of the closet,\" Tanner said, making no attempt to lower his voice. \"Can't say that I blame you,\" he continued with a leer in Paul's direction.\n\nAce sighed. \"Tanner, please leave. We are not interested in anything you have to offer. I'm sure there are plenty of guys who would love to hook up with you. Go find them.\"\n\nTanner slid into a chair between the two men. \"But why bother with them when I've got two hot guys right here?\" He leaned in confidentially. \"I'll let you guys play finger cuffs with me. C'mon, how hot does that sound? We're all fags here. Let's really act like it.\"\n\nPaul gritted his teeth against a growing urge to toss Tanner bodily over the fence.\n\n\"Look, kid,\" Ace said, weary with having to deal with this. \"You're starting to embarrass yourself. We don't need to add anybody to our relationship to make it hot.\"\n\n\"You mean this just-barely-out-of-the-closet relationship?\" Tanner scoffed. \"Please. You'll get bored -- or he will -- and you'll beg me to jump in your bed. Same old story.\"\n\nSomething in Paul snapped. He'd heard exactly enough from this asshole. He towered over Tanner in a menacing pose. \"You think I need to keep us a secret?\" he growled. \"You think I'm not satisfied here?\"\n\nPaul stood abruptly and climbed onto his chair.\n\n\"Excuse me, everyone, can I have your attention?\" he called out to the other diners on the patio. A few of the customers inside swiveled his way as well. \"I doubt it matters to anyone, but I want to make an official announcement. My name is Dr. Paul McDonnell. I am gay, and I am in love with his man.\" He pointed to Ace, whose mouth hung open in shock. \"He's the one who's blushing right over there. Isn't he beautiful?\" He paused, trying to think of anything else he needed to say. \"This concludes my announcement.\"\n\nIn the total silence that followed, Paul hopped down from his chair, rounded the table to Ace and kissed him deeply.\n\nPeople on the patio burst into applause. Paul threw down a handful of bills on the table to cover their meal and a generous tip and led his man out of the restaurant. Tanner stayed slumped in his chair, annoyed and defeated.\n\n*****\n\nAce held tight to Paul's trembling hand as they left the restaurant. Talk about jumping off the deep end. He couldn't believe Paul did that just now.\n\n\"What happened to baby steps?\"\n\nPaul shrugged. \"I guess I grew up.\"\n\n\"Well, if that shows up on YouTube, there will be such punishment.\"\n\nPaul squeezed his hand, calming a little. \"Promise?\" he rumbled low.\n\nAce pulled him around the corner to the back side of the restaurant. \"I could give you a preview of your punishment now,\" he murmured. \"Wanna go home?\"\n\nPaul breathed deeply. \"Not yet. Let's walk for a bit.\"\n\nAce shook his head. \"I can't believe you're delaying sex. You of all people. This feels backward.\"\n\n\"It's part of my plan for tonight. I'm trying immersion therapy.\"\n\nAce looked at him questioningly.\n\n\"Let's take a walk on Mass.\" Paul took his hand again. \"I want to get so used to this that it never gives me the shakes again.\"\n\nAce squeezed his hand tightly in response, and the two of them joined the summer throngs.\n\nWhile not as densely crowded as on an early autumn evening after the university was back in session, Massachusetts Street was bustling with a relaxed and steady flow of people -- college students still in town over the summer, recent grads who weren't ready to fly away just yet, long-time locals who couldn't resist the melting coolness of a summer evening.\n\nThey walked unhurriedly, pausing to look in at any shop that caught their eye, rarely breaking contact with each other.\n\nAce couldn't remember the last time he felt this comfortable in his own life.\n\n\"Hey, isn't that your friend?\"\n\nAce followed Paul's gesture and saw Erik sitting outside of an ice cream parlor on Ninth. He was at a small table on a tiny patio, slowly picking at his sundae and watching the crowds stream by.\n\nAce bit his bottom lip, thinking. \"Do you mind if we- I mean, I know we're on a date and all, but-\"\n\n\"We should say hi,\" Paul said.\n\n\"I really really want you two to be friends. Good friends.\"\n\n\"I want that too.\"\n\nAce kissed him quickly and bounded over to Erik's table. He and Paul soon settled in with their desserts on either side of Erik.\n\n\"It's good to see that you're not at work, Mr. Overachiever,\" Ace said.\n\n\"It was just too pretty outside to waste the night at home alone,\" Erik said, somewhat wistfully.\n\nThat tempered some of Ace's overflowing happiness. Now that Ace no longer needed a bitching buddy on Sundays, his best friend probably felt even more left out of life.\n\nPaul looked slyly at Ace. \"Think we should?\"\n\nAce's eyes widened. He didn't mean that, right? Did Tanner make him think-\n\n\"Send him to Holly,\" Paul clarified.\n\nAce relaxed. \"Oh, that's totally my plan, yes,\" he said. \"Not that any of us will have much choice.\" He turned to Erik. \"Once she meets you, you will unleash the matchmaker.\"\n\nErik looked warily at him. \"Sounds ominous.\"\n\n\"More like unstoppable,\" Paul said. \"Now that she's got us sorted out, she'll be on the lookout for a new project. Once the wedding is over, of course.\"\n\nThe wedding. Ace grinned to himself and took a happy bite of his ice cream. Looks like he was able to find Paul a date to Steven's wedding after all.\n\nChapter 17\n\nIn the darkness of the hotel ballroom, trailed by a twinkling red spotlight, the couple swayed in each other's arms and shared a private joke, savoring this moment together that was so long in coming. Appropriate for these two, the song playing throughout the room was not something common or shmoopy. Instead, it was yearning and earnest, and one that the great-aunts wouldn't recognize.\n\nPaul took another long pull from his beer as he watched his little brother and his new wife continue their first dance in the ballroom of this old hotel on the Plaza.\n\nMeanwhile, his date was sitting across the room with Helen McDonnell, who had captured Ace's ear and wasn't letting go. So Paul found himself with nothing to do but drink his beer and watch the dancers.\n\nBut honestly, apart from giving the toast before the dancing began, Paul's job as best man didn't entail much activity during the reception anyway. Even during the ceremony itself, he had only a few assignments: Produce the rings when the minister said the word \"rings.\" Don't trip. And don't make Holly cry -- or get the church giggles.\n\nWhich meant he tried to refrain from making any eye contact with Holly at all. Because they learned all too well during the rehearsal that it didn't take much to set her off -- one way or the other.\n\nAnd Paul didn't need to aggravate his father today with any hint of tomfoolery. It felt like he was walking on eggshells around that man anyway, considering who Paul's date was tonight.\n\nA date who looked really hot in that suit.\n\nThey were definitely going to need to find a back room before the end of the night.\n\nPaul ended up tuning out most of the ceremony. He didn't need to hear the words to know what this day meant for two of the people he loved most in the world. He was so damn proud of his brother and so grateful for the very existence of Holly in the world, but if he thought about it too much, he'd be the one fighting tears.\n\nHe had always told himself that marriage didn't mean that much. It was just a ritual, a big show, one of those customs more honored in the breach than the observance and so forth. Of course, that was before he could have ever dreamed that he might want to stand where Steven did. That was before one beautiful blond man turned his life upside down.\n\nAs he stood next to Steven on that altar, Paul suddenly understood why anyone would want to go through a wedding -- would want the fuss and the planning and the tuxes. Because he found that he wanted to stand up in front of everyone he loved -- hell, in front of everyone in town -- and announce that he had found his other, his one, his missing piece. He wanted the ritual and the official seal, even. He wanted it to be real for everybody, not just real in his head.\n\nPaul could hardly believe those thoughts ever flirted with his mind. Where was the firmly solo, firmly detached guy from earlier this year?\n\nAt that moment in the ceremony, as if he could read Paul's mind, Ace caught Paul's eye from the audience and winked.\n\nOh yeah. That guy from before? Long gone.\n\nPaul was getting ahead of himself. Again. Always. For a few months, he and Ace had been basking in the newness and discovery of a real relationship. And Ace had been there with reassurances when he'd lost some long-time clients in the wake of his coming out. It had helped that his practice was fielding calls from a few new patients. Ace grumbled that far too many of them were hot guys who didn't appear to be in much pain.\n\nNot that Paul was at all tempted. He knew exactly how good his life was, even without skipping ahead. Marriage was definitely a ways down the road -- and a couple of states away.\n\nBut for the first time in his life, he could see that road, and there was something to aim for. And there was someone to travel with along that road.\n\nAs the song was nearing its end, Paul felt warm hands snake around his waist. He sighed happily. He didn't need to turn around to know who was trying to sneak up on him.\n\nAce discreetly rubbed Paul's flank. \"I love this song,\" he murmured into Paul's ear.\n\n\"This song is all Holly,\" Paul said. \"If it were up to Steven, they'd be dancing to AC/DC right now.\"\n\nAce sighed mockingly. \"Such a romantic.\"\n\n\"And accurate. I'm sure she does shake him all night long.\" Paul smiled and leaned back into Ace, bringing them as close together as he dared.\n\nAcross the dance floor, he caught his dad sending them a frown. Paul tamped down his frustration; the last thing the wedding reception needed was a family spat.\n\n\"I think we're venturing into PDA territory,\" Paul told Ace with a sigh. His dad was starting to come to terms with the bomb Paul dropped on him a few months ago, but, like his oldest son, it took baby steps to change. And physical evidence of homosexuality still unnerved Jack McDonnell.\n\n\"So, you're saying I shouldn't put my hands down your pants right now,\" Ace said, slowly sliding his hand down toward Paul's butt.\n\nPaul nudged him and stepped away from the danger zone. \"Saw you talking to my mom earlier,\" he said. \"Looked suspiciously like conspiring.\"\n\n\"Your mom is a doll. I've never seen a woman hungrier for grandchildren. She was telling me about friends of hers whose son and daughter-in-law just adopted twins.\"\n\nPaul turned to him with a start. Twins?\n\n\"It sounded like she was giving me a primer,\" Ace continued. \"I thought I should be taking notes.\"\n\nPaul struggled to keep his voice neutral. \"Oh? Is that, um, something you're wanting? Soon?\" He cleared his throat. \"Twins, I mean?\"\n\nAce laughed loud at Paul's failure to keep the alarm from his face. \"Relax, big guy. Your mom is a lot like you, you know. Skipping way ahead.\"\n\nPaul let out a breath he'd been holding. \"For the record, I'm not anti-kid or anything.\"\n\nThat earned him a big smile. \"Same here,\" Ace said.\n\nThe dancing had switched to mother/son and father/daughter, serenaded by Nat King Cole. Paul tracked his father's movement around the perimeter of the dance floor as Jack made his way over to where he and Ace were standing. He straightened himself unconsciously and stood taller.\n\nAce smiled at him with warm eyes. \"Now, be a good boy,\" he murmured.\n\nPaul rolled his eyes at Ace. His dad had met Ace last night for the first time at the rehearsal dinner, and it had gone about as well as he could have expected. Jack had been polite to Paul's boyfriend, but a little distant, like he was trying to remove himself from the temptation to say something about their way of life.\n\nAce kept counseling Paul on the need for patience, particularly with fathers. But, naturally, Paul wanted the big happy family right away. And he was damned if he was going to hide his real self now, not after everything he'd gone through to find it.\n\nPaul's father reached out to shake both their hands as he approached. \"That was a good speech you gave, son,\" he said. \"I was a little worried you'd tell the story about the chainsaw and then I'd have to explain the real story to everyone.\"\n\nPaul laughed. \"I definitely considered it,\" he said. \"But Holly gave me a strict list of acceptable topics.\"\n\n\"Such a smart girl,\" Ace smiled.\n\n\"I suppose this is the last one of these things I'll have to get all monkeyed up for,\" Jack said, taking a long pull on his beer. \"I have to say, I won't miss the suit.\"\n\n\"I don't know about that, dad,\" Paul said. \"It's a whole new world out there. Almost half of the country is treating homosexuals like real people and everything.\"\n\n\"I didn't say you weren't --\" Jack broke off and huffed.\n\nAce nudged Paul with a small frown, and Paul read the unspoken message: Don't stir things with dad tonight. It was just so easy to revert to being a smartass teenager around his dad. It didn't help that McDonnell Senior was looking at him with that same hint of disapproval that had chased him through his adolescence.\n\nJack cleared his throat and decided to change the subject. \"You boys are lucky, you know? You don't have to dance at all those slow songs like the rest of us.\"\n\n\"What are you saying, dad?\" Paul snapped, unable to stop himself. \"The fags aren't allowed to dance?\"\n\nJack bristled visibly at Paul's choice of words and geared up to answer back.\n\n\"Actually, my dance card is already surprisingly full,\" Ace interjected brightly, trying to lighten the tension. \"Between your wife and your new daughter-in-law, I doubt I'll lack for a partner on the floor.\"\n\nAce turned to smile at Paul, and Paul read a more insistent unspoken message: Don't pick a fight, dumbass.\n\n\"Besides,\" Ace continued, \"this is Holly's night. We don't want to steal the spotlight from the bride.\"\n\nWhich we would, Paul thought. The sight of two handsome men dancing close among all the cousins and co-workers would be all that anyone talked about when they mentioned Steven's wedding. Although he doubted Holly would mind the gossip, particularly as she considered herself responsible for their successful relationship in the first place.\n\nJack seemed to warm to Ace a little after that. Like most people, he approved of those who agreed with him.\n\nThe father/daughter and mother/son dances had ended, and the tempo of the music picked up immediately. The youngest members of the dance party -- the flower girls and ring bearer and all the cousins' kids -- instantly took to the floor. Adults were harder to convince, however, so Holly made it her mission to recruit dancers.\n\nShe started with Ace.\n\n\"Come on!\" she shouted, grabbing his hand and pulling him onto the floor. \"Time for positive peer pressure!\"\n\nPaul watched as Ace joined all the bridal party out there -- the groomsmen were clinging closer to the bar area.\n\n\"She sure does like Ace,\" Jack remarked.\n\n\"Most people do, once they've met him,\" Paul said. He finished his glass and turned to his dad. \"I hope you will someday, too.\"\n\nJack sighed loudly. \"I don't dislike him, you know. It just seems like I keep running into landmines around you two these days.\"\n\n\"Those aren't his landmines, though. Those are all mine. I planted them in high school.\"\n\nJack gave a small grin. \"I suppose so.\"\n\nPaul let himself watch his partner tear up the dance floor for a long moment, as gratitude washed over him. His dad was trying, he knew that.\n\n\"So, how are you doing with all of this?\" Paul kept the question vague, but both men knew what he was asking.\n\n\"Getting there, I guess,\" he grunted. \"Your mother can't stop talking about it. I think her bridge club is jealous of her cosmopolitan gay son.\"\n\nPaul barked a laugh. It figured that his mother would embrace this the way she did. Hell, anything for better gossip.\n\n\"You know, Mom was talking about having us for a visit,\" Paul said, tentative. \"Both of us.\" He looked at his dad. \"Would you be OK with that?\"\n\nPaul could see the discomfort bloom across Jack's face, and he rolled his eyes. \"We wouldn't do it in my old bedroom or anything.\"\n\n\"Son! That's not --\" Jack cleared his throat and took a deep breath. \"Of course we'd love to have you visit. Both of you.\"\n\nSo that's what a baby step looked like from the other side. Halting, precarious, and ultimately successful.\n\nAce must have had gallons of patience to deal with my stupid steps.\n\n\"Besides,\" Jack continued, \"the guys in my golf foursome have been complaining about back pain.\" He looked sideways at his son. \"Maybe you could, you know,\" he trailed off.\n\nPaul smiled and rolled his eyes. No such thing as a free lunch.\n\n\"You know, speaking of pimping us out, if you ask nicely, Ace might rearrange the house.\"\n\nJack grimaced. \"I like things the way they are.\"\n\n\"That's what I thought, too,\" Paul said. \"Before I met him. You'll be surprised how much better he can make things.\"\n\nThe music switched to a slow song, and Helen arrived to take Ace's arm. Holly darted over to demand a dance from Paul.\n\nPaul happily wrapped his arms around his new sister-in-law, who was flushed and glowing.\n\n\"This is nice,\" she sighed. \"Wedding, check. Paul and Ace, check. Sold Steven's house, check. I can relax.\"\n\n\"When do you guys sign all the house papers?\"\n\n\"After the honeymoon.\"\n\n\"Speaking of that, has my mom asked about your ovulatory cycle yet?\"\n\nHolly blanched and missed her footing. \"She'd do that?\"\n\nPaul laughed at how horrified she sounded. \"Have you not met Helen McDonnell? She wants grandchildren, stat.\"\n\nHolly huffed. \"Well, you and Ace better get going on that, then.\"",
        "\"Oh, mom's already planted the seed of thought, trust me.\"\n\n\"Good.\" Holly snuggled against Paul's chest. \"I want our kids to grow up together, you know. Be in each other's pockets. Best friends. True siblings.\"\n\n\"What about the McDonnell history with siblings and chainsaws?\"\n\n\"I'll hide the power tools.\"\n\n\"Thank God for you, Holly McDonnell.\" He pulled back and tipped her head up. \"I mean that. I thank God for you.\"\n\nHolly's eyes swum with tears until she shook her head and pushed Paul back. \"Now cut that out,\" she ordered. \"You had strict instructions.\"\n\n\"Job's done, toots. You're all hitched now. I can make you laugh or cry all I want.\"\n\n\"Well, that's enough of that.\" She carefully wiped her eyes. \"My mascara will never stand up to this sort of treatment. Go find your man. Stat.\"\n\nPaul grinned and gave her a smacking kiss on the cheek.\n\nHe wound his way around the other dancers until he reached Ace and his mom.\n\n\"I'm stealing him away from you, I'm afraid,\" he told Helen. \"You should get Dad out here.\"\n\n\"Oh, your father hates dancing,\" Helen said. \"I could barely get him on the floor at our own wedding.\"\n\n\"Take Holly with you,\" Ace suggested. \"She can make people do anything she wants. Besides, he's halfway drunk. Whiskey is a strong motivator at weddings.\"\n\nAs Helen followed that advice, Ace took Paul's hand. \"I have it on good authority that the DJ is going to play some AC/DC soon. Wanna dance?\"\n\n\"No.\"\n\n*****\n\nAce blinked at Paul. \"Just no?\"\n\nPaul gently pulled Ace off the dance floor and toward the exit.\n\n\"We're not leaving, are we?\" Ace frowned.\n\n\"Not exactly. I'm trying to avoid giving my dad an aneurysm here.\"\n\nWalking as nonchalantly as possible, the two men slowly walked along the periphery of the tables until they reached the coat closet. Paul took one more look around, then tugged Ace into the dark little room.\n\nHe wasted no time and slanted his mouth over Ace's. Ace came up for air after a long, drugging kiss and laughed breathlessly. \"Seriously, we've got to stop meeting like this. You must have a fetish for small, dark places.\"\n\n\"They bring back very happy memories for me. Like the first time I met you.\"\n\nTheir tongues danced happily, greedily against each other, a delicious pre-show for the coming event.\n\n\"Ohhh, man,\" Ace moaned. \"The irony is thick in the air.\"\n\nPaul dropped his head to Ace's neck and sucked on a pulse point. \"Mmmm?\" he hummed.\n\nAce pulled back to look at him. \"This is a closet. We are back in a closet.\"\n\nPaul looked around him. \"I prefer to think of it as a trip down memory lane.\"\n\nAce smiled. \"You do like to fuck in dark, dangerous places.\"\n\nPaul kissed him deeply. \"Correction. I like to fuck you. Anywhere I can.\"\n\n\"I second that,\" Ace purred.\n\nHe lost himself in the familiar sensation of Paul's knowing touch. Paul kept up his exploration of Ace's body, bringing Ace's nerve endings to a rolling boil.\n\n\"Mmmm,\" Ace hummed. \"Holly was right about you.\"\n\nPaul grunted questioningly. \"She said I was too sexy for my pants? I get that a lot.\"\n\nAce dropped his hands to the pants in question. \"No,\" he said, distracted. \"Well, yes. And wow you're old, Mr. Right Said Fred.\"\n\nPaul pinched Ace's butt in response. \"What was she right about this time?\" He pulled back and used the pause to undo his belt.\n\nAce's thought process blinked off momentarily, knowing -- relishing -- what was going to happen soon. He shook his head to clear it. \"Good bones,\" he murmured.\n\nAnd, of course, she was spot on, Ace thought. Solid foundation on which to build a future. Strong, well made, in need of a loving hand.\n\nNot that Ace could have seen all this on that hot night at Sparks just a few months ago. Those few months felt like a different life right now.\n\nWhat he felt now for Paul was so similar to that first flash of attraction -- but deeper, richer, more defined.\n\nYep. Definitely good bones. In every sense of the word. But Paul was now the after picture, post renovation, a place to call home. And all it took was tearing down one closet.\n\n\"Good bones, huh?\" Paul rumbled, a sharp glint lighting his grey-blue eyes. \"Any bones in particular?\"\n\n\"I have my favorites, now that you mention it.\"\n\nPaul growled softly and frog marched Ace deeper into the coat-filled closet until he bumped them up to the wall. \"I just can't wait to get you home. I need you now.\"\n\nAce smirked. \"Like you've ever been able to wait.\" He turned around and braced himself against the back wall. \"Just like old times?\"\n\nPaul spun Ace back around and shook his head. \"I was thinking more like new times.\"\n\nHe dropped to his knees in front of Ace and buried his nose against Ace's groin.\n\n\"Mmm-hmm,\" Paul purred. \"You smell good. Smell like --\" he paused, \"like part of me.\"\n\n\"Well, you do like to mark me with your scent, you big cat.\"\n\nPaul pulled back. \"Does that make me a narcissist? That I'm attracted to the me in you?\"\n\n\"No. It makes you mine.\"\n\nPaul's eyes darkened with a deepening lust and he squeezed Ace's cock through his dress slacks.\n\n\"I want some you in me,\" Paul growled. He made quick work of Ace's zipper. \"And not just like this. I want it all. All of you.\" Paul paused to let that sink in.\n\nAce's brows furrowed. \"Are you saying what I think --\" He cut himself off. \"I thought you didn't ever --\"\n\n\"Not here, obviously,\" Paul said, \"but, yeah. I'm thinking yeah. I'm thinking I want to.\"\n\nAce's eyes glinted in the low light. \"You amaze me.\"\n\n\"Oh, just wait,\" Paul said, reaching into Ace's briefs to pull out a perfectly hard cock. \"I've been learning you, you know. Learning from you. Now let Dr. Z take care of you.\"\n\n\"Always,\" Ace groaned.\n\nPaul grinned and bent to his work. And no matter how many times they had reached for each other, it always felt like coming home.\n\nEnd."
    ],
    "authorname": "CC_Ryder",
    "tags": [
        "gay romance",
        "gay love story",
        "coming out",
        "midwest",
        "gay bar",
        "gay anal",
        "gay oral",
        "romance",
        "thirtysomething",
        "wedding"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/run-and-hide-pt-04"
}