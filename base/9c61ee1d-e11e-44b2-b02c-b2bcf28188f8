{
    "title": "Becoming Dominant Ch. 04",
    "pages": [
        "Author's warning: It turns out this chapter is mostly about lots of indulgent sex. I know I said there would be a plot someday... but for now, we're still in the \"Wow all this awesome just fell in my lap\" phase. Hope you enjoy.\n\nTori returned to the suite immediately after checking out at the front desk. Luggage waited in the limo downstairs, the bill had been paid and everything was ready for departure. All that mattered now was the go-ahead from her current and former dominators.\n\nWhen she opened the door, she couldn't help but smile. Monica wasn't fooling about wanting to keep Casey as satisfied as possible up until the very last minute. The voluptuous blonde knelt on a pillow in front of him at the foot of the bed. She was clad in her white sundress, having taken off only her shoes while she went down on him. Casey, as Monica clearly preferred, was completely naked, but his clothes were laid out beside him. He sat on the bed, his hands on Monica's shoulders as she bobbed up and down on his cock. His expression was one of pure surrender.\n\nShe paused to savor the sight of it. Tori knew the sort of feeling Casey enjoyed very well. She'd spent so many long hours in that blissful semi-hypnotic haze of surrender, with her body softly rippling with pleasure. She knew how good it felt to give in, to allow a dominant to do whatever she\u2014and now he\u2014wanted to do to her, and further how good it felt to give back. Once claimed, simply being with an aroused dominant was like a drug. Sex with a dominant was even better.\n\nHer friends and family had wondered, given her studies, her talents and her ambitions, why she chose to work as a personal assistant, even if her job title included the important term \"executive\" and her boss was so well-connected. She couldn't tell them about the sheer physical and emotional pleasures of her role, of course. Nor could she come up with an adequate explanation as to why playing \"assistant\" was so much better than any leadership or management job she would find in the ordinary corporate world. But she was happy, and well-compensated, and in the end that was all that mattered. It looked like she was in for a long stretch of more of the same, too.\n\nTori adored them both. It was not the first time Tori had watched Monica with one of her conquests, but this one clearly went above and beyond anything Tori had witnessed in her short term of service. Tori looked up to Monica, idolized her and felt a sincere sense of love and belonging with her as her valet and confidant...\n\n...but now there was Casey. Everything about him felt right. Everything about Casey and Monica being together felt right. She hated to split them up, but it had to be done.\n\nTori slipped in behind Monica, caressing her back. Not many of Monica's conquests, male or female, were allowed to be so presumptuous. Tori had been special; she was allowed greater initiative when it came to touch and familiarity than any of Monica's other toys\u2014at least, to Tori's knowledge. There were those who didn't explicitly know the depths of Monica's control and thought themselves perfectly normal boyfriends or girlfriends, but among those who knew that they were conquests and toys, Tori had always been offered special privileges. It was something she cherished. She hoped it would not end, even now that she had a new dominant. \"Mistress,\" she whispered, \"we're ready to go whenever you choose.\"\n\nMonica let out a hum of acknowledgement. Casey only moaned with pleasure. Then Monica pulled away from him, working his cock with her hand but freeing her mouth to speak. \"We're almost ready to go, but I need to be able to talk with Casey for a few minutes while we still have the room. Would you mind?\"\n\nTori's eyes lit up. \"Of course, mistress,\" she said with confident joy, and gratefully took up Monica's spot between Casey's legs. Her eyes met with her new dominant's for just a moment before she opened her mouth for him, sliding down on his glorious cock. She gave herself over to the pleasures of having him in her mouth, reveling in the sensation of his head and shaft slowly sliding through her lips, over her tongue and touching the back of her throat. It was hardly any less pleasurable than the feeling of his cock in her pussy. Tori gave in to it, and to him.\n\n\"There are a few things I want to know before we get going,\" Monica told him in a soft, sultry voice as she took a spot beside him. Monica leaned against her lover, breathing into his ear as she spoke. \"Don't cum yet, Casey. Once we hit the airport, you'll have to try to think of anything but sex for a few hours. But before we go, I have questions.\"\n\n\"Uhh?\" Casey murmured. His eyes fluttered open again. Tori had him enthralled with her mouth, with her hands and with her devotion, yet Casey was able to think through the haze of pleasure. \"About what?\"\n\nA naughty grin spread across Monica's lips. \"Pussy, for starters,\" she said, soon trailing kisses along his neck and his chest. \"Would you prefer your women shave? Or do you like a little hair down there?\"\n\n\"Seems kind of... not my call to make,\" Casey shrugged, stroking Tori's neck as she serviced him.\n\n\"Silly, you're a dominant,\" Monica countered. \"You absolutely get to make these calls. If it's no difference to Tori, or to me... what would you prefer?\" She kissed him softly again. \"It's me, love. I'm not asking you to be a good feminist. I want to know what you want. What your cock wants.\"\n\nHe let out a long breath. \"Hair,\" he said finally. \"As long as it's taken care of. I like a little color. Something to draw the eyes. Feels intimate.\"\n\n\"What else? Take your time,\" she counseled, fingers tracing across his scalp. \"Let Tori help you. You're thinking clearer now, aren't you?\"\n\n\"I am,\" Casey nodded. \"Still feels amazing, but I am.\"\n\n\"She's yours. Enjoy her. She can let you turn your mind off and sink into the pleasure, or she can clear your mind better than anything on earth.\n\n\"Think, Casey. Tell me what really turns you on. Nothing you say to me will make me love you any less. Everyone has their little perversions. So tell me what you want.\n\n\"I've known your girlfriends, but I also know how they've turned out. You never have to settle for less than what you want ever again, Casey. Do you like them older? Barely legal? Any ethnic preferences?\"\n\nHe gave it a moment's thought. The pause let him focus on Tori's mouth and tongue. \"Everything,\" he said finally. \"I'd want them old enough to drink. But hot is hot. Doesn't matter what color or if they're older.\"\n\n\"What turns you on, Casey?\" Monica hissed. \"Tell me.\"\n\n\"This, right now. Two women. All the attention. I feel awesome. You don't even know.\"\n\n\"Oh, but I do. Nice treat for the ego, isn't it?\"\n\n\"Uh-huh.\"\n\n\"It gets better,\" Monica grinned. \"What do you daydream about? Tell me your fantasies, Casey. All of them. Anything.\"\n\n\"I'm kinda vanilla,\" he shrugged. His brain worked just fine. His voice still trembled with pleasure.\n\n\"Nothing wrong with that.\"\n\n\"I want it all. I want to be pursued. I want to be the aggressor. I want them to pose. I want them to know they're hot, and enjoy it and to feel confident and offer themselves to me. But mostly I want to know they want me, one way or the other. I don't want them to be clones. I want them to be themselves.\"\n\n\"Variety is good.\"\n\n\"I want them to be slutty, but slutty for me. I don't care if other men want them. That's fine. I just want to know I'm the one getting laid, and I'm the one they're slutty for.\"\n\nMonica's lips trailed up his neck to his ear. She nibbled on his earlobe, endlessly reminding him of the hold she had over him.\n\n\"Lesbians,\" he said. \"Bi. Women with women. So hot.\"\n\n\"Good boy.\"\n\n\"That, too. You. I'm so turned on by you. The confidence. The sexuality. It's like you're flexing some sort of muscle at me. I feel you dominating me.\"\n\n\"You like it?\"\n\n\"I love it. So much. It's so good.\"\n\n\"I'll keep it up. Surrender and enjoy.\" She kissed him deeply, telling him once again in no uncertain terms who was in control and why, and he loved her for it.\n\n\"What else? Not just me. Think broader.\"\n\n\"...lingerie.\"\n\n\"Hm?\"\n\n\"I'm crazy about it,\" Casey admitted. \"Gets me every time. Even simple sports bras. But the better stuff... I love it.\"\n\n\"Tell me.\"\n\n\"I used to grab your lingerie catalogues before they wound up in the trash,\" he said, \"and I'd hide them. I know it's just visuals and marketing, but I always think... that's what a woman wears when she feels sexy. When she wants it.\"\n\n\"Anything in particular you like?\"\n\nHe slowly shook his head. \"I like it all. I like the innocent stuff. I like slutty stuff. I like leather. I like French maid outfits and harem girl costumes.\n\n\"I like... I love hearing all this submission talk,\" he confessed. \"Hearing how Tori feels about me. All the ego-stroking. I like... I love feeling like a stud and getting you and Tori off. I can't get enough, and... Oh God this feels good.\"\n\nMonica waited until he had more to say, but realized she was losing him to bliss once more. After a moment, she decided it was time. \"You know she wants it, right?\" Monica asked. \"Wants to taste you. Drink from you. She wants it as badly as you ever want me. Maybe even more.\"\n\n\"Yes,\" Casey murmured. Tori let out a wordless, hungry whine of agreement and need.\n\n\"Anything else? You sure you're telling me everything? Not holding back out of embarrassment or because you're worried I'll think you're sick?\"\n\n\"I don't know...\" Casey answered dreamily. \"Like what?\"\n\n\"As far as I'm concerned, women should call you master and consider themselves lucky to have your cock in their asses. Don't worry, I'll keep you from actually hurting anyone. I'll teach you. I want to know everything, even the dirtiest stuff. I don't mind if it's a little dark... dominants usually have some dark tastes. Like...\"\n\nMonica grinned wickedly. \"Like maybe being a little forceful,\" she said as she put one hand on Casey's shoulder and then grabbed a fistful of hair on the top of Tori's head with the other, pushing her down slowly but relentlessly on Casey's cock and holding it there. \"Don't worry, just enjoy it,\" Monica hissed at him. Tori hadn't gone down this deep on Casey yet, and clearly would not have without coaxing. It couldn't have been entirely comfortable. But now that she was pushed into it she submitted without a struggle.\n\n\"Holy fuck,\" Casey gasped, less in shock than in pleasure, though there was more than a little surprise, too. He'd been passionate with lovers before, but never this rough. He knew he should object, should stop this, shouldn't allow Tori to be treated like this... but it felt so goddamn good.\n\nHer breathing seemed a bit struggled. Her hands were open, muscles tensed, but she didn't struggle. It felt incredible.\n\nMonica kept her there, and then swept around the two so she could straddle Tori's head where it rested in between Casey's legs. She ground her crotch into the back of Tori's skull while the helpless younger woman's mouth and throat served as a warm, wet, tight sleeve for Casey's whole cock.\n\n\"She'll be fine,\" Monica assured him with a cruelly gentle grin. \"She's your bitch now, after all. Do you like that? So much to teach you, Casey. So many pleasures to introduce you to.\"\n\nCasey stared in wide-eyed amazement at his foster mother even while his carnal pleasures soared. He could feel Tori's struggle to breathe, but he could also feel his guilty enjoyment build.\n\n\"You should consider having her call you master,\" Monica suggested with a light kiss on his neck. \"That's what you are now. Maybe you'll fall in love. Maybe you'll just be friends. Or maybe she'll just be your valet. But no matter what, you've conquered her and she's yours.\n\n\"You can have anyone, Casey,\" Monica whispered into his ear. She ground her pussy against Tori's head, both for her own pleasure and to create some motion for Casey, which left him moaning and Tori whimpering whenever her throat could manage it. \"She's loving this right now, you know. You can almost feel it. You'll learn to feel it.\n\n\"You can have anyone you want, Casey,\" she repeated. \"Virgins just starting college. Innocent girls you can turn into your own personal needy, desperate sluts. Lesbians you can teach to love your cock.\n\n\"Mothers. Wives. You'll have to try out some married women,\" she chuckled. \"I know dominants who greatly prefer them. That ego boost of having someone else's woman... hearing their weak protests of how they love their man while they give themselves up to your cock. Watching their resistance break down until they're ready to give themselves to you entirely. Hell, I know dominants who make a hobby out of cuckolding. I do it myself. It's a little cruel, but it's fun.\"\n\n\"Isn't that...\" he gasped again at the wonders his cock enjoyed. \"Isn't that wrong? You said not to... hurt people.\"\n\n\"Oh, there's hurting and then there's playing,\" Monica cooed. \"I can teach you. No tears. No scars. No hurt feelings. You can take what you want and send them home to their husbands happier than ever. You can fix all the damage and have them forget everything. I'll teach you, Casey,\" she whispered into his ear. \"I'll approve.\"\n\nHe let out a moan of pleasure. Casey had never really considered such taboo pleasures, but under Monica's seduction and Tori's helpless deep-throating, he was far too turned on. \"Are you gonna cum now, lover?\" Monica whispered. Casey nodded breathlessly. \"Then give her all you have. As much as you can. Cum, Casey. Cum whenever you want.\"\n\nIt wasn't long. Casey's whole center began to tremble. His eyes winced shut, but then after the first throb of cum burst from him, his eyes snapped open again. It went straight down Tori's relaxed throat. Monica withdrew to allow Tori more control as she swallowed the rest. Casey looked down at her with concern.\n\nTori met his gaze. Her face was a bit red and showed her physical distress, but she refused to waver in her duties. She swallowed eagerly and quickly while still looking directly up at him. He could tell that she enjoyed this as much as him. She shivered, and whimpered, and her body trembled against his legs. He could feel their connection build even further. He came, and they both loved it.\n\nMonica allowed him a brief moment to lay back on the bed and rise out of the haze again. Tori's mouth stayed locked on his cock until she had swallowed every bit of his sweet fluid. When she was finished, she pulled back only enough to lick and stroke him. \"Thank you, sir,\" Tori murmured. \"Mistress. That felt so good.\"\n\n\"You're okay?\" Casey blinked, still shuddering. \"I'm so sorry.\"\n\nTori shook her head. \"It was tough, but I loved it. I would do that again for you, sir, if you wished. Anytime you wish.\"\n\n\"Later,\" Monica interrupted happily. \"Time to get dressed now. There's more fun waiting at home.\"\n\n* * *\n\nRain fell the entire trip from the hotel to the airport. Casey rode in the back of the limo with Monica, who seemed somewhat preoccupied catching up with messages on her smartphone. Casey didn't mind. It gave him time to think.\n\n\"Penny for your thoughts?\" Monica asked as they came closer to their destination.\n\n\"Just thinkin' about this place. Going home. I like the Northwest, but it's not LA. I've wanted to go home for a long time.\"\n\n\"I've wanted you back since before you first left,\" Monica said. Her tone carried as much warm, familial love as it did seduction or romance.\n\nHe smiled a bit, looking from the window and grey skies beyond to his mentor and newfound love. \"Yeah, but I guess it's true what they say about never going home again, right? I mean, I'm sure as hell not complaining, I just...\" he shrugged. \"I thought it was going to take a while to decompress. Maybe it hasn't caught up to me yet. But I keep waiting for the other shoe to drop and it never does.\"\n\n\"You're different from other people,\" Monica shrugged. \"You also have something new and exciting to walk into. Wonderful opportunities. Someone who loves you and will support you... multiple someones,\" she corrected, tilting her head to the closed window to the driver's compartment.\n\n\"You didn't describe it as love before.\"\n\n\"Sometimes it is. Sometimes it isn't. Depends a lot on how you handle it and the personalities involved. It's generally a pretty positive relationship regardless, unless you're a complete dick to the people you dominate. I don't expect that'll be an issue with you. Just isn't in your nature. I fully expect you to have quite a number of genuine romances in addition to ours. It's totally okay with me; I know I'm not going to be replaced. I'll be very happy for you.\" Her smile broadened a bit as she added quietly, \"I was really proud of how you handled Tori.\"\n\nCasey blushed. \"Never thought I'd hear you say you were proud of how I fucked.\"\n\n\"No, silly. I mean what you said to her. How you treat her and look at her. Telling her to be beautiful and sexy, telling her that's what she was and shouldn't ever doubt it... that was wonderful. Most people have self-doubt when it comes to things like that. Even movie stars and models worry about that, despite everyone in the world telling them otherwise. Tori hardly felt sexy at all when I first met her. To hear that from you right when you first claimed her... that's gonna stick. She'll carry that for the rest of her life.\"\n\nHis blush faded somewhat, as did his grin. \"Does it bother you?\" he asked. \"Living longer than ordinary people?\"\n\n\"Other people,\" Monica corrected. \"You're different, but remember you should only indulge in the superiority trip while you're playing. There'll be a lot of that in the future, but I want you to keep the moral reality in the back of your mind. I know it feels good, but keep it in perspective so it doesn't really go to your head,\" she counseled with a grin. \"No, I know what you meant. I'm just saying. Perspective is important.\"\n\n\"Moral reality?\" Casey asked.\n\n\"Yes. As in, all people really are of equal worth on a moral level. You are not morally or intellectually superior to others just because you're a dominant. I know it might feel that way, and I know it's fun to play\u2014it's a lot of fun to play, to be honest, and you'll see me get pretty bad with it\u2014but in the end, deep down, you have to remember that the people you play with are people.\n\n\"You ask me,\" she smiled wickedly, \"that's half of what makes it so much fun. If I felt like I was just above everybody else, dominating them wouldn't feel nearly as awesome. After awhile I'd just look at them as toys and it would get dull. Instead, I remember they're people, and it makes me even hornier. And happier.\"\n\nCasey listened to her, somewhat concerned. Monica gave him a smile and a shrug. \"You'll understand. Like I said, our pleasures can run a little dark, and you need to indulge them or they'll get out of control. I'll teach you balance, and I'll hold you in check until you're ready to handle yourself on your own.\n\n\"But understand this much... it never gets old. It's still sex. It's still exciting and intimate and satisfying, no matter how much you have or with how many partners. It's still the ultimate pleasure, and it's still a driving need for dominants. Hell, maybe moreso for dominants. Just because it's easier for us doesn't make us value it any less. And what's exciting or satisfying with one partner isn't necessarily the same with others. Every relationship has its own spark, even the one-time trysts.\n\n\"Anyway... back to longevity. Yes, sometimes it bothers me, but generally no. You have to remember it's okay to let other people live their lives. Casey, when we claim people, it's not entirely a one-way street. Your women will be healthier. Even a one-night stand with one of us can give a person a glow that'll last for months. The ones you keep close to you and fuck frequently become a little like us. They age slower. Their health picks up. Tori may look slender, but she's very athletic thanks to me, and now to you.",
        "\"But you can't feel like it's your job to spread that around, either,\" Monica continued. \"You aren't going to pick up an STD. Ever. And when you fuck a woman repeatedly, you can make her healthier, but it's not like your dick cures AIDS or anything like that.\n\n\"Yes. There are plenty of people I've outlived who I miss a lot. But I don't really feel guilt over it. Maybe being dominant helps one cope with grief or helps you keep a psychological perspective on longevity or whatever, but...\" Monica shrugged. \"They lived their lives. I live mine. Not everyone gets to live as long or as fortunately as us, but... well, nobody should feel guilty about being rich unless they got that way by stealing and crushing other people, right?\"\n\n\"Guess that's a good way to put it.\"\n\n\"You've got a good heart, Casey. Don't be afraid to be selfish. I'm telling you, Selfish Casey is just about the best time a woman could ever have. Particularly Tori,\" she added. \"She can be strong and independent, which is why I like her, but she's got a natural submissive kink a mile deep. She never really indulged it with a partner before I dug it out of her. She absolutely loves her role, and if you keep showing you appreciate her like you have, she'll be in heaven forever. Have fun with it.\"\n\nHe couldn't help but grin at that. \"This conversation is turning me on.\"\n\n\"Ugh. Right. Not good. Sorry about that, wasn't my intent.\" She couldn't help but grin at him a little. \"How bad is it?\"\n\n\"Oh, I'm not that bad,\" Casey smirked. \"I'm pretty sure I can handle the walk through security and a couple hours on a plane without going wild and fucking someone.\"\n\n\"You sure?\"\n\n\"Yeah! Jeez. What, am I gonna stand up in my seat right next to Tori's and put my dick in her mouth mid-flight?\" Silence followed as they looked at one another. \"Seriously,\" he said, but kept looking at her.\n\n\"You can't get the thought out of your head now, can you?\"\n\n\"I can,\" Casey shrugged. \"I mean, I know she wouldn't have a problem with it, right?\"\n\n\"Tori wouldn't hesitate,\" Monica answered evenly. \"A whole planeload of people thinking she's a whore and a slut wouldn't mean a thing to her. All that matters is you and your pleasure, and the pleasure she receives from it.\"\n\n\"Right,\" Casey said. \"But it's not like I can't control myself.\"\n\n\"Mm-hmm.\"\n\n\"I'm an adult.\"\n\n\"You are.\"\n\n\"I know when it's inappropriate and when it isn't.\"\n\n\"Right.\"\n\n\"I mean, they'd land the plane early and take us off in handcuffs.\"\n\n\"They would.\"\n\n\"Right. So.\"\n\n\"So you can't get it out of your head now, can you?\"\n\nHe sighed. \"No,\" he admitted.\n\n\"Pull it out, lover,\" Monica smiled. \"I'll take care of you.\"\n\n\"You don't have to.\"\n\n\"I want to, Casey,\" she said. \"I love sucking cock. I especially love sucking your cock, I'm your dominant, and I'm in love with you. Your comfort means a lot to me, and I don't want to have an embarrassing episode on the plane.\"\n\nHe couldn't really argue with her. He hardly wanted to. Casey undid his belt and pants as Monica turned and shuffled over in the limo seat to bring her face toward his now freed and erect cock. It was bigger than he remembered the last time he looked. Monica appeared undeterred.\n\n\"This isn't a chore for me, or for any woman who sucks your cock,\" she reminded him as her hand took hold of him and stroked slowly. \"It's a pleasure. Just remember that I'm doing this to help you out right now, not to savor it. Let go as soon as you feel it cumming.\" Monica gave the head a lick, then another, and slowly kissed it, her lips parting to take him inside... and then stopped. \"And no messing up my hair,\" she warned playfully.\n\nWith that, he was immediately lost to her all over again. Monica's mouth engulfed his cock, smoothly gliding down his flesh and welcoming it into her. Casey owed her every bit of his love and his loyalty. Every second of this pleasure reaffirmed his devotion to her. Monica's head bobbed up and down on his cock, taking him like a pro's pro, enrapturing him with ease.\n\nIt didn't take long at all. Sensations of joy and lost control rippled through his thighs, through his loins and on through his cock as cum rushed from within him into his lover's welcoming mouth. Despite the awkwardness of their position, the subtle bumps of the road and winding turns of the drive, Monica kept him in complete control. She manipulated him to orgasm and kept him there, swallowing spasm after spasm and never missing a drop.\n\nLost to Monica's dominance and her touch, Casey didn't realize at all when they pulled up to the curb at the airport. His eyes fluttered open to see the window to the driver's compartment rolled down. Tori sat looking over her shoulder as Casey continued to pump, lightly but still not yet finished, into Monica's mouth.\n\n\"We're here, Mistress. Sir,\" she winked at Casey. \"Unless you'd like me to take another loop around the airport?\"\n\nCasey couldn't answer. Monica lifted up a finger and twirled it in the air.\n\n\"Yes, Mistress,\" Tori smiled, and pulled away from the curb again.\n\n* * *\n\n\"I feel a little douchey for not helping you with the bags,\" Casey said as the plane taxied down the runway for take-off.\n\n\"Why?\" Tori asked. Valet or not, Monica had her up in first class right beside Casey. Monica sat on her other side, only now putting her cell phone away at the flight attendant's reminder. \"It was no problem. It's my job.\"\n\n\"Yeah, but a couple of them were like fifty pounds each.\"\n\nTori shrugged. \"I'm a lot stronger than I look.\"\n\n\"You must be,\" Casey nodded. \"I mean I'm not saying you look weak or anything. You're clearly in very good shape, but...\" He shook his head and grinned, feeling more than a little embarrassed. \"I feel kinda bad. We've hardly even talked except for brunch.\"\n\n\"I'm not worried,\" Tori smiled softly.\n\n\"Yeah, but I really do want to get to know you. I mean, more than, you know...\" his voice dropped and he glanced around. \"...physically.\"\n\n\"Me, too.\"\n\nHis hand came to hers. She held it. \"I'm really pretty interested in you. I know I've been a little distracted,\" he smirked, giving a tiny head toss to indicate the woman sitting on the other side of Tori, \"but I've been looking forward to just talking with you.\"\n\n\"Likewise.\"\n\nThe thought that had been bugging him since they left the hotel came front and center. \"I'm really sorry about earlier. This morning. At the hotel.\"\n\n\"Don't be,\" Tori shook her head. \"I'm not.\"\n\n\"You say that, but\u2014\"\n\n\"No. Casey. Really.\" She squeezed his hand. \"I loved it and it felt wonderful. Difficult, but wonderful. We can do it again. I'd like to, actually.\" She blushed and smiled a little as he blinked in surprise. \"Casey, you're incredible, and you're only going to get better with time. This is an adventure for me. I'm excited. Really excited.\" She took a long, deep breath and let it out to control herself. \"I'm. Um. Kind of emotional about it, really.\"\n\n\"About what happened?\"\n\n\"No. Well, that, too, a little. But no, just... you. Us. You don't have to care at all, Casey, and here you are talking to me and I can see that you do. After all I've already learned about you, I'm just...\" she shrugged and wiped a watery eye. \"Happy.\"\n\nHe brought his hand to her lips and kissed it. \"You're amazing.\"\n\n\"I'm yours,\" she replied.\n\n\"Hey. You two,\" Monica interrupted with a friendly tone, \"you need to cool out on that for now. I don't want to be a bitch to either of you, but remember what I told you about this plane ride.\"\n\n\"Sorry,\" Casey shrugged, letting go of Tori's hand.\n\n\"I'm sorry, mistress,\" Tori nearly whispered to her. The noise of the engine and the space around them offered for just enough privacy for quiet, whispered comments, but none of them intended to get revealing or explicit.\n\n\"I'm not telling you not to talk. I'm just saying be careful what you talk about. Remember, there are reasons why you're between Casey and I.\"\n\n\"She's got a point,\" Tori said to him.\n\n\"Yeah, but I...\" he frowned. \"Well. Tori, I don't want you to feel like you're, um... I mean you know what's going on, but I don't want to feel like you're just\u2014\"\n\n\"Second best?\" Tori smiled. \"The silver? I'm not worried about it, Casey. At all. I'm fully aware of what's going on. I've had some firsthand experience of what your situation is like, remember?\" she asked, gesturing toward Monica. \"And I'm happy for you. I'm really happy for you both. I also know I won't be the only one\u2014not remotely\u2014and I'm fine with that, too.\"\n\n\"Ahem,\" Monica nudged her. \"Not a safe topic.\"\n\n\"Sorry,\" Tori blushed. Casey grumbled.\n\nThe engines revved as the plane was cleared for takeoff. \"There's also a reason why Casey has the aisle seat,\" Monica said, pointing subtly toward the bathroom.\n\nCasey winced. \"You make it sound like I've got some sort of...\"\n\n\"Control problem?\" Monica winked. \"It's because you do. Anyway, don't mind me. I'm just sitting here with my book for the next couple hours. But be careful with one another, alright?\"\n\nTori's eyes turned to meet Casey's. She gave him a friendly smile. \"There are much worse problems a guy could have,\" she said. \"In fact I find yours a little... promising.\"\n\nHis heart skipped a beat. Monica cleared her throat again, more assertively this time, though still in good spirits. Tori put her hands in her lap and looked down at them, fighting a grin.\n\nCasey sat and waited. The plane took off, taking him away from Washington and his last duty station. He craned his head to look past Tori and Monica out the small window, but only saw a little bit of green before they hit a cloud bank. Then he sat back in his seat, stared at the little television screen in the back of the seat in front of his, and tried to clear his mind.\n\nThere was plenty he could talk about with Tori. Obviously he couldn't safely speak much about his combat service; even if he were so inclined, there were too many words like \"bomb\" and \"explode\" that weren't smart to say on airplanes. But there were other things to discuss. Family upbringing. Hobbies. Places in LA they both might enjoy visiting. Pet peeves that they might both benefit from knowing about for one another's sake. Politics. Philosophy.\n\nTori was a bright, witty, pleasant, very intelligent and well-educated woman. Surely they had a great many platonic things they could discuss. He sat in silence, trying to decide what to bring up first.\n\nAs soon as the plane leveled out and the \"fasten seatbelt\" signs went out, Casey unbuckled and headed for the lavatory to take care of his growing erection.\n\nMonica didn't look up from her book. \"He's wild about you,\" she said to Tori with a smile. \"I'll try not to be too selfish with him... eventually.\"\n\n* * *\n\n\"Malibu, huh?\" Casey asked as he looked out the window of the limousine. How Monica and Tori had arranged all of this was beyond him\u2014shouldn't the limo have had its own driver?\u2014but when they arrived at the terminal and came off the plane, the two women led him smoothly through the airport to the waiting stretch black limo. Tori had resumed her servant's dialogue and demeanor, though occasionally throwing Casey smoldering glances. They didn't wait for the bags, though; apparently Monica had all that arranged already.\n\nHe had hoped for some up close and personal relief from Monica once they were in the limo, but she only had eyes for her smartphone as they drove. Miraculously, traffic wasn't that bad at all. Casey felt his arousal abate somewhat as he took in the familiar landscape and the roads. He was horny as hell, but he was also home, and that was more than a little bit distracting.\n\n\"Yes, Malibu,\" Monica told him. \"Casey, I need your full attention for a moment.\"\n\nHe turned to her, his breath deepening already. He loved it when she took charge. He also loved it when she didn't, so it wasn't like his love for her was conditional... but as he had confessed, Monica's authority over him felt unquestionably good.\n\n\"Your life is about to become incredibly privileged,\" Monica told him in a serious tone that still carried affection. \"I know you feel like you've hit that already, but as I promised, there's much more. It's beyond decadence.\n\n\"You will probably feel some guilt over it. You'll probably question whether you deserve it, or if anyone deserves it\u2014and to be honest, I don't know if anyone really does, but the fact is we have this and I want us both to enjoy the hell out of it. Your parents and I all agreed that you should be raised without all that privilege and with realistic expectations, because we wanted you to understand the value of all this. We didn't want you growing up taking wealth for granted. Then you went and joined the Army. You don't just understand realistic expectations. You also understand hardship. So this will be a dramatic gear shift for you.\n\n\"I want you to know that it's okay to feel a little guilty or out of place... but you should also feel free to ignore all that, because I've built this over many years, and I want you to share it because I love you. I would feel terrible if you didn't get to enjoy this. So for me, at least, please accept it, no matter how wild and crazy it seems.\"\n\n\"Okay,\" he nodded with a solemn smile.\n\n\"I also want you to know that I'll be watching you and keeping you in check. Your body and mind are going through dramatic changes. It's largely fun, but there are going to be moments when you wonder if you're going to lose control. I'm telling you now not to worry about it. I'm in control. I won't let you get out of hand. Keep the faith with me and your only worry will be over which indulgence to dive into next. Okay?\"\n\nAgain, Casey nodded. \n\n\"Don't worry about getting a job. Don't worry about going to school for now. Just enjoy being one of the idle rich for awhile. It's a blast.\" She held his gaze throughout the conversation, leaving him only dimly aware that they had gotten off of the freeway and begun driving up winding hills through an expensive\u2014no, a very expensive neighborhood. But all that was peripheral to Monica.\n\n\"And be ready to obey me. Put your faith in me. I'm in love with you, Casey. I may be your dominant, but I love you like an equal. I've wanted a man like you all my life... I've found some that came close, but they either weren't half the man you were or they simply weren't dominants. You've got it all, love. I'm crazy about you.\"\n\n\"I'm in love with you, too, Monica,\" Casey said, leaning in to kiss her.\n\nShe put a gentle finger up on his lips and shook her head with a smile. \"Soon. Very soon. Give me this moment, though?\"\n\nHe kept a hold on his deep need, which threatened to leave him shuddering and breathing heavily. Casey maintained his composure. If they didn't get home right away, if Monica wanted to take him somewhere public first or meet with other people or whatever... he'd manage. \"You can have all my moments,\" he grinned with confidence. \"I already gave them to you for the next year at least.\"\n\nMonica's smile broadened. \"You've no idea how crazy I am about you, Casey,\" she said. \"And you've no idea how emotional I am right now about all this. But I've got to keep it together for just a little while longer.\"\n\n\"No, Monica,\" Casey started softly, \"You don't\u2014\"\n\nShe put her finger up to his mouth again. \"Shh. It's okay. I'm happy. Look.\"\n\nShe gestured out the window. The car drove through an automatic gate, with tall hedges lining the walls in front of a broad front lawn. Caseys' jaw dropped as he saw the big, beautiful white building that sat up ahead. \"Monica, that's not a house, that's a mansion!\" he blurted.\n\n\"Our mansion,\" she said, and smiled at him when he looked back at her in shock. \"I mean it, Casey. I may be your dominant, but I don't want you as my slave. That may be sexy fun from time to time, but that's not what I want out of you. I want a partner. I want someone to share all this with.\"\n\nHe opened his mouth to express his awe and his unworthiness... and promptly shut it, remembering what she'd said. Instead, he looked out at the grounds again. The landscaping was beautiful; it had less of a grassy area than many of the other houses they'd passed, showing more respect for Southern California's naturally dryer climate. But the palm trees were everywhere.\n\nHis sense of direction reasserted itself. The back of that mansion had to have a beautiful view of the ocean. It looked like it was a good three floors high, at least from this level, and... \"It's gorgeous,\" Casey said.\n\nThe limo pulled up to the front, with a round driveway to allow for party guests to arrive. \"It's not the only home,\" Monica winked. \"It's just the best. The others are all much more reasonable. But I wanted something extravagant to call home. Now. You. Step out of the car and wait for instructions. I have a way I want to do this.\" Her eyes gleamed with excitement as Tori exited the car and opened the door first for Casey.\n\n\"Thank you,\" he said to her as he got out.\n\n\"At your service, sir,\" she smiled with a sultry wink. She knew he was staring at her ass as she rounded the car to open the door for Monica. She knew it, and liked it.\n\nMonica came out of the car, walked to Casey's side, and kissed him lightly on the lips. \"Are you ready?\"\n\n\"For...?\"\n\n\"To start off your year of total obedience,\" Monica whispered.\n\nHe couldn't hold off the shudder in his breath. \"Yes.\"\n\n\"Take off your clothes. Here and now. Strip.\"\n\nCasey blinked. \"Uh\u2014\"\n\n\"Total obedience. You have nothing to be ashamed of, Casey. You're a dominant, you're gorgeous and you're mine, and I want to look at you and revel in it. And I want you to revel in it, too,\" she said as he stripped off his shirt, pausing to touch his chest with her fingers. She made sure not to distract him from kicking off his shoes, slipping off his socks or unfastening his pants, but she did look at him with open, unbridled lust and affection.\n\nThat made it much easier for him. Casey smiled and looked her in the eye as he undid his pants, partially freeing his very needful cock from its fabric confines. Soon, his pants slipped down his legs, and so did his boxer briefs. Monica's eyes gleamed even more as his naked cock pointed straight out at her. Knowing that she wanted it relieved him of most of his trepidation about standing around naked in the open.\n\nShe touched it with gentle fingers, not groping nor stroking but just touching with idle fascination. Her grin was nothing short of hedonistic. He honestly thought she might decide to go at it right there.\n\nInstead, Monica stepped back and loosened the drawstrings of her dress. Tori came around to help her out of it, and the two put on a small, sensuous, quiet show to display Monica's flawless naked flesh and her voluptuous, heart-stopping figure. \"Doesn't this feel better?\" she asked.\n\n\"It does, yeah,\" Casey admitted. \"Long as it's just us.\"\n\n\"There is nobody here whom you cannot have at your whim,\" Monica said, putting one hand on Tori's shoulder as she stepped out of the dress pooled at her feet. Tori rose somewhat to slip Monica's panties down, looking with reverence at the blonde pubic hairs and taking in the scent of her aroused sex as she performed this final task. \"I won't allow it. Until further notice you're the only man here.\"\n\nShe looked him over hungrily and grinned again, taking his cock in her hand and giving it a few light, sensuous caresses. \"You're coming into full bloom,\" she observed with approval. Monica waited as Tori opened the front door behind her, focusing her lustful gaze on Casey. \"Come with me,\" she said.\n\nThe home was nothing Casey ever dreamt of calling his own. Its foyer was spacious, bright and decorated in modern lines and furnishings. Monica apparently preferred tall plants and subtle frames on her artwork over overdone tapestries and massive chandeliers. For all its majesty, the mansion felt quite welcoming. He couldn't believe he got to live here.",
        "No one stood in the foyer, or in the hallways leading from it, which relieved him somewhat. He was perfectly happy to walk around naked\u2014and very aroused\u2014with Monica, and even with Tori, but the thought of meeting with strangers this way didn't appeal to him. Casey wasn't entirely sure what Monica had meant about his freedoms with whoever was in the house... did that mean it was just the three of them? Or did that mean...?\n\n\"Welcome home, mistress,\" announced a soft, feminine voice from the broad living room as they entered. Casey blinked at the sight of the speaker, and her companion. They were both gorgeous women, both with dark hair and both dressed in fine lacey lingerie. The one on the right was slender and young, with long hair and a naughty grin. The other, her hair cut boyishly short, seemed to be in her early thirties and had more curves. Both wore flattering bras, stockings and garters without panties. Both had neatly-trimmed bush between their legs\u2014exactly how Casey had said he preferred it.\n\n\"Thank you, ladies,\" Monica said, and turned her attention on Casey. \"This is Jessica and Dylan,\" she explained, gesturing from the longer-haired beauty to the other. \"They're part of my harem\u2014our harem, now. Or soon enough. They live here with me. Dylan's also a wonderful chef.\"\n\n\"Hello, Master Casey,\" both women smiled.\n\nHe blinked again. \"Hello?\" he murmured, unsure what to say but knowing he was even more aroused. Desire helped him forget all about his embarrassment. These women both wanted him\u2014he could see it in their eyes, and their posture, and he surely wanted them\u2014but he was just sensible enough to realize how crazy this was. \"I'm sorry, Monica,\" he said, his lips turning to a small grin, \"but did you just say everything I think you said?\"\n\nShe chuckled. \"Later, love,\" Monica smiled, and stepped over to slide her body against his and caress his back while his gaze remained on the two other women. \"For now, you're all mine. Dylan,\" she said with a sweet smile, \"I think we'll be in the mood for something extravagant tonight. How does lobster sound?\"\n\n\"I'll make it happen, Mistress,\" Dylan nodded.\n\n\"Wonderful. We may be taking our meals in the master bedroom for the next couple of days. I plan to keep Casey occupied for a bit. Jessica, would you mind helping Tori out with the rest of the arrangements?\"\n\n\"Of course, Mistress,\" Jessica nodded.\n\nCasey watched as Jessica strode past him, never taking her eyes off of his until her back was to him. His heart skipped a beat as he got his first look at her small, tight, perky ass bumping with each step under her lacy garter belt. It skipped again when he saw her hand slip into Tori's as the two left.\n\n\"Your master bedroom is all prepared,\" Dylan said. \"All your other instructions have been carried out. Will there be anything else, Mistress?\"\n\n\"No, that's all, thank you,\" Monica replied, her tone holding much more affection than authority, much as it did with Tori. \"We'll head upstairs now.\"\n\n\"Yes, Mistress,\" Dylan nodded. Her eyes turned on Casey. \"We all look forward to serving you in every way,\" she said with a smoldering breath before she turned and walked away, her ass swaying temptingly.\n\n\"That just happened,\" Casey smirked.\n\n\"It did. So did this,\" Monica confirmed as her tongue lightly caressed his ear and her hand came around his cock once more. \"You're very horny now, aren't you?\"\n\nHis eyes fluttered shut. \"I was horny as hell before.\"\n\n\"And now?\"\n\n\"More.\"\n\n\"Are you excited? Grateful? Aroused?\"\n\nHis eyes fluttered. \"Yes.\"\n\n\"You are my man now, Casey,\" she murmured to him. \"My strong, dominant man. You feel it, don't you? The need to claim me? Take me? Fuck me and make me yours, even though you know I dominate you?\"\n\nShe felt so good up against him, bare skin against bare skin. He felt her breasts against him. Her hand on his cock. Her breath on his ear. \"Yes.\"\n\n\"That's what I want, Casey,\" she whispered. \"I don't want a slave. I don't want a servant. I want a man. I want you.\" Her tongue flicked into his ear. She gestured toward a staircase. \"The master bedroom is at the top of those stairs, Casey,\" she said. \"Take me. Claim me. Fuck me. As long as you like. Forever, if you like. Fuck me until you're satisfied, lover. Fuck me.\"\n\nWordlessly, despite her encouragements, Monica held him in her complete control. He couldn't move. Couldn't speak. Couldn't do anything until her teasing and her taunts grew too great, and then his need overrode her control. Casey grabbed her fiercely by the arms and kissed her without regard to her readiness or her cooperation. His lips roughly devoured hers, his tongue forced its way into her mouth and paid no attention to her quick willingness to accommodate him. It didn't matter that she cooperated. Didn't matter how her body responded. He had to have her.\n\nWhether her hold on him had relaxed to allow him this initiative or not, he didn't know and didn't even consider it. He didn't care. Casey swept his foster mother, his dominant and his lover up off of her feet and carried her naked up the stairs in his arms, fully intent on conquering her. Monica melted into his embrace, holding onto him, cooperating fully and smiling. He hardly noticed; all that he knew was that this woman wanted to be fucked, which was good, because that was what would happen to her.\n\nThe double doors to the master bedroom were open. It was white and clean, with an extravagant bed much larger than any California king. A cool breeze drifted through the window, leaving the white drapes billowing gently. He would remember this later, and would find this degree of comfort and luxury mildly unsettling, but in the moment all he cared about was Monica and his need for satisfaction.\n\nInstinct took over. He gave no thought to love or romance. He thought nothing about their relationship or his worries or the pains and fears of the last few years. His mind sank into lustful needs and felt good for it.\n\nShe was ready. He could smell her. No need for warming her up or relaxing her; this was all but a bitch in heat and ready to be taken. Casey brought her to the bed, laid her down and then pushed her further up, placing one knee between her legs and then rising onto the bed to spread her other leg away with his opposite knee.\n\nThe dazzled look in her eyes and her ambitious grin only heightened his need to fuck her into submission. Casey's cock was so stiff and strong it needed no hand to guide it into her. He threw her arms up over her head on the bed, pinning her wrists to the mattress as his mouth came down on hers and his cock found her wet, defenseless lips. As a dominant, Monica could overpower almost any ordinary man\u2014and had out-wrestled even a few dominant males in bed\u2014but Casey's dominance took hold after years of hardening and strengthening his body as a soldier. He was already much stronger and possessed by greater stamina than he'd ever had. Monica's emotional control over him remained, but physically Monica was in awe of his power.\n\nWarm, yielding flesh lubricated with her body's juices enticed the probing head of his long, thick cock until he found the proper angle. Casey invaded her, feeling her spread open for his slow, relentless penetration. Her natural resistance pleased him, since it couldn't hope to hold him back and only served to arouse him more with the grip of her cunt.\n\nMonica gave up on kissing back. She moaned helplessly into his mouth as her body became a welcoming vessel for his pleasure. Sinking into her to the hilt, Casey pushed even further, pressing her ass into the mattress as he enjoyed her. Monica's moans indicated nothing but approval.\n\nHe withdrew just enough to thrust into her again, and then again. Casey's strokes were long and deep, slowed to savor the relief of being sheathed within her after having gone a whole ninety minutes from the plane to the house without cumming. His strength let her know who was in control. His control thrilled her even more.\n\nHe thrust again. Again. Harder each time, until finally he started relentlessly pounding her in a rhythm dictated by mutual need. Monica's moans only encouraged him to fuck her as he saw fit. Her legs wrapped around his hips for a time, tightening as her first orgasm hit and her cunt became even more moist and welcoming. Eventually, though, her legs fell away as she became even less of a participant and was soon nothing more than a joyously helpless recipient.\n\nHer emotions ran wild as he used her, endless minutes stretching on and on with no let up. He was everything she'd hoped. Casey was a true dominant, naturally stronger and more arousing than any Monica had ever been with, and with startling potential. She could feel him battering at the walls of her dominance over him with that cock. He couldn't actually conquer her; it didn't work like that, and never did. Those walls did not crumble, but they buckled and wavered, and since falling in love and under the sway of his mother, Monica had never felt so good.\n\nShe felt like a woman. She felt beautiful. Cherished. Desired. And just a little deliciously, excitingly submissive.\n\n\"Fuck me, Casey,\" she huffed. \"God, yes... yessss... oh fuck, make me your slut... fuck me... oh!\"\n\nCumming once more, harder and wetter than the first time, Monica panted out her love and her desire for more. Casey could not truly dominate her\u2014couldn't hold her under his sway with just a look and a grin the way she could dominate him\u2014but here in bed, relentlessly fucking her like this, Casey left her with no control at all.\n\nHis lips loomed over hers, gasping and grunting in time with her as he drew closer to his first release. Monica knew it wouldn't be enough for him. Knew it, and trembled with anticipation, and when she felt his cum shooting into her\u2014fiercely enough that she truly felt it inside her, flooding her and filling her with burst after burst\u2014Monica shook to another climax of her own.\n\nLater, she would reassert control. Toy with him. Make him love it. But for now, she was his cum-hungry slut and she would let him have anything he wanted until he was satisfied. Monica gave in as much as she could... and wondered, in brief flashes made up of more emotion than thought, if perhaps Casey really would one day conquer her.\n\nShe loved her control. Loved being dominant. And, as much as she dearly missed her own former dominant, Monica loved being in charge of her own destiny. But the fantasy of falling under Casey's complete sway excited her, thrilling her with a little bit of wonder and a little bit of fear, and as they fucked she couldn't stop flirting with the idea.\n\nWith the setting sun, Casey's passions\u2014and Monica's\u2014finally cooled. The product of their orgasms had soaked the comforter, forcing them to shove it off the mattress and relocate to a new corner. Positions changed. Laughter and affection blended with animal rutting.\n\nCasey dimly became aware that Tori was in the room with them as well, though she remained in a corner and watched. Eventually his curious gaze wandered toward her to find her seated comfortably, her feet up on an ottoman in a plush chair, dressed only in light blue negligee. She watched, her breathing slow and steady but heavy given the rise and fall of her chest, and one hand remained between her legs the entire time. Tori was utterly enthralled, and for all Casey knew, she'd been there for hours.\n\nBut this was Monica's time. Her presence and her pussy had Casey's full attention and commanded his desires.\n\nCalming, finally, but still enjoying their coupling too much to separate, Monica called, \"Tori, could you prop up some of our pillows, please?\"\n\n\"Of course, Mistress,\" she breathed. Tori rose and came to the head of the bed, where she arranged a good many of the plush pillows as Monica requested. She needed no instruction on the particulars or the details.\n\n\"Benefits of being open about your dominance,\" Monica winked at Casey, guiding him to sit back against the pillows. She settled into his lap, claiming his cock within her once more with fluttering eyes and a heartfelt sigh of pleasure. \"You can't have an assistant at the ready when you pretend you're one of the normals,\" Monica explained, grinding with him slowly. \"You can't rush your conquests into this sort of thing. You have to bring them in gently. But when you've really claimed someone, and she knows it, she'll be happy to play chambermaid.\"\n\nMonica held out her hand without looking. Tori placed a glass of water in her grasp, which Monica sipped and then offered to Casey.\n\nHe smiled with wonder, accepting the drink and then going back to slowly working Monica's hips around his cock. As with Monica's renewed sense of womanhood, this moment\u2014on top of everything he'd been through already\u2014made him feel like even more of a man. \"You usually have someone in here with you?\" he asked.\n\n\"When I'm at home? Not entertaining someone who isn't in the know? Absolutely,\" Monica answered. \"It turns me on. Turns you on, too, I can tell. It's not just the sex, is it? Not just the shapely body or the lusty eyes,\" she said, gesturing to the brunette still standing at the side of the bed. \"It's the control. You love having this control, don't you?\"\n\n\"I do,\" Casey nodded. \"I do.\"\n\n\"You had me for awhile there, too,\" Monica admitted, her breath still not quite under control. \"Could you feel it?\"\n\n\"I could,\" Casey said, \"but I didn't really think about it. When things finally calmed down, I just figured it was my imagination.\"\n\n\"Maybe it was,\" Monica shrugged. \"Maybe it wasn't. I don't care. It was great. No complaints here.\"\n\nHe worked her on him, just enjoying her beauty and their intimacy. If this didn't make them cum, that was completely fine. They would again, eventually. Many times.\n\n\"I like having you in the driver's seat, Casey,\" Monica told him. \"Don't be shy. Take what you want, as long as you want.\"\n\n\"I'm, uh...\" he grinned a bit sheepishly, \"a little hungry.\"\n\nMonica smiled broadly. \"Dinner will be whenever we want it. Tori will go get it for us. And then you go right back to having me however you want me, alright, lover? Don't worry about taking too much time. I find sex much more enjoyable when there isn't any time limit.\"\n\nHe nodded. \"Yeah, I can appreciate that.\" His eyes glanced around the room again, taking in his surroundings. It was then that he noticed there were no clocks. \"And if we fall asleep?\"\n\n\"Well, I'm not going to fall asleep with you fucking me,\" Monica chuckled, \"but you let yourself relax and drift off whenever you want. I'll be here in the morning. Furthest away I'll be is the bath over there,\" she explained, gesturing to the master bathroom. \"I want you to have all of me that you want, Casey. Have me until you're sated and you want something else, and don't worry about making me feel unwanted. I know better. I'm the one who set all this up.\"\n\n\"You know it might be awhile,\" Casey warned. \"I'm crazy about you.\"\n\nTears shimmered up in her eyes. \"I know. I'm in love with you,\" she said, leaning in to kiss him gently. He felt her cool tears against his cheek, and heard the emotion in her quiet voice. \"I don't want to play games with you for now. I want you to have all of me you want, and then I want you to be a real dominant and have fun, okay?\"\n\n\"No argument from me,\" Casey assured her.\n\n\"Your cock is so powerful. So strong. Hungry. It needs more women than just me. It needs to dominate. That's why I've got some girls here to share... and there'll be more before long. When you get used to it and you're in control, you'll go out and building your own harem, just like I've got my stable of studs. But for now I want you to share my women. I want you to get a feel for your dominance and how to claim women here, with them. In a safe, private environment, where you don't have to worry about rearranging their lives or covering things up from their friends and loved ones. You're going to have a huge harem, but for now, we start here with some girls who know what it means to be conquered.\n\n\"They know it's coming. They know they're going to be fucked and claimed, but they also know I'm still keeping them, too. They'll do anything you want them to, but right now that's because they know I'm okay with it. They know I'm okay with you dominating them, and so they'll give in... but nobody does that intentionally. You still have to claim them. It might be prearranged, but it's real and it's for keeps.\n\n\"I want them to be our girls. For good. To share. Okay?\"\n\n\"How can I say no to that?\"\n\n\"I don't see how you could,\" Monica smiled back at him.\n\n\"Still,\" Casey murmured, his lips coming down onto her nipple and kissing it softly, \"there's no rush, right?\" His mouth and tongue teased her, making her tremble with delight. \"I don't know when I'll have had enough of you.\"\n\n\"You'll want something new eventually, just to stretch yourself out,\" Monica assured him, encouraging his kisses with a hand on the back of his head. \"But we'll never really have enough of one another, Casey. Don't worry about that. Fuck every woman in the city and enjoy the hell out of it... we'll still want one another.\"\n\nTheir eyes settled in on one another as Casey gently bucked and rolled her in his lap, cradling her ass somewhat with his thighs. Monica settled into it, happy to let him fuck her like a champion enjoying his prize as long as he wanted.\n\nLate in the morning, he awoke to a warm, affectionate mouth. In the first haze of waking, he didn't know whether he stirred first or if the mouth wrapped around his cock to rouse him, but he didn't mind. Casey reached down, found the head that serviced him and encouraged it with a gentle, soft push.\n\nHe didn't open his eyes. He wasn't sure, entirely, whose mouth it was his cock now occupied, but whoever serviced him knew better than to tease or caress him as he woke up. He wanted to be inside someone, to be taken in deeply, and this mouth offered just that. Casey wondered, absently, if that was Monica's hair he touched, or Tori's, or someone else's.\n\nThere was surely a voluptuous naked woman laying next to him. He could feel more than enough of her to know that. She draped herself along his side, her breasts pressing into him and his arm under her shoulders in a leisurely possessive hold. But it was the mouth sucking his cock that enthralled him.\n\nHe didn't know whose mouth it was. All he had to do to find out was open his eyes, or speak.\n\nHe did neither.\n\nHe could figure it out if he just thought about it hard enough. Tori had longer hair. Monica had more curves. He could make some educated guesses based on feel and the tone of breathing alone, but he just didn't care. He had a naked woman on his arm and another sucking his cock and he didn't even need to care who was who.\n\nCasey's breathing deepened and quickened as his pleasure grew. Whoever she was, she was giving him a great time. The woman laying on his left stirred, let out a breath, and then began kissing and licking his neck. Everyone was awake now. No reason to hold still.\n\n\"Aw, fuck yes,\" he sighed, stretching out his legs and pressing his groin into the face of his eager vessel. He heard her exhale, felt it on himself, and didn't worry about her discomfort. He didn't push long, but it felt good to know that he could. She was certainly willing and welcome.\n\nLips and a tongue drifted up his neck. They nibbled on his ear. Traced along his jawline. He felt his companion's breath on his face and her breasts resting against him. So good.\n\nHe'd woken up to similar bliss yesterday, but this was somehow even better. His lusts seemed to know no bounds; he needed more pussy, more sucking, more surrender. Monica was right\u2014feeling like things may never end made them even better.\n\nHis pleasure increased. He felt himself growing close to climax, trembling with anticipation and enjoying it enough that he was happy to let it linger and equally happy when he realized he'd crossed the point of no return. \"Gnnhh. Mhhh,\" he grunted as he shot into the mouth of his gracious bedmate. She couldn't swallow it all immediately, but she gulped with thirst and diligence. Definitely not Monica. Still perfectly enjoyable.",
        "Monica leaned in and kissed him deeply as his orgasm ran its course. He knew who was who now. The sensations were too distinct and he was too awake not to differentiate. When Monica's mouth finally came off of his, he sighed, \"Thank you.\"\n\n\"My pleasure, sir,\" said Tori when her mouth came off of his cock.\n\n\"How are you feeling?\" Monica asked.\n\nHe let out another contented breath. \"Horny as hell,\" he said. \"Just like yesterday. And the day before.\"\n\n\"Anything in particular you'd like to do about it?\"\n\nHis eyes slowly opened. She was beautiful. She hadn't showered yet, having woken up along with him. She meant everything to him. But as she had predicted, his thoughts turned toward other opportunities. Monica was incredible, felt amazing... but he felt the need to stretch.\n\n\"I want someone new for a bit,\" Casey said finally, and a mild thrill ran through him just for the sake of saying it. He saw the glitter of approval in his lover's eyes. \"Yeah,\" he confirmed with a nod. \"I'm ready. I want to claim someone. I don't know how to say it, but I feel it.\"\n\n\"You said it just fine, lover,\" Monica assured him. \"Shall I have Tori bring you a fresh piece of ass? Anyone in particular you have in mind?\"\n\n\"They're both incredible,\" he shrugged, and gave it a little thought. God, this was crazy. But awesome. \"I think... I have the run of the house, right?\"\n\n\"Absolutely. I have some rules to put you under for the time being, though,\" Monica noted. \"You are not allowed to leave the grounds. Wander all you want, go wherever you want, but don't leave until I say it's okay\u2014and it'll be days, if not weeks.\n\n\"You can have anyone here, at any time. Even me, unless I tell you otherwise,\" she winked, reminding him who was really in charge. \"Several of the girls know how to access the credit cards, too. If there's anything you want, they'll either go and get it or have it delivered. If you want to shop, shop. If you want Chinese or pizza or whatever, just have at it. But you are not allowed to call or email anyone. For now, you're grounded here. Understood?\n\n\"Yes, mistress,\" Casey smirked.\n\n\"Cute,\" Monica smiled back. \"Like I said, I need to keep you in check while you get used to all this. Have all the fun you want here, and if there's something you want that isn't here you need to let me know. It won't be long. I'm sorry, but it's necessary to make sure you adjust safely.\n\n\"I don't mind,\" Casey assured her. \"There's plenty here to occupy me for awhile anyway.\"\n\n\"Hm, you'll be surprised at how quickly you get hungry for more,\" Monica grinned. \"But let's not worry about that now. Back to the moment. This is exciting. What do you have in mind?\"\n\n\"Do you plan on watching?\" he asked.\n\n\"Not unless you want me there,\" Monica answered, her eagerness showing. \"Whatever you want, lover. This one is all yours. Doesn't have to be a production unless you want it to be, but Tori and I are happy to set up whatever you want.\"\n\n\"No, nothing like that,\" Casey shrugged. \"I just want to... I dunno... take a shower, wake up, and then walk out and fuck the first woman I see.\"\n\nMonica's grin could hardly shine brighter. \"Tori, get the shower running for Casey, would you?\" she asked sweetly. \"I don't want to keep him from following his urges.\"\n\nThe shower offered his first time alone in days. He and Monica had been inseparable since their first coupling, parting only for very brief trips to the bathroom. They had bathed together, eaten together, and slept together, all of it charged with romance and sexual need.\n\nHe slowly scrubbed himself down in the shower, taking his time and letting his mind wander more than anything else. Long, hot showers had been a luxury in the Army. Now they could be an everyday thing once again. Hell, he didn't even have a job or social obligations to meet. His only role was in being Monica's lover... and growing into his new dominance.\n\nAs his mind wandered, though, he thought less of Monica and more of himself and of other desires. The thought of claiming other women stuck with him. It filled his mind with fantasies, which in turn filled his body with desires.\n\nEven relaxed, his cock remained long and thick. It hardly shrank at all, but as his desires built again, it grew tall and strong once more. It felt good. Everything about his body felt good now. Monica had told him he was sexy, and powerful, and strong... but now that he was alone, and not distracted by her and his need for her, he began to feel it. He wanted to enjoy it.\n\nCasey stepped out of the shower to find Tori kneeling, waiting for him. Their eyes met. \"I thought I might help you dry off, sir,\" she said softly. \"I hope this isn't wrong.\"\n\n\"No,\" he shook his head, smiling a bit. \"I might like that.\"\n\nShe nodded, rose, and stepped forward with a towel in hand. He allowed her to dry him off, enjoying her touch as she ran the towel over his firm body and paid special attention to his cock. Casey touched her, too. He enjoyed her naked flesh, and the smell of her arousal, and most of all her complete and willing subservience.\n\n\"Sir, I have a question,\" Tori said, kneeling now. Her eyes lifted up to his. \"Do you wish me to call you 'sir?' or Casey? Or anything else?\"\n\nHe considered it, drinking in her stare. \"I think I may want you to just call me Casey later. I think I'd really like for us to be friends and maybe lovers.\" He paused. \"But for now I want you to call me master.\"\n\nShe shuddered. Casey recognized redoubled arousal. He had just turned her from a submissive lover to a bitch in heat with a single order\u2014but a well-disciplined one. Her breathing remained heavy and her body trembled, but she nodded. \"Yes, master,\" she told him.\n\n\"I'm going to be very selfish for a bit here, Tori,\" he told her evenly. He didn't know whether he was just pretending or if he really felt like talking this way, but it felt natural. \"I'm going to fuck other women. You're going to be one of many.\"\n\n\"Yes, master,\" she consented softly.\n\n\"I want you to stay with me. I want you to be ready to follow instructions for me. Like Monica said before.\"\n\n\"I am your faithful attendant, master,\" Tori said, her voice showing some mild amusement and excitement at her role. \"I'm eager to please you in any way I can.\"\n\n\"For now, I want you to stay close but out of the way. I'll let you know if I want anything.\"\n\n\"Yes, master,\" she said. \"You should know that Monica is still at home, but has moved elsewhere in the house. She wants you to enjoy your dominance without being distracted by her dominance over you.\" She paused. \"Mistress has more for me to pass along to you, but gave me conditions as to when I should tell you. If you want to know now, I'll tell you, master. But otherwise I am instructed to wait until the moment.\"\n\nCasey considered it for a second and nodded. \"Thank you.\"\n\nHe walked naked out of the spacious bathroom, finding the bedroom unoccupied as he had been told. The signs of his days and nights of lovemaking with Monica were still on the bed: discarded sheets, wet spots, pillows in disarray. It left him feeling proud of his abilities.\n\nHe walked out of the bedroom and down the stairs into the living room feeling potent and hungry.\n\nDylan was in the living room. She sat on the couch, reading a book, dressed once more in stockings, garters and an open-cup shelf bra that displayed her beautiful breasts. As Casey walked toward her, she set the book aside and stood, looking on him with wonder.\n\nThey didn't speak. Casey realized she wouldn't speak until spoken to, not now, not in this moment. He thrilled at that. This beautiful woman stood waiting to follow his commands.\n\nHe didn't speak it so much as he thought it. He remembered the moment Monica claimed him, and how he had felt. Subconsciously, he projected his desires at Dylan, willing her to understand and to embrace them.\n\nDylan stepped forth, knelt before him, and took his cock in her hands. She stared up at him with wide-eyed wonder and wanton lust before her mouth came to his cock. She kissed it on the side, still exploring, but knew her role here was to service and not to tease. Dylan's mouth opened to accept Casey and slid around his cock. She let out a moan of pleasure on their first contact, and then began working at taking more and more of him within her.\n\nHe stared down and experienced her for awhile, letting her sink further and further into her need to serve and please him while his power rose. Her eyes searched for approval. Her breath conveyed her gratitude. He felt selfish. He felt sexy. He felt dominant. He loved it.\n\nCasey snapped his fingers and gestured for Tori to come up from behind him. She did, instinctively knowing what he wanted. The lithe beauty draped herself against his back, caressing his naked form with her hands and her own nude body as he accepted the services of his new woman.\n\n\"Open yourself to me, Dylan,\" Casey murmured.\n\n\"Mmmmhhh,\" Dylan responded, unable to form words with her mouth so occupied.\n\n\"Make yourself mine. Give in to me. You want it so bad. You want to be mine, don't you? It feels good.\"\n\n\"Mmmh-hmm,\" Dylan confirmed. Her body and her tone took an erotic twist.\n\n\"You want to be my dirty girl, huh? My gorgeous little slut? Yeah. So good. So good for both of us. Open yourself to it, Dylan. Make yourself my bitch.\"\n\n\"Mmhh!\"\n\n\"Give in, Dylan. It feels so good for both of us, doesn't it? This cock? Nothing more important in the world. Give yourself to this cock and please it and love it.\" His voice trembled as he finished speaking. He felt several quick spasms in his groin, warning that he was at the point of no return. Part of him wanted to pull out and save it for later... but then he remembered he didn't need to wait.\n\n\"Love it. Love it all you want. There's nothing better in the world, Dylan. Who cares what other people think? Ahh. Yeah. You love being my bitch. Makes you feel good. Sexy. Beautiful. Give yourself to me, Dylan. Ah. Aaahhhh!\"\n\nHis hands pushed her head down on his cock. Dylan closed her eyes and accepted him willingly, even greedily as he came. She couldn't swallow everything he gave her and cum escaped her lips to decorate her chin and drip down her chest but she wore it as a prize as she swallowed the rest.\n\nDylan remained on her knees as his orgasm abated. She licked and stroked him while Tori continued to shower him with lazy, serene affection from behind. Casey stood and bathed in it. It was like being worshipped.\n\n\"You're so sexy, Dylan,\" Casey told her. \"So hot. Have fun with it. Be sexy for me. Tempt me. Pose for me. All the time. I'll love it, and I'll love taking you.\"\n\nThere was more to do\u2014more pleasure to be had. And there was a final step to take in conquering Dylan. Casey touched her and guided her to her feet, leading her to sit sideways on the couch. Dylan looked up at him with wide, dazzled eyes as Casey laid her back, and spread her legs, and brought his glorious cock to the soaking wet lips of her pussy.\n\nCasey knew from his experience with Monica how it felt to be claimed. He knew the sort of heaven Dylan was in as he slowly pushed into her. She needed no foreplay, nor romantic talk, nor assurances of respect. Given over entirely to submissive lust, Dylan just needed to get fucked.\n\nHe speared her there on the couch, and his mind swam with pleasure. So did hers. When Casey opened his eyes again, he found his sexy conquest looking back in open-mouthed awe. She couldn't take her eyes off of him, and couldn't get over the ecstasy he'd granted her. Dylan's legs spread open wide for him; her hands reached forward to pull more of him in, as if there could be more when he was already buried in her to the hilt, and her gasping breaths sounded out little tiny climaxes with almost every thrust. \n\nThe shameless cum stains on her mouth and her chest made her all the more attractive to him. She bore his mark. Opened herself for him. Gave in completely. Casey knew, even before he rode her to their first shared orgasm and before his cum filled her womb, that she was already his.\n\nAgain, Tori loomed in behind him. She did nothing to interrupt, but rather reminded him of how far his power went. His women would share him, willingly and eagerly, all to please him.\n\n\"Master,\" she murmured in his ear as he continued to impale Dylan, \"I am to tell you that there will be more of the harem will be here soon.\"\n\n\"Unh. Unh. Unh. Ooh yes,\" Dylan whimpered softly underneath him.\n\n\"Jessica remains here, waiting to be claimed,\" Tori continued, \"but there will be more.\"\n\n\"How many?\" Casey grunted.\n\n\"At least ten, master,\" Tori said. \"Mistress wishes you to indulge as you please, and to hold nothing back... and to send for her whenever you feel like it.\"\n\nCasey thrust powerfully into Dylan again and again, causing her to cry out in a long, loud moan of ecstasy. He knew how she felt.\n\nHe'd make other women feel the same way very shortly.\n\n*\n\nAuthor's post-script: I am torn on which direction to take this. If you wish to continue following the story and you have a preference, please comment: do you wish to see Casey's harem built up within the home, or would you prefer to skip over all that and see the story move on to Casey going back out into the world, exercising his power on his own and encountering other dominants? That will come along sooner or later anyway, but I wanted to know if all the indulgence is getting boring or if it's fun enough in its own right to continue.\n\nThank you for reading!"
    ],
    "authorname": "dirtysillythoughts",
    "tags": [
        "mind control",
        "female dominant",
        "male dominant",
        "blowjob",
        "harem",
        "lingerie"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/becoming-dominant-ch-04"
}