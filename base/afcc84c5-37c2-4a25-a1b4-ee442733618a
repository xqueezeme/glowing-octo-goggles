{
    "title": "Amazonian Womb Worms Ch. 01-05",
    "pages": [
        "<p align=\"center\">Chapter 1</p>\n\n<p align=\"center\">Slimy Invader</p>\n\nThe deep mud squelches as it sucks at my knee-high boots, making this trek through the suffocatingly humid rainforest even more grueling. In an attempt to make traversing this mud easier, I try following in the footprints of our Amazonian Jungle guide, Anton Santos, who's ahead by a few feet, clearing the dense jungle brush with broad swings of his machete. My best friend, Derek Aider, follows close behind me, filming our journey for his travel vlog. Claire is behind him and Kody, her boyfriend, holds up the rear.\n\nUgh, I feel so gross, I think, brushing off the blonde ponytail hairs that are clung to my neck.\n\nThe five of us have been hiking since first light around 6:30 a.m., so everyone's skin has been glistening with sweat all day just like I have. I'm sure they're all as tired as I am too. Unfortunately, no one is as miserable as me, because I woke up today with menstrual cramps, which means I'm probably going to start spotting soon, and I feel like a jaguar might sniff me out like a shark would and pounce on me from a tree...\n\nNot only have we been hiking for six hours almost non-stop, but we've been trekking through Brazil's mostly uncharted Vale do Javari territory for almost a week now, so there really hasn't been much time to relax between our encampments, not with all the exploring we needed to do before today's journey back to the river camp where the rest of our expedition party is waiting for us. If we don't get back to the camp before sundown, they'll be forced to venture into the rainforest to search for us, unless they decide to just leave us stranded here.\n\nVale do Javari, or Javari Valley, is not only one of the most unexplored regions of the world, but it's also the most uncharted land in all the Amazonas. That's partly because there are uncontacted tribes living out here, so the entire region is protected by FUNAI, Brazil's Indian affairs.\n\nEncountering hostile tribesmen isn't the only threat out here, there are also jaguars, deadly spiders, killer snakes, and potentially other lethal threats lurking about. But thankfully, we haven't crossed paths with anything too terrifying, aside from a few large snakes, massive arachnids, and other creepy crawlies. Oh, and we did have a few scares from spider monkeys swinging through the canopy overhead. All that aside, we got to see and photograph tons of strange plants, beautiful birds, bizarre bugs, and caught glimpses of elusive animals that none of us came across in all our extensive flora and fauna research leading up to this expedition. Hopefully something we filmed will turn out to be a new discovery. Hopefully some of the plant samples we took will lead to a medical breakthrough or something.\n\nExploring uncharted regions of the Amazon has been my dream since the first rainforest documentary I watched when I was nine. That documentary why I went to Jacksonville University and majored in biology with a focus on ecology and wildlife bio. That's how I ended up working at the Florida Fish and Wildlife Conservation Commission (FWC) as an Associate Wildlife Biologist researcher. That documentary and others like it is why I'm out here hoping to discover something new so I can use it as my focus for my undergrad research project--a project that I'm hoping will help me get accepted to the University of Florida Ph.D. Zoology program next January.\n\nNone of this would even be possible without Derek's 10 million subscriber vlog. He's made a fortune from YouTube ad revenue, and he's made tons of connections who can help him find ways into restricted regions like this. It's through one of those connections that Derek met Anton, one of the only people in all of Peru who leads expeditions to the deepest depths of the Amazonian rainforest when he's not doing solo expeditions. To meet him, we had to fly to Iquitos, Peru. Then we had to take a multi-day trip down the Amazon River by boat to get to Anton's home in Benjamin Constant in the State of Amazonas, Brazil.\n\nAfter paying him $20,000 to be our guide, Aton took us in his boat down the Javary River to the Itaquai River. We then we navigated twenty miles down the Itaquai and docked at his secluded camp near the river's confluence with the Itui River where he has tents and an impressive jungle hut set up. That's where the rest of our group is waiting. From that camp, we hiked on foot another thirty to forty miles through dense jungle following the route he's explored countless times indicated my carvings he's made in the towering trees' bark, stopping to make camp at areas he previously cleared and camped in before. A few times, we ventured from those temporary camps to explore areas he's never been. And one of those uncharted regions is where we're on the way back from today.\n\nThe pressure in my bladder becomes more and more unbearable as we ascend the steep, muddy hill before us. On the way up, we have to grab onto branches and roots to pull ourselves up, reaching back to help pull up the person behind us. This morning's torrential downpour has made our previous path back to our last camp impassable thanks to some flooding, so we had to find another way around. And this path is by far one of the worst we've traversed.\n\nWhen we finally get to the top of the hill, everyone is panting hard, so we take a very brief water break while Anton scouts ahead.\n\n\"Come, this way,\" Anton says, pointing at a clearing with his machete, leaving before I have a chance to announce that I need a bathroom break.\n\nA few feet later, I'm on the verge of peeing myself. \"Hey,\" I call out, placing my hands on my hips and tipping my nose to the jungle canopy above while I take a deep breath. \"I have to relieve my bladder.\"\n\n\"Okay, okay,\" Anton says, nodding. \"You go on. I'll check up ahead.\"\n\n\"You just had to guzzle, like, a gallon of stream water through your Life Straw, didn't you, Lena?\" Claire teases with a smirk. \"If we get left behind for being late, it's your fault.\"\n\n\"Yeah, yeah,\" I say, giving her a playful shove on my way to the cluster of trees.\n\n\"Since we know you're a shy pisser, we're going to head that way with Anton to give you a little privacy, okay, Blue Eyes?\" Derek says with a charming smirk. God, that smile makes me want to tell him how I feel.\n\n\"You guys are the worst!\" I say as I slink behind the thick trunk of a towering tree.\n\nWhen I'm sure everyone is a good bit away, I head over to a tree that has a thick wall of leafy bushes behind it. I look left to right, brushing leaves away with my shoe. Satisfied that it's all clear, I set my backpack down before I unbutton my shorts and pull them down with my undies, eyeing the tiny spot of blood in the crotch of my underwear.\n\nGreat, I started spotting early...\n\nWhen I'm sure there are no creepy crawlies or murder snakes lurking nearby, I squat down by the base of tree behind me. As a powerful stream of urine blasts the soil below, a small rodent comes out of the brush ahead and starts coming my way. Something rustles in the fallen leaves and brush to my right. Then, as I turn to the source of the sound, a large brown spider nearly the size of my hand scurries out from under the tree and runs right past me after the rodent that just barley races off. It scares me so badly that I spring up while still peeing, and as the spider turns to me and rises onto its back legs, I shuffle back as fast as I can, forgetting my pants are around my ankles.\n\nAnd I fall backwards, my bare ass hitting soft leafy plants beside the tree before I drop almost a foot down an unexpected drop. I land back first onto a muddy slope that I begin to slide down. As I try to scramble to my feet, frantically grabbing for firm ground, I slip and begin sliding down the steep hill even faster until my attempt to stop sliding makes me go into a dizzying roll.\n\nI scream at the top of my lungs during the tumble down the slope that seems to get steeper and steeper until I roll through a pool of muddy water only to drop off a ledge and splash down into cool water, my head, butt, and shoulder blade all hitting something hard.\n\nI'm so disoriented that I lay there on my back for a bit, holding my head as the shallow stream washes over my body, looking up at the high walls of mud on both sides of me. There's no way I can climb those to get out of this muddy crevice unless I maybe grab the roots sticking out of the soil walls and hoist myself up.\n\nGroaning, I plant a hand down into the silt beneath the creek and sit up, looking at the hand that was holding my head.\n\nNo blood.\n\n\"Thank god,\" I whisper, wincing from the throbbing as I look down at the cuts on my right knee and left shin before eyeing the shorts and panties that are now only wrapped around one ankle as they flutter in the gentle current, clouds of mud pluming off them into the crystal-clear water. \"Derek!\" I call out in the direction I fell. \"Derek? Anton?! Claire?! Kody?\"\n\nNo response.\n\nAs much as I'd hate for everyone to see me naked from the waist down, I would be so damn happy if I saw them coming down the hill for me.\n\nFrantically, I investigate the area. Since there are no anacondas or anything swimming after me, I shift into a squat and start washing the dirt off my scraped elbows and legs. As badly as I want to clean the mud caked on my bare ass so I can put my pants back on, my booty hasn't been properly cleaned since my last shower at the Iquitos hotel, so it's best I save that area for last.\n\nThe last thing I need is an infection out here.\n\nAs the last bit of soil is rinsed from my wounds, a noise in the distance steals my attention. Looking all around in a panic, I blindly wash my arms off, glancing down at my body only for a second to see if it's time to move on to another area.\n\nWith my arms now clean, I begin washing off the mud on the part of my turquoise shirt covering my tiny breasts. Right when I look up at where I heard that noise earlier, I feel something cold against the inside of my bare right thigh, but I pay it no mind because I assume it's just cool water splashing me. But then I feel another cold sensation a little further up my leg near my crotch--a deliberate movement that feels like something slimy is quickly slithering its way up my inner thigh.\n\nMy eyes go wide and my mouth gapes open when I see this long, thick, pinkish worm with a head shaped like a narrow, phallic mushroom cap pushing against my labia.\n\n\"AHH!\" I scream at the top of my lungs, falling on my ass as I reach for it.\n\nIts smooth, unsegmented exterior is so slick that the tubular worm slips through my hand, parting my folds and my hanging inner lips with its penis crown shaped head before quickly slithering into my tight vaginal opening. In the blink of an eye, four or five inches of the rapidly wiggling thing that looks like raw chicken breast slips deep into me hard and fast by pushing off the inside of my leg with this freakish tail that looks like a cluster of pink translucent gummy worms. The slick sensation of its girthy, squirming, pulsing invasion makes me whimper, and then the unwanted pleasure makes me moan.\n\nWhy did that make me cry in pleasure like a dick just went in me instead of a horrific giant worm?\n\nProbably because it feels like an actual cock--if a cock could wiggle and undulate.\n\nAs its sticky backend detaches from the space between my thigh and crotch, I pinch the base of the freaky tail hard right before the last two inches of creature can wiggle all the way in. It writhes violently as I pull its slippery, inch-and-a-half wide body out of me, and my pussy throbs from the sensation of its squirming girth slides back out of my tightness.\n\nA breathy \"oh\" escapes me as its wide head leaves me with a gushy pop, and as I try to carry it far away from my crotch, I notice a white, fleshy tube leading from its protruding red mouth to the inside of my vagina. There are also thin strands of thick, semi-milky slime stretching between its head and my opening like snot. And as I'm pulling further, a tugging sensation in what feels like my cervix makes me stop trying to yank it out of me.\n\n\"Ah-ouch!\" I pull again and it for sure tugs at my cervix. \"AH!\" I cry out from the sharp pain that throbs deep in my vagina. \"What the fuck... OH! No, no, no... please don't tell me that this thing is latched on to me or some shit...\"\n\nI pull again and more pain flashes from the entrance to my womb, so I bring the creature back towards my pussy and hold the squirming thing right outside my entrance while I brainstorming what to do. Now that I'm staring at it this close, I can't help but think how much its shaft looks like a leathery, veiny horse penis, but skinnier. The body looks like a horse penis, but the head of it looks like more like the tip of a human's cock...\n\nCurious as to what it feels like, I use my free hand to gently squeeze its body with two fingers. As I increase pressure, soft flesh begins to give way to dense muscle, and it legit feels like I'm squishing something muscular and powerful like a tongue.\n\nNo, actually, it feels like I'm gripping an extremely erect penis...\n\nThis worm's body is much firmer than the Amazonian giant earthworms we found a few days ago, or any other worm I've ever touched for that matter. I then wrap my thumb and pointer tightly around it like a ring, stroking the worm's slick shaft gently from tail to head to make sure there are no hidden barbs. On the underside of it, it's covered with countless, soft hairlike setae--bristles that help wormlike organisms crawl up surfaces, even wet surfaces like my leg. The rest of it is completely smooth. Aside for a few veiny lumps and wrinkles, I don't feel any bones, just taught muscle. As my fingers stroke past its body's halfway point, it flexes hard then wriggles side to side like a powerful snake. The worms power is staggering...\n\nGeez... This thing is unlike any worm I've ever held while fishing with my dad. And it's definitely not a snake. It seriously looks like some giant, human-like creature's penis fell off and evolved to survive on its own.\n\nAs my fingers bump into the extremely firm, curved flesh at the base of the worm's eyeless head, the phallic tip throbs and, the next thing I know, opaque, noodle-looking tentacles burst out from its mouth tube and quickly grow outward toward my labia like vines made of fleshy threads. The tentacles hit my outer lips before I can pull the creature away, and the glistening protrusions quickly web across my skin as more gooey looking tendrils sprout and branch out across my outer lips. And as I'm carrying it away, the sticky tentacles and tendrils pull at my skin like gorilla tape, and they don't detach. When I try to rip the branched noodlelike appendages and the main proboscis, it just feels like I'm trying to pull apart an unbreakable, stretchy polymer...\n\nMy eyes go wide, and I freeze. I've seen something this before in my invertebrate biology class... Nemertea, or ribbon worms, fire their long, branched proboscis to deter predators or entrap prey... That's what's spreading across my skin--that's what's latched onto my cervix...\n\n\"Or is in anchored in my cervix?\" It does feel like something is pulsing beyond the pinhole opening.\n\nMaybe if I put it back inside me it'll suck its proboscis back into its mouth.\n\nI bring the penis shaped creature back to my opening and the mass of tendrils on my labia immediately retract into the proboscis the second I mash its thick head between my inner lip's flesh curtains. Holding tightly onto the hard ring at the base of the tail, I reluctantly plunge it into my vagina.\n\nFuck, I hate that this feels like a dick going it. A writhing slimy dick, but a dick none the less.\n\nSlowly, I slide it into me inch by inch, but the worm wiggles excitedly and undulates, quickly burrowing all eight or nine inches of its shaft into me. When I feel it bottom out, something tickles my cervical hole. That's when I pull it back out as fast as I can, stopping as soon as I see the proboscis is still tethered inside.\n\n\"Fuck!\" I shout, plunging the slimy creature back in.\n\nIn slow and out fast, in slow and out slow--I basically fuck myself over and over with the worm creature at varying speeds like it's a living dildo. The longer I go at it, the more pleasure courses through me.\n\nThis is so gross! \"Ugh...\" Why does it feel so fucking good though? I moan as a climax builds. There's no way I'm about to come from this...\n\nEvery time I pull it out, I find its white mouth tube is still attached inside of me.\n\nEvery time I pull it out, it pulls my cervix at a shorter and shorter distances from my opening, like it's reeling itself in.\n\nEvery time I pull it out, its body seems much longer and thinner, its mushroom cap head appears narrower like Sharpie marker cap, and its midsection seems to get girthier like it's rearranging its insides and moving its fluids towards its tail so it can shrink itself to fit into a smaller hole.\n\nEvery time I pull it out, it's covered in even more of that milky slime that looks like it's oozing out of its mouth and from the rounded base of its head. And I push it into my cunt for the twentieth-fifth time, slickness gushes out of me and coats my fingers. Just like that, I lose my grip on its tail as I'm trying to pull it back out.\n\n\"No! No, no, no!\" I panic, plunging my fingers into my vagina and trying to grab it\n\nThere's too much of that slick goo inside for me to pinch it when I feel its widening tail rapidly inflating like a pufferfish.\n\nI lay back in the stream, part my labia, and try to flood my cunt with water before frantically scooping out the slime. Globs of thick slickness gushes out of me into the stream, turning it cloudy like semen was just ejaculated in water. When it feels like the bulk of goo is out, I maneuver into a squat and try pushing the thing out like I'm attempting to give birth to it while also trying to frantically scoop it with my finger. That's when I feel its long, slick body coil up around my cervix. I pull my fingers out and remain squatted, hoping that if I stop antagonizing it, it will uncoil.\n\nI'm panting hard as I sit on my haunches in the stream while waiting for it to move. A few seconds later, it slithers inside and my core spasms from the unfortunately pleasurable sensation. I feel a bulge in my vaginal canal as it wiggles down to my opening headfirst before flips around inside, its mushy tail brushing my G-spot hard before teasing my opening with a quick twist of its body. That makes me moan so hard, birds squawk above and fly away.\n\nAs I slowly plunge my fingers into my slippery hole to sneak up on it, there's a tickling sensation in my cervix that quickly spreads deeper as the head of the thing aggressively nuzzles the conical tip of its head against my cervical opening. When my finger meets the cluster of wormy growths protruding from its tail end that's wedged in the tightness right behind my vulva, it feels firmer and wider than before, like it fanned out and hardened. I can't get my fingers around it no matter how hard I try. It's like the creature's tail has formed a taut, fleshy mesh that's somehow clung to my vaginal walls and sealed me up.\n\n\"What fuck?!\" I say through an exasperated breath, feeling around for a way past the firm little tubes while the creature writhes violently inside me.\n\nSuddenly, pressure builds in the entrance of my cervix like its pulsing, rapidly writhing body is trying to force the tip of its shrinking head into my uterus...\n\nAll the way around the tail, there are plump, wormy protrusions that feel like soft gel vitamins are glued to my flesh! And as I scraping at the edges with my fingernails in an attempt to pry them off, a strange tingling sensation in my middle finger forces me to withdraw it from my pussy. That's when I notice the tiny, pink, hair-like tendrils threading underneath the first layer of my skin, branching out and growing just like the tentacles of the mouth proboscis.",
        "I feel like something weaving under my skin should hurt, but it just tickles and feels a bit numb.\n\nWhen I pull my hand further away from my opening, a clear, pink worm protrusion from its tail stretches out of my hole like a rubber hose only to snap back inside when the roots stretching from my finger rip apart. Suddenly, I become aware of that same tingly, numb feeling behind the opening of my vagina.\n\n\"Oh my God... its tail rooted in my vaginal walls!\" I mutter to myself, my jaw trembling. \"That's why I can't get past it...\"\n\nOut of nowhere, the tail end flexes hard inside of me, pressing against my inner flesh with surprising force right as something firm and wide pushes deep into my cervical opening, stretching the tiny hole like a man's large finger is trying to prod its way in.\n\n\"Ah!\" I cry out, doubling over and collapsing into the stream on my knees, planting one hand down while the other desperately claws at the tail's worm mesh.\n\nThat was its head that just pushed into my cervix! It shrank its head and used its fucking slime as lube to push its way in!\n\nMy uterus begins contracting somewhat rapidly, like it's being forced to by the worm. The thing wiggles violently, pulsating as its tail pushes harder against the inside of my opening. The pressure in the passage to my uterus grows as if the worm is dilating me inch by inch by re-expanding back to its original girth while inside of my cervix. It feels super uncomfortable, but it doesn't hurt like I know it should. And I know it should hurt because I once accidently pushed the handle of a toothbrush into that forbidden hole when I was 18-years old. That was much narrower than this worm and it hurt like hell.\n\nHaving anything this wide probing my cervix should be excruciating, but it doesn't. It just feels uncomfortable in a weirdly good way, like the worm anesthetized my cervix with a neurotoxin the same way its tail numbed my finger and vagina...\n\nThe creature throbs hard and rapidly like an orgasming cock while the sensation of something wide and slick spreads its way deeper into my uterus by the second.\n\nAs I frantically finger the edge of the tail mesh to no avail, the tickling I felt in the entrance my cervix earlier has subsided, but--\n\nNow it feels like something is tickling the inside of my fucking womb!\n\nAll I can imagine is that the worm-thing's branched proboscis is spreading further inside, webbing across my uterus and into my fallopian tubes to better anchor itself--because that's exactly what it feels like.\n\nSuddenly, I feel flushed and pleasant all over, like that time I took Vicodin after I got into that car accident a few years back. The tickling deep in my womb makes my abdomen spasm. The violent wiggling in my vagina, the pulsing of its girthy upper half in my cervix, and the flexing of its tail all work together to send waves of pleasure surging through me, triggering rhythmic contractions that ripple through my vagina. The climax makes my body weak--it makes my skin tingle. My limbs turn to noodles.\n\n\"OOH-UGH-AH-AH!\" I moan louder than I've ever moaned before. \"Why?\" I pant. \"Why does this feel so fucking good?\" I pound my fist into the stream, splashing water up toward my face.\n\nIt's like it's trying to incapacitate me with the mother of all orgasms so I can't get it out.\n\nWhen I feel the creature throbbing in my cervix as it pushes deeper into me, when I feel the worms firm head smack against the wall of my uterus, I know I'm running out of time to get it out of me before it burrows all the way into my womb. The thought off all the horrible things that could happen after that sends a burst of adrenaline through me that snaps me out of my orgasmic high.\n\nI need to find a stick or something to pry this tail away! Or I need to find the others so Claire can help me! She's been a nurse for a year now, so I'm sure she'll figure out a way to help me without hurting me.\n\nWith shaky legs, I stagger to my feet then grab my shorts and panties from under the water. Now I jog up stream, my hand cupped over my vagina while I continue fingering at the tail mesh. As I slosh through the ankle-deep water, I frantically look left and right in search for a break in the mud walls trapping me down in this crevice carved out by the stream. Up ahead, I spot mossy patch that leads to a dry soil where sunlight is beaming in through a break in the rainforest canopy. A foot away from the mossy bed, I feel the pulsing thing squirm deeper with a hard, twisting push off its tail anchor.\n\n\"OHHH!\" I moan as the sensation makes my cunt throb in undulating waves. My knees buckle from the explosion of pleasure.\n\nAnd, as what feels like the last third of it burrows toward my womb, the taut, wormy tail protrusions soften against my fingers, and the mesh detaches from my opening. The rush of endorphins has me super delirious, but I manage to react fast, plunging my thumb and pointer deep into my vagina, basically fisting myself using its slime. The second that I pinch the tail, it slips through my fingers. I try again, skidding to a stop in hopes that I can squat fast and grab the thing in time.\n\nExcept, I don't stop upright. My wet boots slip across the moss bed and I fall back hard, hitting my head on the spongey rock with a bounce.\n\nThings get blurry. Dizziness consumes me and clouds my thoughts worse than the dreamy bliss that's overtaken me--worse than being blackout drunk. But none of that stops me from reaching into my pussy and grabbing the tail. When my fingers finally find the wormy cluster, it's right up against my cervix... That means eight or nine inches of this cock-shaped worm has already invaded my uterus...\n\n\"Ugh...\" I groan weakly. \"No...\"\n\nI shove my fist in so hard and deep that the rapid stretching hurts, but my self-fisting allows me to reach and eventually grab the ring at the base of the cluster that's pressed firmly against the bottom of my pussy. I pinch it so hard between my knuckles and my fingers that the thing begins squirming and flexing more violently than ever before inside my tight canal, its upper half lashing my inner flesh with hard slaps of its head and body against my uterus's walls in a way that can only be described as what I imagine it'd feel like being slapped by a hotdog, but from the inside...\n\nI yank the thing hard and fast as consciousness begins to fade. My vision begins to go black as my hand leaves my vagina with a gushing, sticky sounding pop. Though I don't see what I'm holding, I feel the tail cluster still squished between my fingers.\n\nAs things fade to black, I toss the firm thing as far into the jungle as I can.\n\nThen darkness consumes me.\n\n<p align=\"center\">Chapter 2</p>\n\n<p align=\"center\">Lost &amp; Found</p>\n\nWhen I regain consciousness, it's pain flaring in the back of my head that greets me first.\n\n\"Lena!\" a faint voice calls in the distance like the ghostly echo of an auditory hallucination.\n\nGroaning, I squint against the sunlight beaming through the jungle canopy as I roll against the moss bed onto my side, rubbing the back of my head as I do. When I check my hand for blood, I find a streak of red running down my wet palm. \"Shit...\" There's a tiny pool of blood on the moss too, but not enough to cause concern.\n\n\"Lena!\" my best friend calls again. This time I'm sure it's real.\n\n\"Derek!\" I call back weakly as I sit up. There's no way he heard that. As I'm about to call out again, my eyes fall on my lower half. The only thing I'm wearing are boots and socks. My wet pants and shorts are balled up beside me. I stare at the scene in confusion, trying to remember how I ended up half-naked lying on a bed of moss beside a stream.\n\nI went to pee...\n\nA giant spider scared me then I fell down a hill...\n\nI landed in this stream...\n\nAnd then... Nothing comes to me at first, but then the image of a thick, pink worm with a head that looked like a tip of a penis flashes in my mind. The phantom sensation of its aggressive invasion of my pussy tingles below.\n\n\"Holy shit!\" I blurt out as I spring up. \"Did that really happen?\" I slip my middle finger and pointer into my vagina and they slide in effortlessly with the help of something slicker than my body has ever produced in all my years.\n\nThis is the worm's slime... That means...\n\n\"It did happen,\" I whisper.\n\nI remember pulling it out and throwing it before I blacked out. I did get it out, didn't I?\n\n\"Lena!\" Derek calls.\n\nAnton and the others call out soon after. They sound much closer now.\n\nI can't let anyone find me like this.\n\nBefore getting dressed, I frantically feel around inside my vagina. My fingers find nothing firm. There's no longer any pressure in my cervix anymore, and I don't feel anything when I push deeper and poke my cervical hole. Nothing seems to be moving in my womb either. I press down hard at the base of my belly and nothing stirs inside.\n\n\"I did get it out,\" I whisper through a sigh as I pull my fingers out. Milky slime coats my fingers but, unlike before, there are light pink streaks in it. Even if my period blood was mixed with the goo, it wouldn't be this light, it'd be darker red.\n\nMaybe it's the creatures blood? Maybe I hurt it when I ripped it out of me...\n\nAs the rustling in the thick jungle brush sounds off from the direction that I initially landed at initially, I climb to my feet and quickly pull up my undies. \"Derek!\" I call out while wiggling into my soaked jean shorts. \"Derek! Anton! Guys!\" I start in the direction I heard their voices.\n\nPlants rustle ahead. \"Lena!\" Derek shouts in a panic. \"Lena, where are you!\"\n\n\"Over here!\" I call out. \"Down by the stream! Head toward where the sun is shining down through the canopy!\"\n\nAs I'm climbing up toward the hill, a machete hacks and slices through the brush head. Anton emerges from the foliage followed by Derek who runs at me with my backpack in hand.\n\n\"Lena! Are you okay?\"\n\nI collide into him with a hug, watching as Kody and Claire duck through the opening in the vines. \"Yeah, I'm a little scraped up, but I'm alright.\"\n\nHe squeezes me tightly. \"We were all so worried about you, Lana.\"\n\n\"Girlie, you are never doing your business alone out here again,\" Claire jokes.\n\nI giggle. \"After what happened today, I'm never leaving the group again. You all can stand right by me and watch me go for all I care!\"\n\n\"What even happened to you?\" Derek asks as we part. \"We heard you scream, and by the time we got to where you walked off to, you were gone.\"\n\n\"Thought a fucking jaguar got you,\" Kody says with a smirk.\n\n\"A Goliath spider or something big like it scared the shit out of me, and when I scrambled away from it, I fell backwards because my pants were around me ankles, then I slipped down that steep fucking hill and splashed down in the stream... How'd you guys even find me? I thought I was going to have to somehow find my way back to you.\"\n\nDerek cocks a thumb over at our guide. \"Anton here tracked your footprints to the spot where you slipped, saw the disturbed foliage, then looked through the ferns and found the swath of mud you took out when you fell.\"\n\n\"Well, thank you for being an amazing tracker, Anton,\" I say with a smile.\n\nAnton nods. \"I promised I'd keep you all safe. I don't plan on letting you all down now.\" The serious man offers a smile.\n\nClaire removes her pack then squats beside me. \"Let me take care of those scrapes before we get moving,\" she says, pulling out the first aid pouch.\n\nWhen she's all done cleaning my wounds and applying antibacterial ointment, she bandages me up.\n\nAs the last bandage is applied, Anton waves for us to follow him. \"Come, come. We need to get moving.\"\n\nOur guide leads us back the way the group took to find me, a less steep path a few yards away that runs right alongside where I rolled and slid through earlier. We use roots and branches to climb back up like we did before. On the way up, I scan the muddy earth in search of fleshy womb hunting worms. Something tells me that I got it somewhere on the way down and not from the stream, because there was a bit of mud on it when I first saw it and I feel like it'd be completely clean if it came from the stream. Unfortunately, I find nothing.\n\nAfter ascending back to the top of the hill near where I went to pee, Anton leads us to the northeast. As I follow behind him, I try to come up with a way to ask him about what happened to me without telling him and the others what happened.\n\n\"Anton,\" I say, hurrying up beside him while Derek is busy filming, and while the couple is chatting at the rear of the pack. \"Do you know anything about any large, parasitic mammalian worms out here?\"\n\nHe looks back at me, expressionless. \"I've seen large worms of many kinds in my time in the Amazon, but no large parasites. Did you have a run in with one?\"\n\nI shake my head. \"No... I uh... saw a tapir down by the stream, and this big, pink worm-thing with a head shaped like the glans of a penis burrowed into its genitalia as it was drinking from the water... Then the tapir ran away squealing.\"\n\nAnton's eyes go wide. \"Oh, I've never seen or heard of anything like that... But I have seen a nearly three-foot-long, eyeless amphibian that looks like a snake. People call it a penis snake because of its head, but it's not a parasite, it eats small fish and worms.\"\n\n\"Oh, no. That sounds like something different.\"\n\n\"Well, Lena, it sounds like you made a new discovery!\"\n\nI force a smile. \"Yeah, too bad I didn't have my camera!\" A nervous laugh escapes me.\n\nMaybe I don't need a camera. Maybe that gross worm laid eggs in my womb before I yanked it out.\n\nThe thought makes me feel uneasy.\n\nEven with the detour that happened because of my tumble and a few stops to eat and rest, we somehow make it back to the river camp before sundown. The six members of our expedition party who chose to stay and explore around here for the last week welcome us back with a big feast of the massive paiche fish they caught, avocado, mushrooms, and nuts--a meal that we enjoy with a few glasses of Peruvian rum around the campfire.\n\nAfter dinner, we sit around the fire, sharing tales of our adventures and showing each other the pictures and footage that we obtained during out separate expeditions. Our group definitely presented the most interesting finds.\n\nEveryone retires to the raised hut about two hours after sundown. I'm so tired from the hike and everything that's happened that I pretty much pass out as soon as I lay on my cot.\n\nThe next thing I know, I wake up in a cold sweat feeling loopy like I'm high on Vicodin again. It's still dark out, so I couldn't have been asleep more than four hours. And, given how tired I still feel, it has probably way less time than that. I shut my eyes and try to fall back asleep but, no matter how hard I try, I can't. I can't because I'm super fucking aroused for some reason. I mean, I'm so horny that my chest is heaving, my nipples are rock hard, my pussy is contracting like I'm on the verge of an orgasm, and my panties are sodden, like I've peed myself.\n\nWith my eyes still closed, I slip a hand into my pants, rubbing my engorged clitoris before sliding a finger between my incredibly slick folds.\n\nFuck, I'm sopping wet...\n\nMy finger plunges inside of my slippery hole on its own accord, and it enters with a loud, gushy, sticky noise that sounds like I'm squeezing super-wet macaroni salad in my hand. The faster I dip my finger in and out of my slick tightness, the louder it sounds. I'm sure someone on the other side of the hut could hear my noisy gash if they were awake.\n\nMy first climax comes within seconds, rippling through me with sharp, rolling contractions, and it takes everything in me not to cry out in sweet agony. It used to take me forever to orgasm, and I usually need a vibrator to do it. Even a really good lover doesn't usually make me climax, but here I am, coming after fingering myself for less than a minute.\n\nThe longer I finger-fuck myself, the thicker and gooier my vaginal lubrication feels against my digits, and the harder it gets keeping myself from moaning. When I finally pull my pointer and middle finger out of me, I rub the slickness against my thumb.\n\nIt feels so much like the slime that penis-shaped worm pumped into me before invading my womb. Maybe my orgasm just forced the residual ooze out of my uterus, I think, bringing my fingers to my lips and sticking them all the way in my mouth. Slowly, I suck the mucus off them and let it pool on my tongue. Definitely doesn't taste like my normal vaginal secretions... It tastes... almost sweet? Nutty? A bit metallic? And it feels thicker than any cum or mucus I've ever had in my mouth. It almost has the consistency of the creamy liquid cheese from Velveeta mac and cheese, and it's hard to swallow...\n\nOnce my fingers are sucked clean, I plunge them back into my gooey cunt with fervent desperation, like I might die if I don't continue masturbating immediately. This time, my digits don't just slide against vaginal tissue coated in slime, they submerge into a pool of it, and some of it gushes out of my pussy, leaving me with a bubble spurt louder than a wet fart.\n\nHow is there still so much of it coming out of me?\n\nI finger myself violently, raking my fingers upward hard against my G-spot every so often, gushing loud enough to cause people nearby to stir. I don't care if anyone wakes up and sees me, I'm too whacked out--too far gone in a crazed frenzy to stop, never mind slow down.\n\nMy eyes roll into the back of my head as the strongest orgasm I've ever felt makes my cunt contract in violent rolling waves of intense pleasure that makes my skin tingle and my limbs go limp. Suddenly, my uterus pulses too, and I feel a bit of pressure deep in my cervix, something that's never happened during any orgasm I've ever had before. And as I slow my fingering down, my pointer bumps against something firm. That's when I stop abruptly and begin feeling around my slime-filled hole for whatever I thought I touched. When I don't find anything, my cunt gushes as I push my fingers all the way to the bottom.\n\n\"What?\" I whisper when it feels like something just slapped against my finger.\n\nAs I try to poke in the direction of whatever it was, I feel nothing until I prod something that kind of feels like a soft licorice rope at the entrance to my cervix.\n\nUm, what was that?\n\nI quickly push deeper then poke the entrance to my cervix. All I feel is my tight hole. It's feels a bit dilated, but there's nothing sticking out of it. As I pull my fingers out of my pussy, for a second, I swear something tugs at my fingers.\n\nSomething like a branched proboscis...\n\nThe pleasure that had me feeling drunk with arousal these last few minutes fades instantly only to be replaced by crippling fear as I yank my hand away from my vagina. There's no tugging in my cervix. Nothing pulls at my fingers. When I pass my other hand between my slimy hand and my cunt, I only touch stringy goo, no branched mouth tubes.\n\nI'm imagining things...\n\n\"The worm is gone,\" I whisper so quietly it's barely audible to me. I wipe the slickness on my hands off on the outside of my panties and the inside of my shorts. \"The worm is gone. The worm is gone.\"\n\nThe worm is gone. The worm is gone. I keep repeating the mantra in my head on and off until I finally start drifting off back to sleep almost two or three hours later.\n\n<p align=\"center\">Chapter 3</p>\n\n<p align=\"center\">Euphoria</p>\n\nAs tired as I am, as sore as my body is from over a week of hiking and climbing, as malnourished as I am from barely eating during the expedition, I feel good today. Like, really, really good, despite only getting less than five hours of sleep.",
        "From the moment I woke up, I felt happy and super energized, like I was on a mix of stimulants and opioids. Coupled with the feel-good haze that has me feeling drunk, I have this weird body high that has me hyper-aware of my skin and sensitive to the touch. It's the feeling of eating a strong weed edible but more intense, like what I imagine talking ecstasy is like. I'm talking, when my shirt brushes my skin whenever I move, I feel like I'm being caressed gently by a lover, and it kind of turns me on. Water feels extra soothing when it washes over me. Wind tickles all my exposed flesh with every breeze, like dozes of little feathers are blowing over me or butterflies are landing on every inch of my skin.\n\nThis unexplained euphoria hasn't waned at all. It has remained steady through breakfast, throughout the seemingly endless boat ride, and it's still here as I'm walking up to my hotel room here in Iquitos, Peru.\n\nAs soon as I drop by bag by the beg, I head to the bathroom, start the shower, then strip. The second I step into the gentle spray of water from the showerhead, it makes my body quiver like I'm having a body-wide orgasm or something, and I can't help but giggle from how much it tickles.\n\n\"Oh, yes!\" I moan while shampooing my scalp. \"Best shower of my life!\"\n\nNot only does it feel great to finally shower and scrub the rainforest grime and sweat off of it, the sensation of the soapy washcloth slipping all over my skin drives me mad, especially after I finally sweep the cloth back and forth across my vulva. When it brushes gently against my clit, my core spasms and I get the overwhelming urge to put shove something in my cunt right the fuck now.\n\nNever have I ever been this horny before!\n\nWhile I quickly wash my ass, my free hand caresses my tits before tracing a path south. Right as I rub that hard, extra-sensitive little nub, I drop the washcloth so I can finger myself with my left hand while my clit gets the attention it needs from the right. I plunge my fingers into my cunt and, like this morning when I fingered myself before I went for my morning pee to check my situation, my pussy is incredibly slick with milky slime, but it's not overflowing with the stuff like it was last night.\n\nThe fingering and the clitoral stimulation make my knees go weak, so I sit in the tub facing the showerhead's spray and spread my legs, finger-fucking myself with my middle two digits hard and fast. As a climax rolls through me, my cunt begins to gush as goo floods my vagina. While finger blasting myself, I look down, watching in astonishment as a staggering volume of milkiness oozes out of me like lava. Seeing all of that goo gushing out of me drives me absolutely wild.\n\nIs this just how my pussy is now? Did that worm mutate my mucosa cells or something?\n\nI pump my fingers in and out of me more violently as I enter a frenzied state, raking my G-spot in hard come-here motions. When the orgasm finally strikes, my abdomen spasms hard, my eyelids flutter as my eyes roll into the back of my head. My uterus flexes rhythmically seconds after my vagina begins pulsating. Pressure builds in my cervix again, and it feels like it's dilating instead of contracting. The vaginal contractions force clearer, thicker slime to gush out of my pussy in big spurts like my cunt is puking pre-cum, and the goo floods into my palm as I slow down my finger-fucking. Then, just like last night, my pointer and middle finger bump into something kind of soft yet firm--something fluttering around inside of me that feels like one of those thin, red lace candies.\n\nI look down in a panic and waste no time trying to feel around for whatever it was with my fingers. Unlike last night, I find it right away, stroking it with a slower come-here motion than what I do G-spot to get a feel for its shape and length. My middle finger traces along a skinny, fleshy tube that begins flapping around inside of me, slapping my fingers purposefully like it wants to bat me away. I drag my fingers down its length, tracing it all the way to the middle of my cervix...\n\nMy eyes widen and my jaw hangs when I feel that the fleshy noodle leads to something hard and wide that's protruding from my fucking cervical hole. It feels like...\n\nIf feels like the hard tip of a penis-shaped head of that worm that crawled into me yesterday...\n\nMy breath hitches as my body begins to tremble. \"I didn't pull it out of me...\" I whimper as I slowly pull my fingers out of my pussy.\n\nAs my trembling hand leaves my vulva, I see them through the sheet clear slime dangling between my palm and crotch--the translucent, noodle-like structures are rapidly webbing across my fingers from the white, pulsing proboscis that's stretching out of my hole. More and more tendrils branch out by the second and quickly grow up my palm towards my wrist. The further I pull my hand away, the longer the proboscis stretches out of my vagina, pulsing and writhing as more protrusions branch out and wiggle in the air in search of something to grab onto.\n\n\"Holy fuck! No... No, no... This fucking thing has been living in me the whole time?\" I whimper, my voice uneven and strained as I start to cry. \"That worm has been living in my womb the whole fucking time!\"\n\nIn a panic, I bring my hand back to my pussy and plunge my pointer, middle finger, and thumb inside my slickness, stretching myself as I drive my digits deep into me.\n\nThat's why my vagina has been perpetually coated in slime and why more gushes out when I'm climaxing... Because this thing is lubing me up so it can slither in and out of my womb whenever it wants.\n\nI fist myself until I find the worm's firm head. It feels like it's protruding out of my cervix even more than before. I try to pinch its head, but it's so slippery, I just wind up caressing it over and over like it's the slobber-covered tip of a penis that I'm trying to tease after deepthroating it.\n\nThat's why I kept feeling pressure in my cervix when I orgasmed--it was worming its way to my vagina...\n\nRight as I finally manage to grab its head between all three fingertips, I feel violent wiggling deep in my womb that lashes the interior walls as its body pulses hard in my cervix. The tight hole stretches and, suddenly, the head slips out from between my fingers as its powerful body wiggles backwards towards my uterus.\n\n\"No! No!\" I sob, forcing my middle finger into my cervix with desperation right as the tiny hole is shutting, and I poke the thing's head, scraping at it with my fingernail before it escapes my reach.\n\nThat's when I start to feel the thing thrashing in my womb. I feel it twisting and flipping around, rapidly slithering all around my organ violently. And, when I look down at my belly, I see a fucking bulge at the base of my stomach right as I feel both ends of the creature pressing hard against opposing ends of my uterus's walls like it's stretching out in revolt.\n\nI scream bloody murder, staring at my bulging belly in horror. Then I sit there in the shower with my knees clutched to my chest, sobbing as I rock back and forth. The entire time, the womb worm continues to alternate between thrashing and slithering all around my uterus. It's the most uncomfortable thing in the world, and it won't stop.\n\n\"Stop! Stop fucking moving!\" I scream, hitting my lower abdomen with the base of my fist over and over until it finally settles down.\n\nI really thought I got this fucking thing out of me, I think, bringing my knees back to my breasts then rocking back and forth while I sob. Either I only managed to rip its tail off before I lost consciousness, or it crawled back into me while I was unconscious... Considering all of that pink liquid I scooped out of my vagina after I regained consciousness, and considering I haven't had any menstrual bleeding since this thing invaded me, it's safe to assume the pink stuff was the creature's blood after all...\n\n\"That's probably why I'm not having any menstrual bleeding, because that fucking womb parasite has been feeding on my shedding endometrium...\"\n\nWait... Standing in the middle of an Amazonian stream with no underwear or pants the day I started spotting from my period is probably why that fucking worm crawled into me so aggressively in the first place... It was hungry and it smelled my menstruating hole the second it ended up on my body... That's why it sped up when it got closer to my vagina. That's why it fought so hard to burrow into my cervix.\n\nThe thing inside of my uterus slowly slithers all across the inner flesh of my organ, and the slippery sensation of its sporadic, twisting movements makes my womb spasm like mild period cramps.\n\nI have to see a doctor right the fuck now, I think, my entire body trembling as I stagger to my feet. But our flight is in almost three hours. There's no way they can see me and treat me in that amount of time... And even if they do, I highly doubt a Peruvian hospital has the medical technology or expertise to treat me here.\n\n\"Whatever,\" I whisper, vigorously drying myself off, \"I have to try. I have to. Before something bad happens.\" I snatch my phone off the marble counter and dial up Derek, staring into my wide sapphire eyes in the mirror while the phone rings.\n\nHe answers after four rings with a groan. \"Ugh... Hey, Lena.\"\n\n\"Hey,\" I say, trying to sound calm. \"I'm sorry, did I wake you?\"\n\n\"Yeah, but it's no biggie. I can sleep on the plane later.\" He does a sleepy chuckle. \"What's up, Blue Eyes?\"\n\n\"Don't freak out, but I think I need to go to the ER before we leave...\"\n\nThere's rustling on his end like he's sprung up out of bed. \"Holy shit, what's wrong?\"\n\n\"Uhhhhh...\" I hum until I can think of an excuse other than, 'there's a cock-shaped worm feeding off my uterus and I need it out immediately.' \"I kind of have a weird rash-thing somewhere I'd prefer not to have a rash when I have to sit on a plane for hours. Probably from rolling and sliding through mud without pants...\"\n\n\"Shit. Okay, yeah. Let me just get ready.\"\n\n\"Thanks! I'll call the others and let them know we'll probably have to leave for the airport from the hospital.\"\n\n<p align=\"center\">Chapter 4</p>\n\n<p align=\"center\">hysteroscopy</p>\n\nAfter getting off the phone with Claire, my core spasms from womb worm flipping inside of me. My heart is jackhammering in my chest and I'm hyperventilating while I hurry to get dressed. Even though I'm freaking out and having a panic attack over the fact that there's a giant, parasitic worm nesting in my uterus, that feeling of euphoria that I felt before the shocking discovery begins to gradually overtake me again.\n\nIn a matter of minutes, calmness washes over me, and my heart rate slows almost instantly. As I'm shimmying into my shorts, I start feeling good all over. While sit on the toilet to relieve my bladder, my body starts to feel flushed. And, by the time I finish gathering my luggage by the door, that blissful high hits me hard and fast out of nowhere, like ten shots of tequila back-to-back on an empty stomach.\n\nBy the time I come face to face with Derek, Casey and Kody in the hallway, I'm feeling super chill and only the tiniest bit worried about my situation, which helps me to pretend that nothing is wrong.\n\nIt's a four-minute drive from our luxury hotel to Hospital Regional de Loreto. The ER isn't super busy, but there are quite a few people already waiting when we walk in.\n\nDespite how high with pleasure I feel, I sit in the corner of the waiting room for an hour and forty-five minutes bouncing my legs nervously. The resurgence of nervousness is brought on from the fact that the womb worm has been twisting around inside of me every ten to thirty minutes since we got here. It's like the parasite is growing anxious because it knows its life is in danger...\n\nFive more minutes pass, then the door to the waiting room opens. A short, very pretty, brown-skinned woman looks at her clipboard. \"Lena Anderson? The doctor will see you now,\" she says in a strong Peruvian accent.\n\n\"Finally...\" I whisper as I rise, flinching when I feel the large thing slither quicky in a circle.\n\nWhy is it so active now? I wonder as I follow the nurse. Is it out of menstrual lining to feed off of or something?\n\nThe nurse leads me back to a dingy room. Not long after I hop up on the exam table, a woman of about forty-years-old enters the room. \"American?\" she asks.\n\n\"Si, I respond. \"Tu hablas ingl\u00e9s?\"\n\n\"Yes, I speak English.\" She eyes the chart. \"On your form, I see that you wrote a large worm of about one foot in length crawled into your vagina and forced its way into your uterus while you were in the Amazon Rainforest?\" She looks over her glasses at me with an arched brow, a faint glimmer of concern in her eyes.\n\nI nod rapidly. \"That's right. Its skin looks like raw chicken and its almost a foot long. Its body is unsegmented and round, maybe an inch wide, and it has a head that looks like the tip of man's penis...\"\n\nHer eyes go wide, and her reaction is concerning. \"And you're sure something that large made its way into your uterus?\"\n\n\"Positive. While I was trying to pull it out, it, like, oozed slime and it kind of stretched its self out until its upper half got skinny. Then the worm's tail expanded and walled off my vagina and used its anchored back end to drive itself in...\"\n\n\"I see...\"\n\n\"Something tells me that you've ever heard of anything that happening to anyone?\"\n\nShe shakes her head. \"We've had many come through here with all sorts of parasites. But nothing matching that description--nothing that... large. And while we have had cases of women with leeches in their vaginas, I've never heard anything about something burrowing into a woman's uterus...\"\n\n\"Oh...\"\n\n\"Are you sure it wasn't a leech.\"\n\n\"Positive.\"\n\n\"Where were you exactly?\"\n\n\"Somewhere southwest of Benjamin Constant?\"\n\nHer lips curl into her mouth. \"Okay.\" She opens a cabinet and pulls out a white gown with blue polka dots. \"Let me get an endoscope. Please change into this in the meantime and lay down for me when you are done.\"\n\nI nod, and when she leaves, I quicky strip, eyeing the milky slime strings dangling from my pussy like snot that are dripping onto the slimy coting smeared across the crotch of my panties. After slipping on the gown, I hop up on the table. Ten seconds later, the door opens.\n\nThe doctor walks in without a word, an endoscope that's in a plastic bag in one hand and a laptop under her other arm. She sets the items on the stand beside me. After opening the laptop and typing in her password, she heads over to the sink. She washes and dries her hands, puts on gloves, then grabs a jar from the counter.\n\n\"Is that lubricant?\" I ask after she unscrews the lid and sets it down.\"\n\n\"Yes.\"\n\n\"Um. You're probably not going to need to use that. This worm parasite is constantly oozing a slimy secretion down into my vagina, so I'm lubricated constantly...\"\n\n\"Oh... Okay then.\" She closes the lid and removes the endoscope from the bag.\n\nAfter plugging the USB into the computer, she clicks on an icon and the endoscope's view of the floor shows up on the screen.\n\n\"Spread your legs for me please.\"\n\nI do as instructed.\n\nThe doctor hikes up the gown and makes a humph sound as she uncoils the devices slender tube. \"You were not lying about your situation down here...\"\n\n\"It's been like that since it crawled into me. And whenever I--uh... climax, more gushes out then the worm slithers down into my cervix.\"\n\n\"I see... Alright, I'm going to put the endoscope in now. Just relax.\"\n\n\"Okay.\"\n\nShe clicks on the light at the end of the probe. Her gloved hand then parts my labia before she slips the narrow tube into me nice and slow. It feels good for some reason, and I can't help but Kegel from the sensation. The thought of something this skinny going into me reminds me of when I first pull the worm out by the tail and I saw its proboscis sticking out of me...\n\nEventually, my reddened cervix comes into view, and there is a stream of clear liquid running out of it like syrup.\n\n\"It looks like some inflammation there... And it is a bit more dilated that it should be. I'm going to insert the camera into your cervix now. This might feel a bit uncomfortable, but please try and relax the best you can.\"\n\n\"Kay,\" I say quietly.\n\nMinor discomfort radiates from cervical hole as she pushes the camera in, but it doesn't hurt. My heart races as she slowly shoves it into my tightness. As it enters my uterus, the worm appears on screen. It's coiled up with its tail nestled up against the top of my womb between my fallopian tubes. The cluster of wormy appendages it used to have are gone and the area looks like a chunk of its flesh was ripped off, but there are still a small cluster of pink protrusions pressed against my organ. And coming out of those wormlike growths are thick, pink tendrils that are rooted under my flesh with branched hairlike fibers webbed under the first layer of skin. It looks like the creature's skinny veins that have become one with my organ...\n\nIts tail is anchored in me...\n\nI feel it writhe inside of me as I watch it press its head against a patch of something red and chunky that I imagine is my shedding uterine lining. The red tubular mouth leaves the worm's phallic shaped head and prods the red mass, then its proboscis emerges and presses against it as tendrils branch out across the red chunks. The worm's mouth tube and its proboscis pulsate as it feeds. Then it's head throbs as pulses work down its shaft to its tail...\n\n\"Ay Dios m\u00edo...\" the doctor gasps. \"That is most definitely not a leech... or a slug... I have never seen anything like this...\"\n\n\"I was hoping you wouldn't say that...\"\n\n\"Are you on your period?\"\n\n\"Yes. It started yesterday.\"\n\n\"The worm... it appears to be feeding off of your endometrium. When your lining is done shedding, there's a chance the worm could resort to feeding off of you directly...\" She angles the camera back toward my fallopian tubes. \"And it almost looks like it has rooted those tail fibers into your flesh to secure itself... This is incredible... horrible for you, but incredible...\"\n\n\"Yeah, when it slipped out of my hand and slithered all the way into my vagina, the tail puffed up and went from mushy to firm, then it latched on around the opening and I couldn't push it off no matter how hard I pushed or scaped it...\"\n\nWhen the endoscope bumps against the womb worm, the creature writhes violently, and it thrashes so hard that I feel it bulging inside of me. On screen, we watch as it sucks its proboscis tendrils back into the main tube before slamming its head against the camera. As the doctor reels the camera back, the proboscis fires out of the worm's mouth tube and covers the lens. As she pulls the device out of my cervix, the worm's head narrows and pushes into the hole after it. I feel pressure deep in my cervix as I watch the things head bulge as it pushes its way out. As the camera leaves my cervix, the pressure on the other end of my cervical canal fades and I feel the thing thrashing around.\n\nThe worm's violent movements make me jump and twitch, so I sit up and hold my belly as it bulges against it. \"Do you think you can get it out?\" I groan. \"Maybe suck it out with an abortion vacuum machine or something?\"\n\nThe woman shrugs. Then she shakes her head slowly as she meets my gaze. \"It's too large and hard for vacuum aspiration. And, because of the way the worm's tail appears to be fused to your uterus, surgery might be the only way to safely remove it from you. I can schedule an emergency procedure with our OB-GYN surgeon tonight. Tomorrow morning at the latest.\"\n\n\"Is there any way I can get that done in the next--\" I look at the clock, \"hour? Hour and a half? I have to catch a plane back to the states?\"",
        "\"I'm sorry. I don't think we can perform a surgery like that in that amount of time. If you do not feel like you can bare the parasite any longer, I recommend staying and catching a later flight to remedy this. If you do not feel as if your life is in immediate danger and you can harbor it inside of you, then I think you will be alright to seek medical attention when you get back to the US.\"\n\n\"I think I can bare it. It doesn't hurt. If I'm being honest, panic aside, I've been feeling really good since the womb worm has been in me. Like, I've been happier and sort of energized, and I keep getting aroused every six hours or so. And, before I knew this thing was in me, I would--you know--masturbate. And the last time I did, I reached climax and the worm push its head through my cervix and the proboscis flailed around in my vagina and latched onto my fingers...\"\n\n\"Hmm. It could be releasing endorphins of some kind to make you want to engage in intercourse... That could be how it moves from host to host after it reaches its final stage. Or it could be how it transfers its eggs or spawn into an intermediary host...\"\n\n\"That makes sense...\" I look at the clock. \"Crap... I should probably get going to the airport now since there's nothing that we can do right now... Thank you so much for taking a look at me.\"\n\nShe nods. \"I'll let you get dressed. I'll be back with some antibiotics for you. There's no telling what bacteria are living on or in that parasite.\"\n\n\"I appreciate that. Thanks.\"\n\n\"Also, would you mind showing me on a map where you encountered this uterine worm?\"\n\n\"Uh, yeah... I can maybe point out the general area.\"\n\nAfter I show the doctor about where we were when I contracted this giant parasite, we exchange email addresses then I head out to the waiting room where my friends are all fast asleep, except for Derek.\n\n\"Lena!\" he says loudly, jarring the others awake. \"Everything okay? You look kind of freaked out.\"\n\nI force a smile then nod. \"Yeah... Everything is fine. She just gave me some medication to take. Things should be back to normal in no time!\"\n\n\"That's great!\" Derek says with a smile.\n\n\"So glad you're okay,\" Claire says, giving me a hug.\n\n\"And look at that, you got done early, now you don't have to worry about reimbursing us for replacement plane tickets,\" Kody says with a smug grin.\n\n\"You can be such a dick sometimes...\" Derek says to him.\n\n\"I would have just bought everyone else a ticket for home and I would've gotten you one for Iraq or something, Kody,\" I say, smirking back.\n\n\"Ooh... harsh, Lena-Beana,\" Kody says through gritted teeth. \"That jungle crotch rash has sure made you real mean...\"\n\nI shove him as we walk into the hallway.\n\n<p align=\"center\">Chapter 5</p>\n\n<p align=\"center\">DIY Removal</p>\n\nDuring the hour and a half flight to Lima, Peru, everyone falls asleep, except me. The image of that foot-long worm's tail rooted in my uterus as it fed on my shedding menstrual lining keeps me up. That and the fact that it's been super active in my womb since take off. Despite how bad I'm freaking out over it all, I still feel weirdly calm and high from whatever this parasite is secreting into me.\n\nI wonder if the womb worm is pumping hormones in me through its tail roots or if there's something in the slime being absorbed by my uterus... Or maybe it's both.\n\nConsidering I first started feeling drugged when its head first burrowed into my cervix, I come to the conclusion it's the slime that has the hormonal secretions. Because I'm pretty sure the mouth proboscis produced something to numb my cervix and trigger cervical dilation, otherwise it would've hurt like hell when it first burrowed in. I definitely know that the tail tendrils inject anesthetic because of what it did to my finger, but that doesn't mean it doesn't secrete anything else.\n\nThough, it wasn't until the night following the invasion of my womb that I started feeling super drugged and horny, so there's got to be something else secreted by its tail roots...\n\nI shiver at the thought of it.\n\nAs we're walking off the plane into the Jorge Chavez International, an overwhelming horniness overtakes me, so I drop off my bags with the gang then hurry right to the bathroom to masturbate. I spend ten long minutes in there fingering my gushy vagina, oozing globs and strings of slime into the toilet until my climax strikes.\n\nWhen my pussy starts contracting, when I feel the cervical pressure building as the thing wiggles down into my vagina, I don't stop fingering. And I don't stop when I feel the proboscis lashing my fingers like a snake tongue, but I do slow down and rub the soft tube with gentle curls of my finger, I do push deeper and caress the worm's throbbing head like it's a giant internal clitoris shaped like a cock's tip. I tease it more and more because the pulsing in my cervix actually feels really good now. I keep teasing its firm, smooth head gently until it wriggles violently back into my womb during the next orgasm. It's like I'm in such a dreamy haze from this womb worm's hormones that I don't care this massive parasite is in me anymore...\n\nThis thing is biochemically seducing me into feeling like it's just a part of me--like its normal for a cock-shaped organ to bulge out of my uterus and through my cervix after an intense orgasm...\n\nDuring the remainder of the two-hour layover, I spend the entire time googling wormlike creatures in search of anything that looks like my womb parasite.\n\nWhen I google \"penis worm,\" I come across a picture of Priapulus caudatus, a marine invertebrate that has a tail-like appendage with wormy protrusions that looks almost identical to the tail of my womb worm. But though both their bodies are unsegmented, the P. caudatus's shaft looks nothing like what crawled in me.\n\nWhen I search proboscis worms, I come across an ocean ribbon worm called Gorgonorhynchus repens that has the same exact proboscis--white and heavily branched--though it's smaller and way less sturdy looking than the one my parasite has. The tubular mouth tentacle is where the similarities end.\n\nDuring my research into slime producing creatures, I come across the hagfish, which produces a similar, voluminous goo that seems much thicker than what my womb worm excretes.\n\nAs I'm looking into other worm and snakelike creatures from the Amazon, I come across a Huffington Post article about a rare Amazonian \"penis snake\" called Atretochoana eiselti. It's a Caecillian--a blind limbless amphibian--and its head looks sort of like the head of a penis, but it's not the same as the womb worm's, mainly because it has a wide mouth and not a circular hole like the thing in me. It also has nostrils, unlike my parasite. The shafts of their bodies, however, do looks very similar--fleshy, tubular and veiny like a horse cock. The penis snake is more purple though, my invader is more peach-ish-pink.\n\nThe only thing I find online that looks like the womb worm's head is the cap of the Phallus impudicus--the common stinkhorn mushroom. It's freaky how similar the mushroom's cap looks like it, minus the fungus's lack of smoothness.\n\nIn the layover's final minutes, I sit there trying to come up with a scientific name for the thing, because I'm a biologist, after all.\n\nPriapus is the Greek fertility god depicted with a massive cock, which is why the ocean penis worm is named Priapulus. And it feeds in the womb, so utero- has to be in the name. The boscis in proboscis comes from the Greek bosko, which means to feed... So... the worm's scientific name should be...\n\nI ponder it for a second.\n\nPriapus... Utero... boscis. Yeah, the Amazonas Priapus Uteroboscis, or the Amazonian penis-shaped womb feeder... That's what I'll call it when I present it to the Jacksonville University biology department. After I get it out of me...\n\nHalfway through the five-hour fifteen-minute flight to Huston, I pass out, and I don't wake up until Derek shakes me when we land. The two hours of our noon layover are spent eating and drinking at the airport bar until our flight for Jacksonville, Florida.\n\nAfter my second cocktail, the buzz that comes on makes me feel woozy and more euphoric than I've been feeling all day, like I mixed alcohol with medication. I find myself being extra touchy with Derek, probably because I want to fuck him now more than I ever have before. Hell, I barely like Kody and I've been finding myself checking him out and imagining myself seducing him in the bathroom--fantasizing him fucking me from behind in a stall. And I don't realize how talkative I am until Claire says something about me being a chatty-Cathy.\n\nI should probably avoid heavy drinking until I get this thing out of me.\n\nTwo hours after departure from Huston, we land in Florida. It's around 5:30 p.m. EST when we finally get our luggage and leave JAX International airport. About thirty minutes later, Derek pulls up to my apartment near the Jacksonville University campus.\n\n\"Alrighty,\" Derek says as we hug goodbye in my doorway. His touch sends bursts of pleasure across my back. \"You sure you don't want to grab dinner later, Blue Eyes?\"\n\n\"Yeah, I kind of want to just pick up my dog from the kennel and do nothing from now until work on Monday.\"\n\n\"I hear that,\" he says, smiling. \"If you change your mind--\"\n\n\"You'll be the first to know.\"\n\nWith a wink and a panty-dropping smile, he turns and starts toward his Subaru.\n\nAfter I shut the door, I grab a bottle of water from my bare fridge, then I flop down on the couch. All I want to do is relax, which is crazy because, when I left the hospital in Iquitos a little over twelve hours ago, I was deadest on rushing to the hospital to get this thing removed from my uterus. Now, surgery is the last thing I want, even if it means I'll be free of this giant parasite. The idea of being cut open and then having the Amazonian Womb Feeder cut out of me fills me with crippling fear--fear that was absent when I was in the Peruvian hospital. The other reason I don't want to go to the hospital anymore is because, as a biologist, part of me doesn't want doctors to remove it, because I feel like I won't get the credit for discovering the Amazonas Priapus Uteroboscis. And I don't want it to die before I can study it...\n\nIf I have to be the one with a giant worm slithering around in my uterus, I want to be the one to get the credit for finding it and naming it. I need to study it while it's in me until I can find a way to lure it out of me so I can put it in a tank and study it... And if I'm going to observe it while it's inside of me, I'll need an endoscope...\n\nI open my Amazon app and start shopping for one.\n\nWhen I finally leave the house, I head down to the Walmart in Arlington Hills. Once my cart is full of all the groceries my broke-ass can afford, I head down to the pet aisle to grab an 8-liter fish tank. Then I head to the meat aisle. Once I spot the slabs of pork liver, I stop and pick one up. Liver is not only blood and highly nutritious due to the density of nutrients like an endometrium, but I saw a YouTube video of a guy luring leeches to a liver in a pond, and they sucked it until it was pale. If the womb worm is a sucker for a menstruating uterus, it might come out for this liver.\n\nAfter stopping at the dog kennel to pick up my black Labrador, Sable, I head back to the apartment. Another wave of thigh clenching arousal builds on the drive home, and it's so bad, I have to reach into my shorts to rub my clit over my damp panties.\n\nI take Sable inside first then give him some rubs before I put him in my room so he doesn't disturb me. Then I run back outside to grab the groceries. As soon as I'm back through the door, I set the bags down, wash my hands, grab a plate then slap the raw liver onto it with a splat. When I feel the Uteroboscis wiggling around, my vaginal walls clench like the parasite is demanding that I climax immediately.\n\nAfter I wash the meat off of my hands, I place the fish tank on the floor, set up my phone to record my extraction experiment, then I set the plate of shiny red liver beside the tank before yanking my shorts and undies down in one urgent pull. Thin strings of glistening worm slime dangle from my engorged labia as I squat over the plate, dripping right onto the liver. My pussy gushes loudly as I plunge two fingers into my slick hole, and the squishy, squelching noise grows louder the faster I finger-fuck myself. Streams of goo oozes out of me as I enter a dizzying frenzy of G-spot rubbing and deep, fast fingering. I watch as milky slime glazes the steak like colorless honey.\n\nIt takes almost two minutes for the climax to build. I rub my clit vigorously with one hand while pumping my digits into me hard and fast until the orgasm explodes through me. My vaginal walls contract in hard waves, my uterus throbs right along with it. Pressure in my cervix builds as a bulge moves through that tight passage toward my vagina.\n\nWhen I feel the womb worm's proboscis whip my fingers, I stroke it gently to coax it to latch onto me while using my other hand to bring the plate up to my vagina. I keep caressing the mouth tube while slowly pulling my fingers out. And when I see that the proboscis is webbed onto my index and point fingers while its tendrils branch out toward my palm, I touch my fingers to the squishy liver. More tentacles branch out from the mouth tube against my middle finger and touches the meat. Like it realizes it found food, the tiny translucent vines detach from my digits and spreads out across the liver.\n\nA big smile stretches across my face as the proboscis webs across the meat. \"Holy fuck, this is actually working!\"\n\nMy legs shake from squatting for so long, but I dare not move. I just watch the white tube pulsate as the translucent branch tendrils turn pink from the blood and fluid it's sucking out of the liver, I feel the large thing throbbing and writhing slowly in my cervix, I feel its lower half wiggling in my womb, and I try not to Kegel from the sensation that feels more pleasant than it has since it invaded me.\n\n\"Are you detaching?\" I whisper. \"Oh-ah!\" I groan when my uterus begins to spasm.\n\nI lower the plate just a bit, and when it feels like the thing worming its way further out, I push as hard as I can as though I am trying to give birth. It doesn't budge, so I keep at it while it continues to feed. Over and over, I squeeze my abdomen and push with everything I have, straining so hard that I get lightheaded. The Uteroboscis throbs and writhes more and more violently as I try to force it out. And when I feel a big bulge in the vaginal end of my cervix, I slip in finger into my gash to see if it's coming out. I push all the way down to my cervix and I bump into the throbbing head. It's definitely protruding out a little further, maybe up to the base of its head, but it doesn't seem like it wants out.\n\n\"Come on!\" I groan, retracting my finger so I don't disturb it.\n\nI let it feed undisturbed for a bit longer before trying to push again. Still, it doesn't feel like the parasite is coming out.\n\nBecause its tail is probably still anchored to the roof of my uterus. This is exactly why it probably chose to root into the top of my organ, so I can push off of it to force itself down into my vagina to feed or whatever it's been trying to do after the last few times I climaxed, then it pulls itself back up using its anchored tail.\n\nI wait, I push hard a few times in succession, then I wait and push again. I keep at it for a while. It's been so long that I'm drenched in sweat and my legs are trembling hard--I'm on the verge of collapsing. My abdomen is sore and I fear I might prolapse my uterus if I push any harder. So much time has passed that the areas of the liver webbed by the proboscis's tentacles are starting to lose color, turning it from shiny blood red to a dull, grayish brown.\n\nHoly shit, he's sucking this thing dry! Is that what he'll do to me when I'm done menstruating?\n\n\"Fuck...\"\n\nWhen I feel it pulse and writhe hard in my cervix I push once more as hard as I can while I slipping my middle finger inside past its proboscis to feel if it's coming out.\n\n\"Fuck! It Feels like it's in the same place...\"\n\nSuddenly, it throbs really hard in my cervix then wiggles and twists violently as something feels like is pulling the top of my uterus. The head almost yanks away from my finger and I feel a bulge quickly sliding back towards my uterus. And when the pressure fades from my cervix, all I feel is the worm flopping slithering around and flopping side to side like an excited dog's tail, and it makes my uterus spasm so hard that it cramps.\n\n\"Fuck!\" I cry out as I collapse on my ass.\n\nI lay there on the floor of the kitchen with my hand on the base of my belly, pressing down on my womb as the worm bulges against my flesh, my abdomen spasming every time I feel it move. I just sigh then take few slow, deep breaths. Having this thing thrashing around in me doesn't even feel that bad anymore, nor do it bother me or creep me out at this point, and that's concerning. It's concerning because I'm afraid I'll wake up one day and decide that I'm going to let it live in me until it is ready to leave on its own or until it dies in there...\n\n\"Bleh...\" I wretch at the idea of that large thing dying in my uterus while it's rooted in my womb.\n\nI have to try something else to lure it out... Something alive and menstruating..."
    ],
    "authorname": "bl_overman",
    "tags": [
        "worm",
        "alien",
        "extreme",
        "woman masturbation",
        "solo masturbation",
        "body modification",
        "insect",
        "ovipositor",
        "impregnation"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/amazonian-womb-worms-ch-01-04"
}