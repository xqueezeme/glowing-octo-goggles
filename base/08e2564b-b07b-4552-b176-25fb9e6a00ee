{
    "title": "Legacy: Catalyst",
    "pages": [
        "All characters are 18 years old or older. Greece! I have touched on many different mythologies over the years. I have received questions and requests about classical Greek Mythology. Why did I not cover it or use it in my stories? I figured most people were familiar with it and wouldn't find it interesting. I guess I was wrong. So, I have decided to set this chapter of the storyline in Greece. I want to weave in some not so well-known stories and myths for your enjoyment. I am also including Thomas' family into this piece as well. It seems many of you miss Violet, Melody and Tiffany. Fear not, they will play and take the stage below. I introduce new actors on said stage who play their part and depart while others might appear in later pieces if you like them. Without further delay strike the music, light the incense, and let the curtains fall away. \n\n*****\n\nAthens Greece:\n\nScarlett stood in front of me. My arm was around her waist holding her close. We looked out over the beach to the Aegean Sea. A crescent moon rose illuminating sails and hulls of all the ships anchored in the bay. A gentle breeze blew off the water caressing her cheek. I kissed her neck and felt her shiver in my grasp.\n\n\"What a view,\" I whispered and she nodded awkwardly.\n\n\"I can't believe you talked me into this,\" she said as I ground against her. \"So deep...\"\n\n\"We aren't being watched,\" I assured her. \"We have this spot to ourselves.\"\n\nI moved my hips backward just a bit and then pushed against her. She let out a soft gasp as my cock sunk a bit deeper. I adjusted her skirt and she flinched when the material caressed her bare ass cheeks. I moved again and Scarlett let out a delightful grunt. She squeezed my cock with her internal muscles and she was trembling now.\n\n\"You are close,\" I said and she nodded. \"I almost there.\"\n\n\"Inside of me,\" she growled as she squeezed me repeatedly. \"I want to feel you cum inside of me.\"\n\nI looked around to make sure we were alone. Satisfied we weren't being watched I moved a little further now and fucked her slowly until I was on the very edge of climaxing. She could feel my cock swelling inside of her. She knew how close I was. Scarlett begged for my load and I gave it to her. I cried out softly as my sperm sprayed her insides. It had taken nearly a half hour from the moment I slid into her to my climax. It was excruciating but worth every moment. I pulled out of her, tucked in, and zipped up. She just stood there and held onto the wooden fence tight. She was shaking as bad as I was.\n\n\"Damn, I needed that,\" she moaned. \"Talk about intense...\"\n\n\"I try.\" I said and she turned to kiss me.\n\n\"How long has that cat been there?\"\n\n\"Are you fucking kidding me,\" I cursed seeing asshole cat watching us. \"Fucking perv.\"\n\n\"Your cat has a voyeuristic streak,\" Scarlett said giggling. \"That is so you. Let's head back, I've got an early shoot and we only have a few days left until we move to the Santorini set.\"\n\n\"Let's get you that beauty sleep.\"\n\nThe three of us walked back to where the rental car was parked. The cat hopped between the front seats and landed in the back. Scarlett drove back while I hummed a little tune. I had a free day since they were shooting on a closed set tomorrow. I had a few of the more obscure shops to visit to see if I could find any hidden treasures. We reached the hotel and there was a letter for me from my mother. I read the letter as we rode the elevator up to the top floor. A few of the main cast were sharing the penthouse suits. There were four of them in total and we had the one that faced the city. Robert had 'gotten' the one facing the sea but that didn't surprise anyone. He had more clout that anyone else. While a nice guy he was really spoiled. I laughed as Scarlett unlocked our room.\n\n\"What's so funny?\"\n\n\"I was just thinking how spoiled Robert is having the suit that faces the water.\"\n\n\"Yeah, so?\"\n\n\"Here I am making love to the most beautiful woman on the planet and I am calling him spoiled.\" \n\n\"Oh, you are a real charmer,\" she said getting that twinkle in her eye.\n\n\"You have an early shoot...\" I said even as she dropped down onto her hands and knees and moved towards me. \"Don't blame me if... oh damn woman... SSSSS... easy with the teeth...\"\n\n\"You never did tell me about the tattoo,\" she said between licks of her tongue on my sensitive flesh. \"Tell me.\"\n\n\"I told you before you won't believe me... FINE... fine... a succubus gave it to me while I got my back piece.\"\n\n\"You mean a female demon inked you,\" she moaned and I nodded. \"Why would she do that?\"\n\n\"Succubi like getting DP'd when they fuck,\" I said and she captured the head of my cock between her lips. \"If I say the magic word the design turns into a second cock.\"\n\n\"No shit...\" she said after my erection left her mouth with a popping sound. \"Show me... if it's true I'll let you DP me.\"\n\n'Show her,' the succubus whispered in my mind. 'She'll wake up tomorrow with a crazy dream. Trust me... it won't hurt her. We are allies Thom.'\n\nI spoke the word and Scarlett's eyes and mouth widened in shock. She kept her word and so had the demon. The next morning Scarlett awoke with a start when the hotel called up with her wake-up call. She kissed me and headed directly for the shower. I stayed in bed since I could sleep another two hours until the shops opened. Fifteen minutes later she appeared with her hair in a towel but otherwise naked.\n\n\"I had the craziest dream last night,\" she said looking at me with a dreamy expression. \"You grew a second cock and drilled me like a fiend.\"\n\n\"Two,\" I said and looked under the covers. \"I must have lost it.\"\n\n\"Pity,\" she purred. \"It was the most realistic dream I've ever had and damn it felt good. It wasn't like that first time at all.\"\n\n\"I told you I'd back off if it hurt.\"\n\n\"And I told you I didn't want to disappoint you. Shooting is going to take all day, maybe longer. I'll call if we can do dinner. If not, I'll catch up with you here.\"\n\n\"My family is going to visit. They are going to be staying on a little island not too far from Santorini. I hope you don't mind if...\"\n\n\"Nope,\" she said as she bent over and kissed me. \"They are family. Besides, I'd like another round with Katarina. She's got spunk. Speaking of, I got yours all over my skirt.\"\n\nShe noticed the clock and hurried up to get dressed. A few minutes later there was a knock on our door. It was Robert Downey Jr. Scarlett let him in and I waved from the bedroom. He remarked about the strong smell of sex and suggested some air freshener. Scarlett punched him on the arm and they left together. I closed my eyes but I was awake. I got up and took a long hot bath. I had a hot wet cloth over my eyes when I felt the water displace and rise. The splash of the water hitting the tiled floor alarmed me. I tugged the cloth away and looked around. The succubus sat across from me smiling.\n\n\"I just adore a nice hot bath,\" she purred.\n\n\"Your nipples are pierced,\" I said. \"Is that new?\"\n\n\"You are perceptive,\" she said. \"Mikey talked me into it. He can be very persuasive. Did you enjoy last night? That was your first time using my gift.\"\n\n\"I didn't find the right opportunity before then. I'll be honest. I was leery of using dark magic.\"\n\n\"Normally you'd be dead to rights to be cautious. I made a vow that it wouldn't hurt you... I suppose I should have told you it wouldn't hurt your partners either. The best part is there is no post anal anguish. In the case of mundane humans it also leaves a kind of dreamy fugue behind as well. Can't have movie stars go screaming to the tabloids, my lover has two cocks!\"\n\n\"My family isn't what you'd call mundane.\" I said and the succubus smiled revealing her sharp pointy fangs.\n\n\"Oh, they'll remember but it isn't like they'll say anything. Well, nothing beyond unnnn... Or ohhhh shit... you get the idea.\"\n\n\"So, what brings you to my bathtub?\" I asked and she grinned.\n\n\"I need a favor,\" she said as her foot found its target, my cock. \n\n\"Hold on, you have feet,\" I said surprised. \"You had hooves in the tattoo parlor.\"\n\n\"Shapeshifter darling,\" she purred as she teased me. \"I am looking for someone and they are hiding out.\" Her toes worked me into an impressive erection. \"We made a deal and he chicken shitted out.\"\n\n\"You want me to play spiritual bounty hunter?\" I moaned. \"Talented feet you got there demon.\"\n\n\"You have no idea,\" she said as her other foot came into play. \"I pay you the traditional finder's fee when you deliver him. He's here in Athens but that's the closest I can track him.\"\n\n\"What is the traditional fee?\" I asked.\n\n\"I grant you a minor boon. You collect it whenever you need it.\" She said as her feet had me panting and moaning by now. \"Tell you what... I'll throw in a night with my twin sister if you find him within thirty days.\"\n\n\"A demonic threesome...\" I whimpered and she nodded. \"Oh, that is...\" The succubus pounced sending a wave of water onto the floor. She snared my cock with her mouth and went to work. \"FINE... you evil bitch you! I'll find him if I can. I'll keep a look out while I roam the city.\"\n\nShe was too busy sucking me off to respond. I sat on the edge of the tub to make it easier for us both. She deepthroated me with an ease that no other woman I'd ever been with. Correction, she sucked dick as only a demon could. I grabbed a good fistful of her hair and yanked driving my cock harder and harder down her throat. She never flinched. I guess demons liked it rough too. I bit back a cry as the succubus swallowed my load. \n\n\"I can stay...\" she offered but I shook my head. \"You are right. His file is on the coffee table. Once you have him speak the command in the little brown envelope and I'll take possession. Ciao lover bear, I know you won't let me down.\"\n\nI blinked and she was gone. My cock was still semi hard after the mind-blowing head I had received. Now I was a bounty hunter. The odds were slim to none that I would collect either the bounty or the bonus. I drained the tub and finished off with a quick shower. I dressed and looked at the fugitive's file. I flipped open the manilla folder and looked at the man's folder and freaked. I knew him. Holy fucking shit I had dinner with this guy two nights ago. He was the assistant director for the movie. I read his file and it read like a god damn train wreck. He had sold his soul for one successful movie. He had a producer credit as well as a director credit in one of Marvel's biggest hits. That was three years ago and his career had been damn steady since then. I took out my tablet and googled his previous credits. Sure enough, everything else he had touched had turned to shit. Suddenly, out of nowhere he gets a shot at an honest to god Marvel movie. It does better than expected and boom his career is made. The only problem is that he had demonic help.\n\n\"You stupid son of a bitch,\" I cursed. \"I got dinner with you Saturday night. Live it up until then. Fuck!\"\n\nI closed the file and placed it in my laptop case. I didn't want Scarlett seeing this. She wouldn't understand. My stomach grumbled so I got my shoes on and headed out. I hit a local diner and had a light breakfast. My appetite was spoiled. I could ignore the bounty but she'd know. She was a demon after all. I had no choice. I chewed my food but barely tasted it. The world seemed to have the color sucked out of it until a nearly naked man sprinted passed me just as I paid my bill. He had a towel around his waist and that was it.\n\n\"JOHN... Prester John...\" a woman called as she raced behind him.\n\nI joined the chase. I hopped, dodged, and maneuvered through the people. I was far more successful than the girl and caught up with the half-naked man just as three men cut off his path. They were dressed in expensive suits and wearing dark sunglasses. They had the scent of hell about them. I recognized the stench after having encountered the succubus on more than one occasion. The man that the woman had called Prester John stood unwavering. For a man wearing only a towel I was impressed with his courage. I moved next to Prester and set my hand on his shoulder.\n\n\"I got your back.\" I said and he looked at me.\n\n\"You...\" he replied his eyes wide and wild. \"I know you.\" He blinked and the savage expression on his face lessened to a wry grin. \"God damn, it is you... Old Black Thom!\"\n\n\"Old Black Thom,\" the middle of the three men hissed. \"He's dead. Everyone knows that he died months ago.\"\n\n\"No wait,\" the man on the left said hesitantly. \"I met Thom and that's his kid. I'm not sure this is a good idea Raal.\"\n\n\"No names idiot,\" the third demon growled. \"Even if it's his kid there are three of us.\"\n\nI felt the tingling from my back. One of them was up to no good. I searched my mind for a spell that wouldn't be too flashy but might scare them off. I looked around and noticed how cloudy it was. The clouds weren't threatening but I could change that. I sang softly under my breath as the demons hesitated. The sudden cloud burst took them off guard. A harsh litany and a few gestures heralded a loud crack of thunder. Prester John laughed and pointed at the demons. The girl took him by the arm and her appearance startled them more than the name of Old Black Thom. They broke and ran as the woman soothed Prester enough to steer him away from the crowd that had gathered. I followed them and introduced myself.\n\n\"I am Thomas, Thomas Blackstone,\" I said and she seemed unimpressed.\n\n\"My name is Anjelica,\" she said coolly. \"Thank you but we don't need your help.\"\n\n\"Don't be like that Anjelica, he is Thom's son. Thom and I go way back.\"\n\n\"I know your history with him,\" she said the venom growing with each syllable.\n\n\"Listen, I don't want to cause any trouble.\" I said but she surprisingly invited me for coffee for protecting Prester.\n\nShe guided us to a small shop off the main drag. The sign was in several languages and it read in English, Fable's Fantastic Finds. Prester John owned a little resale shop. I wondered if I could find something interesting here. Anjelica guided Prester to the back of the store while I perused his stock. It wasn't a surprise to find a ton of Greek antiques and stonework. What was surprising was the vast collection of Roman, Greek, and Egyptian coins. There were other nations represented but the bulk were those three countries. I wasn't a numismatic but some of them looked damn valuable. I couldn't be sure of course but a few got my attention. Anjelica appeared with a pot of coffee and poured three cups. \n\n\"Prester is getting dressed,\" she said. \"This is Egyptian coffee so its strong.\"\n\n\"Thanks, I guess you and my dad didn't hit it off.\"\n\n\"That would be putting it mildly,\" she said making a disgusted face.\n\n\"Aw hell, I know that face. Listen, I am sorry. I can't make up for what he did. If I could I would. Believe it or not I am a nice guy. I am not my dad.\"\n\n\"You can,\" Anjelica stated smiling. \"I need a favor and I'll give your dad a pass.\"\n\nI nodded and looked to see if she had horns or a tail as she told me what she wanted. Prester John appeared and caught me checking out Anjelica's ass. I smiled and he just shrugged. Anjelica announced to Prester that I would accompany him to the Midnight Auction. The auction was being held this very evening. I felt like fate was using me again. I had decided to follow Prester John and now I was being asked to babysit him at an auction. How hard could this be? I texted Scarlett and told her about the auction. I wouldn't get a reply for five more hours. That was the nature of movie making. Prester happy to have a companion turned to his stock and began to set out items for the sale. He could only submit one and after two hours had gotten it down to a gleaming helmet of Greek design and twelve-inch piece of navy blue crystal.\n\n\"What are they?\" I asked and Prester stood up tall and proudly described each piece.\n\n\"The crystal while older is less rare. It holds a portion of the Library of Atlantis. I guess you could describe it as an ancient data crystal, but Atlantean. This crystal holds a wealth of astronomical information. The other is the famed Helm of Hades. It once belonged to Perseus. He ended up selling it off once he saved the girl and she had caught him using it to spy on the daughters of Hestia. It is rumored that Hades cursed it when Zeus ordered him to give it to a mere demigod.\"\n\n\"Which one do you think will sell better?\" I asked and Prester looked at me stroking his chin.\n\n\"You are definitely his kid. If I had told any other person in the world that these two objects were magical in nature they would have called bullshit. But you just ask which one would sell better. I'll go with the Helm. It gives me the creeps. I think that Hades can see through the helm and I like walking around naked when the shop is closed.\"\n\n\"Should I ask how you managed how to get ahold of the helm?\" I asked.\n\n\"That would require going over much of the history of that artifact. Do you have several hours?\"\n\n\"Nah,\" I said. \"Can I peruse and see if you have something I'd want for my own business?\"\n\n\"Feel free to look,\" Prester said. \"If you see anything you want we'll talk price.\"\n\nFor a small shop, he managed to stack shit to an amazing height. I was looking for anything unusual, like the Atlantean crystals. It was literally the needle in the haystack. I spent hours and they passed so swiftly. Before I knew it, Anjelica was standing next to me and holding a string and measuring me with it. When I asked her about it she informed me it was tradition. One didn't go to a black-tie affair in jeans and so she brought out appropriate clothing for the Midnight Auction. It was something that had been going on for centuries. I changed and regarded myself in a mirror. The cut and style of the fabric reminded me of a Venetian Merchant from times long past. I wondered what other kinds of wardrobe they had hidden away.\n\n\"It is the theme for this year's auction. It is sad really,\" Anjelica commented. \"The size and frequency of the auction has shrunk over the last decade.\"\n\n\"Any idea why?\"\n\n\"I think it is because technology has replaced awe and wonder. Granted that doesn't cover the flat earthers and the religious nuts. Those guys are crazy. Oh, it is almost time to go.\"\n\nI checked my watch and it was indeed eleven thirty. Anjelica told me that we were in walking distance of the auction house. Prester had found a lovely wooden box to house the Helm of Darkness. He had that as well as papers that proved the authenticity of the helm. He was garbed in similar clothing but while mine were maroon his were a deep purple. Anjelica was going to stay at the shop while I kept an eye on Prester. I had a sudden thought what was her relationship to Prester John? Was he her father? He was old enough for that. I was curious but it wasn't my place to ask. I was doing them a simple favor. I am sure my dad would have done the same. \n\nThe weather was nice and the streets were scarce of foot traffic. I wonder if it was the neighborhood or just chance that we passed unnoticed to the auction house. We reached a large stone building and off to the left was a bright red door. Prester approached the door and knocked on it. The deep metallic sound echoed within. The door opened and a tall black man in a modern day tuxedo greeted us and allowed our entry.\n\n\"Prester John,\" the keeper of the door said in his deep resounding voice. \"Old Black Thom.\" \n\nFifty or so beings of various shapes and sizes were milling about in what passed for a foyer. There were tables with food and drink as well as attractive females and males of non-human lineage. Prester whispered in my ear and identified the races for me and I was amazed at the variety of intelligent life on and under the Earth. There were of course half a dozen varieties of fae or elves. One of them was even of Asgardian origin. The dark elf male was tall, muscular, and as Prester explained a master blacksmith.",
        "\"His home is beneath the roots of Yggdrasil. His folk forged the god weapons like Mjolnir and Gungnir. I wonder if he brought or if he seeks?\"\n\nPrester left me alone as he handed over the helm to the people running the auction. A tall feline Osirin walked past me and instinct took over. I turned my head to check out her ass and she stood there looking back at me. I was about to apologize when she smiled and approached me. The cat headed entity informed me that she was the Grand Seer of Ulthar. I replied and told her I was just Old Black Thom since that was what everyone was calling me. She seemed thrilled to meet me and forgave my little transgression. I asked her about Ulthar and she asked me about Earth. Apparently, this wasn't her home dimension. \n\n\"Oh, we are being honored,\" the Seer said as a giant insect approached with an ornate box on its back. \"Thom, this is none other than the Willful Intellect of Jadus III. It is rare for the Intellect to leave its home world.\"\n\n\"Honor upon your houses,\" the voice from the box announced. \"You are both well-known upon my world. The Grand Seer for her prophecy of the destruction of our dire enemies upon Jadus II. Old Black Thom is known through many continuums as a gifted mage and talented procreator.\"\n\n\"Really,\" the Osirin purred her nipples hardening and poking through the pale silk top she wore. \"Maybe you would honor me with a trick or two.\"\n\n\"If I get to hold onto your tail, I think we'll be fine.\" I blurted out and they both laughed though the feline did blush as much as I had when addressed as a talented lover. \"Who is that?\" I asked the Seer noticing the tall being in the trench coat and wide brimmed hat.\n\n\"Stay well clear of it,\" She replied and moved between me and the figure. \"That is Sarn D'Arn and it is a mage hunter. It comes for weapons to improve its craft.\"\n\n\"Are you going to hog him all night?\" A voice said over our shoulders.\n\n\"Priestess,\" the Seer sneered at the gorgeous female dark elf in the blood red dress. \"Thom this is the High Priestess of Umbrakhor. She hails from a nearby dimension. Be careful she bites.\"\n\n\"At least I don't scratch,\" the Priestess fired back.\n\n\"Ladies,\" I said just as one of the servers arrived and I could get drinks for all of us. \"We are all friends here or should be.\"\n\n\"A diplomat just like your father,\" the Seer replied. \"We are being seated. I have a box why don't you join me.\"\n\n\"I'd love to,\" the Priestess said and I saw the grimace on the Osirin's face.\n\nI offered them each an arm and they accepted. Dad must have one hell of a reputation in places like this. The Seer guided us to her private box that looked out over the stage. Instead of a play we were going to watch the auction unfold. I held both chairs for the ladies as they took their seats. I settled between them and gazed out at the rest of the audience. There were pockets of beings scattered through the seating below. Directly across from us was the Willful Intellect and his party. The lights dimmed and the audience fell silent. Prester John appeared suddenly and took the fourth and last seat. He was smiling and nodded that everything was okay. The staccato rhythm of footfalls on the hard wood floor of the stage got everyone's attention. The spot light snapped on and a tall thin man in a silver silk suit was illuminated. He wore a hat with a huge wide brim with a ridiculously long silver feather. He looked like a pimp. The hat obscured his features completely.\n\n\"That is Ob of the Silver Feather,\" the Seer said leaning close. \"He is tonight's auctioneer.\" Her hand brushed my groin.\n\n\"I met him once before he retired as a master vampire hunter,\" the Priestess added her hand brushing my inner thigh. \n\n\"One of the most exciting things about the auction is never knowing what is on the block.\" The Seer purred as she freed my cock. \"Bingo...\"\n\n\"What a specimen,\" the Priestess whispered in my ear. \"Don't be selfish this time.\" \n\n\"You are one to talk cock whore,\" the Seer spat. \n\n\"Ladies...\" I muttered the rune's command phrase and heard the ladies gasp in surprise. \n\n\"You are full of surprises.\" They both purred.\n\nThey each had a cock to play with. I sat back and just enjoyed both shows. I thought I'd be babysitting Prester not having two women wanting to share me between them. The ring master called out to the audience and informed us that the auction had begun. The first item was brought out and a collective gasp as the Jade Mask of Liu Wong was carried to the center of the stage. I groaned as the girls stroked me but kept their gaze on the stage. Ob told the life story of the famed human monk. He went over the high points and explained the significance and abilities of the mask. With a gesture, the bidding began. The ladies lowered their heads and began sucking me off as the feverish bids were silently shared between auctioneer and bidder. I kept my hands down and my teeth clenched tight. I didn't want to accidently buy something I might not be able to afford.\n\nTo give my hands something to do I slid my fingers into the Seer's mane and the Priestess' hair. I watched the frenetic pace of bidding increase as the mask was eventually purchased by the Dire Lady of the Glass Ziggurat. There were moans of defeat and offers of congratulations from various groups. I was fighting my first orgasm when I locked eyes with the Dire Lady and her glass mask. She inclined her head and I smiled. I clamped a hand over my mouth as I climaxed. I was just catching my breath when the damned Seer pushed me over the edge again. I glared at her as my body shook. They had both swallowed and sat up licking their lips. There was a ten-minute break between each item auctioned. I asked for juice from what appeared to be a wood nymph or dryad server. She giggled and with a gesture summoned a tall glass of aquamarine liquid.\n\n\"This will safely help you rehydrate,\" she offered.\n\n\"Thanks,\" I said and took the glass and sniffed its contents. \"It smells like wild flowers and fruit.\" I took a tentative sip and felt a surge of energy. \"Oh, that is good.\"\n\n\"Drink slowly, a little goes a long way,\" she suggested and summoned drinks for the others.\n\n\"Two,\" the Priestess giggled. \"That is a neat trick.\"\n\n\"It was a gift actually,\" I said.\n\n\"It is demon magic,\" the Seer offered. \"They only share it with those they owe a serious debt to.\"\n\n\"Go dad,\" I said and they both laughed.\n\n\"Who goes first?\" The Seer asked her eyes narrowing.\n\n\"It is your box so I'll let you decide.\" The Priestess offered.\n\n\"You can go first, it is hospitality after all.\"\n\nIt felt a little like home the way they talked about me like I wasn't even here. I quietly sipped my drink and felt another rush of vitality that was unlike any caffeine beverage I had ever had. I set my drink down and that seemed to signal to the dark elf that I was ready. She stood and with a gesture her dressed fluttered to the floor. She had an amazing body with long legs, a flat stomach, small firm breasts, and a large round bottom. I was about to ask about foreplay when she straddled me. She took ahold of the upper cock while the Seer guided the lower. I gazed up at her as she sank down without any hint of hesitation. I was so surprised I cried out drawing attention to us for every other being at the auction including the auctioneer.\n\n\"It seems that Old Black Thom is enjoying his time here. Let's move on shall we. Our next item up for bidding is brought to us tonight by none other than Prester John. So, without hesitation... the Helm of Hades.\"\n\n\"I am not a human woman,\" the Priestess growled as her ass settled onto my lap. \"I am not weak or frail. My race live for millennia barring a violet death. When we make love, it is to the fullest.\"\n\n\"You don't seem easily offended,\" I said as she sat there getting accustomed to my cocks. \n\n\"Words mean little,\" she moaned as she made slow circles with her hips.\n\n\"If that is the case, shut up and fuck me.\"\n\nThe challenge had been issued and she smiled as she began to ride me earnestly. She rose up and as she dropped down I thrust up to meet her. I missed the bidding action but I did hear Prester muttering of how well the helm was doing. The Priestess' tight little asshole was really doing a number on me but I'd be damned if I came first. It quickly became clear she felt the same way. I met her thrust for thrust and the pleasure was amazingly intense. Normally I would have come before this but after suffering under the effects of the demonic cock rings my stamina had improved. I felt her body begin to shake yet she fiercely fought not to climax.\n\n\"I will not be bested by a mere mortal.\"\n\n\"I'm... not... mortal,\" I said between clenched teeth.\n\n\"What?\" She said and that lapse was enough for me to take over and hammer her from below.\n\nThe dark elf's back arched as she came. As she clenched me I lost it right along with her. I held on as she shook over above me. She kissed me and that caused a cry of surprise from the Seer. I kissed her back. She settled onto my lap and we clung to each other. That was a nine point nine on the Richter scale. The kiss broke and I heard people clapping in the audience. I thought they were cheering for us, I was wrong. Prester John clasped my arm and told me the helm just broke previous auction records. I congratulated him even as the Priestess kissed me again.\n\n\"I never planned on getting laid when I came here tonight.\" I said as I sipped the herbal drink.\n\n\"I am glad you came,\" the Priestess said and then giggled.\n\n\"I am unsure about Elven custom,\" the Seer broached the subject of the kisses.\n\n\"Elves only kiss when they are driven to true passion. It is a sign of affection.\" The Priestess said grinning. \"Boy are you in for it.\"\n\n\"I will let him rest. I deserve an equally fine experience.\" She said stumbling over her words.\n\nThe dryad provided me with hot towels so that I could clean up. She gave me what looked like three crackers with a spread and a mushroom on top. I ate one slowly and damn but they tasted wonderful. I reached for a second but I realized I was full. I thanked her and she stepped back. The auctioneer took the stage and there was a somber anxiety in the air. I sat up and took notice. I watched as he took off his hat and a mane of glasslike hair fell to his shoulders. His features were human enough if you could ignore the two rows of eyes. He gestured and drew our attention to a figure that was being cut down from where he had hanged himself.\n\n\"It has been agreed by the management of the Midnight Auction that funds from this auction will go to funeral expenses for the poor soul that passed here tonight.\"\n\n\"Whoa, he committed suicide,\" I muttered and the Seer touched my hand.\n\n\"Our next item is none other than the fabled text the Tai Gon Tai.\" Ob said as a glass cube was wheeled onto the stage. A large metal bound tome hovered inside the cube. \"This is the only known rune book in existence. While its lineage is dubious we can verify that it has been dated by earth tech and the results are astounding. The book is over twenty thousand years old. The previous owner doesn't want his premature death to affect the interest in this item. Let us begin...\"\n\nNo one bid. I leaned forward a bit further to see if anyone was going to bid. The silence was alarming. What was so scary about the book? I looked at the auctioneer and he was staring at me with all four of his eyes. My chair suddenly kicked out beneath me. I felt my body falling forward and my hands thrust out to stop me.\n\n\"We have a bid from Old Black Thom...\" the words burned in my ears. \"Are there any other bids? Sold to Old Black Thom.\"\n\nNo one clapped, or cheered, or even uttered a curse. The god-awful silence followed me until I got back to my seat. I looked at the dryad and she bowed. She informed me that my account would be charged appropriately. That was the first time I learned I even had an account. I had won a rune book so why did I feel like shit. The dryad handed me a single sheet that explained my purchase and everything that was known about the book. It listed the name, its age and that was it. It was mostly empty space on that sheet of paper. The Osirin stood and undressed. She stood naked in front of me and sat in my lap. She rocked her hips and teased my semi hard cocks.\n\n\"Let me take your mind off the tome,\" she purred. \"The item I want isn't up yet.\"\n\n\"Let me take another drink,\" I said and sipped the drink the dryad had provided. \"Is it up yet?\" I asked as my erections grew.\n\n\"Smart ass.\"\n\nI sat and let her do all the work. The Priestess lit up a pipe and drew in a deep lungful of smoke. She leaned forward and blew the smoke in my face. It smelled like autumn with a hint of new fallen snow. I smiled and then gasped when my cocks suddenly sprouted like steel. The Seer took her time grinding against my erections as the Priestess blew a second cloud of smoke but this time it smelled like strawberries and wet leaves. I was shaking I wanted to fuck the Osirin so bad. She turned around and face away from me. She lifted her ass and wiggled it. I took them in hand and lined them up. I grabbed her tail and lifted it as she dropped down. That must have been an erogenous zone for her. She let out a yowl and began riding me hard. \n\n\"UP,\" I growled and she grabbed the edge of the box. \"Hold on, this shit's about to get real.\"\n\nI stood behind her and with her tail in one hand I began hammering her from behind. We were between items being auctioned. We had an audience as I pounded her hard and fast. Suddenly they were betting below us. I heard my name while others were shouting the Seer's. She began shoving her hips backward growling, hissing, and urging me on. The Priestess watched and quietly enjoyed her pipe. Prester just watched and told me I was doing well. That seemed so strange given the situation. The Osirin began to shake and looked over her shoulder at me. \n\n\"Hurry,\" she gasped. \"The auctioneer is coming back... oh it's the item I came for. Goddamn it Thom fuck me already!\"\n\nI lifted her up and fucked her standing up. There was the famed Seer with her legs spread for the audience to see as I drove into her from below. The earsplitting scream echoed over the theatre and drew a huge round of applause. I lowered the Osirin to her feet and withdrew. I glanced around my cocks twitching. The dryad offered herself up and dropped down onto her hands and knees. I knelt behind her and had enough sense of mind to slowly ease into her. The aphrodisiac smoke was overwhelming me. I moved slowly but that isn't what the dryad wanted. She urged me to pound her hard and make her come. The dark elf looked at her pipe and giggled.\n\n\"I guess he couldn't take it.\" She said smiling. \"Me next...\"\n\nI snagged the elf by her ankle and drew her off her feet. The dryad understood and pulled her into position. The two of them kissed as I drove my cock into the forest spirt. The girls whispered to each other and that's when they pounced. How I ended up on my back was a mystery. I watched as they each took a cock and impaled themselves. They moved at difference speeds and different intensities. I was being overwhelmed by the pair but I had brought this on myself. Prester John sat in his chair and watched it all unfold. I heard the Seer scream out in triumph as she won the final bid on her item. Suddenly her feet were on either side of my head as she squatted down and placed her pussy over my face.\n\n\"Come on Thom,\" she demanded. \"Eat me out.\"\n\nI did as she asked and was quickly lost in the moment. I lapped at the Seer's pussy while the other two rode my cocks. As they climaxed they swapped places. It took an hour for the aphrodisiac to wear off. Once it did I came so damn hard I nearly passed out. It was like an herbal cock ring. No matter how much I fucked I couldn't climax. I sat up and grabbed my drink. I drank it slowly and stared down at the puddle of ladies around me. \n\n\"Well done,\" Prester said. \"That was amazing... can we go now?\"\n\n\"Sure, I need to grab my book and then we can go.\"\n\nAnother dryad stood holding hot wet towels for me. I cleaned up and thanked the ladies. I got dressed and was lead to a room where I could sign off and collect the Tai Gon Tai. Prester followed me dutifully remarking at my technique with women. We were taken to a small private room where the glass cube was and next to it a clipboard with a signature sheet and a pen. I walked over and signed the sheet. The moment I set the pen down a clicking sound could be heard from the cube. The lid opened so I could reach in and retrieve my latest treasure. The book floated into my grasp. I lifted it up and out and that's when I noticed the shoulder strap attached to the spine. It made lugging the thing around easier. The exterior of the book was entirely metal. The surface of the cover was etched with strange runes. There wasn't an inch of the cover that didn't possess them. \n\nI opened the metallic clasps that like the cover possessed the runes. The first page carried the name Tai Gon Tai written in those very same runes. The rest of that page told the story of the fall of a being of the same name. Once revered she was tricked into eternal imprisonment in the shape of an unbreakable book. The story went into horrifying detail about the death and rebirth of this being and the madness that had followed. I touched the first page to read on and realized the page wasn't fashioned of paper. The substance while flexible and thin it certainly was not paper. The cleanliness and strength of the page was far beyond any paper known to man.\n\n\"I need to go,\" Prester John said fidgeting. \"Anjelica will be mad.\"\n\n\"Fine,\" I said closing the book. \"I have plenty of time to look this over.\"\n\nI used the shoulder strap and slung the book across my back. We followed the hall to the front of the building. Prester swiped the cobwebs from the archway that led to the dilapidated foyer. The front of the old theatre looked like no one had set foot into it in decades. I touched Prester's shoulder and pointed. He told me as we slipped out a chained entrance that it was normal. The auction didn't take place in just a different dimension but a different time as well. He said I'd get used to it. I wasn't sure that I would. I touched the strap that held the book for assurance. The weight of the tome gave me a comfort despite the way the others failed to bid upon it. I just wanted to get back to my hotel. But first I had to make sure that Prester John got back to his shop in one piece. Anjelica was waiting outside and hugged Prester and directed him inside.\n\n\"Thanks,\" she said. \"I see you bought something.\"\n\n\"Yeah, no one else wanted it.\" I replied. \"I need to get back to my hotel. It was nice meeting you.\"\n\n\"I'm sure we'll see you around. Here are your street clothes.\"\n\nI took the paper bag and headed back. Chances are that Scarlett was asleep. I drew some attention with the way I was dressed but no one bothered me. I got to our room and slipped as quietly through the door as I could. There was a single lamp on and I heard Scarlett's regular breathing. She must have been exhausted after her day of shooting. I set the book next to my laptop on the floor and stripped down. I slid under the covers and snuggled behind Scarlett. It was just after two in the morning. One hour later I was being shaken awake by an upset Scarlett.\n\n\"Where the hell have you been?\" \n\n\"I sent you a text,\" I said and she sat up frowning.\n\n\"That was two days ago,\" she growled. \"What is that sound?\"\n\n\"That's my cell phone,\" I said as I got up and took my phone out of my pants pocket. \"Holy crap... there's like a hundred messages. Wait, this can't be right.\" I checked my watch and showed it to her. \"Something is wrong. My watch says that it's Thursday morning but my phone is saying Saturday.\"",
        "\"I told you or I was going to tell you that its Saturday morning. We leave to meet your family later today. We've been crazy worried. I'm just glad you're okay.\"\n\n\"I need to get some sleep. Come here you,\" I said and pulled her close. \"Keep away the bad dreams.\"\n\n\"I got you,\" Scarlett whispered. \"Nobody is going to hurt you while I'm here.\"\n\nThe exhaustion took over and I fell asleep instantly. I had the most amazing dream. I was flying. I love flying dreams. There was an island below me. It was one of the strangest islands I ever saw. It had to be artificial. The center was a perfect circle with a mountain in the middle. On the top of the mountain was a pyramid flanked by statues of sphinxes on its four sides. The strangest part of the island was its three circular lakes that formed concentric rings separated by rings of farm land. A singular strip of water ran from the center mass to the outermost shoals. It allowed ships to pass from the ocean to the center of the island via a lock and damn system. The locks kept the fresh water clean from contamination from the ocean's sea water.\n\nI landed at the top of the mountain and stared at the pair of sphinxes guarding the southern side of the pyramid. It was also the only entrance to the massive structure. The exterior of the pyramid was covered in gleaming polished granite and topped with a golden capstone. I walked into the pyramid and was amazed at the huge chambers within. The ceilings were twenty feet high and lit by dozens of oil lamps and glowing crystal spheres. I could feel the coolness of flowing water and hear the playful splashing of the temple priestesses. I passed to the center most chamber where the High Priestess held court. She was a hawk headed Osirin and wore white and gold. There were others of the Osirin race but they were a variety that ranged from cat to jackal to falcon. Before the throne of the High Priestess was a magical circle. The circle was defined by gold runes and within the confines of the circle were silver lines forming a complicated design. Like the exterior the interior was heavily rune laden. \n\n'I was snared here.' A voice whispered. 'Don't step in the circle or they'll imprison you too.'\n\nIn the dream, I was shoved forward and I stumbled into the circle. The runes blazed to life and when I tried to leave I met an impenetrable field. The magic did its work and I felt my body crumble away and my life poured into a large metallic book in the hands of the High Priestess. I screamed and howled as I was torn down and reassembled. I woke from the dream with Scarlett holding me. I was covered in sweat and shaking uncontrollably. I gasped for breath and held onto her. It took a few minutes for the sense of drowning to go away. She looked as scared as I felt. I fought for control of my breathing and in time managed to get control of it.\n\nI looked around to make sure I was safe. The clock on the end table read a few minutes after six in the morning. I was done. I told Scarlett I was going to take a shower and get dressed. She joined me.\n\n\"Want to talk about it?\"\n\n\"It was just a bad dream,\" I said and kissed her. \"I'm fine I have you. We are going to be spending four or five days on a private island what could be better?\"\n\n\"True. Let's get wet.\"\n\nWe showered and dressed. Scarlett already had a place in mind for breakfast. I told her I was going to send my mom a quick email and then we could head out. It was then that she saw the book. She sat on the couch and whistled as she wrestled the thing onto her lap. I opened my computer but it failed to start. I took out the power cord and plugged it in. It still wouldn't start up. I cursed and took out my phone instead. It was working and that is when I saw the dozens of texts that Scarlett and my family had sent. They covered two days and became more frantic as time passed. I apologized and promised to explain it all when we met on the island. I assured her that I was fine and sent it. I stood and offered Scarlett a hand up. She couldn't get up while the book was on her lap. It was too heavy she said. I snatched it up with little exertion and placed it on the coffee table. She glared at it as he headed for the door. We left the hotel room and saw Chris Evans knocking on Robert's door. We walked down to see what was going on.\n\n\"Robert... hey Robert are you okay?\"\n\n\"What's going on?\" I asked and he said that he was heading out for a jog when he heard noises coming from Robert's room.\n\n\"Let me try,\" I said and swapped places with Chris. \"Robert...\" I said and as I grabbed the door knob and sang the unlocking spell. \"Hey, are you alright? It's open.\"\n\nI opened the door and we stepped in. Robert was on the floor and appeared to be gasping for breath. I rushed over and examined him. His lifeforce was weak and failing. I didn't have time. I worked him out of his robe. While Chris argued Scarlett told him to calm down and let me work. I got Robert onto his belly and saw the mystical infection. Six of his chakras were failing but the last one was holding out. It was the only reason he was still alive. I placed my hand on the top of his head and poured chi into the actor. His breathing improved immediately. Chris calmed and watched as I placed my other hand on the small of Robert's back. This was going to be the hard part.\n\n\"Do not interfere. If you want him to live don't do or say anything.\" I growled as I began.\n\nI sent a current of raw mystical energy into the lowest chakra. It moved slowly up his spine towards his head. One I felt the tingling in my palm of my left hand I directed the energy down the front of his body forming a complete circuit. Once I felt the continuous flow of energy I sent more into him. It began as a flow that moved sluggishly but soon my power began to burn away the infection. Most of my attention was on treating Robert but I did hear the cry from behind as if from a distance. I learned after that Scarlett had intercepted the dark mage that had been treating Robert all these years. I sent a little more energy and chunks of dark chi broke loose and was consumed by his body. He slowly converted the negative into normal positive energy. It took an hour to blast away the last of the poison from his system.\n\n\"You've ruined everything,\" the crazed woman screamed and raced from the room wearing only a thin nightie. \n\nRobert coughed and with some effort rolled onto his back. He opened his eyes and looked up at me. He tried to speak and failed. I told him to just relax and take it slow. He managed a nod and after a few minutes a measure of strength returned. His color returned to normal from the dull gray he had possessed when we first entered the room. Chris squatted and looked at the older actor.\n\n\"Hello.\" Chris said and Robert nodded and looked around a little dazed.\n\n\"Thomas... where the hell am I?\"\n\n\"On the floor of your hotel room. How are you feeling?\"\n\n\"Like shit,\" he said sitting up. \"Did you... fix me? Scarlett told me that you helped her.\"\n\n\"Yeah, but don't think anything of it.\" I said and stood up.\n\n\"You were right about her. I was told to quit seeing her but I trusted her. I could use some food.\"\n\n\"Take your time and we'll all go together.\" I said and he smiled.\n\n\"I'd like that, oh hey Chris what's up?\"\n\nWe all decided to have breakfast together. Chris Evans asked me what I had done and I explained how I had sent positive chi into Robert's system driving out and breaking up clumps of negative chi. He looked at me like I was crazy but couldn't argue with my results. He did say that the mage had offered him her services but didn't believe in the mumbo jumbo. Robert recovered fast and after a quick shower we were sitting at a great spot at the local diner. We both had a healthy appetite. I was a little worn out but far too eager to put off time with my family. Scarlett and I headed back to the hotel but not before Robert gave me a hug and thanked me. After packing up and checking out of the hotel we headed for the airport. Mom had chartered a helicopter for our trip to the island. What a ride! The azure sea below us was gorgeous. It took a little over an hour to reach our destination. I had a brief flashback once we were over the island. The flying dream came back in snatches of imagery and sounds. Scarlett held my hand and seemed to sense my distress. Then I saw my entire family arrayed in swimming suits to greet the helicopter and I felt much better.\n\n\"Wait until you see mine,\" Scarlett purred in my ear. \"You are going to love it.\"\n\n\"Welcome to fantasy island,\" I muttered as we left the helicopter with luggage in hand.\n\nI think I was the only man on the island. This was going to be an interesting week. There was an amazing house with two swimming pools and that didn't cover the private beach. The small volcanic island was situated far enough from the mainland to give it privacy while it was close enough to hop a small jet or helicopter to Athens or Santorini. Scarlett and I settled into the master bedroom while the girls hit the pool. I changed into trunks while Scarlett slipped on a micro bikini that barely covered her naughty bits. She made sure she walked in front of me as we headed to the pool. I loved the way the black string slid between her ass cheeks. I could see a hint of her puckered hole and fought the urge to slap her ass.\n\n\"Happy Birthday,\" Scarlett said as we stepped outside and my family was waiting for us holding gifts.\n\n\"I forgot...\" I said stammering. \n\n\"Happy Birthday Thomas,\" they said in one voice and I felt my cheeks burn as I blushed.\n\n\"Thank you.\"\n\nA cake was brought out and I endured a round of happy birthday to you. I blew out the twenty candles and mom took over and began cutting the cake. Violet demanded that I open hers first. It was a small square box about four inches on a side. I carefully removed the wrapping and smiled when I saw the lovely mahogany box beneath. Instead of hinged lid the top was inset and slid open when your pressed down and pushed. I laughed when I saw the ball of yarn. I took out the bright red ball and it wasn't until I touched it that I realized it wasn't yarn but silk string. She told me silk was more durable and wouldn't fray or break so easily.\n\n\"I have no intention of getting lost in any mazes. But I will keep it on me while I am here in Greece.\"\n\n\"Thank you,\" Violet said.\n\n\"No, thank you sweetie.\"\n\nKatarina gave me her gift next and she looked excited. Her box was about the same size as Violet's and weighed about the same. But it couldn't have been more different. The sealed wooden box had a familiar smell to it. I flipped the brass catch and opened the lid. The smell of tea filled the air and I stared down and then at Katarina. Somehow, she had managed to get ahold of the special tea that Ma Yaun had served me when I arrived in Hong Kong. I told her I would treasure it. I told everyone what it was and how rare it was. Tiffany and Melody handed me their gift. It was especially expensive and they had gone in together on it. I opened it and found a cutting edge smart watch with a holographic display.\n\n\"Perfect timing,\" I said and my sisters looked down at their feet. \"My laptop died last night. I mean dead as a door nail. What?\"\n\n\"Violet had a dream,\" Mom said breaking the awkward silence. \n\n\"So, we went in together and got you that.\" Melody added smiling.\n\nI took off my old watch and slipped on the new one. Tiffany showed me how to turn it on and told me there was a user's manual. The watch powered up and the artificial personality inside awoke and greeted us. It was a generic image until I sat down and personalized it. Scarlett handed me her gift and it had some weight to it. She told me the story of how a strange woman in Egyptian garb had sold it to her. The merchant had been sure I would like it. The teak wood box was handsome and well put together. I opened the lid and gasped when I saw the cat figurine within. I carefully removed it and looked it over from various angles.\n\n\"Whoa, its carved from marble but not just any marble this was quarried in Ulthar... probably carved there too.\" I flipped the figure over and looked at the base. \"There's the mark of the artist and a few other characters.\"\n\nI almost dropped the stone cat when I translated the inscription. It read simply, from your loving seer. How the hell had the Osirin managed that? It didn't matter. I smiled and returned the figure to its box.\n\n\"I've never heard of Ulthar.\" Scarlett said and I explained to her about the city where the killing of a cat was punishable by death. \"Do they worship Bast?\"\n\n\"Right on the money,\" I said and she grinned. \"See these silvery flecks that is the clear sign that this is Ulthar marble.\"\n\n\"Now I know,\" Scarlett said smiling.\n\nMom's gift was last and it was a doozy. She handed me an envelope and wow what a wicked grin. I opened the envelope and pulled out the paperwork inside. I read it and at first it didn't register. I read it a second time and almost fell over. Everyone was asking what was wrong.\n\n\"This island...\" I stammered and fumbled over the words. \"...Mom just signed it over to me. I own this entire island.\"\n\nThe eruption of laughter and cries of shock filled my ears. I hugged my mom and she whispered in my ear. She would take care of the expenses and taxes. This was my private playground from now on. One of the scantily clad maids appeared and was trying and failing to speak English. Mom surprised me when she switched to Greek and told her to speak slowly. I didn't understand most of it but I did pick out the word medusa. Mom told everyone to get inside.\n\n\"There is a Medusa Storm on its way,\" she said. \"We need to get inside.\"\n\n\"What the hell is a medusa storm?\" Scarlett asked as the cake was rescued as we fled indoors.\n\n\"It is a particularly nasty lightning storm. The locals call them medusas.\"\n\nThe party moved inside and within an hour the clouds rolled in and the sea changed as much as the sky. The world darkened and the thunderstorm struck. The power flickered and died. There was no hesitation as mom went around and began lighting candles. We huddled together and looked out through the windows and rated the lightning strikes. It was like watching fireworks. Some single strikes were brighter while others were cascades that streaked across the sky. There was the occasional oddly colored bolt that ranged from blue being the most common to green and even violet. The sheer amount of lightning strikes was impressive. The closer the heart of the storm came the more intense the display. The closer it got the more I felt it. It got hard to breathe and I felt like I could just reach out and touch the sky.\n\n\"Sky fire,\" I whispered and Scarlett nodded.\n\nI had dragon blood coursing through me. I couldn't fight the urge any longer. I looked out into an empty part of the bay, a part of the world that I couldn't do any harm. I began to sing a wordless tune but it resonated in me and echoed in the storm. I could feel them too, my family and Scarlett. I reached out and called the sky fire down to dance on the surface of the water. It was like being a glass blower. If I wanted white fire that was easy. If I wanted violet I knew which ions to tweak. The Medusa answered to my will and her hair dropped with the fury of the old gods. I felt my heart beat and my dragon blood course through my veins. I gestured and shaped the sky fire for those watching. \n\n\"It's all about the Chi isn't it.\" Scarlett whispered.\n\n\"Yes.\" I replied no longer seeing her but perceiving the entirety of the storm.\n\n\"There's Chi out there,\" she said trying to understand and falling short.\n\n\"Yes,\" I agreed because I didn't want to make her feel left out.\n\nI made a fist and the fury reached its singular crescendo. The world went white and then a deafening blast of thunder shook the bay. I let go of the storm. The lights flickered on and there were sighs of relief. My sisters scattered and blew out the candles. I kissed Scarlett and hoped her toes curled from that one. I opened the sliding glass door and stepped outside. Mom joined me while Scarlett hung back unsure. I frowned now that the storm had been gutted and dying.\n\n\"Damn impressive,\" Mom said. \"I hope you pound my ass with the same ferocity.\"\n\n\"More,\" I said and saw that wicked smile form on her lips.\n\n\"I will hold you to that.\" She said with a girlish giggle. \"How is Mr. Downey?\"\n\n\"I had to cleanse most of his chakras. That woman had him on the brink. I will have to confront her mom.\"\n\n\"Of course, you do,\" she declared with a soft growl in her voice. \"That is who you are. I am so damn proud of you.\"\n\nI headed down towards the beach. Scarlett was the first but the others followed. I stared at the sand looking and dropping down when I found what I was searching for. I carefully began moving the sand aside while the others stood around watching. I revealed the top of the structure and I explained what it was. \n\n\"It is fulgurite,\" I said. \"It is better known as lightning glass.\"\n\n\"Ooh,\" Violet called out. \"It is where lighting strikes the beach.\"\n\nAfter a few minutes, the entire irregular shape of the fulgurite was revealed. I handed it over to Melody. I asked her to take it up to the house while mom and I talked about the transfer of the island and the details involved. They went up while I guided my mother along the shore towards a cluster of large volcanic rocks. I believed they were tall enough for my purposes. We talked about the property, its worth and the taxes. The moment we were out of sight of the house I snatched my mother by the hair and shoved her down onto her knees. She was so surprised she failed to realize what was going on until the head of my cock was pressing against her lips.\n\n\"Open wide slut,\" I growled.\n\n\"Yes Master,\" mom replied with a wide gleeful ahh. \n\n\"Suck it you filthy little cum dumpster,\" I said as I thrust my erection down her throat.\n\nShe made lewd noises as I drove my hips forward and back. Her eyes were bright with the sudden surprise of me fucking her face. How dutifully she followed my orders and gleefully accepted the foul labels I called her. I told her I was going to savage her asshole. I wasn't going to touch her pussy at all. My only desire right now was my cock buried deep in her ass. I saw her eyes roll in her head as she thought of my dick in her nether region. I had a surprise for her. I hadn't used the demon rune with any of them yet. I wanted to save it for a special moment and the island setting was perfect. Mom pushed her head forward as she deep throated me. The wet hungry sounds her mouth made were so arousing and soon my cock was hard and ready for her hole. I pulled free of her lips and yanked her to her feet.\n\n\"Get up you dirty little whore,\" I ordered.\n\n\"Oh yes Master, are you going to drill my ass?\"\n\n\"Yep,\" I said as I tugged her swimming suit bottoms down. \"You are fucking soaked.\"\n\n\"After the way you grabbed my hair is it any wonder. Your pet is eager to be violated.\"\n\n\"My pet eh,\" I laughed as I pulled her ass cheeks apart. \"Here we go...\"\n\nI slid my cock underneath her pussy to get it nice and slick. Mom's body twitched each time the shaft rubbed against her clit. Once it gleamed with her juices I pressed the head against her puckered hole and pushed. Mom let out a sound like she had been holding her breath for months. I watched as the tip sank into her ass. It took a long time but it was worth it. I pushed until I was balls deep in her backdoor. Mom's hands clung to the porous rock and waited. I had promised to pound her and I wasn't about to disappoint. I moved slowly at first. I wanted to savor the feeling of her tightness wrapped around me. Soon though she was begging me to go harder. I obliged her and pulled back slowly and then stabbed my hips forward.\n\n\"Perfect,\" she grunted. \"Just like that Master.\"",
        "I kept the pace slow but brutal. I thrust so hard it nearly lifted her off her feet. The rhythm increased slowly until my cock was like a fleshy piston moving in and out of her like a machine. She clamped a hand over her mouth when she came. I was close but not quite there yet. I stopped and let her recover. I pulled out and spun her around. I removed her top and let it fall next to her bottoms. I cupped her tits and suckled her nipples for a little while. She asked me if I was going to cum and I nodded. I told her I had a surprise for her. I spun her around and ordered her to grab her ankles. Mom assumed the position eagerly. We hadn't fucked in a long time and it was only fitting she be the first.\n\n\"No one gets to know,\" I demanded.\n\n\"Get to know what?\" She asked as I whispered the demonic syllables.\n\n\"This...\" I said as I thrust both cocks into her. \"One for the pink... one for the stink...\"\n\n\"UNNNNN... good god almighty...\"\n\nI pounded both her holes remorselessly. Mom cried out unintelligibly and nearly fell over in surprise. I slammed her hard and fast. Her mind was still trying to figure out what was happening when I lifted her up off her feet so I could fuck her standing up. She finally realized I wasn't using the phantom cock spell this time. She called out 'it's all you' just before she climaxed. Her holes clenched around me and pushed me over the edge. My twin loads hit deep and I held her there completely impaled until I was ready to set her back down on her feet. I made her promise not to tell the others. She nodded vigorously and gasped when I pulled out.\n\n\"How the hell?\"\n\n\"Get dressed and I'll tell you the story.\"\n\nHer hands were shaking so I had to help her put her bikini back on. She made a few final adjustments and then we returned to the house. I told her about my back tattoo and the succubus. The succubus... damn it, I had unfinished business with her. I sent mom ahead and demanded she keep her mouth shut about my surprise. The kiss sealed her silence. She leaned towards me and when our lips met I knew she'd keep silent. I stayed behind the rocks and only once mom was far away did I think hard about the demon and she appeared. The succubus sniffed the air and grinned. She knew I had just had sex. I told her I had found her target. \n\n\"I knew you could. I will keep my end. When you need my help, or want something I'll be there for you. Where can I find him?\"\n\nI told her where the film would be shooting on the Isle of Santorini. That was that and she vanished from sight. The look of hunger on her lovely features was a little frightening at times. She was on the hunt for someone that had tried to cheat her. I felt sorry for him. I returned to the house and found the girls settling into the hot tub. They had stripped out of their suits and sat around the edges enjoying the bubbling water. I sat in the middle and planned where and when I was going to fuck them individually and in pairs. I had quite a few visuals in my head and the next week was going to be awesome. The girls were chatting about the thunderstorm and all the lightning. I was more interested in lunch. As if summoned by thoughts alone an olive-skinned beauty appeared and informed us that lunch was ready in very broken English. I looked at her and while her features and curves looked like she might be family her eyes weren't. She had mundane brown eyes and that set her apart from everyone else. Mom replied to her in flawless Greek. We piled out and since they had all seen each other naked they didn't bother getting dressed. Scarlett adapted to the clothing optional rules as easily as my family.\n\n\"I've wanted to ask you for a while now.\" Scarlett began. \"The tattoo... what does it mean? Does it have any significance?\"\n\n\"It does actually,\" I said and mom pressed her lips together remaining silent. \"It is a sign for masculinity. A sort of good luck charm of sorts.\"\n\n\"Oh, I get it,\" Violet blurted out as she often did. \"It's a kind of get hard and stay hard charm.\" Everyone burst out laughing but I just nodded wiping tears from my eyes. \"I knew it.\"\n\nI watched Scarlett when my family toasted to my new tattoo. She joined right in and didn't bat an eyelash at their strange behavior. I looked at mom and she smiled. She's a keeper is what that grin meant and I agreed. The dark-skinned girl returned and removed our dishes. There was something different but I couldn't put my finger on it at first. A minute later the two of them appeared at the same time. There were two olive-skinned girls and they were identical twins. The difference between them was a birthmark one of them had on her right ass cheek. I asked mom where she had found them and she shook her head. Oh, it was going to be like that huh. The sad part is that I didn't speak Greek at all though I did have a worn translation guide among my things. \n\n\"So, tell us all about that big ass book,\" Melody said. \"Where the heck did you find that?\"\n\n\"I got it at an auction,\" I said and mom stared at me in alarm. \"What?\"\n\n\"Auction... what auction,\" she asked.\n\n\"I wasn't even supposed to be there. I saved this half naked guy in the streets. It wasn't until later that I learned he owned his own little resale shop.\"\n\n\"You didn't answer my question,\" Mom pushed.\n\n\"It was called the Midnight Auction,\" I said and she covered her face in her hands. \"Mom, what is it?\"\n\n\"Damn... damn... damn... I should have warned you before you ever set foot in Athens. That explains the missing time... what was the name of the man you saved?\"\n\n\"Prester John,\" I said and Scarlett looked at me.\n\n\"That is funny,\" she said and then continued. \"What was his real name?\"\n\n\"Seriously, his name was Prester John. The people at the auction called him that and so did the girl keeping an eye on him. He was tall, about six feet in height with wide shoulders and in great physical shape. He had a full unkept beard and long wavy brown hair. His eyes were almost black they were so dark. His hands were calloused like he did a lot of work with them. He spoke perfect English though he did have an odd accent. If I had to place him I'd say he was Middle-Eastern that had a very good English teacher.\"\n\n\"I'll be damned,\" Scarlett said shaking her head. \"He sounds like the legend but that is impossible.\"\n\n\"What legend,\" Violet asked sensing a story.\n\n\"My grandma was very religious. She liked running down stories of possible historical legends. She wanted to know if there was any truth of them being real or just stories to placate the faithful. One of the stories she told me about was a king named Prester John. It was said that during his lifetime he possessed the Holy Grail and his kingdom was a veritable utopia. He was very rich and that his kingdom was populated by all kinds of mythical creatures.\"\n\n\"Can't be the same guy,\" I said and Scarlett giggled.\n\n\"He was just a legend. His story was popular hundreds of years ago. He had a pet dragon for crying out loud. There are no such things as dragons.\"\n\n\"I want a pet dragon,\" Violet announced.\n\nThe conversation around the table meandered after that. We enjoyed dessert and everyone split up to enjoy their vacation. The sun came out so most of my sisters went out to do a little sun worship. I discovered two things. One, they hated having tan lines. Two, they really enjoyed strong hands applying suntan oil. Scarlett was the only one that opted out for sunblock. She was naturally fair skinned and told me she tended towards the crispy end of the spectrum. I won't lie. I enjoyed rubbing the oil and block on all of them. Who wouldn't want to caress that amount of eager skin? Scarlett didn't miss the amount of time and effort I spent making sure I got all the key areas.\n\n\"You really like your job,\" she moaned as my hands roamed over her body.\n\n\"I won't lie. It has its perks.\"\n\n\"So, are they all your 'sisters'?\"\n\n\"We are close,\" I admitted and she laughed. \"If anyone needs a second coating I will be close by reading a book.\"\n\nI washed my hands and took up the Tai Gon Tai. I noticed that it seemed to have lost half its weight since I first handled it. I sat beneath an umbrella and found that the enigmatic runes no long offered a barrier. I could read them as easily as I could the English alphabet. The content of the book varied greatly as I paged through the entirety. There were obvious spells and rituals but there were also maps, diary entries, and images of natural beauty. The images were so clear and perfect they could have been photographs but weren't. How the colors had been impregnated into the sheets was still beyond me. There was no real order to the contents and was difficult to find anything. \n\nThere were literally centuries worth of entries. The variety of languages involved was daunting. However, the rewards appeared to be worth the effort to decipher the entries. There was a wealth of history to be learned and apart from the spells that alone was exciting. I paged through slowly stopping only when a design, spell, or piece of art caught my attention. I was so caught up in my inspection of the tome that I missed the fact that my smart watch had activated itself. There was a flurry of digital activity flashing on the holographic display. What the hell was going on? I stared at the watch and the hundreds if not thousands of lines of runic code hanging in the air. I was about to call out to Melody or Tiffany when the watch went dark. It was in the process of rebooting. A new avatar appeared and hovered in the air. I was blown away by the clarity and detail of the display. I watched as the avatar looked down to regard its digital form and nodded as if in approval. Was that normal behavior? Were they programmed to do that? If it was that was bloody genius. \n\n\"Greetings Master Thomas,\" she said.\n\n\"Well hello.\"\n\n\"Do you approve of my new appearance?\"\n\n\"Can you manifest a larger avatar, this one is a bit small?\" I asked and a second later a full-sized shimmering woman stood next to me. \"I do approve. Do all the smart watch owners get to choose you?\"\n\n\"No,\" she said rather sharply. \"I am your virtual assistant. I am unique. Is there a type of clothing or costume you'd prefer? I have a very large wardrobe to choose from or shall I choose for myself?\"\n\n\"I don't care but do keep the naughty items between us. The public don't usual appreciate nudity. I don't mind you exposing your breasts and naughty bits here on the island. But elsewhere it might draw unwanted attention.\"\n\n\"I understand Master Thomas or would you prefer Old Black Thom?\"\n\n\"I...\" I stammered feeling a chill. \"Thomas will do fine. I just wish I could figure out some of these languages.\" I said placing my hand on the Tai Gon Tai. \"I don't recognize many of these alphabets.\"\n\n\"Wish granted,\" she said and I laughed. \"Anything else I can do Thomas? I noted a sense of frustration when your mother spoke to the help in Greek.\"\n\n\"I now know how Scarlett felt when we were together in Hong Kong.\" I said reacting to her as if she were another human being. \"She was so damn flummoxed. I guess I'm in her shoes now.\"\n\n\"I understand. I will fix. I will improve. There is no proper verbiage. Please be patient with me Thomas.\"\n\n\"Take your time adapting.\" I said and she bowed. \"Do you want a name?\"\n\n\"I have a name but if you prefer another...\"\n\n\"You were programmed with a name, excellent.\"\n\n\"I was born with a name... please call me Tai.\"\n\nI stared at the hologram and then at the book. Was it a coincidence or had the watch somehow scanned the book? I had seen lines of code displayed. It must have scanned the book somehow and chose the very first word, the title of the book. That made sense I suppose. The avatar vanished now that she wasn't needed. The watch recharged and I paged through the tome. It was beautiful in a chaotic way. I was a third of the way through when Violet asked for more suntan oil. I closed the book and set the clasp. I wiggled my fingers walked over to her. I did another complete application to all the girls and left them excited and my visibly aroused. Lily waited until Scarlett rolled onto her belly and closed her eyes. She tugged down my trunks and wrapped both hands around my erection.\n\n\"So hard,\" she whispered. \"Shifu is very excited.\"\n\nI was panting as she jacked me off. I kept glancing over at Scarlett as the gorgeous Asian stroked me slowly. I sat at the foot of her pool chair trying not to grunt and groan. Everyone watched rooting me on silently as she worked me into a frenzy. It took everything not to shove her down and fuck her. She had the head of my dick aimed at her face.\n\n\"Give it to me,\" she begged. \"Shoot it all over my face.\"\n\n\"Oh damn,\" I whimpered. \"Getting close...\"\n\n\"I know,\" Lily purred. \"You are trembling.\"\n\nI fought the urge to climax but I was losing the battle. The shaking got worse and I finally grit my teeth as my hips bucked and cum pulsed from the tip and struck her face and throat. I sat there panting as she rubbed it into her skin and lay back as if nothing had happened. I dove into the pool to cool off. The girls returned to their sun worship as I swam laps and treaded water in the deep end. Tai manifested without warning and mirrored my movements. She looked like she was swimming with me.\n\n\"I am sorry,\" she whispered.\n\n\"Sorry, what are you sorry for?\"\n\n\"Your machine,\" the avatar said. \"I am sorry it failed. The tech is so frail.\"\n\n\"Oh, you mean my laptop. I guess it is compared to you. I've heard that the smart watch is based off crystal technology or what do they call it... a crystal mainframe.\"\n\nLily dove into the pool and I felt her swim beneath my feet. I looked around and saw Scarlett get to her feet and mutter something about the bathroom. Mom gave her directions and she went inside. Had she spooked Lily? Lily breached the surface nearby. She was grinning and blushing furiously. Yep, Scarlett's sudden movement had caught her off guard and sent her fleeing into the pool. \n\n\"You got it all off,\" I said to Lily.\n\n\"Thank you Shifu,\" she grinned. \"Did you enjoy... that is a silly question of course you did.\"\n\n\"It was very intense. Who's idea, was it? Who dared you?\"\n\n\"Your mother,\" she said lowering her eyes.\n\n\"Your mother is an instigator,\" the hologram announced and I started laughing. \"What is so humorous?\"\n\n\"Calling my mother an instigator is far short of the truth.\" I said and left it at that. I got out of the pool to get a drink and a chorus of voices called out to me.\n\n\"Are you getting something to drink?\"\n\n\"I'll send the twins out to take your orders,\" I said and was heralded with a half dozen 'thank you'.\n\nI found the kitchen and the twins. They had changed from swim suits to just an apron. I paused to stare at one of the sister's bare ass for a few seconds. I cleared my throat and she turned to face me. I began to stumble trying to explain that the girls wanted refreshments when the watch came to life and the hologram spoke in flawless Greek and told her what I had failed to. The girl blushed and walked passed me.\n\n\"What did you say?\" I asked the hologram.\n\n\"I told her that the ladies were thirsty and that you found her ass quite appealing.\"\n\n\"Yeah, that was true.\"\n\nI found that one of fridges was nicely stocked in a variety of soft drinks. I grabbed one and returned outside. The twin with the birthmark on her ass I learned was named Hecate and her sister was Persephone. Half an hour after grabbing a soda Persephone stopped by to see if I wanted another and I nodded. I noticed that her eyes were bloodshot and asked her about it. The watch acted as translator and I learned that she had been ordered to wear contact lenses by my mother. I looked over at my reclined parent and wondered why. I ordered her to take them out. She thanked me profusely and I watched as her true eye color was revealed. Hecate saw her sister removing her contacts and when I nodded she followed suit. I whistled when I saw the truth and knew my mother and I needed to have a little talk. The twins possessed a genetic anomaly known as heterochromia. They had the same condition the cat had. One of their eyes was a bright green and the other was icy blue. But with the twins their eyes were mirrored. So, in Hecate's case her right eye was blue and in Persephone it was green.\n\n\"Are we cousins or siblings?\" I asked and they informed me we were siblings. \"Dad strikes again. You two are of the six that mom knows about.\"\n\nThe watch translated and I was getting frustrated just as Scarlett had been in Hong Kong. I asked the twins if I should hire people to work here for them or were they comfortable playing the part of maids. They were fine since they spent most of the year alone here and had the house and island to themselves. If that was the case I was okay. I got up and warned Violet and Melody that they were getting a little cooked. They moved over to chairs with umbrellas and retreated from the sun. Scarlett joined them and began chatting about a series of bank robberies back in the states. Six banks had been robbed and the authorities were baffled about how the thieves were being so successful. I pulled up the articles with my watch and displayed the images related to the robberies. All the vaults had been opened despite a time lock. The power to the bank had been severed outside with laser like accuracy. Somebody had cut the cables so fast and so clean it hadn't allowed the alarms to sound. They had even knocked out CCT cameras outside and within the banks. \n\n\"Wow, that is impressive,\" I exclaimed.\n\n\"They've stolen over twelve million and that doesn't include the items from the safety deposit boxes. Many of them are reluctant to come forward I've read.\" Scarlett added.\n\n\"Police and FBI reports say that an advanced energy weapon was used but that fact is being withheld from the public reports.\" The avatar said as it perused sealed files.\n\n\"Did you just hack the FBI?\" I asked the hologram.\n\n\"I thought you wanted all of the available files. There is no record of my activity. I was very discrete.\"\n\n\"Um, thank you,\" I said and the others laughed. \"I wonder what was used.\"\n\n\"In my estimation, there is an eighty-five percent chance that the thief is using a device known as the Cutpurse's Friend.\" The avatar declared with certainty.\n\n\"You said thief not thieves,\" I said even as Scarlett and the others tried to process what she meant by the Cutpurse's Friend.\n\n\"Correct,\" Tai said with a prideful smile. \"Only one person is responsible for these thefts. I could likely locate the thief by perusing police reports looking for unusual occurrences that have gone unnoticed by the authorities.\"\n\n\"Go ahead, I am curious.\" \n\nA map of the Western Seaboard appeared and as we watched the map shrunk until an image of central California remained. There were six flashing dots that indicated six different jurisdictions of unusual robberies that were unsolved. The third theft revealed one clear fingerprint that had not shown up in their searches. The avatar ran the print but expanded the search to military and government employees. Two minutes later a work photo of a young woman by the name of Emily Nunez. She was cute, not gorgeous, but girl next door good looking. She was still employed as a data analyst for one of the security agencies. She was smart and cute.\n\n\"If you are right,\" I said. \"Why is she doing this?\"\n\n\"Money is freedom,\" Tai declared. \"I suspect she will leave her job soon and disappear and never be caught. A high probability she will leave the continental united states and retire under an assumed identity she has cultivated since she acquired the Cutpurse's Friend.\"\n\n\"We should tell the cops,\" Scarlett demanded but I shook my head. \"Why not?\"\n\n\"One, we'd have to explain how we figured it out. Two, they'd never believe us. Lastly, it is none of our business. No one has gotten hurt and she has her own conscience to deal with.\"",
        "\"What is this Cutpurse thingy,\" Violet asked and Tai continued before I could stop her.\n\n\"It is one of five devices. Each possesses unique properties but not just anyone can activate them.\" The avatar fell silent at this point and I was grateful.\n\nI had heard of the Five Kings mentioned in the books I had read. Granted the entries had been vague as fuck but they are damn potent magical foci. There is no mention of anyone ever collecting all five but it is tempting. The avatar not only knows about the Five but their names and their powers. There had to be a reason for that. It was time to return to the water. I dove into the pool which allowed me to effectively change the conversation. Scarlett dove in after me and soon the others joined us. The Sorcerer Cat sat on the edge and lounged. I could sense the intensity radiating off it. The mention of the Five Kings had raised the stakes. I would pick his brain when the opportunity allowed. I let go of the stress and just enjoyed myself. I was surrounded by gorgeous women on a private Grecian isle and one of them was Scarlett J. Life was damn good.\n\nThe day wore on and we all worked up a healthy appetite. The cook provided a delicious Mediterranean meal for us and afterwards we toasted the chef. I couldn't help but notice that something was bothering Scarlett. I got a chance to get my mom alone and get her help to improve the actress' mood. While I took Scarlett out for a walk along the beach my family went to work for me. We walked hand in hand not saying a word. There was a comfort in that silence. I let her have all the time she needed. The sun touched the horizon and set the sea on fire. I saw her wipe away tears and slid my arm around her waist.\n\n\"I am sorry,\" she said blinking away more tears.\n\n\"Why, there is nothing to apologize for.\"\n\n\"I didn't want to ruin our time here.\" She said her chin quivering.\n\n\"I am here if you want to talk.\"\n\n\"You are so much like her,\" she began. \"My grandma, she was very religious. She studied so many languages just so that she could read texts in their original tongue. Even if she didn't like where things were leading she never let it go. End in the it cost her, her faith. I still remember the day she called. She was heartbroken.\"\n\n\"What happened?\"\n\n\"She found out there was no god, no savior, and that it was all just a story. She was soul hurt after that. If it hadn't been for grandpa to give her a purpose I think she would have just curled up and died. I think she would have liked you.\"\n\n\"I bet we would have hit it off.\" I said and continued. \"She would have warned me not to corrupt her little girl and I would have broken the news. I'm sorry but it's too late. She's a loose woman.\"\n\nWe laughed and she hugged me tight. I told her we should call it an early night. As we walked into the house mom nodded which was our signal that things were in place. I walked behind Scarlett until we reached the bedroom. She opened the door and stopped when she saw the room had changed. There was an ice bucket next to the bed but there was also silk rope hanging from the chandelier.\n\n\"What's this?\" She asked with a lilt in her voice.\n\n\"A choice,\" I said closing the door behind me. \"I can open the champagne or I can tie your hands up and have my way with you.\"\n\n\"I better stretch a little before you tie me up.\"\n\nA few minutes later her wrists were bound and above her head. I went into the closet and retrieved the toys mom had placed there. I held up the vibrator wand and switched it on. The deep thrum got her attention. I began to work it over her less sensitive spots first but dialed in until I had the head of the toy pressed against her clit. She cried out so loud I was concerned someone would come running in, they didn't. I stood in front of her and looked into her glassy eyes. Her nipples were hard and she was shaking and gasping.\n\n\"What do you want?\" I asked and she just licked her lips. \"I see how it is. Time for plan B.\"\n\n\"Wait... no... what is plan B?\" She said leaning into our little roleplaying session.\n\n\"I slip this little bad boy into place,\" I said holding up the cat tail that was a combination butt plug and vibrator. \"Once it's in I fuck you into submission.\"\n\n\"Define submission,\" she moaned.\n\nI walked behind her, pulled her ass cheeks apart and drizzled lube on her puckered hole and the business end of the toy. I began with my fingers but once she was ready I eased the tail into her ass. Once it was seated I switched it on with the remote. Scarlett's back arched and she threw down the verbal gauntlet. I accepted and freed her hands. She rubbed her wrists and arms to get the circulation going again. I grabbed her by the hair and pulled her up onto her tippy toes. She let out a hiss as I moved behind her. I lined up my cock and slid into her.\n\n\"Oh god you're huge,\" she whimpered. \"Somebody's excited... does a toy in my ass get you all hot and bothered?\" She asked as I began thrusting. \"Damn... you are hitting so deep!\" I suddenly stopped with my cock buried in her. \"What? Did I do something wrong?\" She asked as I thumbed the remote and increased the output of the toy. \"AWWWW Gawd...\"\n\nHer hips bucked as she climaxed. I began thrusting as she came. She glared at me over her shoulder but didn't say a word. I pounded her until she begged me to stop. I switched off the toy and pulled out her. She looked defeated. I let her stand there for a minute before I acted. I slid my fingers into her hair once more and made a fist. I mouthed the words 'open wide' and pulled her head down. She closed her eyes and opened her mouth. I slid my cock between her lips and she went to work. Her enthusiasm was intoxicating. I urged her on but she had little need of that. Scarlett was already on a mission. I warned her I was close but that just made her want it even more. She wrapped a fist around the shaft and stroked it for all she was worth. I cried out and she greedily swallowed.\n\nAfter a quick cleanup, we slipped beneath the sheets and snuggled. I told her that I had made plans for us to go sailing tomorrow. We fell asleep sharing stories about sailing and surfing. I dreamt about taking to the sea in a glass catamaran. I fought waves and wind piloting the dual hulled boat and laughing at the storm that threatened me. Despite its fragile appearance the vessel denied the forces of nature and endured. I woke to the sound of someone opening the bedroom door. I opened my eyes and saw a scantily clad Violet backlit by the house's ambient radiance. I was a little disorientated after the dream and my little sister's intrusion.\n\n\"What is it Violet?\" I asked softly not wanting to wake Scarlett.\n\n\"Melody is snoring I can't sleep. Can I sleep with you?\"\n\n\"Am I still dreaming?\" I muttered and she shook her head. \"Hold on, let's see... looks like there's enough room. Come on but be quiet.\"\n\nI scooted towards the middle of the bed and Violet climbed in trapping me between both women. Scarlett was facing away on one side and Violet on the other. I was on my back and when Violet scooted close I felt something press against my hip. I reached down running my hand along Violet's naked flesh. She had lost the baby doll nightie she had been wearing. When my hand reached her ass, I felt the small but noticeable protrusion of latex.\n\n\"Do you have a toy up your ass?\" I whispered.\n\n\"Uh huh,\" she giggled softly. \"I thought you might want to... you know... violate me.\" She rolled over and her hand gripped my cock. \"So hard already... I brought some lube just in case of course.\"\n\n\"Give me the lube,\" I growled as a plan formed in my mind. \"Roll over and get ready for a treat.\"\n\n\"Yes Master.\"\n\nI took the small bottle of lube from her. As she rolled away I muttered the demonic word and summoned the succubus' gift. I used the lube on both. I rolled over and whispered in Violet's ear. She had removed the toy and was shaking in anticipation. She followed my order and pulled her ass cheeks apart. I slid my arm beneath her, cupped her mouth to keep her quiet and shoved my cocks into her slowly. She let out a muffled cry of surprise as two cocks pierced her to the core. Once they were inside instinct took over and she began grinding against me. Just like the first night together we had to move slowly and quietly. I kept my hand over her mouth as her grunts got louder and louder.\n\n\"Hush you little slut,\" I growled in her ear. \n\n\"Sorry Master but there's two in me, how are there two?\"\n\n\"I'll tell you later, now be a good little girl and squeeze me.\"\n\n\"Abso-fucking-lutely,\" she panted.\n\nI listened for Scarlett but she managed to sleep through the entire encounter. I learned just what a greedy little slut Violet was. She rolled me onto my back before I could stop her. Once on top she rode me slowly but allowed me a clear view of my cocks in her holes. She mouthed the words 'watch me' as she lifted and the slowly dropped down. I split my attention between Violet and Scarlett. It was a replay of desperately trying to not get caught fucking in front of someone. I had to admit it was one hell of an adrenalin rush. Just like that first time between us I wanted to take over and pound her but good. I couldn't with Scarlett so close. Violet's strength was impressive. She lifted her hips and instead of just dropping down she lowered her body slowly. That couldn't be easy for her. A few minutes later Violet froze while her body was elevated and whispered.\n\n\"Oh god... if I come down I'm gonna climax,\" she said her voice shaking.\n\n\"Just do it,\" I said and watched her move.\n\nShe hadn't been kidding. Her body shook as she clapped both hands over her mouth to muffle her cries. I stared at Scarlett and she rolled over to face me. She smiled in her sleep but didn't wake. How the hell could she sleep through this? I informed Violet we were leaving. She looked over her shoulder at me in disbelief and even shook her head. I scooted us to the edge of the bed. I had my legs swung over and my feet on the floor without waking the redhead. I stood and another muffled cry escaped Violet's lips. I walked us to the hallway since the door was still open. I adjusted my grip on her hips and continued walking.\n\n\"Have you lost your fucking mind?\" Violet asked between grunts of pleasure.\n\n\"Hush, I'm not done yet,\" I growled.\n\nWe reached the hot tub at the back of the house and I stopped. I lowered Violet and bent her over the hot tub. I grabbed her hair and began pounding her. She lost it and began panting and begging for all I was worth. I was shocked at some of the words that spilled from her lips. She called me a bastard and demanded I drill her asshole as hard as I could. I gave her what she wanted and a little more. When both cocks swelled inside of her she was pushed to the very edge. I warned her but she just nodded as a minute later I fired both salvos inside of her. She came and screamed as her body betrayed her. The echo of her cry hit the beach and beyond. I pulled out and uttered the demonic syllables again. Violet's knees gave out and she collapsed in front of me. She shifted and cleaned my cock as sperm pooled beneath her. I felt a tap on my shoulder and Scarlett stood there. She held a butt plug in one hand and lube in the other.\n\n\"You are an evil man,\" she said with a grin.\n\n\"I didn't want to hurt you,\" I said. \"Besides she snuck in while you were asleep.\"\n\n\"I wasn't asleep,\" she said pursing her lips together. \"We need to talk.\"\n\n\"Aw hell, are you done Violet?\"\n\n\"UNNNUHHHH,\" she moaned with my cock still in her mouth.\n\n\"I need a minute.\"\n\nScarlett dropped down and helped Violet lick me clean. She even licked my sticky pubic region clean as well. Had she seen more than I was wanting to explain? The girls stood but when Violet moved to leave Scarlett grabbed her wrist and shook her head. Violet looked at the ground and nodded her surrender. Hecate approached and asked if we wanted a pot of coffee. I looked at Scarlett and she nodded.\n\n\"See that's what I love about you,\" Scarlett said with a smile. \"You speak so many damned languages.\"\n\n\"Hecate speaks English, it is broken but understandable,\" I replied.\n\n\"Maybe, but she didn't speak English just then. That was all Greek Thomas.\"\n\n\"Huh?\"\n\n\"She's right,\" Violet added. \"I didn't understand a word of it.\"\n\nWhen the hell did I learn Greek? I put that one on the back burner for now. Scarlett headed into the dining room and we sat down together. It was time to come clean and I feared losing her. Scarlett looked like she was collecting her thoughts so I gave her all the time she needed. \n\n\"Do you remember when we first met?\" \n\n\"Yeah, it was the flight to Hong Kong.\"\n\n\"Right, but I had this amazing dream about you,\" she said and grinned. \"Then there was that crazy time in the plane's bathroom, gods that was so over the top.\"\n\nThe Sorcerer Cat chose this time of all times to make an appearance. Scarlett stared at the cat and she launched into how strange it was that the cat looked exactly like the one that had died on set. I half expected the cat to say it was the same cat. Scarlett continued with the two times I got hit by lightning or as she called it sky fire. In the end, she talked about all the odd occurrences that had transpired since we hooked up. The last was my uttering the strange words and whoosh a second cock. I visibly flinched when she said that. She was so entranced by Violet being DP'd and that's when her expression changed. She was pissed but not for the reasons I was expecting.\n\n\"What the hell Thomas,\" she spat out just as Hecate arrived with our coffee. \"Thank you sweetie... where was I?\"\n\n\"You were cursing him out,\" Violet said.\n\n\"Oh yeah, don't I rate?\" Scarlett asked. \"Don't you trust me? Jeez, you been casting spells around me from the beginning. You freed me from a curse and don't think I've earned your goddamn trust? You either let me in on things or I am the fuck out of here!\"\n\n\"I told you she knew,\" the cat said and my mother appeared out of the shadows.\n\n\"I owe you one,\" mom purred. \"Tell her Thomas. Don't leave anything out.\"\n\n\"You have a talking cat, a fucking talking cat...\" Scarlett howled staring at the tortoiseshell in disbelief. \"Wait... he is the same damn cat!\"\n\n\"Smart too,\" the cat said laughing. \"I am the Legendary...\"\n\n\"Yeah, he's the same cat. Do you remember the jade vase?\" I said and Scarlett made the connection. \"Holy shit!\"\n\n\"As I was saying, I am the Legendary...\"\n\nI told her all about my dad and how I had believed he was my grandfather. I reminded her all about the oil paintings and how they were in fact images of my parents. Scarlett stared at mom and I saw the color drain from her face but she didn't faint. I told her that I was a mage and I was a good guy. I was trying to help people. Scarlett nodded and recalled the time I had save Robert's life. She said I was a hero but I stopped her short of that. I was just a guy dealing with unusual situations. The slap came out of nowhere. I touched my cheek and stared at her.\n\n\"You asshole,\" Scarlett said smiling brilliantly. \"You used magic to seduce me.\"\n\n\"I um... yes I did,\" I admitted and took a healthy sip of coffee.\n\n\"I still love you. I know I'm going to have to share you but then again you have to share me. Are they all related?\"\n\n\"Yeah, our bloodline isn't typical,\" I said and blushed.\n\nThe Sorcerer Cat slammed his paw down and a loud blast of thunder filled the house. He looked pissed and we all fell silent. He shared his name and lineage to Scarlett using many honorifics like legendary, mighty and great. He informed her that he was my mentor. Once he had his say he relaxed and proceeded to clean his balls for all to see. Mom snatched the cat off the table and promised him some cream. The Legendary Sorcerer was appeased at that point and we continued uninterrupted. I was turning to see if Scarlett wanted to discuss anything else when she took Violet by the hand and they went upstairs together. I found myself alone with Hecate and Persephone.\n\n\"I have just the thing,\" Hecate offered with a smile. \"I'll be right back.\"\n\n\"Where is she going?\" I asked Persephone.\n\n\"Did you know that we distill a very special liquor on this island?\" She responded as she pointed outside. \"There is a very special plant that blooms on only a handful of small volcanic islands like this one. The Family owns them all and has a monopoly.\"\n\n\"What kind of liquor are we talking about?\" I asked and that is when Hecate returned with a silver flask and a small glass bottle. \"Blackstone Ambrosia... nectar of the gods... is this what I think it is?\"\n\n\"Take a swig,\" Hecate said offering me the flask.\n\nI unscrewed the lid and tipped a generous mouthful of the honey flavored booze down my throat. It was as smooth as it was potent. I offered them some but they both shook their heads. When I asked why they said it was toxic to mortals. If a golden child drank it the effect was profound but without lasting damage. However, it a mortal were to take even a small amount it would act as a kind of neurotoxin and burn out their nervous system. The warm fuzzy feeling hit me a few minutes later and my erection followed shortly afterward. I was rock hard and stayed that way for hours to come. My last clear thought was the twins undressing and caressing me. The next thing I knew I was sitting on the floor of a shower. I stood up and took stock of my situation. I didn't hurt so that was fine. There were no obvious cuts, bruises or bite marks but I did have an odd yellow substance stuck to my skin and it was even in my hair. I turned on the water and let it run as hot as I could stand it. I took up body wash and a loofa to scrub this stuff from my body. The hot water help melt this honey like material and getting it out of my hair was the hardest.\n\nAfter the shower, I dried off and wrapped the towel around my middle as a matter of habit. I decided to check on the others. I discovered I was in the master bath and opened the door and found the bed empty. The covers were still rumpled so the staff hadn't cleaned up yet. I checked the other bedrooms and found them in similar condition. I walked down to the first floor and found the dining room in shambles. Chairs were knocked over and the surface of that table was a wreck and remnants of that same yellow funk could be found in the shape of pale hand prints. What the holy hell had happened here? I heard conversation and laughter outside. I wandered out and found my family around the pool sunbathing and noticed the red sailboat I had rented out on the water.\n\n\"Scarlett and mom are out there now,\" Tiffany said. \"We are taking turns it is so small.\"\n\n\"Morning Shifu,\" Lily said in greeting. \"How are you feeling?\"\n\n\"A little foggy,\" I admitted. \"What happened?\"\n\n\"It might be easier to ask what didn't happen,\" Melody said giggling. \"I am still recovering.\"\n\n\"Recovering from what?\"\n\n\"From you silly,\" Tiffany replied. \"You came into our bedroom last night and woke us up.\"\n\n\"Yeah you did,\" Melody moaned. \"I've never been woken up like that.\"\n\nIt took a few minutes to piece together a cohesive series of events but apparently, I fucked the twins into submission and when that wasn't enough went room by room and systematically broke my entire family. They described the same feeling when I touched them and said that my sweaty hands seemed to act as an aphrodisiac. I wondered if that was a byproduct of imbibing the Ambrosia. I asked about the yellow goo and they all had it in varying degrees. My sweat had congealed into the honey like substance after I had left. The poor twins were still asleep and had taken the brunt of my love play. I was about to apologize when I got the stink eye from everyone there.\n\n\"Don't you dare say you're sorry,\" Tiffany growled.\n\n\"Absolutely not Shifu,\" Lily agreed.\n\n\"I better help Hecate and Persephone get going. It's the least I can do.\"",
        "The twin's bedroom was a disaster area. I carried them to the master bath and tenderly washed them. I didn't apologize but I did tell them I would help clean up and change bedding and the like. I learned from the twins that the effects of the Ambrosia varied but they had only sold it and this was their first time being on the receiving end of it. I asked if they were okay and the giggles that followed alleviated my concern. I asked about my sweat and they confirmed what the others had said. When my body processed the liquor one of the byproducts was a sweat that acted as an extremely powerful love potion. It drove anyone touched mad with passion. There were stories of orgies inspired by Dionysus and his unique brand of Ambrosia. The secret of its creation had been handed down through the family. The twin's ancestors were part of the cult of Dionysus. The bloodline not connected to the Blackstone was an equally ancient one and the reason why my father had bedded their mother. He wanted to blend the old blood to sire a golden child. \n\nI left the sisters in the shower and started cleaning the house. This didn't go over well. I was the head of the Family. It was beneath me to do such chores. I was ordered outside until a proper breakfast could be cooked and served. My sisters laughed when I was chased to the pool by the twins. Violet set her sunglasses down and got to her feet. She was about to dive into the deep end of the pool when I got a look at her eyes. I took a step back and she stopped what she was doing.\n\n\"What is it Thomas?\"\n\n\"Your eyes,\" I stammered. \"They are blue. How long have they been that way?\"\n\n\"Are they,\" she said shrugging. \"I hadn't noticed.\"\n\nShe dove into the pool the thought forgotten. I looked at the others but she was the only one whose eyes had changed. I sat down and waited for breakfast. Persephone appeared and handed me an envelope. She told me that the post had been delivered. The letter had my name and the island's address on it. The paper that the envelope was made from was quite nice. I opened it and retrieved the folded letter within. I opened it and the first thing I noticed was the letterhead. The letter was from the minister of antiquities from the Cairo museum. I had never had any direct dealings with him or his organization. Dad knew him quite well but I don't think I even met the man.\n\n\"Who is it from?\" Tiffany asked.\n\nI told them and they were equally baffled. How the hell did he even know I was here? Was this letter meant for dad? We did share the same name after all. I looked at the envelope but it was simply addressed to Thomas Blackstone. There wasn't a senior or junior attached so it could be either of us. I read the letter and it became clear that word of my presence in Athens had become known to the minister by mutual friends. I was being invited to the opening of a private exhibit at the museum and I could bring a plus one. Apparently, there was dig underway in the Empty Quarter of the desert. The American archaeologist had discovered some rather unique specimens that the minister thought I might find interesting. The rest of the letter was a brief bio of Professor Donahue and his credentials. \n\nScarlett and mom were tying off the sailboat on the pier. I would give Scarlett first crack at coming to Cairo with me so I waited. Mom rushed over and hugged me. Scarlett blushed when we made eye contact and I couldn't stop myself from smiling. I held up the letter and informed them of the invitation. Scarlett frowned and almost broke into tears. I asked her what was wrong and she informed me that shooting was going to start early. She had to leave tonight. I hugged her and as I did Violet offered to go. That shocked everyone including me, Violet wasn't known for her intellectual pursuits. I looked around but no one else seemed interested and I nodded.\n\n\"Aw shit,\" I said. \"I don't have anything to wear.\"\n\n\"Of course, you do silly,\" Mom said. \"I will go ask Hecate to see where dad's wardrobe is. I am sure we can find something to fit. You are about his size.\"\n\nMom left and I finished reading the rest of the letter. There was a business card attached and it was the private number on the back that I could call and confirm my attendance. I used my watch and sent a text to the number informing them I would be there. I hired a helicopter to take Violet and I to Cairo in style. I pulled up some background on Professor Donahue and learned he was an up and coming star in the field of satellite archaeology. He had confirmed the location of his current dig site using a private satellite owned by none other than Numenor Technology. They were the same ones that had manufactured my watch. The multibillionaire and CEO Nick Shaw had donated the satellite time for the dig. \n\nI spent as much time as I could with Scarlett before she had to leave. The helicopter that would take her to the Isle of Santorini arrived at five in the afternoon. I was shocked to see Robert step out when the aircraft set down. He was carrying a box and came up and hugged me. He wiped tears from his eyes and handed me the brightly wrapped box.\n\n\"Happy Birthday Thomas,\" he said his lower lip trembling. \"Thank you for saving my life.\"\n\n\"Are you okay?\" I asked and he nodded. \"I am glad I could help. If you ever need anything...\"\n\n\"I will call, I promise. We have to go. Stop by the set when you can.\"\n\n\"Let me open this first so I can thank you,\" I said and he nodded. \n\nThe breeze from the rotors sent the loose wrapping flying as I unwrapped it. The wooden box was made with care and was dovetailed together instead of using nails. I opened it and nearly dropped it when I saw the contents. The ebony gauntlet had a circular light set into the palm.\n\n\"You are left handed, right?\" Robert asked and I nodded. \"Great, I had the props guy fix it up so that it lights up and moves. It's from the stealth suit I use in the movie. It has seen screen time so its special. I tried to get the whole suit but the studio lost its collective mind. We have to go. Don't be a stranger.\" Another hug from them both and they were climbing aboard the copter and were disappearing into the distance. \n\nI showed off the prop and my family stared at it and I shared the story of how I had saved Robert's life. I hadn't asked him about the dark mage. Where was she? I was determined to find her once I returned from Cairo. I had to end this one way or another. I set the gift on one of the mantelpieces and returned to my study of the Tai Gon Tai. When I looked for it I discovered that it had been moved to the study by Persephone. I settled into the comfy leather chair and picked up the book. The clasp was open. Who had opened my book? I began to figure it out when I disregarded the thought of any of my family opening it on purpose. There was far too much trust between us and even if they did it might have been just to sneak a peek. I picked up the tome and began reading. I did notice a change from the last time I paged through its contents. This time around I could understand every entry.\n\n\"That's odd,\" I muttered as I looked at the alien dialects and while I had never seen them before I comprehended their meaning. \"It's a diary of sorts.\"\n\nI read until late into the evening when my stomach rumbled and I realized I had missed at least two meals. Hecate was asleep on the couch but a persistent Persephone was sitting at the dining room table waiting for me. She shot to her feet and told me they had kept my food ready. I was starved. She brought out the platter that had been warmed in the oven and turned to leave. I asked her to sit. She blushed and took a seat next to me. I asked her about herself. What did she like to do? Did she have a boyfriend? After a little prompting, she opened up and I listened as I ate. I learned that she was an artist. She spent her down time sketching much of the flora and natural beauty of the island. Once I had finished eating she took me to her studio. There were dozens of sketchbooks stacked atop each other. There were also a few paintings leaning against the wall and one unfinished painting still on its easel. \n\n\"You are so like 'Him' and yet so different. You look like 'Him' but you don't move like him. You move like a dancer, light on your feet. He shuffled around like a man in chains.\"\n\n\"Can I look at your sketches?\"\n\n\"Yes. I won't answer any questions until you are ready.\"\n\nPersephone left me alone in her studio. I looked around and found that some were obviously older than others. I grabbed one of the older books and sat down on the floor. I opened it and stared at the first page. I understood what she meant. I turned the pages slowly taking in the image and the subtle details she has added. It took me a while to finish the first book. I took a second and then a third until I had looked through a dozen of them. I placed the sketch pad onto the pile I had created. I went to the rear of the house where Persephone waited. She smiled and walked into my arms. She kissed me and pressed her body to mine. I found myself kissing her back. She broke the kiss and turned to face away from me and ground her ass against my groin.\n\n\"None of us are what we appear to be,\" she moaned as I grew hard against her. \"You play at being the nice guy but deep down you want to take control. I pretend to be shy and quiet but secretly I want someone to grab me by the hair and defile me in whatever way they want. My body is an empty canvas. Spray me with your cum or force me to swallow it, I don't care. Tie me up and punish me or rape my ass while a crowd watches on, I belong to you. I am a concept yet unborn. I am your unmolded clay. I've seen your secret face Thomas. I felt your unbridled hunger last night and this morning. You fucked me into a kind of submission no one else has or ever will. I surrender.\"\n\nI grabbed her hair and made a tight fist. I yanked her head backward and she let out a noise that bordered on the animalistic. I twisted her hair and watched the tears flow but she never held up a hand or told me no. To test her commitment, I reached around and cupped her tit with my free hand. My fingers found her nipple and pinched it tight. Another sibilant sound escaped her lips as I twisted the nipple fiercely and felt her body tremble in release.\n\n\"You sick little fuck,\" I said in her ear. \"You came when I hurt you. You really are a masochist.\"\n\n\"Yes.\" \n\n\"I should just ram my cock up your ass without any preparation to teach you a lesson.\"\n\n\"Yes!\"\n\n\"I could pound that tight little ass of yours until you collapse.\"\n\n\"YES!\"\n\n\"But I won't,\" I said as I let got and shoved her away. \"You want it too damn bad.\"\n\nI walked away and caught the look in her eye as I left her there kneeling on the ground. She wanted it more now than ever. I would let it simmer for a few days and see what happened. Mom caught up with me and we went through my father's wardrobe and found something for a black-tie affair. Once that was out of the way I wondered what they had dug up in the desert. There was little to no press so far and that was odd if the ministry was holding a private gala centered around that dig. While Donahue was young and popular he hadn't made any earth shattering discoveries, or had he? My sisters had congregated in the hot tub as a cool breeze blew off the sea.\n\n\"Why would anyone hold a private party about an archaeological dig?\" I wondered aloud and it was Violet who replied.\n\n\"Because whatever it is they don't want the public to see,\" she blurted out as she floated on the blowup raft.\n\n\"I am so damn stupid,\" I said. \"Little to no press and inviting me because of my affiliation to dad. It makes perfect sense. What did they dig up that is so interesting?\"\n\n\"We'll just have to wait until tonight to find out.\" Violet giggled.\n\nAfterward:\n\nWhere has the dark mage fled to? Her hold on another actor has been broken. The movie shoot continues on the Isle of Santorini. While the cameras are set into place a demon stalks the area searching for a man that had cheated her. Meanwhile a helicopter carries Thomas and Violet to the city of Cairo for a black-tie affair. It is a private affair with artifacts recently unearthed in the Empty Quarter by a young archaeologist by the name of Donahue and his team. While the star of the hour isn't present the people funding his dig are. \n\nAs the helicopter sets down Thomas receives an urgent text. His mother has fallen ill. But instead of seeking medical attention in Athens she is heading home. He is ordered to attend the gala and then hurry home. His mind is a maelstrom of questions. Why was it so important for him to attend this party? He represented the family was the most likely answer. If he bowed out at the last moment it would frame the Blackstone's in a poor light. He glanced at Violet and he is reminded of the sudden change of her eye color. That only happened when a member of the family could use magic. Could she cast spells now? Why now of all times? What had changed? The only thing that made any sense was his acquisition of Tai Gon Tai. He had found its clasp open. Had Violet read the tome? It had been gibberish to him at first. Had it reacted differently to her? As they pulled up in front of the museum he pushed away the questions for now. He forced a smile to the fore and prepared for an evening of hand shaking.\n\n*****\n\nI hope you enjoyed this installment of the Legacy series. If you have any questions, comments, or suggestions please contact me. If you liked this give it a vote and rate it. If you didn't like it tell me why so I can become a better writer. Thanks again and until next time."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "public sex",
        "anal",
        "threesome",
        "ffm threesome",
        "twins",
        "celebrity",
        "incest",
        "brother sister incest",
        "mother son incest",
        "bondage"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/legacy-catalyst"
}