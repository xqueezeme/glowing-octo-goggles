{
    "title": "Disappearing Act Ch. 03",
    "pages": [
        "The chronological order of my stories is listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 15 - Confession Is Not Good For The Other Perp's Soul\n\nCindy Ross came into Interrogation-A alone. Officer Lydia Green was just inside the anteroom. Willa Mason was waiting for Cindy, alone.\n\n\"Willa,\" Cindy asked. \"Do you want a lawyer?\"\n\n\"Not yet.\" replied Willa.\n\n\"In any case, I'm going to read you your rights.\" said Cindy.\n\n\"If you do, I won't speak.\" said Willa. \"I want to talk to you, privately, off the record. If you're recording this, then turn it off, or let's go somewhere else.\"\n\n\"I can't play that game.\" Cindy said. \"But tell me, what do you want?\"\n\n\"If I tell you everything, I want no charges against myself. I walk, as if I was never there.\" said Willa. \"I'll give you enough to get the real bastard, in exchange for full immunity.\"\n\n\"I can't do that at this point.\" Cindy said. \"And I have to read you your rights first.\"\n\n\"I'll walk anyway.\" Willa said. \"Your boss, the guy with the crowbar, he fucked me earlier today. I've got audio and video recordings. We both know what that means, not only for your case but the scandal that will happen.\"\n\n\"Do you have a semen sample?\" Cindy asked.\n\n\"I've got the recordings.\" Willa countered. \"That's enough.\"\n\n\"I suspect you have no semen sample, and I'm willing to bet that audio and video recording didn't come out very well.\" Cindy said immediately. \"I'm even willing to bet it's just static. But what you just did was attempt blackmail. That in itself is a felony, Willa, and I can assure you that the video recorder in this room right now is working perfectly. So you are going down, one way or another.\"\n\nCindy turned to the one-way glass and gave a thumbs-up, jerking it upwards. I turned on the recording equipment, which had been off, and disabled my device that jams recording... which had been on just in case Internal Affairs was trying to listen in.\n\nCindy then read Willa her rights, verbatim from the card. At that point, Phyllis came through the anteroom and into the Interrogation room, followed by ADA Paulina Patterson.\n\n\"Miss Mason,\" Phyllis said severely, a tone she used with me growing up whenever I was in real and deep trouble, \"it's time for you to stop with the games. Now you can work out a plea deal with the ADA here and tell us all you know, or you're going to be charged with murder and conspiracy to commit murder...\"\n\nPart 16 - The Final Interview\n\nOn Friday morning, July 17th, at 8:05am, I walked into Interrogation-1 with ADA Paulina Patterson. Cindy and my mom were watching through the one-way glass. Jimmy Tolson was already sitting at the table, wearing an orange jumpsuit, his lawyer sitting next to him, both just having been brought in by Patrolman Hicks, who stayed in the room per requirements.\n\nSaying nothing else, not even a good morning, I read Jimmy Tolson his rights from the card. When I asked him if he understood, he refused to answer.\n\n\"Okay, let the record and the video show that you have been read your rights in the presence of your lawyer, and you don't need to answer the confirmation for my Constitutional duty to have been done; as your lawyer is sitting next to you, you're fully represented and your rights maintained.\"\n\n\"What is this about, Commander?\" the lawyer asked, witheringly but warily. He could tell something was up, and he was correct. \"My client has invoked, and you're fast reaching the point where you need to swear out a warrant to charge him, or else let him go.\"\n\n\"I just have one question for you, Jimmy.\" I said, my eyes boring into his, seeing the contempt there, matching my own for him. \"Just this: What did you do with the bodies?\"\n\n\"What?!\" asked the lawyer. \"This is-\" I held up my hand, silencing the legal beagle while maintaining the staredown with Jimmy. I'd seen the fear flash behind his eyes.\n\n\"C'mon, Jimmy,\" I said, \"you might as well tell us. I already have an incredibly strong case against you... for murder in the first degree, with premeditation and under aggravating circumstances that will get you the death penalty.\"\n\n\"Now just a minute-\" the lawyer tried again. I turned to him and made a motion to Paulina, who handed the lawyer a document.\n\n\"This is a warrant for the arrest of Jimmy Tolson.\" said ADA Patterson. \"For the murders of his brother Billy Joe Tolson and Mrs. Bonnie Jean Mason, both human beings.\" The lawyer examined the document.\n\n\"It's valid, Jimmy.\" the lawyer said. \"So, what is your evidence?\"\n\n\"Willa has confessed,\" said Paulina, \"and has agreed to turn State's Evidence in exchange for a plea deal. She has told us how she helped your client stage the scene of his brother and Mrs. Mason going to the upstairs room, and how he murdered them.\" Jimmy looked at his lawyer.\n\n\"The only thing Willa could not tell us,\" I said, \"is where and how you disposed of the bodies. Why don't you at least do the families the decency of telling us where the bodies are?\"\n\n\"Why should I give a shit about them?\" Jimmy said, his voice full of hatred and derision. \"They sure as hell didn't give a damn about me. And you can put me to death if you like, but I won't help you at all.\"\n\n\"There is no hope for any deal for you, except perhaps some consideration if you tell us where the bodies are.\" I said. \"In fact, if you don't tell me where you put them, I'm going to make sure you don't get the death penalty. You'll get life without parole. You'll be placed in the general prison population, and I'll make sure you don't get protective custody or isolation. You'll be bent over and your ass turned up, and you will be raped in your sorry little ass, every... single... day. You will be some gangbanger's bitch, and you will give him and his buddies sex whenever they order it. You'll be passed around like a piece of meat, and you won't be able to shit or spit after they finish using your ass and mouth.\"\n\nI leaned in. \"Oh, you think nothing can be worse than what your brother did to you? Shoving your head into a shit-filled toilet, ramming a vibrator up your little ass like he did? Well, you got him back for that, you murdered him, and I might even understand that, just a little bit. But shit, boy, after the gangbangers are finished with you, you'll be begging them to kill you or help you commit suicide.\"\n\n\"Can this bastard really talk to me this way?\" Jimmy asked his lawyer, looking sideways at him as he leaned back.\n\n\"At this point, with what they have,\" said the lawyer, \"there's nothing more I can do for you.\" The lawyer turned to me. \"If he gives you want you want, will you give him protective custody?\"\n\n\"He'll get Supermax.\" I said. \"Total isolation, 24/7. Life without possibility of parole, forever in Supermax. That's the best I can do for him.\" Paulina nodded in agreement.\n\n\"I'll take Supermax, and complete protective custody.\" said Jimmy Tolson. After Paulina put it in writing, Jimmy Tolson started talking.\n\n* * * * * * * * * * * * * * * *\n\nWe stood on the edge of Reservoir Lake at its northernmost point, nearly into Nextdoor County. Indeed, we'd called the Nextdoor County Sheriff to let him know what we were doing, and that the bodies dumped here might be on their side of the line. Their Sheriff said to just bring them out of the water on our side of the line, which would keep it kosher with him.\n\nA Police Diver, also a member of our SWAT Team, surfaced just yards within the line. He then submerged again, and I knew that he was telling the other divers to bring the bodies more westerly, to ensure we were on our side of the County line when they surfaced. Indeed, when they did, they were well inside our borders.\n\nThe bodies were heavily wrapped in plastic and preserved well enough that my Crime Lab team, led by Dr. Woodrow personally, said that they should easily be able to get enough DNA to make matches. Even so, a necklace found on one of the bodies was known to be Bonnie Jean Mason's.\n\nPart 17 - Insurance Issues, Twice Redux\n\nThe party moves fast in my Town & County. At 2:30pm that Thursday afternoon, I entered the offices of Richard Hudson of Reems & Berry Insurance, brushing past the receptionist and the man's personal secretary. I was wearing a uniform: police blue pants and my light blue uniform shirt with dark blue soft shoulderboards displaying my rank, so it wasn't like they didn't know who and what I represented.\n\n\"Ah, Commander!\" said Hudson, coming out from behind his desk. His two partners were in the room with him, poring over a sheaf of documents on his desk. \"I'm so glad to see you! What an excellent job on that case! We're filing the motions in Court now; since the murderers were family members, we're going fight having to pay off the policies to... you guessed it... family members. And we have you to thank for helping us!\"\n\n\"I understand a Court is going to decide that.\" I said. \"It may not go your way.\"\n\n\"Oh, I think we have a good case, a strong case.\" Hudson said, his pleasure molded onto his face. I was about to take some pleasure myself... in wiping that grin off the bastard's face. \"At the least, we tie this up in Court for several more years, and at the end I think we win this one... like we always should have.\"\n\n\"Well, you won't be thanking me too much,\" I said, \"after I tell you why I am here.\" I squared up to him. \"Mr. Richard Hudson, you are under arrest, as are your two partners here... ah! ah! ah!, keep those hands where I can see them!\" I said as the men's faces registered their open shock. My hand hovered over my gun until the men raised their hands.\n\nAt that moment, the door burst open and several SBI Agents, led by Ted Crenshaw and Jeff Reubens, poured into the room. Several dozen other agents were pouring into the company, ushering everyone out and seizing every document and computer that they could lay hands on. Crenshaw cuffed Hudson as Reubens and another agent cuffed the partners.\n\n\"The SBI was called in by the State Insurance Commissioner,\" I said, \"after the Town & County Police Department discovered and documented evidence of several serious crimes by you and your partners, Mr. Hudson. And the FBI is probably going to join the party when the Racketeering and RICO charges start bubbling up. Indeed, Mr. Hudson, I am so happy to bring your Company's matter to a most very successful conclusion. You have a nice day.\"\n\nWith that, I turned and left, leaving the case to the State. I had one other mission to perform, and it was going to be far harder to accomplish: I had to tell the families of Billy Joe Tolson and Bonnie Jean Mason that their loved ones were dead, and at the hands of more of their loved ones.\n\nI called Captain Ross as I headed to the Mason home... there was no telling how Art was going to react to this, and I needed the Police Boxing Matches Champion at my side... \n\nPart 17 - Solution\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" blared the lovely redheaded reporterette at 7:00am Saturday morning, July 18th. \"Channel Two News is bringing you continuing coverage of two crimes solved by the Town & County Police this past week!\"\n\n\"The first case,\" shouted Bettina into her microphone from the front of the Courthouse, \"is the resolution of the disappearance of Billy Joe Tolson and Bonnie Jean Mason nearly seven years ago! Jimmy Tolson and Willa Mason were arrested in connection with the murders, and the bodies of the victims were found yesterday and the families notified.\n\n\"Commander Donald Troy released a statement praising his Cold Case team, led by Captain Cindy Ross, for solving this difficult case. Commander Troy also praised Captain Ross's exceptional leadership qualities on this and many other cases.\"\n\nEveryone in MCD was ooh-ing and ahh-ing over the praise for Cindy, who was blushing and looking at me with a not-so-thrilled look, wondering why I'd made sure to get her name and praises out to the Public like that. And oh yes, I had a very good reason for doing that... it was namely for Chief Harold Bennett's benefit.\n\nBettina continued, \"Commander Troy also praised his Vice Squad's Financial Crimes and RICO team for uncovering evidence that led to the arrest of several key officers of the Reems & Berry Insurance Company. This company was involved in the life insurance policies of Billy Joe Tolson and Bonnie Jean Mason, as well, and that case is headed once again to Court.\n\n\"Meanwhile, in a rare show of cooperation, the Town & County Police have worked with the SBI and State Insurance Commissioner to bring charges against Reems & Berry and some of their highest officers, and the FBI may also be brought into this rapidly expanding case. Reems & Berry gave large campaign contributions to several State politicians, and there is potential for further scandal rocking the State Capitol. This is Bettina Wurtzburg, KXTC Channel Two News!\"\n\n\"Sorry, Mom.\" I said to my mother, who was watching with us. \"I wanted to announce you as part of the Cold Case team, but I was advised that your status as an Auxiliary Detective might be scrutinized; but more important, we don't want the bad guys to realize you're my mom, not that we're keeping it a secret or anything... we just don't want to bring on any issues.\"\n\n\"Oh, I quite agree, son.\" said Phyllis. \"In fact, it was I who suggested to your Public Relations Department that my name not appear in the public pervue in any capacity in these matters. I won't even be called to the stand in trials unless it's totally necessary.\" I was relieved that my mother understood the security needs, though I'd love to have given her the public credit she deserved.\n\n\"Same excuse for you, Julie.\" I said to Detective Newton, who'd been instructed to come in and watch the broadcast with us. \"I definitely don't want the white collar criminals around here to know who 'The Abacus' really is. You have to remain our secret weapon.\"\n\n\"I have no problem with that.\" said Julie Newton. \"I just wish I could get a raise out of it.\"\n\n\"I'm working on that. Keep hope alive on it. August 1st is coming.\" I said. Everyone looked surprised, and Julie looked happy... for the first time in months.\n\n* * * * * * * * * * * * * * * *\n\nSaturday night we were in the back room of the Cop Bar, enjoying some celebratory beers and toasting Cindy and my mom Phyllis on their success. We also made sure to toast Julie Newton and the I.T./Data Guys for their roles in landing the big fish of the Insurance Company, a case which was beginning to get even national attention. And it was the first time in a while that we were able to pry Julie Newton out of Headquarters and to one of our parties. I wanted her to feel like part of the family... our Police family, that is.\n\nMartin Nash came up to me for a quiet moment of conversation. \"I just got word that the FBI is going to step into the Insurance Company issue. They think Richard Hudson might have been an associate of 'Superior Bloodlines', and basically laundered money for them through staged injuries and deaths, not to mention paying out more money than policies were worth.\"\n\n\"Good.\" I replied. \"I think our Moriarty was also behind the scenes on this one.\"\n\n\"Think he's part of 'Superior Bloodlines', too?\" asked Martin Nash, just a bit too quickly and incisively.\n\n\"No.\" I said. \"He's his own man... or woman, as the case may be. But has he advised them on criminal enterprises, making and laundering money, and setting up murders of Blacks and Jews? There can be no doubt...\"\n\nJust then, someone rang a glass. \"Okay, usually Cindy asks this,\" said Teresa Croyle, \"but since she led the Cold Case Team solving the case, I get to ask... what was the answer and how did you get to it? All of you, Commander included?\"\n\n\"I can lead people.\" said Cindy. \"But when it comes to observation, deduction and knowledge, I'm still the Junior Troy around here. Phyllis, Don, it's your floor.\"\n\n\"Cindy is simply too modest about her own abilities.\" said Phyllis. \"She did wonderfully on this case.\"\n\n\"Hear hear.\" I said, raising my beer mug in salute. Cindy was not cajoled, and had Phyllis do the talking.\n\n\"Let me just say this.\" said Phyllis, beginning the 'lecture'. \"We came to our conclusions from different angles. It was a good case of Don knowing some things, me knowing some things, and Cindy knowing some things. Put together, we came to the correct conclusion and were able to make arrests and find the bodies of those poor people.\"\n\n\"Tell us first how they got out of that attic room.\" said Sonali, of the self-named 'Data Guyz\" team.\n\n\"I was confused about that, also.\" said Phyllis. \"It was Don that got me on the right path, there. Don?\" Everyone looked at me.\n\n\"Well, they had no trouble getting out of that room,\" I said, \"for the very simple reason they were never in that room to begin with.\" There were gasps and murmurs as I continued.\n\n\"There were three possibilities for the disappearance of this couple.\" I said. \"First, alien abductions or the U.S.S. Enterprise came along and beamed them up, Scotty. I somewhat discounted that.\" There was laughter, then I continued \"Second, they got out without anyone seeing them, not only in the game room but downstairs or anywhere else.\"\n\nThere were murmurs as I said \"No one else saw them go up from the ground floor, no one on the ground floor saw them come down or leave, never mind the game room. Ergo, that left the idea that they were never in the room, and however improbable, that appeared to be the truth of the matter.\"\n\n\"So I'm now looking at Jimmy Tolson's story as a fabrication. Add to it that Jimmy was the only person who said he saw Billy Joe and Bonnie Jean go upstairs, and that no one else could even remember seeing Billy Joe for hours if at all, and I had a good idea that they had met their fates elsewhere.\"\n\n\"So... so why didn't someone else think of that?\" asked Martin Nash.\n\n\"They may have.\" I said. \"But they believed Jimmy Tolson when he passed the lie detector test, also. I'll get to that in a minute, but for now here's what happened: Bonnie Jean came to the party with her husband, but then had to go back to her house for some reason, who knows what, maybe to get her cell phone that she'd left. Billy Joe, with whom she was having an affair, and a pretty hot one at that, saw her and snuck off to her house himself. Maybe it was pre-arranged and coordinated, or just spontaneous. But the bottom line is that with the family at the Tolson house, Billy Joe and Bonnie Jean were making love at the Mason house.\"\n\n\"Jimmy Tolson knew they were there, because his confederate and lookout told him.\" I continued. \"He snuck over to the Mason home, and did indeed see his big brother having sex with Mrs. Mason, upon whom he had a huge crush, which my mom will discuss in a minute. Jimmy then went into the bedroom, stabbed them both, then wrapped the bodies tightly in plastic and hid them in air vents. So the bodies were hidden in the Mason home, not the Tolson home. And that's how Jimmy passed the polygraph: he did see what he said he saw... just not where everyone thought he saw it.\"\n\n\"So he had the plastic ready to go, and apparently the murder weapon?\" asked Martin Nash.\n\n\"The plastic was hidden in the air vents,\" I said. \"which shows plenty of premeditation and forethought. He'd planned it for some time, and was just waiting for an opportunity to kill his brother. Of course, he's not all that big and strong, and bodies are heavy. So he clearly had an accomplice. Who would that be? Willa Mason is the only possible choice.\"",
        "I continued as the audience listened with rapt attention: \"At the Tolson home, a scene is staged, which came from an idea Jimmy saw on the internet. The room was relatively dark. He had Willa do her hair up to look like her mom's hairstyle, and she had something like a blow-up sex toy in her arm, to represent Billy Joe. The teens in the room were having sex or playing a video game for money; they didn't really look good, and it was fairly dark in the room, as well. The window would also silhouette the figures.\"\n\n\"But they went up the stairs, didn't they?\" Julie Newton asked, as she tried to keep everything together in her mind.\n\n\"Yes and no.\" I said. \"Willa came up the stairs with the doll and in her mother's hair style. She goes straight up the attic room stairs going halfway up and then right back down. While doing that, she drops the doll and opens the valve to deflate it, undoes her hair and then appears in the game room as if she'd just come from below. Jimmy was standing by the door, giving her cover, and as the doors open closely to each other, no one noticed which door Willa actually had come out of.\"\n\nI went on: \"Then Jimmy snuck up the stairs, being noisy on the way up, allegedly to see if his brother and Bonnie Jean were having sex. He finishes deflating the doll, threw it under the bed, then came back down the stairs quietly, knowing where the quiet spots on the stairs were. So no one really was aware of how long he was upstairs.\"\n\nMore murmurs as I went on:\n\n\"So far, so good.\" I said. \"But there is another duty to perform, which is to get Art Mason involved and then the police, so that the vanishing act might be discovered. Jimmy had Willa go to the fax machine, which had a dedicated line. She got a landline phone out of her purse, connected it to the line, and called her father, disguising her voice. As soon as Art came into the house, she called the police on the same line, then put the phone in a drawer somewhere. I couldn't find any police notes reference to a phone around the only landline in the house, so I don't know where Willa put it, and she didn't say. But my hypothesis is that it was plugged into the fax machine directly to make the call, and the Police plain missed the phone or else didn't think anything of it.\"\n\n\"So we have the mel\u00e9e, we have the police come, we have the couple having disappeared, and there's Jimmy telling the story, later confirmed by a polygraph, that he saw them go up into the attic room and he saw them having sex. And this is a huge reason that I absolutely hate polygraphs, folks. In this case, it totally misled everyone at the time.\"\n\n\"And later on, too.\" said my mother. \"I admit that it influenced my thinking of the case, until you put me on the right track.\"\n\nI nodded, then finished up: \"Jimmy and Willa got the bodies out of her home some time later, and he went and dumped them in Reservoir Lake. They were weighted down and the plastic helped preserve the bodies for lo, these nearly seven years.\"\n\n\"But why?\" asked Myron Milton. \"And especially: why did Willa help Jimmy?\"\n\n\"Mom?\" I said, giving the floor to her.\n\n\"Before I answer that,\" Phyllis said, \"let me say that I came to a similar conclusion but for different reasons. It was Don that showed me the light in that the couple had never been in the upstairs room; that had confused me. But I was also looking at Jimmy's role in the matter.\"\n\nShe started in: \"First, I've had the unfortunate experience to be part of a family where siblings did not like each other, to say the least. Don turned out okay, as did my grandson Todd, but the same cannot be said of Don's sister and Todd's brother; indeed, Ned's evil actions brought him to an unfortunate end.\"\n\n\"Did we not have the same thing here?\" Phyllis asked. \"Two brothers that despised each other, the younger one being weak and resentful? And the weak one also being of a brilliant mind, perhaps too much so?\"\n\n\"I would add to it,\" Phyllis said, \"that Jimmy was also picked on mercilessly by his classmates. They teased him, they even made money bets that he couldn't seduce some girl or woman or another. And if he did try to ask a girl out, there was his big brother, stepping in and stepping all over him, and Billy Joe was getting the sex from the girls that Jimmy wanted to date, and Billy Joe was making sure Jimmy knew, in excruciating, graphic detail.\n\n\"It continued when someone found out Jimmy had a crush on Willa Mason's mother... and once Billy Joe found out, he was all over Mrs. Mason, who was quite eager herself to date Billy Joe. They had a very intense affair, much to the chagrin of Art Mason.\"\n\nAfter pausing to drink some water, Phyllis continued: \"And that was my first thought: why in the world was Jimmy in the game room at all? The other kids up there hated him, they said so. They were having sex, which was denied to Jimmy. Why did he subject himself to that? Only Willa was even talking to Jimmy, and she came up much later than he did.\"\n\n\"So I realized that Jimmy had a role in the disappearance,\" Phyllis said, \"but as I said before, I admit I was also fooled by accepting the polygraph, which Jimmy easily beat. But leaving the 'how' of the disappearances aside, I could easily see that Jimmy was involved.\"\n\n\"Then Willa began entering my thoughts.\" Phyllis mused. \"First, she made sure to tell me she thought her mother and Billy Joe were in that upstairs room. That had to be established, and only my son was not fooled by that story. She also made some comments that all but threw Jimmy Tolson under the bus, which should have told me more at the moment, but I was fortunate to realize later on.\"\n\n\"But most importantly, Willa was, and still is, a very sexual woman. She has what I call an 'aura' about her, a tangible sexuality that attracts men to her despite her plain looks. She had been in a strong relationship with Billy Joe, who was not prone to making such strong relationships. They had broken up, but I could tell that their relationship was not one of tormenting Jimmy; Billy Joe had genuine feelings for Willa.\"\n\n\"So what caused them to break up? I asked myself.\" Phyllis continued: \"I then thought about how Willa was never as cruel to Jimmy as the rest of his classmates, and I wondered if Willa had tried to get her lover to ease up on tormenting his brother. Perhaps he became angry at that, and broke up with her over her being just a bit kinder to Jimmy than anyone else.\"\n\nPhyllis went on: \"Willa admitted this was true, and that must be some kind of hatred for a young man to give up his love for a young woman over. Of course, she made it sound like she had given in to sex with him only after a time, but in truth they had been having sex for a while, and Billy Joe was smitten with her.\"\n\n\"Then Willa became angry at being dumped by Billy Joe.\" Phyllis continued. \"It's not clear to me who led who down the dark path, but both Jimmy and Willa wanted to hurt Billy Joe. Cindy, why don't you take it up from here, dear?\"\n\n\"Okay.\" Cindy said. \"We now come to Bonnie Jean. Willa definitely had the 'aura', and was extremely sensuous, as Phyllis said; and she used that sexuality to seduce men, to entice men, to control men. She was not nearly as dumb as she played herself to be. She had much less problems getting sex than she was letting on. The key here is that she got that aura of sexuality... from her mom. Bonnie Jean had it too... it's what kept her husband Art wrapped around her finger, had her own son panting after her... more on that later... and had all those horny high school studs wanting her.\"\n\nCindy continued: \"I was able to find out that Bonnie Jean's history before marrying Art was not a pristine one. She worked the pole in strip joints to make it through college, and was picked up for prostitution several times, under false names. Her husband was not able to satisfy her sexual needs, and she liked the college-aged and high-school-aged young men, only dating over-eighteen young men, I'm sure.\"\n\nThe look of sarcasm that only Cindy can make was present upon her ruggedly lovely face. She continued anyway:\n\n\"I also suspect that she had an ongoing sexual relationship with her own son, and Willa had an idea about it. Willa hated her mother for a number of reasons, not least was her mother's hold over her dad and her closeness with Danny.\" Cindy said. \"Art was not the violent one... Bonnie Jean had him cowed, perhaps herself occasionally resorting to violence. And Danny worked out with Billy Joe... to get strong... to make sure his mother didn't come to any harm from his dad, nor from Billy Joe. In any case, Bonnie Jean was the strong woman in the family, and Willa didn't like that. So she was amenable to killing her own mother.\"\n\n\"What was the Insurance Firm's role in all of this?\" asked Martin Nash.\n\n\"I'll take that one.\" I said. \"It appears that Jimmy did have a few hobbies as well as his college studies, including understanding the stock markets and how finance and insurance worked. He told Willa early on that if Billy Joe and Bonnie Jean were found murdered, either or both of them might get caught; but if they just disappeared, the life insurance would have to be paid to the families at the end of seven years...and both of them, especially Willa, could maneuver to take charge of the finances, and they'd abscond with the money, perhaps together.\"\n\nI continued: \"The amounts of the policies were raised not long before they disappeared. We're not sure how that happened, and Willa wouldn't say, but one theory is that Willa prostituted herself with Richard Hudson. We're also not sure if Hudson knew Jimmy Tolson; Tolson may have agreed to become an intern at Conway and spy on them if Hudson would up the amounts on the policies. In any case, Hudson was a man not prone to honesty nor keeping promises, and he was fighting the cases as hard as he could, thinking he could safely promise to up the amounts but never having to pay them.\"\n\n\"For her part,\" I said, \"Willa acted dumb so she would have to stay at home with her father. I have the idea that once that money was paid, Art Mason would wake up one morning with his daughter disappeared and his bank accounts drained.\"\n\n\"Son, let me ask you a question.\" my mother asked me. I saw the brilliant sparkle in her eyes. She knew something that I didn't. \"Willa's motive was financial. What was Jimmy Tolson's reasons for his actions the past few years?\"\n\n\"I...\" I started, then realized what her train of thought was as it pulled into my station. \"Yeah, I see what you're thinking, Mom.\"\n\n\"Okay, Mycroft and Sherlock,\" said Cindy. \"Enlighten us.\"\n\n\"Yeah, what about Jimmy Tolson?\" I asked, my voice inflective of the huge lines of thought tearing through my mind. \"His parents get the insurance money... if it's ever paid out. He had absolutely no financial motive... ohhhhhh, wait! Yesssss...\" I was gone, well within my reverie.\n\n\"Yes, son.\" said Phyllis, her eyes twinkling with merriment. Cindy's ice-blue eyes were not looking so merry.\n\n\"Spill it, Auxiliary Detective Troy.\" said Cindy. \"That is an order.\"\n\n\"Certainly, Captain.\" replied Phyllis, her eyes still twinkling with merriment. \"We know that Willa had a financial motive to go through with this, and that the payoff wouldn't happen for seven years. But what is Jimmy Tolson's incentive?\"\n\n\"Oh, I see.\" said Teresa. \"He didn't have control of the insurance payoff like Willa did. It went to his parents.\"\n\n\"Yes,\" said Cindy, \"and parents who weren't happy about his attitude toward's his brother's disappearance. They'd probably save or invest the money, or might give some of it to Rebecca, but in any case Jimmy is not going to see much of it, and not for a long time.\"\n\n\"Yes, exactly.\" said Phyllis. \"So, why hang around? He hated everyone in this Town. He was not close with his family at all. I would think he could find a job, a good job, in the City, or in New York or Charlotte, North Carolina where the banks are... instead, he stays here, in this Town, where all his boyhood pain had been. Now why did he do that?\"\n\n\"There was a payoff for him.\" I said, my voice still far away. \"From the Insurance Company itself... or someone working with them...\" I went deep, oblivious to my surroundings.\n\n\"Wow, he's really gone.\" said Cindy, peering at me, trying to train herself to feel my mental energy more than anything else.\n\n\"Yes,\" said Phyllis, \"he's taking it to another level. To fill all of you in on it, I believe that Jimmy was offered some kind of payoff by the Insurance Company if he could find a way to help them not pay out the benefits. At the same time, Willa would never want to share her money with Jimmy; she used him, and I suspect planned to discard him by throwing him under the bus. He in kind must surely have known of this possibility, and so might have had a plan to throw Willa under the bus.\"\n\n\"Ohhhh, I get it.\" said Julie Newton. \"If he can find a way to pin the murders on her, that much larger payout can be disputed because she's a family member that killed a family member.\"\n\n\"Wow.\" said Cindy. \"But I don't think that's where this Wildcat fan is at right now.\" She and everyone was watching me in utter fascination.\n\nFinally, I recovered.\n\n\"So, Crowbar 2,\" I said, \"would you care to go on a little visit with me?\"\n\nPart 18 - Clutching At Straws\n\nHaving called ahead and made arrangement through the FBI, Cindy and I were driving to the State to the east of ours, where the nearest Supermax prison was. The former home of Jack King, and the current home of Alicia Foster now housed the notorious young Jimmy Tolson.\n\nCindy asked \"One question about all of this: the political fallout of this Insurance Company thing is hitting the Governor a little bit, and it's hitting legislators of both parties a lot harder. So why did Governor Jared come to you and want you to take this case? He has to know that you're the last person on earth to come to if he wants to keep the truth from being found out.\"\n\n\"There you go.\" I said. \"You said it yourself.\"\n\n\"Uhhh,\" Cindy said, \"you're saying he did want this to come out? Why?\"\n\n\"Simple.\" I said. \"Governor Jared is actually a relatively honest man, especially for a politician in this State. I can't speak for him, but my guess is that he knew this Insurance Company was a political ticking time bomb. Best to get it exposed now, lest it come out in a way beyond his control. I also think he wanted us to find the truth, thus forcing the Insurance Company to have to pay out... which would break them, as well.\"\n\n\"Makes some sense.\" Cindy said. \"But he took contributions from them, too.\"\n\n\"So what?\" I said. \"Reems & Berry contributed to half the legislators in the State, to both Parties. It's how political business is done. It's far worse at the national level. But one thing the politicians have learned: the Voters, which I call 'the American Sheeple', do not care. They don't give a damn as long as they have their 'bread and circuses'. They just keep voting for the same incumbents, in both Parties, no matter how bad it gets.\"\n\n\"So he pretended to their face to be helping them,\" said Cindy, \"when hoping you'd crush them out of existence. Typical politician, I'd say.\"\n\n\"But effective.\" I said. \"Okay, I'll get off the politics soapbox. Just suffice it to say that the Governor did the right thing at the right time, for the right reasons. And I suspect he has an idea of what we are up against in our Consultant of Crime.\"\n\n\"He's involved in this?\"\n\n\"Up to his God-cursed eyeballs.\" I said. \"In fact, it occurs to me that Willa might not have slept with Hudson. She might have slept with someone else... someone working behind-the-scenes with Hudson, as well as Willa and Jimmy.\" Cindy nodded. \"But as to who was working with Jimmy: you'll see, and soon.\"\n\n\"Oh, by the way,\" Cindy said, \"I finally figured out why Jack Lewis tried to go after you on the Wargrave thing. I'm having dreams... strange dreams... that the Republicans have asked you to run for Governor against Lewis.\"\n\nI grinned. \"Now that is Iron Crowbar thinking.\" I said. \"Yes, they sent feelers. I tried to be polite about it when I said 'no'.\"\n\n\"First you forego the Chief's chair.\" said Cindy. \"Now you're giving up a shot at Governor. Geez...\"\n\n\"You better believe it.\" I said. \"I can't even handle the Town & County Council. Why in the world would I run for Governor? So, how did you figure it out?\"\n\n\"I told you.\"\n\n\"Ah, 'dreams'.\" I said. \"Dreams of your father, perhaps?\"\n\n\"That's Iron Crowbar thinking, there.\" Cindy replied, her ice-blue eyes sparkling.\n\n* * * * * * * * * * * * * * * *\n\nAfter we crossed the State Line, Cindy said \"Now that we're out of State, there is something I need to say, speaking freely.\"\n\n\"Go for it.\" I said.\n\n\"I know Willa had the aura.\" said Cindy. \"But you didn't have to fuck her. If you didn't have that bug-killer, we'd be in a world of shit right now.\"\n\n\"Hell, we'd have been in worlds of shit a long time ago.\" I said.\n\n\"Still,\" Cindy said, \"you could've endangered the investigation, created a scandal that the Media would've loved, and hurt all of us. Your private love life is none of my business, but when it comes to official suspects... keep your pants zipped up, buddy.\"\n\nAfter a moment of consideration, I said \"Within the limits of your knowledge... you are right. It was the wrong thing to do.\"\n\n\"Yeah, I know, I know.\" Cindy said. \"You set a trap, made her show herself to be conniving and not as stupid as she was playing it. It helped your mother understand what Willa was up to. It even got Willa to come to the Station and try to get immunity in exchange for throwing Tolson under the bus like she intended to anyway. But you're not just the Iron Crowbar... you're the Police Commander, and I don't want to find out what life is like without you in that position anymore. Find a better way next time.\"\n\n\"Noted.\"\n\n* * * * * * * * * * * * * * * *\n\nHours later, in the dead of night, that period of maximum darkness when the Powers of Evil were at their most exalted (yeah, a little Conan Doyle quotation, there), Cindy and I arrived at the Supermax prison.\n\nI was thoroughly frisked then put through two detectors before being allowed into the interrogation room. I hated being unarmed and crowbar-less, but I understood the security. Cindy was waiting outside, listening on the audio as she watched through the one-way glass.\n\nAlready in the room, his hands manacled and chained to the table that was welded into the floor, was Jimmy Tolson, wearing an orange jumpsuit... a fashion he'd be wearing for the rest of his life.\n\n\"Ah, Commander Troy.\" he said, a half grin on his pathetic face as I entered. I could almost feel the evil ghost of my nephew Ned speaking through this piece of trash.\n\n\"Hello, Jimmy.\" I said. \"Getting comfortable?\"\n\n\"Only been here two nights.\" said Jimmy. \"And I've already got a visitor. Now why in the world would you want to talk to me?\"\n\nI looked hard at him. \"I think you know. I want him. You can help me take him down.\"\n\nJimmy's eyes widened. \"Ohhhhh, wowwwww... you do know.\" He peered hard at me. \"For you to even say that shows that you know. \" He sat back and relaxed. \"Wow... I never thought anyone could even realize his existence... but the Iron Crowbar knows. How 'bout that...\" I think he was truly impressed.\n\n\"Yes.\" I said, staring levelly at him from under my Tilley hat brow (why they let me wear it inside I don't know, but they did). \"Say his name!\"\n\n\"And why should I do that?\" Jimmy said, peering at me strangely.\n\n\"I want you to name him, which you can do. I want you to make a statement against him. I want you to testify against him when the time comes.\"\n\n\"You're not giving me any incentive, Mr. Crowbar.\"\n\nI looked around the dark room. \"I can arrange to make things ever so slightly more comfortable for you here.\" I said. \"You're going to be here a long, long time. Occasional junk food, books, extra channel on your TV...\"",
        "Jimmy smiled. \"Commander, Commander...\" he intoned. \"Your hand is weak, my friend. You really have little to offer me. I'm not sure I'm safe from him even here... but it's my only shot. Your creature comforts... just not enough. Now a hara-kiri knife... that'd be something I could use. I did consider demanding the death penalty; this is an existence, not a life, I have nothing but Death to look forward to.\"\n\n\"You're right.\" I said. \"But he manipulated you, too. Willa manipulated you, the Insurance Company manipulated you, and ultimately he manipulated you to his gain. No, I can't offer you a lot, but you can help me clean some really bad things up, be the hero you always wanted to be. You've had your revenge on your brother. I can understand, I had an older sibling that wanted to do great harm to me. But in the end, help me take this man down, and you'll be happier for it in the long run.\"\n\nTolson smiled again, this time tinged with a slight hint of sardonic evil. I realized he was mentally gone. Then he spoke, and confirmed it.\n\n\"Commander, let me ask you a question.\" he said, looking me dead in the eye. \"Did your sibling ever shove your face into a toilet bowl filled with turds? Hmm? Did your sibling and his or her friends ever hold you down, strip you naked and slam a butt-plug up your ass, then take pictures of it and post them on Facebook for everyone in the school to see and laugh at you about?\"\n\nI just watched his eyes, fascinated at what I was seeing, as he continued: \"Did your sibling ever tie you up and make you watch as he fucked the girl you loved right in front of you? And did your parents and any other siblings always take his side, tell you that he was great and that you should be like him, but that you were a piece of shit in that toilet like the other turds?\"\n\n\"Is that what your sister said?\" I asked. He just nodded.\n\n\"No,\" I said resignedly. \"I can't say any of that happened to me.\"\n\n\"Didn't think so.\" Tolson said. \"And he made it possible for me to kill my God-damned brother. He showed me how I could have my revenge, get some money, and be free of that fucking bastard. You have no idea, Mr. Iron Crowbar, how good it felt to stab that steely knife into my brother's back, and then his chest when he rolled over. Seeing that light go out of his eyes, seeing my brother die, and by my hand.\"\n\nHe shook his head. \"No, he may get to me, he may kill me. It would be a gift, a blessing, if he did. But no, I won't betray him. He made it possible for me to have that one moment of joy, the moment I watched my filthy brother die. Nothing can take that away. No sir, Commander, I will not be his Judas.\"\n\nOur eyes locked for a long moment. Finally, I got up. \"Thank you for your time.\" I said. \"Good luck to you. And goodbye.\"\n\n\"Goodbye.\" said Tolson. \"Oh, and... well met. Good job figuring it out.\"\n\n\"It served you... and him. I said. As I left the room, I thought that I would never see Jimmy Tolson again, that the long, shadowy arm of the Shadow Man would come for him and exterminate him. But the Consultant of Crime was insidious beyond belief, and knew that leaving Tolson alive was a worse torture than giving him his desired release of Death...\n\n* * * * * * * * * * * * * * * *\n\nThe ride home with Cindy was silent. The name of the Enemy had been so close to her hearing, but had eluded her. And then it dawned on me... she was not asking who he was after this most previous episode...\n\nAs for me, I was realizing some other things. Sure, I'd taken beatings at the hands of my much older sister Elizabeth, until I got big enough to punch back, which I did... hard. But I was past it. I didn't wish her dead, quite the opposite.\n\nBut maybe there had been damage: I had caused, and watched, my nephew Ned's death. I had caused, and watched, the death of the evil Senator Nathan Allen. I had beaten Sergei Molotov nearly to death with a crowbar. I had thrown Henry R. Wargrave out of a window. And all was not done... there was one death left to go. Vengeance for a lot of dead people... and some tortured dogs, including my own Bowser.\n\nAs we hurtled through Nextdoor County, Cindy said \"It's nearly dawn. Why don't you take State 142.\"\n\n\"Ah, The Vision.\" I said. \"Need to calm your mind?\"\n\n\"No.\" Cindy said. \"You do. I just want some coffee and breakfast.\"\n\nShe was getting good, I thought to myself. And she was right. I turned onto State Highway 142, headed for Coltrane County...\n\nPart 19 - Epilogue\n\nSunday morning. It was just past dawn, and he was reading the early Sunday edition of the Town & County Examiner. It was now a weekly paper. Many newspapers around the Nation were no longer being printed; this one was barely holding on. He read of the Iron Crowbar and his Team solving the murders. The Reems & Berry case didn't get nearly as much print, as the politicians were already conspiring with their Media allies to suppress the scandal. \n\n\"Ah, my dear,\" he said to the woman as she came up. \"You've come over quite early. And you look tired. Did you not sleep well?\"\n\n\"No.\" she said, her voice bitter. \"I heard dogs barking all night. I guess some cat was getting them all stirred up.\"\n\n\"Ah, I understand.\" he said. \"I hate dogs. I hate everything about them. If you weren't about to eat breakfast here with me, I would tell you how much I enjoyed working with Bryan Thatcher at his home, watching his experiments, hearing those dogs in pain, seeing that pain in their eyes. Revenge for their existence on this earth.\"\n\n\"It doesn't bother me a bit.\" she said. \"Though I'll be much, much happier when I see some pain in some humans' eyes around here. Like that God-damned Commander Troy and his dyke partner, Captain Ross.\"\n\nHe laughed. \"Yes, that is coming. I don't know how the Iron Crowbar did it, but he got onto the Reems & Berry connection with us... with me. I'm going to have to work hard now to shut down that thread of the web before he latches on to it.\"\n\n\"I'd think you'd be much more worried about his connecting you to Wargrave, not to mention the people he has that Fat Boy Sharples looking into.\" she said.\n\n\"Oh, don't you worry your pretty head about Sharples.\" he said. \"His suppositions are about to be... re-directed. No, I'm not worried about him. I am more worried that Susan Wexler left bread crumbs along the trail for the Iron Crowbar to find.\"\n\nHe folded the newspaper and handed it to her, then got up. \"If you'll excuse me, my dear, I must prepare for this morning's work. Have a good day, my lovely 'Sinon'.\"\n\n\"You too.\" she said, wondering why he called her that...\n\n* * * * * * * * * * * * * * * *\n\nThe meditation at The Vision had been relaxing. No drugs, no weird treatments, just meditation. Cindy had remained there with her father, Dr. P. Harvey Eckhart, while I had come home with a cleared mind to do some very important work.\n\nI was working in my office at The Cabin. I was studying the files that Susan Wexler had left on the microchip. I could see the path her data was taking me down. Drug deals, gangs, pipelines... and then Wargrave using those same smugglers to move weapons around. Communications with others, laundered money. Several banks being used, including the Regional Bank in Coltrane County, and the Twin Cities Bank in Westphalia. And there it was... a connection to a bank account of 'Victory Christian Ministries'. A thread. A thread for me to tug on.\n\nI knew, as I began accessing records, that my actions would not go unnoticed. The very poisonous Spider at the center of this web would feel the tug, would know what I was doing, would see me toiling every step of the way. But I could not stop now... I had to drive on...\n\n\u2028The game was afoot.\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "big girl"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/disappearing-act-ch-03"
}