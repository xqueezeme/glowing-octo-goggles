{
    "title": "Santa, Baby",
    "pages": [
        "<center>This is my entry for the 2020 Winter Holidays contest. \n\nPlease enjoy yourself. \n\n+</center>\n\n\"Banished?\"\n\n\"Yes.\" The deep voice was severe.\n\n\"You can't be serious!\"\n\n\"Utterly serious.\"\n\n\"But I didn't do anything all that wrong!\"\n\nThere was a deep sigh from the portly figure behind the desk, as if in unwilling recognition of the accumulated weight of having maintained a public jolliness for millennia. Strong fingers combed through a snowy beard as if seeking for proper words.\n\n\"Need I remind you, Trixellian, of the specifics of the charges brought against you?\"\n\n\"But...\"\n\n\"Filling a co-elf's locker with coal, to start off with.\"\n\n\"I thought it was kind of funny, Santa.\"\n\n\"Tillenia hardly found it funny. Especially when each chunk of coal had legs.\"\n\n\"Yes, but... \"\n\n\"And eyes.\"\n\n\"...\"\n\n\"And started chasing her.\"\n\nThe heads on serried ranks of elves turned as one towards the still-pale Tillenia, faces full of sympathy.\n\n\"I thought it might break up the boredom, sort of.\"\n\n\"Boredom!\" his voice bellowed. \"BOREDOM?\" The word echoed throughout the vast hall.\n\nThe elves brought from their shops and labs to witness judgement turned pale themselves. Nobody, not in living memory, could remember Santa Claus ever speaking with such fury.\n\nGood one, idiot!  &hairsp; was their collective thought. Now it'll be eternal banishment! And good riddance! \n\n\"But...\"\n\n\"SILENCE!\" \n\nTrixellian's jaw snapped shut in self-preservation.\n\n\"Putting cling-wrap across the toilet bowls in the Executive Elves' Lounge?\" The old elf's eyes twinkled, but not with merriment.\n\nThe front row of witnessing elves scowled as one. Truth be told, there were a few badly-repressed grins in the ranks behind them. The existence of that very comfortable and exclusive salon had long been a sore point at North Pole Labour-Management Relations Committee meetings.\n\n\"Pre-loading sex chat line phone numbers on smart phones being sent to 12-year-old boys?\"\n\nTrixellian by now was simply staring at the floor in front of her.\n\nThe old saint consulted his list, mumbling to himself in his anger.\n\n\"Enchanting the bells on my Sleigh so that, instead of ringing, they played 'Who Let the Dogs Out'? Continuously?\" \n\n\"Well, I thought...\"\n\n\"Rudolf is still complaining of an ear worm, you idiot!\"\n\nThere was a chilly silence in the ranks. Everybody liked Rudolf.\n\n\"Changing the voice recordings in Doodlebelle dolls...,\" and here Santa looked up to stare at Trixellian for a moment before continuing, \"...to shout,  'Do me Baby! Just like that! Yes! Oh yes! Harder! Pound me, you throbbing stud!'\" \n\nThe stump of the pipe he held tight in his teeth snapped as they ground together in his wrath. The remains of the pipe fell onto Santa's lap, scattering embers in every direction. \n\nThis ain't gonna end well!  &hairsp; the other elves thought to themselves. All eyes rolled upwards, downwards -- anywhere but at the sight of the bulky figure leaping to his feet and frantically brushing burning coals aside before they scorched holes in his best set of furs.\n\nSanta stomped out a couple of still-smouldering embers on the floor before resuming his seat.\n\n\"Switching pieces between jigsaw puzzles?\n\n\"Erm...\" \n\n\"Crazy Glue in Chinese finger traps?\" \n\nTrixellian kept silent.\n\n\"Itching... powder... in... Mrs... Claus'... talcum... powder?\" This time, Santa's voice had dropped to a bare whisper, pregnant with menace. \n\nSome of those present had not heard of that one and a couple of giggles brought dagger-like glares from more senior elves. Names were being taken, further examples might be necessary. HR would see to it, when and if.\n\nSanta's gloved hand descended like a mallet on his desk.\n\n\"ENOUGH!\" the old figure bellowed. His round belly shook like a bowl of, let's face it, jelly. But in this case, habanero jelly. \n\nSanta' voice was iron now, his words almost an incantation.\n\n\"Trixellian, it has been decades since an elf in my service has so disgraced themselves. It has been literally centuries&hairsp; since I have been forced to convene such an Assembly.\"\n\nWow!  &hairsp; thought many of the elves. Then a ripple went through the ranks as, almost in unison, they realized,  'Forced?' Oh, yeah, gotcha. Given the looks Mrs. C had been tossing around lately, yeah, 'forced' is probably about right. When the North Pole gets frosty, it gets frosty! \n\n \n\n\"Trixellian Elf,\" Santa intoned slowly, \"I sentence you to banishment to the mortal realm for a period of one month.\"\n\n\"But that's not fair!\" she protested. \"Nobody gets banished from the North Pole!\"\n\nThere was no joviality in the rumbling reply, no 'Ho-Ho-Ho', none of that. You could have used the voice to freeze a forge flame intact, leaving it still bright.\n\n\"We don't do 'fair' here, Elf. We do 'fun'. We do 'happy'. We do 'wonderment'. 'Fair' is not on the list.\"\n\n\"And while we're on the subject,\" he continued. \"We also do 'devoted', 'industrious' and...\" He paused for a second, looked around at the Deputy Chief Elf standing obsequiously behind him. \"What were the rest of those things you had me put in the, um, 'Manual of Politics'?\"\n\n\"'North Pole Policy Manual', Santa,\" said Omerlon, respectfully. Jeez, I can't believe the old fart has made it this far on his own! &hairsp; \"'Joyful', 'pleasant' and 'team-playing' were also on the list,\" he added helpfully.\n\n\"Oh, yeah. Them.\" Santa's ulcer was for some reason especially bad this morning. \n\n\"Yes, well. One month, Trixellian.\" His memory of Mrs. Claus' barbed remarks last night echoed though his mind. \"One month as a mall elf. Take her away, Omerlon.\" With that, the old saint lurched to his feet and stomped off to his office.\n\nA whole month! &hairsp; thought the massed elves, shaken to their cores. As a mall elf! Boy, the old woman must really have put the holy Fear into him! \n\nAlmost at the door, the fur-clad figure stopped, wheeled and pointed a stubby finger at the cowering Trixellian.\n\n\"Fuck this up, missy, and it'll be Hollywood&hairsp; elving for you! Understand?\" With that, Santa stamped through the door and disappeared from view.\n\nThe ranks of elves watching were, for the first time, almost -- almost -- sympathetic for Trixellian. Oh shit, he threw the book at her! \n\nThe condemned figure swayed and Omerlon had to keep her from falling, such was her dismay. He pushed Trixellian into the waiting arms of two burly elves wearing the brassard of the newly-formed Polar Investigatory and Special Services department and turned to face the parade. He was about to speak but paused, turning his head slowly, as if seeing the brassards for the first time. Hmm,&hairsp; he thought to himself, Might want to get Himself to authorize a name change there. \n\nHe shrugged, glanced at Vinditta, his personal assistant. She handed him a clipboard bearing Form NP-235-8-A, the warrant for formal execution of Santa's sentence. In triplicate, of course.\n\nTrixellian stared balefully at her as Omerlon scrawled his signature. There was little love lost between Vinditta and the other female elves. Indeed, most of the latter felt Vinditta owed her elevated position more to her pouty lips and lingual expertise than to any basic skills or knowledge.\n\nKnowledge of, say, the entire alphabet. \n\nIt was of course not something ever discussed in public. Not, at least, by elves averse to having their names arc-welded to the reindeer stable cleaning roster...\n\nTurning back to the front row of elves and coming to attention, Omerlon barked sharply, \"Dismiss your departments. Back to work.\" The leading elves snapped to attention, crisply turned to face their subordinates and bellowed one by one.\n\n\"Bakery and Confectionary Department! Dismissed!\" A section of elves snapped to attention, made a sharp right turn and sprinted off to their duties, chattering.\n\n\"Candy and Sweets Department! Dismissed!\"\n\n\"Stuffed Animals Department! Dismissed!\"\n\n\"Dolls and Other Eventually-Genderless Toys Department! Dismissed!\"\n\n\"Batteries Not Included Department! Dismissed!\"\n\n\"Some Assembly Required Department... Wait for it! &hairsp; Disss.... missed!\"\n\n\"Electronics and Computers Department! Dismissed!\" These elves' turns were anything but sharp and Omerlon made a mental note to speak to their department head about their haircuts. Man-buns were definitely out and those nose rings had to go. Modernity and individuality could only go so far, even here.\n\nThe assembly room emptying, Omerlon turned to Trixellian. Reaching out, he pulled a smallish purse out of thin air.\n\n\"This contains your, erm... 'identity card' and other things needful for you to survive for the next month.\"\n\nNumbly, the elf took them.\n\n\"Any last words?\" he asked.\n\n\"Look, I can explain...\" she began.\n\n\"Good choice,\" smirked the Deputy Chief Elf. \"Short, but pithy. Succinct.\" He raised his right hand, snapped his fingers.\n\nAnd Trixellian was gone.\n\n+\n\nWhen Trixellian opened her eyes, she was sitting in a metal cubicle of some sort, with chipped beige paint disfigured by childish handwriting. Two toilet rolls were held in lopsided metal brackets; one was empty, three sheets at most dangled from the other.\n\nThere was a banging on the sagging door.\n\n\"You gonna be all day in there?\"\n\n\"Oops, sorry.\" The girl -- for now she certainly was -- lurched to her feet and pulled the door open. An almost frantic figure squeezed past her.\n\n\"You've been in there like 10 minutes. Oh shit! &hairsp; You used the last of the paper!\"\n\n\"It was like that when I got there,\" Trixellian muttered before heading to the sink. Without thinking, she materialized a new roll of paper and, reaching over the door, handed it to the fuming girl inside the stall. \"Here.\"\n\nShe felt it being taken from her hand before a curt but less-stressed voice said, \"Thanks.\"\n\n\"Yeah.\"\n\nTrixellian paused, turned again to look at a mirror above a filthy sink.\n\n\"Oh, poop!\" she breathed.\n\nGone was her treasured and dignified elven uniform of iridescent silk. Gone were the comfortable dragon-skin shoes.\n\nThe image in front of her was dressed in an outfit she found to be as shabby as it was tastelessly embarrassing, centring as it did on a skin-tight shoulderless green dress with its hem at mid-thigh, set off with above-the-elbow fingerless red gloves and striped green and red thigh-high hose. The red high-heeled boots were not even real leather. Worst of all, they were festooned with small chromed bells.\n\nJingle bells!  &hairsp; she cried to herself. Oh, polar bear poop! &hairsp; It was of course a point of universal agreement at the North Pole that bells were for reindeer. Oh, and kitten toys, of course, but that hardly mattered. No self-respecting elf would ever&hairsp; be seen wearing jingle bells. \n\nEver.\n\nAnd the damned dress was short enough to almost show the knickers she...\n\n... wasn't wearing under it, she realized.\n\nOmerlon! You smarmy, self-righteous bastard! \n\nEven the hem of the skirt was itself hung with entire rows of small bells. Every movement Trixellian made brought a jingle to the room.\n\nDamn you, Omerlon! \n\nShe tossed her head back and tried to compose herself. Looking at the reflection in the glass, she realized that her costume was custom-designed to pander to the fantasies of every male above the age of 10 while not -- not quite -- drawing the vocal ire of every woman.\n\nShe would make it through this month, she swore to herself. She would be revenged on the Omerlon if it was the last thing she ever did.\n\nShe tried to settle her nerves, drew a deep breath. \n\nWhich was, she quickly realized, a mistake. \n\nHer abbreviated costume did not split. Not quite. If cloth could speak however, her bodice would have screeched, cursed and groaned its distress.\n\nThe extent of Omerlon's vindictiveness was again apparent to Trixellian. Not only had he put her into a highly revealing costume, but he'd not stopped there. Her normal, attractive -- and yes, damnation, properly elvish &hairsp; - figure had been... amplified. Trixellian was not, for instance, used to having a sizable bosom. \n\nThese aren't boobs! &hairsp; she scowled. These things are tits! \n\nOr a waist. Well, yes, of course elves have waists, in the same sense that pieces of string have mid-points, but hers was now sharply emphasized by her bosom and... hips. Turning in front of the wretched mirror, it was apparent that her new bottom matched her enhanced bosom.\n\nAnd my ears! &hairsp; she inwardly screamed at the mirror. These aren't my ears! They barely have any points at all. \n\nTrixellian peered out the door, saw a dingy corridor leading out into a brilliantly-lit open space. Hesitantly, she stuck her head out. People hurried past, ignoring her, each concentrating on their own thoughts and lists. \n\n\"Excuse me,\" came a voice from behind her. Trixellian turned her head to see the young woman from the toilet waiting to get past her. \n\n\"Oh, sorry.\" She stepped aside. \n\n\"Thanks.\" The other figure slipped by her, but stopped and turned. \"Sorry to snap at you,\" she said. \"I shouldn't blame you for Management's stinginess. Not very Christmasy of me.\"\n\nTrixellian saw a blonde girl in her late teens, rather taller than herself, wearing much the same tacky costume but in green instead of Trixellian's red. The woman tilted her head in puzzlement.\n\n\"You're an elf!\" she said.\n\nGot it in one, deary! &hairsp; Trixellian thought to herself as she nodded.\n\n\"Odd,\" the other girl said, \"I haven't seen you before. Have we met? When did you start?\" \n\n\"I just got here. Literally.\" Trixellian stammered. \"First day. Just now.\"\n\n\"I guess I'm late,\" she added. \"Sorry.\"\n\n\"Well, I'm Sandy,\" the blonde girl said, sticking her hand out. \"Thanks for the spare roll back there.\"\n\nThe elf wasn't sure what the gesture meant, but stuck hers out to mimic it.\n\n\"No problems. I'm Trixellian.\"\n\nSandy looked at Trixellian's hand, about four inches to the right of her own. She raised an eyebrow, but moved hers over to shake hands.\n\n\"Tris... I'm sorry, I didn't catch that.\"\n\n\"Trixellian.\" She returned the handshake, letting go the instant Sandy's hand pressure let up. What was all that about? \n\n\"Tris... kell...eon,\" Sandy said slowly. \"It's a beautiful name, but what is it? Turkish?\"\n\nOops. \n\n\"A fair bit north of Turkey, actually. It's a very old name. Call me... Trixie.\" She did her best to smile in a friendly fashion.\n\n\"Well, it's beautiful. Does it mean anything in... erm, your family language?\"\n\nTrixellian wasn't willingly going to go down that particular road, but realized that she had to say something.\n\n\"Um, I think it means 'playful one'. \n\nThe two walked out of the corridor, towards a impressively overstated display of Christmas lights, and a small forest of plastic Christmas trees, seemingly constructed mainly of ornaments and tinsel. A small imitation log cabin had a clearly plastic chimney, rolls of cotton batting on its roof in place of snow and far too many very fake icicles. The huge green chair in the center looked comfortable to her, but the rest was a hole in her heart, a damning reminder, a tacky reflection of what had been taken away from her.\n\nSandy led them into the 'North Pole Village', dodging a 'Staff Only' sign to one side of the entrance. A very tall, dark-haired young man was fiddling with an elaborate camera setup in front of the throne.\n\n\"Hey, Liam!\" Sandy greeted him, \"Have you met Trixie?\"\n\n\"Not yet.\" The boy's eyes turned to Trixellian. His eyes opened wide and he broke into a shy smile. \n\n\"Hi,\" he said. \"I'm Liam.\"\n\nTrixellian's second attempt at shaking hands went better than her first, but she was surprised by Liam's firm grasp. And his appearance.\n\nHis eyes are blue! &hairsp; she thought to herself. Really blue. Such an odd color - eyes are supposed to be green, aren't they? \n\nShe found herself drifting up into his eyes, in a way she'd never experienced before. For some reason, she was finding it harder than normal to breathe.\n\nShe gradually became aware of Liam trying to pull his hand loose from hers. Elves are far stronger than they look.\n\n\"Sorry,\" she said, releasing him. \"You've got...\" \n\nThinking quickly, she changed lanes. \"How tall are you, anyway?\"\n\nLiam snickered. \"Six-feet-seven. I get that a lot, actually.\"\n\nSandy giggled. \"I was like that the first time I met him, too. Nobody should be that tall.\"\n\nLiam grinned. It was obvious that his height was a standard subject of discussion.\n\nThe mall was crowded and in front of the Village was a lineup of perhaps 40 people, youngsters and parents, queued patiently for their chance to meet 'Santa'.\n\n\"So, what do we do here?\" Trixellian asked Sandy quietly. \n\n\"They didn't tell you?\" Sandy asked in surprise.\n\n\"Um, they sort of skimmed over it. 'Be pleasant and help out?'\"\n\n\"Well, it's not difficult. We keep people in line and ask the parents what the kids' names are and introduce them to Eric.\"\n\n\"Eric?\"\n\n\"Santa. I'll introduce you. Just don't let him get you alone in the cottage; he's got about five hands.\"\n\n\"Oh.\"\n\n\"And we ask if they want photos taken of Santa with their kids. It's $15, cash only 'cause the credit card reader is still broken. We take the money -- there's a float in the cottage. And one of us may have to help the parents getting the brats to smile. Liam's got a teddy bear you can wave at them; it helps sometimes. And the printer inside can print off photos if they want them right now -- that's another $10.\"\n\n\"OK.\"\n\n\"And that's about it. We shut down for half an hour for lunch, but... You did eat already, right?\"\n\n\"I'm OK.\"\n\nSandy looked at her, nodded. \"All right. There's another half hour break for dinner and then we're here until the mall closes. That's about it, but the kids taper off after about eight.\"\n\n\"OK.\"\n\n+\n\nThe day passed quickly enough. \n\nSo, these are the children we exist for, &hairsp; Trixellian thought to herself. Rude, cranky - and smelly! &hairsp; But filled with hope, with excitement, with belief as solid as a reindeer's antlers. The elf was both reassured and confused by them but, perhaps, comforted by the love and patience she saw in their parents.\n\nEven the trite representation of Santa's castle brought happiness to them, she realized.\n\nHow curious. \n\nA voice from the ceiling made her jump. \"Attention, mall shoppers. We are now closing. We thank you for your business and hope we will see you tomorrow. Please drive carefully -- it's snowing again.\"\n\n\"I guess we'd better get going,\" Trixellian said. \"I wouldn't want to get locked in or something when the mall closes.\"\n\n\"Oh, I wouldn't worry about that. There are always a few people and the doors lock themselves behind you.\"\n\nTrixellian tried to figure what sort of spell would cause a door to lock itself.\n\n\"Where's the old man?\" Sandy asked.\n\n\"Eric? He took off five minutes ago - claimed his back was bothering him.\"\n\n\"Typical. I think the reason he doesn't need a pillow to play Santa is 'cause he's so full of crap!\n\nLocking everything remotely valuable in the cottage took but a few minutes in any case. \n\nInside the cabin were three coats hanging on a row of quite ordinary hooks. Liam took the larger of the three and pulled it on; as he did, Sandy pulled a second coat off its hook and slipped it on.\n\nApparently concluding that the third belonged to Trixellian, the tall boy pulled it off the hook, but instead of passing it to her, he turned it around and held it out as if to help her put it on.\n",
        "Strange people, these mortals, &hairsp; she thought. But nice! Might as well take the coat; nobody else around here could own it. Need to blend in. \n\nShe turned and held out her arms behind her, felt the sleeves being pulled up her arms. When Liam let go of the garment, she shrugged it all the way up onto her shoulders, turned to look up at him.\n\n\"Thank you,\" she said.\n\n\"Ain't he a sweetie?\" giggled Sandy.\n\nOn impulse, Trixellian reached up, took the boy's head in her hands and pulled it down to her level before planting a chaste kiss on one cheek.\n\nSome things are, after all, universal.\n\nWhen she released him, she saw that his face was red. How very odd.  \n\nThe three stopped just inside the row of glass doors. Outside, it was snowing lightly. Pushing through the doors, they headed together towards the mall main gateway.\n\n\"I'd offer you a lift,\" Liam said, \"but my car is mainly in my imagination.\"\n\nThe two giggled. \n\n\"I guess it's the Metro Limo for us,\" Sandy pouted. \"But I hope it comes soon. It's freezing out here.\"\n\nTrixellian's eyebrows went up a bit. It was in truth not that cold, barely below freezing. And the snowflakes slowly drifting down were huge, almost artistic. It made her feel more homesick than banished.\n\nSuddenly she knew where she lived now. Short of a sentence of permanent exile, not even Omerlon would dare to leave one of Santa's servants homeless. She reached out, took the other two by the hands.\n\n\"Come on,\" she said. \"I live right over there.\" \n\n\"Erm, you mean the hotel?\" Sandy asked. \"I thought it was...\"\n\n\"...really expensive,\" Liam finished. \n\n\"I, um, got a deal,\" Trixellian. After a moment, she added, \"Want to come up and take a look?\" \n\nIt's not like I've seem it, either, &hairsp; she reflected. \n\n\"Oh, yeah!\" Sandy exclaimed.\n\nThe two women looked up at Liam. He smiled.\n\n\"Love to!\"\n\nThe three turned to head across the parking lot towards the looming bulk of the hotel. The snow was really coming down now and it was hard to see more than a couple of yards. Sandy shivered. \n\n\"How can you stand this, Trixie?\" she asked, wrapping her arms around her chest. \"I'm freezing!\"\n\n\"Oh, just used to it, I guess.\"\n\n\"I guess you can get used to anything,\" the blonde girl said.\n\nTrixellian pondered that.\n\n\"I hope so.\"\n\nAs they made their way through lines of snow-covered cars, a shape suddenly stepped away from the side of one of them. Footsteps had packed down in the snow by the driver's door and the snow had been brushed away around the door handle. The man walked briskly away into the snow flurry, not looking back.\n\n\"Hey!\" Liam said suddenly. \"He was trying to break into that car!\"\n\n\"Are you sure?\" Sandy asked.\n\n\"Well, if he had a key, he'd have just opened the door. Look at how he's trampled the snow down by the door. He'd been trying to get in for a while.\"\n\n\"What do think we should do?\" Sandy asked, looking around nervously.\n\nThe three paused.\n\nTrixellian raised one hand, snapped her fingers. The other two, startled by the sound, turned to look at her. She just smiled.\n\n\"Let's you and I stick close to Liam, Sandy!\" she said, \"I'm pretty sure he'll protect us.\"\n\nThe tall boy looked around nervously, but stood a little prouder. Sandy smiled, took his arm and pulled in closer. \n\n\"I think you're right, Trixie,\" she said softly. \"You'll keep us safe, won't you, Liam?\"\n\nShoulders back and a girl clinging to each arm, Liam stepped off towards the glow of the hotel lights ahead.\n\nBehind them, off to one side, barely perceptible through the falling snow, came the sounds of agitated cursing as a would-be thief began frantically pulling off his coat and shirt. For some reason, they seemed to be full of snow...\n\n+\n\nTrixellian was baffled by the door to her room. The handle turned, but the door remained locked.\n\nLooking at the plaque on the door, her curiosity was aroused. What's a 'regal'? &hairsp; she asked herself. And why does it need a suit? \n\n\"Where's your key?\" Sandy asked.\n\n\"Key? Oh, yeah.\" Trixellian fumbled through her purse. It contained several plastic cards and some other items she didn't recognize. It wasn't like she'd packed it herself.\n\n\"There!\" Sandy said, pointing. \"Isn't that your key-card?\"\n\n\"Oh, yeah. I suppose it is,\" Trixellian said softly. Now what? &hairsp; she thought to herself. Uncertain, she pulled it out and handed it to the taller woman. \"Here, you do it. I always get it wrong.\"\n\nThe other two looked at her, somewhat puzzled, but Sandy took the card and inserted it into the slot in the lock. A small green light lit up and there was a slight whirring sound from the lock. The door opened easily under Sandy's hand.\n\n\"Wow!\" Liam breathed. \"Is this ever nice!\" His comment was echoed by Sandy.\n\nTrixellian was not herself very impressed. Looking around, it was clear that Omerlon had chosen lodgings for her several levels below that considered barely adequate for even the most junior elf at the North Pole. Yes, the ceiling was high, but it hardly towered.&hairsp; And the carpet was barely ankle-deep. \n\n\"Look at this place!\" Sandy exclaimed. \"This must cost a mint, Trixie!\"\n\n\"Oh, that,\" the elf said, thinking quickly. \"I didn't actually book it. It was my, erm, uncle. Yes, my uncle. He knew I was going to be here and he's been in the, um, hospitality business for... well, just about forever.\" \n\nA word popped into her head. She wasn't sure from where or what it meant, but it had the right feel to it.\n\n\"It's a comp, I guess.\"\n\n\"You got comped into this?\"&hairsp; Liam said, looking around. \"At Christmas?\"\n\n\"That's awesome!\" Sandy said, brushing snow from her coat.\n\n\"Yeah, I suppose,\" Trixellian said, her anger at her banishment unabated. \"It's OK. Anyway, come on in. I actually haven't spent all that much time here.\" Like none, right? &hairsp; \"Let's explore.\"\n\nDecorated in dark browns, umbers and golds, the suite turned out to have multiple bedrooms. There were three of those, each with a king-size bed and each with its own bathroom. On one bed, a shabby suitcase lay, no doubt packed at Omerlon's direction. A large central space featured sofas, comfortable chairs, a desk and a major television.\n\nFloor-to-ceiling windows overlooked... well, right now they overlooked a blizzard, but their size promised impressive vistas. A small but functional kitchenette and dining table was matched by what proved to be a fully-stocked wet bar.\n\nLiam and Sandy were amazed at the size and variety of the bar stock. Trixellian seethed inwardly at the absence of good&hairsp; liquor. \n\nWhere'd they get this reindeer pee? &hairsp; she thought to herself. What in the name of the South Pole is 'Glenlivet'? And 'Dom Perignon'... I mean, this stuff is so...  \n\nTrixellian's heart sank as she began to fully appreciate the depths of Omerlon's petty vindictiveness. Yes, Santa's elves worked hard, but there were, after all, standards to be upheld, right?\n\nShe looked up from her examination of the bar to see the others looking in wonder at a tiled hot tub in the centre of the room, one easily big enough for six people. To one side was an open-concept gas fireplace. As she watched, Liam looked around, stepped to one wall and flicked a switch. There was a small woof!&hairsp; as the fireplace turned on. In a moment, a cheery fire was sending its flickering light across the room.\n\n\"This place is just amazing, Trixie!\" Liam said. \n\n\"I wish I had an uncle like that,\" agreed Sandy. \n\n\"Well, how about a drink?\" Trixellian offered, \"Before you go. Get you warmed up.\" Despite her disappointment, the other two seemed impressed by the selection.\n\nLiam looked at his watch.\n\n\"I'd like to,\" he said, \"but my bus leaves in like eight minutes.\"\n\nTrixellian looked at Sandy, raised one eyebrow in question.\n\n\"Sure,\" the blonde girl replied, \"but just one.\"\n\nThe two said goodbye to Liam at the door. \n\n\"See you tomorrow?\" Trixellian asked. Friends were important, she knew, and these two were the only candidates in sight.\n\n\"Sure,\" the boy replied. \"I look forward to it.\" He stepped out the open door.\n\nOn impulse, the elf seized one hand, pulled him back. She leaned up on her tip-toes, kissed him lightly on one cheek.\n\n\"Thanks, Liam.\"\n\nTo her amazement, the boy blushed. Pulling his hand out of hers, he turned and almost loped down the hallway. Smiling, she closed the door. Turning, she saw Sandy staring wide-eyed at her, her mouth open in apparent surprise.\n\n\"Wow!\" the girl said. \"You move fast, girl!\"\n\n\"Um, I'm sorry,\" Trixellian said. Had she broken another human rule? It was all so complicated! &hairsp; \"Were you...? I mean, did you...?\"\n\n\"Oh, no!\" Sandy grinned. \"But he's so shy! I've been trying to get him to notice me for a week. I was starting to wonder if he was gay or something.\"\n\nShe shrugged. \"I've always been a sucker for really tall boys. I just wish he wasn't so bashful.\"\n\nTrixellian giggled. Shyness was not a normal elvish emotion, but it wasn't unknown to her.\n\nAnd she knew some cures for it.\n\n\"C'mon,\" she smiled. \"Let's have a drink and talk about Liam and what we can do to cure that shyness.\"\n\n+\n\nThe next few days were, to Trixellian, sheer madness. The workshops at the North Pole were busier than the mall and more crowded, but at least they were organized. Everybody there knew their place and everybody was working with the same aim. Here, she realized with a shock, despite the Christmas spirit, everybody was to some degree, a competitor. &hairsp; Every child had its own objective and those overlapped with their parents' goals only broadly and only in certain areas. Worse, many shoppers without children seemed to view everyone else as adversaries.&hairsp; This wasn't the near-universal seasonal love she had come to expect.\n\nIn between directing harried mothers to washrooms, arranging payment for photographs with 'Santa' and soothing children terrified by His presence, Trixellian tried to change that, to make the day making the day an experience&hairsp; people would remember -- and, some of them, perhaps learn from.\n\nA solidly-built nine-year-old boy discovered that tormenting his little sister made his bum extremely itchy and that scratching it in public made people laugh at him. That made him angry, but even raising his fist towards his sister made the itch much worse.\n\nA well-dressed mother pulling her wide-eyed child past the display with the words, \"It's too much money,\" soon found herself depositing one of the small stack of $50 bills in her purse into a Salvation Army kettle before pressing three more on an obviously-poor woman with two thinly-dressed children in tow. The look on the befurred woman's face suggested she couldn't understand what her eyes were watching her hands do.\n\nA pickpocket seriously sprained his fingers by running into a column wrapped in garlands and flashing lights. He was later to tell his partner that the column had 'jumped out at him'. \n\nWatching him being led away with his hand in a large cup of icy soda from the food court, Trixellian found that the mall was more becoming more... ah! yes, more Christmassy &hairsp;. Justice, too, was present. \n\nIt was her first experience of justice from the right side of the bench. That too was a curious experience.\n\nAnd she got to try her first hot dog! It was an experience far from any dining she had ever experienced -- rough, hearty, with none of the sophistication her food had always had. But it was good; another experience to file away, however difficult it would be to explain to her fellow elves on her return.\n\nIt was the mix of apprehension and joy in on the faces of the children as their turn with 'Santa' that Trixellian found most endearing. Thousands of them, day after day, in dreadful hopes of seeing Santa.\n\nIf they only knew... Trixellian thought to herself. \n\nShe herself had had a reminder of that hidden reality. \n\nEmerging into the hall from the Ladies one afternoon, she almost ran into a familiar form leaning against the wall.\n\nOmerlon.\n\n\"What are you doing here?\" she demanded. Her banishment was bad enough.\n\n\"Checking up,\" he smirked. \"Making sure you hadn't run away.\"\n\nOmerlon was good at smirking.\n\n\"Run to where?\" Trixellian demanded.\n\n\"Anywhere but here,\" Omerlon said flatly, shrugging himself off the wall. \"Just so you know, I'll be here from time to time, keeping my eye on you.\"\n\nHe looked down the hall towards the bustle of Christmas shoppers. He grimaced in patrician distaste. \n\nWith that, he raised his hand. Snapping his fingers, he vanished, leaving a seething Trixellian behind.\n\n.\n\nOmerlon's officious snooping and her natural cynicism notwithstanding, several weeks of experiencing happy hope on small faces did bring a subtle gentleness to the elf. Instead of merely accepting the Christmas spirit as a given, as normal as the sun rising each morning, she was beginning to feel it within her own heart. She found she was less bitter now, more inclined to take her exile as a chance to investigate. \n\nSomething, perhaps, even enjoyable. Certainly, the regular after-work visits by Sandy and, less frequently, Liam were pleasant. Trixellian found girl-time was much the same in the mortal world, too. Even in exile, it was nice to have somebody to talk to, somebody to listen, somebody to laugh with. And if Sandy the was one who made you laugh, Trixellian was the one who could plan.\n\n+\n\n\"I wonder if that thief is around,\" Sandy wondered as they passed a line of footprints in the ever-present snow. The prints seemed to go from one snow-covered car to the next.\n\n\"It's a bad winter,\" Liam said. \"The mall's hired security guards and they've even put up more security cameras, but in this kind of weather...\" He waved his hands up into the falling snowflakes, \"...it's just about pointless.\"\n\nWhile a prankster, Trixellian had her own ideas on morality - and they didn't include stealing Christmas presents. Allowing the other two to pass her, she paused a moment, looked at the tracks and snapped her fingers quietly. Smiling, she lengthened her pace to catch up to her friends.\n\nDistantly, through the curtain of falling snow, there came the sounds of horrified profanity as a would-be thief tried to hold his trousers together. For some reason, the seams seemed to be disintegrating...\n\nIt was a cold night and it would be a long way home for him, too.\n\nGoing to bed that evening, Trixellian was pleased for another reason. Before dropping her and Sandy off, the tall boy had kissed them both good night. It was a first.\n\n+\n\nTwo days later, the Village being closed for lunch, Trixellian was annoyed to see a familiar figure in the mall crowds -- two, in fact. \n\nOmerlon. With his arm around Vinditta. \n\nWell, actually not quite around&hairsp; Vinditta. 'Half-around' would have been more accurate, for his hand was gently massaging Vinditta's shapely bottom. The latter's right hand was around Omerlon's waist and her head rested on his shoulder. \n\nSlumming, are we, Omerlon? Taking your trollop on an exciting safari into the dangerous mortal world?\n\nStrolling around in public in formal North Pole robes, even in a mall known for the occasional cosplay event, was definitely causing them to be noticed. Didn't those two even care?&hairsp; Trixellian wondered.\n\nVinditta giggled, licked Omerlon's ear with the tip of her tongue. That&hairsp; got the attention of a couple of mothers, who rapidly dragged their broods away. \n\nTrixellian gritted her teeth. Exile was bad enough. Omerlon constantly checking up on her was worse. Inviting that blonde-only-by-bottled-magic strumpet along to witness her in jingle bells was the ultimate indignity. But this  behaviour was unforgiveable for an elf of Omerlon's status. Get a room, you two!&hairsp;\n\nThen it struck her. An idea. Trixellian had the most wonderful idea. Green eyes shining, she had the most wonderfully Grinchy idea.\n\nThe Grinch was, after all, required study at the North Pole.\n\nBorrowing Liam's camera and quietly following the pair through the crowds, Trixellian was able take photo after photo without being noticed.\n\nSome of them printed up rather well, she thought to herself later. Thinking about them carefully rolled up in the sleeve of her coat allowed her to keep smiling when Omerlon and his doxie wandered by after lunch. \n\nVinditta had the gall to wave.\n\n+\n\nThe logistics of the thing perplexed her. She had the evidence, but how...?\n\nThen it hit her.\n\nDespite the bureaucracy rapidly entrenching itself at the North Pole, Trixellian knew that every letter -- every&hairsp; letter -- addressed to 'Santa Claus, North Pole' was personally read by the Saint himself. Maybe it was just habit? Maybe it took the Saint back to his pre-expansion days, when it was just him, three elves and a spritely Mrs. Claus in a rented shop on the wrong side of the polar bear tracks? Whatever -- letters addressed to Santa went unopened to his office for his personal attention.\n\nUnless, following a recent trend, it had been written by a little girl and addressed to 'Ms. S. Claus'. Those went directly to Madame.\n\nTrixellian's smile lit the bedroom.\n\n+\n\nThe days seemed to get longer the closer they came to Christmas. More and more children passed through the Village, more and more photos were taken. \n\nClosing came at long last on the 23rd. As usual, Eric vanished almost instantly, leaving the younger trio to clean up.\n\n\"Hey,\" Trixellian asked Liam as he locked the door to the cabin, \"You're staying for a drink tonight, right?\"\n\n\"Erm, I'd like to, but it's that bus timing.\"\n\n\"Isn't there a later one?\" \n\n\"I don't think so.\"\n\nIt was still snowing outside. That much felt like home to her.\n\nTrudging through the snow, arm-in-arm with the other two, Trixellian had an idea. \n\n\"Guys,\" she said, \"It's a three-bedroom suite. Why don't you just spend the night? Is there anything you need? I'm sure the hotel can provide toothbrushes. Is there anybody who's going to be worried?\"\n\n\"My roommate will be fine with it,\" Sandy said, right on cue. \n\nTrixellian could see the wheels going around in the boy's head. \"I'm still living with my parents,\" he admitted.\n\nSandy moved in, gave him a big hug. \n\n\"That's so sweet!\" she said. Seeing the look on Liam's face, she hurriedly added, \"And really practical, too! Save money now, worry less later about student loans, right?\"\n\nLiam nodded, somewhat relieved.\n\n\"So, tell them the truth,\" Trixellian suggested, stepping out again towards the distant lights of the hotel. \"Tell them that it's snowing like crazy, the roads are really slippery and rather than take a couple of hours on the bus, you're going to stay with friends overnight. Give them my hotel room number if you want.\"\n\nThe tall boy was silent for a couple of steps.\n\n\"OK,\" he announced. \"Thank you. I accept. It is a long bus ride.\" His stride lengthened a bit as they plodded through the rapidly-accumulating snow.\n\n+\n\n\"Sit down, Liam. Relax. I won't let Sandy pick on you. I promise.\" \n\nTrixellian smiled at the tall boy. His Adam's apple bobbed up and down, but he did sit down on one of the sofas. \n\nAt one end. \n\nThe far end.\n\nSandy moved to sit beside him and tried to rest her head on his shoulder. He was simply too tall, so she merely snuggled up against him and rested her head on his arm.\n\nThe boy's blush deepened.\n\nSandy's arm tightened around his waist in a hug.\n\n\"C'mon, Liam. You're not afraid of two little girls, are you?\"\n\nHis eyes dropped to meet hers.\n\n\"Damn right I am,\" he said.\n\nTrixellian's carillon laugh rang across the room; the eyes of the other two snapped over to her.",
        "\"Erm, sorry,\" she said, still laughing. \"The look on your face, Liam! What's the worst thing that could happen?\"\n\nThe boy blushed deeply. Faced with two hot girls in a luxury suite, complete with hot tub, Liam found himself embarrassingly timid and totally uncertain about what he should do next. \n\nTrixellian laughter stopped, but she kept her smile. Humans! she thought to herself. She stepped to Liam's other side, leaned over the arm of the sofa and took his arm.\n\n\"C'mon, Liam,\" she said gently. \"We won't bite, I promise. How about you get us all a drink? You know where the booze is hiding.\"\n\nHappy to be faced with something less intimidating, the boy almost levitated out of the sofa. Trixellian looked at Sandy and winked. Putty in our hands, girl!\" \n\nSandy grinned back.\n\nLiam returned with a bottle of white wine. \n\n\"This do?\" he asked. Trixellian looked at Sandy and nodded. The boy went in search of a corkscrew.\n\nSandy beamed behind the retreating boy's back. \n\n\"This place is really nice, Trixie,\" she said. \"I mean, it's just amazing. With a hot tub, too!\"\n\n\"The question, the elf replied, a mischievous grin on her face, \"is how to get all three of us into it at the same time.\"\n\nLiam heard Sandy coughing with laughter, turned to look. Sandy, still sputtering, waved her hand at him in a reassuring gesture and the boy turned back to his task.\n\nThe blonde girl leaned forward. \n\n\"You mean that?\" she asked, an unexpectedly cautious tone in her voice.\n\n\"Absolutely,\" Trixellian assured her. \"Let's make it happen, Sandy!\"\n\nHer eyebrows went up, just a little. \"Any ideas?\"\n\n\"How about Truth or Dare?\" Sandy whispered conspiratorially.\n\nThe elf looked at her, her face blank.\n\n\"'Truth or Dare?' I don't think I know it.\"\n\n\"Really?\" Seeing Trixellian's head shake, she giggled. \"Well, don't worry, Liam will. People have to choose between answering a question -- 'Truth' -- or doing something -- 'Dare'. Once they make their choice, they're told what to do next.\" \n\n\"What if they don't want to answer or do the dare?\"\n\n\"Well,\" Sandy frowned, \"there's no way to force them. It's that peer pressure thing, I guess.\"\n\nUnderstanding at last, Trixellian grinned, green eyes sparkling. This sounded like her kind of game. To her mind, she had no peers and lots of ways of exerting pressure.\n\nLiam returned, long fingers clutching the bottle and three glasses. As if on script, the two young women slid to either end of the sofa, leaving the obvious empty middle for the tall young man.\n\nTrixellian accepted her wine, patted the open spot.\n\n\"We've been waiting for you, Liam,\" she smiled, as engagingly as possible. \"It's your turn.\"\n\n\"Turn?\" The boy's face looked down at them, blank, uncomprehending.\n\nSandy giggled. \"Mmm-hmm! Come sit down, Liam.\"\n\nShe seized his hand with hers, pulled him down. Turning awkwardly, the boy almost fell into the spot, barely avoided spilling his own drink. Each woman seized an arm, leaned in towards him.\n\nThe boy blushed, which deepened when both women laughed.\n\n\"I'm sorry, Liam\" Trixellian said softly, leaning her head on his shoulder. \"I didn't mean to embarrass you. But you're so tall. For a girl, being able to lean against someone like that is - what, Sandy? Comforting?\"\n\n\"Delightful!\" the blonde girl replied, grinning. Liam turned scarlet.\n\n\"Sandy!\" Trixellian reproached. She spun in place, knelt on the sofa facing Liam. \n\n\"Don't pay any attention to her,\" she said. \"Sandy's just teasing.\"\n\nThe elf deliberately opened her eyes as wide as they would go, slid her hand up his chest, along his jaw. \n\nLiam was staring into her eyes, as mesmerized as a bird by an approaching snake. \n\n\"Was it OK for me to say that, Liam?\" she whispered. \"Was it OK for me to tell you that we're happy with you being here?\"\n\nThe boy thought, nodded. His throat was dry for some reason.\n\n\"Yes,\" he whispered. \"Yes, It was.\"\n\n\"Then is it OK if I hug you?\" She shifted her position, laid her head on his chest, gave him a gentle hug.\n\nShe waited, the boy's heart counting under her ear.\n\nA large silent hand came up, stroked her hair in silent acceptance.\n\nTrixellian could see the blonde girl watching. She smiled a little, gave the slightest wink. Join me! &hairsp; \n\nSandy must have understood, for she slid against Liam. She was tall enough that she could -- barely -- rest her head on his shoulder. \n\n\"That's nice,\" Sandy said softly. \"It is comforting, Liam. There's no danger here, but this feels... I don't know. 'Protected', maybe? 'Safe'? It's soothing, anyway.\"\n\nLiam's body relaxed slightly as he digested that; three rested against each other for a short while.\n\n\"Liam?\" Trixellian whispered.\n\n\"What?\"\n\n\"Don't take this wrong, but... Well, Sandy was teasing back then, but she was right, you know?\"\n\n\"Mmm?\"\n\n\"You know, for a girl, it really is a bit exciting just being next to a big man, a strong man. A nice one? Strength is a turn-on for us -- gentle strength. You know. Deep down, kind strength?\"\n\nShe kept her palm on his chest, lifted her head off the man's chest to look at his face. \n\nSuch blue eyes! &hairsp; she thought.\n\n\"It's comforting, but it's fun, too,\" she continued. \"Am I making any sense?\"\n\nHe nodded. Large hands hugged two waists briefly.\n\nSandy sat up, looked at the boy.\n\n\"I'm sorry if I picked on you, Liam. You're nice to be with and I tend to tease a lot. Forgive me?\"\n\n\"Of course.\"\n\nSandy giggled. \"Good, because it's still your turn.\" She paused, saw the look on his face. \"If you want.:\n\n\"For?\"\n\n\"Trixie and I decided we might want to play Truth or Dare.\" She looked up at him, batted her eyes theatrically. \"You're welcome to join us.\"\n\nTrixellian could see the struggle going on in the boy's mind. She stretched, kissed his cheek gently. \"You don't have to,\" she said. \"We could watch a movie or something. But we thought it would be fun. Please? If you're OK with it?\"\n\nA moment later, Liam nodded.\n\n\"Good!\" Sandy said, a smile on her face. She too leaned up and kissed his cheek. \"And we didn't mean it when we said you had to start. We could toss coins.\"\n\nTrixellian held out her closed hand, opened it. Three coins lay on her palm.\n\n\"Odd man out?\" she suggested. \"To start?\"\n\nNodding, the other two each took a coin. The coins were spun and caught, off-hands covering them. \n\nThey were, of course, Trixellian's coins. \n\nAnd Trixellian had not wanted to watch a movie.\n\nSandy ran one finger along Liam's upper arm, smiled almost apologetically. \"Looks like it's your turn after all, Liam.'\n\nThe boy nodded solemnly.\n\n\"So, Truth or Dare?\"\n\nThe boy's Adam's apple bobbed as he swallowed.\n\n\"Erm, Truth,\" he decided, looking apprehensive.\n\nTrixellian caught her eye. Go easy on him,&hairsp; she thought.\n\nSandy nodded, imperceptibly. She was no fool.\n\n\"What was your best subject in school?\" she asked.\n\nTrixellian could see the young man was relieved not to be asked something hideously embarrassing.\n\n\"Math,\" he said. \"I really liked math.\"\n\n\"OK,\" Trixellian said, \"Sandy's turn. Sandy -- Truth or Dare?\"\n\n\"Truth.\"\n\nTrixellian thought for a second.\n\n\"What's the nicest thing about Liam?\" she asked.\n\nSandy pondered that.\n\n\"Well, he's tall and that's nice. He's cute, too, and what's not to like there? But I think the nicest thing is that he treats a girl well. As big as he is, he's polite and gentle. I like that.\"\n\nBoth Liam and Trixellian could see that that was indeed the truth. Sandy hugged Liam's upper arm, smiled up at him. It was a sweet smile, a gentle smile, a smile as revealing as any polygraph. Liam blushed slightly, but the elf could see that he was pleased, maybe even a little more confident.\n\nThis is working out well,&hairsp; she thought, turning her head up to look at Liam. It took the boy a few seconds to take his eyes off of Sandy.\n\n\"OK, Trixie,\" he said finally. \"Truth or Dare?\"\n\nTrixellian had given some thought to that. They were supposed&hairsp; to answer truthfully -- and that could pose problems.\n\n\"Dare!\" she announced, holding what she hoped looked like a happy smile.\n\nLiam had been thinking. He had no challenges he dared use in present company and the questions he really wanted to ask had all been mugged by his shyness. From out of nowhere, a thought hit him.\n\n\"I dare you to stand on your head!\" \n\nTrixellian laughed. Elves are as flexible as serpents. \n\nShe slipped from the sofa, pushed the table to one side and stood facing Liam. Bending at the waist, her hands came down flat on the floor. A slight push with her feet, a quiet jingling of bells and her legs rose, came to rest with her feet pointing perfectly straight up at the ceiling.\n\nHer skirt started to slide. Her mind dealt with that, held it in place as she let her legs fall to each side before rising again to the ceiling. Grinning, she walked on her hands until her head was just touching the boy's knees. While still maintaining her balance, she arced her body, let her feet fall towards Liam. With perfect control, she stroked his jaw with one toe before recovering, coming to rest upright on her feet in front of the other two, slightly red in the face, a just-slightly-triumphant smile on her face.\n\n\"How's that?\" she grinned.\n\nThe others were staring, wide-eyed. \n\nThe elf slid back in beside the tall boy, poked him gently in the ribs with a finger.\n\n\"Never seen a girl do a handstand before, Liam?\" She looked past the boy, saw that Sandy was equally amazed.\n\n\"What?\"\n\n\"I did gymnastics in high school,\" the blonde girl replied. \"That was perfect! &hairsp; Where did you learn to do that?\"\n\n\"Sort of comes naturally -- always been able to do it, I guess. Games we played as kids? Anyway,\" she said dismissively, \"it's Liam's turn now.\"\n\nSandy stared for another moment, looked up at Liam.\n\n\"OK, Truth or Dare?\"\n\n\"Um, Truth.\"\n\n\"Who was the first girl you ever kissed?\" Sandy had been ready with that one.\n\nLiam flushed, but the question wasn't that embarrassing.\n\n\"Sissy McCarthy. Grade 10 dance.\"\n\n\"OK, Sandy,\" Trixellian said, quickly. \"Truth or Dare?\"\n\n\"Dare.\"\n\nTrixellian thought she knew where the game was going, too. Time to step this up a little.&hairsp; \n\n\"I dare you to hold your nose against Liam's for 15 seconds without closing your eyes.\" She pointed at the tall man. \"Liam! That's you, too!\"\n\nThe blonde woman giggled, sat up, knelt beside Liam. She turned, face to face, leaned up with an inviting smile. The young man gulped, took a deep breath, forced himself remain calm, leaned down. Sandy's nose gently touched his and the two stared at each other, nose to nose.\n\nSandy started giggling. Surprised at himself, Liam joined in. Their laughter grew. Trixellian, judging the ice broken, didn't finish her slow count to 15.\n\n\"OK!\" she laughed. \"Well done!\"\n\nShe turned, waited patiently.\n\nIt took Liam some seconds to turn away from the blonde girl still holding his arm.\n\n\"Truth or Dare, Trixie?\" he asked.\n\n\"Dare.\"\n\nLiam didn't generally drink very much, if at all, and the wine was definitely going to his head. His mind flashed to a favourite fantasy -- just about every boy's fantasy, had he but known.\n\n\"I dare you to kiss Sandy!\" he announced.\n\nTrixellian, her eyebrows raised, turned from Liam to Sandy. The blonde girl looked a little bit shocked, but the elf couldn't tell if that was because she was reluctant to kiss her or because the dare came from the normally-shy Liam.\n\nHer doubts were satisfied when Sandy's hand reached across Liam's lap to grasp hers with a gentle squeeze; Trixellian saw the surprise in Sandy's eyes changing to silent sparkling laughter. \n\nTrixellian leaned forward. Their faces met a foot in front of Liam. Their lips touched, lightly, briefly, then the two girls, almost as one, pulled back a fraction to look up at the boy. His face was a mixture of delight and, quite obviously, anxiety that the girls might decide that the one small peck was enough.\n\nGiggling, they turned back to each other. Trixellian felt Sandy's other hand reach behind her head, fingers diving into her hair, pulling her in and down for a smouldering, soul-burning kiss.\n\nThis girls knows how! &hairsp; Trixellian smiled to herself, allowing herself to be pulled in tighter, reciprocating with her own years of her experience.\n\nShe moaned softly as her excitement built, swept her tongue over Sandy's lips, explored between lips and teeth, felt her heart pound as Sandy's tongue probed her own lips.\n\nSqueezing Sandy's hand, she pulled back a little bit, leaving a short space between their lips. Her tongue swept again over the blonde's lower lip and, when Sandy's tongue appeared, began to dance with it, tongue-tip to tongue-tip. From the corner of her eye, she could see the boy's jaw drop as he took in the sight.\n\nTrixellian giggled inwardly as she felt Liam shift his hips beneath them. When she felt his hand caress her waist, she knew they had won.\n\nShe leaned back into the other's soft lips, put ageless experience to work in pleasing and stimulating the girl. Finally, giving a loving nip with her teeth to Sandy's lower lip, she broke the kiss, leaned back.\n\nSandy's eyes were soft, her nostrils swollen, her face bright with happy colour.\n\nI guess that worked for her! &hairsp; Trixellian smiled to herself. It had certainly worked for the elf; she could feel her own response. Her lips felt hot, there was a weight in her loins, her nipples almost ached in their demand for attention. \n\nShe turned to look up at Liam, tried to conceal her arousal. She giggled softly. \"Was that what you wanted, Liam?\"\n\nThe boy appeared stunned. His eyes were wide; Trixellian could see the pulse in his throat. She had to repress an open laugh at the stiff fabric of the boy's lap. Never see two girls kiss before, Liam? &hairsp;\n\n\"Wow!\" breathed Sandy. \"That...\" She paused.\n\nThe elf turned to Liam, ran soft fingertips over one cheek.\n\n\"OK on that, Liam?\" she whispered.\n\nThe boy nodded, a strange, soft smile on his face.\n\n\"It's Liam's turn, Sandy,\" the elf said. Let's keep this ball in motion.\n\nThe blonde girl shook her head briefly, looked at Trixellian almost dreamily for a moment before turning back up to the boy. She took a deep breath.\n\n\"Truth or Dare, Liam?\"\n\nDelighted, as excited as he had ever been, Liam was still cautious. \n\n\"Truth,\" he announced, softly.\n\nSandy's eyes closed for a moment, reopened. This evening was to have but one ending. Looking back to Liam, she invoked the nuclear option.\n\n\"Not counting her lips, Liam, what part of Trixellian would you like to be able to kiss?\"\n\nThe room fell dead still. Trixellian tried not to let her delight show on her face. She stretched on the sofa, tried to seem as relaxed -- and open to his inspection -- as possible.\n\nLiam's gaze swept back and forth, from one girl to the other. He started to speak, stopped, opened his lips again.\n\n\"'Truth', Liam,\" Sandy prodded. \n\nLiam turned to Trixellian. To his surprise, the girl's green eyes seemed to actually gleam in front of him.\n\n\"Truth,\" Trixellian echoed gently, her whisper barely perceptible. \"We're all friends here. It's OK, Liam.\"\n\nThe boy closed his eyes.\n\n\"Her breasts,\" Liam said, very softly. \"They're so beautiful.\" His eyes dropped and the boy's face turned beet red.\n\nTrixellian put her hand on Liam's chin, lifted it a fraction, just enough that Liam looked up, opened his eyes to gaze into hers.\n\nBlue eyes! &hairsp; she thought. Who knew that blue eyes could be so attractive? &hairsp; She felt her pulse in her ears, a slight shortage of breath. This was no rough-and-tumble Boxing Day workshop tumble.\n\n\"Liam?\" she said gently.\n\nThe boy just nodded.\n\n\"That was really sweet, Liam.\" She leaned against his chest, gave him a strong hug before leaning back to again look him in the eyes.\n\n\"And, do you know what, Liam?\"\n\nThe boy shook his head slightly.\n\nTrixellian leaned up, 'way up, pulled his head down so that her lips lay close to his ear.\n\n\"Maybe,\" she whispered. \"Maybe, sometime.\"\n\nThey boy's eyes seemed the size of saucers as he assimilated that. His heart beat against his ribs.\n\n\"Now,\" Trixellian said, not breaking eye contact with the boy. \"Sandy, Truth or Dare?\"\n\n\"Dare,\" the girl replied softly. \n\nTrixellian knew her friend was up for anything regarding Liam.\n\nShe blinked, looked back and forth between the two. She had a term in her mind, thought she knew what it meant.\n\n\"OK, Sandy, I dare you to give Liam a two-minute lap dance. His choice as to how many clothes you take off.\"\n\nSandy's eyebrows raised; her smile grew positively wicked. Liam on the other hand looked like he'd been hit with a baseball bat.\n\n\"You'll have to shift over, Trixie,\" Sandy said. Turning to the boy, she pressed her body against his, looked up at his face. \n\n\"Liam?\" she asked softly.\n\nThe shy boy stared at her, his hands in his lap.\n\n\"Just the dress,\" he whispered. \n\nBoth girls giggled.\n\n\"Liam,\" Trixellian said helpfully, \"The zipper to the costume is under her left arm.\"\n\nThe blonde woman giggled, stood up beside him, half-knelt and raised her left arm to show the zipper.\n\nTrixellian saw Liam's hesitation, reached over and led his hand to the zipper pull.\n\n\"Here,\" she said quietly, \"Take it.\"\n\nThe elf's eyes twinkled as the boy took the zipper pull gingerly between thumb and forefinger. She kept his hand in hers. The boy gave a slight pull and the zipper opened an inch or two. Thrilled but still shy, Liam tried to let go.\n\nAnd couldn't.\n\nElves are much stronger than they look and Trixellian was not releasing his fingers. Wide blue eyes turned towards Trixellian with a silent plea.\n\nShe just shrugged. \"Sorry, Liam, but it was your dare. You can't back out now.\"\n\nSandy laughed, not fully understanding Trixellian's involvement, but eager to move things forward.\n\nOr, in this case, down.\n\n\"Here, Liam,\" she said, \"just hold still. I'll help.\"\n\nWith that, she rose gracefully. As she rose -- to Liam's open embarrassment but inward delight -- the zipper slid open. The boy's face was scarlet as Sandy shrugged, let the unfastened elf costume fall about her ankles.\n\nThe boy found he was now able to let go of the pull tab as he stared at the figure in front of him. \n\nSandy's lingerie was hardly transparent, nor was it any more revealing than that commonly found on department store mannequins.\n\nBut it was black -- a perfect choice, Trixellian thought, given the blonde girl's creamy skin. And it wasn't on a faceless mannequin, but on a very real, very pretty, agreeably smiling girl standing right in front of the boy.\n\nBoth women tried to hide their giggles at the obvious tent in the boy's trousers.\n\nLaughing, Sandy spun away, shifted the low table. Coming to rest six feet in front of Liam, Sandy lowered her arms, locked eyes with him. \n\nThen she paused, looked down at her legs, still covered in her green-and-white hose. She glanced at Trixellian. \"These won't do,\" she said. \"Will you help me, please, Trixie?\" Trixellian could almost taste the mischief in the blonde's voice.\n\nSandy sat on the edge of a low bench, stretched out one shapely leg. Careful not to obstruct Liam's view, Trixellian knelt beside her. The elf's hands slid slowly up Sandy's outstretched leg, rising from slender ankle to her calf, squeezing her knee before stopping half-way up her thigh. \n\nTrixellian allowed her hand to move a bit further, past the hem, over silky skin; the blonde girl wiggled at fingertips on her inner thigh.\n\n\"Stop that, Trixie! This is supposed to be for Liam!\"\n\n\"I'm pretty sure that Liam's enjoying himself,\" the elf replied laughingly, but she obediently slid her fingertips under the top of Sandy's stocking and began to roll it down the girl's leg.",
        "Liam's eyes were indeed bulging as more and more of the girl's skin was exposed. The fabric of his trousers was definitely stretched, Trixellian noted with a smile. A quick look up at Sandy showed that the blonde woman had noticed it, too.\n\nShe allowed herself to trail one fingertip along Sandy's skin as she rolled the sock, smiled inwardly as she felt Sandy's leg shiver at the touch. She took another quick look at the boy's face, saw the desire there. Excellent!\n\nThe first sock removed, she repeated the process with the other before backing out of the way. Sandy stood, blonde hair hanging loose down her back, pale perfect skin under a tease of black.\n\n\"We were, I think, talking about a lap dance,\" Sandy smiled at the boy. Liam shifted on the sofa, sat more upright.\n\nHer eyes locked on Liam's, Sandy's hips swayed from side to side as she slowly moved forward. Her hands ran lightly over her belly, breasts and thighs as she walked, emphasizing and highlighting the delights awaiting the boy. Between Trixellian's earlier caresses and Liam's clear enchantment with the sight she was presenting, the blonde woman was herself highly aroused. Her heart was pounding, her loins felt swollen, her nipples little rocks. She'd never done a lap dance before, not really, not for a real person, but her clear power over the boy put a proud swing to her steps, lent fire to her most sultry smile.\n\nReaching the sofa, she knelt gracefully before the wide-eyed boy, rested her hands on his knees.\n\n\"Hi, Liam,\" she said in a husky voice. \"Are you ready for me?\"\n\nThe boy nodded, unable to speak.\n\nSandy's hands swept slowly up over her stomach to cup her breasts, lifting them for his inspection.\n\n\"Are you ready for these?\" She bounced them just slightly and the boy's eyes almost crossed.\n\nSandy rose, lowered herself onto one of the boy's knees. One of her hands stroked up his chest, caressed the side of his head, stroked the length of his jaw. Her other hand swept over her breasts, back and forth, again and again. She squeezed his thigh between hers.\n\nTrixellian watched, fascinated. Dance, including erotic dance, was well known to the elves, but not like this. She could feel the passion the girl was putting into her seductive moves, felt its impact not only on the tall man, but on her, too. Her nipples felt taut as drums.\n\nSandy leaned back, her knees on either side of Liam's thigh, raised her breasts in their thin black fabric, dragged them lightly over Liam's face. Sitting back, she opened the boy's shirt, taking a long time between each button. She ran her slim hand inside his shirt, up and down his chest.\n\nThe blonde girl suddenly realized that her projected eroticism could cut both ways, that the most important thing in her world now was Liam. More than anything, she longed for his skin against hers, his large hands on her body, his...\n\nShe leaned back, slid one bra strap down off her shoulder, then the other, saw wonder in his eyes. Beneath her, she felt Liam's hardness twitch against her leg and her delighted laughter filled the room. She reached back, her hand on her bra clasp, opened it. The bra sagged, held up only by Sandy's arms pressing the strap against her flanks.\n\nThe girl caught the cups in her hands, eased them slowly down until the edges of her areolae could be seen, then shifted the material back up. She giggled loudly, blew the boy a kiss.\n\n\"Enjoying it so far, Liam?\" she whispered.\n\nThe boy grinned, started to speak. \n\nHis reply was cut off by Sandy's interruption. \"I know I am.\"\n\n\"Two minutes,\" Trixellian said impishly. \"That was a  two-minute&hairsp; lap dance.\"\n\nSandy and Liam whirled towards her in frustration. Sandy recovered first. She knew where this game was headed; Liam only had hopes. The blonde girl leaned up, kissed his lips gently, stroked his jaw and slid off his lap. \n\nGrinning, she spun on the spot and, still holding the bra in place with her hands, wiggled her black-clad bum at the boy. She turned, slid back into her place on the sofa beside him. Liam's eyes followed her, his face flushed. Sandy pulled his head down, kissed his cheek again.\n\nThen, her bosom pressed hard against him, she slowly pulled the bra out from between them, handed it in front of him. \"Here, Liam, hold this.\"\n\nThe boy didn't know where to look. His eyes jumped from her, to the bra, to Trixellian, back to Sandy.\n\n\"It's Trixie's turn now, Liam,\" Sandy chuckled, as if nothing else had happened, nothing else mattered. \"Go on.\"\n\nUnwilling to take his eyes off the blonde girl on his one side, amazed at the feeling of her bare breasts pressed hard against him, it took a poke in the short ribs from Trixellian to get him to look at the elf.\n\n\"I'll save you the trouble of asking, Liam,\" she grinned. \"Dare.\"\n\nThe boy, amazed but surer of himself now, paused, smiled back.\n\n\"I dare you to whisper something into my ear you've fantasized about.\"\n\n\"That's easy, Liam,\" she said. She leaned in close to him and whispered something before leaning away, a mischievous grin on her face.\n\n\"Hey!\" Sandy complained. \"I couldn't hear that! No fair.\"\n\nLiam's eyes seemed enormous to the elf. \"Go on, Liam, tell her,\" Trixellian giggled.\n\n\"Liam!\" Sandy demanded. \"What did she say?\"\n\nBlushing fire-engine red, the boy shook his head.\n\n\"No,\" he said, \"It's a secret.\"\n\n\"Tell me!\" she insisted. She started tickling him in the ribs, making the tall man jerk and twist with laughter. \"Tell me or...\"\n\nShe paused. \"Liam,\" she commanded, \"Truth...\"\n\n\"Stop!\" Trixellian said quickly. \"Don't waste that turn, Sandy.\" She glanced up at Liam, back to her blonde friend.\n\n\"I told him that my fantasy was to see you two in the hot tub together.\"\n\nThe words sounded flat now that they were out in the open, but as Liam turned to stare at her, Trixellian could see Sandy mouth a silent, \"Thank you,\" from behind him. \n\nThe elf put her hand up to Liam's cheek, stroked it gently.\n\n\"It's OK, Liam,\" she smiled. \"It was the truth anyway.\"\n\nSandy cleared her throat.\n\n\"My turn,\" she said, softly but firmly, sure where to go now. \"Liam - Truth or Dare?\"\n\nLiam knew when he was beaten.\n\n\"Dare,\" he whispered.\n\nThe look on Sandy's face was a curious mixture of hope and triumph.\n\n\"I dare you,\" she said, so softly as to be barely audible, \"to spend the next half hour in the hot tub with me.\"\n\nShe paused, caught her breath, didn't take her eyes off the boy as she continued.\n\n\"It's your call as to whether or not you wear clothes.\"\n\nTrixellian laughed for her, squeezed his arm in encouragement. Then, Ooh! &hairsp; she thought, Real muscles! This guy is not just a bean-pole! &hairsp;\n\n\"Like I said, Liam,\" she said, \"what's the worst thing that could go wrong?\"\n\nThe boy turned to look at her.\n\n\"Would that really be so bad, Liam?\" Trixellian repeated, \"Half an hour in a hot tub with a couple of cute girls?\"\n\nA couple of cute girls? &hairsp; Sandy thought. She bristled for an instant at Trixellian's inviting herself, dropped it. It was Trixie's hot tub and Trixie was instrumental at getting Liam into it with her. Besides, she thought -- her eyes dropping to his straining trousers, there was enough of Liam to go around.\n\nLiam's manbrain flipped back and forth between the two smiling faces. Happy coincidence shook hands with testosterone, opened a door to a flock of fantasies.\n\nWithout saying a word, he rose, stretched out his hands and lifted both girls to their feet, pulled them into a group hug. Daring greatly, he slid his hands down, grasped each girl by the waist and squeezed.\n\n\"I accept,\" he said softly. \"But, before I do, can it be my turn to ask?\"\n\nThe two stared up at him, glanced at each other. Why not? &hairsp; \n\nHe took a deep breath, grinned. \"Sandy, I dare you help me get undressed.\"\n\nHer mouth fell open, but the girl was inwardly thrilled. \n\n\"I notice you didn't give me my choice, Liam,\" she said. She hugged him tighter, looked up again, whispered, \"But here's the Truth your Dare dodged -- it's OK.\"\n\nThe two girls stood in front of the boy. They started to reach for his shirt, but then, as if scripted, turned to kiss each other. Their hands ran over and along Liam's torso as the kiss grew deeper, more passionate.\n\nSandy's eyes glistened as the boy's hand swept up her stomach, over her ribs, enfolded one bare breast, squeezed gently.\n\nAs Trixellian felt his other hand do much the same, she realized she was still in her costume. She broke the kiss, looked up as Liam to get his attention before turning her left side to him and raising her arm.\n\n\"Do a girl a favour, Mister?\" she said.\n\nLiam's tentative hand took the tab, pulled it down, very slowly. Sandy laughed at the clear delight in his eyes. Trixellian shivered in anticipation as the descending zipper exposed more and more of her flank to the air.\n\nStepping out of the detested garment, she kicked it aside.\n\nAll the elf wore now was a pair of bright red Brazilian briefs. \n\n\"Wow!\" Sandy said. \"They're so pretty!\" Liam nodded in agreement, but his eyes didn't stay there for long.\n\nDespite her sizable bosom, the elf had gone braless, depending as much on faith as magic for support. Liam softly cupped one firm orb with a large hand; Trixellian smiled as he squeezed gently. That smile increased as one of Sandy's fingers explored at length a very hard, very protruding nipple.\n\nThe elf sighed with delight as Liam let his hands express his approval.\n\nSandy poked Trixellian lightly in the ribs with her elbow. \"Back to work, girl!\" she giggled. \"We have a job to do.\"\n\nSandy had already undone Liam's shirt buttons. Shivering with the memory of Liam's caress, Trixellian joined her in pulling the shirt off his shoulders, down off his arms, leaving his shirt-tails still tucked into his trousers. Liam smiled, his eyes closed, as the two women ran their hands over his shoulders and chest.\n\n\"Yummy!\" breathed Sandy. \n\nThe boy was indeed impressive. Not rugged or buff by any means, his muscles were still well-defined. A patch of dark hair covered his chest. Trixellian was unused to that and began to run her fingers through it. It felt like...\n\n\"Hey!\" Sandy said, kneeling. \"A little help here?\"\n\nObediently, the elf knelt beside her. Her mind kept running back to Liam's chest.\n\nSandy's hands were already on Liam's belt. When it was undone, Trixellian undid the button and -- returning the favour -- slowly opened the zipper. Her heart skipped a beat when she looked up and saw Liam looking down at her. \n\nFreed, the trousers dropped around his ankles. Nestled inside a pair of mundane briefs was something which to Sandy's happy eyes, matched the boy's height. She ran her fingertips over it, lightly, followed more firmly with her whole palm. \n\nThe expression on Liam's face was no longer difficult to read.\n\n\"Big-time reveal!\" she snickered. \"On five, on four...\"\n\nCatching on, Trixellian joined in the countdown.\n\n\"On two, on one!\" Together, the two pulled his briefs down in one swift motion, let them fall to the floor.\n\nLiam's engorged manhood swayed back and forth in front of them. While surprised at the forest of curls it emerged from, Trixellian laughed delightedly at its pleasing size and shape. Quickly, she leaned forward and kissed its tip lightly. Sandy's hand slid up Liam's thigh, gently clutched his sac, squeezed very gently. She was pleased to see she had not been wrong about the boy.\n\nLiam's hands petted the heads on front of them. That tender gesture and sudden sight of the sizeable wand just inches from her feat hit Sandy like a brick; she felt a wetness on her thighs, a compulsion to hold the great thing, to explore, to play with it.\n\nThe blonde girl gave one slow, broad-tongued lick from base to crown, then pulled away.\n\nShe tapped Liam's right shin. \"Lift,\" she commanded.\n\nLiam held the leg up while Trixellian pulled trousers and briefs over his foot, moved them to one side, dragged off his sock. The left leg followed, leaving Liam triumphantly bare in front of them.\n\nTrixellian leaned upward, seized his shaft and ran her lips over it. Her hand began to pump its satiny sheath along its rigid core; her tongue flowed around and over its tip. Sandy took one tender ball into her mouth, teased it with her tongue, then sucked the other in as well. It left little room in her mouth and she had to content herself with licking their undersides. The girl released them, took the fleshy bag with gentle fingers and pulled softly. The sac stretched away from where Trixellian was bobbing over Liam's upright wood. Smiling, Sandy contented herself with teasing the backside of the boy's sac with a flashing tongue tip.\n\nLiam inhaled, deeply. His hands came down, again caressed the two heads.\n\nSandy pulled away, tapped Trixellian on the shoulder. Then more firmly to get her attention. Trixellian had been... absorbed.\n\n\"That was a two-minute head job,\" Sandy grinned. \"It's tub time now.\"\n\nThe two women winked at each other and stood up. \n\nLiam pulled the two girls into his body for a strong hug. Releasing them, it was his turn to kneel, long fingers seeking and finding panty hems. Both knickers were on the floor in seconds; the girls were able to step out of them with ease.\n\nTrixellian was surprised to see a neatly-trimmed, finger-wide strip of blonde hair above Sandy's sex. These humans! &hairsp; she thought to herself. So unpredictable! &hairsp;\n\nShe thought for a moment. But cute!\n\nSmiling, the tall boy held out his hands in invitation. The two folded against him, one on either side, moved to the hot tub.\n\nStanding knee-high and comprised of gold-coloured tiles, the round tub stood in one corner of the main room. For once, the snow had stopped and the view of both stars and city lights from this tallest building in the city was spectacular.\n\n\"I have an idea,\" said Trixellian. \"I'll be right back.\"\n\nSnapping the switch for the water jets as she went, the elf stepped into the tiny kitchen. \n\nLiam and Sandy failed to notice the speed with which she returned with a tray full of candles. Liam was sitting on the edge of the tub, Sandy sitting on his lap, one of her arms around his neck and the other softly fondling the soft skin of the hard cock protruding from between them. Liam had one hand fondling a firm buttock and the thumb of the other slowly circling a taut nipple.\n\nLiam seemed to have overcome his shyness, Trixellian thought to herself.\n\nTrixellian put candles on every available surface. There seemed to be dozens -- hundreds -- of them now and their flickering flames lit the room.\n\nHolding the empty tray, she knelt briefly beside the two, squeezed Liam's cock, stroked an unoccupied breast. The two broke their kiss, looked down at the elf. \n\n\"Save some for me,\" she said softly. Rising gracefully, she collected a kiss from each before returning to the bar for a bottle of champagne and three flutes.\n\nShe thought of opening the wine herself, but changed her mind, sat down instead on the rim of the hot tub beside the pair.\n\nShe caught Sandy's attention again.\n\n\"May I cut in?\" she giggled. \"I need somebody strong to open this.\" She held up the champagne.\n\nLiam took the bottle and started fumbling with the foil cap.\n\n\"Don't worry, Liam,\" Trixellian reassured him. \"I'll keep her warm for you.\"\n\nShe gave a small tug on Sandy's wrist and the blonde girl changed places, knelt between the smiling elf's legs. Soft lips met soft lips, tongue tested tongue. As Sandy's hands reached behind the elf, clutched her cheeks, Trixellian squeezed the girl's waist with both hands before rising to cup both of her ample breasts. She could feel Sandy's nipples almost hum with pleasure under her palms. Sandy moaned softly, broke away from their kiss and lowered her head to take one of Trixellian's nipples in her mouth. \n\nThe elf felt her own arousal skyrocket, felt her labia swell. The girl's tongue flickered across her the tip of her nipple and Trixellian gasped.\n\nShe opened her eyes, saw that Liam, utter absorbed by the spectacle taking place beside him, had stopped trying to open the wine. \n\nShe laughed. \"I think we're distracting him, Sandy!\"\n\nThe blonde woman opened her eyes, glanced up at Liam. She giggled at the look on his face.\n\n\"C'mon, Liam!\" she teased. \"This is thirsty work!\"\n\n\"Maybe we're too distracting, Sandy?\" Trixellian suggested with a chuckle.\n\nThe two girls met eyes, rose together. One stepped to either side of Liam. They reached down, lifted their breasts and together swept them over the boy's face for a moment.\n\n\"Too distracting,\" agreed Trixellian. She looked at the delighted boy, lightly circled his taut rim with a finger. \n\n\"We'll be waiting for you,\" she said. With that, she led Sandy to the step into the hot tub.\n\nThe tall man's fingers began to fly at the foil, ripping it off, found the coil of wire and untwisted it as fast as he could.\n\nBehind him in the tub, the two girls had sat down on a ledge. Under the water, Trixellian felt a slim finger trace her lower lips, search for her now-protruding pearl. She shivered as Sandy found it, stroked gently.\n\nShe turned her head towards the blonde girl, found her lips, found a breast to fondle, felt herself drifting into a timeless wave of pleasure.\n\nA loud pop! &hairsp; interrupted them. A moment later, a triumphant Liam, stiff cock waving in front of him, entered the tub, foaming bottle in one hand, glasses in the other.\n\nThe women slid apart, leaving room for him. This time, Liam was confident enough to know where to sit. Handing a glass to the girls on either side, the boy poured, bubbles sparkling. Laughing, the three clinked glasses in a toast.\n\n\"Here's to Christmas!\" said Liam.\n\n\"And generous uncles!\" Sandy added.\n\nTrixellian smiled. \"And to good friends!\"\n\nThe three sipped. Liam set his glass down behind him on the tile rim, drew the two women into a fond hug, arms around their necks.\n\nSandy squeaked, for Liam's arms were long enough to be able to reach down and cage a full breast with long, sensitive fingers. Trixellian smiled when his hand found hers, too. It had after all been clamouring for attention.\n\nThe elf felt Liam's body tense for a second, then noticed the water roil and shift slightly above his groin. Shifting slightly, Trixellian was able to watch Sandy's hand flicking up and down the boy's shaft. \n\nShe leaned up, collected a quick kiss from Liam. The boy's blue eyes still fascinated the elf; she kept her eyes locked onto them as her hand fumbled for and found Liam's spongy crown. Sandy chuckled as she felt Trixellian's fingers begin to squeeze, to stroke, to circle the boy's mushroom head as her own swept the boy's softest skin back and forth over his iron core. Liam's hug grew stronger, his smile brighter. His hands rolled and pulled Trixellian's now-rigid nipple and the elf sighed with pleasure and delight.\n\nShe would be content to stay like this until Christmas.\n\nThe three paused from time to time, finding the champagne flutes -- always full for some reason -- always within easy reach. The slow, loving stimulation flowed gently back and forth between the three, raising their arousal - but slowly, patiently.\n\nTrixellian was enjoying herself, enjoying playing and being played. The caresses, the squeezes, the gentle pinches -- for the first time, they were from friends, not just co-workers. That made a difference somehow, made each touch more exciting but at the same time more valuable. She wondered how she could ever explain the difference at the North Pole.\n\nLiam's hand left her breasts, slid between her labia, stroked their length. A long finger slid into her opening, twisted, lingered over her G-spot. A slight gasp from Sandy suggested Liam had moved his hands over the blonde girl as well. Sandy began to give a series of high cries, building, rising. ",
        "Pulling out of Liam's embrace, Trixellian sank beneath the surface, pulled herself over to Sandy. As expected, Liam's hand was covering the girl's sex, two long fingers twisting inside her and his thumb slowly rolling over her pearl. Trixellian allowed herself to rise in the water, sat on the ledge, this time with Sandy in the middle.\n\nThe blonde's head was thrown back on the tiled rim. Her eyes were closed, her mouth open as Liam patiently worked her womanhood. His eyes opened and he smiled at the elf.\n\nThe smile became a grin as he watched Trixellian take one of Sandy's nipples in her mouth, begin licking it and sucking it. Her other hand closed on the girl's other breast, squeezing and mounding it softly. Sandy's hand closed suddenly on the nape of the elf's neck, pulling her in harder.\n\nSandy's cries became louder, deeper as Liam and Trixellian together drove her arousal higher, dragged her closer to the edge.\n\nLiam suddenly shifted away from Sandy and pulled the shuddering girl to her feet. Trixellian slipped off the ledge, glided a few feet in the water, turned to watch.\n\nTurning Sandy in the water to face away from him, Liam seized his organ with one hand, eased his hips forward, felt his tip probe her swollen lips. Sandy, hungry as she had never been before, reached back and guided him into her entrance. As Liam seized her hips with both hands, began to draw her back onto his length, Sandy lunged back herself, burying the boy balls-deep. \n\nGiving a great gasping shout of pleasure, the girl began to rock her own hips back and forth, meeting Liam's every thrust.\n\nTrixellian rose, ran her hands over Sandy's breasts, pulling and twisting her nipples between thumb and forefinger. Sandy, a monstrous heat surging within her, seized Trixellian's head and pulled her into a deep kiss. The two swayed back and forth, driven by Liam's hips slamming into Sandy's bottom, before the blonde girl broke the kiss, panting, gasping for breath.\n\nSmiling, Trixellian gave a last fond squeeze to the girl's breasts, pulled her hands free. Climbing nimbly out of the pool, she stood beside Liam, ran her hands over his neck and shoulders. She leaned in, twisted his head to face her, kissed him deeply. The boy's tongue swirled inside her lips, his head bobbing back and forth with the movement of his hips.\n\nTrixellian laughed with delight. Inspired, she pulled free of his grip, climbed up to straddle his head with her knees, her weight pressing him back in an arc onto the tub rim. She could feel whiskers on her nether lips, rolled against his jaw.\n\nOne of Liam's hands seized Trixellian by her hip, pulling her pussy down hard against his mouth. The elf shuddered, cried out as his tongue probed her soft entry, twisted and explored.\n\nLiam's lips closed on Trixellian's love bead, sucked gently. The elf's groaned loudly, her excitement growing with each moment. Her eyes bright with pleasure, she leaned forwards to run her hands over his head and chest. almost wailed as his tongue began to lash the full length of her lips. \n\nTall as he was, Liam was pinned to the rim of the hot tub, one girl pushing into his hips, the other wrapped around his head. His mouth and nose filled with the exotic scent of Trixellian's sex, his manhood constantly swept by Sandy's ridged pussy, Liam felt a ball of fire grow behind his balls. He could hear both girls moaning, gasping with pleasure.\n\nHer mouth hanging open with shuddering excitement, Sandy began to drive back harder against the tall boy, dragging her silky lining over and along his stiffness. The girl gave a small whimper each time she felt his stiff crown stretch her walls, slide over her G-spot.\n\nTrixellian moaned louder now as the boy's tongue swirled around and around her pearl, pausing every few strokes to stab stiffly into her opening. She leaned further down, pulled at Liam's chest hair, lingered over his nipples.\n\nLiam's strong arms pushed Sandy away, allowing him to twist out of her and out from under Trixellian. The disappointment in the women's eyes was clear, but it faded as the tall man took them by the hand and led them into one of the bedrooms.\n\nSandy hopped onto the bed, landed on her hands and knees, her bum high in the air. Liam knelt behind her, his hands running softly over her firm cheeks, then slid into her cleft, his engorged organ driving in and out of the girl as he sought his release.\n\nSandy's head was down, but her face turned to greet Trixellian as her weight shifted the mattress. There was happiness and excitement in her eyes and Trixellian was delighted that the two girls' loose plan had given Sandy what she had wanted.\n\nTrixellian saw lots of potential for more fun.\n\nLiam began to speed up his penetration of the blonde girl, his hands sunk into the flesh of her bum as he plunged into her silky depths.\n\nTrixellian knelt beside the boy, watched as his lunges drove Sandy's body back and forth in front of him. Smiling, she reached out to the girl. One hand ran along Sandy's flank, further back to cup and pat a buttock before again coming to rest on the other girl's waist. \n\nLiam's eyes were closed, perhaps in focus or concentration. There were beads of perspiration on his forehead. Trixellian reached out with her empty hand and used the cool cloth it now contained to wipe his brow. Liam's eyes opened, looked at her gratefully, then at the flute of champagne she was holding in front of his lip.\n\nThe boy slowed his thrusting into Sandy, leaned down to take a deep gulp. He smiled his thanks. \n\nTrixellian knelt beside Sandy's head, stroked her hair. The girl looked up, saw the glass. She too drank gratefully before a particularly-hard thrust from Liam brought another joyful shriek.\n\nIt was all good, Trixellian thought, but the elf had plans for herself, too.\n\nShe sat down, running her hand over Liam's body as she went, then slid around to Sandy's head. While Sandy's body was still up on her hands and knees, the blonde's eyes were now shut as she concentrated on her growing pleasure.\n\nTrixellian grinned, rolled onto her back and slid her head in between Sandy's arms, just below her head. Sandy's hair was loose and tickled slightly. The blonde's eyes popped open when she heard Trixellian's laughter.\n\nHer eyes bright, Sandy lowered her lips to the elf's. Upside-down kisses were odd, Trixellian realized, but Sandy's breath was sweet and there was no lack of happiness in her lips. \n\nThe two girls kissed for a minute, then Sandy's eyes closed as Liam again sped up his pace. Trixellian slid deeper, further along under Sandy's body. The girl's opulent breasts were swinging and swaying with every blow of the boy's abdomen on Sandy's bum. They swept Trixellian's face as she moved - a breast massage of a different sort entirely, the elf smiled to herself. Trixellian wanted to capture them with her hands, mold them, taste them, but her hands were pinned to her side by Sandy's arms. Instead, she swung her head back and forth, trying to capture a nipple with her lips.\n\nOnce, twice, three times she missed. On her fourth attempt, she caught the hard and protruding pink jewel with her lips, sucked in to hold it in place and began to flick its very tip with her tongue. Sandy laughed and wriggled with new pleasure, more sensation.\n\nTrixellian gasped in her turn, for Sandy's mouth dropped to one of Trixellian's orbs, pinched the nipple lightly with careful teeth, then sucked it in deeper, swirling her broad tongue around and over it. One of Sandy's hands slid between them, captured one of Trixellian's breasts and began to squeeze and mold it.\n\nThe elf was as aroused as she had ever been, but when Sandy's nipple escaped her mouth, she twisted her head, looked behind her, further along Sandy's body. Between the girl's soft thighs, Trixellian could see Liam's hairy ones -- and a pair of substantial balls swaying with his strokes.\n\nTrixellian slithered deeper, until her face rested just inches from Sandy's distended lower lips, split and stretched by Liam's glistening shaft. In all her years, she'd never been this close in person, had never seen how a woman's labia were pulled and shifted by a man's hardness.\n\nTheir combined odor -- male and female -- was delightful to the elf. Her hands were still captive, but she leaned her head up, stretched her tongue to run over that most intimate joining of male and female flesh, swirling her tongue over the holy yin-yang it personified.\n\nLiam's pendulous balls swung within her reach and Trixellian gave their wrinkled sac a broad lick before they moved out of range again and she could return to licking Sandy's stretched lips.\n\nThe elf gasped as Sandy's soft lips came down on Trixellian's own flower. Trixellian could feel her boobs being flattened as Sandy lowered her body to get batter access. Sandy's arms caught Trixellian's thighs, pulled them apart. Her head dove in, still being nudged back and forth by Liam's pounding, her tongue flashing and teasing Trixellian's sex. Even from her position below the two of them, her ears blocked by Sandy's thighs, the elf could hear the smacks of the boy's drives into Sandy, could hear the blonde's cries growing louder with each thrust.\n\nTrixellian's own moans joined in as Sandy's mouth and lips and tongue and teeth probed, swept, pulled, stimulated and delighted her pussy. The smell of Sandy's dew filled her nostrils, stoked her passion still higher.\n\nAbove them, Liam was panting, his strokes slowing and Trixellian knew he was very close now. She smiled, her tongue dancing over their combined flesh.\n\nLiam pulled Sandy's hips hard against him and the blonde roared as her orgasm exploded within her, flames of delight shooting across every part of her body, filling the room and the sky outside with its glory.\n\nFalling into her ecstasy, she captured Trixellian's hidden pearl between her lips and sucked it deeper, flicking her tongue over it as quickly as she could. That was all it took for the elf; she shouted, howled as her joy filled her body - round, deep, full.\n\nThe exhausted elf's head fell back on the mattress, her orgasm continuing. Above her, Trixellian could see Liam's manhood, still buried deep within the quivering Sandy. She watched as the heavy tube on its underside pulsed, delivering the boy's essence deep within his girl.\n\nFor Sandy was Liam's girl now, Trixellian knew. Why had he been so slow to see it, so shy?\n\nThe three held their position another minute, another week, before falling to lie beside each other on the bed.\n\nTrixellian opened her eyes and saw a smiling Sandy, her hair a blonde birds' nest, smile at her, mouth a silent Thank you! &hairsp; She smiled back, lovingly clasped one of the girl's breasts.\n\nAnd slept.\n\n+\n\nThe telephone by the bar rang. Trixellian pulled herself out of the hot tub and answered it.\n\n\"Hello?\"\n\n\"Ms. Trixellian?\"\n\n\"Yes.\"\n\n\"This is the assistant manager, George Hannibal.\"\n\n\"Yes?\"\n\n\"Two things, Ms. Trixellian, and I'm sorry to bother you this close to Christmas.\"\n\n\"It's quite all right. How may I help you, Mr. Hannibal?\"\n\n\"Well, first off, I wanted to check with you to about your suite. It's not often that we have guests stay there for an extended period and I wanted to make sure that everything is satisfactory.\"\n\nDo I mention the third-rate liquor cabinet?  the elf thought, then reflected that the others seemed very content, let it pass. \"Everything's just fine,\" she replied. \"Very nice, indeed.\"\n\n\"Excellent!\" came the voice. \"The second point is a bit more sensitive, Ms. Trixellian. Forgive me for mentioning it, but, um, we haven't received a payment on your account as yet. Just to keep our accounting people from worrying, might we get a credit on that, please?\"\n\nJust then, there was a knocking at the door. Peering through the security lens, Trixellian was surprised to see Omerlon standing outside. There was a look of anger, outrage and embarrassment on his face.\n\n\"Ms. Trixellian?\" chirped the phone, still in her hand.\n\n\"I'll have somebody down directly to settle that, Mr. Hannibal. You have a very happy Christmas. Good night.\" \n\nWith that, she hung up the telephone and, not bothering to get dressed, flung the door open. Trixellian ran her eyes over the disheveled figure outside. \n\n\"Why, Omerlon!\" she cried, pasting a very broad smile on her face.\n\n\"What have you done?\"&hairsp; the pale-faced elf demanded.\n\nOmerlon was no longer wearing his normally well-tailored silks and shiny dragon-skin boots. Instead, the thin figure was clad in rumpled grey coveralls with the local airport logo and the words Maintenance and Sanitation&hairsp; embroidered onto its breast.\n\nYesss!&hairsp; she cheered inwardly. The letter must have arrived! &hairsp; \n\n\"I'm terribly sorry, Omerlon,\" she smiled, \"but I think somebody's already taken out the trash today.\n\n\"Oh,\" she added, as if noticing an absence. \"Wherever did you leave Vinditta?\" She stuck her head out into the hall as if searching.\n\n\"She's on stable duty,\" hissed Omerlon. \"How could&hairsp; you do that to me -- I mean her?\"\n\n\"Why, whatever do&hairsp; do you mean?\" Trixellian smiled.\n\n\"That photograph!\" Omerlon hissed. \"Me! Demoted back to teddy bears! After all those years! Banished to...\"\n\nThe tall elf was so angry that he could only wave his hand at the grimy coveralls.\n\n\"Photograph?\" Trixellian said, looking innocent. \"What photograph?\" \n\nShe batted her eyes at him. \"Oh! I remember now!\" \n\nHer empty hand was suddenly full of a small sheaf of colour photos. She thumbed through them before pulling out a copy of the damning image, held it in front of him. \"Was it this &hairsp; photograph?\"\n\nShe turned it back to examine it. \n\n\"Amazing how much tongue she could fit in your ear, isn't it?\" she smiled.\n\n\"You'll regret this!\" he threatened.\n\n\"No, Omerlon,\" Trixellian smiled. \"I don't think I will.\" \n\nShe fanned the other photos out like a deck of cards; Omerlon went paler still as he saw more candid photos of he and his former assistant, ones calculated to send Santa -- let alone Mrs. Claus -- through the snow-covered roof and half-way through the sleigh parked above.\n\n\"Pick a card -- pick any card,\" she grinned.\n\nFrom behind her came the sound of splashing water and happy laughter from Sandy and Liam.\n\n\"Actually, Omerlon,\" she smiled. \"You are going to do two things for me. The first is that you are going to stay out of my way until my time here is up. Do you understand?\"\n\nAs if to emphasize the command, she waved another photo in front of him, one showing he and Vinditta walking out of the jewellery store, bag in hand.\n\n\"I wonder,\" Trixellian mused, \"I wonder what was in the bag and -- who got billed for it?\"\n\nThere was another splashing noise behind her and a shrill giggle.\n\n\"Trixie!\" cried Liam. \"Who is it?\"\n\n\"Nobody important,\" she called over her shoulder. \"Not any more.\"\n\nOmerlon shook with suppressed rage, but there was now, Trixellian saw, a look on his face of, if not actual surrender, then at least resignation.\n\n\"Oh, and Omerlon? You're the North Pole prizewinner for taking care of Number One, dear. I just know&hairsp; you wouldn't allow yourself to be banished without some fall-back resources.\n\n\"So, pay the man downstairs on your way out, there's a good fellow.\"\n\nOmerlon sagged, nodded slightly.\n\n\"That's nice,\" she said softly. \"And now, Omerlon; I have guests for Christmas and I know you have important things to do at the airport. Don't let me keep you.\"\n\n\"Look,\" Omerlon protested weakly. \"It wasn't what you think...\"\n\n\"Good choice of words,\" smirked Trixellian, who had learned from the best. \"Short, but pithy. Succinct.\" \n\nShe patted his cheek lightly before closing the door in his face and turning back to her waiting friends.\n\nShe paused for a second, smiled even more broadly as the words embroidered onto the grey coverall of the retreating figure in the corridor outside quietly changed to Terminal Sanitation. &hairsp;\n\nA girl could get used to this place! &hairsp; she smiled to herself.\n\n<center>+\n\nThanks for reading!\n\nPlease remember to vote, if not for this story, then for one you think is better.\n\n</center>"
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "christmas",
        "elves",
        "ffm",
        "hot tub",
        "magic",
        "practical jokes",
        "revenge",
        "santa claus",
        "truth or dare",
        "threesome"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/santa-baby-9"
}