{
    "title": "Surefoot 34: Mother's Cub",
    "pages": [
        "USS Surefoot-A, Deck 2 Fore -- Bridge, 0750 Hours: \n\nLieutenant C'Rash Shall had been perusing Starfleet Security updates on the current situation with the Klingons, prior to the start of the Morning Shift, when she heard the cup smash from behind the door leading to the Captain's Ready Room. She smirked to herself; Uncle Esek's fingers must have been greasy from Second Breakfast again. It was a damn good thing she loved him so much- \n\nThe second sound she heard made her ears twitch. \n\nIt could have been a chair being knocked over, a PADD dropped on the desk- no, it was too heavy, like- \n\nLike her Papa. \n\nOne morning, when she was nine, C'Rash had been in her bedroom when she had heard something eerily, terribly identical to what she had just heard now. It had come from her parents' bedroom next to hers, and at first she had dismissed it as their rutting again -- they were always noisy when Mama was in Season -- until she remembered that Mama was out of the house. She called for Papa, and when he didn't answer, she ventured to their room... \n\nAnd found Papa on the floor, having a heart attack. \n\nThe present C'Rash pushed down those memories, though they continued to nip at her mind's tail as she opened a channel. \"Lt Shall to Captain Hrelle: may I have a word with you please, Sir?\" \n\nNo answer. \n\n\"Captain?\" \n\nAs the silence continued, and other people on the Bridge looked up curiously, she straightened up, forcing her tail to stop twitching as she made her way into the Ready Room, protocol be damned- \n\nSeven Hells... \n\nShe raced up to Captain Hrelle's fallen body behind his desk, finding no pulse at his neck, and did a quick, cursory check on the temporary First Officer, Lieutenant Commander Olivia Zawati, finding her in an identical state as C'Rash smacked her combadge. \"Computer: Medical Emergency! Lock onto all combadges in this room and beam directly to Sickbay!\" \n\nAlmost too late, she saw that Hrelle's combadge was not on his jacket, but in -- what? Zawati's hand? -- and swiftly the Caitian reached out and replaced it on his body as the transporter beams engulfed them. Her pulse reached Warp Ten as she looked down on Hrelle... another Captain, another father figure she could lose... if it wasn't already too late. \n\nGreat Mother, help him... please... \n\n* \n\nIn another place, the Great Mother reclined beneath a tarraba tree on an endless savannah, stopped nursing an infant cub to tuck her breast away beneath her blue silken robes and rest the sated cub down on one of her shoulders, carefully supporting him with one hand while rubbing his furry back with two extended fingers. \"Hello, Esek. How are you?\" \n\nStanding before her, glancing around in confusion, Hrelle gasped. Where was he? One moment, he was- he was- he couldn't quite remember... he felt like he had just stirred from a deep, dreamless sleep. Numbly he glanced down at his trembling hands. \"Where am I?\" \n\nIn the female's arms, the infant burped, making her smile and cuddle him. \"There you go! Good cub!\" \n\nHe focused on her. \"Hey! Where am I?\" \n\nShe stretched her neck and looked around, as if seeing the terrain for the first time. \"It looks like the Motherlands, the world that sprung from the Waters of Life. The same waters I sprang from, to walk these lands and bring forth our race-\" \n\n\"That's a crock of shit!\" \n\nShe shrugged. \"I call them as I see them, Esek.\" \n\n\"This is not the Motherlands! And you're not the Great Mother! The Great Mother is a myth, a personification of our ideals, and her adventures a collection of stories we tell to impart lessons on Caitian virtues!\" \n\nShe smiled serenely. \"If you say so.\" \n\nHrelle bared his teeth. \"What are you? A hologram? A Changeling or android, or some alien posing as a mythological figure -- there's a lot of those running around the Galaxy -- or are you something else entirely?\" \n\n\"What do you want me to say, Esek? If I was trying to deceive you, I'd hardly give you a truthful answer. I certainly feel like the Great Mother.\" \n\n\"YOU'RE NOT HER!\" he declared loudly. \n\nShe brought a shushing finger to her snout, indicating the now-sleeping infant. \n\n\"Sorry,\" he whispered. \n\nShe held out her hand to him. \"Help me up, please.\" \n\nHe complied -- before catching himself, backing away from her. \"Seven Hells, what am I doing?\" \n\nShe shrugged again. \"Practising some of those ideals the Great Mother is meant to personify, perhaps? Courtesy? Empathy? Decency?\" \n\n\"But you're not real! None of this is real!\" \n\nShe drew closer and regarded him, before holding out the infant. \"Take him.\" \n\n\"What?\" He looked down at the furry bundle. \n\n\"I asked you to take him.\" \n\nHe hesitated. Studying the tiny creature, which was obviously meant to represent her first male cub C'Mau, he hesitated, as if it might suddenly morph into some slavering beast and strike. But then he accepted the infant, resting him against one shoulder, cupping his huge hand around its naked rear, careful with the little curled tail. It began purring in its sleep, reminding him so much of Misha at this age that his heart quickened and his own tail swished in the tanglegrass at his feet. \n\nShe watched the scene with a smile. Then she said, \"Now: break his neck.\" \n\n\"What?\" \n\n\"You heard me. Break his neck. If none of this is real, then you're not doing any real harm, are you? Break his neck. You can do it, Esek. You've done it before.\" \n\nHis stomach twisted. \"No! Are you crazy? I'm not- I'm not going to do something like that!\" \n\nShe smiled again at his response. \"'We can do right or wrong not just to each of us, but to animals, to blades of grass, to the unliving and never-living, even to thoughts... because ultimately, the right or wrong we do is either an affirmation or a rejection of our integrity'.\" Her furred brow furrowed in concentration. \"From the story of the Great Mother and the Sea Lizard, if I recall correctly.\" She made a show of rolling her neck and stretching out her arms, making sounds of relief. \"That's much better. You can hold onto him all day if you like.\" \n\nHe grunted suspiciously as he watched her. \"The Great Mother? Willing to give up one of her cubs?\" \n\nShe eyed him mischievously. \"You don't get to keep him, sport. A good parent's love is inexhaustible; their bodies aren't. My back aches, my tail is sore from getting grabbed when the cubs are on the Pounce, my nipples feel like they've been chewed to bits, I yawn throughout the day, and I still imagine smelling cub wee in my fur from when he's feeling squirty. \n\nBut it's all still worth it. \n\nNow come on, we have to get going.\" \n\n\"Going? Where?\" \n\n\"East.\" \n\n\"East? Why?\" \n\nShe shrugged. \"When I know, you'll know, I suspect. You can carry C'Mau a little longer.\" \n\nThen she started away, towards the East, never looking back, fully expecting him to follow. \n\nHe did. \n\n* \n\nDoc Masterson cursed as he helped lift Hrelle's body onto the biobed, passing it off as a reaction to his Commanding Officer's bulk. \"This dude's going on a diet when we bring him back, I swear it.\" He glanced up at the readings: poison, tetra-lubisol, enough to kill three humanoids- brain damage, respiratory failure- \"Scarlo! Get the cortical stimulator! Eydiir, 40ccs synaptizine! Shyrik, y'all got Zawati covered-\" \n\nThe Andorian doctor was at a nearby biobed with Zawati and her own nurses. \"Of course I have, fool!\" \n\nMasterson grunted; that blue-hued spitfire was going sweet on him... Another alert from the biobed grabbed his attention. There was still residual brain activity despite the damage, but that was- Hell's Bells- \"Synaptic degradation! Eydiir, ready the stabiliser unit, his body will need full life support until we can repair his brain!\" \n\n\"What happened to them?\" C'Rash asked from nearby. \"Is it a disease, or-\" \n\n\"Poison- tetra-lubisol, highly toxic-\" \n\n\"An accident?\" \n\n\"Not my job to work that out, girl, I'm busy trying to save him! Do you mind?\" \n\n\"Sorry.\" \n\nMasterson heard the shock, the fragility in her voice, and immediately regretted his tone, offering, \"We'll do everything we can, Lieutenant, and keep you posted, I promise!\" \n\n\"Thank you, Doctor.\" \n\nDistantly he heard her leave, more focused was he on the task ahead. Bringing the Captain back from the dead was easy enough. Restoring him to his former state? That was another rodeo altogether. \n\n*** \n\nC'Rash felt like she was going to throw up in the corridor outside of Sickbay, and she stopped and leaned against the wall, trying to control her breathing. \n\n\"C'Rash!\" \n\nShe turned at the sound of Lieutenants Velkovsky and Neheru, and Chief Engineer Grev rushing up, the Tellarite non-com demanding, \"What's happened? We heard the Captain and First Officer were attacked! Killed!\" \n\nShe nodded blankly. \"They're dead.\" But then, at their expressions, she added, \"But Doc Masterson thinks he can revive them. I don't know about being attacked... but they were poisoned.\" \n\n\"Poisoned?\" Neheru drew his lanky Kelpien frame up to its full, considerable height. \"How?\" \n\nC'Rash shook his head. \"I don't know!\" But then she added, through bared teeth, \"Not yet.\" \n\nVelkovsky nodded sympathetically. \"You need to let the crew know what's happened, the rumours are getting around at warp speed.\" \n\n\"Me?\" \n\nNeheru nodded sagely. \"You are the current Duty Officer for the shift. Third in command.\" \n\nIt was true, she admitted, at least to herself. Not that it had ever mattered, Uncle Esek or T'Varik were always around to deal with command things. She shook her hand. \"N-No... I can't do it.\" She looked to Grev. \"Chief, you have years more experience than me-\" \n\nBut he held up his hoof. \"No, Lieutenant. Command is yours. If you give it up now, you'll always be second-guessing yourself.\" \n\nShe looked to each of them in turn, silently begging for one of them to take pity on her. \n\nNo. No such luck. \n\nShe swallowed. Grev was right; Uncle Esek was counting on her to step up and take over. \n\nStraightening up, she tapped her combadge. \"Attention, all hands: this is Lieutenant Shall. There has been an incident involving Captain Hrelle and Lieutenant Commander Zawati. Both are in Sickbay; that is all you need to know at this time, but your department heads will be kept updated as to their condition, as and when possible. I am declaring a Security Condition Three: all off-duty personnel are to remain in their quarters until further notice. Shall out.\" \n\nThe others looked to her, Grev opining, \"You don't think this was an accident, do you?\" \n\n\"Doc Masterson says it was tetra-lubisol.\" \n\nThe Tellarite harrumphed. \"That's kept locked up in secure storage facilities! How can- how can-\" \n\nBut she held up a hand. \"Say nothing to anyone, but I want every millilitre of that stuff on this ship accounted for, and a full diagnostic of all replicators; they had been fine, before Zawati brought in some coffee for their intershift meeting. I have to contact Admiral Tattok on the Triton and inform him of the situation. And Aunt Kami and Commander T'Varik; they're still two hours away, but they might get their transport to hurry up.\" Her countenance sullen, anxious, she glanced at her colleagues. \"Last chance to take over. Anyone?\" \n\nStill no luck. Damn. \n\n* \n\nThe cub in Hrelle's arms had grown, instantly, becoming a toddler Misha's age and size, smacking Hrelle on the shoulder and demanding, \"Down! Down!\" \n\nInstinctively Hrelle looked to his walking companion, who smiled and nodded. \"Let him and his sister burn off some energy, or they'll be up all night counting the stars and wanting stories.\" \n\nHrelle stopped and started to lower the naked cub down, but C'Mau leapt out of his arms and raced up to another cub, a mahogany-furred female -- his sister R'Tashar, Hrelle recognised -- the pair of them chasing each other in wide, concentric circles in and out of the tanglegrass, as their mother called after them, \"Watch out for the Unspeakable One! That devil will try and snare tasty young cubs like you!\" \n\nHe watched them depart from view, before looking to the Great Mother again. \"How can you let them go off alone?\" \n\n\"How can I not, Esek?\" \n\n\"Because of the dangers out there! I know your stories! The Unspeakable One! The Shadow Snakes! The Bluewing King-\" \n\n\"The Dominion, the Klingons, the Romulans, the Vlathi, the Orions,\" she finished, looking at him. \"Your world is full of similar dangers. How can you let Sasha step out there unsupervised? How will you let Misha go out alone when he's old enough to scamper off without remaining in noseshot? Part of being a good parent is forcing down that dread at their safety, and trusting that the Universe will unfold as it's meant to.\" \n\nShe drew in closer and said in a more-confidential tone. \"The dread will never go away, by the way. Not for your cubs, or their cubs, any more than you will ever stop being a parent. That's part of the price. When you are a grey-furred old cat sitting on your porch back on Cait hearing about your grandcubs and great-grandcubs flying off to fight the Terrible Whatsits in the Ford Galaxy or wherever, you will still worry.\" \n\nHe stared hard at her. \"Enough of this. Who are you? Really?\" \n\nShe smiled warmly, making his anger and confusion melt away, at least momentarily. \"I was in your mother's eyes when you were born, looking down at you, feeling the purest love she would ever know. \n\nI made your heart skip when you heard Sasha wake up in the middle of the night crying from a bad dream, and you went to comfort her. \n\nI was in the pride you felt when Misha spoke his first words, and in the terror when he was injured by the Vlathi. \n\nI was the strength in your arms when you protected Sasha on that freighter when she nearly died from that Nekrosi mine. \n\nAnd yes, I was in your blood when you killed those men on Skaros who sought to enslave and hurt those kidnapped children. \n\nI am in everyone with a desire to nurture, to protect and instruct and support those who need it, young or old. I am in men as well as women, in parents and grandparents of cubs who are theirs by blood or by choice. I am in those parents who have outlived their cubs, and those who will never have cubs of their own, but would if they could; they are all as much parents in my eyes as you are. \n\nI am the Great Mother, first of all our people. \n\nI am what you have made me, Esek. Here... in your own head.\" \n\nHe blinked. \"My... head?\" \n\nShe nodded, looking up at the sky. \"Stop talking, and start listening: always good advice in most situations.\" \n\nHrelle paused, held his breath and lifted his head. There were the birds, the wind whistling through the stark branches of the tarraba- \n\nNo, wait. A voice! Voices! Orders- medical- \"Doc Masterson! I know that cowboy drawl anywhere!\" He glanced around. \"Where is he?\" \n\n\"What do you last remember, Esek?\" \n\nHe stared at her. It was a trick. It had to be. \n\nBut as his memory seemed to begin knitting together, and flashes returned -- his Ready Room, coffee, a pain shooting through his body, his brain, a struggle to breathe -- a dread began suffusing him like the warmth from the hot white sun above. He... \"Died.\" \n\n\"Pardon?\" \n\nHe looked to her, mouth opening. \"I... died. My First Officer poisoned my coffee. I'm... dead. Is that right?\" \n\n\"Well, Mostly Dead. See, Mostly Dead is still Slightly Alive.\" \n\n\"I'm in my head? In some dream or hallucination or something? And I've made you and all this up?\" He regarded her in a new light. \"Why?\" \n\nAnd she laughed. \"Typical cub, wanting all the answers to the universe spelled out for you.\" \n\nHe shook his head and looked around, as if he could suddenly find a door back to the surface of his consciousness. He was in some sort of comatose state, and his mind has fashioned all of this -- and the Great Mother -- from his own memories and perceptions. That certainly made more sense than the other things he had considered. \n\nBut now... \"How do I get out of here?\" \n\nShe nodded past his shoulder. \"Keep going East. And stop asking me questions. I don't know everything!\" \n\nHe turned, and looked towards the hill. \"Why that way?\" \n\nShe smacked his rear gently. \"That was a question! Come on, you could lose some of that waistline...\" \n\n* \n\nAs she relayed the news about Hrelle and Zawati, C'Rash watched Admiral Tattok's stoic reaction on the screen. She knew it wasn't something endemic to the Roylan race -- she had worked with Tattok's son, Captain Weynik of the Starsong, on a number of occasions, and he proved quite effusive -- so she just assumed that Tattok would play a wicked game of poker. \n\nFinally he asked, \"Have you sealed off the crime scene?\" \n\nShe frowned slightly; she had reported no problems with the replicators... but disturbingly, the logs confirmed Lt Cmdr Zawati did collect the replicated coffee that morning, and then made a stop in the Shuttlebay, where some tetra-lubisol was now unaccounted for. \"Yes, Sir. I'll begin collecting more forensic evidence there-\" \n\n\"No, Lieutenant. Given the growing instances of Dominion sabotage on Federation worlds and Starfleet vessels, we cannot discount their involvement in this. I have a liaison from Starfleet Security who has done periodic Changeling sweeps of the vessels in the Thirteenth Fleet, and she'll come over with her crew and do the same, before conducting a criminal investigation.\" \n\n\"Changelings?\" That hadn't occurred to her, with the evidence building toward it being Zawati. \"Sir, with respect, this seems more like a crime committed solely by the First Officer-\" \n\nTattok nodded in acknowledgement. \"Perhaps, but I'd rest easy knowing you've been swept, as we've all been. Is Commander T'Varik's transport imminent?\" \n\n\"Yes, Sir, they've arranged to speed up their ETA to thirty minutes.\" \n\n\"Good. You'll remain in command until T'Varik returns, but I expect you to give Captain Sakuth your full-\" \n\n\"Sakuth?\" C'Rash hissed, her hackles rising. It couldn't be. The Universe wouldn't be so cruel- \n\n\"You know her?\" \n\nShe breathed in. \"Vulcan, middle-aged, bronze eyes?\" Cold, nasty, murderous little bitch, she added to herself, as Tattok nodded with confirmation. The woman had been from Starfleet Intelligence, not Security though naturally the branches worked closely together. Months ago, the Surefoot had been involved in keeping a top-secret experimental Starfleet weapon from Ferengi hands, a weapon protected by Sakuth, who had been so driven to protect its secrets that she had attempted to blow up the ship and everyone on it -- until C'Rash literally crushed her windpipe with her jaw. \n\nThat Sakuth had once been T'Varik's lover had no bearing on how C'Rash reacted to her. \n\nWell, hardly any. \"I know her, Sir.\" \n\n\"Well,\" Tattok continued, \"The familiarity should make things easier... or not, given how agitated you appear now. Anything you want to tell me, Lieutenant?\" \n\n\"Much,\" she admitted, \"Unfortunately everyone involved in her last visit to the Surefoot are bound by security nondisclosures.\" \n\n\"Hmph. I don't like secrets -- unless I'm the one collecting them. Still, whatever bad blood might be between you two, I expect both of you to behave professionally. Is that clear?\" \n\n\"Of course, Sir.\" As the screen went to black, she grunted, wondering if he would say the same thing if he knew that his infant granddaughter Naida had been one of those onboard the Surefoot that Sakuth was willing to kill to protect her precious secrets. \n\nThen C'Rash smirked to herself. If the rumours about the Gnome were true, then if Tattok did find out, Sakuth would probably wish she hadn't recovered from C'Rash's bite. ",
        "* \n\nAs he ascended the slope beside the Great Mother, Hrelle kept stopping and sniffing the air, picking up a familiar scent. Very familiar- \n\nWhen he stopped for a fifth time, she looked to him curiously. \"Yes.\" \n\n\"Yes, what?\" \n\n\"Yes, I'm picking him up too.\" \n\n\"Picking up who?\" \n\n\"The Unspeakable One.\" \n\nHe frowned. The devil that took her cub C'Mau to the mountains to consume him, until his cry gave her the strength to tear down the mountains themselves and rescue him? Why was she persisting in this fantasy? \n\nAnd why would the scent be so familiar to him? \n\nHe continued upwards, feeling light on his feet before he reached the top of the hill... \n\nAnd looked upon a wide, sprawling field of bodies. \n\n* \n\nMasterson silently remarked to himself at how well the Counselor was holding up onscreen talking to him about her husband; the Caitian was as cool as a mountain stream in winter. That didn't make what he had to discuss any easier, though. \"His body's on full life support until we get the brain damage repaired. We've mapped the affected areas in the prefrontal, temporal and paratemporal lobes; you Caitians have a few extra corners in your heads for managing auditory and olfactoral memories than I'm used to, but it's nothing I can't handle.\" He paused and added, \"I'm sorry, I've had to employ Nanites. There's no other effective way, given the extent of the damage caused by the poison-\" \n\nShe nodded, her reaction confirming what he had learned about Caitians and their societal attitudes to having nanotechnology inside them, even for medical purposes. \"As his wife, I'm authorising you to do whatever is necessary to save him. Has there been any further word on what happened?\" \n\nHe nodded back. \"It's looking like Lt Cmdr Zawati deliberately poisoned him, and herself. Don't know why yet.\" \n\nShe frowned. \"What haven't you told me, Doctor?\" \n\nHe grunted; here it goes... \"There's a particularly strong neural collective in Captain Hrelle's paralimbic sheath, indicative of a subpersonality bridging those areas governing aggression and territoriality-\" \n\n\"Everyone has subpersonalities,\" Kami informed him -- a little too quickly and sharply, in his opinion. \"Including humans. We each average a dozen. They help us cope with various psychosocial situations-\" \n\n\"I've taken the psych courses myself, Counselor,\" he cut her off. \"You don't have to sell me on them. But there's one in your husband that's particularly stronger than normal. It could almost be considered an Alter, a Mister Hyde to his Jekyll-\" \n\n\"It isn't,\" she affirmed. \n\nHe nodded. \"I assumed you would be aware of it, being his Counselor as well as his wife -- and having locked away his psych profile from everyone. Even your Chief Medical Officer. I'd like to know more about it before I start sending the little nano-critters rewiring things in there.\" \n\nShe breathed out, her expression acknowledging the unspoken rebuke in his words, before replying. \"He calls it his Beast. It developed during his time in captivity, fighting and killing in the Orion death matches- and fuelled by Orion drugs and pain implants. It allowed him to compartmentalise the trauma and guilt.\" \n\n\"And of course because of the Caitian thing against nanotechnology, he never had it treated with neural realignment.\" \n\n\"Cognitive and behavioural redaction therapies proved to be efficacious in suppressing the Beast.\" \n\n\"But not eliminating it.\" \n\n\"No,\" she finally admitted. \"But he has it under control. It has only ever been released during rare times of life-and-death crisis, when it was needed, and I've helped him cope with it afterwards. It's been months since he's had to let it loose.\" \n\n\"Weeks, Counselor, not months. I had to clean up what was left of some Klingons who boarded the Surefoot after the Captain blew their ships to Hell. Our Chief of Security tells me he prevented an imminent disaster with what he did. I guess I'll have to take her word on that.\" He left it at that, knowing that he was treading on thin ice, practically suggesting a misdiagnosis on her judgement based on her relationship with the patient in question. \n\nKami fixed an unwavering, no-nonsense gaze on him. \"Zeke: I promise you, Esek, or the Beast in him, is no threat to any member of our crew... to any innocent. I wouldn't let him anywhere near my cub if I had any doubt about that.\" \n\nMasterson studied her. In the months since his arrival here, he had grown to know and appreciate the people onboard. Caitians were a damn remarkable people, and the dynamics with Hrelle, Kami, C'Rash, and even their little critter Misha made him glad he knew them. Yes, some of their ways took getting used to, especially the thing about nanotechnology -- it had something to do with a historical incident involving the Ferasans using them as weapons or conditioning tools or something against their racial cousins -- but he still liked them a lot. And the business with Hrelle's Beast is certainly no stranger than how Vulcans corral their emotions. \n\nHe finally shrugged. \"Good enough for me. We're still stabilising him, but we'll be ready to start work on repairing his brain by the time you get here. Given how well you Caitians react to each other's pheromones, I'd sooner start with you and your Little 'Un in the room -- assuming you think Misha can handle seeing his Papa like he is now.\" \n\n\"He'll manage it, I'm preparing him now-\" \n\nSuddenly the screen went blank, quickly replaced with the Starfleet logo, and the announcement TRANSMISSION ENDED -- SECURITY DIRECTIVE 47. \"What the-\" \n\nThen he heard noise from outside, and rose from behind his office desk to see strangers in Starfleet uniforms, Security body armour -- and carrying phaser rifles. He emerged, stopping when one of them pointed a weapon at him. \"What in tarnation-\" \n\n\"Don't move!\" \n\nMasterson looked around, saw the confused and angry faces of Shyrik, Eydiir and the other nurses standing there near their two patients, while the Security crewmen swept wide blue phaser beams at low intensity over the occupants, and then every square millimetre of the Sickbay, from ceiling to floor, before one of the intruders activated a communicator on their person. \"Main Sickbay clear! Moving into the corridor to Sections 4-4!\" \n\nMasterson watched them depart in a quick, efficient swarm, and turned to Shyrik in time to see the Andorian snarl, \"What was that? They beamed in here without warning, threatened us! I was ready to strike one down-\" \n\n\"It's a damn good thing you didn't,\" he informed her, checking the biobed readings on their patients. \"I saw the look in that dude's eyes. He's taking whatever he's doing here seriously.\" \n\n\"But why did they come here? What was it all about?\" \n\n\"We'll find out soon enough.\" He began preparing to direct the surgery. \"Come on, let's get started on Zawati, while the Captain keeps stabilising.\" \n\n* \n\nC'Rash was entering the Main Transporter Room and signalling Grev to initiate the beam-in, when Neheru called from the Bridge. \"Lieutenant, we're detecting multiple transporter beams from the Triton to points throughout the Surefoot! Armed Starfleet personnel! Transmissions both internal and external are being bloc-\" \n\nThe rest of his report was cut off, and went C'Rash tapped her combadge, she received no acknowledgement. She looked to Grev, but he was busy completing the transport, and in seconds, three columns of energy on the Pad coalesced into a tall, pale-skinned Vulcan female with greying temples and the same arrogant expression that C'Rash remembered vividly, with two large, armoured Security officers wielding the new phaser compression rifles. The trio stepped down, the guards activating wide low-level phaser beams that passed over C'Rash, an indignant Grev and the full interior of the Transporter Room. \n\nSakuth waited until they had stopped before approaching C'Rash. \"Lieutenant.\" \n\n\"Welcome aboard, Captain. How's the throat?\" \n\nThe Vulcan's expression tightened almost imperceptibly. \"I have fully recovered from the injuries you inflicted upon me. And you will not incapacitate me again like that.\" \n\n\"I guess I'll have to find another way.\" The Caitian nodded to the guards. \"Care to explain this?\" \n\n\"New procedures to detect Changelings. The phasers are on a setting that will not adversely affect organic or inorganic material, but is on a frequency that will disrupt the colloidal quantum signature of Changelings, breaking them from whatever they might be disguised as.\" \n\n\"I see. And presumably that explains the unauthorised beaming in of other personnel onboard, and disrupting our communications systems?\" \n\nSakuth raised an eyebrow. \"The actions were authorised, by Admiral Tattok. If a Changeling has infiltrated your ship, it would be counterproductive to announce that we were searching for it, wouldn't it?\" \n\nC'Rash grunted. \"I think I could smell if a Changeling was onboard.\" \n\n\"Unlikely. What is the status of your Captain and First Officer?\" \n\n\"In surgery. Doctor Masterson believes they'll recover.\" \n\nSakuth nodded to her guards, who moved ahead towards the doors, continuing their phaser sweep as they departed into the corridor. \"Take me to the crime scene.\" \n\nThe Caitian nodded and followed the guards outside, occasionally having to assure crew passing by to carry on and ignore the sweeps. \"So, how have you been lately?\" \n\nThe Vulcan stared ahead. \"Our history, and your present affiliation with my former lover, would suggest you are insincere in any supposed interest in my welfare. Besides which, I lack any desire to socialise with underlings.\" \n\nC'Rash grunted. Yeah, I should have squeezed harder around your throat, bitch. \n\nThey entered the Ready Room, the guards sweeping through here before stepping out onto the Bridge. C'Rash offered Neheru and the other confused crewmembers a reassuring raised hand, before following Sakuth inside, watching the Vulcan produce a Security tricorder from her belt and scanning the room. Knowing that they needed to work together despite their animosity, C'Rash offered, \"I heard a noise in here, called the Captain, and when he didn't answer, I entered-\" \n\n\"I did not request an account from you.\" Sakuth knelt at the side of the desk, scanning the dropped coffee mug. \"Traces of tetra-lubisol.\" \n\n\"We've examined the replicator records and ran an inventory check-\" \n\n\"I did not request input, either.\" \n\n\"What is your problem... Captain?\" \n\nSakuth looked up at her. \"I have no 'problem', Lieutenant, as you so puerilely put it. I had already anticipated such ideas, and my people are already accessing your replicator and stores logs and security records. Therefore, anything you might offer would be useless to me.\" She looked around the scene, moved and reached for something under the desk, drawing into view a plastic container. She removed the lid and peered inside with a frown. \"What is this?\" \n\nC'Rash caught the scent from within, but didn't need that to identify it. \"Southern Fried shuris pieces. A meat product from Cait.\" \n\n\"I identified it immediately as food. What is it doing under your Captain's desk?\" \n\n\"It's his Secret Snack Stash, for when he's on another diet. It's there on a Don't Ask, Don't Tell arrangement with the Doctor.\" \n\nSakuth sealed the box and rose to her feet. \"I am almost prepared to immediately discount outside involvement in this incident, as Captain Hrelle would be considered an insignificant target by the Dominion. My assessment of him from my last visit to this ship remains unchanged: he is a corpulent, weak-minded embarrassment to Starfleet.\" \n\nC'Rash folded her arms across her chest. \"Awww, and he was doing his best to please you, too.\" \n\n\"You are here to assist, not to speak in such an insolent manner to a superior officer.\" \n\n\"Assist? I thought that anything I had to offer would be useless to you?\" \n\n\"Prove me wrong.\" \n\nC'Rash nodded at the challenge, glanced around the room, and announced, \"Lt Cmdr Zawati poisoned the Captain, and then attempted suicide.\" \n\n\"Explain your reasoning behind that.\" \n\nThe Caitian breathed in before continuing. \"Zawati made a habit of bringing Captain Hrelle coffee while they met between shift changes; he wouldn't expect anything unusual in receiving a drink from her. She rose up through the Engineering ranks, and would know about the toxic effects of tetra-lubisol, and where to obtain it onboard a starship. And as I attempted to explain before you insulted me, I ordered a check of the replicators and the stores; Zawati is confirmed to have ordered these two coffees, and was seen near the Shuttlebay Stores last night, where a container of tetra-lubisol was found opened today.\" \n\n\"Is that all you are basing your supposition on, Lieutenant?\" \n\n\"I'm not done. When I found them in here, his combadge was in her hand, as if she'd taken it from him to keep him from calling for help.\" She looked around, moving to the far end of the room and returning with a framed photo of Kami, Sasha and Misha. \"Why isn't this on his desk where it belongs?\" \n\n\"Perhaps Hrelle himself threw it in a fit of anger at his family?\" \n\nC'Rash stared at her. \"Permission to freely tell you how idiotic that notion is?\" \n\n\"Denied. You speak of opportunity. What about motive?\" \n\n\"She had been openly critical of Captain Hrelle's decision to assist the Klingon civilian transport ship IKS Borha'l this week, and the Captain himself informed me at the time that her brother had been reported injured evacuating from Archanis IV when the Klingons overran it.\" \n\n\"He had suspicions that she might attack him?\" \n\n\"No, at the time he wanted me to find out more about his condition. He was concerned for her.\" \n\n\"He is a sentimental fool.\" Sakuth turned the tricorder to the untouched coffee mug on the desk. \"There is no trace of tetra-lubisol in the liquid. You are supposing that she drank some of Captain Hrelle's poisoned coffee? Why? That is not logical.\" \n\n\"It is if she intended to die alongside him.\" \n\n\"Then why not poison both drinks?\" \n\n\"Maybe she hadn't intended to poison herself at first, but once the realisation of her act became clear, suicide became a preferable option? Maybe she only had enough poison to spike one drink to a level that guaranteed a lethal reaction? Or maybe she was worried about succumbing to poison in her own drink before he succumbed to it in his?\" \n\nSakuth regarded her, and then tapped her combadge. \"Lt Fremont, examine the Surefoot communication logs for all messages directed towards Lt Cmdr Zawati. Focus on the last three days, report on anything significant or unusual.\" She eyed C'Rash with what could almost be classified as suspicion. \"It seems unlikely that a disagreement over the treatment of Klingons would be a sufficient trigger for a senior Starfleet officer to consider murder and suicide.\" \n\nThen her combadge chirped, and a man's voice announced, \"Captain, Lt Cmdr Zawati received a message yesterday from Starbase 244, reporting the death of her brother, a Lieutenant Philip Zawati, from injuries received from a Klingon attack during the evacuation of Archanis IV.\" \n\nSakuth looked to C'Rash as she replied, \"Acknowledged, Lieutenant. Sakuth out.\" As the signal closed, she admitted, \"That can be considered a potential trigger for her to attempt murder. Humans are sufficiently irrational to seek blame for the death of a family member on someone not involved with it. Your theory may possibly have some minimal merit after all.\" \n\nC'Rash grunted. \"Careful with the praise there, Captain, you're gonna give me Happy Tail.\" \n\n\"You have some potential for competency in this field, Lieutenant. Do not hamper it with facetiousness. I wish to go to Sickbay to confirm the present status of the two officers.\" \n\nThe Caitian indicated the door. \"After you, Ma'am. The transport from Earth should be here by now, and we'll probably see Commander T'Varik and the Captain's family waiting for us.\" \n\n* \n\nHrelle and his companion looked out, awestruck, at a vast collection of bodies. Humans, Klingons, Gorn, Orions, Nausicaans, Miradorn, Tzenkethi, others... so many others... \n\nHis nose and tail twitched as he silently descended the slope, the Great Mother following, as serenely as always. The scents reached his nostrils, overwhelmed him until he covered his snout with his hand. \"They're- they're fresh. Freshly killed.\"  \n\n\"Yes,\" she agreed, kneeling by one Klingon body and examining the wounds, then moving to another. \"By a Caitian. One Caitian, in fact, to judge from the claw and teeth marks.\" She sniffed the air. \"And the scent. Yes, the Unspeakable One.\" \n\nHe shook his head. \"One Caitian did all this?\" Then he forced himself to remove his hand and try and pick up the Caitian scent of her Unspeakable One... \"No, there's nothing there, apart from...\" \n\nHe looked at the bodies again, knelt and examined one of the Klingons, recognising the unusual House crest on his baldric. \"No...\" \n\nShe drew closer. \"Something wrong?\" \n\n\"This... This was one of the Klingons who had boarded my ship weeks ago, after I blew up theirs. They beamed into the Morgue. It was filled... filled with the bodies of Starfleet crewmen from the USS Tsukuba, those who didn't survive the rescue. They- The Klingons used the bodies as sandbags.\" \n\n\"And in your outrage, you let loose your Beast upon them,\" she finished, looking around again. \"You let loose your Beast upon all of them.\" \n\nHe looked up at her. She believed her Unspeakable One was his Beast? That... that... \n\nThat made sense, from what he saw here. Some he began to recognise: the child trafficking ring on Skaro; the Ferasans who drugged him and tried to kill him; the Nausicaans who attacked Sasha and Alpha Squad on that freighter; the Miradorn pirates on Attiok III... \n\nThrough the Beast, they had all indeed fallen because of him. Criminals, opponents, enemies... \n\nThere were so many. \n\n\"WHAT A LOVELY SCENT, EH, ESEK?\" \n\nThey looked up to a hill, where a large Caitian male, dressed in the gladiator's kilt and body armour he had worn in the arena, stood. The male was scarred, muscular, his fur matted with blood of many colours, the blood of his opponents. And, of course, he looked identical to Hrelle, if a more muscular version. He was exactly as Hrelle had always pictured him in his head. \n\nHrelle looked up at him; how strange, to see this part of him as a separate entity instead of something more abstract. \"What's going on? What do you want?\" \n\n\"MUCH, ESEK! MUCH!\" the Beast bellowed at him, laughing. \"AFTER ALL I'VE DONE FOR YOU OVER THE YEARS, NOW YOU CAN DO SOMETHING FOR ME! FOLLOW ME EAST! MEET ME AT THE PLACE WHERE I WAS BORN! AND THEN... THINGS CAN FINALLY BE SETTLED BETWEEN US!\" \n\n\"Wait! We can-\" \n\nBut the Beast disappeared over the hill. \n\n\"He does like to roar, doesn't he?\" the Great Mother quipped. \"Well? Come on, let's get going.\" \n\n\"No, wait!\" He paced around the bodies, ignoring them now, and shaking his head. \"I'm inside my own head right now, and so's he. What if... what if he hurts me in here? Kills me, even? What will happen? Will he become the dominant personality, take over fully, permanently?\" \n\n\"Is that what he wants?\" \n\n\"Of course it is! Why else would he be playing these games? I can't let him take over, to have access to Misha and Kami and everyone else in the real world!\" He swallowed, gasping. \n\nShe took a step closer. \"You're afraid of him.\" \n\nHrelle looked at her, angry... and anxious. \"Yes. I've killed... ordered the deaths of enemies and the destruction of ships. But whenever it came down to the visceral, the... intimate... I've let the Beast take over. Let him take the burden of spilling blood. He's...\" He shuddered. \"He's good at it.\" \n",
        "\"Because you let him get good at it,\" she reminded him, chiding gently. \"You've given him too much control. Now it's time to take that back.\" \n\nHe stared in disbelief. She couldn't expect him to fight the Beast, could she? \n\nAnd yet... what choice did he have? \n\nHe swallowed, his heart quickening. \"He's gonna fight to the death.\" \n\n\"And so will you. Only he's fighting for dominance; you'll be fighting for your wife and cub and everyone else in your world. And while he's alone, you'll have me to help.\" \n\nHrelle shook his head. \"No! He's too dangerous, you don't have the strength to face him- Owww!\" He clutched his snout where she smacked him. \n\nShe stepped back, planting her hands on her hips. \"Don't underestimate the strength of a mother, cub! We carry you in our bellies for months, push you out into this life, and spend years nursing, changing, chasing and catching you! And when our cubs are threatened, our Fury is as great as anything your Beast can summon!\" Suddenly she adopted a bodybuilder's pose, complete with flexing her biceps. \"Aspire, cub. Aspire.\" \n\nThe absurdity of it all made him burst out laughing. He couldn't help it, she was- she was- \n\nHis expression sobered, prompting her to ask, \"What's wrong?\" \n\nHe turned away. \"Nothing. Come on, let's get going.\" \n\n* \n\nMisha stood by his father's biobed, holding his hand. \"Papa? Wake up! You sleep too long! Lazy Lump!\" \n\nBeside him, Kami placed a reassuring hand on her son's shoulder. \"Remember what I told you? Papa has to stay asleep until Doc Cowboy fixes him.\" \n\nThe cub looked across at Masterson, pointing a commanding finger in the man's direction, putting on a stern face as he demanded, \"You fix, Doc! You fix Papa's bad belly, or it's Trouble Time!\" \n\nMasterson offered the cub a reassuring smile and an old-fashioned salute. \"Sir, yes, Sir!\" Then he looked at Kami. \"Bad belly?\" \n\nKami nodded soberly. \"I explained to Misha that Papa was sick because he ate too many snacks.\" \n\nThe doctor nodded. \"I understand.\" He motioned her over to the adjacent display, where a holographic brainmap of Hrelle offered a biological equivalent of a Damage Control station. Masterson indicated several areas. \"His body remains on full life support, allowing the computer time to plan a suitable repair and reconnection campaign for the Nanites, one that will allow the Captain to retain most of his memories and personality... but it'll mean bulldozing through the Subpersonality you call the Beast. It'll be gone after this.\" \n\nShe nodded. \"Given the alternative, Doctor, I won't lose too much sleep over that. Esek, however, will have some adjustments to make.\" She frowned at some of the readings. \"Should that area be so active?\" \n\n\"He's at least partially conscious in there; he might even hear us.\" \n\n\"Do you mean Esek... or the Beast?\" \n\n\"I... don't want to ponder that too much. With your permission I'd like to start the procedure rather than delay it further and risk complications.\" \n\n\"Of course... and thank you, Doctor.\" \n\nNearby, Commander T'Varik stood by the biobed monitoring Lt Cmdr Zawati -- noting the Security crewman standing nearby. The Vulcan looked to Scarlo, who was examining the readings. \"What is the status of my erstwhile replacement, Nurse?\" \n\n\"We've worked on her while waiting for the Captain to stabilise; most of her damage was restricted to her heart and stomach, relatively easily repaired, at least compared with what we have to do for her victim.\" \n\nKami approached, noting the reaction of the other women; under different circumstances, she might have been amused by it. \"Was there any reason given why she might have tried to poison Esek and herself?\" \n\n\"We weren't made privy to that,\" Scarlo admitted. \"You can ask Lieutenant Shall and Captain Sakuth when they arrive.\" \n\n\"Captain Sakuth?\" T'Varik echoed, almost showing emotion, before quickly recovering. \n\n\"I thought we'd seen the last of that bitch when she tried to kill us all,\" Kami growled. \n\n\"Given the growing threat of Changeling infiltration,\" T'Varik justified, \"It is logical to expect the involvement of experienced personnel from Starfleet Intelligence to provide security, despite her prior actions onboard the Surefoot. I must locate the Lieutenant and thoroughly debrief her at our earliest convenience.\" \n\n\"Shouldn't you wait until you get back to your quarters for that?\" Kami quipped. \n\nT'Varik raised an eyebrow at the Caitian. \"I see the current situation has not dulled your predilection for innuendo.\" \n\nStill at his father's side, Misha looked over and asked, \"New-endo? What's that?\" \n\nKami looked over at him. \"Never mind, sweetie, I'm just teasing T'Varik.\" \n\nNow the cub wagged a finger at her. \"No tease Godmama! She's Big Boss while Papa's sick! She'll lock you up!\" \n\nKami looked to her friend, smirking. \"Is that true?\" \n\n\"My godson is technically correct,\" T'Varik noted dryly. \"Perhaps it would be best for you not to provoke my wrath.\" \n\nThe doors to Sickbay slid open, and C'Rash and Sakuth entered -- the former rushing up to T'Varik and embracing her tightly, purring loudly, black tail wrapping around T'Varik. After a heartbeat, the Vulcan embraced back. \n\nStaying near the doorway, the other arrival watched the reunion with open disdain. \"Public Displays of Affection are against Starfleet Regulations.\" \n\n\"Hello again, Captain,\" Kami said as she stood near the couple. \"Back to have another go at blowing up our ship?\" \n\nSakuth spared her a cursory glance. \"Your paltry attempt at humour is unappreciated, Counselor, and a potential violation of the nondisclosure agreement you signed at the conclusion of our last encounter. Clearly your descent into banal domesticity has dulled your sense of professionalism.\" \n\nKami folded her arms across her chest. \"And clearly you're still in need of an extensive course of high colonics.\" \n\nMisha watched the scene curiously, noting the tension in the room with the arrival of the tall Vulcan lady. Unnoticed by the others, he hopped off the edge of his father's biobed, approached Sakuth and stood straight, holding up one furred hand in the Vulcan salute and offering a fluent, \"Dif-tor Heh Smusma.\" \n\nSakuth took a millisecond to react to the cub. \n\nThen she drew her phaser and pointed it at his head... \n\n* \n\nThe Arena was just as he remembered it: circular, sunken, with seats above the spiked walls for paying customers, and recorders to broadcast to the rest of the Orion homeworld and beyond, and weapons of various types strewn about, available for the opponents who would live and die here for the entertainment of people they would never know. Hrelle knew this place all too well. \n\nNow, however, the audience was missing, the recorders were powered down... and the opponents lay on the arena floor. Or at least, their bodies did, strewn about like rag dolls, torn and bitten and clawed open. Most he recognised. \n\nBut he wasn't here for a reunion. He looked up to the seats. \"Come on, Beast! Let's get started!\" \n\nThere was no answer. \n\nHe turned to see the Great Mother kneeling by some of the bodies, straightening them out, crossing the arms and closing the eyes. He frowned. \"What are you doing?\" \n\n\"Putting them to rest.\" She looked up at his expression. \"Why not? Weren't most of your opponents like you? Captives, forced to fight? They died here, alone, apart from family and friends-\" \n\n\"They're not real! None of this is real!\" \n\n\"Neither am I, Esek.\" \n\nHrelle turned away again and looked around once more, confusion eclipsing concern. \"Where is he? He said to meet him where he was born. This is it here! Born and bred, in pain and rage and raw instinct! Where is he?\" He raised his arms to the seats. \"BEAST! COME OUT NOW! I'M HERE!\" \n\n\"Who did I remind you of?\" \n\nHe turned back to her. \"What?\" \n\nShe regarded him, approaching, tucking her hands into the billowy sleeves of her robes. \"When I made you laugh before, you looked at me as if I reminded you of someone. Who was it?\" \n\nHrelle frowned at her, ready to argue further and continue his search for the Beast... except he didn't know where to go. Not yet, anyway. He dropped his arms in defeat. \"Something about the way you were acting silly for me reminded me... of my Mama.\" \n\nShe tilted her head, ears twitching, smiling up at him. \"What was her name?\" \n\nHe hesitated; shouldn't she know what he knew? He sighed. \"Sreen. Sreen Hrelle.\" \n\n\"What was she like?\" \n\nHis heart raced, and he glanced around. \"She- She died when I was six.\" \n\n\"I didn't ask when she died. I asked what she was like. Don't you remember?\" \n\n\"She-\" He breathed in, frowning, as if it was some trick on her part. \"Beautiful. Soft. Her scent was...\" He looked to her sharply. \"Why are you asking me all this?\" \n\n\"Mothers interest me, as you can imagine.\" \n\n\"Well, I don't want to talk about her anymore! I want to stop the Beast and get out of my head and back into the real world! Is that okay with you? Or are you trying to keep me in here all the time, so you can stay alive?\" \n\nHrelle turned away. \n\nHe felt her hand on his shoulder, her voice soft and reassuring. \"I'm here for you, cub. I'm always here for you. I'll always be here for you. And I'm sorry if I upset you. \n\nNow, let's get you back where you belong...\" \n\n* \n\nThe occupants of Sickbay froze in place, as Misha lowered his hand and looked up at the weapon pointed at him. \"Fizzer?\" \n\n\"Don't move!\" Sakuth ordered. \n\n\"What in the Seven Hells are you doing?\" Kami demanded. \"Put that damn thing down!\" \n\nT'Varik pulled away from C'Rash. \"Lower your weapon, Captain!\" \n\n\"Have you gone loco, lady?\" Masterson exclaimed from beside Hrelle's biobed. \n\n\"Mama?\" Misha murmured fearfully, eyes wide, his tail twitching in fear. \n\n\"Are you out of your damn mind?\" C'Rash exclaimed. \n\n\"QUIET!\" Sakuth snapped. \"ALL OF YOU!\" Focusing on Misha again, she stared unblinkingly. \"You are under arrest for attempted murder, espionage, boarding a Starfleet vessel for the purposes of sabotage-\" \n\n\"Mama!\" Misha repeated, fear growing, his body tensing to move away. \n\nUntil Kami spoke more calmly. \"It's okay, Misha, it's just a game! Freeze Tag, remember? Like you played with those children on the transport? Now do the same here, until I say different!\" Then she focused on the Vulcan pointing a weapon at her cub, carefully stepping closer. \"Captain Sakuth, my son is not a Changeling.\" \n\nSakuth never took her eyes off of Misha, or pointed her phaser away. \"You have been deceived, Counselor. They can appear as anyone or anything. But this one has slipped, in speaking Vulcan with a fluency matched only by my people.\" \n\nT'Varik stared at her former lover with an uncharacteristic anger. \"I have been instructing Misha in our people's language. Caitians are notably adept with linguistics, especially at his age. He has also learned phrases of Klingon, Rigelian Jelna and Terran French.\" \n\n\"Misha est un bon petit ourson!\" the cub offered helpfully. \n\n\"Critters of all races pick up languages a lot more quickly than their adult versions,\" Masterson noted. \n\nThe arguments seemed to be getting to Sakuth, until she suggested, \"The logical course of action would be to stun the suspect and examine him.\" \n\nKami raised a warning finger at her, baring her teeth. \"You... are NOT... stunning my son. Captain, Misha has been with me or T'Varik constantly since we left Earth. He could not be replaced by a Changeling and keep up the pretence with either of us for any length of time, no matter how good they might be at disguising themselves.\" \n\nNow Sakuth spared some attention on the Caitian. \"And perhaps there are two Changelings, working together, vouching for each other-\" \n\n\"Perhaps,\" Kami admitted. \"I wouldn't say it couldn't happen. And perhaps you're one, too, fomenting trouble and chaos among us? Perhaps we should all stun each other, or run random checks, or put computers in full control over our lives? Don't you see? Diligence is one thing, but not when it reaches the point of diminishing returns. \n\nWe can't operate on a constant, heightened level of paranoia for long. It's unhealthy, for individuals and for a society. \n\nPlease, Captain, for once: trust.\" \n\nSakuth froze, as if she had a weapon pointed at her now. \n\nThen she holstered her phaser. \n\nThe room relaxed, as Kami rushed in and swept Misha up in her arms, spinning around and beaming, \"Wonderful! You stayed perfectly still! Double dessert for you tonight!\" \n\nSakuth frowned. \"Your offspring was hardly in any danger worthy of indulging in gluttony, Counselor.\" \n\nKami looked at her harshly. \"We can still arrange to give you those colonics, Captain.\" \n\nT'Varik and C'Rash strode up to Sakuth, both wearing similar expressions, T'Varik declaring, \"I will be filing a formal protest with Admiral Tattok regarding your actions. You could have been injured as a result of this incident.\" \n\nSakuth raised an eyebrow. \"You are characteristically inaccurate. While the speed of Caitian adults has been amply demonstrated to me with my prior visit to this vessel, I kept both of them, and you and the Doctor, all potential threats, within sight.\" \n\n\"Not all.\" C'Rash grunted. \"Look behind you.\" \n\nThe Vulcan turned -- to see Eydiir suddenly, closely behind her, a phaser in her hand, raised and aimed at Sakuth's head, before the Capellan quickly holstered it. \n\nSakuth glared at her. \"You would have been willing to stun a superior officer in the performance of her duties?\" \n\nEydiir glared back, completely unintimidated. \"Who said it was set on Stun?\" She looked to T'Varik. \"If you'll excuse me, Commander, I must assist Doctor Masterson with the Captain.\" \n\nT'Varik nodded, and the young nurse departed. \n\nSakuth watched her leave, before looking back accusingly at the remaining officers. \"She was bluffing.\" \n\nC'Rash crossed her arms. \"If you say so, you stupid kussik.\" \n\nMisha looked at them curiously. \"Kussik?\" \n\nKami lifted up her son, sparing her niece a dirty look as she explained, \"That's a very rude word that your cousin shouldn't use in front of you, and which I do not want to hear you say again. Now, come on, let's go watch Doctor Cowboy fix your Papa.\" \n\nT'Varik fixed on Sakuth again. \"The doctor ordered all non-essential personnel out. You most certainly qualify as such.\" \n\n\"You do not have the authority to remove me. I have authorisation from Admiral Tattok to investigate the incident involving Capt Hrelle and Lt Cmdr Zawati.\" \n\n\"What's to investigate?\" C'Rash asked. \"I thought we'd decided that Zawati did it.\" \n\n\"I am still gathering forensic evidence.\" \n\n\"Then leave and proceed,\" T'Varik suggested. \"When Lt Cmdr Zawati has recovered enough, you can both depart from my ship expeditiously -- before you try to shoot another three-year-old child.\" \n\nSakuth narrowed her gaze at her, before turning and leaving, C'Rash following and T'Varik following from behind... stopping and sparing a final look at Kami and Misha, the mother speaking softly to her son, describing what Masterson and his staff were doing to help the Captain. \n\nShe looked at Zawati, alone on a far biobed, the readings above her confirming that a restraint field surrounded her, T'Varik speculated on the emotional pressure that could have driven an experienced, professional officer such as she to attempt murder and suicide. \n\nThen T'Varik considered the pressures she had experienced in her own recent past, and the extreme actions she had taken involving loved ones. So she focused on more logical pursuits... such as the feelings stirred by her return to the presence of C'Rash. \n\n* \n\nThe chill wind, the salty taste in the air and the sound of waves on rocks told Hrelle where they were now -- or at least, what part of his mind they had reached. He stopped on the winding road, ignoring the stone cottages around them to focus on one just ahead of them, as if his boots were stuck in the cold mud beneath them. \n\nBeside him, the Great Mother wrapped her arms around her chest. \"Seven Hells, my nipples could sharpen blades! Who could live here, even with fur?\" She stopped when he did. \"What's wrong?\" \n\nHis heart raced. \"I know where I am. I'm... home. Well, where I grew up, anyway. The R'Trerah Archipelago.\" His claws popped in and out of the tips of his fingers. He'd left here when he was in his teens, after being cast out from his clan when he chose to join Starfleet instead of continuing in the clan's fishing business. He had been away for decades, only returning three years ago to try and reconcile with his father. Papa remained stubborn, however, and died days later. Hrelle had subsequently been adopted by his wife's clan, forging bonds with people as if he'd known them all his life. \n\nHe had neither time nor desire to return to this cold, stark place again. \"Why?\" \n\n\"Why what?\" \n\nHe looked to her. \"Why would the Beast say this was where he was born? It wasn't here, it was years later, when I was a prisoner of the Orions.\" \n\n\"Are you certain of that?\" \n\n\"What? Of course! I should know my own mind!\" \n\n\"If that was true, your wife would never have any patients.\" She drew up to him. \"Rage... fury... the desire to kill... all of what the Beast represents for you... none of that is exclusive to adulthood like being allowed to drink or join the Militia.\" \n\nBut he was only half-listening, his nose picking up a familiar scent: burning peat. It was typical for the fireplaces here, but he knew it wasn't from a fireplace- no, no, not here, please, not now- \n\n\"You know this time and place,\" the Great Mother murmured to him. \"And why the Beast was born here.\" \n\nHe shook his head, fear racing through him like the cold. He wouldn't go, he wouldn't go, he wouldn't- \n\nThen he heard the cub's cry, and he raced ahead into his old clan's grounds, behind the darkened house. \n\nThere was the clearing, overlooking the rocky cliffs and the sea beyond; here, fires were traditionally built to welcome back the fishing boats after the longer trips, even when communications technology had been used for centuries. Many times, he would have helped Mama build fires to welcome back Papa and the rest of the clan. \n\nThere was a fire here now. But not for a signal. \n\nHe saw his father, Sherresek Hrelle, looking far younger and fitter than when Hrelle had last seen him in real life. \n\nAnd he saw himself, a six-year-old cub, on the ground, mewling and sobbing. \"Papa, no! Please, no! Don't!\" \n\nBut Papa didn't listen. He didn't listen when this had occurred in real life nearly half a century ago, and he didn't listen now. He just kept feeding the fire. \n\n\"What was he burning, Esek?\" the Great Mother asked, sounding as if she already knew, reminding him distantly of when Kami would guide him towards facing things he would have preferred avoiding. \n\nSuch as what he witnessed now. He didn't want to answer. And he did. \"Mama's things. He was burning all of Mama's things.\" She had died the previous fortnight -- a stupid, stupid accident returning from visiting relatives on the mainland -- and Papa had been almost completely speechless and inert following the funeral. Tonight, however, he burst into action, gathering all of the pictures of Mama, her recordings, her writings, her clothes and shoes and beads and everything... even the sheets and blankets on the bed the male had shared with her. Even the things Esek had kept hidden in his room, clothes with Mama's scent on them. \n\nAnd Papa had found them all, and burned them from their home. From their lives. \n\nAnd now, a lifetime later, Esek was left with nothing. The absence of her memories in the house had been like an open wound, made worse by the paucity of images of Sreen in public databases, and a lack of cooperation from clan members when his father had denounced him from the Registry. In time, she had become nothing more to him than a name, and a handful of memories he couldn't even be certain were real. ",
        "In the clearing, the six-year-old Esek screamed, \"Papa! Stop! Please!\" \n\n\"Go back to the house, cub!\" his father snarled. \n\n\"NO!\" the young Esek roared, his grief and horror erupting form him. \"I'LL KILL YOU!\" \n\nAnd the young Esek leapt onto his father, claws and fangs out. \n\nAnd the adult Esek remembered again, seeing the birth of the Beast before him. Not in a bloodied arena on Orion, but in the anguished, angry heart of a cub on a shitty little island on Cait. \n\nHe had wanted to kill his Papa then. \n\nHe wanted to kill him now. \n\nAnd from the shadows behind him, a new figure emerged, joining the fight in the clearing, flinging the cub off to take his place. The adult figures grappled, roaring and snapping at each other. \n\nHrelle watched, knowing the Beast well enough to see that he was toying with Papa, prolonging the struggle, wanting him to suffer. \n\nHrelle wanted it, too. \n\nAs if reading his thoughts, the Beast looked over at him, grinning. \"COME, ESEK! HELP YOURSELF TO A PIECE OF THE OLD BASTARD!\" \n\n\"He'll rip your Papa apart,\" the Great Mother warned him. \n\nHrelle's face tightened. \"Good.\" \n\nShe drew up and faced him, her expression harsh, capturing his full attention. \"No, not 'Good'. Why did your Papa do this? Think!\" \n\n\"It doesn't matter.\" He tried to pull away. \n\nBut she held onto him. \"Yes, it does! Don't destroy him!\" \n\n\"I'm not doing anything!\" \n\n\"The Beast is a part of you! You're letting this happen!\" \n\n\"He's just a memory! A phantasm in my head -- like you!\" \n\n\"'We can do right or wrong not just to each of us, but to animals, to blades of grass, to the unliving and never-living, even to a thought...'\" \n\nBecause ultimately, the right or wrong we do is either an affirmation or a rejection of our own integrity... \"Who are you? Why do you care? About him, or me?\"\" \n\nShe touched his muzzle gently. \"How can I not, my Little Surefoot?\" \n\nHe blinked, his heart stopping. \"W-What did you call me?\" \n\nHe looked into her eyes. \n\nThose same warm, loving eyes he saw above him every night Mama tucked him into bed, stroking the side of his muzzle. \n\nAnd then, he understood everything. \n\nHe pulled back, heard Papa cry in pain. \n\nAnd raced in to help him, tackling the Beast. \n\nThey grappled on the cold ground, Hrelle looking down into angry, disbelieving... tear-filled eyes, the Beast demanding, \"WHAT ARE YOU DOING? HE'S DESTROYING HER! WIPING AWAY ALL TRACE OF MAMA!\" \n\nIt was an anger, a disbelief, a sorrow that Hrelle reflected. \"I know. Look at him.\" \n\nThe Beast did, as Hrelle's eyes followed. Papa lay there... sobbing, his muzzle buried in his hands, his voice almost lost in the rising wind, nothing of the strong, fearsome man Hrelle remembered. \"No more... I can't take anymore... I still smell her... Make it stop- please-\" \n\n\"It hurt,\" Hrelle continued, as the Beast stopped fighting him. \"It hurt so much for him, to have her pictures, her scent, any trace of her, around the house... knowing she would never be there in the flesh again. He thought... he thought this would make it easier. \n\nIt didn't. It only made his loss, made him, worse, when he realised what he'd done. What he'd lost. What I'd lost because of him. I...\" He was choking up now. \"I- I didn't understand this, then. I do, now.\" \n\nThen he rose as he watched the figure who had called herself the Great Mother approached, kneeling beside Papa and drawing him close, rubbing the side of her muzzle against his and stroking the back of his head. \n\n\"Mama?\" Hrelle declared. \n\nThe image of Sreen Hrelle rose, too, smiling. \"My beautiful cub... my Little Surefoot, always so confident to climb the trees and the rocks and even the roof of the house... falling but always landing on your feet, and ready to climb again.\" \n\nHe trembled, afraid to reach out to her. It was obvious now, so obvious. Her face, her scent and the feel of her arms around him... even that nickname she had for him; he'd forgotten it! He thought it had come from the stories of the old Caitian sea vessel of the same name! \n\nHis Mama was back. \n\n* \n\nKami heard the woman stir behind her, and turned her head, staring hard as Olivia Zawati began to return to consciousness. Nearer to her husband, Masterson and the nurses continued their work, and Misha sat on an unoccupied biobed, visibly struggling to keep from commenting or asking any more questions. \n\nKami faced the woman now -- attracting the momentary attention of the guard. \"Uh, Counselor, maybe you shouldn't-\" \n\nShe sensed his concern -- more perhaps for the fear of what Kami might do to Zawati. \"It's okay, Mr Gorman. I just want to check on her.\" She walked up to Zawati, watching as the human woman struggled to emerge from unconsciousness -- and then struggled to fight the fields around her. \"Keep still, Lieutenant Commander, you've just come out of surgery... and you're under restraint.\" \n\nZawati blinked, reacting to the strong light above, before focusing on Kami. \"You- I- I know you-\" \n\nKami nodded, her voice low so as not to disturb the continuing work nearby, and her son's attentiveness there. \"Counselor Hrelle. You've probably seen my picture on my husband's desk, and heard him talk about me. I hope he hasn't gone on too much, I know he can gush at times. He's a big softie.\" \n\nThe Wakandan woman swallowed, her eyes glancing here and where. \"Is he-?\" \n\n\"Dead? No, not anymore. He'll recover.\" She leaned against the side of Zawati's biobed. \"He won't be the same as he was before you tried to kill him, but he'll recover.\" \n\nThe other woman tried to pull away, but couldn't move much beneath the restraining field. Kami saw the anxiety, the confusion, as the woman asked, \"W-What do you want with me?\" \n\nKami folded her arms, never giving the other woman a break from her gaze. \"I'm... not sure. Maybe I'm here fulfilling my duty as Ship's Counselor, seeing to the mental and emotional well-being of a crewmember who has recently suffered a trauma -- please accept my condolences about the loss of your brother, by the way. \n\nMaybe I want to learn how someone could go from receiving such terrible news, to deciding that the best response to such news is to try and kill someone who had absolutely nothing to do with it. Someone who, I hope, has been kind and decent to you in your time here.\" \n\nShe drew in, just a little closer. \"Maybe I'm here to tell you that, while I sincerely hope you accept the help offered you, to face and deal with the consequences of your actions, and make something of your life when you are eventually released...  \n\nMake sure that life never, ever crosses mine again.\" \n\nShe shrugged. \"Maybe it's all three?\" \n\n\"Mama?\" \n\nKami turned. \"Misha, go back and stay near your Papa.\" \n\nBut the cub continued further, staring at Zawati now. \"You Papa's friend?\" \n\nKami watched the reaction on the woman's face, in her eyes. She saw the blossoming of realisation at what she had done, the shock and the attempt at defiance, at avoidance, burning away, leaving only... the horror, the guilt, the anguish of her actions, and her resulting current state. Tears ran down her face. \n\nThe raw emotion confused Misha. \"Why you sad?\" \n\nZawati tried to speak, failing, leaving Kami to explain to her son, \"She was sick, like your Papa. And she just found out that her brother died.\" \n\nMisha gasped, then stepped closer, looking fully on Zawati, his furred hand reaching out and touching the restraining field. \"I'm sorry, lady.\" \n\nThe woman nodded weakly, unable to move to wipe the tears from her face, her voice ragged and broken. \"I'm sorry, too.\" She looked up at Kami. \"I am sorry. I am so sorry...\" \n\nKami believed her. And that belief brought only a profound sadness from her. \n\nT'Varik and C'Rash escorted Sakuth to the Transporter Room, the First Officer aware of how close her Caitian lover was to her... and not necessarily disapproving of it. \"You do not wish to collect Lt Cmdr Zawati yourself?\" \n\n\"That is a task for menials. I am certain your Chief of Security can manage it.\" \n\nC'Rash bristled, but remarkably -- at least to T'Varik -- did not respond verbally to the dig. \"And I will forward the Chief Medical Officer's report to your offices.\" \n\n\"Of course you will. I am also recommending that your torpedo complement be upgraded to the Quantum series, along with a commensurate improvement to your main phasers. The Starsong should be able to supply you with the materials and personnel required to perform the task expeditiously.\" \n\nT'Varik and C'Rash glanced at each other, before the Caitian noted, \"That's very generous of you.\" \n\nSakuth stepped up onto the Transporter Pad and faced them. \"Generosity has nothing to do with it. It is merely logical to equip this vessel with materials to compensate for the deficiencies in its crew.\" \n\n\"I see.\" T'Varik noted. \"I will also forward to Admiral Tattok Counselor Hrelle's medical recommendation for you.\" \n\nThe other Vulcan's brow furrowed. \"It would be obvious to anyone that she was not being serious.\" \n\n\"Not if they've met you.\" Then, hidden from the Transporter Chief but in full view of Sakuth, T'Varik took C'Rash's hand and ordered, \"Energise.\" \n\nAs Sakuth disappeared, T'Varik released her touch and departed, saying simply, \"Follow, please.\" \n\nIn the corridor, the Caitian purred. \"I can't wait until our shift ends.\" \n\n\"Nor can I.\" T'Varik touched her combadge. \"Lt Neheru, begin preparations for the transfer of the cadets and crew. I will be in my quarters debriefing Lt Shall. We will meet you on the Bridge in 12.36 minutes. T'Varik out.\" \n\nC'Rash kept pace with her lover, but looked at her. \"12.36 minutes? That's pretty precise.\" \n\nT'Varik nodded. \"It has been 91,428 minutes since we last coupled. You should know by now that I am nothing if not precise.\" \n\n* \n\n\"NO!\" the Beast cried out, looking up into the blackened night. \"NO! STOP IT!\" \n\nHrelle looked to him, confused. \"What's wrong?\" \n\nThe Beast ignored him, rising to his feet, claws bared. \"HE NEEDS ME! HE CAN'T LIVE WITHOUT ME! HE-\" Then he looked to Hrelle. \"I want to live... Please, Esek, stop them... stop..\" \n\nThen he literally fell apart: calcifying, fossilising, his body cracking and crumbling and collapsing, the finer dust particles blowing away in the evening breeze. \n\nHe stood there, doumbfounded. \"What... happened?\" He looked to his Mama. \n\nShe looked up, as if the answers were in the starless sky above them. \"Your people are having to reconfigure your neural patterns. You're losing some things... like the Beast.\" \n\n\"He's... gone?\" He felt stunned. After all these years, of hating the Beast even as he had to acknowledged how much it allowed him to live with the acts he had committed, to have him gone now out of his head... he tried to recall those acts, but now, it was like looking for files on a computer but finding only empty folders. \"He's gone. Now what?\" \n\n\"Now,\" Mama replied gently. \"You get to have to fully live with anything you do. Which maybe is as it should be. Our actions, for good or ill, should reflect on us, not on some subpersonality, or some subordinate.\" She smiled. \"Besides, you may have lost... but I think you might have also gained.\" \n\nAnd then she began to sing a lullaby: \n\n\"Cub of mine, full of light \n\nRest your head on me tonight \n\nDark and stormy skies awoke you \n\nSleep, my cub, and peace becloak you \n\n- \n\nCub of mine, full of love \n\nSleep beneath the stars above \n\nI'll be with you 'til you slumber \n\nLet your frets and woes discumber \n\n- \n\nCub of mine, full of life \n\nFree your brow from fear and strife \n\nAnd as you go throughout your day \n\nKnow my heart will guide your way...\" \n\nHrelle returned to her, his jaw dropping. \"I... know that!\" \n\nShe reached up and stroked his muzzle. \"You should, Little Surefoot. I used to sing it to you, when your Papa was away on the boat and we were waiting for his return. You'll remember a lot of things now, with the Beast no longer papering over the older memories. And they'll be as fresh to you as if they happened yesterday.\" \n\nHe stared, confused... and then comprehending, as he saw her, smelled her, heard her, so vibrant and vivid... \n\nSitting in the living room before the fire, recovering from the Winterflu, smelling the peat burning, eating buttered toast and laughing as Mama did funny dances and sang to him, or did imitations of the local villagers, like crabby old shopowner Mrs Ol'sahn and bumbling Doctor Fersha... \n\nHis first climb of the tree outside their home, and Mama scolding him to come down, before shrieking as he chose to interpret that order as permission to leap out of it rather than safely climb down, his triumph quickly scurrying away as Mama smacked his rear... \n\nWalking along the beach with her, collecting colourful waterworn pebbles for the garden, as she told him stories of the Great Mother and Her Cubs... \n\nBeing chased around the bathrub by her, both of them laughing giddily as she swooped down, gathered him up, spinning around and rubbing her muzzle against his before settling him into the warm, sudsy waters... \n\nBeing a tiny bundle of fur and heat, rudely taken from the hot, cozy pocket that had been his universe, ready to protest -- until he smelled and heard and saw his mother from the outside for the first time, and instinctively purring with sublime joy... \n\nSo much... so very much opened up to him now... \n\nHe wept. \n\nShe held him. \"Time for you to go now, Little Surefoot. I think your doctor is completing the work needed to bring you back out into the real world.\" \n\nHe froze -- and he listened. She was right; he could hear voices in the darkness. Familiar voices, calling to him... but he clung onto her desperately. \"No- I'm not letting you go now- not after so long-\" \n\nThe memory of Sreen smiled against him. \"You never forgot me, silly cub; you just remembered me in a different way. I've always been with you; the lessons I taught you, built within you from the beginning, you have carried since. Guiding you. Shaping you into becoming the man you are now. \n\nA wonderful husband, to Hannah and to Kami. A wonderful father, to Sasha and to Misha. A wonderful commander, to your crew and your cadets.\" She chuckled softly. \"Of course, I'm only a figure in your head, so basically you're just stroking yourself here.\" \n\nHrelle laughed too -- but held her all the more. \n\n\"And I'll always be with you,\" she promised. \"In here. But remember, you have responsibilities out there. Take care of your family... and yourself.\" \n\n\"Yes, Mama.\" \n\n\"And lose some of this belly. You don't eat enough vegetables.\" \n\n\"Yes, Mama.\" \n\n\"And cut out the coffee. And stop showing scary vivids to my grandcub. And give Kami some attention after being away for so long talking care of Misha alone-\" \n\n\"Mama-\" \n\n\"You see to her needs, keep her satisfied, don't just think of yourself-\" \n\n\"Mama... hush.\" \n\nShe laughed. \n\n* \n\nMisha had fallen asleep following the completion of Hrelle's operation; Masterson helped settle him on an adjacent biobed, graciously allowing mother and cub to stay for as long as they wanted, and let their scent reach and reassure the patient. \n\nThe release and removal of Zawati from Sickbay had been done quickly and quietly; Kami spared her a final look, hoping to convey... something. Pity. Forgiveness. Something. Even Kami wasn't quite sure what she wanted to offer. \n\nShe climbed up onto the biobed beside her son, one arm over him, while the doctor and his staff left them alone as much as they could, lowering the lights. Kami didn't need lights; she kept watch on her husband, listened to the steady sounds from the displays overhead, and the more reassuring sounds of his breathing. His scent reached to them, comforting them. \n\n\"Come on, you fat bastard,\" she whispered over to him. \"Wake up and get better. I want another cub with you. A girl this time. And to the Seven Hells with how dangerous the Galaxy is. You hear me, Esek Hrelle? A girl. I don't know about the name yet-\" \n\n\"Sreen...\" \n\nShe started when she saw him stir, first with a smile, then a turn of his head towards her. \n\nShe sat up as he opened his eyes and replied in a dry, husky voice, \"Sreen... she's gonna be called Sreen... after my mother...\" \n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... MY SUMMER ON VULCAN"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek fanfic",
        "star trek fan fiction",
        "surefoot",
        "starfleet",
        "caitian",
        "klingon",
        "federation",
        "dominion"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-34-mothers-cub"
}