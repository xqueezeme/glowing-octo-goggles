{
    "title": "Poison Ivy Ch. 05",
    "pages": [
        "ETA: This is the revised version of Chapter 5. Some minor details have been changed, so if you read ahead before the subsequent chapters are revised, a few things may not match up. I am updating them as I go through them, so you'll always see a note like this at the beginning of a revised chapter. \n\nThe final chapter has been written! I'd like to get a few of the revisions ironed out, and I'll be posting it in two parts, but it'll be posted soon. I'm also going to post a teaser for Aella and Trevino's story, so look for that one too. \n\nHey guys!\n\nSome random trivia. Someone asked if I was a corpsman in the Navy. No, I was not. I was an Aviation Electrician, believe it or not. I thought about making Ivy a mechanic or electrician, but it just didn't fit with her character. However, I am now a nurse and an EMT, so I do have some medical background. So I'm not totally winging it on the medical stuff. \n\nI'd like to start something new. When I write, I find songs that fit with the direction of the story, and I'd like to share the \"soundtrack\" of this chapter:\n\nUnderneath, by Cobi, album Songs from the Ashes\n\nGlitter, by Rafferty, from the album Glitter\n\nThe Outsider, by A Perfect Circle, from the album Thirteenth Step\n\nStand Up, by The Cab, from the album Lock Me Up\n\nBeggin for Thread, by Banks, from the album Goddess (Deluxe)\n\nOkay there you go, hope you enjoy. To the newcomers, a lot of this won't make sense unless you read the previous chapters. This is an Omegaverse story, so if you're not familiar, you may want to do a quick google search so you understand the Alpha/Beta/Omega dynamics that kind of dominate this story. \n\nAlso, this is a military setting. As such, and given my Naval background, there is a ton of offensive language in this story. So if you're easily offended by trashy language, please pass this one up. \n\n..............................\n\nIvy yawned and tugged at the hem of the fitted tunic-length white V-neck she wore over a pair of tailored jeans. She winced as she shifted her weight from one foot to the other, balancing on the ridiculous black designer shoes with two-inch heels. How the fuck was she supposed to run in these things?\n\nThe outfit wasn't one she had picked out on her own, and it hadn't been selected from her preferred wardrobe Officer Muscles had inexplicably surprised her with last week. But with the new General and his pregnant Omega arriving today, she had let the giant bully pick out what he wanted her to wear (within reason), as long as he stayed away from skirts, frills and lace. All in all, he hadn't done a horrible job.\n\nShe could live the entirety of her life without putting these stupid fucking shoes on ever again, but whatever.\n\nOfficer Muscles had actually been on exceptionally good behavior during the past week, after she had found Kentucky, barely breathing but alive, right there in plain sight, in a darkened room along the medical building's main hallway. Trying to calm her down, Hunter had wrapped his paw of a hand around the back of her throat, his thumb curling around to press on her pulse, and she had remembered...\n\nShe didn't want to think about that right now. If she had her choice, she would never again think about the horrible flood of half-formed memories that had flashed through her mind in response to his big hand threatening to constrict her airway. She knew Hunter wasn't trying to hurt her. But in that moment, Hunter wasn't Hunter, and it was someone else's hand wrapping around her throat...\n\nShe shivered, deliberately locking that hot mess in a mental box, and sucked in a deep, calming breath.\n\nThe sound of a distant engine drew her attention up to the bright blue sky, just as a small jet became visible on the horizon. The aircraft steadily creeped toward their little airstrip in the middle of nowhere, surrounded by hostile, foreign territory.\n\nTorrin. She hated being here, at the main base, pair-bonded to a bossy, massively muscled, disgustingly attractive, insufferable Alpha. An Alpha she still resented for the pair-bond he'd forced on her against her will, during her first estrous, when she'd been out of her mind with the overwhelming urge to mate. And if he'd done a few things that were clearly meant to make her more comfortable here, it was overshadowed by the fact that she had been caught, trapped and claimed, during a time when she hadn't even known she was Omega. That little interesting tidbit had become undeniable after she'd resurfaced after four straight days of fucking, covered with Hunter's cum, snuggled deep inside the fluffy fortress she'd carefully constructed. Eventually, she'd had to accept that the fortress was her first nest.\n\nShe just wanted to go home, forget this whole ordeal, move back into her cozy little apartment she rented with three other Beta females back in Lostra and assume her role as an army medic, maybe deploy again somewhere else. Kentucky's betrayal had ruined her longing to return to Chid FOB and Rico Battalion. She was so homesick... and she didn't even know where home was anymore.\n\nHunter's grip on her shoulder tightened. Frankly, she was shocked he had allowed her out of her cage of a bedroom for the occasion, but she could have lived without the way he obsessed over every minor detail of her outing, as if threats to her safety were everywhere and inevitable. She bristled at the thought. If a sacred, pregnant Omega could come into Torrin with her Alpha, she sure as fuck should be allowed to spend some time outdoors as well.\n\nShe wasn't entirely thrilled at the prospect of a new General, which hinted that the Torrin war would rage on for at least the time being and the entire company wouldn't be getting the hell out of dodge anytime soon. Which, in light of the late General Nelson's traitorous actions; sacrificing the lives of countless Beta soldiers in order to prolong the Torrin campaign and line his own pockets; was massively disappointing. Still, she wasn't going to complain about the chance to get some fresh air and be a part of the hustle and bustle of the main base, even as an honorary member. The sound of boots crunching gravel and army vehicles rolling by, accompanied by the nearby liftoff of a chopper, brought back fonder memories of her days among her fellow Beta soldiers. Back when she knew who she was, and where she belonged in the world. Now?\n\nNow she had no fucking clue.\n\nThe private military jet reserved for top generals, admirals and government officials, dropped its landing gear and touched down. It slowed, with exceptional precision, and rolled to a stop directly in front of their little welcoming party. Instantly, a half dozen Beta soldiers got to work rolling out a literal red carpet up to the end of the opening hatch as a small staircase folded down from the side of the jet. Ivy rolled her eyes. Her time away from Chid FOB, among the Alphas who treated themselves like fucking royalty, had continued to stun and infuriate her. The amount of wealth and opulence they dumped on themselves was disgusting. All while Beta grunts, both here and on the satellite bases, made due without the necessities of war. The lush red carpet, entirely unnecessary, could have paid for life-saving medical supplies, or better-quality food. But, of course, the officers weren't concerned with the sorry state of Beta logistics. Why should they? Betas were disposable. \n\nThe beginning hints of rage hit the back of her throat. It tasted coppery and sickly sweet. It tasted like blood. Her hands curled into fists, and her eyes narrowed. Hunter, obviously sensing her growing agitation through the bond, began purring quietly, scattering her thoughts like a dog running through a field of pigeons.\n\nShe really hated when he did that.\n\nShe brought her attention back to the aircraft, where a pair of massive shoulders squeezed through the tight fit of the doorway and strutted down the stairs, his impeccable uniform and styled hair giving him the air of a preening peacock. The dude was handsome, no doubt about that. Straw blonde hair stood out against tanned skin, light brown eyes narrowing as they scanned the base. A chiseled jaw sat below defined cheekbones, and she watched as a corner of General Maverick's glossy lips lifted in a smirk, a dimple appearing on his left cheek.\n\nWait, was he seriously wearing fucking lip gloss? His brown eyes and the hint of darker roots already indicated he dyed his hair, and her eyes flicked down to his obviously manicured fingernails. She snickered. Her own Alpha's storm-grey eyes bore holes through her, and Ivy smirked up at him in response.\n\nGeneral Maverick descended, his polished boots hitting the end of the red carpet and coming forward, a small figure trailing close behind him. Ivy attempted to look around the massive presence of the approaching Alpha to catch a glimpse of her first up-close-and-personal Omega, but the dude's ego was the size of a pregnant friggin whale. It seemed like any time a pale, child-like hand or a flash of sunshine hair became visible, the Alpha shifted, stretching himself to fill the entirety of her attention. She huffed a frustrated breath and rocked back on her heels.\n\nThe General stopped when he reached Ivy and Hunter. His gaze fell on her first, and she suppressed a shiver as he gave her a ridiculously thorough once over. His obvious elevator eyes gave her the creeps, and she definitely didn't like how his gaze seemed to linger on the small amount of cleavage her push-up bra managed to squeeze up front and center. Even without being able to run and lift weights every day, Ivy had spent a good two hours of every monotonous day going through an improvised exercise regimen consisting of squats, lunges, pushups, mountain climbers, burpees, and any other body-weight moves she mixed in for the sake of novelty. She was little but fierce, and her toned body didn't exactly lend itself to generous curves. So why this asshole was staring at her like she was a fucking buffet line, she had no idea.\n\nAlso, there was the whole matter of his pregnant mate, silent and invisible, standing directly behind him. And the fact that he had dragged this invisible, silent, pregnant mate to Torrin in and of itself struck, like, 50 points off his man-card.\n\nHe hadn't even spoken a word yet. But right then and there, Ivy made her judgement.\n\nThis guy was a fucking prick.\n\nFinally, the General's eyes snapped up to meet Hunter's and he grunted. \"Lt. General Hunter Logan?\" he stuck his arm out, and Ivy was slightly surprised he didn't offer Hunter the back of his hand for kissing. She bet his handshake would be limp as fuck, though. Hunter took the proffered appendage and grunted back. Ivy rolled her eyes. Must be Alpha-talk for pleased to meet you. \n\n\"General Maverick. Great to have you sir. This is our recently discovered Omega, Ivy.\" Hunter put his hand on the back of her neck possessively, careful to avoid the pulse point and whatever kind of mental detonation it had triggered last time. Ivy offered her hand, and The Mav stared at it for a moment, a startled look on his face, before reaching out reluctantly and shaking it. Alphas, as Hunter had explained haughtily while selecting her attire for this little shin-dig, were not supposed to touch a pair-bonded Omega, but Ivy had no intention of following such bull-shit customs. Like, ever.\n\nYep, definitely limp. Like a wet fucking noodle. \n\n\"Ivy,\" the big dude drawled. He was only slightly smaller than Hunter, which made him plenty more than twice her size, and the guy couldn't even muster up a decent handshake. \"So glad your hero here was able to get you out of that dreadful place before anything... untoward happened to you. It's a pleasure. Hunter's so lucky to have claimed such a lovely mate.\"\n\nIvy gritted her teeth. Chid FOB might have been a dreadful place, but not for the reasons Maverick-dude thought. And there it was again, that C-word she hated so goddamn much. Claimed. The thought that anyone had laid claim to her made her blood boil, and she caught herself glaring at the big Alpha who'd decided she really didn't deserve a say in the matter. His fingers on the back of her neck twitched and tightened, a silent response to her angry eyes.\n\nThe Mav turned to the side and put his own hand on the back of a small, stunning Omega female's neck, bringing her forward. \"This,\" he said proudly, \"is Aella, my expecting Omega.\" The girl patted her swollen belly happily and inclined her lovely head.\n\n\"Fuck me,\" Ivy said, and immediately clamped a hand over her big mouth. She really had to work on that whole no-filter thing. But goddamn, was this girl serious?! Soft, silky curls the color of the sun framed a delicate, angelic face. This chick had all the curves Ivy didn't, and she imagined the pregnancy hadn't done anything to hurt those heavy, perky breasts. Where the hell was her bra? Her erect nipples just hung out, right there in the open, for everyone to see.\n\n\"Uh, so nice to meet you, Aella,\" she said quickly. Obviously, it made sense for a top General to have secured such a flawless Omega, probably gifted to him by one of the powerful men who controlled that sort of thing. Like a sacred pet. Still. She bet Hunter was sorry he hadn't waited for someone who looked less like her and more like Aella. She was probably nice and docile, too.\n\nEverything Ivy wasn't.\n\n\"So lovely to meet you, Ivy,\" she breathed, her musical voice positively tinkling. \"And Lt. General Logan. I do hope you've been taking good care of our long-lost sister.\"\n\nUgh. The Omegas called each other sisters? How boringly predictable.\n\n\"Aella, please call me Hunter. How wonderful to have such a lovely soul grace our rather gloomy base.\"\n\nIvy's eyes snapped up to her Alpha and narrowed. Lovely soul? Why, that dirty, sly-tongue, no good son-of-a --\n\n\"Yes, well, I suppose you have things to brief me on. We should let the girls get acquainted.\" Maverick-dude sounded bored. Aella stuck out her hand to Ivy. \"Come,\" she said conspiratorially. \"You must tell me everything about yourself and show me around.\"\n\nShe spared one last glance at Lt. General fuckface and bared her teeth, promising a very lengthy conversation the next time they were alone, and then turned back to little Miss tell-me-everything and took her hand. She'd show her around, all right. They had about six Beta chaperones, supervised by a low-ranking Alpha officer, but that didn't mean she couldn't take the opportunity to meander into medical and ask around about a certain traitorous ex-bestie. \"Of course,\" Ivy mimicked The Mav's drawling tone, pulling her new sister down the main drag, followed closely by their Beta protectors. She could feel Hunter's eyes boring into the back of her head as she walked away. Whatever. Mister lovely soul could eat it, for all she cared.\n\n.......................................\n\n\"I'm not quite sure what you expect me to do about all this, Logan,\" General Maverick gestured to the mess of papers strewn out across the mahogany desk in front of them. The documents detailed Hunter's findings on General Nelson's treasonous actions; undeniable proof that he'd been colluding with the enemy to extend the conflict and line his own pockets with kickbacks from the companies who supplied the tanks, weapons and supplies that drove the war efforts. Hunter had kept Ivy's parentage out of it, a decision he was glad he had made after meeting the rather vain new General. The less people who knew about her, the safer she was, and he wasn't exactly filled with confidence over Maverick's ability to take charge of the Torrin conflict.\n\n\"Sir, I advise a course of action that leads to our rapid withdrawal from Torrin territory. It's clear Nelson only refused the offer of surrender and use of the port for his own benefit. If we can negotiate a similar offer, there's no reason for us to stay.\"\n\n\"I'm not sure,\" Maverick sounded doubtful, and Hunter tensed. Not sure? What the hell was going on?\n\nThe General stood up and walked to the small window overlooking the main road, lacing his fingers behind his back. \"May I be frank with you?\" he asked, glancing at Hunter from the corner of his mud-brown eyes.\n\nHunter nodded and gestured for the General to continue. \"Let's both be adults about this. There are men much higher in the pecking order than both of us who, for one reason or another, would like us to stay engaged in this area. Now, I don't like it any more than you do,\" he said, turning to fully face Hunter and raising his hands as if defending himself from the larger Alpha's murderous glare. \"But the fact is, this is simply above our paygrade.\"\n\nHunter realized he had started growling and had to focus on suppressing the urge to attack the older, weaker male. \"I would have thought, General,\" he said sharply, \"that you would want to focus your attention on your pregnant Omega instead of furthering the war efforts here.\" Hunter enunciated the word pregnant. It was a big fucking deal. Omega numbers were dwindling, and though dynamics didn't present themselves until early adolescence, the chances of Omegas breeding more Omegas was high. Even Ivy, who knew next to nothing about Alpha-Omega dynamics, was shocked at Maverick's plans to bring Aella here.\n\nHis mind involuntarily began picturing Ivy, her belly swollen with his child, and his dick hardened. The universe where he would have allowed his Omega to have been brought into hostile territory so close to the birth of his child simply did not, and would not ever, exist, and he thought Maverick a fucking bastard for dragging her here instead of finding her a surrogate Alpha to care for her through her last trimester.\n\nThe Alpha shrugged. \"Aella will be just fine, and I'd thank you to keep your thoughts away from her, as well intentioned as they are. I'm here to stabilize the situation and ensure the base is fully secure, at which time I will pass command on to a younger General who knows how to properly follow orders. What I am not here to do,\" he said, staring hard at Hunter to make sure he was paying attention, \"is begin the process of withdrawing. You would do well to remember who it is you ultimately report to.\"\n\nAnd there it was. Of course, it would come down to him. Vice President Hickson, the man who had driven Ivy into Beta hands. He had put her life in danger far too many times to get away with it alive. As soon as Hunter's tour was over, and he'd seen her safely back home to Lostra, he would start the embarkation of hunting the man down. Unable to stand the sight of yet another corrupt commanding officer, he turned and stalked back to the desk to begin gathering the documents detailing Nelson's treason. He had no intention of leaving them here, in Maverick's obviously greased palms.\n\nIvy's father was already dead. He just didn't know it yet.\n\n\"And the boy?\" Maverick asked behind him. He looked back over his shoulder.\n\n\"He's still heavily sedated and comatose. I haven't been able to question him yet.\"\n\nMaverick waved his hand in the air as if clearing away smoke. \"No matter. If Eli, that dumb Torrin shit, wants to recruit soldiers off our satellite bases, he's more than welcome to them. A few Beta grunts make no difference to me. We simply issue an order to kill at the first sign of discord. Take no prisoners, even if that means trimming the fat off our own bases. Anything short of complete compliance within my ranks will not be tolerated. As for the traitorous little bastard, just kill him and get it over with.\"",
        "Hunter stared hard at the new leader, considering. He wouldn't deny he had entertained thoughts of strangling the Beta who had put his Omega at such risk himself. If it wasn't for his strong desire to discover how exactly the little shit had found himself among Torrin soldiers, trying foolishly to overtake the main base, he wouldn't be alive. Still, he had thought it might be worthwhile to question him.\n\nThe General had the good sense to look uncomfortable as Hunter leveled a threatening glare at him. He wasn't at all happy with how Maverick intended to stabilize the situation, as he'd put it. Maverick might outrank him, might be older than him, but Hunter was a larger, stronger Alpha who, when push came to shove, could take the man down if he felt the need. \"You're dismissed,\" the older man said, taking a seat back behind the mahogany desk and avoiding eye contact. Hunter glared at him for a moment longer, then spun on his heel and stalked out of the office.\n\nThe conflict in Torrin might be a lost cause. If not for Ivy, he may have put more of an effort into making sure Lostra accepted Torrin's offer of surrender and secured use of the crucial trading port of Kumek. But he had a pair-bonded Omega under his protection; a mate whose haunted past was slowly coming back to her. It was inevitable, given the situation, that her father would discover she had survived. Hunter wasn't sure if the man would try to take her back... or kill her. He also wasn't sure which possibility worried him more. Neither was acceptable, and either way, the man had to die.\n\n........................................................\n\nA few hours later, Hunter stood in the doorway of Ivy's suite which he had, for all intents and purposes, moved into during the past week. Since the day she'd taken her little unsanctioned field trip to the hospital, her nightmares had gotten worse, though she still refused to acknowledge the increasingly distressing flashbacks during her waking hours. The loss of sleep, and the added stress of the returning memories, just compounded her already difficult situation. Although he was the one entirely responsible for locking her up every day, with the added security of a new team of guards, even he could see that beneath her tough, pissed-off exterior, Ivy was beginning to become a bit unraveled.\n\nHe couldn't control her past intruding on her present state of mind. Nor could he control the rapidly deteriorating state of affairs in Torrin that necessitated his presence until Maverick had a chance to fully assume command of the base. But he was beyond finished with her infuriating refusal to simply stay fucking put. She seemed hell-bent on getting herself into trouble, and he wasn't willing to put up with any more close calls. The night of her last escape, as he'd laid curled around the body that seemed so fucking fragile and small when she slept, he'd let himself feel the anger he'd buried while he'd taken care of her.\n\nThough he had no desire or intention of stamping out all her fire, he needed to subdue her to an extent, if for no other reason but to ensure her own safety. She was defiant to a fault, and with each escape attempt, she put herself at risk and directly in harm's way.\n\nIt seemed like the only time she ever settled the hell down was after he'd fucked her. That wasn't to say that he considered sex with Ivy a chore or something that had to be done. Quite the opposite, in fact. The need to cement and strengthen a new pair-bond just happened to coincide with this time of uncertainty and rebellion in his little Omega's life. With his cock buried inside her, she was less focused, less intent on escape, and more submissive. Every time he knotted her, the pair-bond strengthened, expanding its influence even as she fought against it. It kept her sedate and calm, rewarding them both with its pleasurable resonance when the balance between dominance and submission at the heart of every Alpha-Omega bond was reached.\n\nHe watched on as the two Omegas ate lunch, unaware of his presence. Aella chatted away happily as Ivy picked at her food sullenly. That was another thing he would have to address with her soon. She was not eating nearly enough, despite his best attempts to supply her with high-quality meals she enjoyed.\n\nThe Beta guards he had ordered to follow the girls around were standing against the walls as they ate and talked, and as he scanned their faces and postures, one of them seemed to stand out against the rest. There was something about the way he watched the two Omegas that made Hunter want to rip his spine out, and he knew enough about his instincts to trust when something felt off. He continued to observe the soldier as the meal went on, remaining silent and somewhat concealed.\n\nIvy shifted in her seat, causing her shirt to pull down and expose a sliver more of her silky, caramel skin. The Beta's eyes lit up with excitement as he licked his lips. Was it undeniable proof that the Beta would act on his obvious excitement if given a chance? Abso-fucking-lutely not, because Hunter would never let it get that far, with this or any other overreaching male who came within sniffing distance of Ivy.\n\nHunter let out a low growl, glaring threateningly at the offensive soldier. All six Beta guards snapped their heads up at the menacing sound, and the girls fell silent, sensing the growing tension. Hunter kept his eyes on the Beta who, even now, displayed some ill-defined characteristic that rubbed him the wrong way. His growl deepened as he thought about the fact that the little shit had been around the girls for hours without Hunter's presence.\n\nAella cleared her throat and rose gracefully from the table. \"You know, now would be a great time to explore my own rooms and get settled. Thank you so much for hosting me, Ivy. Why don't you come over to eat breakfast with me in the morning?\"\n\nIvy smiled and nodded. \"That sounds nice.\" Aella beamed at her, and then walked away from Ivy and Hunter toward the far wall and the door connecting their adjoining rooms. Three of the Beta guards followed close behind, having been assigned to stay with Aella whenever the girls were separated.\n\n\"Get out,\" he barked to the Betas assigned to Ivy, stepping away from the door to let them leave. \"Stay close,\" he directed. As the soldier he'd been uncomfortable with came closer, he stepped in front of the door, preventing him from leaving. \"You look at her like that again, and I will tear you, limb from fucking limb, do you understand me?\" he said quietly. The boy nodded, the stink of his fear saturating the air. Ivy remained silent, despite the anger he felt resonating from her side of the bond. Good girl. She was learning.\n\n\"Leave. You won't be back. Tell First Lieutenant Levi you'll need another assignment because you couldn't keep your mind out of the fucking gutter while guarding the two Omegas on base.\" He stepped aside to let the Beta scoot around him. When the little shit was gone, he looked up at Ivy, who had narrowed her eyes at him and crossed her arms over her chest. \"Was that really necessary?\" she asked, clearly irritated with him.\n\n\"Yes.\" He didn't elaborate. Ivy huffed and pushed back from the table to stand, ready to escape him by locking herself in the luxurious washroom, the only place she could lock him out of.\n\nOf course, Hunter had the key. But she didn't need to know that unless it became necessary for him to use it.\n\n\"Come here,\" he said sternly, holding out his hand. She rolled her eyes, but she changed directions, and instead of heading into the washroom, she came to stand in front of him. He suppressed a smile, pleased with yet another sign of her growing sensitivity to the effects of the pair-bond. She refused to take his hand, but she'd done well by coming to him when bidden, and he counted it as a win.\n\nHe put his hand on her lower back, and instead of allowing her to lock herself away, he walked her into the washroom with him. Pausing to turn the faucet on and fiddle with the temperature controls for the massive clawfoot tub, he stopped her in front of the mirror, methodically undressing himself behind her while he watched her face in the reflection.\n\nHer gaze roam over his broad chest and shoulders, muscular arms, and jagged abs. He had avoided showing her much of his skin outside of her first estrous, preferring to keep his clothes on even as he stripped and explored her toned, beautiful body.\n\nA long time ago, when he'd been too small to prevent it, and before he'd been big enough to stop it, scars had been put on his body by a man who had ultimately paid for his actions with his life. She had seen them before; she'd traced them with her fingers like lines on a map. She'd learned the texture of them, and knew how they felt on her tongue. But outside of her estrous, it was... different. More difficult to expose old wounds without the drugged haze of her hormones. In estrous, the body pleasuring hers could have been anyone's, and he found comfort in that as much as he resented it. He did not like to show signs of his weakness.\n\nBut Ivy had her own scars, and he very much liked the way she was looking at him now.\n\nThe quiet hiss of his belt sliding through the loops in his pants seemed to fascinate her, and he watched her pupils dilate. He watched her as she watched him. Her eyes fell to where he always seemed to be rock hard anytime he was even remotely close to her. She bit her lip, and through her shirt, the hard buds of her nipples became visible. Did she even realize the ways her body gave her away? She could play at reluctance, but by the time he was ready to slide into her tight little pussy, she was never anything less than enthusiastic. He wondered what it would take for her to beg for it.\n\nNot a whole lot, that was for damn sure.\n\n\"Ivy.\" She looked up, their eyes meeting in the mirror's reflection. God, he could lose himself in those emerald depths. \"Take your clothes off.\"\n\nShe nodded absently, but he didn't give her a chance to do it herself. Slipping his fingertips beneath the hem of her shirt, he slowly moved up, revealing more and more of her tantalizing caramel skin as he bent to kiss and suckle her neck. \"Lift your arms,\" he whispered, trailing his lips against the shell of her ear. Pliant and calm, she did as he asked, and dragging his hands up in the same languid speed, he slipped the shirt over her head and let it fall to the floor. She wore no bra, and he groaned at the sight of her bare torso in the mirror. He cupped her small, firm breasts, flicking the dusky, hardened buds of her nipples with his thumb as he rolled his hips, pressing his erection into the cleft of her ass.\n\nHer chest began rising and falling rapidly. She watched with hooded eyes as he unbuttoned her jeans, raking his nails gently down her toned thighs and calves as he slid them down to the floor, prompting her to step out of them, one at a time. His arms wrapped around her middle when he stood up, dwarfing her with his height.\n\n\"Look at yourself,\" he murmured, delighting at the goosebumps he elicited with a single, sensual touch.\n\n\"Hmm?\" Distracted, her eyes fluttered closed, lost in the moment. But he had other plans for her. He wanted her painfully aware of this thing between them. He slipped a hand between her legs as his other hand pinched and twisted her sensitive nipples. One finger dipped into her core to collect her slick. She hissed at the first touch of her clit, rolling her hips against him as he made slow, torturous circles until the little bundle of nerves engorged and pulsed. His fingers abandoned her nipples to slide up her neck. Grasping her chin gently between thumb and finger, he growled against her ear. \"Look. At. Yourself.\"\n\nHer eyes fluttered open, and as soon as they focused on her own writhing body in the reflection, he sped up. Pumping two fingers in and out of her clenching core, his thumb pressed against her clit. He kept his fingers on her chin and kissed the sensitive spot behind her ear. \"You're drenched, Ivy,\" he groaned against her neck, and it was all he could do not to bend her over and fuck her into the vanity when he felt her hips buck against his rapidly thrusting fingers. She couldn't deny it. Slick already coated the inside of her thighs and ran down her legs with no provoking growl. He hissed, pulling her back from the edge, slowing his movements until she whined and writhed, desperate for the friction she knew would make her come. He pulled his fingers out of her, bringing them up to her lips as she watched him, her eyes heated and slightly unfocused. \"Suck,\" he commanded, bringing her own juices to her lips until she opened to accept them. She moaned, her eyes fluttering closed as she swirled her tongue around his soaked digits, and he pushed them further back, only stopping when he reached the soft spot at the base of her throat.\n\nHe took her hand and wrapped it around his cock, as it pulsed and hardened in her hold. \"Do you feel what you do to me, little Poison?\" he growled, nearly losing control when her hand slowly started stroking him. \"You drive me crazy,\" he whispered. Ivy shivered. \"Look.\" He jostled her chin gently, drawing her eyes back to the mirror, watching her watch herself suck her slick off his fingers as she fisted and pumped his cock. She fucking exuded pure sex.\n\nIvy had been a virgin when he took her through her first estrous. Her defiance was infuriating at times, but when he was able to push her past all the bull shit, this was underneath it all. And this wasn't just a female he had really good sex with. Not just a sexy female who knew how to handle herself between the sheets. Not even an Omega whose pussy was biologically designed to grip his cock like a vice and milk it dry of his seed when he came.\n\nIvy transcended all of that. Everything she was right now was entirely real; brutally honest; inarguably raw. He could handle Ivy's anger and defiance. Her infuriating ability to find the surest, fastest way into trouble was a bit more of a struggle, but even that... It was for moments like this that made it all worth it, when she was, utterly, entirely, 100% his. \n\n\"Mine,\" he growled, unable to hold the word back. He glanced over his shoulder to find the tub halfway full. \"Come here.\" Pulling her backwards with him until they reached the edge of the tub, he lifted her in with an arm banded below her breasts. He stepped in, letting her slip down his body before he tugged her down with him and settled her on his lap, her back pressed to his front. Gathering her rich, chocolate locks in one fist, he slipped a hand between them to position his cock. Without being prompted, she braced herself on the sides of the tub and lifted.\n\nHe needed her so much it physically hurt. Notching himself at her entrance, he wrapped her gathered hair around his fist and tugged back, pulling her closer. \"Take it, Ivy.\" She moaned at the raspy, lust-thick quality to his voice and let herself fall, impaling herself as he grew impossibly hard in the silken heat of her tight cunt. \"Fuuuuck,\" he hissed, her slow descent killing him in all the best ways. His teeth found the still-swollen indents of his claiming mark, and he bit down, making her yelp as her core spasmed. He grunted like he was in pain, and no longer able to hold himself back, he wrapped one arm above her breasts and another across her hips and yanked her down until he was fully seated. Her sharp intake of breath was the only outward sign that he'd caused her any pain, but he knew his mate better than she thought, and her discomfort, real discomfort, spurred on the caretaker in him.\n\nGiving her time to adjust, he traced his mouth over the smooth, soft lines of her neck and shoulder, playing with her nipples until she began to clench around him and move on her own.\n\nHe moved with her, bracing her little body as she rocked her hips back and forth on top of him, helping her chase her pleasure while fucking her with full, hard thrusts. His finger found her clit, and she arched her back and whimpered. Warm water lapped over the rim of the tub as the waves they made broke against their bodies. \"Oh fuck. That's it, Ivy. Take it,\" he grunted, sensing she was close. He waited until she was right on the brink, teetering on the edge of her orgasm, and then he closed his teeth over the mark on her neck and pressed his fingers firmly to her clit. \"Come, Ivy. Come now.\"\n\nShe rarely let herself say his name, but when she came on his cock, she screamed it. He covered her mouth with his hand and wrapped his arms tight around her torso as he held her still and pounded into her, his movements fevered and unforgiving, the rhythmic squeezes of her cunt setting off his own dizzying climax. He felt his knot start to form and shoved into her as deep as he could get, and then he came, and came, and came. Hot spurts of thick cum filled her belly as they locked together, and he pulled her tight against him, holding onto her like a drowning man, and pressed his brow to the back of her head.\n\nHunter pulled Ivy back against his chest as they caught their breath. His arms crisscrossed hers and he stroked his thumb against her skin. He treasured these quiet moments with her. When she allowed him to simply hold her and care for her until his knot abated, he could imagine his life filled with nothing but happy moments like this. He looked forward to that life, he craved it, and nothing would stop him from having that life with the precious creature cradled in is hold.\n\nAfter a while, when the temperature of the water began dropping and he felt Ivy beginning to fall asleep, he reached across to the small stone shelf beside the tub to grab a washcloth and a bottle of very lightly scented lavender soap. He preferred Ivy with her natural scent undiluted by perfumes or lotions, but he had noticed she preferred the soothing smell to others when given a choice, and had procured a small arsenal of light purple gels and creams.\n\nWhen the washcloth was sufficiently sudsy, he began massaging her shoulders, neck and arms. She groaned, her head bent forward, her tight muscles relaxing under his touch. He moved to her front, focusing on her perfect breast and peaked nipples, the lavender suds making her smooth skin slippery. She sighed and sank into him further.\n\n\"How are you getting along with Aella?\" he asked her as he continued to run his soapy hands over her perfect skin.\n\nIvy tensed. \"You mean, the lovely soul?\"\n\nWas she... Was she snarling? He chuckled. \"You're jealous.\"\n\nShe scoffed, and he could almost see her rolling her eyes. \"I'm not jealous,\" she protested. \"You were just being ridiculous.\"\n\nHe was quiet except for the deep rumble of his purr, enjoying the knowledge that his polite, expected comment toward another man's Omega had irritated her. He was constantly reminded of how new she was to all of this. She had even offered her hand to the General, a completely inappropriate action on her part. He didn't blame her for it. Today was most likely her first time being anywhere near another Omega. It would all come in time, and she met more of her own dynamic.\n\n\"I don't like him,\" she said sleepily. He didn't have to ask who she meant. He thought about not saying anything, or even defending the General, but decided against it.\n\n\"I'm not sure I do either,\" he told her truthfully.\n\nShe laughed at that. Fuck, he would gladly kill to hear that sound more often.\n\nIvy hadn't been the best judge of character recently, but she wasn't too far off the mark with this one. Hunter had been seething as he'd watched Maverick look her up and down. If Aella hadn't been there, he would not have tolerated it, and he certainly wouldn't allow it to happen a second time.",
        "\"You will stay away from him. If he is there when you are with Aella, you will come back to our room. Understood?\"\n\nIvy sighed. \"Anybody told you how obnoxiously bossy you are?\"\n\nHe frowned. \"Of course I am. And you will do as I say. I am your Alpha.\"\n\nShe snorted. \"Because that's worked out really well for you so far.\"\n\nHe stopped purring and let out a low growl. She tensed at the sound, wiggling her hips to test the knot. It was securely hooked behind her pelvic bone, with no hint of abating. She was stuck, her back to him, unable to watch his storm cloud eyes shift and narrow.\n\n\"I am trying to keep you safe, Ivy, but you like to make things difficult.\" She squirmed against his knot and he gripped her tighter. \"Listen to me.\" He jostled her just enough to make sure he had her full attention. \"In this, you will not question me. You will not go near him, and you will leave if he comes near you. Is that clear?\"\n\nHe watched the back of her head bob as she nodded.\n\n\"Words, Ivy,\" he warned.\n\n\"YES, Hunter, I understand.\"\n\n\"Good girl.\" He resumed purring, and she fell silent, eventually relaxing back into him again. Just as he was sure she had fallen asleep and was contemplating getting out, she spoke again, so softly he could barely hear her.\n\n\"I'm having nightmares.\"\n\nHe stiffened. He didn't want her thinking about that. Not now. Not yet. \"I know you are, baby.\" He kissed the top of her head. \"I know.\"\n\nHe purred louder, and this time, he listened to her breathing even and slow, trailing his fingers up and down her arm and holding her until the water turned cold.\n\n.......................\n\nAella was the key.\n\nThe Betas had been instructed to escort her wherever she went, and to never leave her side. As far as Ivy knew, they even guarded her in her sleep, standing over her bed like creepy, surrogate stalkers. Aella was a good, submissive Omega who had never tried to escape, so the Betas had no objections to taking her where she wanted to go. And when Ivy casually suggested they take a trip to their friendly, neighborhood medical building to visit with the injured soldiers? Aella had happily agreed!\n\nIf Ivy had an evil laugh, it would have been the perfect opportunity for one. Sadly, she had tried it once, and it came out as a gasping chortle that had quite a few people inquiring about her well-being. So... That had been the end of that.\n\nIvy knew exactly where she wanted to go once they reached the building. She suggested that Aella find a larger group of injured Betas to visit with, along with her chaperones, while Ivy took a quick step into a darkened room with one, solitary soldier. Perhaps understanding more than she let on, Aella just smiled, nodded and walked away, the conflicted Betas finally following her and leaving Ivy behind.\n\nThere he was. Wires, cords and tubes stuck out of him in all different places, at all different angles. Screens and monitors spit out vitals, EKG tracings and brain activity. The works. She hadn't seen a Beta soldier so well treated since she arrived here. Actually, she had never seen any Beta taking up this many resources. Ivy thought back to the first night she had been trapped in the room with Hunter, how he had yelled at her for risking her life for disposable Betas. That's how they were treated. As disposable.\n\nIvy found a chair in the corner and dragged it over to the side of Kentucky's bed. Brad. Kentucky had been his nickname, but there were a few occasions Ivy had used his real name, and he had used hers. At the time, Ivy considered those occasions intimate moments where they shared something personal, something true. Now she knew it was all just bull shit. Everything about him was a lie. Fake. Traitorous.\n\nSo why was it so hard to look at him like this, suspended between life and death, machines around him whirring and working to keep him breathing, keep his heart pumping? Why did she care? Why was she here?\n\nShe wished everything could just go back to the way things were. What a hot mess. She wanted to go back to Chid FOB and just be a normal Beta medic again. She wanted this to all be just a really bad, long, crazy lucid dream.\n\nSomething stirred inside her chest. She swallowed hard, past the lump in her throat. She wanted to reach out and run her fingers through his dark hair, to touch the tanned face she had crushed on for years.\n\n\"What the fuck, Brad?\" she said softly. \"You're a fucking bastard, you know that?\"\n\nThe machines beeped. The ventilator whirred. The blood pressure cuff inflated and then displayed the new reading on a glowing screen.\n\nShe stood up. She shouldn't be here. There were no answers for her here. The body in front of her wasn't the Brad she had known. She would mourn the loss of her friend, but this wasn't him. It had never been him. This asshole had tried to use her, had tied her up and knocked her around and attempted to hold her for ransom. Fuck that. And fuck this guy.\n\nShe walked to the door and didn't look back. On her way out, her eyes were drawn to a tiny red dot in the upper corner of the room. A camera. They were watching him.\n\nShe flipped the camera off and walked out.\n\n..............................\n\nAella looked down at her swollen belly and rubbed it lovingly. Pink glitter sparkled from her freshly painted nails as Ivy's eyes traced the pregnant Omega's circling hand. The poor girl had tried to include Ivy in her little arts and crafts project. As much as she wished to stay in Aella's good graces, she hadn't been able to hold back the snarl in response to being approached with the insidious little pink brush of glitter and doom. The older Omega was far too polite to admit to being frazzled, but Ivy wasn't stupid. The two Omegas were incompatible, at best. Still, it was pleasantly surprising how far Aella seemed willing to go to be friends. Or, at least, to be friendly. And there was something about her that, despite practically living in different universes until very recently, was oddly endearing. It was easy to be around her, even when she didn't particularly want to be easy to be around.\n\n\"It's very romantic,\" her would-be friend was saying, a faraway look stealing over her face as she gazed at the far wall. \"It's like a fairy tale, isn't it? How he found you, hidden away in the middle of nowhere, like a lost princess?\" she sighed. \"Tell me about how he saved you.\"\n\nIvy looked up, startled. Fairy tale? Princess? Saved? \n\nWhat in the fuck?\n\n\"Wh... He... That's not, no...\"\n\n\"Oh, I can be so insensitive! It must be difficult to think about. Just forget I asked.\" Ivy watched her for a moment, noticing a strange sadness in the way she stared off at nothing. Pale blue eyes locked on hers and the older girl seemed to shake off whatever sad thought had made her look lost and empty. Then, in the next minute, Ivy thought she must have imagined it as Aella smiled conspiratorially. \"I can't say I'm not a little jealous you were claimed so quickly by such a wonderful Alpha.\" She sighed and looked down at her hands. \"One day, maybe. Perhaps after the baby comes.\"\n\nIvy looked at her quizzically. Her eyes were drawn to the bare skin on the Omega where her own claiming marks were still an angry, swollen red. The area was smooth and creamy, the skin flawless.\n\nFlawless.\n\n\"He didn't claim you?\" Ivy asked, her eyes widening. That was a fucking option?!\n\nAella flushed, her eyes remaining downcast. \"Not every Omega is gifted a pair-bond by their Alpha. It's so... permanent. So special. Some Omegas are just not considered worthy enough.\"\n\nIvy's mouth dropped open at the revelation that the pair-bond was fucking optional. Never mind the fact that this poor, brainwashed, delusional woman thought that she, and all other Omegas, had to be considered worthy enough to be claimed. A gift. What absolute garbage.\n\nShe could see the desolation in Aella's eyes as she continued to pat her belly fondly. Maverick-dude, the jackass, had impregnated this gorgeous, sweet female, had dragged her out here into this wretched, bullshit conflict, in a dangerous forest, and he hadn't even given her the one thing she obviously, desperately wanted from him.\n\nMore than that, he had made her feel that she was fucking unworthy of his mark.\n\nShe had the sudden urge to reach out and grab Aella's hand, to assure her that if anyone was unworthy in this situation, it sure as fuck wasn't Aella. Her blood boiled as she remembered the arrogant, self-assured face of the asshole who was obviously fucking with this poor girl's head. She waited a moment, let the silence fill the empty space between them, and then gave in to her urge and reached across to grab the Aella's slender fingers. She didn't say anything, though. She just held on and hoped the gesture would be understood without having to say the words. Keeping her eyes on their joined fingers, Ivy squeezed once, and was surprised at how good it felt when Aella squeezed back.\n\nThe pair-bond thrummed in a peculiar way that was not entirely unpleasant, even as white-hot anger flushed through to her core at the memory of how her own obstinate Alpha had made that particular decision for her. She wanted to assure Aella that the pair-bond was not all it was cracked up to be, that it punished her when she was being insolent or stubborn, that it sometimes made her physically ill with whatever unpleasant emotion or mood her tormentor was in. She opened her mouth. \"Aella, trust me, it's not --\"\n\nThe door across the room flew open, slamming against the wall, and Maverick-dude's massive frame filled the doorway. His mud-brown eyes were dangerously bright as he glowered down at the two Omegas seated comfortably on a white leather sofa. Ivy shot to her feet, every muscle tense at the sense of dangerous fury emanating off the aggressive Alpha in nearly-visible waves. He stalked toward them menacingly. Before she could react, he had reached down and snatched Aella off the couch, his oversized hand buried in her sunshine silken hair. He yanked violently, forcing the Omega to her feet and pulled down so that her body was bowed backwards, her neck exposed. Aella cried out, her hands clutching his thick, muscular forearms.\n\nA threatening growl vibrated through the room. It took a few seconds for Ivy to register that it was coming from her. Adrenaline pumped through her veins like a potent drug, and she fell into a defensive crouch, ready to spring. Aella's face was twisted with pain, her breaths coming in panicked gasps.\n\nThe Alpha's low growl drowned out her own. \"Took a little field trip today, did you? Decided to parade around medical, like a whore?\" His voice, already low and filled with the threat of further violence, dipped down another octave. \"Without my permission?\" His grip in Aella's hair tightened, and his other hand came up to curl around her neck. Aella whimpered, crying out hoarsely when the hand around her throat gripped tighter.\n\nIvy froze, some dark memory circling closer and closer to the surface of her consciousness. Her eyes flicked down to the holster wrapped around the Alpha's torso. Acting on instinct, Ivy's hand shot out and grabbed the 9mm semi-automatic from Maverick-dude's holster, and without hesitating, she spun around and pointed the barrel at his skull.\n\n\"Let her go, you motherfucking psycho,\" she snarled, baring her teeth in response to the icy glare the Alpha cast her way. \"Don't think for a fucking second that I won't put a bullet in your head. I would enjoy it, actually,\" she said, loading the chamber with a round and flicking the safety off with a satisfying click. \"I'm fucking sick like that. Now, back off!\"\n\nMaverick yanked down once more before releasing his grip on Aella and dropping her to the floor. Aella gasped and sobbed, clutching at her throat. \"I'm sorry,\" she croaked, and fresh fury flowed through Ivy's veins. This motherfucker was going to pay.\n\n\"Don't fucking apologize to him,\" Ivy growled. The Alpha turned to face her fully, his murderous eyes, the dirty-underwear brown of his pupils a swirling storm of shit fury, bearing down on her. She supposed she should be intimidated, but he was the one with a fucking barrel pointed at his pretty face, and all Ivy felt was rage at the asshole's violent treatment of his Omega.\n\nHis pregnant Omega, and the first person who had been sincerely kind to Ivy since before she could remember.\n\n\"You don't have a fucking clue who you're attempting to threaten, do you?\" His voice sent involuntary shivers up her spine, but she stood straight, her chin thrust up, refusing to back down. \"You can't even begin to imagine the things I could do to you. Go ahead, little girl. I fucking dare you.\"\n\nIvy shook her head as if to clear it. His sinister words were meant to throw her off, to distract her so he could take the weapon away from her, and she snarled and stepped out of his reach as his hand shot out in an attempt to do just that.\n\n\"Get the fuck away from me, asshole.\" He took another step forward, and Ivy pointed the gun down, aimed at his right kneecap, put her finger on the trigger, and --\n\nA hard body barreled into her from out of fucking nowhere, forcing her up against the wall with unbelievable strength. Air was forced from her lungs and she grunted, her grip on the firearm slipping as a large hand wrapped around her wrist and squeezed. The gun fell to the floor with a disappointing clatter. As Ivy's brain struggled to catch up, Hunter's tornado-wild eyes penetrated her own. He looked ready to tear her head off.\n\nIvy swallowed hard.\n\nOkay, this was bad. She had crossed a line. A big, thick fucking line, etched into pavement. She could feel his fury vibrating through her, cutting like a hot knife through the place below her sternum and spreading through her body like ripples in a pond.\n\nHer rage, momentarily forgotten in her initial shock of her Alpha's dominating presence, answered his own.\n\n\"He fucking deserves it, Hunter! He's an abusive fuck, and she's pregnant!\" She attempted to look over his shoulder at the offending male. \"You get off on that, big guy? Knocking around your defenseless, pregnant Omega?\"\n\n\"Control your bitch, Lieutenant.\" The dick had the audacity to address her Alpha by the lower rank of his title, and she bristled at the insult. Her Alpha was powerful and strong, deserving of his full rank.\n\nWait, where the fuck did that thought come from? Ivy brushed it off quickly. She'd address her insane defensiveness later.\n\n\"Pick on someone your own size, asshole,\" she shot back, her tense body ready to spring, if only the Alpha currently caging her in with a hand on either side of her head would just let her go.\n\n\"Enough, Ivy.\" Hunter's voice was low, and too soft, full of anger and authority and the threat of punishment. Ivy stilled, fully registering for the first time the looming threat staring out from behind her Alpha's eyes. Her lips pressed together, the spark of fury over Aella's mistreatment suddenly dampened by a sensation of suffocation. She felt the steel cage of his arms close around her, felt herself being lifted and carried away. She wasn't sure if the horrible tension oscillating between them was from the bond or from the menacing growl saturating the suddenly thick air, but in that moment, she was more afraid of Hunter than she had ever been.\n\nBefore she could fully process what was happening, the adjoining door between the two Omega's rooms was being slammed shut and she was being deposited on the velvety blue couch that was inexplicably collecting more and more pillows and blankets. Her instincts screamed at her to flee, and without thinking, she darted out from underneath him and bolted for the door. It was fucking useless, she knew it was, but at that moment, she could think of nothing outside of getting away, far out of range of the furious Alpha's grasp.\n\nShe got as far as the washroom door, but before she could yank it open, a strong hand caught her around the waist and hoisted her back the way they came. Setting her down again, he caught her forearm in an iron grip and spun her around. She mindlessly snarled and scratched at the hands that gripped her shoulders and pushed her against the decorated navy-blue wall.\n\n\"WHAT THE FUCK DID I TELL YOU, IVY?\" The beast bellowed, and she was sure every Alpha in the barracks could hear his irate words. She flinched and shrank back.\n\nShe had forgotten the sheer magnitude of Hunter's size and strength, his ability to snap her in half like a twig. She took it for granted that her Alpha wouldn't harm her, that she was safe around him. But having to face down the full force of his rage, all of it directly at her, shook her to her core.\n\nHis grip on her arms tightened and he shook her. \"ANSWER ME!\" He barked. She worked to swallow down the bile rapidly rising up her throat, trying, quite unsuccessfully, to stop shaking. Her eyes burned as her breathing shallowed.\n\n\"You told me to stay away from him,\" she answered, her voice shaky and small.\n\n\"And did you fucking listen!?\" His voice was only marginally softer, his grip only diminutively looser, but it was enough to convince her that there was a small chance she would not, in fact, lose her life today.\n\nShe shook her head. Negative. She did not listen. But she felt no remorse for her actions. That slimy motherfucker deserved every ounce of her anger, and if she had the chance again, she would have pulled the trigger and laughed at him as his knee exploded. But again, she wasn't a total fucking idiot, and she knew instigating the simmering temper of the man in front of her was not what she wanted to do right now.\n\n\"No, you fucking ignored me, like you always do, and like you always do, you put yourself in danger. FUCK Ivy, do you have ANY FUCKING IDEA what would have happened if you had fired that gun? Do you just not realize that there are consequences for your fucking actions?\"\n\nShe pressed her lips together. He was treating her like a misbehaving child, and her initial terror at his outburst was quickly wearing off. He was glaring at her, waiting for an answer. Well, all right then.\n\n\"You think that I'm the one who needs to be reminded about consequences? Did you know about the way he treats her? Do you know he lays his hands on her, and makes her feel like shit about herself? She did nothing wrong, Hunter! I'm the one who convinced her to go to medical, and she only agreed to go because I persuaded her to visit the injured soldiers.\"\n\n\"Yes, let's talk about your little trip to medical, shall we? Besides the fact that I was explicit in my instruction to stay in the barracks, you placed both yourself and Aella in danger by walking straight into the one place on base enemy soldiers would have access to you. And for what? So you could see the little fuckhead boy who wanted to rape and ransom you?\" His stormcloud eyes gleamed dangerously. \"I should have killed him the day he laid his fucking hands on you back in Chid, and as soon as we're done here, I'm going to rectify that mistake.\"\n\nAn inexplicable sense of dread churned in her stomach. \"What? No!\" Why the fuck did she care about what happened to Kentucky? Hunter was right, he was a complete fuckhead, but the thought of Hunter littering his unconscious body with bullets made her sick to her stomach. \"Don't, Hunter. Please. I'm sorry!\"\n\nFury flashed across his face as he glowered down at her. His big palm cupped the back of her head and gripped her hair, pulling her head back to face him fully. \"You are mine, Ivy. Do you fucking hear me? You're MINE. The only reason he was kept alive was for answers, but since you seem bound and fucking determined to put yourself in constant reach of people who want to hurt you, I'm just going to have to start killing them off before they have a chance.\" He leaned down and came nose to nose with her, his jaw tensing. \"And make no mistake, Ivy, he wanted to fucking hurt you.\"",
        "She met his glare, her eyes burning from the way he was still gripping her hair. Immediately, his fingers loosened, and she took a shaky breath. \"Just like your buddy wants to hurt the pregnant Omega he keeps like a fucking toy?\"\n\nSomething dark passed across his face, and he released her and stepped back. He raised his hand and brushed the back of his fingers along her cheek. \"You're brave, my little Poison, and you are selfless. You want to save everyone but yourself.\" The same fingers brushing her skin cupped her jaw and lifted, forcing her to look up at him. \"But you are na\u00efve, and sometimes foolish, and your little escapades are over. Aella is not my mate. You are my mate, Ivy. I care about nothing other than keeping you safe, and if I have to chain you to the bed and lock you in until we leave Torrin, I swear to fucking god, Ivy, that's exactly what I'll do. Do you understand me?\"\n\nShe saw the cold determination in his eyes and swallowed her anger, remaining silent.\n\n\"Do. You. Fucking. Understand me?\"\n\nShe nodded, and he released her jaw. \"Good girl.\" Leaning down, he buried his nose into the crook of her neck and inhaled. One big palm gripped her hip while the other slid up under her shirt, his fingers finding the top of her bra and pulling down to free her breast. Heat rushed to her core as he rolled her nipple between two calloused fingers. She bit her lower lip, dizzy with this sudden turn of events. He closed in on her, pressing her up against the wall, and she felt the hard length of his cock pushing against her stomach. The hand on her hip found bare skin and travelled lower, sliding under her jeans and panties to cup her sex. Her breath hitched and he growled his approval, finding her folds already wet with slick.\n\nWith aggressive movements, he stepped back and all but tore off her jeans, yanking them down around her ankles and lifting her up to free her fully. Strong hands slid up her torso and lifted her shirt over her head. Her nipples tightened in anticipation, and distantly, she wondered at the phenomenon that was their fucked up pair-bond, at how she could go from fearing and hating this man to craving and desperate for his touch. It made no sense, but there was no choice in the matter, her body completely divorced from her mind when it came to Hunter and the way he made her feel.\n\nWhen she was fully undressed, he lifted her up and walked her over to the bed, crawling over her supine body as he hoisted her up toward the pillows. His mouth covered hers, and she parted her lips as he settled between her thighs. The kiss was harsh, punishing and possessive, and she rose to the challenge, enthralled when the coppery taste of blood answered her sharp bite on his lower lip. He growled against her mouth and broke away, leaving her breathless and dizzy. She groaned as a gush of slick covered the hand he slipped between them, her body responding to the Alpha's steely length pressing against her inner thigh and the thumb stroking her clit. He reached for his belt, working to release his cock from the scratchy material of his uniform.\n\n\"Wait,\" she panted, and placed her palms against his chest. \"I want to see you. I want to see all of you.\"\n\nHe hesitated for half a second before lifting off her. She leaned up on her elbows and watched him peel off his clothes. She knew the reason for his hesitation, had seen the small, circular scars along his upper arms and the thin lines across his back, and knew he didn't want her to see proof that he was not an invincible, untouchable Alpha god. But for Ivy, it humanized him, and she felt oddly comforted by the sight.\n\nThere was nothing wrong with being a survivor.\n\nShe watched as he slowly revealed himself to her. The corded muscles in his arms rippled with each tense movement. His shoulders were impossibly broad. The light tan camouflage of his uniform stood in contrast to his bronzed skin. His chest and abs were a study of sharp lines, and her tongue darted out to wet her lips as she remembered the feel of him against her mouth\n\nHis movements were brisk and purposeful, no single ounce of effort wasted. It was less strip-tease, more clinical removal of garments. She fought the impulse to roll her eyes. It was ridiculous, how big he was. How one person could have all those muscles, she had no idea.\n\nWhen he was done, he crawled forward again, cocooning her body with his. His mouth moved to the sensitive place where her shoulder met her neck and found his claiming marks, biting hard enough to break the still-healing skin. She yelped and bucked beneath him, but it only made him clamp down harder, a threatening growl stilling her as his teeth dug into her tender flesh.\n\nStupid biology. \n\nTwo thick fingers began to fuck her, and despite the pain he was inflicting with his bite, or maybe because of it, she felt a terrible tension coiling her tighter and tighter. Just as she reached the edge, grinding into his palm to increase the friction on her clit, he pulled his hand away and released her neck, his thick tongue lapping up the fresh blood.\n\n\"You're mine, Ivy.\"\n\nAh, there it is. The reason for the sudden shift from menacing bully to implacable sex machine. She was his conquest, and the events of the day, coupled with the reminder of his challengers, had pushed him fully into possessive Alpha mode.\n\nAnd like a good little Omega, she was responding to the claiming, her body positively thrilled to have his heavy weight pressing down on her, her pussy aching to take him in and affirm his dominion over her.\n\nStupid fucking biology. \n\n\"Say it, Ivy,\" he growled against her neck, his knees spreading her legs wider. She gritted her teeth against the overwhelming desire to follow his command, to submit, to confirm his ownership of her.\n\nDon't say it, don't say it, don't say it. The pair-bond stroked her mind, loosening her resistance, urging her to just let go and concede.\n\n\"Say it,\" he demanded. He fisted his cock and positioned the thick head against her entrance. She bit her lip, sweat beading on her brow from the effort it took to keep her mouth shut. A growl rumbled from deep in his chest and her pussy wept at the sound, coating his hard length with her slick.\n\n\"Ivy...\" his deep voice rumbled, the infliction of her name thick with warning, and she could hold back no longer.\n\n\"Fine. FUCK! I'm yours. Fuck you. I'm fucking yours. Happy?! Now fuck me.\"\n\nThe pair-bond hummed, delighted at her, albeit growly, concession, and magnified the sensation of ecstasy and satisfying fullness as he thrust his full length into her. \"God, FUCK!\" she screamed, her head thrown back as her body arched up to meet him against her mind's better judgement. He chuckled softly and pressed his full weight against her as he reached for her wrists, pulling them over her head before intertwining his fingers with hers. At first, he set a tortuously slow pace, pulling all the way out and sliding back in with frustrating leisure, letting her feel every inch of his length stretch and fill her. Releasing a hand, he hooked his arm under her knee and brought it up, spreading her wide. He shoved into her then, impossibly deep, the tip of his cock grazing her cervix with every merciless thrust.\n\nAgain, that terrible tension coiled tight in her belly. She could smell him, his overwhelmingly perfect scent that was all good things at once. He groaned as he rocked into her, and the sound of him losing himself to the pleasure was enough to send her tumbling over the edge. White hot euphoria washed over her in undulating waves, and she felt his knot expanding, stretching her already strained inner walls, making her gasp and arch up off the bed. Her Alpha roared as he found his release, the sound primal and animalistic, the male triumphant in his conquering of the little female beneath him. Liquid fire pumped into her womb, her pussy milking his cock of his seed.\n\nShe hated herself for giving in.\n\nHe supported himself on his elbows as they both caught their breath, his hands framing her face, wiping strands of hair from her damp brow. He pressed his lips to her forehead, and despite her better judgement, she felt a warmth spread through her chest and vibrate down through the pair-bond.\n\nHer skin was still tingling from lingering shockwaves, his cock occasionally twitching inside her as her tight walls pulsated around him. He flipped them both over, letting her sprawl on top of him as he began to purr. She felt herself relax, drugged and sedated by the post-orgasmic bliss and the soothing sound that was not quite a sound. He wove his fingers through her chocolate-colored hair, brushing out the tangles, as his other hand stroked gently up and down her back. She felt herself falling into a mindless stupor, and this time, she welcomed it. When his knot abated, he lifted her and carried her to the shower. He continued to purr, allowing his hypnotized Omega run her fingers across the thick, pearlescent skin of his scars.\n\nBack on the massive bed, he pulled her close, her back against his chest. She felt his warmth surrounding her, his purr reverberating tranquillizingly through to her core. Her thoughts drifted to the dangerous space between present and past. With a thick, steel arm wrapped around her middle, the lethal Alpha holding her securely against him, she considered her earlier fears. At times, he gripped her too tightly, forgetting his own strength. When she flinched or grimaced, he would always loosen his hold. Aside from some rough sex, which she certainly didn't mind all that much, Hunter's violent tendencies had never been directed against her.\n\nIn fact, the only time she had seen him kill was to protect her.\n\nHaving met her first Alpha/Omega couple, she noticed the stark differences. However this fucked up situation had started, Hunter was mostly okay.\n\nMostly.\n\nAlso, what the fuck was she going to do about Aella and that prick?\n\nThe oversized Alpha shifted under her, interrupting her lovely daydreams of vengeance. \"We will be leaving Torrin in a few weeks. Things will be easier for you when we are home in Lostra.\"\n\nIvy stiffened. Home? She hadn't thought at all about what would happen when they left this place and rejoined the real world. From experience, she knew that returning from a deployment was always difficult. Little things became overwhelming. Like, why the fuck were supermarkets so big? Who needs all that choice? How the fuck are you supposed to choose which detergent to use, or what brand of cheese to buy? Ridiculous.\n\nOn top of all that, she was going to suddenly be thrust into an entirely different world than the one she had left. A world where her Dynamic defined her, where it didn't matter that she knew how to stabilize an injured soldier while under fire, or how to stitch up a laceration with needle and thread when supplies were low. A world where her only job was to look pretty for the big, scary Alphas she had always hated from a safe distance.\n\nShe thought of her reliable little car. Stick shift, because fuck manuals, amiright? But also, very old, and very beat up. Would she be able to keep it? Would he even let her drive? What would his home be like? Ridiculously opulent, she suspected. Would she meet his parents? Did he even have parents?\n\nFuck. She was mated, claimed and conquered by a man she didn't know the first thing about.\n\nWith a million questions on the tip of her tongue, she drifted off into oblivion, beckoned by the elusive Alpha's purr and his lethal hand stroking gently through her hair.\n\n..............................\n\nThe little female medic slumped her shoulders, trying to shrink into herself in the presence of the irritated Lt. General. Hunter took a deep breath, trying to tame his growing frustration. The Beta fuckhead who had abducted Ivy had woken up, and instead of informing him of this particular development, the idiot doctor had ordered this girl to sedate him again. He made a mental note of the physician's name. It was time for a new medical director.\n\nHunter looked down at the cowering medic. \"Relax, soldier. You were following orders. Now, I am giving you new orders. You will personally watch this room and you will call me directly as soon as you see the Beta stir. You will stay away from his room, you will only watch from the camera feed. If he needs something, you will send in one of the soldiers I will assign to you. Understood?\"\n\nThe female came to attention. \"Yes sir. Understood, Lt. General.\"\n\nHe grunted. \"Dismissed.\" He watched the girl walk away to the small, dark room where black and white screens displayed the camera feeds of seven different beds. The seven hostile survivors of the Torrin invasion. A low growl escaped his chest at the thought of the idiot medical director sending in a little female to sedate a Beta traitor. The female medic's hair was a similar shade to Ivy's, although she was missing the honey colored streaks that glowed in the sun. She wasn't much bigger than Ivy, and if the traitor had tried to grab her, Hunter had little doubt he would have been able to subdue her.\n\nThe physician would have lost his job for disobeying direct orders to report developments concerning the traitor. Now, for endangering the little Beta female with chocolate colored hair, he would lose his rank as well.\n\nHunter reached for his firearm, wrapping his hand around the grip and brushing his finger against the trigger guard. He wouldn't kill the Beta while he was unconscious. He wanted to look the boy in the eye before he died. He wanted him to know exactly what he was dying for.\n\nLaying his hands on Ivy had been a huge fucking mistake."
    ],
    "authorname": "ReckingBall",
    "tags": [
        "omegaverse",
        "alpha",
        "omega",
        "military",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/poison-ivy-ch-05-1"
}