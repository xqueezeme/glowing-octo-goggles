{
    "title": "Secret Diary of a Vampire Teen",
    "pages": [
        "This story has been already published somewhere else, I thought I'd have the literotica community enjoy it as well. There's a second part in the pipes slowly building up there, but as soon as it's finished I'll post it here too. As usual all comments are welcome and most importantly, enjoy!\n\n***\n\nI know, I know, I know.\n\nYou normally don't start a secret diary at eighteen, but what can I say, I carry a secret and I can't talk about it to anyone... So I have to write this diary. On my desk there's the diary of Anne Frank, another teenager who wrote a diary and therefore I think I'll call you Anne. That way I'll have the impression of talking to someone.\n\nSo... Anne... Nice to meet you, my name is Sandra, I live in a medium sized suburban house with my parents Tom and June Nix in the outskirts of a big city. Which one, you ask? Does it really matter? We have a dog and a cat too. Well the cat died a couple of days ago... I'm kind of responsible for that... I'll have to tell you about it later. We have a garden in the backyard and a couple of cars. I go to George Washington High School, it's three blocks down the road. I'm not the most brilliant student of all but I have a huge excuse I have sleeping problem... But we'll come back to that later. My two best friends are Helen and Lila, Helen is a good student and Lila has her character but I love them both very much. I used to have a boyfriend but I think he kind of got bored of having me falling asleep all the time.\n\nOh yes... And I'm a vampire...\n\n1.\n\nLet's begin by telling you how it all started\n\nWell Anne, that's actually quite a mystery. I have strong suspicions about last Halloween but I have no way of being sure. \n\nLet me tell you about it. I was born on October 31st so Halloween has always a big party for me. I usually have a big dinner with my family and then I would go out trick or treating with my friends. The last few years the trick or treat part has been an excuse to go out unsupervised. Well last Halloween, as I turned eighteen, I had the regular dinner with my parents and then I went out with Helen, Lila and a couple more friends from school. We went to this big party with lots of people coming from all the schools of the region, there were also some guys from the university. \n\nAs it was my big birthday I started drinking as soon as we got there. I was pretty drunk when this guy, Matt, I think his name was, came to me. He was really nice. He said he went to the university. So we started to talk, he was really interesting. Problem is after that I've got a big blank. Not a clue what happened after ten. \n\nHelen told me later that I disappeared for a while, a couple of hours or so, and that when I came back I looked extremely pale and I had some blood on my clothes. Lila and her drove me home, sneaked me into my room and left me there.\n\nNext thing I remember is waking up the next morning with the worst hangover of my whole life. Dry mouth, sizzling headache, thirsty as hell and damn horny. The sight of the day light was absolutely unbearable. So I stayed in bed for the whole day. It was Sunday so my parents assumed that I had a bit too much fun and decided to let me sleep through it before grounding me for a month... \n\nIt was six or seven PM when I finally convinced myself to get up. I stumbled to the family bathroom to take a shower. I turned on the hot water only, I felt so cold. After a while I got out and looked at me in the mirror. That's when I saw the bruises. Now I know perfectly well what they are but at the time they looked quite strange. Deep purple bruises the size of quarter separated by a couple of inches. I had two on the neck, two on the thigh and I nearly missed the last two because they were hidden by my pubic hair. I touched them and was immediately ravaged by a terrible orgasm.\n\nAnne, I hope you're not prude because I will tell you a lot of things like that.\n\nAnyway... What was I telling you? Ah yes... The bruises... Well ... It felt so good that I lost track of time touching them until my mother brought me out of it knocking frantically on the door. I wrapped myself in a towel and found refuge in my bedroom.\n\n2.\n\nAs I was telling you, my dear Anne, I wasn't able to sleep, at all. I kept staring at the ceiling for the whole night. I still felt terribly thirsty and horny but sleep refused to come; I actually started to feel sleepy the next morning when the sun started to rise. Now I know why but at that point I only thought that it was because I had slept the whole Sunday.\n\nMy mother dragged me out of bed because it was Monday morning and because I had to go to school. I felt so tired, it was terrible and the sunlight was so hurtful but you know how parental authority is so I crawled out of bed, had a quick shower, got dressed and walked down for breakfast.\n\nThere I was told about my punishment. That was one hell of a way of starting one hell of a week. I went to school. I managed to keep composure until the precise moment our first teacher started to talk and then I feel asleep on my desk. Around ten another teacher sent me to the principal's office but as soon as I got there and sat to wait for him to receive me I felt asleep again. They tried to wake me up but it didn't work so they carried me to the infirmary where I spent the rest of the morning sleeping. \n\nAround four Lila woke me up. She was genuinely preoccupied but I managed to partially wake up and walked out of school with her. The nurse tried to stop me, telling me that I needed to see a doctor but after a while she let me go. \n\nI didn't feel like going home right away as I knew that my parents would prevent me to get out again so we went to a park and we sat on a bench as the sun was setting. As soon as it disappeared behind the trees, I found myself overwhelmed by an incredible energy. I felt so great that I started dancing around. \n\nAt first Lila laughed at me. But soon, probably because my happiness was contagious she started dancing with me. After a long time we fell into the grass below the trees into each other's arms. \n\nShe stared at me. I stared at her. It was strange, her hands around my neck, my hands around her hips. I felt the urge to kiss her. I tried to resist but then she closed her eyes and parted her lips. Incapable of reason I dived in. Her lips were warm and wet, she tasted deliciously fresh. For a long moment we stayed there, laying on the ground.\n\nMy mobile brought me out of it. I look at the time, it was late, and then at the caller, my dad. I was in pretty big trouble. I turned to Lila who was still on the grass lost in her thoughts, in our kiss.\n\nI felt terribly embarrassed.\n\n\"I have to go, we'll talk about it tomorrow.\"\n\nAnd I ran away towards home and an extra month of grounding.\n\n3.\n\nSo I ran home and my father was waiting for me on the porch. My father is usually a really nice and comprehensive guy, but that night he was simply furious. The atmosphere during the dinner was extremely tense. Nobody talked. Despite the fact that I hadn't eaten in nearly forty eight hours, I nearly touched my plate. I went straight to bed but once again I was unable to sleep. \n\nStaring again at the ceiling I started thinking about the kiss. It was odd, I had never been attracted to girls. My parents are liberals and they've would have accepted me even if I had been gay. I had always known that. But I had always been into boys. I discarded it as an experiment. \n\nBut I couldn't shake the memory of the warmth of Helen's tongue against mine. Absent mindedly I started teasing the bruises and once again I felt submerged by an incredible sensation of bliss. Wrapping my legs around my pillow I started rocking my hips, brushing the fabric against my pussy but also against the four bruises, the two on my thigh and the two inside my bush. \n\nOrgasm after orgasm I left myself drift away in a sea of pleasure ...\n\n- Nice metaphor, Sandra... \n\n- Thanks Anne...\n\nUntil suddenly, as I was rubbing my tongue against my teeth I felt a sudden prick and my mouth filled with a delicious and tepid liquid. Out of surprise, I swallowed some of it and was sent to stratospheric levels of pleasure I had never experienced before. \n\nIt was so intense that I fell from my bed.\n\nMy father stormed the room just a few instants later with a baseball bat in his hand.\n\n\"Sandra? What the Hell was that?\"\n\n\"I... I don't know... I'm sorry I fell from the bed.\"\n\nHe turned on the light.\n\n\"Sandra, are you all right, you've got blood on your lips.\"\n\n\"Blood?\"\n\nI brought my hand to my mouth and looked at it, realizing that the tepid liquid - not warm just tepid - was actually my own blood.\n\n\"I... I must have bit myself,\" I answered in trembling voice as the pleasure was still grinding my guts. \n\nMom appeared just behind my father. \n\n\"Honey? Did you hurt yourself?\"\n\nI ran past them covering my mouth with my hand and locked myself in the bathroom. I grabbed the edge of the bathtub to let the orgasm wash away. It took some time... When finally I was able to get a hold of myself I walked to the medicine cabinet behind the mirror. I took out some gauze and closed the mirror. I stack my tongue out and looked at it for the wound.\n\nBut I froze. My tongue despite the nasty cut it displayed was not the most interesting thing in the mirror. No the most amazing thing that my reflection sent back to me was actually my canines. They were at least twice as big as the rest of my teeth... I stood there for a long long while...\n\nA vampire could it be?\n\n4.\n\nOkay, so I was there in the bathroom staring at my face with those two fangs sprouting from my upper jaw. I must confess that I was totally terrified. Nothing could ever prepare you for this kind of situation... Not even puberty. Okay puberty is quite unpleasant with the acne, the changes, the raging hormones but this...\n\nI went back to bed not wanting to alarm my parents and kept starring at the ceiling for the rest of the night. From time to time I would gently run my tongue over them just to check if they were still there. A vampire, could you imagine that? I kept thinking about everything, the sleepiness, the bruises, the kiss with Lila, the orgasms...\n\nOnce again with the damn first lights I fell asleep.\n\nSame process as the day before, my mom would drag me out of bed. I would crawl out of bed to the bathroom. \n\nFearing what I would see in the mirror I waited until after my shower to have a new look at my fangs. But guess what, they were gone. No more vampire fangs, no more cuts on the tongue. I felt so relieved that I nearly forgot about my sleepiness. I walked down to have a good breakfast and be able to catch up with all that I missed the day before. At that time I was still a straight A student. \n\nMy parents didn't mention the events from the night before probably not wanting to embarrass me but comforting me in the false belief that it had all been a dream. I had one bacon strip and a pancake but I didn't feel like having anything else so I just grabbed my bag and went out. \n\nI found the sun particularly bright that morning but I took out my sunglasses and walked to school. Helen and Lila were waiting for me. I looked at Lila but she smiled at me candidly and we walked to class. I managed to stay awake during most of the morning dosing off for a few seconds here and there. \n\nAt lunch I tried to talk to Lila about what had happened the day before but she didn't seem to remember anything from the park. Was it all part of the same vampire dream?\n\nAnyway, day went by and I went straight home. I had a nice evening with the parents, we watched a movie and I went to bed. But once again I wasn't able to sleep. The next few days would go on the same principle I would not sleep at night, try not to sleep at school, but I started to feel hungrier and hungrier and nothing seemed to appease me.\n\nNothing exceptional happened until the next weekend.\n\n5.\n\nThe next weekend I was exhausted, I had managed to sleep only a few hours every morning, sneaking out at lunch for a short siesta in the locker rooms. It was terrible. So Saturday morning I slept until noon. \n\nMom came to wake me up for lunch but I begged her to let me sleep. She tried to speak to me but I fell asleep before the end of her first question. I woke up once again at four. I grabbed my phone and found a message from Henry.\n\nOh yes, that's true I didn't tell you about Henry. Well I told you that I had a boyfriend, right? So his name is Henry, he goes at the same school I do; senior as well but in another class. There are two senior classes in my school by the way. \n\nThat thing with Matt you ask... Well I'm young and Henry wasn't at that party and ... Oh stop looking at me like that. Yeah I know it's wrong and I could tell you that I fell under his spell and all; but to be perfectly honest well... I did had something wicked behind my mind when I went and talked to Matt. Hey it's not every day that a guy from the University hits on you...\n\nAnyway at that point Matt was a long gone memory and Henry had left me a message asking me if he could come over. I went to my dad and asked him. He frowned trying to look tough but finally he accepted. Dad, is, as I already told you, a very nice guy. So I sent a message to Henry telling him that he could come over before dinner. \n\nHe arrived just ten minutes later and we locked ourselves into my room. My parents are liberals I also told you so there's no problem about that...\n\nSo I was there sitting on my bed. Since I had missed most of what had happened that week at school Henry was bringing me up to speed. I tried to concentrate but all I could think about was the thirst that was torturing me. At some point he stopped and looked at me.\n\n\"Sandra? Are you listening to me,\" I think he asked.\n\n\"Hum hum,\" I answered despite the fact that I hadn't been listening to him at all.\n\nIn fact I had been staring at his throat, at his Adam's apple going up and down, the line of his shoulders. Unconsciously I ran my tongue over my teeth and once again the fangs were there. You have to understand that, on that Saturday afternoon, with all that had happened that week and with the lack of sleep, I had completely forgotten about the vampire \"dream\". \n\n\"Ouch!\"\n\nI cut my tongue again and again I was submerged by an absolute feeling of bliss. I convulsed on the bed and dozed off. \n\nWhen I came back to my senses, I was laying on the bed and Henry was standing over me. Apparently just a few seconds had passed. He looked so worried. I felt sorry for him. I brushed my fingers through his hair and forced him into a kiss. His tongue was warm against mine. He instantly closed his eyes and I did the same. His hand slipped under my T-shirt, playing with my breast through the fabric of my bra. \n\nNormally I would have protested but I was so absorbed by the delicious heat of his lips that I didn't stop him. My panties were soaked wet. I like Henry, honestly, but I never found that he was such a good kisser. Too much lip, too much tongue, but this time, this time was just exceptional. He was so warm and so delicious.\n\nWhen finally I left him go, he had a little string of red saliva at the corner of his mouth. I licked it closing my eyes. It tasted so good.\n\n\"Wow, that was intense!\" I said.\n\nHe didn't answer. I opened my eyes and looked at him. He was far far away and he looked pretty worn off. \n\nNoticing that I was talking to him, he opened his mouth letting a large quantity of blood pour down his chin. At the sight of it I could control myself and I pulled him by the collar and resumed our kiss. \n\nOnly this time I knew, I knew what I was and what I needed. I could no longer lie to myself, I had to face the facts ... Although it took me sometime to grasp the full extent of my situation, at that moment I had no choice but to accept that I was now a Vampire.\n\nHis tongue was cut on so many places that the flow of blood in his mouth did not stop. And I drank from him. His hand first on my head, fell down on my hips before hanging on his sides. I could hear his heart pumping more and more blood towards me. \n\nFinally I broke the kiss. He crumbled on the bed. I was completely absorbed by the pleasure of my first taste at human blood that I left him there, dribbling his red saliva on my pink quilt. The nightmare it would be to clean those stains... \n\nAnyway, I was there sitting on the edge of my bed and on the edge of yet another orgasm, when mon knocked on the door. \n\n\"Honey? Are you guys all right?\"\n\nIt took me some time to answer, but I managed to drive her away with a vague excuse. I turned around and looked at the room, Henry was hardly breathing on the bed. I lifted his head and left it fall back on the bed. He was completely out. I took its pulse... Steady, a bit slow, but steady. My pussy was still drenched and I needed some relief. So I dropped my pants, sat at my desk and started caressing myself. \n\nAfter a while I managed to take the edge off got back into my pants and went back to the bed. Henry was coming to his senses.\n\n\"What?\" \n\nWere the first words coming out of his mouth. Soon followed by:\n\n\"What happened to me?\"\n\nI tried to explain but he had no recollection so I settled for an excuse in the lines of:\n\n\"You hit your head.\"\n\n\"But my mouth hurts.\"\n\n\"Yup, you fell face first.\"\n\nHe finally went back home leaving me all alone with my questions and fears. At the moment I cursed myself for my spinelessness. Had I told him the truth he could have helped me with the \"new me\" but after what happened next I know for a fact that you, Anne, are the only one who can help me cope.\n\nAnyway Anne it's getting late so I should go to bed. I really need my two hours of sleep every night... I have a test tomorrow and I can't fail it if I want to go the University.\n\n6.\n\nNow let me tell you it works\n\nWell, to start with I'm essentially a creature of the night. The thing about the sun killing us, or me - so far except for the prick that made me, I'm the only vampire I ever met - is total crap. But during day time I tend to be extremely tired. At the beginning it was a nightmare but I must confess that I manage it much better now. Technically I sleep between five and seven and then at school I try to get a few naps here and there. Essentially during lunch time as a matter of fact. Since I don't have to eat anymore...\n\nThe cross and garlic thing is as much bull as the sun thing. I end up going to mass every time my grandmother is in town and I honestly feel no discomfort in the house of God, except for the absolute boredom, of course. The garlic no problem either, I am known to enjoy my pizzas with lots of it between my friends. The stake through the heart? Haven't tried it yet... Not planning on doing so anytime soon.\n\nYes I said I don't need to eat, not that I couldn't. Blood is absolutely delicious but can you imagine having to go through life with only one type of food ... What I eat I crap completely unchanged, a bit of a waste but well... Furthermore, blood is not only a food thing there's the sex that goes with it. Well the sex... I have eaten quite a few animals and promise, my dear Anne, I'm not a zoophile. But drinking blood makes me so horny, it's shameful. Technically I need to drink around a pint, pint and a half of blood every week, but well that's the lower limit and except for one time when I was completely alone and unable to find anything else but some rats and a raccoon - I'll tell you about it someday - I never stuck to such a little quantity. \n\nFangs, yes, I have fangs, two nice pointy and razor edged fangs where my canines used to be. They are retractable pretty much like those of a snake only mine look much cooler than the ones you can see on TV. No small girlie things in the front like in True blood or those ugly things they have in From Dusk Till Dawn and they can grow much longer than on the Vampire Diaries. I honestly don't understand how they expect to feed with those pathetic excuses for fangs... Anyway, two fangs, upper jaw, they come out when I'm about to feed or when I'm horny. The rest of the time they stay in two small sockets in my skull. I had an X-Ray once just to understand...",
        "What else... Mirrors, ha! I'm glad the mirror thing is false as well. I would the most obvious give away and so far humans still believe that we are myth. Come on if this was true, YouTube would be flooded with vids of it.\n\n7.\n\nPowers? Let me see...\n\nI can see pretty well in the dark. And that's pretty much it...\n\nNah just kidding, powers, yup I have lots of them. \n\nFor instance I'm clearly much faster than before. How much? It's hard to tell. I believe it depends on the time of the day. During daytime, I can run pretty fast if I have to, faster than anyone I know. During the night it's completely something else. I'm not Louis that can turn on the light in the room and get back to sit in front of you in the blink of an eye but, once, I managed to catch up with a car that was running away from me at full speed. I think there's also a question of motivation and probably the time since my last feeding affects that too. For strength, stamina and all the other physical feats, we're more or less on the same structure.\n\nFlying? No or at least if I can I don't know how. \n\nTurning into bats and wolfs and all that... Nope neither. How could you fit so much me in so little bat? \n\nThe mesmerizing gaze, I'm not too good at it. I can influence people to do things they would have done, not force them to jump from a bridge for instance. What I can do but it's more or less unconscious, is make you forget about things and this is not limited to my victims. For instance, I'm in the locker room of my school, it's lunch break and I'm having a little fun with Amalia the head cheerleader. You step in and you find us, her totally under spell of my saliva and fangs, legs spread, her pink panties on her ankle and me a bit sheepish, between said legs, the face covered in her blood. I can promise you that the moment you step out of the locker room, you won't remember why you were screaming your lungs out... \n\nMy saliva, that's a great thing. First, it has curing properties. This way I can rip your throat out - well not exactly, if I rip your throat out you bleed and die - but I can stick my fangs into your arteries, take what I need and then leave you with only two nasty but small bruises separated by a couple of inches. Second, there are the best aphrodisiac on the market, whether you ingest it when I kiss you or it goes directly into your blood flow when I bite you, you'll have the strongest hard-on of your life if you're a guy or you'll be squirming of pleasure if you're a girl. It's quite useful with all those premature ejaculators out there. I can guarantee you that.\n\nFor the immortality thing, I must be honest I don't know, it has been a couple of months so I really couldn't tell you. What I have is great healing abilities, nearly Wolverine like. I have been stabbed, thrown through a window, run over by a train, shot, twice and I'm still here. And actually no scars to brag about it. So I'm really hard to kill, now will I live forever...\n\n8.\n\n-How about turning me?\n\n-Turning you? Anne don't be stupid, you're a figment of my imagination...\n\nNow if your question is if I bite you will you turn? The answer is no. If I give you my blood, will you turn? The answer is still no. If I give you my blood after bleeding you. No again. I know I tried and it didn't work, sadly. \n\nTo be honest I don't have a clue on how to turn a human into a vampire. Is it genetics? I don't know, I fed from mom once and she didn't turn. Is it something else something magic, a ritual? Once again I don't know ... but I doubt it.\n\nI can't tell you. I'd love to find out but I don't know where to look. All the crap in books is usually fiction and my maker I haven't been able to lay a hand on him... \n\n9.\n\nWhat about telling me what happened to you today, I'm your diary after all...\n\nGood point there. So let's start by putting a date to this...\n\nMay 12th \n\nOkay, so Anne, today was more or less a regular day. Mom dragged me out of bed. I think that she's starting to get used to my nocturnal habits. The finals are in three weeks from now and I can't bust them. I've been using part of my nights to study and I managed to correct the trend of bad marks that followed my transformation. \n\nI had a quick breakfast, recently I'm into coffee and waffles. The hot coffee reminds me of blood and I think that caffeine has a slight effect on me and the waffles are to make Mom happy. On the way to school I met with Lila, we talked about University answers. She got one positive from a local institution. She said it would be better because this way she would stay to live with her parents, but I know that she's actually pretty disappointed. I can't blame her.\n\nWhen we finally arrived at school the bell was ringing so we rushed into our respective classrooms. The morning was quite dull. At noon, I went to the locker room, tucked myself on a bench and started to sleep. When I woke up, Amalia, the head cheerleader was going through her locker. \n\n\"Hey,\" I said.\n\n\"Hey,\" she replied.\n\nI think Amalia is getting a bit addicted to my bite. Not consciously, of course, she never remembers when I feed off her. But she must have associated those meetings we have in the locker room with fading memories of extreme pleasure, and of course with her panties being soaked. She has been sneaking on me like this for the last few months. I don't want to take too much from her because despite her bad attitude she's a nice girl deep down and although I am a vampire, I don't like to kill people, at least not the ones that don't deserve it. Mind you the notion of deserving is quite relative.\n\nSince my last feeding from her was around the beginning of last week I decided to have a quick bite before we both had to go back to class.\n\n\"Hey Amy, do you have a soap to lend me?\"\n\nI love Amalia's beauty cabinet. Her father works in a perfume store and she always has those delicious small round French soaps bar that come in all colors and aromas. \n\n\"A soap?\"\n\n\"Yes I forgot mine at home and I seriously need to hit the showers.\"\n\nShe looked at me puzzled as I slowly bended her will for her to join me.\n\n\"Yes of course,\" she finally said, \"I was actually going to take a shower myself.\"\n\nThere you go.\n\nA few minutes later we were both naked in the large shared showers. Her hair full of shampoo, I looked at her. I really love Amalia's body. All the exercise... I stepped out of my shower and joined her under hers.\n\n\"Sandra!\"\n\nShe tried to protest but I could feel that the same part of her subconscious that forces her to come and wake me up every other day to get her fix is telling her to let it slide. With my fingers I brushed through her long wet hair. I tip toed to reach her lips and planted a quick silencing kiss on her lips. I let her go. To the aroma of the French soap mixed the most delicious fragrance, the smell of the pussy of fresh young girl blossoming. She parted her lips and let out a faint moan. \n\nI didn't check my watch and I didn't have clue how long I had slept, not wanting to be late to Geology class, I decided to take the quick route. I dropped to my knees, lifted her leg and slipped a couple of fingers into her magical cave. She stretched back in pleasure offering me her perfectly shaven pubis just a few inches away from my face. I could have bitten her there but I turned around, lifted my lip and sank my fangs into her thigh. \n\nThe thigh is a good place to bite, no bones, a great artery and so close to the delicious smell of that intimate place we all have. The pubis on the other hand is bit harder to bite. On top of that Amalia is a squirter and I'm not too fond of my blood ending up mixed with too abundant vaginal secretions. A bit gives it flavor but too much will drown the taste.\n\nAmalia was quite happy with my choice as she made it abundantly clear tearing a couple of strands of hair from my skull. Her blood is quite pure, not yet polluted by the drugs and fat the rest of the kids abuse off today. After a few seconds I licked the wound and let her leg go. \n\nI stepped out of her shower and went to mine. I cleaned, dried myself and got dressed. When the bell rang, Amalia was still looking blankly at the wall. I smiled before rushing into the hallways toward the biology lab.\n\nThe rest of the afternoon went uneventful. After school I came back home and had a nap. My mother woke me up for dinner. After the news, I excused myself for the evening and then I started studying. \n\nAround three, I was browsing through a box of things that Dad took down from the attic last weekend for me to sort and either throw, sell or keep and I found this old diary that my aunt offered to me on a birthday a few years ago. It has a smiling witch riding her broom, a large pumpkin and a caped Dracula on the cover. \n\nI start to write and that's how you were born, my dear Anne... \n\nAnyway I need to sleep for a bit, hopefully I can write something tomorrow, or maybe the next day.\n\nGood night Anne.\n\n10.\n\nMay 15th \n\nI'm sorry I didn't write to you over the weekend but I was quite busy. We went on a camping trip with Helen, Lila, their respective boyfriends, Freddy and Quentin and this new guy, Tomas. I guess wanted to hook me up with him... The intentions were good but I'd rather not keep a boyfriend at the moment. It might be interesting and funny to try it in the future but I doubt I can manage my time with such a burden with the exams coming and my already fully booked schedule. \n\nSo we left on Saturday morning, we drove to the mountains in Lila's father car. It's a big minivan from the sixties. It broke down but Lila is quite good with her hands and she had it running in no time. Well at least that's what they told me because I slept all the way to our camping site.\n\nA bump in the road woke me up. According to the sun and my watch it was nearly three in the afternoon. We stopped in a clearing overseeing the forest. Helen and Freddy wandered into the forest to get wood for the fire and Lila and Quentin went for water. I was left alone with Tomas. We started setting up the tents for our little retreat, four of them around what would a large campfire, a large table to protect our food from the predacious ants and the back of the truck open on a pretty decent bar. It took us half an hour to have everything ready and then we waited for the other four. We sat looking at the forest. \n\nThe idea of this trip had come from Lila. It was supposed to be our last weekend of freedom before the last run towards the finals, so she insisted that we go this place where she had spent so many weekends as a kid with her parents. Helen's parents took some convincing, mine didn't has I had started to bring back good marks again. Of course none of the parents new that there were going to be boys, mine wouldn't have cared but Lila's and Helen's might have ruined our plans had they known.\n\nTomas was nice. A few months ago I would have probably considered the option of dating him but now... Anyway, he told me that his parents had moved from California because of his dad's work, he was to take over a little wood factory a few miles away from the city. I listened to him and answered his questions as well as I could. For a moment, I managed to forget about my condition and I must confess that it was quite pleasant. Quentin and Lila were the first to come back, soon followed by Helen and Freddy. After a couple of hours we were out of beers and we attacked the liquors of a more dangerous capacity. \n\nThe sun fell over the forest and the boys prepared the barbecue. We had dinner and then we sat around the fire. Helen had been horny all afternoon; I could smell it so when a little bit later Freddy and her took the excuse of getting more wood to sneak out into the forest, I knew what they were up to. The stench of her pussy had me salivating all afternoon and five minutes later I stood up arguing for an urgent call of nature. I followed them into the woods. My heightened senses allowed me to find their track in no time. \n\nBetween the large roots of an old oak, I spotted them laying on a bed of fresh moss, kissing. Freddy was on top of Helen a hand in her pants. I stood there and observed them as Helen reached her first orgasm. I approached them silently until I was just behind them. I cleared my throat. They jumped, Freddy's hand left my friend's pussy with a delicious wet noise and Helen tried to cover her breasts by pulling on her sweatshirt.\n\nI kneeled as they looked at me with both shame and rage in their eyes. I bent and kissed Helen's lips, instantly putting her under my spell. Her eyes rolled back for a second as a wave of pleasure took over her. Freddy was about to protest but I gently laid a finger over his lips as Helen started to nibble on my neck. My hand fell on the hard rod that was trying to get free of his shorts. I smiled. Helen's mouth trailed up my neck and she started to suck on my earlobe. \n\nI closed the gap between me and Freddy and I gave him a long kiss. He was now under my control too. I started stroking him. I could feel he was close but I didn't mind. The moment he was about to come, I pulled on the waistband of his shorts to release him and left him spread his seed all over Helen's breast. The remains of my saliva in his system forced almost instantly a second erection on him. From experience I knew this one would last longer so I forced him to take me from behind. I pushed Helen deeper into the soft moss and my finger slid into her wetness. My mouth found its way to her breast and my fangs tore the skin just on the edge of her brown areola. \n\nBlood vessels in the breast are many but they are tiny and therefore there's not much blood to be taken from there. On the other hand, biting someone there will be extremely enjoyable for her and I find the tits to be quite pleasant to suck on... They were made for that after all.\n\nHelen's blood was deliciously sweet and I came the moment it ran down my throat. My pussy squeezed around Freddy's cock before letting him go with a strong stream of squirt. He moaned before coming into my guts. \n\nI was the first to walk back to the camp. Lila, already pretty far gone, made fun of me for taking so long. I quickly turned the tables around and laughed with Tomas and Quentin about her not holding her liquor. Helen and Freddy walked out of the woods twenty minutes later. They looked a bit lost but since I had left them more or less in the same position as I had found them they didn't seem to recall about me joining them, they reeked of sex and sweat. Their smell mixed with the scent of the burning wood soon made me horny and thirsty again.\n\nI offered everyone to play spin the bottle. They laughed saying it was a child's game but after some discussion, Lila stood up and went for one of the empty vodka bottles at the back of the minivan. Since I had proposed the game everyone insisted for me to spin the bottle first. Tomas forced Quentin to switch sides since he was directly to my left. He stared at me smiling and I winked. But he wasn't the first one to fall.\n\nInadvertently the bottle designated Lila to his right. The guys started cheering as I made my way to her wiggling my ass around. I hadn't fed from Lila for a long while but I still remembered the first time we had kissed, in the park. She was uneasy but as soon as my lips rubbed against hers she closed her eyes remembering the pleasure too. I went back to my spot and waited for the bottle to come back to me. Lila, already started up by my kiss, left her hand on Quentin's leg. She wasn't ready to go for his dick yet but I knew it wouldn't take long. \n\nThe bottle span four times before pointing back at me. Lila kissed Freddy. Freddy kissed Tomas, we all laughed. Tomas, in retaliation, forgot about me and span the bottle towards Helen. Helen kissed Quentin. And finally Quentin crawled back to my lips. I went for Helen then, taking the time to enjoy the taste of Freddy' cum still lingering in her mouth. At that point Lila's hands were inside Quentin and Tomas shorts. Within minutes, Quentin and Freddy joined Helen and Lila under my control. It took nearly ten more minutes to get to lick Tomas' lips but under the shy hand of Lila he was already horny as hell.\n\nThe bottle ended up in the fire and our clothes piled up at the edge of the light. Lila fucked Quentin, Quentin fucked me, Helen got fucked by all three guys as I drank Lila's blood from her pussy, Tomas fucked me and Helen, Lila fucked Quentin and Freddy, Freddy fucked me while Helen and Lila kissed each other, their butts torn respectively by Tomas and Quentin. I drank from everyone and it went on all night. The first lights of day saw me carrying everyone to their respective tents. \n\nI woke up around two in the afternoon. Lila was shaking my sleeping bag, she told me that they were all packed and ready to go. I turned around to find a sleeping Tomas by my side. I had left him in the fourth tent but I guess he had crawled back to me at some point during my sleep.\n\nNobody seemed to remember what had happened after the bottle had started to spin. But I guess that everybody's sore genitalia made them suspect of something. As I was reputed to be the one who held her alcohol best they all tried to have me spill the beans but I told them a nice little prude story about everyone going to sleep around three AM. \n\nI slept all the way back home. \n\nI'm going to study now and get a couple of hours of sleep before going to school. \n\nAnne I must confess that this idea of diary is just great. I would have hated not to be able to tell anyone about this weekend. \n\nGood night dearest Anne.\n\nTalk to you soon.\n\n11.\n\nAnne, I think I'm in deep shit...\n\n-Date?\n\nSorry...\n\nMay 16th \n\nAnne I think I'm in trouble... There's something wrong with both Lila and Helen.\n\n12.\n\nLet's start with Lila\n\nAnne, Lila is onto me.\n\nHow could it be? I don't have a clue but yesterday morning when I arrived at school Lila was sitting in a corner of schoolyard and when I approached her, she stood up and walked away. She looked terrified. At first I didn't understand and I thought I was mistaken.\n\nA bit later during literature class - it's one of the classes we share - she would normally be sitting next to me only this time she arrived really late and she sat by the door. I tried to follow her the moment the bell rang but when I reached the corridor she was nowhere to be seen. I went back to class and the rest of the morning passed really slowly. At lunch instead of going for my nap I looked around for her. She wasn't in cafeteria, she wasn't in the yard, she wasn't in the library, so I went on looking around for her. Finally as I was losing hope I picked up her scent and followed it to the bathrooms.\n\nI entered, the last stall was closed and I could hear silent sobs coming from there.\n\n\"Lila?\" I asked, \"Are you in there...\"\n\n\"No,\" her voice was shaking with fear.\n\n\"Lila, come on don't be a child, come out and talk.\"\n\n\"No go away, leave me alone...\"\n\n\"Lila, you've got to tell me what's wrong with you...\"\n\nI hate it when a friend of yours tells you that everything is fine when it's obvious that everything is clearly not fine.\n\n\"I'm fine leave me alone.\"\n\n\"Lila, I'm your friend you've got tell me what's wrong.\"\n\n\"No you're not my friend, you are a monster, leave me please, don't ever talk to me again...\"\n\nI stood there shocked. How could she know? How was it possible? \n\nAnd then it all came back to me. Contrary to what I told you yesterday, over the little orgy this weekend, I did not feed on everyone. I fed on everyone but her... \n\nI could perfectly picture the scene, I had already fed from everyone and Lila's neck was a few inches from my fangs. I was about to strike when out of nowhere I can feel someone's hands spreading my butt cheeks and just second later a dick penetrates deeply into my ass. Caught by surprise, I looked back and saw Tomas smiling at me. The moment I turned around again Lila was out of my reach on her knees sucking on Quentin's dick. Tomas was actually doing such a good job that I decided to leave Lila's blood for later. Problem is later never came...",
        "What I don't understand is that even though I did not bite her, my memory erasing powers should have kicked in, they didn't.\n\n\"Lila, don't be stupid... It's me Sandra...\"\n\n\"You're not Sandra, you're a monster, the others don't remember but I can...\"\n\nShe started crying again.\n\n\"What are you talking about?\" I said trying an approach I knew would fail eventually.\n\n\"You made us do things... And then there was the blood, all that blood...\"\n\nI was starting to panic, I didn't how I could get out of this one. I was about to say something else when Lila stormed out of the stall and rushed out of the bathroom. I could have perfectly stopped her but it would have only made things even worse. The bell rang and I went back to class. She didn't show up later for Math and when finally school was over I went through school trying to find her. \n\nAfter a while I finally managed to find someone who told me that he had seen her going out of school just after lunch. I went to her place and knocked on the door. Her mom answered. She told me that Lila had dropped by in the middle of the afternoon but only to go out again with a sports bag. Lila practices Krav Maga at a local Dojo so I went there but nobody had seen her since last week.\n\nNot knowing where to look I went back home. Around nine, Lila's Mom called to ask me if I had seen her. They had tried to call her but she had refused to pick up. I tried to reassure her but I'm terrified. \n\nWhat can I do? \n\n13.\n\nAnd then there's the trouble with Helen\n\nI don't know how to put it. Let me tell you what happened.\n\nHelen hadn't shown up at school. I called her in the morning but she didn't pick up. The trouble with Lila made forget all about it. After talking over the phone with Lila's mom, I decided to go to Helen for help. Maybe she would have a couple of ideas on where Lila might have gone to hide. I tried to call her but once again no one picked up the phone. I grabbed a jacket and got out. I told my parents I would walk for a bit and that they shouldn't worry. \n\nAnyway, Helen lives a couple of blocks away from my place so I walked there. When I reached her home, the doctor's car was parked just outside. I knocked on the open door and let myself in. I found Helen's parents sitting with the doctor in the living room. The doctor said something in the lines of, let her rest, she has low blood sugar, in a couple of days she should be back on her feet, he said he had seen quite a lot of those cases in the recent months and that there was nothing to worry about. I said hi. They all turned around. Helen's mon and dad looked quite preoccupied. I asked if I could see Helen. They looked at the doctor and he nodded. I thanked them and went up the stairs. \n\nI had a bad feeling about this. It happens from time to time that I take too much from one of my victims forcing him or her to rest for a couple of days but Helen? I didn't understand, considering the large number of sources I had fed there was no reason why she should be in this state. I had controlled myself, had I?\n\nI knocked on the door.\n\n\"Come in,\" Helen said.\n\nI entered; she was still in her pajamas, sitting on her bed. She looked happy and a bit worried too but she was also pale... extremely pale. I stopped for a moment at the door step. There was something lingering in the atmosphere, something that bothered me, something I knew and I liked but that could have not been here except... This thing, this smell was, for lack of a better word, the scent of soaked undead pussy. \n\nYou see, when you have senses as developed as mine, you're able to sense and identify very subtle changes in scents. Human pussy secretions have this texture, this heat that I can identify, on the other hand, my own secretions being much colder carry a very specific signature and this signature, I smelled it in the room and it clearly didn't come from me. \n\nI walked to the bed sat by my friend.\n\n\"How are you?\" I asked fearing the answer.\n\n\"I... I don't know... I feel great I think.\"\n\nI could remember my own first hours as the vampire virus spread through me. She smiled at me.\n\n\"We had a bit too much fun Saturday didn't we?\"\n\n\"I guess...\"\n\n\"I woke up this morning with a terrible headache, I slept most of the day but now I fell so good... As soon as the sun disappeared being the trees, I felt so reinvigorated.\"\n\nShe paused for a moment before finishing: \n\n\"... and I'm so fucking horny!\"\n\nI couldn't say a word... How was this possible? So many feedings, so many people and never, it had never happened before. How did Helen get infected? I had no answers and I was terrified. \n\nIn front of my mutism, Helen took my hand. She drove it under the blankets covering her legs, between her thighs, against her panties, her soaked panties, her cold soaked panties. \n\nI pulled my hand out of there. It was as if I had burnt myself. But it was a psychological burn. Helen misunderstood my reaction.\n\n\"Oh Sandra, I'm so sorry, I didn't mean to... But you have to understand... I'm so so horny, so thirsty...\"\n\nI ran a hand against her cheek, over her lip. I could feel them, the two sockets, I could feel them under my fingers. She parted her lips enjoying the touch of my fingers and I saw them, not as big as mine but clearly changing, growing...\n\n\"Helen, I'm... I'm so sorry...\"\n\n\"Why?\" she asked tilting her head.\n\n\"I... I don't know how to tell you this but...\"\n\n\"But what? Come on Sandra, spill the beans, what are you sorry for?\"\n\n\"I think, I made you sick...\"\n\n\"Sick? I'm not sick, I feel great.\"\n\n\"No Helen, you're not great, you're turning into a...\"\n\n\"Into?\"\n\nBut I didn't answer. I couldn't go further; I could not say the words. So I bent over and left a kiss on her lips. My own fangs almost instantly came out of their sockets. They pierced her lower lip. She backed away.\n\n\"Ouch,\" she started but she wasn't able to go any further, she was already there, her own blood, her cooling blood had reached her taste buds and she was overwhelmed by a gigantic orgasm. \n\nShe crumbled back into the blankets moaning loudly at the sensation. I stood and went to the door to lock it. I wasn't thinking straight anymore either, I needed to some of that too. I slipped out of my clothes and with only my panties on crawled into the bed. As she squirmed at the ongoing pleasure, I placed a hand over her mouth and slid a finger into her. It was strange, it was the first time I fingered another vampire. It was pleasant too, I knew how sensitive she was and I knew how good it felt for her. \n\nSuddenly I heard the doctor's car drive away in the street and Helen's parents coming up the stairs. I jumped out of bed and slipped back into my clothes. I unlocked the door and turning around I saw my bra on the floor. I pushed it under the bed the moment the door opened behind me.\n\n\"Sandra, I think it's time for you to go... Helen needs to rest if she wants to make it to school tomorrow.\"\n\nI nodded and turned towards the bed. Helen, still shaking from my touch looked feverish. I said good bye and left the house. I walked to the corner of the street and waited there. Three hours later, the lights finally went out in the house. I waited twenty more minutes and walked back to the garden. As silently as I could I jumped on the shed and from there I opened Helen's bedroom window. She was waiting for me all awake, all horny in the dark. I extended a hand. She got up grabbed a pair of jeans a white T-shirt and she joined me over the shed. \n\nShe tried to speak but I signaled her not to and to follow me. I jumped from the shed landing in the garden below. She tried to clumsily climb down and joined me on the lawn.\n\n\"That was quite a jump,\" she whispered. \n\n\"Keep up,\" I only answered before running into the street. I didn't use all my powers because I wasn't sure how strong she was and in no time we were both at the corner of her street. A block down a police patrol car crossed the street without seeing us.\n\n\"Where are we going?\" she asked.\n\nI didn't answer and started running again. We ran like that for half an hour reaching a large park on the other side of the city. \n\n\"Sandra?,\" she asked.\n\n\"Yes Helen.\"\n\n\"How... How is it possible... how could I ... could you... run so fast...\"\n\nI didn't want to answer, not yet, I had to show her first. So I turned around and kissed her. At first she resisted but she couldn't go against her own urges. She kissed me back, we rolled under the trees and there we fucked for a long time. She trembled under my fingers, under my tongue, she came.\n\nFinally I lit two cigarettes and handed one to her. We smoked silently looking at the stars in the night sky. She threw he finished cigarette butt and tried to ask me another question, but once again I had to show her, she would not believe me if I told her, so I asked her to follow me. I sniffed the air and picked up what I was looking for. I turned to her and placed a finger in front of my mouth. \n\nA few hundred yards from where we had fucked we found them, a couple kissing on a bench. With Helen on my heels, I approached them from behind. They were so much into each other that the world could have ended without them even noticing. The long woman's hair was hanging loose on her shoulders. I looked at Helen, she was starting to get it think because she didn't freak out when I smiled at her revealing my fangs. \n\nI was swift. When I sank them into the girls neck, she left out a loud scream of surprise releasing her man. I turned to him and forcefully kissed him. I left him go and extended a hand towards Helen who was captivated by the blood pouring on the woman's shirt. She walked to the girl, her nascent fangs fully extended in her mouth. A hand on her head, Helen started to drink. I patted her head gently.\n\nFinally I hold her head back and licked the wounds left by my fangs, the girl crumbled to the ground. I kneeled by her side and took her pulse. She was alright. She hadn't done the same mistake I had, she didn't need to carry the burden of a death this early in her new life. I turned around. The man was still sitting on the bench lost in his thoughts a hand on his cock, masturbating silently through the elastic fabric of his shorts. Behind the bench, Helen was sitting on her ass, licking the blood of the girl from her fingers. I sat the girl back on the bench and left them there. It was enough, enough for one night. We walked back to her place in silence.\n\nI helped her back on the shed and told her I would come back tomorrow to talk, she nodded and got back inside.\n\nI went back home, slipped into my room and now, I'm here sitting at my desk writing.\n\nOne of my friends has turned into a vampire and the other is missing in action. I have finals starting in less than a week and I don't have a clue how I'm going to manage all that. \n\nAnne, how the fuck am I going to manage all that!\n\n14.\n\nMay 17th \n\nLila hasn't showed up to school this morning Anne. Neither did Helen but she left me a message telling me that she had convinced her parents to let her stay at home one more day.\n\n15.\n\nThis morning \n\nI've been staring at Lila's empty seat most of the morning. The teachers started preparing us for the finals but despite my best effort I wasn't able to concentrate.\n\n\"... It was in February 1945 that Hitler...\"\n\n\"... And if you then make a cosinus out of the result...\"\n\n\"... RNA will define the new cells genetic identity by carrying...\"\n\nA nightmare, a simple nightmare. \n\nI tried to call her, but once again it went to voice mail. During a break I called a contact downtown. He should meet with me at noon. He might help me. Just before the last class of the morning I was called to the principal's office. As I reached the door I saw Tomas coming out. The secretary asked me to wait. She's in her mid-thirties and married to a math teacher. I sat looking at her ass as she was busy with some files. I had a run at her a few months back. She was closing the office and I was on my way home. I was still grounded at the time and the punishment was making it hard for me to find preys. So I had her right there, on her desk, her screams echoing the empty halls of school. \n\n\"Ms. Nix, could you please step in?\"\n\nThe principal was holding the door to his office inviting me in. Behind him, I saw the Sheriff standing behind the large desk. I sat down and they started questioning me. Lila's parents had asked the sheriff department to try to find her. Twenty four hours hadn't gone by so this wasn't a formal investigation but...\n\n\"The sooner you start looking the better,\" the sheriff said.\n\nI was with her over the weekend and I had been asking for her around after school. I wasn't a suspect the Sheriff insisted twice but he needed my help finding her. I said that I would and then lied to them profusely. \n\nI went back to class. The topic was British literature, I think, but I wasn't able to concentrate. I had to get to Lila before they did. I had to; the consequences would be far too terrible otherwise. The bell caught me off guard. I grabbed my things and got out. \n\nThe man I had called was waiting for me in his car across the street. I checked to see if I saw any police cars but with none in sight I slipped in the passenger's seat.\n\n\"Look who it is, the queen bitch of the night, herself\" the repulsive man said.\n\n\"Shut the fuck up and drive,\" I spat in answer.\n\nAfter the grounding period I had tried to find this Matt. Having no luck on my own I had recruited the man driving the car, Robert Rock, P.I.. To be honest I'm not sure if that it's his real name... Robert is a small ugly man gifted by nature by great investigative talents. Before working solo he had been a cop for twenty years and before that he was in the in the marines as MP for three tours in Iraq, first gulf war obviously. The good little fairy that had bended over his cradle hadn't stopped with his brains, she had given him another extraordinary talent, Robert was a tripod... Anyway, he had found a couple of things concerning my maker but he hadn't been able to put a hand on the motherfucker. \n\nAnd once again I was in need of his services.\n\nWe drove to the parking of an abandoned mall. There was no one there but us and some crows. I hadn't eaten anything for two days and between the hunger and the stress I was starting to feel a little edgy. I opened his fly and took his flaccid yet absolutely monstrous member between my lips. In no time he was hard as a rock, throbbing and pulsating against my palate. I sucked on it for a while enjoying the cheer size of his dick. Feeling him on the edge, I licked the tip and sank my fangs into the meat of the object. Robert's dick arteries are as large as his member and I only had to drink for a few moments to get all the sustenance I needed. \n\nI gave him half an hour to get back to his senses. Sitting on the hood of the car smoking his cigarettes, I looked at the grey sky thinking... He finally stepped out and looked at me. I explained to him the situation. He agreed to take the case at his usual fee. I had him drop me back at school...\n\nI haven't heard from him since. I keep staring at my phone but it stays desperately silent.\n\nLet's hope that he finds her first. I don't want to have to explain myself to the cops or to anyone else for that matter.\n\n16.\n\nThis afternoon\n\nAfter school I went to Helen's home. I needed to talk to her to explain everything and to keep her under control. With the Lila issue and the exams getting closer at great speed I was stressed as hell. \n\nThe house was just like I had left it last night. I knocked on the door. Nobody answered. I knocked again but still no one.\n\nI circled around the house but all the curtains were down. I started fearing the worst. I came back to the entrance and pushed the door. It was open. The air inside the house was saturated with sex and blood. I could not help me and my fangs slid out of their sockets violently. I stepped inside closing the door behind me. In the living room I found Helen's dad. He was naked sleeping on the couch. His body was covered with twin bruises and blood. He was still hard. I could hear moans coming from upstairs. I walked to him and checked his pulse. He was still alive. \n\n\"Fuck me Helen, I don't need this kind of shit at the moment,\" I thought.\n\nI climbed the stairs four by four and followed the noises. When I walked in front of her parent's room I saw Helen's mom laying on her bed. She was naked too, legs covered by a blood stained sheet. The smell of blood was even stronger here than in the living room. I approached her. She had more bruises than her husband. I was about to leave her when I saw them. Two puncture wounds, still open, still bleeding right there on her thigh. The bleeding was not too important. So either I was too late or Helen had missed the artery. None the less Helen's mom was bleeding dry. I bent over and ran my tongue over the wounds. The smell of her secretions was absolutely fascinating and I had a really hard time refraining me from drinking but I needed her to survive so I kept the beast at bay. With the bites closed, I checked her pulse. \n\nI'm not a doctor but over the last few months I have learned to listen to human heartbeats. She would need help, a transfusion maybe but she would most definitely live. I sighed in relief.\n\nI went back to the corridor and followed the moaning towards Helen's room. There was someone else in there with her. I pushed the door.\n\nHelen was laying on her back, legs spread, covered in the blood of her relatives and Freddy frantically sticking his dick inside her. She barely opened her eyes, smiled at me and went back to her pleasure. I was absolutely furious and about to give her hell when I heard a car parking in the front yard. \n\nI ran downstairs as the sheriff knocked on the door. I opened.\n\n\"Ms. Nix? What are you doing here?\"\n\n\"I... I came to check on Helen, she's been sick...\"\n\n\"Ha... Are her parents at home?\"\n\n\"No they are at work.\"\n\n\"Okay I'll swing back later then...\"\n\n\"Thanks Sheriff...\"\n\nI thought I had dodged a huge one when Helen's dad started moaning in the living room. The sheriff heard it and placed a hand on his gun.\n\n\"Step aside,\" he ordered me.\n\n\"God damn it!\"\n\nI grabbed him by the collar and pulled him inside the house. I had to act quickly, so I pushed him against the wall and bit him. The gun in his hand jumped once. I felt a terrible pain in the leg. But I kept on drinking. I needed him to forget. I needed him on his way to the precinct. I needed the house for me to clean things up. I needed blood too. So I drank...\n\nI sat him in his car and got back in. The wound in my legs was already closing down. I might have taken a bit too much from him because he fell asleep right there.\n\nBack in my friend's room, I separated Helen and Freddy. She was so high on the blood that she barely resisted. I had to lick three open wounds on Freddy's body before forcing him under the shower. I sent him home and I started cleaning up Helen's mess. It took me seven hours to have the house more or less descent again. Her parents would keep a fogy memory of the day but I guess that our secret would be safe, for now. I would still need to check on them from time to time. \n\nI found Helen sitting on the swing in her backyard. She looked terribly ashamed. I was so furious that I screamed at her for twenty minutes before being able to shut up. She looked at me with her puppy eyes and that made me even more furious. I started screaming again. I'm still shaking about it as I write this.\n\nIt was two thirty in the morning when I finally got home. I tried to study but, around four, I took you out, Anne, and started writing. \n\nThis is not how I had envisioned my exam preparation week...\n\nClearly not!\n\n17.\n\nMay 18th \n\nAnne, I managed to study today! ",
        "I'm still terribly late but I managed to spend the whole night working...\n\nAnyway, on the two issues, Helen did not come to school today, again. \n\nRobert called me this morning telling me he might be onto something. It called me back at the end of the day telling me it didn't work out but at least the hope allowed me to calm down.\n\nI\n\nSorry Anne somebody just knocked on my window. I think it's Helen. I'll tell you all about it tomorrow.\n\n18.\n\nThe most wonderful girl in the whole wide world\n\nMay 20th \n\nAnne, I think I'm in love...\n\nI couldn't write to you last night because I was at Helen's and you were here but let's not be so hasty. \n\nLast time I wrote I told you that Helen was behind my window, right?\n\nWell she was and she was here to apologize. I hid you where you spend most of your days and opened the window. She was there sitting on a branch. I helped her in. It was late and I should have gone to sleep but we needed to talk so we talked. \n\nShe told me how sorry she was for all the trouble she had caused me; she told me that she wanted to thank me as well for the delicious gift I had given her. I told her what I knew about our common condition, I told her that I was still pissed at her - even though it was less and less true. It was actually so untrue that we ended up in my bed to spend the last few hours of the night together. She was as cold as me but it didn't bother me at all, because she was also as wet as me. Her delicious curves against mine, her scrumptious ass fitting my fingers, her drooling pussy under my tongue, everything was offered to me on a silver plate. We ate each other out; we fingered and fucked until the first rays of the sun hit my windows. She left me there trembling with one last kiss promising me we would see each other pretty soon.\n\nShe showed up at school, since I hadn't slept, I spent most of the morning at the infirmary sleeping. I woke up around one thirty and Helen was there waiting for me with a present. \n\nThe first thing I saw when I opened my eyes was a large pair of breasts, between those breasts a single lonely string of blood running down from a delicious neck wound. The breasts and the neck belonged to the subjugated and luscious nurse that Helen had prepared for me. I bended over and licked the trail of nectar all the way to its source. As I drank, Helen petted my head, just like I had on her first night. The vampire version of breakfast in bed, Helen had treated me. We left the infirmary and we went to our respective classes. When it was over Helen told me to meet her at her place around seven. \n\nI must confess that I had completely forgotten about Lila at that point.\n\nI got there around six thirty a bit early, I knocked. Her father opened, he welcomed me in and we discussed for a short while. Apparently he had no recollection of my presence there the day before, actually he had really little recollection of the whole day in question. He told me that his wife was at the hospital but that the prognosis was good. A little before seven, he excused himself and went to bed. Around five past seven somebody rang the door. Expecting Helen I was really surprised to see Martha. \n\nMartha is this nerdish girl with large glasses. We were friends for a short while a few years back but we had grown apart for the same reasons people our age grow apart. Different friends, different centers of interest, this kind of stuff... She told me she was there for the study group. \n\nOver the next twenty five minutes six more people showed up, all of them good students, either from our school or from other schools. They were all good students but they were also, all in their own way, pretty good looking too. Martha for instance despite her glasses had the most delicious freckles all over her face, Daniel, a history geek, had this perfect angelical face, Teresa despite her hippy style hid a magnificent body under those piles of ethnic fabrics, Susan had those perky lips that you'd love to suck on for hours. I was starting to see a pattern there.\n\nI was wondering when Helen would be getting in when suddenly my phone rang. It was Helen and Helen had the best news I could hope for...\n\n19.\n\nBut let me tell you about the study group first\n\nWell the finals are about to start next week and both Helen and I needed a strong injection of good old knowledge. We are both good students but with all that has happened you can understand that neither she nor I are actually feeling very comfortable to play our future at a good university based only on our luck.\n\nSo when Helen showed a little before eight we both sat among this gathering of highly functioning brains and we listened. We had those seven geeks lecture us on their different specialties. At some point I dosed off for a while, but it wasn't much of a problem since it was during Martha's English literature discussion and I can safely say that if Martha is a little better than me on the topic, it's only because her marks didn't have to go through the vampire effect during the first trimester. I shook my head trying to get rid of the spider webs of sleepiness and went to the kitchen. \n\nOrganized as she is Helen had her father go get some groceries during the afternoon for all of us to have something to eat and drink, well not us obviously but our guests. I wasn't too excited by the coke and cool aid bottles waiting for us on the table so I checked the fridge for a beer. I got out the back of the house and sat on the garden chair looking at the reddish sky of the evening. I found a pack of cigarettes at the bottom of one of my pockets and lit a cancer stick. I'm not sure if cancer is still an issue for me but even if it is I'm not ready to get rid of this addiction. Things were getting better. I finished the beer and threw the cigarette.\n\nSomebody opened the glass sliding door behind me. It was Susan. I smiled. She smiled back. In the kitchen behind her everybody was getting a refill. I turned back and continued staring at the sky. A few moments later the biology nerd sat by my side.\n\n\"Hey,\" she started.\n\n\"Hey,\" I replied lacking any sort of originality.\n\n\"You're the first one right?\"\n\n\"The first one to what?\"\n\n\"The first one who got the strange bruises I've been seeing a lot around school lately.\"\n\nI looked at her. She didn't seem worried, she only looked curious. I was relieved, after Lila, I didn't need another one of my fellow students trying to solve the mystery of the strange twin bruises. \n\n\"I don't know what you're talking about. What bruises?\"\n\n\"Oh... I've been seeing a lot of student with pairs of bruises all over their necks, and in other places too, intimate places... Under the showers of course\" she giggled before continuing. \"Two small bruises, the size of a quarter separated by an inch or two and I thought it was you the first one I saw with those.\"\n\n\"When was that?\"\n\n\"Around Halloween I think.\"\n\n\"I don't remember,\" I lied.\n\nI looked over her shoulder. The kitchen was now empty, the others were back in the living room and it was starting to get dark. I laid a hand on Susan's lap. \n\n\"Ah,\" she sounded disappointed, \"well I've been seeing those all-around school and I've done some research at the university's medical library.\"\n\nI was about to change subject entirely to something more... intimate but this was getting interesting. \n\n\"And what did you find out?\"\n\n\"Well apparently, it's a rare condition that has been linked with anemia, chronical sleepiness and in some cases has been known to cause death. But the guy who wrote the article said that despite all the studying he had done he hadn't been able to determine if it was either a virus, a bacteria or a bug that was responsible.\"\n\n\"And by any chance do you remember the name of the guy?\"\n\n\"Why? Are you interested?\"\n\n\"Why wouldn't I be interested? This is quite interesting?\"\n\n\"Okay...\" she wasn't convinced, \"You're the first person to whom I talk to about this and that wants to know more...\"\n\n\"Come on Susan, do you remember the name of the guy?\"\n\n\"I don't but I have it written somewhere at home... I made a lot of research on the matter and I might have a couple more references if you want... I could bring that to you next week... if you want,\" she finished.\n\n\"I have a much better idea, Susan, how about I drop by your house next week and this way you can show me all this research you have on those bruises.\"\n\nHer delicious face lit.\n\n\"You would come to my home? Seriously?\"\n\n\"I just said so...\"\n\n\"I ... It's just that, usually... Girls like you don't come to my place...\"\n\n\"Well apparently this is about to change, sweet Susan, now tell me something else Susan...\"\n\n\"Yes?\"\n\n\"Do you want a pair of bruises too?\"\n\nShe looked at me gaping, so I jumped on the occasion and took her delicious insolent lips between mine. The look in her eyes went through surprise, shame and, as you can guess, Anne, finally lust. This girl was onto something very interesting and I wanted to know more but at that point all I wanted was her cum and her blood. \n\nI looked one last time towards the kitchen to check if the coast was clear - it was - and kneeled in the green fresh grass. I helped her out of her pants and soaked pink panties to find myself facing her glistening slit. The smell of pineapple shampoo and lust was captivating but the view was magnificent. A few deep black pubic hairs, unshaven, untouched, crowning a swollen pink button over a long and innocent wrinkle of flesh. I stood there for a while admiring the beauty offered to me when I noticed a lonely tear slowly forming at the base of her clit. Just in front of my eyes, the tear grew and finally started pouring slowly, so slowly along the crease. It was the purest expression of pleasure I had ever seen.\n\nWith the tip of my tongue, I collected the tear of delight and closed my eyes savoring every subtle nuance of flavor and smell it carried. I opened my eyes again and looked at Susan's face. Her expression was filled with desire, her upper lip trembling uncontrolled. I finally dived in, slowly collecting any remnant of this single first drop of cum and in the process causing many more to pour down my throat. I parted her lips with my tongue and tried to explore deeper but suddenly my tongue stumbled upon a thin layer of skin. I smiled and with a single thrust I broke the innocence of the girl. The virginal blood joined the delightful cum in my mouth. My fangs dug the skin on each side of her pussy and I started drinking. \n\nHer hands pushing my face deeper inside of her she orgasmed silently three times covering my face with her sweat, cum and blood each time her pelvis would violently clench under the raging pleasure. I finally withdraw my fangs and licked her clean, getting her finally those bruises she had been so interested in. \n\nI stood and helped her back into her clothes. I walked in the kitchen and cleaned my face in the sink. In the living room it was Daniel's turn to talk about World War two. Helen looked at me with curiosity but when Susan stumbled back in she smiled. \n\nStudying continued for three more hours. Susan sat silently in a corner not understanding what had just happened and wondering why she was so wet and sore at the same time. Teresa and Irma fell asleep on opposite sides of the couch. Helen finally stood up and walked to the kitchen she came back with a bottle of Tequila and a basket full of shot glasses.\n\n\"Okay boys and girls, there has been enough studying for tonight, how about we start having some real fun?\"\n\nThe reactions ranged from shameful agreement - Daniel, John and Susan -, snoring - Teresa and Irma-, polite refusal - Remy - and outraged protest - Martha. I took care of Martha's outraged protest and Remy's polite refusal by sitting between the two of them while Helen was pouring the first round. Martha to my left was threatening of leaving and telling on us when after brushing my fingers against her cheek; I forced her to look into my eyes. Her will was strong and I had a hard time twisting her determination but after a few long and extenuating seconds she finally cracked. Her parent's puritanism was only a fa\u00e7ade. Remy was much easier to break, it only took a single kiss. Teresa woke up to a shot being held just before her eyes and she took it gladly and finally Irma, seeing everybody else enjoying themselves took hers.\n\nAll those geeks were not used to party, at least not with anything stronger than a Canada dry or a root beer so they were all profusely drunk after the fourth round. Helen and I looked at each other. This was going to be so much fun. \n\nI wanted some dick so, after giving a round of kisses, I sat back next to Remy. I was a bit disappointed by the size of the member he was playing with, but what the hell, beggars can be choosers... He revealed a nice technique I wouldn't have suspected and after sticking my butt for a while I took some of his blood. I left him fall asleep on the couch. \n\nHellen, sitting between Irma and Teresa had her hands inside their skirts while drinking from either one or the other's bleeding necks. \n\nSusan, innocent little Susan had organized a nice setting with Daniel and Irma, Eating her out while he would take her from behind. I was surprised at the ingenuity of the little biologist and I didn't want to bother them so I turned back to Martha, outraged Martha, pious Martha who was violently desecrating her pee hole with an African totem that had been waiting for this occasion taking dust on the small table to her right. \n\nWe sixty-nined for a long while and, as I had with Susan, I gorged on her virginal blood. Helen had joined the trio when I was finished with Martha and I joined them to get my share of the remaining two geeks.\n\nI fell asleep really early in Helen's room a finger of hers in the ass and another one in the pussy. It was a very productive evening.\n\nThe next day we all went to school together, all tired but not all knowing why.\n\n20.\n\nYou might be wondering what was that call about\n\nYes the call...\n\nSo Anne, you know about how Helen was turned. I know about it too. And obviously Helen knows about it too. Well apparently Lila doesn't.\n\nSo over the phone, as I'm browsing at the nice geek buffet getting ready to study in front of me, since Monday, four days now, Lila that is so afraid of me, Lila who knows my secret and who I have to make sure she shuts the fuck up. That Lila.\n\nAnd apparently Lila has something extremely important to tell to Helen, something she can't tell over the phone. Lila asks if she can meet Helen the next evening, at the Football game. And Helen says that of course, we can perfectly meet there. And Lila insists that Helen doesn't talk to me about it. That she will call her around half time and that she'll tell her where she'll be waiting for her.\n\nI'm so happy and nervous, that the next day at school goes by in flash. And I find myself around the football field among the students and relatives of our team. The local high school team, \"the mountain lions\", is meeting with the team from of another school from our county for the third place. It's the last Match of the Season and everyone is pretty excited. The match should have taken place at the beginning of May but for some reasons I don't remember and care it's been postponed until tonight. The teachers from both schools protested for it take place so close to the final exams but in the end the both principals ruled against them and organized the event. Tonight I went home and changed my clothes. I'm wearing a long hood that covers my face. I walk up the bleachers up the very last row of seats and hide in the shadow observing the crowd.\n\nHelen... Helen and football is a long story. Helen has been a football fan ever since I can remember. Actually I can still see myself not tall enough to reach the edge of the living room table watching my very first Super bowl with Helen and her dad. Helen has always dated football players, not the captain obviously; the captain is Amalia's property. But Helen has never missed a game of the Mountain Lions. On top of that, Helen has lost her virginity to a football player, problem is she doesn't remember which one since it was during an after match party. So Helen's make up was brown and green, Helen was wearing the brown and green team's scarf, the brown and green team's shirt, the brown and green team's mountain lion hat, the... Helen was a brown and green blurry whirlwind running up and down the bleachers. And a yelling brown and green whirlwind on top of that. \n\nThe match was about to start. That little girl with a nice voice, sang the anthem, we all stood hand over the heart. The players got on the field. And the game was on!\n\nThirty two minutes later the first quarter finished. I hadn't been able to spot Lila at that point. After the break the game resumed. After a while I realized that I had been so occupied trying to spot that bitch Lila that I completely missed what was happening on the field. I looked at the scoreboard - we were winning - and spotted her. Lila was standing bellow it. From this distance, before, I couldn't have made her well but now, with my new senses I could detail her perfectly. She looked exhausted; she was wearing the same clothes she had at school on Monday, deep dark ringed eyes, and a general end of the world attitude. Not Mad Max end of the world but more \"they're coming to get you Barbara\" end of the world...\n\nAt half time she stood there letting everybody scramble to the refreshment area before taking out her phone. She talked to Helen for a second and she hung up. I called Helen. \n\n\"Where?\"\n\n\"In the parking lot...\"\n\n\"Good see you there in ten...\"\n\nYou know what they say, Anne, in a parking lot nobody will hear you scream... Sorry about that, I have been wanting to make that joke for quite a while now...\n\nSo Lila waited for Helen to leave the stadium and I waited for her to leave her spot. When she finally did, I started walking down the stairs when I stumbled upon Amalia. She took my arm and looked at me. She wanted to say something, but she didn't know what. She shook her head, smiled and finally let me go.\n\nAs I was walking away she told me.\n\n\"See you later?\"\n\nI turned back and told her: \"Maybe.\"\n\nI went back to my problems but Amalia's attitude bugged all the way to the parking lot. I really need to be more careful, she is good looking and her blood is absolutely delicious but once again I don't want another Lila on the hands. When I reached the parking lot I didn't see the two girls at first with all the cars but I stopped and listened. There they were, I crawled in the shadows and approached the girls. They were standing behind one of the buses from the other school. \n\n\"Helen, I'm not bullshiting you. I know what I saw, she had fangs...\"\n\nI stepped into the light. Lila saw me and tried to run but Helen caught her and placed a hand over her mouth.\n\n\"Shhh, calm down, don't resist...\"\n\nLila bit Helen's fingers and managed to say.\n\n\"You fool; I told you not tell her, now she will kill us both.\"\n\n\"No I won't.\" I said, \"Please Lila, calm down, we have to talk.\"\n\nLila tried to fight but Helen's grip was now stronger and she finally calmed down...\"\n\nI was at a crossroad. I could either tell her the truth or deny and blame her memories on a bad dream. The first option was risky but the second was even more. \n\n\"Helen, please let her go.\" I finally said.\n\n\"But she'll run!\"\n\n\"I don't think so... Will you run?\"\n\nHelen lifted her hand. Lila waited for a while before answering.\n\n\"No, I won't run...\"\n\n\"Good, now that this is settled please let her go.\"\n\nLila shook her arms and looked at me with as much defiance she could managed considering her fear.\n\n\"Lila... I'm sorry... I should have told you... You're both my best friends and I should have told you both... But... Lila you have to understand, I was lost... I didn't understand what was happening to me... I was confused and when I made up my mind it was too late but now... I see my mistake. Lila, I... I am a vampire.\"",
        "I think it was the first time I had said it out loud. \n\nLila looked at me.\n\nI told her everything. She went from afraid to angry but by the end of my story, with the game long resumed behind us, she started to feel sorry for me.\n\n\"I'm so sorry I fed on you but it is so... good...\" I finished.\n\nLila looked at me, at Helen, back at me and finally back at Helen.\n\n\"You don't look shocked, how long have you known?\"\n\n\"Sandra explained it to me this week... when she realized she had turned me too.\"\n\nLila stood there looking at both of us, slowly backing away.\n\n\"Lila, don't run, please, we're still your friends...\"\n\n\"Yes Lila, we don't want to hurt you...\"\n\n\"Both of you?\" she said.\n\n\"Yes Lila, both of us...\"\n\nShe stopped and finally her arms fell limp along her body. \n\n\"Oh fuck it!\" she said and she started to laugh.\n\nHelen and I looked at each other. We looked at her and we started laughing too. \n\nYou know what they say about the cathartic power of laugh, well I can guarantee you it's totally true. We were still laughing as people started to show around us walking back to their cars. Finally we all went back to the stadium and sat on the now empty bleachers talking.\n\nWe talked for a long time. At some point we showed Lila our fangs and Helen ran around the field in less than thirty seconds. Lila told us about the week she had spent sleeping at night in dumpsters and hiding by day. She told us about her memories of the weekend and as we talked about it she got to agree that they were actually pretty sexy. Helen stopped her a couple of times not believing what she was hearing. She even slapped me when we got to the part where I fucked her boyfriend. But all in all good spirit reigned.\n\nAround three, I dropped Helen and Lila at their respective places and came back home... Well not directly actually, I stopped by the big after game party but that's a story for another night because the sun is rising and I'm absolutely exhausted. \n\nI'll have to call Robert tomorrow. I think I'll have to monitor Lila closely but I also think that she won't be an issue for me or Helen in the future. At least I sincerely hope so.\n\nI'll write to you soon Anne. Thanks for being here.\n\n21.\n\nMay 27th \n\nIs it 27th? No it's Saturday already... so...\n\nMay 28th \n\nOn the other hand I marked the days in this book starting on the day before... Anne ... I'm sorry lost track of what I was saying...\n\nSo I haven't written in a week... Was to be expected because, well you know, finals...\n\nWhat a week, what a fucking week, pardon my French but it's been the longest week of my life. Exams after exams after exams... I'm up to here in math and literature and biology and ... \n\nAnyway now it's done, well almost, next week I still have a few exams for extra credits but for now I'M DONE!\n\nFeels so good to be free now... Last exams, prom next Saturday, and then... FREEDOM!\n\nLots of capital letters today, sorry Anne... I'm a bit overwhelmed. And drunk too actually, I didn't know I could still get drunk, turns out, I can! With the correct quantity of blood in the alcohol, sorry, with the correct quantity of alcohol in the blood that I drink I can perfectly get drunk. \n\nAnyway it's only three in the morning and I'm going to go to bed really early because tomorrow...\n\nWhat am I doing tomorrow? Damn...\n\nAh yes tomorrow I have to go at Susan's place to get more info on this... whadyoucallit... researcher who researched me, us, we...\n\nOkay I'm rambling here, sorry about that. Now off to bed, get a good rub and to sleep cause little Sandra here is blind drunk and finished and ...\n\nSleep tight in your tight little drawer. Kisses and love and all the good thing.\n\n22.\n\nMay 28th \n\nI woke up last morning with the worst headache of my life; I could stand in the sun for an hour and not even get close to the headache that got me last morning. Afternoon to be honest, mom and dad woke me up around twelve thirty to go a restaurant to celebrate. The food was nice, the waiter too. I was starving, I excused myself from the table grabbed him on my way to the bathroom and almost drank him dry. Sleeping in the clients bathrooms might not go so well with his boss. I hope he doesn't get fired because of me.\n\nAnyway we came back home around three thirty. I had to meet with Susan around four but I called her and asked her if I could show up around five thirty sixish. I needed to sleep some more. She said she didn't mind, her parents were going out at seven and I would have to be out by then but an hour is time enough to cover all she had to show me.\n\nFor what she had to show me yes but it would be a bit short for me to eat her out. But then I could always come back.\n\nAround five fifteen, I drove there. Her house was pretty regular. A bit like mine, actually a bit like any other house in this fucking town. Anyway, so I park, walk up to the porch and knock on the door. Susan's dad is there waiting for me. Creepy guy. He has me sit in the living room and starts by a formal interrogation on: my parents - phone numbers, current location, current occupation, church they go to -, goes on with me - full curriculum with grades, extracurricular activities, alcohol and drug consumption, friends, boyfriends. Twenty minutes later, as I think we're done, he asks me of my intentions towards his girl. I was so pissed off that I nearly told him the truth.\n\n\"Mister, I going to go up there and study with your daughter, then I'll have her undress and fuck her until she begs me to stop and then I'm going to suck her blood through her delicious little cunt.\"\n\nI actually stopped after the studying part and added something about wanting to make a friend.\n\nFuck him. Creepy guy. He finally allowed me to go see his daughter.\n\nDamn... No wonder why Susan was still a virgin when I got a hold of her last week.\n\nSusan was waiting for me in her room. Her room... Let me describe it to you. Her room is also a bit creepy. Susan is like me eighteen but her rooms says otherwise. Actually her room says a lot of things. \n\nFirst thing that hit me was the books. Two of the four walls were covered with them. Lots of them, all sizes and shapes. I like to read like any other person and even a bit more but that many books are quite intimidating. \n\nSecond thing that hit were the posters on the two remaining walls. It's hard to explain but they were a bit childish. Naruto here, a boy's band there, another boy's band, a Japanese pop group... \n\nThird thing, her desk. Her desk... Her desk is the size of my bed, and it was covered with all kinds of papers. But not only papers it had a large professional microscope, a couple dissecting boxes and two machines I had no clue what they were for but that were linked to a state of the art laptop. \n\nThey say - I'm pretty sure that there are people who say that - They say that you can judge someone by his room. Well judging Susan was... complicated.\n\nAnyway she was sitting there at her desk and she looked so happy about having me over. We talked for a while about the week that had passed, she was completely exhilarated. I guess that with the Cerberus in the living room she doesn't get many friends at home. I'm not sure she has many friends actually. \n\nFinally I told her that we might be on a schedule and offered her to show me the stuff she had collected on the bruises. She sat at her desk and started looking over her papers. I browsed through the books on her shelves. A copy of Twilight attracted my attention first. I had read it like everybody else a few years ago and went to watch the movies but the poor acting and terrible writing had prevented me from going further than the second movie and the third book. I re read the first few pages and was shocked by the poor writing. \n\nHey Anne, stop bitching I know I'm not the Shakespeare but I'm not doing millions with my lousy prose...\n\nI left it where I had taken it and went back to reading the titles. Lots of biology books, nineteenth century gothic literature, Dracula, a full shelf of mangas, Carmilla, a few science fiction books, old school Silverberg and Asimov not Hunger games, Vampire$, more biology, a complete hard cover Anne Rice collection. I was starting to see sort of an obsession here. \n\n\"Got it!\"\n\nI turned around; she had a bunch of papers in a large red file in her hand. \n\n\"This is my research on the bruises... If you want to have a look at it?\"\n\n\"Yes, yes of course...\" I said still troubled with the revelation of Susan fanged obsessions.\n\nI sat on the bed and took the file. First twenty or so pages were a list of all the people with my mark on them with a date in front of them, an hour, the location of the sighting and the location of the bite. It traced back to the first half of November. It was as if she had been looking for it. I browsed through the names. She had missed a few but not many. The next few pages where a copy of the paper in Medical Journal of America written by the guy she had told me about. The following pages were other articles, newspaper style not medical, seemingly unrelated but all of them pointing out to one or more of the symptoms appearing without reason. I checked the dates and papers, there was no pattern there, the first one dated back to the twenties. \n\nI went back to the first article. The description of the symptoms was definitely the work of one of my kind but what was more interesting was the epidemiology data. The first cases had appeared in a small village on the other side of the US. He had managed to identify the epicenter of the condition to a few blocks. The cases had apparently ceased overnight. I asked Susan for a paper and a pen.\n\n\"Why?\"\n\n\"Because I want to write down a few names.\"\n\n\"From the article?\"\n\n\"Yes from the article.\"\n\n\"So you're genuinely interested?\"\n\n\"Yes I am.\"\n\n\"Why?\"\n\n\"Fuck Susan, I don't know, if you say I got it, although I don't remember it, I want to know more. I... After we talked the other night, you got me thinking and I started to recall seeing those on some people. So I'm worried, if this condition can be deadly I want to know more about it, don't you?\"\n\n\"Ah...\" \n\nShe sounded disappointed. She handed the pen and as I wrote down the name of the scientist and the references of the newspaper articles she said.\n\n\"I need to show you something else, but you have to promise not to freak out.\"\n\nI looked up not knowing what to expect.\n\n\"Okay...\"\n\nShe stood and went to the door. She took a chair and stuck it under the handle. She went to her window and closed the curtain. \n\n\"Please don't freak out,\" she repeated unbuttoning her pants.\n\nShe faced me and dropped them to her knees. She started taking off her panties and sat at the chair. I couldn't believe this girl. She spread her legs showing me her pussy. Despite my desire to drop on my knees and start eating her out again, I turned away.\n\n\"Come on Susan! What are you doing?\"\n\n\"No, please, look, I got them too; I got them after the other night, after the study group. There and there...\"\n\nI turned around, the bite marks were fading but they were still clearly visible. I couldn't stop from licking my lips. Fuck this girl really was something else. She got back into her clothes.\n\n\"Okay you got them and what do you think it means?\"\n\n\"I don't know... I think... Let me show you this last thing.\" \n\nShe handed me another file. This one was a lot more worrisome, it was a barely readable photocopy of an autopsy report about a guy who had... fangs. \n\n\"What has this anything to do with the bruises?\" I asked her.\n\n\"Can't you see it?\"\n\n\"See what?\"\n\n\"The connection?\"\n\n\"What connection?\"\n\n\"The bruises... Two little bruises, round bruises, separated by a couple of inches,\" she lifted her hair, tilted her head and placed two finger on her artery, \"right here.\"\n\n\"What are you saying? Are you saying that we have a ... vampire at school?\"\n\n\"Something like that...\"\n\nI laughed, but it sounded fake. \n\n\"Okay, let me stop you right there Susan, I don't buy that last part but I agree with you, we have to dig deeper. Let me have a look at it and we'll talk about it next week.\"\n\n\"Actually,\" she started hesitantly, \"next week I'll be meeting with the scientist who wrote this, I got a positive answer from the University where he works and I managed to convince my parents to take me there. If you want you can join us... If I can convince them...\"\n\nThe idea was pretty good but somebody knocked on the door.\n\n\"My parents,\" she whispered, \"you'll have to go... I'll call you tomorrow if I manage to get you on the trip...\"\n\n\"Sorry Sandra, it's time for you to go...\" Creepy dad said.\n\nIn no time I had been thrown out of the house. Sitting in the front seat of my car I waited in the dark for them to leave. I was not leaving that little slut before I could get some of her blood... \n\nBut... The more I thought of it the more I found the idea excellent. \n\nFinally the car left the driveway. \n\nWhile I spoke with Susan I had overheard the parents saying that they would be back around eleven. I checked my watch. I gave me three hours. I waited ten more minutes to avoid the typical: \"Damn I forgot my wallet!\" and went back to Susan's. \n\nNo wanting to leave too much memory of my return, I walked around the house and found the door to the garden open. I slipped into the living room. I could hear the microwave oven on in the kitchen. I peeked quickly. Susan was getting a large bottle of coke from the fridge. I passed the door and walked up the stairs. The microwave sang that he was finished. I hid in the dark of the parent's room. A few minutes later, Susan passed in front of the door without seeing me. I heard her move some furniture around her room and she came out with a large box. The box was filled with DVDs. Not the kind her parents would approve, I guessed. She went back down. I silently followed her. She went directly to the living room. I waited for a second for the movie to begin and get her attention. The first three notes of the soundtrack gave away the movie. Susan was watching Francis Ford Coppola's Dracula. I stepped into the living room. She had closed the curtains.\n\nShe, once again, unbuttoned her pants and negligently left them on the carpet. She grabbed the remote and fast-forwarded up to... the razor scene. By the movement of her shoulders I could see that she had started touching herself. I was absolutely fascinated and I couldn't move.\n\nThe smell that started filling the room, the delicious smell of her intimacy brought me out of it. Keanu Reeves was now walking down the corridors of the monster's castle towards his infamous meeting with the brides. She lifted her chin as the pleasure started growing in her guts, not taking her eyes from the screen. I pushed her hair a side, gently brushing my fingers against her neck. She jumped and turned around. \n\n\"Why settle for the flat screen when you can get the real thing?\" I asked showing her my fangs. \n\nShe fell from the sofa. I circled around it. She tried to crawl away from me but I was faster. I kneeled over her trembling body, putting one knee under her left arm. My fingers were wrapped around her throat. Her eyes filled with tears, her lips started trembling, she was all mine. I pushed her face to a side, letting her still watch the movie and leaned closer to her.\n\n\"Don't resist, you'll enjoy it,\" I whispered to her hear, \"I promise.\"\n\nI sank my fangs at the base of her neck. She left out a single cry of pain before burying a hand in my hair, wrapping her other arm around me and pushing me deeper into her neck. We both fell on the carpet but I didn't let her go. She was grinding her pelvis against mine, letting out small cries of pleasure. She was more than subjugated by my powers; she was a willing victim, my very first. We came together. I left her there, panting with two new bruises on her neck. \n\nI got out the way I entered and came here directly. I had to tell you about it. It was magnificent.\n\nIt's still early in the evening and I think I'll go downtown. I have to call Helen; I still have a few places to show her.\n\nWrite you soon Anne.\n\n23.\n\nJune 3rd\n\nThis morning, I had my very last exam of high school. Went well, I think... But this is not really the issue anymore.\n\nAfter the exam Mr. Creepy Dad and Susan picked me up at school. We were going to meet with Professor Alan Cortes at this big University Susan got accepted in. Creepy Dad had been a bitch about taking me but apparently Susan had managed to convince him arguing something in the lines of \"she's my friend, the only friend I ever had in high school, don't fuck this up for me, dad\"... \n\nWe drove for seven hours to get there. Mr. Creepy Dad was not happy to have me there and he made it abundantly clear all the way to the university. When we arrived on the campus, he left us at the entrance telling us he would be picking us up around seven thirty. Two hours from then.\n\nThe place was quite magnificent maybe not as much as the true old universities of New England, but despite not being in the top twenty this University, lost in an old oak forest, was more than pleasant. \n\nSusan had sent an email to the professor and apparently he had accepted meeting with us. It was still half an hour away so we found a cafeteria and had a coffee. Well I had a coffee and Susan had a hot chocolate. We hadn't talked much during the week and she had been overly quiet during the trip so she caught me by surprise when she told me out of the blue:\n\n\"I had the weirdest dream the other night.\"\n\n\"Huh?\"\n\n\"After you went home on Saturday, I dosed off in front of the TV and I had this intense dream. At first I didn't remember any of it, but since then I've been having those weird flashes, images, feelings that kind of stuff. For instance I have this image strong of you standing behind my couch.\"\n\n\"Me?\"\n\n\"Yup, and you have those large fangs...\"\n\n\"So what, all this vampire nonsense is getting into your head, don't you think?\"\n\nDespite the heat she had been wearing a scarf all week to cover the new bruises I had given her. She took it off and started running her fingers over the bites while sipping on her chocolate. I could smell her pleasure grow slowly as she did.\n\n\"Well yes it might,\" she finally resumed, \"but then there's the matter of the new bruises I got... Those two, right here.\"\n\n\"So?\"\n\n\"Well I don't know, you tell me.\"\n\n\"Tell you what?\"\n\n\"Are you the one?\"\n\n\"The one who...?\"\n\n\"The one who bit me.\"\n\n\"Oh come on Susan don't start with that shit, I don't want to end up with a stake through the heart because of your fantasies... I am a regular girl, as regular as you are...\"\n\nI couldn't go down this path any longer. I needed an out. I checked my watch; it was ten to our meeting, so I finished my coffee and stood. \n\n\"We have to go now; Professor Cortes was nice enough to accept to meet us...\"\n\nShe took her bag, I took mine and we walked back to the Biology department. The receptionist told us how to get to the professor's office. We managed not to get lost and we knocked on the door just a minute before our appointment.\n\n\"Come in.\"\n\nA young woman was sitting behind a desk tending to some papers, she was no more than twenty five, probably a student making some money to cover her costs. She looked pale and tired and she had two very distinctive bruises on her neck. Form the corner of my eye, I looked at Susan, she had spotted them too. There were stars in her eyes. The girl checked her computer screen.\n\n\"Susan and Sandra, right? Please go right in, the professor is waiting for you...\"\n\nI had found no picture of the professor over the internet so I had no clue what to expect. We pushed the door, Susan entered first and I followed her. Sitting behind a large presidential desk, the professor looked in his mid-thirties; he was quite handsome, wearing a strict three pieces suit with a discreet dried flower in his buttonhole. Very elegant but really not the scholar type, or at least not the way I imagined it.",
        "\"Have a seat, girls...\"\n\n\"Good afternoon,\" Susan started, \"I'm Susan and this is Sandra.\"\n\n\"Nice to meet you Susan, nice to meet you Sandra. So Susan,\" he started, \"according to your email you're here to talk to me about my work on the bites, right?\"\n\n\"The... the bites?\" she stuttered, \"You call them like that?\"\n\n\"How else would I call them, it's what they are after all, bites... Don't tell me you didn't get an interest over them because they looked like vampire bites, with all the vampire fiction nonsense you post over the internet...\"\n\n\"I... I never told anyone... How did you know?\"\n\n\"Come on Susan, I'm not here to tell you all my secrets. So the bites, what did you want to know about them?\"\n\n\"I...\"\n\n\"Come on Susan, spell it out, we don't have all evening.\" \n\nThe exchange was quite surreal. I didn't know what to do. I didn't know if I should run away or wait a little longer.\n\n\"I...\" Susan tried again, \"the bites... what ... who ... who makes them?\"\n\n\"Who? Well it depends, I could, or, if I'm not mistaken, your friend here could...\"\n\nI had mixed feelings. On one hand I was so happy to finally meet one of my own, one who could give all the explanations I had been looking for, and, on the other hand, I was starting to get seriously pissed, I had fought so hard to protect my secret. \n\n\"You mean I was right?\"\n\n\"Susan, deep down, you knew, deep down you knew that Sandra is ... a nosferatu, or a vampire as we are called this days, if not why else would you have brought her here?\"\n\nSusan turned to me. She was glowing. The professor deep gaze left Susan and fell on me.\n\n\"Now Sandra, I've been waiting for quite a while to meet you,\" the professor continued, \"well you or any other one as young as you... Susan, could you please step outside for a moment, we have matters to discuss, Sandra and I, we'll call you back when we're finished.\"\n\nObediently Susan stood up and stepped out of the room. She seemed mesmerized, as she closed the door I looked back at the professor, I still had a lot of things to learn and the professor was the person who would teach me...\n\nWe talked for forty five minutes or so. Well I did most of the talking, I told him about me, my experiences, what I knew about my condition. In the last ten minutes, he started talking but, Anne, I'm sorry, he made me promise not to reveal to anyone what he told me. And deep down, I feel that this applies to you too. To make it simple, I'll be going to that university next year and Helen too. And we will be working closely with the Professor on a very important project. But I've told you too much already.\n\nAnyway the professor buzzed his assistant and asked her to send Susan back in. \n\n\"Susan please have a sit, sorry to have you waiting out there.\"\n\nHe started slowly to unbutton his shirt sleeves. \n\n\"If I'm not mistaken Susan, you have a huge crush on vampires, right?\"\n\n\"Huh, huh.\"\n\n\"Good because I have a huge crush on gentle shy nerdy girls...\"\n\nHis jacket was already resting with his vest on the back of his seat. In three expert movements he unknotted his tie and folded it on the edge of his desk. He then started unbuttoning his shirt.\n\n\"Sandra, I can feel that you haven't fed in the whole day, I must confess I haven't either and Susan here is more than willing to let us, so why don't you help her...\"\n\nI stood and approached Susan. She was fascinated by the professor.\n\n\"May I?\" I asked her pointing at her shirt.\n\nShe nodded.\n\n\"Just one little thing though,\" the professor said, \"don't kiss or bite her yet, I want to teach you a little trick.\"\n\nHe was topless, nice abs and large shoulders with quite a few scars baring his chest. He walked around the desk and rested against it. Susan was looking at us, her shirt, now open, revealing her innocent white bra.\n\n\"Sandra,\" the professor ordered, \"please finger our little friend here, but remember no kiss no bites...\"\n\nI kneeled and pulled on her skirt. Her belly was moving up and down in anticipation. When my fingers touched her skin she shivered. I spread her legs. Her white panties showed a large stain, the smell was divine, fresh as an apple juice on warm summer day. Susan wanted us as much as we wanted her. I helped her out of her panties too.\n\nOnce again in front of me I had the most beautiful pussy in existence; the traces of the bites I had given her nearly two weeks ago had almost faded. I laid a single finger on her clit feeling the blood surge and gorge the tiny swollen bundle of nerves. My fangs extended in my mouth, Susan saw them and moaned. I started making small circles on the little hood of skin. Susan's hands grasped onto the armrests. She closed her eyes and started purring. \n\n\"Now Sandra, you have to agree with me that the properties of our memory erasing saliva are quite practical but sometimes it does feel lonely right?\"\n\n\"Huhuh,\" I answered mechanically not really listening to him.\n\n\"Well here's a little tip you might not have gotten a hold on but if you want your victim...\"\n\nSusan had a hiccup of pleasure at the sound of the word. She was getting close.\n\n\"... to remember the moments she or he shared with you, you only have to give them a major orgasm before diving in.\"\n\nSusan purring had turned into harsh breathing. Her movements had become jerkier. She finally decomposed under my touch. Her delicious little slit parted to let out a small whiff of ecstasy; her butt crack was soaked; she left out a long groan. She opened her eyes.\n\n\"I ... I will remember this?\" she asked.\n\nThe professor smiled baring his fangs.\n\n\"Yes you will Susan, but you will tell no one and you'll help Sandra here with anything she needs. Do you understand?\"\n\n\"Yes professor, Sandra, I understand, I promise.\"\n\n\"Good,\" the professor finished taking her hand and making her stand. \n\nHe pushed her against his desk and after unbuttoning his pants he shoved his rod into her tight pussy. I got out of my clothes watching him come and go into my ... servant? The term sounds right, Anne, but I'm still not grasping everything it implies. I guess that I will make the rules of our relationship but none-the-less the idea behind it is strange.\n\nAnyway, I climbed on the desk and spreading my legs I had Susan lick my special place. Hesitant and clumsy she managed to give me a shy orgasm. I'll have to teach her how to do that properly. But soon we switched places and the real fun began. She screamed under my tongue and I screamed under the thrusts of the professor's dick. We finally fed on Susan's trembling body. The professor bit in her arm pit and I took her thigh. She was as deliciously sweet as I remembered. \n\nIt was nearly seven forty five when we got out. Susan was on a little cloud and the professor had me promise to enjoy my summer. He's definitely a nice guy. Creepy dad was absolutely mad to have been waiting and he didn't say a word as he drove. We stopped at a motel and we should be back home tomorrow in the morning. I think I'm going to go out now, I've spotted a little dinner and I want to have a bite there.\n\nGood night Anne, sleep tight.\n\n25.\n\nStill June 3rd, just way later\n\nAnne I think it's the first time I write to you twice the same day. But I have a pretty good reason, judge by yourself.\n\nYou remember I told you that I was going out to have a bite in a dinner, right? Well so I left you in the hidden compartment at the bottom of my suitcase. Hidden compartment is a big word for the piece of fabric I sewed inside my suitcase to hide you, but at least it's self-explanatory. It's impressive how cautious I have become since I started writing you. So I hid you and went to have a shower. I got ready and opened the door on the half empty parking lot of the motel. \n\nSusan was there, about to knock on my door.\n\n\"Oh,\" I said.\n\n\"You going out?\" she asked.\n\n\"Huhuh,\" I answered?\n\n\"Going out to... hunt?\"\n\n\"Huhuh,\" I answered.\n\n\"Mind if I ... tag along?\"\n\nSince I didn't know what to say so I simply repeated myself. Susan and I walked down the road towards the Dinner I told you about. The night was fresh for this period of the year but I didn't care.\n\n\"Sandra?\"\n\n\"Huhuh.\"\n\n\"Do you want me to call you Mistress?\"\n\n\"Why the hell would I want that?\"\n\n\"I don't know it's supposed to be this way... I guess.\"\n\n\"No Susan, I don't want you to call me Mistress. It sounds weird and on top of that it's a dead giveaway. Who calls who mistress nowadays?\"\n\n\"Oh, ok... It's just that I would have loved to call you mistress...\"\n\n\"Susan, just call me Sandra and that's it. No mistress, please,\" but she looked disappointed. So to cool the things between us, I finished, \"I'm sorry to tell you Susan, that you're very lacking in the part of hunchbacks to make a proper Igor.\"\n\nShe laughed and nodded. We continued walking towards the dinner. \n\nTen minutes later we got there, I had the impression that it was much closer when we passed it earlier that evening but I guess that Creepy Dad drives a bit faster than I thought. There were a couple of trucks in the parking lot and a caravan but there was no one inside except for a cook dozing off in front of the counter. We pushed the door and entered. The cook, a sturdy man in his mid-forties, almost fell from his stall. We went to a booth and sat.\n\n\"Want something to eat?\" I asked Susan.\n\n\"No but I guess you wouldn't mind to have a piece of the cook right?\"\n\n\"I wouldn't,\" I answered eyeing him as he dusted off some imaginary filth on his apron before walking to our table.\n\n\"Good evening ladies, can I get you anything?\"\n\nI ordered a beer. He looked at me with some reprobation but finally shrugged and turned to Susan.\n\n\"I'll have... a beer too.\"\n\n\"Two beers, coming right up,\" he said.\n\nBut he didn't move.\n\n\"Mind if I ask you what two lovely girls like you are doing here at this time of the night?\"\n\n\"We couldn't sleep and I was thirsty,\" I answered.\n\nHe shrugged again and walked back to the counter to get the drinks. Less than a minute later, he came back with the order. \n\n\"You girls students?\"\n\nI smiled at him.\n\n\"What's your name big boy?\"\n\n\"Jim.\"\n\nHad to be a Jim.\n\n\"You alone here Jim?\"\n\n\"Yup the night shift is for me. Not much traffic but the owner wants us to stay open all night. Don't know why.\"\n\n\"Are there any cameras, in here Jim?\"\n\nHe looked around.\n\n\"Why you ask?\"\n\n\"I don't know, I just wouldn't want what's coming up next to be recorded.\"\n\nHe took a step back.\n\n\"You're not planning on robbing me, right? Because the register is almost empty.\"\n\n\"No Jim, we don't plan on robbing you.\"\n\n\"Ah,\" he didn't sound very reassured, \"so what is coming up next?\"\n\n\"I don't know, maybe we weren't only looking for a drink, we might also have been looking for some... action.\"\n\n\"Action?\" he started smiling again.\n\n\"Yup good old rubbing action, what you say?\"\n\n\"You serious?\"\n\n\"Dead serious, so what you say, Jim?\"\n\n\"I say that there are no cameras in here on my mother's grave.\"\n\nI'm not sure if his mother was dead but he looked sincere. His confidence was growing back and I guess that it wasn't the only thing growing in him.\n\n\"Good, so maybe you can show us your kitchen?\"\n\n\"My kitchen?\"\n\n\"Yes, your kitchen why don't you take us there?\"\n\n\"Yeah, yeah, my kitchen...\" he smiled, \"if you ladies mind following me this way, we can have a grand tour of my domain.\"\n\nI smiled; I guess being a lady vamp makes all this hunting thing much funnier. No guy in his right mind would pass the occasion to tap on my sweet little ass. \n\nWe followed the cook behind the counter and through a small revolving door. The kitchen was small, no more than ten feet square but it was clean. I sat on a table leaving my feet hanging in the air. Susan tried to look cool resting against the door but it opened and she almost fell. She stepped back in the kitchen and leaned against the door of the walk-in fridge.\n\n\"So Jim, got a girlfriend? A wife?\"\n\n\"No,\" I knew he was lying, \"pretty much lonely at the moment.\"\n\n\"Cool, lucky for you, we walked in here tonight, right?\"\n\nHe smiled greedily. \n\n\"Now Jim, why don't you show us the merchandise?\"\n\nHe took off the apron and left it on the floor. The bulge on his sweatpants left no doubt on the effect we had on him. He took out his shirt. He was quite bulky with a tiny beer belly. I smiled. I turned to Susan. \n\n\"Why don't you get out your clothes too.\"\n\nJim looked at me.\n\n\"You like to give orders, don't you?\"\n\n\"Yup and I like to watch too.\"\n\nSusan had taken off her top and her skirt. She was wearing black laced underwear which was a great improvement over the white cotton I had always seen her with. She dropped the bra and the panties. Where she used to have this wild bush of nascent pubic hair, there was only a clean shaven mound. \n\n\"Yo big Jim,\" I spat.\n\nHe turned around confused. The bulge had doubled in size. I spread my legs allowing him to see that I had \"forgotten\" to put on any panties.\n\n\"Eyes up here! Come and give mama a kiss.\" \n\nHe stumbled to me. I could see a wild desire wanting get free behind his eyes. My hands behind the back of his head, his on my waist, our lips touched, our tongues mingled, my saliva broke the chains of the beast. I pushed him away. There was madness in his eyes now, he lifted my skirt, clumsily pushed his sweatpants half way down and tried to stick me right away. \n\nA finger on his chest.\n\n\"I said I like to watch, big boy, but be gentile, my friend is not used to wild beasts like you.\"\n\nHe grinned and turned back towards Susan. She looked terrified. \n\n\"Any second thoughts Igor?\" I asked her.\n\nJim, his sweatpants still over his knees, jumped his way through the kitchen, his dick swinging up and down until he pinned her against the walk in fridge. \n\n\"No... I... I'm a bit scared that's all,\" she managed to say before her lips were muffled by his.\n\nHe was all over poor Susan, hands grabbing her tiny tits, dick pressing against her belly, body crushing her against the fridge. I jumped off the table and pushed myself against the two of them. He was immobilized but he struggled. One of my arms went around his neck, the other holding them both, tightly squeezed, against the heavy door.\n\n\"Jim, you brute, be nice, can't you see she's just a little girl.\"\n\n\"Little girl...\" he managed to repeat. \n\nBut he didn't want to calm down, he wanted to take Susan savagely, violently, he wanted to dominate her, to make her scream and cry. He wanted to rape her.\n\nI pulled him back and forced him on his knees. I pulled his head up so he could look me in the eyes.\n\n\"Tsst tsst, motherfucker, you do as I say or you face the consequences...\"\n\nI leaned forward and my fangs dug two tiny holes in his neck. He came, throwing a long string of jizz all over the kitchen floor onto Susan's naked feet. I left him go and turned to Susan.\n\n\"Come,\" I said, \"don't be afraid. Sometimes it happens, but don't worry, never worry, I'm here to protect you.\"\n\nShe walked to us, with my free hand, I trailed up her thigh to find her pleasure slit. She was still a bit wet. As I kneeled and resumed my feeding, my fingers gently started pushing and teasing her curtains of delight. Her hand soon fell on my head, grabbing my hair and pulling it. She was ecstatic, pouring all over my fingers. \n\nI licked his neck and my lips. Strong musky blood full of rudeness and desire, exquisite.\n\n\"Now big boy, ready to behave?\"\n\nHe nodded.\n\n\"Good, could you gently take my friend on the table there?\"\n\nHe nodded again.\n\nHe took Susan by the hand and like a little porcelain doll he helped her on the table. He spread her legs and slowly, he pushed his dick into her tight guts. When he reached the back of her pussy, he smoothly came out. Susan whole body was shaken by convulsions, her brown nipples erected in the cold air of the kitchen. She panted heavily. \n\nAfter a while Susan peaked.\n\nI walked to them and forced him to stop. He looked disappointed. \n\n\"Now Susan, let me show you how to suck dick.\"\n\nJim leaned against the table. We were both on our knees, his hard wiener just by our faces.\n\n\"So this, Susan,\" I said grabbing the base of the shaft, \"is a dick. Dicks are the male equivalent of a cunt.\"\n\nShe laughed.\n\n\"Usually, when you encounter one of those you have three choices: one, you can stick it in you, ass or pussy doesn't matter. But you have already tried. You can also, two, stroke it,\" I did, pulling hard on the base and running my fingers all the way to the head, \"there are many ways to stroke a guy. You can rub it up and down, you can squeeze it, you can twist it and you don't have to do it with all your fingers. Make a ring with two of them, like this, and go up and down, they'll love it. You can also use both hands, like this, and if he is big enough like Jim here, and that you're not alone, you can even put a third and fourth.\"\n\nI guided her. She continued laughing; drinking my words just like I had drank Jim's blood. \n\n\"Now, in a dick there's not only the rod, well technically the rod is the dick, but what I mean is that you have to be conscious of its surroundings. You have the balls, those too you can play with; you also have this little part here, just below the balls, just before the ass, this part is quite sensitive too, imagine it as man's clit, you try it.\"\n\nJim was far gone. He was going to explode anytime now.\n\n\"Hold it there, can you see how the balls are contracting? That means he's about to come. And well normally you wouldn't want that because then he would be finished with you and you could sit on your orgasm, but since I bit him, he will be ready in no time, so Susan, let's go the third option you have with dicks and let's see what happens. Put your lips on the tip, yes, now suck it in small bursts. Yes that's it...\"\n\nI stepped back and looked at Jim... Three, two, one... He convulsed and Susan's mouth filled with Jim's seed. I took her chin and licked some spill. \n\n\"Now Jim, why don't you give us our practice tool back?\"\n\nJim hadn't waited for the order to start growing again. The lesson was ready to start again.\n\nAn hour later, Jim had come three more times, once again in Susan mouth, another time all over our faces and the last inside my pussy. I was about to call it a night when Susan asked me: \n\n\"Don't you want more of his blood?\"\n\nI turned my head to a side, silently asking for explanations.\n\n\"I mean don't you want to ... drain him?\"\n\n\"Drain? You mean kill him? What would be the point?\"\n\n\"I don't know... Would you like to?\"\n\n\"Well, yes I must confess it's extremely satisfying but I don't want to attract any attention.\"\n\n\"What attention? We're just passing through; no one will ever know we were here.\"\n\n\"That's a good point but I have another question for you: why would you have me kill him?\"\n\n\"Well I don't know it's in your nature, isn't it?\"\n\n\"Yes, but it's not in yours is it?\"\n\n\"No... I... I don't think so... I... maybe, I don't know.\"\n\n\"\"You don't know and you come up with me killing him, why?\"\n\n\"You're a vampire, you should kill, I think.\"\n\n\"And you're a psycho...\"\n\n\"Yeah, maybe, I don't know. All those years being picked on by mindless brutes like Jim here...\"\n\n\"How the fuck do you know if Jim was bully?\"\n\n\"I don't, but since there are no consequences don't you want it.\" \n\nThe idea was starting to grow seriously on me. Jim did look like a brute, and despite the fact that we came onto him hard... He was there dozing in the middle of his pans and pots, his limp dick on the side flaccidly resting on his leg. I kneeled by his side and I took his wrist in my hand, his pulse was weak but there was still more than enough to feed me. Susan sat on her ass, her legs spread on the other side of Jim's body. She had this terrible look, directly into my eyes, she was terrifying. She started teasing herself, circling around her shaven mound.",
        "\"Sandra, you want it, I know you do, now let it go, there are no consequences, take him...\"\n\nShe started teasing him, forcing him into yet another painful erection, it was too much, I couldn't resist anymore, I dived, sinking my fangs deeply into his artery, gorging myself with his warm blood. Susan across from me became more frantic, sticking herself with one, two, three fingers. \n\nJim erupted like a volcano just before he died. Susan rolled on the kitchen floor to let the waves of her pleasure wash away. \n\n\"You're a total psycho.\" I told her ten minutes later as we walked back to the motel.\n\n\"It's good we found each other then, right?\" she answered.\n\nI don't know what I'm going to do with her. On the other hand I'm a monster who drinks blood and rapes people... Who Am I to judge? \n\nThe last fire truck passed in front of the motel five minutes ago, I guess it's nearly time we hit the road.\n\nWrite you soon Anne.\n\n25.\n\nBad luck?\n\nJune 4th.\n\nAnne, I've been wondering. Don't take it the wrong way, but are you bringing me bad luck?\n\nYeah, I know it's a bit of a gratuitous accusation; after all you're just a regular diary in which I lay down my thoughts and adventures. But, see it from my point of view, until I started writing, I was your average teenage vampire, enjoying life, or unlife, as it came, biting here, fucking there, not a care in the world; and then, some three weeks ago I find you, a little diary with a pumpkin, a witch and a cartoon Dracula on the cover and I start telling you all my secrets. Most of them at least... And from that point on everything goes downhill. \n\nUntil you my secret was safe, after you...\n\nOne of my friends has joined me as creature of the night, another one has discovered my secret, and I'm not certain at all that said secret is in anyway safe with her, and I have made friends with a psycho who happens to know my secret too. \n\nYou know what they say; if two persons know a secret it's not a secret anymore. \n\nOn the other hand it has its benefits. For instance just this afternoon, after a long nap following our trip to see Professor Cortes, I went out for some last minute shopping at the mall for tomorrow's evening prom party. Helen needed a few things too and I picked her up at her place around seven. We drove to the mall and started walking around the shops. I needed a few clothes and Helen needed a hand bag so we went to the big shop at the center of the mall. Helen and I found what we were looking for right away but I wanted to enjoy myself a little longer so I selected a huge pile of clothes to try on.\n\nA good forty five minutes into the pile I got a text. I didn't check it as I thought it was my parents. But not even a minute later I got another one and almost behind it another one. I waved at Helen towards my bag for her to hand me the phone. \n\n\"Hi, GrlFr!\" \n\n\"I know u'r at the mall ;)\"\n\n\"I've got a\" there was a picture of a present and then \" 4 U\". \n\nIt was from Susan. I looked at Helen, she looked at me. \n\n\"Susan has a \"present\" for me...\" I said.\n\n\"Wicked little bitch,\" Helen replied, she smiled.\n\nI smiled back, I had told Helen about the day before and everything the professor had told me, well everything the professor had told me to tell her, obviously. \n\nI texted Susan where we were and told her to join us. A few seconds after sending the text I heard a ring tone and the door opened to reveal Susan followed by two other girls. One of them was pretty tall, five feet nine, long dark hair falling loosely on a white man's shirt tied below her chest. The other one was much smaller, a bit bulky and was wearing fishnets with a leather skirt. Both of them had a lot of makeup. Goths, both of them.\n\n\"Hello girls,\" Susan started.\n\nShe introduced her two friends; they were all part of her Vampire: The Mascarade roleplaying group. Suffice it to say that soon the changing room filled with the cries of pleasure of the three humans.\n\nSo yes, Susan is helpful and I must confess that I'm glad I'm not hunting alone anymore but still, I fear that this might end up badly.\n\nWho knows... \n\nAnyway, going to sleep now.\n\n26.\n\nJune 5th\n\nProm night... Even if I live a thousand years, I will never forget about last night. Well maybe not but it was still one hell of a night. \n\nRight now it's seven thirty and despite the sun outside my window and the fact that I'm exhausted Anne, I'm too excited to go to sleep. Just thinking about some events from last night I get shivers and my pussy is still sore of all the beating it got.\n\nSo Prom ball, I took Tomas as my date. Apparently it's not acceptable to go to the prom alone and consider everybody there as your potential date. So I had to take someone and Tomas asked me some time last week. I realize now that I didn't tell you about it. Beats me. That must say something about the importance I give to the poor man. Anyway so he got in around seven last night all tuxedoed with a ridiculous white corsage for me to wear. \n\nMy parents have taken this matter very seriously so poor Tomas even got the talk from Dad. Knowing him, I guess it's was mostly awkward and not so threatening.\n\nSo finally after thirty something minutes of pictures, mom crying and all, we got out the door. Tomas car was parked in front of the house, it should've been a limo - I would have loved a Limo - but it was an old red Cadillac. Red Cadillac is good for me as well. We hoped in and to the school we went. \n\nThe parking lot was full of premium cars, either rented or taken out of the garage for the occasion. We found Helen and Freddy by the door. Helen was wearing a beautiful blue pastel dress. Freddy looked completely worn off. I think Hellen is abusing him a bit too much. I'll have to tell her to be more careful. I spotted Susan. We waved at each other. She looked so innocent in her pink dress, her date was some computer geek I had fed upon one night in January as he was hanging around late at the school computer lab. \n\nI looked around for Lila but she was nowhere to be seen. She didn't even show up. Quentin was there but he was accompanied by another girl, one of the cheerleaders. I'm seriously starting to worry about Lila, since the match I didn't manage to talk to her and I'm feeling that we have still quite a few unresolved issues. I hope this doesn't blow out of proportions. I would hate to have to kill her. She was one of my best friends after all.\n\nThe gym had been completely redecorated, it was nearly unrecognizable. Large white drapes falling from the ceiling covering the walls and hiding the folded seats and the basketball rings. A large scene had been set up against the eastern wall with two large bars on each side of it. \n\nBut the decor was really not what was occupying my mind at that point. The excitement of each and every student poured thick into the air. Their very first adult social gathering turned into a fantasized realm of unlimited possibilities. The scent of the raging teenager hormones filled the room and I could feel it feed my lust and thirst. Helen had to kick me in the knee to make me realize that I was gaping, fangs exposed for everyone to see. Luckily no one had spotted me, not even Tomas who was clinging to my arm. The party hadn't started yet and I was already dripping wet.\n\nAs an answer to my unformulated prayers, Amalia, head cheerleader and potential queen of the ball, walked to me. Below her expensive perfume, I could smell her pussy already filling with liquid expectation. \n\n\"Hi Sandra.\"\n\n\"Hi Amalia.\"\n\n\"Would you...\"\n\n\"Yes,\" I smiled.\n\nI excused myself from Tomas and took her hand. I guided her out of the gym, into the dark corridors of school. The moment the noises started to fade in the distance I pushed her between two lockers and ran a hand between her legs. She moaned. \n\n\"Sandra,\" she whimpered, \"I don't understand. I need you so bad...\"\n\nMy hand found her soaked panties. Her pulsating lips welcomed my finger. Wet and warm, her pleasure would divinely squeeze my phalanxes. With my free hand I pulled the top of her dress down to her waist imprisoning her arms along her body. I pushed the elegant white laced bra out of the way to free one of her tits. I took her brown areola between my lips, sucking gently. She was on the verge of her bliss. I bit down, tearing her flesh with my fangs. Her scream echoed in the empty dark hallways. As I drank from my first victim of the night, she wrapped a leg around my hand. Expecting many more I only helped myself to a few sips, just to make the edge go away. I cleaned the wound and helped her back into her dress which bore a single discreet stain of blood. I kissed her enjoying her delicious trembling lips.\n\n***\n\nWhen we walked back into the gym the band had started playing. Amalia stumbled back to her date and probably forgot about me. It took me a couple of minutes to spot Helen. She was in a dark corner discreetly sipping on Freddy's neck. Not too far, Susan was watching them. I approached her.\n\n\"Are you enjoying yourself?\" I asked her.\n\nShe jumped.\n\n\"Sandra! You scared the hell out of me.\"\n\n\"Sorry about that.\"\n\nShe looked at me for a second and wiped something off the edge of my mouth.\n\n\"Who was it?\"\n\n\"Amalia.\" \n\n\"That bitch?\"\n\n\"Yeah, that bitch.\"\n\nShe smiled. \n\n\"Who's next?\"\n\n\"I don't know, we'll see what happens.\"\n\n\"I overheard some guys saying that they were going to smoke some pot on the roof. Maybe we can join them?\" \n\nShe had this devilish look in her eyes.\n\nI followed her back into the entrails of school. We dodged the head supervisor that was roaming the hallways and got to the small door on the fourth floor that would take us to the roof. The smell of weed was strong. We stepped into the night. We could see the whole school grounds from the roof. I stopped for a moment submerged with nostalgia. Tomorrow all this would be finished; I would not be a schoolgirl anymore.\n\nA couple of stupid giggles guided us to the smoking group. Our local Rastafari, Peter, was passing a bong to a Sophie, a big breasted bitch. Pete's best friend, Roman, was staring blankly at the stars. \n\n\"Mind if we join?\"\n\nPeter looked at us; a thin layer a tears covered his eyes. This wasn't his first bong of the evening. I had a couple of runs at him over the past few months but we were good friends. Sophie seemed bothered. Roman didn't even acknowledge our presence.\n\n\"Of course,\" Pete said, \"the more the merrier!\"\n\nSusan started coughing after her first hit. I took the bong and thoroughly licked its edges. I quickly passed it back to Pete. The weed combined with my saliva made him instantly fall on his back, a decent erection making a bulge on his cheap tuxedo pants. I took the bong back and gave it to Sophie, leaving me with Roman to take care of.\n\n\"Roman?\"\n\nHe didn't answer.\n\n\"Roooman?\"\n\n\"Yes?\"\n\n\"Come here sit by my side.\"\n\n\"Why?\"\n\n\"Because.\"\n\n\"Ok.\"\n\nSophie, sucking on the bong, had started stroking it as if it was a dick. \n\nRoman sat by my side looking at her.\n\n\"Sophie,\" he laughed, \"that's not a proper way of handling your bong.\"\n\nHe turned back to me. I was just a few inches from his face. He recoiled a bit, blinked a couple of times. I grabbed his chin and pushed his head to a side. I leaned and sank my fangs into his neck, just above the collar line. A powerful stream of blood filled my mouth, bursting out the edge of my mouth spraying on his jacket. I quickly licked the wounds and turned back to Pete, I wanted dick and from experience, I knew that his was much more... fulfilling than Roman's.\n\nI crawled next to him and pulled on his belt and pants. The erection was still there, hard and strong, ready for me. I lifted my skirt revealing my glistening pussy and without further delay I impaled myself on him. Standing on my knees I started working him. Up and down at a regular pace, letting his dick slip in and out of me, slide against my clit, soak in my juices. My pleasure was quickly building up in my chest. Finally, I came. \n\nI turned around, spreading my ass to accommodate Peter through the back door. \n\nI stopped. Perverted little Susan had prepared for me the most delicious show. Seated behind a now nearly naked Sophie, she was sucking on her neck. The crystal bong had lost its original purpose and was now deeply buried inside the big breasted bitch's pussy, Susan thrusting it in and out with both hands. Sophie was groaning deeply, submerged by the pleasure of the desecration Susan was submitting her to. I spat on my hand, wiped my ass with it and took Peter's dick deep inside me. I couldn't take my eyes off the girls. Peter's seed soon filled my guts and I came again, loudly, deeply. I left him and crawled to Sophie. \n\nMy lips replaced Susan's on Sophie's neck. My fangs broke the wet and warm skin and the taste of Sophie's blood mixed with the aroma of Susan's saliva. Peter's seed still running out of my ass allowed a neglected Roman to take me from behind. I accepted the present and continued drinking Sophie's blood. Susan's hands were all over my hair. \n\nFeeling Sophie growing weak, I closed her wound and pushed her down. Susan bended her head to a side and pushed my face against her neck. I indulged her and soon I came once again.\n\n***\n\nThe light had been dimmed in the gym and everybody was enjoying the party. Peter, Roman and Sophie would be a no show for the rest of the evening but it didn't matter, they had given what they had to give. Susan was a bit dizzy but she seemed okay and the pleasure in her eyes made up for her weakness. Helen, Tomas and Freddy were in the middle of the dance floor giving quite a show.\n\nThe music went out and the head of the prom committee announced that the announcement of the King and Queen would take place in just a few minutes.\n\nHelen and her two admirers walked back to me.\n\n\"You reek of sex.\" She told me to my ear.\n\n\"You too.\" I answered.\n\n\"How many so far?\"\n\n\"Four.\"\n\n\"Ha,\" she laughed, \"I'm at seven.\"\n\n\"Seven?\"\n\n\"Yup, Freddy and I found part of the football team drinking booze behind the dumpsters. The head supervisor caught us so I had him join us.\"\n\n\"Quality beats quantity; I had Amalia, Sophie, Peter and Roman... And Susan, actually too, which takes my total to five.\"\n\nWe were interrupted by the head of the Prom Committee coming back on stage. All the lights converged on her. The announcement was followed by the expected cheering and comments. Unsurprisingly Amalia got elected Queen and the team captain King. She nearly fell off the stage. The yearbook awards were then distributed. I ended up with the sleeping beauty award. Yey!\n\nFinally the band came back and the music resumed. \n\n***\n\nThree hours and a couple more fuckings later, I was seating on a chair resting for a while observing the people around me when Tomas approached me. He looked sheepish and I realized that I had neglected him completely.\n\n\"You're going to Amalia's party?\"\n\n\"Yeah, why?\"\n\n\"Do you want to drive you there?\"\n\n\"Of course, Tomas, you're my date tonight!\"\n\n\"Ah... good, I wasn't sure.\"\n\nI looked at him for a moment. He looked terribly sad. I stood and dragged him behind me. \n\n\"Come, you won't regret it.\"\n\nHe followed me. This time we passed in front of the head supervisor who was absent mindedly rubbing the bruises on his neck, not caring anymore about who went where. I took Tomas to a classroom, pushing him into the darkness.\n\n\"Sandra, you know...\" he started, \"you don't have to do this...\"\n\nI didn't answer. I took out his belt and pulled down his pants and boxers on his knees. I pushed him against the teacher's desk and kneeled before him. I started running my nails against his dick getting it hard in a few strokes. I wanted to take it in my mouth, but this was to be a present, I wanted him to remember. I stroke faster, he shivered. I sneaked a finger in his ass, he moaned. With both hands I pulled and pushed and squeezed until he finally released a long string of sperm over my hands. \n\n\"I... I'm sorry,\" he started.\n\n\"Shh,\" I said, \"this is not over yet...\"\n\nI took his limp and sticky dick between my lips and in no time he was back into action. I took my time; I gave him a blowjob for the stars. As I felt he was about to peak again, I took him as deep as I could into my throat and bit down. He sank into the orgasm of a lifetime. His balls sprayed three times thick and delightful sperm that perfectly stirred together with his warm blood.\n\nI licked his wounds, I licked his blood. I hid my fangs and looked at him.\n\n\"What the... What was that?\"\n\n\"That... was a present.\" I answered.\n\n27.\n\nSorry Anne I needed a break, writing about all this has made me so wet that I needed some relief. But now I'm better, some pussy rubbing with the shower head was exactly what the doctor ordered.\n\nAnyway, where was I?\n\nYes, Tomas' BJ. Pretty nice until it wasn't anymore. Not Tomas' fault but I should have been more careful. Just a present I told him and all of a sudden I heard a noise coming from behind me. Tomas heard it too. I turned around, out of surprise my fangs had grown back. I hissed. Why the fuck did I hiss?\n\nThere was a silhouette in the door frame watching a girl giving a guy a BJ, but then he or she saw a demon, a monster hissing at him or her. And suddenly there were no more silhouettes in the door frame. \n\nI don't know why I reacted like that, probably a deeply rooted instinct in my vampire nature. So I stood and ran to the door. I spotted the same silhouette turning around the corner at the end of the hallway. \n\nI chased him or her. The bastard ran fast. Next corner, I stopped, the silhouette was nowhere to be seen. I felt deep inside that he or she wouldn't be forgetting what he or she saw, so I needed to catch him or her, soon... I ran again but I paced myself trying to get a scent or a noise. But my senses were clouded by the lingering smell of Tomas' sperm and blood. And the noises... I could perfectly hear the end of the party in the gym but nothing else. \n\nWait... Yes there... Thump, Clic, Thump, clic. High heels, to my right, moving away from the party. The silhouette was a she. \n\nThump, clic, thump, clic.\n\nI started running again. We ventured deeper into school. \n\nThump, clic, thump...\n\nThe silhouette stopped. I turned around a corner and stopped too. I had cornered her. As silently as I could, I stepped into the dead end. It's a part of school I hadn't been in a pretty long while. Since I was twelve I would say. To my left a door was ajar. I waited. \n\nYes, she was in there, I could hear some breathing. I opened the door. Chalk in the air, this was Mr. Marin's class. Marin, my seventh grade teacher, is old school; he still uses a black board. \n\nI stepped in. \n\n\"Hello?\"\n\nNo answer but the breathing had stopped.\n\n\"Come out, I know you're in there.\"\n\nStill no answer.\n\nAll of a sudden, I think I heard some movement coming from under Mr. Marin's desk. I closed the door behind me. I needed to be quick. She had to forget. I walked to the desk. Now I could smell her. Perfume, make up and fear. A lot of it.\n\nAs quickly as I could I tried to grab her under the desk but there was no one there. \n\nShe burst out of a closet just by the desk. \n\nShit, she was running for the door. I jumped and fell on her back crashing a couple of tables. A large shard of wood went through my arm. It hurt so much. \n\nI tore the shard out and flipped her on her back. \n\nSamantha, the star of the school running team! No wonder why she ran so fast.\n\nShe looked terrified. She had to forget. She was at my mercy and the beast took over. The pain of my wound was replaced by the bliss of the bite. I drank, drank and drank more. More than I should have. I killed her. Fuck me!\n\nAnd then there were those other steps coming from the hallway. Someone followed us. Tomas followed me chasing Samantha. Fuck me!",
        "I tucked the corpse below the desk.\n\n\"Sandra, You in there?\"\n\n\"Yes...\"\n\n\"What are you doing?\"\n\n\"Waiting for you...\"\n\nHe stepped in the classroom.\n\n\"Who was it?\"\n\n\"Who was what?\"\n\n\"Who was it at the door?\"\n\n\"No one, forget about it.\"\n\n\"Sandra...\"\n\n\"Shut up and come here, if you want the second part of your present.\"\n\nAnd there we go again, bending over the desk, pounded from behind by Tomas. \n\nA hell of a night, I told you. \n\nAnyway, he fucked me, he came, I came, I bit him and fifteen minutes later we were getting back into our clothes, when I heard yet another noise coming from under the desk. A faint moan. I grabbed him by the collar, planted a kiss on his lips and begged him to go get Susan from me.\n\nThe runner had survived. Weak pulse, faint breathing. She barely escaped death and not for long if I didn't act soon. The infirmary was not so far away. I took out my phone, sent a text to Susan and took Samantha off the floor.\n\nA couple months ago I went to a hospital and forced a nurse to teach me how to do a blood transfusion. Why you ask Anne. Well exactly for this kind of situations. But as I said it was a couple of months ago. There was a lot of sex involved and with all the blood I had ingested tonight, my memory was kind of sketchy. So I found myself with Samantha on a bed, a couple of needles, a tube and little to no clue what to do with it. \n\nMe first? I tried it, it didn't work. Her first? There we go. \n\nMy blood had started filling up Samantha when Susan came in.\n\n\"What happened?\"\n\n\"I got carried away.\"\n\n\"Is she going to be fine.\"\n\n\"I sincerely hope so.\"\n\n\"Are you sure it's going to work, I mean blood type and all?\"\n\n\"Yup we're covered on that end. My blood is the blood I ingest and most of my blood at the moment is hers so, yes she should be fine.\"\n\nI started feeling weak. I started feeling hungry. Some color had come back to Samantha cheeks so I guessed this would be enough. I took out the needles, licked the wound on her arm and left her there to sleep her night. Tomorrow was Sunday, so luckily she would wake up before anyone would find her and if she didn't everybody would assume that she had a bit too much to drink.\n\n***\n\nI felt weak, I had a hard time standing so Susan helped me back to the gym. I didn't want to repeat the Samantha situation so I refrained from feeding from her. I was hoping to find someone for a refill in the gym. My expectations were met, tenfold.\n\nEven before pushing the large double fire doors, I knew something was quite not right... in a good way. The smell of blood and sex, the moans of pleasure, Helen hadn't left for Amalia's party yet.\n\nThe lights were on. Almost everybody was gone. Almost everybody but half a dozen people, a couple of members of the faculty, a couple of students, a couple of parents probably here to pick up their kid and of course Helen in the middle of a large pile of naked intertwined bodies. Helen covered in blood Brian De Palma's Carrie style. Only she didn't look angry or humiliated and the blood covering her was obviously not pig's blood. \n\nA couple of adults were standing over her, their wrists slowly dripping blood on her body and mouth. Helen was sitting on her naked ass, legs spread and kneeling between them two girls deeply tonguing her. Two guys, a teacher and the father were behind the girls taking them from behind. A symmetrical masterpiece of lust and perversion.\n\nSusan and I stood there for a while looking at them all, admiring as the pleasure washed over them in synchronized waves. But soon my needs took the best of me. I walked behind one of the men turning his back on me, quickly licked the coagulated blood on his shoulder and bit down. His blood was strong and full of lust. When he fell on his knees, too weak to continue fucking the girl in front of him I licked his wounds, stepped behind the second one and repeated the procedures. Once I was finished with him I dug deeper into the artistic display and bit the girls licking Helen's pussy. Soon they laid on their backs by my sides and I took their place between Helen's thighs. Saliva, sperm, secretions and blood all mixed together in a delightful cocktail of pleasure. Her wet thighs pressing against my ears, she came again.\n\n\"Oh you're here,\" she finally said, \"I thought I recognized your technique.\" \n\nHer look fell on the bodies behind me. \n\n\"Seems that we're pretty much done here. Why don't we go to Amalia's?\"\n\n\"I'd love that,\" I said wiping my mouth of her liquids.\n\n***\n\nWe left school premises around one thirty. Susan and Helen on the back seat, me shotgun and Tomas driving the red Cadillac. The last few cars on the parking lot belonged to the people we had left recovering in the Gym. I turned around when I heard a wet noise. Susan had lifted Helen's dress and was fingering her while sucking on her neck. Not so inspired I decided to give my driver some more pleasure. \n\nThe stroking went well despite his embarrassment, but as soon as I started sucking him he nearly drove us off the road. I had to finish him quickly with Susan and Helen laughing on the back seat. The rest of the trip went much more smoothly. \n\n28.\n\nWhen we got to the party the full moon was about to set over the horizon. There were so many cars that we had to park half a mile from the house and walk. The night was beautiful and I didn't mind but Tomas was still feeling weak from my feedings and we had to wait for him. After a bend in the road the house revealed itself to us. I knew that Amalia's parents were rich but nothing had prepared me to this mansion. A garden the size of a football field, three brightly lit floors each of them bigger than my own house, a swimming pool, a tennis court... You can see the picture, Anne.\n\nAnd the party had started without us. This was the last one of our childhood and Amalia had made it so that no one would forget about it. That was not counting on Helen and I and our memory erasing powers... I smiled as a boy from my class crumbled in front of us spilling his cup of beer all over his shirt. The garden was sprinkled with tuxedoes and long night dresses all of them filled with seniors at various levels of intoxication. \n\nWe got into the house, alcohol and weed mixed in the air in a cocktail of teen rebellion. The place was packed with boys and girls coming from all the schools of the county. I decided to visit the upper floors and Helen walked to one the large sofas where Freddy was dozing off. He had left the ball earlier as he was supposed to help Amalia set up the house for the party. Her head rested on his shoulder and she started nibbling on his neck. \n\nThe first floor was composed of a large living room with small sets of stairs on each side leading to doors. I guessed that it was where the action was taking place. I tried to open the first one but it was locked. The second one opened on a small corridor with three doors. In the corridor, a girl. She looked panicked, panicked and extremely drunk.\n\nShe stumbled towards me and fell into my arms. At first I didn't understand what she was saying and I had to make her repeat.\n\n\"Blood,\" I finally understood, \"so much blood...\"\n\nI reacted on instinct, pinning her to the wall and biting her. \n\nJust a little peck to make her forget. \n\nOnce I left her neck alone, she looked at me with desire, completely forgetful of the \"so much blood\" that had traumatized her. I pushed her back into the large living room and turned around. Yes I could smell it now, blood, lots of it. I followed the scent and entered the room to the right. \n\nOkay Anne, maybe I should have started the story of this evening's events by telling you the big news. Sorry for that. On the other hand, you know me; I'm a sucker for suspense. You might have guessed it by now, I have not turned one of my friends, as off tonight I have turned two. We are now three vampire teenagers.\n\nSo I opened the door and who did I find sitting on a bed, naked and covered in the blood of the captain of the football team? Amalia, of course. \n\nIt was bound to happen. Professor Cortes kind of warned me against it. Although this is not so bad... No, I can't tell you Anne. \n\nWell maybe I can tell you about the technical part if I leave to a side the Professor's plan. Okay so you might remember that some time ago you asked me how does a human turn into a vampire. At that point I didn't know. Now I do, the Professor told me. \n\nIt's actually pretty simple. A human turns into a vampire through the bite. But each human is different and for some unknown reason it will take a different number of bites for each human to turn. For some of them, very very few actually, it only takes one bite, it was my case. For the others it will take dozens and even hundreds of bites before they turn. Eventually everyone I continually bite should turn but in most cases it will take months if not years. \n\nAnyway let's go back to Amalia. \n\nHer mouth was locked to her boyfriend's neck. There was a lot of blood spilling all over his back. If she was to continue she would most probably kill him. I pushed her head back. She opened her eyes and looked at me. Her eyes lit up with desire. I kneeled behind the captain and licked the wounds. I pushed him out of the way. He fell off the bed drooling on the carpet. I kissed Amalia. I needed her to take her mind off him. She closed her eyes and I closed mine. I licked the blood on her lips, on her chin, on her cheeks, on her neck, on her breasts. Like a little kitten I cleaned my new child. \n\nSuddenly the door opened behind us. I turned around. Helen and Susan appeared in the light.\n\n\"Sandra!\" Helen started, not understanding what was happening. \"There's a problem. I think there's another vampire at this party.\"\n\nI smiled at her.\n\n\"Freddy was bitten by someone...\"\n\n\"I know,\" I simply answered.\n\n\"You... what?\"\n\nI turned back to Amalia and passed a hand in her hair. She threw her head back opening her mouth revealing her nascent fangs. \n\n\"Helen, Susan, meet the new Amalia, she's one of us now.\"\n\nHelen gapped. Susan, on the other hand, looked pissed, jealous. \n\n\"Close the door, come here girls,\" I said.\n\nI turned back to Amalia as Helen locked the door.\n\n\"What is happening to me?\" she asked.\n\nI wiped some blood I missed at the corner of her mouth and stood my finger in front of her nose.\n\n\"Do you know what this is?\"\n\nShe trembled.\n\n\"It's... blood?\"\n\n\"Yes it's blood, and how do you feel about it?\"\n\nHelen had sat by her side on the bed and Susan stood behind us. \n\n\"I... I don't know... I want it, I think.\"\n\n\"And how badly do you want it?\"\n\nShe closed her eyes; Helen's hand was now on her lap gently pressuring her thigh.\n\n\"I want it very badly...\"\n\n\"And what does that tell you?\"\n\n\"I... don't know...\"\n\n\"Yes you do...\"\n\n\"No... It can't be...\"\n\n\"Say it Amalia.\"\n\n\"I ... am... a vampire.\"\n\n\"Yes, you are, and Helen and I are vampires too.\"\n\n\"I should be terrified and yet... I'm actually so horny.\"\n\nI smiled. Helen's hand had moved between our new sister's legs, the fragrance of Amalia's pussy being teased surrounded me. I got out of my dress and pushed Amalia on her back. Her glistening genitalia were just a few inches from my lips. I started lapping it, drinking her cooling fluids, enjoying her happiness, her blissfulness.\n\nI started thinking too. How could I have not noticed the first signs of her changing? Just a few hours ago Amalia was still a simple girl whose blood had filled me and now she was in the early stages of becoming one of us. Had that last bite made the trick? \n\nHelen and Susan had undressed when I lifted my head from between Amalia legs. They had started playing with the firm breasts of the cheerleader, licking them, nibbling on the brown erected nipples. Amalia's head was buried between the very large pillows purring. I dived back between her legs and gave her yet another orgasm. A warm hand, Susan's, cupped my ass, one of her fingers teasing my butt hole, another one gently caressing the edge of my pussy. I arched my back. \n\nSoon we traded places. Me on my back, Amalia between my legs, Helen sitting on my face and Susan teasing my breasts. I came multiple times. It was glorious. We switched again and again so everyone could give and take as much pleasure as we could stand.\n\nWe finally sat in a circle, legs over legs, pussies covered in clear foam of delight, spread, offered to the fingers of the others. Susan sat in the middle, ready to be taken, sacrificial lamb of our devouring appetites. Helen and Amalia bit her on each side of her neck. I bended over and took her breast in my mouth. We drank, our fingers exploring each other's cavities, ravaged by tidal waves of pleasure. \n\n***\n\nWe left Susan in the room, exhausted by the high toll we had taken from her and mingled into the party. We fucked and drank a lot more before the night was over, before the first rays of light forced our host to go to rest.\n\nWe agreed on meeting again tonight and just before seven Tomas dropped me at home. My beautiful blue dress is in shreds. Mom's not going to be happy but I don't care. We are three now. Three brides to take over university. \n\nI think I'm going to sleep now. I can barely keep my eyes open. I love this life Anne, I love you. \n\n29.\n\nLast page\n\nAnne this the last page of the diary. The end of our journey. \n\nWe've been through quite a lot you and I, and it's a hell of a ride but now I feel that I don't need you anymore. Mom and Dad offered me a trip to Europe, my bag is packed by the bed and the plane tickets are just here on my desk. Susan will come too. Professor Cortes met with Creepy dad and he convinced him to let her go. He's really good with mind control and with his advice, I'm getting better at it. I'm so excited. My first transatlantic flight. \n\nWe'll start with Paris, then Brussels, then Amsterdam, then Vienna, a little trek to the Carpathians, Susan insisted on it, then Italy, Milano, Venezia, Rome, Napoli, from there we'll take a boat to Sicily and then to Spain and then through France again to finish in Great Britain. It's going to be so much fun.\n\nHelen will be going to Mexico and Amalia to Hawaii. \n\nAnd in September we'll all meet back to the university and under Professor Cortes guidance we'll ... No I can't tell you it's a secret. Sorry Anne.\n\nAnyway, you've been a great support but now I don't need you anymore. I know it sounds harsh but now I have other people to talk to. \n\nAnne, you've been the best friend of all, a good ear to drop my fears and loves. Not overly criticizing always helpful. Thank you Anne. Lots of love. I will never forget you. It's a promise."
    ],
    "authorname": "BrainVamp",
    "tags": [
        "vampire",
        "vampires",
        "teen",
        "lesbian",
        "blood",
        "high school",
        "masturbation",
        "transformation",
        "mind control",
        "vampiress"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/secret-diary-of-a-vampire-teen"
}