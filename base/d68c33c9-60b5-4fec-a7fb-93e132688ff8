{
    "title": "My Life as a Rat",
    "pages": [
        "Many thanks to BlackRandl1958, GeorgeAnderson, Todd172 and Bebop3. \n\n*\n\n\"Good morning, my darling.\" \n\nHis voice woke me in in that insufferably cheery way. The bastard. \n\n\"Sleepy again? Don't worry, I've made you a nice, strong cup of coffee. Just the way you like it.\"\n\nAsshole.\n\n\"Fresh orange juice.\"\n\nI hated him.\n\n\"Fresh Croissants. They are still warm.\"\n\nOne of these days I was going to kill him.\n\n\"I've managed to make a latte art heart on your Cappuccino. To express my love for you.\"\n\nI'd do it slowly.\n\n\"Nothing is too good for my good girl.\"\n\nPainfully. I wanted to see him suffer.\n\n\"It is so cute to see how you sleep in. You look so sweet while you're sleeping.\"\n\nFirst, I wanted to see his face. I needed to know who he was. What I'd done to him. Why he was doing this. \n\nYes, I'd slept in again. That was hardly a miracle after the night we'd had together. Well, together might be the wrong term. I suffered while he probably sat somewhere, on his fat, pimply, ugly ass, directing this.\n\nThe breakfast was on the table, which meant that he'd been in here again, while I was sleeping. I'd never seen him. I was glad for that. I only wanted to see him once: the moment I'd kill him.\n\nMost of the time, I got my food through a hatch, but not after nights like last night. The exhausted sleep had at least spared me from hearing the rats scurrying through my cell during the night. They had horrified me in the early days, but I was long past that.\n\n\"I was all right, for a while.\"\n\nNo! Not that shitty song again! Right on cue, my right eye started twitching again.\n\n\"I could smile for a while.\"\n\nI knew he'd play that song again, but that didn't make it easier. At least it wasn't extremely loud this time.\n\n\"But I saw you last night.\"\n\nThat shit made me puke. I had no idea what the song was. Some schmaltzy stuff from the 1950s, probably.\n\n\"You held my hand so tight.\"\n\nI imagined holding his neck so tight. Until he stopped twitching, preferably. All that was twitching right now was my damn eye, though.\n\n\"As you stopped to say hello.\"\n\n\"Noooooo!\" I couldn't help myself. I didn't want to react, to show weakness. I just couldn't stand that song anymore. I had heard it a thousand times since I'd been here, and I wouldn't have been surprised if my ears were bleeding whenever he played it.\n\nThe song stopped and I heard him chuckle. \n\n\"Good girl.\"\n\nDamn, another win for him. I hated him, I hated that song, I hated to be called \"good girl,\" like a dog. I don't think I knew what real hate meant before I ended up in here. Sure, I knew the general sense, but it turned out I had no idea. What I had experienced in here had shaped the true ugly meaning of that word. Now, I was one of the leading experts on hate.\n\nI still had to decide what to do about that damn breakfast. I was so hungry and it looked so delicious that I wanted to puke. It was a Trojan horse, probably laced with drugs most people had never even heard about. Sometimes after he drugged me, I was totally hyper, sometimes I was depressed, sometimes I had panic attacks, sometimes I just fell asleep. He could play me like a piano, using the small chemical plant inside my head.\n\nFalling asleep might sound like the best option, but it wasn't. As soon as I got tired after eating, I knew what was about to come. I fought sleep as long as possible, always in vain. I woke up in weird surroundings, or bound, suspended, under water, whatever. I thought I had seen every sadistic situation known to man by then, but his torturous creativity continued to surprise me.\n\nI hated him and he knew that I did. It was a good clean hatred, undisturbed by any kind of positive feeling. His cheery fake ignorance just reinforced it. My twitching right eye seemed to agree, as well.\n\nI looked around for the thousandth time. My room, no, my cell, was relatively large, but mostly empty. There was the simple bed I was lying on, a metal toilet, a mirror and the small wooden table, which was bolted to the wall like everything else. The mirror was made from polished steel instead of glass. I would have committed suicide a long time ago if it wasn't, which he had obviously taken into account. The only movable thing was a bucket I could fill with water to wash myself.\n\nThe old brick walls were damp, bordering on wet. There was a puddle in one corner. It was the darkest corner, the one I avoided whenever I could. I didn't like the vibes in that corner, it seemed scary, almost evil. At times, probably when it was raining outside, the drops falling into that puddle were enough to drive me insane.\n\nThere was one source of light, which was some kind of bright LED thing, protected by a grid. It determined what was day and what was night in my cell. The sun seemed like a distant memory. Although I had no access to a clock, I suspected that the cycle was highly irregular, which added a lot to my general confusion and tiredness. \n\nSome things about my situation were bad. Some were almost unbearable. His cheery mood was among the latter. One of the worst, though, was the absence of natural light. I had not the slightest idea where I was. I had no idea how long I'd been here.\n\nI finally gave in and moved towards the breakfast tray, as I always did. I hated myself for it, as I always did. I would have preferred to refuse his soiled gift, but my hunger was just too strong. He laughed through the speakers, as he always did. \n\n\"Good girl.\"\n\nOkay, he had defeated me again, but did he have to rub it in like this? Of course, I hated him even more for it. I had tried to start some kind of hunger strike some indefinable time ago, but I quickly came to the conclusion that I probably cared more about me staying alive than he did. I realized that I was playing poker with bad hands and stopped. If he wanted to kill me, there was nothing I could do about it, but I wouldn't do the job for him.\n\n\"Enjoy your breakfast, my sweet wife.\" his distorted, inhuman sounding voice told me through the hidden speakers. \n\nI might have been confused about a lot of things, but I was absolutely certain that I had never been married. My bloodied fingers moved towards the food as if they had a will of their own. My finger nails had long since been bitten down by my teeth, which also seemed to have a will of their own. The feeling that I was beginning to lose control over my body and my mind should have alarmed me. It didn't. Base instincts ruled. Survival. Hunger, in this case. As always, food was served in disposable tableware. Nothing could be used as a tool or weapon.\n\nAs I started to eat the disgustingly tasty food, I again tried to figure out what all of this was about. He had never told me, but I knew what he wanted. I was also sure he knew that I knew. We knew each other well, me and my \"husband.\"\n\nHe wanted to drive me mad. Plain and simple. I didn't know why. I didn't know who he was. I just knew that he was about to succeed.\n\n<center>* * * * *</center>\n\nSuddenly, I was wide awake again, surprised that I'd fallen asleep. I assumed he'd again spiked my breakfast. Sometimes I got some kind of day off to recover after a bad night like the one before. Not this time, it seemed. How long had I slept? I had no idea, as usual. My cell was completely dark and silent. I was lying on my bed, shivering. The damn bastard had turned down the temperature again, as he did when he wanted to drive me out of my cell. He could have carried me anywhere while I was unconscious, and he frequently did so. \n\nHe had put me into glass boxes that were slowly filled with water as I could hear him laughing on the outside. I could see his shape right next to me, but the semi-opaque glass kept me from recognizing him. The glass box was illuminated in a sick green light. My left hand was tied to the floor with a soft rope. The cold water was slowly rising. In the beginning, I welcomed it. I thought about suicide all the time, and the prospect of drowning was appealing. I started to taunt and berate him. He just chuckled. We were playing some kind of sick chicken game. Unfortunately, I lost when the water level had reached my mouth. My survival instinct kicked in and I screamed as pure terror took over. He was still laughing as I was drowning and losing consciousness. The last thing I heard was \"good girl.\" Of course, I awoke in my cell with a marvelous breakfast in front of me.\n\nThis time, though, he obviously wanted me to leave the cell on my own. I already knew what was about to happen. I was in for a round of our labyrinth game. Of course, I was determined to stay in the relative safety of my cell. Of course, I knew I would leave it anyway. He had many ways to make that happen. \n\n\"I was all right, for a while.\"\n\nShit.\n\n\"I could smile for a while.\"\n\nMy right eyelid started to dance to the music. The alternatives were staying inside a freezer listening to that shit and losing whatever was left of my sanity or going into the labyrinth, risking bodily harm.\n\n\"But I saw you last night.\"\n\nIt was loud, really loud this time. Asshole.\n\n\"You held my hand so tight.\"\n\nThe door was slightly ajar; light was streaming in, invitingly. Soft yellow light. It looked warm and enticing out there. The temperature in the cell kept dropping and neither my light and torn clothes nor my paper-thin blanket would keep me alive for long. I knew that the music would stop as soon as I left my cell. It was his system of rewarding and punishing his lab rat.\n\n\"As you stopped to say hello.\"\n\nAs my shivering started to get worse, my teeth started to rattle and my toes started to hurt, I thought about the futility of my resistance. He could starve me out any time. Would it make any difference if I kept suffering in this fridge? No. I'd go out the door sooner or later, anyway. Why not do it sooner and spare myself the biting cold and the shitty love song?\n\n\"Oh, you wished me well.\"\n\nReluctantly, I got up, hating myself for being so weak again. The music got a little quieter and I heard him chuckle. \n\n\"Good girl.\"\n\nShit, another win for him. I guessed the current score was at about 5,000 - 0. I opened the door further, cautiously peeking above the jamb with my twitching eyes. He had gotten me with those simple traps in the beginning, but we had long since moved past that. These days, I found many of his simpler devices before they harmed me. He was creative, though, and invented new ones all the time, many of them successful. We were like an old married couple. No sex, constantly watching each other furtively, hating each other, hurting each other. Well, at least I hated him and he hurt me.\n\n\"You, you couldn't tell.\"\n\nThe space above the door seemed to be safe, but the dim light made it hard to tell. The door to my cell was an old greenish steel door like you find in many industrial buildings. It was still sturdy, but the paint had started to flake away, probably decades ago. It was motorized, the drive sitting in plain view on the outside. I had tried to block it a few times. It was hopeless. I had no tools, just a few rags and he could clear it up easily after sending me to sleep yet again.\n\n\"That I'd been crying over you.\"\n\n\"Yeah, I'd like to see you cry, asshole,\" I hissed under my breath. \n\nThe ceiling was dark, way too high to reach and difficult to see in detail. I knew from earlier experience under brighter conditions that it was a simple concrete surface, just like the walls. There were numerous cable ducts up there, looking old and dirty. He had the habit of placing traps up there from time to time. I heard pigeons cooing somewhere in the distance, wondered what they were doing in this godforsaken place and whether they were even real. I cautiously peeked along the corridor in both directions. I've had a lot of painful experiences along this corridor. \n\n\"Careful,\" I mumbled, hating myself for being unable to remain quiet.\n\nNo unusual contraptions were to be seen, this time. The sturdy industrial lamps glowed softly at regular intervals. The doors that sometimes blocked the corridor after a few meters in each direction were both open. He was giving me some sort of choice, based on no information at all. \n\nI knew from numerous previous sadistic \"games\" that this main corridor stretched for about 30 meters in each direction. At each end, it branched into two directions. This was the starting point of a whole maze of corridors, mostly dark rooms and larger halls. There were lots of doors, giving him endless possibilities to change the layout of my personal hell. The prevalent impressions were dampness and dimness. The whole thing was like a system of moldy boxes. Water was dripping from the ceiling, it was running down the walls, it was accumulating in puddles on the floor. Everything was slippery, each section reeked a bit differently and none of them were pleasant. Dripping or burbling sounds were everywhere, sometimes multiplied by echoes.\n\nI was afraid. I always was in moments like this. The twitching got worse; sweat popped out on my forehead. Dimly lit corridors stretched on both sides. Both dark holes seemed to stare me down, waiting to unleash their hidden horrors on me. I could hear water dripping somewhere. The roof was cracking. There was no movement anywhere. Time seemed to stop.\n\nI stared into both directions, my eyes wide open in the vain hope of seeing anything that might help me with my decision. I needed to calm down, be cool, relaxed, bring my twitching eye under control. I took a few deep breaths.\n\n\"Calm down,\" I whispered to myself.\n\nI knew that he was watching my steps closely, probably laughing in glee and feasting on my fear. I had seen a lot of cameras, but there were probably a lot more that I hadn't seen. Did I mention that I hated the asshole?\n\nI chose the left side, for some indeterminate reason. As soon as I turned left, I felt the threatening presence of the other corridor on my back almost physically. I hated myself for being weak enough to turn around all the time, looking for movement. The roof groaned again, making me jump a bit.\n\nAs if in slow motion, I snuck down the corridor. I didn't have many things on my side, but I did have time. All the endless unmeasured time I wanted. The coldness left my body, but the trembling didn't. My fear was more than enough to keep me shivering. I carefully checked the walls and the ceiling for possible traps. When he sprung one of them on me, it was always painful, but the shock was even worse. The feeling of being at his mercy, having to endure whatever his sick mind had come up with. That feeling of helplessness and frustration. I felt like his toy, like an object. Exactly what he wanted me to feel, no doubt. Asshole. \n\nThe corridor walls were full of old industrial debris like switching cabinets, cables and old technical things I had no idea about. It was possible to hide traps there, but I could spot most of them, by now. He rarely bothered to try something that simple anymore, but you never knew. The floor was difficult to check because of the oily puddles, so I simply avoided those.\n\nI moved down the corridor at a glacial speed. Full of fear and tension, I oscillated my head to and fro like a demented senior. A sharp cracking sound in the distance shocked me, almost making me piss my pants. \n\n\"Shit.\"\n\nI knew that the old steel structure above me made noises from time to time, but that knowledge didn't ease my nerves. This place would have been eerie even without some psychopath placing traps everywhere. Just as I had calmed down a bit again, a blood-curdling scream tore through my ears, followed by a blinding flash of light in front of me.\n\nIn terror, I shrieked, turned around and mindlessly ran back towards my cell. My mind was empty, I just ran in sheer panic. Wait, I thought. Calm down. Stop this. You know better. I slowed down just in time to see a small horizontal bar that had appeared waist high from one wall to the other. In my panic, I would have run right into it, possibly hurting myself seriously.\n\nI stared at it, still unbelieving after all that time. How could someone be such an asshole? What had I done to him? I had always been a gentle caring person, I never hurt anyone. This felt so unfair. I vowed again to kill him one day.\n\nDefiantly, I looked up towards the camera, pointed at it and gave him a finger. In response, he growled through the speakers. I knew I would pay for this. It was totally worth it.\n\nCautiously, I returned to my exploratory quest down the corridor. I really didn't want to. I felt tired. Enduring this shit for so long, however long it had been, had worn me down. I was still shaking, sweat was stinging my eyes, making it even harder to see anything in this shitty, dark, wet cave. I still saw no alternative but to continue. He wanted me to, to test his newest inventions. I wanted to, to check the labyrinth for escape routes yet again. In the movies, people escaped from the most secure prisons all the time. Why couldn't I do it from this shitty old industrial building? I again vowed to explore this labyrinth to the last detail, even if it cost me my life.\n\nI passed a yellow door on the left. Damn, how I hated and feared that door. He had lured me into the room beyond it one day and had tortured me for what felt like an eternity with an endless barrage of blinding flashes and electrical shocks. It seems he had lined the floor with some conductive stuff. When I finally woke up in my cell after having lost consciousness, my body was one giant bruise.\n\nI really hated him.\n\nHe knew I would keep away from that yellow door instinctively, staying on the right side of the corridor. It might or might not mean that he had hidden something over there. Maybe he guessed I would think that, and would keep to the left. In any case, this area was a likely place for a trap. Trying to stay calm, I inspected the floor, the walls and the ceiling thoroughly, wishing again that I had a flashlight.\n\nNothing to be seen. I cautiously passed the area and nothing happened apart from asshole's distorted voice laughing at me over the speakers. \n\n\"Good girl.\"\n\nHe knew my fear and fed on it. Sick bastard. I was feeling like a lab rat once again. Like a dog that was being conditioned. This whole thing was so degrading. I was being consistently dehumanized and was powerless to do anything about it.\n\nHaving passed the hated yellow door, I reached the T-junction without any incidents. The left side had always been blocked by a locked dark red door after a few meters. Checking this door had once earned me a dose of pepper spray into the eyes without having any water nearby. As I had stumbled back into my cell, I had no chance to spot the newly added trip wire. It was painful and humiliating, as always. My eyes had burned for days and the abrasions had taken even longer to heal.\n\nThe door was closed again, but I abstained from checking to see if it was locked. As always, that left just the corridor to the right. It was even darker down there. The uneven walls and impenetrable shadows made it easier to hide things. It was one of his favorite places to hurt me. I cautiously entered it, nonetheless. I felt like if there were escape routes from this hell, they had to be in the bigger mysterious halls beyond this corridor. I knew I had to do this. Still, I was terribly afraid. Both eyes were twitching now, my palms were sweaty, my whole body was tense. I had always hated dark narrow places. Since this shit started, my dislike had been intensified to borderline claustrophobia, but I had to keep it in check it to survive. Most of my defeats had been caused by panic. Rational calm thinking was the only defense I had. ",
        "\"Keep calm...\" I mumbled. \n\n\"This is okay...\"\n\n\"I can do this...\"\n\nI felt like a mime artist as I stalked along the dark corridor, staring into the shadows without seeing anything, listening to the sounds, but hearing just the usual groans and thuds. After an eternity I reached my destination, a place I dreaded. The twins. They were a pair of massive old machines that loomed in the near darkness like threatening giants. They were two spots of an even deeper black within an already dark room. The hall itself had once been lit by skylights. They were almost completely opaque by now, just panes of a dark brown color, not illuminating anything.\n\nI felt, but didn't see, the thick layer of dust and debris covering the floor, which was a notable difference to the rest of the labyrinth. It seemed he had not prepared this area for his sadistic experiments and had probably just checked possible exits.\n\nThe corridor continued past the twins and led into the huge machine hall. I was afraid all the time, but in here, I was terrified. It always happened when I was at the twins or in the great hall. I wasn't afraid of him anymore. He was not relevant. Not in here. The place itself was evil. I felt it, like a physical force.\n\nEven my kidnapper didn't seem to like this place, as I had never experienced a trap in the twins' room or in the great hall. He seemed to bow to a greater evil. This was not his territory anymore. Something else was ruling in here. These places seemed inhuman, not just deserted by humans. It almost seemed that humans didn't belong here, anymore. \n\nIf he had forgotten to secure some possible exit, it would be in here. I hated to be here, but it was my best chance.\n\nThe corridor ran along the front side of the twins, and smaller aisles circled them completely. The space behind them was almost unnaturally black and terrifying. I had dared to give it a perfunctory check once. It felt like the small space was filled with fear, so thick that I could almost touch it. I couldn't see anything; it was like staring into a black hole. I endured it for a few seconds before fleeing back down the corridor in sheer panic. \n\nNo way I would repeat that today. I was too tense, already; this was not one of my best days. Yes, I needed to check that place again sooner or later. I decided later. Instead, I continued towards the great hall, probably the only room that was even more frightening than the twins' hall. Trembling, I crept forward, listening to each groan and creak the old building emanated, trying to discern anything unusual. Even my eye had stopped twitching, which meant that I was close to breaking.\n\nJust as I left the twins, I heard something rustling behind them. I was scared shitless. A rat. Probably. Calm down! I forced myself not to run again. I knew that if I ran, my panic would completely take over. 'For a woman seriously contemplating suicide you're quite the chicken,' I thought. Relax. If there's something evil in there, I should welcome it. It might free me of this nightmare, one way or another. Not really believing this shit, I still managed to calm down a bit and peeked into the great hall, looking back into the near darkness behind me all the time. I almost expected the twins to come alive and get me.\n\nThe great hall was almost completely dark. A few rectangular areas were illuminated by roof lights. I guess to any visitor from outside, they would have appeared pitch black, but to me they were almost glaring. Sometimes I felt like Gollum, all pale with enormous bugging eyes. The lit rectangles made the rest of the hall appear even darker. They were like islands of feeble light in sheer blackness. I never dared to enter these spots as I felt completely vulnerable there, like in the spotlight on a stage. \n\nWhere it was illuminated, the floor looked soft and plushy, like a carpet. The ceiling wasn't as high as in the twins' hall. I knew that there were machines everywhere, but they were hard to see and I wasn't interested in them as they held no chances for escape. They were present only as dark threatening shadows.\n\nThe only areas I was interested in were the walls. There must be exits apart from the big, immovable roll-up door and the exit at the opposite side, leading back into the labyrinth.\n\nAs usual, there were strange noises in here. The roof was cracking, there was a slight wind rustling through the machines. I felt like I was being watched by something evil, nonhuman, lurking in the shadows, as I always did in the great hall. There was something here far more dangerous than the asshole who had kidnapped me. This was something much more terrifying. I could feel its malevolent gaze on my skin, making my flesh crawl.\n\nI heard the rustling again. That was not the wind. Something was moving between the machines. It wasn't that far away from me, maybe ten meters. I stared into the darkness, trying so see something, already knowing that it was hopeless. I moved backwards until I felt the cool wall on my back. Again, a rustling sound. Nearer, this time. A loud cracking sound shocked me to the core. I couldn't help it. I ran. I might even have screamed. Through the dirt and debris, towards black gullet I came from.\n\nI plunged into it, leaving the hall behind me, running towards the twins. Just as I passed them, an inhuman scream from behind shocked me to the core. I ran past the twins at full speed, my brain completely wiped clean by panic. Just before I reached the main corridor, my foot tripped over something and I tumbled painfully again and again. I heard him laughing in the background. \n\n\"Good girl.\"\n\nMy panic left and the familiar hate took its place. I was back in my daily life, back in the shitty prison I was used to. This was bad, but the misery was at least created by a human. I knew that I would have to face the horror back there again someday, and the thought made me shudder.\n\n\"Fuck...\"\n\nIt frustrated me that I still didn't know what had happened back there. Had there been something or someone? Had it been Asshole who had scared me? Had it been my own mind paying tricks with me? I had no idea, and the uncertainty would have driven me crazy if my daily life in here hadn't already taken care of that job.\n\nI checked my body for broken bones, didn't find any and painfully struggled to my feet. I felt my face getting hot from the humiliation while he was still laughing.\n\n\"Having fun?\" he was mocking me while I checked myself for open wounds. \n\nOne day I'll get you, I thought without really believing it anymore. I knew that I needed to stay away from fatalism, but sometimes I couldn't help it.\n\n\"I was all right for a while.\"\n\nNooooo!\n\n\"I could smile for a while.\"\n\nThe music was just to mock me.\n\n\"But I saw you last night.\"\n\nHumiliate me.\n\n\"You held my hand so tight.\"\n\nIt was working.\n\n\"As you stopped to say hello.\"\n\nI stumbled further through the now brightly illuminated corridor towards the permanently closed red door and the main corridor to the left. I was still trembling, unsure whether it was from the panic, the run, the fall or the humiliation.\n\nOnce again, I looked at that damn red door while he graciously turned off the music. I always had the impression that this might be the entrance he used. I had looked at it many times, wondering how to get past it. Wondering what lay behind it, what I could do to unlock it. I had imagined all kinds of idiotic plans to trick him, to ambush him there. It was pointless; he would never open it if I was around.\n\nToday, though... something was different. The door wasn't completely open, but it definitely stood a bit ajar. Suddenly I saw a flash behind it and jerked back, starting to run again. I stopped, puzzled. What kind of trap was that? Had it gone off too early? Then came the biggest shock of my imprisonment so far. \n\nSomeone behind the door mumbled \"perfect shot,\" whatever that meant.\n\nI peeked behind the door and saw a huge guy holding a huge camera, looking fascinated at some worthless piece of old machinery. His face looked handsome in a chiseled delicate way. His face seemed to belong to an artist and his body to a lumberjack.\n\nI risked a quick glance past him, down the unknown corridor. Unlike the labyrinth, it was very well lit. My eyes had trouble adjusting after having spent an eternity in the twilight. The corridor I saw looked so different and somehow normal that I immediately knew that this was the exit I had been looking for so long.\n\nWho was that guy, though? With the same clarity that told me that this was the exit, I knew that this man was not my jailer. That guy looked totally harmless and blissfully ignorant while he still inspected that useless piece of junk. But who was he? One of Asshole's friends? The pry bar sticking from the back of his jeans told me that he wasn't. I was just trying to categorize him as an enemy, an enemy of my enemy or a friend when he turned around and saw me.\n\n\"Oh, sorry,\" he said, holding up his hands as if I had a gun. \"I didn't know that the building was still in use.\"\n\nThis was an important, possibly life changing moment. I needed to be calm and rational, calculating the potential risks and chances emerging with the new situation. Idiotically, what I actually did was freezing and suddenly becoming self-conscious about my appearance. I tried to take care of my body hygiene as best as I could, working with the few things I had. I had cold water in my cell whenever my captor was in a good mood. He usually was while I was recovering from major abuse. I had a small piece of soap, a toothbrush, toothpaste and a cheap plastic hair brush.\n\nThere was nothing I could do about my clothes. They were worn and torn from my little \"adventures.\" All I had was the jeans and T-shirt I was wearing when I was kidnapped. There was nothing I could do about my unhealthy pallor. While I didn't exactly look like a bum, I certainly looked a bit like a ghost. He seemed to come to a similar conclusion.\n\n\"You don't work here,\" he stated, elegantly avoiding coming across as a genius. \"Do you live in here?\" He seemed to think about his own statement while I was simply at a loss for words. \"Can... can you hear me? You understand me? Tim,\" he stated while pointing at himself and looking at me as if I belonged to some isolated tribe or maybe as if I was deaf or retarded. \"Tim,\" he repeated. \"Me, Tim.\" More wild pointing at his muscular chest.\n\n\"Yeah, yeah, I'm no idiot. You're Tim,\" I casually answered, as if meeting him in here was the most normal thing in the world. \"Dani. Me Dani. Look. Dani,\" I continued in the same idiotic voice, while pointing at my own chest and making ape-like noises.\n\nWe both cracked up and laughed until tears were streaming down our faces. It felt good. Damn, did that feel good. Those were the first words I had exchanged with a human being since I had entered this nightmare. Of course, I had communicated with my kidnapper, but you couldn't really call that a dialogue.\n\nOne of the worst aspects of my so-called life was the constant doubt of my own sanity. Was I still able to talk and behave like a human being? Had Asshole broken me, turned me into a mindless toy for his sadistic amusement? This short talk and the joke told me that I was still there. I was still Dani. I was not completely broken. I could even trust a stranger on an impulse and laugh with him. Hell, I had even remembered my name without having to think about it. I felt a huge relief.\n\n\"Dani. What doing in here? You safe?\" he continued in that dumb, but hilarious missionary-meets-native voice.\n\n\"No, actually, I'm not,\" I continued in a civilized way, because I enjoyed talking like that. \"I've been kidnapped and I'm held prisoner in here...\"\n\nMy explanation was cut off by the sound of a door slamming shut down the corridor. I looked around in panic, but the dark red door leading towards the labyrinth was still open.\n\n\"What's going on here,\" he asked, now clearly agitated. 'Boy, if a slamming door is enough to frighten you, welcome to my world,' I thought.\n\n\"That was my captor, sadistic asshole, kidnapper, sick bastard, lowest scum on Earth. A man with many names. He's closing our way out, it seems.\"\n\n\"What?\" was his reply, this time sounding naturally dumb, even without being in missionary-talks-to-native mode.\n\n\"This has the potential to get really ugly. Wait, let me check this door.\"\n\nI checked and moved the dark red door, but it wasn't motorized apparently. Asshole hadn't been able to lock us in by closing it from afar. I felt some relief because I wanted to keep as many options as possible. For some inexplicable reason I was pleased to find the now inactive pepper spray nozzles. It was the first trap I could see from the other side. Seeing how simple, even dilettantish, it seemed, took all the mystery out of it. It had worked fine, though. I still vividly remembered the pain and the fear of being permanently blinded.\n\nTim was looking at his cell phone, meanwhile, mumbling something like \"no service... Jammer maybe...\" I thought that all in all, he had stayed remarkably calm. Either he wasn't bright enough to fully grasp his new situation, or he was intelligent enough to know that panic wouldn't help.\n\n\"Keep away from those,\" I said, pointing them out. \"Pepper spray.\"\n\n\"Holy shit.\"\n\n\"Welcome to my world.\"\n\nI watched his pleasantly open face as reality sunk in. No need to stress him even more now. I remembered how terrified and confused I had been in the beginning. Of course, I had no one to guide me, as he had.\n\n\"What do we do now?\"\n\n\"Good question, Tim. I've never been in this corridor before. That seems to be the exit,\" I said while pointing at the grey steel door that had just been closed.\n\n\"Right. I came through there. I thought this old factory was abandoned. Schmidt closed down almost 20 years ago.\"\n\n\"What? We're in the old Schmidt factory? I'm almost home. Hell, I could probably see my house from the parking lot.\" Frustration engulfed me. To be that close to home made this even harder to bear, mainly because it made no difference at all. I was just as unable to escape.\n\n\"Again, what do we do now? What's going on here, anyway?\" he interrupted my newly refreshed misery.\n\n\"The short form: I've been abducted from my home. I don't know how, but I suspect I've been drugged somehow.\"\n\n\"Is it just one person?\"\n\n\"What?\" I was truly baffled. \"I've never thought about that. Yes, I always assumed it's just one guy.\"\n\n\"You know that it's a man?\"\n\n\"Yes, I hear him over the speakers from time to time. His voice is distorted, but it's clearly male.\"\n\n\"Interesting.\"\n\n\"Why?\"\n\n\"He distorts his voice. That means that he's at least thinking about releasing you at some point. He doesn't want his voice to be recognized.\"\n\n\"Yes, I agree,\" I answered, feeling like an idiot and trying not to show it.\n\n\"It could also mean that you know him.\"\n\n\"What? Oh God, you might be right.\"\n\nIn my mind, I frantically went through the list of men I knew, starting with that spooky salesclerk from the supermarket.\n\n\"So, you woke up in here?\" he interrupted my useless mental flicker book.\n\n\"I woke up in my cell.\"\n\n\"Where is it?\"\n\n\"Through the red door, to the right, along the main corridor, then it's a room at the right side,\" I said, using my hands to describe the layout and feeling like an idiot for it.\n\n\"Okay. Let me think.\"\n\nNo problem. We had plenty of time, although Tim might not yet be aware of that. I was reluctant to admit that I was a bit impressed by how quickly he had adapted to the new situation. He was thinking quite clearly, but that might just be the adrenaline. Shock and confusion might come later.\n\n\"So how does this work? How does he control you? Have you ever seen him?\"\n\n\"No, I haven't. I just hear him. He puts me to sleep, probably using drugs in the food. Then he sets up new ways to torture me. When I wake up, the fun begins. I'll tell you later, in detail. There are cameras and microphones everywhere, but maybe not in this corridor. I'm not supposed to be on this side of the red door.\"\n\n\"Okay. What about the grey door over there? That's the exit. Let's check it.\"\n\nHe started towards the door in question when I stopped him.\n\n\"Wait, you have to learn to move cautiously. He has placed traps everywhere. We need to check the floor, the ceiling and the walls.\"\n\n\"Oh. Okay.\"\n\nThe good news was that corridor seemed to be free of nasty surprises, but the bad news was that the grey door was locked and looked awfully solid. Tim grabbed his pry bar and was about to work on the door.\n\n\"Wait, Tim.\"\n\n\"What?\"\n\n\"Let's assume this corridor is unsupervised.\"\n\n\"Okay,\" he asked.\n\n\"He doesn't know that you have a pry bar then.\"\n\n\"So what?\"\n\n\"Tim I've never had a weapon in here. I've never had a tool. That thing,\" I said, pointing at the bar, \"might be a game changer. If you start working on the door now, he will know that you have something. Look at that door. Do you think the pry bar will make any difference?\"\n\nWe simultaneously turned our heads towards the door. No chance. That thing looked solid enough to survive a nuclear war.\n\n\"No,\" he admitted. \"No use in giving away an advantage for nothing.\" He gave me a resigned look. He was obviously just about to understand the situation in which he suddenly found himself. \"There's no other exit, right? Wait, forget that. Of course, there isn't.\" I just nodded. \"He has kidnapped you and I know about it now. He can't let me escape.\" Again, I nodded. Best to let him come to terms with it in his own speed. \"He's kidnapped you, but he's kept you alive. That sure won't apply to me and might not even apply to you, anymore.\"\n\n\"Oh.\" He was right and he surprised me by thinking ahead of me this time. \"You might be right.\"\n\n\"The time for games between the two of you might be over. This is now us or him.\"\n\n\"Right. Two people will be harder for him to control. He might feel threatened and become irrational or aggressive. If either one of us escapes, he's toast. He'd be locked away for quite a while.\"\n\n\"Let's make that happen,\" he said, obviously trying to sound convincing, but sounding like some cheap motivational seminar. \n\n\"You can't imagine how much I want that to happen. Prison might be too good for him. I want to see the bastard suffer.\"\n\n\"I can imagine that. Our priority should be to get out, not to kill him. He will lose in any case if we get out.\"\n\n\"Okay, let's worry about him later. We need a plan. Do we stay here, in this corridor?\"\n\n\"Why should we, Dani?\" It felt surprisingly good just to hear my own name again. It gave me a bit of my identity back, made me more of a person again, not just some nameless rat in an experimental labyrinth.\n\n\"Because this corridor is not a part of the labyrinth. No cameras, no microphones, no traps, it seems. I'm not supposed to be here, we are outside of his playing field right now. You need to understand the horror that's lying beyond this door, Tim. Everything there is being monitored. The whole labyrinth has been set up to give him every possible advantage. It is riddled with traps. We are completely at his mercy in there.\" I tried to drive home how serious the situation was, but I didn't like how whiny I suddenly sounded.\n\n\"Okay, that doesn't sound good. What's the alternative? Stay here and starve?\"\n\n\"No, but he won't necessarily feed us in there, either. It would be very easy to get rid of us anyway, if he wants to.\"\n\n\"Are there any exits in there that might be opened with a pry bar?\"\n\n\"I can't remember any, but we could check. It might be our only chance.\"\n\n\"Dani, I don't know. Wait a moment, I have to think.\"\n\nHe seemed to mentally leave this place and his face assumed a faraway look.\n\n\"I see three options,\" he said in a weird analytic voice I hadn't heard before. \"One, he wants to kill both of us. Two, he wants to keep both of us. Three, he just wants to kill me. He might not have decided yet.\"",
        "He was right, but I hadn't thought about it that clearly. Whoever this Tim guy was, he was used to analytical thinking. I decided to not interrupt him. While listening to him, I noticed that I enjoyed looking at him. Okay, that was natural as he was my first real human contact in an eternity, but it sure didn't hurt that he was damn easy on the eye.\n\n\"If he chooses options two or three, he needs to continue to provide food and water. He has to physically enter your cell to bring the food?\"\n\n\"He sometimes did, but only while I was drugged and sleeping. Normally he uses a hatch.\"\n\n\"Could we grab his arms while he does it?\"\n\n\"What? No, the hatch on the other side is closed when he opens my side.\"\n\n\"Okay.\" The bad news didn't seem to bother him, he was still in full analyst mode. \"Whatever he does, we have two options. One, we can check the whole labyrinth for possible exits.\"\n\n\"I have done that.\"\n\n\"Yes, but you were alone and you didn't have a pry bar. We have more options now. One of us could give the other a leg-up. It is safer to search the labyrinth now because we can help each other in case one springs a trap. On the other hand, it is more dangerous now because he might want to seriously hurt us. He might feel threatened and lose all restraint.\"\n\n\"Right.\"\n\n\"Our second option is to outsmart him.\"\n\n\"What? How?\"\n\n\"I don't know yet. I think we need to return to your cell. I'd like to see it and we can't stay here, anyway. What do you think?\"\n\n\"Sure.\" I suddenly felt insecure. My cell was an ugly shithole and hardly a place to entertain a nice man I've just met. I tried to shake that ridiculous thought.\n\n\"How long have you been here, anyway?\" he asked.\n\n\"I have no idea. What day is it?\" I suddenly felt like an idiot for not asking this right away. It was a clear sign of how much I had lost contact with reality.\n\n\"February 3rd.\"\n\n\"Fuck. I've been here for eight months.\" \n\nInstead of some nonsense reply, he had the good taste to just look at me empathetically. This is a nice guy, I decided, and immediately felt like a naive schoolgirl. He's the first nice person I've seen in months. Of course, I like him. This meant nothing, I decided. My belly had a completely different opinion, though.\n\n\"Can we block the red door somehow? We might want to return here at some point,\" I remarked, mainly to distract myself from developing ridiculous feelings for a stranger.\n\n\"Why? We won't be able to ambush him in here. He won't open the grey door until he can see us somewhere else in the labyrinth.\"\n\n\"True, but we might want to talk unsupervised again.\"\n\n\"Right. Let's take a look at that lock. Maybe we can block it somehow.\"\n\nIt turned out that there was no lock as such, but just no handle on the outside.\n\n\"Forget about it. It's not important anyway. Do you want to show me your cell?\"\n\n\"Okay. Cautious. As soon as we pass this door, we will be watched. Keep behind me and I will show you how to spot traps.\"\n\n\"Okay.\"\n\nHe hid the pry bar under the back of his shirt before we slowly went along the main corridor. I started my \"training Tim\" project immediately. I pointed out the various openings in the walls, floor and ceilings that could be used to install traps.\n\n\"You endured this for eight months?\" he asked in awe. It felt good to see him react that way. It felt so damn good to see some respect for what I had to do. I had suffered through this without having someone to talk to or to acknowledge what I had endured.\n\nInstead of answering, my emotions overwhelmed me and I broke down, sobbing into his shoulder like a moron. He just held me awkwardly and stiffly, but patiently. After a while I calmed down a bit and realized that despite his obvious attractiveness, he was not used to being close to women. Teasing him was going to be fun, I thought, before remembering the situation we were in. I pushed him a bit onto my chest just to tease him a bit more. I felt his body stiffen and immediately felt better. Yes, having a good-looking, but deliciously shy guy around certainly beat being alone.\n\n\"Okay...\" damn I had already forgotten his name. \"Tim.\" My memory for names had always been terrible, but this was ridiculous. The first human in months and I almost managed to do it again. \"Let's go.\"\n\n\"Hot steam valves. Absolute agony for a few days if you're not careful. He did give me burn ointment afterward.\"\n\n\"What? Seriously?\"\n\nI just shrugged my shoulders.\n\n\"Over there are the needles. See? On the floor. You have heavy winter shoes, not light sneakers like me, but I still doubt they would help much.\"\n\n\"Oh God. Did you...?\"\n\n\"Just a bit. Not as bad as it could have been.\"\n\n\"Damn. I already hate the bastard.\"\n\n\"Remember, we are being monitored.\"\n\n\"Doesn't matter. What does he expect? Warm feelings? To be loved?\"\n\n\"I don't know what he's thinking.\" I realized that I had learned to guard my feelings most of the time. I just hoped I could return to a normal life someday and have normal feelings, be open, be trusting and spontaneous. The possibility that the asshole might have taken that away from me frightened me more than the Taser trap I just pointed out to Tim. That little beauty made me flop around the floor uncontrollably while soiling my pants, accompanied by asshole's laughter over the speakers. Even that wasn't as scary as the prospect of having been turned into a cold, wary bitch.\n\nWe finally reached my cell, and luckily, the motorized door stood open. I explained the mechanism to Tim.\n\n\"I could block or destroy that motor with my pry bar,\" he whispered into my ear.\n\n\"No, we need that advantage. He mustn't know that we have it,\" I said, stating the obvious.\n\nHe nodded as if he never really considered it anyway.\n\nI led him into my cell and was deeply embarrassed. Rationally, I knew that I was not responsible for it, but here I was, inviting a nice guy into my home and it looked, well, like the rotten cell it was. Unconsciously, I ran my hand through my hair and smiled uncomfortably. He didn't seem bothered at all and just started to take in my small kingdom. We both looked at the narrow bed, the bucket of water and the toilet. I wondered how I would ever be able to use that again with him in the room.\n\nHis face turned red as if he had the same thought.\n\n\"This might be... well... difficult,\" he mumbled.\n\n\"We will get used to it,\" I answered, trying to sound more confident than I felt.\n\nWe both jumped a bit as the door started to close.\n\n\"Shit,\" he said. Despite the dangers of the corridors beyond, the closing door still got to me every time. For him, it must have been even worse.\n\n\"It seems I have another guest. Welcome to my game,\" the distorted speaker voice still startled me a bit, while Tim almost jumped out of his pants. \"We will have sooo much fun together.\"\n\nAfter a few seconds of silence, it was clear that nothing else was going to happen this time.\n\n\"So, I think I'll sleep on the floor,\" he bravely proposed.\n\nI realized that I didn't want that. Why? I had no idea, but I knew that I was looking forward to sleeping with him next to me. No sex, but just to have a warm, friendly human being next to me.\n\n\"Nonsense. I had to sleep on the floor once and I can tell you...\"\n\n\"Wait, what?\" he interrupted me. \"Why did you do that?\"\n\n\"Well, he soaked my mattress once just for fun and I had no alternative. Anyway, I almost froze to death on the floor. No way I'm going to let you sleep down there.\"\n\n\"Okay. We'll try to make it work somehow.\"\n\nThe speaker voice interrupted us. \"NO! You will get another mattress.\"\n\nI was shocked and it seemed Tim noticed it.\n\n\"What?\" he silently asked.\n\n\"Never. Never ever. Never has he talked to me like this. Never has he offered me anything to make life easier,\" I whispered back.\n\n\"Interesting.\"\n\n\"What?\"\n\n\"He likes you.\"\n\n\"You're kidding...\" We were still whispering, but I didn't know if it prevented Asshole from hearing what we were saying.\n\n\"No, seriously. You say that something like this has never happened.\"\n\n\"Right.\"\n\n\"He has just shown a weakness. The question is, why?\"\n\nI just looked at him, puzzled.\n\n\"He doesn't want us to sleep on that bed together, Dani.\"\n\n\"Obviously.\"\n\n\"This is not about comfort. This is about jealousy.\"\n\n\"What?\" I looked at him like he had two heads. I couldn't even keep my voice down.\n\n\"He sees me as competition. Dani, this man loves you.\"\n\n\"Oh, shit.\" I guess I had known it all along, but hearing Tim say it out loud made me incredibly sad.\n\n\"He thinks that through all of this the two of you are in some kind of relationship.\"\n\nI just nodded with a growing sense of desperation.\n\n\"I am an intruder into your happy marriage. He has to accept me as a guest, for now, but he's going to do try to get rid of me as soon as he can. I think I'm going to live dangerously from now on.\"\n\n\"We'll have to be smart.\"\n\n\"Dani, has he ever raped you?\"\n\n\"No. He's never touched me inappropriately as far as I know.\"\n\n\"He's following his own strange logic. Rape is obviously a no-go for him. Dani, you know that you're incredibly beautiful, don't you?\"\n\n\"What?\" I asked, while unconsciously running my fingers through my hair. I was surprised, but I still liked hearing that. \"Are you crazy? Have you looked at my complexion or my hair? I haven't been at a hair dresser in...\"\n\n\"Doesn't matter,\" he interrupted me. \"You just are. And he's worshipping you. He doesn't dare to approach you directly. He's probably even afraid of you. Still, he wants to keep you as some kind of possession. Believe me, he loves you in his own, very weird, way.\"\n\n\"Why is he torturing me then?\"\n\n\"I'm not a psychologist, but I think it's the only means of contact with you he has. Of course, there's also the sense of power it gives him.\"\n\n\"Damn, this is so weird.\"\n\n\"What did you expect? Some sane rational guy?\"\n\n\"I guess not.\"\n\n\"So, what can we do? Wait here until he has turned us into his sock puppets or killed me?\"\n\n\"Shit.\"\n\n\"What?\"\n\n\"I've been exactly that. His sock puppet. Shit.\"\n\nHe looked at me sympathetically. \"Or we can be proactive.\"\n\n\"Damn, you are here for a few minutes and already are more rational about this than I've ever been.\"\n\n\"You've been fed drugs all this time. I haven't.\"\n\nThat consoled me a bit. \"So, what do you propose?\"\n\n\"We will get another mattress soon, I guess. We just won't use it.\"\n\n\"Haha, you'd like that, you horny bastard, wouldn't you?\" I realized that I'd like that as well and felt my face get warm. I hoped it was dark enough to conceal my facial color change.\n\n\"No, seriously. He will get jealous. He won't have time to develop a good plan. We have to force him to act without thinking. This might be our best chance.\"\n\n\"What are you two talking about?\"\n\n\"Ha! He can't hear us. He's already getting nervous.\"\n\n\"You might be right, Tim. Okay, so he might get jealous and act hasty. What then?\"\n\n\"I guess we'll get a good meal soon.\"\n\n\"What?\"\n\n\"Including a nice assortment of drugs, of course.\"\n\n\"Okay.\"\n\n\"Here's what we're going to do...\"\n\n<center>* * * * *</center>\n\nThe new mattress was waiting for us in the corridor after the door opened a while later. We just ignored it. After a few speaker messages demanding we move the thing inside the cell, sounding suspiciously like someone was losing his cool, the door was closed again. We heard a growling sound. We just looked at each other and shrugged. \n\nAs expected, our meal arrived shortly afterwards, and it was among the best I had ever gotten from him.\n\nWe dug in heartily and fooled around like teenagers, even playing with the food. We were mock-wrestling, kissing and struggling while eating. I hadn't had this much fun while having a meal since I was a small kid. I admit that I really got into kissing Tim. He overcame his natural shyness quickly and turned out to be a sensational kisser. He still stiffened as I touched him inappropriately, but the stiffening was now limited to the right body parts.\n\nAfter our culinary wrestling match, we lay on the bed, cuddling and dozing contently. I realized that I easily could get used to this big guy spooning behind me. I realized that my eye wasn't twitching anymore. I thought about it and it seemed like it had stopped quite a while ago, probably when I had found Tim. I just hadn't noticed at the time.\n\nWe pretended to sleep, and sometimes probably really did, but nothing happened during that night. Of course, we hadn't really eaten the food. We hoped he would enter the cell while thinking we were fast asleep, but it hadn't happened.\n\n<center>* * * * *</center>\n\n\"We'll have to up the ante,\" I whispered. It annoyed me that after months of having no one to talk to, whispering was all I could do.\n\n\"Already?\"\n\n\"Yes, we can't give him more time to prepare shit.\"\n\n\"Agreed. What do you have in mind?\"\n\n\"Sex.\"\n\n\"Wha...\" Poor Tim. I was teasing him mercilessly, but it was for a good cause. The fact that I was enjoying it immensely was just an added bonus. I just wished that I had a camera to capture his look. Priceless.\n\n\"Just to provoke him, of course.\" I'm afraid that I grinned a bit, maybe not hiding my true intentions. Sure, this was the best way to get an ill-conceived reaction from Asshole, but it was also going to be so much fun. I hadn't been laid in months and had absolutely no sex drive. Tim had reawakened that in record time. I felt like some predator moving in for the kill. Despite his looking like a deer into the headlights, I was pleased to notice that he had quite a boner. Good. This plan was going to be fun, whether it worked or not.\n\nI practically leaped upon him, not being able to hold myself back any longer. I realized that I really wanted Tim. Some force was driving me towards him mercilessly and I enjoyed it.\n\nThe poor guy stumbled backwards onto our small mattress, helpless to do anything about the kissing burr that had attached herself to him. After a while he seemed to relax and soon was participating enthusiastically.\n\nWe had just started to kiss and fondle at full force when the light went out and was replaced by the old but still annoying strobe light effect. It was dizzying as hell, but he had used it too often and it got old after a while, so he eventually stopped doing it. I already knew what would come next. \n\n\"I was all right for a while.\"\n\nWow. The music was really loud this time. That couldn't be healthy.\n\n\"I could smile for a while.\"\n\nTim looked at me, obviously totally shocked. I remembered that the loud music combined with the damn strobe light had this effect on me as well in the beginning.\n\n\"But I saw you last night.\"\n\nSome calming words might have been welcome, but the music was way too loud.\n\n\"You held my hand so tight.\"\n\nAll of this wasn't new to me, although it had never been that loud. This time, though, something new happened. It was difficult to see due to the damn strobe light. The door of the cell definitely opened and a man rushed into my cell, his face contorted with rage. Shit. I felt like I was about to faint. I knew that man. I was too stunned for words or action. My only movement was the return of the damn eye twitching.\n\n\"As you stopped to say hello.\"\n\nHe rushed towards us with something in his right hand. The damn strobe light made it difficult to tell, but it suspiciously looked like a kitchen knife. This is not a planned thing, I thought. He just grabbed whatever weapon was at hand. He obviously didn't have a plan, but to my shame, neither did I.\n\n\"Oh, you wished me well.\"\n\nHe had used the music and the light to mask his impromptu attack as well as possible.\n\n\"You, you couldn't tell.\"\n\nI looked at Tim and to my horror, he wasn't reacting at all. Didn't he see what was happening? Asshole was about to kill us and Tim was as frozen as I was? Shit.\n\n\"That I'd been crying over you.\"\n\n\"Tim!\" I screamed, but even I couldn't hear me over the shitty music.\n\n\"Crying over you.\"\n\nIn horror I watched Asshole rushing towards us. Please! I've just met Tim and now I'm about to lose him again? He lets himself be paralyzed by this stupid old light and music trick? I again remembered how I reacted the first time and I had to admit I couldn't blame him. \n\n\"When you said, so long.\"\n\nThe knife with the attached madman had almost reached the totally stunned man at my side. I was about to jump the armed man and defend Tim with my bare hands when he suddenly went into an elegant motion. In one fluid move, he swung the pry bar in a smooth roundhouse arc, totally ignoring the knife.\n\n\"Left me standing all alone.\"\n\nRight at that second the sound and light show stopped and I was able to hear the dull thud Walter's skull made upon connecting with the metal bar. It was followed by an \"ooomph\" sound escaping from his mouth.\n\nYes, Walter, as in my ex, Walter. We had never been married, we never even really lived together. None of this stopped him from fantasizing about how we'd grow old together. He told me how much he loved me all the time, but it didn't stop him from being the most controlling and pedantic asshole known to humankind.\n\nIn the beginning, I was endeared to the shy and quirky nerd. He wasn't bad looking and I was flattered about the lengths he was willing to go just to please me. I got flowers and small lovey messages all the time. He always seemed to be around whenever I needed help. I didn't love him, but he was good for my ego and I enjoyed spending time with him. That changed quickly after the first sock drawer crisis. I stayed away from any clothes in his apartment from then on, but he quickly found other ways to \"optimize\" my life.\n\nHe turned out to be a natural wonder in being able to combine every psychosis known to man into one body. Suddenly, everything made sense. I wondered why I never suspected him before. I guess I had booked him under \"weird, but utterly harmless.\" It seems he hadn't taken my dumping him as well as I'd thought. He waited patiently for three years before kidnapping me. He probably needed the time to plan and execute his revenge down to the last minute detail.\n\nI thought about all of this while I watched Walter sinking towards the floor gracefully and unconsciously.\n\n\"Tim,\" I screamed idiotically and threw myself into my hero's arms like some clich\u00e9 maiden from an old movie. Damn, that could easily have gone wrong.\n\n\"It's all right. Calm down.\" He tried to sound manly and calm, but he was shaking with excitement as well.\n\nAfter a while we did exactly that and I turned towards my sadistic kidnapper. Strangely, I felt none of the hate that I had imagined I would feel at this moment. I didn't even feel relief or a sense of freedom. I just felt tired and empty.\n\n\"Have you killed him?\"\n\n\"I have no idea. Wait, I'll check.\" Like an idiot, he bent down to check Walter's pulse. He was way too unsuspecting, clearly lacking the training in distrust I'd had recently.\n\n\"Wait!\" I tried to stop him.\n\nToo late. Walter turned instantly, grabbed the pry bar from Tim, kicked him in the nuts, jumped up and started to beat his back while Tim tried to shield his head.\n\nIn panic, I looked around, saw the knife Walter had dropped, took it and plunged it into his neck without thinking.\n\nShocked, I stepped back. The knife was still sticking out of his neck. He dropped the pry bar, looked at me and said \"Dani,\" while the blood was spurting from the wound in alarming amounts. He looked at me accusingly, like I had just committed the most atrocious crime for no apparent reason. \n\nTim just stood behind him. There was nothing left to do. Walter was clearly beyond help; all we could do was watch him slowly die. For all the hate I had, for all my fantasies of slowly killing him, this was not what I wanted. Fantasizing about it and actually seeing it were two completely different things. It was definitely the most horrifying moment of my whole life, including my kidnapping and captivity. I had killed someone. Gentle, caring Dani had been turned into a monster. Self-defense or not, I felt like this act had permanently soiled me.",
        "In silence, we watched Walter dying on the floor. After a few seconds, I went to him, put my hand on his face and said \"I'm sorry that it had to come to this, Walter, but you left me no choice.\" \n\nYes, I was justifying what I did, but I didn't do it for him. I'd once been Dani, the gentle medical student. I needed to know that I was still that person. Being able to retain a personality that cared for others, even my enemies, was my ultimate victory over him.\n\nAfter a while, I stood up and Tim came over to hold me. I even cried a bit while Walter looked at me pleadingly. \n\nAfter it was finally over, we just left the cell, hand in hand. No traps were active, the light was switched on everywhere, all the doors stood wide open. As we passed the red door, I looked back towards the still-dark area of the twins and the great hall one last time. That mystery would remain unsolved, but I could live with that. Never again did I want to experience that horror. I doubted that I would ever talk to anyone about it. No one would understand it without having experienced it. \n\nWe picked up his camera, found the control room and his meticulous schedule on how to torture me. He had pedantically laid out my fate for almost three months to come. Some entries like \"Snakes\" made me shudder.\n\nTim had cell phone service again and we sat on the floor exhausted, waiting for the police to come. I looked at my bloody hands and started to sob, glad to feel Tim holding me.\n\n<center>* * * * *</center>\n\nI was awakened by that damn laughter again. My cell. My bed. My desperation. It was all there. My rescue had just been a dream.\n\n\"You really think you can escape me? Never. You're mine! You always will be!\" Walter was laughing madly.\n\n\"Ouch. Not again, Dani. Wake up.\"\n\nSlowly I came to my senses. Damn, I had slugged my poor husband in my sleep yet again. That shit still haunted me after all these years.\n\n\"I'm so sorry, Tim. Where?\"\n\n\"On the nose. Again,\" he whined in a clearly exaggerated way through the hand that covered the injured facial feature. It couldn't have been that bad. He was fishing for some compensation, as usual. He always enjoyed this part, as did I, but first, I quickly checked the clock.\n\n\"Sorry, buster, morning sex is out. We'll be late. I can offer you a Cappuccino, though.\"\n\n\"Well, I guess I have to take what I can get,\" he mock-whined. \n\n\"Oh, don't be such a baby.\" We laughed together and I lightly kissed his poor, victimized proboscis. I would make it up to him thoroughly later, and he knew it. Life was good."
    ],
    "authorname": "stev2244",
    "tags": [
        "beyond the wall of sleep story",
        "labyrinth",
        "angst",
        "darkness",
        "psychopath",
        "kidnapper",
        "horror"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/my-life-as-a-rat"
}