{
    "title": "The Wallflower Ch. 05",
    "pages": [
        "// Hey Everyone! :D I got a request for 3-4 pages in the comments, so hopefully when this is uploaded it will be at least 3 pages. Every chapter since chapter one has been to give you more to read. But it's going to take me 2 weeks to write a full chapter now because to write another page for Literotica equals 6-7 more pages of writing on Microsoft Word. I think ya'll are going to love this chapter. Please leave a comment, email feedback, criticism because I do read and respond to everyone. In fact I read them every time before I write. Have an awesome read. \u2013BlessingAndCurse//\n\n\n\n\nThe night seemed at its darkest that day. There were no windows to get even a sliver of the bright iridescent moon. But Lily felt that it was simply the norm. Darkness always came before the true horror began.\n\nThe Spirit would not be pleased with this. \n\nFor the past few nights, all Lily did was anger him. She had gotten warning after warning. And last night was her last one. But it wasn't her fault that Nicholas chose tonight to bring his girlfriend over while she was left to lay on the living room sofa to sleep. She actually wondered if he did that on purpose just so she would get punished as she recalled him saying something earlier about how he didn't want to do that again. He knew this would happen when he brought her over.\n\nAnger started to burn inside her chest as she thought about once again being punished for something that wasn't her fault. Only just seemed to be her fault. She already had been through enough of that. She was a good girl but was always every asshole's scapegoat. She had gotten the full brunt of that during high school when everything was going to hell.\n\nOn her fifteenth birthday, her father had been killed at the store while buying Lily a last minute birthday present. Being as she was, Ma didn't feel as though Lily didn't feel low enough already. She still remembered the horrible words he mother had said to her. \"If only you weren't a demanding little bitch,\" she had said lowly. \"Maybe he would still be alive.\" The words were short and to the point like a deadly weapon. And it had hits its target and twisted inside her chest. Her father had known how crazy her mother was. He would always be her knight in shining armor who came to her rescue when her mom tried to embarrass her or punish her. If he was alive, she wouldn't be in the predicament she was in now. She'd be in college getting her degree and still be able to go back to her house where she knew at least someone loved her.\n\nBut once the protection was lost, Ma had full reign to make her life a living hell. Once she was in full control over her college fund, Ma had spent every last penny on clothes, shoes, and other foolish things. Lily had no idea what she had done till came her senior year. She had asked her mom for money to pay for her enrollment fees. Ma just looked at her dumbfounded and said, \"What money?\"\n\n\"From my college fund.\" Lily exasperated. \"The one dad set up for me.\"\n\n\"Oh.\" Ma said looking back at her newspaper. \"You don't got no college fund no more.\"\n\nLily remembered being unable to talk for a few minutes as she tried to sort through her mind how to feel about this. When she questioned Ma about what happened to the money, Ma answered back that the college fund was used to buy whatever she wanted as payment for having to take care of Lily for the past eighteen years. A future destroyed by being someone's scapegoat.\n\nIt wasn't enough for her to have no father and no future. She also wasn't allowed any self confidence. Brandon made sure of that. Every day he would find her to make his remarks. It always started out the same. He would see her. Walk up to her. And corner her. With his height and his bulky muscles, it made it seem like she had nowhere to go. All she could do was stand there and take the insults.\n\nOne time Lily had dared to walk away and not put up with this bull shit. She had tried to push him out of her way and go to lunch. Before she could even take a step, Brandon grabbed the front of her dress and slammed her back up against the wall. For a minute she had lost her breath and was struggling for air. \"Who gave you permission to walk away from me, you uppity little bitch?\" he had growled in her face. He rolled his shoulders backwards which caused her to flinch. It made him seem like he was preparing himself to give her a beating. \"I'll let it go this once, since it looks like you have somewhere better to be.\" He nodded towards the snug form fitting dress and leggings that she was wearing. He laughed to himself as he put her down and walked away. \"Wearing tight clothes won't make me change what I think about you.\"\n\nWhen she looked around her, she saw everyone looking at her outfit. She heard some mummers of \"slut\" being loudly whispered in the hallway. She heard wolfish laughter ring out from the guys. She saw the disgusted looks the girls gave her. Lily walked as fast as she could to the bathroom as she could and locked herself there till the bell that ended lunch rung. Another way she was one asshole's scapegoat.\n\nLily lay there blinking back the tears and memories that occurred. But like the tears, the memories left a cold trail behind. That was just what people could do to her. What could a Spirit do to her?\n\nLily repositioned her body to lie sideways on the couch. Another thought inside her head sprang forwards. 'Are you really angry at Nicholas because he could get you punished or are you just angry that Nicholas brought his girlfriend home?' The idea disturbed her so much that she sat upright and slid over to the other side of the couch as if trying to escape her own thoughts.\n\nThat wasn't true. That woman was threatened of Lily. Not the other way around. How could she be threatened by that woman when she had no feelings for Nicholas whatsoever? \n\n'Lies.'\n\nShe didn't like him!\n\n'But you like the way he touches you and kisses you, making you feel like a woman instead of a girl.'\n\nBut she didn't like HIM! \n\nLily felt those thoughts give her a sly smile as she came into realization at what she inwardly admitted. She liked to be touched by Nicholas. She was threatened by this woman. Because when he touched her, he wasn't touching Lily. She did not like him, but she did want to be the only woman he touched. Woman. Lily smirked at herself. Like she was ever one in the first place.\n\nShe laid prostrate on the couch as a mixture of feelings washed over her. Disgust. Anger. Sadness. Happy.\n\nHappy because that woman would be here tonight, yes. But she would never return. She would have to deal with the wrath of the Spirit for tonight. The Spirit never missed a night to possess Nicholas and write on the wall. Lily imagined the look on the woman's face as the Spirit handed her the bloody hilt of the knife. She certainly wouldn't be back after tonight.\n\nBut that was...wrong. Those thoughts were evil. She was good. She wouldn't wish that experience on anybody. Lily may like the way Nicholas touches her, but the sad truth was he had used her. Nicholas had to have a girlfriend this whole entire time he was feeling her up. Lily didn't want o be some side chick. Those kind of girls were not good at all. It was for the best that she just stepped out of the way \n\nThe only thing she felt for him was attraction. She was only glad that it didn't get any further than just kissing and touching. She wished the woman to do better than Nicholas. And she also wished for the Spirit to not be so bad tonight, at least for the woman's sake.\n\nLily stayed awake as she strained her ears to listen to the telltale sign of the Spirit entering the room. The slam of the door. Or even a horrified scream coming from the room. She waited and waited. It was long after midnight when her eyelids began to falter open and close, open and close, open and close. Until they finally closed shut into slumber. Not once did she hear the slamming of the upper door.\n\n~~~~*~~~~*~~~~*~~~~*~~~~\n\nLily grumbled as she awakened from sleep. She quickly shut her eyes back as the light from the kitchen blinded her. Even though she had only lived here for a short amount of time, Lily had never seen so much light coming from the kitchen. She climbed to her feet and dragged her feet to the entrance of the kitchen.\n\nThe curtains, behind the table, had been push back all the way to fully let in all the light from outside. She had never recalled Mrs. Yates ever to pull back the curtains. And she understood why. The windows faced the street, so any passerby on the street could peer into the house. Lily shrugged her shoulders as she went to close the curtain.\n\n\"I opened the curtains for a reason, bitch,\" she heard a female voice say behind her. She turned to find the blonde woman glaring daggers at her. The woman was wearing the clothes that she was wearing last night and holding a box of Cheerios.\n\n\"Mrs. Yates always keeps them closed,\" Lily yawned as she went back to closing them.\n\n\"I don't give a shit what that old woman wants. It's too fucking dark to even see in here without them opened.\" This woman sure had a mouth on her. Without any care, the woman plunged her hand into the box and ate the handful of Cheerios. After what she was doing with Nicholas last night, Lily could only imagine where those hands had been Lily mentally noted to not eat that box for breakfast that morning.\n\n\"That's why she uses the light switch,\" Lily noted as the room was cast into darkness. She went over and flipped the switch to cast the room back into a less harsh light. When Lily faced the woman again, the woman scrunched her face up at her and muttered a string of expletives.\n\n\"Who the fuck puts a stupid light switch near the door?\" \n\n'Uh...everyone?' Lily reached for her Cinnamon Toast Crunch on top of the fridge. She turned to go to the cabinets to get a bowl but the woman was still standing in front of it . \"Excuse me, please,\" Lily said, almost no louder than a whisper.\n\nThe woman stared her down while in the middle of sticking her hand in the cereal box. \"Seems to me you needed to be excused a long time ago.\" The woman glared at her while continuing to eat. Lily inhaled deeply before letting out an exhausted sigh. She wasn't up to fighting this early in the morning. All she wanted to was to eat her favorite cereal in peace. \n\n\"I just need a bowl from the cabinet.\"\n\n\"Just eat it from the fucking box.\"\n\n\"I like milk in my cereal. I'm sure I can't drink milk from my hands,\" Lily countered. The woman shrugged and shifted her body out of the way. Once Lily retrieved the bowl, she went about her business to prepare her cereal. All the while, she felt the familiar feeling of being watched. Not only just watched... but sized up and judged as if she was prey.\n\n\"Let me ask you somethin',\" the woman said behind her. Without giving her time to answer the woman continued. \"How long have you been fucking my man?\"\n\nLily turned around and faced the woman. Her icy blue eyes glared down at her like a predator waiting to strike. \"I haven't been fucking him.\"\n\n\"Bullshit,\" the woman gritted through her teeth and walking closer towards Lily. Her mom's voice began ringing out in Lily's head. 'Ignorant people are dangerous.' And this woman was about the most ignorant person she had seen yet. She had to get some distance between this chick.\n\n\"Look,\" Lily said while walking over to the table with her bowl. \"I am not fucking Nicholas. Ok? Whether you believe me or not, that's up to you.\"\n\nAn awkward silence floated between them. The only thing that could be heard was the sound of Lily eating her cereal.\n\n'Well you might as well be since you've already kissed and touched him,' her thoughts criticized. 'That's not right. He kissed and touched me. It's not like I was begging him to do it.' But didn't his girlfriend need to know? But that wasn't the only thing she needed to know. What was that other thing that she needed to tell her?\n\nShe looked at the woman with curious eyes, trying to remember what it was. Something important...\n\nThe Spirit. That was it. But by now the woman should already know. Lily narrowed her eyes. The woman didn't seem affected. Actually, she looked as if she didn't even care what happened last night. That didn't make any sense. Even if she had been with Nicholas for some period of time, she still would be affected in some way. Not even Nicholas, who had to deal with it for all his life, was immune to the Spirit. What happened last night?\n\n\"Are you some kinda fucking lesbian?\" the woman said glaring at he. Lily turned her head back to cereal, realizing that she had stared for too long.\n\n\"N-no,\" Lily stuttered, while trying to swallow her spoonful of cereal. \"I just wanted to ask you something?\" \n\n'She's gonna think I'm crazy...well here goes.'\n\n\"Did anything strange happen last night?\" Lily asked the woman. The woman looked at her, not understanding the question. \"Like did you see anything strange about Nicolas or... something else?\" \n\nThe woman's face instantly turned into rage. \"If you're talking about how he fucked the shit outta me, then no, I didn't see anything strange about him last night! He did a damn good job as he usually does! But that's none of your GOD DAMN BUSINESS!\" The woman sat the box down and began moving towards Lily with cruel intent. \"If there's anything 'strange' about his dick, you probably gave it to him, you fucking slut!\" The woman's breathing was labored as she fumed in and out. She was so close to Lily that the hot flames of the woman's breath scorched her skin.\n\nThe woman gripped the kitchen table as she bent over to glare right into Lily's eyes. Her scalding blue eyes spoke of suck hatred and disgust that it was too much for mere human eyes to contain. It spread throughout her whole entire face as it twisted her lips into a permanent snarl, scrunched her slim aquiline nose into a turned up pig's, and finally scorching her skin in a deep violent red..\n\n\"Now let's make things fucking clear...This maybe that old bag's house, but MY man lives in that room. If I even catch anything that belongs to you on his side of the room, I will beat your ass. Same goes if you try to pull that shit again in the tattoo parlor. You announcing and flaunting that you live here with him. I'll knock your ass out right in the shop.\" Silence came between them. \"Did I make shit clear?\" she asked in a low and deadly voice.\n\nThe squeaking of the stair case alerted the woman of someone coming down the stairs. She immediately backed up and sat in the seat across from Lily. Lily thanked God for whoever was coming down the stair case. She turned her head slightly to see Mrs. Yates in her long white nightgown.\n\n\"Good morning, Mrs. Yates!\" the blonde woman said with a smile. The woman instantly had a face of angelic pleasantry in the stead of the wrathful scorned face of a demon. \n\nMrs. Yates said nothing to the woman as she went over to the sink to wash her hands. Lily took the chance to get up and dump the sugary milk into the sink. While Lily was washing her bowl, she saw Mrs. Yates reach for the Cheerios box that the woman had earlier. Lily thought of something quick before Mrs. Yates put whatever that woman had on those hands into her mouth.\n\n\"Hey, Mrs. Yates. I was just about to make pancakes. Would you like some?\" Lily emphasized her last question. Mrs. Yates looked at her funny, not understanding at all since Lily just got done eating cereal. \"I just thought we could have something else than bland, old cheerios.\"\n\n\"I disagree,\" the blonde woman said. \"Cheerios are more heart healthy than that fried pieces of bread.\" \n\nFinally getting the point, Mrs. Yates looked back at Lily and said, \"Sure , I'll have a couple of hotcakes, hon.\"\n\nLily hid a small sigh of relief as she got the ingredients and cookware out. All while she was preparing the food, the blonde woman talked with Mrs. Yates. More so the woman was talking and Mrs. Yates was suffering.\n\n\"Hey, mum!\" Nicholas's voice shouted from upstairs. \"Are you making pancakes?\" As soon as it was asked, Nicholas came barreling down the stairs like a worked up little kid to see what was being cooked for breakfast. Lily chanced to look away from the pancakes and scrambled eggs to see an overexcited Nicholas in his pajama bottoms. He had a severe case of bed head with his curls going in every which way imaginable. He had been so worked up about breakfast, he had forgotten to pull his bottoms all the way up, so she could clearly see the top curve of his ass. Lily couldn't help but laugh as she went back to cooking breakfast.\n\n\"Shut up, cowgirl,\" she heard Nicholas say behind her. \"Where's the pancakes, mum?\" he whined.\n\n\"Nicholas, does it look like I'm anywhere near a stove?\" Mrs. Yates asked sarcastically.\n\nLily heard heavy and determined footsteps come up behind her. \"Cowgirl, pancake me,\" Nicholas demanded.\n\n\"They're not ready. Go sit down somewhere.\" Nicholas let out a loud groan as he went to the table and sat down.\n\nAfter a few minutes, she served pancakes, scrambled eggs and bacon to Mrs. Yates and Nicholas. \"Would you like a plate...?\" Lily simply asked the blonde woman since she didn't know her name. Somehow in the middle of scarfing down his breakfast, Nicholas noticed the hesitation.\n\n\"Lily, this is Anna Belle. Anna Belle, this is Lily,\" Nicholas said in one single breath before going back to demolishing his plate.\n\n\"Pleased to meet you,\" Anna Belle said as if she hadn't just threatened Lily minutes ago. \"But no thank you. I don't eat a meal with lots of fat.\" Annabelle smiled in mock sadness. \n\n\"Actually, the only thing with a high fat content in this meal is the bacon, Anna Belle,\" Lily said just as pleasantly. Anna Belle flashed a hateful glare as Lily turned back to the oven. Lily sat down with her plate and began eating her second helping of breakfast.\n\n\"Well Nicky, honey, I gotta go to my apartment.\" Anna Belle gave Nicholas a long dramatic kiss on the cheek. \"I'll see you at work later.\" As she left to go out the door, she waved goodbye to Lily and Mrs. Yates.\n\nOnce the front door clicked, Mrs. Yates visibly became agitated. She began to skewer her pancakes and stuff them in her mouth as she mumbled in between bites. \"I don't know why you bring that girl in here, Nicholas,\" she fumed. Nicholas responded with a simple shrug and continued to shovel in his food. \"What was wrong with the Cheerios?\" \n\n\"She stuck her hand straight into the box,\" Lily said.\n\n\"S' wat?\" Nicholas said around a mouth full of food.\n\n\"She dipped her cum encrusted fingers into food that we eat on a daily basis.\" Mrs. Yates looked sternly at her son. \"Funny how the wench has a classy name but has low class manners and a mouth fit for the navy. She doesn't fool me one bit with that 'Hello Mrs. Yates' act.\" She scoffed loudly as she mimicked the high pitched voice that the nice version of Anna Belle.\n\n\"Hey, cowgirl, can you get me some more bacon?\" Nicholas said as he finally lifted his head up for air. \"If you have time, could you also make me lunch?\" \n\nLily stopped in the middle of eating as she stared at him. Why should she? All Nicholas had done since day one is send her into mental distress and confusion. His personality (or personalities as it seemed) was never consistent and always infuriating. All this time she had been trying to figure him out. Who was Nicholas? But yesterday she had found an answer to her question. He was a manipulator.\n\nAll he did was do whatever he wanted whenever he felt like it no matter who he hurt. When he couldn't get what he wanted for himself, he would simply substitute. And Lily was that substitute. She was Nicholas's substitute whore...and nothing else. It all made sense now to why he wanted to know about her. All that bull shit about he wanted to know, he wanted to know. He wanted to know if she was easy. And he had proved it. Just like how everyone else had tried to prove it.",
        "Not a day went by that he would try to prove his \"theory\". Every day except for yesterday when he finally brought her home with him. He could do things with her that he knew he couldn't get from Lily. A good time. An easy lay. A woman with experience. When he had what he really wanted, he didn't even care to recognize her. Until he realized that she could cook. \n\nFuck him. He possibly risked her life just so he could have a good time with his girlfriend. To believe she was going to apologize to him when he came home. And she actually believed his line about \"I don't want to do that again\" bullshit. How horrible would he have felt when the Spirit makes him plunge the blood encrusted knife into her heart? How sorry would he feel then? Then she would've been another asshole's scapegoat.\n\nSo how dare he? How dare he sit there and expect to use her again like she was just an object?! He had already got what he really wanted out of that hoe last night, but yet he wanted more from her! He wanted her to now cook his meals while entertaining him until the real thing comes along?! Only thing Lily could think of is what he had said to her before. He was twenty-three years old. He could do shit for himself.\n\nLily ate the last bite of her breakfast before getting up and throwing her plate away. She began to walk out the kitchen. But before she left, she said without looking back, \"Do it your damn self, Nick.\" She stomped up the stairs and firmly closed the door behind her with a purposeful and defined click. \n\n~~~~*~~~~*~~~~*~~~~*~~~~\n\nThat's how things continued. Lily refused to speak to Nicholas, and after awhile Nicholas didn't press her to speak to him. Everyday Nicholas forgot his lunch, and Mrs. Yates would always ask Lily to drop by his work to give it to him. Lily would always refuse. Each day, she would convince herself it was best to not talk to Nicholas because she could never shake the feeling that she had been used.\n\nEvery night Nicholas would get drunk with Anna Belle and bring her home with him. So every night, Lily would sleep on the couch in the living room, fearing the possibility of the Spirit's wrath. But he never came. \n\nUntil a week later...\n\n\n\n\"Lily what's up with you?\"\n\nLily looked up at Vanessa as she came out of her daze of thoughts. She had had been right in the middle of convincing herself once again that all Nicholas was, was trouble. She had been reminding herself so many times now that it had started to damper her mood into silence. \n\n\"Lily what's with you?\" Vanessa repeated the question. \"You've been more quiet than usual. What's worse is you walk around the library with this look in your eyes as if...you're not here.\" Vanessa switched to her 'no-nonsense' stance of folding her arms and leaning on her right foot. \"What's up 'cuz if I need to hurt a bitch...\" The flame in her eyes got the rest of her sentence across.\n\n\"It's just...\" Lily began trying to find the words but couldn't. \"It's just living with him.\"\n\n\"You mean Nicholas?\" Vanessa quirked an eyebrow. \"What about him?\"\n\n\"It's just things are different...\"\n\n\"Well...yeah. I got that on Monday when you all of a sudden took an early lunch break. Then he came asking around about you, wanting to know where you were. It was easy to put two and two together.\"\n\n'Still trying to play that 'I care' bullshit,' she thought as she shoved a book into the shelves.\n\n\"I just don't want to talk about him. Not even think about him at this point.\" Lily said, drawing the end of the discussion.\n\n\"Well, how about you come party with me on Friday if you really want to not think about him. I've been trying to get you to go with me for yeeaaarrrss. There's always cute guys and awesome dancing. We can even go shopping for something to wear tomorrow. Pleease come with me this time.\" Vanessa crouched down to Lily's height and gave her her best pleading face.\n\nLily sighed exasperated. Vanessa really knew how to wear her down. \"OK Vanessa.\" Vanessa let out a slight scream before covering it up with her hand. She began jumping up and down instead just as content as she could be. \n\nHell, Lily didn't have much else to do anyway. She didn't feel up to seeing Nicholas bring Anna Belle home again like she was some loser who had nothing else to do with her life besides watching other people live their lives. She was going to change her life.\n\nAll of a sudden, Vanessa stopped hopping up and down and stood there with a weird expression. Vanessa was looking at something past Lily. With her eyes, Vanessa kept flickering her eyes from Lily to what was behind her. What was she trying to tell her? The worst thing possible was that their boss saw that they weren't working, but Lily could see her on the other side of the library. Vanessa gave up and tried to reach for Lily's hand, but a familiar voice stopped her in place.\n\n\"Do you mind if I borrow Lily for a moment?\"\n\nLily's back tensed as she slowly turned around. There he was glaring down at her with intense gray eyes. His face was set in stone with a serious expression on his face. She wasn't going to talk to playboy Nicholas. She was going head to head with serious Nicholas.\n\nLily looked behind her to get help from Vanessa, but Vanessa was long gone. 'Yeah...Thanks for being there for me, Vanessa.' Well, she couldn't blame her. Going up against this part of him was near to horrifying, but any other day this would have scared her. Why should she have to back down as if she was the one who did wrong? She had just enough reason to be angry with him as he did her.\n\n\"What do you want?\" Lily said leveled and clear. She picked up a book and put it into the shelf and moved on to the next set of shelves.\n\n\"I've been trying to talk to you all week,\" he gritted out as he followed after her.\n\n\"And I made it pretty clear that I didn't want to talk to you.\" Out of the corner of her eye, she saw Nicholas flex his jaw. \n\n\"Well I still want to talk to you. I've been trying to figure out what I could've possibly done to you for the last week. I've been leaving my lunch at home on purpose to get you to come see me at work. Do you know how many times I had to go hungry because you wouldn't come see me?\"\n\nLily glanced back at him and said, \"Oh boo-fucking-hoo.\" Lily proceeded to push the cart down the aisle.\n\n\"And what's with your mouth of late? It's become dirtier than a shitter. Whenever I do get you to talk to me at home, you can't say one sentence without cussing at me.\"\n\n\"I didn't think you had a problem with dirty mouths since you bring home a toilet mouth every night.\" Lily shoved the next book in so hard that a loud thud resounded over the Nonfiction section.\n\n\"Is this what all of this is about?!\" he said a little too loudly. \"You're upset because I brought a woman home?!\" \n\nLily glared up at him as she turned around to confront him. \"No, it's not about that,\" she angrily whispered. \"It's that you risk my life over a good time over a woman every night! With all that crap you said about 'oh I don't want to do that to you again' was just what it is. Crap! How would you feel having to kill me with that same damn knife he uses?\"\n\nNicholas met her glare with his own as they silently challenged the other to look away or say something. \n\n\"You assume too much,\" Nicholas distinctly defined each word. \"The Spirit wouldn't make me kill you.\"\n\n\"How do you know?\" Lily gritted out between her teeth.\n\nSilence passed between the two again.\n\n\"This isn't what you're really mad about. If you were afraid of the Spirit you would have talked to me sooner. No one just fears for their life for a solid week and blame it all on one person. I don't deny that you fear for your life, but that is only part of the reason why you're mad.\" He stepped forward towards her, using his full height to tower over her. Lily only raised her head higher to meet his eyes straight on.\n\n\"Just because you're bigger than me, doesn't mean you'll intimidate me into telling you,\" She turned back to her cart and pushed it down the rows of bookshelves. Out of nowhere, Nicholas grabbed her wrist and twisted her back around towards him. The hellish face that she had seen a week before glowered down on her in full. She tried to get out of his grasp by slapping his hand with hers, but he only restrained the other hand. He brought his head close to her ear.\n\n\"I'm here to talk to you. I've been trying to do that for days. I've come down here before, but you wanted to play games and avoid me. I'm here to say game over.\" He brought his head back and looked into her eyes. \"I came today because I knew you wouldn't expect me, so now you are going to listen to me. I get that you're afraid. I understand that more than anybody. But if the other side of this story is that you're mad because I brought another girl home, all I can say is you knew better. You knew I bring girls home. I've been doing that before you came to live there. So get used to it.\"\n\nLily's resolve began to break down slightly to the point that a few tears slipped from her eyes. She tried to jerk her hands away to wipe her tears, but Nicholas held on tight like iron. \"I-\" Lily took a moment to swallow down the emotion that tried to escape from her throat. \"I don't want to be used by you or any man who think they can,\" she trembled. \"I don't give a damn about your girlfriend Nicholas. I'm mad that you tried to use me.\" Angry tears rolled down her face as her anger started to become too much. \"You got what you could from me before putting it in my face that I was just side fun.\" Her voice began to break as the tears finally came like waterfalls flowing down her cheek.\n\n\"She's not my girlfriend.\"\n\n\"What?\" she looked at him through blurry eyes.\n\n\"Shit.\" He backed away from her and offered her a napkin. \"She's not my girlfriend and she never has been. She's just my co-worker.\"\n\n\"Then why do you bring her over every night?\" Lily countered. \"And why does she say that you're her man?\"\n\n\"Because I'm drunk as hell and my thinking isn't too good when I'm drunk, alright? She's been trying to get with me for years. Biggest mistake I ever made was sleeping with her that one time. Ever since then, she's been telling everyone I'm her man so she can scare away who she thinks is a threat. All she's been was a fuck buddy ever since I met her. I wasn't trying to make you feel bad about yourself. If it makes you feel better I won't bring her home with me anymore, ok?\"\n\nSilence passed between them again.\n\n\"But I should have known better. If she's just entertainment for you then I'm just entertainment too. Nicholas...I don't want to be used. I didn't want to be touched by you in the beginning and I still don't want to be touched.\" In the back of her mind her thoughts told her she was lying, but that wasn't important right now. She was already in love with him touching her, she didn't want to become any more attracted to him then she already was. She had to stop it here. \"You can say all you want, but you can't tell me that I shouldn't feel used. Because I do feel used. Because we both know you aren't attracted to me.\"\n\n\"Are we cool then?\"\n\n\"Yeah,\" she said, quietly crossing her arms and looking down at the floor. \"I have to go back to work.\" Before he could say another word, she took the cart and pushed it down the aisles of shelves.\n\n~~~~*~~~~*~~~~*~~~~*~~~~\n\nSigh.\n\nLily pulled the baggy shirt over her head as she got ready for bed. Today had been a long and draining day. All she wanted to do was sleep for days and maybe never wake up. But she couldn't even do that if she really tried. Nicholas would never let her rest in peace. \n\nShe opened the bathroom door to find Nicholas staring back at her. He sat on his bed Indian style facing the bathroom door as if he was waiting for her to come out. Usually he would be sleeping the minute he hit the bed. But the look in his eyes told her that he wasn't interested in sleeping a wink. The look would typically have her pinned to the ground. But not today. She was too exhausted to care.\n\nLily walked over to her bed and settled in before placing her glasses on the side table. She laid on her side with her back to him.\n\n\"Lily,\" Nicholas said.\n\nLily let out an exhausting sigh as she turned over and looked at Nicholas. He hadn't moved an inch. Only thing that had changed was the position of his hand underneath his chin. His eyes held her attention as he said the next few words.\n\n\"You will talk to me.\"\n\nHe closed his eyes briefly before opening them again, but stern gray eyes did not greet her. The room suddenly went black, so all she could see were those luminous red eyes. \n\nA shudder ran down her back as she knew what was coming next.\n\n'Oh no... Oh no Oh no Oh no! GOD NO!' \n\nThe Spirit was coming.\n\nThe wrathful Spirit was coming.\n\nNicholas calmly stood up as he walked over to the other wide of his bed. Lily wanted to run away, but her body wasn't moving. The hair on her body stood on end as she saw the bloody rusted knife glinting in Nicholas's hand.\n\n'Move! Move! Move!' she yelled at her body. Lily flipped over the covers and pushed her body out of bed. But just as soon as she stood up, she felt Nicholas's strong hands wrap around her waist. She screamed out loud as she tried to force his hand free from her waist. All attempts stopped as Nicholas leisurely encircled his arm around her neck. In that hand, the knife lightly laid on her shoulder.\n\nShe closed her eyes tightly as she felt his even breathing against her ear. \"Where are you going?\" The dark booming voice breathed into her ear. \"You haven't talked to me yet.\"\n\n\"I'm sorry.\" she wept. \"Please don't punish me. It wasn't my fault.\"\n\n\"How did you expect me to punish you?\" Lily swore he was smiling behind her. \"Tell me.\"\n\n\"K-k-\" Lily couldn't bring herself to say the words without crying in fright. But the soft moving of the knife on her skin easily unloosened her tied tongue. \"Killing me.\"\n\n\"Really, now?\" The flat of the knife skimmed across the base of her neck. \"Where did you think I would plunge this knife?\"\n\nLily licked her dry lips as she searched her brain quickly for the answer. As flat of the dagger began to slowly continue downwards, her breathing began to grow rapid. Her breathing turned into wheezing as she felt his hands lower her shirt till her breasts were exposed. He guided the knife in between them until she felt the steel tip right in between them. Her breathing cut off all together. She was too scared to even dare breathe in fear that her rising chest would pierce through her skin and into her heart.\n\n\"So you thought I would plunge it here?\" he said more as a statement than a question. Lily didn't answer him as she turned her head and closed her eyes. If she was to die than she wasn't going to witness it. She just wanted it done.\n\n\"Any why would you think I would damage such lovely breasts?\" \n\n'What?'\n\nHe took the knife away from her chest and pulled her shirt back up. Lily stumbled onto her knees and inhaled gulps of breath, trying to get as much as possible. \"I knew you couldn't be in the room for certain reasons. I know Nicholas took over the room to have sex. I'm a spirit, but I'm not blind.\"\n\n\"But... but I thought you come...come every night.\" Lily breathed as she turned around to face him.\n\n\"I do. I just didn't let my presence be known this last week.\" That didn't make sense to Lily, but she went along with it anyway. \"But at least I know now that I have your whole undivided attention.\" He laid down on Lily's bed and closed his eyes. Soon his body relaxed into sleep, casting everything into darkness.\n\nThe bright blue light began to illuminate on the wall as the knife floated towards it.\n\nKnow though that when I do punish you, I will not go so far as to kill you. You don't have to worry about your life here.\n\nLily thought over what had just transpired before she took the knife and slowly wrote:\n\nSo you were playing with me?\n\nIn a sadistic sense of humor, yes. The Spirit wrote back.\n\nLily didn't know whether to be relieved or angry. She nearly passed out from all the hard breathing, or the lack there of, because of this sense of humor. But she decided not to say anything since she didn't even receive a mark on her skin due to this \"prank\".\n\nOK was all she could think of to write back to the Spirit. As much as she wanted to argue and fight with him as she would with Nicholas, but the Spirit wasn't Nicholas. If skimming a knife across her body was considered a prank, she would hate to see what he'd do for punishment. A silence passed by for a few seconds with both parties at a loss of what to say.\n\nHow was your day? The Spirit scratched out. Lily looked at it almost confusingly. What happened to all the intrusive questions about her life?\n\nHorrible. Well this whole week has been horrible. Lily answered honestly.\n\nWhat has made it so horrible? \n\nLily thought about this before she wrote anything down. What was the point of telling the Spirit? He didn't need to what had happened between her and Nicholas, but then she remembered the crushing weight of all the pain, fear, and nearly dead exhaustion she had been through. It wouldn't hurt to tell someone. It's not as if the Spirit would tell anyone.\n\nShe looked back at Nicholas lying fast asleep on her bed. And as far as she understood, Nicholas only remembered two things about the ghost. That is how the Spirit was killed and the things he made Nicholas do while possessed. So it shouldn't hurt to tell someone who couldn't even tell anyone.\n\nLily held the knife in her hand for a moment before scribbling her message into the wall.\n\nWell, me and Nicholas have been fighting for the last week. Well more like I've been fighting him. I got...\n\nLily paused in her writing to consider how she felt. She couldn't be that. That would be stupid. What would she be jealous for? She was just angry was all it was. Nothing else.\n\nI got angry at him. Ever since I met him, he's been touching me every chance he could. I thought it was so perverted the way he would touch me, but it made me feel...wanted...after awhile. But then I realized he only did that to prove points. I have never felt this used in my whole life. \n\nShe laid down the knife as she felt all those emotions began to rush to the fore front of her mind. She wanted these feelings to go away. They were of no use to her. These feelings of attraction, lust \u2013 and the horrid feeling of being spurned. She couldn't live with those feelings. They had to simply die in her breast just like every feeling that threatened to take her, because she knew it would always lead to pain.\n\nWhat points, Lily? The Spirit softly scratched into the wall as if trying to comfort her.\n\nLily made sure that she pushed those feelings back where they came from before picking up the knife again. That I was attracted to him. That I was inexperienced. But it was all just a game to him! He felt me up to get a reaction out of me. He even stole my first kiss because he wanted to prove I was pure! I can't get any of that back! I can't get back my first kiss, my first time being touched by a guy, and... Whatever. But what makes me so mad is that he acted as if he cared. But in all actuality, he just wanted a good girl to entertain him. Because the next day he brought a bad bitch home!\n\nI'm sorry, but I'm lost. The Spirit wrote. I know you're mad that you've been used, but the way you put that last part makes it sound as if you're jealous of this other woman.\n\nI'm not jealous. It's just... it proves it. He confessed to me today that all she was was entertainment. If she is entertainment, then I am entertainment. It's as simple as that. It just proves he's just using me. And I refuse to be used any further. \n\nDo you know what your name means?",
        "Lily stood there confused for a few moments. What? What did this have to do with anything?\n\nNo I don't know what my name means. What's the point?\n\nLet me write. The Spirit scratched in a way that somehow conveyed his annoyance. Lily means purity. Because of this purity, you strongly value how you are treated when everyone else doesn't. Stay that way. It is what makes you a good woman in mind and body. \n\nLily smiled sadly at the words that were written. I am only pure in mind and body because I am not wanted.\n\nSeconds went by before anything else was written. What do you mean by wanted?\n\nDesired. Loved. I'm only pure because there is nothing about me that is desired. No one wants an ugly, inexperienced girl who has nothing to offer.  Lily looked down at the ground in deep thought. She knew it in her heart to be true.\n\nShe felt a hand softly caress her cheek, making her lift her head. She turned around expecting to see Nicholas, but he was still lying on the bed. When she looked back on the wall, she saw these words before the light begin to fade back into darkness.\n\nYou are wanted, pure one. That is why you have everything to offer.\n\n~~~~*~~~~*~~~~*~~~~*~~~~\n\n'Oh...my...God.'\n\nLily looked down on the floor with her mouth gaping open. She couldn't believe her eyes.\n\n'Nicholas is a total slob!'\n\nLily got off work early that day and thought she should take that time to do some cleaning on her side of the room. She changed quickly into a tank top and a pair of shorts with a bandana tied around her head before getting to work. After a few hours, she completed her task of getting everything cleaned up. She looked towards Nicholas's disheveled bed and thought it wouldn't hurt to just help him out this once. If Nicholas came home thinking she was his maid, then she would know better than to do anything to help him out again.\n\nShe stripped the bed of the comforter and nearly threw up. She held her hand to her nose as her eyes water from the stench of the bed. When was the last time these sheets been changed? It was hard to tell what was all on the sheets. She could smell strong stench of liquor, weed and something else that she wasn't sure of. As she stripped the bed of the other sheets, the odor only got stronger and stronger. After awhile she figured out the other smell was sex because of the several pair of women's underwear she found.\n\nOnce she stripped all the sheets off, she ran down the stairs and dumped them in the washing machine. She filled it with nearly five large capfuls of vanilla fabric softener. If that didn't get the smell out, she didn't know what would. From the laundry room, Lily got new sheets for his bed and a bottle of Febreze. \n\nShe sprayed down the mattress with the air freshener. Once she felt like it was safe to breathe, she inhaled deeply in satisfaction of the pleasant scent that wafted through the air. At a more relaxed pace, she put on the new mattress pad on the bed. When she went around on the other side of his bed, she tripped over something and almost landed face first into the floor.\n\n'Shit! It's probably something of Nicholas that he left on the floor.' When she turned her head back to see what she tripped over, she narrowed her eyes. There was a loosened wooden floor board that was significantly sticking up from the floor. Lily knew better than to go through Nicholas's side of the room, but the curiosity of what could be underneath got the better of her. She told herself that she couldn't get caught. She was on the side of the bed that no one could see her if they happened to come in. Even so, she would probably here them coming up the stairs or down the hallway which gave her enough time to act as if she was just fixing up Nicholas's bed. On top of all that Nicholas was still at work.\n\n'Here goes nothing,' she thought, licking her dry lips nervously. Lily wrapped her fingers around the edge of the board and began to lift it. She placed the board on the bed and looked inside. There gleaming back at her was the blood encrusted dagger. Looking at it, reminded her of the way it lightly scraped up against her arm and down to her chest. A shudder passed through her as she remembered the tingling feeling of the cold metal against her skin.\n\nShe reached inside the floor board and grasped the knife in her fist. She brought the knife in front of her and looked at it. She ran the pad of her finger along the flat of the knife. She was...amazed. Amazed at how significantly different it appeared during the day than at night. At night, it was menacing, sharp, and deadly. Now, in broad day light, it seemed no more than a knife that had lost all its shine and was so rusted that it didn't seem good for even cutting anymore. One thing she could deny, no matter the time of day, is that this knife was used for a deadly purpose.\n\nBut why was this knife over on Nicholas's side of the bed where no one could see where it is but Nicholas himself? Just to say that he was possessed by the Spirit was not good enough for Lily. Why next to Nicholas specifically? It could have been hidden anywhere else, but why on Nicholas's side? Nicholas didn't need the knife when he was possessed. Typically all he did was look at her anyway. The Spirit needed it to communicate with people by writing. The Spirit could have essentially put it anywhere in the room. Why put it in a place that is readily available to the possessed.\n\n\"Mum! I'm home!\" \n\n'Oh crap!' Lily began to panic as she moved to put the knife back into the hiding spot. A scream erupted from her throat as she felt as flash of searing pain run up arm. She looked down at her hand to see blood seeping from the tip of her finger. She had forgotten that she had her finger on the edge of the knife when she moved put the knife back. It had made a slit in her finger that was deep enough to drip droplets of blood on the floor.\n\nNicholas must've heard the noise because she heard urgent steps racing up the stair case. Lily reached for the floorboard to put it back in place but the moment it made contact with her injured finger, she screamed out again as the burning pain raced up her again. Tears began to form in her eyes as she gritted her teeth.\n\nShe lifted her head as she heard Nicholas coming over to the side of the bed. His light gray eyes were like burning coals as he looked back at her. His whole demeanor was a visible dark contrast to his usual playful personality. \"What are you doing?\" he said in a tense voice. Before she could answer, he stood her up on her feet, wrapped her hands around her waist and carried her to the bathroom sink. He put her injured finger over the faucet and ran water over it.\n\n\"You shouldn't have been playing with that,\" he said as he concentrated on cleaning up all all the excess blood.\n\n\"I was-\"\n\n\"But you were messing around with the knife.\" Once he was satisfied, he turned off the faucet and sat her on the edge of the sink. Nicholas got a towel, and applied pressure to her finger. He told her to lean forward a bit as he got some of the medical supplies out of the medicine cabinet behind her. Lily sat there quietly, feeling like a little kid who was in trouble. She didn't mean to slit her finger. It just happened.\n\n\"This is gonna burn like hell,\" Nicholas said as he dabbed a bottle of peroxide on a cotton ball. He took the towel away and blotted her finger with it. More tears came to her eyes as she kept from screaming from the fiery liquid seeping into the wound. Nicholas gave her a small smirk when he took the cotton ball away. \"That's why you leave dangerous knives like that up to the real cowboys.\" Even though he smiled, his eyes were still burning with anger.\n\n\"I didn't mean to,\" she whispered.\n\n\"But you did.\" \n\nA silence passed over them after that while Nicholas applied pressure to make sure the bleeding had stopped. Lily looked down at the floor, trying to escape from the burning coals while she waited. But after awhile she began to notice another source of heat that was burning her up alive.\n\n\"You know you're too close, right?\" she said.\n\n\"Yeah, yeah. But I'm sure in this instance it's ok to break you're 'don't touch me' rule,\" Nicholas said while still concentrating on her finger.\n\n\"Not that, your body's too close.\" Lily swore she could feel her temperature raise a little. Even little drops of sweat began to bud on her skin. No, this is wrong. She had no feelings about this. None.\n\nNicholas looked down and finally noticed that his body was right in between Lily's splayed legs. He simply shrugged his shoulders and got a band-aid out the medicine cabinet. \"I won't make something out of it unless you do. Plus I'm fixing your finger. I'm not humping you on the bathroom sink. And how can you talk, Miss I'm-Only-Checking-Your-Heartbeat. So just sit there and be quiet.\" He finally wrapped the band aid over the cut and washed any blood stains off her other fingers.\n\n\"There. You're all done,\" he said. \"All you need now is a kiss to make it better.\" He flashed her a playful smile as he bent down to kiss her bandaged finger. He kissed each finger tip on her hand before raising his head slightly.\n\nBut he lowered his head again and kissed the palm of her hand, and then her wrist. Lily's body slightly jerked as his lips placed a lasting kiss on her pulse.\n\n\"Nicholas?\" Lily said quietly.\n\nHis lips made a journey gradually up her forearm. Each kiss becoming deeper than the last. Lily raised her other hand to push him away but his hands gripped her wrist and continued his journey up her arm. \n\n\"Nicholas, let go.\" She tugged on her arm, but he only held it firmer. By the time he reached her shoulder, he was using his tongue to add to the already tingling sensation. He took his mouth away only for a second to blow lightly against the spot his hot mouth had touched. Goose bumps raised on her skin as he blew on it.\n\n\"Nicholas, I can't-\" His hot mouth clamped over her neck, tonguing her pulse. Her mouth was formed in a big O as she felt enormous amounts of pleasure run through her veins. It was so good that she almost couldn't take it. She even lost thought of why she wanted him to stop. \n\nAdding to the already intense pleasure, he began rubbing himself in between her legs. His hand reached down and lifted her up enough to grab onto her ass to guide her closer into him. He nipped at her skin playfully before running the flat of his wet tongue along her neck. He guided it all the way up her chin. Her body was waiting for him to kiss her mouth but he purposefully ran his tongue around the outline of her mouth.\n\nTo her surprise, he pressed his lips to hers, caressing each and every part of her mouth. His bottom lip caressed hers while his tongue dominated over her tongue by pinning it down over and over. Lily could hear passionate moans ring out throughout the room until she realized it was her that was making them. He smiled against her lips as he began to suckle her bottom lip.\n\nAll of a sudden it stopped. He leaned toward her and whispered these words into her ear that made her eyes spring wide open.\n\n\"You are wanted, pure one.\" "
    ],
    "authorname": "BlessingAndCurse",
    "tags": [
        "black woman",
        "betrayal",
        "white man",
        "arguing",
        "spirit",
        "prank",
        "mystery",
        "kissing"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-wallflower-ch-05"
}