{
    "title": "Expanding Horizons",
    "pages": [
        "Fumbling around on the nightstand, an awkward hand found its way to the source of the incessant beeping and repeatedly pressed, squeezed, slid, and prodded until the damn thing finally stopped. The hand dropped to the warm bed clothes for a few moments before joining its partner, rising upward in a long, tight stretch. He yawned and pulled both hands behind his head on the pillow. His eyes opened lazily, making a ritual assessment of the ceiling. Still there.\n\nChris sighed, then nearly bolted upright\u2014he would be late! Thrusting the covers aside, he swung his legs toward the floor and headed for the bathroom. He would not skip a shower this evening for the sake of timeliness, not for this date. In his reverie he had forgotten that only a short nap was in order before their night out. There was to be no yawning tonight, not the slightest indication, however mistaken, of any degree of disinterest.\n\nThe water coughed and spat from the shower head: cold, lukewarm, burning, then corrected to steaming. A safe-cracker could find the perfect temperature, but Chris had given up long ago. The water brought him closer to reality. Oh, yes, there was interest; plenty of it on both their parts. He tilted his head back as the jets of water irrigated his scalp and ran down his neck, a few rebels escaping over his ears and his face.\n\nShe was exciting. And beautiful. Not in a thin, wispy, Audrey Hepburn, \"who, me?\" kind of way...but in a full, sultry, smoking, Marilyn Monroe, \"yes, me\" kind of way. She had it and she knew it. Just the thought of her seductive eyes made his sensitivity heighten under the water.\n\nWorking a small amount of soap into his short, dirty-blond hair, he thought about the night at the Back Room. Kate's birthday party. And how they had ended up next to each other at the quieter end of the table. It was so loud; such a freshman bar, they could barely hear one another. Practically screaming in each other's ears, the conversation, albeit a slightly inebriated one, ranged from the idiots on the dance floor, TAs who couldn't make more sense of the prof's lecture than the students could, to TV shows and music. They had opposite tastes in nearly everything, and had a fantastic time discussing all of it. Hot liquid streamed through his hair, silky with suds. He ran his fingers through, slowly and repeatedly.\n\nAlmost ignoring the birthday girl and the rest of the group, their repartee had continued all night. Eventually it turned from laughter to discovery, serious moments of opinion, and not a small number of interesting looks and glances. By midnight he and Rachel were the idiots on the dance floor. Dancing to music he didn't like, surrounded by people he didn't like, up later than he generally preferred...he was captivated by her. He lathered soap in his hands, rubbing his neck and down the length of his arms, underneath, and worked across his chest. Fingers glided through thin hair and scrubbed over modest but firm pecs. Taking a quick inventory, he was fairly satisfied with his build. A lightweight just north of a buck fifty, and about five foot nine, he was no dream machine, perhaps. But his sinewy frame was lean and his muscles knew real work. He got things done. He scrubbed down his stomach.\n\nThe two had danced like fools and returned to the table frequently to quench their thirst. A slow song came on, and naturally it was one Chris could not stand. Nevertheless he extended his right hand with the left behind his back, bowing gently, feigning a gentlemanly poise, totally anachronous to their surroundings. Rachel giggled and, in kind, made a curtsy before accepting his hand and following to the dance floor. Like a high school mixer he placed one hand on her left hip, and with the other held her right hand out, half extended, and straightened his back. With arched brows, he tilted his head and led her through a few basic steps. To call it dancing would have been generous, but the effort was notable and received humorous encouragement from the others.\n\nLaughing, Rachel took his hand from her waist and placed it behind her back, pulling the other down to do the same. Her hands then followed suit, embracing Chris' taller body. Leaning her face into his smooth shirt, they swayed gently to the music. Sensing her comfort, he squeezed lightly in a sort of hug, and she responded in kind. He let his gaze fall downward until his nose brushed the dark brown hair on the top of her head. It was smooth as silk, and cut rather short in a sort of pixie style. Her conditioner blended with the complementary scent of her perfume, the sweet smell of sweat on her brow, a dash of vodka with a hint of cranberry, and the passing aromas of other couples \"waltzing\" by.\n\nHolding each other tightly, his hands grasped her back and shoulder blades as her soft bosom pressed into Chris' chest and stomach. Oh, her breasts... The boiling water seared his back as he finished scrubbing his legs. His hands returned up his thighs and tenderly slid over what had become a growing erection. Rachel had skin smoother than fine chocolate, more delicate than tracing paper, though you might try tracing it with your tongue.\n\nMilky white and supple, she was not large in any way, and yet you could always dig your fingers in...gently nibble...both of which elicited from her a shudder of slight pain along with sighs and moans of encouragement. That smooth skin reached its full potential as it journeyed downward from her tender neck, across her chest, rising and falling, and forming into a pair of perfectly shaped, perfectly sized, perfectly sensitive breasts. Yielding to the touch, and to exploration, yet firming along with her growing arousal.\n\nHe could still feel the close dance and the smell of her hair as his left hand slowly caressed his now full erection. Up and down, simply experiencing the sensation produced by the memories. That song had ended and, true to the form of the establishment, abruptly exploded into the pile-driving rhythm of the next Top 40 remix. As though in a trance, they had both pulled away slowly, a little unsteady from the embrace, and saw in each other's eyes an unmistakable desire and longing. They slowly returned to the table, rejoining their companions, and managed somewhat normal conversation for the remainder of the night.\n\nThe last of the suds descended slowly down Chris' legs and fled toward the drain. He stirred from his daydream and killed the water, reaching for his towel. It was winter, and the jab of cold, basement air upon leaving the steamy bathroom was most unwelcome. Almost enough to dislike showering entirely.\n\n5:30. Picking her up at 6:00. He had time. For him anyway, it never takes too long to get ready. Lucky blue boxers, dark jeans, a gray, button-down shirt with the sleeves rolled up, brown leather boots, and a worn leather belt about his waist. A seldom-used full-length mirror leaned near the dresser, and Chris tilted it for a final view. Not that the image would prompt any change, but a little vanity before heading out on a date wouldn't be a bad idea. Wetting his hands in his hair, he rubbed a little gel together and ran his fingers through again. A gentle part, and straightening it out, he chuckled at the tendency of most folk to estimate him 8-10 years older. The grays didn't help. Turning a bit, all checked out okay.\n\nChris didn't really focus on fitness as a routine, but his part-time renovation job kept him extremely active. His height belied his legs, which appeared longer than they were. Though he despised the trending \"wannabe cowboy\" look, his mild ruggedness matched his attitude and his inclination for the outdoors. He swiped his keys from the dresser as he stepped briskly out, chatting a moment with his housemates, and embraced the winter darkness as he fired up the truck.\n\n*****\n\n\"Trace, can I borrow your straightener?\"\n\n\"What?!\"\n\n\"Can I borrow your straightener?! My piece of shit just died and won't heat up!\"\n\n\"You don't have to yell, damn...here,\" Tracy conceded, handing over the vital appliance. \"All yours. Though I don't know why you're bothering. Your hair doesn't really curl, and do you really think he's gonna notice?\" Rachel rolled her eyes; she knew Tracy was right, but her own nervousness was enough to require the process, and she wouldn't give her roommate the satisfaction of being correct.\n\n\"It never lays the way I want it to, it's not my fault your eye doesn't pick up that detail,\" she replied wryly.\n\nTracy smiled: \"Mmm, and you never lay the way they want you to, either...\" Rachel laughed and stuck her tongue out in response. Each with their faults and grievances, the two were ultimately fond of one another and had become fast friends since college orientation a few years ago. They couldn't appear more different, and yet they swapped clothes and accessories regularly. Rachel's chocolate hair was in stark contrast to Tracy's strawberry blonde. Her muscular frame made her a bodyguard to her friend's thin features. The latter often commented with only half-feigned jealousy on her roommate's voluptuous hips and derriere, which met Tracy's standard of attraction: light enough to work with, and just a bit more than a handful to play with.\n\nIndeed, she teased Rachel, \"If your pants were any tighter, you might have to give him take-home bags for anything that spills out!\" She snorted in laughter, then shrieked as Rachel dropped the straightener and lunged for her midsection, tackling her friend to the floor before Tracy could react. The defendant cried out desperately for mercy. \"All right, I\u2014ha!\u2014stop!\u2014I'll\u2014I'm gonna piss myself, fuck off!\"\n\n\"Taught you to tease these hips, didn't I?\" Rachel gently queried, climbing off her roommate with a haughty expression. \"Next time you won't be so lucky that I should stop there.\"\n\n\"Oooohh, and you're all talk,\" Tracy teased, rolling her eyes comically and catching her breath. \"In fact, I ought to whoop your ass right now just for saying it, now it's a fair fight and all.\" Rachel was half tempted to instigate another round, for her own reasons, but turned her dark eyes toward the mirror to finish preening; hopefully before Chris arrived.\n\n\"You'll just have to wait, missy,\" she replied. \"You can have whatever fight is left in me after tonight.\" She smiled, sarcastically, with Tracy mirroring her expression before mocking disgust.\n\n\"Oh, yeah, great, because I really want to wrestle your sloppy seconds. Sounds amazing...\" She turned toward the door: \"Hey, call if you need a ride. Or, someone to be a stunt double when the lights go out.\" She winked, and Rachel just laughed.\n\n\"You're a true friend, Trace,\" she replied, sticking her tongue out again and smiling. Spinning through their apartment doorway, she pulled the door shut with an echo down the bright hallway. The text just now read that Chris would be there in ten. Heading down the stairs, she double-checked for her ID, purse, keys, and phone. Not a minute at the door and a dark red Blazer swung its headlights across the building as it pulled alongside the curb. It took every ounce of restraint she had to keep her shoes glued to the tile floor, a childish agreement with Tracy to prove just how many men had no concept of chivalry.\n\nBut Tracy had no chance; the dome light came on and the door swung open just as the truck came to a lurching stop. The engine died and the headlights darkened, the glow fading from the bulbs. She pretended to be absorbed in a flyer on the building's bulletin board so as not to appear so prissy as to be waiting for a man to escort her. Though, judging by the manner of his arrival, it seemed clear the type she was dealing with. Well, she thought, I hope he's not too gentlemanly... The front door opened.\n\n\"Miss Jones,\" Chris offered, extending an elbow.\n\n\"Good evening,\" she replied, with a tilt of her head. Enjoying the small acts of outmoded chivalry, she placed a hand daintily into the bend of his arm, and walked out to the truck.\n\nThe two listened to music, talking over most of it, on the way to the restaurant. To be fair, it seemed more of an elegant dining room than a restaurant. They stood just inside the doorway next to a narrow podium, awaiting the ma\u00eetre d', who approached quietly with a gentle smile.\n\n\"Good evening, sir, madame,\" he bent slightly, with a mild Italian accent, \"may I show you to your table?\" Chris gestured with his hand to lead on, adding a nod to Rachel to proceed ahead. She felt a little self conscious; there were only about ten tables in the dimly lit room, most of them booths. But her anxiety eased as it became clear that not a soul paid them any mind as they strode past. A lovers' dining room, she mused. The thin man spun on his heels across from a dark, candlelit booth, and bent sideways to invite them to be seated. This they did, comfortably, on plush cushions and gently reclined seat backs. Rachel realized they now could not see the other patrons, nor hear more than a low murmur of conversation. Quite the intimate setting, she thought.\n\nThe beginnings of a new train of thought were pushed from her mind as Madame Julia arrived to welcome them and offer libations. Even Rachel had to swallow and catch her breath, for this woman was simply gorgeous. A notch taller than Chris even, her arms were lithe, taut with muscle, and held a small menu describing the evening's courses. Her long, auburn hair was pulled straight back, severely, in a tight, low ponytail. The remainder was full and thick, drifting downward from the back of her head in slow waves, falling well below her shoulders into darkness. The slightly angled shoulders held a simple, black blouse across a very square and well-proportioned torso. Rachel noticed the outlines of her breasts, a touch smaller than average, perhaps, but quite attentive. A single open button revealed a thin, silver necklace, venturing just below her collarbone, and nothing more. Nor did it need to. Rachel's mind wandered a bit again, forgetting about the menu as well as her companion.\n\n\"Rachel?\"She heard her name, and turned in a daze, seeing Chris and their waitress staring directly at her face, searching for signs of life. \"Jesus, Rachel, would you like another glass of water, for your face, perhaps?\" chuckled Chris. Rachel blushed red, and appeared to examine the brief menu. Julia blushed as well, breaking eye contact to study the abstract canvas on the wall.\n\nChardonnay. Merlot. Caesar salads. Toasted baguette. Garlic aioli. Shrimp and linguine. Steak de burgo. Refilled glasses. Giggling conversation in hushed tones over a mostly cleared table. Tiramisu to split. A half ration of gelato to accompany. Slowly the glasses surrendered their final drops, and the dining area felt quiet and close. A comfortable lull in the conversation allowed their eyes to introduce themselves properly. His warm and interested gaze held her face steadily, which returned a flushed and lusty smile. She blinked slowly, as if to briefly deprive him of the sight of her dark eyes, and searched his face for a reaction.\n\nFuck, he thought to himself, it's like our eyes are making out. He smiled and shook his head gently. \"You have very captivating eyes, Rachel. Do you know that?\" She nodded and replied without breaking contact.\n\n\"Oh, yes. I've become quite aware just recently.\" The bill was paid, and the front door closed behind them. Standing on the front walk, Chris puffed out his chest and appropriated a dodgy British accent.\n\n\"D'you know, dear, I believe we've rather missed our showing. Blast.\"\n\n\"'Ave we now, then?\" she replied, placing her hands on her hips and doing her best to play at a working class drawl. \"See, oy believe we's a right good chance of 'avin a foyn evenin' if we was t' battle on back to moy place, and pop in a pitcher of awr own.\" \n\nOutdone, Chris burst out laughing, extended his arm, and they proceeded down the walk.\n\n*****\n\nRachel's apartment, on the second floor, was clean and quiet. She was impressed that Tracy had not only picked up as promised, but had left on a couple small lamps. There was glassware on the counter. She could imagine the inevitable interrogation to ensue the next day, regardless of what happened.\n\nGlasses on the coffee table with a fresh bottle of Riesling, they flopped onto the couch, jostling shoulders for position. She started the film, something based on a true story about a family surviving the wilderness. It didn't matter. She quickly made herself comfortable, leaning into Chris' chest. Presently he yawned, and in comedic fashion lowered his outstretched arms around her shoulders, pulling her close.\n\nHer hair smelled so good, and the weight and warmth of her body against him was pleasant and welcome. Eventually he allowed his chin to rest gently on top of her head. She responded with a sigh, indicated by the rise and fall of her chest against him. He saw her left cheek, faintly blushing pink, and remembered the make-out session from last week...\n\n~~~~~\n\nIt was so intense. And passionate, which he couldn't help but find interesting, as they had barely known each other. It had been just four months since the break with Mandy, which had not left him particularly desirous of a relationship, or any intimacy, really. However, chemistry is not a contrivance, but a law of a nature, and there it was. Soft, pillowy lips. So good to behold, so much better to explore. They were deep pink, as originally supplied, and the more their affections intensified, the more her lips took on a richer shade, almost to red.\n\nHe had leaned against her, pressing her shorter frame against the apartment door, their mouths totally connected. Tongues swirling, darting, exploring, the kiss refused to end. His hands moving up her sides, gently pressing in against the swell of her ample breasts. Her hands, digging fingernails into his back, crawled up and grabbed hold of his neck, desperately pulling his face closer. The taste of her lips. The smell of his chest and cologne...\n\n~~~~~\n\nHe had lost the plot of the movie just now, in his remembrances, and focused now on his fingertips which had begun meandering up and down her forearm. Rachel's skin bristled at the sensation on her arm, and relished his scent. She had requisitioned a pillow to place on his lap, and now lay comfortably across it, on the right side of her head. Her arm lay alongside his left leg while the other rested its hand on top of Chris' thigh.\n\nThis did not go unnoticed by him, clearly, as she felt a couple times the slight shift of his hips in response to any movement or squeeze by her left hand. His breathing was just a touch deep, and Rachel wondered if he was even watching the movie at all. Not that she could judge. Her eyes had been mostly closed for the better part of the duration, simply enjoying the experience of being held and caressed. It was such a pleasant feeling, and a mix between gentle affection and sensual closeness. There was warmth in her, rising, and she very much desired this man; to be close...to kiss...to be experienced...to pleasure...\n\nRolling onto her back, still facing the screen, Rachel turned briefly to look Chris in the eyes, meeting his distracted gaze with a look not only of smiling contentment, but of pleasant desire. She turned forward again, only to feel a significant shift of the body beneath her. He bent far over to plant a gentle but lingering kiss on her left cheek. Electricity raced through her veins in search of escape, and her breath caught. His hand had, by necessity, moved to her stomach, and he had begun pressing the length of his fingers into her flesh, alternating, and moving his hand in various directions. She gave a firm squeeze to his thigh to affirm his activities.\n\nHe was encouraged. Allowing his right hand to stroke her hair, the other spread its fingers, palming and massaging her stomach. His thumb rubbed against the taut fabric of her underwire, detecting the unmistakable pattern of lace. Several light kisses graced her cheek before he tracked to the right, along the side of her face, and ever so lightly breathed across her ear. He could feel the goose bumps race across her skin, and let his lips caress the very edge of her ear. Closing them in a soft lip bite, he pulled gently. Opening and closing again around her tender earlobe. He could feel her shifting, yet not giving in and turning to him. He continued his torturous treatment.",
        "Her chest felt like it was heaving, and the sensations she felt through her ear were pure torture. And then he did it. Of course he did. As though he hadn't done enough. The warm tip of his tongue traced a gentle circle around the edge of her ear before slipping wetly inside. Fuses blew. The lights of her eyes flickered. Ripples of pleasure triggered a serious awakening, and she was helpless to his ministrations.\n\n\"Huhhhh,\" she moaned, unable and unwilling to keep it inside. This served to prompt further penetrations by Chris' ginger and delicate tongue. Rachel's body began to shift, and her nails now dug into his thigh, creating no shortage of shifting and positioning on his account. As she gained at least a semblance of consciousness she allowed her hand to alternate...squeezing his thigh and then sliding it...up and down...over and over.\n\nYes, he murmured to himself, turn me on. Do it. I dare you. His nerves were completely on edge, and no degree of squirming could calm them. Her fingers continued to explore new ground each time her hand traveled up his thigh. He returned the attention of his lips to her cheek, after a gentle nibbling of her earlobe, of course. She slowly reached her head back, giving in, and looked briefly into his eyes. She opened her lips to meet his.\n\nThen he kissed her. Good and kissed her.\n\nDespite the tight position, they connected hard, slamming into each other with force, warmth, and desire. They lingered slowly in those first movements, savoring the taste and the moment. His lips were strong, and not overly thick. Taking control of her pair of soft, luxurious kissers, he turned a little and pressed in again. She welcomed his return with parted lips and an exciting brush of her tongue. At this, he slipped his own into her mouth and the two danced sensually, circling one another, muscular and soft.\n\nEach moaned audibly as their hands forgot their inhibitions. Chris' left moved up her stomach and made its way slowly over her lacy brassiere. Tracing the patterns with his fingers, he teased her rising and falling bosom before caressing the skin of her chest. Milky white, it yielded easily to his touch as he endeavored to awaken every square inch. Fingers traced up her neck and her throat, with a fingertip following her jawline from earlobe to chin, pressing upward on the latter, deepening their kiss.\n\nThese delicate and tender acts served only to increase her desire to feel more, to give more, to share more. On her back, however, she could not advance beyond running her hand beneath his shirt, her fingers gliding through the hair on his chest, and glancing over his nipples. She wanted more.\n\nRachel broke the kiss, gently turning her head away with purpose. Chris leaned back, awaiting her intent. She pushed herself up from his lap, giving him a light shove against the corner of the couch. Her left arm and elbow supported her on the arm of the couch, with her hips just against his left leg, facing him. Grabbing the back of his neck, and his shoulder, she leaned in and resumed their lip lock of passion.\n\nWith his hands freed, and Rachel's voluptuous figure leaned over his lap, Chris focused on exploring and pleasing her. His hands went straight to her waist as they kissed, and slid up her smooth sides, beneath the light sweater. Each palm gently grazed along the sides of her breasts, eliciting another gentle moan. Fingers began to trace the lace again, circling, then squeezed her right breast, beneath her bra. A warm tip slid over her hardening nipple, and she broke the kiss. \"Mmm hmm. Yesss.\" She resumed their dancing tongues. In fact, the dance had become more of a street fight as their lips grabbed each other and their tongues struggled for dominance.\n\nSliding his right hand across her breasts, and squeezing gently, Chris' right hand found purpose behind her. Kneading along the way, he located the clasp of the brassiere, which served only to hinder their explorations, and with just a couple movements deftly disconnected and removed the article. The straps clung to her upper arms, and Rachel hesitated briefly at the thought of removing her sweater. Her confidence in her sensuality did not prevent her from being mildly self conscious about her midsection having a little more to love.\n\nAs though she needed a sign, Chris' hands came around her waist, lovingly caressing her hips, stroking her stomach, and playing with her navel, making her shudder. Breaking off again, she sat up and brought the bottom of her sweater up and overhead in a quick motion, letting her bra slide off her arms to the floor. Chris struggled somewhat comically to remove his close-fitting shirt, but the job was done, and each paused a moment, noticing and surveying the new terrain. Rachel's hands stroked his chest hair and held his muscles. She blushed as Chris returned his hands and eyes to her waist, caressing every curve, and advancing upward.\n\n\"My god, you are so beautiful, Rachel,\" he breathed. She let out a deep sigh, relaxing, and moaned as his hands slid up and over her full breasts, now sloping downward a little with their weight. Her taut nipples were a pinkish-red, hard at attention, and her large, brown areolas stood in contrast to her creamy skin. Fingertips circled slowly inward, around the soft mounds, teasing and finally touching and dragging over the hard buds.\n\n\"Uhhhhhhnnnn...yesss,\" she moaned, tilting her head back. She couldn't make out if she wanted to, her breathing had so accelerated and deepened. Abruptly, she let out a gasp and a high-pitched squeal of surprise, pain, and intense pleasure; his strong fingers had closed around each erect nipple, lightly pinching them, and twisting ever so slightly. Her head came back down, her eyes burning into his. They searched downward, desperate for payback. With her left hand supporting her body, her right hand left his chest, caressing his taut stomach, slipped over his belt, and landed on the swollen leg of his jeans...\n\n*****\n\nSqueezing his thighs down to the knees, and rubbing back up along his left inner thigh, she felt his body squirm, egging her on. She wanted to tease him, but could not resist. Her fingers atop his thigh, her thumb felt the bulge inside his pant leg which moved slightly as she slid the digit over top. Chris moaned and his head lay back against the couch. He continued to squeeze and caress her breasts, albeit somewhat distractedly, while her hand worked to fully discover her prize.\n\nShe pressed openly across the crotch of his pants, his legs now spread wide. She could feel his full erection, tight in his pants. Squeezing here and there, she stroked back and forth along its firm length. His eyes half open, looking into hers, she smiled with an air of empowerment. She ran the show, or so she thought. He licked his lips, beckoning for a kiss, and she leaned in to comply. Their lips met tenderly, enjoying the pleasant but less intense contact, as their hands explored.\n\nRachel's illusion of control vanished as she was reminded that her companion had both hands free, to do with as he pleased. His right hand lovingly massaged her chest, shoulders, and breasts, while his left slid downward over her pale stomach. Sure of his intent, her breathing grew more rapid. He allowed his fingers to drag over her hips, and just past her crotch, before exploring and massaging her inner thighs.\n\n\"Please,\" she whispered, all thoughts of teasing now seeming like criminal acts. \"Please touch me.\" After months of being single, his attention reminded her of what a poor substitute her own ministrations had been for the excitement of a partner's touch between her legs. Chris needed little encouragement, and massaged back up her right thigh, pressing and sliding. Leaned over his lap, she was unable to open her legs much, but slid her right knee up and to the back of the couch, achieving the effect.\n\nHe felt the heat rise with every inch he moved upward, and as the side of his hand found the softness at the top of her leg, the warmth came with a dampness through her pants that made him gasp as much as she. With little ability to control his actions, like a teenager feeling her up for the first time, he turned the palm of his hand upward, squeezing fully over her crotch, fingers underneath, pressing into her, and thumb rising up and out.\n\n\"Aaaaahh, dammit! Yes!!\" Her hand automatically clenched around the thick bulge in his jeans, and she thrust her hips forward toward his hand. The feeling of her fingers surrounding and squeezing him was such heaven. He felt the heavy pulse in his loins throb in response. The shift of her hips made him squeeze her warm crotch repeatedly, alternating his fingers underneath, while his thumb moved in circles against the smooth fabric of her pants just above.\n\nIt was so difficult for Rachel to hold back, as her arousal continued to build rapidly. With a hand full of his erection, and a hand pulling and squeezing her nipples, she ground down on his other hand against his thigh. A wave of pleasure raced through her body, radiating from and returning to her burning loins. Wait...not yet. Must stop.\n\nWith an aggressive kiss, biting his lip, she struggled to lean back. Looking into each other's eyes, they nodded in unison, clearly on the same page. Rachel reached back and quickly removed her strappy black heels, bright nail polish accentuating her dainty toes. Chris lifted his hips, releasing his belt, and undoing the button and zipper of his jeans. He paused briefly as he watched Rachel hook her thumbs into the waistband of her own pants, sliding them down over her wide hips. Noticing his gaze, she let her mouth hang open, breathing heavily, her tongue licking her lips, while slowly sliding the garment lower and lower. The retreating waistband clung to her skin occasionally as it moved over the swell of her hips, then quickly slid down the curve of her rear. Rachel sighed loudly again to draw Chris' attention up to the seductive smile she had adopted to go with her motions. She enjoyed how closely he watched the departing fabric. She could see his mouth practically watering.\n\nPulling her knees up, she pushed the elastic band and tiny garment the rest of the way down her legs, and used her cute, upturned toes to give it a playful fling off to the side. Her hands slid from her ankles to her shins, over her knees, along her thighs, and gave a squeeze to her own gorgeous hips and derriere as Chris lay still in a trance.\n\n\"Mmmhh,\" she moaned deeply, \"see anything you like?\" Awakened, he nodded vigorously.\n\n\"'Like' is an understatement. Those legs...\" he trailed off, returning to the business of removing his jeans, quickly, but fumbling. As he pulled them over his feet, he felt a warm hand touch his waist and grab at his boxers; he drew a sharp breath. Leaning back again he locked eyes with Rachel as she moved without hesitation to remove them. Sliding past his hips, her hand rubbed slowly over his hard member, and the elastic band finally slipped past, allowing it to spring back in its full length. She sighed and gave a light moan while eyeing his very respectable package with obvious desire. He helped her finish pulling off the unwelcome boxers, and they both lay back together, allowing their warm flesh to press against each other. She noticed his tougher skin, the hair on his legs, the firm muscles. He felt the curves of her full breasts, and sharp points of her nipples, press against his chest. This woman was so voluptuous and seductive...\n\nHands slid around each other's waists as they pressed together more tightly. The warm length of his shaft lay against the thin hair of her soft mound, just barely rubbing against her damp lips. Chris couldn't believe how turned on he felt. The more he ground against her, the more he sensed the increasing dampness between her legs.\n\nEach breathed heavier as their lips returned to one another. Kissing passionately in between sharp breaths, Chris moved one hand low and under Rachel's waist, settling on the wide, sensual curve of her ass, stroking it slowly, squeezing forcefully from time to time. The extra leverage allowed him to press harder against her gyrating hips, now in unison. He felt her warm hands cross his chest and the back of his head, pulling on his short hair to drive their lips together.\n\nHer left leg rose and began to slide up his thigh. His fingers were rubbing along the smooth crack of her ass when her leg began to move, an intense heat radiating against his over-sensitive erection. With her leg raised over his thigh, the thick member slipped down between her legs and against her crotch. In this swift motion came the excited feeling of his twitching head pressing and sliding along Rachel's now glistening folds. The tip pressed just inside as it slid down and came to rest, pulsating between her thighs and against her smooth wetness.\n\n\"Mmmmm,\" moaned Rachel, the brief stimulation eliciting a heavy sigh of satisfaction. As if to savor and control their new position, she lowered her leg again, her strong thighs squeezing his rod against her lips, swelling open more and more. She loved the feeling of his warmth, slippery with her own wetness, stroking along her lips with every slow thrust. He was powerful, but moved slowly and deliberately, allowing them both to enjoy the height of sensation from their organs sliding together.\n\nShe reveled in the sharp sting of his fingernails digging into her left ass cheek as he squeezed hard, then dragged upward slowly. She let out a loud moan at the pain, rolling her head back. Her tender throat was seized by his hungry mouth, the strong lips clamping down beneath her chin, and sliding down. The warm tongue caressed the nape of her neck, the tip returning slowly upward, under her jaw, and then back down, gently biting down on her shoulder and collar bone. She could only whimper at these pleasant pains, her own fingers digging into his back with every tremble and shudder. She let out a long breath as her skin flushed at the attention.\n\n\"Yes...yessss...\" she uttered, absentmindedly, encouraging his exploration. Withdrawing his erection from between her legs, his body shifted downward, and she felt his migrating mouth and tongue. His strong hands moved up her sides, returning to and caressing her breasts - gently cupping them from underneath, then squeezing them fully as he planted kisses down the center of her chest. His left hand held her right breast firmly as his tongue traced a line down the valley between them, then circled around the pattern of his fingers.\n\nOne firm areola felt the electricity fire through as the tip of his tongue circled closer. Her entire body shuddered as the strong, warm, rough tongue began flicking back and forth over her hard nipple. She moaned loudly and squirmed in her place. Her hands grasping the back of his neck and shoulders, she brought him ever closer.\n\nPulled in tight, he lost even more of his willpower to tease and restrain himself. Chris was infatuated with the practice of pleasing this gorgeous and sensual woman, and he needed more. His right hand quickly slipped down to her stomach, then her waist, and then slowly moved his fingertips through her fine hair toward her damp opening. She moaned in approval, having been frustrated by his earlier withdrawal. \n\nTo affirm her desire, she tilted her left leg upward again, opening herself to his will. Without hesitation the warm fingers traced straight south, rubbing intensely on either side of his wet prize. Only Chris' middle finger slowly moved back and forth, aiming lower, eventually grazing her upper folds and briefly sending shock waves from her sensitive clitoris outward through her entire body.\n\n\"Oh, fuck yes! Yessss!! Unnhhh!\" she cried, thrusting her hips forward by instinct alone, wanting more. Still clinging to his slow and deliberate treatment, however, he kept his hand poised over her swollen mound, as just the tip of his middle finger delved softly into her dark, pink lips. Her cry of ecstasy was followed by a sustained moan, increasing in volume as he continued the journey downward. His finger now slid inside just a half inch or so, just barely spreading her wet lips apart and giving her a vague notion of what was to come.\n\n*****\n\nJust as she began to grasp the reality of his probing hand between her legs, she felt his warm breath intensify on her chest, and quickly her right breast disappeared into his mouth. Wide and wet, he took in a great deal, while employing his tongue in short flicking and circular motions over her hardened nipple. The intensity was excruciating. Each set of motions was followed by a firm sensation of sucking, and then more exploratory movements of his fingers down below.\n\nRachel slid her fingers through his hair, pulling his face to her breasts in pleasure. In response, Chris let his middle finger, moistened by her ever-increasing wetness, to slide deftly between the bottom folds of her lips, inch by inch, sinking completely inside her depths.\n\n\"Fuuuuuck! Oh, yes! Oh my god! Unnnhhh!!\" She simply could not give a fuck about anything anymore except how she felt, and she was definitely going to ride this out.\n\n\"Yes, baby...yeah!\" Chris could not help but encourage, her reactions turning him on as much as she was. Returning his mouth to her chest he began to treat her left breast to the same attentions, and let his lips pull on her throbbing nipple. The sharp sting of these gentle bites was quickly followed and soothed by circling strokes of his tongue. All throughout, Chris kept up a steady, circular motion with his finger buried deep within her warm vagina.\n\nThrusting her hips up and down, she had squirmed onto her back in order to spread her trembling legs wider to him, also freeing her hands. And not a moment too soon; with his left hand fondling her ample bosom, teasing her neck and ears, Chris slowly traced a long, straight line with his tongue - from the bottoms of her breasts, circling across her stomach, stopping occasionally for a wet kiss. Savoring the taste of her skin. Her intoxicating aroma was growing stronger by the minute, and his nose directed his attentions further down.\n\nAs the muscular tongue circled her navel before dipping inside, Rachel knew his intentions and could not begin to prepare herself. Quite comfortable with him so far, she still wondered if he would like it. Was she trimmed up enough? Would he mind the taste? Would he even be good at it? Only the low moans of encouragement were the extent of her ability to communicate. She pushed the worries from her mind; exhaling sharply across her waist, sending shivers through her body, Chris advanced lower and closer to his sweet goal.\n\nHer fingers raked his hair as he brought his left hand down low now, focusing solely on Rachel's midsection, The strong finger deep inside her was alternating between sending a few slow strokes in and out, and then pressing upward within her smooth walls, stroking that special place, eliciting constant moans.\n\nHis nose now pressed against her waist, his mouth kissing softly over her hips, and his tongue beginning to explore through her light pubic hair. Indeed, she was neatly trimmed, enough to play with and generate excitement, but allowing delicate and thorough access. Her hands unconsciously pulled his face in tightly to her pelvis, pushing lower, desperately wanting to feel it. Now. Please.\n\nFor Chris, the scent was now overpowering. With his finger still working absentmindedly inside her, he could see her opening lips, glistening with moisture, and the small, hardened bud of her clit partly exposed, occasionally grazed by his thumb to her cries of ecstasy. He could not wait any longer even if he wanted to. And he did not.\n\n*****\n\nHis left hand continued down her hip, over her thigh, under it, and slid under her right cheek, grasping firmly. Gently he withdrew his thumb and middle finger from their activities, much to her whimpering and gyrating protest. His right hand quickly slid under her left cheek, and with near full control over her upward thrusts, as well as her ability to retreat, he finally gave into the heights of her aroused desire and physical pleading. Chris leaned in again, looked up and waited for their eyes to lock, and let his tongue contact and slide down her soft hair. Swaying back and forth, moving continuously downward, breathing deeply, his warm tongue slid over and parted her pink lips.",
        "\"Ooooohh my gooood - yess!! Yes, yes!! That! Mmmm...\" Rachel trailed off into nonsensical utterances as the strong, firm tongue spread her lips open and found her stiff clit very quickly. Just a few firm, exploratory licks across it would have to do for now, giving her spasms of almost painful pleasure. The next wave crashed hard as Chris squeezed her full ass in both hands, pulling her up to his hungry mouth, which clamped down wide over her lips completely. She shuddered as she felt a gentle suction pulling her lips in, and his tongue sliding into her folds. Lapping at her reddened lips, now positively dripping with her juices, his tongue paused low - and entered her. No tease, no toying, no playing, just every inch of that wonderful, long, rough, dexterous muscle sliding straight into her red hot pussy, with his warm mouth humming its approval across her lips and clit.\n\nHer vision seemed blurry. This was not the first time she had felt her vagina pleasured orally, but it was in fact the first time it could truly be considered the textbook definition of pleasure. Hell, she was pretty sure this was the definition of getting eaten the fuck out.\n\n\"Mm hmmm,\" moaned Chris, muffled by the soaking lips of her loins. The vibrations drove her insane, and he soon had moved his hands down to her knees in order to raise them up and back. Rachel felt open and vulnerable, and had never felt entirely comfortable this way. But his relentless and passionate attention drove all inhibitions from her mind as she obediently opened wider for him. With her legs wrapped around his head now, the angle allowed him to rhythmically push his tongue all the way in and out of her dripping wet slit. He could not get enough of her sweet and salty flavor. Only a hint of bitter, the aroma was so permeating, and kept his drive on edge. She continued to utter cries and moans of pleasure with every tongue thrust deeper and more powerful than the last.\n\nChris massaged her buttocks from beneath and slightly withdrew his tongue, tracing upward and along her lips. Rachel shook as the firm tip of his tongue reached her clit again. She convulsed when it jumped back and forth over the nub, and her own hands raced upward to return more attention to her sensitive, aching breasts. He continued to pull upward and push back as he glued his lips to hers, searching for the water of life, and zeroing in on her clit.\n\nNow he struck up a slow and steady rhythm. Several strong strokes back and forth, alternating with gentler ones up and down, lifting the fine folds of flesh to expose and tease that most sensitive bundle of nerves. Then a gentle nibbling and sucking causing her to shriek in ecstasy. Truly unbearable, she could do nothing to stop.\n\nNor would he let her. His hands gripped her ass tightly, keeping her loins firmly in his mouth. Rachel's chest heaved as she breathed deeply and rapidly, moaning and squealing. Her pulse raced in tempo with Chris' tongue, and her hands massaged her full breasts. Muscular legs bent up in the air and over his shoulders, she felt his tongue licking wildly up and down the length of her vagina, flicking her clit, spreading her lips, and delving wetly inside. She half laughed and half mumbled nonsense at the mixture, and then jumped at the new and unexpected sensation of his strong tongue slipping down past her lips, perineum, and gently brushing across her pink ass. The shock was truly electric. Not so much good or bad at first, but a bolt of lightning, and lasting just as long. She caught her breath as he licked and sucked on her lips as before, keeping her burning, and yet she yearned to know how it might feel if he ventured down again. It was a nervous thought, but she did not have to wait for an answer.\n\nHis tongue repeated the dip down below her lips again, though with more deliberate action and attention. The tip passed straight back again, never breaking contact, and then pressed in a gentle but firm circle around her tight, sensitive ass. Her heart nearly exploded out of her chest in a mixture of pleasure and panic. She had never felt anything like this before! Of course the concept existed, she was no prude. In fact, her adventurous roommate had on multiple occasions described in scintillating detail several encounters where she had either performed or received such taboo actions, though Rachel had never really acknowledged it as an option herself.\n\nThat view was rapidly changing. Her nerves and apprehension had naturally returned, as she felt very self conscious in this position. But his deliberation and exuberance allowed her to eventually relax and trust that he enjoyed it too. She allowed her legs to open more, and pulled back, vulnerable to Chris' exploration as he proceeded with his lesson. After several return trips to suck gently on her clit, and slide his tongue deep within her drenched pussy, he made another wet pass downward, rotating the firm, pointed tip in small, tight circles as it found her taut ass again. With more than passing attention, he pressed firmly in these circles, causing radiating pulses of pleasure and excitement to shoot through her body.\n\n\"Oh, fuck! Whoa... I\u2014oh yes!!\" she stammered in disbelief.\n\n\"Mm hmmm?\" he hummed, encouraged by her reaction.\n\n\"How do you...feel...ughh!! So damn good... Ah!!\" Her words trailed off to squeals, as her need to communicate was quelled by his probing, muscular tongue. Nerve endings and pleasure centers were exploding between her cheeks where she had never been aware they existed. He continued for what seemed an eternity, opening a new world of sensuality for her, and driving their erotic connection ever closer.\n\n*****\n\nFinally he hummed his own approval at the quality service he had provided, and released his grip. Tongue tracing gently upward again, kisses landing here and there across her lips and thighs. Removing his hands from beneath her firm cheeks, he squeezed and massaged her hips and sides, traveling north to return to a position of full contact. Rachel had opened her eyes by now to revel in the sight of his strong, lean face buried between her legs. She chuckled lightly at his hair which, by her constant stroking, now lay in all directions.\n\n\"Ba...by...\" Chris shook his head. \"I wasn't sure you were going to let me come up for air.\"\n\n\"Um, sorry?\" she smiled nervously. \"I'll have to admit that I may not have been fully coherent. I mean, fuck...what have you done to me?\" Chris lay his body down on hers, running his fingers in her thick hair, and looked straight into her eyes, smiling.\n\n\"Only a little of this, little of that,\" he replied. She sighed as they kissed once more, tongues greeting one another thoroughly. Rachel let her legs fall to the side so that he laid between them. As the solid length of his shaft came to rest against her exceedingly damp lips, she sighed and wrapped her legs around his waist. He moaned at the heat of her slick vagina against his smooth and sensitive penis. Their eyes locked. They gyrated together a little more slowly in such close contact, and the warm tip of Chris' erection slid down to press on and between her lips. The hair on the back of his neck stood on end. So beautiful, so warm, so smooth. And dripping wet.\n\nShe noticed his eyebrows raise slightly at this most sensitive touch. It was a pause, and a request to proceed. Her body gave a resounding response in the affirmative, and her skin flushed red. Rachel was never one to be fast, and was careful with the messages she sent. But his attentions had been delicate, slow, and measured; responsive, and always with such emphasis and concern for her pleasure. Even the slow and steady rubbing of his head against her entrance, and his nibbling along her neck and shoulder just now, communicated the desire for intense lovemaking; or, at least, extremely passionate and thorough sex.\n\nYes, she thought, I want this. I want him inside me. I want to feel all of it. I want to give him all of it. See the look in his eyes when my lips surround him like he's never felt before. When I take him. Enough hesitating; though, what had seemed like forever was perhaps a minute. She pulled Chris' head up from his wandering activities on her chest, and brought his gaze squarely to hers. Instead of a nod or a word, she took the poor boy by surprise, taking exactly what she wanted. Given his weight and position over her, she rocked her hips up and back in a swift, fluid motion, with just enough twist to cause his wet and twitching member to spring inside her, followed by several inches of thick, instant penetration.\n\nFor Chris, it happened so quickly and unexpectedly that he couldn't even attempt to assert the control he had intended to maintain since the beginning. Her fiery eyes were fiercely locked with his, searching for every tiny reaction\u2014which was immediate and unstoppable. Accustomed to the cool air, every one of the nerves in his pulsating dick began to light up and explode. The lights of his eyes flickered as the rolled back under their lids. The copious lubrication she provided allowed for a smooth and thorough entry, sinking slowly in, but did not counteract the firm and muscular squeeze that her pillowy walls exacted on every square inch of his penis.\n\nRachel had not broken eye contact with her prey, but even as she took him inside just as she desired, she was not prepared for the intensity and pressure of his presence within, quickly filling her up. She gasped noticeably, and inhaled sharply, her legs instinctively grasping his waist. They arrested the deft penetration and, as though waving through a checkpoint, relaxed open again to allow him to fully enter her. No, she thought, not allow. Encourage. Take. This is mine. Her legs wrapped around his waist again and pulled him closer against her widespread pelvis. His eyes still had not opened, and as she savored the full feeling of accepting every bit of his throbbing cock, she smiled devilishly at the obvious control with which she operated.\n\nThis was the look Chris received as his eyes finally joined the world around him, and his face lowered again to look the sensual and irresistible woman in the eyes. She bit her lip, slowly and fiendishly.\n\n\"I'm not sure if I'm entirely safe with that look in your eye, honey...\"\n\n\"Oh, get used to it, you're gonna play by my rules now,\" she issued. The pair having relaxed a bit with these comments, Rachel rotated her hips up again while simultaneously shoving him down and inside with her powerful legs. He was helpless and they both knew it.\n\n\"Ohhh, fuuuuck mee!\" Chris groaned.\n\n\"Well yeah, that's the idea, big guy. Mmmmm,\" she moaned with the expansive penetration. \"I'm gonna do just that. You're not the only one with talent.\"\n\n*****\n\nHis eyes rolled back again in disbelief and pleasure. What a woman. He was not accustomed to poor sex, by any means, but to be so turned on, so manipulated, told how it was going to be, the concept just\u2014\n\n\"On your back. Now.\" Chris' train of thought was interrupted by the swift motion of one of Rachel's legs leaving his back, planting firmly to his right, and pushing him nearly over. He knelt beside the couch, regaining his balance, and Rachel quickly sat up to swing her legs off the cushions. She raised her eyebrows and tilted her head impatiently toward the couch, where she had been laying. Obediently, Chris lay back on the couch, exposed to her hungry eyes and desires. He felt her eyes rake up and down his toned form, sighing, and exploring with her hands. Her expression took on an impish nature\u2014he bit his lip in anticipation. Her fingers found and wrapped around the engorged object of her passion.\n\n\"Mmmmmm, ooh,\" she cooed, nearly seven inches of pulsating manhood filling her hand. \"Now that's something I can work with.\" He moaned in submission to her squeezes, and whatever else she intended. Hesitation vanished; she knelt on the couch and straddled his thighs...then his waist, then his chest. The sight was phenomenal. Her strong legs, tapered shoulders, wide hips, sloping breasts, stiff nipples, and dark pink lips, parted, resting warm and wet against his chest. \"Make sure I'm nice and slippery, would you, Chris?\" she ordered with a smile.\n\n\"Yes, ma'am,\" he responded quickly, feeling just as obedient as he sounded. He moved his hands up her thighs, stroking her tendons and tracing inside, but was momentarily confused as her knees continued forward beyond reach of his hands. Her sultry eyes had bored into his until his face disappeared beneath her breasts, her stomach, and her hips. The last thing Rachel heard was a faint \"oh my god\" of realization when her spread loins finally lowered, suspended, over his mouth and tongue. She had other plans, to be sure, but fully intended to explore a good deal of what she could get away with in these moments of seeming authority.\n\nShe placed her right hand on the back of the sofa for support, and began to lower her hips. His warm exhalations danced over her glistening folds, and heard him lick his lips in anticipation. The sound made her shudder. Her left hand reached back to slide down his stomach and take a firm hold of his painfully erect cock. He began to moan loudly at her strong grasp, and at that moment she let the weight of her loins down, and set her dripping wet lips squarely over Chris' mouth, muffling his moans of pleasure and excitement. His head squirmed slightly to adjust, but he made no effort to push back or gain space. Instead, Rachel felt his mouth open to take her lips in and let his tongue slide out.\n\n\"Holy shit!\" she cried out, as her wet folds opened for Chris' advancing tongue. Skillfully, it slid deeper inside than expected, deeper than ever before. He hummed into her dampness, inhaling deeply, breathing in her strong scent. \"Uhhhhh...\" was all she could muster as she felt a trickle of juices drop down his penetrating tongue. She felt almost helpless as he sucked powerfully on her swollen lips, and expertly flicked his tongue over her hard clit. Goddamn, she thought, I was going to ride the fuck out of him, and now I can't even make myself move. Ugh! It was nearly hopeless. She felt a trembling deep inside, and a wave of warm pleasure began to build. Shit, this is not happening, she thought. But I want it so badly... Fine, fuck it!\n\nChris disconnected briefly to take a full breath and to mutter something about how hot she was. But she shushed him quickly and found her stride. With a renewed grip on his erect and throbbing dick, Rachel told him to keep going as she ground into his mouth. Sitting fully on his face, rhythmically sliding her crotch forward and back, she rode him hard. Good and rode him.\n\nShe found herself on a rising tidal wave, growing in her loins and clearly heading for shore. He moaned, hummed, and licked into her sweet, juicy pussy as she reached out to grab her impending orgasm. At every grind, his tongue flicked and worked over her swollen clit, and at every retreat it plowed through her lips and firmly rubbed her pink asshole.\n\n\"Yes! Okay...fuck...don't stop! That's...oh my god. That's it...mmm...give it to me!!\" Rachel's utterances were broken but demanding. Her voice wavered slightly in these later phases of sensual desire and need as the tidal wave reached shore and began to break. The tingling built to a crashing sensation, and she held fiercely onto the couch and Chris' cock as she began to shake violently. He kept up his powerful licking as Rachel exploded over his open mouth.\n\n\"Hoooolyyyy fuuuuuck!! Ahhhhh...YESSSSS!! Ummmfffhh, yeahhh, fuck meeee!!\" She screamed in ecstasy and bore down hard, fucking his mouth hard and fast with her spasming and leaking pussy. Her neck and back arched sharply as she cried out, eyes watering from overwhelming pleasure, her body racked with intensity. Liquid flowed from her red, swollen lips, and trickled into his mouth and down his cheek. Her body shook and shuddered over, and over, and over again, as each crashing wave shattered her nerves. Eventually, the convulsions began to lessen in intensity. She slumped forward breathlessly, her loins lifting slightly from his lips. Her clit was over-stimulated and she could bear no more. FUCK, that was good, she thought to herself...\n\nRachel shifted back, away from Chris' shoulders, slowly laying her body in line with his. He reached up to her neck, pulling her down and delivering a passionate, wet, flavorful kiss. Full of desire, and laced with her own arousal and juices, it tasted surprisingly good. A flash of jealousy crossed her mind. The satisfied grin on Chris' face, however, was intolerable. Smug bastard. She had no regrets about enjoying a practically life-altering orgasm, but her outward attempt at asserting authority had been substantially derailed in an epic sexual coup. Breathing heavily, and regaining her senses as her body lay across her caressing partner, she wasted little time in resuming her campaign.\n\n*****\n\nChris was overcome with various feelings of satisfaction and admiration. There was nothing like the feeling of helping to bring off such a powerful, quaking, violent event, and the taste in his mouth was a sweet reward. Plus, it was seriously fucking hot. Her kisses were distracted at first, clearly not 100% present yet, and he loved that.\n\nRachel had released her controlling grasp on his stiff erection as she returned her body tightly to his. Having caught her breath, she pushed herself up and off his chest slightly, allowing her lips freedom of movement over his. Her soaking crotch rubbed along his firm and gently twitching member, and she began to shift slowly forward and back, mimicking her performance on his face. She felt him harden a little more, and a couple sharp breaths indicated his arousal. She gave points for his sexual character as he gently held, comforted, and caressed her, making no attempt yet to get his own rocks off too quickly, focusing instead on ensuring that she enjoyed and savored her pleasure. He would be rewarded handsomely, she decided.\n\nHe felt the damp folds of her steaming pussy sliding along the length of his erection. Chris didn't want to rush or pressure too much, but was relieved that it seemed more action was in store. He sensed the shift in her focus, and as her labored breathing subsided, it was clear she had designs on him. He was excited and extremely turned on; not just from the advancing pressure of her wet sex, but at the general nature of their spicy back and forth. A fun and sexy struggle for naked dominance. And yet it would seem that dominance invariably meant the ability to provide pleasure, albeit with much teasing and delay, to the point of reducing or eliminating the ability of the other to move or react.\n\nRachel bore down on Chris' thick shaft, rubbing her wet lips deeper along the length. Sliding around both sides, she allowed the tip to repeatedly dip just a little bit inside her. After each of these, she felt the warm rod twitch and pulse beneath her, getting harder...hotter. His breath quickened as she laid her hips down on his stomach, bent her mouth to his ear, breathed deeply, tongued around the lobe and cartilage, and listened for the effects of her actions. In one smooth motion, she slid her body downward along his, and felt him tense up even more as the sensitive tip of his penis slipped inside her lips.\n\nPausing at every inch of progress, and backing off most of the way, she reintroduced his solid, pulsating cock to her warm and luxurious tunnel of love. He burrowed deeper inside her by grabbing her hips and trying to pull her down. His fingers dug into her ass cheeks, eliciting whimpers, but she immediately reached down, grabbed his wrists, and pressed them firmly over his head against the arm of the couch. She leaned up to make eye contact.\n\n\"Uh, uh...\" she admonished. \"Keep your fucking hands to yourself, dirty boy. My turn.\" Only a hint of satisfaction in her face diluted the otherwise stern and corrective tone of her command. And with that stern eye contact and the words \"my turn\", she backed herself down and eased the last few inches of throbbing meat into her hungry slit. ",
        "\"Uhhhh...yesss,\" she smiled, with half-closed eyes. She struggled to maintain a determined expression to match Chris' heavy gaze. Her depths expanded to what seemed like the limit as she took him fully inside. Truth be told, it required all of her concentration not to cry out in pleasure and extreme physical fulfillment.\n\nChris could not hide the intense pleasure he felt as his long, hard dick was swallowed up in her tight lips, inch by inch. His attempt to advance the situation being met with forceful restraint, he breathed out a meek \"yes, ma'am\" once again, and put his hands behind his head. It was impossible not to thrust harder...to push deeper...to grab hold of her. As Rachel slowly began to rise up and gyrate her deep, wet pussy around the base of his cock, he stared hungrily at the taut nipples and wavering breasts in front of him. Throwing him a bone, so to speak, she leaned down a bit in her slow grinding, and pressed her full breasts into his face.\n\n\"Go on, hot stuff, lick 'em up. You like sucking on my nice, round tits, don't you?\"\n\n\"Mm hmm,\" came the muffled reply from inside her cleavage as she felt alternating sensations of tonguing, sucking, and teeth dragging over her erect nipples. She pushed down to fight back.\n\n\"Yeah, you just try to pay attention while I ride the fuck out of you.\" In a few brief moments of self awareness, Rachel wondered just where in the fuck she had disappeared to, and who this randy sex fiend was that had begun speaking and acting for her. As she humped Chris' loins nice and low, getting good and fucked deep by his always-stiffening cock, she knew that her sex life was changing and that she has a lot on the horizon. His willingness, consistently demonstrated by ever harder sucking and enthusiastic thrusting, told her that at least for some time, this erotic connection was likely to play an important role in her sexual exploration. And if that was the case, she had every intention of discovering and developing her wildest sides.\n\nChris struggled to keep his hands back as Rachel sat upright on his lap, burying his shaft so fucking deep inside it was unbelievable. She leaned back and tilted her head to the side\u2014he watched her lick her lips and slide one hand up to her breasts, fondling and squeezing them. Her tongue slipped out and licked a pinkish-brown nipple, eyes closing in obvious pleasure, and opening to look straight into his as she continued. Her round ass checks massaged his thighs thoroughly while she ground around on his dick in a clockwise circle, forcing it to bend inside, pressing against every fold and wall of her hungry pussy. They both moaned loudly as the tip bottomed out inside, deep within her.\n\nChris' hips thrust upward naturally, the pair of bodies working together automatically to achieve the deepest penetration possible. Continuing to massage her own perked up tits, Rachel maintained lustful eye contact with every deep push. Her upright posture provided such an intense angle against her G-spot that she simply worked it back and forth there, rhythmically. The angle also put a great deal of pressure and tightness along the top of Chris' cock, and his thickness contributed greatly to their mutual satisfaction.\n\nThere was no mistaking that she owned him now. That dick belonged to her, and she was working it like she would never let go. Still, the deep, quickening thrusts beneath her indicated that he was riding his own wave now\u2014but she had other plans.\n\n\"Right there, baby, fuck...just like that!!\" he cried out, and she needed no further clue to move to the next step. Right as he begged for her continuation she slid straight up and let his shiny, wet erection slip from her tight, clinging folds with a *smack*. \"Ohhh, my god! Please!!\" Chris could not help but cry out in disappointment, left on such an edge. She had moved back onto his legs and taking the twitching member in her hands, shooting him a sharp look of disapproval.\n\n\"Oh no, I definitely did NOT just hear you speak, let alone complain!\" she reprimanded. Chris moaned again and squirmed. As soon as he made eye contact with her again, she held his gaze and bent down, lowering her head to his crotch.\n\n\"Shit...oh, shit!\" was all he managed to utter in words as she bored into his eyes, and held the base of his long, pulsating cock, pointing straight up toward her opening mouth. She let her tongue drop out, and gave him one last instruction:\n\n\"Shut your mouth and come for me.\"\n\n*****\n\n\"Holy fuck, you are unreal!\" A stern look in return. \"In mean, yes, ma'am, whatever you say!\" And with that, she stared him down as her tongue contacted the bright, reddish-purple tip of his throbbing penis. She swirled the end of her tongue around his head, licking up several drops of precum. She felt his moans and squirms throughout his body and marveled at the lack of physical control she was able to produce within him. Putty in my hands, she thought, as she raised her eyebrows at him and then lowered her open lips onto his head, slipping it down just past the ridge, taking a nice, sensitive inch into her mouth.\n\nChris shuddered. He had never felt so turned on. Never been so encouraged and then denied. Never had he wanted anyone so badly. Never had he wanted to experience anything and everything with someone like he did now. At the shudder, Rachel moved her hands to his chest and slid her lips slowly down his shaft, taking inch after inch into her mouth, just as she had done so sensually with her pussy only moments ago. And, as a side thought, she took into her mouth no small amount of her own arousal, and felt her clit tingle at the sweet taste.\n\nOwing partly to enjoying the taste of her own sex, Rachel lowered further and took as much of Chris' thick cock in her mouth as she could. Her tongue slid beneath it, licking up and down as her mouth surrounded it tightly. Lips closed tightly around the throbbing member several inches down, she sucked firmly inward while slowly retreating up toward the tip. Moans and cries of incredulity encouraged her repeating the motions up and down, taking his shaft deeper into her mouth. Over and over, painfully slowly. Looking into his eyes again, she tilted her head and took almost all of him inside. Too much, of course, but she continued until giving him the sensation of his head touching the back of her throat.\n\n\"Fuuuuck! Racheeeeel!! Oh shit!\" he cried, trying not to squirm as she worked. She kept him there for only a few moments before her gag reflex forced her to retreat to comfort, playing with his head, running her tongue up and down his warm rod.\n\n\"Aw, you want it all, don't you? Sweet, little Chris?\"\n\n\"Yes, please...all...all of it...want you,\" he stammered.\n\n\"Hmmm,\" taking him in fully again and then releasing. \"I'm having so much fun with my new toy, I just don't know how I want to finish you off. I think I just want to keep edging you along,\" stroking slowly with her hand, \"trying to make up my mind...I'd do anything at this point, you know.\" She grinned as her tongue played with his tip.\n\n\"Oh my god, fuck that...\" cried Chris, his swollen cock now painfully stiff, having repeatedly been on the brink of orgasm.\n\n\"Aww, fuck what? You disagree? Think you have any say in the matter? Not while I have this...\" She trailed off as she slid him into her mouth again. He moaned in pleasure, but couldn't wait any longer. This was sheer cruelty, now. If it was time to play games, then it was definitely his turn to deliver a game-changer. Rachel tongued the firm tip of his dick, enjoying the shivering sensation it gave him. He moaned and begged and began to announce how close he was. She encouraged him stroking his thickness in her wet hands, sucking his head. \"Give it to me, baby, that's it, yes...\" she growled.\n\n\"Oh yeahhhh...you're gonna take it, huh?\"\n\n\"Mm hmmmm...any way you want, just GIVE it to me.\"\n\n\"Whatever you say, sexy...\" he seemed to shrug. Her confidence shifted quickly to confusion as he rolled out from under her. Surely he didn't have the willpower to escape the adept attention of her tight lips and strong tongue, did he? Sitting up a bit, and turning slightly toward him, she was about to ask Chris what he had in mind, when he grabbed her sides and pressed her down and forward again. Her arms folded and her chest lay flat on the couch, her swollen nipples sparked from rubbing the rough fabric.\n\n\"Ughhh, what are you up to? I want to finish you!\" Rachel moaned, turning her head to the side. Her curved buttocks were quite high in the air now, and she naturally began to lay forward. The strong hands pulled her hips back and up again while the warm, wet object of her desire pressed against her inner thigh.\n\n\"Not so fast,\" he admonished. Her soaking wet crotch felt very exposed and open as she considered what was to happen next. All at once, she felt Chris' hands grab hold of her cheeks, spreading them wide, and his warm breath sent electricity through her loins. Within seconds his lips were fully over hers, and his firm tongue dove deeply into her slick depths once more.\n\n\"Oh, fuck! Fuck, yes! What are you...ahhhh...I was...mmm!\" Rachel's pointless objections were quickly cut off as the sucking lips and forceful tongue made their way up and down, flicking her throbbing clit, delving into her juicy lips, and then pressing against her tight, pink ass. \"Oh my fucking god, eat me! Yesss! Don't stop...unnhhhh!!\" She loved getting a good pounding from behind, but to be eaten so deeply, so thoroughly, and so intensely, this exposed position, was nearly unbearable.\n\n\"Mmm hmmmm,\" came another muffled acknowledgement from within her dripping pussy as she worked it back against his mouth. The sounds of his licking and sucking, along with his obvious inability to speak, only intensified the waves of pleasure racking her sensual frame. As she ground back hard against his face, she felt a hot and sudden bolt of pressure between her legs when a slippery fingertip massaged her tight rose in a couple circles before slowly sliding inside about an inch.\n\n\"Ooooohhhh my fuck!\" she cried. \"Ohhh my god. Okay. Easy...damn!\" Her breathing was more rapid, with only a mild touch of panic. \"Yes...just go slow...mmmm like that.\" Chris pulled his mouth from the thick lips of her dark pink vagina.\n\n\"Mmm yeah, you like that?\"\n\n\"Yesssss...\"she moaned, absentmindedly. \"That's...ohhh, hmmmm,\" sighing as the slick finger moved gently in and out, before sliding nearly all the way inside her. The pressure was intense, it was obviously so tight, but not painful; more of an awkward discomfort at first. But the attentive finger stimulated so many new nerves, lit her on fire, and she couldn't believe what she was feeling; what was so clearly possible. Interestingly, the depth of his exploration helped her relax.\n\n*****\n\n\"Oh my god, you're...out of control...just that I haven't...like this...fuck...\" and Rachel trailed off again in a series of low moans. She felt the firm length moving slowly in and out, pressing around inside her, awakening her, teaching her. She could only moan her approval as Chris, smiling and leaning in to kiss her tenderly on the lips, pressed all the way in and worked her warm asshole thoroughly. Her body kept alternating between waves of pleasure, electricity, numb tingling, painful excitement, and a building accommodation.\n\n\"Yes,\" she said through the cushion, with her eyes closed softly. \"Do me. I want...wanna know this. Mmm.\"\n\n\"Your word,\" breathed Chris, leaning over her hips and whispering in her ear and slowly withdrawing his finger to her whimpers, \"is my command.\" She gasped as the tip of his penis dipped between her red lips, reminding her of the intense fucking she had recently delivered to him, with his fingertip still in her tight ring. She felt the thick shaft enter her slowly, and only briefly, sliding easily in and out of her dampness. Breathing hard at his penetrations, and the intense pressures, she squeezed and relaxed several times to communicate how satisfied she was, and how much she enjoyed the new experience. As if on cue, her pink lips held tightly to the sides of his shaft as she felt him withdraw, eliciting more whimpers of disappointment.\n\n\"Awww, put it back, please don't stop,\" Rachel objected.\n\n\"Don't worry,\" Chris reassured her. \"You'll get all you can handle.\" With that, the firm head of his dick slipped up between her lips, dripping wet, and against his masterful finger, which finally withdrew completely. In the same instant, she gasped and gripped the cushions of the couch as the slick head pressed against her tight hole, already relaxed somewhat, but squeezing firmly at the new presence. All hesitation and uncertainty had gone out the window; she took on the goal of complete satisfaction, and made only a plea for mercy and gentle treatment.\n\n\"Ohhh...never felt this. I've\u2014never done this. It's...hmmmm...so good. Intense. Just\u2014oh!! Go slow...yeah...ahhhhh!\" Chris nodding in agreement to her half-closed eyes; he would not have proceeded in any other manner, or without her encouragement, He could see her chest heaving against the couch, one hand holding the cushion, and the other was finding its way to her steaming pussy. Her fingers found her excited clitoris, in need of attention. His hands resting gently on her hips, he leaned forward slightly, and Rachel sustained a long moan as his thick shaft slowly began to ease forward inside her. The intense pressure and sensitive nerves resulted in a nearly disorienting mixture of pleasure and pain.\n\n\"OH. My. GOD... Oh my god. Unnnhhh, yessss. Easy...mmm.\" The nonsensical babble continued, occasionally interrupted by moans and a few squeals at the new and expanding presence within. Chris was almost in a similar state, and had lost all illusion of being in control. Her distracted mind was all that left him in the driver's seat. His long, reddened cock stood hard and pulsing with the head stuck just inside Rachel's tight ring. She could practically feel his heartbeat as the swollen member spread her asshole open little by little, and more of his thick shaft filled her. She breathed deeply and tried to relax, which in turn encouraged Chris. He eased forward, and began a slow and steady rhythm to help smooth things out.\n\n\"Mmmm, baby,\" he breathed, \"fuck you are so tight around me...feels so good...\" Rachel giggled softly, only slightly more aware of her senses.\n\n\"Yeahhh, you like that, sexy? Hmm?\" Chris shuddered in agreement, leaning forward and burying his cock almost completely inside her round ass. \"Ahhh! Oh! Oh, damn!! Yeah, that's it, oh baby...it's all yours, now...mmmmm.\" She took on a sultry tone of encouragement, almost daring him to push her. Entirely filled, and sensing the pressure and pleasure in every direction, the tension eased and she could really enjoy the new sensations.\n\nAnd he might have pushed her, if Chris had been on this planet. Plunged deep within her, he was feeling all the smooth, velvety muscles that squeezed and pulled on his stiff rod. While deep, he maintained the slow, thrusting rhythm that had massaged her open and made them receptive and united in the experience. He savored each withdrawal as his cock pulled almost all the way out, and her tight, round muscle slipped past the ridge of his head, then felt his nerves explode as he drove forward again, sinking every thick, swollen inch of meat deep into her red, hot ass. As such, his pace, along with his pulse, quickened.\n\n\"Ooooh yeah, baby, yes. Mmmm, give it to me...so deep, fuck yess!!\"\n\n\"Unnnhhh, oh yes. You feel so fucking good. You asked for it, and\u2014unhh!\u2014you got it. How do you like\u2014that?\" Chris emphasized and punctuated his moans and words with every thrust, plowing into her. By now, Rachel was seeing stars as she got into the rhythm with him. She felt her flexing asshole easing open more naturally to swallow every bit of his penetrations. She pushed back and he sank deeper inside, hard, his balls slapping firmly against her dripping wet lips, and her fingers that were busy stimulating her clit and pussy.\n\n\"Holy shit, yes! Oh my god, Chris! Yes!! Unnnhhhh!! Mmm, fuck meee!!, Yeah, fuck that ass!! Oh, baby, you like that tight little ass around your dick? Yeah? Ahhhh!!\" Inhibition was nowhere to be found, and the two pounded together furiously together, his long, slick shaft now freely sliding in and out of her sweet, pink asshole. The deep pressure kept ramping up sensations of pleasure she had never felt before\u2014had never thought possible\u2014and combined in a single storm surge with the rapid signaling of another coming orgasm. Chris' dick throbbed and pulsed inside her as the squeezing sensations milked his shaft, bringing him right up to release.\n\n\"Oh god damn, Chris...oh honey...yes...I'm gonna...I'm gonna come...it's so...unnhh! Fuck! Give it...give it to me...oh baby, come with me! Oh...baby, please come with meeee!!\" Rachel's fingers flew back and forth over her stiff clit and sopping wet pussy lips, rubbing his balls in the process and just barely stroking the base of his pistoning shaft.\n\n\"Yes, sexy, yes!! Oh god, I am so there...I'm gonna give it to you, right there. Mmm, yes! Right\u2014there\u2014yes!!\"\n\n\"Yeeeaaahhhh!! Fuuuuck meeeee!!\" she wailed as the wave began to flood her body and crash over her nerves, parts of her feeling electricity and others going through waves of numb tingling. The lightning began to strike back and forth as her body convulsed, all of her muscles clenching tight and her heaving chest gasping for breath as she came hard\u2014so fucking hard\u2014her orgasm feeling more like a roughly defined earthquake; a single event that simply would not end. \"C\u2014c\u2014commmminnnnnngg!!\" she screamed into the cushion.\n\n\"Unnnnhhhhh, fuuuuck!! Yesssss!!\" Chris returned, grabbing her convulsing shoulders, leaning forward, and burying his cock completely inside her warm, tight asshole, now spasming and clenching around him as her pleasure raged on. Several huge, throbbing pulses built up quickly and resulted in an eruption in his loins; he held tight, working his thick cock deep inside her writhing ass, as he unloaded, finally, coming with brutal force and intensity.\n\n\"Goooooooodd!\" she managed to utter, as she felt his trembling cock swell inside her, filling her to the limit, and spasming again and again. In the throes, she could feel jet after jet of hot cum shooting deep inside her tight hole, filling her with a warm, pleasant sensation, and extending her orgasmic tidal wave into a long train of shudders, convulsions, squeals, sighs, and pulses. The violent surges throughout her body, and his rigid cock, began to subside as sticky cum mixed with dripping sweat, and the scent of hot, passionate sex filled the room, overpowering their senses. Bodies stacked on the couch, united, Chris lay on top of her, still moving slowly and rhythmically up and down in short thrusts, deep within. Rachel moaned and continued to rock upward to meet his advances, and their heavy breathing continued for an eternity as their pulsing orgasms finally faded away.\n\nSweat beaded and dripped from their necks and foreheads. Hands stroked lazily along legs, arms, breasts, thighs. Warm semen slowly trickled from her ass and between his legs. Lips nibbled ears. A chuckle. A squeeze. A sigh. Exhaustion gave way to pleasant touching, caressing, and smiling. Smiles gave way to heavy eyes and relaxed limbs. Sensuality and satisfaction gave way to slumber.\n\n*****\n\n\"Tracy! Get out of the goddamn shower! Are you writing a novel in there??\" Rachel cracked the door to hurry her roommate along.\n\n\"Oh, well look who's finally out of bed! Goodness, I thought maybe you'd died in there,\" Tracy teased in a sing-song voice.\n\n\"And deprive you of my amazing company?\" she gasped, feigning surprise. \"Of course not!\"\n\n\"Wanna do me a favor and fuck off? You're letting the cold air in!\" Rachel promptly closed the door and leaned against the counter. \"Oh sure, just come on in, why not,\" Tracy teased. \"So spill it...how was he?\" Rachel's mind began to retrace the night, trying to go to the beginning and not just straight to the juicy bits. She observed the distorted, peach-colored arms and elbows rising up behind the glass door, pulling and manipulating the mass of bright blond hair under the water. Head back, the outline of her chin could be seen pointing upward, and the curve of her neck and long throat stood in profile. Damn, she thought to herself, even through the shower glass she's hot.",
        "\"Oh, you know, he's a charmer, what can I say? It was a great dinner, and ended up shutting the place down. Missed the show though, which sucks.\" Tracy's shampoo had a pleasant aroma, mixed in with the steam. \"Just um, hung out here afterward for a while.\" The hands and elbows lowered down and swept over her friend's pert, shadowy breasts. In contrast to her own full endowment, the lithe figure in the shower was thin, but well formed. Rachel crossed her legs, leaning back against the counter. She was sore, practically bruised from the night's activities, and this simple shift was enough to rub her swollen lips together slightly.\n\n\"Hello-o-o, earth to Rachel! That all? No way you're spaced out that bad from a good night's sleep. Now keep your pants on, and out with it.\" Rachel considered the many sarcastic responses she would normally have made, but just now, they all seemed a bit too...honest.\n\n\"Yeah, yeah... Okay, so it was awesome. I mean, talk about attention.\"\n\n\"Yeah? He seems built, like he could do some damage. Yum.\"\n\n\"Oh, yum is right, you have no idea.\" A slender leg stepped forward as the blurry hands scrubbed slowly down it. Back and forth. Up and down. Rachel described his oral skills, and the detail he had employed. She felt her mouth hanging open, slightly, and shook her head. The long thigh, the bent knee, the toned calves.\n\n\"He did things, Trace, damn. Chalk up some new experiences, for sure.\" The shadowy hands slid up the other faint leg, disappearing below her hip for a while.\n\n\"Things, huh...\" Tracy pressed, in a more distracted tone. \"Do tell.\" The outline let its head tilt back a bit, but the extended leg and lowered hands remained unchanged.\n\n\"Yeah, new things. And, uh...I liked them.\" The air was heavy with steam, soap, and freshly scrubbed skin. Rachel's breathing grew deeper as a strange, almost automatic behavior took over. \"Do you...do you mind if I get ready for my shower?\"\n\n\"Of course not. Go for it,\" came the near-instantaneous reply from behind the clouded glass, still showing an almost motionless silhouette. Rachel uncrossed her legs again, sighing, and untied her pajama pants. Grabbing the hem of her shirt, she lifted it up and over in one smooth motion. It dropped to the floor. No bra to remove, the sliding fabric and atmosphere of the close room made her nipples begin to stand on end. Fuck off, she thought, shaking her head again.\n\n\"Trace\u2014you remember telling me about your friend from high school? Um, Sarah? The one you said you tried the uh...licking...back there?\" She felt a little self conscious calling her friend out, and wasn't used to describing the lascivious acts that had just unfolded.\n\n\"Stephanie,\" breathed the shadowy figure, sighing lightly. The extended leg bent slightly, and the outline of a single hand moved up and grasped the shower door frame, as if for support. \"I...definitely remember telling you.\" Rachel's pants were on the floor, now. She hooked her thumbs in the waist of her panties, breathing harder. This was crazy. Truly insane. And yet perfectly natural and unsurprising. The other shadowy hand remained low, down below the angular hips.\n\n\"Well. Turns out that, um...I like it. A lot.\" Rachel stammered out her admission. She heard mainly silence, causing her a mild apprehension, broken only by a couple of sharp breaths from the glass door. Her hands continued the journey downward, peeling away the thin garment. Perhaps they were damp with humidity, but her nose knew better. In addition to her obvious arousal, some remaining drops of last night's deposit lingered.\n\n\"You do,\" Tracy confirmed. \"Well, that's\u2014sigh\u2014that's good, then. I hope it, uh...hope you can, uh...\" she trailed off, as she saw the door slowly open to a curvaceous, nude figure in the steam.\n\nRachel took a deep breath and took a step\u2014no, a leap\u2014inside.\n\nTHE END\n\n***\n\nDear Readers,\n\nThank you for coming along, I hope you enjoyed the night out...I certainly did. I'm a new author here, so please feel free to comment and/or contact me with your thoughts and suggestions.\n\nAdieu,\n\nJM"
    ],
    "authorname": "JMayes",
    "tags": [
        "couple",
        "romance",
        "anal",
        "bisexual",
        "first time",
        "roommate",
        "college"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/expanding-horizons-4"
}