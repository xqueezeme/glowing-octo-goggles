{
    "title": "A Ring Named Ezzie Pt. 08",
    "pages": [
        "This is chapter 8 of my Mind Control story. Ben & Karen continue to have sex with their parents. Just an FYI this chapter is heavy incest if its not your thing.\n\nI wake up again with Karen spooned next to me naked. I will never stop loving waking up like this. The sun is just up, it's still a tad early. It's September now so the sun rises a little later, and sets a little earlier. I get up and walk to the bathroom to pee. I crawl back into bed back behind Karen.\n\nWe never got to make love to each other at the end of the night like she wanted to. I reach between her thighs and start rubbing her pussy. In her sleep she moans and parts her legs slightly. I start trying to push into her. She isn't wet and it's not going as planned.\n\nI flip the covers off us and reach between her thighs to rub her pussy and clit. Karen moans and lifts her top thigh to give me better access.\n\nAfter a moment of me rubbing her I feel her getting wet. Karen reaches between her thighs for me to pull her into her. She squeezes my hardon in her hand gently as I start to slip into her pussy.\n\nKNOCK... KNOCK... KNOCK.... \"Karen, it's Mom are you up?\"\n\n\"One minute.\" Yells Karen, as we both dive under the covers. \"Come in.\"\n\n\"Hi Honey. I thought I heard you two moving around. Dad wants to take everyone to breakfast. You two need to get showered and dressed.\" Mrs B says.\n\n\"Um, ok Mom.\" Says Karen.\n\nMrs B closes the door. I flip my head back on the pillow and just sigh. \"Fuck! Why don't you shower first. I think I will need a cold shower.\" I moan.\n\nKaren giggles and kisses me just before crawling out of bed to take a shower. \"Ezzie did you enjoy last night?\"\n\n\"Oh yes Ben. It was almost never ending for Karen. The toy, her Father, Mother, Your Dad and then Your Mom, each one of them made her orgasm. It was the Most Intense thing I have ever experienced.\" Ezzie says.\n\n\"So she liked it. Having sex with our parents wasn't a problem for her?\"\n\n\"Oh no Ben. She was very excited about it. Having one person after another have sex with her and making her orgasm. The taboo of it being both Moms and Dads. She so wanted to end the night making love to you, but the minute she curled up beside you she just passed out. All throughout the night she would see you with the Moms and think it was so hot, and how she wanted it to be her you were having sex with. She wanted Everyone.\"\n\n\"Did you ever have to give anyone a nudge to do something for her?\"\n\n\"Just the Dads. As she was nearing an orgasm she wanted them to be harder. I made sure they were.\" Says Ezzie\n\n\"Thank you for looking out for her Ezzie.\" I say.\n\n\"No Thank You Ben for allowing me to. It was very nice for me too.\"\n\nI lay there and suddenly I am sad. I realize in 3 days I will be saying goodbye to Karen for 3 months. We will be a 3 hour drive apart. It's Labor Day and I won't see her until Thanksgiving. I can't do that. I don't care if it's 3 hours each way. I can't do that.\n\nI am trying to think of the logistics of seeing her, when she comes back from her shower. I get up and walk to her. I push her back into the wall and kiss her hard. She melts into my kiss and puts her arms around my neck.\n\nWe break the kiss and she looks at me. \"I am going to miss you too.\" She says as she rubs my cheek with her hand. I hug her to me and we just hold each other for the longest time.\n\nUntil Mr B is yelling from the hallway. \"Fifteen minutes people.\"\n\nI sigh and head to the bathroom for a quick shower. By the time I am done and we head out our parents are waiting semi-impatiently for us on the back deck. The parents go in Mr B's SUV and we follow in my car.\n\nMr B takes a left out of the driveway heading north instead of the right we have been taking. It takes a while longer, but we find another bigger town center. This has so much more. A restaurant, two bars, clothing stores, an ice cream shop, it's a real town square. We park in a big public parking lot and walk to the restaurant.\n\nI see off in the distance a billboard for a concert tonight for two old 80's bands touring together that I know our parents like.\n\nWe sit for breakfast and I look on my phone. There are still decent tickets so I order six. Once I get the e-tickets I show Karen.\n\nShe smiles. \"No Way!\"\n\n\"What did my son say to you Karen?\" My Mom asks thinking I am being a pig.\n\nKaren hands her the phone. My Mom gasps. \"Ben, you shouldn't have spent the money.\"\n\n\"Mom what good is money if I can't make my parents or girlfriend happy?\" I ask.\n\nMrs B looks over at the phone, and gives me a Mom look. \"Benjamin!\"\n\n\"Hey you two were included with the parents part a minute ago.\" I say.\n\nMy Mom turns to Mrs B. \"Jen, I think the 3 of us should get sexy dresses.\"\n\n\"Nancy, I know that look in your eye. That means tiny, and tight.\" She laughs.\n\nKaren's voice perks up. \"Wait, you said the 3 of us right?\"\n\nBreakfast is nice. On the way in, Mom saw a hand drawn town map. It had all the local businesses drawn in. On the back is a standard mall map with an ad for the local mall some 25 miles away. The women start looking at the map for somewhere to find a sexy dress.\n\nThey find two possibilities to go look at after breakfast. The men are quickly told we are not invited. After the plates are cleared my Dad starts looking at the map. Mr B & my Dad start talking. Once outside the restaurant the girls head one way and the boys another. Our first stop is an outdoor sportsman place. They start looking at fishing stuff which I have zero interest in.\n\nI just sort of look around, and I end up sitting in a display camping chair for about 20 minutes. They come back with an old fashion paper bag so many places are using now. We head out and go down the block to a big General Store.\n\nMr B asks a clerk something and the clerk points towards the back. My Dad and I follow him and there is a walk-in humidor. Of course! Mr B and his cigars. He and my Dad start looking around. I am dumbfounded. I have no idea what I am looking at. Mr B sees my confusion. He puts his arm around my shoulder. \"Ben, did you like the cigar I gave you when you and I talked in my backyard?\"\n\nMy Dad laughs. \"You mean when you ambushed him?\"\n\nMr B laughs. \"Yeah, I guess I did.\" He squeezes my shoulder. \"So did you like the cigar?\"\n\n\"To be honest I thought it was a little strong, and almost bitter.\" I say.\n\nHe looks around. \"Ok.\" He points out 3 boxes. \"Smell one from each box. Choose the one that smells best to you, and I will explain the difference after we smoke them.\" I choose one, and my Dad takes it. They keep looking. I step outside the humidor, and look around.\n\nThey have homemade fudge and a huge penny candy counter. I get 3 half pound boxes of each woman's favorite. Plain for Mrs B, walnut for Mom and marshmallow for Karen. For me I get a small lunch bag full of different penny candies and a soda. After getting the fudge, picking out all the candy, I am still sitting on a bench for about 10 minutes when they come out.\n\nMy Dad shakes his head when he sees me eating the candy. Mr B sees the fudge, and looks at my Dad. \"He is going to make us look bad. We have to get fudge for the wives.\"\n\n\"No you don't.\" I slide all three boxes out of the bag. \"A half of a pound of each of their favorites. Didn't you tell me to get them each a half of a pound.\"\n\nMy Dad sits on the bench beside me. He looks at me. \"You know you are a good man don't you Ben?\"\n\nI laugh it off. \"I have my moments.\"\n\nMy Dad just looks into eyes, and gives me a hug. \" Don't ever forget I Love You, and I am Proud of you.\"\n\n\"Thanks Dad. I Love You too.\" I say.\n\nWe get up and head down the block towards the clothing store the women went into. Before we get to the store they come out giggling. They each have a bag. Karen hugs me, and the Moms hug their husbands. Karen looks in my bag. \"Fudge! For me? Can I have some?\"\n\n\"Can I see what you got?\" I ask.\n\nShe reaches into the bag and pulls out a white thin cotton sundress. It looks like it's flat across her chest. It is going to show a lot of cleavage and top of her boobs. It has two straps over each shoulder that tie, and is short. \"What do you think? Our Moms got the same dress in lilac, and pink.\"\n\nI turn and look at my Mom in shock. I would have never in a million years thought she would wear something like this. \"What? A woman can't want to look sexy for her husband. I have worn plenty of little sexy dresses before, I just never let you see me in them. I had to keep that Mom image.\" She says.\n\nI look at my Dad. He has a big smile on his face and nods. I hold up my hands in surrender, and hand out the fudge. \"We knew you guys would love some fudge when we saw it.\"\n\nMy Mom looks at my Dad, and raises her eyebrows. She kisses me on the cheek. \"Thank you for thinking about your Mom, Honey.\"\n\nWe get back, and the Dads decide we should paint, well they want to get their painting done so they can go fishing. My Dad looks at me. \"You have a lot of chairs to paint. You better get on it.\"\n\nKaren takes me by the hand and starts walking me inside. \"He has to help me with something inside first.\" She says as we walk away. I see my Mom smiling at us in the reflection in the sliding door.\n\n\"Ezzie, what does Karen need help with?\" I ask.\n\n\"She is going to give you a blowjob, because you got interrupted this morning.\" Says Ezzie.\n\n\"Wait did Karen tell my Mom she was doing this? I could see Mom smiling at us in the slider.\" I ask Ezzie.\n\n\"No Karen didn't say a word. You Mom just figured she was taking you inside to have sex.\" Says Ezzie.\n\nFor a split second I am concerned she knows, and then I remember last night. Who cares if she knows.\n\nKaren takes me to our room, and then turns and locks the door. She walks up to me and holds my hips as she rubs her hips against me. She pulls my lips to hers and gives me a soft passionate kiss. She pushes me back so I sit on the bed.\n\nShe straddles one thigh and starts humping against me as she slowly peels her shirt off. She drops her bra and pulls my head to her chest. She softly sighs as I suck her nipples into my mouth.\n\nKaren is definitely taking charge. This is something different. She finally steps away from me and pushes her shorts off. She pulls me up and crouches down, and pulls my shorts off. I pull off my shirt and sit back on the bed. \"No Ben, lay back in the middle of the bed.\" She crawls between my legs.\n\nShe starts by planting soft kisses everywhere but my hardon. She softly holds me in her hand and pushes my hardon against my stomach. She leans further in and starts kissing like she is trying to make little hickies on my balls. I moan with each kiss. This is something new. I kind of like it. She smiles and looks up at me. \"So you like that?\"\n\n\"Yes, I do.\" I say.\n\n\"I would try sucking them, but I don't want a mouthful of hair.\" She says.\n\n\"Got it. Shave.\" I say.\n\nShe giggles and sucks the tip of my dick into her mouth. She runs her tongue around and around, and then flicks it under the tip. Fuck I love the way she does that.\n\nShe gives her jaw a break and strokes me slowly. She takes her hand away, licks it, getting it nice and wet while she stares at me watching her. She reaches down and slowly strokes me, twisting a little as she goes. \"Do you know how much I love doing this for you? Feeling your pulse in my hand and mouth. Watching the pleasure on your face. Knowing I am doing it to you. Knowing that I am giving the man I love that much pleasure, and finally feeling you explode in my mouth.\" Karen says.\n\nI just moan. \"It can't be better than how good it feels to me.\"\n\n\"Then by all means let me continue.\" She leans back down and bobs up and down until she has all of me in her mouth and throat. I just groan in pleasure. She alternates stroking, sucking and licking so gently and lovingly. I lay there for what seems like forever enjoying it. Lick by lick, suck and kiss by suck and kiss she brings me closer and closer.\n\nI can no longer stand it. I just call her name. \"Karen.\" She pulls back so she has just the tip in her mouth and flicks her tongue back and forth. Until I explode in her mouth. She lets out a satisfied moan as I cum in her mouth, and pulls off me with a wet pop. She looks at me and smiles as she swallows, and then leans back down to lick and suck me clean. I shiver and groan as she does.\n\nKaren lays down on my chest. \"You have to go paint.\" She says.\n\n\"I never want to get up from here with you.\" I say.\n\n\"God, I can't wait for the day to come when that's exactly what we can do if we want to.\" She taps my chest. \"For now our Dads will have a fit if you don't get it done. It's going to take you all afternoon.\"\n\nI smile. \"No it won't. I bought two huge drop clothes and a spray gun. Work smarter not harder.\"\n\nKaren laughs. \"And you didn't tell them.\"\n\n\"Oops, it slipped my mind.\" I say.\n\nShe can't stop laughing. \"Let's get dressed. I have to see this.\"\n\nWe walk outside and I go to my trunk to get the drop clothes. I lay them out and carry the chairs closer to the house for the electricity. They don't understand why I am wasting the energy carrying them all. I should just paint them there. I just smile. Around the side of the house, out of site. I fill and set up the sprayer. At this point the Dads have a little less than half of the table done.\n\nI turn the corner and start spraying. As I stand there spraying the first chair I hear my Dad. \"Son of a BITCH!\" I then hear the three women start laughing. I turn around about 5 minutes later after the first chair is done.\n\nI hold up the gun. \"Like you say Mr B, work smarter not harder.\"\n\nMr B turns to my Dad. \"I really hate your son right now.\"\n\n\"So do I.\" My Dad says laughing.\n\nI finish the first coat. The extension cord is just long enough to reach the table. My Dad doesn't care about painted grass. \"It will grow out and be cut.\" He finishes the table in minutes.\n\nThey head for the boat. I wait an hour and go to the chairs and flip them. Paint all the bottom pieces I missed. I roll the table on its side and give it's underside a good spray. Another hour, flip everything back, and let it dry.\n\nAfter I clean up I go to sit on the deck and pop a beer. When I do, the women noticeably stop talking. \"Ezzie, what the hell were they talking about?\"\n\n\"They are talking about last night, and comparing how they feel after they had some pot gummy bears. What is that?\" Ezzie asks.\n\n\"WHAT!\" I scream in my head.\n\nI look around and see a small paper bag with the word \"Buds\" on it and a marijuana leaf on it next to my Mom. \"Really?\" I say as I stare at the bag.\n\nKaren giggles. \"Busted.\" They all break out giggling.\n\nI shake my head and sigh with a smile. \"Seriously guys. Pot Candy!\"\n\nMy Mom smiles. \"Last time your Dad and I saw this band. We were so high. I saw the shop and stopped in. It's just a little Candy to relive our younger days.\"\n\nKaren gets up quick and sways. \"Oh head rush.\" She giggles. She sits on my lap and starts nibbling on my ear. \"It's making me frisky.\" She says in an Irish whisper.\n\nMrs B giggles \"Me too.\"\n\n\"Me three.\" says Mom. \"Girls there is one man and three of us. What should we do?\"\n\n\"What, I have to share?\" Says Karen whining a little.\n\nMrs B perks up. \"Last night you had Both Dad's to yourself! Yes young lady I think you can share.\"\n\nI smile and raise my eyebrows. \"I've never had three women at once.\"\n\nKaren looks at me and gives me a lusty smile. \"You love the idea of it don't you?\"\n\nMy Mom is feeling loose. \"Wait so you get three different women, and we all get \u2153 of a fuck.\"\n\n\"Ezzie, has Mom had sex with more than one guy at the same time?\" I ask.\n\n\"She has had a man in her mouth and one fucking her.\" Says Ezzie.\n\n\"Ezzie, let's have fun tonight. Unless it really hurts, and uncomfortable doesn't count. Any of the women will do whatever's asked of them tonight. All three of them want to please the men from now until the sun rises.\" I say, and then think I am going to hell.\n\n\"Done Ben.\"\n\nI smile at Karen. \"Let's not forget someone agreed to a No Saying No Day today.\"\n\nKaren smiles. \"I was hoping you forgot.\"\n\n\"Never!\" I look out at the empty dock. \"Ok Mom. A \u2153 of a fuck now, and 3/3 of a fuck later. All three guys will fuck all three of you at the same time. One by one all three guys on one woman.\"\n\nMrs B and Karen look a little shocked. \"Who goes where?\" Asks my Mom.\n\n\"Ladies choice.\" I say with a smile.\n\n\"You're on!\" Says my Mom.\n\nKaren looks me in the eye. \"Three?\"\n\n\"You've done the hard part before, this is just another guy in your mouth.\" I say as I push some hair out of her face. We just look at each other.\n\nMrs B realizes what I just said. \"Wait a moment. Karen you have had sex with two men at the same time?\"\n\nKaren blushes and hides her face in my neck. The Moms giggle. Mom says. \"I guess our kids really do take after us.\"\n\n\"I wish the men were here. We all want to get fucked.\" Says Mrs B.\n\nI smile. \"Why don't you all strip naked and pose together. We will send them the picture. I bet they will like it, and they will come running back.\"\n\nThey all giggle and strip. I arrange them with their backs to the camera. Bent over a bit, holding their ass cheeks open. Their heads turned back, licking their lips. I take a few. The last one is perfect. I caption it All 9 Holes Open for Play Now!\n\nMy Dad texts back within a minute. We are on our way. I turn to the women. Why don't the three of you get on your knees and you can take turns blowing me. When the Dads get here, each guy can take a woman and fuck her.\n\n\"Just like that, we do as the men say?\" Mrs B asks with a smile.\n\nI walk over to her and push her over to the wall of the house. I gently pin her to the house with my hand on her neck and I kiss her. I break the kiss. \"Your daughter has to, she already promised me a No Saying No Day. I think you want to, but you need a little encouragement. I think it would please all the guys if you joined your daughter in solidarity.\"\n\nMrs B sighs and looks at the women. \"Looks like we are doing whatever the men want tonight.\"\n\nMom giggles. \"Now instead of just my Husband Domming me my son will be too.\"\n\nI stare at my Mom. \"You and Dad do Dom/Sub stuff.\"\n\n\"Let's just say we had a lot of fun when you kids were away at school.\" Says Mom.\n\nMrs B laughs. \"We sure did.\"\n\nI get an evil thought. \"Subs need to be spanked to be reminded of their place. Karen go get the paddle since I don't have to worry about our parents seeing any spank marks.\" I say.\n\nAll three women's eyes go wide. Mrs B speaks softly. \"I have never been spanked before.\"\n\n\"Then it will please me to be your first. Karen go get the entire bag.\" I tell her.\n\nShe moves and mumbles. \"Oh shit.\"\n\nI start thinking about the butt plugs. I have the medium, large and the large vibrating plug. I will have to talk to the Dads to see who gets which one.\n\nI point the Moms to the railing for the deck. \"Bend over it.\" I tell them. I walk around in front of them to make sure their boobs hang down past the railing. Karen comes out. I point to the railing. She doesn't question it. She puts the toy bag on the table and joins the Moms. I have to pull Karen forward by her nipples. She wasn't forward enough. She moans and nudges her body forward.\n\nAs I walk back behind them I grab the paddle from the bag, and test the sting on my hand as I hit my palm.\n\nJust then I see the Dads pull up and they have huge smiles. I start to walk down to meet them. I tell the women. \"No one moves.\" I walk to the dock and meet them halfway, and catch them up. Horny, high, want to fuck and being a little sassy.\n\nMy Dad gets an evil smile. \"Oh really! Gentlemen, I think we need to teach these women a lesson.\" We fall in behind Dad. He stands in front of the women. \"I hear you were giving Ben a hard time.\"\n\nMy Mom gets smart. \"Actually Scott, we were hoping he would be giving us a hard time.\"",
        "My Dad grabs each of her nipples hard and pulls. Mom gasps and moans. He keeps a hold of her nipples, pulling down. \"You think now is the time for wise ass answers Missy?\"\n\n\"No Sir.\" My Mom gasps.\n\nMy Dad lets go of Mom's nipples and barks. \"Ladies eyes on me.\" He looks closely at each of their eyes. \"Ladies go in the house and get your man a drink. Bring it and the cigars we bought back out here.\"\n\nAs the women walk in the house all three naked asses are swaying. \"Are you boys ready to play a game with the girls?\" My Dad asks. Mr B and I both smile and nod. \"Whatever they bring out, find something wrong and give her 5 spankings for it. Then send her back to correct it.\"\n\nMr B speaks up. \"Scott, I have never spanked Jen.\"\n\n\"Bob, you aren't beating her. At worst make it sting. It's a little humiliation and power game. Give me your arm.\" Dad smacks Mr B's arm. \"No more than that. Hit your own arm to get the feel.\"\n\n\"We will then have them sit in our laps while we smoke and talk. Just talk amongst the three of us. We will play with their nipples and pussies like you were petting a dog in your lap.\"\n\nDad looks around and sees the candy. He picks up the bag and hands each guy one. \"When I looked into their eyes they were happy, not buzzed. They each get a reward when they are sitting in our laps. I know Nancy used to be crazy horny when high.\"\n\nMr B points to the new chairs. \"Is the paint dry?\"\n\n\"It should be.\" I say.\n\n\"Good, let's sit on the lawn and look at the lake with a naked woman on our lap.\" Says Mr B.\n\nWe all grab a chair and put them in a half circle and sit down. Karen is the first to arrive. She hands me one beer. There is my chance. I take the one beer and put it down. \"When was the last time you saw me drink one beer? Never mind.\" I push myself forward in the seat.\n\nI take her hand and pull her over my lap. I can see fear, lust and nervousness on Karen's face. I use my bare hand and rub her ass cheeks. \"I think five spankings should teach you not to make the same mistake again.\"\n\nKaren smiles at me. \"Yes sir.\"\n\nI pull my hand away from the cheek I was rubbing and slap up and across from the bottom of the curve of her ass cheek. She yelps in surprise. I feel I was a little soft. I repeat the hit on the other side, but a little harder. Karen hisses a bit. I rub her cheeks that have just the slightest pink color where I spanked her.\n\n\"I don't hear you counting.\" I say\n\nShe is quick to say \"Two.\"\n\nI slap down flat on the top of her bum on one cheek and then the other in quick succession.\n\nShe calls out the count for each one with a hiss. \"Threeee. Fouuurrrrr.\"\n\nI again rub her cheeks. The Moms have arrived, and are just watching after giving their husbands their drinks. I go back to the bottom of her butt cheek and up, and again a little harder.\n\nKaren's hiss is very pronounced but she says \"Five.\" With some relief. I see her body relax across my lap. I hadn't noticed she had tensed up. I smack her other cheek just a tick harder. She actually yelps. \"Oowwww. Why?\" She asks as she looks back at me.\n\nI raise my eyebrows as if to say. \"Well\".\n\n\"Six\". She counts out.\n\nI now rub her cheeks softly. \"Good girl. You had to count out the five. You missed counting out the first one so I gave you an opportunity to correct that mistake.\"\n\nShe turns her head and gives me a big smile. \"Thank you sir.\"\n\nGod I love this girl. I hold my arm out for her to cuddle against me. As she gets up. She spins in my lap and snuggles against me. I reach down and rub her bum.\n\nMr B looks at Mrs B. \"Where is my cigar cutter? How am I supposed to cut the cigar?\"\n\nMy Dad looks at my Mom. \"There is no lighter here. How am I supposed to light the cigar? Bob, what do you think, five spankings each?\"\n\nMom has a smirk on her face. I think Dad has spanked her before, and I think she likes it. Mrs B on the other hand looks more nervous and scared then Karen did. Dad and Mr B move forward in their seats. Mom doesn't blink. She lays across my Dad's lap.\n\nMrs B just stares at Mr B. With Mom now across his lap Dad speaks up. \"Jen lay across your husband's lap or Ben and I will come hold you down on his lap.\"\n\nMrs B's face shows a little resignation and she lays across Mr B's lap. Mr B goes one soft hit after another. They are barely spankings. He then reaches down and rubs his wife's ass cheeks.\n\n\"Nancy, do you remember the last time I spanked you?\" Dad asks Mom.\n\n\"Yes sir.\" Mom answers\n\n\"And what did I tell you?\"\n\n\"If I acted up and needed to be spanked again I would regret it.\" Mom looks nervous and excited.\n\n\"Ezzie, is Mom into this?\" I ask.\n\n\"She and your Dad had a lot of fun when he spanked her and tied her to the coffee table, but she is concerned this time it might really hurt.\" Says Ezzie.\n\n\"The coffee table?\" I ask in my head. I then see an image of my Mom on her knees. Her thighs tied to the table legs, and her wrists tied together with another rope to the other table legs.\n\nThe image is broken as Mom yelps out. \"One. Two.\" The next two sound harder. \"THREE. FOUR.\" The final one is harder still. \"FIVVVEE. MARY JANE. MARY JANE!\"\n\nDad pulls her up to him. \"Ssshhh. It's all over. No need for a safe word. Now we know how hard, is too hard, but you liked it.\" Dad says as he flicks Mom's hard nipples with his finger.\n\nHe taps her thighs. \"Now all three of you go fix your mistakes.\"\n\nNone of them question him. They get up and almost in unison say. \"Yes Sir.\"\n\nMr B looks at my Dad. \"You two have done that before?\"\n\nDad smiles. \"Yeah. I told her last time, next time we would find out where her limit is. We found it.\" Dad says with a laugh. \"You went easy on Jen.\"\n\n\"Yeah we have never done it. I knew she was nervous.\" Mr B says.\n\nJust then they all come back. It's cool watching them all walking naked without a care. Karen hands me another beer, and I hold my arm out. She is more than happy to cuddle with me. I look and the Moms are cuddling with the Dads.\n\nMy Dad pulls out a piece of the candy. \"I think the girls deserve a reward. My Mom and Mrs B are quick to take it. Karen looks at the piece I am holding. I can see she is thinking about it. We have never really done this before. I wrap my arm a little snugger around her. \"I am right here. Our Dads are here. No one will let anything happen to you.\"\n\nShe smiles at me. \"Don't let me make an ass out of myself.\"\n\nI smile. \"You want me to fuck your ass later.\"\n\nShe pops the candy in her mouth. \"You are a big jerk sometimes, but I love you.\"\n\nI watch her for a minute and wait for her to swallow and then I kiss her hard. She just moans into the kiss. As I kiss her I start pinching and tugging on her nipples. I break the kiss and Karen's head just rolls back with a moan. As I squeeze her nipples a little harder.\n\nAfter a moment of rolling her nipples between my fingers and listening to her moan. I pull her further up against me, and I reach for her pussy. She instantly spreads her legs, flashing our parents.\n\nI run my fingers through her lips and she is definitely excited. I look up Mrs B's eyes are closed and her mouth open as Mr B rubs her clit. Mom's head is against Dad's shoulder. She is staring at Karen and I as Dad just rubs her pussy.\n\nI pull my fingers away from her pussy. I lick one finger clean in my mouth. As I press my other wet finger with Karen's juices into her mouth my Mom smiles. Karen sucks on my finger. \"God your pussy tastes delicious, don't you think?\"\n\nWith my finger still in her mouth all I get for an answer is an. \"MmmmHhhmm.\"\n\nI pull my finger out of her mouth and kiss her. I then remember what Dad said. I hold her head to me and stroke her hair. \"Mr B lets light up those cigars.\" I say.\n\nThe Dads stop teasing the women. \"Good idea, Ben. He hands me the cutter and lighter.\n\nI put the cigar in my mouth and hand Karen the lighter. \"Light me up Honey.\" She looks at me and smiles and lights me up. I puff it a little, and smile. \"Good job.\"\n\nI see my Dad pat my Mom on the ass. As she gets up my Dad says. \"Karen, why don't you come light me next.\"\n\nThe moment Karen is off my lap my Mom is on it. She wiggles against me as she feels my hardon under her. She kisses and nibbles my ear and neck. \"My baby boy is all grown up.\"\n\nI just groan with the chill she gives me. I watch as my Dad is rubbing Karen's bum as she lights his cigar. He says something softly to her. She looks over at me and then nods yes to my Dad.\n\n\"Ezzie what did my Dad just say to Karen?\"\n\n\"He asked her if she wanted to light her Father's cigar.\" Says Ezzie.\n\nMy Dad pats Karen's ass. \"Go light your Dad's cigar. Jen, come sit in my lap.\"\n\nMy Dad is being the dirty Ringmaster. Karen looks at me. I smile and nod, as she watches me reach down and rub my Mom's pussy. I watch as Karen lights up Mr B's cigar and he hugs her. His hand wanders down her body, and she just opens her legs. I can see the lust in her eyes as she looks at me. I realize all three women are getting rubbed.\n\nI try to recover. \"So Mr B what is different about this cigar?\" As we talk about cigars I keep rubbing my Mom. If I feel her get too excited I stop playing with her clit and rub just her lips. She moans in frustration.\n\nFinally in frustration Karen says a little loud. \"Daddy, please!\"\n\nMrs B speaks up. \"I agree Baby. Please Scott, stop teasing me.\"\n\nMy Mom looks at me, and then at everyone. \"I will do anything if someone would just fuck me.\"\n\nI pat Mom's ass. \"You already agreed to each woman taking all three guys at one time...\".\n\nI don't get a chance to finish. Dad coughs on the cigar smoke, and Mr B says \"What?\"\n\n\"You guys came back too early. I was going to fuck each of the women. In fact Mom, I had only promised you a third of a fuck.\" I say.\n\nKaren looks over at me. \"I know that look. What do you want for each man to fuck the woman in his lap right now?\"\n\nI smile. \"Each woman wears a butt plug to the concert. It will get you all ready for the after party.\"\n\nI see Mom and Karen look at each other and agree. My Mom looks over to Mrs B. \"Jen?\"\n\n\"God, I am so horny and high. I don't think I can say no, but a butt plug for the entire concert.\" Says Mrs B.\n\nMr B's voice gets a little firm. \"Jennifer, look at me.\" Mrs B looks at her husband. \"Do you want to take all three guys at once?\" Mrs B nods her head again. \"Jen, I want to hear you say it. You want a man in your mouth, pussy and ass at the same time.\"\n\nMrs B stares at her husband with lust in her eyes. \"I want you in my ass, and a man in my mouth and my pussy at the same time.\"\n\n\"Then you should have a butt plug to stretch your ass open for me to fuck it.\" He says.\n\nMrs B smiles. \"Yes dear.\"\n\n\"Good, it's settled then. When we are done with our cigars we will fuck our women.\" He slaps Karen's ass. Karen jumps and yelps. \"Alright little girl, time for you to get up. I want my wife back.\" Says Mr B.\n\nKaren smiles at her Mom, and turns back to her Dad. \"Yes Daddy.\"\n\nThe women all swap places. I have Karen back in my arms. I can see the love and lust in her eyes. \"Hi Babe.\" Karen says.\n\n\"Hi.\" I say as I pull her lips to mine and kiss her.\n\nMrs B moans as she sits on her husband's lap. \"We have to wait?\"\n\nMy Dad hugs my Mom to him, and shifts her body a bit. He reaches down and rubs her, slipping two fingers in her pussy. \"You have to wait to get fucked, but not to cum.\"\n\nMr B, slips his fingers deep into Mrs B and I can hear her moan. I push two fingers into Karen and she gasps, and humps her hips. My dick twitches as she does. Her head is on my shoulder with her face turned into my neck. She is kissing my neck as she moans. Her kisses and heavy breathing are giving me goosebumps. She starts humping her hips faster as I finger her. I am looking down at her naked body sprawled out on me. Her chest is rising and falling as her breathing gets faster. Her nipples are swollen hard cones. Her pussy is Soaked. My fingers are Soaked, and very loud wet squishing sounds are coming from her pussy as I finger her.\n\nKaren reaches down and starts rubbing her clit. \"God don't stop. I am going to cum.\" Just seconds after that her pussy starts gripping my fingers. She moans very loudly in my ear. \"Fuck Yes. FUCK!!\" Her hips stop humping, but shiver here and there as I wiggle my fingers inside her pussy.\n\nI look over and my Dad and Mr B. They already have the Moms off their laps. Mr B looks around, and points to the soft grass behind the chairs. He drops the last bit of cigar on the ground and grinds it under his heel. \"Ladies lay down on the grass. We owe you a good fucking.\"\n\nKaren is slow to get up. I give her ass a good swat. She yelps and jumps. She turns and looks at me. \"You heard the man. On the grass.\" I say. She rubs her ass, but smiles and moves to the grass.\n\nMy Dad and I put out our cigars and pull off our clothes. I look down and left to right is Mom, Karen & Mrs B. They are at a bit of an angle to Karen so their heads are near each other. Their legs are spread, with their knees bent and their feet on the ground.\n\nMr B is the first one in position. Mrs B reaches between them and takes his dick in her hand. I watch her face as she guides his dick into her. Her mouth opens, she lets out a small gasp and sigh, and her eyes roll up about halfway.\n\nI crawl over Karen. She wraps her arms around my neck, and her legs around my waist. \"Ben, I am so horny right now. I don't want to have sex. I want you to take me and make me scream.\"\n\nMrs B just gasps. \"Oh my.\"\n\nI smile and look Karen in the eyes. \"Are you sure?\"\n\nKaren pulls me down to her and kisses me Hard. She breaks the kiss and pushes me back. \"Take me now!\" She reaches down and points me in the right direction. I shove myself into her and she gasps as I shove in. \"Take me Ben. Make me yours!\"\n\nI hear Mrs B say. \"Oh wow.\"\n\nI just start fucking her hard. She is gasping with every shove in that turns into a grunt as my hard fucking gets really hard. The unmistakable wet slapping of skin, and Karen grunting and gasping is all I hear. We have been at it for a couple of minutes when her legs slip from around me. It catches me off guard and I slip out. Karen is partially rolled towards her Mom. I straddle one leg, and hold the other one to my chest as I push back in.\n\nKaren grunts loudly as I go right back to full speed. I am going as hard and fast as I can. Karen and I are just staring at each other. Her face is one of pleasure and pain. I am fucking her so hard not only is the skin on her thighs, stomach and tits shaking with each shove in, but her head and even her hair is bouncing as I go.\n\nMrs B sounds concerned. \"Karen, are you ok.\"\n\nI have to slow down for a minute. I just can't keep the top ramming speed going forever. Karen takes the moment to answer her Mom. \"Fuck, yes. I love it.\"\n\n\"Karen I am awfully worked up. I am not lasting long.\" I warn her.\n\n\"Fuck me Baby. Fuck me hard. Fill me with your cum.\" Karen says as she reaches for her clit. That's it. This is the final stretch. I grab her thigh to me a little tighter and fuck her for all I am worth. Her hot, tight pussy is just too much. Karen screams as her orgasm hits, and I can't keep it in. For a split second it feels like a giant cramp. I shove into her one last time and groan, as I feel like my balls exploded inside of her, as her pussy squeezes the cum out of me. I hold onto her leg for balance, but eventually I fall forward onto the grass between my Mom and Karen. I instinctively reach out for Karen and spoon behind her as we both catch our breath. I can feel her shiver in my arms as I hold her. I just hold her closer.\n\nAfter a moment I look up and both of our parents are just staring at us. Mrs B speaks up. \"I can't believe what I just watched. I can't believe you survived that Karen.\"\n\nKaren smiles. \"I love when Ben does that to me. No other guy has ever come close to making me feel like I do when he does that.\"\n\nI hear my Dad behind us. \"I feel like. Just watched a porno. I wish I had half that energy.\"\n\nMy Mom laughs. \"No thank you. You do fine just on your own. That would break me forever I think.\"\n\nI feel Karen giggle at my Mom. I look up at the darkening sky. At some point the sun had set on us. Mr B speaks up. \"Ladies go get washed up, and put on your new dresses.\"\n\nMy Dad speaks up, \"No underwear. Just the dress.\"\n\nMy Mom turns back. \"Really Scott?\"\n\n\"Yup. Number one, as my son said it's a No Saying No Day. Number Two I Love when you go commando, and lastly, No One knows us here.\" He smiles at them. \"Do the men have to spank their women for disobeying?\"\n\nMom answers. \"Nope we are good. Commando it is right Jen?\" My Mom says as they walk Karen in the house. Mrs B just shakes her head.\n\nMy Dad starts picking up clothes. Keeping his and tossing Mr B his and me mine. I notice their knees are covered in dirt and grass. I look and mine are worse. I look at the ground. I rubbed the grass out where my knees were. I realize I was so focused on Karen I never really noticed the Moms and Dads fucking.\n\n\"Ezzie the parents did have sex right?\" I ask.\n\n\"Yes but they finished much quicker than you did. They watched you and Karen.\" Says Ezzie.\n\nDad puts his hand on my shoulder interrupting my thoughts. \"Ah, to be young again.\" He says with a chuckle.\n\nWe walk into the house and Karen is sprawled out naked on the couch. The Moms are in the showers. I sit with Karen as the Dads head for their bedrooms. Her eyes open and it takes a moment for her to focus on me. I laugh, she is high. \"Karen, are you ok?\"\n\nShe reaches out and rubs my arm. As she smiles at me. \"Ok? Are you kidding me. That was the most intense orgasm I have Ever had! I mean I literally saw stars and colors as I orgasmed, and it just kept going. Little shivers ran through me forever.\"\n\nI smile down at her. \"I felt you shivering. I thought you were cold.\" I say with a laugh.\n\nShe looks up at me. \"I think I am high.\"\n\nNow I really laugh. \"Honey, you are high.\" I shuffle us around so I am sitting and she is in my arms on my lap. \"Are you up to a little dinner and the concert?\"\n\nHer eyes go wide and she has a serious look on her face. \"I am starved.\" I laugh again. She laughs with me, and slaps my chest. \"Don't laugh at me!\" I hold her to me and she sighs as she relaxes against me. We just sit there for a few minutes until I hear my Dad yell a bathroom is open.\n\nIt takes some effort, but I stand up with Karen in my arms. I walk us into the bathroom and put her on the floor in front of the shower. She takes my hand and pulls me in behind her. I turn on the shower nice and hot and she just leans against me letting the water spray on her face and shoulders.\n\nI grab the loofah and the only soap is Old Spice. I laugh. Karen is going to smell like me and my Dad. Wait, ok not my Dad. Get that out of my head. That's the last thing I need in my head. As I soap up her bum she turns around to me. \"Mmm I love the way you smell after a shower.\" She says with her eyes closed and her head against me. I soap up her front and go to spin her around. \"No wait.\" She reaches her hand down and pushes two fingers up into her pussy. She pulls them out, and licks them clean, staring up into my eyes. \"Ok. Now I am all clean.\"\n\nI turn her around to rinse, and scrub myself down quick. I step in front of her and start to rinse off when I feel her fingers running back and forth between my balls and my ass. She feels my dick twitch. \"Oh, someone likes this.\" She says as she rubs me some more.\n\nI turn to her. \"Karen, our parents are waiting.\"\n\nShe looks down at my hardon. \"Little Ben doesn't care. He looks ready.\"\n\nI laugh. \"Little Ben?\"\n\nShe gives me a squeeze. \"I LOVE Little Ben. Especially when he is inside me.\"\n\n\"Ok enough.\" I say as I shut off the water, and pull the curtain. Just as my Mom is opening the door. She is dressed in her new dress. It looks great on her. Lots of cleavage and the tops of her boobs are visible, and it's just long enough to not be too short. Sexy as hell, but not slutty. I can't wait to see Karen in hers.",
        "\"Yeah, I thought so.\" Mom says as she looks at Karen's hand holding my dick. \"None of that until later.\"\n\nKaren points my hardon towards Mom. \"I know how to share.\" She says.\n\nMy Mom stares for a moment, and then puts on a Mom voice. \"Young lady out of that shower Now.\"\n\nKaren gives Mom a raspberry and steps out. Mom continues to stare for a moment, and then walks away leaving the door wide open.\n\nI smile. \"Ezzie was Mom thinking about sharing?\"\n\n\"Yes Ben she is seeing herself giving you a blowjob, and imagining spanking Karen.\" Says Ezzie.\n\n\"Very interesting.\" Thank you Ezzie.\n\nWe dry off and walk into our bedroom. Karen simply grabs her dress, slips it over her naked body, and starts brushing her hair.\n\nWe head out to the livingroom where the parents are waiting. They hussle us out to the SUV. I am in the back with a Mom on either side and Karen in my lap. There are worse spots to be in. We are on the road for about 15 minutes when I realize we forgot the butt plugs.\n\n\"Your Dad got them out of the bag and some lube. He has them up front in a shopping bag. He also grabbed a little more candy for later just in case the women want a little more later.\" Ezzie tells me.\n\nWay to go Dad. We go to a local restaurant. The food isn't bad. The Dads limit the girls to one drink. They don't want to mix the booze with the pot.\n\nWe walk out of the restaurant and the parking lot is dark. My Dad speaks up. \"Ok all women to the driver's side of the car. It's time for the butt plugs.\"\n\nMy Mom moans. \"Damn I thought you forgot.\"\n\nThey are walking in front of us. I see Dad reach his hand down and under Mom's dress to goose her ass. \"No way I was forgetting this.\" Dad nudges Mom forward towards Mrs B, and falls back towards me and Karen. He takes Karen's hand. \"Go join the Moms.\" As she walks towards them. He lowers his voice. \"I got the toys out of your bag. I was thinking the smaller one for Mrs B, that would leave the two bigger ones for Mom & Karen. Can Karen take the bigger one?\"\n\n\"Oh yeah.\" I say with a smile.\n\n\"Can I use the vibrating one on Mom, or is that Karen's favorite?\" He asks.\n\n\"It's all yours Dad.\" I say.\n\nDad walks up and takes charge. \"Jen, you need to get in the car first...\"\n\nMr B pulls out the medium plug, and turns Mrs B towards the back door. He puts his hand on the small of her back, and she bends over the back seat. She looks over her shoulder at my Mom with a smile. \"This is your fault, you know.\"\n\nMy Mom puts her arm around Karen like she is telling her a secret. \"She always blames me, but never says No.\"\n\nMrs B shakes her head and smiles. \"Shut up you.\" She says to my Mom. She turns and looks at her husband as he pulls up her dress, and starts to push a finger shiny with lube in her ass. Mrs B lets out a small moan. \"And you go slow.\"\n\nMr B gives her a loving smile. \"Always Dear.\" He rubs his finger in and out a few times, pulls it out and takes the lubed plug and pushes a third of it in.\n\n\"Oh God.\" Mrs B moans. Mr B just fucks it in and out. Pushing it in a little more each time. Mrs B is moaning the entire time until she lets out a groan as if she got punched in the gut, as her ass finally swallows the plug.\n\nMr B takes a paper towel and rubs the excess lube off her bum, and then pulls her up and kisses her. He slaps her bum. She looks up at him. \"Do you know how lucky you are?\" She asks.\n\n\"To be married to my beautiful, loving and sexy wife? You bet I do.\" He says with a smile as she gets in the backseat.\n\nI pat Karen's ass. Your next. She kisses me and bends over the seat and looks at her Mom. She looks over her shoulder and sees the large one. She rolls her eyes. I lube her bum with my finger. I pull my finger out and lube up the plug. I drizzle a little lube on her asshole and push it in. It's about half way when I get some resistance. I start the in and out. I see Karen grab her Mom's hand. \"Just rip off the band aid Ben, and push it iiinnnnnn. Oh FUCK!\"\n\nI knew what she was asking for. I did it quick so she wouldn't have time to tense up. \"Fuck that's wide.\" She moans. I wipe her ass like Mr B did and hug her to me. She looks up at me. \"Some day I am going to play with your ass.\"\n\nI smile at her. \"You Kinky Girl.\"\n\nShe slaps my ass, and I get in the car so she can get on my lap. My Mom steps up, bends over, flips up her dress and wiggles her ass at my Dad. He slips a finger in her and she just smiles. He pulls it out and pushes in the plug. It goes most of the way in before my Dad has to push. My Mom grunts just a bit as she swallows it.\n\nJen says with surprise in her voice. \"I just don't know how you do that so easily Nancy.\"\n\nMy Mom smiles. \"Practice makes perfect.\"\n\nDad wipes her bum and she gets in. Dad gives her a kiss and closes the door. We head to the concert. As we pull out onto the road my Mom yelps out. \"Oh Shit.\" She glares at my Dad. \"Are you kidding me? When did you get this?\"\n\nHe laughs. \"Ask your son.\"\n\nShe looks at me. \"Ben?\"\n\nKaren giggles. \"I figured you would have given me that one.\"\n\nMy Mom's eyes go wide and she flinches. \"Oh wow. That's kind of nice.\"\n\nKaren holds my Mom's hand. \"It kind of nice, sometimes a little too much and evil because you have no control of it.\"\n\nMrs B speaks up. \"Bob, what are you doing to your poor wife?\"\n\nHe holds up the remote. \"Putting her on high.\"\n\n\"Oh Shit!\" Mom yelps again. I look down and Mom's nipples are like bullets.\n\n\"And now she is off.\"\n\n\"Nnoooo.\" Says Mom.\n\nDad turns and gives my Mom what can only be called an evil smile. \"I am going to tease the shit out of you all night with this.\"\n\n\"Oh I hate you.\" She says with a smile.\n\n\"Maybe.\" He laughs. \"But I think you love One, Two, & Three.\" He says as he clicks the remote so she can feel the three speeds. Mom just moans as it shuts back off.\n\nWe get to our seats and Dad turns Mom on. He leaves her there for a bit and then shuts her off. She just moans in disappointment. We spend most of the concert standing. The guys wind up behind each woman. I notice I am not the only one feeling her up. I see Mr B on one side with Mrs B boobs in his hands through her dress. My Dad has his hand rubbing My Moms pussy.\n\nThe song ends, and another starts. Karen taps her Mom to the left and mine to the right. She spins her fingers in the air and the women swap places. Karen goes to her Dad, Mom comes to me and Mrs B shuffles over to Dad.\n\nI tap Dad, and click my fingers like I had a remote. He smiles and hands it to me. My Mom takes my hands and pulls them to her boobs. I hold the remote in front of her and click it. I feel the buzzing against me. She reaches out and clicks it again and then hugs my arms to her chest. I can feel her ass grinding back against me. I lean down to her ear, and say rather loudly to be heard. \"Cum for me Mommy.\"\n\nShe rolls her head to me and gives me a sloppy kiss. We break the kiss she lays her head back against my shoulder and closes her eyes. The song is almost over. The concert lights are flashing all over. I feel her put more weight on my arms and she is clawing my hand for the remote. I hold my fist closed. She turns and looks at me. Her eyes are wild. They are rapidly blinking and flinching. I am not sure if it's the pot, her orgasm or the lights but it's sexy as hell. I watch this for just a bit before I relax my hand.\n\nShe takes the remote and clicks my finger on the button once. She winds up on high. I feel her shiver. She clicks it again and almost slumps in my arms. The song ends and another starts. Mrs B taps Mom's arm and makes a scoot motion. Mom taps Karen. Karen shuffles to my Dad as Mom goes to Mr B.\n\nMrs B looks at me. Darts her eyes to Mom and back to me and mouths \"Off.\" I nod yes. She smiles at me and mouths. \"Good boy.\" She turns back to the concert and holds my arms to her boobs. She reaches between us and rubs me through my pants. She turns and smiles, runs her tongue around her lips and then kisses my cheek. I reach up with one hand and tilt her face back to me and kiss her hard as I use my other hand to rub her pussy. She moans into the kiss. After a moment she seems to remember where we are and pulls away. She turns back to the stage, and guides my hands back to her boobs. She rubs the backs of my hands as I rub and squeeze her nipples.\n\nThe next song is a ballad. Mrs B taps Mom and Karen. The women swap back to their men. I look to my left and right and both women have their hands behind their husbands heads holding them into a kiss. Karen must have noticed too. Her fingers are running through my hair as she pulls me to her for a kiss. She gives me a soft passionate kiss as she grinds her ass against me.\n\nI tap my Dad's arm. I point to their asses and make the swap signal the women just used. He smiles and nods. I reach down and start tugging on Karen's butt plug. She gasps as I pull it out, and looks at me as if to say What are you doing.\n\nShe sees me reach out to my Dad. He has the vibrating plug in his hand, and she watches us swap. My Mom blows Karen a kiss. I see Mom's eyes go a bit wide as I am guessing Dad pushed in the regular plug.\n\nMom and Dad are watching us now. Mom nods her head to say Do It. Karen bends forward a bit and wiggles her ass. I nudge it against her and just give it steady pressure pushing it in. Karen pushes back against me and pops it in. She keeps her ass against me and pulls my arm around her.\n\nI hold the remote in my open hand in front of her. She reaches out and clicks it twice. I feel her jump against me as it comes to life. She grinds her ass against me. She pushes herself back against me, and hugs my arm against her. She is holding my hands to her. I don't think. I just take Ezzie off and slip her on Karen's finger.\n\nIt's amazing. I am holding the woman I love in my arms. She is humping against me, as a vibrating butt plug is buzzing in her ass, and all of a sudden all I can think about is the missing feeling of Ezzie. She is no longer in the background. It's just me and my own thoughts. If I had Ezzie she would be telling me what Karen wants and needs. Hopefully she will enjoy herself.\n\nI am pulled back to reality as Karen is clawing at the hand I have the remote in. Her body is shivering against me. All of a sudden I just get the urge to shut off the butt plug. Karen slumps in my arms. I have to sit or risk having her end up on the floor. I sit and pull her to my lap. I hold her to me and she shivers against me. I can't explain the look on her face, pleasure, pain, and or shock.\n\nThe parents are now sitting with the Moms on either side of me. Mrs B brushes Karen's hair out of her face, and taps her finger on Karen's cheek. Karen opens her eyes and looks at her Mom. Mrs B mouths. \"Ok?\"\n\nKaren nods yes. My Mom smacks my arm. Looks at Karen and glares at me. I put my hands up. I didn't know. My Dad puts his hand on her shoulder. Mom's look softens. She looks at Karen. Karen looks around and realizes everyone is looking at her. She just mouths and waves Hi.\n\nShe turns to me, smiles, shakes her head at me and then pulls me in for a soft tender kiss. Well she isn't mad at me. The lead singer is doing introductions and everyone is sitting so we don't look out of place. Karen takes a deep breath and waves our parents off. Her hand holds my hand with the remote and she wags her finger as if to say no more. I push off the battery cover and let the little silver disc battery fall to the floor.\n\nKaren gives me a big smile and another kiss. She then settles in against me as we sit and listen to the introductions. The band plays a few more songs and then they are done.\n\nWe are back in the car driving home. My Mom looks at her. \"Karen, I am sorry if Ben was too hard.\"\n\n\"Mom!\" I yell.\n\nKaren rubs my hand. \"Mrs C I am never worried about Ben hurting me.\" She reaches back and hugs me. \"He would Never hurt me, and I think you know that. But WOW was that an AMAZING Orgasm. I needed the toy off but I couldn't say it. The concert was too loud. I had my back to Ben. He couldn't see my face to know it. I was screaming in my head Shut it Off as I pulled at his hand that had the remote in it.\"\n\nThat's what it was. When I felt I should shut it off. It was Ezzie nudging me. That's what she does. God that felt like my own thought. \"I am sorry.\" I say to Karen as I wrap my arms around her. I grab her hand that has Ezzie on and hold it tight in mine. \"Thank you Ezzie!\" I think as loud as I can.\n\nAll of a sudden I can feel Karen's love for me. I know she loves me beyond words. I can feel it in my soul. Oh wow Ezzie is doing this. Like I have asked her to make Karen realize I love her and she has gotten emotional. Ezzie is letting me feel Karen's love. Oh god this is beautiful. I can't do anything but hold Karen to me and whisper into her ear. \"I Love You.\"\n\nShe squeezes my hands and arms tighter. \"I love you too.\" I never let Karen go for the rest of the ride home.\n\nWe get home and I see the Dads pulling at the bottom of the Moms dresses. Karen walks past them peeling off her dress over her head. \"Get over here guys. I Need to go first.\" Karen says.\n\nMr B says. \"Wait a minute we need to figure out the order.\"\n\nKaren drops to her knees in front of me and yanks my shorts down. As I bounce free. She grabs my hardon. \"This needs to be in my ass real soon.\" And she starts sucking my dick.\n\nMr B just stares at his daughter. \"Ok so each man gives his woman anal, and all three guys get a different hole on each woman.\"\n\nKaren is doing wonders blowing me. She pulls her mouth off me. \"Yeah yeah great idea Daddy, lay on the floor.\"\n\nMr B laughs. \"So I guess my little girl is in charge.\"\n\nMy Mom speaks up as she sits next to Mrs B on the couch naked. \"Bob, if you want me to shove a dildo in your ass and mouth you can choose which goes where.\"\n\nMr B laughs. \"I am laying down.\" As he holds his hands up in surrender.\n\nKaren straddles his hips and sinks down on her Dad and they both moan. Karen waves my Dad over. She looks at both of them. \"You two have to try and not cum. You have to save it for your wife.\"\n\nMr B reaches up and holds her cheek. \"Baby, Scott can pull out of your mouth, but it might be hard for me to keep that promise.\"\n\n\"You have to try Daddy. Ben when you pull out the plug, I will blow your Dad and I want you to fuck my ass until you cum.\"\n\n\"Yes ma'am.\" I answer. I pull on the plug and it seems to pop right out. Karen leans forward and takes my Dad's dick deep in her mouth. He moans loudly. Yup he has to be right at the back of her mouth. I line up and push in. Her ass swallows me right up. Karen chokes on my Dad as I push her forward.\n\nI can actually feel the pronounced ridge on Mr B's dick through the thin layer of skin separating us. I notice my Dad is already pulled out of Karen's mouth. I hear her gasping as I pull back to the entrance of her ass. I want to feel that tight squeeze on the head of my dick, and it will help me pull back and to keep from rubbing against Mr B.\n\nKaren looks back at me. \"Please baby. Fuck my ass. Cum for me baby while I have three dicks in me.\"\n\nMy Dad moves back towards her face. With a big smile he says. \"You talk too much.\" As he holds her head and pushes his dick in her mouth.\n\nI don't last long. Karen's ass is rubbing and squeezing me as I push the head of my dick in and out. My Dad can't take anymore. He is pulling back out as I pull Karen's hips to me and shove in balls deep. Karen grunts as I go deep, and I cum in her ass.\n\nI pull out when I finish cumming and Mr B pushes Karen off to the side. He lays there muttering. \"Nope. Nope. Not gonna.\"\n\nMy Dad looks at my Mom. \"You are next missy, but I am sorry to say it's going to be a quick go. I almost came in Karen's mouth.\"\n\nMy Mom has a fake disappointed look. \"Oh what a shame. The first time having a cock in my ass and pussy at the same time along with one in my mouth, and you won't last long. Jen doesn't that sound disappointing.\"\n\nMrs B giggles. \"Oh god yes. So disappointing.\"\n\nMy Dad points to me. \"Ben, take Mr B's place.\"\n\nI lay flat for my Mom. She walks to me and stands over me, with her legs spread. I can see her wer pussy lips slightly separated. \"Is my baby boy ready to fuck his Mommy?\"\n\nI smile at her. \"Yes Mommy.\"\n\nAs Mom sits down on me I see Karen is sitting behind her Mom. With her arms around her playing with her Mom's nipples as they watch. I start to ask Ezzie what they are saying, but she is still with Karen. God Damn it. I am brought out of my thoughts by Mom's pussy sitting on my dick. She wiggles on me. \"Baby, you seemed a million miles away just now. Are you ok?\" Mom asks.\n\n\"I was just looking at Karen with her Mom. I was thinking how much I love her, and how sexy and exciting this weekend has been.\" I say.\n\nAt first she leans down and hugs me. She then pulls back so her face is inches away from mine. \"And my Baby Boy has grown into a sexy man.\" She leans down and gives me a hard passionate kiss. She sits up. \"Let's get this show on the road. If we follow Karen's lead. I am fucking Ben. Scott when you pull out the plug I will start sucking on Bob, and you get to stick your cock up my ass.\"\n\nMy Dad chuckles and starts to say something when we hear Mrs B moan. We all look over. Mrs B is on her knees facing the back of the couch. Her medium plug is on the sofa, and Karen has pushed a large one in her Mom. Karen realizes we are watching her. \"What? I told her if she was going to take Dad up her ass she would want to stretch a little more.\"\n\nKaren moves them back into position like they were so they can watch. Karen is nuzzling her Mom's neck from behind her as she plays with her nipples. My Mom looks at Bob, and puts her hand behind his leg to pull him closer. She looks up at him. \"Bob, if you have to pull out I understand. I would love a snack, but Jen deserves it.\"\n\nHe runs his fingers through her hair. \"I promise Nancy. I will save it for Jennifer.\"\n\nMom lets out a small breath in a woof, as I feel the plug pull out of her. \"And so it begins.\" She says as she leans forward and sucks Mr B's dick into her mouth. He is thicker than me and Dad. She has to stretch her mouth a bit more than she is used to. Well actually they have been swinging and swapping for years. She is probably used to it. I feel Mom clench a little, I hear her moan around Mr B's dick, and then I feel Dad rubbing against me inside her.\n\nSince it's ok for Dad to cum inside her, unlike Mr B that was trying to hold off inside Karen, I fuck up into Mom just as Mr B pulls out of her mouth. \"Jesus. You two are pulling and pushing in different directions.\"\n\nWe both freeze. \"Mom, is it ok?\" I ask.\n\n\"Jesus, yes. I didn't say Mary Jane.\" She looks down at me. \"That's the safe word for the four of us. I yelled it earlier when Dad was spanking me too hard.\"\n\nI hear a slap of Mom's ass. \"I am pretty sure he figured that out earlier when you cried Uncle.\" My Dad says as he pushes back into my Mom's ass. She just moans with the thrust. I wait to get my Dad's rhythm, and I start fucking up into her pussy opposite of it.\n\n\"Fuck!\" My Mom moans just before I hear her gag as Mr B pushes his dick back into her mouth. He is actually doing a decent job, or well she is doing a good job as he fucks her mouth. She is gurgling, and moaning as the three of us fuck her for about a minute. Mr B then pulls out again.\n\nMom looks down at me, and then over her shoulder. \"Come on boys. Fuck me. I want the two of you to make me cum as you fuck my ass and pussy.\"\n\nDad laughs. \"There is my delicate, and shy wife. The hornier she gets the worse she gets Ben.\"\n\n\"Stop talking and fuck me.\" Mom says looking back at Dad.\n\nHe grabs her hips and pushes into her hard. She slips and falls flat against me. He follows her down, and doesn't miss a beat. He is doing a decent job of fucking her hard. I am at the bottom getting squished. Mom is gasping and moaning as she is now sandwiched between us. Her body is pressed into mine. I look down and her tits are squished between us. I can see the wanton look on Mom's face. I don't know if she is liking having two guys fuck her at once, and or the taboo of it being her husband and son. She is certainly enjoying it. She grimaces as Dad fucks into her. Lucky for her Dad isn't long in this race. His breathing is getting labored. Before you know it he grunts and cums inside Mom's ass. Dad gets up off us, and Mom sighs. \"Oh so close.\" As she props herself up off my chest.",
        "I hold her shoulders in place. \"Let's do something about that.\" I lean my head up and bite on a nipple just a little hard. I pull her shoulders down so I can put my head back down, and I start fucking up into her.\n\n\"Oh Fuck Yeah. She moans and holds my head in her hand. \"Nothing has changed. You were a biter as a baby too.\" She says.\n\nNext thing I know Karen is beside us. \"He likes to play rough with my nipples too. Thank god I like it.\" Karen bends down and starts sucking and biting on Mom's other nipple.\n\nI hear a spank, and Mom yelps. I see her turn. \"Jen, are you joining my party?\"\n\n\"No, I am spanking.\" Slap. \"A naughty girl.\" SLAP. \"That is preventing me.\" SLAP. Mom hisses with that one. \"From starting.\" SLAP. \"My party.\" SLAP SLAP SLAP.\n\nI Feel Mom clenching her pussy on my dick just a heartbeat before she screams \"FUCK!\" And she orgasms. Her body locks up for a moment, and then relaxes on top of me.\n\nJen softly slaps Mom's bum, and says. \"Nancy, roll out of the way. I Have to get this thing out of my ass. Ben get up, your Dad gets to fuck me while I blow you.\" Mrs B looks at Dad. He isn't fully hard. \"Karen, come do me a favor. After Mr C lays on the floor suck him, and get him hard so he can fuck me.\"\n\nKaren smiles at my Dad. \"I'd be happy to Mom.\" My Dad gets on the floor and Karen takes him right into her mouth. Within two minutes she has my Dad moaning and fully hard.\n\nMrs B crawls over him, and sits on him. She pushes up and down on him once or twice. \"Ben, come over here in front of me.\" She looks at Mr B. \"Do it.\"\n\nMrs B really lets out a moan as the plug comes out, but she sucks me right in. Until Mr B starts to push in. She then spits me out. \"Fuck you are big!\"\n\nI hear my Dad's voice. \"Ben, this one likes to whine. Please shut her up.\"\n\nShe starts to say something but I get my dick in her mouth too quickly. I can tell of the three women, this is a chore for Mrs B. To be honest I think anal with her husband is a chore. She might do better with me or my Dad. For that matter she might have in the past. I just moan again, thinking how much I miss Ezzie on my finger. Mrs B thinks it's a compliment, and to be honest she does the best job of the three women. Mom, and Karen are right behind her, but I think years of practice on Mr B's thicker dick gives her the edge.\n\nI suddenly realize no one has to back off with Mrs B. No one is left that has to save their load for someone else. Mr B wants to cum in her ass, and my Dad and I have already fucked our ladies asses. Of all the women to get our full attention if you will, it's the woman that was the most nervous about it. She has been constantly moaning as she sucks my dick, and I can see her torso clenching as Mr B fucks her ass. Dad has his hands on her hips, and is doing his best to fuck up into her, and I am holding her head as I fuck her mouth. Her moaning gets a little louder. Mr B spanks her ass a little hard. She yelps around my dick. Mr B motions for me to pull out of her mouth. Mrs B gasps in a big breath.\n\nMr B slaps her ass again. \"Jennifer, I am very close, are you with me?\"\n\n\"Do it Bob. Cum in my ass. Do it Honey.\" Mrs B looks up at me gasping as Mr B fucks her, and opens her mouth. I step forward and resume fucking her mouth. True to his word within a minute or so Mr B shoves his dick as deep into her ass as he can. She squeals around my dick as he shoves his full length in. She wasn't ready for that. Mr B holds her to him by her hips until he is done cumming, and he pulls out of her ass. She taps my thigh with her hand. I let her head go and step back. She falls off my Dad to the side, and rolls onto the floor half curled up in the fetal position.\n\nMy Mom is at her side trying to soothe her. Karen lays on her side facing her Mom, whispering to her, and running her fingers through her Mom's hair like she was trying to comb it with her fingers. Over the next few minutes as we all start to relax and calm down the couples cuddle together.\n\nKaren stands up, and reaches for my hand. She pulls me up and puts her arm around my waist. \"I hate to sound awful, but this is the last night I get to spend alone in bed with Ben for a few months. We are going to our room, and I am going to make love to him all night long. The Moms get up and come over to us. All of a sudden they are in Mom mode. They are naked and hugging us, but in Mom mode.\n\nMy Mom hugs me tight. She tells me she loves me, and gives me a normal Mom kiss on my cheek. Mrs B comes and gives me a Mom hug. She kisses my cheek and tells me again she is so happy we are together, and we are so cute together. I then hear my Mom say to Karen. \"I am so happy you are going to officially be my daughter soon, well daughter in-law.\"\n\n\"MOM!\" I yell.\n\nMy Mom looks at everyone's faces, and she realizes what she said. \"Oh everyone needs to relax. We all know it's not happening tomorrow, but we all know we will all be in-laws soon.\"\n\nMr B, just shakes his head, and looks at my Dad. \"God women can not keep a secret.\"\n\nI look at Karen, and she is practically glowing. The secret is out. We don't have to hide it anymore. \"In that case then I am taking my soon to be fianc\u00e9 to our room now to make love. Goodnight.\" She turns and takes me by the hand to our room. I know the minute Ezzie is back on my finger I am going to get an I Told You So from her about Karen not keeping our engagement secret.\n\nI close the bedroom door behind us, Karen points to the bed. \"I want my fianc\u00e9 on the bed. I want to ride you. I want to kiss you. I want to feel you inside of me. I want you to watch me squirm while I orgasm on top of you.\"\n\nI pull her to me and kiss her hard, and roll us back onto the bed. We laugh as we land. Karen almost slides back off the bed. I slide to the middle of the bed, and she crawls over me. She sits down on me grinding her wet pussy against me. She is enjoying the feelings, and I bet watching me squirm. She sits back up after a moment, reaches between us and holds me in place while she slides onto me.\n\nI groan as her pussy squeezes me and pulls me in. Karen bottoms out and lets out a small moan as she just sort of rolls her hips against me and grinds.\n\nShe takes my hands and puts them on her nipples. \"Ben, I want to cum. I haven't cum since we got home. I couldn't ride my Dad hard, when he was trying so desperately not to cum. The guys all came in a girl's bum. You made your Mom Orgasm. I made my Mom orgasm with my fingers while we watched, but I haven't orgasmed. Please baby, I Need it.\"\n\nI move my hands up to her neck and pull her towards me. I kiss her neck and ear as I whisper to her. \"I am all yours. You tell me what you want. Take me.\"\n\nShe turns and kisses me as I feel her hips pump up and down on me. She smiles a satisfied smile and moans. After a couple of minutes of humping and kissing me she sits back up and starts rolling and grinding again. She takes my hands and puts them back on her nipples.\n\nI pinch and pull on her nipples how I know she likes. She is panting and moaning as her hips hump and roll harder against me until she almost starts hyperventilating. Her pussy starts clenching and releasing me in rhythm to her breathing, until she shrieks and drops down on top of me shivering. I can feel little squeezes and clenches of her pussy on my dick as she shivers on top of me.\n\nShe lays like that for a while. I am running my fingers through her hair, and softly rubbing her back. She turns her head to me and smiles. \"God, the orgasms I have had tonight have been AWSOME. I Have to eat these gummy bears more often.\"\n\nI laugh and hug her to me. She humps up and down a little on me. She smiles at me. \"Little Ben is still hard. Does he want to play some more?\"\n\n\"Absolutely, he does.\" I say.\n\n\"Good, I want to try something.\" She lifts off me and scoots back down my legs. She lifts her hips up and smiles at me. \"Put it in my bum.\"\n\n\"Really? No lube? It's out in the livingroom.\" I say.\n\n\"My bum has plenty of lube, and your cum in it already. Put it in my bum!\" She says.\n\nI move the tip of my dick to her asshole and she pushes down. \"Oooohhhhh. Ben, I don't know how to describe it. It's full, a little uncomfortable but it feels so nice.\"\n\nAll of a sudden a rush of pressure and pleasure rush over me. I can't help but moan. \"You like it too I see.\" Karen says as she moans and keeps pushing down until she is bottomed out. \"Oh So Deep!\" She groans. I swear I could feel the pressure increase. Holy shit what is this?\n\nI just moan as she humps against me. I look up at her. \"Jesus you are sexy.\" I just blurt out.\n\nShe giggles. \"You like the view?\"\n\nI look up at her. My dick in her ass. Her pussy lips wet and slightly open. Looking further up to her boobs and swollen nipples, and finally her beautiful face looking down at me. I reach for my phone on the nightstand. I just grab it with my fingers. \"Ben, No!\" She says.\n\nI drop the phone on the bed. \"Karen, it's just for us. You have to see how sexy you look. I will never show a soul. Please.\"\n\n\"Benjamin, this is no joke. No showing it to anyone!\" She says.\n\n\"I promise. Now give me a pretty smile.\" She smiles and I snap the picture, and put down the phone. She resumes fucking me. It's amazing to watch. It feels great on my dick, and that sensation just won't quit.\n\nKaren reaches down and plays with her clit. \"Fuck my ass Ben. Please make me cum with you in my ass.\"\n\nI start fucking up into her. She starts humping against me. God her ass is so tight. I am going to cum soon. That feeling keeps getting more intense. Oh God, what is it. Karen clamps down on her ass, and screams as her fingers are flying on her clit. I swear my brain is melting. I can't explain the feeling. It just explodes inside of me, and then I can't help but explode inside of Karen's ass.\n\nShe drops down onto the bed between my legs. We are both laying back and panting. I look down and her head is tilted at an odd angle so it's on the bed. I move up the bed, and reach down to pull her up to me. She groans but lets me pull her up. She lays her head on my chest. With a giggle in her voice. \"Your heart is pounding.\"\n\nI sigh. \"You damn near killed me.\"\n\n\"I almost killed you? Did you have a dick in your ass?\" She laughs.\n\nOh my god. That's it. Is that what that feeling was? Did Ezzie make me feel that? Was I feeling what Karen was feeling? I reach down and hold Karen's hand and pull on the ring. \"I think you have gotten very lucky with my ring.\" I tease.\n\nShe closes her fingers, and looks up at me with nothing but love in her eyes. \"I like wearing your ring. It's almost like I can feel you with it on.\" Karen says.\n\nOh shit! Play it cool. I gently unfold her fingers. \"Karen I have had nothing but Good Luck since I got this ring. The best part was starting to date you. I can not give it up and risk losing you.\" I say.\n\nShe pushes up off me and just stares at me. \"Benjamin, you will Never Lose Me!\" She bends down and softly kisses me. She breaks the kiss and holds up her open hand allowing me to take the ring off.\n\nAs I slide it off her finger and put it on. I take her left hand and kiss her palm, and then hold it to my heart. \"I promise you a very special ring on this hand that will mean a whole lot more at the end of the semester.\"\n\nShe has tears in her eyes. She just whispers. \"I love you.\" And then grabs me in a tight hug.\n\nI hold her to me. \"I Love You Too.\" After a moment just holding each other she pulls back. She feels for the blanket at the bottom of the bed and pulls it over us as she snuggles against me.\n\nI feel her settle down against me. Her breathing is steady and she is asleep. I sigh as I relax. \"Ezzie are you there?\"\n\n\"Yes Ben.\"\n\n\"Thank you for everything tonight Ezzie. You made me shut off the vibrator at the concert. You made me feel Karen's love for me in the car, and I am pretty sure you let me feel what she was feeling at the end tonight.\"\n\n\"Ben, I have told you before I will always look out for Karen. I know how much she means to you. And yes at the end she was at a loss to explain the feelings she felt as you were having sex. She wished you could feel what she was feeling. No one has ever done for me what you do. Giving me to Karen during sex. I realized as she was wishing that, that I could still feel you. Not as strongly, but I could. I thought maybe if I could feel you, and I could feel her I could let you feel her too. I guess it worked.\"\n\n\"Ezzie, I wish there was a way I could give you a big hug.\"\n\n\"I can feel your feelings for me, Ben. That is more than I have felt from someone in a Very Very Long time. That for me is amazing. Now go to sleep. You are tired too.\" Ezzie says.\n\n\"Yes Ma'am.\"\n\nThe rising sun marks an end to an amazing summer, and the start of my last semester in college.\n\nStay tuned for more fun.\n\nI hope you have enjoyed my story. There are still a few ideas I have for Ben & Karen. As always I Love the Comments and Suggestions please continue to leave them."
    ],
    "authorname": "ao1701e",
    "tags": [
        "mind control",
        "incest",
        "group sex",
        "lesbian",
        "anal",
        "father daughter",
        "mother son",
        "mother daughter"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/a-ring-named-ezzie-pt-08"
}