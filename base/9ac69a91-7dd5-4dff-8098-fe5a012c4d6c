{
    "title": "Psyche's Surprise",
    "pages": [
        "\"Shit! They're coming! Quick, everybody hide!\"\n\nThat was our cue to disappear in Gayle's house and pretend that we had not been running around preparing for her husband Mike's surprise birthday party later that night. We were not finished decorating and getting all the food ready, but we weren't supposed to be. My own husband, Drew, was taking Mike out to divert his attention for a while. A smaller group of their closest friends had gathered early to help Gayle get ready. We were the core group of friends who had all gone to college together. Now in our late 30s, it had been a while since we had partied like we did during our campus days. We hoped to recapture some of that magic that night.\n\nDebbi and I ran for the coat closet following Akai. Those helping Gayle in the kitchen hid in the pantry, while the ones blowing up balloons on the upstairs landing took their decorations and went into one of the upstairs guest bedrooms. Mike and Drew would only be there long enough for Mike to change out of his racquet ball clothes and put on his Giant's jersey for the afternoon game Drew was taking him to. We wouldn't have to hide for long, but we needed to be absolutely still and not make a bit of noise.\n\nThe coat closet was a tight fit for the three of us, but as we heard Mike and Drew's laughter at the front door, we didn't have time for one of us to run someplace else. We had to get out of sight fast. Someone was going to have to squat on the floor under the coats and jackets. Akai looked like he didn't want to kneel but two stern looks from Debbi and I let him know that there was no use putting up a fuss. We were both wearing skirts and heels, and there was no way we were going to squat down in that closet. On his knees he went as Debbi and I squeezed in shoulder-to-shoulder in front of him. Gayle shut us in as she went to greet her husband and his best friend at the door. We were ensconced in total darkness.\n\nI head Gayle greet Mike with a kiss as Drew began to describe their plans for the rest of the afternoon. He was doing it as much for the benefit of us in hiding as for Gayle, so that we would all know how much time we had to finish getting the house ready. It was all according to the plan Gayle had come up with. Mike's actual birthday wasn't until Tuesday and it was only Saturday. Anticipating that a large group of us would go out for dinner next weekend, we had Drew take Mike out for a day of one-on-one man time. He had no clue that his house was already full of people getting ready for a party that night.\n\nThat's when we heard Mike announce that he wanted to get in a quick shower before they left again. That sure threw a wrench in our plans. They were supposed to have both showered at the gym after their racquet ball game, but this meant that we had to stay hidden for a bit longer than we'd planned. As Mike ran to his shower, Gayle peaked in on us and asked if we were ok, then she shut us back in and offered Drew something to drink.\n\nWe felt Akai shifting his position behind us. \"If we're going to be here for a while,\" he whispered, \"I need to get more comfortable. I'm sitting on something that's sticking up into my butt!\"\n\n\"Good!\" I whispered back. \"You deserve a good stick up the butt,\" I chuckled.\n\n\"Given our relative positions, I would hold my tongue if I were you, Nivia, less what I'm sitting on finds its way up your butt.\"\n\n\"Shhh!\" Debbie scolded us. \"Don't you two get started.\"\n\nShe was right, Akai and I had a history of ribbing each other and we could get out of hand quite easily. It had all started 18 years ago when the two of us worked in the same dorm cafeteria on campus. One night after our shift Akai had humiliated me so badly that deep down I had never really forgiven him for it, even though he apologized over and over for the next two years until we graduated. He swore that my humiliation wasn't his intent, but that was little consolation. We didn't speak of it any longer because I hated to be reminded of how humiliated he'd made me feel, but I never passed up an opportunity to give him shit. Truthfully, I was still hoping one day to embarrass him, if only half as bad as he had humiliated me.\n\nEven though Debbie had admonished us to be quiet, I still couldn't resist having the last word. In this instance, instead of coming up with another retort I used my heel to find his thigh behind me and pushed it into his flesh just hard enough to get a hiss out of him. I smiled to myself in the dark, thinking I had gotten the better of him, until I felt him reach up and pinch my ass, just enough to sting. The bastard! Out of all the pats of my body, he knew I was most sensitive about my butt. In fact, it was the source of my humiliation all those years ago...\n\n*****\n\n\"Akai, can we go home now?\" my friend Samara asked after we had finished wiping down all the tables and cleaned out the salad bar. We had a test to study for and wanted to get an early start. It was already 8:30. Akai was the student manager, and it was his job to make sure after the dinner shift that the cafeteria was in spotless shape for the breakfast crew the next morning. The six of us who worked the dinner shift were all anxious to get out of there.\n\n\"Not yet. Someone needs to stay and help me mop the floors. Samara, I think it's your turn,\" Akai responded. \"The rest of you can go.\"\n\n\"Aww man!\" she whined. \"That will take forever!\"\n\n\"Well, you could just ask Nivia to scoot around on her butt with a couple of wet towels. She'd finish the whole floor in just five minutes.\"\n\nUncontrollable nervous laughter exploded out of everyone, except me. I couldn't believe my ears. We were used to joking around. Akai kept things light and playful on the job, and that was the best part of working there. It paid better than most all other campus jobs because most students didn't want to do food service work. We played around so much, with secret food fights, eating contests, and taking free food back to our dorms, that the three hour shifts seemed to fly by. But talking about my big butt was taking things too far. I was mortified, and Samara could see the look of horror on my face. In solidarity, she stopped her own laughter to chastise Akai.\n\n\"That was cruel, Akai!\" she said. A few other students nodded in agreement, trying hard to stifle their laughter, and failing.\n\n\"Come on now, I wasn't trying to be mean. Having a big ass is a beautiful thing,\" he asserted. More chuckles from the crowd. I turned about four different shades of red.\n\n\"You're not helping,\" Samara said. \"Just shut up before you make it any worse.\"\n\n\"Nivia,\" he turned to me, \"I didn't mean for it to come out like that, but big bubble butts are really hot. I was giving you a compliment.\"\n\nTry as I could to come up with a witty reply, I was too flustered. After stammering for a moment, I just ran out. I could hear Akai pleading his case to the rest of our co-workers as I ran from the industrial kitchen. I headed straight to my dorm room, hoping to just lose myself in my course work, but that humiliation stung for a long time. I was hopelessly distracted for the rest of that night. For the rest of my time in college, I couldn't stand anyone paying any attention to my behind. In fact, if I was honest about it, the reason I felt comfortable with and became so close with Drew was because he paid absolutely no attention to my rear. He was much more into my frontal assets, and that was just perfect for me.\n\nIn the cafeteria the next day, I couldn't even talk to Akai, though he tried to make light conversation with me numerous times. At the end of our shift, he didn't even bother looking in my direction when looking for someone to mop. I left without a word.\n\nLater that night there was a knock on my door. It was Akai. \"I came to make sure we're cool, Nivia\" he said when I opened the door. \"I talked to Samara and she told me that you are still pretty upset with me. So I figured I would come over and try to explain what I meant and say once more that I really wasn't trying to insult you.\"\n\n\"I think I've heard enough of your explanations,\" I growled at him.\n\n\"Just give me five minutes,\" he pleaded. I relented and let him come in. He went on and on but it was all in one ear and out the other as far as I was concerned. When someone touches a nerve of your deepest insecurities, it's hard to entertain any notion that your fears about your shortcomings are irrational. Perhaps what bothered me most was that he never actually said he was sorry, but just kept going on about how having a big butt was a good thing, not a bad one. Out of pride to not let on just how deeply I'd been cut, I said that all between us was well, but in my heart I was still smarting. But that was the start of our t\u00eat-a-t\u00eat and from then on, at every opportunity I gave him shit. It never got ugly or deeply personal, but all of our friends knew that if we were in a room together that we'd rib each other relentlessly to see who could get more people laughing at the other.\n\nThough he never again teased me about my butt, every once-in-a-while I would turn around and find Akai's eyes glued to my rear end. Caught like a kid sneaking candy after being forbidden to do so, at those instances Akai would let his guard down and look at me with lust filled eyes and a sinister smile. \"Nivia, you really should let me show you just how sexy that thing you're sitting on is,\" he'd say.\n\n\"Dream on,\" I'd tell him. I reckoned that he was one of those guys who liked to spank a girl or slap her on the ass during sex, and I had no interest in such a thing. It was unmistakable in my tone that I would never let him anywhere near my butt. Lord knows I could never bend over when he was anywhere around. If I did, it was like inviting his stares. To his credit, no matter how many times I'd rebuff what I interpreted as his pathetic attempts to make me feel better about my ass, he never stopped trying.\n\n\"Tsk, tsk, tsk,\" he'd say, almost under his breath, shaking his head at me. The look in his eyes would convey that I just didn't know what I was missing. I had no desire to know any such thing. He stopped asking once I started seriously dating Drew in my junior year. Akai was a senior, and we both still worked in the cafeteria, but Drew was one of his friends and he didn't want to be disrespectful. But he never stopped looking. If I caught him staring at it, he'd just smile a wicked smile and turn away. That continued after college and through both of our marriages. He was so slick about it. Neither Drew nor Akai's wife Alicia ever seemed to catch him doing it but if we were alone, or if his line of sight was just right, I could bet money on where his eyes would be.\n\n******\n\nThat was the shared history we brought with us into Mike's and Gayle's dark cramped closet that afternoon. When he pinched my butt, I felt all the old sting of how he'd first humiliated me almost 20 years ago come rushing back into my mind. Without thinking I took my heel and dug it into his thigh even harder. Undeterred, his right hand reached up to join his left and he pinched me on both cheeks simultaneously. I pushed back with my butt to try and shake his hands away and I felt my right cheek make contact with the left side of his face. A wicked idea came to mind and I braced myself against the door jamb and pushed back into his face even harder.\n\n'That'll teach him,' I thought to myself. 'I'll make him sit trapped in this closet for the next 5 minutes with my ass shoved in his face and see how he likes it.' So I pushed back hard. Taking him by surprise, I felt him squirm trying to get his face out of my butt. I was relentless and kept it pressed firmly into him. In whatever direction I felt his face move, my butt was there to greet it. A chuckle escaped out of me, too tickled with what I was doing. Debbie heard my tiny laughter and our commotion and shushed us again.\n\n\"You two are going to get us caught!\" she admonished, poking me in the ribs. She was right so I relented. Satisfied that I got the better of him this time, I straightened my back and pulled my ass out of Akai's face. Almost immediately, two strong hands came up to grab each of my hips and pulled me back. I froze. With a tight grip, Akai held my waist firmly in place and then slowly resumed rubbing his face all over my backside. Like he liked it!\n\nAt first I was just shocked. I was genuinely perplexed at why anyone would voluntarily do such a thing. 'Eww!' I thought. If he was trying to humiliate me again, it was sure a weird way of doing it. When he didn't stop right away I began to feel uncomfortable. My ass was my biggest insecurity about myself and he knew it. What was he trying to prove? Once it became clear that he had no plans of stopping, it finally dawned on me: he was actually enjoying it!\n\nA million thoughts raced through my mind. I didn't want to raise a commotion and clue Debbie into what was going on. I also didn't want Gayle or Mike to hear any rumblings in the closet and ruin the surprise party. For that matter, I didn't want Drew to hear mysterious rumblings in the closet and get the wrong idea if he saw us come out.\n\nMy shocked inaction provided an opening for Akai to escalate things that really sent my heart racing in a flurry of mixed emotions. The hands that were around my waist slowly moved back to join his face. I stood aghast and incredulous at his gall and audacity as he began palming my ass and then squeezing it. Soon I was on the receiving end of a full-out deep tissue butt massage, all while he continued to rub his face up and down along my crack.\n\nThings had turned weirdly sexual, and I was at a loss for what to do about it. With a sudden jolt of my hips I pushed his face back, but Akai was determined and within a split second his face was right back in my butt. His hands never left, kneading my cheeks with his strong fingers, meeting the resistance of the lifetime of tension I held confined in those muscles. I'm sure I knew subconsciously, but my conscious mind had no idea how much anxiety I held in my glutes, trapped like a tightly wound spring of kinetic energy searching for release. I was therefore equally shocked at the very visceral reaction my body had to this attention. The release of tension felt good -- damn good -- and I struggled emotionally with the conflict raging in my head while I stood there. Half my brain screamed 'STOP! Nivia, what the hell are you doing?' The other half wanted him to do it harder.\n\nI really got nervous when I realized that the release of tension centered around my deepest insecurity was having a profound effect on my mind and body. Surprisingly, I found myself responding to Akai's ministrations. With his relentless kneading and pulling he turned raw, stiff dough soft and pliant, and I felt the weight of so much pent up anxiety began to slowly seep out of me from behind. The nervous energy released from my cheeks turned into a subtle heat that settled in my core. In shame I felt a pool of moisture forming between my lips and realized this had gone way too far. I needed to stop things before both Akai and Debbie sensed exactly what was going on between my legs.\n\nAs if sensing all my fears, I heard a double whiff intake of breath arise from behind me, testing the air for the hint of musk that would surely give me away if detected. I held my legs together tight, and all the muscles in my lower body tensed. On my trail like a blood hound, I felt Akai press his nose into the lower cleft of my backside and then heard him inhale deeply.\n\n\"Mmmm,\" he groaned, barely audibly, confirming his suspicion of my arousal.\n\n\"Stop it!\" I hissed in a whisper.\n\n\"Uh-uh,\" he whispered back. And then a low chuckle, mocking me for enjoying his ministrations.\n\n\"What the hell is going on with you two?!\" Debbie whispered. \"You both need to quit.\"\n\nBut Akai was determined. It was as if getting a whiff of the musky aroma of my excitement had given him license to be even bolder, and suddenly one of his hands began snaking its way up my skirt. That was the last straw; I had to put a stop to him right then and there. I reasoned that if the heel of my stiletto digging into his thigh was not enough to make him quit, then maybe some pressure applied to more sensitive parts would suffice. I didn't want to truly hurt him, however, just show him that I meant business. So I slipped off my heel and reached back with my foot. I found one thigh and then the other, positioning my foot between them, then moved it back to the junction where the two met.\n\nI had simply planned to gently locate his balls and then apply pressure until he stopped violating me. Instead, I found a big surprise. A long solid shaft of tumescent flesh greeted my foot! What he was doing to me had excited him. Making contact with my foot I felt it throbbing beneath his pants! A low, guttural \"mmmm\" escaped from my own lips before I could stop myself.\n\nTo make matters worse, I had let my guard down. No longer clenching my thighs together, the hand that was worming its way up my skirt made contact with the damp gusset of my panties. My mind was swimming, and I was by then in a full on panic. Outside, Gayle was telling Mike and Drew to have fun at their game. I heard my husband's voice, right outside the closet door, telling Gayle approximately what time the boys would be back. Meanwhile, my arch nemesis had his hand up my skirt and was pulling the wet crotch of my thong to the side, seeking out the source of its moisture. He found it, and a long thick finger slid right up into my folds just as Gayle announced that we were all clear to come out. Akai slid his finger in and out of me a few times in quick succession and then withdrew it, just as Gayle opened the closet door to let us out.\n\nDebbie stumbled out first as I tried to compose myself. Gayle held the door open for me as I adjusted my skirt and walked out. I saw her nose twitch, and I wondered if she could smell the evidence of what Akai had just done to me. I didn't look back, I couldn't look back. I went straight to the kitchen without turning around and got back to making trays of hors d'oeuvres. I was flustered and ashamed of myself, unable to concentrate on what I was doing. I was mad at myself for letting it happen, mad at myself for enjoying it, and then mad at myself for not being able to forget about it.\n\nEventually I looked up and caught sight of Akai. His hand was near his face, holding his chin, playing with the hairs on his goatee. Once he noticed me looking at him he placed his middle finger right under his nose, and I just knew it was the finger that had been inside of me. He was directly mocking me then, and to add insult to injury, he briefly and discretely slipped the finger into his mouth. He winked at me, savoring the flavor he found. A shudder ran through me, and a fresh wave of moisture seeped out of my core.\n\nI went back to preparing food trays, feeling increasingly guilty and angry at myself for not being able to stop looking at him. Every time I did, he was sure to let me know how much he was enjoying my smell and my taste.\n\n\"Earth to Nivia, anybody home?\" Gayle asked me, noticing my distracted demeanor. Everyone else was laughing and joking, reminiscing about old times, while I chopped vegetables in silence.\n\n\"Girl, I know, I have a million things on my mind,\" I lied. In reality, I had one thing on my mind that I couldn't shake. Finally, I couldn't take it any longer. When I saw Akai excuse himself to go to the restroom, I followed him. I checked to make sure no one was looking and then slipped into the restroom behind him. He was peeing, and didn't even seem surprised when he heard me walk in. I stood with my back against the door, scared to move and unsure what to say. I watched his arm shake, indicating the end of his release, and he finally turned around to face me. He had not tucked himself back into his pants. I made a commitment to myself that I wouldn't look down. No matter what.",
        "\"What the hell has gotten into you?!\" I asked finally, locking onto his eyes and refusing to look away.\n\n\"You started it,\" he replied with a sly smile.\n\n\"You took it way too far!\"\n\n\"Did I?\" he asked. \"From what I could tell, I didn't go far enough.\"\n\n\"You're friends with my husband!\" I exclaimed.\n\n\"I couldn't help it. I've always tried to tell you how sexy your ass is. You should be careful before sticking that thing in someone's face.\"\n\n\"I wasn't doing it for you to enjoy, you sicko,\" I scolded him. \"It was supposed to be a joke!\"\n\n\"Are you sure?\" he challenged me.\n\n\"Yes! You were supposed to be grossed out for having to sit with my butt pushed in your face for 10 minutes. It was payback!\"\n\n\"Come on now, Nivia,\" he said, shaking his head. \"A guy's been ogling your ass for the past 18 years and you really think he'd be grossed out from having it in his face? You can try to lie to yourself but we both know the truth: the reason you're upset is not because of what I did but because you liked it.\"\n\n\"THAT did not happen!\" I admonished him.\n\n\"Oh yes it did, and I've got proof,\" he said, voice deepening. He drew his finger with my DNA all over it back to his face and took a long sniff before once again placing it in his mouth, this time sucking it thoroughly. \"Sweet, delicious proof,\" he continued once his digit was back out of his mouth and again under his nose. \"You see the effect it has on me?\"\n\nIn a split second of weakness I looked, cursing myself for my feeble resolve. Over a matter of seconds I watched his flaccid, floppy penis grow into a marvelously hard cock, standing at full attention in salute of me. All from the smell and taste of my pussy. It had been a long time since a man had responded to me in such a visceral way, especially one so fit and good looking. At 39, Akai was still in great shape. Who knew he was hiding such a magnificent dick?! Involuntary muscle contractions wracked my lower half, and I felt my lips slide together from all the slick moisture gathering down there.\n\n\"Put that away,\" was all I could manage to say. But there was no conviction in my voice as I stared at it, and licked the corner of my mouth to stop any drool from escaping. He didn't obey. Instead, he took a step closer to me.\n\n\"AKAI...\" I warned him, my voice rising in urgency. He ignored me and took one more step in my direction, closing the gap between us. His dick was pointed right at my crotch. An inch closer and it would be touching me. I put my hand on his chest to keep him at bay.\n\n\"Look at me,\" he said softly, but it was hard to tear my eyes away as he stroked his rock-hard shaft right in front of me. Finally, I found my strength and turned my gaze back up to his face. I could just make out the faint smell of my pussy on his breath.\n\n\"I know I hurt you when I made fun of your butt all those years ago,\" he said in a conciliatory tone, \"but you and I have never talked about why it bothered you so much.\"\n\n\"You humiliated me,\" I admitted, letting my guard down after all these years.\n\n\"Embarrassed maybe, but if you felt humiliated it wasn't because of what I said. It was because it came from me.\"\n\n\"What are you talking about, Akai?\"\n\n\"We had something,\" he began. I looked upon him dumbfounded, still acutely aware of the hard phallus pointed at my pussy. I swear I could feel the heat radiating off of it. I tried to just concentrate on what he was saying but that was difficult to say the least. \"I liked you, thought you were damn cute and funny. Plus you were smart. I especially respected the fact that you never thought you were better than the off-campus guys from the 'hood who worked in the dish room. That's how I knew you were cool. Your sexy phat ass was just an added bonus to an already great package. But I was dating someone, and I was just thinking about breaking things off with her to ask you out when 'the butt joke' happened. I knew you were pissed at me, and I knew there was no way that you'd go out with me after that.\"\n\nI stood there floored, trying to make sense of all that was just told to me. I thought back to my freshman year before the humiliation and tried to search my feelings to see what truth lay in his words. Had I liked him? I remembered thinking he was funny, and attractive in his own quirky way. I guess I looked up to him, but all of us who worked in the cafeteria did. Then I remembered only signing up for the shifts where he was also working as the student manager, because the job just wasn't any fun without him there. He took me under his wing when I first started working there, and that made me feel special.\n\nWould I have gone out with him? Probably. But I couldn't say if I had a crush on him. As a freshmen I remember thinking that there were tons of cute guys all over, but I was overwhelmed trying to discern who was worth my time. There were predatory upperclassmen who tried to hit on all the na\u00efve freshmen girls, trying to make an easy score. I didn't want to be a victim of that. All of that didn't really matter. However I may have felt back then, I didn't want to give him the satisfaction of thinking he was that important to me.\n\n\"You're delusional,\" I told him, shaking my head. \"Yeah, you humiliated me that day but that was because of my own insecurities, it had nothing to do with you.\" I tried to be as convincing as possible in that assertion. Akai studied my face intently, looking for any bit of nervous energy in my eyes -- a sign that I was lying. Finally his body language changed. He took a step back and slowly put away his deflating cock.\n\n\"Nevertheless,\" he sighed, \"I'm sorry.\" And there it was, the full apology I had been looking for 18 years ago but never received. It felt like a long-held tension was released somewhere deep within me. \"But I'm not sorry in the way you think,\" he continued. \"I'm sorry for not having a better way to flirt with you back then, and I'm sorry for not asking you out as soon as I met you. But hopefully I've convinced you today that that juicy ass of yours should be a thing of pride, not a thing of shame.\"\n\nAkai washed his hands while I stood in shock, seeing him and our history in a new light. After he dried his hands he turned to face me. I stood with my back against the door, holding me up on shaky legs.\n\n\"Are you gonna let me out, or is there something else you need?\" he asked, flirtatious smile still adorning his face. Speechless, I stepped aside and let him out, concealing my presence in there with him behind the door. I shut the door and locked it behind him, then went to pee myself. When I pulled down my panties, they were a sodden mess. I sat atop the porcelain bowl with my head in my hands as I released my bladder and tried to make sense of what I was feeling.\n\nOn the one hand, I was proud of myself for narrowly avoiding doing something that could have ruined my marriage. On the other hand, my body was a throbbing muddle of unfulfilled desire and my head was swirling with conflicting emotions. I ran my fingers across my vulva and found that my arousal had seeped all over. I couldn't resist bringing my coated fingers up to my face and smelling the heady pheromonal cocktail that had brought Akai to glorious full attention. As I remembered his beautiful flesh in my mind, my pussy contracted, signaling her discontent that I let it leave the room instead of stuffing it inside of her.\n\nI contemplated taking five minutes and masturbating right there in Gayle's bathroom but then thought better of it. At that point, my fingers wouldn't satisfy me. Plus, Gayle needed me out there helping get everything ready. The boys would be back soon and as her best friend, I was her right hand. I decided I would just have to wait for release. One thing was for sure, though: as soon as Drew and I got home that night, I was gonna fuck his brains out. It felt wrong, actively planning to fuck my husband while fantasizing about another man, but that seemed better than adultery.\n\nI hurriedly cleaned myself up then went back to join the growing crowd of friends who were now arriving in droves to surprise Mike once he and Drew returned from their Giant's game. I did my best to make small talk with everyone as we put the last decorative touches on the house. Truthfully, I was still distracted but I had a new sense of resolve. That is, up until the drinks started being served.\n\nSatisfied that all the food and decorations were in order, Gayle started making pitchers of margaritas. We knew the boys would be drinking beers at the game, and we wanted to be in a matching mood when they returned. She used generous amounts of Patr\u00f3n and Cointreau then topped them off with a splash of Amaretto and served them on the rocks with salt. Pure perfection. Since Mike was turning 40 she'd figured she could splurge for top shelf. After a couple of those I was much less tense. I was feeling festive and no longer distracted by my earlier dalliance, and that was a good thing. So I thought...\n\nMaybe I let my guard down. The kitchen grew crowded where we were gathered, drinking and toasting while we awaited Drew's text that they were on their way home. At some point Akai came through the crowd needing to pass me on his way to the refrigerator. As he did I felt a hand discretely slide across my ass and give it a squeeze. I nearly jumped out of my skin and almost spilled my margarita all over Chris, another one of our friends from college. I looked in Akai's direction but he never looked back at me, never acknowledge that he was the guilty party.\n\nI turned and started talking to Larissa, one of our more recent friends. From that angle, I could keep a better eye on Akai and make sure that I didn't present my back to him. When he was on his way back from the fridge, he paused right next to me to talk to Chris. We stood shoulder to shoulder for a second until the natural shifting of the crowd had us back to back. I tensed at what I thought was coming but when it didn't happen right away I thought for sure his senses had finally come to him. Oh how wrong I was!\n\nOnce Akai was finished shaking hands and giving pounds to all those gathered around us, the hand not holding his drink subtly slipped behind his back and took a firm grip of my ass cheek, discretely hidden from anyone's view. I didn't want to slap his hand away and make a scene for fear that a guilty look of enjoyment on my face might implicate me in his indiscretion. But I also didn't want to not do anything and risk someone seeing and thinking that I was OK with it. As I contemplated how to respond, Akai took my lack of immediate action as his green light and for the second time that evening began a deep tissue massage of my ass.\n\nI was appalled at his boldness, to paw at me like that in a room crowded with all of our friends. But to my shame, my body found the naughty dangerous nature of the act extremely arousing. If I didn't get away from him soon there'd be a trickle of nervous excitement running down my thighs, and it wouldn't be sweat.\n\n\"Let's go sit in the living room,\" I said to Larissa, grabbing her hand. I pulled her out of the kitchen without waiting for her reply. \"I was getting claustrophobic in there,\" I lied.\n\nNo sooner had we sat down before Gayle announced that the boys were on their way home and would be there in 10 minutes. She gathered us around to give us our final instructions. She wanted Mike all the way in the house before we jumped out and yelled 'SURPRISE!', so we were going to turn all the lights out and hide again. We didn't all need to be completely tucked away, just out of the foyer and not visible from the living room. Some folks hid in the downstairs bathroom, some in the kitchen, some out the back door to the backyard, and a few more out the side door to the garage.\n\nAkai ran straight to the coat closet and caught my eye as he did so. The look he gave me challenged me to go join him. He wanted more and suspected I wanted to give it to him. I had but a split second to decide as I saw Chris begin to make his way for the closet as well. I quickly stepped in behind Akai then turned and told Chris a half truth that would surely damn my soul to hell.\n\n\"There's only room for two people to stand up in here,\" I said, omitting the fact that Akai had no plans of standing. The last thing I wanted was another audience. Chris took the hint and hid somewhere else. I quickly pulled the closet door shut to close us in. Still standing, Akai began to squat when I grabbed his arm and pulled him back upright.\n\n\"Listen,\" I whispered. My tone was stern. \"No fingers inside me,\" I insisted, composing a plan on the fly. Sometime during the thirty seconds since I had made the rash decision to go back into that closet, I reasoned that it was ok to let Akai get me all worked up as long as my resolve was strong that the end result would only be me going home to fuck my husband with a wetter pussy. That way, everyone would win. Akai would get to play with what he desired, I'd get the extra attention I was craving, and my husband would get the best fuck he'd had in five years. The only problem was that I don't think it was my mind that did the reasoning, so the plan might have had a few holes in it.\n\n\"Do you understand?\" I asked him, nails slightly digging into his wonderfully firm bicep.\n\n\"Yes,\" he replied simply.\n\n\"Do you swear? Don't break my trust, Akai.\"\n\n\"I promise, no fingers,\" he whispered back. I let his arm go as we heard the last of the party guests scramble off to their hiding places. Akai immediately sunk to his knees and scooted behind me. We had about five minutes. I leaned over a bit and arched my back in eager anticipation, anxious for his strong fingers to return to my haunches and work their magic. I should have known better.\n\nCool air swirled around my thighs as the hem of my dress was quickly pulled up and draped around my waist, exposing my full backside. It was pitch black without even a tiny sliver of light so he used his lips to see. Thick plush lips rained soft kisses along my exposed flesh, raising my skin in a sea of little bumps of nervous excitement. He kissed every inch of each of my globes, getting dangerously close to the crack but never breaching it. Akai Anthony Anderson was kissing my ass, and it felt wonderful.\n\nThe only problem was that in my mind, it was supposed to be an act of humiliation for him. In reality, it was an act of lust that I couldn't truthfully say was one sided. It was growing dangerously out of hand. Soft kisses became mischievous licks, laving my flesh in tender affection. The part of me of which I was most ashamed, the part which felt the most unattractive, was being loved and worshipped. My body melted in response.\n\nAkai's breathing grew heavier and I knew he was relishing my musky scent. As my pussy got wetter, I began to smell it myself. Suddenly I felt a hand on the small of my back arching it further. In the next instant his nose and lips were nuzzling into the wet gusset of my thong, inhaling deeply. I let out a long hiss, feeling his face make forbidden contact with my sex. It had been 17 years since anyone other than Drew had touched me there.\n\n\"My god, Nivia!\" I heard him whisper as his senses drowned in the funky scent of both my little holes. Guilt and desire waged a war to the death inside my head. Finally, my hips pushed back into Akai's face, signaling desire's edge.\n\nI wasn't sure what it was the first time it happened. Even after the second time I convinced myself that I needed a little added confirmation. I pushed back a little further and heard Akai grunt as his tongue came out and give a long firm lick to the outside of my panties, the part covering my leaking pussy. I shuddered and we both groaned as he tasted me.\n\nI should have stopped things there but I couldn't quite find the willpower to stand erect and pull my dress down. Instead, my hips started gyrating against his visage, searching... craving more. I was acutely aware that there was only a thin sliver of fabric separating us from adultery, a slippery Clintonian technicality if there ever was one. Warm exhalations from his nostrils blew over my sensitive anus sending chills up my back while his lips began to suck out the warm juices absorbed in the crotch of my panties.\n\n\"Oh fuck,\" slipped from my lips. I was wildly turned on by his nasty enjoyment of being smothered in my ass while tasting my leaking sex. Looking back, if I could pinpoint an instance where we should have stopped and gone no further, it was right there. But we were both reaching a point of critical lust from which it is nearly impossible to turn back.\n\nStrong hands separated my cheeks and Akai nudged his face in further, licking a trail that went from the crotch of my panties up along the thong to the waistband. I could feel his tongue making contact with my warm musky flesh on either side of the narrow fabric, the last flimsy barrier guarding my fidelity. Then in the blink of an eye, even that was gone.\n\nMy eyes nearly bulged out of their sockets when I felt the thin wisps of material that were protecting my last bit of virtue suddenly pooled around my ankles.\n\n\"Akai! You promised!\" I hissed at him, simultaneously lifting my right ankle to step out of my thong and spreading my stance a bit.\n\n\"And I keep my promises,\" he whispered as his hands returned to my ass and began kneading my cheeks before spreading them again. I felt the heat from his skin and warmth of his breath as he drew to within a few millimeters of me, and I tensed up in anticipation. He held me in agonizing suspense as he pried me open and took a minute to just breathe me in. I could feel my nectar oozing down the inside of my thigh and I knew he was filling his lungs with my pungency. It was like he was testing both of us to see who could hold out the longest. I don't know who broke first. \"I swear, no fingers inside you\" was the last thing he managed to say before his face was buried in me, muzzling all further sound.\n\nI couldn't believe what we were doing, I couldn't believe I was letting it happen, but it felt too good to stop. Akai lapped my pussy hungrily, with his nose pressed tightly against my dirty little anus. I found myself rutting against him, rushing toward my orgasm knowing that we had little time. His tongue was wonderfully dexterous, sliding deeply inside my gooey hole before searching out my clitoris and swirling over it. He was greedy with my sex as he slurped up my juices, and I worried that someone would hear us outside the closet as he drank hungrily from my body. Back and forth he went, tasting me, drinking me, smelling me, driving me crazy.\n\n\"They'll be here any minute, guys,\" we heard Gayle yell from somewhere inside the house. I was close, and in spite of my better judgment I desperately wanted to cum all over his face. A couple of fingers thrust inside of me would have done the trick, and I cursed myself for making him promise to do no such thing. I began to grind against his face, almost there, racing toward my climax.\n\n\"Ok, they're pulling up now. Two more minutes!\" Gayle called out. That's when my convulsions started. They began in my center, then went down to my toes before surging back up, wracking my upper body. I felt a gush of fresh nectar leak from my molten center and Akai's mouth was right there, sucking and licking up every drop. Then he did something that shocked the holy shit out of me. Holding me spread open wide, just as my orgasm was subsiding Akai withdrew his tongue from my gushing pussy and moved it up an inch. Centering it on my crinkly little folds, he paused ever so briefly trying to push the tip inside.\n\nI stood dumbfounded with my mouth agape as we heard the front door open signaling Mike and Drew's arrival. My husband stood a mere five feet from where I was hidden in that closet, while another man was trying to tongue-fuck my ass. I felt so dirty, so wrong, which only drew out my orgasm further. I bit into my forearm to silence the cry of ecstasy trying to escape my lungs.",
        "Akai took the last second to briefly swirl the tip of his tongue around inside my tight musky hole before withdrawing just as briefly and pulling my dress back down. At that very second we heard Gayle ask our husbands who won the game, which was our cue. I was still recovering, but Akai pushed the closet door open and pushed us both out of the closet, just in time to yell 'surprise' with the rest of the gang. We definitely caught Mike off-guard, but I'm quite certain that the look of raw shock and awe on my face paled in comparison to his.\n\nWe all lined up to hug Mike before my husband, Drew, came over to kiss me hello. \"You ok?\" he asked me.\n\n\"Of course! Why?\" I asked, trying not to sound nervous about the fact that I had just had an orgasm from one of our good friends thoroughly eating me out and that I was standing before him with no panties on.\n\n\"You're flushed and all sweaty,\" he replied.\n\n\"It was hot in that closet!\" I recovered. \"You guys took forever to get here after you called.\"\n\n\"Hey,\" he complained, \"I did just what Gayle told me. If we got here and you all weren't ready, I wasn't gonna have anyone blaming me!\"\n\n\"Don't get defensive baby,\" I soothed, \"I'm just letting you know what happened. Plus, we started drinking about an hour ago. We knew you would have had a few beers, and we wanted to be in full party mode when you got here.\" It was only out of pure adrenaline and fear that I was able to keep a conversation going with him at that point, as clouded as my head remained. I quickly glanced over at Akai only to see that he was laughing and joking in a completely relaxed manner. I couldn't believe that he could be so nonchalant about what we had just done. I prayed that he didn't get to close to anyone less they smell my pussy all over his face.\n\nI also felt terribly exposed with nothing covering my dripping sex under my skirt. I feared that they were on the floor of Gayle's closet, and that anyone who went in there to retrieve a coat might discover them laying there in a wet heap. That would be a bit hard to explain. I palmed an earring to give myself a cover story of looking for lost jewelry in case anyone asked what I was doing, then went back to the scene of my crime to search for my incriminating undergarments. I searched frantically but they were nowhere to be found. I turned and nervously scanned the room and found Akai watching me out of the corner of his eye. He winked at me, knowing my search was in vain. Damn him!\n\nI had to spend another 40 minutes or so hanging out (in more ways than one!) and making small talk before I was able to catch Akai alone in the kitchen retrieving a beer from the fridge. \"Did you take my panties?\" I hissed discretely.\n\n\"Got 'em right here,\" he said, patting the left pocket in his black jeans.\n\n\"Well hand 'em over,\" I told him, \"I can't walk around going all 'commando' for the rest of the night.\"\n\n\"I don't think I can do that,\" he replied.\n\n\"Akai, we had our fun, but this has to stop. I was stupid to let it go this far, putting my marriage at risk.\"\n\n\"Relax,\" he said. \"I'm not trying to ruin your marriage, and you weren't stupid. We've had that tension between us for almost 20 years. It needed to be released.\"\n\n\"Fine, whatever, it's released and now we can move on so just give me my draw's already.\"\n\n\"Don't try to give me that sarcastic attitude and act like you didn't feel it.\"\n\n\"You cocky motherfucker...\"\n\n\"I didn't mean it like that,\" he interrupted me. Then he grabbed my hand and placed it on the bulge in the front of his jeans. If it wasn't for the large island in Gayle's kitchen, anyone in the living room would have seen me fondling him. \"You feel that?\" Indeed, I felt it throb beneath the denim. It was warm to the touch, and hard as stone. \"I've been like that for over the last hour, smelling you on my face. Your flavor still lingers in my mouth. That's some damn good stank you got, girl,\" he said, licking his lips for emphasis. I had to pull my hand away as his cock grew hotter, pulsing beneath my touch. My juices were about to start flowing all over again. \"I'm gonna hold on to these while I wait for you, so I can pull them out and smell that sweet funk whenever I need a reminder.\"\n\n\"Wait for me?! Wait for me to do what?!\" I asked, becoming indignant.\n\n\"Wait for you to figure it out,\" he said simply, as if he wasn't being perfectly cryptic.\n\n\"Figure what out?\" My impatience was showing in my tone.\n\n\"That we're not quite done yet.\"\n\n\"Oh yes we are!\"\n\n\"I don't think so,\" he said coolly. \"We just scratched the surface. There's still tension between us that needs to be relieved and sooner or later we need to face it.\"\n\n\"Even if that were true, this is hardly the place for it!\" I was starting to get heated, and grew increasingly worried that someone would see us and immediately know that we weren't engaged in mere idle party chit chat.\n\n\"Look, I didn't plan for this to happen, and certainly didn't plan for it to happen like this today, here in front of all of our friends. So how it got started may have been out of our control, but we can control how and where it ends. Take all the time you need to figure it out for yourself and then when you're ready, come to me and we'll finish this.\" With that, he walked off to join the rest of the party leaving me flustered, frustrated, and confused.\n\nIt seemed like everyone else was having a great time while I struggled to even stay focused on a single conversation. So consumed was I with lust, guilt and anger that I couldn't even enjoy myself. I was scared to have another drink after my earlier indiscretion, afraid that with more alcohol I might do something real stupid like take Akai into a spare bedroom and fuck his brains out. Finally I just had to get out of there. Even though Drew was having a good time, I told him that we needed to go before he got too tired and wasted to fuck me properly when we got home. He looked at me funny for a quick second but didn't complain. Our kids usually kept us so worn out that sex had become an exhausted once-a-week affair, usually for only about 10 minutes or so, and rarely very inspired. With our kids at their grandmother's that weekend, Drew knew it was a rare chance to get in some good lovin', so he quickly hugged Mike and Gayle and said his goodbyes to take me home.\n\nThe sex wasn't even that good. It was great for Drew -- I was plenty wet and he got all excited, thinking it was all for him. I, however, was mostly frustrated: thinking about Akai, hoping Drew would do to me what Akai had done earlier, and feeling guilty for having those thoughts. Poor Drew was in an impossible position. I had conditioned him over the years to ignore my ass and pretend it didn't exist. He knew it was off limits. Now I wanted it played with, kissed and licked, but I couldn't ask him to do it. Part of me still felt that my ass was gross. I couldn't imagine any sane person wanting to do what Akai had done to me earlier. If I asked Drew to give my butt that kind of attention and he rejected me, I would have felt really stupid and even more insecure. Plus, I'd have a lot to explain.\n\nSo I went unfulfilled. After it was over, Drew rolled over and fell into a coma. It was probably some of the best sleep he'd had in years. I was genuinely happy for him and pleased that I brought him pleasure. I gave him a light kiss then rolled to my side of the bed, where I tossed and turned all night.\n\n******\n\nWeeks went by, and every single day I found myself in an intense internal struggle. I'd pick up my phone, search for Akai's number, and almost hit 'dial' over and over again all day, each and every day. I came up with all kinds of pretenses to need to talk to him but it was no use. He and I would both know that there was only one reason for my call.\n\nEvery time my phone rang I got a little excited, wishing it would be him initiating the call. I checked my email incessantly, hoping that he'd take the first step and alleviate some of my own responsibility and the complicity I'd feel if I took the first step. I took to doing my grocery shopping at the supermarket closest to his house, hoping to \"accidentally\" bump into him. Nothing seemed to work.\n\nI started leaving little comments on his pictures on Facebook, expecting he'd comment in response and start a conversation. He completely ignored me! That pissed me off! He knew I was trying, knew I was opening a door for him, trying to meet him halfway. And I knew he wanted me. But he was going to force me to ask for it. Finally, it wasn't my lust that got the better of me, it was anger.\n\nIt happened on a Thursday morning. We had our staff meetings on Thursday mornings. It was the only day of the week I had to endure direct contact with my boss. My boss was a bitch. I hated Thursday mornings. At this particular staff meeting, I had to present on my team's progress. After my presentation, my boss lit into me with her criticisms. Usually, I'd sit there and take it then drown my sorrows in two bottles of wine after work and force poor Drew to listen to me bitch. This time, I pulled out my phone, right in the middle of the meeting while my boss was busting my ovaries. I pulled up Akai's number.\n\n\"Hey asshole,\" I texted.\n\n\"Nivia?\" he responded a second later.\n\n\"Where are you?\"\n\n\"At work. Why?\"\n\n\"Say you're feeling sick, and meet me at your house in 30 mins.\"\n\n\"Seriously? I'm in the middle of some important shit,\" Akai protested.\n\n\"Now or never, asshole,\" I insisted. If I was gonna to go to hell, I was going on my own terms.\n\n\"Are you texting while I'm talking to you?!\" my boss asked indignantly, just as Akai's response came in. I glanced down at my phone.\n\n\"Yup,\" I answered with a smirk. \"I think I'm ill. I'm going home.\" With that, I got up and walked out. I didn't even go back to my office. I went straight to the elevator and took it down to the parking lot, hopped into my car, and headed his way. On the drive over my conscience spoke to me and I made a devil's bargain with my Lord and Savior to justify my actions. I was only going to let Akai finish doing to me what he had started in Gayle's closet two months ago, but no more. I also vowed that there would be no kissing, as that would be too intimate to not count as cheating. If it was only oral sex and I didn't reciprocate, it wouldn't count as adultery, right?\n\nSatan must have been looking out for us because we arrived at the same time and miraculously pulled up to two empty parking spaces directly in front of his Victorian row house. It had been a while since I'd been there, not since his divorce two years prior. I got out of my car and joined him up on his porch. I stood with my pulse racing, heart in my throat, panties wet, feeling wild and crazy. If I had planned for that to be the day that I gave in, I would have waxed or something and wore some sexier undies. Oh well.\n\nHe said nothing to me, just gave me a knowing smile. I wanted to sit on his face and wipe that smug smirk right off of it. My glare told him as much. His smirk grew even bigger.\n\nIf I thought he was just going to get down on his knees and start worshiping my fleshy tush, I was sadly mistaken. He calmly walked over to his liquor stash and poured himself a tumbler of brandy, eying me lasciviously. Our battle of wills was obviously not over.\n\n\"Well?\" he asked finally, one eyebrow cocked.\n\n\"If you're going to insist on being an ass about this, I can still change my mind, you know.\"\n\n\"You started with the hostilities over the phone. 'Akai, I've missed you,' or 'I'd really like to see you' would have worked so much better.\" He was right. Truth was, I was using aggression to hide my nervousness. Finally standing in his living room, I wasn't sure if I could actually go through with it. I decided I would try to be honest.\n\n\"This is hard for me,\" I explained, looking around anxiously.\n\n\"It's been hard for me since I saw your text on my phone this morning,\" was his lustful response. I glanced down and realized that he was indeed sporting a handsome bulge. He caught me looking as my pulse quickened and the room suddenly became too hot for me. Tiny beads of sweat gathered at my temples, matching the moisture gathering in other places.\n\n\"I think you could use one of these,\" he said finally, motioning with the glass of amber fluid in his left hand. His was served neat. For me, he stepped into the kitchen to retrieve some ice. I normally drank wine, never anything much stronger, but when Akai handed the glass of Hennessy to me, I gulped it down.\n\n\"Come with me,\" he commanded softly after pouring me another one. He led me up the stairs and down the hall to his master bedroom suite. I stood at the threshold, trying to nurse my second drink, afraid to enter fully. It was like I thought the door might close behind me and I would never get to leave.\n\nAkai calmly ignored my nervousness as he walked over to the big glass sliding door leading out to his balcony. He drew the curtains aside, bathing the room in bright sunlight, then opened the sliding door and summoned me to join him. Akai's house was in the Haight Ashbury district of San Francisco -- he had purchased it just before the dot com boom made everything in the city unaffordable for all but the super-rich. The balcony off of his bedroom offered a breathtaking view of the city, the newly rebuilt bay bridge off in the distance.\n\n\"Enjoy the view, Nivia, I'll be right back,\" he told me, and disappeared into the house. I stepped out into the sunlight and did as instructed. I couldn't help it really, the view was just so spectacular. There were people out, walking up and down the street. A man waved at me and I waved back nervously, as if he knew the sinful deed that lay in my near future.\n\nAkai returned with a chair and plopped it down right behind me, then promptly sat in it. I began to turn to face him when two strong hands on my hips held me in place. \"Keep enjoying the view,\" he instructed, \"and I'll do the same.\" I sighed and took another sip of my cocktail. Perhaps that was just what I needed -- he could ogle my ass for a bit as I continued to get some liquid courage.\n\n\"Is my neighbor out there?\"\n\n\"There's a lot of people out here,\" I answered, taking another swig. \"Which one's your neighbor?\"\n\n\"Little old white haired lady across the street, usually out watering her flowers right about now.\"\n\n\"Yeah, she's out there.\" As if sensing someone talking about her, she looked over our way. \"Ooh, she's waving over here.\"\n\n\"Don't be rude,\" he admonished me, \"wave back.\" I did, and nearly jumped out of my skin as I felt my skirt being lifted from the back.\n\nThe balcony railing was solid, without posts, so no one could see what he was doing to me. Still, the prospect of being on public display frightened the hell out of me. My pulse quickened and my heart started racing but I made no effort to move or go inside. In fact, standing there with my lower half exposed to his lustful gaze provided an added tingle between my thighs. It was in that instant that I realized just how well attuned Akai was to my psyche. He knew I needed the distraction, and he'd figured out that the risk of being caught while we were messing around in Gayle's closet had given me a bit of an exhibitionist thrill. In the end, it's what made this encounter ultimately irresistible. Studying me for nearly 20 years, he'd figured out just how to push all my buttons.\n\n\"Sister Mary Francis,\" I heard him say as if he were testifying in church. I looked over my shoulder to see him just sitting, staring in admiration at my ass. A shit-eating grin adorned his face as he rubbed the growing bulge between his legs.\n\n\"Is that all you're gonna do, just watch?\" I asked, impatiently craving the feeling of his hands and lips on me again.\n\n\"No thong today, eh?\" he asked, ignoring my petulance.\n\n\"Coming here was not my plan when I got dressed this morning.\"\n\n\"I see,\" he contemplated. \"So what happened that made you decide you needed this today?\"\n\n\"I worked my butt off for this presentation I gave this morning,\" I started, getting heated just thinking about it. \"That bitch ignored all the blood and sweat we put into this project and just started busting my- oh god!\" Damn, that man had a way with his hands. As his thick muscular fingers dug into my flesh I could feel all the tension of the past two weeks seeping out of me. My bitch of a boss became a distant memory.\n\n\"Don't stop, finish telling me the story,\" he said, continuing to massage my ass.\n\n\"It's a bit hard to concentrate while you're doing that to me.\"\n\n\"Would you like me to stop?\"\n\n\"I most certainly would not,\" I moaned. Reluctantly, I continued to relay my day's events while his fingers worked their magic, rolling, pressing and kneading my cheeks. About halfway through my story came an interruption.\n\n\"I'm sorry, but these are in the way,\" he complained, tugging at the trim of my full-bottomed panties.\n\n\"Take them off, then\" I suggested, barely audibly.\n\n\"Not yet.\" Instead, he pulled the fabric into my crack creating a makeshift thong, which allowed his fingers direct access to more of my flesh. I turned over my shoulder and gave him a look that read, 'what the hell are you waiting for?' He smiled.\n\n\"Nivia,\" he began, planting a gentle kiss on each cheek, \"I know you're not planning on making a habit of this. Today is a gift that may not be repeated, so I'm gonna take my time and enjoy it.\" What could I say to that? A girl could ask for worse in a lover. I leaned over the railing, supporting my upper torso on my forearms, and resigned myself to his pace. He continued teasing me with little kisses while his hands turned stiff muscles into soft yielding flesh.\n\n\"I can smell you getting wetter,\" he groaned as I stood there leaking profusely. Unlike our episode in the closet, I felt this was a good development. I looked underneath me to peak at his crotch. His slacks were stiffly tented and I smiled to myself, more confident in the effect I was having on him. I arched my back and pushed my butt closer to his face offering what I hoped would be an irresistible temptation. A second later I felt the coarse short hairs on his chin scraping my tender crevice in an attempt to bury his nose in the source of my musk. My smile broadened. Unsatisfied with the cotton material blocking his access, my undies got yanked down to my ankles a moment after. I had won that battle.\n\nAkai pulled my cheeks apart as far as they would go, lewdly spreading me for his gaze. For a minute he just held me open and I knew he was studying me. My muscles clenched involuntarily from nervousness at being so wantonly displayed. I felt the ring of my anus tighten and could just barely hear the faint squish of my wet lips sliding together.\n\n\"Sweet mother of God,\" Akai groaned before pressing his face back inside and inhaling deeply. I shuddered, feeling his warm breath blowing over both my holes.\n\n\"Jesus woman... How is it possible that your ass smells so good?\"\n\nI didn't have the courage to answer. The truth had to do with one of the main reasons that I was so insecure about my butt. The crevice between my cheeks was so deep that I would typically get sweaty in there during the course of a day. When I was a teenager I began to notice that when I took my clothes off at night I could smell myself getting ripe. My biggest fear became that one day I'd be getting intimate with a boyfriend who would strip me of my clothes only to get turned off because my butt crack was so musty. My insecurities about it consumed me.\n\nConsequently, I became a fanatic about my anal hygiene. At every bath I scrubbed myself thoroughly, both inside and out, to make sure I washed away every single trace of potential stink. Over the years I experimented with applying different powders, lotions and body sprays after my bath, until I was satisfied that even by the end of a long hard day I didn't offend.",
        "In all those years my ritualized butt cleaning was never sexual in any way. That is, not until Mike's 40<sup>th</sup> birthday party when Akai changed my whole understanding of myself after 10 minutes in the closet. Not only was he not turned off by having his nose pressed directly into my ass, but he relished my scent so much that he dared go in for a taste, all too brief as it was. With one swipe of his tongue he turned my chaste and innocent anus into a very horny erogenous zone.\n\nFrom that day forward, my little hygiene ritual took on all new significance. Every time I inserted a soapy digit to clean myself back there, I was reminded of his tongue and how good it felt. My fingers began to linger, truthfully not just there for hygiene any more -- though I never admitted that to myself. I probably had the cleanest ass in San Francisco, and that morning was no different. I slid my soapy middle finger in and out of my ass for a good five minutes in the shower that morning while thinking of Akai, then powdered and perfumed afterward. My pussy was unwaxed but no one would ever catch me with my ass dirty. I was dying to hear Akai's groans of approval at all my hard work.\n\nI guess his question was rhetorical because he didn't wait for my answer. I let out a breath I didn't know I was holding when I felt his face press back into my cleft as he pressed a tender kiss into my drooling lips. He resumed his huge intakes of air and I got a wicked thrill knowing where he was smelling me and how much he was loving it. Eyes closed, I basked in the late morning sunlight feeling a warm glow from both ends as Akai nuzzled his features further into my sex. Wrapping both arms around my thighs, he pulled me tightly to him making sure there was no escape. Still only kissing and smelling, his head began to slowly rotate and I felt my labia slide over every feature of his face, leaving a thick sheen of pussy slime in their wake. No one had ever taken such pleasure in eating me like this.\n\nHe teased me mercilessly like that for what seemed like an eternity, working me to a fever pitch of desperate need. Just when I thought I couldn't take it any longer, his tongue slid deeply into my sex to provide some relief. His tongue was divine, longer than I expected it to be, and Akai sensuously worked it in and out of me, relishing my taste. He was methodical in his exploration of my sex, like a blind man feeling his way around a room for the first time; probing, touching every surface with a gentle caress. He actually ate pussy like a lesbian, not the hard and aggressive way to which I had become accustomed from most men. I let out a groan in appreciation and began to gently hump his face.\n\nBy no gross oversight he was avoiding my clit. He knew I was close and didn't want to push me over the edge too quickly before enjoying me thoroughly. Releasing my thighs from his grip, his hands rose to take a firm hold of each of my ass cheeks and spread them further apart. This allowed him to push his face further into me and slide his tongue that much deeper. Satisfied at his new depth, he then pushed my cheeks closed around his face, smothering himself in my ass. His bottom lip was making the slightest contact with my clit while his nose swathed my anus in continual warm baths of air, sending chills up my spine. On and on he went -- grunting, tasting, savoring, swallowing, going back for more. My soft thighs were gripping his scruffy chin, creating the most delicious friction. My unwaxed pubic hair was prickling his lips and tongue while my tight opening fragrantly sucked at his nose. I became lightheaded and forgot where I was.\n\nOne little inch. One little inch. It's such a short distance but depending on the context crossing that brief expanse can take you into a whole other world. When Akai crossed this distance, moving his lips just that much higher, I came undone. Even though it is what I had been craving for the past two months, I was still caught off guard when I felt that first flick of his tongue across my tinnier hole.\n\nI yelped and dropped the glass I was holding; a split second later came the crash on the sidewalk below. If Akai noticed it he wasn't bothered enough to stop what he was doing. I, on the other hand, went into a brief mode of panic. My eyes flew open wide as I scanned to see if anyone was looking our way in an attempt to determine what all the commotion was about.\n\nThe little old lady across the street was looking dead at me, no longer bent over weeding her garden. Two pedestrians were stopped in their tracks looking up at the balcony. My skin is very tan, really a very light brown, but I must have turned three different shades of red. I tried to wave and smile as if to signal that everything was ok, but I cannot imagine what my face must have looked like, all contorted in ecstasy. It's hard to keep a straight face when a devilishly long tongue is forcing your asshole open, probing to get a better taste of you inside.\n\nThis, I was not expecting. For some reason (that I feel absolutely silly and na\u00efve about now) it never occurred to me that Akai would be so obsessed with licking inside me back there. I assumed that he would mostly just lick the outside, or maybe insert just the very tip of his tongue. God knows that felt good enough on its own. I never imagined that he was such a pervert and all these years harbored this desire to put his tongue so deep in my nasty place.\n\nA million emotions washed over me as Akai orally deflowered my most private opening. At first, I relished having him in such a subordinate position of humiliation. I couldn't imagine why he would allow himself to be so vulnerable before me, but I was going to enjoy it. Then it hit me like a two ton boulder crashing down on me. Akai was allowing himself to be so vulnerable in order to help me heal from the scars left by his unwitting exploitation of my deepest vulnerability so many years before. I thought back to the years I spent consumed with shame and embarrassment feeling that my butt was fat and ugly. Now that very same part of me was being worshipped as a thing of beauty. One after another, my greatest insecurities were licked away.\n\nI rode Akai's face up into the clouds where little cherubs greeted me and brought me to a tall, gilded gate. The gate overlooked a garden of radiant sunbeams bursting through fluffy white billows. Just basking in the warm presence of the gate was divine but I knew nirvana lay on the other side. For some reason, they weren't yet letting me enter. I begged and pleaded, shamefully desperate for release. Hearing my pleas, Akai took mercy on me and brought one hand up between my legs to my dripping sex. Deftly he inserted two fingers through my folds and into my gooey hole and began massaging my g-spot while his thumb played with my clit. His lips remained in an air-tight seal around my anus while his tongue swirled deeper inside my funky hole, and I saw stars. The gate flew open and I fell over the precipice in a free-fall dive into the purest ecstasy I've ever known.\n\nI cried out into the morning air as a dam burst inside me, not caring who might be looking at that point. The dam was both mental and physical, as I felt my emotions soar while I baptized Akai in the deluge from my pulsing sex. When I grew too sensitive and couldn't take it any longer, he withdrew his fingers and peeled his face from between my now sweaty cheeks then pulled me back to sit on his lap. He held me snugly as I gasped for breath. Then I felt his lips against my neck and his deep voice sent vibrations through my skin.\n\n\"You were absolutely delicious, Nivia\" he groaned and I felt his tumescent flesh throbbing beneath me, poking up into my ass through his pants. I wanted to say 'thank you' but I couldn't talk because suddenly my mouth was full - Akai had shoved two fingers coated with my pussy juices in there.\n\nI'm sure he wanted to taste it more than me but I was being tested to see if he had successfully put me into feral sex overdrive. There was not a split second of hesitation -- I sucked his fingers clean, just like a good little cunt should. He groaned, watching me devour my pussy cream and in the next split second his lips attacked me. Replacing his slimy digits, his tongue shot into my mouth. Our first kiss. The very thing I had vowed not to do. Given where his tongue had been for the last fifteen minutes, the revulsion I should have felt was overcome by the naughty thrill of tasting my most intimate flavors so pungent in his mouth. The heady cocktail stoked my fire even further as I kissed Akai passionately, hungry for more... much more.\n\nI stood up and turned to face him, then straddled his lap and sat back down. Wrapping my arms around his neck, I resumed our kiss while grinding on his sheathed cock. I wasn't going to fuck him but my pussy was sure hungry for something thicker inside of her. A little grinding would have to do until I could get home to my vibrator, I told myself. I was totally staining his slacks with the gooey mess seeping out of me but Akai didn't seem to mind. He held me close with one hand rubbing my back while the other cupped and squeezed my naked ass under my skirt. As our kiss deepened even further, Akai was holding me so tight that I had a sudden revelation: with a shock I realized that he felt a lot more for me than just lust. In that instant, everything became a lot more heavy.\n\nI stopped kissing him and looked deeply into his brown eyes, still grinding on his dick. It was like my sex had a mind of her own. So did his hands. Holding my cheeks apart he slipped a naughty finger into my forbidden passage, now well lubed with his saliva. I groaned as my head rolled back and my mouth fell open, then I pushed my hips down even harder.\n\n\"Ooh, look at that,\" he whispered. I opened my eyes to see him staring at our junction in his lap, wide smile on his face. His shaft was like a slab of granite standing up at attention, unbending while it supported nearly half of my weight. I had totally slimed the front of his pants, so much so that his crown was actually able to slip inside me. It made for a very lewd sight, my labia draped around the head of his cock fighting valiantly to break through his trousers and get into my pussy.\n\nHe knew. He didn't have to ask or command, he just stood and presented his tented crotch to me. I took his place seated in the chair as he leaned back against the balcony, then I tore at his belt and his slacks, unable to get them off fast enough. I was starving to taste that beautiful phallus that responded to my body so faithfully, just as he had shown me in Gayle's bathroom two months ago and just as I had felt pulsing beneath me a second ago. I didn't even allow him the courtesy of comfortably taking his pants and black Calvin Klein boxers all the way off. As soon as they were down past his balls, I began to devour him.\n\nI gave Akai the most inspired blowjob of my life, eager to demonstrate just how grateful I was for what he had made me feel. Our positioning was a bit awkward so I couldn't swallow him as deeply as I wanted, but I didn't let that stop me. I swirled my tongue around the pulsing knob of his swollen shaft between bobs. With each descent I could smell the intoxicating musk of his manliness and inhaled it deeply. I savored the feel of his velvety skin on my tongue and the musk so strongly concentrated in his pubes. The more of him I breathed in the more I felt my self-control fading, until I was devouring him with naked abandon.\n\n\"This is all we're gonna do,\" I maintained as I licked and slurped up the pre cum dribbling from his tiny pee hole. \"I can't let you fuck me.\" It was my way of telling him not to hold back, to take all the pleasure he could from my mouth because that was the only orifice of mine that his dick was getting into. I already felt guilty enough. I had to be strong and bring our little tryst to a close after I sucked him off.\n\n\"Is that so?\" he asked, chuckling. I almost bit him to wipe that cocky grin off of his face, but I couldn't hurt that beautiful flesh throbbing in my mouth.\n\n\"I'm serious!\" I insisted, pulling my lips off of him. \"We can't do that to Drew.\"\n\nHe didn't respond one way or another. Instead, he took the opportunity to kick off his shoes and finish removing his pants and boxers. Off flew his shirt next and suddenly he stood there naked before me, every stitch of his clothing piled in a heap on the balcony floor. He reached for my hand. \"Come with me, Nivia,\" he said softly.\n\nCuriosity killed this cat. Nervous that he would try and fuck me anyway but too curious not to see what he wanted, I took his hand and stood. He led me into his bedroom then released my hand as he crawled to the middle of his king-sized bed and sat, his back propped up against the massive carved wood head board. His cock stood up proudly, still glistening with my saliva. I licked my lips and began to crawl between his legs, eager to get it back in my mouth.\n\n\"Come this way,\" he instructed me, patting the bed by his side. \"This way I can touch you while you work,\" he smiled innocently. I obeyed, not knowing it would be my ultimate undoing. Akai positioned me with my head in his lap and my ass up in the air, facing out toward his balcony glass doors. My skirt was lifted back up around my waist, exposing my still slimy holes to the cool crisp bay air. No one from the street could see me but if anyone across the way looked through their second story window, they'd get a view of a full moon, glistening in its crevice.\n\nI hurriedly went back to trying to force Akai's girth down my throat while his fingers found my greasy holes. First he slid one finger into my pussy and slowly worked it in and out while I bobbed dutifully in his lap. With my right hand I cupped his balls and gently squeezed them while I sucked, eager to taste the milky contents inside. He groaned, then gently began to gyrate his hips up toward my face. Then he withdrew his finger and it was my turn to groan, but with disappointment, not with pleasure. I couldn't stay disappointed with him for long though, as the sound of lip smacking let me know that he was again sampling my juices. God, that man knew how to make me feel sexy.\n\nOnce he'd licked his finger clean he rubbed his hand down my back and returned to fingering me. Only this time, his middle finger slid into my pussy while his forefinger slid into my ass. I moaned again, and this time for all the right reasons. Then his ring finger joined his middle finger in my pussy, while his forefinger kept the same synchronized rhythm in my ass, playing my body like an instrument.\n\nOut of the corner of my eye I caught a glimpse of myself in the mirror across the room that sat atop his dresser. I made quite a sight: naked from the waist down, ass high up in the air spread for the world to see, getting finger fucked in both holes, and my head pushed down in Akai's lap with my mouth full of a dick that did not belong to my husband. Between my own slurps on his tool I could hear the squishy sound of his digits violating me, revealing the intense arousal that I derived from my sinful deed. I felt like such a dirty whore and hated myself for loving that feeling.\n\nMy eyes next searched for his reflection, dreading the look of smug conquest that I expected to see across his face. What I encountered instead surprised me. Akai watched me with an expression of pure adoration and affection, periodically tempered with a look of raw lust every time I took his cock to the back of my throat and tried to force it past my tonsils. He didn't know I was looking at him so his guard was down, and it was in that instant that I began to realize just what he felt for me. That realization changed the tenor of our whole encounter.\n\nIn her heart every girl has a desire -- some secret, some not so secret -- to be a dirty little whore for her lover. Some like to be called a dirty whore during sex, others like to be treated as one, but none of us truly want to be regarded (or disregarded) as one in our lover's heart. For Akai and I, this was the central issue in the tension between us. At the heart of our affair was his objectification of my ass -- something I initially loathed and was the source of 18 years of humiliation and shame. As much as I craved the way he was transforming my butt into a thing of beauty and source pleasure, I still wanted to be regarded as more than just a phat ass to him. This is a woman's eternal neuroses: the only thing worse than being objectified... is not being objectified.\n\nAs if reading my desire for additional assurance, his free left hand came up to lovingly caress my scalp while I continued worshiping his beautiful dick. I mewed at the additional contact and showed my appreciation by moving my mouth down to his heavy balls to suck up all of my drool that ran down his shaft. I lovingly sucked each testicle into my mouth and gently rolled them around with my tongue, bathing each one in lustful affection, then licked my way back up his shaft to devour his leaky tip.\n\nI was getting to him just as much as he was getting to me, and I felt his fingers weave through my hair and tighten their grip. I braced myself and tried to relax my throat in anticipation of the face fucking that I thought was imminent and which I was more than happy to accept from him, but again Akai surprised me. He pulled my mouth completely off his cock and turned my head to face him. A stringy line of his precum, shiny like spider silk in the morning sun, hung from my bottom lip to the tip of his pee slit, and I made no attempt to remove it. I caught the briefest glimpse of a feral look of lust and hunger before he slammed his lips into mine, sliding his tongue into my mouth and kissing me long and deep.\n\nThere was a ferocity to our kiss and I can't say that it was all his doing. My tongue sought out the taste and warmth of his mouth just as hungrily as his sought mine. I continued stroking him while I chewed on his succulent bottom lip as his fingers began to work faster in my holes. Pulling off the trifecta, his pinky finger began massaging my clit while his other fingers worked my pussy and ass.\n\nI saw stars and redoubled my efforts, slamming my face back down in his crotch. I had three-quarters of Akai's tumescent tool down my gullet, and I was determined to get those last two inches. I concentrated on the sensations coming from my lower half and struggled to suppress my gag reflex on my next pass, successfully taking an additional inch. I was close to cumming and I wanted to taste him when I did. Akai groaned as I struggled to breathe, tears rolling down my cheeks. I pushed myself again and again, but still couldn't get that last inch. With each attempt I felt his glans swell in my mouth, making it that much harder.\n\nIn the end it didn't matter. My valiant effort and raw desire pushed him over the edge. He was releasing a constant dribble of precum into my mouth while his hips took up a steady rhythm pushing up into my face. His breathing became more labored and I knew he was past that point of no return. Right before I could join him he ripped his fingers out of my holes, denying me my joint orgasm. I tried to pull my mouth off of him to voice my protest but he was quicker than me. His left hand took a tight grip of my hair and held me in place while his right hand wiped his slimy digits across my face and under my nose, making me smell what a dirty girl I was as he began to face fuck me. With his strength he forced my head down that last inch, smashing his pubes into my face.\n\n\"Yes Nivia, take all that dick baby,\" he croaked with his glans lodged past my esophagus and my nose full of his wiry pubic hairs. Panicking, my throat started involuntary contractions, trying desperately to swallow the thing obstructing my airway. The added suction was all he could take and I felt the surge rush from his balls and up his shaft before exploding down my throat.",
        "\"Aww fuck!\" was all he could manage to say before his speech degenerated into an anguished gurgle while his balls emptied their contents straight into my tummy. I still couldn't breathe and my arms began flailing, trying to call attention to my imminent demise if not released soon. Finally Akai relented, allowing me to pull the head of his shaft out of my throat where I could concentrate on licking the underside while he finished spewing the delicious goodness I so craved.\n\nHis last spurts were still strong, completely coating the inside of my mouth. His seed was thick on my tongue and I swirled it around so that all my taste buds could enjoy the different contours of his salty pungent flavor. I didn't let one drop escape, determined that I wanted take home every last bit of him inside me.\n\nWhen his head became too sensitive he tried to pull out of my mouth. I held onto him though, hungry for any last remnants. I stopped fluttering my tongue so as not to torture him but I continued sucking, making sure his long urethra was fully drained. I looked up at him and made eye contact while I held him in my mouth, gently cradling his still twitching shaft. He was literally putty in my mouth, and the slightest inadvertent movement of my tongue made him tremble in post-orgasmic spasms. I don't know what I expected to see in his eyes -- contentment, satisfaction, exhaustion -- but what I saw instead was enough to frighten me. There was a fire in his eyes, and I knew in that instant that whatever grandiose plans I had for limiting the extent of my adultery were shattered.\n\nI must have blinked. It happened so fast I couldn't tell you how it transpired. All I know is that in the blink of an eye our positions were reversed. One moment I was leaning over his lap, his still erect phallus twitching in my mouth, and the next moment I was on my back, legs spread high in the air, and Akai was on top of me with my ankles draped over his shoulders. He was poised to impale me but the panicked look in my eyes must have given him pause.\n\nI shook my head nervously, but I couldn't actually bring my lips to say the word 'no,' or 'don't.' He stared at me for a moment, his dark brown eyes taking me in. I must have looked a mess -- I knew my mascara would be everywhere from all the tears I shed trying to deepthroat him. I'm sure my hair and lipstick were a mess as well. He must have found it a beautiful sight, though, because slowly, very slowly, his lips came down to meet mine, still salty from the copious amount of his seed he'd just deposited there.\n\nIt started as a gentle, soothing kiss, in stark contrast to the thunder beating in his chest belying the ferocious pounding he was about to deliver to my needy sex. He knew I needed it, he was just giving me time to let my mind catch up to my body. As the kiss grew in intensity, I felt his warm and sensitive tip squelching against my sodden lips, sliding back and forth over my clit and down to my hungry opening. I couldn't believe how hard he remained -- the blood pressure in his shaft was just as high then as right before he unloaded down my throat.\n\n'Fuck, this is it,' I thought while sucking his tongue and grinding my hips up into him. Fifteen years of fidelity in marriage to a good husband had come down to this. Akai and I were going to have sex. Any pretense I had of technically not cheating on Drew with all we'd done up to that point was about to be shattered.\n\nAkai continued rubbing my pussy with his leaky cock, grinding its head against my clit in a spiral motion. Periodically he'd run it down the length of my soft folds to my opening. He must have done it more than twenty times but I lost count as the delirium set in from how horny I was. When the very tip of his cock finally wedged itself between my slick folds inside my opening, I stiffened.\n\n\"Akai!\" I begged, but I couldn't voice whether I was begging for him to stop or keep going. My hands flew to his chest, trying to hold him back with the last ounce of willpower I had. One shift of my hips and he'd be deep inside me. I could smell my wanton desire which hung thick in the air -- a blind deaf mute could tell how badly I wanted him in my pussy. He left his swollen glands resting at the threshold of my fidelity as I fought through my guilt, my wet labia softly clasping at the end of his penis in a perfect kiss. I wanted Akai to just do it and take the decision out of my hands as I lay there in disbelief at his restraint. Then it finally hit me. He had, and would continue to push me past every mental barrier I had save for this one. I would have to take the final step.\n\n\"Lord please forgive me,\" I whispered and with a gentle tug and a roll of my hips I broke the vow I made to God to never let another man past that threshold save for Drew. But forbidden fruit is always the sweetest, and I swooned from the divine acquiesce to temptation as I engulfed his first few inches in my warm nectar of sin. I bore down on him, my nubile sex squelching around his hardness, determined to wring the most possible pleasure out of my iniquity. Akai emitted a low guttural growl and the look in his eyes told me that this was the fulfillment of a long-held secret desire.\n\nWe held each other's gaze for what seemed like an eternity. The emotion in his eyes was so intense it made me nervous for what was coming. It was the calm before the storm. Neither of us moved, except for his bulbous head throbbing in my clenching sex. I was so wet we could hear it, tiny little squishy sounds every time he throbbed and every time I squeezed. The nasty chorus finally drew our eyes downward to take in the sexy sight of our adulterous union.\n\nWith my ankles dangling over his shoulders, we could see everything. Thanks to my Italian, Moroccan and Lebanese heritage, my skin was the complexion of amber honey but my labia and nipples were much darker, matching Akai's milk chocolate hue. His veiny rod stood proudly protruding from my hungry lips that clung to him wetly. He looked like he'd been dipped in fondue, still wet from all my saliva. My breathing labored as my resolve crumbled, and my hands released his chest and slid around to grip his taught sexy buttocks. I trembled with anticipation, unable to believe this was really happening. Finally one of his hands slid under me to cradle my head to hold that position, making sure I didn't look away as he slowly sliced his full length into me.\n\nThat first full stroke of infidelity was like having my cherry popped, except with all of the forbidden pleasure and none of the pain. My hips bucked up to meet his full length as my fingers dug into his muscular ass and pulled him into me tighter, relishing the sweet taboo of his dick buried so deep inside me. We both cried out in ecstasy.\n\nHe filled me oh so nicely -- I felt fuller than I'd been in a very long time. Sensing this, Akai gave me time to adjust, grinding his pubes into my clit, leaving little pearls of my nectar clinging to each curly hair. He slowly withdrew until just his tip remained between my lips and then slammed back into me. The sharp nip of pain from his head hitting my cervix let me know that he had not been all the way inside me the first time. I bit into his shoulder, warning him to be gentler and slower but I was too late. I felt all the kinetic energy in his muscles and knew he needed to pound me. And just like that he was fucking me... hard, slamming into my tender pussy with wild abandon.\n\nI lost my composure as all manner of obscenities escaped my lips. I didn't care. I was a bitch in heat by that point. His fingers working me while I sucked him off had seen to that. By not letting me cum at the same time that he was unloading down my throat, he'd left me feeling slutty and vulnerable, and trembling in desperate need. It was a terrifying yet masterful manipulation of my psyche. More than any other person on the face of this earth, he knew how to push my buttons to give us both what we needed.\n\nHis strokes were relentless. Because I had already sucked him off, he could pound me hard and deep with no threat of blowing another load anytime soon. My eyes stayed glued to the pornographic scene taking place between us as his shiny shaft pistoned in and out of me, each stroke lathering him in a thick fresh coat of the juices leaking profusely from my adulterous cunt.\n\nA tug on my long black mane broke my mesmerized stare, bringing my eyes up to focus on his. Akai held my gaze as he fucked me, watching intently as my eyes registered the sweet sting of his bulbous head abusing my cervix. Then his eyes traveled down the slightest bit, observing my lips as they trembled with every grunt that escaped them. In the next instant we were kissing furiously as he mauled my mouth with his own. The tastes of my ass and pussy still saturated his tongue, and the combined mental, oral, and physical onslaught became just too much for me.\n\nIt didn't come on gradually, but slammed into me in a sensory overload. For the third time that morning I was cumming. Grunting, reaching, clawing, convulsing -- through it all Akai kept pounding me, doggedly plundering my drooling snatch. He slowed his pace just a bit only to slam into me even harder, punctuating each stroke to produce successive convulsions. With one final lunge he struck home, and held himself in me balls deep while I rode out my final spasms, back arched up into the air. When it was over my muscles turned to jelly and I collapsed on the bed, mouth agape, panting and sweating.\n\nThere was quiet after the storm, as all of nature's fury turned gentle, loving and sweet. Akai lowered my legs to give them a rest and I curled them around his thighs to keep him inside me. I didn't have enough energy to fully lock them around his waist. I need not have worried, though, because he had no plans of withdrawing from me. He hadn't cum again, so he was still very hard and pulsing deep inside my tender sex, making my pussy twitch in response to each of his throbs. He brought himself down to his elbows, folding his forearms underneath me, and rained soft and gentle kisses all over my face. In that position, a good three-quarters of his weight was on me -- which I loved -- just enough to make me feel smothered in his warmth but not too much that I couldn't breathe.\n\nOnce I'd fully caught my breath and come down from my high, his throbs turned into a slow grind. When his lips found mine again and his tongue slid into my mouth, those grinds turned into full out gentle lovemaking. My body responded in kind but my guilt came rushing back to me, further compounded by this new turn of events. All the things I had told and promised to myself to temper the seriousness of my sinful infidelity were gone out the window. I came to his place with the plan of just letting him orally service me but not returning the favor. I wasn't supposed to kiss him, and definitely wouldn't let him fuck me. Now we were actually making love and it wasn't one-sided.\n\nFeelings I never knew I had were unleashed from somewhere deep inside me. I returned his kiss with my heart fully open, clinging to him tightly as he worked my body back into heat with each gentle long stroke inside of me. I would never be able to lie to myself and say that this was a meaningless fuck -- it was adultery of the first degree.\n\nWe made love like that for a good ten minutes, gentle and loving, rolling back and forth, giving me a chance to be on top. Eventually I wanted to feel the magnificent power and the rush of him pounding me again, and the look in my eyes and my changed breathing told him as much. Akai gently pulled me off of him and told me to get on my knees and stick my ass up in the air. I complied of course, but his cock looked so shiny and delicious still standing at full attention that I couldn't resist stopping to suck it down and taste our combined juices off of it. He groaned when I took him deep, swirling my tongue to dutifully clean the sticky mess I'd left all over him, then he groaned again when just as abruptly I stopped and bent to my assigned task.\n\nAs Akai moved behind me I thought he would plow right into me but apparently the sight of all my goodies displayed so lewdly proved an irresistible temptation to him as well. Suddenly his face was back between my cheeks as he gave one slow lick from my clit, deep into my pussy, up over my taint, deep into my asshole, all the way up the top of my crack, then repeated the same in reverse back down to my clit. As I shivered from the divine sensations he speared me again, but didn't start fucking me just yet. I thought he was just letting me adjust, because he got much deeper in my pussy from that position, and I knew my womb was in for a bruising. As I felt his hands spreading my cheeks as wide apart as possible, I suspected he had other ideas.\n\n\"That is SO fucking sexy,\" he growled, taking a deep breath. My muscles twitched nervously under his inspection as he smelled me, afraid of what he might do to me. Confirming my suspicions, an exploring thumb began to caress and rub around my tiny orifice, making what we were doing feel that much dirtier and all the more wrong. The thumb disappeared for a second then came back wet. It didn't just caress this time, but gently slid inside. I hissed at the intrusion.\n\nAkai kept it buried in there as he resumed fucking me. More surprising was to find out that he hadn't done it to stimulate me, but to possess me. He used his thumb-hold up my ass for a better grip to pull me back into his punishing strokes, letting me know in the process that that hole, too, was his to do with as he pleased. My mind was aghast but my pussy got even wetter. He felt it and he knew he had me. He started sliding his thumb in and out of my asshole in counter strokes to his relentless cock. I swooned.\n\n\"You filthy bastard,\" I groaned on the verge of cumming, pushing back into his hips. That's when he pulled out of both my holes completely. I almost cried at his cruelty and from the empty sense of withdrawal. Before I could turn to give him a look of indignation, I felt his mushroom head slide up one inch over my perineum and nestle into my anus. My eyes flew wide in shock. He wouldn't, would he?\n\n\"Akai!\" I screamed as he pushed his cock against my ass, but I still couldn't find the word 'stop.' I could feel his bulbous tip stretching my tiny hole. I was clenched up tight in a panic, but resistance was futile. I was too wet and he was too hard. His iron grip on my hips let me know that I wasn't going anywhere. He just kept pushing, his frenulum spreading me open more. It just wasn't right. I had already gone too far, I couldn't do this as well.\n\nI reared up to try and put a halt to things and Akai wrapped his strong arms around me and pressed me into his beautiful chest. \"Relax, my love,\" he whispered in my ear before I could voice my protest. A hand came down between my legs to accompany his words and as he worked my clit I again lost my ability to speak up in protest. Then his lips found my neck, just under my ear and began to suck.\n\nAll things yield to time and pressure and I was no different. Against the double onslaught of his hand in my pussy and his lips on my neck, I sunk my head in sweet defeat as Akai, with a little extra force in his hips, took my anal chastity. I yelped from the initial pain but didn't pull away. It was useless anyway. That's what I told myself.\n\nSensing my surrender Akai bent me back over. He put his hand on the back of my head and held my face down in the pillow to muffle my screams as he slowly pushed more in to me. It was every filthy, adulterous desire fulfilled in a single wanton moment. I bit the pillow as his cock popped deeper into my ass, grunting and panting from the intense intrusion.\n\n\"It hurts,\" I hissed, \"take it out!\" Instead of obeying me, he slid his hands up under my armpits then took a firm grip of each shoulder. With his chest against my back pinning me to the bed, I couldn't escape. I was totally at his mercy. His lips again found my exposed neck and returned to kiss me in my most sensitive spot.\n\n\"Try to relax,\" he whispered. \"Take a deep breath, and repeat after me. My ass is beautiful.\" On the word beautiful, I felt the head of his cock throb with a surge of warm blood, adding painful pressure against the resistance of my sphincter.\n\n\"Akai, I can't,\" I whined. \"Take it out, you're hurting me.\" Teeth sank into my neck, gently at first but then with more pressure, until I felt a nip of pain. \"Ouch!\" I hissed, and immediately a gentle tongue replaced his teeth, soothing over where he bit me. I moaned, then suddenly felt more discomfort in my ass. The distraction had allowed him to slip a few millimeters further into my bowels.\n\n\"Say it,\" he repeated authoritatively as he pulled out slightly. I felt the flange around the head of his dick breach my contracting anus before he shoved it back inside my dark passage. My body held tight, and he still couldn't get much further than an inch inside of me. \"Take a deep breath and say 'my ass is beautiful,'\" he repeated. Even though his voice was calm, his grip on my shoulders tightened, letting me know his words were not a request. I was not getting out of this.\n\n\"I don't have some fucking mental block,\" I complained, getting frustrated. Your dick just doesn't belong in my ass!\"\n\n\"Be honest with me,\" he replied, grinding the head of his dick in my dirty little hole, \"hasn't everything I've done to your ass up until now felt wonderful?\"\n\nI hesitated. \"Yes,\" I finally answered softly, ashamed.\n\n\"And this will be no different once you relax. It's what you came for,\" he said confidently. Again he pulled out an inch or so and then pushed back in until he heard me grunt in pain from being too full.\n\n\"No it's not!\" I protested. Akai laughed at me.\n\n\"Nivia, you are a lot of things,\" he said, face still pressed into my neck, licking my skin. \"You're smart, witty, sexy as hell, but na\u00efve is not one of them. God gave you that big beautiful ass to enjoy it and let it bring you pleasure, not to be ashamed of it. That's why you're here. \"\n\nWas he right? Did I consciously know that I was coming to submit to him in every way like this? While I contemplated his words, one of his strong hands released my shoulder and snaked under my tummy and resumed playing in my pussy. His fingers slid all too easily through my folds before he withdrew his hand and presented it before our faces.\n\nThe incriminating evidence was clear to see and smell, as the pungent musk of my cunt slime hit both our nostrils. Akai groaned before popping one finger into his mouth. I watched him clean the sticky digit with lust-filled eyes before he offered the other wet finger to me. I sucked it clean, accepting my defeat. Akai didn't even have to say anything. No woman with a pussy that wet could ever claim she wasn't enjoying herself. Shamefully my pussy was dripping with joy at what was happening to me, pooling on the sheet beneath us.\n\nHe kissed me after I was done sucking my juices off of his finger. The shared taste of my eager cunt cemented our new understanding. Apparently I did need it. It was exactly what I came for. I took a deep breath. Feeling my chest expand, Akai withdrew almost completely.\n\n\"My ass is -- ugh! -- beautiful,\" I said timidly as his warm shaft tried to invade my bowels. There was still tense resistance.\n\n\"Again, louder,\" he commanded, withdrawing once more. I took another deep breath.\n\n\"My ass is ARRGHHHH!\" I screamed as he sank an extra inch in me, finally cresting the tiniest bit past my sphincter.\n\n\"Your ass is what?\" he asked, pulling back his hips, preparing to impale me even further. A sneaky hand resumed its place between my legs and began massaging my sodden cunt before centering on my clit, anticipating his next thrust. Both of Akai's hands had returned to holding my shoulders. The hand playing in my pussy now belonged to me.",
        "\"My ass is beautiful,\" I repeated a little louder. Rewarding my obedience, Akai was generous enough to let me finish the phase before forcing his cock back into my anus with a carnal grunt. I cried out as his swollen head finally pushed all the way past my sphincter and entered the cavity of my bowels where the discomfort was much less. There were mixed emotions in my outburst, however, as underneath the searing pain was a deep warm throbbing feeling of fullness, that felt like I needed a little more.\n\n\"Good God, Nivia,\" he groaned as he slowly slid back and forth in my ass, letting me adjust to the fuller intrusion in short, shallow strokes. When my own hips started to gyrate, he knew I was ready for more. Reading my body Akai withdrew, almost completely, and I cried out from a deserted sense of emptiness that came over me.\n\n\"My ass is beautiful!\" I repeated urgently, this time without being told. He rewarded me with a longer, deeper, and harder stoke into my funky depths. \"Holy fuck!\" I grunted in sweet relief. My cunt was so wet that we could hear my fingers playing in it.\n\n\"Let me taste,\" he demanded and I knew what he wanted. I complied happily, quickly bringing my musky digits to his face. I wiped them under his nose before shoving them into his mouth. His cock made a slow piston in and out of my bowels while he slurped up my nectar, and then I just as quickly withdrew my fingers and shoved them back into my saturated pussy. I arched my back, signaling my desire for more. \"My ass is beautiful!!\" I screamed this time, starting to believe it. His hips came crashing down into my upturned cheeks as a growl reverberated from somewhere deep inside his barrel chest. His heavy balls slapped wetly into my empty cunt while short, curly and wiry hairs tickled my rudely dilated anus. I was stretched unbelievably wide to accept his considerable girth, while the head of his dick pierced new virgin territory in my colon. If the wind hadn't been completely knocked out of me I would have screamed from the exquisite pain that hurt so good.\n\n\"And it's delicious, too, baby,\" he moaned into my ear.\n\n\"Oh my God, what are you doing to me?!\" I cried, gyrating back into his crotch as my leaking pussy drooled down his testicles.\n\n\"What I should have done a long time ago,\" he replied softly. Then his lips sought mine. The kiss was slow and sensual, full of genuine affection. It stood in stark contrast to how he was lewdly and lustfully violating my rectum. The combination of savage lust paired with sweet tenderness made my head swim.\n\n\"Fuck me Akai,\" I said in full surrender, breaking our sensual kiss. \"Fuck my beautiful ass.\" And that he did. Akai reared up behind me on extended arms and put his hands on my shoulders, pinning me in place. Then he savagely ravaged my dirty little hole. The entire time I was screaming. Embarrassingly, he was also very vocal, making sure the whole neighborhood knew where his dick was and exactly what he was doing to me with it. This went on for a solid 10 minutes until I couldn't take it any longer. His stamina was relentless, with each pounding stroke faithfully following the next in perfect time.\n\nAt one point he pulled me up by my shoulders so I could support my upper torso using my arms. I took the opportunity to use one hand to brace myself against the massive headboard crowning his king-sized bed. With the added leverage I shamelessly rutted back against him, trying to cram every last millimeter of his beautiful cock as deep in me as possible. The room reverberated with our obscene symphony as I could hear my anus suck wetly at his thick swollen shaft every time he pulled it out of my tight hole, followed by the clap of his big heavy balls slapping wetly into my empty cunt. Each slap of his low-swinging balls made delicious contact with my swollen clit, driving me wild.\n\n\"Oh God, please don't stop!\" I begged, quickly reaching that point of no return. I looked underneath us to watch his muscular thighs and hips come crashing into me and was shocked from the visceral image before me. There was wetness everywhere, and a long string of my sticky cunt slime hung from my lips connecting his balls. The smell of my drooling sex hung thick in the air, accented with the even more pungent scent of the kinky sin we were engaged in. It was that sensory overload that finally pushed me over the edge.\n\nMy body exploded in delicious release and I came in a flood, wetting the bed beneath us. All sound left me as my face contorted with my mouth agape, drooling on the sheets. The spasms that wracked my body clamped down on his surging shaft, and that triggered his own release. With a roar and one final hard thrust inside of me, I felt his cock expand in my rectum before flooding my bowels with his hot thick seed.\n\nIt took us a while to catch our breath. We were a heaving, sweaty mess. When his breathing finally calmed and his cock had softened, Akai gently withdrew from me and turned me over. There were tears rolling down my cheeks. He bent and softly licked them up. His eyes looked deeply into mine before scanning the rest of my body. I did the same to him. His cock, still half hard, was a slimy dripping frothy mess. It reeked with the smell of his cum and the musky pungency of nasty sex. My nose twitched as I salivated, and I had to fight the urge to ask him to feed it to me, appalled at my whorish desire. There was wetness everywhere between my legs, and he bent to lick that up as well. When he was done he lay next to me and took me into his arms, brushing my tender nipples into his hairy chest.\n\n\"Am I finally forgiven?\" he asked? I answered him with a long, deep, sensual kiss then relaxed my head on his shoulder, holding him tight.\n\n\"I'll take that as a 'yes',\" he smiled. \"So do you finally believe me?\"\n\n\"About what, that my butt is beautiful?\"\n\n\"Yeah, duh!\" he teased me. I gave him playful elbow to his ribs, then hesitated for a second before answering.\n\n\"I don't know,\" I lied, feigning uncertainty while begging God's forgiveness for resigning my soul to hell. \"I might need a little more convincing.\"\n\n----- (_*_) -----\n\nThis story is dedicated to Suzie, who I did humiliate many years ago in this very fashion. I am truly sorry, and would love the opportunity to make it up to you one day."
    ],
    "authorname": "Jayded_Lust",
    "tags": [
        "adultery",
        "anal",
        "ass worship",
        "cheating",
        "rimming",
        "analingus",
        "cream pie",
        "swallowing",
        "exhibitionist"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/psyches-surprise"
}