{
    "title": "Lisette Ch. 02",
    "pages": [
        "Dear Readers - Lisette makes a brief early appearance in this story, but it is really about her younger sister, Jillian. Enjoy!! Gapster\n\n*****\n\nI smiled as I glanced at my phone and saw that it was my daughter, Laura, calling.\n\n\"Hi sweetie.\"\n\n\"Hi, Daddy. How are you?\"\n\n\"I'm doing well, thanks. What do you need?\" I joked. Well, it was sort of a joke. It was pretty unlikely that Laura was calling me on a random Tuesday morning in October to just say hi.\n\n\"Daddy, that's unfair. Can't a girl just call her father out of the blue?\"\n\n\"Hmm, I hadn't thought of that remote possibility. But, yes, a girl can. It's kind of you to think of me in the middle of a Tuesday morning.\"\n\nWe made small talk for a few minutes as she caught me up with her studies as a junior at Clemson. She had followed in Jenna's footsteps and was attending the same school her big sister had. I knew she was in the midst of mid-terms.\n\nLife had changed considerably over the past four years since Jenna had been a junior herself. Our real estate business in Columbia had had a couple of excellent years and we had traded in our condo on Isle of Palms for a beautiful ocean-front house on Sullivan's Island. It had a pool and four bedrooms, so it had had been ideal for when we were able to get our entire family together. \n\nThe girls were both doing well - Jenna had graduated and was working for a bank in Chicago and Laura was early in her junior year and excelling in her studies. The dark cloud in all of this was the passing of my wife early the previous year. An aggressive cancer had taken her at much too young an age and left the girls and me in a funky mist that was just beginning to clear. \n\n\"So, Daddy. I do have a favor to ask.\"\n\nI smiled. \"Of course you do, sweetie. And that would be?\"\n\n\"Well, exams are over on Friday morning and I was hoping a few of my friends and I could come down to the beach house for the weekend to chill. We won't bother you. We just all need to get away from campus for a few days.\"\n\nThe thought of having a crew of college girls bouncing around the house was certainly an easy vision to embrace. It got lonely around the house now when I was there on weekends alone, so a little younger generation company would be good for the soul. I was working four days a week now in Columbia and spending the long weekends at the beach as much as possible. I suppose I could have let them have the house to themselves, but I liked the idea of being there. Can't always trust kids these days.\n\n\"Well, as long as you don't mind me being there, sure. No problem. I'm heading down Thursday after work myself. How many of you will there be?\"\n\n\"Hmm, probably six. You know a couple of them - my roomie, Shelly. But there's also a couple of other girls from my floor coming too. It's good group, Dad. You'll like them,\" she said with a giggle.\n\n\"I'm sure I will, sweetie. I'll see you for dinner on Friday. I'll get something together for you to eat when you get here.\"\n\n\"Thanks, Daddy. You're the best! I love you.\"\n\n\"I love you too, sweetie.\" I hung up the phone with a smile on my face. It was always great to hear from my girls, but now I had something to look forward to for the coming weekend as well.\n\nThat wasn't to be my only surprise, however. On Thursday morning I received another call on my cell phone - this one out of the blue.\n\n\"Hi Jack,\" I heard as I picked up my cell phone. My brain raced as I recognized a voice I hadn't heard in over a year.\n\n\"Lissie? Wow - to what do I owe the pleasure?\"\n\nLisette had been Jenna's roommate in college for two years and had spent time with our family at various times during their days together at Clemson. I had had a fling with Lissie, which I chronicled in an earlier story (Lisette), and it had been one of the more intense and wonderful sexual experiences of my life. We had kept in touch since her graduation and I had visited her once in Baltimore when I was there for business. But Lissie had a serious boyfriend now - a very lucky older gent, to my chagrin - and our relationship had continued on a purely platonic level. I would always cherish, however, the few days I had shared with her four summers ago.\n\nWe made small talk for a few minutes as she caught me up on her life and I on mine. Then she got to the reason for her call.\n\n\"So,\" she said in a way that told me we were getting to the meat of the matter. \"I understand you're going to have some guests this weekend.\"\n\nI was a little taken aback and confused, but I acknowledged that I was, in fact, expecting guests. How could she know this?\n\n\"Umm, yes, I am. My daughter, Laura, and some friends from her dorm.\"\n\n\"Well, Jack, you're not going to believe this, but I know one of the girls coming to visit with Laura very well.\"\n\n\"Hmm. I know she's bringing a posse, but I only know her roommate, Shelly. What are you trying to tell me?\" I asked, trying to get to the point. \"Who is coming that you know?\"\n\nThere was a brief pause on the phone as I awaited the answer.\n\n\"My sister,\" she stated. \"Jillian.\"\n\n\"What? Are you kidding?\"\n\n\"I am not. Jillie - that's what we call her - is on the same floor as your daughter and I guess they've become friends. I don't think any of us had made the connection. But I was talking to her on the phone yesterday and she started telling me about her upcoming weekend. And when she mentioned Laura's name and talked about going to the Charleston area and all, I suddenly put two and two together. I asked if your last name was Connors and she said it was and...voila! Pretty amazing, huh?\"\n\n\"Geez, I'll say. I don't think Laura has made the connection. Wow!\" I was stunned.\n\n\"No I don't think she has, but she will. Laura came to visit Jenna and I twice at school, back when she was in high school. She'd certainly remember me.\"\n\n\"Well, thanks for the heads up, Lissie. I'll look forward to meeting your sister.\" There was a hesitation on the other end of the phone, as if she wasn't quite finished.\n\n\"Well, there's one more thing, Jack. You know, I believe, that my parents got divorced ages ago and we're both estranged from our mom. My dad's been great, but I was always like a mother to Jillie as she was growing up and we're very close. I've shared a lot with her as her older sister as she's matured.\"\n\nI wasn't sure where this was going, but something was afoot here.\n\n\"Yeah, okay,\" I said to give her space to continue.\n\n\"Well, a couple years ago we were talking about sex, believe it or not,\" she said with that sweet giggle of hers. \"And Jillie was a freshman and becoming sexually active and, well, I was always honest with her and answered any question she'd ask me. And one night she asked me to tell her about one of my more memorable or taboo sexual experiences. And while I had a number to choose from, I told her about how I had had a most amazing experience with the father of my roommate at college. She was totally into hearing about it and I told her how everything happened.\" I continued to listen in stunned silence.\n\n\"You have to realize, never in my wildest dreams did I think she'd someday befriend your younger daughter. That thought never even crossed my mind. But here we are and, well, I thought you should know...that she knows.\"\n\n\"I see,\" I replied. \"And she knows...?\" I could hear Lissie sigh on the other end of the phone.\n\n\"Everything, Jack. I told her everything that happened at the time. Even about giving you a blowjob in the Piggly Wiggly parking lot on the way home from Charleston that night,\" she laughed.\n\nI smiled at the memory. Grocery shopping had never been the same after that experience.\n\n\"Is your sister as pretty as you?\" I guess I was going to find out soon enough, but I couldn't help but ask.\n\n\"Jillian's gorgeous, Jack - if you like tall curvy blonds. She's got much lighter hair than me and, to answer your question, she's much prettier. Yes.\"\n\n\"Oh, I quite doubt that, Lissie. You're being far too modest.\"\n\n\"Well, you can decide for yourself soon enough. Anyway, the connection has been made and I know that she's curious to meet you. She is going to mention this to Laura - without the details, of course - but she'd figure it out sooner or later. Isn't this crazy?\"\n\n\"It is. Wow. Well, Liss, thanks for sharing. I do appreciate it. I'll mind my P's and Q's,\" I stated, with not as much conviction as I had intended.\n\nLisette and I talked for a little while longer before ending our conversation. I hung up with a smile on my face. It was nice to hear from an old friend, but Laura's junior invasion had suddenly taken on a whole new dimension. \n\nFriday came and I had an extra spring in my step. I had driven down to the beach the previous evening and was getting the house ready for a flood of young guests. I was looking forward to seeing my daughter, of course, but I was equally anticipating a lively household over the weekend. Things had been pretty quiet on Sullivan's Island since Laura had gone back to school, so a house full of energetic college girls was just what the doctor had ordered. \n\nLaura and I had been texting during the day and I was to order a few pizzas to go as they were getting onto I-526. Our timing couldn't have worked out better. Just as I was placing the hot pies on the kitchen island, I heard them pulling into the driveway. Seconds later a gaggle of young college girls burst through the side door.\n\n\"Daddy!\" Laura screamed, as she ran up and threw her arms around me. She gave me a big hug and then introduced me around the room. It was an excited bunch - it was Friday, mid-term exams had just ended and they were finally at the beach. They were a wiggling mass of tank tops, tiny shorts and flip flops.\n\nLaura introduced me quickly to her buddies and each politely shook hands and thanked me for the hospitality. One young lady hung back and was introduced last.\n\n\"And this is Jillian, Dad. We call her Jillie. And you know what? She's Lissie's younger sister. Do you remember her?\" Laura asked innocently.\n\n\"I do. Isn't that something?\" I offered, as I took the opportunity to make eye contact with Jillie again. Her look spoke volumes, but was lost on Laura - fortunately. Perhaps it was my imagination, but I could tell that she knew that I knew, and vice versa. We shook hands. Her grip was warm and firm.\n\nThe rest of the girls had already dived into the pizza and the refrigerator door opened for what would be the first time of many. I took the opportunity to focus my attention on Jillian. \n\n\"Hi Mr. G. And thanks for letting us descend upon you,\" she said with a lovely smile. \n\nLisette had not lied. Jillian was a stunner and I had really not taken in any more than her face and hair at that point. She was one of those fair-skinned beauties with a full mane of long wavy naturally blond hair. Most blonds seemed to purchase their hair color from a bottle, but Jillian's tresses were pure and true. \n\nHer big blue eyes had a sparkle that seemed friendly and forthcoming, yet I detected a bit of mystery as well. Her skin was as smooth as silk and her full lips were stretched in a generous smile. Her face was absolutely gorgeous and I found myself grinning from ear to ear. \n\n\"It's my pleasure, Jillian. I hope you make yourself at home.\" \n\n\"You can call me Jillie, Mr. G. Everybody does,\" she added as I felt her eyes sweep quickly down my body, almost like she was checking me out. I kept my gaze on her face and didn't let me eyes wander at that moment. There would be time for that later. At this point I wanted to play things in an ultra-straight manner. Her eyes twinkled as she smiled at me and then turned back to be with her friends.\n\nHer turning gave me license to look. She was wearing a pair of low slung denim shorts, the hems unraveled in the fashion of the day. Her legs were long, curvy and smooth. I felt an overwhelming urge to slide my hand along her thigh. Her tight top was well short of her waist band, exposing a muscular stomach and flared hips. She looked like any coed that might be strolling across campus on a lovely fall day. \n\nBut, I felt I might be a little too obvious in my ogling and looked away, knowing I'd have more opportunities to size up this sexy beauty over the next few days. The girls all snarfed down a slice of pizza and then headed upstairs to claim beds and change into bathing suits. \n\nAs tempted as I was to hang around and watch them all bounce down to the pool, I decided to take the high road and retreat to my office and do some work. I smiled as I sat down at my computer and could hear the high-pitched voices of excited college girls tumbling down the stairs and out to the pool. The sun was close to setting, but they made the most of the waning daylight as the sounds of splashing and cavorting in the pool wafted through the French doors into my office. I peered out a time or two just to check on them, but didn't want to play the overbearing father. They were good kids and I just wanted them to have a fun time.\n\nI had established a few ground rules with Laura ahead of time. I'd have some beer and wine on hand for them, but they were not to go out in a car if they'd had anything to drink. And, if they did go out at some point, as they surely would, the driver would not, under any circumstances, imbibe in alcohol. I also didn't want any boys hanging around. This was to be a girl's weekend and I didn't want to have to start worrying about hook-ups around my house. Laura had assured me that they'd comply with my rules - they just wanted to chill.\n\nAs the girls played by the pool I grabbed a couple of slices of pizza for myself and opened a nice cabernet from my private collection. I retreated to my office again and enjoyed my pizza and wine dining experience. The girls eventually came back inside as evening crept over the pool and Laura popped her head in to say they'd be watching a movie in the Sun Room. She thanked me once again for letting her friends descend upon my peace and quiet and then scurried off to rejoin her crew.\n\nI wandered into the Sun Room a short time later to find them draped over the leather sofas and splayed out on the floor, watching some horror flick. I stood behind them and surveyed the crowd, most of them still in bikinis with some sort of shirt or top, and my gaze came to rest on Jillian. \n\nShe was laying on the carpet face down, her head propped up on her elbows and right foot in the air swinging slowly back and forth. My eyes swept down her long lean back as it narrowed into an impossibly tiny waist, only to flair back impressively at her hips. Her lower back emerged from a skimpy top and ascended a steep slope to a pair of the most seductive cheeks I think I had ever seen. Her glutes were tight soft bubbles of young flesh, barely encased by a striped bikini bottom that accentuated the sinfulness of her impressive curves. The way it stretched across the roundness of her perfect ass made it literally impossible to not stare.\n\nShe turned unexpectedly and caught me eyeing her lovely rear. I should have looked away in embarrassment, but I held her gaze and she smiled at me. God, she was a beautiful girl and in a most natural way. Her big blue eyes sparkled as she returned my gaze before turning back to the movie. I'd been busted, but for some strange reason, I didn't care. I figure I had done enough damage for one short visit, so I retreated to my study to get some work done. \n\nA half hour had passed before I heard a tap on the door and someone say, \"Knock, knock,\" in a very sweet voice. I lowered my glasses and looked over the rims to see Jillian standing at the door - a seductive vision of loveliness.\n\n\"Jillian. Hi. Come in,\" I stated, trying to sound as cool as possible as my heart raced. \"You're not watching the movie?\"\n\nShe smiled and shook her head. \"No, I've seen it before. I was bored.\" She entered the room slowly and surely. \"And I thought it was a shame that you were all by yourself.\" She eyed my glass of wine and saw the bottle of expensive cabernet on my desk. \"Oh, drinking the good stuff alone, I see,\" she stated with a conspiratorial wink. \n\n\"I am. But you're welcome to a glass if you'd like one,\" I offered. \n\nI allowed my eyes to graze quickly over this barefoot beauty. I was becoming more enamored each time I looked at her. It appeared that she was wearing only two things. A very small bikini bottom of black and gray stripes and a gray top that looked like it was thermal underwear, only it was skin tight and the top three buttons were undone, revealing a luscious cleavage that defied description - and seemed to defy gravity as well. The material hugged the generous curve of her perfectly shaped breasts. The long sleeves were pushed up above her elbows and the bottom of it was a good six inches short of her bikini bottom, exposing her toned tummy and succulent curves. There was no way she could have walked through my door without knowing how incredibly sexy she looked. \n\nIt was clear from the shape of her breasts and the tightness of the top that she was not wearing a bra. Her breasts looked to be a solid C cup, maybe even larger, and they pressed against the stretchy cotton material in a most sinful manner. They looked soft and full, but with the pert uplift of youthful tit.`\n\nHer hair hung in long loose strands of curly blond and, while unkempt at the moment, had an easy insouciant air of casual sexiness that seemed to pervade her entire personae. I was quickly getting pulled into her sensual orbit. \n\n\"Hmm, don't mind if I do,\" she replied. I grabbed an extra goblet from my little mini-bar and handed her a good pour, hoping it might mean she'd stay a bit longer than she had intended. Then again, I really didn't know what her intentions were, but I was bound and determined to find out. I sat down again at my desk as she leaned her ass against the small conference table I have in the middle of the room. She crossed her ankles and took a sip of the deep red nectar. \n\n\"Mmm. This is excellent, Mr. G.\" She took another sip, but kept her gaze on me the entire time. \"Thank you so much for letting us invade your privacy this weekend. We all needed to get away and this was a perfect destination.\"\n\n\"My pleasure, Jillian.\"\n\n\"Jillie. Please,\" she corrected.\n\n\"Jillie,\" I said softly. She smiled in return and took another sip; her beautiful eyes peering at me over the rim of her wine glass.\n\n\"I was so sorry to hear about your wife, Mr. G. Laura was telling us the story. That's so sad,\" she said with a frown. God, her facial expressions were mesmerizing. \n\n\"Thanks, Jillie. It was a shock to all of us. I think the girls have handled it pretty well, though.\"\n\n\"How about you? I hope you don't spend all your time cooped up in this office.\"\n\n\"Oh, no. I get out and about. I'm mostly here on long weekends. I have a life, of sorts, back in Columbia. My main office is there too.\"\n\n\"Well, I'd suspect you're the most eligible bachelor in Columbia then,\" she said with a wicked smile. \n\n\"That's kind of you to say, Jillie, but the truth is I'm pretty out of practice. And my heart just hasn't been in it for a while now. I'll get there. You're kind to take notice.\"\n\nShe smiled again, put the glass of wine down and leaned back on the table on her arms. The position pushed her breasts out in a most seductive manner and, try as I may, I could not keep my eyes off of them. She was clearly standing there in a position to show off her body, so I felt I had nothing to be embarrassed about by looking. She wanted me to look at her. Only a blind man would have been oblivious to her considerable charms. And so I did. \n\nMy eyes scanned her long lithe form, but it was hard to tear my eyes away from the soft swell of her barely contained breasts. I loved thinking that they were her natural form with no assistance from a bra. Only gravity and the snug fit of her top kept them in check. I could detect the slightest bump of a nipple sitting high and upward on each glorious orb. ",
        "And even more mind numbing was the lovely bulge of her mons underneath the tiny bikini bottom. Her rounded pubis stood slightly proud of her lean hips and was an intoxicating sight to behold. The slinky material of her bottom accentuated the puffy full flesh of her lips. I found myself wondering what she might taste like and quickly tried to regain my composure and focus on my guest as the young lady she was. My gaze wandered back to her eyes and her smile told me she was happy that I was admiring her incredible body.\n\nShe pushed up off the table suddenly and began to walk about the room, eyeing the bookshelves and slowly moving as she looked at titles. She knew I was watching her, and I was. The bottom of her bikini rode high up and on a diagonal across the bubbly curve of her buttocks, leaving the bottom half of each cheek fully exposed. Both cheeks tucked in tightly to the smooth length at the top of her taut thighs, forming one of the most perfect butts I had ever laid my eyes on. She feigned interest in my book collection, for she was clearly putting on a display for my benefit. She turned this way and that, unabashedly showcasing her profile or allowing me to spy the lovely gap between her long slender thighs.\n\nI ogled in silence - unable to utter a word. It was clearly a moment we were sharing. Her college buddies were in another room watching a movie - and she was with me, doing her best to make sure I noticed every seductive detail of her womanly flesh. \n\n\"So I understand my sister came to visit a few years back. She was your older daughter's roommate, apparently. How bizarre is that?\" she asked suddenly. She turned as she spoke and our gazes locked. \n\nI wasn't sure how much to let on that I knew. I really didn't know exactly what Lissie had told her younger sister, so I felt it was better for me to play it somewhat oblivious.\n\n\"Yes. Lissie came to visit four years ago with Jenna. She was a lovely young lady,\" I stated in a very noncommittal way.\n\nJillie looked at me and smiled, taking another sip of wine. \n\n\"I don't know if she told you, but our mother also passed away, many years ago. Lissie is my big sister, but she's also been like a mother to me. We're very close,\" she stated, now returning to her perch leaning against the table and facing me again. The position highlighted the tight vee and luscious mound of her bikini clad pussy. I glanced quickly, but couldn't help but notice the subtle bulge of her lips, barely encased in her bottom. I found myself wanting to lick her pussy. What the hell was happening to me?\n\n\"She might have mentioned something.\" I let my sentence stand on its own, afraid to elaborate or expose something she might not know. But she wasn't done with this line of conversation quite yet.\n\n\"Well, we shared everything, quite honestly. And when I was having a tough time with a few immature college guys my freshman year, she gave me a great pep talk. She'd been through some of the same experiences with drunk, stoned college guys and had some great advice.\"\n\nShe left her words hanging and I got the impression I was to weigh in if I was going to hear any more about said advice.\n\n\"Which was?\" She took a sip of wine and looked at me with a serious expression, no longer joking or smiling.\n\n\"Stick with older guys,\" she stated without batting an eye.\n\nI took a sip of my own wine and eyed her with impunity. There was nothing I could say at that moment. I just gave her space to continue. She smiled at her own boldness and kept going.\n\n\"She told me about her older boyfriends - the college professor and her current boyfriend, who is 44.\" She paused, took her last sip of wine and placed the glass on my desk, indicating a refill was in order. I began to pour her another glass.\n\n\"And she told me about you,\" she stated with an intimate glare that pierced my soul. Her comment stopped the pour, but I recouped quickly and finished refilling her glass. \n\n\"Me?\" I asked. I still didn't want to commit to anything. I just gave her room to continue he story. \"What do you mean?\" I had a distinct feeling that she was enjoying telling me this story.\n\nShe put her glass on the table and leaned forward on her arms, showcasing her cleavage and practically inviting me to dive in head first.\n\n\"Well,\" she said demurely. \"I asked her to tell me about the craziest or sexiest thing she had ever done with an older man. And she said, 'well, one time I slept with my roommate's father at his condo outside of Charleston.'\" She let the words hang out there for effect and smiled at me with a knowing look. I couldn't ignore the truth, but felt I could continue to deflect it just slightly. The cat, or the pussy in this case, was out of the bag.\n\n\"Did she now?\" I felt I was in a place where I could now look at Jillie without being furtive. A beautiful 20 year-old girl was leaning seductively across my desk, acknowledging that she knew her older sister and I had fucked. I wanted to let it all unfold as naturally as possible. \"What else did she tell you?\" I inquired.\n\nShe smiled and I could tell immediately she wasn't going to take the bait. She took a deep swig of wine and looked me in the eyes. \"She said it was amazing. It was random, it was wrong.\" She took a sip before continuing. \"And that it was hot as hell,\" she said with a fiery tone in her voice. She took her last sip of wine and collected herself, turning the subject away from the precipice we were skirting. \n\n\"She's got a thing for older men, apparently,\" she said in a scoffing tone, \"as you probably gathered.\" \n\nI still couldn't fess up. I just needed to play along with the scene. \"Well, we had a very nice visit when she was here,\" I said without much conviction.\n\nJillie smiled at me and placed her wine glass on the conference table with some authority. I was hoping I hadn't somehow insulted her. \n\n\"Yes. From all accounts it was incredible.\" She straightened up like the show was over. \"And how was I to know that your daughter and I would be on the same floor in a dorm? How random is that?\"\n\n\"Pretty damn amazing, if you ask me,\" I replied. \n\n\"When I told Lissie where I was going this weekend and mentioned Laura's name, she put two and two together,\" Jillie said while she gazed intensely into my eyes. \"And so, here we are.\"\n\nI was literally speechless and let her sentence hang in mid-air. She leaned back in a final show of her incredible body. My eyes washed over her, taking in the jutting softness of her braless breasts and the proud bulge of her barely encased pudendum. The moment was frozen as she sat there, allowing me to ogle every glorious inch of her body. Then she broke the spell\n\n\"Well, I should be getting back to the boring movie, Mr. G. But one thing you should know,\" she stated, leaving no doubt in the air. \"Two apples don't fall too far apart if they fall from the same tree.\"\n\nShe looked at me with the most sinful and knowing look imaginable, and then turned and left the room. I watched that gorgeous tight ass twitch sinfully as she exited my office. I took another sip of wine and tried to figure out what had just happened. All I knew for sure was that tomorrow was going to be one very interesting day.\n\nOn Saturday morning I was up and out of the house long before the girls got up. I had a few appointments in Mt. Pleasant and planned to return by early afternoon. They could certainly fend for themselves for a few hours. \n\nWhen I did finally get back to the house it was eerily quiet and I figured the girls had all gone down to the beach, a short walk from the house and down through the dunes. I felt like a swim in the ocean myself, so I jumped into a bathing suit, grabbed a towel and headed down. The sun was intense for an October afternoon; its power diminished from the summer, but still strong in the middle part of the day. \n\nThe girls had arranged their towels down near the water along with a couple of umbrellas, and I could see that the tide was coming in. A few of them were sunning themselves and the rest were either out walking or in the water. Laura was there so I sat down for a few minutes to talk to her and her friends. Jillie was among the missing and I kept my eye out for her as we talked. \n\n\"Where are the rest of your buds\" I finally inquired of Laura.\n\n\"Oh, they're in the water. It's really warm,\" she added. It always was this time of year. \n\nI finally saw a few bodies emerge from the surf and head our way. The straggler of the trio was Jillie and I watched her as subtly as I could from behind my sunglasses. I didn't mind if she saw me looking at her, but I didn't want the other young ladies to see me ogling their fine friend. The conversation lagged and I was able to turn my attention to Jillie as she approached the towels. \n\nShe was wearing a very skimpy bikini with a turquoise top and a white bottom. It was made of that unlined sheer material that you see so much on the beach these days. And because it was wet, the suit was clinging to every delicious curvy detail of her body. I could see her breasts bouncing almost imperceptibly. The bottom clung to her ass and defined the lips of her pussy in a vision that bordered on sinful. It was clear that she was either waxed and very cleanly shaven.\n\nThe girls all greeted me in a friendly manner and lay down to dry off in the sun. Jillie was almost directly in front of me as the girls chattered away about this and that. I was now somewhat oblivious to the conversation as all I could see at that moment was Jillie and her lovely young body. Her skin was toned and lightly tanned, the way some blondes are. Her legs went on forever and were perfectly shaped. \n\nAs she sat down she applied some sunscreen to her front, as she was apparently going to lay on her back. I decided to delay my swim for a few minutes. She ran her hands over her lean thighs, her taut belly, and the over the generous slopes of her upper breasts, barely encased in her bikini top. I longed to touch her and would have offered to apply the sunscreen if we'd been alone. \n\nShe finished and lay down on her back. Her lean curvy body glistened in the mid-afternoon sun as she squiggled to get comfortable. Her lovely breasts were flattened somewhat in this position, but still protruded fully, with just a hint of a nipple visible beneath both cups of her top. But it was the bottom half that had my eyes riveted. \n\nCovered only by the sheerest white material, her mound protruded forth in a seductive bulge of puffy pussy flesh. The waist, if you could call it that, of her bottom was stretched tightly between her protruding hip bones, leaving a seductive gap between her taut abs and the suit itself. Just below the stretched line of her suit, her mons, the most seductive curve on a woman's body, in my opinion, rose up in a proud display of womanhood. Her lips must be so plump and juicy, I thought, as I eyed the most amazing pubis I think I had ever witnessed. The sheer material of her bottom clung to her labia in a way that accentuated each lip as it curled into a tight slit that ran from the peak of her delicious mound down into the scrumptious crevice between her legs. Despite the company, which included my daughter only a few feet away, I was using all my will power to keep from reaching out to touch Jillie's body. \n\nI could feel a stirring in my loins and knew I needed to retreat into the ocean before I embarrassed myself with an erection in front of my daughter and her friends. I finally excused myself and ran into the water full tilt, diving into the approaching waves as I got deep enough. I swam out for a ways, trying to figure out what I was doing. This was my daughter's friend. She was a 20 year-old junior in college. I shouldn't be having such lascivious thoughts about such a young lady.\n\nBut I couldn't help myself. There was something about her that just drew me to her. The one thing I did know for sure was that Jillie had awakened something in me that had been dormant for a long time: my libido. It may not be right; she was much too young for me. But it still felt right, nevertheless. I wasn't going to overthink these feelings; I was just going to go with them.\n\nI came out of the ocean and headed back to the group to get my towel. I've been blessed with good genetics and, along with a modest exercise regimen, I've been able to keep myself fairly toned for an older gent. Long wavy gray hair and broad shoulders on a slender six foot body helped me feel and look younger than fifty-seven. \n\nA few of the girls noticed me approaching and I had to weather a few cat calls and whistles, but they were meant in a positive vein, I knew. It made me feel young again.\n\n\"Looking good, Mr. G,\" Jillie said under the radar. \n\n\"Thanks, Jillie,\" I responded, as I dried off in front of her. I could feel my cock hanging heavy in my trunks and wondered whether it might be slightly visible. \n\nI said my goodbyes to the ladies and headed back to the house. I worked in my office for the next few hours until I heard the sounds of the girls coming back into the house. I was getting used to the energetic sounds of their youthful voices and knew it would be hard to go back to silence again once they left. \n\nA short time later Laura poked her head into my office.\n\n\"Hey, Daddy. We're going to get dressed and head into Charleston tonight. Okay?\"\n\n\"Sure, sweetie. But remember our deal - only if whomever is driving is not drinking.\"\n\n\"No, problem. Brittany doesn't drink so she's our designated driver. And we'll behave anyway. No need to worry,\" she smiled.\n\n\"Sounds good. Just check in before you head out.\"\n\nThe girls retreated upstairs to get gussied up and I looked forward to seeing them all before they hit the road. I finished up my work and began to rustle around in the refrigerator for something to cook up for dinner. Laura and the girls interrupted my search as they descended the stairs and gathered up their stuff to head out. They all looked incredible - short skirts and tight tops, make-up, heels. The boys of Charleston were in for a treat. I was waiting for Jillie to descend and join them when Laura spoke up.\n\n\"Oh, Daddy, by the way. Jillie isn't feeling all that great so she isn't joining us. I think she might have gone back to the beach for a while. Anyway, keep an eye out for her. Okay? I'm sure she'll be fine.\"\n\nI tried not to let me my excitement at this news show, but perhaps she really wasn't feeling well. I smiled thinking I might have to nurse her back to health. \n\nThe girls finally left and a ghostly quiet descended upon the house once again. I pulled a filet out of the fridge and started to make a green salad. A movement caught my eye and I looked up to see Jillie walking slowly back from the beach, a bag over her shoulder. I had to pinch myself to realize the reality of the situation. Here was this gorgeous young woman - long, lean and lithe - sauntering slowly toward my empty house. She opened the door and stepped inside.\n\n\"Jillie. Laura told me you weren't feeling well. I'm so sorry.\" I was, in fact, sorry she might not be feeling well. I wasn't sorry that it meant she had to stay in the house with me alone for the next few hours.\n\nShe smiled demurely and replied.\n\n\"Actually, Mr. G., I feel fine. I just didn't feel like going to the clubs and dealing with drunk boys tonight. I came down to the beach to chill and relax, so I took a rain check on the Charleston trip. I'll go another time. I had a very restful time down on the beach in a chaise under the umbrella - really nice. And tonight I just feel like laying low,\" she said as she put her bag down on a chair and smiled gently at me. Any resistance I may have been feeling was rapidly melting away. \n\nShe was wearing a simple low cut shift over her suit and looked a bit weathered from the sun. But the freshness of her youthful beauty shown through clearly and her body was a treasure to behold from any angle that I had seen so far. I didn't try to hide the fact that I was looking her up and down, taking her in like a cool glass of water. She sat on a stool at the island and leaned forward a bit, allowing me to ogle freely the seductive cleft of her glorious cleavage. The full slopes of her upper breasts looked like they would be so amazingly soft to the touch. \n\n\"Well, listen. I'm about to grill up a filet for myself and I'm tossing a nice green salad. I know I've got another steak in the fridge. Why don't you join me for dinner?\" I suggested anxiously. \"I was just about to open a nice Brunello too,\" I added for good measure. \"I'd love the company.\"\n\nShe smiled that jaw-dropping smile of hers and agreed. \"Steak and Brunello? Mmm, that sounds wonderful. How could a girl pass up an offer like that? I think I'll take you up on it, Mr. G. Okay if I go shower and dress up a little?\" she asked, cocking her head ever so slightly.\n\n\"Of course, Jillie. There's no rush. I'll wait for you. Take your time. It's the beach, but dressing up is encouraged at all times,\" I jested\n\n\"Great. Give me a half hour or so,\" she said with a clear note of happiness in her voice. She eyed my get-up and stopped to ask a question. \"What would you like me to wear?\" she asked in a soft sultry voice. \n\nI was wearing nice black shorts and a light orange short sleeve silk shirt. I was about to reply that she could wear whatever she wanted when I caught myself and thought I might want to take advantage of the question. \n\n\"Well, what would you have worn if you'd gone out with the girls tonight?\" I asked.\n\n\"Hmm. Well, I had two things with me - one was a really tight little black dress and the other was a very silky, kind of flouncy summer dress. It's pretty short and sexy. It's one of my favorites,\" she added. She had placed her forearm on the island counter and leaned forward so her left breast was being pushed up. God, it looked so big and soft and delectable. I tore my eyes away so I could respond coherently. \n\nI love little black dresses as much as the next guy, but the thought of something light and loose that flowed around her incredible body had considerable appeal. And how could I go wrong if it was one of her favorites?\n\n\"I think option two sounds good,\" I replied. \n\n\"Do you like heels?\" she asked, knowing what my response would be. She started to get up from the stool and turned sideways to go; freezing there for a moment so I could admire the profile of her curvy body. \n\n\"I was kind of hoping for combat boots, but heels will do,\" I grinned. \"The taller the better.\" She smiled and started to head upstairs. \n\n\"That can be arranged,\" she replied in the most sultry voice imaginable. \"Anything else?\" she asked for good measure. \n\n\"Just you, Jillie. Just your good company. That's all I ask,\" I said, trying to downplay my obvious interest in her attire for the evening. \n\n\"And that's what you shall have,\" she bequeathed. \"I shall see you in a little bit,\" she said over her shoulder as I watched that gorgeous butt sway and twitch tightly as she ascended the staircase. Her sweet little cheeks bounced almost imperceptibly.  \n\nOnce she was out of sight I sat back and took a deep breath. I needed to assess this situation. Here I was, alone in my house for the next few hours, and I was about to grill some steaks and drink good wine with a beautiful, sexy young college girl who seemed to like older gentlemen. Add in that I had slept with her sister four years ago, and she knew and appreciated that fact, and the evening ahead was beginning to show great promise.\n\nMy big concern was I was out of practice in the seduction department and hadn't had a true sexual encounter of any note in quite some time. I'd actually been fairly depressed after my wife's passing and my libido had been somewhat tamed from the experience. My doc had prescribed a few things for me to take, but I'd decided to weather the storm on my own with no prescriptions.",
        "One of the things he had prescribed, however, was Viagra - in case I found myself in a situation where I might need an added boost. I'd certainly masturbated many times in the past year, I wasn't dead. But I also wasn't sure if I could keep up with a twenty year-old if the situation called for it. Maybe I could, but I didn't want to leave anything to chance on this particular evening. \n\nOne of my buddies had been encouraging me to use Viagra for years. He boasted about how he didn't need it; he could get and keep an erection fine. But he was always waxing on about the incredible effects: how freaking hard he got, how long his erection would last, and how strongly it would return after a round or two. \n\nHaving not taken it before, I was a bit reluctant. But the thought that I might find myself in a sexual situation with Jillie before the evening was over was beginning to look like a good bet. So I decided to throw caution to the wind and take a chance. I scooted upstairs to my bathroom and took half a blue pill, brushed my teeth and splashed on a drop of my favorite cologne. I could hear a blow dryer running in Jillie's room and tried to imagine what she would look like when she returned to the kitchen.\n\nI headed back downstairs and continued to prep dinner. I seasoned the filets and let them sit, chopped up more veggies for the salad and decanted the Brunello to breathe. I put on some soft background music and set the table with a few candles. I felt a little silly and very obvious. This young lady was my daughter's age. But it was one of those once-in-a lifetime moments and I didn't want to look back with regret on having passed up what was shaping up to be a great opportunity. That, in retrospect, was a very wise decision and one I have been thankful for ever since. \n\nI was at the island making a dressing for the salad when I saw movement out of the corner of my eye and looked up to see Jillian descending the staircase. She had looked gorgeous when she'd wandered through the kitchen earlier on her way from the beach to the shower. Now she had transformed herself into a vision that literally took my breath away. I had a sharp knife in my hand and stopped cutting, lest I slice right through a much needed finger. I closed my mouth so I wouldn't drool all over myself and ruin the moment. \n\nShe looked like she had just stepped off the runway. The casual dress she had described was a multi-colored sun dress that looked to be of a very expensive material, given the way it draped over the sinuous curves of her body. Thin straps held up the bodice which was encasing her soft generous breasts without the aid of a bra. Her cleavage shown round and dark as it disappeared into the deep vee crease of the top of her dress. It hugged her curvy hips perfectly, then flared out to a swirling sheaf of pleated material that swayed with every movement she made. The dress hung beautifully on the upper slopes of her ass, accentuating the prominent curve of her beautiful butt. It came to just above the knees and left her long calves on display, elongated by the impossibly tall open-toed sandals she was wearing. \n\nShe had washed and blow-dried her long blond hair and styled it to look like she'd done nothing to it, even though I'm sure it had taken some effort. She had applied make-up, but not too much and long dangling hoop earrings added to all the moving parts that were vying for attention as she entered the kitchen. Her hips swayed seductively as she strode confidently into the room - her hair bouncing, her earrings swinging, her dress swirling. I was dumbstruck and was not going to try and hide that fact. Actually, I couldn't have, even if I'd wanted to.\n\n\"Jillian,\" was the first word out of my mouth. She walked toward the island with a big smile, her incredible tits bouncing ever so subtly as she strode into the kitchen. She placed her hands on the counter and leaned forward just a little, showcasing the swell of her magnificent breasts somewhat pressed between her bare upper arms. I couldn't resist looking, but brought my eyes back quickly to hers. God, I could spend a lifetime looking into those beautiful eyes; such a clear shade of cerulean blue. And I also knew I could spend the rest of the evening getting totally lost inside that cleavage. She was drawing me in like a powerful magnet.\n\n\"You clean up nicely,\" I commented with a grin, trying to downplay the moment. \n\n\"Well, thank you. It's not every night a guy makes dinner for me. I thought it was worth a little extra effort,\" she added. She pulled away from the counter and twirled a 360 to show me all sides. \"You like?\" she asked, rhetorically.\n\nI tried to think of something clever to say, but my brain was mush at that point. \"Yes, Jillie. I like. I like very much, in fact. You're an amazingly beautiful woman, if I may say so.\" \n\n\"Of course you may. I appreciate the compliment. Thanks, Mr. G.\" \n\n\"You know, you don't have to call me Mr. G. You can call me Jack,\" I stated.\n\n\"I don't know. I kind of like calling you Mr. G. Do you mind?\" she asked with a twinkle in her eye. \n\n\"Of course not,\" I replied. \"I can see why you didn't want to go clubbing. You would have had every guy in the place groveling at your feet,\" I said. I wasn't pandering; it was the truth.\n\n\"That's nice of you to say, but I bet the rest of the girls looked pretty hot before they left. I would have just been part of the pack. This is much nicer.\"\n\nShe pulled out one of the high stools and hopped up into a sitting position, crossing her long sleek limbs, her breasts bouncing once again as she settled into the seat. The dress pulled up high, exposing the smoothest, most perfectly formed thighs I think I'd ever laid eyes on. I felt an unfamiliar tingling in my body and realized that the Viagra was probably working its way into my system. \n\nI pulled out two huge goblets, worthy of a big wine like a Brunello, and poured us both a glass. I handed hers to her and she wrapped her slender manicured fingers around the stem. I gazed deeply into her pretty eyes as I raised my glass for a toast.\n\n\"To tonight,\" I offered.\n\nShe lightly clanged her glass against mine and produced that prefect ring that only nice crystal can offer. \n\n\"Yes,\" she agreed. \"To tonight.\"\n\nI took a sip of the deep ruby nectar and looked at this gorgeous young woman seated before me, ready to spend the evening with me. It sent a shiver down my spine, but a wave of doubt through my brain. What was I doing?\n\nJillian must have seen the look at my eye and she placed her glass on the counter and spoke.\n\n\"Are you alright, Mr. G.? You look a little perplexed.\" She was obviously good at reading people.\n\n\"I'm fine, Jillie. I'm certainly looking forward to spending the evening with a beautiful young woman and making a nice dinner, but...\"\n\n\"But what?\" she inquired.\n\n\"I don't know. I just feel weird, I guess. I mean, you're my daughter's dorm mate, you're less than half my age, and then I had that thing with your sister many years ago. I'm sorry, I'm a little confused I guess. And it's been awhile since, well, you know.\" I wasn't being particularly articulate because I really didn't know what I was trying to say. Jillie came to the rescue.\n\n\"Listen, Mr. G. If I didn't want to be here right now, I wouldn't be here, I'd be in Charleston with the girls. I know this is a rather odd situation, but it's also one of those moments in life that just happen sometimes and you have to grab them when you can. You have your life, I have mine. Who knows if another moment like this will happen again - maybe it will, maybe it won't? But we're here right now. And we're going to have a wonderful dinner and a great bottle of wine and we'll see what happens.\"\n\nShe took another sip of wine and I looked at her anew. God, she was so incredibly young and gorgeous. I felt like I was way out of my league, but how could I argue with the present situation? She seemed so confident - and willing. \n\n\"And, Mr. G., just so you know. I find you incredibly attractive. You wear the patina of age well and you'd probably be surprised by the number of girls my age who find older men sexy.\" She paused and smiled in a kind of naughty way. \"And you know how my sister felt about it. Her story about you two, well, it still turns me on to think about her and you. I never thought we'd actually cross paths, yet here we are.\"\n\nShe put her glass down and walked around the counter towards me, a vision of loveliness. \n\n\"So let's just enjoy the evening and see what happens. Okay?\"\n\nIn her heels she was very close to my height. My eyes scanned her body quickly as she approached: her lean curvy form, her exquisite face and long blond hair, those big baby blue eyes and luscious jiggly breasts. She placed her hands softly on my chest and leaned in for a soft kiss. My mind swirled from the moment and a subtle whiff of her velvety perfume. \n\nOur mouths met in the loveliest kiss imaginable. Her lips were so soft and the moment froze as we kissed. It was an innocent kiss, but one fraught with the subtle potential of the evening still unfolding. I felt her hands move on my chest and heard just the softest whimper as our lips meshed. \n\nShe pulled away and our eyes locked, searching for the meaning of the moment. I didn't want to break the spell with words, so I put my hand on her cheek as I felt her lightly press her body against my hip. My erection, which had been lurking during this conversation, sprung forth with a vengeance. My light loose shorts did nothing to hide its projection as the end of my cock pressed out at an awkward, slightly downward angle. There was no doubt that Jillie could feel it and there was no way to hide it. \n\nI decided to answer with another kiss, as my hand slid behind her head and neck and I pulled her in for a second kiss, my fingers tangling into the mane of hair at the base of her skull. This one was more passionate and I felt her tongue reach out to meet mine. She pressed her belly against my erection and made it clear that she didn't mind feeling my rising excitement against her warm body. Both of us gasped a little as our tongues swirled and our mutual arousal began to erupt. We broke the kiss at the same time, knowing that we needed to stop or dinner would never happen. But the enormity of the kiss and the trajectory of the evening were now crystal clear to both of us.\n\nJillian pulled away and glanced downward at the crazy angled teepee in my pants. She grinned mischievously and turned to walk back to her wine, still sitting on the far side of the counter. Her ass looked amazing in the lovely dress she'd chosen to wear for me. She eyed the two slabs of beef on the island, covered in olive oil, salt and pepper, awaiting the grill.\n\n\"Mmm. Nice meat,\" she stated as she lifted her wine to her lovely mouth, her eyes twinkling with anticipation and double meaning.\n\nI would have normally been erect anyway from this sort of encounter. But the Viagra seemed to have given me an extra kick-start. I was liking this stuff and I wasn't going to be embarrassed about the clear physical sign of my arousal. I just played along as if it was the most natural thing in the world; which, in a way, it was. \n\n\"Well, speaking of, I better get these on the grill if we're going to have any time to enjoy the later part of the evening.\" I picked up the platter and Jillian laughed as her gaze battered between my eyes and my serious bulge. \"I'm going to throw these on and be right back,\" I stated. \n\n\"Don't get too close to the fire,\" she joked. \"I don't want you burning anything.\" \n\nI smiled as I headed outside and arranged the steaks on the grill, taking a few minutes to allow my erection to subside before returning inside. What a cheeky young lady, I thought to myself. When the time was right, it wasn't going to take much to get me going again. But as much as I was looking forward to whatever might happen post dinner, I wanted to enjoy Jillian's company as well. I re-entered the house and sidled back to the island where she awaited.\n\nThe next hour was wonderful. We engaged in a great conversation as I bounced back out to the grill a time or two to check on the slabs. Jillie lit the candles and lowered the lights some more and I finally returned with two perfectly cross-hatched filets. I dialed in some appropriate music and the atmosphere for a quiet romantic dinner for two was complete. We dished up two plates and sat down at the table to a wonderful meal of great food, wine and conversation.\n\nWhat became clearly apparent was that Jillian was much more than just a very pretty girl. She was articulate and intelligent and very much aware of the world around her. We talked about school, about my work, about current events, politics, her future, even sports. She was a poly sci major so she had a keen interest in national politics and the general state of affairs. My attraction for her grew as we talked and the soothing effects of the fine wine were soon making us both relax in the moment. I kept having to pinch myself as I gazed across the table at my dinner companion. She looked even more beautiful in the candlelight and I couldn't help but notice how the flickering shadows deepened the intoxicating crevice of her delicious cleavage. Whether it was right or wrong was not mattering to me anymore. I wanted this young lady more with each passing moment, and it was quite clear that the feeling was mutual. \n\nThe truth is I could have kept talking with her all night long, but I glanced at my watch and realized that, while we were alone for the moment, there was a Jeep load of girls that would be returning before too long and an evening like this might not come to pass this way again soon, if ever. I posed the question of dessert.\n\nJillian took my hands in hers. They felt so soft and warm as she spoke. \n\n\"Tell you what, Mr. G. Why don't you close up shop here in the kitchen. I'm going to go upstairs and freshen up a bit, then I'm going to head out to your lovely hot tub. It looks like we could use a little more wine,\" she said, holding up the empty bottle. \"Why don't you come and join me when you're ready. I have an idea for dessert,\" she said with a little giggle. She gave my hands a little squeeze and stood. I watched her head for the stairs, her round young cheeks tightly jiggling with each step. Damn, her ass looked so incredibly fine in that dress and in those heels. I sighed and began to clean up.\n\nA few minutes later Jillie returned to the kitchen, walked up to me and turned around right in front of me, pulling her hair up off her shoulders.\n\n\"Will you unzip me, Mr. G.?\" I wasn't going to turn down that request. I slowly lowered the zipper, almost to her waist, confirming the fact that she wasn't wearing a bra. I placed my hands on her shoulders, pulled her close, and kissed the side of her neck. I gazed down into the soft supple cleavage that was accentuated by the deep shadow of the candlelight and even more exposed with the loosening of her dress. She smelled of vanilla and flowers. She turned her head to whisper in my ear. \n\n\"Do you want to see my breasts?\" she asked quietly. \n\n\"I'd like nothing more,\" I whispered in return. \n\nShe arched her back slightly, pressing her warm ass against the hard lump in my shorts and held the straps of her dress in either hand. I wrapped my hands around her and placed them on the swell of her belly. Slowly, ever so slowly, she began to lower the dress along the upper slopes of breasts. I watched over her shoulder, as she unveiled them to me for the first time. \n\nSuddenly both nipples popped free and she moaned softly as they became visible. \n\n\"Oh, Jillian. That may be the most beautiful think I have ever seen,\" I said in all honesty. She lowered the bodice until her breasts stood proud and full, her nipples hard and sitting high and wide on her young tits. \n\n\"You can touch them, if you'd like,\" she continued, once again pressing her ass against my raging erection.\n\nI didn't reply; I just complied with her wishes. My hands came up her tummy to cradle her breasts from below. They looked even larger than I had imagined and were so soft and heavy in my hand. I weighed them and squished them slightly as the soft flesh oozed between my wrinkled fingers. I lightly touched her erect nipples with the tips of my middle fingers and heard her gasp approval.\n\n\"Mmm, do you like to have them sucked, Jillie?\" I asked. I was in heat. This young lady had me so turned on.\n\n\"I do, Mr. G. And sometimes I like them bitten,\" she responded. She turned and reached down to grab my hard cock through my shorts. She gave me a few short squeezes and pulled the top of her dress back up. \n\n\"Come find me,\" she implored, as she strode to the back door, practically falling out of her dress. I could see the lovely curve of her lower back as she demurely held her dress in place and headed out the door. I blew out the candles, placed the few dishes we had dirtied in the dishwasher and opened another bottle of good red wine. I debated going out just the way I was, but I had just unzipped her dress and knew she had most likely discarded it before climbing in to the tub. What did I have to hide or lose? Nothing, I decided.\n\nSo I threw caution to the wind and undressed, tossing my clothes onto a chair. I'd stayed in shape and wasn't embarrassed by my body. And my cock was hanging heavy and ready. I could feel the not-so-subtle effects of the Viagra and knew that it wasn't going to take much to bring me to full attention. I grabbed the bottle of wine and our glasses and headed for the door. \n\nThe hot tub was down at the end of the patio, overlooking the pool. I could see that Jillie had lit a few of the jar candles that surrounded the tub and I saw the shadow of her form lounging in the burbling water. I could feel my penis bouncing and swaying between my thighs as I approached, and knew she was watching me. \n\n\"Mmm. My dessert is here,\" she whispered from the tub.\n\n\"It is, indeed, young lady,\" I stated as I placed the two glasses on the deck surrounding the tub, poured us both a nice serving and handed her a glass. She floated to my side of the tub, still immersed, and took the glass. We toasted, each took a sip and placed our glasses down. \n\n\"Come sit on the side, Mr. G.,\" she said invitingly. \"Jack,\" she added for good measure and with a smile. \n\nI followed orders, placed my legs in the swirling water and sat at the edge of the tub. I leaned back on my elbows on the surrounding deck and spread my legs. I could feel the fullness of my cock hanging heavy and ready between my thighs and watched her glide through the water until she was between my legs. \n\nShe had put her hair up in a twist and looked sexy as hell in the combination of uplight from the tub and the ambient light from the few lit candles surrounding us. She placed her hands on the top of my thighs and her head rose up from between my legs.\n\n\"Hi,\" she cooed.\n\n\"Hi, Jillie,\" I whispered back.\n\nShe pulled up just high enough to place gentle kiss on the top of my shaft. It wasn't going to take much to get me fully erect, but she was just barely teasing me at this point.\n\n\"Mmm. It's beautiful Mr. G. I want to make it hard,\" she said softly, licking the mushroomed head.\n\nI felt her wrap her slender hand around the root of my shaft and cup my heavy hanging balls with her other hand. There are few sights that are more of a turn-on to me than seeing a lovely woman handle my cock with care. I felt a surge of arousal race through my veins as she gingerly began to fondle me. Her soft touch had me literally rock hard in no time as I watched her manicured fingers, a thin silver ring around her middle finger, slowly stroking my length as her other hand gently massaged my tightening balls. \n\n\"God, you're so hard. Harder than a lot of the guys at school, though they're usually drunk on their asses,\" she laughed. I could see her looking at my steely hard erection as she leaned in to lick me. She started low and lathered my shaft with saliva as she ascended to the bulbous tip, only to lick her way down the length once again. She kept looking up at me, making eye contact to ensure that I was enjoying her touch. My lustful gaze and an erection at full staff left no doubt to the answer to that question.",
        "She finally pulled up high enough so she was slightly out of the water, her soft boobs hanging and swaying. She positioned herself just above the helmeted head of my cock and opened her mouth to suck me. She descended slowly, only taking a few inches, before retracting and doing the same thing again. Slowly, ever so slowly, she began to suck my dick; occasionally looking up to make eye contact. I could feel her other hand gently massaging my ball sac as she began her blowjob in earnest. \n\nShe whimpered and moaned as she sucked, making loud slurpy sounds when she'd disengage for a moment, only to return to sucking. A few times she tried to take a little too much and I heard her gag softly - such a wonderful and sexy sound. She pulled off, but didn't let go - descending down the length of my shaft. She didn't stop at the bottom, but kept going until I felt her tongue on my balls, and then my ball in her mouth. She lightly and blindly stroked my rock hard shaft above as she sucked one testicle, then the other, before ascending once more to go down deep.\n\nI gasped. \"Oh, Jillie. Suck me baby,\" I implored.\n\nShe had certainly been getting a good education based on my earlier conversation with her. But she had obviously been honing her cock-sucking skills as well. Lisette had been my high water mark in the blowjob department, but her younger sister was going to give her a run for the money. \n\nHer mouth slid up and down my raging hard-on like liquid silk. She accented the up and down motion with a light grip from her slender hand as it paralleled her mouth. The feeling was exquisite. \n\nShe began to moan and spit on my cock now, starting to get aroused herself as she worked to get me off. But I wasn't quite ready to come. The night was still relatively young and I wanted this aroused state I was in to continue. So I reached down and lifted her head and spoke.\n\n\"Let me taste you, Jillian. Let me see that beautiful pussy you're hiding. My turn for dessert.\"\n\nJillie smiled and disengaged, leaving my cock to waver stiffly back and forth. She pulled back across the tub and hopped up on the deck. She spread her legs extremely wide and rested each foot on the edge of the tub, her knees in the air. Leaning back on one arm, she used the other hand to reach down and rub her pussy a few times. Her entire body glistened and her pussy show like a bright pink star. \n\n\"Come and get it then, Mr. G. It's all yours,\" she whispered. I dropped down in the water and scooted across the tub on my knees. I was no longer interested in my own arousal; that would return. What I wanted was to taste her hot young cunt. \n\nShe placed her fingers in a vee and pulled her lips apart, opening up her pink hole for me to see. Her outer lips were puffy and formed a perfect fleshy frame for the juicy gash of her inner lips. The furls folded in on one another and the edges of her lips splayed out like little welcoming flaps. It may have been the most alluring sight I had ever seen in my life. She was opening up her sex and inviting me in - inviting me to look and to touch and to taste her. \n\nI pulled in close and wrapped my arms up under and over her long lean thighs, anchoring my face only inches from the deep juicy gash of her sex. I pursed my lips and puckered them directly over her clit, sucking ever so softly. I heard her catch her breath as I stuck out my tongue to lick the juices out of her delicious hole. \n\nNow that my mouth had latched onto her pussy, she rearranged her legs to be more comfortable. She wrapped them over my shoulders and crossed her ankles on my back. I in turn slid my hands under each soft cheek and lifted her hips up off the edge of the tub. Her soft ass felt incredible in my hands and the taste of her juices was driving me wild with lust. I clasped her cheeks and pulled her pussy into my face, drowning myself in her warm womanly flesh. She tasted devine; a sweet tart nectar that just made me want more. \n\nI could feel her feet digging into my back as she lifted her hips and ground her sex into my mouth. I varied my motions - tonguing, licking, sucking, moaning, kissing. Her gasps and occasional words were encouraging me on. I rearranged my hands on her ass so my thumbs were toward the inside as I spread her holes and delved down a few inches to probe her tight little asshole with the tip of my tongue.\n\n\"Oh, Mr. G. That feels so fucking good. God damn! Eat me...oh, fuck!\" \n\nShe was on fire and so was I. I buried my nose in her hot cunt so I could really probe her ass with pointed tongue. Not every woman responded to this sort of exploration, but Jillie did. Her hand on my head pulled me in and indicated that I was in an area that would have to be explored later. \n\nI pulled up again and began to lick her length with a broad flat tongue - all the way from the sweet little pucker of her anus up to her engorged clit. Her clit was easy to find as it was a hot silky little nubbin of nerves, almost like a mini-erection poking out of the folds of her hood. She readily responded when I sucked and flicked my tongue on her mini pearl. I doubled down and began to eat her for all I was worth; determined to bring her to orgasm here and now. \n\nThe sounds of me sucking and moaning, the chill of the night air, the effects of the wine, the burbling water and soft lighting, totally consumed both of us. I wanted her to come in my mouth and I'm sure she could tell just that. I wanted her to flood me with her juices and I was eager to drink every drop.\n\nI could feel her edging closer. Her grip on me tightened as her breathing became erratic. She was making strange breathy noises and almost violently pulling my head into her crotch. In a high pitched voice that didn't even sound like her, she began to speak in a voice that sounded like she was clenching her teeth.\n\n\"Oh, fuck, Mr.G. Oh, don't stop. Don't stop...I'm gonna cum. I'm gonna...ahhhhh FUCK!\"\n\nShe screamed. As she exploded. The copious juices I'd already been sucking were joined by a flood of tangy sauce that covered my face and pulsed into my mouth. Her body spasmed in waves of pleasure as her orgasm ripped through her body and she jerked involuntarily to the rhythm of her climax. \n\nI'd made my share of women come over the years, but I wasn't sure I'd ever experienced such a powerful orgasm from a partner. Little aftershocks rippled through her core as her orgasm began to slowly subside and I could feel her body begin to relax. I set her ass back down on the tub deck, lightly kissed my way back up her thighs and loosened my grip on her. I hadn't realized how tightly we'd been bound until I started to disengage.\n\nI looked down at her pussy and smiled. Her sex was open and gaping; a juicy slice of shiny pink that shone in the soft light of the tub and candles. She made no motion to close up or pull away. She left her legs open and let me look at her incredible beauty. This girl was not shy about her body, nor should she be. She was stunning at that very moment. Her legs were spread wide and her lovely young pussy was fully on display. She had reason to be proud of her sex and the confidence she displayed in showing me her treasure only added to her sexual allure. \n\nShe eventually closed up shop and slid down into the water, throwing her arms over my shoulders. We kissed passionately as she pressed her body against me. Her kiss was deep and probing, obviously looking to see if she could taste herself in my mouth. She pulled away and looked at me with intense lust in her eyes.\n\n\"Damn, Mr. G. Where did you learn to eat pussy like that? That was amaaaazing,\" she offered. \"Lissie said you were good. She wasn't kidding.\"\n\n\"Thank you. Believe me when I say that it was my pleasure. I loved tasting you, Jillian. I may want seconds on dessert,\" I joked.\n\n\"And what would you like?\" she asked, reaching down to cup my penis.\n\n\"Actually, if you wouldn't mind, I'd like to head upstairs to my bed and fuck you into next week,\" I said with unabashed honesty She giggled in response; such a sexy sound.. \n\n\"Mmm. Sounds good to me. Let's go,\" she responded. She stood up and crawled out of the tub with me close behind. We grabbed two towels and began to dry one another off. She stood with her hands up in the air, allowing me total and unfettered access to every corner of her body as I dried her off and ogled her beauty at the same time. She then took her turn, taking extra care to make sure my ass was totally dry before concentrating on my semi-hard dick. \n\nShe suddenly flung her towel aside and kneeled at my feet, taking my hardening member into her hand and guiding it to her waiting mouth. In an instant she was sucking me back to full strength and with a vengeance. There was an intensity to her blowjob that was powerful. It felt like there was nothing she'd rather be doing than sucking my cock. I knew, however, that her prime motive was to get me rock hard again and she was doing that in spades. My cock strained skyward as she let it go and stood to head inside. \n\n\"Let's go,\" she pleaded. \"Just don't knock anything over with that thing,\" she joked as she took my hand and we headed toward the door. My erection bobbled stiffly as we walked inside. I just hoped the girls didn't come walking through the door at that moment. \n\nI suddenly noticed that Jillie had her wine glass, but I didn't. I excused myself to rush back outside to get the glass and bottle of wine from the hot tub deck. As I was grabbing both, I noticed her sexy little dress lieing in a small heap near the tub, next to her high heeled sandals. 'Don't want to leave those there,' I thought to myself as I scooped them up. \n\nWhen I returned to the kitchen Jillian was standing at the island, totally naked and looking sexy as hell. God, what an incredible body! Her curves were relentless.\n\n\"You left these outside,\" I informed her. \n\n\"Oops,\" she said, a little embarrassed. \n\n\"I think as punishment you should have to put the sandals back on,\" I chided as I nuzzled into her from behind.\n\nShe leaned down to step into the sandals and was a good three inches taller when she stood back up, her ass now perfectly aligned with my hard-on. I wrapped my arms around her exquisite body and kissed her neck. She leaned into my embrace and pushed the bubbly deliciousness of her ass against my rigid shaft. She then bent forward, face down on the island, pushing her ass up and against my thickened rod. \n\nSuddenly, and unexpectedly, she raised a knee onto the counter and pulled herself up, her other knee following. She was now on the counter and leaned forward, head down, and her beautiful ass in the air. This couldn't be particularly comfortable for her, but the visual imagery was astounding. She spread her knees apart slightly and reached behind to spread her cheeks. \n\nMy God, the view was amazing. Her exquisite pussy was gaping with arousal and her perfect little asshole was a light brown sphincter of desire. Her inner lips were unfurled and glistening with her flowing juices. I couldn't remember a lover ever displaying herself in such a blatant and purely sexual way. I buried my face in her sex once again and moaned deeply. I could hear her groan with approval as my tongue delved deep into her hot juicy hole. \n\n\"Oh, yesss,\" she hissed. \"Suck my pussy, Mr. G.,\" she pleaded. \n\nI devoured her. All of her. I ate her asshole and I ate her cunt and I sucked her flesh like it was my last meal - forever. And she was so sensitive, reacting to the slightest twitch of my tongue or puckering of my lips. Hours before I'd been sadly prepping a solo filet; now I was madly sucking the juicy young cunt of my daughter's college buddy as she kneeled face down on my kitchen island. She tasted so fucking good. \n\nI was pretty sure I could tongue her to another orgasm, but I was ready to explode myself. So I took the initiative and halted our bizarre embrace.\n\n\"Come on, Jillie. We were headed upstairs. Let's get there,\" I urged. She immediately hopped down from the island, her young boobs bouncing pertly as she grabbed my hand and we headed for the stairs. I grabbed her clothes and mine on the way. My erection was in full force and bobbing stiffly as we started up the stairs. It was getting late and I needed to fuck this young lady well before my daughter and her friends returned. \n\n\"I want to follow you and watch you walk,\" I said, as I dropped behind a few steps, watching her tight little cheeks twitch as she ascended each riser. The heeled sandals added a lift to her body and elongated her lean legs in a sinful way. As she turned on the landing and continued to climb the stairs, her hips swayed and the tight vee of her pussy literally oozed out between her legs. I couldn't tear my eyes away from this incredible sight.\n\nI followed her down the hallway, my erection bouncing at the sight of her twitching cheeks. As we entered my bedroom Jillie slowed down and waited for me to lead the way. I wandered past her, sat down on my bed and held out my hand, inviting her over.  \n\n\"Let me touch your body, Jillian. Your beautiful body.\"\n\nShe approached, but stopped just out of reach. She was going to let me touch her, but not until she was good and ready. The wanton smile on her face told me she was going to tease first. She ran her hands over her body, giving me a preview of what I might soon be able to fondle. She cupped her breasts, lifting them, offering them to me. She jiggled them and smiled, showing how natural and soft they were. I'd always been a sucker, literally, for pink nipples, and Jillie's were a lovely shade that contrasted beautifully with her light tan. \n\nHer hands slid down over her belly and cupped her bald sex. She was totally smooth and stared into my eyes as her hand curled between her legs and sunk into her steamy cunt. She closed her eyes, fingered her sex and then brought her fingers to her mouth. As she sucked her fingers, she turned around, looking back at me over her shoulder. The gap between her thighs was highlighted by a puffy creased bulge that begged for attention.\n\nShe reached behind and placed her hands on her butt, then pulled on her cheeks to open her sex from the rear. She smiled over her shoulder, knowing what she was exhibiting. Her middle finger probed her asshole, dipping it in up to the first knuckle as she gave me a look that said, 'look what I'm doing.'\n\nShe turned.\n\n\"Will you walk back and forth for me, Jillie? I want to watch you move,\" I seethed. \n\nShe complied as I leaned back on the bed on one elbow, lightly stroking my rigid cock with my other hand. \n\n\"Mmm, I love to watch a man get hard while looking at me,\" she cooed as she complied with my request. She strode to one side of the room, turned dramatically, all the while watching me stroke my length. Her body was all movement. Her tits bounced firmly with each step, her hips swung seductively and her long legs seemed to stretch forever. Her pussy looked so compact and hidden as she walked. I couldn't wait to open her up and explore her inner recesses once again.\n\nAfter a few passes back and forth she approached me, much closer this time.\n\n\"Do you want to touch me, Mr. G.?\" she asked.\n\n\"Oh, yes,\" I replied. \n\nShe now stood within reach, her breasts jutting forward and her nipples stiff with arousal. Her smooth skin looked flawless. I couldn't believe this beauty stood willing and ready for my touch. I brought both hands up to cup her breasts and feel their silky weight. \n\n\"Are your breasts sensitive, Jillian?\" I inquired.\n\n\"Oh, yesss,\" she responded. \"Very. Especially my nipples,\" she cooed as my fingers lightly grazed over the stiff pink tips. I looked up into her eyes as the thumb and forefinger of each hand lightly rolled her stiffened nubs. She moaned under her breath as I returned to lifting and kneading the sultry flesh of her breasts. So lovely.\n\nGood God, I could fondle this woman forever. Her breasts felt so soft and full in my hands. She clearly was enjoying my manual massage and arched forward to give me full access to her magnificent tits. I reached to touch her shoulders, her upper arms, her neck. My palms slid down along her sides, over the sinuous slope of her hips and down the outside of her sleek thighs. Her curves were magnificent and I could feel her body responding to my roaming touch. \n\nBut as much as my hands wandered, they kept returning to her wonderful breasts. I couldn't tear myself away. They moved and shook with her slightest movement. I loved the feel of them in my hand as I lifted and fondled their incredible softness. She seemed to respond to both a light and a soft touch. When I grazed her nipples with the tips of my fingers, she shuddered, And when I grabbed her tit flesh more forcefully, she groaned with arousal. I couldn't wait to watch them bounce and jiggle when I fucked her. \n\nShe finally turned so I now had access to her backside and I supplanted her tits with her perfect little ass. It was tight and round and oh so squeezable. I spread my hands wide and massaged her cheeks, pulling them apart to expose the cute little sphincter of her asshole along with the juicy puffy lips of her cunt. She bent forward slightly to give me better access and an even better view. The aroma of her arousal wafted to my nostrils and went straight to my brain. How was I ever going to let this woman go?\n\nShe turned around again and leaned over to take my dick in her hand as her mouth came close to my ear. As she gently stroked me, she whispered.\n\n\"When I get back to school, will you call me, Mr. G.? Will you talk dirty to me on the phone and tell me all the things you want to do to me?\" Her hand went down to cup my tightening balls before wandering up the length of my shaft again. She had a nice soft touch, just the way I like it.\n\n\"You like dirty talk, Jillian?\" I asked, knowing the answer to the question.\n\n\"Mmhmm. I do. And I love to talk on the phone and touch myself. Could you handle that?\" she said, as she stayed just inches from my ear. She was lightly jerking the top couple inches of my erection now, gripping me with gentle perfection. \n\n\"I think so, Jillie. I do. I think I could talk about anything that you wanted to. Anything,\" I whispered back.\n\n\"Good,\" she responded as she crawled onto the bed to my side and leaned down to take my rock hard cock into her warm wet mouth. I lay back and let the feeling of her lips enveloping my rigid flesh just take over. Her position on her knees on the bed meant her soft breasts were hanging and swaying directly below her. I closed my eyes and reached my right hand down to palm the quivering flesh of her hanging boobs; so incredibly soft and wonderful. As she bobbed up and down her tender tit flesh bounced in and out of my hand, her stiff nipples scraping my palm. I was in blowjob heaven. \n\nIf you'd told me a week earlier that I'd be laying on my bed on the next Saturday night getting incredible head from a gorgeous young twenty year-old, I would have thought you were nuts. But here I was, relishing Jillie's slippery tongue as it danced magically up and down the length of my shaft. She went deep a couple times and gagged slightly, pulling back as strands of gooey saliva spanned between her wet mouth and the bulbous mushroomed head of my dick. I was in ecstasy.\n\nI knew I would have been rock hard in this case, but I could also tell that the Viagra surging through my veins was giving me an extra kick. I felt so hard and huge, which contrasted so nicely with Jillie's warm velvety mouth and the soft hanging flesh of her magnificent bosom. My left hand rested on her head as she sucked me off and I pulled my right hand out from her breasts to fondle her ass. I couldn't help myself. I spanked her left cheek hard and heard her whimper. She moved around a little bit more so her ass was more accessible, still sucking me with a vengeance. I slapped her ass again and felt her disengage for just a second to say, \"Yesss.\"",
        "I reached my hand from behind to explore between her legs and felt how incredibly wet she was, dripping down her inner thighs. My fingers explored the slick folds of her lips and lightly twiddled her engorged clit as she tenderly sucked my dick. \n\nShe continued to move around to her left, still sucking, and finally raised her left leg up and over my head to get into a 69 position. I stared up at her gaping sex as this new position changed the angle of her sucking. She gave me a minute or two to stare up into the wide open beauty of her juicy cunt before descending upon my face. \n\nI was drowning in her pussy as her sweet honey gushed into my mouth. My hands reached down to cradle her hanging tits as she gagged again on my girth. She ground her cunt down on my face, moaning and writhing as we sucked at each other with an intensity that defied description. God, my dick was deep in her mouth, my tongue was exploring her pussy and I cradled her magnificent dangling breasts in each hand. Had I died and gone to heaven?\n\nMy hands left her breasts and I curled them around to grab her cheeks again, spreading them as much as I could to go deeper with my tongue. I swirled my tongue through the fleshy furls of her inner lips, sucking and moaning with abandon. I was completely and utterly lost in her hot wet cunt. Nothing had ever tasted so good. She ground her soaking wet pussy down on my entire face, drowning me in her flowing juices. \n\nI had lost all sense of protocol by this point as my tongue slid up her crack and delved deeply into her asshole. I opened my mouth and began to French kiss the tight sphincter of her anus. This was driving her crazy as I could feel her diving south herself, enveloping my balls with her hungry mouth. We were literally devouring one another. Neither of our tongues knew any limits as we explored each other's asses with abandon. \n\nI think we were both ready to change it up at the same time as I pushed her slightly and she yielded to a new position - swinging around to face me and get on top. I lay comfortably just watching this gorgeous creature before me, her tits swaying as she grabbed my rigidity and flipped her long hair back to one side of her head. She cradled my dick and pressed it against her pussy, moving her body so that the gash of her sex slid back and forth along my length. Then she grabbed me by the root and guided the mushroom tip back and forth over her engorged clit. The head of my cock glistened with her nectar. \n\nShe rearranged her body so my stiff cock was pinned against my stomach. Rather than insert it into her creamy hole, she began to press down and slide her splayed lips back and forth along the length of my erection. We both gazed down to watch her labia caressing the veiny girth. It shone with the residue of her own arousal as her lips caressed me and she ground her clit against the length of my shaft. Damn, it felt good. I cupped her breasts once again, reassuring myself that they were, indeed, as impossibly soft and wonderful as I thought they were. I pinched her nipples again, driving her wild. \n\n\"Fuck, I need you inside me, Jack,\" she seethed, grabbing my dick with a purpose now. I wasn't going to argue. I needed to be inside her too. She placed the head of my cock at that slight indentation that every man longs for, knowing that he's going to enter his lover, and let go. She put her hands on my chest and arched her back, allowing just the tip to enter her tight snug hole. She felt exquisite and she had only accepted a little over an inch of my hardness. \n\nI cupped her generous breasts as, inch by inch, she slowly and surely impaled herself on my rock hard essence. We both embraced the moment, allowing our senses to guide us. Ever so slowly she took more and more of me, inching down, until I could feel her bottom out. She ground her clit against the very root of my cock as I savored the feeling of being completely and totally inside her.\n\nBut she was running the show at this point and I just let myself be a stiff dick for her to play with - for her to get off on. And get off she did. Once she had absorbed and accepted my length, she was ready to play. Up and down she began to slide, slowly at first, but increasing her speed and intensity as she got used to being impaled by my cock. I loved looking down to see my dick disappearing into her body, her slick cunt tightly wrapped around my thickness. \n\nShe had incredible hip movement too. Some girls just bounce up and down and show little ability to vary the movement. Jillie got this back and forth thing going with her hips - almost like she was fucking me with her cunt. I rested my hands on her hips so I could feel the rhythm of her fucking motion. And she was enjoying herself; that was for sure. She was murmuring and grunting as she fucked me. I kept lifting my hips up to meet her, giving her full access to my manhood so she could satisfy herself.\n\nI slapped her ass, hard, and she moaned and screamed, \"Yessss!\" She leaned down, continuing to move, and whispered in my ear. \"I like it kind of rough, Mr. G. Not all the time, but sometimes. And one of those times is tonight. I want you spank me and fuck me hard,\" she continued, as she whispered through clenched teeth. She never stopped moving and continued to impale herself on my stiff dick as she talked. \"I want you to pull my hair and slap my ass and fuck me, Mr. G. I want you to fuck the shit out of me,\" she seethed, just as she descended hard and her body crashed down against my hips. \n\n\"Mmm, I intend to, Jillie. You're going to get the fucking of a lifetime,\" I groaned. \"But first I want you to come. Do you want to keep riding me? Can you come that way?\" I inquired, pretty sure I knew the answer.\n\n\"Yes,\" was all she said as I suddenly lifted up and began to bang her from below. I anchored my feet into the bedspread, grabbed her cheeks tightly in each hand, and began to fuck her from underneath, slamming my dick up into her. This sudden reversal threw her for a loop and she opened her lovely mouth and cried out as I pummeled her with relentless upward thrusts.\n\nSuddenly she rose up, just as I stopped and laid back again. I was ready for her to ride me. And she did. I watched in awe as she closed her eyes, got set on her haunches and began to ride me like there was no tomorrow. Up and down she rode with an intensity that was borne out as much by her joyful expression as it was by her movement. Each time she'd rise to a certain height, my dick still barely engaged with her magnificent pussy, only to crash down hard again and impale her body on my stiffness. Over and over, faster and faster she went, crying out like she couldn't get enough. \n\nI could have easily come from the intense intersection we were experiencing. But I wanted to wait and hold off for just a bit longer. I did my best to not think about the intense pleasure I was feeling as Jillian rode me like a banshee. Instead, I focused on how much pleasure I felt like she was deriving from our fuck. I loved that she almost seemed to be using me; using me and riding me for her own intense pleasure. She was moaning loudly now; all pretense was long gone. I wanted her to come on my cock and I told her that.\n\n\"Come for me, Jillian. Ride my dick, baby. Squeeze me with that sweet pussy. Come all over me, Jillie. Come...\" I exhorted, as she rode me like she was in another world. \n\nI reached down and placed my hand on her lower tummy, my thumb stretching down to graze her clit as she rode me. I let my hand just ride on her body as my thumb strummed her sex. Her eyes were closed and her body was moving like an animal in heat, seeking her pleasure, groping toward orgasm. I reached back, grabbed her ass with both hands and pulled her down, adding my brute strength to the force of gravity. And with a pounding motion that produced those fleshy thumping sounds of a man and woman slamming their bodies together in sexual union, she edged toward the brink. \n\n\"Oh, fuck. I'm gonna come, Jack! I'm coming, oh fuck, I'm coming!!\" she screamed as her body was wracked with a powerful climax that ripped through her being and shuddered her body like a rag doll. Her body jerked and her legs both shook as she made an unearthly guttural sound of satisfaction. I could feel her fluids just flowing down onto my cock, making our joinery a complete mess. The waves of orgasm slowly subsided and she lay her head on my chest. \n\nI had worked hard not to come at that moment. I wanted to. I certainly could have. But I also wanted to still fuck her and I was pleased that I had focused on her pleasure and brought her to the brink and beyond. \n\nJillian cuddled up to my ear and whispered. \"Mmm, that was amazing Mr. G. God, your cock was so hard.\" She reached down and felt evidence that it hadn't changed. I was as hard as a freaking rock and ready to fuck her. She giggled as she handled me. \"Still is, I see.\" \n\nShe smiled and headed south, kissing her way down my chest to my rigid root. She arrived at her destination and engulfed me; her over-exuberance leading to a gagging response. \n\n\"Are you gonna lick up all your juices, Jillie? Can you taste yourself?\" I inquired.\n\n\"Mmhmm,\" she responded, her mouth occupied. \n\nShe proceeded to lick up all the juices she'd left on my shaft, cupping my balls gently as she sucked. Then she took me in her mouth again. She altered speeds and kept looking up at me with those big beautiful eyes, her lips wrapped with perfect precision around the head of my cock. I'll never get tired of seeing my erection in a lover's mouth. Never. \n\nAnd, damn, did this girl ever know how to fondle a penis. She may have been young, but she'd handled her share of dicks in her short life span, that was obvious. \n\nShe finished her chores, licking me clean, then crawled up and past me to the head of the bed. On her way, crawling past, she leaned down to whisper in my ear. \n\n\"Come fuck me, Mr. G. I want your cock inside me,\" she crooned. \"Now.\" I couldn't turn down such an invitation. I'm not sure there's a man alive who could. As I turned to crawl across the huge king size bed to her, she knelt facing the headboard, then bent over, face down on the huge pillows. She spread her legs as she knelt forward, offering her sex to me. She reached back to pull her cheeks apart, displaying the just fucked pinkness of her center. Her lips were unfurled and splayed open from fucking. Juices were still dripping from her open core and her thighs glistened with the spill of her nectar. She lightly touched her pussy with lovely manicured fingers. I ached to be inside her. I'd waited all night. Now I was going to fuck her the way she deserved.\n\nBut before doing so I leaned over to lick her a few more times, priming the pump. I sucked loudly and moaned as I lavished her juicy cunt with oral attention. And in such a position, how could I resist tonguing her ass. I probed deeply, moaning as I poked my tongue deep into her butt. She tasted divine; all of her.\n\n\"Ohhh, Mr. G. You're so naughty, fucking my ass with your tongue. Mmmm.\"\n\nI didn't reply. I just pulled up behind her and admired the view of her ass and pussy. Her slender pink lips were splayed open and glistened with the juices of her arousal. She was so ready for me. I guided the head of my dick to her waiting pussy and slid it along her slit, up and down, rubbing her clit with the engorged head, teasing her juicy lips. I heard her gasp and knew I needed to slide in - all the way. \n\nI was so freaking hard and, while she was extremely wet, she was also very young and tight. The head of my cock found that lovely indentation that all men love to find and I pushed gently. She yielded to the slight pressure and I felt her open to me. I moved back and forth slowly, sinking a little more of my rock hard dick with each forward thrust. I heard her gasp softly with each additional inch. The angle was perfect. \n\n\"Oh, Jillie. Baby, you're so nice and tight,\" I gasped.\n\n\"Mmm. Fill me, Mr. G. Fuck me!\" she exhorted. \n\nI was almost all the way in now, and I grasped her lovely hips with each hand and pulled her back at the same time I pushed forward. Her body felt magical. Within moments I was all the way in. I let go of her hips, now that I was home, and reached under to cup the soft hanging flesh of incredible tits. God, I couldn't believe I was actually back inside this beautiful goddess.\n\nI began to move, back and forth, slowly at first, as we fell into a soft steady rhythm. We were just warming up, getting comfortable. I felt so hard inside her and could feel that she was getting used to my size and girth. She began to move back as I entered, then she'd pull forward as I pulled back. It was a gentle rocking motion at first that slowly intensified with each new union. \n\nI stopped for a moment when I was completely buried inside her; the very root of my cock pressing against her ass. I ground around in a circular movement and looked down at the perfect flair of her hips and the lovely round globes of her cheeks. I slapped her lightly on the right cheeks and heard her coo softly. I repeated a light slap on her left cheek and heard her catch her breath. I loved seeing her flesh jiggle tightly as I spanked her sweet bottom. \n\nI pulled back out, almost all the way, only the tip of my rock hard dick still engaged with her lips, and then slammed it home hard. She groaned loudly and I knew it was time to pick up the pace. I began to pump her full, each stroke a little harder, then a little harder still. I grabbed her hips and pushed and pulled her along my length, pounding it home a little harder with each thrust forward. We fell into a nice steady motion that began to increase in speed and intensity. Now we were beginning to fuck.\n\nI loved looking down to see how each thrust into her rippled through her ass cheeks. The sound of our fuck - my hips slapping repeatedly against her soft cheeks - was riveting. Her butt tapered down into the tightest waist imaginable. I could never get tired of this magnificent view. \n\nI heard her gasp as I picked up the pace and watched as her sweet cheek flesh continued to jiggle tightly each time I rammed it home. She was so tight, but so well lubricated. It was an exquisite pleasure and I knew she was feeling the same way. I grabbed her long hair with one hand and felt her boobs swinging freely with the other hand. It was time and I began to fuck her with increasing speed and intensity. \n\n\"Unhh, Oh, God, Jack. Fuck me! Harder!\" I rammed it home as hard as I could. \"Aww, FUCK,\" she screamed loudly. \n\nWe fell into a hard fast steady rhythm that felt natural and right. The sounds of my hips slapping against the soft flesh of her ass was a testament to the increasing pace of our fuck. Sweat was pouring down my brow.\n\n\"Faster, fuck. Oh, God,\" she cried. She was on fire.\n\nI grabbed her hair and rode her like a horse, pounding into her with relentless thrusts. She screamed.\n\n\"Yes, Oh, fuck! Yes!!\" I doubled the speed and her response was just one loud continuous moan. She was beyond words. We both were. \n\nI was breathing hard and rearing back with all my might to fuck her properly and well. I pushed her down further on the bed so that her torso was on the mattress, but her ass with perched up in the air. I rearranged my knees so I had a perfect angle to drill down into her as deeply as possible. \n\nAnd that is when we began to fuck with such force that our two bodies became one. I was so deeply rooted inside her and pounding into her with such depth that our union was complete. She arched her ass in the air to accept me to maximum depth. \n\nWe both continued to make verbal sounds that made no sense. It was not language, it was just guttural responses to a complete and utterly perfect sexual union. I reared back and slammed into her sweet wet pussy - over and over and over again. The bed was shaking now. Both of us were moaning and screaming nonsense. The slapping sound of our bodies slamming together was the most basic carnal rhythm and I felt an orgasm begin to well up in my very core. She screamed again for me to fuck her, fuck her harder - and I did my best as sweat poured down off our bodies. \n\n\"Oh, fuck, Jillie. I'm gonna come in you baby. I'm gonna...\"\n\n\"Me too! Don't stop! Don't...\" she implored as she lifted her hips up to meet each plunge. \n\nI couldn't talk any more. All I wanted to do at that moment was fill her sweet young body with hot cream. I wanted my seed to explode inside her and fill her hot cunt with cum. \n\nI pushed up on my arms, reared back until just my cock was pistoning in and out of her sweet slippery hole. It was pure and unadulterated pleasure and my orgasm arose like a monster from the deep. I knew she was edging closer too, both of us swept away by the intense sexual moment of pure lust and need. \n\n\"Here comes!\" I screamed as the first jet of hot semen spurted forcefully into the depth of her body. It was followed by another, then another, as I emptied myself and flooded her womb with jet after jet of hot semen. At the same time I could feel her body spasming in sync with mine as we both shook and cried from an overload of passion and carnal bliss.\n\nWe literally collapsed on the bed. I could feel our combined juices leaking from her pussy as my cock softened slightly and I slid out of her pussy. I felt an overwhelming sense of gratitude at that moment as I pulled Jillian into my arms and we brought our hot sweaty bodies together in an intimate spoon. I kissed her neck as I felt our heart beats begin to settle down back into a normal range. \n\n\"Wow,\" was about all I could utter at that moment. \"You are one amazing woman, Jillian. An amazing lover.\"\n\nShe pushed back against me to cuddle into our embrace.\n\n\"Mmm, so are you Mr. G. That was incredible.\"\n\nAn aura of calm and satisfaction settled over us as we embraced on my bed. And it was at that moment that we heard a car pulling into the driveway.\n\n\"Oh, shit,\" cried Jillie. \"Laura is home.\" She catapulted out of bed, as did I. She grabbed her clothes and shoes and headed for the door. \n\n\"Bye, Mr. G. Thank you,\" she said in a quick conspiratorial manner, her glorious tits and ass jiggling sinfully as she scurried for the door \n\n\"Thank you, Jillie.\"\n\nShe scooted down the hall to her room, returning to her sick bed so her friends would be none the wiser. I donned my shorts and shirt and headed downstairs. The girls came plowing through the garage door a few minutes later.\n\n\"Hi, Daddy.\" Laura was followed by her posse. They looked like they had had a great time, but were still up for a little swim and relaxation. We spoke for a few minutes, they filled me in on their exploits and I left them to the rest of the evening and headed for the stairs and bed. Laura called after me.\n\n\"Daddy, did you check in on Jillie? Is she okay?\" she inquired with some concern.\n\n\"Yes, sweetie. I did. She's feeling much better. I think she's up in her room. You might go check on her yourself,\" I suggested.\n\n\"I will. Thanks, Daddy.\"\n\n\"My pleasure, Laura.\" Truer words had never been uttered. I headed upstairs to sleep; one very happy and satisfied man.\n\nI was up early the next morning and the girls weren't far behind me. It was Sunday and they were planning to head back to Clemson on the early side. They'd hit the beach for a bit in the morning, have lunch and be on their way. I decided to make a big breakfast for them and was busy making bacon and scrambled eggs as each young lady sauntered down from upstairs. Each one was wearing some kind of sleepwear, but didn't seem to mind that I was seeing them in some pretty skimpy garb. I felt like I was comfortable background at that point. But who was I to complain?\n\nJillian eventually joined the party and was regaled with all that she had missed the previous night on the town. She listened politely and caught my eye once or twice. We were playing it very cool and not even her little skimpy shorts and cropped tank top with no bra was enough to make me ogle her in front of her peers.",
        "I felt a bit strange, I have to admit. Last night we'd been a fucking frenzy, yet this morning I was just a parent of one of her college buddies making breakfast for the crew. I didn't mind, though. We'd had an incredible night and there was no telling what might become of our little interlude.\n\nThe girls finished breakfast and headed down to the beach en masse as I retired to my office to do some paperwork. They returned a few hours later and headed upstairs to pack. It sounded like they were all upstairs when I heard a tapping on my door frame. I looked up to see Jillian standing there in a tiny little bikini and a towel wrapped over her shoulder. I smiled and stood up, walking around my desk toward her.\n\n\"I just wanted to say good-bye. And thank you,\" she said softly. I knew this had to be brief; there was no telling when someone would come downstairs.\n\n\"I'm the one who should be doing the thanking, Jillian. Last night was, well, amazing.\"\n\n\"It was,\" she responded. She walked up to me brazenly, stood up on her tippy toes and gave me a lovely soft kiss. I wanted more, but even that small gesture was fine. She touched my cheek and looked me in the eyes.\n\n\"Call me.\"\n\n\"I will,\" I responded, lightly touching her arm.\n\n\"Thanks for the hospitality, Mr. G.\" She turned to go and my eyes drifted down to her perfect round butt. I smiled thinking I'd had my tongue deep in every hole only twelve hours earlier. She hesitated at the doorway and turned to look over her shoulder.\n\n\"Bye.\"\n\n\"Bye, Jillie,\" I said in reply.\n\nAnd then she was gone. The girls all left a short time later. I got hugs all around, including an innocent one from Jillian. I watched them pull out of the driveway and turned to go back to my office.\n\nWhat had just happened was hard to fathom. But I had a smile on my face from ear to ear and a phone number to call anytime I needed a little company. Or a little dirty talk. I sat down at my desk and tried to lose myself in the work at hand."
    ],
    "authorname": "gapster7",
    "tags": [
        "clemson",
        "charleston",
        "south carolina",
        "the beach",
        "older man younger woman",
        "father and daughter's roommate",
        "older man college girl",
        "college girls",
        "hot tub",
        "father and college girl"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/lisette-ch-02"
}