{
    "title": "Talla's Fallen Temple Ch. 27",
    "pages": [
        "Zhair'lo awoke to the ash grey skies of a cold pre-dawn, only vaguely remembering his telepathic conversation with Talla. It was Zia, after all, whose bed he shared. Curled up behind her, he eyed her naked body over her shoulder, her slim breasts gently rising and falling with each breath.\n\nThe faint smell of sweat from the mandatory exertions of the night before tickled at his nose. Anticipating the weapons lessons ahead, he knew he wouldn't get back to sleep, so he gently extricated himself from his companion and slipped out of bed.\n\nHe wouldn't need his armour to go to breakfast, would he? No, probably not. Clothes in shirt and shorts, he slipped out the door.\n\nFor the first time, the Barrack felt like home to Zhair'lo. He had graduated, regardless of any impending lessons or rituals, from intruder to resident. Sure, he hadn't fought in any battles yet, nor even begun weapons training, but he could move around inside the Barracks at his leisure, just as he had in any of the dozens of places he'd lived before.\n\nHunger owned his list of priorities and the mess became his only plausible destination. The sun peeked mournfully at the horizon as he nodded his way past a quartet of guards and entered the mess. It was unusual to have the mess guarded like this and it made Zhair'lo uneasy.\n\nOnce inside, however, he noticed a small group of men, looking more grey than could be justified by the light that filtered in from the distant horizon, sitting in a dark corner of the mess. Apart from them sat another man, clothed in the same manner, but looking brighter perhaps due to the way the light struck the table he had taken for himself.\n\nZhair'lo knew this couldn't be all of the prisoners they'd taken and he wondered what had been done with the rest.\n\nAs he swept toward the kitchen, he watched the lone man carefully. Zhair'lo got the distinct impression from the way the larger group cast dark eyes his way that they kept away from him purpose, as if he didn't really belong.\n\nTaking his tray, Zhair'lo made a decision. If the guards at the door wanted to stop him, they could do so and he could feign innocence.\n\nHe took a place opposite the man and, to avoid appearing aggressive, a little off to the side so they weren't staring directly at each other.\n\nHow, Zhair'lo wondered, did his people greet each other?\n\nWith a mental shrug, he spoke, \"Zhair'lo.\"\n\n\"Is that your name?\" the man heaved a sigh.\n\nWhen Zhair'lo nodded, he added, \"I'm Saren. Were you there yesterday?\"\n\n\"Yeah.\"\n\nSo far so good. The Fighters standing guard at the doors ignored him.\n\n\"How you guys doing today?\" Zhair'lo thought it would be a polite question.\n\nSaren shrugged in that pathetic sort of manner Zhair'lo would forever associate with the lamest group of barbarians he could ever expect to meet. \"Better fed than we would have been if you people hadn't come along.\"\n\n\"You all looked pretty hungry.\"\n\n\"You have no idea,\" Saren twitched an eye toward his fellows in the corner. \"What'd you do with the others?\"\n\n\"The others?\"\n\n\"The other half of our 'tribe',\" he spoke the last word with a lot more derision than Zhair'lo would have ever used to describe his own colleagues.\n\n\"You don't know where they are?\"\n\n\"No, don't you?\" Saren shook his head. \"You guys took 'em away in the middle of the night. Haven't come back.\"\n\nZhair'lo realized Saren had no idea of Zhair'lo's lowly rank and consequently expected Zhair'lo to have some inside knowledge.\n\n\"You haven't killed them, have you?\" Saren's tone turned accusatory, perhaps because of the guilty look on Zhair'lo's face.\n\n\"No, I doubt it,\" he quickly raised his hands, palms out, to reassure the former barbarian. \"You were made a promise, after all.\"\n\n\"Promises are important to you people?\"\n\n\"Yes,\" Zhair'lo replied instantly.\n\nAn image of Nadine, riding him in his bed back in the farmhouse, flashed in his mind.\n\n\"But you don't know where they went?\"\n\n\"Not my area,\" Zhair'lo tilted his head sympathetically, \"Maybe they've found jobs for your friends.\"\n\n\"Friends?\" Saren gave another sideways look at the grey lot. \"Do I look well befriended?\"\n\n\"Ah ... no.\"\n\nSaren returned his focus to his plate of food and carefully took another mouthful.\n\n\"You don't get along with the rest?\" Zhair'lo prodded.\n\nSaren chewed for a moment, a dark look coming over his face, \"No.\"\n\nThey sat in silence for a while, neither looking at the other, and ate their food.\n\n\"You expecting us to do work for you?\"\n\n\"What?\" Zhair'lo asked.\n\n\"Use us, like slaves.\"\n\n\"Slaves? I - no - I mean, everyone has to do work. It's only fair.\"\n\nThis wasn't the first time Zhair'lo found himself in the unenviable position of having to defend a way of life he'd rather destroy. But honesty forced him to admit that Saren and his grey friends in the corner would find a far better life with the Temple.\n\n\"What if we don't want to work for you?\"\n\n\"I - uh,\" Zhair'lo stammered to a stop.\n\nThe straightforward question stumped him. What did the Temple do with men - or women - who simply refused to work? Had he ever even heard of such a thing?\n\n\"It's never come up,\" he told Saren.\n\n\"Really?\" Saren rolled his eyes. \"You've never had one lazy lout that had to be kicked into doing his fair share of work?\"\n\n\"Not any one I've ever known,\" he shrugged. \"I mean, if you don't do your job properly, they say the women stop coming.\"\n\nFor a moment, it looked like Saren's heart had stopped.\n\n\"What?\"\n\nWhat had he said? For some reason the blood had drained from the man's face.\n\n\"What?\" he echoed.\n\nThe two of them stared at each other in bewildered silence.\n\n\"The women stop coming? Like they stop feeding you?\"\n\nZhair'lo stared back at him.\n\n\"The women don't feed us,\" Zhair'lo spoke slowly. \"We feed ourselves. Except maybe here where the men and women live together.\"\n\nSaren appeared completely baffled. He seemed about to assault Zhair'lo with further questions when the guards entered the mess.\n\n\"Alright, you lot,\" one of the Fighters called out. \"Time to head back to your quarters.\"\n\nStaring at Zhair'lo, Saren stood and filed out with the rest of the prisoners.\n\nAlone, Zhair'lo finished his breakfast. Noticing that neither Saren nor any of the grey bunch in the corner had returned their trays, he collected those and returned them to the kitchen counter before leaving.\n\nLooking up the long alley leading toward the showers, he could see the rising sun casting a pinkish yellow glow on the horizon. The bright colours washed away the dull blue-grey that had been the day's theme so far. By the time he reached the showers, both he and the entire day were considerably more cheerful, a feeling enhanced by the presence of his fellow Recruits.\n\n\"There you are!\" Zia accused, yanking him under the faucet. \"Get undressed and soap me up.\"\n\n\"Yes, ma'am.\"\n\nHe shucked off his shirt and shorts just in time for Zia to douse him in cold water. Not one of his fellow Recruits now crowding around him, as far as he knew, had so much as taken up the offer to talk to Sergeant Yung - never mind to quit their joint quest to join the Fighters.\n\n\"Where in the nine hells did you go?\" Zia asked over her shoulder.\n\nZhair'lo wondered when it had become a tradition that the boys washed the girls first.\n\n\"Got hungry early,\" he muttered. \"Couldn't get back to sleep.\"\n\n\"I get that,\" Zia admitted with a tilt of her head.\n\nAs she spread her legs so he could wash between her cheeks, a sudden glee came to her voice. \"I bet they'll teach us the knife and sword, too.\"\n\nShe turned to face him with her arms raised as he stood up. Unashamed of her nudity, she eyed him curiously.\n\n\"You can already use a bow, though,\" she peered at him. \"Why are you so eager?\"\n\nLathering up her shoulders, slim breasts and hard stomach, he considered this for a moment.\n\n\"If I'm gonna fight,\" he pointed out, gently rubbing soap over her bald mound, \"I've gotta learn where to stand and when it's safe to loose an arrow.\"\n\n\"Don't you know that already?\"\n\nSatisfied with the cleanliness of her genitals, Zia hit the lever again, dumping another load of cold water over her body.\n\n\"Not really,\" Zhair'lo replied, when he thought her ears were clear again. \"I was a Hunter, remember?\"\n\nTaking the soap from his hand, Zia smirked. \"You've never had to engage a whole herd of deer at once?\"\n\n\"I've never seen them in a battle formation, that's for sure.\"\n\nBut, then again, he thought, their rather pathetic enemies hadn't been much more difficult than a herd of deer, had they?\n\nZhair'lo closed his eyes as Zia ferociously scrubbed at his hair.\n\n\"You ever think about getting a proper Fighter's hair cut?\"\n\n\"Nah, long as it isn't past my shoulder.\"\n\nThe style popular among the older men, especially the Fighters, was far shorter than the way he liked his hair. Now that he thought about it, most of the women had shorter hair than he did.\n\nZia began working her way down his body, spending an unnecessary amount of time washing his penis.\n\n\"Nine gods,\" she muttered. \"I want to jerk you off every time I see this thing.\"\n\n\"What the fuck is wrong with you, Zia?\" Bree asked as she walked past them toward the towels.\n\n\"Nothing!\" she protested. \"He just comes so much ...\"\n\n\"We have training!\" Del rebuked, also having finished her hygienic obligations.\n\n\"Yeah, yeah,\" Zia muttered under breath, \"I wasn't really going to ...\"\n\nAt that point, she kicked the lever that poured a generous amount of water over his soaped up body.\n\nZhair'lo could say this much for Zia: she had recovered very well from whatever reticence she had experienced the previous day. He didn't understand what had bothered her, whether it had been the battle, the sight of death or the weakness of the enemy, but a night of sex and a morning shower had, by all appearances, cleared it up. Whether or not she was alright on the inside, he had no idea.\n\nAs much as he cared about her, Zhair'lo knew it wasn't his problem, nor his place to pry. If Zia had wanted to talk, she would have said something last night between sex and unconsciousness. If she needed to say something later, she was free to do so at any time they weren't training.\n\nWithout any discussion, they other Recruits waited until Zhair'lo and Zia were dressed before heading out to the mess. By the time they arrived, other Fighters had taken up several tables and the room was nearly full. They took their meal trays quickly - Zhair'lo electing only to grab a tall tin cup of water - and sat down.\n\n\"So what do you think we learn first?\" Renzi asked.\n\n\"Swords, I bet,\" Kit rolled his eyes. \"What else?\"\n\n\"The girls, too?\"\n\n\"Women use bows in combat,\" Del paused only a moment in the precise slicing of her chunk of ham.\n\n\"You think they won't teach us anything else?\" Bree put in.\n\n\"We've learned to fight with staffs, too,\" Zia said. \"Why not swords? The fighter women definitely carry short swords.\"\n\n\"Might as well teach all at once, see?\" Renzi said.\n\nZhair'lo thought back, trying to picture the Fighter women when they'd gone outside the Barracks. He was certain they hadn't carried swords while on patrol and he hadn't paid attention to how they'd armed themselves for the raid on the barbarian camp. Now that he thought about it, though, every woman had carried a short sword on her hip. In fact - he held a particular image of the Ranger Hera in his mind - some of them had carried two such swords.\n\n\"Fighting with a short sword will be different, though,\" he said aloud, not to anyone in particular.\n\n\"What?\" Zia asked, stunned.\n\nShaken out of his reverie, Zhair'lo took a sip of his water.\n\n\"You could hold one in each hand, for one thing,\" he explained, setting his cup down. \"For another, the reach would be completely different. Faster, right? But shorter.\"\n\nThey digested this, along with their food, and no one spoke for a while.\n\n\"So do you think we'll start learning together?\" Renzi wondered. \"Or are we going to have separate instructors?\"\n\nA lot of speculation followed, most of which didn't interest Zhair'lo. He wanted to learn how to use a sword, not be subjected to a lot of guesswork on the subject. He did find it odd that, in spite of their multiply upgraded strength, the Fighter women carried short swords. Was this to reduce their encumbrance, given they carried a bow and a quiver of arrows? Would a full size sword be too awkward?\n\nHe tried to picture how combat would work, with the women firing their arrows from behind the men. Then what would happen? If a large group of barbarians reached the line of men, did the women join in? Or were they accurate enough to fire their arrows into a melee?\n\nThat sounded stupid to Zhair'lo, but he didn't imagine himself an expert on the subject.\n\n\"C'mon,\" Zia prodded. \"We're to wait for Sergeant Yung in the practice field.\"\n\nThe other Recruits wolfed down the remainders of their meals and quickly returned their trays. Once they exited the mess, they instinctively fell into a loose version of their proper formation. Zhair'lo was pretty sure they weren't doing it consciously. Renzi just naturally ended up on left, with Kit and Z'rus on his right. The girls fell in behind, where they belonged with bows and arrows they weren't currently carrying.\n\nThe chatter went on until they turned a corner and had a look at the practice field. At that point, all conversation ceased.\n\nNeatly arranged in a small arc stood a set of vertical wooden logs, each about the height and size of the trunk and legs of a human body. Attached to each of the trunks, at different angles, other thinner pieces of wood poked out, clearly meant to simulate arms. Sergeant Yung and several soldiers of lower ranks waited patiently in the centre of it all. \n\n\"Form up!\" the Sergeant called out.\n\nThey rushed to make their two rows directly in front of him.\n\n\"Good,\" he surveyed them. \"Today you're going to learn how to swing a sword.\"\n\nHe began walking along the front of their line.\n\n\"You should expect two things by the end of this day,\" he stopped to stare directly at Kit. \"The first is that your sword arm will be very sore.\"\n\nThe Sergeant began walking again until he found Zia's spot.\n\n\"The second is that you'll know how to kill someone standing as still as log.\"\n\nEveryone knew better than to laugh.\n\n\"Each pair of dummies in front of you has been built to simulate an enemy soldier in a specific attack or defence posture. You will take one of the wooden swords and follow the orders given by the instructor standing nearest,\" the Sergeant intoned, walking between the lines. \"Move now.\"\n\nIn the manner of soldiers doing things in the most direct and simple way possible, the eight Recruits moved forward to stand in front of the dummies nearest them. Zhair'lo and Bree found themselves facing twin, headless wooden statues which had their arms raised in the air.\n\n\"Take a sword,\" the female soldier standing between the two dummies gestured at the wooden swords leaning against the trunks. \"This is how an opponent will appear if he is raising a heavy sword over his head with the intention of crushing your skull. He might also be wielding a club, warhammer or axe. The important thing to realize is that even if you strike a killing blow, you still have to get out of the path of the falling weapon. Now ...\"\n\nZhair'lo didn't miss a single word of the woman's level headed instruction. He was confident his fellow Recruits would follow their instructions with a fascination as deep as his own.\n\nAnd Sergeant Yung hadn't been kidding. By the time the bells of noon rang, and Zhair'lo had rotated through all four station countless times, he could barely feel his arms.\n\n-===================-\n\n\"Tell me what you're seeing,\" the Sorceress of Pussy spoke very softly.\n\nMaksa looked up from her papers, blinking slowly, refocusing her eyes on her surroundings. The underground records room had the same appearance as always. The flagstone floors would never change and neither would the torches lighting the space from their mounts on the ends of the countless bookshelves full of genealogy scrolls. Ever present, the background to all of it, a damp, nipple-stiffening cold suffused the room, bringing a feeling that neither clothing nor fire pits could ever relieve.\n\nThe Sorceress, her elbows resting on the opposite side of Maksa's large work table, peered carefully at her disciple.\n\n\"I've been trying to understand what drives the Heroes, the Catatonic and the Enraged.\"\n\n\"Of this I am aware, Maksa,\" Pussy replied, her voice still gentle. \"What do you see?\"\n\n\"Nothing,\" Maksa waved a dismissive hand at the tallies and scratches on the sheets in front of her. \"There is no pattern I can discern, from father to son, even among multiple generations, that explains where our foremothers went wrong.\"\n\n\"And yet you keep looking.\"\n\n\"It's a matter of logic, Mistress,\" Maksa bit her lip in frustration. \"There is a pattern. I know it. I can - I can feel it.\"\n\n\"As you felt the pattern among the Virgins?\"\n\n\"Yes. And I was right about that,\" Maksa seized this moment of triumph.\n\n\"Disturbingly so, yes,\" Pussy admitted.\n\nMaksa inhaled.\n\n\"I feel I'm grabbing half the problem.\"\n\n\"Pardon?\" the Sorceress raised her eyebrows.\n\n\"Have you ever tried to pick up a large box with just one hand?\" Maksa flexed her fingers in the air in between the two women.\n\n\"What do you mean?\"\n\n\"Mistress,\" Maksa looked up now, her purplish grey eyes spearing the Sorceress. \"When you pick up something small, you can grab it in one hand. But as the things you want to pick up get bigger and bigger, it gets more and more and more awkward, until you just have to use the other hand to hold it comfortably.\"\n\nThe Sorceress, still leaning over Maksa's table, tilted her head in acknowledgement.\n\n\"I feel like I'm trying to pick up the largest box ever with just one hand.\"\n\n\"Frustration,\" Pussy pronounced, summoning all the wisdom she could into her voice.\n\n\"Yes,\" Maksa replied drily, looking down at her work.\n\nIt was then that it hit her.\n\n\"Mistress,\" she said, her eyes coming up to narrow on her superior.\n\n\"Yes?\"\n\n\"When Temples have fallen, that's when we know - when we really know - which men are which?\"\n\n\"We have the semen test ...\"\n\n\"But really, we proved out the semen test because we've seen Temples fall and, separate from that, we've taken men away from Temples to test them?\"\n\n\"Indeed.\"\n\n\"Madra Zen,\" Maksa slapped her forehead. \"So what of the women?\"\n\nPussy stood up and folded her arms. \"What of the women?\"\n\n\"I've been so stupid,\" Maksa let her voice almost go to a whine. \"Oh, nine gods, that's the other hand. Is there any difference in how the women behave when a Temple falls?\"\n\n\"I - how would we - they all defend the Temple, of course,\" Pussy indignantly raised herself up to her full height.\n\n\"Do they?\" Maksa glared. \"According to whom? Who measures that? If a particular woman just curled up in a ball and hid under her bed, who in the nine hells would even know?\"\n\n\"Details are assigned, I'm sure of it,\" the Sorceress stepped back uncertainly from the table. \"Under martial law, things become extraordinarily strict. I've never heard of any woman becoming Enraged and attacking another woman.\"\n\n\"They don't have to go that far,\" Maksa sighed. \"But that has to be the other factor. We've been trying to breed the men for one thing: Heroism against Enraged. Meanwhile, we've been trying to breed the women for what? The ability to take upgrades? The requirement for more powerful Goddesses?\"\n\nThe Sorceress appeared to be having a dizzy spell. She caught herself on the table before she fell. It occurred to her, quite suddenly, that the woman in front of her sported a frightening intellect.\n\n\"What are you saying?\"\n\n\"Our breeding programs may have been working against each other. Unless we can find a way to differentiate the women from each other in terms of their contribution to the Enraged men, there's no point doing any further meddling. We could just be destroying ourselves with ignorance.\"",
        "\"Madra Zen,\" the Sorceress whispered as she closed her eyes.\n\n\"Has the Temple of Gern ever fallen?\" Maksa asked.\n\nHer eyes still closed, Pussy shook her head.\n\n\"What Temple fell most recently?\" Maksa asked. \"I need one that's near here.\"\n\n\"We would have to check records,\" Pussy opened her eyes very slowly. \"But I believe it was Beshenna, although it was quickly restored.\"\n\n\"How long ago?\"\n\n\"Nearly two centuries.\"\n\n\"I'll need to requisition some records from them.\"\n\n\"You shall have it,\" the Sorceress stood more firmly now. \"You shall have all you need for this purpose.\"\n\n-===================-\n\nAfter six hours in the sun, going over spear fighting basics and then practising maintaining a phalanx, Talla and her fellow Virgins and Initiates stumbled out of Form to make their laborious way across the Goddess's Domain.\n\nThe mood, as she and V'shika joined up with Tina, was on a downward spiral.\n\nTalla had felt so clever, not just to have divined the presence of the Synergist room's secret vent, but to have found the gods damned thing. And her cleverness had fallen to pieces, like a sweet smelling coffee turning bitter when it hit her taste buds.\n\n\"We're done,\" V'shika sighed, her bare shoulders slumped as she slouched along on Talla's left.\n\n\"It's not that bad,\" Tina gave a suspicious glare across Talla's body from the right. \"Yesterday you were a lot happier.\"\n\n\"I was too optimistic,\" V'shika shrugged. \"Do you have any ideas now?\"\n\n\"Talla will think of something,\" Tina said hopefully. \"You will, won't you?\"\n\nTalla tried not to roll her eyes, but failed at that, too. Scrubbing her hair with fingers still dusty from the training in Form, she took a long time to think before responding.\n\n\"We need to be clever,\" she said. \"And I'm all out of clever right now.\"\n\n\"To be clever,\" Tina pointed out, \"we need to know things. We don't know enough yet, so we learn.\"\n\nThe other girls failed to respond to this in any way at all.\n\n\"Think about this,\" Tina demanded. \"You two have only been part of the Temple for, what, a few months now? You've barely learned anything and you already hit on one weak spot, right?\"\n\nTalla acknowledged this with a sarcastic grin while V'shika kept her eyes down.\n\n\"So we learn more,\" Tina insisted, her voice lowering to a determined whisper. \"Read all the books you can. Study all the history you can. We'll read about Temples that have fallen and see what weaknesses they have - who exploited those weaknesses and how.\"\n\nThere was tic in Talla's chin, then, although she didn't meet Tina's eyes.\n\n\"A daunting task you've set,\" Talla whispered weakly.\n\nBut Tina saw the ice slowly returning to her friend's eyes.\n\n\"Spoken like my Mistress,\" she replied.\n\n-===================-\n\nOn any other day, the predictability of being Served by Del would drive Zhair'lo nuts. Today, though, when his arms were killing him and his brain knew Del had a simple programme for being on top, he contented himself with the pairing.\n\nAll eight of them had stumbled into their quarters exhausted after a day of sword training. It spoke well for the harshness of the first day that the five kilometre patrol to the nearest way station, followed by the obligatory return march, had been the relaxing part of the day. Zhair'lo wasn't sure he could do a pushup at this point, never mind manage a proper hip thrust from such a position.\n\nZhair'lo entertained the idea that, since the girls all had at least one Iron upgrade, they could probably withstand being collapsed upon. A quick look around the room told him that none of them wanted to risk it.\n\nRegardless of their exhaustion, at least one round in bed was required. No one had given them such an order, but habit died hard.\n\nDel leaned her face over his, step thirty-seven or so of the girl-on-top program, so they could kiss. Her arms had no more strength than his at this point, so she braced herself on her elbows to keep from smashing their faces together.\n\nA tingle ran through the mesh as their tongues met. While Zhair'lo found it pleasant, it was ecstasy for Del with her single Facial upgrade.\n\n\"Curious choice,\" he said, when she pulled away to bat her eyelashes at him.\n\n\"What's that?\"\n\n\"Facial.\"\n\nDel shrugged. \"You take what you can get sometimes.\"\n\nThen she kissed him again, much more gently, as if to make a show of what her talents delivered.\n\n\"It's only a drag for you,\" she said, \"if you're really into spanking.\"\n\n\"Not really my thing,\" Zhair'lo cast his eyes aside.\n\n\"Bree and Tara are Tight,\" Del said. \"I'm sure you give them what they need.\"\n\n\"And to you what you need.\"\n\nHe wasn't so weak that he couldn't put his hands to the back of her neck and pull her down so he could reach her ears with his lips. Sucking gently on her ear lobes, he felt her throat vibrate in response. Deep inside her, muscles tightened around his erection.\n\nThis, then, was the right spot for Del.\n\nZhair'lo let his tongue poke out from between his lips. Playfully, as if tickled, Del tried to pull away, but he held her as he traced a line around the edge of her ear.\n\nShe cooed loudly in return, a sharp contrast to harsher grunts around the room. When Zhair'lo began to nibble on her ears, Del started giggling uncontrollably. For a breathless heartbeat, he wavered uncertainly upon his course of action, but he felt her vagina suddenly clamp down on him and she let out a screech of joy.\n\nAs she came, and the orgasm echoed through him, he bit down on the ear that she pushed into his waiting teeth. He didn't relent, chewing continuously on her flesh as he expelled himself inside her.\n\nWhen she collapsed on his chest, a laugh came from the next bed.\n\n\"What the hell was that, Del?\" Bree intruded.\n\n\"Nothing,\" Del's buried her red face in Zhair'lo neck. She added, in a whisper, \"That was new.\"\n\n\"Yes.\"\n\nZhair'lo went to sleep well assured that he had made some small contribution to Standard Way of Doing Things that Del would probably someday make into one of those books the women were always reading.\n\n-===================-\n\nLater in the night, long after the Recruits had passed out, Saren lay in the bunk provided to him by the soldiers of Gern, pondering his future in the comfort of beige pillows and neatly folded off-white blankets.\n\nIt hadn't been clear, at first, that he merited a future. While they hadn't gone to the trouble of killing him, they hadn't enlightened him regarding his fate either. All day long, soldiers had been coming in pairs - one of each gender - to remove his tribemates from their shared cell. The cold, logical part of his brain judged it unlikely they were being put to death as Gern had demonstrated its abilities in that regard and yet had refrained from killing anyone other than Chet.\n\nNo, they were doing something to the men, one at a time, and they would eventually come for him. Knowing he couldn't affect his circumstances, he waited, trapped inside this stone building with its heavy, wooden door locked from the outside.\n\nBut neither could he sleep and so he stared at the sand coloured ceiling, watching the light of a lone candle flickering away in the night.\n\nConsequently Saren experienced both joy and fear when, shortly after the bell had chimed eleven times, he heard the heavy latch being removed from the outside of the door.\n\nThe heavy oak slid smoothly past its stone casement with barely a creak and a woman clothed in ornate orange robes slipped into the room.\n\nWhen Saren propped himself up on his elbows, he realized that these Temple women forced him to reevaluate the way he thought of half the human race.\n\nEven if the woman had been standing still, she still exuded obvious, external qualities he would have noticed from a hundred metres away. She sported muscles that hadn't been built from hanging laundry, hefting a frying pan or any of the standard female duties. Aside from that, her blonde hair shimmered in the candlelight, a level of gloss that would never show on a woman unless she was as clean as these city women tended to be.\n\nBut if he only observed her standing in one place, he knew he wouldn't get even half the story. From the moment she stepped into the room, Saren felt her confidence in the length of her stride and the width of her stance.\n\nBriefly, he sensed a sneer in the way she turned her chin up to look down at him. An instinct twitched inside Saren and made his stomach lurch with fear. In a flash of insight, an image of Chet filtered into his mind, their old leader with his penchant for leering down at everyone in a style of condescension he seemed to own. Saren realized in a moment of honesty that this woman, in her loose and scant orange clothing, merely held her head level, as no woman in his experience ever had. Doing so, however, exceeded his experience with women by so much it had triggered thoughts of old Chet.\n\n\"Your name is Saren,\" her voice flowed out of her in a gentle sigh.\n\nHe watched her eyes, trying to see through them to the person behind. In those hazel circles with their wide darkness-dilated pupils, there brewed a thick potion of sympathy, kindness and an emotion that looked much like duty. She sat on the bunk next to him, the panels of orange fabric that made up her clothing split to bare her thighs, leaving her a place to rest her clasped hands. In the candlelight, her skin was a tanned bronze.\n\n\"Who are you?\" Saren sat up to face her.\n\n\"My name is Valtoza,\" her voice breathed patience. \"You must have questions?\"\n\n\"I suppose,\" he scratched his temple thoughtfully, \"I want to know what you plan for me.\"\n\n\"You are not worried about your fellows?\"\n\n\"Not particularly,\" Saren grimaced. \"Though I wonder if you've seen Berel.\"\n\n\"Berel and Merelda are both in our care. You were friends?\"\n\nSaren wondered what sort of game all this entailed: a woman coming in here, mostly naked, and playing with him like this.\n\n\"Yes,\" Saren said. \"Almost like brothers. We were planning on leaving that lot.\"\n\nHe jerked his head dismissively toward the door, the assumed general direction of his fellow tribesmen.\n\n\"But you did not?\" her voice contained no hint of judgement.\n\n\"He wouldn't leave without his sister,\" Saren's lip twisted in frustration. \"And then the whole thing fell apart and Chet -\"\n\n\"Chet is dead,\" Valtoza cut across him swiftly. \"We don't put up with that sort of thing. Not in general, and especially we don't tolerate men who beat on pregnant women.\"\n\n\"Yeah, I was there.\"\n\n\"Indeed,\" she inclined her head and her expression softened once more.\n\n\"So where are they?\"\n\n\"Berel is resting,\" Valtoza leaned forward earnestly, her shimmering blonde hair bringing with it an intoxicating bouquet of fruit scents. \"When he awakens, he will find a place in Gern. Merelda and Willow are also doing just fine. We expect her foot to heal in time.\"\n\nSaren felt dizzy for a moment and twitched his head to clear his mind.\n\n\"Willow?\"\n\n\"Her baby.\"\n\n\"Ah.\"\n\nThey paused for a moment, looking into each others' eyes.\n\n\"And will you find a place for me in your city?\"\n\n\"I expect so, yes,\" she nodded serenely. \"There is a place for every man and every woman.\"\n\n\"That sounds like a phrase you use often.\"\n\n\"That everyone has a place?\" she asked. \"Yes. It is an Axiom. Do you not have such sayings where you come from?\"\n\n\"Not so much,\" Saren shook his head. \"Chet was more of a 'do such-and-such or I'll kill you' kind of leader.\"\n\n\"Ah. How sad,\" she blinked slowly at him and let her expression drift from sadness to a faint smile.\n\n\"So you're here to do what?\" he turned his head a bit to the side to peer at Valtoza. \"You want to figure out what I'm good at so I can work for you?\"\n\nShe shook her head and the smile playing across her lips strengthened.\n\n\"I am here to ... Serve you ... to share a bed? How do your people say it?\"\n\nSaren started at that.\n\nNext, he coughed politely to cover for it.\n\n\"You have been with a woman before, in that way?\"\n\n\"I ... no ... I have no wife,\" he tried to hold on to his composure. \"Won't your husband be angry?\"\n\nValtoza's smile, as breathtaking as the rest of her, nearly spilled into laughter.\n\n\"There are no husbands and wives here. No one owns anyone.\"\n\n\"And if I put a child in you?\"\n\n\"That will not happen,\" her voice became stern and knowing. \"Women have children when they want to and only then.\"\n\n\"Some magic?\" Saren twitched suspiciously.\n\n\"Something like that,\" she assured him.\n\n\"So ...?\"\n\n\"I think,\" she eyed him curiously and her expression softened, \"that you are separate from the others.\"\n\n\"What gave me away?\"\n\n\"Your attitude, your diction and your relations,\" Valtoza twisted her lips. \"In that order.\"\n\n\"I've never really managed to stay in one place,\" Saren admitted. \"I don't get along well with most of the people I run across.\"\n\n\"Yet they accept you rather than drive you out or kill you.\"\n\n\"I'm useful,\" Saren tilted his head and twitched one eyebrow.\n\n\"I'm sure we'll find out later,\" Valtoza brushed all conversation aside with a wave of her hand. She moved to sit in the scant space beside him on his bunk. \"Perhaps you should lie on your back. I will try to be gentle.\"\n\nHe opened his mouth to speak, but no words issued forth. Instead, Valtoza's hand touched his shoulder and firmly pushed him backwards. Saren couldn't be sure if he gave way so easily because of her strength or his shock.\n\n\"It's better this way,\" she began unlacing the beige shorts the soldiers had given him. \"There will be no bad habits to unlearn.\"\n\n\"You're actually going to -\"\n\n\"Yes,\" she said. \"It is our way, as you will see.\"\n\nShe reached around behind her neck to undo a clasp. Layers of orange cloth, individually nearly transparent but opaque in combination, slid gently over her flesh, falling in a pool around her waist as they slowly revealed her breasts.\n\nSaren let out a gasp. In his life, he'd seen many breasts, mainly as a consequence of the low quality garments available to his tribemates. It meant little to him to catch such a glance through threadbare cloth or cleavage displayed by a low-hanging shirt. Valtoza, however, had a fine, hard body, and though her breasts were not the largest he had ever seen, they were smooth, held high by her chest muscles, and tipped with a fine pair of sharp, pink nipples planted in a wide, unblemished areola.\n\n\"Huh,\" he repeated, gulping.\n\nHer fingers traced gentle lines over his plain white underwear, stroking the erection that was coming unbidden.\n\n\"It is good you are not shy,\" she said.\n\n\"Neither are you,\" he pointed out.\n\n\"No one here is shy about such things.\"\n\n\"You don't say.\"\n\nShe stroked him a while longer, first with one fingertip, then two.\n\n\"You should touch me, too,\" Valtoza pitched her voice strangely, in a way that delivered instruction without conveying insult. Zhair'lo would have recognized the tone instantly as one used by the Temple's teachers, but Saren had never met women who knew how to give directions.\n\nCarefully, unsure of any of the rules or mysteries that went between men and women, he extended one hand to touch her bare waist. Her skin was smooth around her stomach and touching it sent a chill up his arm.\n\nValtoza smiled in a way that let him know both her appreciation for his touch and her desire for greater boldness. Her hand, busy between his legs, now surrounded his erection with thumb and forefinger, still moving gently along its length.\n\nSaren slid his hand up from her waist to touch her ribs and from there to press gently at the outermost swell of her breasts. When Valtoza blinked slowly and murmured in response, Saren took it as permission to slide his hand over her breast, his palm gently touching her nipple, which stiffened as she shivered.\n\n\"You understand very well,\" she said softly, tightening her grip.\n\n\"Do I? Maybe by accident,\" he continued making soft circles over nipple.\n\n\"There is wisdom in using the smallest amount of force necessary.\"\n\nThat, Saren decided, was probably one of the Axioms she'd spoken of earlier. It ought to be, at least.\n\nImpatience seemed to overcome Valtoza as Saren noticed that her face had reddened. She slid his underwear down his legs and set his erection free. With an enthusiastic smile, she slid down the length of the bunk to sit beside his knees. It took her breasts out of range of his hands, but allowed her to lean over his erection and look at it closely.\n\nAt least that's what Saren thought she was doing, right up until her tongue snaked out of her mouth and traced a meandering route from the base of his shaft of to the tip.\n\nHe let out another gasp and felt his penis twitch, lifting itself away from his stomach to lightly tap Valtoza on the chin.\n\n\"Ah,\" she said in wary surprise. \"We'd better get that inside quickly.\"\n\nValtoza stood up beside the bunk suddenly, the flowing orange sheets of fabric that had covered her chest slid further down, overlapping with the pieces of cloth covering her lower body. There was only one other clasp to undo and the whole ensemble floated down, drifting gently around her body like a collection of auburn maple keys spinning about their stem.\n\nSaren didn't have any breath left with which to gasp, but merely stared dumbfounded at the nude woman before him, the neat patch of blonde hair between her legs matching exactly with the hair on her head. He'd caught glances of women down there, too, but none had ever been as clean and smooth as what he saw then. A part of him was glad he'd never taken a wife.\n\nIn a moment, she had straddled him.\n\n\"I believe you are ready,\" she breathed, her small breasts swinging lightly before his eyes.\n\n\"I believe that, too,\" he choked out.\n\n\"Good.\"\n\nSaren had no idea what to expect in this regard. The anatomy of a man aroused he well understood, for he could satisfy his own body. As to what transpired between men and women, he had only a vague idea of structure and angles, for he had joined and left many tribes and not everyone cared for privacy.\n\nSo when Valtoza pushed herself down and he felt her wet lips part around his erection, he shivered in anticipation. She engulfed him, hot and wet, and full of ridges both hard and soft along the tunnel into her belly.\n\nThen a tingling hit him in a way which he could not adequately describe.\n\nIt started between his legs, travelled up his spine and started to work inside his head.\n\nEmphatically, he knew he was not experiencing an orgasm. He knew this because he'd given himself such in his times of need and there was none of the spasmodic jerking, nor the feeling of sudden relief.\n\nThis was something other.\n\nHe felt himself go away and come back, even as he remained aware of the gyration of Valtoza's hips and the sensations of her insides twisting and squeezing at his erection.\n\nInsides his head, she pushed his thoughts around. He could feel himself ... changing, or maybe ... being changed. Valtoza was a rake and a hoe, toiling at the garden in his mind. There was no pain, as of the grinding of digging, but he was conscious of the gentle touch of a weed pulled, a furrow ploughed and a seed planted. Still, a part of his mind resisted, rejecting the change. But he could no more resist it than soil could resist a plough pulled by a dozen oxen.\n\nValtoza carried out alterations, and Saren felt it, but only for a moment.\n\nThen his thoughts were occluded, his vision went white, and he knew nothing for a long, long time.\n\n-===================-\n\nThe next day, while Saren slept, the Recruits ran.\n\nZhair'lo thought a day of mere running would be a relief , so the amount of pain sore arms caused while running double patrols surprised him.\n\nThe following day was consumed by further sword training, slashing and stabbing at wooden dummies again. If he tried hard enough, Zhair'lo could imagine that his increasing strength made the second day easier.",
        "Their days were like this for a week and there was nothing for any of them except burning in their lungs, aches in their arms and a determined but weary round of Service every night.\n\n-===================-\n\nFor Talla and her coven, the week went no better. She spent her days with V'shika, Illya and the other Virgins practising phalanx manoeuvres with the women of Form and every free moment until she had to go out to Serve reading in the Library.\n\nTemples, she learned, did Fall - and the books always capitalized the word. The Librarian, a rather gentle Adept in her late thirties, took a liking to Talla for her devotion.\n\n\"Interested in Fallen Temples, are we?\" she'd asked on the first day.\n\nTalla, well prepared for curiosity regarding her own curiosity, had replied very earnestly, \"It helps with the training in Form - to know why it is we're fighting.\"\n\nIf you're going to learn to fake anything, she had decided, the best thing to fake was sincerity.\n\nFrom that first encounter, the Librarian had been exceedingly helpful in finding Talla all of the records, tales and legends available.\n\nLanguage had changed over the centuries, despite the earnest attempts of the Temple to freeze it in place, and linguistic drift slowed her pace.\n\nWorst of all, the translated information didn't always make sense. The records described clearly mythical stories, featuring dragons breathing fire at the command of wild men. The thrown spears of the women of Form, the stories said, tore such beasts from the skies and bolts of lightning launched forth from the High Officers of the Temple took care of what remained.\n\nTalla wished she could be so naive as to believe such things.\n\nEven if she wanted to believe in dragons, it never turned out such things had the capability of bringing down a Temple. The women defending it always beat the beasts back, though hundreds of them ended up turned to charcoal and ash.\n\n'I don't have a dragon,' she thought, 'and I have no desire to burn my sisters regardless.'\n\nThe realistic accounts weren't particularly helpful either.\n\nOf all the ways for Temples to Fall, an invading army of wild men came up as the most common. The men rarely succeeded against Temples older than fifty years. Once an area had been pacified longer than that, no army within marching distance that could do it damage.\n\nBut again, Talla commanded no barbarian armies, regardless of Zhair'lo's forays in that area.\n\nThe discovery of subtler means was her goal.\n\nGoddesses had been assassinated. The histories mentioned this, distributed amongst the tales of lightning bolts and inexplicable building collapses. Women sometimes became angry with each other and, in contest for Ascension, Queens fought. Talla found this curious, for she had always heard that the decision was easily made: in stability Sweetness; in expansion Endowment. Why should they fight, when Goddesses served so little time anyway before the weight of the Perfections drove them to early weakening and death?\n\nBut they did fight, and the books contained no clear record of the issues at hand. Parchment, the Librarian would remind her when she asked, had not always been so cheap. There might be a disagreement over a new technology, or the disposition of a certain remote group of men, or possibly the way that the people who lived in the city were treated.\n\nIt excited Talla that the High Officers of the Temple cared enough to start a lethal battle amongst themselves over the privileges of the people around them. The Temple, it turned out, was not some monolithic entity bent on making her life miserable.\n\nAnd if, after a Goddess died, the Queens fought for Ascension, there was always the chance that one of them could lose a Sorceress too. This was how some Temples Fell.\n\nAgain, though, Talla had no way to get Queens to kill each other. Still, if one were to count dragons, she had found three different ways to attack a Temple and she'd only been at it a week.\n\nSo she read more histories, stopping only for dinner and reading more until she had to go out to Serve.\n\nThe stories always went on to describe the chaos that followed the collapse of the Goddess's power: unbelievable nonsense about the men of the city turning wild and killing each other before turning on the women of the Temple. Talla didn't quite put such tales in with the myths of dragons, but she was too wise to believe that the boys she had sex with almost every night of the week would suddenly attack her.\n\nIn the end, each story had a happy ending, with the necessary Conduits coming in from remote cities to restore the Perfections and let a new Goddess Ascend to the Obsidian Throne.\n\n'When I make this Temple Fall,' she thought, 'I'll make sure to destroy the throne. I never want to be ruled again.'\n\nThere was a dogged relentlessness about her. Amongst the repetitive tales, the quest she had set herself often seemed pointless, but she reassured herself that accumulating the knowledge of the library gave her the best path forward.\n\n-===================-\n\nFor Maksa, the week was frenetic.\n\nWith the permission of her Sorceress, she prepared a list of requests to be sent to Beshenna.\n\nThe biggest question to ask, \"What data did Beshenna have?\"\n\nNot knowing what her sisters of another city held in their records, she was forced to take guesses and ask more questions. Every time she thought she had the right set of questions, however, she realized an important item she had missed, or a word choice that had been ambiguous.\n\nMaksa had her numbers and her charts. She could take guesses as to how various lineages of women fared when it came to producing Heroes, Catatonics and Enraged but that was taking her measurements at one remove from their true sources.\n\nShe really wanted to know how women acted when a Temple fell, but the exact nature of the differences between their normal actions and their actions during a Fall had to be left to the discretion of the people who held the records.\n\n'Find me every report on any odd behaviour of women during the Fall of Beshenna in 788,' she wrote for what had to be the ninth time. 'The most important records are those relating to criminal court proceedings and genealogies of any women who were found to have committed unusual crimes during the three weeks before the Temple was restored.'\n\nMaksa would write on like this for some time, trying to cast as wide a net as possible in her search for the ways in which women might be affected by the strange inheritance that so deeply controlled the fortunes of men.\n\n-===================-\n\nBy the time Maksa had finished composing her letter and had her Mistress carefully seal it for delivery to their co-conspirators in Beshenna, Zhair'lo and the other seven Recruits were beginning their second week of weapons training.\n\nAfter the first seven exhausting days, they approached their practice field with a wary look in their eyes, for the wooden dummies had been replaced by their instructors, clad in thick leather armour.\n\n\"At the end of this week,\" Sergeant Yung promised them on the eight morning, \"you'll be ready to run four patrols in a day. That would be enough, should you have the need, to reach the northeastern Barracks. For now we will curtail the patrols in favour of more intellectual exercises while we also improve your sword skills.\"\n\n\"Now we will find out how well you've been paying attention,\" the Sergeant explained. \"These soldiers will now attempt to strike you, using the same attacking poses against which you have been practicing the past week.\"\n\n\"Boys first, girls in the second row. Let us begin.\"\n\nWithin a bell, it was clear to Zhair'lo that the instructors were not above using pain to teach their lessons. They weren't stupid, so they used wooden swords, but they could still deliver a painful blow to make it clear to each Recruit where his or her weaknesses laid.\n\nZhair'lo discovered his weaknesses were everywhere, but didn't let that trouble him. He knew they wanted to teach him to use a sword, and if they chose this method, it had to be the fastest way possible. If there were bruises, so be it. Wherever he went, whatever plan he and Talla hatched, it wouldn't hurt to own sword fighting excellence amongst his skills.\n\nThe more interesting lessons, however, were the ones they took when their overworked arms and battered bodies couldn't function on the field anymore. It surprised Zhair'lo to find that Fighter doctrine maintained that every person in the Barracks had to understand the tactics they used.\n\n\"A soldier who knows the entire strategy of the battle will fight better for the knowing,\" Sergeant Yung explained. \"And confidence in the plan will put stone in her spine.\"\n\nFighters kept nothing from each other in this respect. Everyone went into every battle knowing the goal and the path to it. And each of them knew his or her part.\n\nThey examined maps, again and again, of real battlefields: both open places where barbarians had approached cities and closed in camps like the place where Berel and Merelda's tribe had lived.\n\nSergeant Yung would ask them how they would prepare for the battle. Where would the archers go? Where would the swordsmen stand? Where would reserves be hidden? They learned about the dangers of crossfire, the values inherent in high ground, surprise and drawing first blood.\n\nWhen engaging larger, more powerful opponents, their instructors would describe other methods, and here Zhair'lo paid very close attention, for his intended opponent maintained a very large population indeed.\n\nWeak spots, Sergeant Yung advised, had to be found.\n\nA tribe might be tight on water, so a few dead animals could be dropped in a river upstream from where they drank. Another might be short on food, so repeated Hunts could starve them out. If worst came to worst, stray barbarians could be picked off until the tribe was too weak to pose a threat, but this meant killing a lot of people that could otherwise serve fruitfully in the city.\n\nNo, cutting off some vital supply was wiser, so as to drive the invaders to near starvation and offer them a hand up once catastrophe put them on their knees. More peaceful outcomes were produced that way.\n\nAt night, when Zhair'lo had finished with whomever came up in the cycle, he would converse with Talla.\n\nShe would regale him with the histories she had been reading and he would invite her to guess at the Temple's weaknesses.\n\n'What about the water?'\n\n'What about it, Zhai?'\n\n'Could we poison it like they do to barbarians? Do something to that aqueduct?'\n\n'It's insanely well guarded, first of all,' Talla replied. 'And second, we'd be killing ourselves and our friends.'\n\nTherein laid the problem with most of the ideas in Zhair'lo's head. Each possibility suggested by the tactics used against barbarians would bring suffering on the wrong target. That was why the Synergist store was so tempting. It attacked the power of the Temple with such accuracy it would be the envy of any Hunter who had ever notched an arrow.\n\nBoth Zhair'lo and Talla exuded supreme confidence toward the idea that the Temple had a weakness. There remained only the matter of finding and exploiting it.\n\n-===================-\n\nMaksa knew that it would take eight days for a message and its response to make its way around between Gern and Beshenna, and that such speed required either hell-bent runners from Form or riders on horseback in both directions.\n\nShe consequently expected nothing for at least two weeks and had been surprised to have been summoned to Principia Pussy to \"discuss a message\". Even if something important had come through, Maksa regarded her work in the catacombs as far too important to be interrupted, an evaluation with which her Mistress agreed. Why wouldn't the Sorceress of Pussy simply tell her about the message during the daily inspections she made of Maksa's work?\n\nThese and other mysteries would hopefully be revealed to her.\n\nAs she entered Sweetness Hall, she gave the guards a polite nod and ascended the stairs to the second floor. The women on the floor, busy as always, seemed to Maksa as a little more frenetic than usual. It still hadn't been established what had caused so many women to fall unconscious that night two weeks before. Working underground, as she often did, Maksa had briefly been concerned for her own safety, but the engineers from Strength had assured her the chance of a fume of any kind getting into her work area rated as infinitesimal.\n\nStill, she felt the quiet tension on the fine marble floor, as those women in their skimpy orange outfits went about their work.\n\n'One day,' Maksa cast jealous eyes on their clothing, 'I'll be dressed like you.'\n\nShe paused at the top of the stairs to glance down at the single yellow sash that covered her left breast. It would have to do for now.\n\nThere were more Enforcers from Form than usual guarding the entrance to her Mistress's Offices. Maksa walked past them and through the floor of Principia Pussy, where a slew of busy women studiously ignored her. She slipped through the doors of the rearmost office where the Sorceress of Pussy held court in the waning evening sunlight.\n\nAlong with the Sorceress, six Officers and two Adepts sat on spartan couches around a low wooden table. A roll of parchment, bearing the signs of having been opened and hastily rerolled, held the centre of the otherwise empty surface.\n\n\"Seal the doors, Maksa,\" Pussy's voice dripped with worry.\n\n\"What's wrong?\" Maksa barred the door and approached the group.\n\nPussy held up a warning finger before reaching down to her waist to untie her simple work skirt. Following suit, the Officers undid their skirts, after which the Adepts slid out of their grass skirts and underwear. Maksa had the easiest effort of all, removing her bottom while still standing. Satisfied that all conspirators had demonstrated awareness of the gravity of the situation, the Sorceress went on.\n\n\"We have received a message from Beshenna,\" Pussy waved a timid finger at a long scroll of parchment in front of her. \"She has some concerns.\"\n\nTwo of the Officers stretched out the roll of parchment. To Maksa's eyes, it appeared to be a manifest, listing various supplies and their current and expected availabilities over the next several months.\n\n\"A code?\" she asked.\n\n\"Yes, a well practised one,\" one of the Officers put in. \"The Sorceress of Pussy in Beshenna fears that our enterprise is on the brink of being discovered.\"\n\nThat explained the worried looks accumulating around the table.\n\n\"Form is catching on?\" Maksa wondered.\n\nIt would make sense. If there was one group of people who would absolutely abhor the genetic games Pussy was playing, it would be the egalitarian rule makers in Form.\n\n\"The Queen of Endowment, believe it or not,\" the same Officer tapped an innocent looking number on the parchment. \"The woman has become so suspicious she nearly caught our Goddess's baby being brought in. They accomplished a narrow escape, apparently.\" \n\n\"But the baby has been renamed?\"\n\n\"Yes, but Pussy in Beshenna has had to be much more careful with the records,\" the Officer replied. \"At Endowment's behest, Form has begun counting every bottle of breast milk in the nursery.\"\n\nMaksa considered this for a moment. She knew from experience that the Temple kept very careful records where births and deaths were concerned. In that case, there would have to be evidence whenever a baby that shouldn't exist suddenly had to live somewhere and have parents and all the rest. She'd assumed the conspiring genealogists of Pussy would have developed a foolproof system by now.\n\n\"What of my request?\"\n\n\"Your request?\" Pussy replied. \"It would have crossed paths with this message somewhere in the wilderness\"\n\n\"I hope it won't cause problems,\" Maksa grimaced.\n\n\"No,\" Pussy shook her head in assurance. \"It is not permitted for anyone but the recipient of a message to break a Sorceress's wax seal.\"\n\nMaksa tilted her head, noting the green seal on this message and wondering at the need for encryption, but said nothing.\n\n\"All we can do from here is increase our vigilance,\" the Sorceress straightened as she spoke. \"In time, Pussy of Beshenna will furnish us with details of what aroused suspicion in her city. We will be careful to make sure we do not draw attention to our efforts in the same way.\"\n\n\"There's nothing in there about what tipped off Endowment?\" Maksa asked.\n\nPussy shook her head.\n\n\"I don't suppose we can let off on our attempts to build stronger Goddesses either, can we?\"\n\nThe Officers, as one, looked at Maksa first, then at their Mistress.\n\n\"No,\" Pussy said firmly. \"We can not afford that.\"\n\n-===================-\n\nIn the building heat of late morning, four boys and four girls stood in a practice field, lined up as they always did. Though their arms and legs had leaned out, their hearts strengthened, and their bodies readied for a fight, none of these changes compared to the gritty hardness in their eyes.\n\n\"Recruits,\" Sergeant Yung sang out. \"Two weeks of weapons training have now passed. What started with wooden dummies has ended with basic training against moving opponents. I do not want you to think that you are as capable as veteran Fighters, but you would probably survive a battle if we had to send you in to one.\"\n\nDid eight chests rise at the compliment?\n\n\"Probably,\" the Sergeant emphasized. \"Don't get too proud.\"\n\nZhair'lo held in a smile. This was the way Fighters joked with their own.\n\n\"Today you have a last few patrols to run,\" he began walking along their lines. \"Out and back in both directions. When you get back this evening, we'll have a little party for you.\"\n\n-===================-\n\nTwenty kilometres amounted to a nontrivial amount of running, especially now that 'running' included an expectation of carrying real swords on their backs. The female Recruits carried the shorter swords they'd spent the latter week training with, but they also carried bows.\n\nZhair'lo got the worst deal of all, as his burden included both a full size sword and a bow with a quiver of arrows. There were tricks he alone had been taught for drawing one or the other. The most important warning involved never trying to draw his sword while it was sheathed on his back. The sheath only rode there while he ran. Once battle neared, it had to be shifted to his waist, which would make it easy to draw and also make his bow available.\n\nWhen they came to a stop at one of the way stations, he would watch the Ranger Hera make the procedure look damned easy. Seeing her smooth movements, Zhair'lo realized how much practice and drill she must have put it into simple things like moving a sword off her back and retying it at her belt.\n\nBy the time they completed their fourth and last patrol of the day, the evening sun cast long shadows perpendicular to the wall of the Barracks they now approached.\n\nBy the end of the fourth run, Zhair'lo's legs approached rubber status. Two weeks of weapons training had certainly toughened him, but they'd never run four patrols in a single day before. Real Fighters, however, did this all the time. He glanced at Sergeant Yung, who had been with them all day. Whereas Zhair'lo was drenched in sweat, the Sergeant wasn't even breathing hard.\n\nThey slowed down when they came within hailing distance of the Barracks' south facing gate.\n\nSergeant Yung bellowed out the code phrases in a voice that couldn't possibly come from a person who had just finished a five kilometre encumbered run.\n\nRelief flooded Zhair'lo as the gates opened.\n\n\"Hit the armoury and the showers quickly, all of you, and then get to the mess for some water,\" the Sergeant's shouted. \"No time to waste. Move! Move!\"\n\nSpurred on by the urgency in his voice, the Recruits bolted forward, followed immediately by two squads of Veterans. The showers, consequently, were packed full of naked bodies. One moon ago, that many naked women would have had Zhair'lo dying for Service, but no matter how strong their legs or how massive their breasts, there wasn't enough energy left in his body to manage an erection in the first place, never mind the chill he got when Zia hit the lever to douse them both with a cold spray of water.",
        "The temperature shock reinvigorated Zhair'lo enough he managed to stay on his feet to exchange hygienic favours and nothing more. The rush inspired by their orders meant a quick and official cleaning on their way to whatever came next.\n\nEvery now and then, through the soap and water, he would catch the weary eyes of another Recruit.\n\n'We did this,' they seemed to say to each other, and a wry grin would come to both their faces.\n\nThe Veterans, meanwhile, kept up a loud and raucous chorus accompanied by a lot more ass-slapping than he would have expected, but he'd never showered with them until today.\n\n'And nine gods, the women ...'\n\nThe cold water, contrary to his expectations, was re-energizing him in more ways than one.\n\nIt was Aloe who caught Zhair'lo looking, his eyes lingering somewhere in the vicinity of the light fuzz of hair she kept in a neat triangular patch between her legs. Realizing her gaze was upon him, he twitched to look up at her face, but she only winked and grinned before turning smoothly away like a wet statue on a rotating pedestal.\n\n'Nine gods. How can I be turned on after a day like this?'\n\nThe answer came to him instantly, even as Zia drenched him with another blast of soap clearing water: they'd trained him for this, just like everything else.\n\nThey towelled off quickly and starting getting dressed again. Zhair'lo found a clean pair of underwear and his leather shorts, which he laced up quickly. The laundry attendants had provided a clean, white undershirt too, but he could find no sign of his leather top.\n\n\"You got a top?\" Zhair'lo asked Zia.\n\n\"Doesn't look like it,\" she searched the clothing rack. \"Just a shirt, same as you.\"\n\nAlways in a rush, she had put her shirt on before she'd completely dried herself. The white fabric clung to her breasts and abdomen, wrinkling against her skin until she yanked on the hem and straightened the shirt out.\n\n\"I'm sure it'll dry off once we're out of here,\" she swore confidently.\n\nAs they stepped out into a world of red clouds and streaming horizontal beams of sunlight, Zhair'lo nodded in a way he hoped indicated sage agreement. Any embarrassment Zia might have felt about the moist prominence of her nipples in the cooling evening air was immediately assuaged by a combination of the evening's darkness and the sudden exodus of the other Recruits from the showers.\n\nA brief discussion ensued about the missing halves of their armour before they headed to the mess. Copious amounts of water greeted their loud entrance and Zhair'lo noticed that, for once, their boisterousness matched any group of Veteran Fighters that had ever gathered in the mess. The thought fled his mind, however, as a low part of his brain directed him straight to the table covered in pitchers of water.\n\nThe Recruits grabbed several pitchers and cups and immediately claimed a table for themselves as more and more Veterans started filing in. Some of them had come from the showers, the same who had been patrolling with Zhair'lo and his comrades, while others were coming from elsewhere. Though just as loud as the Recruits, they moved to the water table in a decidedly more patient manner. Zhair'lo shrugged off a nagging feeling of inferiority, reminding himself that he had plenty of time and room to grow.\n\nBesides, they were having a party of sorts, weren't they?\n\nThe room filled quickly and it soon seemed the gathering had attracted every Fighter Zhair'lo had ever met, except possibly the Rangers. He tried to imagine the blonde Ranger Hera, or her darker complexioned companion Seh-tin, hanging out with this crowd. Did Rangers ever do this sort of thing? Naturally quiet and careful, such loners didn't belong here.\n\nHis thoughts cut off abruptly as a loud voice bellowed for attention. Benches slid out and voices silenced as the entire room came to its feet.\n\n\"Master Kendrik, sir,\" a female voice called out.\n\nThe sturdy, grizzled man walked down the centre aisle of the mess, turning to look back at all those gathered only when he reached the single step between floor and dais.\n\n\"As you were,\" he growled.\n\nThey quickly took their seats and Kendrik surveyed the room. Someone from the kitchen quickly lit the three wall-mounted torches behind the dais. Another brought a small, folding table, about hip height, up onto the dais a step to the right of the Master Fighter.\n\n\"Ji'ann?\" Kendrick waved his left hand at the table beside him.\n\n\"Sir,\" the tall dark woman walked the same aisle, carrying a stack of neatly folded leather in her arms.\n\n\"Thank you,\" Kendrick gave a pleasant half smile when she laid the garments down on the table.\n\nAs Ji'ann slipped off to the side of the stage, Kendrick hooked his thumbs in his belt.\n\n\"When I came to this town - he Gods know how many years ago -\" there was some deep, quiet laughter at this, \"I was intent on making this unit Serve the Temple better than it ever had.\"\n\n\"We made a lot of changes,\" he stared directly at the Recruits. \"We broke a lot of rules. A few were even broken in a rather spectacular manner, you may have noticed.\"\n\nZhair'lo felt those cold eyes boring into his skull and had to wonder if this man had been told about his interaction with Talla. As the evening had turned to night, the darkness in the mess had deepened. Master Kendrick stood silhouetted in a pool of torchlight on the dais while the rest of the room faded away.\n\n\"We eat together. We drink together. We sleep together. And for all that, we work together far better than we did when I first arrived.\"\n\n\"After tonight, you eight will be Fighters. Not just that, you will be the sorts of Fighters who can win battles and - this is the important bit - survive battles. I have no desire to train your replacements, understand?\"\n\nThis was funny, at least to the Veterans, who gave it a rousing cheer.\n\n\"Yeah, yeah,\" Kendrick politely waved them to silence. His eyes focused again on the Recruits. \"You will fight. You will defend this Temple. You will survive. And you will do all of that because you are never afraid to learn more. There is no one in this room who knows everything. No one here is perfect. The battlefield will cure any woman or man of that delusion very quickly. Always be ready for a lesson.\"\n\nFor a moment, he pulled his shoulders back so he was addressing the entire room.\n\n\"Do you understand?!\" he shouted.\n\n\"Yes, sir!\" they shouted back, Recruits and Veterans alike.\n\n\"Good,\" he nodded and cleared his throat. \"Good. Ji'ann?\"\n\nThere was some bustling over in the darkness beside the stage. Zhair'lo had the vague sense that there were people over there, arranging themselves. Master Kendrick was watching them, waiting patiently, until they settled down.\n\n\"Renzi, Zhair'lo, Kit, Z'rus,\" Kendrick waved his right hand toward the empty left half of the stage. \"Up here.\"\n\nThe four boys took their places facing the audience of Fighters. They lined up, thoughtlessly, as they always did when they went marching.\n\n\"Their uniforms,\" Master Kendrick announced.\n\nJi'ann stepped up to the little table and began handing out the leather tops, one after the other, to women who slipped out of the darkness. Each of the women took a place in front of the one of the Recruits, one step down. Zhair'lo decided the stage was a convenient height, for it put Aloe's eyes level with his.\n\n\"Dress them.\"\n\nSmiling, Aloe leaned forward and helped Zhair'lo into his armour, tying the laces for him.\n\n\"May your sword always be sharp, Soldier,\" she leaned in to whisper. \"And your wits sharper.\"\n\nShe cinched up the last lace snugly and firmly before winking and backing away.\n\n\"Soldiers,\" the Master Fighter ordered. \"One step back.\"\n\nKendrick then called out the names of the female Recruits and repeated the procedure. Zhair'lo found himself too busy admiring the single white chevron on his uniform to make out what the women whispered into their sisters' ears as they tied their armour on.\n\nFinally, the Veteran women walked off the side of the stage, clearing the view of those assembled.\n\n\"Barbarians are at your gates!\" Kendrick cried out.\n\nThis time the new Soldiers, having repeated these words every day, knew the drill and joined their sisters and brothers.\n\n\"Stand on the wall! Or the City falls!\"\n\n\"Fighters?\" he asked.\n\n\"To the Fore!\"\n\n\"Fighters?\"\n\n\"To the Fore!\"\n\nThe repeated roars shook the walls and the pounding of fists on tables rattled the tin pitchers of water.\n\nSilence came, sudden and sharp in contrast to primal rage that preceded it.\n\n\"Never forget,\" Kendrick hissed into the silence. \"Never forget who you are. Never forget your duty.\"\n\nThe silence became a deep and thoughtful meditation as a strange tension filled the room. Kendrick let this linger for a handful of heartbeats before a rare, light grin broke across his face.\n\n\"Now let's welcome these girls and boys in.\"\n\nA round of applause broke out and everyone in the room began moving. Before Zhair'lo knew it, reams of people shook his hand and patted him on the back. A few more torches were lit, not enough to brighten the room, but just to make sure no one tripped over anything. From somewhere, a woman pushed a wooden mug into his hand.\n\nZhair'lo coughed after taking a sip. \"What is this?\"\n\n\"Ambrosia, Soldier,\" Sergeant Yung appeared at this side. \"Nectar of the gods. Mead, if you'd rather.\"\n\n\"It smells like honey.\"\n\n\"It's made from honey. Drink up.\"\n\n\"Sir,\" Zhair'lo forced down another sip. It wasn't unpleasant in flavour, but it was powerfully sweet and deeply alcoholic.\n\nFighters still took turns to shake his hand and he slowly drifted along with the well wishes which slowly separated him from the other Recruits until a female Fighter gently bumped him into a seat. Veterans chatted with him, asking him about his last run and reminiscing about their own training. Some of them had enough years to remember times before Master Kendrick had come. These old Fighters proudly regaled him with little snippets of such ancient stories.\n\nZhair'lo couldn't keep up with the thread of what he heard, but tried to answer any question put to him as coherently as possible. Between the exhaustion of the run and strength of his beverage, which was getting an automatic refill every time he took a sip, his confidence in his responses reached a deep low.\n\nWho spoke to him now? Zhair'lo tried to recall the older man's name. Cal? Callian? Callus? No, a callus resembled a blister. He tried to shake his head clear and focus his eyes. Over the man's shoulder, he saw Aloe, the sweet talking Soldier, sitting on a table and looking directly into his eyes.\n\nHe'd been embarrassed, earlier, when she'd caught him looking at her naked body in the showers, but in his drunken state he could dismiss such feelings as foolishness. Their eyes held steady contact for a few heartbeats before her gaze lowered to indicate her legs. Zhair'lo followed her down and saw that she was sitting with her legs slightly apart, her feet planted on a bench between two Fighters who faced away. Where had her armour gone? She wore the double sashes and the kind of ribbon skirt appropriate for the rank of Adept II. Most significantly, she parted the long strands of her skirt and opened her legs in his direction.\n\nZhair'lo gulped. Forgetting his manners and catching a glimpse of her in the showers marked him discourteous enough, but here? What about the rules? Hadn't Talla warned him about those? He felt dizzy as he tried to pull up a memory involving stars over doorways and safe places for nudity.\n\nA sudden thought gripped him.\n\nWhat had Master Kendrick said?\n\n'We broke a lot of rules.'\n\nAloe's eyes drifted back up to meet his, her skirt still out of place, and he felt himself stiffen inside his shorts and armour. Zhair'lo made the sudden inference that the rule breaking had not been a single event in the past, but instead a permanent change of affairs. A goofy grin broke over his face and he felt the alcohol take hold. Across the room, Aloe slid down to the floor, the strands of her skirt falling back into place. Her eyes, not her body, held Zhair'lo in a trance as she wended her way around tables and chairs until she stood towering over him. The space between his bench and the one behind her was so small that her knees necessarily brushed against his.\n\n\"Hello, Soldier,\" she smiled down at him. \"Feeling the strength of our nectar, are we?\"\n\n\"It's good stuff,\" he leaned back against the table and tilted his cup up toward her in acknowledgement.\n\nThe stony old Fighter, the man whose name Zhair'lo hadn't remembered, had vacated his place on the bench. With all the dangerous intent of a venomous snake, she settled down into the empty place, somehow arranging her legs so that only one narrow strand of her yellow skirt settled between her tightly closed thighs.\n\nZhair'lo might have had the good sense then to gulp, or react in some other astonished way, but the power of his mead had taken him and he felt no emotion other than lust, sensed no other person in the crowded room but the smooth, muscular woman who slowly parted her legs. If a thought about rules and differences in age flitted across his brain, his lust banished it to the same place it had exiled his ability to subtract eighteen from Aloe's age.\n\nAloe's eyes held his as her knees touched the inside of his thighs and the yellow strand of fabric fell to hang past the light fuzz of her freshly washed mound.\n\nWith her eyes, she invited him to look down at her so she could see that the thumb-wide piece of fabric concealed only the cleavage of her lips.\n\n\"Is this what you do here?\" he asked.\n\n\"It's what we do,\" she grabbed his collar and gently pulled him forward until their cheeks almost touched. \"You're one of us now.\"\n\n\"What we do,\" he acknowledged, but had to add, \"With everyone watching?\"\n\n\"You've done it every night since you got here, haven't you?\" her breath warmed his neck.\n\n\"In our quarters,\" he protested weakly. \"With the other Recruits.\"\n\n\"You aren't Recruits anymore,\" she pointed out. \"And it's not going to stop you now.\"\n\n\"It isn't?\"\n\n\"It's not as dark in this room for me as it is for you,\" Aloe snaked a hand along his bare knee and under his leathers. \"I can see what your body is telling me.\"\n\nZhair'lo exhaled as she touched him, a light tingling graze along the top of the base of his burgeoning erection.\n\n\"See?\" she hissed in his ear. \"You'll be fine. And you're mine, at least at first. I saw you looking in the shower.\"\n\nSo Aloe had claimed him, then? Zhair'lo wondered how that had been worked out with the other women. While he wondered, she loosened the ties on his leather pants.\n\n\"I saw you first, when we found Merelda,\" he said suddenly.\n\n\"I don't remember being naked then,\" she paused in her efforts.\n\n\"No,\" Zhair'lo shook his head to clear his thoughts as a gleam came to his eyes. \"I saw you running, then, moving so fast with your bow notched and ready.\"\n\n\"Ah.\"\n\nShe laid aside his leathers.\n\n\"You gave me a place in the firing line,\" he looked as deeply into her eyes as he could manage in his drunken state. \"Why?\"\n\n\"Because you knew what you were doing,\" she shrugged. \"I could tell.\"\n\nHer explanation was incomplete, but Zhair'lo couldn't say how or why. Nor could he question her further. She pulled down his underwear far enough to let his erection pop free and brought an end to casual discourse.\n\n\"Not shy, then,\" she remarked, stroking him to hardness.\n\n\"We're really going to ... here?\"\n\nZhair'lo looked around the noisy room briefly and realized that almost no one was paying him any attention, though a couple of women sitting at the table behind Aloe looked on with vaguely enthusiastic interest.\n\n\"I'm ready,\" Aloe smiled again. \"Aren't you?\"\n\nZhair'lo couldn't deny the fact in his lap, but the look on her face gave him pause.\n\n\"Your smile and your voice,\" he said.\n\n\"Yes?\"\n\n\"Are you Facial?\"\n\n\"Clever boy,\" Aloe said. \"Yes, I am\"\n\n\"And a Fighter anyway?\"\n\n\"A story for another day,\" she chided gently. \"But since you mentioned it ...\"\n\nAloe's head bobbed down into his lap, taking his full size erection completely into her mouth. It shouldn't have fit, but he realized she'd angled her mouth to let the head of his shaft reach into her throat. As quickly as she did it, she came off again, glaring at him with eyes that sparkled green in the torchlight.\n\n\"Nine gods.\"\n\n\"Yeah,\" she nodded. \"Now let's get this started.\"\n\nAloe stepped over his bench to straddle him. Between her sudden act of oral sex and wetness of her own vagina, it was no trouble to lower herself on to him and let his erection slide inside her.\n\nThey both moaned in appreciation.\n\n\"No mesh?\" Zhair'lo peered at her in sudden worry.\n\n\"Your drink,\" she pointed out, as if it should have been obvious they had slipped him something. \"Try not to come right away, alright?\"\n\n\"Why?\" he felt his worry increasing.\n\nAloe started twisting her hips around in gentle circles. He felt the bones in her legs grinding against his thighs.\n\n\"They'd be disappointed,\" she threw a graceful flick of her hair toward the women behind her.\n\nZhair'lo did finally gulp. In one respect, he was relieved they hadn't given him the potion for preventing his orgasm. The night running with Rh'ris, Erin and En'tha had been one of the least pleasant in his young life. On the other hand, a performance was still expected of him here.\n\nHe wondered if this would be any more difficult than doing Upgrades.\n\nAloe placed her hands on the table behind Zhair'lo, pushing him back and forcing her chest into his face.\n\n'Yes,' he thought. 'Yes, it's gong to be harder.'\n\n\"We see things,\" she whispered down over his head. \"We women of Facial. Things others don't see.\"\n\n\"Like what?\"\n\n\"You were looking at my pussy in the shower,\" she said. \"An aimless accident, that. You're a breast man, through and through.\"\n\nZhair'lo didn't know what to say.\n\n\"So undress me already,\" she hissed at him, shrugging her shoulders to make it easier.\n\nThe sashes came off quickly over her lowered shoulders. The bikini top underneath was laced once at the back.\n\n\"Abundance and Point,\" Zhair'lo remarked, since he needed something to say.\n\n\"Can you count them?\" she murmured, pushing her hips down as hard as he could.\n\n\"Two Abundance and one Point,\" he confirmed, holding off his orgasm with all his effort.\n\n\"So clever,\" she admired, and pushed her left breast into his eager mouth.\n\nZhair'lo sucked up her nipple, aureola and all and began running his tongue in circles over her flesh.\n\n\"Very nice,\" she pulled her breast away from his mouth. \"That really is your thing.\"\n\nHe tried to formulate a response, but she brought her lips to his and he suddenly knew the kiss of a woman of Facial. Six upgrades and all of her enthusiasm went into that gentle, deliberate meeting of flesh and Zhair'lo found himself unable to match her skill.\n\n\"Sadly,\" she said, breaking away with a somber dip of her eyebrows, \"my time is up.\"\n\n\"Time?\"\n\nSlowly, she lifted herself off his erection. He felt a light but cool breeze easing its way over his cock, working its way toward the tip as he left the warmth of Aloe's tunnel.\n\nWith a wince of sorrow rather than pain, she came clear, leaving his shining erection sprouting in the air between them. The strands of her skirt fell back into place and she adjusted her double sashes so they covered her breasts again, though the small top that had been underneath was left aside.\n\n\"Enjoy your night,\" she wished him happily. \"See how long you can last.\"\n\n\"How long I can last?\" he wondered aloud at her retreating back. \"What do you -\"\n\n\"Zhair'lo.\"\n\n\"Whuh?\" his alcohol addled brain struggled to focus on the new person who addressed him.\n\nA black haired woman, dressed in a tiny orange garments both top and bottom, sat on the bench where Aloe had been only a moment before. He recognized her by her dark, slightly slanted eyes, as being from one of the squads he'd patrolled with today. Her name did not come to the fore of his brain and he wondered briefly if they'd ever been introduced.",
        "When she reached out one strong hand to grab his wet erection, it became clear to Zhair'lo how his evening was planned.\n\nAs she stood up, he recognized, even in his inebriated state, the rock hard leg muscles of a Tight woman. She straddled him, as Aloe had, and pushed her tiny orange bikini bottom to the side of her genitals. She then impaled herself on him far more quickly than he had expected.\n\n\"Oh, she did get you nice and wet, Soldier-boy,\" the woman admired. \"But it's my job to make you come.\"\n\n'And yet,' Zhair'lo thought, 'Aloe told me to hold out as long as I could.'\n\nThe woman's immensely powerful thigh muscles locked around his back, embedding him as deeply inside as he could go. She'd had Within upgrades, too, and he felt those working at him, squeezing and trembling up his length.\n\n\"Swelling up,\" she murmured. \"So good. What will they say of me, that I went first and made you come? I intend to disappoint the next in line.\"\n\nZhair'lo perceived a contest in progress, and blearily accepted it in his mind. The women wanted to force an orgasm from him and expected him to do his best to deny them.\n\nFor some uncountable length of time, they strove against each other, her legs and vaginal muscles against only his willpower.\n\n\"Come on!\" the woman insisted. \"Give me some of that come!\"\n\nBehind her, a few more women laughed and looked on with interest as the one on his erection continue to rock and violently twist at him.\n\n\"Aggie, Aggie!\" one of the women mocked her. \"Time's up.\"\n\n\"Gods damn it,\" the one they'd called Aggie removed herself from his erection abruptly and without ceremony.\n\nBehind her was another woman in yellow. This one wore a stranded skirt in the more traditional style, where the strands were thin almost to the point of being grass. Zhair'lo noted she had already exposed one of her breasts, a nice handful. She wore the single sash of an Adept and had somehow lost the bikini top that should have been underneath it.\n\n\"Name's Atiya,\" she said curtly, her clipped tone telling him that this was all the introduction he'd be getting.\n\nAs Aloe and 'Aggie' before her, Atiya climbed over Zhair'lo to put her feet on the ground under the table at his back and sank herself down to envelope him.\n\nThe repeated penetrations, passing the tight ring of entry three times now, took their toll on Zhair'lo. How long could he fight this? Did the contest even have a point?\n\n'No matter,' he thought. 'If they want to test me, I'll beat them.'\n\nIt occurred to him it might not be possible for anyone but a woman to claim victory. Eventually he would ejaculate inside one of them, wouldn't he? There had to be dozens of women and only the four newly graduated Soldiers to pass around.\n\nAt the very least, Atiya didn't have any Within upgrades. A distant part of his mind, operating behind the veil of alcohol, acknowledged one upgrade each of Abundance and Strength. He felt his senses going numb as Atiya's gyrations set her exposed breast bouncing up and down in his face.\n\n'These women,' he noted, 'are all very tall.'\n\nZhair'lo knew her most potent weapons were her lips, and he could keep her from kissing him if he kept his head down. But that left him staring at that mesmerizing, oscillating breast with it's dark little nipple, stiffly at attention.\n\nA raucous roar, of male and female voices, went up from some other corner of the room and a single female voice shrieked in triumph. Zhair'lo wondered which of his fellows had fallen already.\n\n\"Hup, hup,\" someone called from behind Atiya.\n\n\"Damn,\" she resigned, ceasing her gyrations.\n\n\"That's three!\" someone else called out at Atiya gingerly removed herself from his cock.\n\nAnother woman, a grey-eyed blonde wearing orange double sashes across her slim chest and nothing below the waist, stepped into position.\n\n\"Four is quite enough for you, young man,\" she chastised in a deeply antagonistic teacher's voice. \"It's time for you call it a night.\"\n\nZhair'lo took this for bravado and the mead gave him the courage to fight off such attempts at intimidation. Her experience caused him greater fear. The double sashes in orange meant an Acolyte II, which came with a whole host of upgrades in all sorts of Disciplines. Zhair'lo's eyes told him none of those had gone to increase the size of her breasts, but everything else about her was advanced far beyond anything in his experience.\n\nZhair'lo nearly choked as her vaginal muscles clamped down on his erection. She did things inside her body that no woman had ever managed before. Swirling sensations greeted him, even as her hips gyrated and she forced her tongue into his mouth. An overpowering scent assaulted his nostrils.\n\nSurely this would break him. He felt a tingling sensation at the base of his erection, working it's way deeper into his body. He felt a deep desire to let it shiver up the length of his shaft. Never had such a fine body been presented to him as a place to release himself.\n\nBut Zhair'lo didn't let go. He wouldn't have it. His hatred for the Temple was stronger than his lust.\n\nHe sank his fingers into the woman's back, clinging to her body as he would hang on to the edge of a cliff. Greeted by the abyss of failure should he give up, he rode out the insane woman's attentions. He felt his brain shutting down. Could he pass out from this effort? His vision sparkled and he started to see black dots.\n\n'I'm not breathing,' he realized and inhaled deeply, which vanquished the black spots.\n\n\"Hup, hup,\" another female voice called out, and he heard a cracking sound from behind the Acolyte II.\n\nShe harumphed and dismounted him in disappointment, rubbing at her rear where the next in line had just spanked her.\n\nFrom another part of the room, he heard a screech of triumph and a cheer, which was quickly followed by another. Renzi, Kit and Z'rus had all given in, then? Only Zhair'lo remained.\n\n'Can I stop, then? Is this victory?'\n\nBut he couldn't stop and he knew it. All of his strength and willpower would deny them, because the Temple brought this to him as a contest of wills. As much as he might like the players themselves, this game didn't belong to them as individuals. The women who took their turns at his erection constituted pieces on a board, pawns to be used and discarded. His battle remained with the ones in charge, the ones who'd made the rules keeping Talla from him. Through his drunken, sexually charged haze, this crystal clear fact held fast.\n\nHe meant to win this.\n\nZhair'lo faded in and out as women took their turns straddling him and taking his erection inside their bodies. Occasionally, just before fucking him, one would lean down to taste the myriad juices that had been left on him. The small bits of his mind that still functioned kept track of the numbers they shouted every time a woman left him.\n\nThere was an unusually long respite after he distinctly heard the number \"eight\".\n\n\"There's barely anything left of you in there,\" a deep rumbling voice came from the dark-skinned woman who had appeared in front of him.\n\n\"Ji'ann,\" he mumbled in recognition, unable to remember the proper honorific for the situation.\n\n'Should I use 'Mistress' or 'Chief' when an endless string of women are fucking me in the mess hall?' he wondered.\n\nZhair'lo felt no surprise when the large woman mounted him, sliding her dark skin around his body and locking him into place. As an Officer she had countless unknown upgrades which she put quickly to work. She opened her blouse to him, first burying his head in her breasts before giving him her black nipples to suckle upon.\n\nBut still, he wouldn't come. His cock had numbed from the work they'd put into him. Heavy handed vaginal twisting and turning simply couldn't do the job.\n\nJi'ann took his chin in hand.\n\n\"He's done, Mistress,\" a soft voice came in from the side. \"Let him know.\"\n\nA light exhale that somehow indicated respect came out of the larger woman and she stood up and off of him.\n\n\"Who, then?\" Ji'ann rumbled.\n\n\"Me,\" the soft voice answered. \"I started it.\"\n\nHe recognized Aloe. Sweet, soft Aloe appeared in front of him again.\n\n\"Zhair'lo,\" she said. \"It's okay. You're done. That's nine and no one ever does nine. It's okay now. You win.\"\n\nA smile crossed his lips, but he really felt like exploding, or possibly just dying.\n\n'Dying would be comfortable,' he thought. 'Peaceful and quiet.'\n\nAloe knelt on the floor.\n\n\"It's okay, now, Zhair'lo,\" she whispered. \"You can come.\"\n\nThe juices of nine woman adorned his erection, and he knew Aloe tasted them all when she took him into her mouth. The tight, hard working muscles of the Form women had numbed him, but the gentle tongue work of a Facial woman could bring him to orgasm.\n\nThe head of his shaft pushed at the back of her throat and he felt her tongue go wide and lively against the sensitive spot on the underside.\n\nZhair'lo sighed in relief. Orgasm would finally come to him.\n\n\"Poor bastard,\" someone said, but it was respect.\n\nHe relented then, knowing he'd beaten the Temple, at least at this one ridiculous game, and let Aloe's effort succeed.\n\nHe felt his body jerk and he grunted, feeling his semen launch itself directly into the gentle woman's throat. She didn't miss a beat, continuing to work him with hand, lips and tongue until she'd drained him completely.\n\n\"Poor thing,\" Aloe lamented, putting his underwear back in place.\n\nA couple of the older men patted him on the back and a round of applause saluted him\n\nA glass of water made its way into his hand. Zhair'lo tried to make some gesture of gratitude, but his parched throat made more urgent demands so he drank instead.\n\nHis vision started to glaze over and he stared mindlessly across several tables at a torch on the wall. It been lit near the beginning of Master Kendrick's speech, so it burned steadily now and Zhair'lo let its colours mesmerize him.\n\nOnce, a long time ago, he'd apprenticed to a blacksmith, so he knew a thing or two about fires and what fed them and why they burned. Zhair'lo remembered his old Master explaining the importance of air flow in maintaining a fire. You couldn't have a flame without fresh air coming in, but at the same time you didn't want to lose all the heat generated.\n\nGetting air to a torch didn't cause anyone a problem, of course. The heat took the smoke and flame upwards and easily available fresh air swooped in. Campfires could be tricky, if particularly dumb campers built them in a really poorly shaped pit.\n\n'But with the right air flow,' Zhair'lo thought, 'you could burn just about - '\n\nHe gulped down a mouthful of water and sat bolt up right.\n\n'Talla!' he shouted in his mind. 'Talla!'\n\nA burning pain shot back at him from over forests and Temple walls.\n\n'Gods damn it, Zhair'lo! What the hell?' Talla's protested with a shriek inside his head.\n\n'It's a furnace!'\n\n'What?'\n\n'Nine hells, Talla. It's a furnace!'\n\nNot only did Talla clearly not understand what he meant, she also began to doubt his mental condition.\n\n'Are you drunk?'\n\n'Very, but that doesn't matter.'\n\n'Then what about a furnace?'\n\n'Talla, we've been thinking all wrong. You've been trying to find a way to steal the Synergist and you don't need to.'\n\n'I don't?'\n\n'No. You just need to destroy it.'\n\nThere was a pause and he felt the mill stone grinding its way around as her mind realized the conclusion he had reached.\n\n'You just need to destroy the Synergist, Talla,' he repeated. 'And they've done half the work for you because they've built a gods damned furnace right underneath it!'"
    ],
    "authorname": "xtorch",
    "tags": [
        "magic",
        "temple",
        "medieval",
        "mystery",
        "oral",
        "training",
        "testing",
        "marching",
        "running",
        "telepathy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/tallas-fallen-temple-ch-27"
}