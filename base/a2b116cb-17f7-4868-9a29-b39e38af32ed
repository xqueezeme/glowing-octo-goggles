{
    "title": "The Designer Pt. 02 Ch. 22",
    "pages": [
        "Author's Note\n\nThank you for continuing to read, vote and comment. \n\nThe main story takes place in the Past as Kelly, Alyssa, and Carmen struggle to explain to Jeremiah about their troubles with Jenn inside the family.\n\nThe Present storyline focuses on the rippling of Zac's experiments and how it influences other people around him in and outside of the family?\n\nI hope you enjoy this chapter.\n\n*****\n\nPast: Jeremiah\n\nThe rest of the boat trip went without any unexpected shenanigans. Jenn slept through most of the rest of the trip, while we water-skied. Uncle Thomas piloted with Connie sitting beside him, watching, and telling him when someone fell or dropped off. Alyssa and I handled the ropes, and helped with life-preservers and skis. Carmen, Kelly and Lexi all skied.\n\nKelly had skied before, and was a natural. She had a certain grace in her sweeping curves through the boat's wake. Her blonde hair and tanned flesh made her appear like a model in coppertone commercial. Even slowing down and sinking into the water was made gracefully. Not a fall or a tumble, she was just a natural skier.\n\nLexi was almost completely different. She was aggressive and enjoyed taking risks. Once she figured out the pull of the rope, and the balance on the edges of the skis, she tried increasingly harder stunts. Her natural athleticism was on display, as she went from just getting up on the skis, to sweeping out to the sides, then rocketing back to jump over the wake, and swing out wide to the other side. She wanted to go faster and Thomas would time his turn so her momentum would rocket her fast on the outside curve. He'd accelerate hard, and she whip back and then jump the wakes.\n\nShe had her share of wrecks, catching an edge on a corner, or not hitting a landing on the jump. Her speed would make her tumble across the surface then sink as her momentum evaporated. She was always ready for another turn. Her smiles was broad and her eyes flashed as she came back into the boat.\n\nCarmen... Well Carmen was a submarine. She would try to get up on the skis, sitting back, putting the skis in front of her, tips sticking out of the water. We'd idle and maneuver to give her a straight pull out of the water. The skis would catch, but her balance would rock her over the tips, and then she'd hold to the tow rope, and the skis would come off. Her head dipping under the white wake as she gripped the tow-rope. Getting pulled through the water. Then she let go, and bob on the surface in her life-jacket. \n\nWe'd collect her lost skis, get her set up again, and laugh as she'd inevitably be pulled over the top of the skis and swallow half the lake. Lexi tried explaining it to her, how to let her weight rock back into the skis, but Carmen never mastered the trick of balancing on the skis. As graceful as she could be dancing, on the water she was out of her element.\n\nAfter that, I went back to the Marina and filled up the tank. The girls went inside and bought some drinks and snacks for the night. Then we returned to the dock past the quay wall, and tied up in the assigned berth. We all headed back to the house. Carmen and Lexi cooked dinner, and we ate a full meal. Jenn helped clear the table, then we got out a few decks of cards and we all played cards until it got late. \n\nUncle Thomas and Connie were assigned the guest bedroom. For appearances sake, Kelly and I retired to the RV, while Alyssa slept with Lexi, and Carmen took care of Jenn. Kelly smiled at me as we walked to the RV, and then paused and leaned against it, pulling me into her. I kissed her and she lifted her arms above my shoulders. Her fingers combing through my hair.\n\n\"Less than 10 days,\" she said, with a smiled, \"We'll be married. Did you ever think this would happen?\"\n\n\"No.\" I smiled, \"I never thought I'd be marrying the most beautiful succubus I'd ever met. While having four other girls waiting their turn with me.\"\n\nShe laughed and jabbed me in the gut, \"Sometimes Jeremiah, you know how to say exactly the wrong thing.\"\n\n\"Sorry,\" I said, opening the door, \"Tonight, I promise to only pay attention to you. It'll be practice for the honeymoon.\"\n\nShe quieted down, caught in a thought. She slipped inside and then sat on the sofa facing the door. She looked up at me with a serious expression, and chewed on her bottom lip. I sat next to her and took her hand.\n\n\"Tell me what's on your mind,\" I said, and she shook her head, and pointed to her brain and then back at the house. \n\nI nodded, and then opened the drawer where Carmen had kept the plate, and picked it up. She smiled as she gripped the other side of the plate. I looked at her oddly, we usually didn't have any secrets with anyone in our circle. Or at least we hadn't. This last week had more and more times where one or more of the girls would drop out of the mesh for a time. \n\n\"It's Jenn,\" Kelly said.\n\n\"Jenn?\" I asked, \"What is the issue?\"\n\n\"Well, first I love her, she had been my best friend,\" she said, then looked down, \"It's just I can't be near her for long periods of time. We end up triggering each other. I don't like losing control all the time. Her tattoos are too much, they get her excited, and suddenly I'm excited. I can't control it, and I hate that I can't control it.\"\n\nI sighed, and nodded. I thought back, and realized that much of the time the mesh went silent, Jenn was with one or more of the other girls. The tattoos were becoming more of a problem, and the conflict between her physical arousal, and Kelly's control was something that could easily draw attention to our family in a way we didn't need.\n\n\"What should we do?\" I said, \"All her stuff is on the way to our house, she has no home.\"\n\n\"I don't know,\" Kelly said, and a tear washed down her cheek, \"I just know that I can't continue to feel like this. I feel horrible.\"\n\n\"Have you talked to Jenn about it?\" I asked.\n\n\"No,\" she said quietly, \"I don't think it's her fault. She can't control her reaction to the tattoos. I should be able to control mine. But even with your help, I just succumb to the arousal, it is irresistable.\"\n\n\"So she needs to leave?\" I said, already knowing the answer. \n\nCarmen could normally control her, but that wasn't always the case. It would be a burden on Carmen to always feed her needs. It would be a burden on any of us, and even all of us together had changed our dynamic. I felt more disconnected, more distant, from each of them. I was still attracted to all of them, but our communication had dried up. No one wanted to address the elephant in the room. \n\nEveryone wanted Jenn to leave, but no one would admit it. Kelly was just the first, but I could feel intuitively, that the rest would side with Kelly. As much as we tried to incorporate Jenn into our circle, she was still an outsider. I scratched my head, trying to think of something to do.\n\nFinally I looked at Kelly, and hugged her tightly. I put the plate on the counter, and just quietly held her. We couldn't do anything about it today, and tonight was her last special night at the lake with me to herself. I had really enjoyed our time. The house was in great shape, and I loved spinning around the water in the boat. The shadow of Jenn's scars from the United Priesthood's corruption was the only part that had darkened our time here.\n\nShe wasn't ever mean about it, it was just a facet of her personality. She was easily aroused. Who wouldn't like a hot girl like Jenn to be aroused easily. I shook my head, and reminded myself to focus on Kelly.\n\nFor the rest of the night, I did. She focused on me, too. We left our clothes in the front, and moved naked into the rear compartment. She took off her pendant, and wrapped me in her personal bubble. My arousal peaked and we made love for hours. Not hurried, or frantic. We explored each other. Tested new things, relaxed into comfortable patterns and positions. It was erotic, passionate, and deeply satisfying. When we finally relaxed to sleep, I felt Alyssa's mind soothingly comb into my thoughts. She was just visiting both of us to wish us good night. Kelly smiled and kissed me feeling her sister wrap us in her thoughts. We slept deeply.\n\nWhen I woke up, I blinked trying to focus in the brighter light of morning. There was someone sitting at the foot of our bed. I blinked, as the figure came into focus, brown hair, glasses.\n\n\"Morning, Alyssa,\" I said rubbing my eyes, \"What's up?\"\n\nKelly stirred and pulled her arm tight over my chest, her head on my shoulder. It was still Kelly's time, and Alyssa silently sent a thought that she understood, Kelly deserved her time. When we were ready, she needed to talk with us. Message delivered, she slipped off the bed, and back out of the RV. \n\nI rolled towards Kelly and kissed her lightly on the forehead. She curled into my chest, and nuzzled. Her body pressing against mine, and her warmth soon had me aroused. She blinked open her eyes, and rolled me onto my back, then straddled me, reaching down to slip my erect cock into her tight pussy. She pulsed, making me gasp. She rode me, her hands pressing into my chest, as she controlled my depth and pace. It was her ride, and I enjoyed watching her take her pleasure on my rigid cock. My arousal was feeding her, I could tell as she shimmered brighter, her blue eyes opening with a sparkle. Her smile and open mouth betrayed how close she was. \n\nShe leaned down to kiss me, her tongue pressing between my lips. My hands cupped and gripped her breasts, pulling her down on me as her hips rippled and rode up and down my full length. She parted the kiss, and pressed her head alongside mine, her chin on my shoulder as her breaths quickened. Her moans pled for more. I pulled at her turgid nipple eliciting a whine and another sweet moan, then slid my hands to her hips, gripping her tightly.\n\nThen it was my turn, I shifted down, adjusting the angle of my penetration. Her thighs widened, and sank against me. Then I rolled my hips, the pace quickening as her hips stilled. My shaft pressing harder and harder into her stretched opening. She groaned, overcome, her mouth sinking into my shoulder blade, her nails digging into my upper arms. I rode her hard, until her teeth nipped into my flesh, biting back her scream. \n\nHer body shook as she went over the edge. I jammed my hips up and wrapped my forearms around her spine, my cock pulsing as it emptied my balls into her pregnant womb. I felt her body quiver again as another wave overtook her. Then I was in bliss, unfocused and fuzzy, coupled with my lover, my soon to be wife. We rested, entwined together for uncountable minutes.\n\nWhen we came too, I felt Alyssa's mind. She was waiting in the main cabin. I looked at Kelly, and she kissed me softly.\n\n\"Thank you love,\" she said, \"I can never seem to get enough of you. I know Alyssa's got something on her mind, let's go talk with her.\"\n\nI pulled on some shorts, and Kelly pulled one of my tee-shirts over her torso, and we walked to the main cabin. Alyssa was looking out over the lake, deep in thought, then smiled as she saw us. She stood up and hugged Kelly, kissing her softly. Then hugging me, and kissing me as well.\n\n\"I'm sorry for interrupting your morning,\" she said, simply, looking at Kelly.\n\n\"It's okay,\" Kelly smiled, \"I just needed one more indulgence, we're good.\"\n\n\"You both were leaking last night,\" she said, \"I think I kept your thoughts walled off so the other's wouldn't be disturbed.\"\n\nKelly looked down, then back up at Alyssa, understanding that Alyssa had heard our thoughts about Jenn, and opened her mouth to apologize.\n\n\"I agree with you both,\"Alyssa interrupted, \"Jenn would be a risk to keep in our family. I think I have a solution.\"\n\nKelly looked relieved then confused, and I was curious to hear what Alyssa had planned. I understood what she meant about leaking, I was thinking about the Jenn problem when I put away the plate. I held Kelly's hand and looked at Alyssa.\n\n\"The floor is yours,\" I smiled, \"Frankly I'm vexed.\"\n\n\"It will become obvious, if you think about it,\" Alyssa smiled, \"I do want to say that I really wanted Jenn to become part of our family. But I also know our dynamic has changed to something that will become increasingly difficult to manage. Before Jenn I never felt any jealousy, now I'm getting a bit more possessive. I'm also catching myself becoming more of a mother-hen that I want to be. Before Jenn, everyone knew their place. Now it just feels more confused.\"\n\n\"Do you think Carmen and Lexi have similar thoughts?\" I asked.\n\n\"I know Lexi does,\" Alyssa commented, \"Because of your leaks last night, we had a conversation. She feels like Jenn sucks all the air out of the room when she is aroused, and she's feeling a little left out. You and Carmen have been giving Jenn more attention, and she's worried about that. More than she lets on.\"\n\nI nodded, and accepted that there was truth in Lexi's feelings. I was too often focused on managing Jenn's hyper arousal, rather than enjoying all of my family. I felt a bit guilty in being caught up in only one person. Looking back I felt I should have realized it sooner.\n\n\"So what do we do,\" I asked, \"She's part of our mesh, she is as much a part of us, as you are.\"\n\n\"Well,\" Alyssa said, \"It might be harder than I'm thinking, but your power can mold her into the perfect person for someone else. Then hopefully she can become attached to that person, and disconnect from us.\"\n\n\"Who?\" I asked, and she grinned at me.\n\n\"Right, who do you know that has a high sex drive, loves the idea of sexual fantasies, loves hot sexy women, and would treat them well?\" Alyssa said trying to lead me to the answer.\n\n\"Half of my ROTC team?\" I answered, still not getting who she was thinking of.\n\n\"Jerry!\" Kelly and Alyssa said at the same time, then looked at each other, then laughed.\n\n\"What?\" I asked, Jerry was my friend, but I didn't see why he would be the best match for Jenn.\n\n\"Think about it,\" Alyssa said, \"You already had to adjust him, so you already know a bit about his mind. You told me he was hung up on pornographic fantasies - Jenn is a walking wet dream. Jerry already knows about our arrangement, so we wouldn't be exposing our family to another person. I think he's the best person for Jenn. We can make Jenn the best person for him.\"\n\n\"Are you saying that I should design their relationship?\" I said, \"Manipulate both of their moral curves to fit each other?\"\n\nI was aghast, it was an outrageous idea. The longer I thought about it, though, the more I understood Alyssa's logic. Jerry did have some pretty kinky hang-ups, that had messed with how he thought about women, and limited his ability to have a relationship. Jenn would fit his mental image of a sex partner pretty easily. Could she become something more. I would need to carefully adjust both of them, probably. \n\n\"Hmmm...\" I said, still a bit concerned, \"It could work... I feel uncomfortable having that much influence over people though.\"\n\n\"You already have had influence over both of them,\" she said, \"How many times have you had to adjust Jenn? You've adjusted Jerry when he found out Kelly was pregnant. It's not much more than drawing them together.\"\n\n\"How do I do that?\" I asked, \"Jenn doesn't even know Jerry. I have nothing to anchor to him in her curve.\"\n\nAlyssa looked over at Kelly, \"We can start name dropping?\"\n\nKelly thought for a moment, \"You mean just start mentioning Jerry in our conversations?\"\n\n\"Yes,\" Alyssa said, \"Not obnoxiously, just to start anchoring a concept of Jerry in her mind. Jeremiah can then adjust that concept to become attractive.\"\n\n\"I don't know,\" I said, \"Shouldn't we talk to Jenn first? It seems a bit manipulative to just push her onto Jerry. Also, how does Carmen feel?\"\n\n\"Think through what Jenn would feel\" Alyssa said, \"No matter how you framed it, she'd feel like she was being abandoned if the suggestion came from us. If she thinks it's her idea, then releasing her doesn't carry any abandonment issues.\"\n\nI thought it through, and realized she was probably right. If I told Jenn to leave, I'd have to adjust her more radically. We, together as a family, had worked hard to make her feel included. To then cast her off would make the inclusion feel false. Alyssa was right, inducing an attraction to Jerry that she could follow as her own idea was more concrete. It was an evil genius type of plan, but dammit, it just might work.\n\n\"I'll talk to Carmen,\" I said, \"I want to have her full support before we drive too far down the path. But you can start name dropping Jerry.\"\n\nKelly and Alyssa nodded, and then we all hugged. It felt like a weight was lifted from our shoulders. I hoped that we knew what we were doing. Alyssa left and Kelly and I got dressed, then headed to breakfast and to bid Uncle Thomas farewell.\n\nPresent: Isaac\n\nI was wide awake at 1:30 AM. I'd made it through the day at least. I better understood my power, and exercised some control. The little bit that I released with Beth in the car made our quick tryst very satisfying. Though I think I had some remnants of arousal on me when I took that test sixth period. The two girls on either side of, seemed distracted through the whole exam. They'd look over at me so many times, the teacher, Mr. Francis, and old geezer on the cusp of retirement, walked back and hovered to make sure they weren't cheating.\n\nAfter school, I drove Beth home. Her parents both worked late, so we studied. We did! After fucking like bunnies again. Twice. But then we did study for about 15 minutes before her mother came in and started fixing dinner. She smiled kindly at me as I excused myself from the kitchen table. We tried to make it look presentable, but her mother caught of whiff of my pheromones and looked at me oddly as I beat a hasty retreat.\n\nI wore the ring the rest of the night at home, through dinner. My parents were distracted, it seemed. Alyssa had another issue that she was discussing with them. Carmen had shopping to do after dinner, and took Maria with her. Lexi headed down to the gym to do some yoga stretches. Her workouts were getting so strenuous, it was amazing how well she focused on her goals. I was left watching TV with Naomi in the media room, huge cartoons on the project screen. Then Leah came in and collected Naomi to take care of her night-time routine. Dad had given Naomi two new earrings, made with the stones, and instructed Leah to have her wear them all the time. I deduced, being my half-sister, that she had some powers too.\n\nI finished up some homework, then Beth started texting me. Then sexting me pictures of her naked body, then we video-chatted as we both masturbated. She was almost insatiable, I wished I was there, so she could get the release she craved. My own release was less than optimal. Which was probably why I was awake at 1:33 AM. I took off my ring and just tried to feel what was going on in the house.\n\nI could feel the energy coming from across the house, upstairs. My mother's aura felt like a small light from this distance. I'd never noticed it before, but with awareness of my own powers I could sense when she was using hers. The shape of it morphed, then bloomed, then slowly faded. I figured they fell asleep, and I was left with thoughts of what they might have been doing. Then I felt a weak pulse of arousal.\n\nIt pulsed, and I felt like I could taste the desire. It was close, not a nearby house. The nearest neighbors were a mile down the road. This was inside our house. Thankfully it wasn't in the direction of grandmother's house. She had her own small apartment just on the other side of the garage. Sometimes she was ever present in our house, other times she'd keep to herself. Today I hardly saw her. \n\nNo, this pulse wasn't someone's power, it was energy. An arousal, I could inhale, and felt it stir my own energy. It reminded me of the wave of arousal I felt standing at Ms. Little's desk. I worried my brow, trying to locate the source.",
        "Leah?\n\nYes, it came from the direction of Leah's bedroom. My bedroom, and Naomi's were on the opposite side of the kitchen from the main living area. My parent's room was on the opposite side of the housel. Maria and Leah had their rooms along the front face of our house, windows looking out to our driveway, and the hallway connected the two wings. Maria was nearer to the garage, and Leah slept between Naomi's room and kitchen. \n\nWhat was she doing?\n\nThe pulse of arousal was growing, and I felt my own power respond to the stimulus. I groaned feeling my cock engorge, wondering what Leah was doing. I'd never really noticed her until recently. She always stayed with Naomi, and kept out of the main traffic of our busy house. She was nice, kind, and happy, but also reserved. Like she wasn't comfortable around other people. \n\nI'm going to go to hell.\n\nI pushed in her direction, letting my power bloom, and tried to direct it at the arousal I was sensing. Then I felt it spike, like it got a jolt of energy. The arousal ramped up as I fed it with my power. I was curious to see what would happen. I felt it heighten, then plateau. The feeling was heightened, but also not rising. I felt indecision. \n\nThen I scanned her with my father's power, and was able to perceive a curve, like my Dad had described. It was alight with flickers of power, and the powers were conflicting. Like a battle, waging on the edge of a fortress. The wall held, soldiers at the top protecting it, from the sparks of conflict that raged along the base. I pulsed my aura, and watched as the conflict grew more heated. The wall stood firm, and I wondered if I could influence the wall. I focused, just experimenting. \n\nThe wall seemed to slip down momentarily then slide back up. Okay, that must be the moral curve. I tried pushing back the resistance activity along the top of it. The protection, self-control, backed away, retreating from the roiling sparks that I now connected with sexual arousal, since it had pulsed when I pushed my aura. The arousal bloomed even more, as the guardians retreated.\n\n*knock knock*\n\nOh fuck.\n\n\"Zac?\" whispered Leah's voice.\n\nThe door opened, and I saw her silhouette, dressed in her full length nightgown. She turned and closed the door behind her, locking it. She waited looking in my direction. I couldn't resist and I pulsed my power. Her legs buckled and a hand went between her legs, and a moan escaped her lips. I could hear her inhale sharply, then step towards me. Then two steps, then she was at my bedside, her face inches from mine. \n\nI looked into her eyes, that were brimmed with tears of frustration and lust. Shining in the moonlight, I leaned and kissed her. I tossed my covers off of me, and my hands guided her onto my bed. Her lips pressing firmly to mine, her tongue sliding between my lips. Her hands pulling her nightgown up and off. \n\nI pushed my boxers down my thighs, kicking them under the edge of the covers. She straddled me, then rose up, looking down at me. Her eyes fighting between her morals and the heady need she felt. I pulsed my aura and she groaned in lust. She reached down and gripped my cock, then rose up. Her eyes bright now, focused, as she rubbed my engorged head over her juicy lips.\n\nShe slid down, and I filled her. grinding her hips into mine as she leaned forward and kissed me. My hands filled with her full breasts, her large nipples pressing firmly into my palms. She moved her hips, riding up and down my shaft. I pulsed my power again, weakly, just a breath to keep my aura small, but feeding her arousal. She groaned into my mouth. Her tongue snaking deeper. \n\nI gripped her hips and guided her movements as my hips fell and rose, meeting her downward roll. She gasped at the feeling, and groaned. She parted the kiss, panting as our bodies danced together, parting and meeting. I could only think of pleasing this woman. Giving her pleasure she craved, I lost myself looking into her blue eyes, my hand reaching and combing her hair back. She looked down at me, and bit her lip, panting again. She didn't want to scream, though every nerve in her body was alight with arousal. \n\nI pushed, a breath of power and her eyes rolled back and her core quivered. I could feel her orgasm roil through her nervous system. Her pussy clenching around my cock, my hips started to lift and pound, and she rode the wave to another quaking peak. \n\nThen I felt her worry. She slipped off of me, turning, and taking my cock, covered in her spending into her mouth. Her hand wrapped around my shaft, and jerked me off. I groaned, as she hungrily licked and sucked, and lifted my hips. My thighs bucked and the head of my cock pulsed against her lips, then shot a load of my cream into her open mouth. She held her lips open as her hand and fingers milked every drop from my shaft. I panted as my body shook, and swallowed the grunt of satisfaction I wanted to scream out.\n\nShe smiled, feeling my body tremble. She licked her lips, making sure she had every stray drop of my cum, then looked straight at me and swallowed. I reached and pulled her towards me, kissing her lips, tasting my cum on her tongue. Then let her rest her head on my chest.\n\n\"Sorry,\" she said, \"I'm not on birth control,\" \n\n\"It's okay,\" I managed, \"that was hot.\"\n\n\"I don't know what came over me,\" Leah said, \"Ever since yesterday, all I can think about is sex.\"\n\nI combed through her hair as she rested her cheek against my chest, hearing my heartbeat. I thought silence was the best course. Then decided to press my luck.\n\n\"Well,\" I managed to whisper, \"I'm always right down the hall, so long as my parents don't know, I can help when you feel overwhelmed.\"\n\nShe smiled and kissed me, then slid off my bed, and pulled her shapeless nightgown over her shapely body. \n\n\"I'm not sure it's good to make a habit of this,\" she said, \"Don't you have a girlfriend?\"\n\nI nodded and she smiled, \"It was just a need, just this once. Don't worry, Zac, it'll be our secret. You are a wonderful lover.\"\n\nShe slipped from my room, and I finally fell asleep.\n\nPast: Carmen\n\nI relaxed a bit, after Tommy and Connie left. They were wonderful guests, and I was glad to serve them as they stayed with us. It was the first time our family had guests that had accepted our relationship without feeling anything weird. Connie was a rockstar, and Tommy was a wonderful man, and great mentor to Jeremiah. I still felt conflicted the whole time they visited.\n\n\"We've changed,\" I thought to myself.\n\nI was conflicted as to the changes I felt. The biggest change was the addition of Jenn, of course. I felt some responsibility for her, given that I had left her alone with Kelly and Lexi when they were amoral pleasure seekers. I had enjoyed the short time we spent in the dorms, but I hadn't seen her since she left the dorms. The next time I saw her was when her supernaturally enhanced body was being scrubbed down in the meeting hall when we rescued her.\n\nShe was the same girl, under the skin. Yet she was completely different. I didn't cause the changes in her delicate arousal system, but I felt responsible. I was chewing myself up with some regrets, feeling guilty and ashamed. Feelings I hadn't felt hardly at all once Jeremiah passed out the necklaces at the hotel.\n\nWhen Lexi and I moved into Jeremiah's house, I felt calm. I was centered, I knew my place in the hierarchy of our family. Now it felt confused, I still did the same things, caring for the needs of the family. Cooking, cleaning, all the services that fulfilled me deeply. \n\nNow I felt on edge, very much like when I was caring for Lexi and Kelly after Jeremiah had to leave our dorm. Sometimes it was fun, and exciting. Who doesn't love diving naked into a mosh pit of writhing flesh? Yet I was feeling more and more drained. Back home, which was strange, it was Jeremiah's house, I had no attachments to it, but it was definitely my home. Before our trip, our sexual exchanges always left me feeling satisfied, if not energized the next day.\n\nIt's Jenn\n\nI knew the truth, she had changed our dynamic. Her arousal was like a match, setting fire to us all, and dragging us, sometimes unwilling, into the conflagration of her lust. Everytime Jeremiah would try to fix her, she'd slowly edge back up. Was it partly our fault, though? As a family we were very sexualized, enjoying our frequent trysts. She might be the spark, but we weren't always slaves to her every whim. Lexi could flat out be aggressive if she didn't want to engage with Jenn. Kelly couldn't help herself. Alyssa and Jeremiah seemed more distant.\n\nSo I allowed the heap of responsibility to rest on my shoulders, and I tried to top her to submission. I could top, in a sexual situation, I could swing from willing submissive to confident top. I detested a being dominant outside of a scene though. Jenn was increasingly pushing me into that role. Unconsciously, probably, but she knew that I would satisfy her need. So increasingly she'd seek me out when she felt on edge.\n\nI'd worried this in my brain all afternoon. Now, waiting in Jeremiah's bedroom, sitting on the bed waiting for his time with me. I was still troubled with the changed dynamic. I didn't feel like playing the card game the five were engaged in. After clearing the table, and doing the dishes, I excused myself for some me time. I could tell the game was winding down. I was still edgy. I needed to find a center.\n\nI did what came natural. I decided to do what a good submissive should do. I stripped and knelt at the door. My head bowed, my hands resting palm up on my bare legs. My thighs spread and open. His to use.\n\nI breathed, trying to find my center. My thoughts shifting through different things. I felt the warm comfort in my core reminding me of my place. But my thoughts were teeming with how I was failing my Master. The more I sank into the headspace, the more comfortable I felt, the more troubled I became. I wept, silently at first, until tears slipped down my cheeks, and ran over my breasts. It only made my thoughts more conflicted.\n\nThe door opened, and I felt like I should scamper away into a corner. Despite my fears, frustrations, and overwhelming guilt, I centered myself. \n\nI felt his hand comb through my hair, and grip tightly, then lift. My Master's eyes, so clear and focused. Then they flickered, he looked at me, seeing my tear streaked face. His expression softened, and then he concentrated on me, like he was inspecting my soul. I rested, confident that he could sense what I needed.\n\nHe let go of my hair, then walked away. I started to sob, when the door opened, and he left.\n\nHe's ashamed of me, he's going to replace me.\n\nI cursed at myself for how easily my mind could go to that place. The old place, the old Carmen. Jeremiah wasn't like any of the others. I slowed my breathing, trying to find the wobbly center, then the door opened, and I heard the sound of a bag being dropped beside me onto the floor. I focused on the floor between my knees, catching only the form in my peripheral vision.\n\nMy bag of tricks\n\n\"On the bed, mine.\" Jeremiah commanded in a low whisper. \"Knees, like this. Hands and elbows.\"\n\nI crawled immediately to the bed, and wormed my naked flesh onto the covers. I found the center and kneeled, then crossed my arms behind my back, holding each elbow in the opposite palm. \n\n\"Edge\" he commanded, tapping on the foot of the bed, \"Face the wall.\"\n\nConfident, clear and concise. I felt my core melt at his instant control, and I rushed to obey. Twisting around to face the headboard, my feet slipped past the edge of the mattress, my head bowed and staring down. The feel of the breeze across my now fully engorged pussy lips was like a whisper of heaven.\n\nHe didn't say a word, as he stood behind me, he just worked the ropes under my crossed forearms. I'd spent some spare time last week teaching him basic bondage knots and ties. He was a natural, from spending time on sail boats, and ROTC line handling. He knew the knots, he knew the different types of rope. I softly moaned as his control over me took a physical form in his expertly tied ropes. \n\nIt was a simple box-tie, binding my arms behind my back. He stood over me, behind me and was silent as he worked. Then he leaned and hugged me, his hands cupping my heavy breasts. His finger on my chin, turning my head to the side. He kissed away the tears on my cheeks. His fingers massaging the streaks of tears into my breasts. Then he pulled away, and starting against my spine, wrapped doubled lengths of rope around my torso. \n\n\"Straight back.\" He whispered, tapping on my spine. \n\nI straightened up, the bow of my spine straightening, my bound arms forcing my shoulders to pull back. My breasts stood proudly before me. I closed my eyes, just wanting to feel his hands. He wrapped the ropes tightly under my breasts, the fibers compressing into my flesh. Then he shifted the wraps, and wound three more bands over the tops of my breasts. The chest harness was wonderful. His hands pulling tension just right, never too tight, but firmly compressing my flesh. \n\nI took a moment to lean my head back into his chest as he worked the strands into the shape he desired. The feel of his muscles and his strong chest only added to the feeling of peace I was beginning to swim in. My core was molten, my thighs damp with my arousal. He finished his knot, then tapped me on my shoulder.\n\n\"Turn,\" he commanded, then turned away to grab more line from my bag.\n\nBy the time he turned back around, I was facing him. My posture straight, my eyes level at his chest. I couldn't look at him, not yet. I was his plaything. I was his toy. I was his object. My thoughts were his to command. I could wait, he knew what I needed. I trusted him.\n\nHe looked at me, then continued. A shorter length of rope was wrapped between my breasts. The line tensioned and pulled the top and bottom bands together between my round breasts, compressing the flesh, and tightening the bands. Then he tied similar vertical bands at my sides, between my arms and my sides. Compressing the bands, and making my breasts ache deliciously. Then he leaned and reached between my open thighs. \n\nI wanted to grind down into his arm, I was so aroused, but he grasped the bitter end of a longer rope he'd left dangling from the rear of the harness, and pulled it tight. I groaned as I felt the fibers of the rope slip between my ass. He measured, then took a turn of the rope, leaving a simple knot, and pulled tension on the rope again. \n\nI squirmed as the knot wormed between my cheeks and settled against my tight anus. Then with another measure and a knot, he pulled the rope tight, fitting the bitter end under the bundle of rope between my breasts. I shuddered as the second knot rested on top of my clit ring. The vibrations of the line as he tied off the tension had me suddenly on edge. \n\nHe stepped back and examined his work, unhurriedly. The feeling for a submissive like me, bound so expertly by her Master, was indescribable. I'd found my center. I felt him push a thought to Alyssa, and then felt the vacuum as he and I dropped out of the mesh. It was just him and I.\n\n\"Crab back,\" he side, as he crawled past me and sat at the head of the bed.\n\nHe rested his back against the headboard, then reached forward. His fingers slipping between his ropes and my flesh. His flesh. He tugged me back until my bound hands were resting at his waist. My head rested against his chest. His arms wrapping under my bound breasts. The feeling of his knots as I squirmed only made my arousal bloom. He'd take his time, he knew what I needed first.\n\n\"Okay, mine,\" he said, reminding me deliciously of his ownership, \"Tell me your troubles.\"\n\n\"It's not this slave's place to worry you with her troubles, Master,\" I said, regretting each word as it slipped from my lips.\n\nThe slap on my breast stung, and the next only made the pain bloom more. The compression of the rope left my breasts engorged, my nipples rigid. His hard smacks and bite of pain made my head swim.\n\n\"It's your job to answer my questions, slave,\" he hissed.\n\nFuck, my core trembled at his intuitive dominance.\n\n\"Yi, Yes Master.\" I started, \"this one is troubled with our family. This one fears it is coming apart.\"\n\nHe cupped my breast, his fingers soothing the flesh he'd just stung. His actions binding my mind as much as his rope bound my flesh.\n\n\"You are not alone,\" he said, pausing then asking, \"Jenn?\" \n\nHe asked, although it seemed he already knowing my answer, \"Yes, Master.\" I nodded and a tear fell down my cheek. My failure to control her was probably an irritation for him. I knew that he would have to intervene, but I should be blamed.\n\n\"You've done so well with her,\" he commented, his words betraying the lies I was telling myself, \"It is beyond what one person can do. You've done so well, trying to control the situation. I have allowed that to continue far too long.\"\n\nHe drifted into silence, while his hands cupped and stroked my breasts, then sliding down to massage my abdomen, his touch light and at the same time firmly controlling. My mind settled down as he took responsibility, which freed me from my doubts. \n\n\"You shouldn't have to step in,\" I said, \"This one can do better.\"\n\nHe lifted up and gripped my breasts tightly, so tight I inhaled from the wince of pain of further compressing engorged breast tissue.\n\n\"Slave,\" he said, tightly, \"You forget yourself, I should have seen this before you were so on edge about it.\"\n\nI winced as his hands tightened, and my cunt pulsed. How he could discipline and arouse simultaneously was amazing. I nodded with my eyes shut, squirming in his grasp. The movement making the ropes vibrate and my ass and clit tingle. Fuck, he'd make me cum admonishing me.\n\nHis grip slackened, and he pulled my torso up and nuzzled under my neck.\n\n\"I want your mind to release that worry,\" He said softly, his lips at my ear, \"I will handle it. I may decide to talk with you more later.\"\n\nI nodded. It was probably right, since his words were becoming more unclear as my arousal rose. I was content to know that my Master heard me, and would take care of my problems. I was his toy now, and I was right in the place I needed to be. I sighed in contentment as his lips captured my earlobe and bit at the flesh. His hot breath bathing my cheek. His presence seemed to surround me.\n\nI writhed, his hands gripped at my waist, then drew up, his short nails dragging along bare flesh, sharp slivers of pain that swam in the pool of endorphins his strict ropes had prompted. The strain in my shoulders was a constant reminder of who I belonged to. \n\nHe gripped the rope that ran across the flat plane of my belly. Then tugged, burrowing the rope against my ring making my hips grind in response. The tight knot in my anus pressed deeper and I groaned. I could feel how wet I was, the cooler air of the room bathing my damp thighs. My flesh felt hot, and my legs spread wider. His cunt, his to have and use. \n\nHe slipped from behind me, and stepped off the bed. He dropped his shorts and released his rock hard erection. I licked my lips, my focus on his core. He gripped the top band of ropes around my chest, and dragged me to the edge of the bed. His firm hands directing me as I scrambled to where he wanted me.\n\nMy head hung over the edge. my arms in the small of my back forcing me to arch. My breasts stood proud as my shoulders dug into the edge of the mattress. My throat lengthened as I let my head rest, my mouth open. His toy.\n\nHe teased my lips with the head of his cock. Not letting more than the tip touch me. I tried to crab back, wanting to fill my mouth with his meaty manhood. He stepped away and I grunted in frustration. My thighs twisting and moving to grind that rope against my leaking cunt.",
        "*SLAP* \n\n\"Hold still,\" he commanded, suddenly over me again.\n\nHe teased his cock head over my lips again. His hips shifting to keep me chasing the tip. I growled and purred, his animal seeking to please him. His hands dropped, then I felt the delicious sensation of strands of rope wrapping around the column of my neck. I closed my eyes, and stilled, his fingers and hands making my mind swim into a blank haze of arousal. \n\nHis. His to use.\n\nThe knots tightened, and the bands around my neck were just right, a rope collar that reminded me of my service to him. His bound slave. His toy, his fuck toy. His mouth, his throat. My eyes gleamed as I looked up at him. Then he gripped my chin in one hand, and his cock in the other. He fed his beast his cock, and I rolled my tongue over the top of his curved shaft. I felt the crown push easily into my throat, and felt my saliva pool against the roof of my mouth. I inhaled, as his balls pressed against my nose. My mouth and throat filled with him. I shook, a shiver of arousal and a mini-peak of orgasm rushing through my veins.\n\nHe held his cock there, until my need to breathe made my chest buck, then pulled out. I coughed, and a wad of spit slid over my cheek and into my eyes. I sucked in a breath, then was sucking in the head of his cock again. My eyes burning with the spit, and darkened by the press of his heavy balls against their lids. I centered myself, my tongue curling along the upper curve, my throat swallowing trying to will his hard shaft deeper. Another tremor shook my body, A haze of red around my vision.\n\nThen clarity, clean air, a deep breath and back to darkness. He was using his toy, fucking his slave's mouth. I bucked as he grabbed the rope and tugged those knots against my pleasure points. I gasped for a breath, then was swimming again in spit and pre-cum. I keened as his hands mauled my engorged breasts. Nothing but him in my mind now. He was all around me, every feeling I felt was him.\n\nBright light, and cool wet slick saliva pouring down my cheeks. My eyes closed as I felt the goo crawl down my face, to tangle in my bangs. The bed shifted, my thighs parted. The ropes at my chest and back tightened as the rope bisecting my sex was pulled to the side. Then I was full. My cunt full of my Master.\n\nI came and then felt another wave right behind it. His use was not gentle, he took me hard. His thrusts pushing me further off the edge. My heels digging around his hips, holding me there, gripping my Master. I shook as my mind swam in wave after wave of bliss. His hand gripped my engorged breasts, using them like a handle as his hips pounded his cock deeper and deeper into me. \n\nHe paused, and I felt fingers gripping the lines at my neck. He backed away and I panicked. He pulled and drug my body back onto the mattress, my head resting normally. Then he was hammering back into me with hard strokes. I groaned and shouted. Fuck! This man, my Master! I thrilled at his use of his slave. \n\nThen I was empty, and I tried to blink my eyes open. The mass of spit and goo making it possible to only see shapes. I felt his hands, lifting me, turning me. Then the feel of the coverlet cool against my spit soaked nose. I lifted my knees and spread my thighs. He slammed back into me, the rope wrapped around my crotch was stretched and loose, the bands around my chest and abdomen tighter. \n\nI reached my fingers back, just wanting to touch him, ground myself with the feel of his body. His knots kept me bound, my back in a persistent arch. He fucked me hard, then his hand was at my the back of my throat, gripping my thick mane of hair, and tossing it to the side. Then curling between rope and flesh, and tugging my neck back. \n\nI gulped in a breath, and felt my edge rush forward. Wanting to pant out, and moan, his grip on my collar made breathing a chore. I gasped, and felt my face redden. He slammed deep in me, his free hand slapping at my raised ass. I lost it, my vision went dark and my body seized. I bucked under him as I slammed forward. A searing flood of his seed bathing the walls of my womb. I wheezed out a breath, then sucked in a vacuum. I bucked again, then convulsed, a web of dark bliss as I came hard.\n\nBlackness, a warm blanket pressing against me. My breath panting as I recovered. His breaths on my back, a hand at my mouth, and ear at my spine. Checking me. Feeling me. Covering me. Protecting me.\n\nMy mind was blank, I was in his hands, I was home.\n\nPresent: Alyssa\n\nToday, I was working at home. Oversized sweatshirt and comfortable gym shorts. I was in research mode. James's dusty tomes on my shelf, and working through even older texts I'd collected over the years. Something had pinged my memory, and I wanted a better, more concrete understanding of it. Also, with Naomi and Zac awakening, I needed to refresh my memory on what I knew about our powers. \n\nThe house was quiet after breakfast. Zac had rushed off to school at the last moment, as per usual. He would suffer his own consequences if he was late. Lexi had her training, a long swim workout would keep her at the pool until lunch. Kelly and Jeremiah headed off to the office. Kelly would work on our hospitality business today, no clients. Jeremiah had several meetings with prospective clients, and a some follow-ups with new couples. Carmen and Maria were shopping.\n\nNaomi was a bit frazzled, this morning. Her new found fun thing, telepathy, wasn't working. It made her grumpy, and she couldn't really explain why. Jeremiah wisely had the jeweler place the stones into small earrings. I had her ears pierced when she was two, and she had already acclimated to the presence. She hadn't connected her lack of powers with the stones decorating her ears. She was too young to care that they didn't quite match, the color of one stone being a deep azure and the other, my stone, a dark ruby red.\n\nLeah had her hands full with the grumpy child, and decided to drive her to the park in town.\n\n\"I need to run some of her energy off,\" Leah said, seeming a bit distracted.\n\nThis morning was a bit strange, Betsy had made an appearance at the table, then said she was going to visit Rebekah later in the month. She was a bit too old to make the drive herself, so it was up to Kelly and Jeremiah to figure out how to get her there. \n\nThinking of my mother was always a bit odd. I still thought of her using her first name instead of as my flesh and blood mother. Her maternal care of our Montana Bed & Breakfast had been very successful. She had taken the remnants of the Priesthood compound, and bound the remaining families into a cohesive unit. They ran a very successful side restaurant newly built over the ashes of that horrible meeting house. The B&B was self sufficient throughout the year, but was a gold mine during the winter. Maybe I should tag along, and visit? I'm sure Rebekah would love to see her grandchild. \n\nI shook my head, something to discuss with Kelly and Jeremiah later. I hesitated to make it a full family vacation, but summer was getting closer. Zac's graduation was right around the corner. Lexi's triathlon would be right after that. Everyone's busy schedule would become a bit lighter. \n\nOkay, I'm getting distracted, back to work.\n\nI browsed through my computerized notes. Notes I had been working on for eighteen years, trying to figure out the puzzle of our powers. They started as notebook pages, because while Jeremiah was a computer guy, I liked the feel of paper, and being surrounded by books. About five years ago, I hired a summer intern, and he transcribed my notes into pages of indexed computer files. If I had sketched something, he scanned the photo, and linked it to the file. The result was a fairly comprehensive collection of arcane spirituality and conspiracy theories tied to the overarching angel-human myth.\n\nJames's books were not the first we'd found that seemed to be magnets or portals for weird spiritual possession. That was another set of computer files, and a database of artifacts. These items seemed to run parallel to the special powers research. The two areas sometimes collided, like skirmishes in battle. The angelic lines seemed to oscillate between falling under spiritual corruption of the dark sprites, and all out battles to defeat them.\n\nMy tactic with such artifacts was to bag and tag them. I wouldn't release them into the wild, instead I'd store them in a vault down in the basement under our gym. It was the actual basement, housing the mechanical systems and tanks for our mansion.\n\nThe main house was built into the side of a hill. The main floor, kitchen and living areas were built at ground level, the main entrance facing away from the slope. The second story was constructed a few meters behind the leading wall. The rooms, like the one I currently occupied, were along a hallway that was open to the large living area. The gym floor emptied out to ground level, and the pool. The upper story deck sat midway down from the main story. A bit byzantine in construction, but it served our family well.\n\nI perused James's old tomes, and entered their author, date of publish, publishing house, and other arcane details into the database. Then picked up the five dusty old books, and headed down to the basement. \n\nThe house was quiet as I padded down the stairs in my barefeet. The sun streamed in through the large pane windows that displayed a view of our deck, pool, and the broad clearing of natural grasses beyond. The forest of trees further back protected the sightlines of our property. It made it feel like we were isolated deep in the woods. I loved our house, even if Jeremiah would grouse at the expense.\n\nI circled past the kitchen and open dining area, circling past Zac's room and headed down the stairs to the gym level. There were more rooms than just the gym. The laundry room was down one hall, chutes from all our rooms emptied into individual bins. Maria would wash, dry and fold, and leave our clothes on our bed each day. Further back, there was a media room that doubled as a library. The walls lined with books, and eight plush lounges facing a projection screen. Hooked up to every imaginable projector and gaming console. It was Zac's favorite room. A stocked refrigerator and snack table made it very accessible for entertainment.\n\nI slipped past the media room, and into the back stairs, leading to the basement. All of the heating and plumbing systems were down here, so it became a bit noisy. Near the stairs, we'd built a large secure room. The walls were lined with lead, and then reinforced concrete. The inside cool, and dark. I flipped on the light, and found the book shelf, and slid James's collection of arcane demonic smut onto the shelf. I clicked off the light and closed and locked the door.\n\nThat chore done I climbed back up the stairs, then back across the gym floor. The sun was beautiful, and the day was peaceful. Maybe I'd sun myself on the deck by the pool after lunch. I distractedly climbed up the stair and bumped right into Leah as she passed by Zac's room. \n\n\"Oh,\" I said surprised, \"Sorry, I thought I was alone.\"\n\n\"My fault,\" Leah blushed, \"Naomi fell asleep on the way back from the park, I figured she needed a nap, so I stayed quiet.\"\n\n\"No worries,\" I smiled, and moved back past the kitchen into the large living room.\n\nShe nodded, then looked at me, opened her mouth to say something, then turned and walked in the direction of her room, \"I'll be right back,\" she said.\n\n\"Odd,\" I thought to myself.\n\nI slumped into one of the large sofas that were arranged in the main room. I distracted myself by looking out the windows into the blue sky, with nary a cloud. A rare and strange occurrence for mid-spring in the western half of Oregon. I was curious about what she wanted, but I resisted the temptation to read her thoughts. That was fine for the ones I loved, but I didn't want to pry into her thoughts. I had enough trouble trying to free my mind from thoughts of her.\n\nEver since Jeremiah and Kelly had their supernatural enhanced romp with my nanny, I was struggling with the thoughts of the young pretty girl nude. Struggling wasn't the right word. Enjoying or fantasizing were better, but still not quite on the nose. I was curious, and she was alluring in her apparent naivete. \n\nAfter I spoke with her and Maria, making sure they knew we still valued them as our employees, and explained, as best we could without sounding like lunatics. She seemed to be more distracted and even more seclusive. \n\nI suppose part of my troubling thoughts was they both seemed to be totally okay with being fucked by their employers. When I felt what had happened, I thought for sure we'd be exposed, sued and chased out of town. \n\nMaria only smiled, and looked at Carmen with a loyal expression, \"No problem Miss Alyssa, No problem. You no worry,\" she had said with a smile and pat of my hand. \n\nLeah was more thoughtful, but she also said it was consensual. Then she had looked at me, almost as if I'd be angry, \"It won't happen again,\" she had sworn.\n\nWe certainly dodged a bullet, somehow they always seemed to miss us.\n\nLeah looked around for me, once she topped the stairs, then when she saw me on the sofa, strode purposefully towards me, her hands clutching a sheet of paper. I sat up straighter, then rose to meet her.\n\n\"What's this?\" I asked, taking the paper she held out.\n\n\"My letter of resignation,\" she said, her bottom lip quivering, \"I will give you two weeks, then I need to leave.\"\n\n\"Please, Leah,\" I said motioning to the chair next to the sofa, \"Sit down, let's talk this through. Have you found another opportunity?\"\n\nShe shook her head, then the her eyes brimmed with tears, \"No, it's not like that.\"\n\n\"Tell me what's troubling you,\" I said, \"I will listen confidentially, I promise.\"\n\nI was halfway into prying open her mind, because of how distraught she was when she looked at me, and said, \"I can't help myself, all I can think about is Mr. Jackson.\"\n\nThen she paused, seeing my shock, but her words tumbled out, \"or Isaac.\"\n\nI took a slow controlled breath, and once the confession was out of her mouth, she started to push every thought out.\n\n\"I think there is something wrong with me, or I'm going crazy, or turning into a nympho maniac,\" She said in a stream of thought, \"I'm not a virgin, but I've never had really satisfying sex. Until, well first with Maria, it was off the charts. Then she and I joined Carmen and Kelly and ...\" she struggled with his name.\n\n\"Call him Jeremiah,\" I said, with a smile, \"The rest of us do. Some do call him Master with fondness.\"\n\n\"What do you mean?\" she asked, \"He's married to Ms. Kelly isn't he?\"\n\n\"Lord,\" I thought to myself, \"We're better at hiding it than I thought. Poor girl, she thinks this is her fault.\"\n\n\"Tell me what you think of our arrangement, One man and four women?\" I asked.\n\n\"Well you run a very successful business, and you need to be near each other. Living together is the easiest way to run a business. It makes the most practical sense.\" she slowed down, then it was like a light went on, and she looked at me and blushed.\n\n\"Wait,\" she said, \"the rest of you? All of you? Lexi too?\"\n\nI thought for a moment, then stood up. I placed the letter of resignation on the table, face down and unread. Then looked at her.\n\n\"I'm going to show you something,\" I started, \"I'm going to let you in on our secrets, so you know the full truth. This is a risk for me, but I trust you. You are a wonderful nanny to our child, and you are a friend as well. If after I tell you everything, and if you still want to leave, then this is a confidential conversation. Do you understand?\"\n\nShe nodded slowly, her brown ponytail bouncing behind her bright blue eyes. She was dressed in a comfortable sweater and jeans, earth tones and denim. I took her hand and led her upstairs. We walked past Carmen's room, then into mine. She'd visited me before here, but only my parlor.\n\n\"Do you think this is where I sleep?\" I asked her, letting her look around. \n\nThe small bed was made impeccably and sat against one wall. I read books there from time to time. On our private nights, Jeremiah would visit and we'd enjoy the comfortable bed, but by and large I didn't sleep in my room.\n\n\"No,\" she said softly, \"You don't sleep here do you.\" she said, putting together the puzzle, her eyes looking curiously at mine.\n\n\"Come,\" I said, taking her hand and pulling her through my open closet. \n\nI opened the door to the expansive master bedroom, and let her walk past me. She walked in quietly, as if she were invading a sacred place. In a way she was, it was our haven, a place where the five of us could be completely ourselves. She was the first person outside of our circle to come inside. I worried that I might have opened up a box I couldn't close.\n\n\"You?\" she asked, \"All of you?\"\n\nShe looked around and focusing on the one huge bed in the center of the sprawling wing. The other chairs, and lounges making the room seem less open, and at the same time large. She saw the large open bathroom and shower, then turned to see the inside hot tub near the entrance to the upper deck. \n\nI nodded, \"Jeremiah is our head, the rest of us, Kelly, Lexi, Carmen and myself, are all a family.\"\n\n\"You mean,\" and she pointed at the bed.\n\n\"Every night,\" I confirmed. \n\nThen I took a bigger risk, and drew closer to her. Looking at her, and letting my mind tumble through her thoughts. I concentrated and telekinetically pulled the ribbon in her hair, and her brown tresses fell around her shoulder.\n\n\"What?\" she said, looking around, \"How?\"\n\n\"Jeremiah, Kelly and I have special powers,\" I said, \"We can do different things, you've felt Kelly's and you've probably felt Zac's too\"\n\nShe blushed at Zac's name, and I felt her thoughts drift to the previous night. I drew in a breath.\n\n\"That is unexpected,\" I thought.\n\nMy own thoughts raced, and then I was aroused at the thought of her... naked. Same troubling thoughts tumbled through my brain as I stepped closer to her, she was slightly shorter than me. I used that to my advantage, and looked down at her. I pulled her closer to me, my arms at her waist, my breath softly warming her cheeks.\n\n\"Does it surprise you?\" I asked, \"That we all sleep together, have sex together?\"\n\nShe looked at me wide eyed, her thoughts were a tangle. Images of her with Kelly, and then Jeremiah behind her, then over her. Then her on top of Zac. I felt my insides tumble, my core melt as I felt her emotions, her passion, her lust as she flashed through all of that in a moment. She looked at me and her face quieted, and she shook her head.\n\n\"It doesn't,\" she said, \"If I'm honest with myself, I knew it all along.\"\n\nI tilted my head to look at her, drawing closer. My lips feeling magnetically drawn to hers, I couldn't stop myself. I kissed her softly. She stiffened, then relaxed and kissed me back. I groaned at the taste of her, my arousal shooting through the roof, even without Kelly to push me, I was unbuttoning her sweater and Leah was pulling my sweatshirt over my head. \n\nI backed away, my breasts heaving. I looked at her, and drew close, pulling her top up as she lifted her arms. Her hands lifted to my pert breasts, as I reached around and unclipped her bra, drawing the cups forward and placing my hands on hers. Our eyes locked as I leaned back and kissed her. \n\nThen the next thing I knew we were naked, on the bed. A tangle of legs and arms as I kissed her. Our breasts pressed together, her moans feeding mine. I ground my hips against hers, and she groaned, and lifted to press her mound against mine. Her legs lifting up around my waist as I lay over her, my lips couldn't stop kissing her. Her arms around my neck, clinging to me. \n\nWe didn't rush or hurry. We were alone, and took our time. I danced with her, until I could feel her hot juices on my firm thigh. I pushed her back, and kissed down her torso. I made love to her breasts, they were as heavy and perfect as I'd imagined. She hid her lovely body well in her shapeless wardrobe. Now it was mine to feast on. Her nipples responsive, as I licked them, sucked them and lightly nibbled on them. ",
        "By the time I'd kissed my way to her waist she was pleading in hunger. I kissed the top of her furry mound, nuzzling into her fragrant forest, then opened my mouth and lapped at her engorged lips. She bucked, as I licked deeply, and I enjoyed the flood of her essence coat my tongue. A new taste, fresh, young. It excited me, and I worried two fingers along her open lips, finding her opening and pressing in. \n\nShe grabbed my head, and held me to her open core. I fingered her and lapped at her clit, my fingertips dancing under her button, coaxing her to the heights of passion. She moaned then bucked and I felt a flood of her fluids coat my cheeks. I lapped and drank deeply.\n\nThe she rolled me over, her hands gripping my shoulders with a hidden strength. Her body snaked over mine, her head pressing down as her lips found my nipples. My head was pressed into the mattress by her heavy orbs, and I cupped their sides and opened my mouth to feed on her firm nipples. She was on a mission and I moaned as they slipped from my lips. He mouth was on my bare abdomen, then kissing my mound. Then her tongue reached out and lapped at my bright sliver ring. I moaned loudly, my knees splayed open and her mouth sunk into my folds.\n\nI lifted my chin, and licked my lips. Her forest of brown hair hovered over my eyes, and I leaned back. My arms wrapping around her hips, drawing them down, and feasted on her lips. I licked every inch, sucking the dew from her petals as I moaned and encouraged her. One of her fingers found my entrance and I rolled my hips. A second digit joined the first and she slid inside. I groaned wanting more.\n\nHer hands pulled my hips, rotating my pelvis, and then her tongue was rimming my ass. Spreading her slick saliva and my juices with her deft tongue. Her fingers slipped out and swirled around my bud, then pressed back into my pussy. I groaned encouragement, then her thumb pressed into my ass, as she lapped at my clit ring. Two fingers pulsing in my needy cunt. I panted, uncontrollably, in my lustful passion. I screamed out and my hips jerked. A squeal and a giggle were my reward as My cunt spasmed and sprayed into her face. She dove in and covered drinking my spending. \n\nI lapped slowly, my bliss was complete. She slipped to the side, then shifted and curled against me. Her eyes seeking mine and we kissed, softly. Our arms pulling us closer. My eyes fluttered and I closed them.\n\n\"Just a short rest,\" I thought to myself, \"Just rest, then worry.\"\n\nI faded off in a blissful cloud.\n\nPresent: Jeremiah\n\nKelly and I pulled up into our driveway, at the same time Lexi did. We usually didn't come home for lunch, but I knew Alyssa was home for the day. Lexi had just finished her swim, her hair still wet, as she waved at us from her convertible BWM. We both smiled and waved back.\n\n\"What luck,\" I said, \"Meeting a sexy girl like you during the lunch hour.\"\n\nShe stood close to me, and wrapped her arms over my shoulders, her head pressed into my chest. She looked up at me, blinking in the bright sun, then lifted on her toes and kissed me.\n\n\"Something's on your mind?\" I asked, and she nodded.\n\nKelly walked ahead entering the house and looking back at us, \"Looks like you two need a moment,\" she said with a smile, \"I'll see you inside.\"\n\nHer silence was a signal, and ran my finger across the silver collar she always wore, and nodded back. \n\n\"Go to your room, I'll be right up,\" I ordered softly.\n\nShe smiled, and then walked purposefully into the house. I took my time following. I knew what she would be doing. She needed to talk to her Master. To do that properly, she needed to prepare herself. It was a ritual, it was meaningful to the both of us. In our large circle, each of my lovers had a special way to express their commitment to me, and I reciprocated. Each of them were unique and special. \n\nThe house was quiet. I looked for Kelly, and she was in the kitchen. She smiled at me and I kissed her softly. \n\n\"Something is on Lexi's mind,\" I said, \"I might be a bit longer that I expected.\"\n\nKelly smiled and traced her finger over my lip, looking into my eyes. \"I understand, I think I might head back in after I have something to eat. Do you want me to wait?\"\n\n\"I don't have any more appointments today,\" I said, \"Maybe we both stay home, since Alyssa is already here too.\n\n\"She's probably napping,\" Kelly said, \"It's such a pretty day, Leah probably has Naomi at the park. Maybe I'll go lie out in the sun.\"\n\nI kissed her softly, \"Thanks love,\" I said, \"Just call the office and tell them they can leave early.\"\n\n\"Okay, J.\" Kelly said, and turned to open the refrigerator.\n\nI walked up the stairs near Lexi's room, opposite from Alyssa's room, so I wouldn't disturb Alyssa if she was napping. I wanted to concentrate on Lexi. I left my jacket on the sofa by the stairs and loosened my tie. I'd stay dressed, and then see what's on her mind.\n\nLexi's was the first room on this side, I waited by the door, listening. She moved quietly, but I still heard some rustling. Then the movement stilled, and I waited. She would need her time to center herself. \n\nAfter a minute or two, I opened the door. She was sitting just past the door. Naked save for her collar, hands open on her thighs, her thighs spread. The submissive slave, waiting for her Master. I tapped her on the shoulder, and then walked to my chair. She insisted it was mine, and never sat in it. It was a reminder of my presence when she was alone. I sat, and she crawled towards me, then pressed her cheek to my thigh. I lifted her chin, allowing her to look at me.\n\n\"Come,\" I said, softly, \"Come sit in my lap, little one.\"\n\nShe smiled quietly and crawled up, her bottom pressed against my abdomen. Her head rested on one shoulder. She lifted her legs up and placed them on my knees. Her entire body open to my hands. I felt my cock harden as she always made me feel like I was her king. I wrapped my arm around her waist.\n\n\"What troubles your mind, little one,\" I said, \"Tell me your every thought.\"\n\nShe paused, then leaned her head back, her eyes lifted to the sky, then she spoke quietly.\n\n\"This one is troubled with her thoughts, Master,\" she said.\n\nI kissed her softly on the cheek, \"Speak plainly little one,\" I wanted to hear her troubles, not a formal string of third person thoughts.\n\n\"Okay, Master,\" she said, \"I have been thinking about a girl,\" she started, \"I saw her at the high school track, yesterday. She was masturbating in the teacher's parking lot. I thought it was funny, a little sweet. So normal, really. But since then, I can't seem to push her from my thoughts.\"\n\n\"Do you know her?\" I asked.\n\n\"Megan Little,\" Lexi said, so quickly, that it confirmed her thoughts had been consumed by her.\n\n\"Ms. Little,\" I said, the name seeming familiar, \"Blonde? Pretty girl?\"\n\n\"Yes,\" she said, and shifted to look at me, her pert body flexing easily on my lap, \"Do you know her?\"\n\n\"One of Zac's teacher's\" I said, \"History I think, first period. He has a little thing for her.\"\n\nI chuckled remembering how he talked about her, the other day with Alyssa, Kelly and I.\n\nLexi took in a breath, \"You think, she was masturbating because...\" \n\nShe didn't have to say the rest, I knew what she was thinking. I'd given Zac the ring the night before last. He should have had it yesterday. \n\n\"No,\" I said, \"He had the ring, he shouldn't have used his powers. He said yesterday was much better than Monday.\"\n\n\"Well,\" Lexi said, thinking, \"This one thinks it strange that she was masturbating in the teacher's parking lot, two days after your incubus son awakened to his powers. This one thinks Ms. Little has been influenced.\"\n\n\"You might be right,\" I said, chuckling as she slipped back into formal protocol, \"I don't think that explains why your thoughts are heavy with her.\"\n\n\"It does, though, Master,\" she said quietly, and got lost in her thoughts.\n\n\"I'll talk with Zac after school,\" I promised, then lifted my hands to her pert breasts.\n\nShe groaned as I cupped and squeezed them hard, fingers sinking into her flesh.\n\n\"At the moment,\" I continued, I want to bend you over our bed, bind your wrists to the headboard and bang you til you walk funny.\"\n\nShe giggled, the humor making her lighten up. I slapped her ass, and pointed her towards the bedroom. \n\n\"Go.\" I said, and started stripping in her room, while she giggled and headed to the bedroom.\n\nI got about three steps into the bedroom, before I stumbled into Lexi who was standing still eyes on the bed. Two bodies were there, one the familiar silhouette of Alyssa lying on her back.. She was entwined with someone else, then I recognized the face of Leah resting on Alyssa's breast as they slept.\n\n\"Well,\" I said quietly, \"This is different.\"\n\nAlyssa's eyes fluttered, then she turned and saw us, and blushed red. Then I felt her thoughts entwine in mine, then I felt a new presence. Leah blinked and looked up at Alyssa, then over at Lexi and I. Her brows creased as she felt our minds.\n\nLexi and I walked to the bed. Lexi slipped up, and looked at Leah, then kissed her softly. Hugging her tightly, then smiling at her. I leaned and kissed Alyssa, then moved to kiss Leah. My thoughts a mix of wonder and arousal. We hadn't felt a new mind in our mesh, since Jenn.\n\nKelly's door opened, and she smiled as she crossed the bed her bronze flesh beginning to glow. The Carmen's door opened, and she slipped in. I was halfway expecting Maria to be following, but Carmen felt that and shook her head at me. Then the five of us surrounded Leah, and welcomed her to the family. She seemed overwhelmed then settled into our embraces. \n\nThen Lexi turned to me, and kissed me, \"You were going to do something to me, Master?\" she reminded me.\n\nI nodded and tugged at her red hair. We slid to one side of the bed, while the other four females in the bed curled into a mass of flesh. Leah's pale flesh so striking between Carmen and Kelly. Kelly kissed her tenderly, and Carmen was stroking her thighs. Alyssa had leaned over and was suckling at Carmen''s breast.\n\nI pushed Lexi to her knees, and she spread her thighs. I felt her cunt, and it was leaking. I had been rock hard since I walked into the room, and Kelly's aura had made it feel like titanium. I grabbed Lexi's hips, then fucked her. I fucked her until she walked funny. Then we lay back catching our breath, and Leah softly nursed on the head of my cock.\n\nPast: Jenn\n\nThe last week at the lake seemed to fly by, we had nothing to do as far as new work. Each day was something new and fun. We talked and I asked questions about what it would be like at home. Kelly and Alyssa loved to tell me about their home, and Jeremiah's friends. They were excited to get back home, to get back to normal.\n\nSince we were active and having fun boating around the lake, and enjoying each other's bodies. My arousal didn't seem to be as edgy as the previous week. We were alone so I didn't have to behave. Each day brought something different. We had fun, but then it was time to drive back home.\n\nSince the beginning of the week, I'd heard Jeremiah talk about his friends. He mentioned Ron and Robin, two friends he had helped with their relationship. Then he talked to me about his friend Jerry. I remembered Kelly mentioning him. How he had kissed her once, out of the blue, and how good of a kisser he was. Alyssa had known him longer and told me he was really smart, and polite. \n\n\"Does he have a girlfriend?\" I asked.\n\nTruth be told, I was unsure about how well I fit into this fivesome. The past week I had felt more detached. I loved them all, but they were a bit intense. Their connection was so strong, I felt like an outsider. If this Jerry person was as nice as they described it could be interesting.\n\nI didn't let my thoughts go much past that, it felt like a betrayal. I should talk to Jeremiah about my feelings, or Alyssa. She had backed away from her mothering and turned out to be an enjoyable person. She was wicked smart, and was the clear leader of all the other women in our clan. She might know what to do.\n\nCarmen was driving, we were somewhere along the Columbia River. The day was bright, and we were still hours from home, a concept that was still a bit rough in my mind. Jeremiah was co-piloting, and Lexi was at his side, kneeling between the two pilot chairs. She seemed happiest just sitting near him. \n\nAlyssa was curled in the sofa behind Jeremiah and Kelly was resting on the bed in the back. I got up and sat next to Alyssa, and lifted her feet into my lap. She looked up at me, and purred as I started to massage her feet. \n\n\"That feels really good, Jenn,\" she smiled, \"Thank you.\"\n\n\"You're welcome,\" I said, and smiled, \"Actually, I was wondering if I could talk with you.\"\n\n\"Sure,\" she said and dog-eared a page in the book she was reading and focused her bespectacled eyes on mine.\n\n\"I'm nervous?\" I confessed, \"I don't know anything about home, and I worry that I'll be a sixth wheel when we get there you didn't plan the house for six people upstairs.\"\n\n\"Well,\" Alyssa said, \"That is true, but you don't take up too much space,\" she smiled and winked at me, \"We can figure it out, none of us know how this works.\"\n\n\"What if it doesn't?\" I asked, \"What if it gets to be too much. What if I get too needy, or just ...\" I lost my train of thought as my brain seemed to scramble.\n\n\"Jenn,\" Alyssa said, \"No one is forced to be here, we are together because we feel connected. If any of us become disconnected, it might be a sign that something is wrong.\"\n\nShe sat up and crossed her legs, her finger pushing her glasses up her nose, \"Tell me what is bothering you.\"\n\nI struggled to put it into words, and looked around. I saw Kelly sleeping in the back. In a few days she'd be married to Jeremiah. But nothing would change, she would still be one of four other women. Something about that suddenly bothered me.\n\n\"How can Kelly get married, if Jeremiah can't make up his mind?\" I finally asked, then continued, \"I want to be married. I want one husband. I want a man that just loves me.\"\n\n\"So you're monogamous,\" Alyssa said non-judgmentally, \"That's not a horrible thing, Jenn. Much of the world is monogamous. That might be why your feeling on edge. I mean obviously none of us feel monogamy is the only way to live.\" \n\n\"Yeah,\" I said, beginning to understand the difference. \n\nI looked around at the other four women, even sleeping in the back, Kelly seemed happy. Carmen and Lexi were beaming as the chatted idly with Jeremiah. They felt no jealousy, no possessiveness. \n\n\"Maybe,\" I started, \"Maybe I should look for a boyfriend.\"\n\nI looked up at her to see her reaction, and she looked back at me with a poker face. \n\n\"It's your decision, Jenn,\" she said simply, \"It always has been. We don't own you. You can choose.\"\n\nI smiled, comfortable with making a decision for myself, \"We'll still be close, be friends?\"\n\n\"Of course,\" Alyssa said, \"I don't think anyone could share the few weeks we've had without being lifelong friends.\"\n\nI smiled and leaned to hug her, \"Okay, so tell me more about this Jerry guy.\"\n\nShe smiled and curled her legs under her, no longer a counselor, just another girl. She scooted close to me, and started telling me about Jerry. How sweet he was, how he was struggling to find the right type of girl. He was free and available. I felt a flutter in my belly, as we talked about this man I'd never met. The more I heard about him, the more I thought about what it would be like to be in his arms.\n\n*****\n\nAuthor's Note:\n\nThe editing and first read comments from mgenette, again, have encouraged me and improved the story. Any remaining errors are totally my fault.\n\nI'd love to hear your thoughts as I wind down the second part of the story. At this time, I'm writing a final chapter for Part Two. Then I'll start outlining and drafting Part Three. I have some threads planned, and wonder what you, gentle reader, would like to explore and investigate?\n\nI hope you enjoyed this chapter, thanks for reading, voting and commenting!"
    ],
    "authorname": "HankDolworth",
    "tags": [
        "supernatural",
        "seduction",
        "male dominance",
        "female submission",
        "rope bondage"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-designer-pt-02-ch-22"
}