{
    "title": "Crystal Clear Ch. 09",
    "pages": [
        "This story is part of a continuation of my Road Trip series (see the end of 'Road Trip \u2013 California' for a list of the chapters of that series, in order to be read). You need not read that series to enjoy this series. Although real places and celebrity names are used for realism, this story is fiction. Please 'read, enjoy, vote, and comment.'\n\nThis chapter will be dramatically enhanced for you if you read my story \"Road Trip \u2013 Ohio.\" This story can be found at the author's web page by clicking on the name Romantic1 above.  That said, this is a stand alone story.\n\nSynopsis of This Story Up to This Point: After a cross-country road trip laced with grief, love, incest, and sex, Jim now lives with Crystal Lee and her sister Ellen in Tennessee. Jim has joined Crystal as a top star in country music, a major change in life for Jim. Crystal posed for Playboy in a sex-filled weekend photo shoot. After a busy six months, a New Years orgy on a Caribbean isle, and three busy winter months, Crystal and Jim went to different parts of the world to make two different movies. Just before leaving Jim, Ellen, and Nadia, their Russian housekeeper, had a series of sexual romps. When on the west coast for his movie, Jim reconnected with a love interest from his road trip \u2013 Tina Devoe, participated in an orgy with his leading lady Jill Danes, and found a new and additional love interest in Claire. The film crew moved to Nicaragua to film on location, and Jim's leading lady was kidnapped. Jim did a bold and risky rescue, using his skills as a Green Beret from decades earlier. Shooting finished on Jim's movie. He returned to Nashville with Ellen and Claire, they had a passionate week and included Nadia in their sex-filled romp. Crystal arrived home from Europe and joined Jim at well-attended news conference at the airport shortly after she disembarked from her plane. Things went well up until the last question to Jim by the press. \n\n\n\n<center>Crystal Clear Ch 09\n\nRecovery from an awkward moment. Crystal at play</center>\n\n\n\nI thought the press conference at Nashville Airport that Crystal, Terry, and I were conducting had gone pretty well, at least until a young brunette woman I didn't recognize waved her hand near the middle of the pack of reporters. Terry called on her, \"Edith, what's your question?\"\n\nThe pretty woman stood and turned to me, almost with a bow. She spoke slowly, commanding by her quiet voice others in the room to be silent. Her voice was not confrontational and spoke only out of curiosity in a polite way, \"Mr. Mellon ... err, this is delicate ... I don't know how to put this ... but, well, do you have a child ... by a woman who lives in Greenville, Ohio?\"\n\nI practically choked out loud. I did indeed have a child in Greenville, Ohio. Crystal knew too, but other than the baby's 'parents' no one else should have figured out the lineage of that child. Crystal squeezed my hand to show her support, and continued to hold on to me; she instinctively knew that I needed her support on this one.\n\nA long silence ensued, broken only by the fusillade of camera shutters that captured the moment and my apparently shocked expression. \n\nI thought of my dear friend George and his beautiful and loving wife Summer in Ohio \u2013 the wife he had me impregnate with my seed because he'd had an injury on a Special Forces mission we were on that rendered him infertile. He wanted me, his best friend, to do that for him. Summer wanted it too, and she and I fell in love in the time we spent together, joining, and baby making. I thought how they lived such simple, serene, and quiet lives in that small town, and somehow, depending on what I said in the next minute their entire life could come completely unraveled.\n\nI also thought about what a lousy liar I am. I would never make it as an unfaithful husband, because everything about me is written on my face. Moreover, I can't keep a secret in response to a direct question; I amazed myself that I'd never exposed the network of sexual relationships I shared with Crystal, Ellen, Claire, Nadia, and many more. I expected my answer to this woman's awkward question was already written on my face; did I really need to say anything.\n\nWhether I remained silent or spoke I was cooked either way. I decided to speak.\n\n\"Edith, and members of the media, we each have private lives that I hope you might respect. Sometimes, the extent of that part of our lives involve situations and people that are not in the limelight, and that ... that could bring harm to others if they were widely publicized or criticized or analyzed. You see yourselves as trying to bring truth to the public \u2013 news, but do you also see that sometimes what you do brings harm where it shouldn't occur. This is one of those situations. A simple answer wouldn't even begin to explain the complexity of the situation that you hint at in your question. I don't want to duck your question ... but I also don't want to answer it, because some people I love that aren't in this room are involved in the answer, and I wouldn't presume to reply to a question like that without them.\"\n\nThe room had hung on every word I said with an eerie silence ... and then, after I made it clear that was all I planned to say, the room erupted into a hundred people shouting follow-up questions and hypotheticals at me from all directions. \"What if ...? Did you? Who was ...? Where's Greenville? How long ago? Could you ...?\" \n\nI turned and nodded to Terry. He understood; the press conference was over. We stood, and as we did the half-dozen security men in black suits surrounded us and led us off to a door on the side of the room \u2013 an exit door that would take us away from the riot that resulted from the question and my response. Reporters were falling all over themselves trying to get to me \u2013 microphones and pocket recorders in hand \u2013 questions shouted over and over. My name shouted out a thousand times to try to get my attention to their specific question. The reporters all surged towards the door we exited. \n\nTwo of the security men, the largest two of the lot \u2013 a pair of mean looking men in black suits with black shirts and black ties, black sunglasses, plus large bulged in their pockets where they carried obvious weapons - stayed behind in the room to secure the door and keep anyone from following us. The remaining four security men hustled us down several corridors almost at a run. There was no conversation other than instructions on how to follow them to curb side.\n\nSuddenly, we exited a door into the area where the luggage carousels were. We crossed the nearly empty concourse, exited, and there was the white limousine. No one was right behind us, so I made sure Crystal saw the license plates with her name. She gave me a big grin.\n\nThe six of us piled into the car, and were whisked away to the airport exit.\n\n<center>* * * * *</center>\n\nInside the limo, Crystal burst out laughing.\n\n\"What's so funny?\" I asked glumly. \n\n\"The look on your face when that woman asked the question about your baby. It was priceless. You may as well have screamed 'YES.'\"\n\n\"Gee, thanks. I'm still trying to figure out how she knew enough to ask that question. I'm sure George and Summer wouldn't mention it to anyone, and neither you nor I did.\" I looked at Ellen and Claire.\n\nEllen said, \"I didn't even know until her question. From the look on your face, it was pretty obvious what the answer is.\"\n\nClaire shrugged; she wouldn't have known unless I talked in my sleep.\n\nI brooded about the situation for a few moments, and noticed the limousine had headed downtown to the area near Terry's office and the recording studio.\n\nI asked, \"Hey, where are we going?\"\n\nEllen smirked and said, \"Well, we took a vote and decided that Crystal and you should be alone tonight to reacquaint yourselves with each other, so Terry, Claire, Nadia, and I are going to a movie downtown tonight and we're sleeping over at my condo. You'll have the house all to yourself.\"\n\nNadia, Claire, and Terry all nodded confirmation to the plan. I just shrugged but with a slight smile of happiness.\n\nA few minutes later we stopped in front of Ellen's condominium, and the quartet got out amid well wishes, and taunts to 'Have fun!' \n\nThe limo headed back onto the Interstate to head to Crystal's home on the edge between suburbia and rural Tennessee. She snuggled into my arms, but my mind continued to stew about the baby question.\n\nI thought a moment and said, \"I'd better call George or Summer.\"\n\nI messed with my cell phone for a minute and then heard the ringing at George and Summer's home. \"Hello, this is Summer.\"\n\n\"Summer, this is Jim.\"\n\n\"Oh, ... Wow. Are you coming to see us ... to see James Mellon Ellis?\" I knew they'd named the baby after me, but as of yet all I'd seen were a few photos of a normal looking baby and his smiling parents. I'd been touched by their gesture to name him after me. I'd even tried to talk them out of it because I didn't have an ego need in that way.\n\n\"Not right away ... at least I don't think so. Look, I just got out of a press conference and something happened that you and George should know about.\"\n\nI could hear Summer's rapid uptake of breath at the portent of bad news.\n\nI went on, \"Some woman named Edith, I'll find out her last name sometime, asked me whether I had a child by a woman in Greenville, Ohio.\"\n\n\"Oh, my God. What did you say?\"\n\n\"I'm a lousy liar. I told them the question was out of line because it would hurt people, but the paparazzi don't care. They're out for blood. Anyway, I may as well have yelled 'Yes' in the room, although I tried to leave my response vague and unspecific.\"\n\n\"Shit,\" Summer mumbled, and this woman was much too nice to use vocabulary such as that.\n\n\"I'm in the car with Crystal who was also at the press conference. Frankly, we don't know where to take this. I certainly want to protect you, James, and George somehow, but I don't know how.\"\n\n\"Look, let me get to George. This is his poker night. I'll be back in touch.\"\n\n\"OK. You might want to button up the house, even go elsewhere in case the news people figure out where you live.\" There was an awkward pause, and I added, \"Summer, I love you.\"\n\n\"Oh, Jim, I love you \u2013 hardly an hour goes by that I don't think of you. Please come and see me \u2013 see us. Bring Crystal, but please visit \u2013 you're all welcome. We have space, even with the baby taking up a room.\"\n\n\"Talk to you soon.\" We rang off.\n\nCrystal turned me to her, \"Jim, you can weather through this. I'm here to help anyway I can; maybe because I didn't react it'll help diffuse the situation.\" She kissed the end of my nose in a tender and supportive gesture.\n\n<center>* * * * *</center>\n\nThe proverbial shit hit the fan. Crystal's presence at the press conference and her visible and loving grip on my hand during the press conference did not diffuse the situation. Instead, I again found my name splashed across the front page of practically all major newspapers; it was a slow news day. What amused me and took the edge off 'being discovered' was that all the papers included a photo of a generic baby \u2013 and they were all different. That said, the headlines screamed out.\n\n<Center>Daddy?\n\nMellon a Dad\n\nJim Left Package in Ohio\n\nWild Oats by Mellon?\n\nDid Star Abandon Baby?\n\nWho's the Kid?\n\nMellon Spreads Seed</Center>\n\nI gave some of the headline writers an 'A' for creativity and for capturing the readers attention in only a few words.\n\nWhen I read the articles, I discovered that all of them knew little more than what had happened at the press conference at the airport. A few made some idle speculations, and of those, one or two turned out to be pretty accurate up to a point.\n\nThis whole experience had made me reminisce about the week I spent with George and Summer.\n\nGreenville, Ohio: Over A Year Earlier. My best friend and later my Army buddy George Ellis brought my mind to a standstill: \"Jim, Summer and I would like you to make her pregnant.\" They'd tried for several years, but George was shooting blanks, probably resulting from shrapnel from a mine he stepped on \u2013 the mine also blew away his lower left leg and foot. \n\nAfter much discussion, I made love to Summer. There were late-summer thunderstorms those nights, the windows were open, and we'd hear the wind gusts and thunder as we loved. Amid the sweat, the mix of our fluids, and the millions of kisses we shared, something special happened: Summer and I fell in love as we made a baby. She didn't fall out of love with her husband, just in love with me. \n\nWe spent only a few days together, but Summer was at her fertile peak. George joined us for several of our nighttime sessions to fill his wife with my sperm. Those times were especially erotic, and I carried warm and erotic memories of our threesomes.  \n\nNine months to the day later, Summer gave birth to a healthy baby boy. We had talked almost weekly as I'd continued on my Road Trip, so I knew the pregnancy 'had taken' and had progressed normally. My swimmers had done their job. George and Summer both asked me about giving the baby my name. I felt honored and humbled. I also would be the godfather. \n\n\n\nThe paparazzi had taken to camping out at the end of our Nashville driveway. For a day, I also heard frequent over flights by helicopters, enough to keep me inside except for my morning runs.\n\nCrystal came and joined me one morning after I'd showered. She snuggled up against me as I read a couple of the morning papers: \"Can I see the photo of Summer and the baby again?\" She put my iPad into my lap.\n\nI thumbed through the device until I found the last photo George and Summer had sent me. Summer stood in front of their modest house holding the one-year old in her arms. Summer was beautiful: thirty three, ash blond, a trim figure even after her pregnancy, breasts that turned heads, and a personality that made everyone want to be her friend. In the photo, she smiled at the camera; I could see the love in her eyes.\n\nMy offspring also had a giggly smile. He had my brown eyes and my sandy brown hair color. He was cute, and I felt guilty for not having gone to see him. Yes, he was mine, but I didn't want to interfere with George and Summer's life, or their marriage. I worried about how Summer felt about me when I left, and I wasn't sure she knew how to love two people simultaneously. Now, having gotten to know her after some long telephone calls, I knew she'd always be devoted to George, yet she had a passionate and loving spot in her heart for me.\n\nCrystal studied her photograph. She tapped on the face of the iPad, inadvertently making it do crazy things. \"You should go and see her \u2013 see them.\" As an afterthought she said, \"And, take me along; I'd love to see 'Little Jim' and meet George and Summer. You've made them seem so real and approachable as you've talked about them.\"\n\nI thought a moment, \"We could take the motorcycle up there. It'd take us less than a day \u2013 maybe eight to ten hours of travel.\"\n\n\"Let's do it. We have another week after this one before we have any serious commitments. Let's go tomorrow. Call them; see whether they're up for two visitors.\"\n\n<center>* * * * *</center>\n\nThursday, I drove the motorcycle down to the local Harley dealer. It didn't need servicing, but I knew that if Crystal and I left the house we'd be followed by the paparazzi, and my trip down there was no exception. The pressmen who followed me in a caravan of cars were disappointed when I walked over and told them I was just dropping the bike off for routine maintenance. I refused to respond to any of their questions about the mysterious baby I might have.\n\nActually, I'd arranged for the shop to hold the well-maintained bike for me overnight, so Crystal and I could slip away the next morning without a gaggle of reporters chasing us. Crystal picked me up and drove us back home, followed closely by the reporters. She waved tauntingly at the reporters as I got in the car.\n\nFriday morning, Nadia drove out the gate in her car, aged and rusting Chevrolet. Crystal hid under a blanket on the back floor, and I'd made myself comfortable in the darkness of the car's trunk along with our modest luggage for the trip. By arrangement, Nadia went to the local supermarket, a trip the reporters judged unworthy of pursuing. \n\nWhen the reporters had left after following her, she knocked on the trunk of the car before opening it. She gave us the all clear signal, we got out of the car and carried our luggage into the woods and over to the next street and the Harley dealer. We packed up the 1988 Harley Davidson Heritage Softail behind the motorcycle shop, donned our helmets, and were soon underway. Many checks of the rearview mirror indicated that we had been successful in our escape ruse.\n\nWhen we stopped for coffee, I found that George had called my cellphone. I returned his call. I got George on the first ring. \"Jim, I'm glad you called back. Don't go to Greenville. We're pretty sure a couple of reporters have figured out who had your baby and where we live. Strange people were hanging around outside our house, and they were talking wildly on their cellphones as they kept an eye on us. I think one of them followed me to work.\"\n\nI muttered several expletives.\n\nHe went on, \"Summer's parents have a summer home on Center Lake about five miles southeast of Jackson, Michigan. They're on a trip out west, so we decided to go up there with the baby. We've snuck away and are headed there right now. We have a rental car \u2013 Summer's is parked at her library job, and mine is parked where it normally is behind the store. We both got people to cover for us for a few days.\"\n\nI told him we'd change course, and after checking the GPS, I told him to hold dinner for us and we'd be there around that time of day. The weather would be pleasant the entire journey: warm and sunny.\n\nCrystal and I mounted up, we got back on Interstate 65, and I cranked up our speed to keep up with the fast-moving traffic. We stopped just north of Indianapolis for lunch and another break, and then pushed on through Fort Wayne, across the border into Michigan, up to Interstate 94, and east to Jackson. After that, I followed secondary roads to the vacation home on Center Lake.\n\nCrystal and I were glad to dismount from the bike in the driveway of the modern all-weather ranch-style home on the edge of the lake. We both stood rubbing our butts; nine hours straight on a motorcycle is not conducive to good circulation in one's ass. My back ached too from holding the constant posture for driving.\n\nThe front door of the house burst open, and Summer came out at a run. \"Oh, my God. I am so glad you're here.\" She hurled herself into my arms and proceeded to plaster my face and lips with hard, passionate kisses. Finally, she drove her tongue into my mouth and I sucked on it for a while, and that seemed to make her happy. \n\nShe eventually pulled away, her urge to speak greater than her urge to make out; \"I have missed you so much. Emails and Skype aren't the same \u2013 not even close.\" She hugged me to her body, and then she spied Crystal who had been walking up and down the driveway trying to restore some circulation to her cute ass.\n\n\"Crystal!\" Summer said with glee. \"You are so welcome. I am so glad you came; this is an honor. I ... well, I am such a fan of your music. I love your voice ... and because you love Jim I know I love you.\" She opened her arms and the two women politely hugged and kissed.\n\nGeorge came out of the house carrying a little bundle of joy. James Mellon Ellis had just turned one. He had all the characteristics of a typical toddler, particularly wanting to get down and walk on his own terms. Summer looked unusually proud, \"He started walking a month early; he's pretty proficient at it now.\" ",
        "James toddled over to his mother as George and I did a manly hug. I introduced him to Crystal, and they too hugged in greeting.\n\nGeorge said, \"Jim, I think you should put your motorcycle in the garage. There are no windows, and with the door shut no one will know you're here. I've become paranoid about the media the past two days since we spotted them outside the house.\"\n\nI said, \"Yeah, I'm really sorry about this. We never figured what we'd do if someone caught on to what we did. With my status with the media, particularly after having just hit the front pages with the rescue of Jill Danes, I didn't expect you'd become collateral damage.\"\n\n\"No, don't worry about it. It's part of the new landscape we created. We should talk about what we plan to do. We can't hide out up here the rest of our lives, plus I know from your website that you've got a string of concerts with Crystal around the States before Christmas and Europe coming up in the New Year.\"\n\nGeorge opened the garage door, and I rode the bike in and parked next to his rental car. He shut the door, and we all went inside.\n\nJust inside the door, Summer swept up James, kissed him firmly, and passed him to Crystal. The two played briefly as she held him on one hip. She looked over at me and said, \"Oh, Jim, I want one. He's so cute! Were you this cute when you were one?\" The baby chortled as Crystal tickled him with one finger to his exposed belly.\n\nSummer said, \"He's about to go down for the night. He'll wake up around midnight, take a bottle, and then go right back to sleep after a diaper change.\"\n\nQuick as a flash Crystal said, \"Can I help with him somehow. I haven't been near a baby in a long time, and I just love them to pieces.\"\n\nSummer said, \"Of course. He's been pretty easy to care for, plus George is a hands-on daddy.\"\n\nCrystal came over to where I stood and presented me with the baby; for a brief second, the baby and I looked eye to eye. He broke into a smile that ate up his whole face. I pulled him into my arms and for the first time hugged my son. Tears formed in my eyes at the moment.\n\nThe four adults and James went to the back patio of the house, a screened in area that overlooked the lake. I sat with James on the floor as he played with some toys; I felt captivated by everything the 'mini-me' did. I noticed Crystal couldn't take her eyes off the tot either.\n\nWe had some wine and hors d'oeuvres. Summer said she'd serve dinner after James went to bed. The wine slid down easily; I'd become dehydrated on the road, so the liquid went right to my head. Crystal too loosened up, and soon the four of us were a happy foursome, joking and talking as though we'd been inseparable all our lives.\n\nAround eight o'clock, Crystal and Summer went and put James to bed. When they came back to the patio, they were holding hands as good friends might do. Summer served dinner, and we lingered around the table for a long time talking mostly about our lives, the rescue of Jill Danes, Crystal's movie with heart throb George Rinard, and the music we were working on. George knew how much my life had changed since Karen's death; he'd been at my wedding eight years earlier and knew me long before that.\n\nI thought it interesting in hindsight, that none of us addressed the issue that had brought us together in Michigan: what we'd do about the media's quest for knowledge about me and my baby.\n\n<center>* * * * *</center>\n\nAround ten o'clock, after the dishes had been cared for, we briefly sat in the living room. Summer studied me closely, and even caught Crystal's eyes several times. I felt there was some unknown female communications going on, and a few minutes later my intuition proved accurate.\n\nSummer and Crystal rose simultaneously and changed places. Summer cuddled in under my arm next to me, bringing as much of her body into contact with mine as she could. Crystal went and did the same with George who looked surprised and exceptionally pleased.\n\nCrystal leaned up and kissed George, pulling his face down to hers. Summer watched and smiled in his happiness. \n\nSummer kissed me, again driving our tongues together in erotic French kisses that made me start to harden. She whispered to me, \"I want you to be with me tonight ... to make love to me. I remain in love with you, and ... well, I want you.\"\n\nI whispered back, \"And George?\"\n\nSummer gestured across the room. Crystal had taken one of George's hands and thrusted it up under the cotton top she wore. I could see him cupping one of her breasts, and I knew she hadn't worn a bra that day. \n\nSummer said, \"I think the two of them will be fine ... if that's OK with you. I talked to Crystal while we fixed dinner.\"\n\nI nodded.\n\nSummer stood and pulled me to my feet, we kissed again, and then the two of us walked down a short corridor to the master bedroom. I slowly removed Summer's top, revealing her luscious breasts. I leaned forward and for a few minutes sucked and bit at her nipples and areolas, trying to deliver as much stimulation to her as I could.\n\nSummer said in a hoarse voice, \"Every time you suck my tit into your mouth my pussy clenches. I think I want you inside me.\"\n\nShe pushed my unbuttoned shirt from my shoulders, and then licked and bit at my nipples. I dropped to my knees and undid her belt and pushed her jeans down her legs, leaving the small lacy thong she had in place. \n\nSummer kicked off the jeans, flowed back into my arms, and started to grind her pussy against my leg and groin. This was a woman in heat. Next I knew, she removed my jeans and my briefs. I stood before her in my nakedness.\n\nSummer leaned forward and inhaled my shaft, drawing the half-hard cock into her mouth. To my amazement, I found her unusually adept at fellatio, a skill I didn't recall she had in her kit when I'd been with her two years earlier. I praised her, \"You do that so well.\"\n\nShe pulled off me, allowing a long strand of her spit and my pre-cum to stretch between her mouth and the tip of my cock. \"You inspired me. I knew we'd be together again some day, and I wanted to be perfect for you. I studied. I even went online and watched porn. So far, George has been the big beneficiary, but I wanted to be ready for you too.\"\n\n\"Summer, you were perfect \u2013 are perfect. You don't have to do crazy things like that. Look, I promise I'll be around in your life \u2013 in James' life more. You won't have to sublimate your fantasies. I love you.\"\n\nShe stated to go back to suck on me, but I pulled her to the bed with a simple expression: \"Sixty-nine.\" \n\nI lay on my back, and Summer straddled my chest facing away from me. As she started to suck on me again, I could eat her pussy. I heard her moan, \"Oh, fuck that feels good. George doesn't like to go down on me.\"\n\n\"You taste like a delectable dessert, sweet with the musky aroma of a fabulous red wine and rose petals. I love it. I love you.\"\n\nSummer deep throated me, and I nearly came.\n\n\"Summer, turnaround and mount me \u2013 or I can come over you. What do you prefer?\"\n\nIn two seconds, she spun around, and made an erotic show of bringing my very erect cock to the entrance to her vagina. She rubbed me back and forth along her slit, a teasing smile on her face as we locked eyes. Soon though, she sank her beautiful body down on me and groaned in the ultimate satisfaction of coupling with a lover. \n\nAt full depth, she bent down and we kissed with a white hot heat that would melt steel. I'm sure we both saw stars. With lascivious intent, she dragged the erect nipples of both breasts across and around my chest until I pulled her down to me again for another volcanic kiss.\n\n\"Do your Tantric sex with me. I have never felt so close to anyone in my life as I did \u2013 as I do \u2013 to you during and after we made love. Some nights that's all I can think of. I masturbate thinking of us coupled together, you constantly seesawing in and out of my ... body ... as we make love.\"\n\n\"What were you going to say instead of body? Why did you change your mind?\"\n\nSummer focused her eyes on me and smiled in lust and love, \"I was going to say 'cunt,' but I thought it might shock you.\"\n\n\"It would not. Crystal and I \u2013 all my lovers \u2013 we talk dirty to each other. We use crude words like cunt and cum and jizz and quim and slut and whore. The words excite and stimulate, they reach part of the cortex of your mind and bring out the lust in each other.\"\n\nSummer dragged her breasts across my chest again, \"Then talk to your slut. I want to be your cumslut \u2013 to be the bucket in which you dump your cum over and over again. I not only want you to make love to me, but also to fuck me \u2013 to fuck my brains out ... to keep driving you long hard cock deep into me on every stroke \u2013 into my fucking cunt until neither one of us can stand it any longer.\"\n\n\"Now that's some of the best dirty talk I've ever heard.\" I paused and added, \"Now, come here, and kiss me \u2013 and let's fuck.\"\n\nWe both sat. Summer sat in my lap impaled on my prick. We held each other, yet could touch almost every inch of the other's skin. As we kissed and tongued each other, I inserted a finger along side my cock in Summer's pussy; my thumb landed squarely on her swollen clitoris and I started stroked, both in and out with my own strokes and in circles with my thumb. I could only do that for a minute or so because Summer started to writhe so violently that I couldn't hold her.\n\n\"Oooooooooh, Jimmmmmm. That'ssssss soooooo stim \u2013 u \u2013 lat \u2013 ing. Oh, fuck. I'm cuming.\"\n\nSummer not only came, but also got up on the step as I called it \u2013 a place where a woman enters Orgasmland. In Orgasmland, the least little movement near your sex gives you an orgasm of various intensities. \n\nSummer started to pop off a series of long and short climaxes, her body squirming in response, her skin sweaty and glowing, her voice sexy and hoarse, and her lust palpable in every stroke we made with one another.\n\nSummer muttered, \"This is criminal. You should be arrested ... this has got to be illegal. This is too much pleasure in one short period of time.\" She'd slip into another climax and grind her pussy down on my hard cock, trying to get me as deep into her as she could. \n\nShe said to me, \"Do you want to make your slut pregnant again? I could repeat everything we did twenty-one months ago right now. I could capture all your sperm \u2013 all your little swimmers \u2013 and hold them up against my cervix. I could deposit an egg in the middle of all that, and then move the egg to my uterus \u2013 the uterus that you keep trying to push your cock into.\"\n\n\"Do it,\" I said. \"Have another. If that's what you really want \u2013 what you and George want. Here, have my first shot of sperm.\"\n\nWith that I let fly all the pent up jism I'd carried for her since we last fucked and made love and copulated. We both felt wave after wave of pleasure wash through us.\n\nSummer moaned so loudly, I was sure the neighbors could hear us. We both slipped into afterglows as we sat face to face in a classic Tantric position. Our hips were stilled, but only for a minute or two, and then we started to move again, little strokes at first that grew to medium length strokes that became long deliberate thrusts where my dick plunged deep into Summer's already cum filled cunt.\n\nShe said, \"I'm so squishy, but I know you're pushing your cum deeper into me \u2013 right where my egg is waiting. Maybe now \u2013 this second \u2013 one of your sperm has bored into my egg, and a new life has begun. Fuck me ... fuck me again and again. Give me more. Cum in me in buckets.\"\n\nWe went another forty minutes before I exploded again, but Summer kept cresting and swearing and praying for more cock. I was her wanton lover. I was her impregnator. Some minutes we made love; and other times we fucked. We were insatiable and couldn't get enough of each other. \n\nWe changed positions many times, ending with Summer beneath me, her legs over my shoulders, and my cock driving into her sodden pussy. I savored my own sloppy seconds. When we came this time, Summer screamed in delight and passion. I jetted another gallon of cum deep into her, my shaft at maximum depth, and our pubic bones pushed hard together.\n\n\"Oh God, you are a divine lover. I thank every star that you love me and gave me a piece of you.\" She pulled me down for a deep kiss.\n\nI rolled off her and onto the bed next to her. \n\nIn the doorway, a very naked Crystal stood with a very naked George behind her. She had that freshly fucked look as she waggled her backside against his tumescent cock. When she turned to kiss him, I saw the glint of light from the cum running down her legs. They too had enjoyed the rest of the evening.\n\nSummer held her arms open to her husband, and the pair moved into the room \u2013 Crystal coming to me and George to Summer. \n\nSummer announced calmly, \"I'm pregnant again. We made a baby. I hope that's all right with you. We didn't plan it, but I think it's a done deal now.\"\n\nGeorge smiled at her and me, \"Good. I can't think of a better way to celebrate the reunion of the two of you. We wanted two children, and now we'll have them.\"\n\nI looked at Crystal, and she kissed me deeply. \"You guys are hot,\" She said. \"You and I have got to back to fucking like that. I actually had a small orgasm watching Summer and you. She is a highly motivated lover.\"\n\nI kissed her back, \"And, I love you. I hope you know that.\"\n\n\"I do. I have never considered love to be a zero sum game. The more love you give \u2013 sex, love, lust, making love, or any of those terms \u2013 the more there is to go around. You've taught me that love involves mind, body, and spirit. Everyone knows body to body, but it's the mind to mind, and the spirit to spirit linkages most people miss. When I watched you making love with Summer, I could see your auras flashing bright and happy colors. I know your minds were engaged; I've always known you had a special place in your heart and mind for Summer, and I guessed she did for you. Now, I have no doubt you two connected deeply on every level.\"\n\nGeorge looked surprised at Crystal's insightful comment. Finally, he said, \"Crystal you just taught me more about my marriage and making love in that minute you spoke than all the things I've heard or read put together. You've just blown me away.\"\n\nCrystal asked, \"Why aren't you jealous of Jim and Summer making love in your bed \u2013 this bed?\"\n\nGeorge said, \"I ... I'm not sure. I love Summer so much. I knew this was what she'd wanted since the first time they made love. They connected on some level I didn't understand, and I wanted her to be happy again.\"\n\nCrystal said, \"That's called compersion, where you bask in the pleasure of someone you love and you feel good too. The alternative is rage and jealousy, and those are learned responses to particular situations. You say to yourself, 'If my mate sleeps with someone else, I'm supposed to get outrageously angry and maybe even divorce them.' What strife over an act of love \u2013 where's the love, the tolerance, and forgiveness in that approach. Isn't it better to say to yourself, 'I'm so happy my mate found pleasure, happiness, and love with someone else; I hope she can multiply all that and pass it along to me and many others'?\"\n\nSummer said, \"And George, you know I love you dearly and I always will. I love Jim too, and our son. That doesn't take anything from you, instead I bring myself back to you with more wisdom and more loving feelings to share than ever before.\"\n\nGeorge kissed Summer; \"Tonight, I am doubly blessed by Crystal and Summer. Thank you both for all that you are, all that you do, and all that you hope for us.\"\n\n<center>* * * * *</center>\n\nAfter making love with Summer again in the morning, the two of us threw on a minimum of clothes and walked into the living room-kitchen area. Crystal and George were there, also with that 'Great Morning Fuck' look on their faces. We all laughed at each other we were so transparent. I went and kissed Crystal, fondling her breasts through the unbuttoned part of a work shirt of George's she wore.  Summer kissed George, the t-shirt she wore riding up over her shapely butt; she wore a thong, as she put it, 'to hold as much of Jim's man juice inside me as I can.'\n\nLittle James sat in a high chair with a bowl of Cheerios in it. Somehow, he'd turned half of them to mush and had them spread over most of his face. He looked supremely happy.\n\nThe rest of us had a light breakfast, cleaned up Little Jim, and then went out on the patio to sit and talk. James sat on the floor with several toys, favoring those that made the most noise.\n\nI sat down next to my son and started the ball rolling on the discussion we avoided the night before; \"OK, what do we do about the media, the baby, you guys, and us \u2013 particularly, now that Summer is pregnant again.\" I stated the last point as a positive statement, although we were far from any verification of the growing embryo.\n\nGeorge and Crystal didn't even look surprised. He got a pad of paper; \"Let's write down options.\"\n\nCrystal said, \"First, we do nothing. The situation is what it is. We never deny or confirm any of it. James Mellon grows up happy and content with you after a little bit of publicity now that he'll never remember, and the whole thing will blow over when Lindsay or Brittany do something, or JLo get married again.\"\n\nAs George wrote, I said, \"Or, the four of us hold a press conference. We bring James, and we tell them exactly what transpired, how we think \u2013 the stuff we were talking about last night, and let the chips fall where they may. The truth is hard to shade; we'd rob the media of the ability to speculate. Each of us tells what they think about the situation, we even tell them you might be pregnant again, and then it becomes 'So what?' And, as Crystal said, in a few weeks it'll all be forgotten as some real scandal arises.\"\n\nSummer summarized thus far, \"Do nothing or lay it all out there. Is there a middle ground?\" She put her long legs across mine. I started to stroke her legs right up to her thong. She shuddered across her whole body, and gave me a look of longing.\n\nCrystal chuckled at her, \"Lady, you are in heat for this guy. If you want to go jump his bones, please go ahead. I might like to watch, however.\" She snickered at her lascivious suggestion. \n\nSummer said something that shocked us all, \"You can watch, but only if you sit on my face so I can eat your pussy. Jim said you taste wonderful, and I want to know what he tastes \u2013 to love you as much as he does. I want to be one with him and one with you and one with George; we all merge into one loving mass.\" She smiled sheepishly.\n\nI said to her as a question, \"Bedroom, now?\"\n\nShe shook her head, \"No, later, otherwise I'll get sore. I meant what I said though.\"\n\nGeorge said, \"Ahem, back to options.\"\n\nWe couldn't figure out any graceful way to explain how my sperm got into Summer's vagina to produce either one or two babies. We made love, period. \n\nWe thought of different ways to talk about why we had made love: desperation to have a baby and to be a father \u2013 but there was more than that. We considered a request from a friend I would do anything for invoking our high school and Special Forces brotherhood \u2013 but then why would Summer have been so willing to honor her husband's crazy request. Were we that loose morally that her husband just let me fall in bed with his wife and fuck her until she got pregnant? Was the baby the main goal; is that sufficient to generate public sympathy for our unusual approach?\n\nCrystal said, \"What about the whole 'open relationship' approach? We're not the only people in the country to share partners, or love multiple people. Polyamory is a legitimate living style for at least a couple of million people.\"\n\nI pondered that, \"I can think of several Hollywood types that have acknowledged open marriages or open relationships: Will and Jada Smith, Amelia Earhart, and Robert Heinlein, to name a few. Could we hold them up as examples?\"",
        "Summer said, \"Probably not, since to our knowledge none of them did the mix of relationships to have a baby.\"\n\nGeorge said, \"Do we just throw ourselves on the doorstep of public opinion and accept what happens?\"\n\nI ventured, \"It won't all be against us. It'll be like Crystal's Playboy spread, part of the country was vehemently condemning and the rest loved it; I suppose there was the silent majority that didn't care one way or the other. Here, most won't care, a few will condemn like the radical right, and others may spring to our defense just to take the other side. It'll raise a whole bunch of social issues about adoption programs, cost, and bureaucracy, and the rights of polyamorous and legitimate parents.\"\n\nSummer said, \"You know when we filed the birth certificate, we couldn't lie; we had to say that you were the father.\" She looked at me hoping I wouldn't be mad.\n\nI thought for a moment. \"What you did was fine. To the best of my knowledge, there's no reason I can't let the mother raise the child with anyone she sees fit to be with. You live fine lives, and except for this situation are pillars of your community. Plus, you are a wounded vet who gave up part of a leg for your country.\"\n\nCrystal said, \"Wait ... wait! Is that how this all got in the news. Someone saw that birth record and figured out what had happened?\"\n\n\n\nI slapped my forehead, and so did George and Summer. Several \"Oh shits\" could be heard around the room.\n\nI added to what Crystal had figured out, \"Someone chanced on the certificate, and knew about me and my new career in music \u2013 maybe even about my connection with you two. Who might that have been?\"\n\nWe all pondered that situation.\n\nCrystal said, \"I'm going to talk to Terry. He seemed to know the woman who asked the question. We never heard anything further about her.\"\n\n<center>* * * * *</center>\n\nCrystal came onto the back porch from the back yard. She'd walked down to the edge of the lake, almost nude, with only a revealing t-shirt that kept riding up over her shapely butt. About halfway back to us she'd ended her cell phone call.\n\n\"I talked to Terry. He says the woman's name is Edie Gerst \u2013 Edith, and she works for the ... are you ready for this ... the Dayton Daily News.  He'd only met her the day before. He said she approached him outside his office and asked to be especially called upon in that press conference. She told him she had a special question to ask but didn't hint at its content. He's kicking himself around his office for not pursuing the matter further. He said he'd brushed her off with a promise to call on her when she raised her hand.\"\n\nThe three of us gasped. This had to be the link. Greenville is only forty miles northwest of Dayton, and it's a small world.\n\nI spoke, \"In our options, we envisioned the press as one amorphous blob, but what if we think of them as one person \u2013 say Edith \u2013 and allowed her to put the spin on whatever we tell her \u2013 the whole story from soup to nuts, and even our philosophy of life and relationships.\"\n\n\"I like that idea.\"\n\n\"Me too.\"\n\nGeorge said, \"Let me see if I can call the paper. Would we want her to come up here - today?\"\n\nSensing consensus from the group, I said, \"Sure. This is a story worth gold to the paper that breaks the story.\"\n\nGeorge went inside and a few minutes later we heard the tones of his voice on the phone. When he came back outside, he had a smile on his face. \"Miss Edie Gerst will join us this afternoon. She's about four hours away from Jackson and has to stop for lunch. Even as I talked to her, she told me she was packing up her desk and preparing to leave. She asked whether she could record our interviews; I told her she could. I hope that's all right.\"\n\nWe nodded in the affirmative. We'd thought of facing the entire press corps in front of an array of microphones; facing one reporter with a single recording device didn't seem as daunting.\n\nCrystal said, \"Maybe we should get dressed?\"\n\nSummer said, \"But we have over three hours, and Little James is about to go down for his morning nap ... can't we play? I think I'll be all right.\" She shot me a lusty glance.\n\n<center>* * * * *</center>\n\nAs mid-afternoon came, the five of us again sat on the back patio. The four adults looked a little spent from a late-morning frolic \u2013 George with Crystal, and Summer and me. We also spent a little time with all four of us in one bed, and found the experience extremely erotic. Summer looked so content and loving.\n\nThe doorbell rang at two-thirty. George went and opened the door. Seconds later, he escorted a shapely young woman, Edie Gerst, onto the patio where we all greeted her and made introductions.\n\nShe saw the baby playing and immediately asked, \"Is that James Mellon Ellis?\"\n\nSummer proudly said, \"He is. He just turned one.\"\n\nI jumped in, \"Edie, before we start \u2013 and we plan to be very open with you \u2013 could you tell us how you discovered this situation?\" I gestured to the four adults as we all sat down.\n\nEdie said in a steady voice, \"I grew up in North Star \u2013 about fifteen miles from Greenville. My relatives were German pioneers and back to the seventeen and eighteen hundreds, and I'm in the process of doing my family's genealogy when I have the time. Many records I'm interested in are in Greenville \u2013 the county seat.\"\n\nI could see where she was headed.\n\nShe went on, \"About two weeks ago I was going through some of the more recent birth records looking for a couple of births last year in my cousins' families. I wanted copies for my genealogy files. So, as I'm scanning the list, I see this name pop up \u2013 James Mellon Ellis. Now, normally, I would just gloss over that, but Mr. Mellon you and Crystal are my favorite singers of all-time ever. I stared at the name, and the whole thing came to me. I mean I am a reporter and get paid for my critical thinking.\"\n\n\"But how'd you tie it together?\" I asked.\n\n\"In some of the interviews, you did over a year ago you gave details about your road trip across the country after your wife had died. I remembered the birth record one day, and so I looked up your trip. In one interview I found, you specifically mentioned stopping to see a friend in Greenville, Ohio. I looked up the name Ellis, and there are only six in the town with that surname \u2013 it had to be one of them you visited because that was the other name on the birth certificate. I sensed a story, saw on the Internet that you and Crystal were going to hold a press conference the day she got back from Europe, so I went down to Nashville, found your agent \u2013 that's not hard, and pleaded with him to call on me for one question.\"\n\nCrystal muttered, \"And all hell broke loose.\"\n\nEdie said in a repentant tone, \"I'm really sorry about it now. I didn't mean to hurt anyone. I guess for all my critical thinking I didn't think of the impact it would on you two.\" She turned to George and Summer.\n\nGeorge stood and walked over to her, \"Apology accepted.\" He held his arms up. Summer joined him, Edie stood, and the three of them hugged. They all sat down again, but something had softened in the tenseness we each felt. \n\nAfter a silence where we studied our newcomer, I said, \"So, Edie, do you want a good story \u2013 one that will put you on the map?\"\n\nShe broke into a smile, \"You bet.\" She turned to George, \"You said it was OK to record, does that still hold?\"\n\nSeveral of us said, \"Yes.\"\n\nEdie rummaged around in an oversize purse and pulled out a small digital recorder. She started it, and set it on the coffee table in front of me.\n\nI said, \"This story started twenty-five years ago when I was fifteen years old.\" Edie looked surprised. \"I lived and went to school in Dillon, Massachusetts. At the start of tenth grade, this gangly guy moved into town, and we became best buddies from that time on.\" I gestured to George.\n\nGeorge picked up the thread from there: \"We were practically inseparable. Of course, we were both geeks or dorks or whatever they were called back then. As we came up to graduation we decided the only way to not be a dork for life was to join the Army, so we went in together. Later, we got into Special Forces together. It was on one of those Special Forces missions that I lost part of my left leg.\" George leaned down and rapped on his lower leg with his knuckles; a hollow knock could be heard from his prosthesis. \"Something else happened in that explosion that I didn't know until years later; I became sterile. The shrapnel from a mine had ripped into my leg and lower body. If it hadn't been for Jim's quick thinking I would have died.\"\n\nEdie had also started taking notes.\n\nSummer picked up at that point, I'd been married before and it hadn't worked out so I'd stayed out of circulation for a while. In my late twenties, I started to date again and I ran into this guy who was so unbelievably nice and lovable I just had to jump in again when he asked me to be his bride. That was seven years ago.\"\n\nSummer let Edie catch up in her note taking before going on, \"By then, my biological clock had started ticking rather loudly, and so had George's. We both wanted children. So we immediately dispensed with birth control ... and, nothing happened. After a couple of years, we started to see doctors \u2013 it was a slow process. Eventually, we learned I am healthy in that regard but George was shooting blanks as he calls it.\"\n\nEdie said, \"How long ago was that?\"\n\nSummer said, \"Four years or so. We started to look into adoptions, even going overseas. The adoption process is a nightmare; I feel so much sympathy for anyone who runs that gauntlet, particularly in this state. Just look on the internet; there are many bad experiences with the way the laws are stated here.\"\n\nEdie speculated, \"So you decided on another course of action?\"\n\nGeorge said, \"Well, not then. We kept our options open about adopting, even thinking of moving to Indiana \u2013 but that's worse, or moving elsewhere. Our families are not too far away, and we have deep roots here. And then, I heard that Jim's wife had died \u2013 I'd been at their wedding, and that he was headed our way for a visit.\"\n\nEdie asked, \"How'd the discussion with your wife go after that?\"\n\nSummer said, \"It wasn't as awkward as it might seem. I'd met Jim over the Internet \u2013 on Skype. We'd talked a lot, catching up and getting into each other's lives. We'd talked about visiting, but with Jim and Karen in Massachusetts and working full-time with not much vacation time, and George and I in the same situation in Ohio, it just never happened.\"\n\nSummer paused, \"George just said one day, 'What if Jim Mellon became a surrogate for me \u2013 a donor?' We thought through the mechanical approach and neither of us liked that idea; I'd already given more blood and had more doctors probing around my inerds that I care to think about. The logical thing was for us to copulate \u2013 to make love \u2013 to make a baby.\"\n\n\"Do you love one another?\" Edie looked between Summer and me.\n\nI nodded. Summer said, \"More than I can tell you, and, please don't miss this point, I love my husband just as much \u2013 even more, because he's the one that delivered James Mellon Ellis to me, albeit in a nonstandard way, but we got our first child.\"\n\nEdie picked up on that right away; \"First?\"\n\nSummer blushed, \"Yes, I'm probably pregnant again \u2013 by Jim. Last night.\"\n\nEdie dropped her pen.\n\n\n\nTo be continued"
    ],
    "authorname": "Romantic1",
    "tags": [
        "celebrities",
        "group",
        "polyamory",
        "pregnant",
        "press",
        "foursome",
        "son",
        "scandal",
        "synopsis",
        "love"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/crystal-clear-ch-09"
}