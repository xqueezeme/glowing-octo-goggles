{
    "title": "Alex & Alexa Ch. 05",
    "pages": [
        "Chapter 5 - Under The Radar \n\nI was rubbing my eyes as I took out a glass and poured myself some orange juice. Wearing only my boxers, I pressed the glass to my lips and took a stiff drink, hoping to revitalize myself. As much as I had enjoyed the previous day, I will admit I was completely worn out from it. I had fucked my beautiful aunt at least four times and cum hard each time. I was reasonably certain there was nothing left in my testes except some I.O.U chits. \n\nYesterday had been magical for both of us. Though we'd only known one another for four days, we'd been getting progressively intimate since that very first night. We'd returned to a small natural grove we'd found just off a nature trail and made love for several hours, lost in one another. I'd never wanted it to end and we'd finished the day by making love in my bed down in the basement once my parents had gone to sleep. \n\nI sighed as I wondered what to do. She was my mother's sister, after all, and we were madly sexually attracted to one another. We couldn't help it or fight it, the attraction, the need was so damn strong. The horror of what would happen if we were ever found out was too much to think about. Forgetting the shame and disgrace if it our affair became known, there were laws. \n\nBut we didn't care. We were determined to continue this for as long as we could, seemingly. Our lust for one another showed no sign of abating. My dreams were about her, most of my waking thoughts were about her, making love to her or finding ways to thrill her and make her like me. When I'd awoken this morning, I'd looked over at my laptop and smiled, because she was sleeping naked on top of her sheets, an angelic look on her face. \n\nI'd had sex before, I was not inexperienced. But sex with Alexa, my aunt that I was named after, was unlike anything I'd felt or experienced up to that point- it was primal, it was emotional, it was raw and torrid, but also had a deep, almost inexplicable bond. We'd whispered to one another, confessed that we'd been almost literally dropped in one another's laps, for reasons yet to be determined. It was an intangible and we didn't try to reason it out, only to act on what came so very naturally to us. \n\nI smiled as I heard footsteps on the stairs, coming down to the main floor. She finally awoken and was going to join me. I'd greet her with the kiss we loved to share and we would spend the day together, finding every chance we could to get naked and make love. \n\nBut the footsteps were wrong... \n\nShit! Mom! \n\nWithout another word I put down my juice and hastily threw on my white t-shirt I'd brought upstairs, nearly getting my head caught in one of the sleeves. I'd just wrestled it over my waist when she walked into the kitchen, giving me a wry look. I whirled around to face her. \n\n\"Jeez, mom!\" I exclaimed, my heart pounding. I was now standing there in boxers shorts and a t-shirt, nothing else. \n\n\"What's your damage?\" she asked, clearly nonplussed by my weird behaviour. \n\n\"I thought you were your sister.\" I replied, trying to look exasperated. Calling Alexa 'her sister' to my mom struck me as a good way of making sure I didn't sound too familiar yet. For days now I'd been acting suitably aloof and my parents were buying it, to my great relief. \n\n\"Well, that would have been the end of the world,\" mom said dryly. \"A family member seeing another family member in boxer shorts and no shirt. Ragnarok and Armageddon all rolled into one.\" \n\nI sighed in mild irritation. \"Look, I know she's family, but it's still gonna take me time to adjust, okay? It's only been four days, give me some credit already. Why are you even home? If I'd known it was you, I wouldn't have bothered.\" \n\nShe shrugged. \"Just decided to start a little later, I don't have as many papers to grade as your father. He took off about half an hour ago, I told him I'd be there soon. Why are you up so early?\" \n\n\"I set my alarm because your sister seems to get an early start on things and if I'm going to play chauffeur again, I wanted to be ready.\" I explained. \n\n\"Well, at least that's thoughtful of you.\" \n\n\"Eh, it has more to do with making sure she doesn't come downstairs to the basement to wake me up,\" I elaborated. \"I sleep in just my boxers, you know.\" \n\n\"I'm pretty sure Alexa's eyeballs wouldn't melt,\" mom replied dismissively. \"She's a sweet girl, but I doubt that would be her first time seeing a boy in his underwear, if you know what I mean.\" \n\n\"Could we please stop talking about my aunt and my underwear?\" I groused. \"I'm being good and dutiful, praise me, dammit.\" \n\nMom laughed and patted my shoulder, her hand touching the very bite mark Alexa had left on me the previous day that I'd been so desperate to cover with my shirt when she came down. Trying to explain that to my mother was the last thing I wanted to do. \n\n\"True enough, I suppose,\" she admitted. \"Alexa says you're slowly thawing, so that's a good thing. I just hope you're making a genuine effort to be her friend until she can establish some of her own.\" \n\n\"I told you I would, but you know I don't make friends quickly,\" I said. \"I'm not like dad, I'm more like you.\" \n\n\"Ouch. Okay, point taken. I guess because she's my baby sister, I just really hope you'll get along with her. As long as you're trying, that's what counts.\" \n\nShe filled her thermos with the coffee that had finished automatically brewing a while earlier and then grabbed her attache case and purse. She gave me a kiss on the forehead and waved as she walked out the door. I walked into the living room and sat on the couch, watching through the bay window as she got into her vehicle and pulled out. I sat for five minutes, making sure she wasn't coming back and then sighed heavily. That had been close. \n\nToo damn close. \n\nI went into the kitchen, drained my orange juice and quietly padded upstairs. I checked to make sure dad was indeed gone and then to the door of the room that used to be my bedroom. I gently turned the handle and opened the door- light was coming in through openings in the drapes, giving the room a warm glow. On the bed, naked atop the covers still, lay my beautiful aunt, Alexa. \n\nAnd I couldn't get over how beautiful she really was. \n\nShe was not quite a year older than me, nearly twenty six years younger than my mother. It had been something of a minor miracle, to be sure. She had long, thick golden blonde hair that hung almost down to the small of her back. Her eyes were a shining sapphire blue. Her lips were expressive and full, begging to be kissed. Her body was an erotic fantasy, with large, perky breasts that had small, pink nipples. Her waist was small, her stomach trim and her elegant hips curved into her long, supple legs. She kept her womanhood completely shaved, which drove me wild. Everything about her just made my body tremble with desire. \n\nI knelt next to the bed, smiling warmly at the sighed of her. She looked like an angle as the light from the windows played over her body. She was smiling, even in her sleep. Her torso was turned at a slight angle so that her chest was facing me, those incredible breasts almost beckoning to me. \n\nThere it was. The bite mark I'd given her yesterday, to match the one she'd put on my shoulder when she had cum. It was on the soft swell of her breast, a defined set of teeth marks that had clamped down on that tender skin. She had gasped and whimpered at the time, but welcomed me marking her, a sign of our deep bond. \n\nI gently leaned onto the bed, doing my best to not disturb her. I got my face next to her breast and then placed my teeth on her skin, exactly where I'd bitten her the previous day, applying the lightest of pressure. Alexa stiffened ever so slightly and moaned in her sleep before stirring, waking up as I pulled back and smiled into those deep blue eyes. She smiled dreamily. \n\n\"Good morning, Alex...\" she whispered, her hand reaching to caress my cheek gently. \"Making sure I was still marked as yours?\" \n\n\"That and just wanting to see you,\" I said, slipping my shirt and boxers off and sliding onto the bed next to her. She received me readily, snuggling her warm body to mine. \"It's been an eventful morning already.\" \n\n\"Mmmmmm, do tell...\" she said softly, putting her arm around me and kissing her bite mark on my shoulder. \n\n\"Well, I was down in the kitchen, wearing nothing but my boxers and having a glass of orange juice when mom came downstairs. You've never seen a man throw on a shirt so fast in your life.\" \n\n\"Oh, did you think it was me?\" she asked, smirking now and moving a lock of hair away from my face. \"Yeah, I'll bet you moved if you had to cover up that bite mark. Why was she still here?\" \n\n\"Bad luck, really, she was just a little lazy this morning.\" I explained. \"But as you can tell, she's gone now.\" \n\n\"Mmmm, music to my ears,\" she purred, nestling her body even closer to mine. Her pussy touched my cock and that was all that needed to happen for the reaction you'd expect. He began swelling and Alexa reached down and massaged him gently. \"We made love in your bed last night, perhaps we'd care to balance the score card here?\" \n\nI nodded and rolled on top of her, causing her to giggle and then we kissed deeply, sensuously, without reservation. She parted her legs to allow my hips to nestle between them. I was already hard and she was already wet. Without further ado, I pushed my cockhead between her netherlips and then slid inside her slowly. She moaned into my mouth as she wrapped her arms around me and then her legs hooked behind my knees. \n\nKeeping her beneath me, I pushed in and out of her pussy while we kissed, tongues swirling and tangling, tasting each other's mouths. Her fingers massaged and kneaded my back traveling up and down my spine. I slid I up to the hilt and we both shivered and groaned as I filled her. \n\n\"You feel so good inside of me...\" she cooed, rocking her hips gently and squeezing me with her pussy muscles. \"You make me feel like no one ever has before. Alex, it feels so good...\" \n\n\"God, Alexa,\" I murmured, kissing her neck. \"Everything about you, it's wonderful. I love how you feel, how I feel inside you... I love your voice when you whisper to me... everything...\" \n\nAnd then I remembered something that I was certain would put her over the edge. I gently pushed deeper inside while I repeated myself, whispering in her ear. \n\n\"Tout sur vous, il est magnifique. Je t'aime comment vous vous sentez, ce que je ressens \u00e0 l'int\u00e9rieur vous ... votre voix lorsque vous chuchotez \u00e0 moi ... J'aime tout \u00e0 propos de \u00e7a...\" \n\nShe gasped loudly and clutched herself to me as I spoke French to her quietly, shuddering in delight. She kissed me feverishly and trembled as she held me to her, her heart pounding in her chest. \n\n\"Jeg elsker dig, Alex. Jeg er vildt forelsket i dig, og ville \u00f8nske jeg kunne fort\u00e6lle dig. Jeg \u00f8nsker at bo for evigt i dine arme...\" she whispered to me, almost panting in my ear. I didn't know at all what she was saying, but I knew that speaking French thrilled her and she was saying something similar to what I'd told her. I loved the sound of her voice when she was speaking other languages. \n\nAnd the way her voice quavered in my ear now, as we rocked and squirmed against each other, making love on her bed, it was a pleasure I know I'd never tire of. I could never get enough of it and I hoped she understood this. \n\nWe ground our hips harder into one another, panting and gasping as we fucked. Her legs were wrapped around my waist as I rocked back and forth, feeling her pussy clenching my cock tighter and tighter while the tingling, boiling heat bubbled up in my loins... \n\nWe both cried out, hips writhing and straining as I burst, my cum spurting deep inside her. My back arched, my hands clenching the sheets beside her head. Her tunnel squeezed me hard, desperate for my offering. Our bodies shook as the mutual orgasm crashed over us, sweeping us away on waves of transcendent pleasure. \n\n\"Alex!\" she moaned loudly. \n\n\"Alexa!\" I growled, still straining against her as my ropes of cum lashed her pussy. \n\nWe finally collapsed together, panting heavily. We were warm and damp, bodies quivering from the intensity of our lovemaking. Her legs slid from behind mine and her hands lay beside mine on the bed. I knew she didn't want me to move, no matter what I may have weighed, because we both loved the feeling of my cock deep inside her. \n\nFinally, slowly, she put her arms around me again in a feeble, exhausted hug. I pressed my lips to her neck and kissed her, loving that she moaned lightly at the touch. That we could share this exquisite satiation was so wonderful to both of us. \n\n\"Wonderful, lover,\" she murmured, finally opening her eyes. \"I'd happily wake up that way every day if I could.\" \n\n\"You and me both,\" I agreed. \"I'd die a happy man.\" \n\nAlexa giggled and poked my nose. \"Silly, no dying. I'm nowhere near done with you yet.\" \n\n\"As you wish.\" I sighed, smiling wryly. I slowly rolled off her and onto my back. My cock sprung up above me, still hard and glistening with our cum. Alexa now moved down next to my hips and took my member inside her mouth, bobbing back and forth, sucking our mingled pleasure off me. She moaned happily, loving to do this as one of the final acts of any lovemaking session. When she was finished, she smiled and laid back down beside me, her body snuggled to mine. \n\n\"So we know the general agenda for our day,\" she said quietly, tracing a fingernail over my defined ab muscles. \"Do we have any plans yet for where we can get naughty?\" \n\nI pondered her question. \"Well, you need a phone, so we'll be at the mall. I can think of a potential location there. I suppose we can go on a tour of the city and see if anything jumps out at us.\" \n\n\"Sounds wonderful,\" she purred. \"We need to shower, of course, and then what about breakfast?\" \n\n\"Why don't we have breakfast out?\" I suggested. \"Lots of nice places for it around this city. Besides, we might get lucky and find another place to fuck.\" \n\n\"Sold,\" she said readily, nodding her had at the thought. \"Let's shower and get moving.\" \n\nShe took my hand and led me into the bathroom. While I grabbed two towels, Alexa turned on the water for the shower and stepped in. She giggled in delight as I joined her, pressing her now-slippery body to mine and kissing me, a gesture I returned willingly. We kissed and moved slowly together beneath the water, almost dancing to a music only we could hear. \n\nAlexa broke the kiss finally and had a light frown on her face. \"Damn,\" she muttered quietly. \"Gotta pee...\" \n\nShe looked past the shower curtain for a moment, to the toilet on the far side of the bathroom and bit her lip before looking at me. \"I... okay, this might be weird, Alex, but... may I pee in here? I really don't want to get out.\" \n\nI shrugged. \"Doesn't bother me any, I'll let fly once in a while if I need to.\" \n\n\"Thanks,\" she said, nodding. \"This'll only take a sec.\" \n\nShe kept her hands on my shoulders and closed her eyes, as if she was trying to concentrate on what she needed to do. Without saying anything, I took hold of her hips and moved forward into her, bending my knees slightly and placing my cock beneath her pussy. Her eyes flipped open and she blinked in confusion. \n\n\"I thought you might have an easier time if we made it naughty,\" I remarked, grinning. \"Seems to do the trick for us, doesn't it?\" \n\nShe gave me a wry smirk. \"You think peeing on your cock is going to help? Well, can't hurt to try, right?\" \n\nShe made sure her pussy was good and nestled on top of my member and stared into my eyes. She pursed her lips and gave a tiny shiver as she began. I had my back to the shower jet, feeling it blast down my back, distinctly different from what she was doing. Her warm pee splashed and inundated my dick, trickling between and down both our thighs. She began giggling at the sensation and I was doing my best not to laugh at how absurd we were. \n\nShe finally finished and sighed. \"Well, don't know if that helped me go, per se, but it was certainly different and fun to do.\" \n\n\"I wouldn't know yet, would I?\" I teased, giving her a leering grin and then reaching to hold her in place. Her eyes went wide and she squealed, struggling to get away from me. The water made her difficult to hold on to, but I finally managed to wrestle her to her knees, facing away from me, her hands scrabbling at the back lip of the large tub. As she writhed to get away, I pushed the head of my cock against her pussy and began peeing. She shuddered and froze for a moment as she realized what I was doing and then moaned. \n\nFeeling the stream splattering between us at such short range, cock to pussy, was thrilling in a way I couldn't readily describe. Alexa groaned and reached under herself, using two fingers to pull her labia wide and expose her inner pink. I pushed my cockhead against the pink as I peed, even managing to force it slightly inside, despite being soft. Alexa shivered and sucked in her breath, almost whimpering. \n\nI aimed the stream directly on her clit and she keened as I battered it. Just before I finished, I dragged my cock across her magnificent ass, baptizing it as well. By the time I'd finished, Alexa was leaning heavily against the back lip of the tub, panting. She slid slowly to the floor of the tub, lying on her stomach and just sighing. I laid down on top of her, nuzzling and kissing her neck. \n\n\"Mmmmm, add another perversion to our list of incestuous little activities...\" she hummed, clearly pleased with what had transpired. \n\n\"First time I've ever done anything like that,\" I mused, still lying on her. \"How about you?\" \n\n\"First time with a guy,\" she sighed, gently squirming beneath me. \"Had a girlfriend I'd go pussy-to-pussy with and do it. Was a real turn-on with her. And it is here, too. Everything we do together turns me on.\" \n\nI slowly turned her over and we kissed and made out while lying on the shower floor, the water cascading down on us. Finally, we stood and resumed showering, lathering and cleaning one another off, Alexa giggling as she squirmed her body to mine, like she was my own human loofah. \n\n\"Do you know what a nuru massage is, Alex?\" she asked, looking up into my eyes. \n\nI nodded and smiled evilly. \"I have about ten movies on my hard drive and about twenty websites bookmarked. \n\n\"'Then you're in luck,\" she purred, holding me close and massaging me with her breasts. \"Because I love giving those massages and have for quite a few years. I know where to order the gel online if we can't find any locally and all we need are towels, a big wooden bowl and an inflatable mattress.\" \n\n\"Sounds like Heaven,\" I sighed, picturing Alexa slithering her slippery body all over me to make us cum. \"I know some shops we can look around in. \n\nWe finished showering somehow and got out, drying one another off. I sat and waited on Alexa's bed and watched her while she chose an outfit for the day. She put various top in front of herself, displaying them and asking my opinion. I decided on a v-neck shirt, as long as she promised to wear a push-up bra along with it. We then found her another set up curvy jeans and some panties to match. \n\n\"Keep in mind you have to desecrate these for me later,\" she purred as she slipped on the panties. I want to feel your cum against me all day.\" \n\nWe went down to the basement and she chose my outfit for me, something she seemed to take pleasure in doing, not to mention I enjoyed watchng her do. She dressed me, as she had before, and we went upstairs, hand-in-hand. We got into my car and she was alreadt taking video and pictures on her phone, iterating what we had in mind for the day. I enjoyed listening to the matter-of-fact sort of way she used to describe our lovemaking plans. ",
        "We stopped downtown at one of my favourite cafes and had a light breakfast and strong coffee. My food included a lot of granola with berries and protein. She giggled and poke my hand. \n\n\"Keeping our zinc and folic acid count up, are we?\" she teased. \n\n\"Got to around you,\" I replied. \"Can't keep you filled up with cum if I run out.\" \n\n\"Well that would be a pity,\" she said quietly, tracing her fingernail around the edge of her cup. \"I have to feed my addiction, after all. But Alex, can I... ask you something?\" \n\n\"Sure. Anything.\" \n\n\"Do you... ever wish there was someone you could safely tell about us?\" \n\nI considered for a moment. \"Well, not really. I guss I wish we didn't have to hide it, but tell someone since we have to keep it secret? No, can't think of anyone. Why?\" \n\nShe drew a deep breath. \"I've got a good friend back in Copenhagen, someone who was probably my best friend and confidante while I lived anywhere over there. And I really wish I could tell her. We talk nightly now, when I'm not with you, and she asks how I'm doing. It feels strange to omit one of the most, if not the most, relevant details of my new life from her.\" \n\nI thought about what she was saying. There had to be aspects of her old life she missed. And what did I care if she told a friend about us? Not like it would really affect me, would it? \n\nAnd it would make Alexa happy. \n\n\"So go ahead and tell her,\" I said simply, shrugging. \"I don't see any harm coming of it if she's that good a friend to you.\" \n\nHer eyes lit up. \"You wouldn't mind?\" \n\n\"Can't think of a reason I should,\" I reasoned. \"Not like she's going to rat us out to anyone we know here, right?\" \n\nShe sighed and smiled at me. \"Just when I thought you couldn't get any more amazing. Her name is Freja, she's a lot of fun. Would you like to meet her on Skype some time?\" \n\nI nodded. \"That might be fun. So were you two um, close?\" \n\nShe giggled. \"Yes, we were lovers. We promised one another we'd find time to be naughty on Skype, but we've only done that once since my arrival.\" \n\nI smiled. \"That night you told me I missed such a great little show on the webcam?\" \n\n\"Yes,\" she admitted, blushing. \"Freja and I were playing for one another. And it's fun, but I would rather be making love to you.\" \n\n\"Well, if she's interested, why don't we put on a show for her some night when my parents aren't home?\" I offered. \"Would she like that?\" \n\n\"Oh, she'd love that, I'm sure, she's a real perv,\" Alexa mused, smiling naughtily at the thought. \"Maybe we'll just start fucking one night without warning her.\" \n\n\"I'm in,\" I said cheerfully, finishing my zinc and folic acid. \"So where shall we go now?\" \n\nShe considered as she finished her coffee. \"Might as well get the phone thing over and done with. I love my phone, so hopefully they'll just be able to put a North American chip in it and give me a new number.\" \n\nI nodded and we went to the mall, where we found a carrier store. Rather than endure men leering all over her and trying to get her to buy a new phone, she went directly to a female attendant who was plainly dressed and asked her to see if her phone could be converted and given a new number. Seeing the way her male attendants were staring at Alexa, the woman decided to get this buxom blond vixen out of her store as quickly as possible, so she opened the phone, examined it and announced that she could indeed just convert it and give her a new number. \n\nAlexa announced she was pleased, picked her plan and signed her contract. The entire experience was over in less than thirty minutes, which I didn't think was possible in a cellphone store. She was smiling at her phone as we exited the store, satisfied with the transaction. \n\n\"And I gave it international calling, in case I need to talk directly to someone in Europe on the spot,\" she said. \"Never hurts to be prepared. Now didn't you tell me there might be a place in this mall where you could fuck me good and proper?\" \n\nI took her by the hand and led her through the mall and down a wing that was being redeveloped. None of the stores were opened yet and plastic sheeting covered most of the store fronts. A short hall off to one side led to an exit for the parking lot in the rear of the mall. \n\nAnd it was here that there was a set of bathrooms, mostly unused. One was a family changeroom that I now took her into. \n\nWe walked in and I closed the door behind us, locking it and slotting the 'occupied' tab into place. There were benches spread around to allow moms to feed their babies in peace, along with some changing stations. At the back of the room was a wooden door and behind that was the actual bathroom. I took her into the bathroom and closed the door. She was already slipping off her shirt and wiggling out of her jeans. I stared at her body in renewed wonder as she stood there in her bra and thong, smirking at me with one hand on her hip. \n\n\"Not your first time fucking in a public bathroom, is it?\" she teased. \n\n\"I was just thinking that I'm the luckiest nephew in the whole damn universe.\" I breathed, still staring. She blushed and knelt down in front of me, unbuckling my belt and then sliding my pants down. She slipped my boxers down and nuzzled her cheek against my cock before kissing it. I playd with her hair while she took me inside her mouth, slowly moving her lips back and forth on me until I was hard. She stood and pressed herself to me, kissing me as I undid the clasp at the front of her bra, letting her breasts free as it fell off her lovely shoulders. \n\nI now gently pressed her back against the sink lowering my head to kiss her succulent breasts, swirling my tongue around the nipples slowly, making her coo and shiver. One of my hands reached down and slid slowly up and down the thong she was wearing, teasing her increasingly wet lips. I kissed and nibbled down her belly as I tugged the thong down, exposing her smooth pussy. She gasped as I kissed it and then snaked my tongue inside. I knelt in front of her and lifted her knees so there were sitting on my shoulders and her hands supported her upper body on the sturdy sink. \n\nI massaged her gooey lips with my mouth and flicked her clit with my tongue and she moaned quietly as she crossed her legs behind my head. My fingers flexed on her thighs as I licked and kiss her pussy eagerly, loving how her body responded to my touches. \n\n\"Alex...\" she whimpered. \"Yes, lover...\" \n\nWe wouldn't have forever in here and we both knew it, so I stood slowly, keeping her pressed back against the sink. She looked up into my eyes expectantly, biting her lip as she slipped one legs around my waist. I moved the head of my cock to her slippery entrance and guided it in. We both sighed as I pressed with my hips and slid deep inside her. It was almost a relief for us. \n\nWe kissed deeply as she held me inside her, her pussy embracing my cock like a returning hero. She moaned into my mouth as I began to slide back and forth slowly. She worked her hips against mine, keeping me in rhythm with the leg she had around my waist. I wished I had more hands, because there was so much of her I wanted to fondle all at once. \n\n\"Mmmm, fy anwylyd...\" she murmured next to my ear, kissing and nibbling at it. \"Rwyf wrth fy modd sut yr ydych yn teimlo y tu mewn i mi...\" \n\n\"God, I wish I spoke Welsh now...\" I breathed, kissing her neck and causing her to giggle. She shivered as I touched a sweet spot, crushing her body against me. She squeezed my cock with her pussy hungrily, wanting to feel my cum deep inside her. He hands clenched my behind, pulling on it, driving me deeper into her hungry womanhood. \n\nI paused and pulled her off the sink, taking my cock out of her momentarily as I turned her around. She placed her hands on the rim and groaned as I held her hips and slid deep inside her from behind. I wrapped my arms around her, pumping back and forth. I kept her legs squeezed together between mine, tightening her slippery tunnel. My hands massaged her breasts as I fucked her and she groaned lustily, grinding back against me, her ass against my hips. \n\n\"Fuck!\" she gasped through gritted teeth as I wrapped my hand in her hair and pulled on it, craning her neck back. My other hand still squeezed her breasts hard, pinching her nipples and gripping her hard enough to leave the red marks we both loved. One of her hands moved down to play with her clit, also teasing her lips and my cock as it slid over her fingers. \n\nWe were both trembling and she turned her head and mashed her mouth to mine as we went rigid together, grinding as hard as we could into one another. Finally I broke and I rammed my hips as hard as I could into her, my cum exploding deep inside her. She screamed into my mouth as her pussy clamped down on my cock savagely, bathing us both in her wild desire. \n\nShe leaned against the sink and I held her tight as we both trembled, bound in waves of pleasure. I caressed her body and we kissed tiredly, her fingers on my cheek. My hips still moved against her, letting Alexa milk the last of my cum from me. As I finally started going soft, I stood back slowly and she turned around to kneel, sucking our mingled cum off my cock as was her habit and our mutual delight. \n\nHer pussy squished below her as she stood and she giggled. \"All that jizz of yours is going to be out of my cunt and on my panties in minutes. Good thing I brough some pads to wear on the outside of my thong so it doesn't show on my pretty pretty jeans.\" \n\nI cleaned myself up slightly and wiped Alexa's inner thighs before she slid on her thong and fastened the liner in place and then I did up her jeans. I slipped on her shirt and then she dressed me before we went out to the outer room. Tempting fate because of the frosted glass, we held one another and began kissing deeply for a few minutes. If anyone went by, they didn't notice. \n\nWe visited several more shops in the mall, letting her get acquainted with its layout. She immediately found and made note of the locations of all the best clothing and beauty supplies stores, along with three different lingerie shops. As we exited, she asked if I knew of any reputable adult stores downtown. I thought for a moment and took her to the car. While we were in the lot, mom called. \n\n\"Hi,\" I said cheerfully. \"We're just leaving the mall, Alexa's set up with her own local number now.\" \n\n\"You sounds unsually chipper,\" mom stated. \"What's up?\" \n\n\"Nothing, we've just been discussing things we have in common and I got to eat. I'm full of coffee and granola.\" \n\n\"And I'm full of protein now.\" Alexa whispered, giggling. I scowled at her and swatted her hand. I shook my head and went back to talking to my mother. \n\n\"So you made a genuine attempt to find common ground with her and get along? Good for you,\" mom said. \"I just wanted to check in, what do you have planned for the afternoon?\" \n\n\"Well, I told her I'd show her around downtown, so that she can find her way if she ever wants to borrow my car,\" I explained. \"So we're just going to tool around, let her get the layout of the land.\" \n\n\"Good idea,\" she agreed. \"Make sure she texts me her new number so I can reach her and give her my snapchat name as well. You kids have fun.\" \n\n\"See you, mom.\" I said, finally hanging up as we got in the car. I turned and gave her a look. \"We are so lucky she didn't hear you,\" I chided, pretending to scold her. She tried to look sorry but could not get the naughty smirk off her face. \"You're full of protein?\" \n\n\"Well, I did eat quite a bit of yogurt at breakfast,\" she reasoned. \"I can't rely exlusively on your cum as a protein source now, can I?\" \n\n\"You are such a brat,\" I muttered, caressing her cheek. She took my palm and kissed it lovingly. \"Not that I mind, of course, maybe I'll spank you later.\" \n\n\"God, I love spankings from the right person,\" she purred, smiling at me. \"They give me such a tingle.\" \n\nWe drove and I finally brought her to an upscale adult shop I was aware of. No one knew me in there and I somehow doubted anyone knew my parents, so I felt safe being seen here with Alexa. We walked inside and she grinned, remarking on the size of the place. It reminded her of some similar shops she'd visited in Europe. \n\n\"I'm hoping I can get a few things in here,\" she used as we walked around. \"I had to leave all my toys in Europe, of course, didn't want to bring those through customs. Maybe we can find some things we can both use.\" \n\nArm-in-arm, we perused the store for an while, discussing various toys and outfits we saw. It was a cavernous place, with a high ceiling, along with row upon row of items, tucked away in a corner of a ritzy downtown district. Even many locals didn't know it was there, but that worked out well for the store, who had the benefit of a prime location and discreet clientele. \n\n\"So no one here knows you, right?\" she asked quietly while we looked at dildos. \n\n\"As far as I know, right.\" \n\n\"Let's be naughty and fuck with their heads,\" she whispered, smiling at me wickedly. \"We're both blond and have blue eyes and we look the same age. Let's pretend we're twins.\" \n\nI raised my eyebrow in amusement. \"Really?\" \n\nShe nodded. \"Unless you just want to tell the truth and let them know we're an aunt and nephew who love to fuck.\" \n\nI chuckled. \"We'd better stick with the twins thing. If we say 'aunt and nephew', there's no telling who might talk to who and it makes its way somehow through the campus to my parents. Siblings is far more anonymous.\"  \n\n\"I know,\" she sighed. \"It's the one sucky erotic part about being directly related to you, incest roleplay isn't roleplay at all, kind of takes the kink out of it.\" \n\n\"Maybe, but it's not roleplay for us, it's the real deal,\" I pointed out. \"We're living what people who roleplay dream about.\" \n\nShe nodded. \"True. Alright, let's blow their minds...\" \n\nWe walked around until we found a young woman attendant and got her attention. \"'scuse me,\" I began, smiling. \"Looking for a naughty schoolgirl outfit for the lady here.\" \n\nThe girl looked at us for a moment, perhaps noticing our physical similarities before nodding and taking us to a place where they kept fetish costumes. She displayed a range but Alexa immediately asked her to point out the best quality one. It was quite wonderful to look at, with a red plaid skirt and a white shirt that was meant to be tied at the midriff. Stockings completed the ensemble and some mary-jane shoes were also available. \n\nAlexa asked if she could try the outfit on and the girl showed her the dressing room not far away. She waited nearby the room while I busied myself examining some latex outfits. Then Alexa came out of the change room and my entire world stopped dead. \n\nShe walked forward slowly, smiling sexily, stepping one foot in front of the other and biting her lip. She had put her hair in pigtails. The blouse was tied but her breasts were almost bursting out of the top with her push-up bra. Her midriff was completely bare and the red plaid skirt barely fell past her hips and her ass. The white stockings and shoes looked incredible on her shapely legs. \n\n\"How do I look?\" she asked breathily as she walked up to me, smirking. \n\nI couldn't say anything. The attendant girl seemed to be stunned too. \n\n\"Mmm, you like, I take it?\" she purred, leaning forward so her breasts gently bumped against my chest and gave me a wonderful view of her cleavage. \n\nI finally regained my wits and grinned. \"It's even better than the ones we had to wear to school.\" \n\nShe giggled. \"Mom and dad would not approve.\" \n\n\"Well, it's not they're approval you need, is it? Your brother's is the only one that counts.\" I said softly but loud enough to be heard by our attendant. Her eyes got even wider, if that was possible, upon hearing us refer to one another as siblings. \n\n\"Mmmm, when we get home are you gonna strip it off me or make me wear it when you fuck me?\" she cooed, her nose almost touching mine. \n\nShe then took out a little lollipop from the inside of the blouse, twisted off the wrapper and popped it in her mouth, a saucy smile on her face as she winked at me. As outrageously sexy as I found the action, I almost burst out laughing at it because of how ridiculous we were. \n\nAlexa now turned to face the attendant, leaning back against me and I put my arm around her to hold her steady and balance us. The girl was still staring almost dumbly. \n\n\"Sweetheart, I am buying this outfit, no question, and a lot of other things,\" she purred, smiling sweetly. \"But do you think it'd be okay if I snapped some pics in here? I want to remember this moment.\" \n\nThe girl swallowed. \"Are... are you two... are you brother and sister? For real?\" \n\nAlexa looked up at me for a moment and then giggled before nodding at the girl. \"What do you think, silly? We look alike, don't we? What do you want, a blood test?\" \n\n\"Holy shit, that's hot...\" the girl breathed. \"Yeah, I... sure, please do. May I watch?\" \n\n\"Ooh, an audience,\" Alexa cooed. \"I like it. Maybe you can take some pictures for me, if you're not too busy?\" \n\n\"I don't think it'll be a problem, we're not busy,\" she said readily. \"I just... holy shit, you two are lovers?\" \n\nAlexa smirked again. \"You need a demo or something?\" \n\n\"Quit teasing her,\" I said, puller her tight to my body and speaking against her lips while one hand reached down beneath the front of the skirt and stroked her thong, causing her to shiver and moan in response. \"Make nice with the girl, sis.\" \n\n\"Mmmmm, I will, I promise, just keep teasing me,\" she murmured, putting one arm back around my neck. \"God, I'm so fucking horny.\" \n\n\"Already?\" I asked cheerfully. \"We fucked less than an hour ago in the mall.\" \n\n\"It's this outfit,\" she breathed. \"I can't wait to fuck in it.\" \n\n\"Well, let's not get us all arrested here,\" the girl interjected. \"But I'm willing to take pictures, no matter how sexy it would be to see you two- I... let's take pictures.\" \n\nAlexa nodded and took up various sexy poses while the girl and I took pictures on my phone and Alexa's. She never actually exposed her breasts but came close on several occasions and also releaved her thong and her ass cheeks freely. For some pictures, she laid on her back, looking up at the camera, her legs spread and sucking on the lollipop, looking very much in need. She knelt on all fours, facing away from the camera but turning to look at us, her skirt hiked over her behind. \n\nWe then let the girl take pictures of the two of us, with her kneeling in front of me but slowly working her way up until we were kissing in the last snapshots. She finally pulled away and took a deep breath, her skin flushed. \n\n\"Okay, we've gotta stop or I'm gonna rape you right here on the floor,\" she said, gaining control of herself. \"Taking pictures like this turns me on.\" \n\nThe girl handed Alexa her cellphone back and gathered her thoughts. \"So will you just wear that or do you want to package it?\" \n\nAlexa giggled. \"I'd better get dressed, no telling who we'll run into out there, right?\" \n\nI nodded. \"And you did promise the nice lady that we had more stuff to buy. So get changed and let's continue with your purchases.\" \n\nShe wiggled into the changeroom and was back out in just a few minutes, reverted to her glorious self, although she kept the lollipop. I laughed as we walked around, still perusing. \n\n\"Where the hell did you get that thing?\" I asked. \n\nShe shrugged coyly. \"I knew I wanted to buy a schoolgirl outfit today so I brought it along, just in case. It pays to plan ahead.\" \n\nWe found a few dildos and vibrators she liked, one of which had a suction cup so it could be stuck to a wall. She picked up some smaller toys, like buzzing eggs and nipple clamps, along with edible lubricant and body paints. Two of her other purchases included a double-headed dildo and a strap-on dildo of no small size. ",
        "\"Oh, don't worry, my love, they're not for you,\" she said in a soothing tone, noticing me eyeing them warily. \"But you never know when an opportunity might arise.\" \n\n\"Good to hear.\" I replied. She saw several wonderful latex outfits and she made me promise we could come back for to to try them on at some point. I was looking at some silk restraints when Alexa called me, drawing my attention to another aisle. \n\nShe held up a box and smiled wickedly. \"I found the nuru gel...\" \n\nShe had indeed, along with an inflatable mattress and even a traditional-looking wooden bowl made for just such an occasion. I joined her and she snuggled up to me, whispering in delight. \"I can't wait to use this on you, lover...\" \n\nWe went to the check out where our attendant was waiting. Her manager was nearby and he could hardly keep the grin off his face as he looked at us. Alexa saw him smiling and raised an eyebrow, smirking. \n\n\"Afraid you missed out on the show?\" \n\n\"From what I heard, yeah,\" he said, nodding. \"You two are welcome back any time.\" \n\n\"Can't understand why...\" Alexa purred as she turned to me and put her arms around my neck, kissing me deeply. We made out for several seconds in front of the counter, the manager grinning and the attendant girl staring in wide-eyed shock. Alexa broke the kiss and turned her head to smile and wink at them both before I picked up the bags of her purchases and we walked out. \n\n\"That was quite the pretty penny you dropped back in there,\" I mentioned. \"You sure that's alright?\" \n\nAlexa nodded simply. \"It's not an issue. I told you, my mom left me a hefty inheritence and now that I know the university will give me a full scholarship I don't need to consider that aspect of it. More to the point, you have to remember that I left my entire stock of personal toys back in Europe, Alex, and I needed to replace those. It wasn't really an option, do you know what I mean?\" \n\n\"I understand,\" I replied cheerfully, glad to be out with her. \"I love how turned on and worked up you get when you do things like that.\" \n\n\"I do, but it's more acute around you then I ever remember it being,\" she said. \"You bring out a sexual animal in me that I'm loving to embrace.\" \n\n\"So what shall we do now?\" I asked as we got back to the car. \n\nShe thought about it for a moment. \"Let's go find a small, secluded area in a park and make out.\" \n\nFortunately, I knew just the place. \n\n*** \n\nOne great thing about High Park is that there are lots of little parkettes and areas that make up part of the greater whole. And some of these saw little traffic, even in the summer. So I took her to an area where I knew that we'd be alone, even if people were not far away, blissfully ignorant of our proximity. \n\nAnd it was here that I had Alexa on her back, lying on the side of a small green hill, her legs spread wide and wearing only her shirt as I lapped hungrily at her pussy. She was hissing and trembling, a sheen of sweat already forming on her. She was sucking on the lollipop she'd had in the sex store as she looked down at me through heavily-lidded, pleading eyes. \n\n\"Alex, don't tease me, you bastard...\" she whimpered, her gooey pussy begging for my tongue. \"Please...\" \n\nShe reached down with the cherry-flavoured lollipop and rubbed the candy up and down her slippery lips, even sticking it inside and sighing. It glistened wetly as she pulled it back out and showed it to me. She moaned again as she slid it back inside herself, wiggling it back and forth. When she finally pulled it out, she took it in her mouth and sucked on it ardently, enjoying the mingled taste of cherry and her own pussy. I wasted no time in wiggling my tongue back inside her and had to admit I agreed with her about how thrilling the taste was. I devoured her hungrily, making her squirm and writhe. \n\nI pushed my tongue farther inside her he and she moaned loudly. I got on my knees and pushed on her until she was rolled up onto her shoulders, her hips and ass grinding in the air against my face. My hands reached down and squeezed her breasts while I snaked my tongue across her pussy. My tongue lashed her clit and she gripped my hands on her breasts and she strained, body shaking as she tried to not climax yet... \n\nHer cum smothered my face as I pinned her by the shoulders, holding her in place while she thrashed. She sighed loudly, gripping my hands tight. I could feel her pussy clenching around my tongue and her incredible taste on my lips. It was intoxicating. Her natural taste, along with the sweet cherry of the lollipop. She shook and gasped, wracked by pleasure until she went went almost still, eyes closed and moaning quietly. \n\n\"Holy shit...\" she whispered, reaching down to feel her pussy and then licking her fingers tenderly. \"Oh my God... Alex...\" \n\nI slowly lowered her hips and then laid down beside her, caressing her breasts and stomach. I smiled at her while she stretched langorously and sighed in bliss. She slowly turned onto her side to face me and smiled. \n\n\"Are you sure you haven't been with lots of girls before?\" she purred, tracing a fingernail over my cheek. \"Because you eat pussy like a champ.\" \n\n\"Well, I have to admit, I'm really into pleasing you,\" I replied, smiling back. \"I think doing it to you makes me better than I should be.\" \n\n\"Then they don't know what they're missing.\" Alexa sighed, stretching again. \"God, that tongue. I can't feel my anything at the moment.\" \n\nShe snuggled closer and kissed me and I could taste her cum and the lollipop on her lips and tongue. I couldn't get enough of her. We kissed one another for some time before she finally smiled and stretched out on her back again. \"Okay, I think I have my legs back. I'd better get my pants back on now that you've put out the fire in my girl. But we have to come and use this spot again.\" \n\nI helped her back into her thong and pants before we made our way back into the park. We strolled around for some time, holding hands when no one was nearby and we both wished that we didn't have to be careful. I walked her down to the lake that was in the middle of the park and we sat on the water's edge, staring out over the expanse, watching swans and ducks float by. \n\n\"It's pretty here,\" she said quietly, sitting next to me. \"Different from where I lived but similar in some ways. It'll take getting used to but... as long as I'm with you and Karen and Michael, well, I know it will feel like home.\" \n\n\"I'm glad,\" I replied, giving her hand a squeeze. \"Because that's important to all of us. I know it's important to me.\" \n\nWe said nothing for a while before she looked at me and grinned. \"Buy me some ice cream?\" \n\n*** \n\nNot surprisingly, even watching Alexa eat ice cream was a total turn on for me, and we had to find a secluded location for me to lick the melted goodness off her breasts when it kept 'accidentally' falling on them. She hummed as I held her to me, sucking hungrily on her luscious breasts, now covered in soft-serve. \n\n\"Mmmm, way to be thorough, tiger,\" she purred, kissing my mouth and licking the ice cream off my lips. We were in the back seat of my car in a secluded parking lot, with me lying on top of her and her shirt off. Her legs were wrapped around my waists as she squirmed beneath me. \"You sure know how to clean a girl off...\" \n\nI was horny as hell, but it was still daylight out and didn't want to risk getting caught. We wiped her bosom clean with some wet-naps she had kept in her purse (she seemed to be prepared for anything and everything) and then I asked her what else she had to do today. \n\n\"I need another bathing suit,\" she mentioned. \"The one I have might be a little too immodest for wearing to a swimming pool or the beach in these parts, I think, or at least when Karen's around. And she did sat she was looking forward to us catching up by sitting in the jacuzzi and drinking champagne. So maybe we can find a one-piece somewhere for me?\" \n\nI nodded and headed to a store that I knew carried what she'd be looking for. I waited patiently while she tried on several but what blew me away is just how good she made them look- her tits looked huge in all of them, her waist tiny and her ass was magnificent. She finally decided on a red and white one, but also purchased some micro-bikini's while she was at it, winking at me and saying they'd make up for the regular one she'd bought. \n\n\"It's getting close to dinner time, we should probably head back,\" I said somewhat regretfully. \"I'd sooner be out with you.\" \n\nAlexa sighed. \"Maybe, but we probably don't want to be seen spending too much time together, at least by ourselves. We'll make time, we're clearly good at it, right?\" \n\n\"We do seem to be,\" I agreed, nodding. \"Alright, we'll head back. Besides, we can get together tonight after mom and dad go to bed.\" \n\n\"Mmm, I'm so glad for that,\" she said in a sultry voice. \"Because I'm really tempted to give you my ass tonight.\" \n\nShe reached over from the passenger's seat and massaged my crotch while I was driving. \"I really want to get that monster inside my ass. God, Alex, I'm getting wet just thinking about it. What have you done to me?\" \n\n\"Pretty sure it's mutual,\" I said, feeling myself swell inside my jeans. \"And yes, I'd love to fuck your ass tonight.\" \n\n\"Good, because I'm holding you to that...\" she said quietly, releasing me and letting me drive without causing an accident. \n\nWe got home and she took her new items directly up to her room. I was drinking a smoothie in the kitchen when mom and dad came in, direct from work. \n\n\"Glad to see you made it back for dinner,\" mom said as she put down her briefcase full of notes. \"So what did you two get up to today?\" \n\nI shrugged. \"Nothing too exciting. \"We went to breakfast, you know that, we went to the mall and got her a new number, you know that part, she got some clothes, uh... I took her to High Park for a while and bought her ice cream and-\" \n\n\"God save us, you could a V-E Day report sound dull,\" mom groused, cutting me off as Alexa bounced back down the stairs. \"Allie, did you have fun today? Because he makes it sound as exciting as watching a hamster swimming in a bucket of thorozene.\" \n\nAlexa smiled brightly. \"We had a good day and he was very accomodating about driving me everywhere and putting up with my zipping around looking at everything. Be nice to him, Karen, it's not like he was taking some girl on a date, how enthusiastic do you expect him to be?\" \n\nDad laughed and mom sighed, accepting her point. \"Alright, I'm sorry, Alex. I am just really hoping to make everything wonderful for Allie and sometimes you have the delivery of Ben Stein.\" \n\n\"My day was very pleasant and I enjoyed his company, Karen.\" Alexa said, walking by me and ruffling my hair as she did so. \"So what's on the agenda for tonight?\" \n\n\"Well, Michael and I are feeling lazy after a long day's grading, so we were just going to order in,\" mom mentioned. \"Should we try that new Moroccan place? They deliver.\" \n\n\"Mmm, I love Moroccan food,\" Alexa said happily. \"I'm in.\" \n\nWe waited for dinner, allowing mom and dad to regale us with tales of some of the worst papers they were grading. Mom could not get over how dumb some university students were, even at a place with a world-standing, like ours had. The food arrived and we laughed and talked while we ate, drinking mint tea to wash everything down. I cleared away dinner and announced my intention to watch some classic games on the Hockey Channel. Alexa told mom she's bought a swimsuit, so if they wanted to use the hot tub, they could. Mom was delighted and rushed to set up and turn on the jacuzzi while Alexa went up to change. \n\nI sat in the living room, watching a classic game from '67 when dad joined me. I got my love of hockey from him and we enjoyed watching games together. We were maybe an hour into the game when dad got a text from mom, insisting that we put on our bathing suits and come join them. \n\n\"She wants us out there with them,\" I said flatly, looking at him. \"How much champagne has she had?\" \n\n\"Enough that I know better than to say no,\" dad sighed, getting up. \"And if you have a brain in your head, you'll learn that women never forget the times you've said no. Think about that and I'll see you out there.\" \n\nHe lumbered off, leaving me to my own thoughts. It was true, saying 'no' to mom was usually not a good idea, but if she was slightly inebriated and genuinely happy, after nearly two decades of missing her sister, then it would be selfish of me to decline. \n\nAnd then there was the whole aspect of seeing Alexa in the jacuzzi again. \n\nI waited until I heard dad go outside and then hustled downstairs to get my trunks on. I went outside and was greeted by the sight of Alexa in her one-piece, sitting modestly on a lower seat to conceal her chest, while mom was sitting across from her, wearing a surprisingly sporty black one-piece that had no sides, with the material tapering in over her midriff and attaching the bottom and top with a chrome ring. Dad was, I can only assume, wearing his habitual shorts, like I would do. \n\n\"Hi, Alex!\" Alexa said brightly, waving. \"C'mon in, water's great!\" \n\n\"Glad to see you, Gollum, if somewhat surprised,\" mom mused, raising her champagne glass in response to my appearance. \"Clamber in, plenty of room.\" They seemed to be on their second bottle of champagne, so dad had graciously brought out beers for he and I to drink. I slipped into the tub, sitting between mom and Alexa, trying to not sit too close to my aunt, however much I wanted to. \n\n\"Alexa was telling us about co-ed bathing facilities in Europe,\" dad said cheerfully as he clinked his bottle against mine. \"Some of 'em are even clothes free, I was thinkin' your mother and I ought to visit a few of them.\" \n\nAlexa giggled while I rolled my eyes. \"I swear, dad, sometimes it's hard to remember you're a Rhodes Scholar and tenured professor.\" \n\nHe grinned. \"I know, right? How awful would it be if I was some dusty old bookworm who wore a jacket with leather elbow patches?\" \n\nI made a face. \"Was that ever a thing?\" \n\n\"I've got a pipe, I could smoke a pipe...\" dad offered. \n\n\"No,\" mom said, a note of finality in her voice. \"We've got that hookah, that's enough.\" \n\n\"I love hookah,\" Alexa exclaimed, clapping her hands. \"Can we all do it at some point?\" \n\n\"That can be arranged,\" mom mused. \"I'd be up for it. None of us smoke, but hookah's different. Heck, Mike and Alex even have Middle Eastern music to listen to while we do it.\" \n\n\"This is so exciting!\" Alexa almost squealed. \"I know how to belly dance! Alex, take me shopping tomorrow and I'll find a belly-dancing outfit!\" \n\n\"Uh... okay.\" I said, trying to sound ambivalent, when I was, of course, completely stoked about the prospect. \n\n\"That sounds fun,\" dad mused. \"Allie, you'll have to show your sister some of those moves for me.\" \n\nMom was going to make a face but squeaked and giggled when dad apparently pinched her ass. I turned my face away and pinched my eyes. \n\n\"Oh, don't be such a stick in the mud, Debbie-Downer,\" mom teased, apparently enjoying her champagne. \"At least make yourself useful and take some pictures of us all, our first time as a familyin the hot tub.\" \n\n\"Total Kodak moment.\" I muttered, taking the cellphone from mom. I took some pictures of her and dad, then her and Alexa together, holding their champagne glasses up and smiling brightly. I got a picture of dad sitting between them with the two women leaning in and giving him kisses on the cheek. \n\n\"How about you and Allie now?\" mom suggested. \"I'll bet there's not a single pic of the two of you acting like a family.\" \n\nIt was hard not to smirk at the statement. Alexa stood up and wandered over to me, sitting me down and then sitting across my lap. I looked rather stunned while she gave the camera her best dazzling smile. Another picture was taken of her kissing my cheek. I, once again, looked nonplussed, whatever might have been happening inside my shorts. Mom took another pic of her kneeling behind me, her arms around my chest and her breasts squashed into my back. Then she sat in my lap, facing the camera with my hands gently around her stomach. She made sure she was subtly squirming down onto my cock and could feel my erection. \n\nMom finished taking pictures and we went back to drinking and discussing the differences she'd noticed between Europe and her new home. Finding out new thing about Alexa was great, even just little things like who her friends had been or how schools had been different in each country. I was initially jealous of all her experiences, but then I remembered the price it had all come at, being deprived of her family. \n\nMaybe it was amazing that she was such a cheerful and positive person. \n\nMom got overheated and was already drunk, so she declared it was time to go to bed. She made some uncharacteristically ribald remarks about what she needed her husband to do to her upon repairing to their bedroom and wished us both goodnight. She clambered out of the tub and sauntered inside followed by my dad who winked at us and declared that we shouldn't wait up for them. \n\n\"Wow,\" Alexa said quietly as she sat next to me in the tub. \"Karen's actually got a not bad figure at all. She sure hides it well.\" \n\n\"I was surprised, I admit.\" I agreed. \"I guess that's why dad's still only got eyes for her.\" \n\nShe quietly looked up at the second floor of the house, as if trying to figure out something. \"That's my room up above us, right?\" she asked. \"Theirs is around and facing the back, isn't it?\" \n\nI nodded. \"Yeah, I just wish I could trust to my dad staying in the room. We've got maybe five minutes before he remembers something he left downstairs, and then he's got a slim window to fuck mom before she passes out.\" \n\n\"Poo,\" she muttered, sighing. \"Well, I guess you'll just have to kiss me for a minute before we get out, won't you?\" \n\n\"Not that I mind, of course...\" I murmured, pulling my lovely aunt to me and kissing her deeply. She melted against my body, humming softly. This was the most natural thing in the world for us both, it seemed, and we could never get enough of it. We finally broke the kiss and she poked my nose. \n\n\"You go down to your room and wait for me there,\" she instructed. \"I'll be down as soon as I know they're asleep.\" \n\nWe got out of the jacuzzi and Alexa wiggled her way inside as I turned it off. I went downstairs and waited patiently, noticing she had turned off her webcam. I laid on my bed and surfed the internet on my phone for some time before I heard you coming downstairs. She was walking quietly but she had shoes on. When she finally sauntered into view- she was wearing her schoolgirl outfit again, her hair done up in curly pigtails and sucking on another lollipop. She was carrying her slim laptop case. \n\nShe strutted past me to the edge of the bed, where she sat down, legs crossed and looking at me pointedly. \n\n\"Daddy...\" she purred. \n\nIt was, quite simply, the most erotic thing I had ever seen or heard in my entire life. She got on her hands and knees and crawled towards me, seduction in her eyes. She sat straddled my legs and swayed back and forth. \"Mmmm, give me music, daddy...\" \n\nI nodded and turned on a trance station on the TV. She moved rhythmically on my lap, her tiny plaid skirt barely covering her womanhood. Her breasts strained against the taut fabric of her knotted shirt. Her hands trailed through her pigtails and her eyes were closed. She cupped her breasts and leaned in, letting me nuzzle her. I was completely rapt by her. She moved her palms over my bare chest, up over my shoulders and neck and then through my hair. Her touch sent thrills through me as she moved with the music. \n\nShe put her hands on my shoulders and looked down at me naughtily while her hips moved. ",
        "\"You taking my ass tonight, daddy?\" she asked in a sultry voice. \n\nStunned as I was, I managed to play along. \"Yes, darling.\" I replied, nodding. \n\nShe smiled wickedly and slid off my lap, setting up our cellphones in two different locations to record us. She also opened her laptop, setting the camera on it to record. She was facing away from me as she did so, leaning down low enough for her skirt to ride up, revealing to me that she was wearing no panties. My cock swelled harder than ever at the sight. \n\nShe walked back over, her hips moving with a seductive swish. \"Let's get those boxers off you, daddy, before you tear right through them...\" \n\nShe crawled over me again, her eyes shining with desire. She was on all fours, her face over my boxers. She leaned down and took the band between her teeth and began to tug slowly. I lifted my hips, allowing her to finally strip them off me. She licked her lips at the sight of my iron-hard shaft. \n\n\"Ooh, daddy, for me?\" she cooed, leaning in again to give me a lick. Her tongue trailed up the underside of my dick slowly, her eyes never leaving mine. She reached the tip and slowly swirled her tongue around it before taking it inside her mouth. She sucked gently on it, sending shivers all the way down to my toes. \n\nAlexa hummed softly as she slid her mouth down the entire length of my cock, deep-throating me. Her fingers gently wrapped around the base and she held me inside her mouth for several seconds. Then she began to bob and down slowly, enjoying herself in driving me wild. My fingers ran through her curly, pigtailed hair. She pulled her mouth off me and flicked the tip of her tongue against the head repeatedly before sliding all the way down again. \n\n\"Mmmm, want to taste my pussy, daddy?\" she asked, smiling up at me slyly as she pumped my shaft with her hand, never leaving it unattended. I nodded and she slowly wiggled her way around, until her amazing ass and pussy were in my face. Since I was sitting back against my bunched up pillows for this occasion, she spread her legs and placed her knees into the pillows, her behind in the air. Beneath that tiny paid skirt, her pussy was already wet and glistened invitingly. \n\nShe moaned as I put my hands on her cheeks and pulled them apart slightly and she leaned back, pressing her gooey slit into my face while she began sucking my cock again. I squeezed and massaged her ass-cheeks while I lapped at her beautiful puss, tasting raspberry in her this time. She certainly had fun with lollipops. \n\n\"Daddy,\" she breathed. \"Make sure my ass is good and wet for you...\" \n\nI nodded and used my fingers to massage her slippery lips, getting her arousal all over my fingers, which I then teased and massaged on her tiny knot. She sighed in pleasure at my touch, feeling me slip a finger inside her to prepare her for my very first intrusion of her ass. I worked it in and around slowly, stretching her a little, hopefully making this easier on her. She squeezed my cock as she squirmed and shivered, my tongue on her clit while I teased her ass. \n\nShe crawled away finally, turning around and crawling back toward me, eyes blazing with lust. She settled onto my lap, her arms on my shoulders, her pussy pressed to my thobbing cock. Her fingers were in my hair, flexing and gripping at me as she fought to control herself. \n\n\"A little warm-up first...\" she murmured, looking into my eyes. She then slid around until she had my cockhead between her pussylips and lowered herself down slowly, exhaling as she took me all the way in. She kissed me deeply and moaned into my mouth as her pussylips met the base of my cock. My hands squeezed her back before sliding down to her ass cheeks, holding her firmly. She moved in gentle circles on my lap, fucking me, squeezing me with her pussy muscles and preparing herself for the main event. \n\nCaressing my face reflexively as she found her rhythm, she stared into my eyes and then rubbed her nose against mine, smiling. \n\n\"Ready, daddy?\" she asked quietly, her lips barely touching mine as she spoke. Without waiting for my reply, she slowly pulled herself off my stiff rod and positioned herself over my cock, which pressed against her ass. I could feel the head touch her little knot. She smiled at me, knowing I was worried about hurting her. \n\n\"This... is going to be awesome, daddy...\" she cooed. Keeping my eyes locked with hers, she pressed down firmly, my cockhead pushing up into her tight ring with a pop. She trembled and smiled wickedly as she slowly lowered herself, hissing as she took me deep inside her ass. She settled her cheeks onto my hips and held still, adjusting to the sensation. Her eyes were closed and she bit her lip. \n\nWhen her eyes opened, they were shining with bliss and she pulled herself against me, kissing me deeply. Feeling her ass tighten around my cock was unbelievable. My hands held her close and we kissed while she experimented with squeezing me. Her fingers flexed on me shoulders. \n\n\"Let me do the work...\" she whispered, beginning to slowly move her ass up and down on me, a little fraction of an inch further each time. The squeeze of that knot up and down my shaft was simply unreal and I moaned as she continued to fuck me. \n\n\"Feels so good...\" she said softly, her cheek to mine, kissing at my ear. \"Daddy, it feels so good having you in my ass...\" \n\nWe kissed again as she established a rhythm and pace we both enjoyed. She moaned into my mouth, her fingernails flexing into my back. Feeling that divine ass press down on my thighs, the incredible, squeezing tightness of it on my cock and her magnificent breasts squashed to my chest was almost more than I could bear. \n\n\"I want you from behind, daddy,\" she purred, smiling slyly now. \"I want you to fuck my ass from behind.\" \n\nI nodded readily and she slowly pulled herself off me, shuddering as I popped out. She placed her hands down on my pillows and knelt on all fours, her ass ready to be taken. I knelt behind her, toying my throbbing mushroom head against the knot before pushing it in gently. It gave way more easily this time and she sighed. As I pushed forward, she moved back until I had sunk in up to the hilt again, buried in her ass. \n\nI gripped her hips and began moving back and forth slowly, watching as my cock slid in and out, glistening. I stared in fascination as her little star pulled back with my cock as if unwilling to relinquish its hot, wet grip on my shaft before I pushed back in again. I heard Alexa moan, feeling her body tremble as I fucked her. I dug my fingers into her cheeks and she gasped, pressing back against me eagerly. \n\n\"Gnnnnn, fuck!\" she grunted. \"Give it to me, daddy... don't worry about being rough, your little girl can take it...\" \n\nI began moving faster, pumping my hips back and forth stronger and faster than I had been before. Alexa responded by groaning and grinding her ass against me, looking back through heavily-lidded eyes, glazed with lust. I knew my parents wouldn't wake up so I smacked her behind and she gasped again, squeezing me tight. I thumped my hips against her cheeks and she pushed back harder. \n\nNeeding to know more about what she liked, I gripped her hair and pulled back, craning her neck. She whimpered and clenched my pillows tightly in her fists. My free hand reached under and played roughly with her breasts, causing her to shudder. She snaked a hand down and began playing with her pussy, teasing her clit and fingering herself as I plowed her ass. \n\n\"Daddy, I'm going to cum soon,\" she said in a soft but trembling voice. \"But I want you one more way, okay?\" \n\nI slowed down and she knelt still for a moment, catching her breath. I slowly pulled back and out and she turned herself over and laid down on my bed, looking up at me. She spread her legs and used her hands to pull her cheeks apart, giving me my target. She waited while I pressed my knob against her knot and then sank in, making her sigh as I slid down inside her once more. When I was all the way in she closed her legs and we both groaned. Holy shit, that made her so tight! My cock was trapped inside her now and I laid on top of her to make sure I didn't pop out. She looked up at me with shining eyes as she put her hands on my back and nodded. \n\nSlow, measured strokes began our rhythm, both of us experimenting with how much I could move inside her ass now. I didn't have the rang I did before, but the incredible tightness because of her legs being nearly closed more than made up for it for both of us. Her hands took hold of my butt while my arms hooked under her shoulders. We stared silently into one another's eyes as we squirmed and moved in unison. \n\nShe pressed her mouth to mine, kissing me hard. Our tongues tangled as we pleasured one another. The tempo of our fucking picked up somewhat but we were both warm, sweaty and trembling now as our climax approached. She broke the kiss and crushed herself to me, panting as she held on, her legs wrapping around my waist. \n\n\"Daddy,\" she whimpered. \"I love you, daddy!\" \n\nHer words sent a delicious chill through me, one I'd swear she could feel and I replied in the spirit of the roleplay, even if my feelings were considerably more involved and confused than that. \n\n\"I love you too, darling. Cum for daddy!\" \n\nShe pressed herself harder against me, panting as she ground into me desperately. I pressed deep inside her, straining my hips for all I was worth. I jammed my lips against hers as we both cried out loudly, the orgasm crashing over us like a relentless tidal wave. I came harder than I thought possible, my cock throbbing as her ass clenched it with a demonic fury. Filling her with my cream, I hammered myself against her. \n\nI collapsed on top of her, panting in what felt like exhaustion. She trembled beneath me, our bodies still tangled and bound together. I kissed her neck and cheek tiredly, reveling in her wonderful scent. Her slow breathing became erratic once in a while, which I completely understood as I tried to catch my own breath. \n\nI felt something wet on my cheek. \n\nI lifted my head and looked into her beautiful face. Her blue eyes were crystalline with tears. I was worried I'd hurt her. \n\n\"No,\" she said, smiling and shaking her head as she read my mind. \"Not at all, Alex. That was so wonderful. Sometimes tears of pleasure can happen too. I want you to remember that for as long as we're lovers.\" \n\nI nodded, trying not to dwell on her words, which made our current relationship sound so... finite. \n\nWe kissed again and snuggled into one another, whispering and caressing without a care. We were both so spent that I drifted away, falling asleep on top of my beloved aunt, still deep inside her. \n\n***"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "romance",
        "aunt",
        "nephew",
        "secret",
        "roleplay",
        "fetish",
        "anal"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/alex-and-alexa-ch-05"
}