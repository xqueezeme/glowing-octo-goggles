{
    "title": "Paparazzi Ch. 02 of 02",
    "pages": [
        "When I left work after learning about Starla's engagement, I decided to drive up to Mulholland Drive again. If ever I needed to do some thinking, now was the time. \n\nAs I watched dusk fall over the city, I tried to get my emotions back under control. \"I know we never went out or anything, but I felt like we had something more than just friendship,\" I thought mournfully. Then I remembered what Starla had said when Kelly left: \"Everybody in this town is acting.\" I guess she was including herself when she said that.\n\n\"I can't believe she's gay!\" I burst out angrily, but then I thought about what had happened to Starla back in college and felt guilty. I couldn't blame her for not wanting a man, not after something like that. It was little wonder that she'd gravitated to women.\n\n\"All men aren't like those animals,\" I objected, but I knew I was rationalizing. \"If Starla is a lesbian, that's just the way it is and I have to accept it,\" I told myself. But I still was upset by the situation and, to be honest, jealous of Hannah.\n\nLater, as I drove home in the darkness, my only consolation was that I hadn't tried to ask Starla to go out on a date. \"That would have been truly humiliating,\" I thought.\n\nI felt really awkward the next day when I went into work, but I forced myself to stick my head into Starla's office. I still wanted to remain friends with her, even though that friendship had now become a source of pain. \"Listen,\" I said, \"I'm sorry I was so spaced out yesterday when you told me about you and Hannah. I'm really happy for you. You just caught me by surprise.\"\n\n\"I understand,\" she said apologetically. \"I should have said something sooner. It's just that it all happened so quickly that I never got the chance.\"\n\n\"That's OK,\" I reassured her. \"I'm just glad you've finally found your white knight. So is she going to take you away from all the California craziness?\"\n\nStarla's face lost its smile momentarily. \"Oh, that was me just being romantic or immature or something. No, Hannah is an attorney who's really making a name for herself on women's issues. In fact, people are starting to mention her name for political office here in California, and I know she has ambitions in that direction. Given all that, I think I'm here for the duration.\"\n\nI felt badly that my off-hand remark had made her uncomfortable. \"Hey, that's great,\" I said hastily. \"As long as you're happy, that's all that matters.\"\n\nShe smiled in gratitude. \"Thank you, David. That means a lot to me.\" Then she looked down at some papers on her desk. \"Hey, a new assignment has come in. Want to take it on? This one should be a piece of cake for you.\"\n\n\"What have you got?\" I asked with interest. Once again, the idea of having something to take my mind off my love life -- or lack thereof -- sounded good.\n\n\"One of the big weeklies wants to do a 'Where Are They Now' feature,\" Starla explained. \"They've got a good size list of names, but all it should take will be a little research.\"\n\nIt's an old standby. From time to time publications like to run features on actors and other personalities who were famous once but have since faded from the scene. Fans love to find out where their old favorites are now and what they're doing. This assignment wouldn't be as challenging as some, but it would take a little time to track everyone down and get their pictures. That would get me out of the office and away from Starla, so I decided to take it on.\n\nFor many of the ex-celebrities on the list, my task turned out to be no more difficult than contacting their former agents. Many of the agents had kept up a relationship with their old clients, and most of the clients were delighted to get a taste of the spotlight again, even if only a fleeting one. But a few seemed glad to have left the past behind, and those it took me a little work to track down. I found one former soap opera star who had moved to Encino and now owned a small organic farm. She wasn't particularly interested in rehashing her past, but I managed to get some good shots of her in her fields.\n\nBut there was one guy, a former rock star named Billy Badly, who seemed to have dropped off the radar screen altogether. He'd had a couple of big hits in the early 90's, along with a couple of run-ins with the law. But unlike so many other flashes in the musical pan, Billy hadn't tried to milk his fame through endless oldies concerts and reunion tours. He'd simply dropped out of the scene, cut all ties with his label and his agent, and disappeared.\n\nI guessed that \"Billy Badly\" wasn't his real name, and an old article in Rolling Stone revealed he was born William Atkinson. I used that name to check the tax rolls and found seven William Atkinsons who owned property in L.A. or the surrounding area. \"Just my luck,\" I thought resignedly, as I set out to check each one.\n\nThe next day I was able to rule out five of the Atkinsons on my list, but the last two were way on the other side of the city. So the following day I reluctantly set out for the next address, which was all the way out in Topanga Canyon. I steered my old Toyota west onto US 10, took the exit for the Pacific Coast Highway, and then headed north on Highway 27. That's when things started to get interesting.\n\nOnce I got to Topanga, I thought I'd found the correct turn-off, but I was soon maneuvering through a series of sharp switchbacks along a steep slope. I was just about to turn back and retrace my route when I rounded yet another blind curve and saw a frightening sight. A small pick-up truck had apparently lost control on the loose gravel and spun out. Its rear wheels were now dangling over the side of the canyon. The driver had panicked and was frantically gunning the engine, spinning the wheels in a vain attempt to get back on the road.\n\nI pulled over to the side and rushed to the pick-up. The woman driving had the steering wheel in a death grip, her eyes wide as saucers. \"Get out of the truck,\" I yelled, but she didn't budge. \"You've got to get out,\" I yelled again, \"it's going to go over the edge.\" Still she sat there pumping the gas pedal.\n\nIn desperation I yanked open the door and grabbed her arm. \"Come on, now!\" I yelled, and this time she looked at me with a startled expression as though she couldn't understand how I could be standing there. I gave a harder tug on her arm and she let go suddenly so that I yanked her out of the car and down on the ground on top of me. I scrambled to my feet and helped her up, trying to get us both away from the precariously perched vehicle. But instead of retreating to safety, she started back to the truck, which was teetering ominously now that the weight was gone from the front seat.\n\n\"No, get away from the truck,\" I said, trying to pull her to safety, but she screamed, \"My baby!\" and I gasped in dismay. I grabbed her by the shoulders and held her still. \"Wait here,\" I ordered and then ran to the truck cab, desperately looking for her infant. I couldn't see a carseat, bassinet or any other evidence of a baby on board, but then a flash of white in the footwell of the passenger side caught my eye. It was a small dog!\n\n\"You're going to die,\" I thought as I flung myself across the bench seat and grabbed for the terrified canine. It nipped at me but I managed to grab its collar and jerk it toward me. Then I scrambled backwards out of the cab and fell to the pavement just as the truck began its inexorable slide off the road and down the canyon. The open door must have passed only inches from my face as I lay on my back.\n\nI lay there for a minute, shaking from the close call. The woman seemed to have recovered her senses; she came over and plucked the dog out of my arms. \"Oh, Baby, are you okay? You had me so scared!\" she crooned to the little dog, which licked her face eagerly.\n\nFinally I sat up and the woman seemed to notice me for the first time. \"Gosh, mister, are you all right?\" \n\nI nodded as I got to my feet, and she came over to me, threw her arms around my neck and began to rain kisses on me. \"You saved Baby,\" she said breathlessly. \"He could have been killed.\"\n\nI gently pushed her away so I could dust off my pants. \"So could you,\" I thought, \"and so could I, for that matter.\" But I kept those thoughts to myself because I didn't want her to freak out again.\n\n\"Listen,\" I said, looking down into the ravine, \"there's no way we're going to get your truck out of there without a wrecker, assuming it's even salvageable. Do you live around here? Can I take you home?\"\n\nHer face fell immediately, and I thought she was going to break into tears. \"Oh, gosh, Billy is going to be so mad at me.\"\n\n\"It's alright,\" I tried to reassure her. \"It was an accident; there wasn't anything you could do.\"\n\n\"No, there wasn't,\" she sniffled. \"It wasn't my fault.\" This thought seemed to brighten her mood considerably, and when I pointed toward my Toyota and again offered to drive her home, she accepted.\n\nAs she directed me along the steep, winding roads, I took the opportunity to look her over out of the corner of my eye. Now that the emergency had passed, I could see that she was maybe 30 years old and very attractive. She was wearing a t-shirt that made no pretense of hiding the size of her bosom. A pair of abbreviated shorts and flip-flops were her only other apparel. I decided my luck was even better than I'd thought when I avoided going over the cliff.\n\nShe introduced herself as Bitsy Baker, and when I told her I was David Cowan she smiled and stuck her hand out: \"Pleased to meet you, David.\" I asked what she did for a living and she replied, \"Oh, I'm the housekeeper for Billy Badly.\" No sooner had she said that than she clapped her hands over her mouth and looked at me guiltily. \"Oh, no, I'm not supposed to tell anybody. Billy made me swear never to tell a stranger about him or where he lives.\"\n\nThen she looked over at me and her shoulders relaxed a little. \"But you saved Baby's life, and now you're driving me home, so I guess that means you're not a stranger, right?\"\n\nI smiled and reassured her that we were old friends. \"Besides, I used to be a big fan of Billy's,\" I told her truthfully. \"So how did you come to be his housekeeper?\"\n\n\"I was his groupie,\" she said blithely. \"I used to go to all his concerts and sleep with him and everything, and after a while he just took me with him wherever he went. When he quit the band and bought this place in Topanga, he brought me with him.\"\n\nAs she said \"this place\" she pointed to a gravel road that veered off through a copse of scrub bushes. I turned where she directed, and once we were past the copse we had to stop at a gate. Bitsy hopped out, punched in a combination and the gate swung slowly open to admit us. I hadn't seen a mailbox or any other sign that there was anything back there, but when I rounded a low hill I spotted a large house with several smaller buildings spread out around it. She directed me to a small cottage at the far side of the cluster. \"That's where I live,\" she said brightly.\n\nI looked back at the big house and she caught my glance. \"That's Billy's house,\" she explained. \"I go up there and clean it every time he goes out of town, or when he's home and horny,\" she went on matter-of-factly. \n\n\"Okay,\" I said cautiously, \"so should we go let Billy know what happened to the truck and that you're alright?\"\n\n\"We can't do that,\" she said. \"He and his friends are down in Mexico again and won't get back until after dark. They're always going down there -- I think Billy has friends in Tijuana or something. I'm here all alone, but I'm used to it.\" She smiled at me. \"Would you like to come in and have a cup of coffee?\"\n\n\"Sure,\" I said, hoping to learn more about Billy's post-rock lifestyle.\n\nBitsy's cabin was cozy but pleasant enough. While she set about brewing some coffee, I took the opportunity to look out the window at the rest of the compound. In addition to the main house there was a large detached garage as well as what appeared to be a storage building. Now that I looked more closely, I realized that the entire compound was surrounded by a tall chain-link fence topped by concertina wire, and there were several poles with security cameras mounted on top.\n\n\"Very interesting,\" I thought to myself. \"It looks like Billy really likes his privacy.\"\n\nBefore I could continue that train of thought, I heard Bitsy clear her throat behind me, and when I turned around I caught my breath. While I had been looking out the window, she'd managed to strip off her clothing and was standing there in all her glorious nudity. I'd been right about her breasts -- they were a work of art: high, firm and full. A slow scan down her body revealed that housekeeping apparently gave her all the exercise she needed. She was toned and fit, with a surprisingly slim waist above womanly hips and long legs, the junction of which displayed that she was completely shaved.\n\n\"I really haven't thanked you properly for saving Baby's life,\" she said with a purr and that subtle smile that women have when they know they have a man where they want him.\n\n\"Bitsy, you don't have to . . .\" I tried to protest, but she stepped forward and put her fingers over my lips.\n\n\"But I want to,\" she said, \"I really want to. It's been a long time.\" Then her fingers were working on my shirt, and once she had successfully removed it she quickly dispensed with my pants, shoes and boxers. Then she pushed me backwards until my knees hit the sofa and I plopped down where she wanted me.\n\nShe sank to her knees and quickly leaned forward to take my rapidly growing cock into her mouth. In seconds I was at full length, and then I gasped as she slid it all the way down her throat without even a pause. I let my head fall back and my eyes close because her lips, tongue and throat muscles were doing things I'd never experienced before. I'd thought that Kelly gave a good blow job; Bitsy made her seem like a nervous virgin.\n\nJust as the sexual tension began building within my body, Bitsy pulled off of me. I started to try to return the favor, but she'd have none of it. Quickly she crawled up onto my lap, grabbed my cock in her hand and began aiming it at her now-gaping pussy. I saw that she was literally dripping with anticipation, and the instant that she found the right angle she thrust her hips forward, impaling herself on me all the way.\n\nI pride myself on being able to go slow and delay my own orgasm so that I can be sure to bring my partner off. But it was clear from the start that Bitsy was in charge of this fuck and that she had no need for foreplay. Once she was fully seated with me buried to the hilt, her hips took on a rapid, almost frantic motion, and she began to gasp and moan. \"Oh yes, oh yes, oh yes!\" she cried, and I couldn't help but think I knew why Billy had kept her around for so long.\n\nShe put her arms around my neck to steady herself, and that put those magnificent breasts right in front of my face. I reached up with my hands to steady them, and then held them each in turn to my mouth, first to kiss and suck on them, then gently to bite the nipples. She squealed as though an electric current was flowing from her nipples to her pussy and managed to accelerate the motion of her hips as she ground against me.\n\nThe fact that I hadn't gotten laid since Kelly left plus Bitsy's obvious excitement drove me to a higher level of need than I could ever remember. In an instant I spun her around so that her back was on the couch. I grabbed her legs and raised them over my shoulders so that she was bent almost double. Then with a roar I began to pound into her as hard and as fast as I had ever fucked a woman.\n\nHer need and mine had us on the brink in no time. She suddenly arched her back and gave a loud scream just as I came inside her. Her pussy continued to quiver with mini-contractions even after I let her legs fall and slumped against her in exhaustion.\n\nWe rested like that for several minutes before I rolled off of her. She pulled my mouth to hers and gave me a sweet little kiss. \"Oh, wow, David,\" she said, \"that was wonderful! I don't think anyone has ever fucked me so hard. I really needed that.\" \n\nThen, to my amusement, she went over, picked up her dog, brought it over and held it to my face while it gave me several licks. \"Baby wants to thank the nice man too,\" she said in a childlike voice. I'm not really a dog person, but I told myself I'd gladly endure a few dog kisses for the chance to have Bitsy express her gratitude again.\n\nAfter assuring myself that Bitsy would be alright and urging her to contact her insurance company about her truck, I started the drive back home. As I left, I carefully noted the surrounding landscape and the route to Billy's canyon retreat because I planned to return the next day when Billy should be home.\n\nThe next morning I dropped by the office to give Starla the other \"Where Are They Now?\" shots I'd gotten. When she asked about Billy, I decided not to give her a full account of my day's adventures with Bitsy but I did tell her I'd managed to find where Billy lived and hoped to get shots of him that afternoon. \n\nShe nodded and then pulled out a copy of a popular celebrity weekly magazine. \"I thought you might like to see an advance copy of this, since it has your work in it,\" she said with a wink. Sure enough, there on the cover was one of my photographs of Micki Morningstar embracing the bad boy with whom she was supposedly cheating. I turned to the text and there in breathless prose was the story Sal had concocted about her affair.\n\nI thought about what was really going on and chuckled derisively. Starla had been watching my face, and when I laughed she said, \"I thought you might get a kick out of this.\"\n\n\"So when do we release the shots I took of Micki and Sal together?\" I asked her.\n\n\"We'll want to wait until part two of Sal's little fiction comes out,\" she advised. \"The true story will have the greatest impact then.\" I smiled -- this was going to be good.\n\nOver lunch we continued to discuss the surprise she had planned for Sal and Kelly. As I'd hoped, Starla knew just how to work it for maximum impact. At first I was amped up, but as we continued to talk, my enthusiasm began to wane. The problem was Starla: watching and listening to her I couldn't help wishing things could be different. I knew now she preferred women over men, so I had to accept that nothing would ever happen between us. But the truth didn't make her any less attractive to me. I felt like the mythical Tantalus, forever craving the sumptuous fruit hanging above him but never able to grasp them. Being around Starla was torture, and like Tantalus I couldn't seem to escape it.\n\n\"So,\" I asked casually, \"is everything going OK with you and Hannah?\"\n\n\"Of course,\" she snapped at me. \"Why wouldn't it be?\"\n\n\"No reason,\" I said hastily. \"I was just trying to make conversation.\"\n\nHer shoulders relaxed a little. \"Sorry I bit your head off,\" she apologized. \"It's just that Hannah seems to want me to attend every meeting and rally she goes to, and I'm a little stressed about it all, what with work and everything else going on.\"\n\n\"Sure, sure, I understand,\" I reassured her. Once again I mentally kicked myself for upsetting her. I guess brides-to-be have a lot on their minds that guys don't understand. I vowed to myself not to bring up the subject again and got out of her office as soon as I could.\n\nI waited until after lunch to set out again for Topanga Canyon. Most celebrities aren't morning people and I didn't want to get off on the wrong foot by waking Billy. As I drove I kept thinking about his compound. It's not all that unusual for celebrities to protect their privacy, but Billy's set-up seemed excessive to me. Something wasn't right.\n\nConsequently, when I finally arrived at the canyon I pulled off the road a hundred yards away from the entrance to Billy's place. From there I made my way across an open field, keeping a hill between me and the compound. When I reached the crest of the hill I lay down among the tall grass and scrub bushes and used my long lens to try to get a read on what was going on down there. ",
        "First I trained my lens on Bitsy's little bungalow, but there was no activity there. Then I turned to the main building. Parked outside the house today was a large SUV. When I shifted my focus I spotted two panel vans now parked in front of the garage. As I watched, several men appeared to be unloading bundles out of the vans and moving them into the storage facility I'd spotted earlier. Then, another man walked into view. He appeared to be supervising the others, but what really startled me was that he was carrying what looked like an assault rifle. I kept shooting pictures, wondering what in the hell Billy had gotten into.\n\nSuddenly I felt a knee come down hard between my shoulder blades, pinning me to the ground and knocking the wind out of me. As I lay there gasping, I felt the barrel of a pistol press against my ear.\n\n\"Alright, asshole, keep your mouth shut and crawl backwards,\" came a harsh voice, and I hastened to comply as soon as I regained my breath. Once I was below the crest of the hill, a hand grabbed my shoulder and roughly turned me over. I saw a large man standing over me with an automatic pistol pointed at my chest.\n\n\"Who the fuck are you and what are you doing here with that camera?\" he demanded.\n\nI started to reach for my wallet, but a waggle of the gun in my face stopped me cold. \"I'm just reaching for my I.D.,\" I assured him, and slowly pulled my wallet out of my back pocket. All the while his eyes watched me carefully for any wrong moves. He took my wallet gingerly, then stepped back and scanned the photo I.D. the photo agency had provided me. After a minute he grabbed a phone from his belt and pressed a button. \"Hey, Jim, I've got a snoop up here.\" \n\n\"Roger that,\" came a voice from the speaker, and in a few minutes a second figure came jogging up the hill. This fellow was wearing a navy blue windbreaker with the letters DEA stenciled over the heart. The first man used one of those plastic slip bands to handcuff me; then the two of them marched me down the hill toward a ravine where a car I hadn't noticed before was parked. They shoved me into the back seat, took my wallet and walked away to make a few phone calls.\n\nAs I sat there uncomfortably, it didn't take much imagination for me to make a reasonable guess about what was going on. It looked like Billy Badly had switched from playing rock and roll to running drugs as the way to finance his lifestyle. That would explain why he had so much security around his compound and why he made so many trips to Mexico, I thought. I couldn't help but give an ironic laugh. Unless I missed my guess, the answer to \"Where Are They Now\" for Billy was likely to be federal prison.\n\nJust then one of the agents came back to the car, opened the door and pulled me out. Taking a folding knife from his pocket he cut the plastic ties around my wrists. Then he turned me to face him.\n\n\"Alright, Mr. Cowan, your story checks out and you're free to go. But I advise you to leave the area immediately. This is not a place where you want to be.\"\n\n\"Yeah,\" the other guy chimed in, \"especially tonight.\"\n\nThe first agent whipped around to glare at his partner, who looked appropriately chagrined. I wanted no part of their little spat and quickly assured them I would leave as soon as I got to my car. They watched me carefully as I clambered down the hill and walked along the road to where I'd parked. In my rear view mirror I could see them still watching as I drove away.\n\nI realized I was heading into the town of Topanga, and when I spotted a coffee shop I pulled in to let the adrenaline subside. I didn't like having a gun shoved in my face -- that wasn't part of the job description as far as I was concerned -- and I sure didn't want to be anywhere near Billy's place tonight. From the sound of it, the Drug Enforcement Agency was planning to stage a raid on the compound, and I wanted to be far away, especially given that the people inside appeared to be heavily armed. \"Damn,\" I thought, \"one minute you're trying to take a photo for a soft feature and the next you're in the middle of a major drug bust!\"\n\nI thought back to how this whole mess had started, and suddenly I sat bolt upright. \"Oh, shit, I forgot all about Bitsy!\" A part of me argued that she'd made her choices and I should stay out of it. But another part of me knew that poor, airheaded Bitsy likely had no idea what she'd gotten herself into. \"She could get killed if I don't warn her,\" I thought.\n\nIt's a bitch having a conscience. I really didn't owe Bitsy anything, but all the same I felt responsible for her. If it was worth pulling her out of her truck, I said to myself, it's worth trying to get her out before a firefight starts around her. Shit, shit, shit!\n\nFinally I made up my mind. It was already late in the day, and the canyons and ravines made the darkness come on quicker. When I felt the light had faded enough to afford me some cover, I headed back down the highway toward Billy's place, cursing myself for a fool every mile that I drove. \n\nThis time I parked even farther away to begin my hike. I knew I had to stay low and out of sight, but at the same time if I didn't hurry I might arrive too late. Finally I spotted the dry creek bed that I'd remembered from my earlier visit. I hoped it would provide me enough cover to let me approach the compound without being spotted, either by the DEA or by Billy's men. Equally important, I'd noticed that at some time -- maybe in the rainy season -- the creek had washed under the chain link fence, leaving a gap. Now I thought I could wriggle under it to get into the compound.\n\nBy the time I got under the fence the temperature had dropped significantly and I felt myself shaking. Or maybe that's just fear, I thought. Regardless, I continued to creep toward Bitsy's little cabin, hoping that the DEA was focused on the main house and that there were no guards around.\n\nI crawled the last twenty yards to Bitsy's place and quietly knocked on the door from a kneeling position. When she opened up, I scrambled inside and quickly pushed the door shut behind me. \"Bitsy,\" I said urgently, \"you've got to get out of here right now!\"\n\nShe just stared at me. \"What are you doing here?\" she asked. \"Billy was so mad when he found out you'd been here yesterday. I don't what he'd do if he caught you here now.\"\n\nI looked at her and suddenly realized that her left eye was black. \"That bastard,\" I began to curse, but before I could say anything else the door behind me burst open and the biggest Latino I had ever seen came bursting in carrying an assault rifle. \"Who the fuck are you, gringo?\" he yelled, and Bitsy gave a little scream of fear.\n\nI slowly lifted my hands to show him I was unarmed and said, \"Hey, I'm just a friend of Bitsy's who came to pay her a visit.\"\n\n\"How the fuck did you get through the gate?\" he demanded. But before I could reply, we heard voices shouting outside. Suddenly an intense spotlight swept over the camp and we could hear an eerie amplified voice on a loudspeaker: \"This is the U.S. Drug Enforcement Agency. We have you surrounded; come out with your hands on your head and you will not be harmed.\"\n\nThere was absolute silence for a second, then a hail of bullets rang out and muzzle flashes could be seen in the darkness where the spotlight didn't reach. The big Latino strode over to the window and used the butt of his rifle to smash out several panes. \"Fucking Feds!\" he shouted at the top of his lungs and began to fire his weapon, apparently trying to knock out the spotlight.\n\nI turned to Bitsy. \"Get down!\" I yelled, trying to pull her to the floor, but she struggled with me. \"Where's Baby?\" she yelled, \"I've got to find Baby!\" I grabbed her by the shoulders and thrust her behind me just as a fusillade of shots hit the bungalow. I turned back around to see what happened and something that felt like a baseball bat hit me in the head. I was knocked back onto Bitsy and lapsed into unconsciousness.\n\nWhen I regained my senses, I couldn't move my arms or legs. \"Where am I?\" I asked in a voice that sounded more like a croak than the yell I'd intended. A hand gripped my shoulder. \"You're strapped to a gurney in an ambulance,\" a voice said reassuringly. \"You're on your way to Woodland Hills Hospital.\"\n\n\"I guess that means I'm not dead yet,\" I thought, and drifted back into unconsciousness.\n\nThe next time I woke up, the lights were so bright that they hurt my eyes. But I couldn't do much about it because a doctor in a hospital coat had peeled my eyelids back and was peering intently at my pupils. Finally he let me be and began to make notes on a clipboard.\n\n\"Where am I?\" I asked groggily. \"What happened?\"\n\nHe glanced at his clipboard again and then gave me an odd look. \"I hope you bought a lottery ticket today,\" he said, \"because you are definitely the luckiest man I ever met!\"\n\nI looked at him as though he was crazy. \"I don't understand,\" I said. \"What happened?\"\n\nHe got a little more serious now. \"What happened, Mr. Cowan, is that you were shot in the head by what we think was a 9x19 parabellum round. Fortunately for you, before the bullet struck you it apparently was slowed substantially by the sternum of the man who was holding you hostage. Then that same bullet shattered the fourth rib in his back, thereby losing almost all the rest of its velocity before it ricocheted into your forehead.\" \n\nHe shook his head. \"I don't know many people who have survived a headshot like that, Mr. Cowan, so I'd advise you to buy that lottery ticket now.\"\n\nI guess he thought he was being clever, but I wasn't in a humorous mood. \"My head hurts like hell,\" I told him.\n\n\"That's to be expected,\" he said matter-of-factly. \"You have a mild concussion. We're going to keep you here overnight for observation, but my guess is you'll be able to go home tomorrow. Now, if you'll excuse me, I have to go check on the status of some other patients who weren't nearly as lucky as you.\"\n\nHospitals are still as unpleasant as they used to be, and I was delighted when they checked me out the next morning. I took a cab back to my car and was pleasantly surprised to find it where I'd left it the night before. As I began the drive back to L.A., my head still hurt, but the analgesics they'd given me took care of the worst of the pain.\n\nOn the freeway I thought about what had happened. \"That has to be the stupidest thing you've ever done,\" I scolded myself sternly. \"Whatever possessed you to go back for . . .\" The minute that thought came to me I realized that I didn't know what had happened to Bitsy.\n\nAs soon as I reached the office I went to my desk and called the hospital, but they had not admitted anyone by that name. Then I tried to call the local DEA office, but all I got was a series of automated prompts, none of which was helpful. I sat on hold for fifteen minutes waiting for \"one of our representatives\" to come on the line. Finally I gave up; all I could do was hope that Bitsy was O.K.\n\nI grabbed my camera bag and went in to see Starla. \"Oh my god, David, I'm so glad you're OK!\" she cried when I walked in her office. \"I've been trying to call you all morning.\" She came around the desk and hugged me. I felt a little faint -- I guess it was the after-effects of the concussion.\n\n\"Thank God you didn't get to Billy Badly,\" she said breathlessly. \"I heard on the news that the DEA raided his home last night and there was a huge shoot-out. Billy was killed and so were several other people. David, they found a huge stash of marijuana!\" \n\nFear gripped my heart. \"Did they say who else was killed?\" I asked. \"Was one of them a woman? Did they mention the name 'Bitsy Baker'?\"\n\n\"No,\" she said, looking at me oddly. \"Who is Bitsy Baker and how do you know her?\" Before she could go on, she noticed the bandage on my forehead. \"What happened to you, David? Have you hurt yourself? Are you OK?\"\n\n\"Actually, I did find Billy,\" I told her, and sat down to explain that Bitsy was Billy's housekeeper and that she'd showed me the way to Billy's compound. I'd gone back yesterday to try to get my photos because Billy was out of town --on a drug run as we now knew. I deliberately omitted the details of the raid and how I'd hurt my head because I didn't want to her to hear how foolish I'd been. Before she could ask more questions, I tried to divert her.\n\n\"Hey, do you think there'd be any market for some photos of Billy's compound?\" I asked innocently. With that I pulled out my camera and showed Starla the photos I'd taken from the top of the hill. \"These are amazing!\" she said in wonder. \"You can see people unloading the marijuana from those vans, and that looks like an armed guard. Let me start making some calls right away.\"\n\nWith that she grabbed her phone and I slipped out the door. Even though my head was still hurting, I felt that pleasing Starla pretty much made up for all the hassle of getting shot and everything.\n\nWhen I got off from work that afternoon, I planned to turn in early because I was exhausted from my previous night's adventure. But somehow I found myself on Mulholland Drive again. As I sat watching the twinkling lights of the city, I felt myself beginning to shake. I knew what was happening -- a delayed reaction to my brush with death -- and it started me thinking.\n\n\"Why are you still in this town?\" I asked myself. \"You hate this job and you hate this crazy make-believe world out here. The only reason you came to L.A. in the first place was because of Kelly, and look what that got you. Now you've gone and almost gotten yourself killed trying to help some ditz too dumb to know she was living with a drug lord. You're an idiot!\"\n\nBut I knew I didn't mean it, at least that part about Bitsy. She might be an airhead but she didn't deserve to die in a drug shoot-out. Hell, there weren't many things in my life I felt good about these days, but trying to save Bitsy was one of them -- assuming she'd lived.\n\nNevertheless, as I drove back to my apartment I was still pretty down. I felt trapped in a world that I detested, one where I didn't fit in and where there was nothing and no one to keep me. Well, there was . . . \"No,\" I told myself, \"don't go there.\"\n\nThe next day when I got into work, Starla was beaming. \"You must have had good luck with those photos of Billy's place,\" I said when I saw how pumped she was. Instead of replying, she spun around to her computer and called up a website. \"You're golden, David,\" she exclaimed, \"look at this.\" When she rolled her chair out of the way, I saw one of my photographs of Billy's compound on the front page of a newspaper. I checked the masthead: it was The New York Times!\n\n\"You scooped everyone!\" she said triumphantly. \"We sold your photos to the AP; now every newspaper and television network in the country is running them.\" She gave me a wry smile. \"If we're not careful, this agency is running the risk of turning legit.\"\n\nAfter we'd looked at some other news sites carrying my photos, she took on a more thoughtful expression. \"I've got some other good news for you. Some people I know tell me that stage two of Sal Manucci's publicity plan for Micki Morningstar is scheduled to go live this week. Once it's been launched, that will be the perfect time to set off your little bombshell.\"\n\nShe looked at me carefully. \"I know you want payback on Sal, but unless I miss my guess, the backlash is going to take down Kelly as well. Are you sure that's what you want? There's another way to work this. You don't have to pull a Sodom and Gomorrah -- all you'd have to do is show the pictures you've got to Kelly. That should put an end to her relationship with Sal, and she might be willing to give it another try with you -- if you're interested.\"\n\n\"No,\" I said without hesitation, \"she made her choice and choices have consequences.\" \n\nStarla was still watching me, so I tried to elaborate on how I felt. \"Marriage means a lot of things, but for me one of the most important is caring about your partner as much as yourself. Once you stop caring about the needs of your partner, you no longer have a marriage. Kelly made it very clear that she was going to go after what she wanted, and she didn't care what happened to me. Why would I ever want to get back together with someone who felt that way?\"\n\nStarla nodded thoughtfully. \"I agree, David, I just felt I should check. Leave everything with me.\" <center>- - - - - - - - - - - - - - - - - - - - - - - -</center> Two days later, Starla had a copy of a weekly celebrity magazine on her desk. The two-page photograph above the cover story showed Micki Morningstar cuddling with her old boyfriend under a banner headline that read, \"Reunited: All is Forgiven\".\n\nThe story went on to detail how contrite Micki was about her fling, how she felt she had let down her fans -- not to mention her boyfriend -- and how she had learned from her mistake. \"I've grown so much from this whole experience,\" she was quoted as saying, \"and I'm going to devote myself to making our love stronger than ever.\"\n\nThe online version of the magazine even featured a live poll that Micki's fans could take. The running count showed the vast majority had forgiven her for her sins and hailed her return to her boyfriend's side.\n\nStarla was keyed up. \"I know the head of programming at the network that carries Micki's TV series. I think he'll be very interested in the pictures you took of MIcki and Sal.\" She gave me a smile that was positively evil. \"We've got them now,\" she said with such relish that I winced involuntarily.\n\nFrom what I learned later that day, wincing was the least of what happened after Starla sent the network some of my better shots, both from the cottage and the Emmy party. Starla explained to them sweetly that she planned to offer the pix to the highest bidder, and when the network executive saw them he nearly had a heart attack. After a hurried consultation with the president of the network and their legal staff, the head of programming called Starla back to offer her a small fortune in exchange for exclusive rights to the photos.\n\n\"Of course they'll destroy them immediately,\" she told me with a smirk, \"because they know that if those shots get published that would be the kiss of death for Micki's career. Fans don't like to be lied to, and once they turn on you, there's little chance of getting them back. If people found out that Micki's reconciliation with her boyfriend was a sham, the network would have to cancel her show in mid-season. It would be a financial disaster,\" she explained gleefully.\n\n\"But what about Sal and Kelly?\" I protested.\n\n\"Oh, I'm just getting started,\" she said with that evil grin again. \"Once the network took care of the incriminating photos, their next step was to call the head of Sal's agency on the carpet. I'm told the network president threatened never to use another one of the agency's clients again. The agency president literally got down on his hands and knees to beg for forgiveness, promising to make it right if they'd just give them another chance.\"\n\n\"My source told me that as soon as the president got back to the agency, he called Sal into his office, showed him the incriminating photos and accused him of almost destroying the agency. With the evidence in front of him, there was no way Sal could deny that he'd acted recklessly and inappropriately. As a result, Sal was fired on the spot and told that he might as well leave town because he'd never get a job in Hollywood again.\"\n\nStarla rocked back in her chair. \"After Sal was dismissed, the agency president called Kelly in and accused her of conspiring with you,\" she said, pointing at me, \"to get those photos. He figured that someone must have tipped you off, and Kelly was the most likely suspect. Kelly swore it wasn't true, but when she had to admit that the two of you are still legally married, her fate was sealed. She was fired too, and good luck to her on finding work in this town with that on her record,\" Starla said with a grin.",
        "\"Oh,\" she added, \"and in case you're wondering, Sal apparently is also convinced that Kelly ratted him out to you because she was jealous about Micki, so the two of them are splitsville as well.\"\n\nI grinned back at her in a mixture of admiration and appreciation. \"Wow, now that's a Sodom and Gomorrah payback! You're the best, Starla,\" I told her. \"Now I guess I can go ahead and drop the signed divorce papers in the mail.\"\n\nI went back to my cubicle feeling satisfied about the way things had turned out. They'd both gotten what they deserved, and they did it to themselves. All I did was expose the truth. They made their choices, and choices have consequences.\n\nAs I sat there thinking, my cellphone rang, and when I answered it a voice came on the line I didn't recognize. \"David, this is John Kirby calling. I'm the dean of Arts and Sciences at Sewanee. I hate to be the one to tell you, but your father has suffered a stroke and he's not expected to last long. You need to get back here as soon as possible if you want to see him.\"\n\nStarla smiled when I walked back into her office, but a look of alarm came over her when she saw my face, and she rushed to my side. \"David, what's happened? What's wrong?\"\n\n\"It's my Dad,\" I told her forlornly, \"he's dying.\" <center>- - - - - - - - - - - - - - - - - - - - - - - -</center> Nashville is the closest major airport to Sewanee, and it's a long flight from L.A., especially with having to make a connection in Dallas. On top of the flying time I lost an additional two hours since I was heading east. So it was pretty late when I touched down; nevertheless, I immediately grabbed a rental car and started the ninety-five mile drive to Sewanee.\n\nThe dean had told me my Dad had collapsed at the end of his lecture. That was good, I thought as I drove, he'd have wanted to finish the class. They'd taken him straight to Emerald Hodgson Hospital.\n\nIt was after visiting hours when I got there, but under the circumstances they made an exception for me. The doctor warned me, but it was still a shock to see the slack expression on Dad's face as he lay there. Even though he appeared to be asleep, I took his hand in mine and held it. \"I'm here, Dad,\" I whispered in his ear, and I thought I felt his grip tighten momentarily. \n\nI sat there by his bedside holding his hand, and after a while I laid my head down on the blanket beside his leg. I must have fallen asleep because the next thing I felt was a nurse gently peeling my fingers away. \"I'm sorry, Mr. Cowan,\" she said, \"he's gone.\"\n\nThe memorial service was held at All Saints' Chapel, of course, and I was touched to see the sanctuary filled to overflowing with students, faculty and family friends. My dad had taught philosophy at the University of the South over thirty years, and there were many people who wanted to say a few words about how he'd touched their lives.\n\nThere was no burial because he'd told me long ago that he wanted to be cremated. \"From dust we come and to dust we return,\" he'd said, \"and I see no reason for worms and maggots to be involved in that process.\"\n\nAfter the service was over and all the well-wishers had finally left, I took the urn with his ashes and drove past Monteagle through Tracy City and on to Foster Falls. Standing at the top of the falls I tipped the urn over and let the ashes spill out into the swiftly flowing water of Gizzard Creek down into the foaming pool below. He'd wanted to be reunited with the lands and waters he'd hiked and explored all those years, and it comforted me to carry out that request for him.\n\nAfterwards, I drove back to Sewanee to the home where he'd lived for so many years. It was nestled on an acre of land at the end of a road that penetrated deep into the woods. Even after Mom passed away, Dad had managed to keep it surprisingly neat and clean, and I was glad that he'd been able to spend his last days there rather than in some impersonal assisted living facility.\n\nI spent the next few days cleaning up the place, throwing out old papers that no longer had any significance, packing up clothing for Goodwill, mowing the yard and trimming the bushes. I didn't plan to sell the house, but I didn't think I'd have any trouble renting it to a faculty member or married graduate students. Having learned all about \"Sewanee weekends\" from my Dad, however, I wanted to avoid renting to undergraduates if at all possible.\n\nReturning to Sewanee was an interesting experience. I thought it would feel odd being back in my childhood home, but instead I found myself relaxed and at ease. Maybe it was the mountain air, but whatever the case I slept better than I had in months.\n\nA few days later, Dean Kirby called to ask me to drop by his office. I assumed that he had some personal belongings of my Dad's that he wanted to convey to me, but I was wrong.\n\n\"David,\" he told me when I was seated in a comfortable chair, \"there's been a Cowan at this institution longer than I've been here, and it just doesn't feel right to have that end. I wonder if you'd consider coming to work at the University?\"\n\nI started to protest that I had no qualifications, but he waved me off. \"I've seen your credits in a lot of publications,\" he told me, gesturing to a copy of The New York Times on his desk. \"We offer several courses in photography as part of our major in art and art history, and we could use a guest lecturer with your experience to make the program more real-world for our students. Also, our campus photographer is retiring at the end of this semester, and we're going to need someone to take on her responsibilities as well. What we'd be able to offer you in the way of a salary certainly wouldn't match what you're earning in Los Angeles, but the cost of living in Sewanee is a little bit more reasonable, I'd guess,\" he said with a smile.\n\n\"Wow!\" I said. \"I wasn't expecting that. Give me a little time to think it over.\"\n\n\"That's no problem,\" he said. \"We don't need to know for another month, and you wouldn't actually start working until the first of August. But I really hope you'll consider it seriously.\"\n\nI promised him I would, and after I left his office I took a walk around the campus. The gothic architecture seemed somehow appropriate, making the school feel like a medieval enclave high above the neon and plastic world where I'd been living. Growing up I'd wanted nothing more than to head off to the bright lights of the big city; now the serenity of the campus and this lovely little town seemed very attractive.\n\nThat afternoon I drove over to Green's View to watch the sun set. Below me I could see fields intersected by rows of trees, streams, ponds, and the occasional farm house, all stretching off to the northwest. I couldn't help noticing how clear the view was; there was no brown haze clouding the air like you see so often in L.A.\n\n\"Why not do it?\" I asked myself. The house was now mine and it was paid for; if I lived there rather than renting it out, my cost of living would be very low indeed. More importantly, I'd be far away from all the phoniness, the inflated egos and the pretense that I hated so much. And if I went to work for the University, I'd no longer be a parasite feeding off the illusions and dreams of other people, and I wouldn't be ashamed to say what I did for a living.\n\nWhen I thought about it, there wasn't a lot I'd be giving up if I left. True, I'd miss the ocean and the beaches, and I wondered if I could find any good Thai food. And of course there was Starla, but I'd lost her already. \"Maybe we can still be friends, just ones who live in different cities,\" I thought. And perhaps that was for the best; being around her was still tough on me. \n\nI forced myself to drop that train of thought to think about my opportunity. \"Only a few weeks ago you were complaining about your life and being trapped in a world you hate. Now you've been given a chance to escape all that and start in a whole new direction. Don't be an idiot -- grab the brass ring!\"\n\nAs I walked back to my car, I noticed how quiet it was. It seemed to match the quiet and peace I felt within myself. \"I must be making the right decision,\" I thought.\n\nThe next morning I called the dean. \"I don't need to think about this any longer,\" I told him. \"I'd like to accept your generous offer.\"\n\nNow that I'd committed myself, I felt a growing excitement. There was a lot of work to do to get ready for the big change, but it was all good, all building toward a new life. There was, however, one task that I was dreading, and now that I'd made my decision it couldn't be postponed. So that afternoon, sitting on the screened porch of my home, I stiffened my resolve and called Starla.\n\n\"David!\" she said when she heard my voice, \"I've been thinking about you so much. How are you doing? How did the service for your father go?\" \n\nI told her about the memorial service and sprinkling my father's ashes over the waterfall. She thought that was a beautiful way to send him off.\n\nThen her voice changed tone and she asked, \"When are you coming back, David? So much has happened while you've been gone and I've got so much to tell you.\"\n\n\"I'm not coming back, Starla,\" I said.\n\n\"Not coming back?\" she gasped. \"Not ever? I don't understand.\"\n\n\"Well, I'll be back to pick up some of my stuff, but I've decided to stay in Sewanee.\" I went on to tell her about the dean's offer and my plan to change careers and live in my parents' home. She was very quiet as I described how excited I was to be getting out of the L.A. lifestyle and shedding the pop culture scene. In fact, she was so quiet that I found myself growing uncomfortable, and my monologue ground to a halt.\n\nAfter a long silence, Starla finally spoke up. \"David, I don't know what to say. I'm really happy that you've found a new life for yourself. It sounds like the kind of thing you've often talked about so often. But the idea that you won't be here is just . . .\"\n\n\"I feel the same way,\" I told her. \"You're one of the things about L.A. -- the only thing, really -- that I'm going to miss, Starla.\" Then to my horror I heard myself adding, \"You know I've been in love with you for a long time.\"\n\n\"Oh!\" she gasped in shock, and I panicked. What had possessed me to blurt that out to her? What I'd said was the truth, but I never meant to say it out loud.\n\nBefore I said something else to embarrass myself further or completely ruin any chance to remain friends, I rushed on quickly. \"Listen, I've got to go. I'll send you an email to let you know when I'll be back out there to get my stuff.\" Then I quickly hung up.\n\n\"Damn, damn, damn,\" I berated myself, \"now you've done it. You'll never be able to talk with Starla again without her feeling awkward and uncomfortable.\" My euphoria about my new life had evaporated, replaced by chagrin at my impulsive blunder. All I could do was try to put the conversation out of my mind and get on with my preparations.\n\nNow that I'd decided to make the move, there were a lot of details to consider before returning to L.A. After giving it some thought, I decided that I'd have what little stuff I wanted to keep shipped back East. That would allow me to book a one-way ticket out to the coast, then make the cross-country trip back in my Toyota. I wasn't sure the old heap would make it, but I wasn't concerned. I'd been planning to buy a new car anyway; if the Toyota died I'd just buy a replacement en route. <center>- - - - - - - - - - - - - - - - - - - - - - - -</center> The flight to L.A. was tedious. The headwinds were strong and caused us to arrive late. Even though I gained two hours thanks to the time zone difference, I was still beat when I landed at LAX. After picking up my Toyota from long-term parking, I headed to my apartment. That place, I thought, was one thing I definitely wasn't going to miss. I picked up some Thai take-out for dinner, and an hour later flopped into bed and slept straight through till morning.\n\nWhen I awoke I surveyed my meager possessions and came to the conclusion that I really didn't need any of them. As a result I went to see my landlord and worked out a deal: I'd leave all my furniture and kitchen stuff and he'd forego charging me a penalty for breaking the lease. He was happy to do it, since he'd be able to charge the next tenant higher rent for a furnished apartment, so it all worked out.\n\nAfter lunch, I knew that I couldn't put it off any longer so I headed over to the photo agency. I needed to pick up my last check, sign some other paperwork, and of course say goodbye to Starla. After my moment of insanity on the telephone earlier, I wasn't looking forward to that conversation.\n\nThe people in the office were really nice. They all knew about my Dad, of course, and word that I was leaving had also gotten around. I got a lot of good wishes and even a few hugs from some of the women.\n\nStarla was in but she had someone in her office with the door closed, and the conversation sounded pretty animated. I waited around a little while but finally gave up and left. I was disappointed not to see her, but also, frankly, a little relieved that I didn't have to talk with her. After having babbled out my feelings on that phone call, I had no idea what to say to her now. Maybe it was better this way.\n\nI ran a few more errands, and then, as the light was fading, I decided to make the drive up to Mulholland Drive again. One last visit to my favorite vantage point seemed like an appropriate way to say goodbye to the city before I left for good.\n\nI parked in my usual spot at The Grove Overlook and got out of the car to sit on the retaining wall. The darker it got, the more L.A. looked like a set of jewels sparkling in the distance. But now I knew they were rhinestones, not diamonds. They might look beautiful but they only served to attract and deceive. I really wasn't going to miss it.\n\nAnother car pulled up to park. This was a popular overlook so I didn't pay any attention until a voice behind me said, \"I thought I might find you up here. So you weren't even going to say goodbye?\" I turned around to see Starla standing there with her arms crossed and an angry look on her face.\n\nI started to stammer out an excuse but then stopped myself. \"The truth is I left because I didn't know what to say to you,\" I admitted. \"After my stupid phone call the other day . . .\"\n\nHer face softened and she came over to sit beside me. \"It's alright,\" she said quietly, \"I understand. To be honest, I wasn't sure what to say to you either.\"\n\nWe sat there in silence for a little while, looking at the shimmering lights.\n\n\"It's been really crazy at work while you were gone,\" she said after a while. \"People kept coming in looking for you.\"\n\n\"For me?\" I said in surprise. \"Who would be looking for me?\"\n\nShe gave me a little smile. \"Kelly, for one. She was really mad at you, blaming you for what had happened to her and Sal. I took it upon myself to point out that the two of them were the ones responsible for everything that happened. I don't think she appreciated that, so our conversation wasn't very long. But I did learn she's planning to move back to Nashville and try again.\"\n\n\"Maybe that's best,\" I said. \"I don't think Hollywood was a good place for her.\"\n\n\"A day or two after Kelly showed up, someone else came looking for you,\" Starla went on. A mischievous smile crossed her face. \"Do you remember Bitsy?\" \n\n\"Bitsy Baker came in? I wasn't even sure she survived the DEA raid,\" I said.\n\n\"Well, she did,\" Starla said, \"and from what she told me it was thanks to you that she wasn't killed.\" She reached up and ran her fingers over the scar on my forehead. \"You didn't tell me you were in that firefight and got shot,\" she said accusingly.\n\nI felt embarrassed. \"I didn't want to alarm you over nothing,\" I said. \"It was just that Bitsy had helped me find Billy, and I felt I owed it to her not to leave her in the middle of a shootout.\"\n\n\"She told me it was the other way around, that you were the one who helped her,\" Starla said firmly. \"She said she met you when you pulled her out of her truck just before it fell down a ravine. She told me you also saved her baby.\"\n\n\"Her 'baby' was her dog,\" I said with a laugh. \"I just happened to be there when she needed help. Anybody would have done the same thing.\"\n\n\"Un hunh,\" Starla said skeptically. \"Well, that wasn't what Bitsy thought. Anyway, she said she'd already thanked you for saving her life the first time, but that she still owed you for saving her during the drug raid.\"\n\nI rolled my eyes. \"Bitsy's definitely a little on the ditsy side, and she certainly doesn't owe me anything. I'm just glad she made it through alive.\"\n\nStarla didn't say anything, but the way she looked at me made me wonder if Bitsy might have told Starla the details on how she had thanked me. Starla seemed amused but she didn't press the issue, to my relief. Instead, she changed the subject.\n\n\"The last person looking for you,\" Starla went on, \"was one person I would never have expected.\" She paused and I looked at her expectantly. \"It was Jinx McClure,\" she said.\n\n\"Jinx McClure?\" I exclaimed. \"Why in the world would she want to see me?\"\n\n\"Well, one reason was to return your cell phone,\" Starla said, pulling my phone out of her pocket and handing it to me. \"She told me she found it under the seat of her car.\" She looked at me carefully. \"You didn't tell me you were driving Jinx's car.\"\n\n\"Well, it wasn't that big a thing,\" I said. \"That night at the Emmy party she'd had too much to drink or snort or both, and I didn't think she should be trying to drive home. That's all.\"\n\n\"She told me about that,\" Starla said quietly. \"She also told me that she would have died on her own front lawn if you hadn't given her CPR.\"\n\n\"I don't know about that,\" I said. \"Besides, she was passed out, she didn't know anything about what happened.\"\n\n\"Maybe not,\" Starla said, \"but Jinx said the people in the hospital told her she owed somebody her life, and she came looking for you to thank for it.\"\n\n\"Well, all I can say is I'm glad to hear she's okay. That's one really messed up girl.\"\n\n\"She wanted you to know how grateful she is that you gave her a second chance at life. She said she's started a twelve-step program and is really trying to change.\"\n\n\"That's great,\" I said sincerely. \"I hope she makes it.\"\n\nStarla stared quietly at the lights for a while, then turned to look at me. \"You know how I told you that I was looking for a hero, a knight on a white horse? It looks like I had a real hero right under my nose all this time and never realized it.\"\n\nI blushed. \"Come on, Starla, I'm the farthest thing from a hero. Maybe I helped a couple of people in a jam, but I was just in the right place at the right time. I only did what had to be done, that's all.\"\n\nStarla went on as though she hadn't heard me. \"And then I learned that my hero had feelings for me, even though he'd never said anything before.\"\n\nNow I was really flustered. \"But I couldn't say anything, Starla! In the first place, I was with Kelly when I met you. And later after she split, I found out about what happened to you in college and I couldn't, didn't . . .\" I stopped helplessly, then tried again. \"And when I found out about you and Hannah . . .\"\n\nStarla held up her left hand, and for the first time I noticed that her engagement ring was gone. \"What happened?\" I blurted out in surprise.\n\n\"I broke off the engagement,\" she said quietly. \"Remember what you said about consideration for your partner's needs? The longer we were together, the more it felt like Hannah just wanted me as a prop for her political ambitions, not as an equal partner in a loving relationship. After a while I realized that our relationship was all about what I could do to promote Hannah's career and very little about what she wanted to do for me.\"\n\nIn the light from the city I could see Starla drop her eyes. \"After those men hurt me so badly back in college, I thought the only way I could ever find love was from a woman. When Hannah came along, I thought she was the one who could give it to me. But after I accepted her proposal I began to have second thoughts. I began to realize that I still had feelings for men, or at least one particular man. I'd always liked him as a friend, but I began to realize that my feelings went well beyond 'like.' And now I've learned that he's more than just my best friend, he's my hero too.\"",
        "She couldn't look at me, and the swelling in my throat made it hard for me to speak. All I could do was reach out and take her hand.\n\nShe ventured a quick glance at me and then looked down again. \"When you went away, I found I couldn't stop thinking about you. I missed you terribly, missed the man I could let down my guard with and trust. When you told me you weren't coming back, it felt like a knife in my chest.\" She looked up at me again. \"Then when you told me how you felt about me, I knew I had to let you know I feel the same way. I love you too, David.\"\n\nEven as hope began to grow in me, my mother's pessimism seemed to well up in me. \"But how can things ever work out for us, Starla? Your home and your job are here, and I'm committed to leave L.A.!\"\n\nShe looked at me solemnly. \"After your call last week, I made a decision. When you came to the office today, I was meeting with the agency head to discuss my resignation. I've always wanted to go back to school and get my college degree, and I decided that if you were brave enough to follow your dream, I could do the same thing.\"\n\nI was glad for her, but this seemed like it would only make things more complicated. \"Where are you going to go?\" I asked.\n\n\"Well,\" she said with a little smile, \"I haven't made a commitment yet, but I hear the University of the South has a good reputation.\"\n\nNow hope began to win the battle with pessimism within me, but I still had to ask, \"Are you sure, Starla? Do you really want to come back with me to Sewanee? It's a small town and it's up on a mountaintop, far away from the city. Are you sure you can be happy in a place so different from L.A.?\"\n\n\"What makes you think that L.A. is my home?\" Starla demanded with a smile. \"Come on, David, nobody is from L.A., everybody here comes from somewhere else. Want to know where I grew up? It was a little town called Boone in the Blue Ridge mountains of North Carolina. I'm a small town girl, too.\"\n\nThen she got that solemn look on her face again. \"David, if you want me to come with you, then I'm more sure about this than any decision I've ever made in my life.\"\n\nI pulled her to her feet and stood facing her. \"And I'm sure I want you with me more than anything I've ever wanted in my life,\" I said huskily. Then I pulled her to me. \"Now you'd better brace yourself, because I've wanted to kiss you for a long time.\"\n\nAnd in the glow of the lights of L.A. we kissed for the first time.\n\nAfter a long time she pulled away from me and said very shyly, \"Now I want you to take me back to my place and make love to me.\" A little smile flickered across her face. \"Just promise to be a little gentler with me than you were with Bitsy, at least the first time.\"\n\n\"Damn that airhead!\" I thought. But all I said was, \"I promise I won't hurt you, Starla, now or ever.\" \n\nAs we started to walk back to where we had parked, she reached in her pocket, pulled out a set of keys and handed them to me. \"You know, if you're going to be my hero you really should have a white horse,\" she said with a big grin. \n\nI looked at her in confusion. \n\n\"Jinx had another reason she wanted to see you. She wanted to give you a reward for saving her life,\" Starla said, pointing up the hill.\n\nThere, parked next to my beat-up old Toyota, was Jinx's white Ferrari, its rampant horse logo prominently displayed on the hood."
    ],
    "authorname": "FrancisMacomber",
    "tags": [
        "cheating wife",
        "cheating",
        "infidelity",
        "blow job",
        "oral sex",
        "romance"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/paparazzi-ch-02-of-02"
}