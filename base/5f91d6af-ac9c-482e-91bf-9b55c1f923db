{
    "title": "Family Reunion",
    "pages": [
        " Author's note: All characters in this work are 18 years old or older and no sex acts or sexual situations include any characters under the age of 18. \n\nFamily Reunion\n\nI was one of those fortunate kids born into a large family; not just my main family, four brothers and sisters, but also a much larger extended family with five aunts and uncles on my mom's side and the plethora of cousins that brings along. As a young boy our frequent trips to my grandfather's house or lake place were never boring with at least one of the cousins always seeming to be around to play with. As I grew a tad older, I found that I had a much closer friendship with some of my cousins than others. Jenny, who preferred to be called Jen after she turned six, seemed to be my favorite cousin by far.\n\nBy age eight, my dad got transferred to a new job several hours from the town that I had grown up in at that point. The move took us several hours from the base of our extended family. I didn't know it at the time, but the same seemed to be happening to many of my aunts and uncles. My grandfather instituted what was becoming popularly known as a family reunion. Yes, back in the late sixties, family reunions were actually a new thing. Once a year the whole dang family would converge on a single location to catch up and keep the close knit family bond strong. It's kind of unfortunate that the tradition is fading away, along with those close family bonds.\n\nWe still saw a lot of family at other times of year. We almost never missed getting together with some of my cousins for a New Year's celebration, not to mention Christmas and Thanksgiving. But the highlight of any of my visits was the time I spent with Jen. Yeah, by then I was in that phase that girls had cooties, but Jen was different. She was actually fun to be around.\n\nAs the years marched on and my father got transferred farther and farther from \"home\", we saw family less and less frequently. Eventually we were far enough away that three or four times a year was the norm. The annual Fourth of July reunion was of course one of them. By the time I was in high school, the family had grown so large that it was impossible for the cottage to hold everyone, or even close. At reunion time, the yard became filled with tents and campers to house all the kids, grandkids and now great-grandkids. A few attempts were made to hold it elsewhere, but in the end, we all still preferred the cramped and comfortable location at the lake.\n\nOf course as a high school student, girls no longer had cooties, and Jen was always interested to hear how my \"dating\" life was going. We'd sit on the dock fishing for perch and bullheads for hours each year, just chatting and catching up on everything that had gone on since our last meeting. I guess it was a bit unusual, but as family goes, Jen was by far the closest to me; not that there weren't other cousins I liked or liked me. Cindy, nearly a year younger than Jen and myself, seemed to ALWAYS want to hang around wherever I was. And though she was bored easily by fishing, she would always volunteer to go in the boat fishing with me if there was an open seat. Cindy wasn't a bad looker, but to be honest, it made me a bit uncomfortable with how close she always wanted to be and when possible, how much skin she made sure I could see. Sitting next to, for her, seemed to mean sitting with her hip against mine.\n\nDon't get me wrong, I liked her well enough, and well, as any high school boy with lots of hormones, her curves and large breasts were definitely something I enjoyed seeing, almost as much as she seemed to enjoy showing them off to me. I mean she was my cousin after all, so bare breasts weren't something you did, but she seemed to always have on the skimpiest bikini or shortest shorts and mini-skirts she could get away with. Jen kept kidding me about Cindy wanting to get into my shorts, a thought that was somewhat attractive given her looks, and unattractive because of our family status and age.\n\nMy girlfriend and I turned eighteen only a few weeks before our next reunion, but i couldn't convince her to come along with the family to the reunion. Cindy's attentions were thankfully slightly less forward that year, now that she had a full time boyfriend. That didn't stop her from grabbing me under the water through my trunks and coming down to the dock while I was fishing, wearing a miniskirt with no panties, a fact that she made sure I noticed immediately. If I hadn't had a steady girlfriend of my own, I might have been tempted to enjoy her attentions a bit more, but even in the late seventies having sex with your cousin wasn't cool.\n\nJen of course teased me relentlessly about Cindy's attentions, teasing me in jest similarly. She came down later that same day in a mini-skirt, and bent over to pick something off the dock, exposing her panties to me. She looked around behind herself towards me and pulled the waistband of her panties down over her firm, round butt part way, mooning me and giggling that maybe she should just keep pulling them down. At that particular moment I wouldn't have objected, and after that, I had a heightened appreciation for her form and shape.\n\nSmall bikinis were all the rage with the girls, and I had to admit to enjoying the yellow bikini Jen wore most of the three days we were there. Her breasts weren't as big as Cindy's, but they more than filled out the tiny triangles held in place by only a few tiny strings. I wondered if she noticed that I had a woody almost every time she was around me.\n\nOf course college changes everything. For me it meant that my steady girlfriend was anything but. Having gone to a different college, she suddenly decided that there were more guys to play with than me. Not that we'd done a lot in that respect, but I had enjoyed the many intimate activities we had shared before we split. My time at school was jam packed. Between working on classes and trying to make enough money to stay in school, I had a pretty full schedule, one that didn't leave a lot of time for dating. My favorite free time activity was fishing. It always had been, but one older gentleman I had been doing yard work for recognized my love for it and gave me an old twelve foot aluminum car top boat and its associated 3 horsepower Sears and Roebuck engine that hadn't been started since before I was born. Fortunately, a little sandpaper to the cylinder and a few carefully cut handmade gaskets had the little engine purring like a kitten again.\n\nAfter classes were over for the semester, I headed home with my boat on the top of my car, and a few weeks later, headed north with my own boat for the first time. Up until now, I was always relegated to borrowing my grandfather's sixteen foot MirroCraft, with a tiller steer thirty-five horse motor. I loved going out, but I wasn't the only one wanting to use it. This year I was going to be able to go fishing when I wanted, where I wanted, well within range of my little motor anyway. I got up there late on Thursday night, planning on staying until Sunday. Four whole days fishing on my favorite waters before I had to return to my summer job.\n\nThe yard of the cottage was already pretty full of tents when I got there, but I found room to pitch my little orange two-man pup tent I'd bought for going on fishing trips. I unloaded my boat and carried it down to the water with a little help from my cousin David and had things all set for the next morning before I made my rounds to visit with everyone. My own sister wasn't due in for a couple days and we weren't sure if either of my brothers or my own parents would make it.\n\nThe next morning I got up and headed out to fish, spending almost four hours casting along quiet shorelines before a light rain started. It took another half an hour to motor back from the back bays I was fishing, by which time the wind had picked up, pushing me towards home rather than away, thankfully. I pulled my boat up onto the shore with the waves nearly as high as the transom and the rain heavy enough to drown a duck. Even my heavy rainsuit had been unsuccessful at keeping all the water out. I crawled into my tent, grabbed some dry clothes, and made my way to the cottage to shuck the rainsuit and dry off. I was surprised at how full the cottage was with many more of my cousins having arrived while I was out. I ditched my rainsuit and headed to the bathroom to change into dry clothes. I closed the door of the bathroom and started stripping down, standing in just my soggy briefs when the bathroom door opened and Cindy slipped in, closing the door quickly behind herself.\n\n\"Hey Scott! Good to see you again!\" she said with a big grin, stepping over to me and wrapping her arms around me to give me a big hug.\n\n\"Hi Cindy,\" I said somewhat uncomfortably as she pressed her chest against mine, her tie-dye mini-skirt sundress soaking up the water on my chest and from my wet underwear. \"I was changing in here you know.\"\n\n\"Uh huh. But I really just had to go pee,\" she said releasing me and stepping back. \"You don't mind, do you?\"\n\n\"Really?\" I asked incredulously as she stepped around me towards the toilet.\n\n\"It's okay, you can go ahead and keep changing,\" she said as she reached under her skirt and pulled a pair of small yellow panties down to her knees. She pulled the hem of the dress up to her waist and sat down on the toilet, wiggling her legs to let her panties fall to her ankles and then spreading her knees apart so I could see her blonde bush and exposed pussy.\n\n\"God Cindy!\" I exclaimed quietly, not really wanting anyone outside the door to realize that I wasn't alone in the bathroom.\n\n\"It's okay. I don't mind if you don't,\" she said with a grin, reaching out to the waistband of my briefs, hooking one finger into them, and tugging quickly on them. \"I mean it's not like they're hiding all that much anyway,\" she said as she tugged down far enough to expose the head of my quickly hardening cock before I could grab her hand and pull it away. \"Awwwww you're not going to be a spoil sport, are you?\"\n\n\"What, you just expect me to strip here in front of you?\" I asked a bit incredulously.\n\n\"Sure, why not. I mean you're seeing all of my pussy, right?\" she asked a bit coyly, spreading her knees a bit farther apart and sliding her ass forward until her pussy was hanging over the edge of the toilet seat, fully exposed to me now. She reached down between her legs with one hand and gently stroked her protruding lips and teasingly spread them slightly with one finger.\n\n\"Geez Cindy!\" I hissed quietly.\n\n\"Oh come on Scott! What can it hurt? I mean it's not like you're having sex with me, unless of course you wanna do that too.\"\n\n\"God Cindy!\" I said with a frown.\n\n\"Awww come on Scott! Don't be such a prude!\" she said, her finger still sliding up and down her pussy lips, her own juices making it glisten in the harsh bathroom light. \"It's not like I'm asking you to stand there and jack off in front of me, although if you wanted to, I wouldn't mind. Just take 'em off and let me see.\"\n\n\"Okay, fine. But no touching!\" I said with a bit of a scowl, reaching for the elastic waistband of my briefs. I skimmed them down over my ass and down my legs, my rock hard cock popping out and sticking out at Cindy lewdly as I let my briefs fall down my legs and stepped out of them. \"There, happy now?\"\n\n\"A bit happier,\" she whispered, pushing a finger into her wet pussy as she stared at my cock. \"I'd be a lot happier if you'd just push that sexy dick inside me.\"\n\n\"That ain't gonna happen,\" I said as I reached for my dry briefs on the edge of the sink and quickly stepped into them, pulling them up and covering my boner, feeling more than a little embarrassed that I'd just flashed my dick at my own cousin.\n\n\"Too bad. I mean you could do anything you wanted to me; I wouldn't mind. You could even come inside me if you wanted. I'm on the pill so you wouldn't even have to use a rubber if you didn't want to,\" she said as she pushed her finger in and out of her pussy slowly. \"I mean that wouldn't be so bad, would it?\"\n\n\"God Cindy!\" I croaked in surprise at her invitation. If she weren't my cousin I probably would have jumped at the chance. Instead I stepped into a dry pair of shorts and pulled them up. \"You better cover up. I'm almost dressed, and then I'm going out,\" I told her curtly.\n\nInstead of pulling her panties up, she pulled her finger from her pussy and reached down, stepping her feet out of her panties. She stood up and stepped to me, pressing her chest against mine and stuffing the panties into my pocket before wrapping her arms around my waist. \"If you bring these back to me later, I'll let you put them back on me. Unless of course, if you'd rather, you can take the rest of my clothes off right now and see me all the way naked. My titties love to be played with you know.\"\n\n\"I don't think that's a good idea,\" I answered hoarsely, my hands sliding down her back not stopping until they were under her dress to cup her bare ass. \"If you weren't my cousin, I might take you up on that,\" I said giving her cheeks a squeeze.\n\n\"Just pretend I'm not,\" she whispered before pressing her lips to mine and giving me the most sensuous kiss I'd ever gotten from a cousin. As she kissed me, she slid a hand around between us, unsnapping my shorts and pulling the zipper down. She used both hands to push my shorts and briefs down over my ass to my thighs, freeing my rock hard dick between us. I moaned softly into her mouth as she began to stroke and play with my cock with both hands, her lips still sucking and playing with mine. \"You sure you don't want to put this someplace hot and wet?\" she asked quietly, just before a loud rap on the door broke the moment.\n\n\"You almost done in there?\" a female voice asked loudly.\n\n\"Yeah,\" I answered curtly, reaching for my pants, and pulling them up as Cindy stepped back from me.\n\n\"Damn,\" she cursed softly under her breath as I quickly finished dressing and picked up my wet clothes from the floor.\n\nI opened the door and stood face to face with Amanda, another of my cousins who was a year or two younger than myself. \"Sorry,\" I said as I brushed quickly by, my face blushing red as she looked past me to see Cindy following me.\n\n\"Lousy timing,\" I heard Cindy whisper as she walked past Amanda.\n\nI headed to the door, pulled my raincoat on, and headed out to my tent with my wet clothes under my arm. It didn't take me long to crawl into my tent and zip it shut to keep the rain out. I flopped down on my sleeping bag and looked at the ceiling of the tent, not really seeing the orange, but instead Cindy's exposed pussy as she sat on the toilet, stroking herself. If I wasn't already turned on, the mental image of her finger pushing in and out certainly brought me back. I undid my shorts, pushed them down to my thighs and proceeded to stroke myself as I watched in my mind's eye Cindy's finger stroking in and out of her pussy, her juices gleaming in the bathroom light. With my eyes closed, I could almost feel her climb into the tent on top of me and sit on my cock. I could imagine her hot wet pussy stroking and caressing my hard cock as she rode up and down my shaft, my hands pushing her tie-dye dress up and off so she was naked, her big tits swinging and bouncing in front of me as she bounced her ass up and down against my thighs, my fat cock slipping in and out of her with a wet squish with each stroke. I tried to stifle a moan as I felt the tingle of my orgasm build with me, Cindy cooing for me to cum deep in her wet pussy as she continued to ride up and down my shaft. \"Oh shit,\" I mumbled as I exploded, shooting a huge load of cum on my wet briefs. I lay there for several minutes catching my breath before pulling my shorts and briefs back in place and crawling out of the tent to head into the cottage for some lunch.\n\nWhile I was sitting in a quiet corner finishing my sandwich, Jen found me and after the last few bites of my sandwich, I followed her outside into the rain. She dashed across the yard to a large blue canvas tent that looked almost as old as I was, because I think it was. It was the same tent I'd camped in here many a year when I was much younger.\n\nJen ducked under the awning over the door, unzipped it and crawled in, calling for me to follow her. She pulled the zipper down behind me to keep the rain our and then, on her knees, turned to face me. \"Hey stranger,\" she said with a smile reaching out to give me a huge hug. \"Long time no see.\"\n\n\"Yeah. Since what, New Year's?\" I answered, hugging her tightly back. I was keenly aware of her round breasts and hard nipples poking me in the chest, making my cock quickly grow in my shorts.\n\n\"Something like that. It was so busy in there I thought we'd come out here and catch up!\"\n\n\"Sounds like a good idea,\" I answered as she released me and scooted herself around to sit cross-legged on a sleeping bag and air mattress.\n\n\"So what's new?\"\n\n\"Not much. Just lots of school. Got my own boat though!\" I said brightly in the dim tent. \"Dang, it's dark in here.\"\n\n\"Yeah. There's a lantern hanging up there if you want to light it. I hate lighting the damn things,\" Jen answered\n\nI reached up for the lantern and lifted it off the hook and knelt down with it. I quickly twisted the pump handle and pumped the little gas tank up before sticking it out the door and flicking the little knob that turned a steel against a flint under the mantles. In moments it was flaring into life, flames shooting out of the top vent holes for a few seconds before the gas tube got hot enough to vaporize the gas before it was ejected into the mantle. With the flames now gone, but both mantles burning bright white hot, I pulled it back into the tent and hung it up. \"There, now we can see.\"\n\n\"We can! So tell me about your boat!\" she said excitedly.\n\n\"It's just a little twelve foot V bottom fishing boat. Real light weight so I can haul it on top of the car.\"\n\n\"That explains the car top carriers I saw on it,\" she said with a grin. \"Been out in it yet up here?\"\n\n\"Yeah. It's only a little three horse. The engine's so old it doesn't even have a reverse; you just spin it all the way around,\" I said with a chuckle. \"But it's darn nice out on a little pond or lake. I use it a lot at home.\"\n\n\"Well, maybe later we can go out and fish in it.\"\n\n\"Sure, when this rain is gone. When I came in, the waves running down the lake were almost as high as the transom. All I could do was to run the same speed the waves were to keep from washing over the back.\"\n\n\"Ugg. Not fun. But hey, it's yours!\"\n\n\"Uh huh,\" I answered. So, how about you? What's new?\"\n\n\"Well, Jack's gone,\" she said a little sullenly, mentioning the boyfriend she had the last time we talked.\n\n\"What happened?\"\n\n\"Not sure. Mostly he wanted me to put out more than I was willing to.\"\n\n\"Yeah. I know that problem. Tamera did the same thing. She went off to school and suddenly me being six hundred miles away wasn't going to work. Guess I should have done more stuff with her when we were together, now it's kind of hard.\"\n\n\"You were almost broke up at Christmas, weren't you?\"\n\n\"Yeah,\" I answered.\n\n\"I'd have thought you'd have a bunch of girlfriends lined up and taking numbers,\" she said with a giggle.\n\n\"Not so much. I don't really have time to go party or date.\"\n\n\"Yeah, that is a bite. I have the same problem. Between practices for volleyball and my classes, I'm pretty busy.\"\n\n\"So how was the season?\"\n\n\"Not much playing time, but that should get better next year. Hey, wanna play some cards?\" she asked, reaching for a deck that was laying on the tent floor by one of the pillows.\n\n\"Sure, what?\"\n\n\"War? I haven't played that in ages.\"\n\n\"You're on!\" I said, scooting so we were sitting across from each other as she dealt the cards. War is an amazingly simple game, which requires little thought. You just lay down cards, and the high card takes the pair, which you then add to the bottom of your stack. If both cards are the same, you lay down three in a row and the outcome of the third card takes the pile. The big advantage is that you can play and talk at the same time.",
        "We'd played for nearly an hour, listening to the rain come down even harder and chatting about school and life in general. \"Damn, it's getting warm in here,\" I said as I pulled off my t-shirt and tossed it onto the sleeping bag next to me.\n\n\"Yeah, must be nice,\" she said as we laid down the next pair of cards.\n\n\"What's that?\"\n\n\"Being able to take off your shirt any time you want. Guys are lucky that way.\"\n\n\"Maybe, but you get to wear dresses where the air can get up under and cool you off, so you don't end up all sweaty.\"\n\n\"Guess it's just different,\" she said with a laugh.\n\n\"Yep, but if you want to take your shirt off, I won't complain.\"\n\n\"Oh you'd like that, wouldn't you?\"\n\n\"I'm just saying, you can take your shirt off. Your bra probably shows less than that tiny yellow bikini you had on last summer.\"\n\n\"You remember what bikini I had on last summer?\" she asked in surprise.\n\n\"Hell yes. How could I not? You looked smoking hot in it.\"\n\n\"Ohhh thanks, but I didn't know you looked at me that way.\"\n\n\"Jen, I'm a guy. I ALWAYS look at girls like that. It's bred into our genes.\" I chuckled.\n\n\"More like your jeans!\" she said with a giggle.\n\n\"Hey. Not fair. At least my underwear doesn't show.\"\n\n\"Huh?\"\n\n\"That white dress you wore to the fireworks?\"\n\n\"The white mini-dress? What about it? Were you peeking up my dress?\"\n\n\"Didn't have to. Your blue panties showed through the skirt. Pretty small panties too at that.\"\n\n\"Oh? You don't approve of my tiny panties?\" she asked with a crooked grin.\n\n\"I approve of all your panties, worn or not,\" I said with a laugh.\n\n\"Oh really? You approve of your cousin's panties? Interesting,\" she said with a curious look on her face. \"So you really want me to take my top off?\" she questioned again, bringing the topic back to that.\n\n\"Sure, why not. It'd be a lot more comfortable.\"\n\n\"Maybe for me, maybe not for you,\" she said with a grin.\n\n\"Geez Jen, it's not like I haven't seen you in something like a bra. I've seen you lots in your bikinis.\"\n\n\"So that's your final word?\" she asked as she moved her hands to the hem of her tank top.\n\n\"Sure, why not?\"\n\n\"Well, maybe....\" she said as she pulled her tank top up and over her head, exposing her chest to me, \"...I'm not wearing something like a bra today.\"\n\n\"Oh shit,\" I breathed quietly as I stared at her bare chest. Her tits, each the size of a good half grapefruit, were tanned a light brown except for a very small bright white triangle of untanned skin surrounding her round pink areola. As I stared her nipples hardened and protruded towards me more, making her breasts look all the more sexy.\n\n\"You know, I don't always wear a bra,\" she said quietly. \"I take it from your face that you like what you see?\" she asked, sticking her chest out a bit farther towards me.\n\n\"Uh, yeah,\" I answered dumbly.\n\n\"Good! Now stop staring unless you plan on doing something more about it!\"\n\n\"Um, er, yeah. Got it. No staring at the sexy tits,\" I answered nervously.\n\n\"Yeah, sexy tits. That's me!\" she said, laying a card down and waiting. \"You gonna play or just stare?\"\n\n\"Oh, yeah,\" I said, reaching into my hand and tossing down the next card on top.\n\n\"Thanks!\" she said picking up the cards and tossing down a new one. This went on for some time, both of us growing more comfortable with the fact of her toplessness. Her breasts wiggled slightly each time she reached to pick up a card, a sight that I couldn't help but enjoy, my cock rock hard in my shorts the whole time. \"So you know Cindy has a thing for you,\" she said conversationally as we exchanged cards.\n\n\"Yeah?\"\n\n\"Uh huh. For the last couple years. When we were setting out our sleeping bags, she said she was going to make it happen this year.\"\n\n\"She's sleeping in here?\"\n\n\"Uh huh. You're actually sitting on her sleeping bag. You could sabotage it if you wanted, turn it inside out or something,\" she said with a giggle. \"By the look on your face, she must have already made some kind of move on you.\"\n\n\"Oh yeah, she did that,\" I said quietly.\n\n\"Oh do tell!\" Jen coaxed. \"All the details.\"\n\n\"Oh...No. I don't think...\" I started to say.\n\n\"Come on. Give. You don't want me to put my shirt back on, do you?\" she asked, reaching for her shirt and picking it off the sleeping bag she was sitting on.\n\n\"NO...No, don't do that,\" I said much more emphatically than I intended.\n\n\"Oh? You really want me to keep it off, don't you?\" she said with a grin. \"So, give me the details then.\"\n\n\"Nothing to tell really. She just kinda came into the bathroom with me while I was changing, actually she came in while I was in the MIDDLE of changing.\"\n\n\"Oh? Really? And she did?\"\n\n\"She just used the bathroom while I was changing.\"\n\n\"So she just sat and peed while you got naked in front of her? I didn't think that was your style.\"\n\n\"Well, she was coaxing me a little.\"\n\n\"Getting naked herself?\"\n\n\"No, just pantiless.\"\n\n\"Ohhhhhh I see. She was busy flashing her pussy at you. Was it good looking?\"\n\n\"Well, it wasn't bad.\"\n\n\"Must have been pretty good if you got naked in front of her. Is that all it takes to get you naked, showing off a little kitty flash?\"\n\n\"Not exactly.\"\n\n\"So what exactly?\"\n\n\"I don't know.\"\n\n\"So stand up and take 'em off then.\"\n\n\"What?\"\n\n\"Your shorts. You got naked in front of her, you won't even flash me?\"\n\n\"Well, she was...\"\n\n\"I know, I know. She was showing you her pussy. Well...I can do that too,\" she said, setting her cards down and rolling from sitting on her butt to kneeling in front of me. She reached to her waist and undid her shorts, pushing them down with the pair of little white panties she had on under. She pushed them all the way down as far as she could, leaving her completely naked from the knees up. She had a little patch of blonde curls, trimmed surprisingly small, presumably because of the tiny bikini, outlined with a bright white triangle of untanned skin.\n\n\"Damn!\" I muttered as I stared at her pussy practically at eye level.\n\n\"Okay stud. Your turn. I did, so now you do.\"\n\n\"Huh? Oh yeah,\" I said quietly, suddenly realizing that this was the first time I'd seen her naked body. I continued to stare at her as I moved to my own knees, undoing my shorts, and pushing them down until they, like hers, were bunched around my knees as I knelt in front of her.\n\n\"Come here,\" she whispered, reaching a hand out towards my neck as she walked her knees across the air mattress towards me. She reached both hands around my neck and pulled me gently towards her, my hands circling around her and holding her bare back as she tilted her head slightly and pressed her soft lips against mine. I could feel her breath flow into my mouth as our lips parted and her tongue tried to tease its way into my mouth. For long seconds our tongues teased and played, first in my mouth and then hers before she pulled her lips from mine, our mostly naked bodies pressed tightly together. \"Scott,\" she whispered.\n\n\"I know, we shouldn't be doing this,\" I whispered back.\n\n\"Oh shut up,\" she whispered. \"I was going to say you feel awfully good against me.\"\n\n\"Yeah, you too,\" I agreed.\n\n\"So why are your hands still on my back?\"\n\n\"Where do you want them?\"\n\n\"Anyplace you wanna touch,\" she whispered as she moved her face back to mine and closed her lips on my lower lip, one of her hands sliding down from my neck, down my back and then between us to wrap around my hard cock. I let my hands slide down her bare back, over the curve of her firm butt, stopping when I could cup each of her smooth round cheeks. I squeezed and kneaded her cheeks as she slowly stroked my cock with her hand, her tongue and lips dancing and playing with mine.\n\n\"Damn I'm turned on,\" I mumbled as she pulled her face from mine and allowed some space between us. I looked down at her tits and slid my hands up to cup each soft smooth orb as she whispered back.\n\n\"Yeah, me too.\"\n\n\"Should we be doing this?\" I asked in a whisper.\n\n\"Probably not, but I don't really want to stop,\" she answered softly.\n\n\"Me either,\" I breathed as she tilted her head again and leaned towards me, pushing my cock downward with her hand as she did so. She pressed her soft lips to mine again and then walked her knees forward some more, making sure that my cock slipped into the gap between her thighs, pressing up against her dripping pussy lips. She began to slowly hump her hips towards mine, sliding her pussy and clit along the top of my shaft, slowly driving both of us up the slope towards orgasm.\n\nThe sound of thunder almost drowned out the sound of the tent zipper sliding quickly up. \"Well, looks like I'm just in time!\" I heard Cindy say as she stuck her head into the tent.\n\n\"Oh shit!\" Jen squeaked, pulling back and practically falling over. She reached for her shorts and jerked them up as fast as she could, scrambling to put her shirt back on as I tried to untangle my underwear and shorts as I pulled them up from my knees.\n\n\"Oh sweetie, you don't need to do that,\" Cindy cooed as she reached out and grabbed the front of my shorts, pulling them back down as I was trying to pull them up. Without a word Jen, her shirt now pulled on, if not quite straightened, practically dove out the tent door, disappearing into the rain towards the cottage while Cindy continued to pull down on my pants and push me backwards, eventually tumbling me back onto the air mattress I had been kneeling on.\n\n\"Cindy!\" I protested, still trying to pull my pants up as she crawled over me, one hand on my shorts to hold them down.\n\n\"Scott!\" she chided back, letting go of my shorts to move her hand up to my rock hard cock. She looked down at me, her voice softening. \"You know, I still don't have any panties on. If you wanted to, you could just slide this big dick right into me, just aim it at my wet pussy and push it right in. You'd like that, wouldn't you? To feel me around you?\"\n\n\"Cindy, we really shouldn't be doing this.\"\n\n\"Oh? Like you weren't about to screw Jen? Come on Scott. We both know where that was going. You were both practically naked with your cock between her legs. Something I've wanted for a long time! How about it? Wanna feed this into me? I'll even take my dress the rest of the way off so you can play with my tits.\"\n\n\"Ohhhhh Cindy!\"\n\n\"What's wrong. You don't like how I look? Aren't I as good looking as Jen?\"\n\n\"You're fine looking,\" I sighed.\n\n\"Fine? Just fine? Not hot, or sexy? Just fine?\"\n\n\"Cindy, you look very sexy,\" I answered honestly. \"I just don't think...\"\n\n\"I know,\" she said quietly. \"But wouldn't it feel so good to do it?\" she asked as she let go of my cock and settled herself down on me, my cock trapped between my own body and her obviously wet pussy. She reached to her dress and pulled it up and off, tossing it aside. She reached behind her back and undid the clasp of her bra, shrugged the straps off and tossed it aside, exposing her full breasts and rock hard nipples. \"There, now you can see every bit of me. Completely naked. So, ready to fuck?\"\n\n\"Cindy! Really!\" I said, lifting my hands to her shoulders to try to gently push her up off of me. She reached for my hands and pulled them down to her tits, cupping each with one of my hands, her hard nipples pressing into my palms.\n\n\"I know. I've been waiting so long to do this too. I thought last year you were going to take me out in the boat and do this, but somehow we never quite got alone,\" she purred as she began rubbing her pussy back and forth along my rock hard cock. Her wet lips caressed my cock as she slid to and fro on me, her lips engulfing my head at the end of each stroke, quickly dissolving what little resistance I had left against my own screaming hormones. I squeezed and played with her big soft tits, each nearly twice the size of Jen's firm tits, as Cindy continued to slide her pussy along my cock, each trip forward allowing my head to press up between her lips temptingly.\n\n\"Ohhhh damn,\" I groaned as she leaned a bit more forward, my head lifting up and engaging into her tunnel entrance.\n\n\"Uh huh,\" she gasped in reply as she pushed herself back, driving her wet pussy onto my shaft. I felt a couple inches of my already lubricated cock slide into her before she stopped, allowing herself to expand around my fat shaft. \"God you're big. Lots bigger than anything I've had before.\"\n\n\"Oh,\" I grunted as she pushed back some more, the sensations around my head encouraging me to lift my hips and drive myself fully into her.\n\n\"Ohhhhhh my God yes,\" she moaned, leaning down on me until she was laying on me, one leg on either side of my hips, my cock deep inside her pussy and her tits pressing against my bare chest. \"Fuck me baby. Just fuck me nice and slow.\"\n\nI really wasn't in any mood to argue. I moved my feet up so I could work my hips and then began slowly pumping my cock in and out of her pussy from beneath her. In and out I pushed, her soft sighs quickly turning to moans as she rocked back and forth in time with my strokes. \"Ohhhh sweetie. God I'm gonna come. I'm gonna come so fast!\" she squeaked breathlessly as her legs began to tremble and shake, barely able to hold herself up as I pushed my fat cock in and out of her. I could feel her pussy clenching around me as her orgasm washed over her, her juices dripping from her pussy onto my stomach as I continued to push in and out, slowly driving me towards my own climax.\n\n\"Uhhh. Gonna come too,\" I grunted as I lay beneath her, my balls tingling and that familiar sensation spreading through my pelvis.\n\n\"Do it baby. Fill me with your juice,\" Cindy moaned as she tried to push back against me in time with my strokes. \"Fuck my hot little pussy! Just think about how it would be, you and me, out in the boat all alone, the boat rocking gently as I stood before you, bent over the seat as you pumped your cock in and out of me from behind. Mmmmm, can you picture my tits swinging in time with your strokes as your hips slapped against my bare ass, me without a single thing on?\"\n\n\"Oh shit!\" I grunted as my body spasmed, jamming my cock fully into her and squirting a huge gush of hot cum into her. Over and over my body jerked, filling her with more of my cum until I felt wasted and lay there, my cock twitching inside her as I panted for breath.\n\n\"Ohhhh yeah. That's it. That felt sooooo good, didn't it?\" she cooed as she slid slightly so her face was over mine. \"I know you have a thing for Jen, but God I wanted to fuck you so bad for so long.\"\n\n\"I don't have a thing for Jen!\" I protested.\n\n\"Oh Scott. Hell, I can see it a mile away. Even if I hadn't found you two practically naked in here a little while ago, it'd be obvious!\" she said with a giggle. \"I don't mind if you have a thing for her, I just want a little bit too.\"\n\n\"A little bit?\"\n\n\"Of sex with you of course silly!\" she said with another giggle. \"We've got three days and you can fuck me as many times as you want. I'm all yours!\" she said before lowering her mouth to mine and kissing me wetly and sensuously, like she had in the bathroom. We lay there like that for some time before she finally rolled off of me, letting my now softened cock slip from her and release a flood of our combined juices. \"Well, Amanda isn't going to be too happy. I just leaked all over her sleeping bag,\" Cindy giggled. \"Oh well, it was worth it.\"\n\n\"Uh huh,\" I answered noncommittally.\n\n\"Oh come on. You can't say you didn't enjoy that. Can you?\"\n\n\"No, I can't say I didn't enjoy that,\" I reluctantly agreed, looking up at the fading lantern which was about to go out from lack of being pumped up.\n\n\"And you like how I look, right? I mean you do like how my body looks? Right?\"\n\n\"Yes, I like how your body looks,\" I agreed as well.\n\n\"And my tits are way bigger than Jen's tits, right?\"\n\n\"True.\"\n\n\"So, what does Jen have that I don't have?\" she asked, rolling on her side and propping her head on her hand to look at me.\n\n\"I don't know. I'm just drawn to her personality I guess. We just get along well. She gets me. I don't have to explain to her why on anything.\"\n\n\"I could be that girl, couldn't I?\" she asked with a pout as the lantern flickered a few more times and then puffed out, leaving the only light in the tent being from what was filtering in through the still mostly unzipped tent door flaps.\n\n\"I don't know, maybe. Jen and I have spent hours and hours talking over the years. She's just my friend, that's all.\"\n\n\"But you were going to have sex with her, right?\"\n\n\"We hadn't planned on it. It was kind of a spur of the moment thing. I don't even know if we would have gone any farther than it was. It all just kind of started because we took our shirts off cuz it was hot in here.\"\n\n\"I see. So if I run around with my tits out, you're more likely to fuck me? That's kind of shallow, isn't it?\"\n\n\"Not any more than barging into the bathroom and taking your panties off and playing with your pussy while I'm changing. Now that was really subtle!\" I said with a chuckle.\n\n\"You weren't complaining then, were you?\" she asked as she rolled over to face me and reached for my cock, wrapping her hand around it and gently massaging it as it started to grow again. \"Doesn't seem like you're complaining now either.\"\n\n\"Well, once you got my motor running, no I wasn't complaining. But still, we're cousins. We're not supposed to be having sex. It's not only not cool, but it's just wrong.\"\n\n\"It doesn't have to be wrong, does it? I mean as long as no one knows, it doesn't really matter, does it?\" she asked as she scooted down on the sleeping bag until her head was nearly even with my hips. She leaned over and engulfed my growing cock with her mouth, gently swirling her tongue around it before sliding her lips up and down my now quickly hardening member.\n\n\"Oh God,\" I groaned softly, reaching down and pushing her gently back from me, my cock slipping from her mouth with a slurp. \"We can't do this again,\" I whispered, as I sat up and found my pants around my ankles and wiggled them up. I found my shirt, pulled it on and stood up, my head nearly banging into the hot lantern.\n\n\"You don't have to go, not if you don't want to,\" Cindy cooed, reaching for my still open front of my shorts, and trying to pull them down again.\n\n\"Yeah, I do. If I don't, you know darn well that we're gonna have sex again,\" I hissed, unhooking her hand from my shorts, and pulling them up and closed.\n\n\"Spoil sport!\" she said with a pout as I knelt down in front of the door.\n\n\"Yeah, I know,\" I answered her as I crawled out, crouching under the tent awning while I zipped the door flaps closed. I sprinted through the still heavy rain to the door of the cabin and inside before I could get too wet.\n\nIt was packed inside with everyone trying to get out of the rain. For the most part, the only people that weren't in the cabin were those off in the campers. I finally found Jen sitting with some younger cousins playing some kind of board game. She made it obvious to me that she was ignoring me intentionally, so I found a quiet place to sit and read a Popular Science magazine that was sitting out on the table. Not what I wanted to do. What I really wanted to do was to talk someplace private with Jen, but that didn't seem likely any time soon. With no TV, I had no idea what the weather was going to do, so all I could do was sit and wait for the rain to quit.\n\nBy dinner time I was bored, but the rain had stopped, though the wind was still whipping down the lake, pushing foot high or larger waves into the shoreline and dock. Even going out and sitting on the dock was a lost cause. I filed through the food line with everyone else and found a quiet place outside to eat on a bench overlooking the wind tossed lake. It had started to warm back up, even though the sun was fairly low in the sky.\n\nJen came and sat down next to me on the bench overlooking the wind tossed lake. \"Hey there,\" she said quietly.",
        "\"Hey,\" I answered just as quietly between bites of food.\n\n\"So about earlier,\" she started.\n\n\"Hey, it was my fault. I didn't mean to push things like that.\"\n\n\"I know, but it wasn't just your fault either. I wanted it as much as you did right then.\"\n\n\"It was feeling pretty good, wasn't it?\" I asked with a little smile. \"And by the way, you look really incredible naked,\" I finished with a whisper.\n\n\"Yeah, thanks. You look pretty good down there too. Too bad Cindy had to interrupt.\"\n\n\"Yeah. For sure.\"\n\n\"So, did you?\"\n\n\"Did I what?\"\n\n\"Did you do her?\"\n\n\"More like did she do me. She really didn't give me a lot of choice.\"\n\n\"I see. Did you enjoy it?\"\n\n\"If you're asking if I wanted to, the answer is I really wanted to do it with you right then, but you didn't stick around long enough.\"\n\n\"So you did it with her instead,\" she said, more of a statement than a question.\n\n\"Like I said, she more did it with me. She was kind of insistent.\"\n\n\"You could have said no.\"\n\n\"Maybe...before you got undressed in front of me, not after,\" I answered her quietly. \"At that point I was wayyyy too turned on to even think straight.\"\n\n\"Well, was she at least good?\"\n\n\"Well, yeah, I guess. She was pretty good.\"\n\n\"I wonder if things had happened differently if you'd be telling her right now that I was pretty good?\"\n\n\"I'd think that I'd be using different terms, like maybe... crazy good, spectacular, um, fantastic?\"\n\n\"We'll never know I guess,\" she whispered.\n\n\"Yeah... I guess,\" I said as I felt my heart sink. That was NOT the response I had hoped to hear. Not that I knew what I hoped to hear, but that was definitely NOT it!\"\n\nI finished eating in silence and then sat there watching the waves with Jen sitting next to me.\n\n\"I'm gonna go get some dessert,\" she finally said, getting up from the bench. \"Want some?\"\n\n\"Yeah, sure,\" I answered as she walked away.\n\nShe came back a few minutes later with two bowls of ice cream and handed one to me. \"Here you go. Chocolate of course.\"\n\n\"Of course,\" I answered as she sat down next to me.\n\n\"I forgive you,\" she said between bites.\n\n\"For what?\"\n\nShe turned to stare at me. \"Maybe I shouldn't, not if you don't know what for.\"\n\nI was silent a few moments letting things sink in. \"Oh. Yeah. That.\"\n\n\"Uh huh. That.\"\n\n\"Sorry.\"\n\n\"It's okay. I forgive you,\" she said again.\n\nI sat silently, not sure what to say when we were interrupted by my Uncle Bob, Jen's dad. \"Hey Scott, we're gonna run up to the Antlers to fish, wanna come along?\"\n\nWhile it was way too rough for my little boat and motor, their bigger eighteen foot boat would handle this rough water without a problem, and the Antlers was one of my favorite places to fish. \"Yeah, you bet. Let me grab my rod and box,\" I said getting up.\n\n\"How about you Jenny? You coming?\" he asked his daughter.\n\n\"No. I don't think so, not today,\" she said, as I stood in front of the bench.\n\n\"Okay, suit yourself,\" he said as he turned to head down towards the boat landing where Uncle Johnny was backing the boat trailer down to launch the boat. \"What's with her?\" Uncle Bob asked as we walked down towards the water.\n\n\"I don't know. She's mad at me for something, but I don't understand why. Does it get any easier, figuring them out that is?\"\n\n\"You mean as they get older, or you get older?\" he asked with a chuckle.\n\n\"Either.\"\n\n\"If you figure it out, let me know, because I still can't figure women out.\"\n\n\"Great,\" I said as we walked.\n\nUncle Johnny, Uncle Bob and I spent several hours out fishing, coming in just about dark. We cleaned our fish and headed into the cottage to get away from the mosquitos. Many of the adults were either sitting around chatting or playing cards while the younger kids were already off to bed and the medium sized kids were busy playing board games and such. I found Jen, but she made it a point to ignore me, so I got a soda and headed for my tent. I lay out there for some time, using a small battery lantern to read a book. If anything, it was getting hotter, or maybe it was just me. I stripped all the way down as I lay on my sleeping bag, my tent zipped tight to keep the skeeters out. Finally around ten thirty I turned my light out and went to sleep.\n\nI could smell her soft floral perfume as we lay in the sunshine, Jen crawling over the top of me, her small firm tits sticking down towards me, her nipples hard and protruding from her perfectly round pink areolas. The breeze caressed our skin as it stirred the tall grass around us, shielding us from view as we lay in the middle of the field, both of us naked, my rock hard cock wanting badly to be buried deep inside her bare pussy. Her soft blue eyes looked down at me with desire as she held herself up over me on all fours, her nipples hovering over my face, almost inviting me to reach up and suck them as she lowered her hips down, her wet pussy just barely brushing against my engorged head.\n\n\"I want you,\" she whispered, barely audible over the rustle of the wind in the tall grass, an invitation that I would have heard no matter how quietly she said it. I felt her wet pussy press down against my head and slide back, my cock nestling into the entrance to her tunnel as pressure built against me, as she pressed back harder. I felt my head slowly spread her opening, almost fighting to widen it enough for its fat girth before suddenly slipping in past that initial point and sinking into her hot wet confines.\n\nI heard her moan, or the both of us moan, as she pushed herself back onto me, my fat cock expanding her tunnel as she began rocking herself, pulling on and off my cock in short little strokes, her wet pussy lubricating more of my shaft with each stroke until she had me fully inside herself, my cock penetrating all the way to the end of her tunnel, my head pressed into her deepest recess. She began rocking long and slow, the sun warming us both, the wind caressing us and carrying away the perspiration building on us as we worked in unison to slowly stroke in and out of each other, our individual orgasms building towards a mutual crescendo.\n\n\"Ohhhh God yesssss,\" she hissed softly as her pussy began to spasm around my cock, the added sensations quickly pushing my own orgasm to the tipping point.\n\nIt was pitch dark when I opened my eyes, my body involuntarily pushing up into the hot wet confines my cock was embedded in. \"Ohhhh fuck yes.\" I heard whispered over me as the body above me spasmed in time with my own spasms, my cock spurting shot after shot of cum up into her. \"Ohhhhh yes,\" she whispered again.\n\nIn the dark and the fog of the dream slowly slipping way, I was unsure who exactly was above me. I reached up and slid my hands along a slender naked body, finding and cupping two small breasts, each barely large enough to fill my palms, but with two rock hard nipples pressing down into my palms. As her orgasm began to subside, she began to rock herself again, sliding on and off my still hard cock as my body drooled the last of the load of cum unto her pussy as she ground her clit into my stomach and pubic bone as my cock began to soften.\n\nIn one last stroke she pulled off my cock, leaned her face down to mine, kissed my lips and then pushed herself up and off of me. I could see the vague shadow of her as she unzipped the tent door, picked up something off the end of the sleeping bag and then slipped out into the moonless night, only a silhouette in the light from the cottage to give me any chance to identify the visitor. Tall, slender, small breasts with still hard nipples exposed, and moderately long hair. I could rule out both Cindy and Jen, but beyond that, it could have been any of half a dozen of my cousins.\n\nIt left me laying for hours, wondering who it was and of course, why. I finally fell back asleep, no more informed than I had been when my visitor slipped out into the night, still naked.\n\nI had intended on getting up with the sun and heading out to fish, but when I finally crawled from the bed the sun was well above the tree tops. I yawned and stretched as I headed for the cottage for some breakfast. It didn't take long to eat, as most of the clan was up and some had already headed out to fish, so breakfast was long since cooked and waiting.\n\n\"I thought you'd be out fishing already,\" my aunt Emily said as I walked in.\n\n\"Yeah, that was the plan. I kind of overslept.\"\n\n\"Ahhh, to be young again and able to lay in bed, even a hard one like that, for hours. If it was me, my back would have been killing me and I'd have had to get up.\"\n\n\"Well, that wasn't a problem. Probably just stayed up too late reading my book.\"\n\n\"Well, have some breakfast,\" she said, handing me a plate from the counter and uncovering a bowl of scrambled eggs on the stove and a pan of sausage links. I loaded my plate up, ate quickly and then grabbed a few sodas in a bag and headed out the door to get my boat ready to fish. I was anxious to get to the small bay across the lake and see if I could squeeze through the culvert into the bay on the other side of the county highway.\n\n\"Hey there, going someplace?\" I heard Jen ask from behind as I shuffled gear around in my boat in preparation for dragging it down from where it sat on the shoreline into the water.\n\n\"Yeah, over across the way,\" I answered without looking up.\n\n\"Want some company?\"\n\n\"Sure, if you want.\"\n\n\"Okay. Give me a sec to change,\" she said as she turned around and jogged up the hill towards her tent.\n\nBy the time I had the boat in the water, an extra life jacket tossed in, and the engine filled with gas, she was back, wearing a pair of short shorts and a t-shirt, the strings of a swimsuit top sticking up out the neck hole. \"All set!\" she said brightly as she carried a fishing rod and a small canvas bag towards me.\n\n\"Cool,\" I answered, taking the rod from her, and putting it into the boat and then pushing the boat into the water. I walked it the few feet to the dock and held it there while she climbed gingerly down in and sat in the middle seat, about three feet or so from where I would sit in the stern to run the small motor. I climbed down in, started the motor, and backed the boat away from the dock before turning it to head across the lake towards the highway bridge.\n\n\"So, are we going under to the finger bay?\" Jen asked over the sound of the engine.\n\n\"Yeah. If I can, I'd like to try and squeeze through the culvert under the county highway and see if we can get back into that little finger bay.\"\n\n\"Ahh, yeah, you almost never see anyone back there.\"\n\n\"It's too soft around the shoreline, real boggy. I tried to walk around it once and there's actually three little creeks back there that feed it. But it takes an awfully small boat to get into it. You either have to put in off the highway or squeeze through the culvert. I think this'll fit.\"\n\n\"Cool. It's worth a try. What then?\"\n\n\"Fish those lily pads way in the back by the creeks inlets. I'd think those would be the best places.\"\n\n\"Sounds like a plan,\" she said as we bounced through the water, the small engine not quite able to get the boat up on plane, but not quite plowing through the water either with the bow fairly high in the air. We didn't talk much more as I drove us under the highway bridge and across the bay on the other side, slowing only when we approached the culvert. I shut the engine down and tipped it up as we coasted into the mouth of the culvert. We didn't have much room to spare, but with a few bumps and bangs we were able to ease my boat through the culvert and into the bay on the other side. I started the motor back up and we pushed slowly across the bay, not really sure how deep it might be and not wanting to get stuck in a mud bank. When the motor started to churn mud, I switched to oars and eased us around a small point and into a long narrow bay that was sheltered from view of the road and filled with patches of Lily pads. \"Here we are,\" I said quietly, almost afraid to talk too loud and scare the fish.\n\n\"It's nice and quiet back here,\" Jen said, as I hooked a lure on my rod and handed one to her before she moved up to the seat in the bow to give both of us room to cast.\n\n\"Yeah, it's almost like the rest of the world is miles away,\" I said as I tossed the first cast out toward the Lily pads. The reel made a soft whir sound as I slowly retrieved the lure, waiting anxiously for a fish to bite. It didn't, but that didn't stop me from making another cast, and another and another.... You get the idea.\n\nWe worked around deeper in the bay, casting toward the pads, and getting a few hits and one small fish as the sun climbed higher, warming both of us as the temperature quickly soared toward the eighties, a hot day for northern Wisconsin.\n\n\"It's getting seriously warm,\" Jen said, putting her rod down and reaching for her t-shirt hem. She quickly pulled the shirt up and off, revealing a lime green bikini that was, if anything, smaller than the yellow one she had worn the previous year. I couldn't really help myself as my cock hardened in my pants as I stared at her.\n\nShe smiled as she reached down to her shorts, unsnapped them, and carefully wiggled out of them, stuffing them into the bag at her feet before pulling out a tube of sunblock. I tried to continue fishing as she slowly spread the white cream on her legs, doing one and then the other, lifting each high in the air as she spread the cream up soft sexy thighs. When she finished her legs, she went to work on her arms, coating each arm carefully, glancing back at me periodically to see that I was indeed staring at her and completely ignoring fishing.\n\n\"I'm gonna need some help with my back. Would you mind?\" she asked softly, as she carefully moved to the middle seat and sat down with her back to me, holding the tube of sunblock out for me.\n\n\"Uh, sure,\" I said, taking the tube from her hand. I squirted some cream on my hand and began at her neck, rubbing around on her back between the ties for the little green bikini, my cock growing even harder as my hand stroked circles around her back.\n\n\"You know, if that tie is in your way, you can undo it,\" she said quietly as my fingers ran under the string and around her side slightly.\n\n\"Uh, which one?\" I asked, the tails of the string around her neck hanging down her back and swinging as my fingers pushed it aside again.\n\n\"Either, or both if you want,\" she said, sitting with her hands on her legs.\n\nI licked my lips nervously as I reached for the tie around her neck and gently tugged the string, pulling the bow out and then reaching to her neck to pull the still twisted string apart. The material pulled the strings over her shoulders as it slid down her front, leaving the top hanging by the string around her back, which I pulled next. I was still pulling the string as the lime green material pulled from her body and unwrapped from her, hanging in my hand. \"Here you go,\" I said, holding it out, my hand shaking slightly as she twisted her body to take the top from me, exposing most of one breast as she did.\n\n\"Thank you,\" she said, turning back, clearly waiting for me to work more lotion into her back. I squirted more lotion in my hand and began working it into her back again, working my way down to the small of her back and the curve of her round butt. \"You better get all the way down to my butt. I don't want to get burnt because you were too bashful to put sunblock on my butt,\" she said almost sternly as she leaned forward.\n\n\"Um, yeah. No problem,\" I answered as I started rubbing the lotion into her cheeks by sliding my hand between her bare skin and the lime green material. \"About as far as I can go,\" I said as I tried to stroke my hand in under her as far as I could.\n\n\"Oh,\" she said, lifting herself off the seat and carefully stepping back behind it as she bent over to hold the sides of the boat to balance herself. \"That better?\" she asked, her ass now only a foot or so from my face.\n\n\"Uh yeah,\" I said as I put my hand back between her suit and her bottom.\n\n\"You don't need an invitation to get that out of the way, do you? I thought we covered that with the top,\" she said without looking back.\n\n\"Uh, no. I got it,\" I said, reaching my hand to tug the strings on her hips, undoing the two bows and pulling the material down off her so she was completely naked in front of me. I sat there, staring at her ass, her round full pussy lips pushing out at me from between her legs as she stood bent at the waist, her feet about a foot apart. I squeezed some more lotion on her butt and began to rub it with both hands, swirling my hands slowly around her tanned globes, a bright triangle of white showing where the skimpy suit had been covering her. I continued to stroke my hands around her ass, my fingers sliding around the sides of her leg and my thumbs running up the inside of her thighs until I could stroke them over and then between her fat round pussy lips.\n\n\"I think that's enough of that part,\" she said breathlessly as she suddenly pulled her ass away from my hands when I tried to push my thumb deeper, entering into her tunnel. She turned around and sat down facing me, her entire naked body exposed to me in the bright sun. \"You better get my front done before I burn,\" she coaxed, spreading her legs slightly and reaching back to the sides of the boat so she was partially reclined. She picked her feet up off the bottom of the boat and set them on the seat on either side of me, so I was sitting between her now spread legs, her whole pussy and curly blonde hair on her mound exposed to me.\n\n\"Huh?\" I asked stupidly, staring at her body.\n\n\"You better put some sunblock on my tits, or they'll burn,\" she said without moving. \"Unless of course you want me to do it myself.\"\n\n\"No, no, that's fine. I'd be happy to do it!\" I said quickly, not wanting to miss the chance to rub my hands all over her orange sized tits. I squirted some lotion on my hand and then set the tube aside, reaching for her chest as I rubbed the lotion between my hands. I cupped both her soft breasts, gently squeezing them as I began to massage the lotion into each soft round orb, her hard nipples pressing into my palms.\n\n\"Don't forget to get everyplace,\" she said after I had been rubbing only her tits for at least a full minute or more.\n\n\"Yeah, sure,\" I said, letting my roaming hands reach up her chest and then back down her body, over and around her tits and down to her stomach. I squirted more lotion on her body and started working my hands around her stomach and down to her thighs, periodically running them back up and over her tits again.\n\n\"So, I was pretty upset with you yesterday,\" she said softly as I stroked my hand all the way down to and across her hard mound, my thumb stroking across her pussy lightly.\n\n\"Yeah, I got that idea.\"\n\n\"Yeah, but I'm not anymore,\" She added.\n\n\"That's good.\"\n\n\"Well, it was partly my fault,\" she said with a little shrug. \"It just took me a little while to realize it.\"\n\n\"How so?\"\n\n\"Well, there's a lot of good looking girls up here this week, quite a few your age too. If I want something from you, or more don't want you to give something to someone else, I have to be pretty specific or how would you know? Right?\"\n\n\"I suppose that's true.\"\n\n\"So... well... Here I am.\"\n\nI continued rubbing my hands around her body, not exactly sure at all what she was driving at.\n\n\"So?\"\n\n\"So what?\"\n\n\"Do you wanna have sex with me?\"\n\n\"Well, I kinda thought we were going to yesterday, in the tent, but it sorta didn't happen.\"\n\n\"So what's stopping you now?\"\n\nI stopped rubbing her and stared at her face for a moment, wondering if she was serious. The look of desire in her soft blue eyes answered the question better than any words could have. I quickly pulled my t-shirt off, undid my pants and pushed them down my legs to my knees and slipped off the seat, kneeling in the bottom of the boat between her legs, my rock hard cock pressing against her pussy lips. I reached down for my cock and rubbed it up and down her cream lubricated lips and pressed it slightly into her, working it until I was settled into the entrance to her tunnel. \"You're sure?\" I asked, hoping and praying that she wouldn't say no.",
        "\"I wasn't yesterday, but I am now,\" she said huskily, her chest rising and falling as she waited nervously.\n\nI pushed forward, my hands sliding from her legs up her body until I could cup both her round soft breasts. I pushed in slowly, going as far as I could and then pulling back some to draw more of her lubrication out across her lips. I pressed in again, pushing a little farther and drawing a long soft moan from her lips as she closed her eyes and let her head fall back, her long blonde hair hanging down behind her towards the bottom of the boat.\n\nIn and out I stroked, working myself slowly deeper and deeper into her until I was stroking fully into her, her soft wet pussy caressing the full length of my cock as she lifted her feet off the seat behind me and held them up and apart for me. In and out I stroked, slapping my thighs against her bare ass, and squeezing and rubbing her tits with both hands as I pounded myself in and out of her, my dick pushing deep enough to smash my head into the end of her soft wet tunnel with each stroke.\n\n\"Ohhh damn you feel good,\" she moaned as I pushed in and out of her exquisitely hot and wet pussy. \"Soooooo damn good.\"\n\n\"Yeah, you too,\" I groaned as I held her tits and increased my strokes, feeling my orgasm start to build deep inside me. \"I've kind of wished for this for a long time.\"\n\n\"Yeah?\" she asked, tipping her head back up and looking at me. \"Why?\"\n\n\"Cuz you're probably the sexiest woman I've ever known.\"\n\n\"Just cuz I look good? That's why?\" she asked breathlessly as I continued to pound into her, each stroke making a little squishing sound with her juices as my head caressed her vaginal walls and her walls caressed my fat hard shaft and mushroom head.\n\n\"Uh uh. More than that,\" I groaned softly, feeling the urgency grow inside, the warmth and tingle of my impeding climax growing beyond stopping. \"Oh God I'm gonna come!\"\n\n\"Uh huh. Me too. Any second,\" she whispered, her legs trembling slightly as she held them up in a wide V.\n\nMy hips continued to piston my cock in and out of her pussy, my thighs slapping loudly against her ass and her fantastic pussy caressing my cock with each stroke. Her velvety soft tunnel seemed to quiver around me as I slid in and out of her.\n\n\"Ohhhhhhhhh shiiiiiiit!\" she squealed loudly as her whole body seemed to quiver and shake in front of me, the whole boat rocking and shaking as I pounded into her even faster, my strokes spurred on by the feeling of her pussy clenching and spasming around me as she climaxed.\n\n\"FUCK!\" I grunted loudly as my body spasmed and jammed my cock into her uncontrollably. I felt a huge gush of cum lancing out into her hot pussy as my body jerked hard, driving my head all the way to her cervix. Over and over I jerked, pumping more cum into her as she pushed herself up and reached for my neck. She used her hands behind my neck to pull her body against mine as I let go of her breasts. I wrapped my arms around her and helped pull her shaking body tightly against me as my cock continued to jerk and twitch inside her, our combined cum leaking around where I was impaling her and dripping to the floor of the boat.\n\n\"Scott, I love you,\" she whispered softly in my ear as she pulled her nude body more tightly to mine, her hard nipples pressing into my chest. \"I know we're not supposed to and all, but I love you,\" she said, her voice quavering slightly with emotion.\n\n\"I know. Me too,\" I whispered.\n\n\"So what do we do now?\"\n\n\"I guess pretend it never happened and that we're just close family,\" I answered, not really wanting to pretend anything of the sort.\n\n\"How do we pretend this never happened? Not to mention that I don't want this to have never happened. Hell, I want it to happen again and again actually. How do we fake that?\"\n\n\"Damned if I know,\" I whispered back.\n\n\"Well, out here, we can be ourselves, can't we?\"\n\n\"I suppose as long as we're alone,\" I agreed quietly.\n\n\"Good,\" she answered. \"I don't want to get dressed. I want you to be able to look over and see all of me. I want you to be able to just lean over and kiss me or play with my boobie or if you want to, just push your dick into me and make love to me.\"\n\n\"I'd like that too. I just don't know how safe that really is. Someone might see us.\"\n\n\"Yeah, you're right, I guess. But that doesn't mean I don't want it that way.\"\n\n\"Me too. If I didn't have to, I'd leave us both go naked!\" I said with a chuckle.\n\n\"So, here's the deal. Neither of us wears any underwear the rest of the time, that way we can tease each other as much as we can.\"\n\n\"That sounds kind of fun. Not much privacy around though.\"\n\n\"So we can hope for some rain,\" she answered with a smile, releasing me, and pulling her face back from me. I leaned toward her, lowering my face down to hers and gently kissed her lips. she sensuously kissed me back for several long minutes before we reluctantly broke the kiss. I looked around and quickly let go of my arms around her, reaching for the oars and pushing them quickly to push us back into the bay, my boat having floated out into full view of the road. \"Well, hope no one saw that,\" she said with a giggle as she continued to hold herself around me as I pushed the oars to push the boat back farther into the cove.\n\nI pushed the bow against the soft shore, sure that no one would walk up to where we were over the marshy ground before letting go of the oars and wrapping my arms back around Jen.\n\nNow in the shade the two of us got more comfortable, laying more in the bottom of the boat, at least as much as we could in the small craft. We spent the next couple hours cuddling and making love again, both of us climaxing hard together before we decided we had to dress and head for home before someone got worried and started looking for us. We agreed to dress each other, since we were both naked, each of us taking our time covering the sensitive spots, kissing and licking them all, leaving us both turned on and wanting to have sex again, but agreeing that we didn't have time.\n\nI finally rowed us back to deep water and started the small motor up, pushing us slowly across the bay towards the culvert. I shut down the motor and eased us into the culver, Jen almost immediately pulling the cups of her top aside to expose her tits to me while I worked the boat through the culvert. With a grin, she pulled the material back over her breasts just as we emerged, looking around to make sure no one could see and then pulling them aside again. I dropped the motor and fired it back up, driving us home as fast as the engine would take us, Jen leaving her breasts out and exposed until we reached the highway bridge, after which the lake would be lots busier and not safe for that kind of display.\n\nWe did our best the rest of the afternoon to pretend that what happened in the morning didn't, but in the end the only way was to stay away from each other. I went fishing in the evening with a few other adults, intentionally avoiding going in a boat with Jen, not feeling like I would be capable of hiding it.\n\nIt was dark when I crawled into my tent and zipped it shut. I lay back on my sleeping bag and undressed, not bothering to put anything back on as I lay in the tent listening to the chirping of the insects and thinking about a naked Jen in my boat. I was nearly asleep when my tent door unzipped and a form crawled into my tent, pausing to zip the door behind it. With an awkward wiggle, the form silhouetted in the light filtering through the tent walls from the cottage lights pulled the shirt up off of her, her tits now silhouetted as well, two nice orange sized breasts hanging below her body as she crawled over my naked form and lay down on top of me.\n\n\"Hi,\" Jen whispered.\n\n\"Hi,\" I whispered back as she slid her body up mine, her mound pressing against my hard cock until she had slid far enough that it popped up between her legs. She rolled her legs off of mine, one on either side of me and then pushed back, pressing my head against her pussy. She had to try a couple times before she got the spot just right and pressed herself slowly down my shaft, her hot wet pussy slowly engulfing me as I stifled a soft moan.\n\n\"Yeah, me too,\" she whispered as she moved her legs up under herself and began to rock herself slowly on me, sliding her pussy on and off my cock with each stroke. \"I've been wanting to do this all afternoon,\" she whispered in my ear.\n\n\"Me too,\" I whispered back as I let my hands roam over her back and bare butt, caressing every inch of her that I could reach.\n\n\"It feels different than before,\" she whispered. \"I like it.\"\n\n\"How so?\"\n\n\"It hits different places. Maybe it's just because I've been thinking about it for so long, but I feel like I'm going to start coming already,\" she whispered breathlessly. \"Kiss me. Kiss me until you come inside me.\"\n\nShe lifted her face from my ear and pressed her lips to mine as she continued to slowly stroke herself on and off my cock. Her kiss grew more aggressive and sensual as she stroked on me, her body periodically shuddering and trembling as she continued to push down on me over and over. As much as I wanted it to last forever, I could tell that only a few more seconds was as much as I could take. My body spasmed and I felt the first gush of cum lance up into her as she pushed herself hard on me, grinding her clit into the base of my cock, my hands squeezing and kneading her round ass as my orgasm washed over me and filled her with my cum. Only after several long minutes and feeling my softening cock slip from her pussy, did she release my lips and roll off to lay next to me, her head on my shoulder.\n\nThe sun was just coming up when I woke, Jen still next to me, naked but awake and dressing in a long sleep shirt. She gave me a smile, leaned down and kissed me softly on the lips and then slipped from my tent, hopefully unseen.\n\nI crawled out of my tent a few minutes later and made my way to the outside bathroom, most everyone else still asleep. My grandfather quickly figured that with the growing family, even two bathrooms in the cottage weren't enough, so he converted the pump house into another small bathroom with just a toilet, sink and small shower stall. It was much too cold to use in the winter, but in the summer months it made a nice addition, even though the only way to get to it was to walk around the cottage on a little gravel path to the woods side of the building. In some ways it was my preferred shower, especially this morning when I really didn't want to see a lot of people.\n\nI turned on the water and stood under the hot spray in the little shower stall, thinking about Jen and how complicated my life had suddenly become. Just the thought of her sexy little body gave me a hard-on, which I started to stroke slowly thinking about her.\n\n\"You know, you'll go blind doing that,\" I heard Cindy say, startling me and making me nearly fall in the shower.\n\n\"What are you doing in here?\" I hissed quietly.\n\n\"Came to see you of course,\" Cindy said with a giggle. \"And I'm seeing quite a bit. You know, I can take care of that a whole lot nicer than your hand.\"\n\n\"Cindy!\" I hissed as she stepped into the small shower stall with me.\n\n\"Now Scott. I wouldn't protest too loudly. I happen to know that someone spent the night someplace else, and not in her own tent. You wouldn't want that to get around, would you?\"\n\n\"Seriously? How would I know anything about that?\" I lied.\n\n\"Oh Scott, don't try to play innocent. You forget, I saw you two together practically naked. It didn't take a genius to figure out what was going to happen next.\"\n\n\"Yeah, until you butted in,\" I said with a frown as her hands closed around my cock.\n\n\"Oh, yeah. And it was so worth it. I wouldn't mind a bit more of that.\"\n\n\"Not likely,\" I answered.\n\n\"Oh really? That's a shame. You wouldn't want Aunt Margret to find out what you're doing with her daughter, would you? You know, it's kind of unusual to find underwear in a boat, and that's exactly what I found in yours. A pair of your own underwear. How do you suppose those got left in there?\"\n\n\"Cindy!\" I said almost angrily.\n\n\"Scott!\" she said mockingly before dropping her voice to a near whisper. \"Look. I know what you two are doing. I just want a little too.\"\n\n\"That isn't the way it is,\" I protested.\n\n\"Well, if you wanna keep your little secret, you better figure out how to give me as good an orgasm as you gave her last night. And yes, I heard you two fucking in your tent last night.\"\n\n\"Awww shit,\" I groaned.\n\n\"Uh huh. Now put this someplace useful before someone else comes to use the shower,\" she said, tugging on my hard cock. Leaving the water running, she pulled me by the cock out of the shower and turned around, bending over and balancing herself against the wall with one hand while she guided me behind her by my cock with the other. \"Come on baby, give it all to me now.\"\n\nI shook my head in disgust and frustration but rubbed my head up and down her pussy lips before pushing it into her. I felt my head slip into her a few inches and then started making quick little strokes, only a couple inches long, as I worked myself deeper into her. I was soon stroking with abandon into her pussy, my thighs slapping lightly against her ass, my hands holding her big tits which were trying to swing wildly beneath her. She stifled a number of moans, which came out more like soft sighs as I continued to pound into her, my hands holding her big soft tits, my fingers squeezing her nipples.\n\n\"Oh God Scott,\" she moaned softly, \"Sooo fucking good.\"\n\n\"Uh huh,\" I grunted in reply, my own orgasm building and washing away any remaining thoughts that this was being blackmailed from me. In and out I stroked, her pussy spasming around my cock as I kept going, my cock pistoning into her over and over again as she muffled her cries of pleasure with the towel hanging on the hook on the wall. \"Fuck!\" I grunted quietly as my body spasmed, jamming my cock deep into her and unloading a huge gush of hot cum. Time and again my body bucked, pushing my cock deep into her and adding to the huge load I was leaving inside her. Finally, breathless and shrinking, I pulled from her pussy, a heavy trickle of our combined cum leaking from her pussy and dripping to the floor as she continued to stand, bent at the waist, holding onto the wall for balance.\n\n\"God damn,\" she whispered when I stepped back into the shower to wash off the new sweat and to clean the smell of sex off.\n\nI finished washing, stepped out of the shower and, grabbing her arm, coaxed her into the shower as well. I let her wash herself while I dried myself off, and then quickly pulled on a pair of shorts, ducking out of the little bathroom before Cindy could finish and get out.\n\nI ducked into my tent, pulled on socks and shoes and a shirt and then headed down to the water to get my boat ready. Hoping that Jen was up and in the cottage, I headed up for some breakfast. One of my aunts was busy cooking some bacon and eggs, which I waited patiently for. With my plate of food eaten, I looked for Jen who was sitting at the little game table in the other room with Cindy.\n\n\"I'm headed over to the back pond again, wanna come?\" I asked, specifically aimed at Jen.\n\n\"Oh I'd love to!\" Cindy answered quickly.\n\nI started to open my mouth to protest that I wanted to take Jen, but a finger to her own lips prevented me from answering. \"I'd come too, but I don't think your boat is quite big enough for all three of us,\" Jen replied. \"Why don't you go ahead and take Cindy and I'll go this afternoon. Sound good?\"\n\n\"Uh. Yeah, sure,\" I answered.\n\n\"Great! Let me go change,\" Cindy said enthusiastically.\n\n\"I'm ready to go now,\" I answered curtly.\n\n\"Oh, well then I'll go as is!\" Cindy answered as she got up from the little table and heading for the door in bare feet, a pair of short shorts and a white t-shirt.\n\nJen gave me a little wink before I turned to stalk out, feeling like my plans had just gotten totally trashed. Cindy followed me down to the water and stood on the dock while I got the boat pushed in and moved to the dock. She stepped down in gingerly and sat on the middle seat facing the stern where I would be sitting in a few moments. I stepped in myself and pushed the boat off, letting it float out into the lake as I got the little engine started. I turned the boat and headed across the lake at its top speed, Cindy staring back at me with a huge smile on her face.\n\nThe little engine was far from quiet while I had it throttled up, making conversation, thankfully, difficult. I was rather irritated with Cindy, and I really didn't feel like talking to her at the moment anyway. I throttled back to go under the highway bridge and then opened it back up full to head to the culvert under the county road, finally slowing and shutting down the engine to have enough momentum to coast into the culvert against the current that flowed through it.\n\n\"Well, this is interesting\" Cindy said as I stood up in the boat and pushed off the sides of the culvert to propel us through the long dark tunnel. With my hands busy, Cindy took the opportunity to reach for my shorts, quickly unsnap them and pull them down, leaving me standing mostly naked in the boat. \"So, no underwear. Guess I can figure out what you had in mind with Jen,\" she said with a giggle.\n\n\"Yeah, something you spoiled.\"\n\n\"Don't worry. You'll have your chance this afternoon,\" she said with a smile, \"assuming of course that I don't wear you completely out, as if that's even possible.\"\n\nI frowned as I pushed us out of the end of the culvert and quickly grabbed my shorts as I sat down, pulling them mostly all the way up as I dropped to the seat inadvertently leaving my cock and balls exposed to her as I dropped the engine and fired it up before the current could carry us back against the shoreline.\n\n\"So what now? You really wanna fish or how about we just go find a quiet corner for some serious sex?\" Cindy asked as the engine fired and I started motoring us slowly across the back bay.\n\n\"I suppose if I want to fish, I'm going to have to do something with you first, huh?\"\n\n\"That's the general idea,\" she said as she pulled her shirt up and off. She reached behind her and undid her bra and pulled it off with us still well in sight of the roadway. With a devious little smile on her face, she undid her shorts and pushed them down, leaving herself completely naked as she sat in front of me, my cock hardening as I stared at her naked body.\n\nDon't get me wrong, she's a VERY good looking girl. Any guy would be foaming at the mouth to fuck her if she were sitting naked in front of them, and while I wasn't quite after it like a rabid animal, my body simply couldn't help but respond to the incredibly sexy view and situation. I ran the boat around behind a point to hide us from the road and pulled into the shade by the shore, running the bow up onto the soft shoreline.\n\n\"So, here I am. Anything you want to do,\" she said quietly, spreading her legs apart so I could see her pussy.\n\n\"If you want it so bad, I think you should suck my cock a while, just to get me turned on,\" I answered her, thinking that might slow her down a bit. Not that I haven't ever had it done, but only twice, and neither time did Tamera seem to enjoy herself, not nearly as much as she enjoyed me going down on her.\n\n\"Not a problem. I LOVE to suck cock, as long as that cock ends up fucking me senseless!\" she said with a grin as she slipped off the seat to kneel on the bottom of the boat in front of me. She pulled on my shorts, and I lifted off the seat, letting her pull them down, her hands pulling them all the way over my shoes and off completely. \"Much better,\" she said as she leaned her face down to my cock and engulfed me with her hot mouth.\n\nI felt her tongue swirl around my head as her hand closed around my shaft, her hot wet mouth moving up and down slowly on my shaft, her hand following. Up and down her lips went, pushing me into her mouth as far as she could before pulling back, my long fat cock only half gone before she had to stop. \"Oh damn that feels good!\" I groaned as she bobbed her head up and down in my lap, her hand following her lips, twisting back and forth as it traveled up and down my saliva lubricated cock.",
        "I reached down to her chest, cupping both tits and felt her moan around my cock as I began to knead and play with her bit soft tits, her nipples rock hard against my palms. I could feel the breeze blowing gently across us, little ripples helping to rock the boat along with Cindy's bouncing body, but I couldn't have cared less at that point. After several minutes playing with her tits, I pulled one hand to her ass and reached down, stretching as far as I could to find her wet pussy with my fingers. I pressed one finger between her lips and rubbed it as she continued to bounce up and down my cock.\n\n\"Okay. That does it. I gotta fuck you!\" she said as she suddenly pulled her face from my cock. She stood up and stepped across me, standing in the small space between the back seat and the transom, reaching down with one hand for the motor behind me to balance herself as she bent her knees and lowered herself towards my lap. She reached between us, her hand going between her own legs to find my hard cock and hold it up while she nestled the head between her lips. \"Ohhhhhh fuck yes, fuck yes,\" she groaned as her pussy enveloped my saliva coated cock. She lowered herself down until she was sitting on my lap facing me, my cock pressing against her cervix deep inside her hot wet pussy, her ass wiggling around on my lap as she moaned softly in pleasure. After several seconds she moved her other hand to the engine and levered herself up, lifting a few inches keeping just my cock inside her pussy before she dropped quickly back down on me, causing the whole back of the boat to bounce in the water slightly.\n\nUp and down she went, using her legs and hands to lift herself and then dropping herself down hard on me. Each stroke drove my cock hard against the end of her tunnel and caused her to gasp, presumably in pleasure. Her eyes closed and her sandy blonde hair was flowing down her back as she tilted her head back. My hands cupped her big tits, feeling the bounce each time she came down, my thumbs rubbing back and forth across her nipples.\n\nAfter nearly five minutes of her attentions, she looked at me and sat on my lap, wiggling her ass around again. \"Scott, would you please fuck me? I want you to fuck me hard. Take me from behind and drive your cock hard into my pussy over and over like you did in the shower. Will you do that? Please!?\" she practically begged.\n\n\"Yeah, sure,\" I answered.\n\nShe grinned at me, lifted herself up and off my cock with a loud slurp and climbed out of the well to stand in the middle of the boat. She turned away from me and bent over, kneeling down over the middle seat, her knees and hands on the bottom of the boat. She pushed her ass at me and spread her knees apart so her pussy was displayed for me, looking back expectantly for me. I slipped off the seat and knelt between her legs, my cock resting against her firm round ass. \"Oh yeah. Come on, fuck me Scott. Fuck my hot little pussy!\" she plead.\n\n\"Uh huh.\" Was all I could answer as I rubbed my cock up and down her wet slit to spread her lips and find the entrance to her tunnel. I pushed easily into her, driving my cock into her until my thighs slapped her ass, making her whole body shake before me. I held her hips and started pumping in and out of her, each stroke driving my cock fully into her.\n\n\"Ohhhhh God yes Scott. My God yes, yes, yes!\" she cried loudly as I plunged into her over and over, her whole body starting to tremble as she held herself over the boat seat.\n\nI closed my eyes and pumped in and out of her, driving my cock into her and my own impending orgasm closer. Almost without warning my body bucked hard, jamming my cock into her so hard she nearly collapsed over the seat, my cock gushing a huge shot of hot cum into her pussy. I held onto her and pumped more cum into her, each new jet accompanied by an involuntary shove of my cock.\n\n\"Ohhhhhhh God yessssssss!\" she moaned loudly as I leaned over her, letting go of her hips and moving one hand to the boat seat and the other up under her chest to cup one of her soft tits.\n\n\"Okay. That's what you wanted?\" I asked breathlessly.\n\n\"Oh God yes. Geez what a cock,\" she mumbled.\n\nAs my cock started to soften, I pulled from her and sat back on the back seat, allowing her to pick herself up and turn around, sitting on the seat naked in front of me. \"You know, you do have a pretty damn hot body,\" I said as I worked to catch my breath.\n\n\"Ohhhh, thank you. You wanna see it some more?\"\n\n\"I wouldn't complain.\"\n\n\"If you can keep us out of sight of the road, I'll stay naked as long as you want,\" she said with a grin. \"Never fished naked, but I bet you haven't either.\"\n\n\"I haven't,\" I agreed.\n\nWith a grin, she reached for our fishing rods and handed me one, while she turned herself sideways on the seat, waiting patiently for me to get the oars set so I could maneuver us around the Lily pad covered bay.\n\nWe floated around the bay for almost an hour, casting out into the reeds and catching a few small fish before we decided that without sunblock we'd get our private parts burned. We dressed and I headed us back for home, declining to have \"one more round\" as she put it.\n\nWe pulled into the dock a little bit later and I pulled the boat up onto the shore to make room for the other bigger boats that were apparently still out fishing or just riding. As I walked up towards the cottage, I was surprised to see my older sister, Trudy, laying in one of the few sunny spots in the grassy yard, sunning herself along with Jen, Amanda and two of my slightly younger cousins, Samantha and Frieda. None of them were clad in much, drawing my complete attention as I walked up and looked down at my sister. \"Hey Sis!\" I said as Cindy walked up behind me.\n\n\"Hey little brother. Having a good time?\" my sister responded, lifting herself up on one elbow, lifting her head and shielding her eyes with her other hand to see me.\n\n\"Yeah, not bad,\" I said as I knelt down on the grass next to her. I was kind of surprised at how skimpy her little white bikini was, almost smaller than the one Jen had on again. To say she was hot was an understatement. Hell, I didn't know they made suits that small! Now my sister was a looker, always had been. She had confidentially told me once that her breasts were thirty-eight double d's, which in anyone's book was flat big. But she had the rest of the body to go with it, full round hips, thin waist, firm round ass, short cropped brown hair and blue eyes that could seduce a freight train if she wanted to. Two years older than I was, she was almost ready to graduate college, and last time we talked, get married. \"I didn't think you were going to make it this year. A little birdy told me that Marlin was taking you to Florida for the Fourth.\"\n\n\"Yeah, that was kind of the plan, up until May that is.\"\n\n\"Why, what happened in May?\" I asked as she frowned at me.\n\n\"That's when I caught Marlin messing around with Shannon.\"\n\n\"Huh? Shannon? As in Shannon your roommate at college?\"\n\n\"Uh huh. Finals week. I came back from my exam a little early and he was on the bottom bunk banging away on my naked roommate,\" she said with acid dripping from her voice. \"Needless to say the engagement is off.\"\n\n\"I don't get it,\" I said quietly. \"I thought you two were going for the whole thing.\"\n\n\"So did I, but apparently a bleached blonde with bigger tits than mine was more than he could handle. In his defense, she came out of the shower naked while he was waiting for me to come back, but hell, I never expected that twit roommate of mine to seduce my boyfriend.\"\n\n\"Man, that's rough,\" I said shaking my head slowly and frowning.\n\n\"Yeah, so boys are off the menu right now,\" she said as she lay back down and closed her eyes.\n\n\"Well, keep wearing things like that and you'll have 'em eating out of your hand.\"\n\n\"This? This is what I bought for our trip. You're actually the first guy to see me in it, instead of him that is. It was supposed to be a surprise for him, along with one or two other little surprises,\" she added.\n\n\"Damn, Sis. Sorry. If you need to talk, well, you know where to find me.\"\n\n\"Yeah, out on the water. Heard you got your own boat.\"\n\n\"Yeah, little but mine,\" I answered.\n\n\"Maybe you can take me out in it after lunch? You always were the best at finding the fish out here.\"\n\n\"Well, we can't go far. It's only a 3 horse, but I'm sure we can find someplace.\"\n\n\"How about the bay on the other side of the bridge. There's lots of secluded little fingers that should be ripe for casting.\"\n\n\"Yeah, I was planning on going over there later today,\" I said thinking about Jen. \"I've snuck through the culvert into that little bay on the far side. Got lots of fish, but only smaller stuff. I'm thinking there just isn't enough deep water to hold the big boys.\"\n\n\"Well, if you don't mind, I'll tag along,\" she said as she lay her head back down, clearly not wanting to be argued with. \"Give us a chance to catch up.\"\n\n\"Sure, after lunch,\" I answered, my heart sinking at the thought of losing the time with Jen. I pushed myself up from the grass and headed up to the cottage to get something to eat.\n\nLunch at one of these is an informal affair. Food is ready and out for a couple hours, with people just filtering through to get what they want when they're hungry. Sometimes there will be some special goodies, like today, someone cooked up some fish that was caught fresh yesterday, a wonderful change from the usual sandwiches. I ate my fill, leaving plenty for others, and then headed back down to the dock to sit on the bench and watch the water. I hadn't been sitting too long before Jen showed up in her tiny bikini and sat next to me.\n\n\"So, gonna take Trudy out later?\" she asked quietly as she sat down next to me.\n\n\"Yeah, you can come too. I think I can fit three in the boat.\"\n\n\"Won't be the same though.\"\n\n\"Yeah, I know. I would have liked to get some alone time too,\" I said, barely louder than a whisper.\n\n\"I know. When Cindy grabbed my seat this morning, I figured we'd just go this afternoon and have some more time, but this kind of ruins that.\"\n\n\"You don't have to go if you don't want.\" I said, wondering if it would be more difficult if she did.\n\n\"No, that's fine. I'll go,\" she answered quietly.\n\n\"There you two are,\" my sister called as she walked down the dock wearing a long t-shirt covering her bikini. \"Wondered where you got to. You ready to go out?\"\n\n\"Sure, any time you are,\" I answered.\n\n\"You always had plenty of rods around, you have one for me or do I need to find one?\"\n\n\"Naw, I got plenty,\" I answered as I stood up.\n\n\"Good, let's go! Been a while since I was able to get any time with my little brother,\" she said with a smile.\n\nI got up and followed her off the dock and around the shoreline to where I'd beached my boat. I shoved it out into the water and then had her hold it there while I ran up to the garage and got another life jacket. She dropped a small red canvas bag into the boat and a cooler with some drinks and then I climbed in the back. Jen got in next and then finally my sister, pushing the boat out before she stepped gingerly in. My sister and Jen sat in the middle seat, looking towards the bow as I started the engine and backed the small boat away from the shore.\n\nTo say it was a slow trip would be an understatement. The small engine was more than enough to get the boat up on plane with just me in it. With Jen the bow rode high, and it tried, but couldn't quite get on plane, still running at a respectable pace. With three of us in the small boat, the little engine had no chance at all of getting up on top of the water and we plowed our way through the waves across the lake at maybe ten miles an hour or even slower.\n\n\"So how are things going with my brother?\" I overheard Sis ask Jen.\n\n\"Oh, we're catching up,\" she said evasively.\n\n\"That isn't what I meant, and you know it. How are things going? I know you two have always been close, but it seems like there's a bit more going on this year.\"\n\n\"Huh?\" Jen asked in surprise.\n\n\"Come on, just between us girls. I saw the look on his face when I asked to come, and he said he was planning on taking you,\" my sister prodded. \"What's going on?\"\n\n\"Nothing!\" Jen answered sharply.\n\n\"Now that wasn't obvious,\" my sister said. \"Come on, give! You two doing horizontal mombo?\"\n\n\"NO!\" Jen protested. \"Nothing like that!\"\n\n\"Uh huh. And I'm supposed to believe that? Look, it doesn't make any difference to me one way or the other, but if you're gonna you need to hide it better. If I could pick it up in only a few minutes, someone else may figure it out too. If it's one of our parents, well, that wouldn't be a good thing, now would it?\"\n\n\"No, it wouldn't,\" Jen agreed.\n\nThe two sat quietly after that until we motored under the highway bridge. I idled the motor down, letting it just tick over as we got our rods ready to go. I planned on slow trolling crank baits over the numerous gravel points in the bay, looking for those resting but hungry walleye and northerns. My sister and Jen both turned around to face me, their rods sticking out the sides of the boat while I let mine trail straight behind me. I kicked the small engine in gear and began working us slowly along the shoreline.\n\n\"So Scott? How are things with what's her name. That little thing you've been dating forever?\" my sister asked suddenly.\n\n\"Tamera? We're done. She decided that college out East had lots more opportunities to date than waiting to come home for me,\" I answered with a frown.\n\n\"Ohhhh, I see. Sorry little brother. I know you two had quite a long relationship.\"\n\n\"Yeah, well, shit happens,\" I said as I steered the boat around the end of the little bay and headed for the first point. We were part way down the shore line when my sister pulled her t-shirt off, leaving her sitting on the seat three feet from me in that same incredibly small bikini she had on while she was out tanning. She twisted around to stuff the shirt in the bag in front of her seat, the tiny triangles pulling awkwardly across her breasts and allowing part of one areola to slip out the side of its covering. She turned back to face me and left the top slightly askew, either on purpose or unknowingly. Either way my cock grew quickly in my shorts, extending down the leg rather than tenting me up, thankfully, since Jen and I had made the pact not to wear underwear. I couldn't help but stare at her tits as we worked down the shore, each move she made making her big tits wiggle sexily, the incredibly tiny triangles straining against the tiny strings trying to hold them in place. The amount of her breast exposed was, well, flat incredible. The whole round breast was exposed with the exception of a three inch high by two inch wide triangle sitting right over the middle of her breast, trying to hide her areola and nipple. The material of the triangles was light enough that her partly hard nipple clearly poked it out. The only way she could be more naked was if she took the tiny bits of material off completely.\n\n\"So little brother, tell me, what's got you so turned on?\" my sister asked part way through the long slow turn around the first point, dragging the lures over the rocky point and hopefully past some of the fish hiding there.\n\n\"Me? Nothing,\" I lied.\n\n\"Come on. Your woody is practically sticking out of the leg of your shorts. You getting turned on by your own sister's body?\"\n\n\"Hell Sis! You're damn near naked!\"\n\n\"I have a bikini on, you really can't see anything.\"\n\n\"Yeah, sure,\" I answered, shaking my head.\n\n\"What?\" she asked, looking down at herself, finally realizing that almost half of one areola was exposed, the nipple almost ready to slip out the side as well. \"Oh,\" she said as she reached up and pulled the material back in place. \"That better?\"\n\n\"I suppose,\" I answered.\n\n\"You'd rather I was just naked? You don't have a thing for your own sister, do you?\"\n\n\"Sis, you know damn well you're a looker. Shit, every guy within a hundred miles would kill to have you undressed in front of them.\"\n\n\"Yeah, but every guy within a hundred miles isn't your sister.\"\n\n\"Yeah, there is that. Guess I shouldn't be turned on by my sister,\" I said.\n\n\"Or fucking your cousin, but that hasn't stopped you, has it?\" my sister said a bit snidely.\n\n\"Yeah, sort of,\" I answered.\n\n\"That's what I thought,\" she said, her face turning back to a crooked little grin instead of the accusing glare of a moment ago. She reached behind her neck, pulled the little string holding the almost non-existent top in place, letting the material fall down and expose her breasts completely. She moved her hand down behind her back and pulled the second tie and lifted the material from her body, leaving her looking like she was completely naked; the only indication she wasn't was the pair of small white strings running up from between her legs and around her hips. \"How about it Jen, gonna join me in teasing the shit out of Scott?\"\n\n\"What? Topless?\" Jen asked in surprise.\n\n\"Hell yeah. You know a better way to tease him? And it's not like he hasn't seen you naked, right?\"\n\n\"Well....Yeah, I guess,\" Jen answered nervously, looking at me for some confirmation of what to do. I gave her a tiny shrug, not knowing what my sister was really up to, after which Jen set the rod down, pulled her t-shirt off and then the tiny green top of her micro-bikini.\n\n\"No point in stopping there. Lose the shorts too,\" my sister said, looking down at the short shorts Jen had on covering her bikini bottoms.\n\n\"You sure?\" Jen asked.\n\n\"Oh hell yeah. Gonna tease a guy, you better damn well learn how to do it right,\" my sister said as she held the rod with one hand and then pulled the string on one hip. She switched the rod to the other hand and pulled the second tie, pulling the small white triangle away from her body, leaving her absolutely naked. Not that I could really see any more than a moment ago, my sister keeping her knees together, but the thought of her completely naked made my cock harden even a little more.\n\nJen looked at my sister and them back to me before wiggling herself out of her shorts. My sister reached over and pulled the ties of Jen's suit bottom and tugged until Jen finally lifted herself off the seat enough to slip the material off, leaving her as naked as my sister.\n\n\"Damn sis!\" I said, staring at the two nude women only a couple feet from me.\n\n\"Yeah, I know. Pretty hot huh? How many guys get to have two hot sexy women naked with them? Now you gonna do it, or should I?\"\n\n\"Do what?\"\n\n\"Take your shorts off of course. You don't think we're sitting here naked just cuz we like to, do you? We expect you to reciprocate.\"\n\n\"Well, my hands are full,\" I answered, lifting my hand holding the rod while the other was holding the tiller of the little gas engine.\n\n\"Okay. We will then,\" Trudy said with a grin, leaning towards me and reaching for my shorts.\n\n\"Hey!\" I protested, pushing the fishing rod down to my lap to try and block her hands.\n\n\"Okay, you do it,\" she said to Jen.\n\n\"Seriously?\" Jen asked, staring at her. \"You want me to take your brother's clothes off in front of you?\"\n\n\"It's not like you haven't taken 'em off of him before, right? What's the big deal?\"\n\n\"Well...you're his sister.\"\n\n\"And I'm naked too. So what's the deal?\" she said, starting to sound exasperated. \"I thought I'd be able to teach you two a thing or two. I know you're fucking and trying to hide it. I thought I'd give you a thing or two to do other than just that so you could still enjoy each other without having to do just that. But if you don't want to....\"\n\n\"Well, that makes a bit more sense, but why? Why help us?\" Jen asked her quietly.\n\n\"Simple. I know how hard it is to not have the one you love. I also know that the family would have a conniption if they found out what you two were doing, so, I just thought I'd be nice.\"",
        "\"That I understand,\" I answered, setting the rod down and reaching for the snap of my shorts. I undid the front and Jen pulled them down, off my butt and down my legs, waiting for me to lift each foot before pulling them off and dropping them to the bottom of the boat. I let her lift my shirt up and pull it off, leaving me as naked as they were except for my Converse tennis shoes.\n\n\"Damn little brother. You ain't so little down there, are you?\"\n\n\"No, he's not,\" Jen said with a grin. \"He's anything but little when he's inside me.\"\n\n\"Lucky girl!\" my sister said quietly. \"Okay Scott, find a nice place to park for a while.\"\n\n\"Sure thing,\" I said, taking my hand off the tiller to reel in my lure. With my line in, I aimed the boat towards a tree that had fallen into the lake, easing it gently up so the bow was nestled into the shore and the trunk of the tree, the branches helping hide us from anyone that might come into the bay. I climbed carefully between them to get to the bow and tie it off to the log before turning around and standing there, my cock jutting out at them, waiting as they turned around on the boat seat to face me.\n\n\"So. Fucking is great. But sometimes it's nice to do other things. Personally I enjoy sex a lot more after my boyfriend went down on me for a little bit. So I'm gonna teach you a little about anatomy, whether you think you need it or not.\"\n\n\"I think I know the anatomy!\" I said with a frown.\n\n\"Okay smart ass,\" my sister said, leaning back and putting both hands on the bottom of the boat behind her so she was almost laying down. She lifted her feet and set them on the sides of the boat, one on either side, spreading her legs wide open in front of me. \"Lick my pussy. Show me you know what you're doing!\"\n\n\"I'm not going to do that!\" I snapped.\n\n\"Why? Because I'm your sister? Why don't you forget that for the moment, think of me as just another hottie wanting your sexy cock? Get down here and lick my pussy!\"\n\n\"SIS!\" I said in irritation.\n\n\"What? I thought you knew what you were doing. Come on and show me!\"\n\n\"I can't!\" I said almost angrily.\n\n\"Why? You don't know what to do? Or you just don't want to?\"\n\n\"Cuz you're my sister!\" I snapped back.\n\nShe pushed herself up and dropped her feet. \"Damn Scott. You're fucking your cousin for God's sake. You think licking my pussy is worse than that? You better think again!\"\n\n\"Shit Sis, it's a lot different!\" I protested.\n\n\"Fine. Come here,\" she said demandingly.\n\nI shrugged and stepped over the little bow seat where I was standing after tying up the boat and stepped closer to her. Her hands snaked out, one grabbing behind me to grab my ass and the other for my rock hard cock.\n\n\"Oh shit,\" I grunted as she leaned towards me and engulfed my cock with her hot mouth. Up and down she stroked, pushing her face closer and closer to my body until I thought she couldn't take any more of me in. In a surprise move she pressed even farther, pressure around my head changing as she pushed my cock head right down into her throat. She bounced her face on and off my cock quickly several times before pulling her face off my cock with a short gasp.\n\n\"That's called deep throating. It's where I take your cock all the way into my throat. I'll teach you that if you want,\" she said to Jen as she continued to stroke my saliva coated cock. \"Really nice cock by the way little brother. Now, you ready to lick my pussy and show me what you can do, or what?\"\n\n\"Hell, I guess,\" I answered as she looked up at me.\n\nShe let go of my cock, leaned back again until she was practically flat and lifted her legs, spreading them in a wide V that split her pussy lips apart, allowing me to see right into the beginnings of her deep recesses. I knelt down in front of her and leaned my face towards her, tentatively licking my tongue up her pussy.\n\n\"You haven't ever really done this, have you?\" she asked as I licked my tongue up across her lips.\n\n\"A few times,\" I answered. \"But she never really cared for it.\"\n\n\"I can see why. Use your tongue to press between my lips. Dig it in there. Pretend that you want to shove it all the way into my belly and then lick along my pussy until you find the end of my pussy lips. Right there you'll find a little hard spot. You wanna play with that. Swirl your tongue around it and flick it. That's my clit. That's the real trigger to sex for a woman. There you go. Lick a bit deeper, really press into there. Ahhhhhh God yes. There you go. Keep doing that!\" she said in practically a moan. \"Oh God yes. That feels soooo good. Now watch my body. Reach up and play with my tits if you want, but don't get distracted. Listen to my voice and watch my body. See how my hips want to move up to meet you? That means you're getting the sooooo fucking damn good spot. Ohhhhhh fuck yes. See my legs. See how they're trembling? It means you're getting me closer to climax.\"\n\n\"You going to come?\" I asked curiously, the fingers of one hand squeezing and playing with one of her nipples.\n\n\"Not yet, but you're definitely getting me closer. Ohhhh God yes. You're a fucking good learner. Now forget my tits for a minute. Push a finger into me,\" she moaned.\n\nI pulled my hand back down between her legs and pushed my index finger slowly into her hot wet tunnel, feeling her pussy grip and caress my finger.\n\n\"Now, concentrate on my clit with your mouth. Just circle your tongue around my clit and then flick back and forth across it. At the same time, curl your finger up inside me, try to curl it all the way around my pubic bone. Ohhhh yeah, right there. Not every woman has one, some can't find it, but right around there is what they call the G-spot. If you can find it, rub your finger around it. Oh God, oh God yes. Right there. Feel that. I can. God damn yessssss!\" she squealed loudly as her whole body began to shudder and shake, juices leaking from her pussy and gushing out over my hand as her body convulsed around my finger. \"Okay, okay. Stop now. Not too much. Too much of a good thing isn't fun anymore,\" she said, pushing herself back up and pushing me gently from between her legs. \"Okay Jen. Your turn now,\" my sister said, sliding to the side and making the little boat tip precariously for a moment before it settled back into the water.\n\n\"I'm not so sure...\" Jen started to protest.\n\n\"Come on honey. Trust me on this, you'll love it!\" my sister coaxed, trying to get Jen to lean back and spread her legs.\n\n\"I don't know,\" she said nervously.\n\n\"What? You afraid for him to see you that close? Listen sweetie, if you love him and he loves you, this is easy stuff. Just remember that with lovers nothing is a secret. What's yours is his and what's his is yours.\"\n\n\"If you say so,\" she said, lifting her legs and propping them on the sides of the boat, trying to sit up at the same time.\n\n\"You're gonna have to lay back. He can't really get in there if you don't.\"\n\n\"Okay,\" Jen whispered, leaning back gingerly, first on one hand and then on the other. Unlike my sister whose pussy had a lot of wavy soft skin sticking out, Jen's pussy was mostly contained in her round firm lips.\n\n\"Just use your fingers to spread her apart. Everything inside is just the same,\" my sister whispered to me as I tried to lick my tongue between Jen's tight round lips.\n\nI pressed my fingers on her pussy and pushed her lips apart, revealing her pink inner depths. I pressed my tongue between her lips and slowly licked up between them, tracing the tip of my tongue along her pubic bone until I came to the end of her slit and found the hard nub hidden right at the juncture of her lips.\n\n\"Oh God,\" she gasped as my tongue flicked across her clit before heading down for another long slow lick.\n\nIt didn't take me long to get into a rhythm, licking up her slit and then spending a few seconds teasing her clit. I managed to relocate my hands and use only one to hold her pussy apart, freeing my other to reach up and roam from breast to breast, playing with her tits and nipples.\n\n\"God this feels good,\" she moaned softly.\n\n\"Uh huh. Doesn't it?\" my sister asked with a grin. \"Go ahead and push your finger into her. See if that pushes her a little farther.\"\n\n\"Okay,\" I answered, pulling my hand from Jen's tits to slip a finger into her tight tunnel.\n\n\"Not all women respond the same. Some don't shake hardly at all; others will buck and shake so much they can't sit still. You just have to learn what your partner does and use those cues to know when to push for the end.\"\n\n\"Uh huh,\" I answered, sliding my finger in and out like a little cock, each trip in curling my finger up so it rubs across the top of her tunnel.\n\n\"I don't know what you're doing, but don't stop!\" Jen practically demanded in a long deep moan.\n\n\"I think you found it,\" my sister chuckled.\n\nI continued to stroke in and out, tracing my finger across the insides of her pubic bone and across the top of her tunnel as I flicked and swirled my tongue around her clit.\n\n\"Now suck it between your lips and squeeze her clit a little,\" my sister whispered, reaching over to Jen's chest, and squeezing and pulling one of her nipples.\n\n\"OH shit!\" Jen squealed suddenly, her whole body jerking in a huge spasm that threatened to bounce her right off the seat of the boat. \"AHHHHHHHHH!\" She cried long and loud as her whole body suddenly seemed to go rigid. Only her hips seemed to move, bucking up at me uncontrollably as I went back to licking her clit. \"FUUUUUUUCK!\" she squealed again, my whole hand, arm and chest getting doused with a liberal stream of juices from her pussy.\n\n\"I think she peed on me,\" I said with a frown.\n\n\"That wasn't pee,\" my sister laughed. \"That was her cum. Just like you cum, a lot of women are capable of coming like that. We call it squirting. It only happens with a really hard climax. So if you're wet, it's because you did a good job!\"\n\n\"Oh,\" I answered. Still not sure.\n\n\"Taste it,\" my sister said.\n\n\"Huh?\"\n\n\"Taste it! You don't believe me. Taste it! Go ahead. If a girl can swallow a guy's cum, surely you're not afraid of tasting her cum. I mean you've been licking it for the last fifteen minutes.\"\n\nI shrugged and ran a finger across my chest and collected some of the juice still hanging on my skin and tasted it. No, it definitely didn't taste like pee to me.\n\n\"Okay, now you can fuck her,\" my sister said with a grin. \"A lot of women really enjoy getting screwed right after a good orgasm. Everything inside is really sensitive and it can often give them a second orgasm pretty fast.\"\n\n\"What? Now?\" I asked.\n\n\"Yeah, you're not bashful, are you?\" my sister asked with a giggle. \"Oh come on little brother. You got a big cock; I have no doubt you know how to use it. Go for it!\"\n\nI looked at Jen who just nodded, her chest still heaving up and down as she worked to catch her breath. I lifted myself to my knees and aimed my cock at Jen's spread pussy. My cock slipped easily into her sopping wet pussy, my head stroking the length of her tunnel as I started pushing in and out of her, drawing my cock out until only my head remained inside before pushing back in.\n\n\"That's it. Stroke long and slow at first. You can speed up later, but let her body adjust. Let her feel your cock tease her insides.\"\n\n\"Uh huh,\" I grunted as I pumped in and out, my hands sliding up her body to her tits, grabbing and squeezing them as I plunged my cock into her over and over.\n\n\"Ohhhhh God yessss! God I think I'm going to come again,\" Jen moaned softly, her hips rocking to meet my strokes.\n\n\"That's it. Listen to her, watch her body. Learn to read her signs. See how her hips are trying to meet yours, it means she wants it harder. Drive in faster.\"\n\n\"Okay,\" I grunted as I started plunging in faster, driving my cock fully into her, my thighs slapping the boat seat with each stroke making the boat bounce and rock.\n\n\"Ohhhh God yesss. I'm gonna come again. Oh God I'm gonna come again,\" Jen moaned loudly as I continued to stroke in and out of her tight little pussy. \"OH SHIT! AHHHHHHHH!\" she cried loudly again as her body bucked and her pussy clenched around my cock. For almost a full minute she bucked in front of me, her body finally stilling and her hands pushing me away as she gasped for breath. \"No more. I need a break,\" she said. \"I'm sorry sweetie.\"\n\n\"Well, isn't that lucky. I got a pussy that wouldn't at all mind getting that cock in it.\"\n\n\"Huh? You want me to fuck you?\"\n\n\"Sure, why not? I'm still horny, you're still hard. You've already licked my pussy, so what's the difference?\" she said as Jen sat herself up.\n\nTrudy moved around to the bow seat and sat down, leaning back in the bow and lifting her legs, resting one on either side of the boat, lifting her knees up and spreading them wide. \"Come on little brother. Give me that cock.\"\n\n\"I don't think...\" I started to say.\n\n\"Don't think. Just do. Don't leave me hanging here. Not with a hard cock like that so close,\" she practically begged. \"Come on, show me what you can do!\"\n\nMy clouded mind was easily swayed, and I got up and stood between her legs. I leaned over her, resting my hands on the bow behind her head, one hand on each side of her head and lowered my cock towards her pussy. She reached her hands for my cock and guided me to her pussy, moaning softly as I sunk slowly into her tunnel. \"Ohhhh God,\" she moaned as I started stroking in and out of her, her hands resting on my hips as I worked in and out of her. \"So much bigger than Marlin ever was.\"\n\n\"Uh,\" I grunted in response, not really caring all that much as the warmth and tingle started to go through me as my climax, which had been every so close in Jen, began to renew itself. In and out I plunged, driving both of us up the slope towards climax. \"Gonna come!\" I grunted in warning just before my body jerked, pumping a gush of cum into her pussy.\n\n\"FUCK YES!\" she cried, one hand moving to her own pussy and frigging her clit frantically as my cock spasmed over and over inside her, adding more to the load until finally my cock began to soften, her pussy still clenching and gripping at me. \"Ohhhhh my God yes. Geez Scott, can you fuck!\"\n\n\"Just do it,\" I panted.\n\n\"Yeah, well you do it pretty fucking good. Damn you've grown up little brother. If the other girls knew how good you were, there'd be a line!\"\n\n\"Yeah,\" I said, thinking about Cindy and whoever visited me in the tent that night.\n\n\"Ohhhhh that look. God Scott! Have you been fucking someone else!? Who?\"\n\n\"It doesn't matter,\" I answered.\n\n\"Cindy,\" Jen answered for me. \"He's been fucking Cindy, and I heard Amanda talking that she stole a quick fuck the first night.\"\n\n\"Ohhhh you bad boy! Fucking your cousins!!\" she said in a singsong voice with a devilish little grin. \"Well, now you can add sister to your list.\"\n\n\"Awww shit,\" I said, pulling my softening cock from her pussy and stepping back to sit down next to Jen.\n\n\"Don't worry...Secret's safe with me,\" Trudy said with a smile as she sat up, my cum leaking from her pussy and dribbling down to the floor of the boat. \"Now, about fishing?\"\n\n\"Yeah, I guess we better get back at it, if nothing else just to keep anyone from getting too curious. I haven't brought a keeper back yet this year.\"\n\n\"Ohhhh you? That is unusual, but then you've been a bit busy,\" my sister said with a smile as I found my shorts. \"You're not putting those back on yet, are you?\"\n\n\"I was. We're getting dressed, right?\"\n\n\"We can I suppose. But personally, I'm planning on teasing you a bit more with these,\" my sister said, sliding her hands up her body to her tits and hefting them. \"I know you like tits, every time we get together you stare at 'em.\"\n\n\"I didn't think you noticed.\"\n\n\"A girl always notices those kinds of things. Besides, this is the first sex I've had in months, you think I'm gonna pass that up?\"\n\n\"Well, I gotta head home tomorrow,\" I told her. \"Not much time left.\"\n\n\"Too bad,\" she said with a fake pout. \"Well, let's fish a bit and maybe we'll have time for another round before we head back in. Ever had sex with two girls at the same time?\"\n\n\"Hell no!\" I said with a frown. \"Besides, how the hell would I do that?\"\n\n\"Ohhhh you have so much to learn,\" Trudy said with a grin.\n\nWe went back to fishing but didn't get a chance to do anything else since another boat came into the bay, forcing us to scramble to get decent before they could see us. After a couple more hours trolling around the bay and catching several fish, we headed back in, the girls not putting their t-shirts back on until we were almost back in, which left me watching their bouncing boobs as the boat plowed through the waves and wakes of other boats. All in all a very pleasant view, even if it was my sister.\n\nThe Fourth is always special, and tonight was not a night to go out fishing. During the hour after we got in, the rest of the boats all came in as well for the big feed. That's what we call it anyway. It's a massive bar-b-que where the whole clan gets together to eat, and then as the sun goes down, we all pile into cars and head the twenty miles to town for the fireworks. As usual, the \"feed\" had chicken, bratwurst, and burgers, but the bratwurst, fresh ground of course, is the biggest hit. Over the three hours between dinner being called \"ready\" and leaving for the fireworks I managed to put away four brats heaping with sauerkraut, half a dozen chicken wings, and two burgers piled with tomatoes, onions, and three kinds of fresh Wisconsin cheese. When it finally came time to leave, and the food was put away, I was working on my third can of Pepsi and had changed into a pair of baggy shorts and a t-shirt.\n\n\"Hey little brother, why don't you ride with us!\" my sister called as everyone started sorting themselves into cars.\n\n\"Yeah, sure,\" I answered, my own car buried deep in the parking lot of other vehicles that were parked all over the drive and lawn.\n\n\"You're gonna have to sit in the back though. Someone else already called shotgun!\" she said as I approached the car.\n\n\"Sure, no problem,\" I answered as I walked to the passenger side of the car and opened the door. To my surprise and pleasure I saw Jen sitting in the back seat, wearing a short mini-skirt and sleeveless button down blouse. I climbed in with a smile and started to pull the door closed.\n\n\"Wait for me!\" I heard from just outside the car as Cindy pulled the door back open. \"Scoot over Scottie!\" she said brightly as she started to climb in, using her hip to try and push me over on the seat.\n\n\"Seriously?\" I asked as I scooted over, sandwiched tightly between Jen and Cindy in the back of my sister's seventy-one Hornet station wagon. The little car was far from spacious. The back seat, really designed for two, could sit three kids, but with a large frame in the middle like me, both girls were pressed right up against me on one side and the side of the car on the other. The only saving grace for the car as far as I was concerned was the large cargo space in the rear. Station wagons did have their saving graces after all. Something like this would be a lot easier to deal with my boat than my sixty-four Olds F-85.\n\n\"Yeah, isn't it cozy?\" Cindy asked, her hand almost immediately slipping into my lap and grabbing my cock through my shorts.\n\n\"Yeah, really nice,\" I agreed sarcastically as we pulled out of the driveway with the whole line of cars heading for the highway.\n\n\"You three wanna play, that's fine with me,\" my sister said from the front seat. \"But you might want to wait until it gets just a little darker.\"\n\n\"But what fun would that be?\" Cindy asked, as she slipped her hand down my leg and then up the leg of my cutoff shorts, worming her hand up the leg until she found my bare cock.\n\nMy sister looked at us in the mirror and asked over her shoulder, \"You gonna let her get away with that Jen?\"\n\n\"Actually, no, I don't think I will,\" Jen said as she leaned forward to look past me towards Cindy. She reached to my lap, undid the button of my shorts and then unzipped my pants. She looked at me, raising her eyebrows to encourage me and then pulled my shorts down to my thighs as I lifted myself slightly off the seat. Cindy had to pull her hand from my cock as Jen slid the shorts down but moved her hand back to my lap and grasped my hard cock again, which was now free. I wasn't sure what she was up to, but I found out quickly as Jen undid her seatbelt, slipped off the seat and squatted down in the small space between the back seat and the back of the driver's seat. Leaning towards me she practically slapped Cindy's hand from my cock and then replaced it with her own. Lowering her face to my lap she engulfed my cock with her mouth, her hot wet tongue swirling around my head as she began to slowly bounce her head up and down, sliding my cock between her lips, her hand following her lips closely.",
        "\"Oh damn,\" I groaned.\n\n\"You can say that again,\" Cindy said, looking down at Jen. \"I didn't know she'd do that!\"\n\n\"I will on his,\" Jen answered, pulling her face from my cock for a minute and then going back to sucking my cock.\n\n\"Well. Might as well give him something else to do.\" Cindy said, undoing her tight little white shorts and pushing them down to her ankles, spreading her knees as far as she could. She reached for my hand and pulled it to her pussy, pressing my fingers against her lips. \"Why don't you play with this for a while?\" she asked as she scooted her ass closer to the edge of the seat and leaned her head back as the darkness outside grew.\n\n\"Fuck that shit,\" Jen said crossly, pulling her face from my cock. She lifted herself up, looked around to see how close we were to other cars and then climbed over the seat into the back of the wagon. \"Come on Scott,\" she said, reaching back over for me and pulling my hand up towards her. \"Come fuck me!\"\n\n\"In here?\"\n\n\"Hell yeah. You've got about, what, fifteen minutes before we get there?\"\n\n\"Maybe a little less,\" my sister called back from the front seat. \"At least not until we get to the city streets. You won't want to be doing that then.\"\n\n\"Then you better get to work buddy,\" Jen said as she lay on her side and hiked her mini-skirt up revealing her bare ass in the dim light.\n\nI quickly crawled over the seat and lay down behind her, spooning myself to her and grabbing my own cock. She pushed her ass back at me when she felt my hard cock rubbing her pussy lips, bending her legs to give me more access.\n\n\"Oh God you're tight this way,\" I groaned as I pushed my cock into her a couple short inches and then moved my hand to wrap around her body and cup one of her tits. \"No bra either. I like that,\" I whispered as I started stroking into her in short little jabs, pushing my cock slowly deeper as more of me became lubricated. \"God, I don't know how long I'm gonna last!\" I groaned as I finally got my cock fully inside her. \"Between your sucking and how tight you are, I may blow my load any second.\"\n\n\"That's fine. Just make me come too,\" Jen cooed, her arm reaching back and pulling on my bare ass.\n\n\"Scott. Use your fingers. Don't waste a good fuck!\" my sister called back from the front. \"And don't waste any time back there.\"\n\n\"Uh huh,\" I answered, sliding my hand down to between her legs. She lifted her knee slightly to give my fingers room to stroke and then sighed softly as my fingers stroked up her wet lips and across her clit. In and out I pumped, my fingers stroking in time with my cock as I plunged in and out of her incredible pussy. I felt my head bumping her cervix with each stroke, bringing little moans and whimpers from her lips as the tingle grew within my groin. \"Gonna come,\" I groaned, trying to hold back as long as I could.\n\n\"Uh huh. Almost,\" Jen whispered.\n\nIt only took a dozen or so more strokes and my body jerked hard, driving my cock into her and slapping my thighs against her bare ass loudly. \"UHHH!\" I grunted loudly as my cock surged inside her surging what felt like a massive gush of cum strongly into her pussy. I did my best to keep stroking her clit as my cock jerked time and again inside her.\n\n\"Right there. God right there.....Yes! YES!\" she screamed as my fingers finally pushed her over the edge, her spasming pussy trying to push my softening cock out of her. Her hips bucked and she accidently pulled free of me, her pussy squeezing my cum out into a puddle on the carpet between us. \"Ohhhhhh God yes. Ohhhhhh fuck yes,\" she moaned softly as I continued to stroke her soft wet lips and hard little clit.\n\n\"I hope you save some of that for me,\" Cindy called.\n\n\"Not if I can use it all up first,\" Jen whispered.\n\n\"Hey you two. Exit coming up. I'd suggest you get back in the seats.\"\n\n\"Yeah,\" I agreed, crawling quickly back over the seat and leaning almost on top of Cindy to give Jen room to slip over. The three of us spent the next couple minutes getting what clothing we had taken off, back on, finally looking presentable almost the same time we pulled into the large gravel parking lot of the city park.\n\n\"Better not let anyone get too close. The whole car smells of sex,\" Amanda said from the front seat. \"And by the way, I get to sit next to Scott on the way back!\"\n\n\"Yeah, might be a good idea to change up the spots on the way back. Wouldn't want someone guessing what was going on back there, would we?\"\n\n\"Not really,\" I agreed. \"I think we better cool it here though.\"\n\n\"As long as I can sit by you for the fireworks,\" Jen whispered, her hand closing in mine and tangling her fingers with mine.\n\n\"Yeah, I'd like that,\" I agreed before we disconnected our fingers and climbed out of the car.\n\nWe did end up sitting by each other during the fireworks, sneakily holding hands as the fireworks lit up the sky. With the fireworks over, we made our way to the car, and I ended up sitting next to the door with Amanda sitting next to me.\n\n\"So, what do I get?\" Amanda asked softly as we got under way, my sister trying to keep us making progress towards the exit in the ocean of cars.\n\n\"What'd you mean?\" I asked.\n\n\"Well, I wanted to know what you were going to give me on the way home.\"\n\n\"Give you? Like what?\"\n\n\"I want an orgasm like you gave Jen! I mean you felt so good the other night, my pussy sliding up and down your cock. I really wanted to keep going and come again, but I was afraid you'd figure out I wasn't Jen and get angry.\"\n\n\"So you were the visitor?\"\n\n\"Uh huh,\" she said meekly. \"And it was sooooo good. But I want more before I have to go home tomorrow. I want you to give me a really good climax.\"\n\n\"Oh Lord,\" I groaned.\n\n\"Scott, I'd suggest it's a good time to practice what I taught you earlier, don't you?\"\n\n\"Here? Now?\"\n\n\"Well, until we get out of the traffic, just use your hands. You can go ahead and get naked Amanda. I don't think anyone will notice, not in the dark.\"\n\n\"Now? With all these cars around?\"\n\n\"Not brave enough? That's fine. I'm sure Scott won't mine just relaxing on the ride back,\" my sister said over her shoulder.\n\n\"Well...okay I guess,\" she said as she reached up and untied the little strings of the sundress going over her shoulders. She slipped the dress down to her waist and then lifted herself up slightly to wiggle it down, finally letting the material fall to her ankles and lift each foot out. With only a pair of little white panties on, she hooked her thumbs in the tiny bottoms and pushed them down her legs, stepping out of them as well. \"There, all naked,\" she said with a little more confidence that she sounded like she had a few moments before.\n\nI reached between her legs, and she spread them wide and hooked one leg over mine to give me access, my fingers dipping between her soft lips and stroking up between her wet lips to her clit. I dragged my finger over her clit, drawing a quick gasp from her. \"Oh God,\" she sighed as my fingers rubbed lower again, one finger trying to push into her farther.\n\n\"Uh huh,\" she said, grabbing my arm and holding it tight as I worked my fingers in her pussy, slowly stroking up and down to find her clit and then rubbing my fingers back and forth across it. \"Oh you are making me so damn horny!\" she moaned as we cleared the last of the traffic and my sister turned onto the main two-lane highway. \"Oh God, I want you in me,\" she moaned softly.\n\n\"Hell, Amanda, you're only nineteen!\" I said scowling at her.\n\n\"That didn't stop you in the tent the other night,\" she whispered urgently.\n\n\"Go ahead, give it to her,\" Cindy said with a giggle. \"She's been listening to Jen and me at night talk about it, it's only fair.\"\n\n\"Not to me!\"\n\n\"Well make me come then!\" Amanda practically begged, her hands working my pants open and finding my hard-on. \"See, you're hard. You wanna do it too!\"\n\n\"Just cuz I'm hard...\" I protested.\n\n\"Uh huh. Tell me boys don't wanna do it when they get hard! Come on. Please!?\"\n\n\"You wouldn't want her to tell on you, would you?\" Cindy said with a little laugh.\n\n\"She wouldn't,\" I said shaking my head.\n\n\"No, she's too nice, but I might.\"\n\n\"Now that I believe. Tell you what, you can ride on my lap until we get home. If that makes you come, fine, if not? Well, that's up to you,\" I told her.\n\n\"Oh yeah. Okay,\" she said as she undid her seatbelt and twisted herself around on the seat. She slid herself back until she was on my lap and wormed herself around until she had my cock sticking up between her legs, my hard shaft pressing against her wet pussy. \"Ohhhhh so nice and hard,\" she cooed as she let the bouncing of the car rub her clit up and down along my shaft.\n\n\"Go ahead and put it in,\" Cindy coaxed, leaning over towards us and reaching for one of Amanda's smallish tits.\n\n\"Should I? I mean like this?\"\n\n\"Why not? He said you could ride on his lap, he didn't say you couldn't ride on his dick, right?\"\n\n\"Yeah, you're right,\" she said as she stroked my cock. She leaned forward and lifted herself up, pushing my cock back until I felt my head slide between her wet lips, and then she settled back down, letting her weight rest on my mushroom head. As she settled more weight on me, I could feel my head expand her tunnel entrance and then suddenly burst up into her, sliding easily several inches into her as she let out a sharp gasp. \"Oh God he's so big. He wasn't this big last time!\"\n\n\"That's because I was asleep,\" I said with a frown. I might have been frowning, but inside my body was screaming to do a lot more inside the incredibly tight pussy enveloping me. She settled all the way down until her ass sat on my legs and then rocked herself slowly, moving me in and out of her pussy only an inch or so with each stroke. She found my hand and pulled it between her legs, pressing it to her wet pussy, inviting me to touch and rub her.\n\n\"God, he feels so good,\" she moaned as my fingers rubbed back and forth across her clit, her wet pussy leaking on my balls and fingers as I teased her closer to climax. \"I think I'm going to come. Ohhhhh God yes, I'm definitely going to come!\" she squeaked loudly as she rocked a bit harder, trying to use the seat back as a lever to lift herself up and down my shaft. \"Oh yeah. Ohhhhh God yeah. This is definitely going to do it,\" she moaned.\n\n\"Uh huh,\" I grunted, surprised that I was getting close myself. \"You keep doing that and you're gonna get a load.\"\n\n\"Had one the other night, another is fine by me,\" she said breathlessly. \"Besides, I don't think I can really stop right now anyway!\"\n\n\"Uh uh,\" I said, squeezing her ass with one hand and sliding my other up her body to find one of her small tits. I cupped it with one hand and squeezed it between my fingers and palm as her body trembled on top of me. She continued to stroke herself, her whole body seeming to shake as her strokes became erratic, not that it really mattered. I came a few moments and two strokes later when she screamed that she was coming.\n\nMy body jerked, and I jetted a gush of cum up into her, my cock swelling and sending a second shot of cum into her pulsating tunnel, her moans and gasps pushing my own climax a bit higher. I don't know how long she came, but it was a lot longer than I had, but then she had Cindy leaning over to her and sucking one of her nipples, Cindy kneeling on the seat with one of her hands between her own legs.\n\n\"Well, I couldn't not,\" Cindy said as she pulled back when Amanda began to subside.\n\n\"Yeah. God that was intense,\" said as she sat on my lap. \"Hope you don't mind; I'm not getting off yet. I wanna let his just sink in.\"\n\nFifteen minutes later she finally did climb off, barely able to get her dress on, though not tied before we pulled into the drive. My sister parked in the darkest spot she could, and we all piled out, trying to fix our clothes before anyone noticed. Amanda just held her dress up over her chest and dashed to her tent, squatting down and pulling the zipper open before scooting quickly inside.\n\n\"You made a hit,\" my sister whispered as we stood by the car, letting it block us from the waist down while I fixed my shorts.\n\n\"Seems like it.\"\n\n\"Hey, little brother. I got a question.\"\n\n\"Sure,\" I said with a shrug.\n\n\"Wanna sleep with your sister?\" she asked loud enough to be heard by a number of adults.\n\n\"Huh?\" I asked as she laughed loudly pointing to my face.\n\n\"God, the look on your face little brother,\" she said as she laughed, and several adults stood around waiting to see what was next. \"I didn't mean it THAT way. I meant I don't have any place to sleep, can I share your tent!?\"\n\n\"Ohhhhhh,\" I said sheepishly. \"Yeah, sure. It's the orange one over there,\" I said pointing to where my tent was.\n\n\"Okay. I'm gonna hit the sack. See you in the morning.\"\n\n\"Sure,\" I said as I headed away from her, following the adults into the cottage and heading for the soda cooler for a drink. I stood around for half an hour or so before finally calling it a night at nearly midnight and heading for my tent.\n\nI crawled in and reached up for the little battery light hanging from the ceiling and flicked it on. \"Oh shit,\" I breathed as I looked at my sister, laying completely naked on her sleeping bag next to mine.\n\n\"Turn the light out,\" she whispered, reaching for me. She pulled my shirt up and I lifted my arms to get it off, after which she tossed it aside. She undid my shorts and pushed them down, letting them slide down to my knees as I knelt next to her. \"Those girls getting all turned on and fucked really got me going too. I wouldn't mind letting you get me off,\" she whispered quietly.\n\n\"Really? You want me to screw you?\"\n\n\"Again? Yes, that's exactly what I'm asking.\"\n\n\"Damn Sis,\" I said as I knelt there, my head practically rubbing the top of the tent and her hands stroking my hard cock.\n\n\"Come on. Just push it in. I just want something nice and hard in me when I come. You won't have to do all that much!\"\n\n\"What the hell. I guess we've already done it once,\" I whispered back.\n\n\"Uh huh. Just crawl between my legs and push it in. I've been fingering my pussy for half an hour waiting for you, so it's already good and wet.\"\n\nI wiggled my shorts the rest of the way down my legs, pushed off my shoes and then, naked as she was, moved between her legs. I lowered myself over her as she used her hand to guide me to her wet pussy, her legs spread as wide as she could in the tent. I felt my head press against her wet lips and slip easily inside her as I let my weight down until I was laying on top of her, her soft tits smashed against my chest.\n\n\"God you really are big,\" she sighed\n\n\"Not all that big.\"\n\n\"Oh trust me. I've had a few, and yours, well yours is really, really nice. Not too long, but longer than average. Not too fat, but fat enough. Oh yeah you have a really good dick.\"\n\n\"I got kidded about it in the showers in gym all the time,\" I said.\n\n\"Jealousy. They all wished they had a cock this nice!\" she cooed as I started stroking slowly in and out of her pussy. I slid easily in and out of her hot depths, stroking her vaginal walls with my mushroom head while her walls gently caressed me in all the right places. \"Oh God what a cock,\" she moaned softly. \"So much bigger than Marlin.\"\n\n\"He wasn't big?\" I asked as I held myself over her, pumping myself in and out, looking down at her tits in the near darkness, rolling and bouncing on her chest each time I slid into her, my body slapping against hers.\n\n\"Not like you little brother. Trust me, not at all like you,\" she moaned. \"Soooo fucking good.\"\n\nIn and out I drove, my body seeming to know more about what to do than I did. It felt so good as she lifted in time with me, each stroke seeming to feel slightly different inside her. I could feel my engorged head banging into the end of her tunnel, sending little jolts of electricity racing down my cock and pushing my impending climax closer stroke by stroke.\n\n\"Oh fuck little brother. You're gonna make me come,\" she moaned softly. \"Gonna come soooooo hard.\"\n\nShe no sooner got done saying it when her body jerked and shuddered. I could feel her pussy clenching around me, her orgasm spasming her walls tightly around me while the rest of her body trembled and shuddered. \"Ohhhhhhhhh fuuuuuuuuck!\" she breathed.\n\nI could feel myself moments away from coming too. My body felt like there was no way to stop, that I HAD to keep stroking. And stroke I did. In and out, her whole body shuddering below me and her pussy clenching around me. \"UHHHHH fuck!\" I grunted as my body gave that familiar jerk. I felt my whole body jerk as a surge of cum lanced into her pussy. She reached up and pulled me down on her, her soft tits pressed to my chest, her cheek pressed to mine. She wrapped her legs around mine and squeezed us together as my body jerked and surged more cum into her.\n\n\"Thank you, little brother,\" she breathed as her trembles started to soften and fade. We lay like that for some time, my dick softening and finally slipping from her. She let me roll off of her and snuggled against me, resting her head on my shoulder. I lay there, feeling her soft body pressed to me, feeling her softness and warmth flowing into me. I soon felt her breathing, regular and soft as she fell asleep.\n\nIt was late, or early, depending on how you looked at it. The tent door unzipped and then zipped again. In the dark I felt her move and then felt her lips press to mine, soft but firm. We kissed softly for long minutes before she lay down snugly against me, her naked body pressing against mine. She kissed my neck softly as she lay her head on my shoulder.\n\n\"I just wanted to spend the last night with you,\" she whispered softly.\n\nThe morning sun started to brighten the tent with the filtered light making its way through the pine trees and the nylon tent walls. I felt her against me, snuggled tightly to me as we spooned together. My arm was around her, cupping one of her soft breasts in my hand. Her hips moved slowly, my hard-on already penetrating her sexy pussy, her movements stroking herself on and off my dick a few short inches.\n\n\"I thought you'd never wake up,\" Jen whispered as she started to rock her hips slightly harder. I couldn't help but push back, our bodies pressing together as I pushed as deep into her as possible. I felt a hand slide between us. My sister stroked my chest and found one of my nipples and began playing with it as she pressed her bare tits against my back.\n\n\"That's it. Fuck her. Feel your hard cock sliding in and out of her sweet pussy. Never forget that feeling. Never lose how it makes you feel inside to feel her around you like this,\" she whispered in my ear. \"It's a gift only two in love can truly share. I hope you two can share it all your lives.\"\n\nI closed my eyes, my mind wanting to think about what she's said, and at the same time wanting to pay attention to Jen in front of me. I felt my sister pull on my chest and roll me away from Jen. I felt my cock slip from her as I rolled onto my back. Jen rolled to her hands and knees. She crawled over me and guided me back into her as she knelt over me. She lifted herself up and down my shaft, looking down at me with a smile. My sister moved to her hands and knees and then shifted over my head. She spread her knees and lowered her pussy to my face. I couldn't help but slowly lick her wet slit, tasting her juices and dipping my tongue between her protruding inner lips. She moaned softly as I teased her clit.\n\nIt was actually hard to concentrate on licking my sister with Jen slowly working up and down my shaft. She was moving slowly, dragging my growing climax ever so slowly, trying to make it last as long as possible, clearly knowing that this would be the last time. Up and down she slipped, my engorged head teasing her walls and her walls teasing every inch of my cock. I slipped my hands up Jen's body to her soft tits, cupping each one and squeezing them in time with her strokes down my shaft. Up and down she slipped, stifling soft moans that might tell others what we were busy doing in my tent.",
        "I felt Trudy's legs start to tremble around my head as I licked her clit, teasing it with the tip of my tongue. She started to rock her hips, grinding herself into my face as her trembles grew and finally, she stiffened and held herself over my face, her juices gushing around my mouth and threatening to drown me. \"Ohhhhh fuck,\" she breathed as she lifted herself off my face, looking down at me. \"She's going to be such a lucky girl,\" she whispered.\n\n\"Who?\" I grunted.\n\n\"Whoever it is that ends up with you,\" she panted before climbing off my face completely to lay down again next to me, looking up at Jen. \"Enjoy it. I know I would.\"\n\n\"I am,\" she panted. \"I'm so close, but I want him to come with me. I don't know if I can hold it back any longer.\"\n\nTrudy looked at me with a grin. She leaned over and whispered in my ear. \"Look at that body. Can you just picture her doing this down on the dock, both of you completely naked? Mmmmmm, the sight of her sexy little body bouncing on your cock? Her tits bouncing in the sunshine. That's what you want to do isn't it? To hell with everyone and just enjoy her in the sunshine. The wind blowing over your body.\"\n\n\"Oh damn,\" I groaned softly, her suggestion drawing a picture in my mind of Jen doing just that.\n\n\"Give it to her. Fill her with your cum,\" she whispered before kissing my earlobe.\n\n\"Oh shit,\" I grunted as my body suddenly bucked under Jen.\n\n\"AHHHHH!\" Jen gasped as she felt my cock surge inside her. She jammed herself down on me, grinding her pussy into my cock, pushing her own orgasm over the edge.\n\nI felt her pussy contracting around my spurting cock, squeezing me as she sat panting and trembling on me. I held her tits, looking up at her and then slowly moved my hands from her breasts, wanting to see her whole naked body. \"God you're beautiful,\" I whispered.\n\nShe smiled back and leaned down on me, pressing her soft tits into my chest and lowering her lips to mine. We kissed for long seconds before Trudy interrupted us.\n\n\"You better get going before someone notices,\" Trudy whispered. \"I'm not sure we could cover you getting out of his tent.\"\n\n\"Probably not. But I didn't want to say goodbye in front of everyone. I wanted it to be like this.\"\n\n\"It doesn't have to be goodbye,\" I whispered.\n\n\"It does and you know it. You're going home this morning and I can't come with you. I'm glad we could be like this, but I knew it would end. It had too,\" she said as she pulled herself off of me. She rolled onto her back and slipped on a pair of shorts and then knelt again, pulling on a long t-shirt. She leaned over me and kissed me again. \"Bye Scott,\" she whispered before moving to the door and disappearing.\n\n\"Damn,\" I swore quietly.\n\n\"That girl has it bad for you,\" my sister whispered. \"And I think you have it just as bad for her. Unfortunately, she's right. You have to go home, and she can't go with you. But that doesn't mean she can't come visit, right? I mean, no one has to know.\"\n\nI looked at her. \"You mean, keep this going after?\"\n\n\"As long as you don't tell, I won't,\" she said. \"If there's one thing I know, it's that love is hard to find. If you find it, try and hold onto it. It's harder than you think,\" she said softly before pushing herself up. \"By the way. Thank you. I've really enjoyed feeling what you gave me the last two days. But like she said, it has to end. No one would understand that you were able to give me what I needed most right now.\"\n\n\"What was that? Sex?\" I asked in confusion.\n\nShe grinned and shook her head. \"Oh no. You made me feel attractive, sexy, desirable and you helped me remember what it feels like to be treated as a woman. All those things have been missing from my life for a while. Maybe it took a brother to remind me.\" She dug into the little duffel bag she brought and dressed, pulling on tiny thong panties and shorts, a lacy bra and t-shirt and then a pair of shoes. She looked down at my naked body again and grinned. \"Maybe I can come for Christmas. I wouldn't at all mind getting a refresher course,\" she said before leaning over me. She kissed me wetly, sucking my lower lip and teasing my lips with her tongue. \"I love you little brother. I hope you never have to find out how hard it is to have love betrayed.\"\n\nWith that she pushed up and slipped out of the tent, zipping it shut behind her.\n\nTwo hours later I had the boat loaded on my car, breakfast eaten, and my tent packed away. I wanted to say goodbye to Jen again, but she made herself scarce. My sister gave me a loving hug and both Cindy and Amanda couldn't help but squeeze their bodies to mine in their goodbye hugs. It was going to be a long drive home."
    ],
    "authorname": "m_storyman_x",
    "tags": [
        "sister",
        "cousin",
        "fishing",
        "boat",
        "family",
        "romantic"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/family-reunion-17"
}