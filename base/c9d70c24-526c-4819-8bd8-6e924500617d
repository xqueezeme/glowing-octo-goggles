{
    "title": "Beyond a Shadow",
    "pages": [
        "Yikes!! Randi wants \"magic\" and \"mystery\" and I'm anything but magical and mysterious. So, I turned to my buddy Rick, at rkv330, who feeds me great ideas. I thought he'd lost his mind when he floated this one. But the man knows mystery. Of course, I also want to thank Randi, for her super editing, her vision and leadership - and, most of all for her friendship. \n\n*\n\nThe rain came down in sheets and the darkness of the Nicolet Forest ate my headlights. All I could hear was the hypnotic slapping of the wipers. It was 2 AM and I was losing my battle with the Sandman. \n\nThen, a figure stepped out in front of me! \n\nI stomped on the brake and swerved into the oncoming lane. There were a couple of thrilling seconds, as I did a 60 mile-an-hour fishtail down the slippery blacktop. I ended-up with the cruiser sitting crosswise half on the road, perhaps two feet from a huge fir. \n\nI was suddenly, VERY WIDE AWAKE!!\n\nThe mysterious apparition was female. She stood there a hundred yards back, straddling the white line. She was in no danger of being hit. There were no living creatures within 20 miles; except deer, bear and yours-truly. \n\nI restarted the engine and drove back to where she was standing. The headlights revealed a woman in a weird outfit. I would assume that she'd come from a Halloween party. But, they don't hand out drugs on Halloween; at least in rural Wisconsin, and it was closer to Thanksgiving.\n\nI turned on the flashers, got out, and approached her. The lights painted the rain with a red-and-blue tinge. The woman looked quizzically at my car and said, \"What's that, some kind of Studebaker?\" \n\nThey hadn't made a Studebaker in over fifty years. I thought to myself, \"Great!! Two in the morning, and I'm in the middle of nowhere with a certifiable whack-job!!!\" \n\nI said, \"How much have you had today Miss?\" \n\nShe said, \"Don't flip your wig Mr. Fuddy-Duddy, all I had was a Sidecar.\" Was that even English? I had no idea what she'd just said... And was she chewing gum!!?\n\nSeriously?!! This woman was standing in the pouring rain, with one hand planted aggressively on a jutting hip, chomping on a wad of gum and arguing with me about how much she'd had to drink? \n\nI said, using my solicitous cop voice, \"Why don't we get in the car? I can take you someplace dry.\" \n\nShe looked around, like she had just noticed the rain, and said in a distressed tone of voice, \"Where did THAT come from?\" \n\nI said, \"It's been raining all night.\"\n\nShe said puzzled, \"It wasn't a couple of minutes ago.\" \n\nYes indeedy! Bat-shit-crazy!!\n\nI couldn't leave her in the forest-primeval. So, I took her by the arm and led her unresisting to the passenger side of the cruiser. It was an old-fashioned Crown Vic with plenty of room up front, even with the swivel mounted computer, and the two shotguns. \n\nShe slid in, dripping on my seats. She didn't seem to notice that she was soaked. I guess that's the way it is, when you're stoned out of your gourd. I went around to the driver's side, put the cruiser in drive and started off home. The road featured nothing but wide spots until you got to where I was headed. \n\nShe said wonderingly, \"How did you do that?\"\n\nI said, \"What?\"\n\nShe said, \"Make it move without shifting.\" \n\nReally!!!?? That was disturbing. I said incredulous, \"Are you telling me that you've never been in a car with an automatic transmission?\"\n\nShe said conversationally, \"I heard they had something like that on the Olds, but I've never seen one.\" \n\nYep, nuts!! They haven't made an Oldsmobile in going-on twenty years. \n\nShe looked at the onboard computer, which was sitting between us. She tentatively touched the space bar. The desktop lit up and she jumped back startled. She said surprised, \"What's THAT??!\"\n\nI was trying to figure out what kind of game she was playing. So, I said patiently, \"It's a laptop computer. It's hooked to the Wisconsin CIB database. She looked mystified. I clarified, \"Criminal Investigation Bureau. Every patrol car has one.\"\n\nShe said, in a tone that sounded like she thought I was messing with her. \"What's a computer, is it some kind of fancy radio?\" \n\nThat did it. I'm NOT a social worker. In fact, I mostly try to avoid people, which is a bit ironic since I happen to be the County Sheriff. I wasn't going to say one more word until I got this woman's head examined.\n\nWe have a clinic in town and the Doc is a smart dude. Maybe he could sort her out. Still, I couldn't help appraising her in the dim light. After all, I AM a guy. \n\nShe was a real beauty, even though she currently resembled a drowned cat; perfect complexion, flawless features, and raven hair done up in some kind of World War Two upsweep; complete with a little pillbox hat. \n\nShe must have bought THAT ensemble from a theatrical supply store. Even the Goodwill didn't carry stuff that old. \n\nI wasn't having any of \"those kind\" of thoughts. My mysterious lady was undeniably gorgeous. But she was clearly not right in the head. Plus, women have always been bad news for me. That's why I avoid them like the plague.\n\n*****\n\nIt wasn't always that way. Growing up in a small town has a lot of advantages. You're plugged into a way-of-life that hasn't changed materially, since the place was founded. It's humble, and it's relatively stress free. You just don't get too worldly surrounded by people who are exactly like you. \n\nThat all changed when I joined the Army. There are only two reliable ways out of a small town, college, or the service. My old man thought that college was a waste of money; while the recruiter in Eau Claire was extremely persuasive. \n\nI rang the bell on the ASVAB, and they gave me my choice of military occupations. The thing that jumped out at me was \"helicopter pilot. I had visions of sitting in an Apache blasting evil-doers. \n\nI lasted exactly one month in Army Flight School. Apparently, you need depth perception to be able to fly a helicopter. So, the Army, being the kindly institution that it is, found me alternative employment; Military Police!! \n\nI knew a recruiter in Eu Claire I was going to kill. \n\nThey shipped me to Fort Leonard Wood. Let me assure you that; if they ever give the earth an enema, Fort Leonard Wood will be the place where they'll stick the hose. \n\nAfter that experience, I spent my first few years raising and lowering the gates at Fort McNair. It wasn't glorious. But somebody had to do it. \n\nDuring that time, I took online classes at UMUC. By my third year I had all the requirements to apply for the Army's Criminal Investigation Service. I had to re-up to get into the Program, and of course the CIS Special Agent Training was back at the bastion of the Ozarks, also known as Hicksville on the Big Piney. \n\nAfter my second sentence there, I was a certified CIS Special Agent, with a specialty in Special Victims. \n\n*****\n\nThe odds of a soldier being posted to any of the hundred bases in the South, or West, are pretty good. The odds of ME being posted to the frozen tundra of upstate New York were one-hundred-percent. \n\nThe average snowfall at Fort Hood, which is where the Fourth Infantry Division is based, is zero. The average snowfall at Fort Drum, which is where the Tenth Mountain Infantry Division is based, is 126 inches; or about ten feet. I think you get the picture.\n\nThey partnered me with a woman. That's standard protocol for SVU Special Agents. I was the muscle and she was the empathy. Julie was a great partner. She was mid-thirties and moving toward her golden twenty. \n\nThe Tenth had just gotten back from hard time in Afghanistan. The incidents we investigated tended to go up after that. So, when a unit deployed or returned we handled a greater number of domestic battery and spousal rape allegations. \n\nThat was how I met Janet. A cruiser had responded to a call from the Mountain Community Homes area of the post. We arrived at 13:00 hours, just as the MPs finished squaring away the scene. Julie went straight into the house. \n\nI asked the patrol sergeant what happened. He told me that an intruder had broken in and sexually assaulted the occupant. The call that had alerted them was placed by someone other than the victim. He said that his men were canvassing the neighborhood to identify who made it. \n\nI gave our electronic investigation people a ring and told them to find the owner of the phone. I was pretty sure it was a cell. In the meantime, I went in to the interview. \n\nThe woman was sitting on the living room couch, with Julie in a chair opposite. Julie isn't one of those, \"Let me give you a hug and make you feel better,\" kind of women. She's a no nonsense criminal investigator. \n\nThe healing process from sexual assault takes a long time. Whereas, the first forty-eight hours are critical for what WE do. And, in Julie's mind the victim had to understand that difference. \n\nJulie was walking the woman through the details of the crime. My role is to observe the victim's reactions. I immediately noticed two things. The first was that she was beautiful, dusky complected, thick dark-brown hair, perfectly symmetrical oval face and big brown eyes. \n\nThe second fact was more telling. Her behavior was way off. Rape isn't an act of sex. It's a physical assault that impacts a woman's being to her core. Our instructors had beaten that into our head throughout training. Yet this woman seemed surprisingly unphased. \n\nShe was shaken up and crying. But when we told her we wanted to take her to the clinic, she was almost dismissive. She said, \"I'm fine, I wasn't hurt. I don't need a doctor.\" \n\nJulie said kindly, \"We still want to examine you. There might be evidence that we can use.\" \n\nWhat Julie was saying was that we wanted to run a rape kit. I could see in the victim's reaction that that was the last thing she wanted.\n\nI said to Julie, \"Come outside, there's something I want to show you.\"\n\nAs soon as we hit the front porch I said, \"She's lying. I think she knows her attacker. There's a lot more to this story than an assault.\"\n\nJulie nodded. We went back inside. This time, Julie sat NEXT to the victim. She said, \"We are going to insist that you do a rape kit, darling. And we are going to identify whoever did this because I'm sure his DNA is in the Army system. Now... Is there anything you want to tell me before we do that?\"\n\nThe woman looked horror stricken. She said, \"You can't make me!!\"\n\nJulie said ominously, \"We can always get a warrant Sugar. What's the matter Baby? Is there some reason why you don't want us to identify your attacker?\" \n\nIt was obvious that Julie meant every word and the victim knew it. She lowered her head and began to sob, \"My husband will find out if you do!!\"\n\nJulie went for the kill. She said, \"I assume that the perpetrator is somebody who you have been having extra-marital sex with.\"\n\nThe woman wailed, \"YES!! I had a sexual relationship with the man who raped me. I don't know what I was thinking. I love my husband. I tried to break it off, but he wouldn't let me. He kept pestering me and finally he came over to force me. I tried to fight him, but he was too strong.\" She began full throated sobbing. \n\nJulie said, \"What is this man's name? We can protect you from him. But, we have to know his name.\"\n\nThe woman looked pleadingly at Julie. Julie gave the woman her patented, \"grow up girl,\" stare. That stare has been known to intimidate cats out of trees and racoons out of trash cans. \n\nThe woman looked at Julie and said very hesitantly, \"Steve Marquesan.\" \n\nWow!! No wonder she was acting so weird. She was fucking the Colonel commanding the Brigade that was about to be deployed. That was going to cause a major ripple all across the Division. Julie looked at me, and I looked at her, and we said simultaneously, \"We need that sample!!\"\n\nThat is how we nailed Colonel Robert Marquesan's hide to the barn wall. He had a fetish about fucking the wives of his subordinates. He regarded the spouse of anybody who served under him fair game. The woman who brought him down was the wife of a Sergeant First Class in his headquarters unit. \n\nWe finally traced the phone call. The husband was the one who made it. He had probably discovered them making the two-backed-beast and turned it in as an assault in progress, which got law enforcement's wheels turning. \n\nI didn't like Marquesan, when he was a bird Colonel. I liked him even less as a rapist. As far as the Army was concerned, Marquesan was a disgrace to the uniform. The forensic evidence all lined up and he went down for rape and enough violations of the Universal Code of Military Justice to keep him enjoying Federal hospitality for the next ten, to fifteen years.\n\nI met Janet during the Court Martial. She was a 46-Quebec, Army Public Affairs Specialist. She was there to make sure that the story was spun the way the Army wanted it. Naturally, I was one of the people she interviewed.\n\nJanet was a stunner. I guess that's why she worked Army PR. She was medium height, perhaps five-six and a little on the heavy side. But that was because she possessed the biggest pair of tits and the most erotic hips, since the Greeks chiseled up the Venus de Milo. \n\nThere was just something overtly sensuous about her. Her look was direct, but it was also suggestive. You could see the roaring fires, beating drums and bounding savages back there. I was attracted to her; to say the very least.\n\nShe had thick auburn hair and an oval face with even features and very compelling eyes. Her boobs were so big that the fruit salad on the front of her uniform was a lot closer to me than her face. She had a surprisingly, narrow waist and big utilitarian ass. I wanted to grab those hips, mount up, and yell \"Yeehaw!!\" \n\nI told her that the investigation didn't require Sherlock Holmes. Since, the two parties weren't exactly criminal masterminds. \n\nThe Colonel must have been suffering from temporary insanity to do something that stupid. He had to know he was leaving behind evidence. He probably didn't think his paramour would rat him out. \n\nThe wife was just a dumb slut. She wasn't facing criminal charges. But the subsequent divorce didn't sit well with her.\n\nI had to hand it to the husband. It was a brilliant move. Instead of doing something very stupid involving a gun. He had done something very smart by immediately phoning it in. That way we did all the heavy lifting. \n\nI was starting to get a vibe that Janet was interested in more than information. So, I went fishing. I said, \"It's a shame that some people just can't maintain a respectful relationship. I know that it will be for life when I marry.\" Somewhere, the Gods laughed. \n\nJanet said amused, \"An unmarried soldier with genuine moral values? Wait, I have to write that down. How did they let you in the MPs with that attitude?\"\n\nI said lightly, \"I grew up in a small town. You can take the boy out of there, but you can't take the small town out of the boy, and I'm an MP because they couldn't find anything else for me to do.\" \n\nI said, still fishing, \"How did you get into Army PR?\" \n\nShe said, \"It's the same old story. I was in love. We had been going together since junior high school. I always assumed we would be married. But, I found him in bed with my roommate. He didn't even apologize. He said that he was, what he was; take it, or leave it. So, I left it.\"\n\nShe paused, like she was getting herself under control and went on with, \"I didn't want anything to do with college and the bastard who was attending it. I was in Army ROTC and I liked the culture.\" I nodded in agreement. \n\nShe continued with, \"So, I talked to the cadre about active service. I've been in for two years. I love the work and I love the Army.\"\n\nI looked across at her. Her dark eyes were challenging, like she was daring me to take the next step. \n\nWell!! As they say in golf, and other sports, \"Never up, never in.\" \n\nSo, I said, \"What are you doing after we're off duty?\" \n\n*****\n\nShe groaned and muttered, \"Come on baby -- fuck meeee!! Don't stop!!\" The strain in her voice sounded like a jockey urging a racehorse down the home stretch. We'd been married for six years and the sex just kept getting better-and-better. \n\nJanet had her \"O\" face on. Her eyes were scrunched up, her mouth was open and she was making loud effort noises, as she worked toward her orgasm. Her legs were straight up in the air, toes pointed. I could feel her hands reflexively gripping my butt and her pussy beginning to pulse, like it did when she came. \n\nThat tipped me over the edge. I came so hard that I must have changed the atmospheric pressure in her womb.\n\nI flopped over on my back. Both of us were panting like steam engines. Janet was lying there staring at the ceiling, one big boob puddled on her chest and the other hanging off under her arm. She looked stunned. \n\nI said, \"Let me clean up first and I'll fix breakfast.\"\n\nShe said, \"Go ahead baby. I just want to lie here and bask in the glow.\" I took a gloat at her voluptuous body as she lay there naked, one arm shielding her eyes, long legs still spread wide and covered in a sheen of sweat. I didn't know how I could get any luckier\n\nIt was one of those lazy Saturday mornings when there was nothing to do except enjoy the hiatus from work. I fixed us a couple of veggie omelets, whistling like a man who had just had his ashes seriously hauled. \n\nWe had both been out of the Army for six years. First, there was the adjustment to civilian life. That was inevitable. Janet went back to Madison to finish school. She only needed a year, to get a teaching certificate. I went back home, because I couldn't think of a better place to live.\n\nI hooked on almost right away with the Sheriff's Department. The Post was near where I grew up. I had almost eight years of police experience, six as a Special Agent and they were happy to have me. \n\nJanet and I were married later that year and she got a teaching job in the local elementary school. That was her vocation. But her avocation was politics. \n\nJanet was from the Dells. So, it was just natural for her to have an affinity for countryside. That interest developed into a crusade for every far-out environmental cause; from ozone layers, to preservation of the Yellow-billed Cuckoo bird. \n\nShe threw herself into every effort with her legendary energy and dedication. Oil companies trembled when she entered the room; as did mining interests, big box store developers and tract housing contractors. Janet had the vision and personal charisma to make a difference in people's lives. \n\nThat ability didn't escape the tree-huggers. They talked her into running for the County Board of Supervisors. Of course, Janet was a shoo-in for election. Who wouldn't vote for a package of energy, beauty, and sex appeal like her? \n\nThat was almost two years ago. Since then, she had become a rising star in the political firmament.\n\nMe, not so much.\n\nI was just a cop. The good news was that, being the only detective in the Department made me Number Two. It also gave me exposure to every kind of crime. Most of it was petty stuff, thefts and robberies. But I had a few real cases, like the ones that I had investigated for the Army; assaults, spouse abuse and even attempted rape. \n\nMy Boss was the Sheriff. Big Jim Moore was a red-neck's red-neck. Therefore, every four years, our gun-toting, Bible-beating, relative-fucking citizenry would march to the polls and renew his mandate. \n\nBig Jim was big in every category, six-six, two-seventy, big hat, big mouth, and if you believed his public statements big dick. He was also the biggest asshole in rural Wisconsin. \n\nThe people who didn't know him thought of him as a, \"tough and uncompromising lawman.\" The rest of us just thought of him as a narcissistic d-bag, whose opinion of himself was unaccompanied by any real results. ",
        "Big Jim was a bully too. He always got what he wanted; mainly because he was willing to be the loudest voice and most unreasonable asshole in the room. And, since he thought he WAS the law, he sometimes stepped outside the lines. That would eventually come back to bite him. \n\nJanet appeared at that point. Her t-shirt and painted on jeans showcased her voluptuousness. She has gorgeous hazel eyes that sparkle with intelligence and good humor. Right that second, they were sparkling at me. She plopped down opposite and said cheerfully, \"Thanks for the fuck baby, and Don't forget the fundraiser tonight.\" \n\nThe Democrats were doing their annual fundraiser for fantastical beasts, adorable kittens and whimsical unicorns; or some-such other liberal cause. I said, \"Had it circled on my calendar for weeks. Even rented a tux.\" It was formal. \n\nI knew that I was the \"plus-guest.\" Janet was the mover and shaker. And she would be the person at the head table with the rest of the great and good. The Dems had made the necessary \"charitable contribution,\" so as to get their star up front. I was just happy to sit with the rest of the riff-raff and bask in her reflected glory.\n\nPersonally, I didn't need it. There was far too much backstabbing, kowtowing, phony posturing, and downright sleaze associated with being a politician. I knew my wife sailed above most of the muck. But she occasionally had to roll in it. That's just what politicians do to \"get along;\" as it were. \n\nThere was never any hint of real corruption. It was just that her actions were sometimes slightly amoral. She told me about it, which was technically a problem, since I was a sworn officer of the court. It was petty stuff, like looking the other way when an influential business knowingly violated county zoning regulations. \n\nSince I thought most of those regulations were bullshit anyhow I applauded her \"willingness to be flexible.\" But she HAD been elected on an environmental ticket and some of that contradicted her personal beliefs. \n\nI knew that she was rock solid ethically before she had started her political career. But apparently, she was learning to, \"Work together for the greater good,\" as she put it. That's an infectious disease with politicians.\n\nWe arrived together, me in my rented tux and Janet in a ravishing little black dress. Actually, it wasn't the dress that was so striking. It was the body that was stuffed in it. \n\nShe did the usual noblesse oblige with me. You know what I'm talking about. She was itching to get up to the main table. But, she couldn't just blow off her husband. So, she hastily introduced me to a few of the lesser mortals and then hustled off to join the \"somebodies\" at the front. \n\nI didn't mind. She liked the limelight and I didn't.\n\nThe folks I met all seemed like nice people. One guy was the local doctor. He'd been in the Army too. We chatted a bit about our service. He was hazy about what he did. But I'm a cop. I could see it in his eyes. \n\nI met a few guys like him in my active service days. That type of dude is steady, level headed and, in most respects, kindhearted and humane. They ALSO just happen to be expert killers. \n\nHis wife was gorgeous. She was a nurse and she radiated her husband's aura of superb capability, self-confidence, and strength. She was a Swedish blond, which was not a rare commodity in rural Wisconsin. But she had the sort of Nordic fire and ice sexuality that can get a rise out of any man. There was just something about her obvious strength of character and the way she held that perfect, nubile body that pulled you in like she had her own gravity. \n\nMy other table partners were teachers. He was the District's Athletic Director much taller than the rest of us and with the greyhound frame of a runner. I asked him what he played in college, since it was obvious he had competed in something. He said matter-of-fact, \"Soccer.\"\n\nThen he added playfully, \"But Penny was the real star. She was a Badger cheerleader and she was engaged to.\" He named a guy who played for the Packers. I wondered how the dude felt, being a tunnel buddy with an NFL All-Star. \n\nThe wife's name was Penny. She worked with Janet at the local elementary school. That was why the whole group was there. Janet can be very persuasive when she is selling tickets.\n\nLike Janet, Penny put new meaning to the term \"brick-shit-house.\" She had auburn hair. But, she had a heart-shaped face with stunning china blue eyes. I thought to myself, \"I'll bet this woman is super-hot.\" I don't want to disillusion you, girls. But men carry that scorecard around in our heads everywhere we go. \n\nPenny was glaring daggers at her husband. She said, \"Jake likes to tease me. I could have a loving marriage with a perfect man. Or I could spend my life wondering who my husband was sleeping with. The choice wasn't hard to make.\" I thought to myself, 'Hot AND with genuine values.\"\n\nIt was a pleasant evening. Janet was the star of the show. Her stemwinding speech about wetland preservation had all the nature lovers on their feet. That included my asshole boss, who had about as much sensitivity to the environment as a strip mining company. Janet acknowledged the cheers with the glowing demeanor of a true politico. The girl was a natural. \n\nAfter the speeches, we mixed for cocktails. It was time for me to be at my wife's side, acknowledging my luck at being married to such a \"visionary woman;\" their words, not mine. Unfortunately, Janet was standing in a group that included Big Jim. \n\nI have to deal with that rectum all week. So, I thought I'd hang with my new friends and let Janet wheel and deal on her own. I knew she would come to me when she was finished. \n\nJanet seemed to be doing a couple of odd things as I watched her socialize. Why did I notice them? I'm a detective. I detect stuff. \n\nFirst, she was getting smashed. That was a new wrinkle. Lately she had been drinking more. I didn't know why she was doing it. It was almost like she was anesthetizing herself. That was strange, since we had a great life. \n\nThe second and most eye-opening thing, was that Big Jim was monopolizing her time. The entire County Board was standing in a herd talking and laughing. Jim was hanging around that group because he never misses the opportunity to brownnose. \n\nHe was telling one of his off-color jokes. How did I know it was off color? Because, Big Jim was telling it. The whole group chuckled uneasily, except Janet. She laid her head back and gave the asshole a full-throated laugh. Then she put her hand on his arm. \n\nIn the time we had been together I had seen that gesture thousands, maybe millions of times. But this was something different. Maybe her hand lingered a fraction too long. Or, maybe it was the look in her eye. But I knew that it was something that I had to investigate, if nothing more than to ease my suddenly troubled mind. \n\nI think it was the abrupt change in attitude that caused my unease. I had never heard Janet say a good word about Big Jim. That's because culturally, he was as far on the other end of the human spectrum as you could get. Janet was smart, caring and generous. Jim was the most aggressively self-righteous yokel on the planet. \n\nBoth Jim and Janet were icons to their own constituencies. It was just that they represented polar opposite groups. Janet was educated and socially aware. Big Jim had built his public image around his ignorant and narrow-minded attitudes, and he never missed the chance to brag about it. It was like being \"King of the Great American Underclass\" was a badge of honor for him. \n\nJanet had made it clear that she thought that Jim was embarrassing. That was the reason why her touching him in an overfriendly way immediately drew my attention. \n\nThere was nothing overtly sexual. It was just so out of character. It wasn't like I could confront her about laying a hand on Big Jim. That would have made me sound insanely paranoid. But I DID file it away under the heading of, \"To be looked-into.\" I'm a cop. We file a lot of stuff for future reference.\n\nJanet was absolutely ravenous when we got home, and I don't mean she wanted to eat. Well, she wanted to eat something. I ate something too and we fucked in novel ways. I know the drinking loosened her up. But it was like she was working something out of her system.\n\n*****\n\nA gentleman called a couple of weeks later. He asked if we could meet at the local diner. I told him to come in to the Sheriff's Office. Since, having coffee with strange dudes who call from out of the blue did not fall under the heading of \"proper procedure.\" \n\nThe caller added, \"I really think you need to talk to me Senior Special Agent Schwartzwalder.\"\n\nTHAT got my undivided attention. Whoever this was had just used my Army title. I had not been called that in over six years. So, this was probably somebody from my past life. I said tersely, \"Meet me at the Hot Spot in a half hour.\" \n\nThe Hot Spot is in the next town, which is like across the street in rural Wisconsin. It is legendary for good food, and atmosphere. The guy sitting at the two-top in the back, stood out like an ostrich at a turkey farm. He just screamed Fed. The locals were eyeing him like he was a zoo animal. \n\nI sat down warily. He was tall and gaunt with the classic uniform, cheap suit, wrinkled white shirt and partially undone tie. He somberly checked me out and said, \"What I'm about to tell you is part of a Federal investigation. You may be subject to prosecution if you reveal anything. Should I continue?\"\n\nThat was a little disturbing. I've been right to the top of the mountain in the federal clearance space and so the threat wasn't THAT intimidating. But this was small town Wisconsin, not the CIA. I couldn't imagine what he had to say.\n\nHe was staring back to me with arched eyebrows. I finally said, \"Okay, fire-away. I understand the consequences,\"\n\nHe said, \"I'll need you to sign this,\" and produced a document. I signed. I was committed now. \n\nHe said, \"My name is Barnestaple and I'm with the FBI.\" He produced the credential. That was a laugh. The Feebies have their own special look. I wondered if the stick up Barnestaple's ass was installed when he graduated from Quantico?\n\nHe said, \"We checked you out before we contacted you. We know you were a hotshot with Army CIS and we know that you are currently number two in the County Sheriff's Office.\"\n\nI said, \"There are only nine of us so that's no big deal.\" \n\nHe looked at me seriously, and said, \"Are you familiar with the Leptis trucking facility?\" \n\nI said, \"Of course, my wife was one of the people who had to approve the easement. She's a major tree hugger and there were some environmental issues with the trucks and traffic going in and out of there.\" \n\nHe said, \"How does your wife feel about drugs?\"\n\nI didn't think I'd heard him right. My brain was processing the concept of Janet and drugs. It came back with, \"Error 404 -- Not Found!\" I spluttered, \"What the fuck are you trying to say??! Janet would NEVER be involved in something as stupid as that!!\" \n\nI realized I had just implied that she might be interested in something LESS stupid, but I think he got the gist. He said, \"We've been surveilling James Moore for the past three months. We have evidence that he is running a distribution network for opioids coming into the U.S. from Canada.\"\n\nCanada? that didn't make sense?? I said, \"Wrong border buddy. Aren't you talking about Mexico?\" \n\nBarnestaple looked pained and said, \"Nobody thinks the Canadian border is a threat, whereas Mexico is a political talking point. The Border with Canada is four thousand miles of very hard to observe, tree covered terrain. Whereas, the Mexican border is a mere two thousand miles of easy to watch desert, and the U.S. Border Patrol is sitting on every inch of it.\" \n\nHe poured a little more sugar into his coffee and said mildly, \"So, which border would you pick if you wanted to run shit into the U.S.?\"\n\nI thought about it. He had a point. There is nothing but miles of trees and mountains on the Canadian border, with no major river barriers in the stretch from the Great Lakes to the West Coast. There had to be some observation. But there was no way to prevent a person who knew his way around from walking from one country to another, or four wheeling, or snowmobiling, or even driving an 18-wheeler through the Fort Fisher Border crossing. \n\nWhen it's minus-two outside and the snow is up to your ass, inspecting trucks in the middle of nowhere isn't the same vibe that you get when you're working the Reynosa, or Tijuana border crossing. It got my cop instinct cooking. \n\nI said, \"Okay, let's say it's possible that some dude in Moose Jaw is trying to flood the market with home cooked Fentanyl, or Demerol, or whatever. Why would they choose our hick County?\"\n\nBarnestaple laughed and said, \"That's the point. Your County is perhaps the least obvious place in the universe for a major drug operation. So, if you wanted to stay off law enforcement's radar would you set up shop here, or in Chicago?\"\n\nThen he added ominously, \"And, if the hillbilly Sheriff in that hick County is one of the main cogs in the network, then WHY NOT? It's a straight shot down 53 from Canada and even if there wasn't much product on the truck when it exited border control, there is a lot of surrounding forest where couriers can load up a 60-foot trailer.\" \n\nHe added by way of explanation, \"The FBI got called because the drugs are coming in from another Country and moving across State lines. It's the same situation with folks running coke, or smack in from SOUTH of the border.\" \n\nI mused to myself, \"Hmmm, the Feebs think Big Jim's dirty? How delightful!!\" \n\nIt didn't surprise me. I knew that the dude thought that he was untouchable, and I also knew that he didn't have a moral, or ethical bone in his body. But why was Barnestaple talking to me?\n\nI said, \"Okay, I buy your premise. But, why am I involved?\" \n\nBarnestaple stirred his coffee and said with studied casualness, \"That oughta be obvious. The FBI is national. We don't just storm into local jurisdictions. That's very bad optics. The press views things a lot more sympathetically if we are seen as working with the locals.\" \n\nThat made sense. The FBI isn't any LESS political than the rest of the apparatus in DC.\n\nHe took a sip and said, \"We've backgrounded you, including your Army records. We've also done a bit of intensive combing through your personal info. We know you are exactly what you're advertised, and we need you to run point on this.\"\n\nI said, \"Let me get this straight. You have already done your investigative due diligence and you think you have the evidence to indict Big Jim and other players in his scheme -- correct?\" Barnestaple nodded. \n\nI continued with, \"And since I am home-grown law-enforcement, you want to make it look like you were coordinating with local cops all along - right?\" Barnestaple nodded again. \n\nI said, \"THEN when the hammer drops you want me to serve as the resident center-of-gravity while all of the pieces hit the ground. Does that about sum it up?\" Barnestaple nodded. \n\nI wondered if enigmatic nodding was a course at Quantico.\n\nI said, \"Then I'm going to need you to put something on the record to confirm that arrangement. Since, I am fishing in deep water here.\"\n\nI added grimly, \"If Jim is involved, my guess is that half the Sheriff's Department and some of County Government was also neck deep in the Kim-Chi. And anybody poking around, like you're asking me to do, could find themselves out of a job, or seriously dead.\" \n\nBarnestaple said, \"We'll document all of this for you. But, that's not the problem. The REAL problem is that this is a complex tactical challenge. You can actually help us there.\" \n\nHe said, conspiratorially, \"This is an international ring and we only know who the main players are. We have to get every member of the network, or they'll scatter and just rebuild after we've left. So, we want the local cops to help us sort it out.\"\n\nHe laughed and said sardonically, \"But, we can't approach your boss, since he's the main player.\" \n\nBarnestaple took another sip and added, \"So far, all of our evidence has been gathered electronically, or through surveillance of the trucks via Global Hawk.\"\n\nHe flashed me the square-jawed, forthright look that all Feebs learn in Feeb school and said, \"We need boots-on-the-ground and that's you. We can do the actual bust. But we need to have an advance scout, so-to-speak; somebody who knows the territory and call us in at the right moment.\"\n\nI said, \"You already have Big Jim in the net - right? So, who else do you have locally?\"\n\nBarnestaple said, \"We've got Esau Holmes, he owns Leptis and he has major Mob connections down in Chicago.\" \n\nThat was interesting. I thought that the guys who were mobbed up were all Italian. Holmes was in his sixties and he looked like the guy with the pitchfork in American Gothic. However, he WAS a big pal and political crony of Jim's. \n\nI said, \"Who else?\"\n\nBarnestaple said, \"Those two are the major players. The trucking company does legitimate business and most of the employees seem to be nothing but innocent bystanders. The people we are interested in do the exchanges in the middle of the night, they call themselves the 'knight shift' -- get it?\"\n\nI gave him my, \"Really??!!\" look.\n\nBarnestaple continued with, \"Leptis is the delivery point for the small suppliers in the Upper Midwest. It would be a bit too obvious to have a semi pull up at a local bar in BFE and start unloading crates of pills. So, they run small shipments, in pickups, and vans, out to Wisconsin, Minnesota and the Dakotas. That's where the shit actually gets sold.\" \n\nHe added, \"The Leptis facility is the hub of the network. It's where they break the load into packages for transport into the sticks. So, when a shipment comes in it's the only time they're all in one place.\"\n\nBarnestaple looked frustrated as he said, \"We have ironclad proof that will put away the big players. But we want the whole network. We can act, once we know that everybody is in the bag. That's where you come in.\" \n\n*****\n\nHence, a couple of weeks later I was sitting in the woods outside Leptis trucking. The word from Barnestaple was that a shipment was due. So, I told Janet that I was working on a case in Eau Claire and that I would be gone overnight. I didn't want to worry her. \n\nShe gave me a rousing send-off. It was a spectacular night of sex, even by Janet's exacting standards. \n\nThe FBI doesn't like to muck around in the woods in the middle of the night. It messes up their gleaming white shirts. Plus, that was what they had the local peasantry for. SO, it was just little-old-me out there; fending off the swarms of Wisconsin black-flies. Those things are as big as vampire bats and a lot more blood-thirsty, which, no doubt, explained why the Feebies wanted ME to do it. \n\nIt was 3 AM. The Leptis building was locked down tight. It was set back in the woods off Wisconsin-10, and only approachable by a single paved access road. Right on time, Holmes's big Cadillac XTS slowly made its way up the road and stopped at the gate. \n\nHe got out and entered the code that opened the gates. Then he got back in and drove down to the facility. He went in the building and the outside lights went on. Then, the big metal doors retracted. \n\nThe pickups and vans began to arrive. I heard a diesel chugging its way up the road and a tractor trailer went past. I followed it in the shadow of the woods. It pulled up to the loading dock. \n\nI recognized most of the people doing the unloading. They were my colleagues in the Sheriff's Office. The people who had arrived in the pickups and vans were strangers. That made sense. These were the dealers. \n\nI had a low-light Nikon DS with a telephoto lens. I recorded the coming and going. Those pictures would tie a neat bow around the investigation, and there would be indictments for the house tonight. ",
        "The Feebies were hidden behind the Farm Supply store, 300 yards from the access road; poised for me to give the word. I was communicating with Barnestaple via a tactical headset. Things were wrapping up at Leptis, and I had just said, \"Go,\" when I saw Big Jim's King Ranch F150 pull in from the access road. \n\nThe thought of catching Big Jim holding a smoking gun was an opportunity I wasn't going to pass up. \n\nI said urgently, \"Wait, one.\" \n\nOnly an arrogant douchebag like Big Jim would drive a truck with Sheriff's Department shields, to a drug drop. There was a passenger with him. But I couldn't make out who he was. Big Jim got out. He gave the assembled offenders a jovial, good-old-boy, back slapping and hand shaking. He was obviously there to inspire the troops.\n\nI had everything we needed to send the asshole away for a very long time. So, I whispered urgently into the headset, \"Go!! Go!! Go!!\" I heard Barnestaple's voice say, \"Twenty seconds!!!\" I glanced in the direction of the access road and saw a series of headlights starting to turn in at high speed. \n\nAt the same time, the passenger got out of Big Jim's truck. I focused the camera to capture the image of the final soon-to-be inmate. \n\nIt was Janet!!!! \n\nMy brain went into mortal lock. You know how you get when you see something that couldn't possibly be true. Your eyes and your brain start a knock-down-drag-out fight about what you're seeing; and there isn't any processing power left to consider what that implies. \n\nMy wife definitely had some 'splainin to do and it had better be persuasive. Still, everybody out there was armed. So, it would be hazardous to just storm up and yell, \"What the fuck are YOU doing here bitch??!!\" Even if there was a strike team 15 seconds out. \n\nAll hell broke loose when they arrived. The Feds came screeching to a stop cowboy style. Their big Suburbans disgorged Feebs in black tactical gear; like they were coming out of a clown car. A helicopter appeared overhead, with one of those Spectro Lab SX 16, 50 million candle power lights. The whole world erupted in blinding white light and everybody just froze. \n\nThe strike-team was yelling, \"Get down on the ground!! Face down on the Ground!!\" Most of the crowd complied. The light and the noise were super intimidating. \n\nIt looked like Big Jim wanted to argue. So, a man in black, butt-stroked him to the ground. He plopped face-first. Janet was yelling, \"Do you know who I am?\" as they zip-tied her hands behind her back and led her toward the Federal Paddy-wagons. \n\nThose big vans had appeared like clockwork, right behind the strike team. It was clear that the Feebies knew how to throw a good drug bust. I just stood there in the dark, with my heart in my throat, watching. This was beyond imagining. My wife was in Federal custody, caught in the act. \n\nI stepped out into the bright light. The strike team all knew who I was. They went about their business without acknowledging me. I handed the camera with the evidence to Barnestaple. He accepted it with a nod. Then I walked up to Janet. \n\nShe was on her feet sobbing and crying, protesting her innocence. Then, she saw me. She stopped her caterwauling and said accusatorially, \"I thought you were in Eau Claire?\" That, was perhaps the most ironically inappropriate statement ever uttered by a handcuffed felon. It was like I had just been caught where I shouldn't have been.\n\nI got it. It was an unbearably sudden shift in perspective, and she was in shock. It had all happened so fast and Janet still didn't understand how much shit she was in. For my part, I was devastated. I walked up to her and said sadly, \"Maybe I can work a deal.\" \n\nShe wailed, \"Noooo!!\" It was finally dawning on her that her situation was real and there was no walking away from it.\n\n*****\n\nThat was four and a half years ago. Big Jim and the other \"criminal masterminds\" got 25 years for intent to distribute. Most of the rest got 3 to 10, depending on priors. \n\nThe Canadians were even more medieval. They REALLY didn't appreciate a drug cartel operating on their side of the border. \n\nI was the clear choice to replace Big Jim. I had garnered a lot of good press as the hero detective who had sniffed out the bad guys, even if I had done the detecting by meeting one Feeb at the Hot Spot. Plus, after the indictments were handed down, there were only four of us left in the Sheriff's Office. \n\nMy subsequent landslide victory was pretty-much a given; even though a small group of voters still treated me like a cross between Benedict Arnold and Judas. Those were the diehard Big Jim fans. \n\nThere are always a few in any election. Since, you can fool some of the morons all of the time. Nevertheless, I wasn't going anywhere, and Big Jim wasn't coming back; at least any sooner than twenty years with good behavior. So I began to settle into my new role as County Sheriff.\n\nI got Janet out on recognizance. She copped a plea. I arranged it. Janet was the star witness; both at the proceedings here and in Canada. She said that she wanted to make it up to everybody she'd wronged. Primarily, that was me. \n\nNaturally, her testimony didn't set well with the shadowy people who had funded the operation. So, Janet also got witness protection. \n\nI divorced her. There was no alternative. It was an agonizing decision. But, life is a nothing but hard choices. Sometimes you know they're important; like deciding to get married or have kids. Sometimes they seem trivial; like deciding to ride along to a drug deal in the middle of the night. Nonetheless, they ALL have consequences.\n\nI loved Janet. But, Janet had made her choice without considering how it would impact me. Now I had to make mine. I didn't want to give up my life and my identity because my wife hadn't chosen wisely. \n\nWe had many long, heart-to-heart talks. I needed to know why? It turned out that her downfall was the old slippery-slope, combined with the adage about strange bedfellows. Jim and Holmes had needed an easement and Janet had some funding priorities. So, she traded migrating geese for a minor change in zoning requirements. She had even told me about that.\n\nThen, the next time Jim came calling whole wet-lands got preserved. The problem with deals with the Devil is that they're like quicksand. One \"deal\" follows another, until you're in so deep you can't get out. Why would a smart woman do something that stupid? Well - power corrupts. It's a fact. You might come into office with all kinds of altruistic motives. But, the adulation of the masses will eventually convince you that you know best. Especially if you're put in office by a clear majority of your fellow citizens. \n\nJanet was a shining star, a woman who led. More important, she was fighting for just causes. So, in her mind the ends justified the means. That kind of self-aggrandizing rationalization is pretty-much standard operating procedure in all forms of government; from rural County Boards, to the Halls of Power in DC. \n\nTo Janet's credit, she never took a penny of her ill-gotten gains. It all went for conservation efforts. But, she knew exactly what was happening out there in the Wisconsin woods and that knowledge made her culpable; no matter what bogus logic she'd cooked up to justify her actions. \n\nAt least I finally knew why she was drinking so much. Guilty consciences require a lot of anesthetic. \n\nThe ironic thing is that she might have skated, if I hadn't used the pretext of going to Eau Claire. She agreed to join Big Jim, just for that night's exchange, because I wasn't home. \n\nJim was no-doubt trying to set the hook, by bringing Janet to the scene of the crime. That way she could never claim she didn't know what was going on. \n\nAnd yes - perhaps Big Jim also planned to use Janet's exposure to leverage some other demands. But I am certain that he hadn't touched her at that point. In fact, I never got a hint of even an emotional connection. It was just business for both. \n\nWe fucked a lot before she left. I sincerely believe that, if Big Jim had never been born we would have died in each other's arms. But he had been, and I had to admit that I had tears in my eyes, as I turned Janet over to the Marshalls. If you disregarded her sidelight as the queen of Schedule Two substances; she was a perfect wife, loving, smart and sexy.\n\nI kissed her goodbye on the last day of a snowy February. The agonizing months of regret and loneliness that followed, put me permanently off women. \n\n*****\n\nSo here I was, driving through a rainy Wisconsin night with a nutcase in the front seat. The Doc, the one who I had met at Janet's last hurrah, was going to be my first stop. It was 3AM when we arrived at his clinic. \n\nI had called ahead. Most people would have told me to get lost. But the Doc and his wife are dedicated to the community, and they just lived a few streets over. So, they walked through a downpour to their clinic. The doors were unlocked, the lights were on and the coffee was brewing. That's how things work in small towns. \n\nThe Doc was in jeans and an old sweatshirt. It said, \"Operation Enduring Freedom - Bagram Air Base.\" It had the sun, star and thunderbolt of the 75th Rangers. I had guessed that the Doc was a snake eater, the moment I met him. \n\nThe wife was in scrubs. They had clearly prepared to receive a female patient. It was a toss-up whether the Doc's wife looked more gorgeous, than she looked competent, or vice-versa.\n\nI escorted my little fruitcake into the clinic. She gazed around the room approvingly and said, \"This is Doc Morton's place.\" Then she looked at the Doc and said, \"Who're you?\"\n\nThe Doc's wife, whose name was Eve, said, \"We're the new staff sweetheart. We are here to help you.\"\n\nMy little friend sounded confused as she said, \"But where's the Doc? I just talked to him yesterday.\" \n\nThat was puzzling. Doc Morton had died almost twenty years ago. \n\nEve gave her a friendly smile, one totally lacking in the judgment that you might normally give a crazy person, and said, \"He isn't here. But we are. Can I ask you your name?\" \n\nMy beautiful little nut said, \"Sure -- Mavis.\" \n\nThat was progress. At least she knew her name. Eve said, \"What's your last name sugar?\" \n\nMy new responsibility said, \"Pritchett,\" like we all ought to know who she was. \n\nEve wrote both first and last names down on a clipboard. She walked over to where the receptionist sits, opened a fresh medical record on the computer and began to type. \n\nMavis turned to me and said bewildered, \"Is that another one of those newfangled radios like you have in your car?\" \n\nEve looked up and said, still perfectly normal, \"It's not a radio dear. It's called a computer. We can write down the things that you tell us, and we can store it for future reference.\" \n\nMavis said, \"I used to do that. Only we called it a typewriter and a filing cabinet.\"\n\nThe Doc chuckled, and said amused, \"Same general concept.\"\n\nEve said, \"So, can you tell me where you live Mavis?\"\n\nMavis looked suspicious and said, \"Across the street. I live in the apartment above the Hardware Store. You'd know that if you REALLY worked here.\"\n\nThat was interesting. The hardware store had been in the same location since the 1930s and it DID have a small apartment above it. But Mavis wasn't the occupant. Old lady Schmidt had lived there since at least the 1980s. \n\nEve ran through the other admitting questions while the Doc and I just sat there observing the patient. \n\nThe Doc was forming a medical opinion. I was trying to decide what to do with her. \n\nMavis was clearly disturbed. I could put her in the lockup until I could get her transported down to the clinic in Madison. But that just didn't seem right. She was no threat to herself, or anybody else. \n\nI could put her up for the night in a motel. But I didn't trust her to NOT wander off. \n\nI was certainly not going to take her back to my place. I could see the headlines now, \"County Sheriff Shacks-Up with Local Nutter.\" \n\nI said to The Doc, \"Can you put her up, while I figure out what to do with her? It'll only be overnight. The County will reimburse you.\" \n\nHe said, \"Sure, we have plenty of room since Brookie got married.\" His daughter was a smoking hot twenty-two-year-old. She had married some big-time star with the Red Wings and moved to Detroit. \n\nWell, that settled the custody problem. Now, all I had to do was figure out who Mavis Pritchett was. \n\nShe was a gorgeous creature, in a black haired, blue eyed way; with porcelain skin, and lovely, perfectly formed, even features. She also had a very leggy, five-foot two body. \n\nShe was nubile, full and lithe, with a faultlessly formed pair of round tits on top. But, her butt was her real glory. She had a way of putting one hand on a hip and cocking it so that it emphasized how curvy it was. I thought to myself, \"Whoa boy!!\" The last thing I needed were carnal thoughts about a crazy person. \n\nI was listening to Eve go through the standard protocol for patients who present with mental concerns. Eve said, \"So what is the last thing you remember before the Sheriff picked you up.\"\n\nMavis wrinkled her beautiful nose in concentration and said, \"I was having a drink with Jimmy Rawlins at the Crescent in Cadott. They've got some good times in that place.\"\n\nThat sort-of made sense. At least the bar was on Wisconsin-27 in the general direction of where I had found her. Eve said, \"Just to be clear, you were having drink with somebody over in Cadott. What happened after that?\"\n\nMavis paused, like she was trying to recall. She said, \"Well, I remember it was hot and I started to feel kind-of funny. It was like Jimmy'd slipped me a Mickey.\" \n\nI hadn't heard anybody in this Century refer to drugged drinks as Mickey Finns. I know it was a popular term back in the 1930s. But now that date-rape is almost a college sport, there are so many chemical names for those types of drugs that you have to be a pharmacist to keep track. \n\nMavis looked anguished for a second and said, \"That's all I remember until this guy nearly ran me over.\" She gestured in my direction. \n\nI said, \"My name is Erik and I'm the local Sheriff. You wandered out of a forest in the middle of the night. Do you have any idea how you got out there?\"\n\nShe said baffled, \"I have no idea. I took the bus up to Cadott last night, to drink with some of my friends. It was Tommy Williams's party. He just got back from the war you know. We were all really worried about him. He was a waist gunner on a B-17.\"\n\nI looked at the Doc questioningly. He said kindly, \"That war has been over for 70 years Mavis.\" \n\nIf you want to see a picture of gobsmacked, you need look no further than Mavis Pritchett. She wailed, \"No way!! That's impossible!! The Japs just surrendered.\"\n\n*****\n\nThe rain stopped after I went to sleep. The next morning, the sun was shining, the birds were chirping, and it was back into the 70s. \n\nThat's the problem with Wisconsin in the fall. Most of the time the light is golden, the temperatures are pleasant, and the wildlife hasn't settled in for the godawful month of January. But, Old Man Winter still likes to show his hand once-in-a-while, just to keep the residents from getting too complacent. \n\nThe first thing I did after morning coffee was phone the Doc. Mavis had gone off the deep end after we told her it was NOT 1946. He'd sedated her, and she was sleeping it off in their spare bedroom. The Doc and his wife had taken turns keeping an eye on her. \n\nI said, \"I'll be around to pick her up. But I want to do a little background investigation first. Can you hold on to her for another hour or two?\"\n\nThe Doc said, \"Sure.\" He and his wife both understood service. She was an ex-marine nurse, who had done tours in the Sandbox. And my guess was that Doc had done a lot more than that. \n\nOur Post is a one-story building with a reception desk and work area for the Deputies and a little office in the back for me. I closed my door and fired up the computer. \n\nFirst, I did a deepweb scan looking for any Mavis Pritchetts living in Wisconsin. It came up empty. Mavis isn't a popular name for woman under the age of 80. So, I checked the CIB data base for any Mavis Pritchetts. There was only one person by that name. The problem was that she had been missing since the 1940s!! \n\nThe circumstances of her disappearance were unknown. The cops up in Chippewa County had done their due diligence. But, it was a different era back then. They turned up nothing. Nobody seemed to know what had happened. The case went cold while Harry S Truman was still President. \n\nI sat back in my chair and took a big sip of coffee. I was trying to think this through. I'm a hardheaded Wisconsin cop. I didn't believe in ghosts. This woman was a hot-as-hell, twenty-something, living human being. So, I had to figure out why she was trying to pass herself off as a missing person; one who had disappeared seventy years ago.\n\nI got a call from Charlene, while I was on my way to the clinic to pick up Mavis. Char is our dispatcher. She reported a public disturbance at the hardware on main street. I didn't need to ask who was causing it. I said tersely, \"Responding!!\"\n\nLights flashing; I screeched to a stop in front of the hardware building, bailed out, and ran up the steps to the second-floor. My nut case was on the landing banging loudly on the door and yelling, \"Open up, you old bitch!! I need my clothes!!\"\n\nI came up the stairs behind her and said sternly, \"Mavis, you have to stop this.\"\n\nShe turned and said delighted, \"Oh, you're here. I need you to arrest this lady. She's squatting in my apartment.\"\n\nI tapped on the door and said, \"Open the door Mrs. Schmidt. It's Sheriff Schwartzwalder.\"\n\nThe door slowly opened, and an elderly lady timorously appeared. She said, \"This woman has been banging on my door for the past fifteen minutes. That's why I called you.\"\n\nI said, \"It's okay Mrs. Schmidt. I apologize. Mavis here is a little disoriented. We are working to get her some help.\"\n\nMavis yelled, \"Disoriented!! I'll be just fine, once you get this old bitch out of my place.\" \n\nI turned to Mrs. Schmidt and said, \"How long have you been living here Alice?\"\n\nShe said, \"I moved in after my divorce in '76. That's coming up on 40 years now. My ex-husband Tom, he liked the ladies.\" \n\nMavis shrieked, \"That's bullshit. I've been living here since I started work. That was two years ago!!\" \n\nMavis tried to push past poor Mrs. Schmidt. I grabbed her by the arm and dosey-doed her around on the landing. Then I proceeded down the steps with her trying to yank her arm free. I tossed her in the back of the cruiser, that's the place where we keep the suspects, and motored back to my house. \n\nI knew how it might look, having a woman in Mavis's situation under my roof. But she was my responsibility, and it just didn't seem right to keep presuming on the Doc's kindheartedness. Mavis needed to stay someplace, and I didn't have the heart to put her in the County lock-up. The only other option was to put her up myself. \n\nJanet and I were DINKS. So, we had a nice house. The uplift for the mortgage came courtesy of Uncle Sam and our GI-Bills. I had been rattling around in it for almost five years, which, NOT coincidentally, was also the point-in-time when Janet became a nameless face. \n\nWe had a couple of acres and a big, roomy one-story custom-built log-house. It had vaulted ceilings and a huge deck overlooking the Millpond. It had four bedrooms, in anticipation of children. It was isolated and scenic. But, it was still easily accessible to town via 27. \n\nIt was a sad reminder of a future I thought I had. I had been busy in the first couple of years, shaping up the Department. So, the isolation didn't bother me much. But, I had lived the unhappy life of the solitary man for the last couple of years; wake up, go to work, come home, watch TV, go to bed; rinse and repeat. It was hopelessly depressing.",
        "Mavis had calmed down by the time we got to the house. In fact, she was hunched over in the back-seat weeping. My heart went out to her. No matter how many weird delusions she had, she was clearly a damsel in distress. \n\nShe turned a tear-filled face to me and said disconsolately, \"What am I going to do?\" \n\nI said, \"Come on in and we can talk. I promise that I will see this through with you.\" \n\nI knew she wasn't quite right. But, I wanted the poor thing to understand that I wouldn't let her just fall through the cracks. I was beginning to feel deeply sympathetic.\n\nAs far as she was concerned, one day she had been living a life in vibrant post-World-War-Two America. And the next day she was stranded in an alien time with unimaginable technology. Think of how you would feel if you woke up one morning and it was the dawn of the third Millennium. \n\nAs I led her from car to house, I put my arm around her shoulders, just to console her. We had a short wooden bridge from the parking area to our doorstep. It crossed over a little brook that ran down to the Millpond. It was one of Janet's favorite features. \n\nMavis stopped and looked around with wonder. She said, \"This is beautiful, so quiet and serene.\" Then she kind-of leaned into me in an intimate fashion. I let her do that because she obviously needed all the comforting she could get.\n\nShe had nothing with her, just the oddly out-of-place outfit that she had been wearing when I first discovered her. She had clearly put on her best togs for her night on the town in Cadott. It featured a short wool skirt, that showed off her fantastic legs, old-fashioned nylons, with a seam up the back, 3-inch heels and a nice white blouse, topped by a jaunty, short wool jacket that matched her skirt. \n\nI said, \"You can stay here while we sort this out.\" She looked concerned. I laughed and said, \"This is a four-bedroom house. You sleep in the other end of it, and I don't sleepwalk. The bedroom door locks if you want extra peace of mind\" \n\nShe said, like she was giving me information, \"I'm a good girl. I don't just sleep around.\"\n\nI said soothingly, \"Look -- as far as you know it's 1945. So, you have a lot of catching up to do and you need to stay someplace safe to do it. I could put you in the County lockup if you think you'd be more comfortable there. But, you'll like it better here; trust me.\"\n\nHer face softened. She said with deep emotion, \"I DO trust you. Thank you for helping me.\" \n\nI looked at her sitting there and one thing was obvious. I said, \"You can't keep walking around in those clothes. We need to update your look and get you some supplies.\" \n\nThere was a Mall in Eau Claire. I told Char that I was going to be stuck all day solving a problem, but to call me if I was needed. Then we drove over to the Mall. \n\nThe Oakwood Mall was a brand-new experience for my little friend. When we walked in, she gazed around like it was the Emerald City. Malls were still a decade away when Mavis last went shopping. \n\nI heard her mutter to herself, \"In Xanadu did Kublai Khan a stately pleasure dome decree.\" That was Coleridge. She was well educated.\n\nMavis was still getting over the vastness of the place when I took her into the clothing store. I didn't know anything about women's clothes. So, I handed her off to the nearest sales person. The girl complimented Mavis on her \"hipster\" outfit. If she only knew!! \n\nThe saleslady was a study in tats and piercings. Mavis looked at me like she didn't know why I had brought her to a carnival freak show. Still, the saleslady was knowledgeable and had a light touch when it came to choosing things to fit Mavis. \n\nIt was obvious that Mavis considered all the clothing in the store immodest. I told her that was modern style. I also told her she looked fantastic. She blushed. It wasn't a false compliment. She was stunning.\n\nHer leggy body with its succulent round butt and her surprisingly full, well-shaped tits, was a sight to behold; especially in a pair of painted on Jeans and a relaxed hi-lo tunic that was unbuttoned down to her 1940s bra. \n\nThe next culture shock occurred when I hauled out the Departmental Visa to pay for her loot. \n\nShe said, \"What's that?\" I said, \"It's a credit card. Most transactions are by plastic these days.\" \n\nShe looked puzzled. I said, \"I'll explain later. You still have a lot to learn.\" God!! I was beginning to talk to her like she really HAD come from the 1940s. Our close familiarity was dragging me into HER delusions. \n\nThat had to stop if I was going to help her!! \n\nWe put her old clothing in one of the four big bags. Mavis was still wearing her 1940s pumps. So, the next stop was sandals, and a pair of running shoes. She loved the feel of the running shoes. \n\nBefore she could ask, I said, \"I'll explain that too,\" Then we made the final stop. She needed some undies. So, I took her to the Victoria's Secret store. \n\nNormal men do not want to be caught dead in a place that is devoted to women's underthings. But, I bravely walked her in. I explained that Mavis was not from around these parts, and that she needed help selecting modern panties and bras. I let the saleslady's imagination fill in the rest. \n\nI told the sales lady to fix Mavis up with whatever a girl would need. She turned to Mavis and said, \"You look like a D cup, right?\" \n\nMavis looked at me to translate. The armor-plated bras from Mavis's era were not designed to be comfortable. I shrugged. I'm a guy. I don't understand the terminology. I just like playing with the things.\n\nSo, Mavis turned to the saleslady and said, \"What's a D cup?\" The sales lady laughed like she thought that Mavis was making a joke. \n\nI said to the sales lady, \"Just take her back and measure her. Use your judgement about what she should have. I want you to load her up with all the gear a woman would normally need for the long haul. \n\nThey came out of the fitting room 30 minutes later. I had been hiding out in the mall itself. Mavis said embarrassed, \"THAT was humiliating! Modern women wear these things??\" And she held up a pair of high-cut lace panties.\n\nAs the sales lady was toting up the bill she casually mentioned, \"She's 36-23-35 and a 32D, in case you need to buy her anything else.\" I didn't know anything about women's underthings. But, I DID know that those measurements were a knockout.\n\nWe walked back to the cruiser loaded down with shopping bags. Mavis was wearing her new jeans, running shoes and the light top. Now that she was properly supported, so-to-speak, there was two inches of sexy cleavage peeking out of the airy tunic. \n\nMavis seemed to have temporarily forgotten about her time displacement problem. I guess a shopping orgy will do that for a girl. She rode in front with me now, as docile as a little lamb. The bags were in the back, where the felons sit.\n\nWe made one more stop. That was the local Costco. She hadn't been inside a big box store, either. She was walking around dazed. I had to keep grabbing her to keep her from running into the other shoppers. We picked up stuff like tooth brushes, disposable razors and other essentials a woman would need. I thought I would never get her out of the makeup aisle. \n\nWhen we got back to my place, we took all her newfound loot back to her room. It took two trips. She carefully put things in the dresser and hung the other stuff up in the closet. She was very quiet and subdued as she did it. IT was obvious that things were sinking in.\n\nI said, \"What's the matter Mavis?\" She burst into tears and ran to me, burying her head in my chest and sobbing like a child. I hesitatingly put my arms around her. \n\nShe said through wracking sobs, \"I'm so alone and lost!!\" \n\nYou would have to be an extremely hard-hearted person to NOT be affected by that. I knew that she was a head case, not a time traveler. But, no matter the reality, she was legitimately frightened. \n\nI said, \"There-there, kiddo, we can work this out together. I'm not going to just leave you twisting in the wind. You can stay here for as long as you need to. We'll eventually find your people.\"\n\nHer hard, little body was wrapped in my arms. She turned her perfect tear-stained face up to me, total devastation written on it. I knew what she thought was going to happen next, and I was fighting it with all I had. I knew I would be lost if I kissed her.\n\nFirst, as an officer of the court, she was in my custodial care. Second, any person who takes advantage of the mentally impaired, deserves to be locked up. And, make no mistake about it. Avis was not quite right in the head. Finally, it had been almost five long years since I had had anything to do with women So, I wasn't going to fall for a nutcase. \n\nIt took a lot of willpower to prevent myself from lowering my lips to hers; which was what both of us were longing to do. I smiled fondly and said, \"You know - I'm beginning to like you Mavis Pritchett.\"\n\nShe smiled back at me through her tears and said, \"You know -- I'm beginning to like you too Erik Schwartzwalder.\" The spell was broken, and we went out to get a little late dinner. \n\nI rustled us up a couple of sandwiches, thick slabs of roast-beef between even thicker slices of sourdough bread. I said, \"beer?\" She said, \"Of course.\" And we took our meal out on the deck to look out over the millpond. She loved the ducks.\n\nMavis ate like a curly wolf. I was a little surprised that somebody as lithe and supple as she was, would eat like that. Then it dawned on me that she probably hadn't eaten in 36 hours, or seventy years; take your pick. She downed her beer and belched like a guy. She said, \"That was excellent!!\" I thought, \"What a woman!!\"\n\nShe was silent for a long while. Finally, she said somberly, \"I'm really in trouble, aren't I?\" I nodded.\n\nShe added, \"If this is truly 2017, then there's nobody to help me. My parents are gone, and all my friends are older than the crone who stole my apartment. I have to cope in a world I didn't grow up in, and even if I could, I have no skills. What am I going to do?\" She was back to crying.\n\nI rose and put my hand on her shoulder in sympathy. She tensed for a minute and then it seemed like all the tension drained out of her. She said pathetically, \"You'll take care of me won't you -- at least until I can get my feet under me?\"\n\nI said, trying to convey my resolve, \"I'll take care of you and we will find out what happened. Don't worry. There's going to be a happy ending for you.\" \n\nIf I'd known how this was going to turn out I might not have been so chipper.\n\nShe looked at me with desire in those striking blue eyes and said, \"I don't care what happens as long as you're with me.\"\n\nI didn't like the intimate look. I don't do intimacy. I knew that it was just her dependence talking. But, this had to be crushed. \n\nI said, \"Let's start from the beginning. Where were you born?\"\n\nShe said, On a farm outside Fall Creek.\" \n\nI said, \"Do you think you can find it? The roads have probably not changed much.\" She nodded. \n\nI said, \"Okay, it's too late to look, today. But let's start bright and early in the morning. Maybe somebody will remember you.\" \n\n*****\n\nThe next morning, we were driving up a rutted dirt road off County N. It had turned hot and the sun was baking the fields around us. The autumn sound of the katydids was almost deafening. Mavis was looking for something recognizable. It was a fruitless search. There was nothing but old fencing lining the road. \n\nI was about to turn back when she said elated, \"There!! Over there!! Turn right!!\" I looked and there were two tracks leading off between a couple of rotting gate posts. \n\nWe pushed our way through the high weeds and roadside plants and bumped our way up the nonexistent road. I was glad the cruiser had the Apprehender package. The heavy-duty shocks and springs gave it just enough clearance. \n\nMavis was practically vibrating with expectation. We crested a low rise and looked down at her former house. It was nothing but a big rectangular hole in the ground, with weeds growing out of it and a bunch of junk strewn around. I knew right away, that this was a big mistake. \n\nAvis looked like it had finally sunk in that this wasn't a dream. She stared, gulped, and wailed \"Mooom!!\" \"DaaaD!!\" Then she threw herself on my chest and got back to her heartbroken crying. \n\nI just held her and made cooing noises. Mavis's whole life had evaporated in an instant, at least in her mind. I mean; what do you say to a woman who has suddenly lost her entire family, dog and girlhood mementoes. \n\nHer body was shaking with grief. I was uncomfortably aware of those big boobs squashed against my chest and her thick curly black hair tickling my nose. She had put on some of the perfume that she had purchased, and it was raising erotic thoughts.\n\nI let her sob for a while. Then I had a sudden flash of inspiration. I pushed her back. Her face was humid from crying and utterly, unfathomably beautiful. She looked at me with raging desire, and I knew she was going to kiss me. \n\nThat scared me to death. The last thing I needed was a sexual relationship with a crazy person. I swung her around, so that she was sitting back in the passenger's seat. I didn't want it to seem like I was rejecting her. But, I'm only human, and the sexual tension was killing me. \n\nMavis looked startled. It was like no guy had ever told her, \"no.\" She said astonished, \"Don't you want me?!!\"\n\nI said, \"That isn't it Mavis. You are a beautiful and sensual woman who I would normally fall in love with in a New York second. But right now, you believe you're from the 1940s. That isn't healthy. So, I have to help you get your real life back, and I'm afraid I wouldn't be able to do that, if we add the additional complication of sex.\"\n\nThen I said sheepishly, \"I've also been burned by all the women in my life and that has tuned me feral.\"\n\nHer mood shifted from devastated to inquisitive. WOMEN! Being female, she wanted to know the whole story. \n\nI said, \"We have one more logical stop. I'll tell you the whole thing over dinner tonight. \n\nThe next stop was at the Consolidated School District Central Office in Fall Creek. I was going to do my, \"official business,\" thing with the receptionist but I ran into Jake Jensen. I had forgotten that he was the District Athletic Director. \n\nWe recognized each other immediately, even though we hadn't seen each other since the last event with Janet. He stuck out his hand and said, \"Erik, haven't seen you since...\" Then he stopped. \n\nI said, \"It's okay Jake. Stuff happens, and I'm more-or-less over it.\" I saw Mavis perk up her ears. \n\nHe said, \"What are you doing here? Are you visiting in an official capacity?\" Then he noticed Mavis. She was standing there eagerly listening. \n\nShe looked like she had come down from heaven; with her perfect features, spectacular black hair and blue eyes and with her light summer tunic, stuffed full of boobs. Jensen checked her out. I didn't blame him. If I had seen Mavis at a local bar I would have been on her like she was a MIG-21 tailpipe and I was a sidewinder missile. She was THAT stunningly attractive. \n\nI said, \"Jake, this is Mavis Pritchett. We would like to ask you a favor. She thinks that her great-grandmother might have graduated from here in 1940, is that correct Mavis?\" \n\nMavis looked confused and said, \"No, that was m....\" She was about to say \"me.\" So, I stepped on her last word by l saying, \"NO, I'm certain it was 1940!!!\" \n\nJensen looked puzzled at the interchange. But, he said, \"Well we keep all the old yearbooks back in the archive. Let's go take a look.\"\n\nHe walked down a hall to the room where they kept the records. There was a big rack of old high school annuals. He was tall enough to pick through the earliest set of books, which was on the top shelf. He selected one, brought it down and dusted it off.\n\nHe opened it to the senior pictures, leafed through them and then got a puzzled look. He said, \"Why your great-grandmother looks exactly like you Mavis, Here.\" And he laid the annual down on the table in the middle of the room. \n\nMavis and I walked over and looked at the picture. Sure enough, a slightly younger version of Mavis was looking back at us. \n\nShe turned to me and said triumphantly, \"See, I told you!!\" \n\nJensen said, \"We have several extra copies from that year if you want to keep this one.\" \n\nMavis said, \"That's alright, I have my own.\" And she blithely walked back toward the front. Both Jensen and I watched her truly remarkable buns sway invitingly up the hall. I looked at him. He looked at me. We both said, \"Whew!!\"\n\n*****\n\nMavis was destroying another steak. She was clearly carnivorous. The sun was setting in a spectacular display of magenta-and-purple sky. The leaves were turning red and gold. It smelled like fall. We were sipping a decent Pinot Noir on the deck while she watched the migrating ducks on the Millpond.\n\nShe had dressed in one of her new dresses. The weather was still warm. So, she was in a light Laura Ashley flower print silk dress. It clung to her body and showed off her spectacular figure. Her makeup enhanced her flawless features and her huge, deep impenetrable blue eyes. \n\nI was sure that her life experience would not include knowing how to wear that dress or put on the makeup; if Mavis was the person she claimed to be. They just didn't have items like that back in the 1940s. \n\nBut then again, all women instinctively know how to enhance their looks. Maybe that was the reason why Mavis was so at-home with modern beauty stuff. \n\nMavis had been pensive all the way home, and she hadn't said much as she demolished her sirloin. Finally, she sat back and contemplated me with an unfathomable look. She said, \"You're starting to believe me aren't you.\" It was a statement, not a question.\n\nI said, \"I'm a cop. I don't trust anything. I just follow evidence. I have to admit that everything so far indicates that three days ago you were living in the 1940s. There is no record of a woman by your name in modern data bases. But that might just mean you are using the old Mavis Pritchett identity.\"\n\nShe looked a little frustrated. I added, \"There is a clear picture of somebody who looks exactly like you in a 1940 yearbook. But all families have resemblances from generation to generation. You seem to know the right places and names, but of course you could have researched all of that. \"\n\nHer face was falling, like she expected me to say something different. I said emphatically, \"I simply don't believe in ghosts and time-travel and that's the only possible explanation for your presence here. That is, if you really are the Mavis that we saw in the picture.\"\n\nShe stood up and walked to the deck railing, to look out over the pond. I couldn't help noticing her slim muscular legs as her dress blew around them. I've been solitary for five years. But, I'm not dead.\n\nWith her back turned toward me, she said quietly and sincerely, \"I have no memories of any time other than my growing up on a farm in the middle of the Depression and my life as a teacher. I remember friends and even lovers; who are all probably dead. My childhood home is gone. My apartment has somebody living in it. And, I appear to be stranded in this brave new world. \n\nA lightbulb went off in my head. I said, \"You've been to college?\" That was a rarity for a woman in the 1940s. \n\nShe said, \"Yes, I got my certificate from the Normal School in Eau Claire and I taught English Literature in the High School in Augusta for the past three years.\" \n\nThat was one more piece of the puzzle. I didn't know where it would lead. But, I was going to check the High School teacher's records for Mavis Pritchett. \n\nI said, \"The only thing I know for sure is that you're here in the present with me, and I will do my best to make sure that you are happy and safe in this brave new world; as you call it.\"",
        "She turned back toward me and leaned against the deck's railing. She might have been lost and alone. But, she was still a very self-assured woman, confident in her looks and sexuality. She gave me an enticing smile and said, \"You promised to tell me about your problems with women.\"\n\nI said, \"There isn't much to tell. I once had a wife, the one who I shared this house with. She was beautiful, intelligent and sexy. But, her moral compass got out of whack and she ended up outside the law. In fact, I was the one who arrested her. She's in the hands of the Marshall's Service now; someplace anonymous, under a new name. I'll never see her again.\" \n\nMavis looked confused and said, \"What do the Marshalls have to do with that?\"\n\nI said, \"Witness protection -- Janet was given a new identity. The Marshalls run that Program.\" \n\nMavis said, still confused, \"What's witness protection?\" Of course!! that program was set up in the 1960s.\n\nI explained how witness protection worked, and how I'd cooperated with the FBI to take down a local drug ring. I said sadly, \"Janet got caught in that net.\" \n\nMavis said awestruck, \"You worked with J. Edgar Hoover. He's the toughest lawman in America.\" \n\nI said, \"No Mr. Hoover died back in the 1970s.\" With his secret lists, illegal surveillance and lifelong live-in boyfriend, I didn't think J Edgar was the proper role-model for modern law enforcement. But, there was no reason to share that with Mavis.\n\nI added, \"I had a choice. Either surrender my identity, and go off to live with my wife, who I still loved. Or I could divorce her and exist as a solitary man. I chose the latter. It wasn't like she was cheating on me. It's just hard to trust a woman who fronted a drug cartel.\"\n\nMavis gave me a lopsided grin and said, \"That's easy to understand.\" \n\nWe talked a little while longer. But, both of us were exhausted. So, I said, \"Let's hit the hay and we can continue the searching in the morning. I know you're frightened and I promise you that we'll get to the bottom of this.\"\n\nShe gave me an enigmatic smile and said, \"What will happen after that?\"\n\nI said, \"You are a good person Mavis and you deserve nothing but the best. I promise you that you will get what you deserve.\" \n\nShe looked pleadingly at me and said, \"I would sleep a lot better if somebody was sleeping WITH me. I promise that I won't molest you. Could we sleep together in the same bed? \"\n\nI thought, \"Oh Lord give me strength.\" But I said, \"It would be totally inappropriate for me to spend the night in bed with you. I'm the person who is charged with your custody and care. That would be a violation of my duty. I am truly sorry.\" She had NO IDEA how sorry I was!!\n\nShe said with a brave smile, \"I understand, good night.\"\n\n*****\n\nHer arrival in the middle of the night nearly gave me heart failure. She landed on me, wailing like a banshee, clutched me and began to thrash around in a paroxysm of fear. I finally got my wits about me enough to grab her and say, \"Mavis!!! It's me, you're all right.\" \n\nShe stared at me, the whites of her eyes showing, like a frightened horse. I began to stroke her hair as she cried and wailed. An inordinate amount of time passed before she began to calm down. Her arms and legs slowly stopped flailing and she ceased the keening. \n\nShe was still panting with fear and shivering. But at least she was rational. I was holding her tightly. I hoisted myself up on one arm, to look into her frightened eyes. I said, \"What happened Mavis?\" \n\nIt took a second for her to speak. She wet her lips and said panicked, \"I saw it! I saw it all!! It was horrible!!!\" \n\nI said, \"What did you see Mavis? Tell me what you saw??\" \n\nInstead of telling me, she grabbed me roughly by the back of the head and dragged my mouth down to hers. It was a steamy, open mouth kiss, her tongue frantically seeking mine. She moaned loudly and then aggressively shoved over, so that she was plastered against me. It was the first time I realized that she was completely nude.\n\nI had fought the good fight. But a man can only resist so much temptation. I also had the thought that perhaps it would calm her down if we had sex. I know. THAT was a rationalization. What can I say? It HAD been five years since I had made love to a person I had feelings for. \n\nI stroked her back and she shivered. My hand ended on her prominent butt. It was very muscular and rock hard, and it was gyrating agitatedly, as she shoved her pussy against my rapidly rising interest. She was emitting little shrieks as she undulated.\n\nI was still in my boxers, which she stripped off me like she was skinning a squirrel. I moved my hand down her flat stomach while she tugged my shorts down. I encountered a very hot joining. She moaned loudly. I dipped two fingers in her essence and it set her off like a skyrocket.\n\nShe growled deep in the back of her throat, rolled violently over on her back and dragged me on top of her. She inserted me in one swift move and I slid up into boiling honey. She let out an unearthly groan as she elevated her legs and her hips began the age-old rhythm. \n\nI looked into that flawless face, which was lost in passion. This was clearly a life-affirming act for Mavis. She needed to do this to chase the demons away. \n\nHer eyes were rolled up in her head. Her flawless lips were formed into an exaggerated \"O.\" She was panting loudly and wildly, whipping her hair back and forth. Her arms were extended back over her head, exposing her entire upper body to me.\n\nShe had big, full, immaculately shaped tits. Which were jiggling like a couple of torpedo shaped Jello molds. The nipples were mud brown, prominent and looked like little Nuks. I took one of those red-hot things between my lips and ran my tongue over it. Mavis lost it, right then and there.\n\nUp to that point the sex had been smoking-hot. Now I was plugged into a wild animal. She shrieked so loudly that I was sure that the wildlife fled the area in panic. Then her body went rock hard, like every muscle in it was tensed to its maximum. That included the ones that were currently holding my cock. It was like she had grabbed it tightly in one hand. \n\nThere are orgasms, and then there are ORGASMS. As she worked through hers, Mavis began to flail around underneath me making desperate noises of profound sensation. Her heels beat a tattoo on the mattress. Her teeth were gritted so tightly that I could hear them grinding. Then she shrieked again and went completely limp. \n\nThat was the point where I was finishing my own business. So, pardon me for not noticing. I arrived back on planet earth to discover that I was lying on top of an intensely panting woman who appeared to be lost in Never-Never-Land. \n\nI was about to freak out myself when she opened her eyes. She, looked freaked. She started to flail again. Given that I was still inside her that movement almost accomplished the miracle of waking the dead. But she had so thoroughly drained me that I could have gone another five years without help. \n\nI said, \"Easy Mavis. It's just me.\" \n\nHer eyes came into focus and she gave me a look that embodied more profound devotion than I thought was possible. She said simply, \"I love you Erik.\" \n\nIt abruptly struck me that; against my personal history and all evidence that she wasn't normal, I loved this woman body and soul. I moved her sweat-soaked hair off her forehead with a gentle stroke. I said, \"I love you too Mavis.\" \n\nWe made love all night. It should have been exhausting. But, it was incredible. She was both giving and taking in the extreme. Her sheer enthusiasm and out of control sexuality kept getting my booster out to the pad for one more super-spectacular launch. \n\nShe said that she had seventy years to make up for. I hoped that was her idea of a joke. But, she was so insatiable that I almost believed her. \n\nI woke much later in the morning than usual. The bed was wrecked, and I would have to burn the sheets. Mavis was lying on her back next to me, covered to the waist by the blanket. Her broad full breasts were rising and falling as she slept. Her hair was tousled, and she had no makeup on. She looked like Sleeping Beauty. Which was unfortunately, too appropriate.\n\nI was making us one of my special omelets when she finally appeared in the kitchen. It sadly dawned on me, that I had not made my specialty since the day that I surrendered my wife to the Marshalls. Worse, I had not felt so happy and fulfilled since that miserable day. \n\nMavis was wearing another one of her tunic and skin-tight jean combinations. She looked like a living statue of a goddess. I just looked at her. She looked at me. We didn't have to say anything. The situation was perfectly clear, and we were both at peace with it.\n\nI didn't want to break the mood but there was still an investigation going on. So, I said, \"What happened last night?\" \n\nHer face turned pale and she got a look of dread. She said, \"I'll tell you after we check something out.\"\n\nI said, \"What?\"\n\nShe said, \"I want to go back to the District Office. Can your friend pull up the teacher records from the high school for 1946?\" \n\nI said, \"I imagine so, those are probably on a database somewhere. I think they have to keep that stuff for the State and they probably computerized all the old records.\"\n\nShe gave me a look like she didn't know what I was talking about. But, she trusted me. She said, \"Let's go right after breakfast. I think I know what I'm going to find.\"\n\nJake Jensen was the District AD, not the guy in charge of teacher records. But he introduced us to the Assistant Superintendent who was. \n\nHe was one of those little, impeccably dressed weasels with a pencil slim moustache. He was a dude you would viscerally NOT want near your child. Maybe that was why he was working in an office. I hesitate to guess why those types of guys get into teaching. \n\nNevertheless, he was a stickler for protocol. So, I had to play the, \"Sheriff investigating a potential crime,\" card with him. He in turn, gave Mavis a thorough going-over. I didn't blame him. \n\nI said, \"Your Mavis Pritchett is this Mavis's great-grandmother. There are issues that the Sheriff's Office has been looking into for her.\" \n\nThe Superintendent could have been an asshole and demand a warrant. But 1946 was a long time ago and administrative niceties approach the threshold of pointless for something that far in the past. \n\nSo, he turned to his desktop computer and said proudly, \"We computerized the old teacher records a couple of years ago. These go back to the 1930s. If Mavis Pritchett taught here, we'll have her file.\"\n\nHe typed a bit and then said surprised, \"Oh my, I understand why you are interested in her.\"\n\nThat sounded ominous. I didn't want to get into a discussion with the guy. So, I said, \"Can you print out what you have?\"\n\nHe said, \"Well it happened seventy years ago so I suppose it's okay to release them to the Sheriff. Nobody who was involved could still be alive.\" He clicked the print icon and I heard the printer in the main office start up. A helpful secretary put the output in a manila envelope and we exited the Office, headed for the Hot Spot.\n\nI said, \"Does the Superintendent's comment have anything to do with what happened last night?\" \n\nShe said, \"I don't know for sure. Let's go someplace where we can read this. What I suspect it contains, should clear up the matter.\"\n\n*****\n\nThey certainly did. What we call sexual harassment today, was filed under the heading of, \"boys will be boys,\" back then. I might add, not much has changed in the intervening seven decades. But at least now, the allegations are written down and investigated. Back in those days they didn't even record it. \n\nThat is, unless the culprit was caught in the act. Mavis said that she had constantly complained to the Principal that a fellow teacher, named Felix Wynn, had been fondling her. Of course, this was chronicled as, \"Miss Pritchett makes unfounded accusations.\" \n\nThen Wynn physically attacked Mavis after school. Fortunately, other teachers and some of the students were still in the building. Mavis's loud cries for help were answered by students and teachers alike. \n\nWynn, who had, by then, ripped Mavis's blouse and panties off, was waving his dick around prior to inserting it. Mavis was frantically trying to fight him off. \n\nA couple of the male teachers hauled Wynn off Mavis. The problem for the District was that, the incident couldn't be swept under the rug. There were too many witnesses. But they COULD expedite the firing of BOTH of them, Wynn for attempted rape and Mavis for \"leading him on.\" \n\nMavis, was understandably distressed. Rather than getting justice, she found herself out of a job. What can I say? It was the 1940s, and, there were a lot fewer lawyers to litigate the shit out of the District for pulling a stunt like that. Those varmints CAN be useful in their own way.\n\nThe trail went cold after that. But, now I had a target of investigation and a theory of the crime. \n\nWe were sitting at a two top at the Hot Spot as I read the records. She was looking at me nervously. I said warily, \"You knew about this didn't you. It was part of your dream.\" It didn't take a genius to figure out that more was coming.\n\nShe looked like she was going to throw up. The anxiety must have been killing her. She said, \"Yes, but I didn't know if it was a dream, or a reality. Do you think Wynn is still alive?\"\n\nI chuckled and said, \"THAT's something I CAN find out.\" I queried the County database. The census showed a Felix Wynn as being alive and a resident of Falling Water, which was the local residential care facility for the elderly. \n\nI said, \"I'm going out to talk to Felix. Are you up-to coming along? You don't have to if you can't take it.\" I marveled at how perfect her face was. I could almost understand how a woman as beautiful as Mavis could push an unbalanced man over the edge. \n\nShe gave me a determined grin and said, \"I have to see how Felix turned out. So, YES, I want to confront him.\" I hadn't said anything about confrontation. But I also didn't have a problem with the idea. Mavis Pritchett was one hell of a strong woman.\n\nFalling Water is a County facility. It houses elderly people who simply have no means of taking care of themselves. So, it's basically a charity, and the building gives new meaning to the term, \"Shit-hole.\" \n\nWe arrived at the check-in desk. I did my official, \"The Sheriff needs to talk to one of your residents,\" thing. The badge and ID convinced the nurse that we meant business. She led us down the dank and forbidding cinderblock hall toward a room at the end. \n\nThe nurse said emphatically, \"Mr. Wynn is very frail. So, try not to upset him.\" \n\nI thought, \"What I have in mind will more than upset him.\" Being questioned for murder after seventy years of skating is going to be quite a shock.\n\nThe nurse knocked and we all quietly entered. Wynn looked like a mummy. He was a husk of a human being; lying there, cheeks sunken, very sallow, with the covers pulled up to his chest and his arms outside them next to his body. \n\nThe nurse said gently, Mr. Wynn, there's somebody here to see you.\" Wynn opened his eyes and made a papery sound that might have been a laugh. But, it sounded more like a death rattle. \n\nHe said, \"Nobody I know, is still alive.\" Then he slowly turned his head and his rheumy brown eyes fastened on us. \n\nMavis and I were standing next to the left side of the bed. He looked at me without acknowledgement. Then his eyes shifted to Mavis. \n\nThey had the same dull lack of recognition; that is... at first. \n\nThen it hit him!! His eyes opened super-wide, he made a gargling sound and began to hyperventilate. \n\nThe nurse rushed to him grabbed his arm and started to take his pulse. She said frantically, \"Mr. Wynn, what's wrong?\" \n\nWynn shot straight up in bed. It was like somebody had yanked his string. He pointed his finger at Mavis and said, \"Mavis!!! It's YOU. God!! I'm SORRY!!! I'm SOOO SORRY!!! I didn't mean to do it. I just lost control!!\" \n\nThen it looked like all the air went out of him. He collapsed back on the bed. The nurse ran out of the room shouting Code Blue!!! \n\nI shut off the digital recorder. I had already logged the arrest statement and I had started the Miranda warning. I didn't need it. I could attest beyond the shadow of a doubt that that what I'd filmed was a convincing death-bed confession, and that the killer was now deader than the proverbial door-nail. \n\nTherefore, the case was closed.\n\nI took Mavis by the hand and led her unresisting from that place. She was silently weeping. The implications were clear. I said, \"Was that your dream?\" \n\nShe looked at me haunted and said, \"In my dream it was the middle of the night and I was at Wynn's. He looked like he did back then, not like he does now. I think he'd already raped me while I was drugged. But, I don't know for sure. I DO know that I wasn't wearing anything.\"\n\nShe looked terrified as she said, \"We were on a bed. He was holding me in his arms like a lover and telling me that I was his woman now. Then he tried to kiss me. I bit his lip HARD - hard enough to draw blood. Then I called him every vile name I could think of.\"\n\nShe added, her voice breaking, \"He slapped me. I fell back. The last thing I remember was him closing his fingers around my throat; his face was absolutely wild with rage.\"\n\nI chalked up the resolution of a very cold case. I would write it up with the confession that I'd recorded and put it in the file. The killer was Felix Wynn and he had died in custody.\n\nBoth Mavis and I knew what that implied about her mysterious reappearance. But, there was no rational basis for assuming that my Mavis was the one who had been murdered. I just couldn't accept that it was supernatural. Plus, I still didn't have a body. \n\nIt would have been a lot more logical to assume that the old Mavis had survived. And that this Mavis had heard a family story about her grandmother's near brush with death at the hands of Felix Wynn. \n\nThe fact that that the grandchild looked eerily like her grandmother, might have motivated her quest. I presumed that the woman sitting next to me; the one who I loved so completely and utterly, was just a coincidence, perhaps a long-lost-grandkid. \n\nMavis's spontaneous appearance on that dark road and her displaced memories could be explained by a lot of things; insanity, a traumatic brain injury, perhaps a blow to the head, or a stroke. That was certainly a more plausible explanation than thinking that this Mavis had come back from the dead. \n\nThere was one final step that I could take, if I wanted to be absolutely certain. I said with hesitancy, \"What do you think about your situation now? I am willing to take care of you, even marry you, if we don't take the next step.\"\n\nShe looked interested. She said, \"What do you mean by that?\"\n\nI said, \"We have two obvious options. One is to close the case without the body. That will let sleeping dogs lie. The other is to find the body. But if we find one, it will confirm that you are NOT the Mavis Pritchett who you think you are.\" \n\nThere was one other option. But I didn't want to explore that one. That's because, the same two people can't exist in the same place at the same time. That's a rule of quantum physics, or something like that. \n\nMavis said, clearly distressed, \"What would you do if you were in my situation?\"\n\nI said, \"Personally I would drop the whole thing and marry me. We can get treatment for the amnesia, or whatever it is that is going on in your head.\" \n\nI added pleadingly, \"You seem to be a permanent resident of this time; and you are perfectly functional in the here-and-now, not likely to fade off into some ghostly afterlife. There are a lot of things to see in this brave new world, as you call it. And I want to experience all of them with you.\"",
        "She looked at me concentrating hard. It was clear that she was running every possible consequence and nuance through her head. \n\nThen, she giggled and said, \"If I had to choose between being a murder victim, or your wife, I'm pretty sure I'd choose the latter.\" I think that was a joke.\n\nThat was my girl!!; practical, if not a little supernatural. If she was crazy, then so was I, and I didn't care about her origins. All I cared about was that the woman in front of me was a strong, vibrant and loving person, whose mere presence made my life better. \n\nYou might ask me how I could forget the circumstances of her sudden and mysterious appearance. It took willpower to CHOOSE to ignore the fact that Mavis's history began on a rainy night in November. But, I told myself that my former wife Janet, could be married to somebody, somewhere, right now; under exactly the same set of circumstances. \n\nLike I said, I'm a cop. I believe the evidence. Mavis could be from seventy years in the past. I had nothing to prove or disprove that. \n\nBut what I DID know, was that THIS Mavis Pritchett was the woman I loved. Maybe I would have felt differently if Mavis wasn't such a stunningly attractive woman. But she was gorgeous. More important, I didn't have one iota of doubt about her love, her fidelity, or her genuine humanity; whatever her origins. \n\nI know Mavis was as mystified by her past as I was. But, in the end it was simple pragmatism. We were making a future together, and that future was full of hope. Whatever had been in the past was gone, never to return, and that was good enough for both of us. \n\nAt first, Mavis was like a feral cat. She wouldn't go out of the house unless I was with her. But the more we lived our lives together, the more she became acclimated to rural Wisconsin in the 21st Century. I was gone a lot because of my job. So, she learned to drive and explore. \n\nMavis mostly lived in the library while I was working. She must have devoured whole shelves of books; trying to fill in the time between her last memories and now. I tried to get her to use a computer. But, she said she didn't trust the things. In some ways she might have been more prescient than every other member of our present society.\n\nWe were married eight months after I closed the case. Mavis was a perfect wife and mother. As time went by, the sex got even wilder; if that was even possible. There was no doubt in either of our minds that this was a lifetime marriage ... \n\nBy the way, did I say \"mother?\" \n\nMavis announced that she was pregnant, two months BEFORE the wedding. Modern contraception technology was one of the things that she had yet to master. As a result, my little Ava was born \"premature\" seven months after we stepped to the alter. \n\nIf I thought I loved Mavis, I had no way of anticipating how much I loved my little girl. Things just got better and better as my Ava prospered and grew.\n\n*****\n\nDeer hunting season in Wisconsin is more eagerly anticipated than Thanksgiving. For a week in the middle of November; most of the population is out in the woods. Since there are so many people tramping around, they occasionally stumble on things. It might be Sasquatch, or a gold nugget, or a wooly mammoth tusk, or a long-lost cell phone. Occasionally, it's the remains of a fellow citizen. \n\nMavis and I had been married for nine fabulous years, when the Sheriff in neighboring Chippewa County called. It seems, several of the local boys had been drinking all day and then gotten the bright idea of trying their luck in the Nicolet Forest. The only flaw in that brilliant scheme was that Nicolet's a National Preserve and hunting there is a Federal offense. \n\nThe cops quuckly bagged them; mainly because most were passed out by that point. But, while the deputies were rounding them up, the rain started coming down in buckets, and the downpour exposed a bone. \n\nThe Sheriff did a little digging and found a skeleton. Since those bones could be from any era; Native American, to the present, they were sent down to Madison to be forensically examined.\n\nUltimately, the Sheriff's people called me. That was because nine years previously I had set a flag in the CIB database requesting information about any missing women in that vicinity. The skeleton was female, and it fit my RFI. \n\nMy heart stopped. Every day with Mavis was like living in an earthquake zone. Even if the consciousness wasn't there; you were still subliminally aware that absolute disaster could strike at any moment. It just took that first tremor to bubble the awareness to the surface.\n\nI told the guy in Chippewa County to transfer the jurisdiction to me, since it was my case. He was more than happy to get a chore off his desk. I, on the other hand, feared the outcome of the forensic exam. \n\nI was filling out the paperwork to make the transfer when Charlene called to tell me that Ava hadn't been picked up at school. It was 4:00 in the afternoon. There was no way Mavis would miss that. \n\nI don't know about other people. But, I get mice on my spine when I am in the grip of mortal terror. I could be standing there looking as stoic as Mr. Rushmore. But ripples of cold disorienting fear run up and down my back. \n\nI walked out of the office like a zombie, brushed past Char and out the door. I got in my cruiser and drove to the local elementary school. The skies were dark, and the rain was just starting. I stifled the thought that the rain was coming down just as heavily on the night I first encountered Mavis.\n\nAva was standing at the curb. She was in her wellies and slicker. She looked like a tiny carbon copy of her mother. Ava was worried. Even minor bumps in a child's life are magnified by a departure from routine. She was being minded by the Assistant Principal who had called me.\n\nI thanked the woman, loaded Ava in the car and drove home. The shivers had intensified to the point where I was almost shaking. The fact that I had to be strong for my little girl was the only thing keeping me on the rails. \n\nI walked Ava in the house and took off her rain things. The house had that empty feeling. Ava said apprehensively, \"Where's mommy.\" She was sensing something too. There was a melodramatic crash of rolling thunder. I thought, \"Seriously??!!\" \n\nI said with fake reassurance, \"Oh, she's probably grocery shopping. Why don't you go in your room and start your homework?\" \n\nShe said cagily, \"Can I play Angry Birds first?\" Her innocence was about to be ripped from her. So, I thought, \"Why not?\" \n\nI said, \"You can play it for as long as you want sweetie.\" \n\nShe threw her little pipe-stem arms around my neck, hugged me and said, \"I love you daddy!\"\n\nI hugged her back desperately, and said, \"I love you too Pumpkin.\" I was going to need her in the months and years ahead.\n\nEPILOGUE\n\nFor one solid year, the search for Mavis was my Department's ONLY investigative priority. I used every contact with every Sheriff in every State. I also made it clear to Barnestaple that the FBI wouldn't like the publicity, if he didn't mobilize every national and international asset to find her. \n\nMavis had left no footprints, physical, or electronic; and there were no reports of mysterious sightings. She seemed to have just vanished from our kitchen, one afternoon on a rainy November day. \n\nI never knew what happened. The thing that led her into my life might have toggled, and set her off on a new delusion. Or, she might have fallen down a well. She might have run off with Ramon the pool boy. Or she might have just decided to see the U.S.A. in her Chevrolet. Whatever the reason, she utterly disappeared. I finally had to accept that she was gone for good.\n\nIt would be a vast understatement to say that I was heartbroken. But the thing about shielding a vulnerable little girl is that, you discover that you have internal strength that you never thought existed. \n\nI poured every ounce of my soul into helping Ava through the loss, and oddly enough that little bit of selflessness saved me too. \n\nIt never got better. But I discovered I could shoulder the burden and continue to trudge on through life. Who needs sleep anyhow!!\n\nAva got over it much quicker and more completely than I did. But she was a kid. She missed her mom terribly. But the future held the distractions of growing up; from dance recitals to senior proms. To say the least, her old man was proud of her. Her mother would have been too. \n\nAt twenty, Ava is the same incredible beauty that her mother was. Just like Mavis, she is smart, strong-minded and accomplished. \n\nPenny Jenson, Jake Jenson's school-teacher wife, took Ava under her wing from the moment Mavis disappeared. And my Ava grew from a little girl, performing in a pack of other little girls, to her current role as the principal dancer for Eau Claire's Nutcracker. Penny got Ava a full-ride in Madison's dance program, and you can see my little girl on the sidelines every time the Badgers play. \n\nA month after my world ended, the forensic results came back from Madison. The skeleton had been in the ground for sixty to ninety years; and it was indeed a female, age approximately 25. \n\nThe cause of death was clear and unambiguously convincing. The hyoid bone was destroyed. It would take a lot of rage to cause that degree of damage. So, the coroner's ruling was murder by strangulation. The victim was listed as unknown, as were the circumstances and the perpetrator. \n\nI still don't believe in the supernatural. But my Mavis DID mysteriously appear at that exact spot in the Nicolet Forest. And we DID solve the 1946 murder of an individual named Mavis Pritchett. In the process of which, we also caused the death of the murderer. It was justice. But it left me with nothing.\n\nI had the skeleton shipped directly to me. I paid for the transport and burial myself. That's because this was personal. I pulled a few strings with the Board of Commissioners, to be allowed to bury her near my house. It was a beautiful little plot on a low hill above the Millpond. \n\nIt would be easy for me to do my nightly pilgrimage to her grave. I'd bring her some flowers and just sit and talk, tell her about my day. The weather's nasty in the winter. But, I never missed a visit.. Those visits kept me marching forward into the ethereal yonder. \n\nHer final resting place was at the base of a big spreading willow. The grave marker had a marble angel. It said, \"Mavis Pritchett, born 1921, died 1946: Beloved by her Husband and Daughter. We will be reunited on the other side.\" \n\nThe interment was in late May. It was just me and the Lutheran Pastor. Nobody among my friends and acquaintances could understand why I was wasting my money; or making such a big fuss, about the remains of an anonymous murder victim. I couldn't explain it to them. They'd think I was nuts.\n\nThe sun was bright and warm, the weather was mild, and the smell of spring presaged the summer to come. The willow had gotten its leaves and it swayed gently above us, in the soft breeze. \n\nI had told the Parson to say the words, like this unknown woman was my wife. His eyes told me what he was thinking, \"You mean the one who ran off and left you with a kid to raise.\" \n\nI really didn't give a shit what he thought. In fact, I didn't give a shit about ANYTHING. I just wanted to see my one true love properly situated for eternity. \n\nAnd yes, maybe I DO believe a little bit, now. \n\nI bowed my head on that lonely hill, as the Pastor recited the Lord's Prayer. I was holding my little girl. She was crying on my shoulder. Her black hair, bright blue eyes and the resemblance to her mom was both heartbreaking and hopeful. I knew that raising her would be the rock on which I could rebuild my life.\n\nThen I sensed somebody standing next to me. A powerful hand gripped my arm. I looked into the kind and sympathetic eyes of the Doc. His beautiful wife was standing next to him; wearing a black dress and a veil, head bowed in prayer. Penny Jensen and her greyhound husband were lined up next to them; heads also bowed, both in black. \n\nThe statement was unmistakable. Nothing need be said. I would never forget.\n\nThe Minister finished his prayer. We all said \"Amen!\" Then we each silently dropped a handful of dirt on the casket. I knew that Mavis would be happy there. She always liked watching the ducks. "
    ],
    "authorname": "dtiverson",
    "tags": [
        "beautiful woman",
        "mysterious appearance",
        "falling in love",
        "deception",
        "decisions",
        "magical mystery tour"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/beyond-a-shadow"
}