{
    "title": "Matchmaker 08: August",
    "pages": [
        "<center>Brooklyn</center>\n\nI sat down at my desk and opened my laptop. I always interviewed my clients and potential companions in person, and Meadow was no exception. What was different about my communication with her was, after the interview, the rest of our communications has been through email and text. It took a little adjusting on my part because I was used to speaking with my clients, but it was much easier for Meadow, and despite communicating almost exclusively through the written word, she was one of my most responsive clients.\n\nI believe I've found a companion for you, I typed. I pressed enter to send the message and sat back, waiting for her response. Less than two minutes later her response arrived. Now that I had her attention, her responses would be near instantaneous. She was a much faster typist than I was, and I wasn't slow.\n\nThat's good news. What's he like?\n\nI smiled. I told you how this works, but I think you'll like him.\n\n<Grin> Can you at least tell me if he's cute?\n\nI wouldn't kick him out of my bed.\n\n<Grin> Does this mystery man have a name, or do I have to guess?\n\nKane.\n\nOkay. So he's a hottie named Kane? Anything else you'll tell me?\n\nI smiled again as I typed my simple response. No.\n\nWell... shit. <Grin> Now what?\n\nWe have to work out the particulars of where and what you'd like to do.\n\nDo you have a suggestion?\n\nHow does the Blue Ridge Mountains sound? You said you wanted to get out of the city and that you'd like to be near the mountains or the oceans. The Blue Ridge Mountains are close enough to the Atlantic, about six hours, you could do both, if you wanted.\n\nWhat about Kane?\n\nHe said anyplace cool.\n\nWhere's he from?\n\nI smiled as I typed. You'll have to find that out for yourself.\n\nBut he's from someplace hot, I assume, if he wants to go where it's cool?\n\nShe was fishing. Maybe. Or he could be from someplace cool and doesn't want to deal with a lot of heat.\n\nYou're not going to tell me a damn thing, are you?\n\nNope.\n\nOkay, fine, be that way. <Grin>\n\nSo, you're okay with someplace in the Blue Ridge Mountains?\n\nYes.\n\nOkay, let me work on that, talk to Kane, and I'll be back in touch.\n\nLooking forward to it. When do you think it'll happen?\n\nAssuming Kane is agreeable to the Blue Ridge Mountains... a month or two for me to get everything in place. That puts it around the first of August at the earliest. Is that okay?\n\nSomeplace cool in August sounds wonderful.\n\nCooler. Remember, it may be the mountains, but it's still the south.\n\nStill, it has to be cooler than here! It's hotter than hell outside right now... nearly ninety!\n\nThen let me get to work, and I'll email you as soon as I start getting plans together.\n\nOkay. Thanks, Brooklyn.\n\nYou're welcome. I'll be in touch.\n\nLooking forward to it.\n\nI leaned back in my chair and glanced at the clock in the lower right of my screen. I picked up my phone and dialed. I listened to the phone purr as it rang on the other end.\n\n\"Hello. This is Kane.\"\n\n\"Mr. Reynolds, Brooklyn Lancaster. I spoke to you a couple of months ago about my services. Do you recall?\"\n\n\"Yes, Ms. Lancaster, I remember. It's been so long since I spoke to you, I assumed you'd found someone else.\"\n\n\"Are you still interested in my proposal?\"\n\n\"I suppose. I'm still not sure what I think about being a male escort.\"\n\n\"Hardly that. As I explained, I'm only making introductions. What happens after that is entirely up to you and my client.\"\n\nI heard him sigh. \"Yeah, I suppose.\"\n\nWhen I spoke with Kane during the interview, I'd explained how my services worked. I knew then he was unsure, and it was clear he still had doubts. \"If you're still uncomfortable with the idea, I can find someone else. This is entirely voluntary,\" I said, trying to reassure him.\n\nThere was a long pause. \"No. I'm game.\"\n\nHis words didn't match his tone. \"Mr. Reynolds, I need you to be sure about this. It's a waste of your time and my client's money if you don't go into this with an open mind. As I explained, this is no different than a mutual friend introducing you to someone for the first time. You'll have your own room, and you're free to leave at any time. There is no expectation or obligation, other than for you to arrive.\"\n\n\"I understand. It's just so...\"\n\n\"So?\" I prompted.\n\n\"Weird.\"\n\nI rolled my eyes. \"May I respectfully remind you that you signed up on my dating app. If you weren't interested in meeting new people, why did you bother?\"\n\n\"Yes, but to be bought and paid for by some rich woman who\u2014\"\n\n\"Let me stop you right there,\" I said firmly, cutting him off. \"If you think that's what's happening, we can end this conversation right now. I'm not some madam that lures innocent men and women into a web of depravity and deceit. My clients are thoroughly vetted, and I'm well paid to find someone compatible, someone who has the same likes, desires, and goals. I interviewed not only you, but six other men, and that was after I rejected dozens of other men immediately. I believe you and my client are a good match. You said you were looking for a stable relationship. My client is as well. Having said that, if you go into this with your current attitude, then I've obviously misjudged you and withdraw my offer. Have I misjudged you, Mr. Reynolds?\"\n\nKane was quiet for a long moment. \"No.\"\n\n\"Did you lie to me during the interview?\"\n\n\"No. Everything I told you was the truth.\"\n\n\"Do you think I'm lying to you now?\"\n\nHe was quiet for another long moment. \"No. I'm sorry. I'm... it's just that this is so new. I've never been in this situation before.\"\n\nI began to relax. It was always tough on the companions. Many of them felt like they were being 'purchased' in the beginning, and the men were often worse than the women. This wasn't the first time I'd had this conversation, and it probably wouldn't be the last.\n\n\"I understand, and you're not the first to feel this way. I've had people back out when it came time to make the commitment. The only thing I'm asking of you is this... if you agree to do this, I ask you to keep an open mind and to give me as much notice as possible if you have a change of heart.\"\n\n\"Okay.\"\n\nI nodded to myself. \"Now that that's settled, I'd like to ask you to do one more thing for me.\"\n\n\"What?\"\n\n\"Trust me.\"\n\nHe chuckled. \"That's a little harder, but I'll try.\"\n\n\"So, I ask again, are you still interested in my proposal?\"\n\n\"Yes,\" he said after a brief pause.\n\n\"Excellent. I've spoken to my client, and I have a suggestion for a destination. Would you like to hear it?\"\n\n\"Yes, please.\"\n\n\"The Blue Ridge Mountains.\"\n\n\"Okay, where's that? They're on the east coast somewhere, aren't they?\"\n\nI nodded to myself. \"Mostly in North Carolina and Tennessee. My client would also like to visit the ocean, and the Atlantic is only six hours away. Would that be agreeable as well?\"\n\n\"I've never seen the ocean, so yeah, that'd be great.\"\n\nI could hear the smile in his voice. \"Are you available for dates from the around the beginning of August to the end of September?\"\n\n\"Pretty much any of those dates. If I'm going to take a month off, it doesn't matter much what days. Being gone that long, there isn't a lot I can do to prepare, so I'm going to have to trust my crews to do their jobs without me.\"\n\n\"Okay. Let me get to work on the details and I'll be in touch with you as the plans firm up.\"\n\n\"Okay. And thank you.\"\n\n\"You're welcome, Mr. Reynolds.\"\n\n\"I'm sorry for... what I said.\"\n\n\"Don't worry. As I said, you're not the first person to have reservations. All I ask is you trust me when I tell you that I have your best interest at heart. No matter how much my client may like you, if you don't like her, then I've failed at my job.\"\n\n\"Now that I've agreed to do this, does your client have a name?\"\n\n\"Meadow.\"\n\n\"Meadow,\" he repeated, rolling the name around his tongue. \"That's a beautiful name.\"\n\n\"As I said, Mr. Reynolds. Trust me.\"\n\nHe sighed. \"My life is in your hands.\"\n\nI smiled. \"Don't worry. I understand very well the responsibility and trust my clients and companions place in me. It's a responsibility that I take very seriously.\"\n\nHe was quiet for a moment. \"I trust you. My life is so fucked up already, what have I got to lose?\"\n\nI nodded to myself again. \"Only the pain, Mr. Reynolds. Only the pain.\"\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Kane</center>\n\nI stepped off the Delta Airlines jet and followed the crowd to get our luggage. It'd been a pleasant flight with only one stop, in Atlanta, where I changed planes for the final leg of my flight. This was only my second time flying, but being pampered by an attractive flight attendant while flying first class made this a far better experience.\n\nI'd stopped at a restroom on the way to get my luggage, so I was near the end of the throng as I approached baggage claim. As I rode down the escalator, I glanced around the area, watching as happy families greeted returning loved ones. As I stepped off the moving staircase, I spotted a stunning woman standing to the side, a small sign held to her chest as she people watched.\n\nI approached. \"Meadow?\"\n\nShe smiled, her entire face lighting up. She was, without question, the most beautiful woman I'd ever met. She was average in height, perhaps five foot five or six, but that was the only average thing about her. Her hair was slightly longer than shoulder length and an incredible red that seemed to make her glow. Adding to that, she had the most astonishing blue eyes, eyes that reminded me of photos I'd seen of perfectly clear mountain lakes reflecting an equally beautiful sky. But more than the color, her eyes were enormous, almost doll-like in their size. Her skin was pale and covered in faint freckles, but rather than diminish her beauty, they enhanced it. Her heart shaped face, full lips, high cheekbones, and perky nose made me think of a Scottish Princess from long ago. She was dressed comfortably in jeans, sneakers, and a pale pink blouse, but her clothing did nothing to hide her curves. This stunning creature had to be a model. She couldn't be anything else.\n\n\"Kane?\"\n\nI smiled. I even liked her voice. She spoke softly, her voice almost lost in the excited babble of the crowd. I extended my hand. \"Kane Reynolds.\"\n\n\"Meadow Larson,\" she replied, taking my hand.\n\nI was staring and had to force myself to tear my gaze away from her face. I took small comfort that I wasn't the only one staring at the goddess standing among us mortals.\n\n\"Nice to meet you.\"\n\n\"Nice to meet you too. Good flight?\"\n\nShe continued to speak softly, forcing me to listen closely, and she had the most interesting accent. I wasn't a world traveler, but it was like nothing I'd never heard.\n\n\"Very good. Been here long?\"\n\n\"Not long. Maybe thirty minutes.\"\n\nI nodded. I felt flustered and out of sorts. Part of it was I was rocked back on my heels by her appearance. Why would a woman like her need help finding a date? She probably couldn't go anywhere without some guy wanting to talk to her. Brooklyn told me that Meadow was lovely, but I'd convinced myself she probably also 'had a great personality' or 'was a lot of fun.' She may have a great personality and be a lot of fun, but the hidden meanings behind those phrases certainly weren't true.\n\nMore than how she looked, though, was how intently she looked at me with those amazing eyes. It was almost like she was trying to read my mind, and I was both flattered and made uncomfortable by the intensity of her gaze.\n\n\"Shall we go get my bags?\"\n\nShe nodded and I turned toward the conveyors, waiting for the horn and the light to tell me where my two bags would appear. \"When did you arrive?\" I asked as we walked. When she didn't answer I looked at her.\n\n\"I'm sorry, what?\"\n\n\"I asked when you arrived.\"\n\n\"In Asheville?\" I nodded. \"Yesterday.\"\n\nI desperately wanted to know everything about her, but I didn't want to bombard her with a lot of questions like I was interrogating a witness. I had a month to get to know her. I held her gaze as she watched my face, and I again felt the flush of... something.\n\nAs my time of departure grew nearer, my apprehension over what I was doing rose. A couple of times I'd considered calling Brooklyn and telling her I'd changed my mind, but now that I was here, I was so glad I hadn't. I wasn't so shallow that her looks were the only thing that mattered to me, but spending a month with a flaming haired goddess? If nothing else, I'd have pictures from our time together that I could use to impress my friends back home.\n\n\"So, what's our plan for the next month?\"\n\nShe shrugged. \"No real plans. We have a house rented for four weeks. Brooklyn also reserved two rooms for a long weekend in a B&B on Roanoke Island in two weeks. Other than that, we're free to do what we want when we want.\"\n\nWhat I wanted was to take her to bed and never leave it. \"I definitely want to see the Biltmore Estate.\"\n\nShe nodded in agreement. \"I'd like to see that as well. Brooklyn has a special behind-the-scenes tour set up for us.\"\n\n\"She's thought of everything.\"\n\nMeadow nodded as she smiled again. \"She came highly recommended.\"\n\nBefore I could answer, the buzzer sounded and a red light began flashing over one of the baggage carousels. We made our way to where everyone was gathering. As Meadow hung back, I wormed my way into a clear spot. Wonder of wonders, one of my bags was the first one to appear on the slide, thumping to a stop as it began to creep around the conveyor toward me. Before it reached me, my second bag appeared. I grabbed my first bag, set it at my feet, and waited for the second to come within reach.\n\nBags in hand, I squirmed my way out of the crowd. \"Shall we go?\"\n\n\"This way.\"\n\nI followed her out of the terminal to the parking deck, stopping behind a white Ford Explorer with a car rental sticker on the bumper. As the hatch motored up, I tossed my bags into the back.\n\n\"Would you like to drive?\" she asked.\n\n\"No, that's okay. You know where we're going,\" I said as I tossed in my second bag and pressed the button to lower the hatch.\n\n\"I'm sorry, I missed that.\"\n\n\"I said, it was okay, since you know where we're going.\"\n\nShe smiled. \"Would you mind driving? It's easier for me.\"\n\n\"What? Oh! Sure.\"\n\nAs she handed me the keys, I wondered what she meant when she said it was easier for her. I walked around and opened her door for her and was rewarded with another of her beaming smiles as she settled into the car.\n\n\"Thank you.\"\n\n\"You're welcome,\" I said as I closed the door.\n\nI hurried around to the driver's side and slid behind the wheel. \"Where to?\" I asked as searched for the start button. She didn't say anything, and I looked at her as I pressed the start button, the Ford whirring to life. \"You're going to have to tell me where to go.\"\n\n\"Out of the airport, and then make a left onto Interstate twenty-six, north, toward Asheville.\"\n\nI followed her directions, paying to get out of the parking garage and following the airport signs to the interstate before accelerating along the on-ramp. As I merged onto the interstate, she was poking at her phone before turning it so I could see.\n\nProceed eight miles on I-26 North... the robotic voice announced. I followed the prompts, chatting with Meadow about inconsequential stuff to prevent an awkward silence.\n\n\"Your accent is interesting. Where are you from?\" I asked.\n\nI looked at her when I didn't receive an answer. I couldn't figure her out. When she was talking to me, she was very open and friendly, but other times she seemed to ignore me. If I repeated myself, she'd answer, but I couldn't understand why she ignored me when she did. It wasn't like I was prying or asking deeply personal questions.\n\n\"I'm sorry, what?\"\n\n\"Your accent is interesting. I asked where you were from.\"\n\nShe smiled. \"Omaha.\"\n\nI blinked at her. \"Nebraska?\"\n\nHer smile spread. \"Do you know of another?\"\n\n\"No... but you sound much more... exotic than that. Like maybe you're from England or someplace like that, but not exactly that either.\"\n\nShe smiled as she looked down. \"No. I'm from Omaha, born and raised. My accent is because... I'm deaf.\"\n\n\"Deaf?\" I blinked at her again. \"As in you can't hear?\" She nodded. \"But... how...\"\n\n\"I can read your lips.\"\n\nSuddenly it clicked. If I wasn't looking at her, she couldn't 'hear' me. \"Oh, I... uh...\" I stumbled, looking for words but not finding any.\n\nShe placed her hand on my arm. \"It's okay.\"\n\n\"I'd never have guessed,\" I said slowly, clearly enunciating every word, and then burned in embarrassment. I'd talked to her like I'd talk to anyone else before I knew, and now I was speaking to her like she was an idiot.\n\n\"Thank you.\" She looked at me and smiled. \"Go on. I know you want to ask.\"\n\n\"No, that's okay,\" I said, still burning. \"I don't want to make you uncomfortable.\"\n\nShe rolled her eyes. \"You think I don't know I'm deaf? We can either talk about the elephant in the room, or we can try to ignore it. The problem is, if we ignore it, it takes up a lot of space.\" She grinned. \"And you don't have to speak any differently than normal. As long as you look at me and don't talk too fast, I can 'hear' you just fine,\" she said, making tic marks in the air around the critical word.\n\nI flushed with shame. \"Sorry.\"\n\nShe patted me on the arm. \"Don't worry about it.\" Her voice was assuring, and I smiled a small smile as she continued. \"So, to answer your questions, yes, I've been deaf since birth. Yes, my parents, brother, and sister can all hear. Due to a genetic defect in my GBJ2 gene, my inner ear, the cochlea, nerves, and such didn't develop properly. Yes, I know sign language. I use ASL. No, there's nothing they can do to restore my hearing. Yes, I've tried to use the bone conducting devices, but they're very uncomfortable and didn't work very well for me, so I don't use them. Yes, I went to a special school for the deaf. That's where I learned sign, to read lips, and to talk. Yes, I live on my own. Yes, I can drive a car. Yes, I have an alarm clock. It has a bright light on it that flashes to wake me up. No, you don't have to treat me differently than anyone else. If you want to talk to me, just tap me on the shoulder or something first.\" She paused and looked at me. \"Anything else you want to know?\"\n\nI couldn't look at her. \"No,\" I said, and then remembered what she'd just said. \"No,\" I repeated, looking at her this time.\n\n\"Is my being deaf going to be an issue?\"\n\n\"What? No!\"\n\nShe nodded. \"Okay. I'm sorry if I've embarrassed you, but I think it's best to get this out there. Believe it or not, you not realizing I'm deaf is a compliment.\"\n\n\"I'm sorry.\"\n\n\"And please stop saying that. I don't want or need your pity. The best compliment you can pay me is to treat me like you'd treat any other woman.\"\n\nI wanted to apologize again. I was completely put off by her forthrightness. She'd clearly come to grips with her handicap, and she'd also become very successful if she could afford to do what she was doing. I didn't pity her, not exactly, but I wasn't sure how to handle the situation either.\n\n\"I understand. I'm just... surprised, I guess you could say.\"\n\n\"That I'm handicapped?\"\n\n\"I didn't say that.\"\n\n\"But you were thinking it. Don't deny it. It's okay. Everyone does. And you're right, I'm handicapped. I can't hear. Short people are handicapped by their height when they need to reach something off the top shelf. Tall people are handicapped when they have to fit into a small car. Fat people are handicapped by their size. Skinny people too. People who wear glasses are handicapped by their defective eyes. I don't know what you do for a living, but as big as you are, if you had to fit into tight spaces, your size would be a handicap.\" I felt her eyes on me. \"There's nothing wrong with being handicapped. It's how you deal with it that matters.\"",
        "I turned onto a road that climbed steeply into one of the hills surrounding Asheville. I didn't know what to say. \"Sorry.\"\n\nShe sighed. \"I'm sorry too. I'm not trying to beat you up, but I'm so tired of being defined by what I don't have. It's been a problem in every relationship I've ever had, and I don't know why.\"\n\nI nodded in understanding. \"I don't know why either. Clearly I'm the problem here.\"\n\n\"You're not a problem, at least not yet. I just want to get this cleared up so we can enjoy our month together.\"\n\nI turned off the steep road onto an even steeper drive. I rounded a corner and pulled to a stop before a small house perched on a steep hill. \"We're here,\" I announced, remembering her words too late again. \"We're here,\" I repeated, looking at her.\n\nShe smiled. \"You're learning.\"\n\nShe stepped out of vehicle, waiting while I gathered my bags before following me as I carried them into the house. The house was small and clearly designed as someone's investment property. The house was nicely finished inside, with comfortable looking leather furniture that complimented the inoffensive color on the walls and the rich wood floor. What made the house special, however, was the view. One entire wall of the house was glass, and closer inspection revealed the glass wall was actually sliding glass doors that could be opened to the patio beyond that overlooked Asheville below.\n\n\"Wow... that's some view,\" I said and rolled my eyes. This was going to take some getting used to. I turned to her. \"That's some view.\"\n\nShe nodded. \"Yes it is. You should see it at night.\"\n\n\"Can we start over?\"\n\nShe smiled. \"Kane?\"\n\nI grinned. \"Meadow?\"\n\nShe extended her hand. \"Meadow Larson. Nice to meet you, Kane.\"\n\nMy smile spread as I placed my bags on the floor. She might be deaf, but she was still the single most perfect creature I'd ever seen. I took her hand. \"Kane Dumbass Reynolds. Nice to meet you.\"\n\nHer brow furrowed. \"Did you say dumbass?\"\n\n\"Yeah.\"\n\nShe giggled. \"I don't think you're a dumbass.\"\n\n\"I can't imagine I made that great a first impression.\"\n\nShe continued to smile at me. \"I've had people make worse.\"\n\n\"But you've had people make better?\"\n\nShe hitched one shoulder. \"A few, but I'd place you in the top ten percent.\"\n\n\"You won't hold my dumbassery against me?\"\n\n\"Not if you don't hold my deafness against me.\"\n\nI smiled, feeling like for the first time since I found out about her deafness that I was getting my feet under me. \"Deal.\"\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Meadow</center>\n\nI stood in the door and watched as Kane unpacked his bags. Brooklyn said he was a hottie, and she wasn't lying. When he'd approached me in the airport and introduced himself, I'd almost swooned. He was a little taller than normal, around six feet, I'd guess, with light brown hair worn short, broad shoulders, a trim waist, and a handsome, tanned face that wouldn't look out of place in an advertisement for sports equipment. I couldn't hear his voice, of course, but in my imagination, I imagined him with a deep, masculine voice, whatever that might mean.\n\nI was going to break the news of my deafness to him as soon as we got to the house I was renting, but he'd put me on the spot about my accent. I didn't want to lie to him, so I'd told him the truth. It'd surprised him, as I knew it would, but he'd recovered nicely, and quicker than most.\n\nI didn't understand accents. I couldn't comprehend how two people speaking English could sound... different... from each other, but there had to be something there. He wasn't the first person to say something similar, but I'd liked the way he described it as 'exotic.' That sounded so much nicer than 'different,' 'odd,' or 'strange,' as others had described it.\n\nI couldn't hear myself speak, so I didn't know how to correct my speech, but as long as I could be understood, I didn't worry about it much. Having never heard anyone speak, ever, learning to speak had been hard. Really hard. I was much more comfortable signing, something I'd learned early, but very few people who could hear could sign, so if I wanted to be understood without having to write everything down, it was up to me to adapt.\n\n\"Finished,\" he said as he hefted the bag off the bed.\n\nHe was still forgetting to look at me when he spoke, but I'd caught 'Fin\u2014' before he looked to the bag. I was very good at putting fragments of speech together to understand what people were saying.\n\n\"What are we doing for dinner?\" I asked.\n\n\"Let's eat in. Is there food in the kitchen?\"\n\n\"Not much,\" I admitted.\n\n\"Okay, let's go shopping, and then we'll eat in.\"\n\n\"Okay, sure.\"\n\n\"You like Mexican food?\"\n\n\"Mexican? It's okay.\"\n\n\"Say that after I fix you my world-famous Indian Tacos.\"\n\n\"Indian Tacos?\" He nodded as he smiled. \"World Famous?\"\n\nHe grinned. \"Okay, not yet, but my friends like them.\"\n\n\"What's an Indian Taco?\"\n\n\"Frybread with taco toppings.\"\n\n\"I know what a taco is, but what's frybread?\"\n\nHe grinned. \"Don't you trust me?\"\n\nI smiled. \"Okay, sure. Surprise me.\"\n\nHe looked annoyed when he turned to face me again. \"Sorry. I asked if you drink beer.\"\n\n\"Beer? Sure.\"\n\n\"Great. Indian Tacos and beer it is.\"\n\n\"Do you cook at home?\"\n\n\"Yep. I can't eat out all the time.\"\n\n\"And where's home?\" He walked past. I assumed he answered me, but I hadn't caught it. I took his arm and pulled him to a stop. \"Where?\"\n\n\"Shit. I keep forgetting.\"\n\nHe said something, but I had no idea what it was. \"I didn't get that. Can you say it again, more slowly?\"\n\nHe repeated the word, but I was just as befuddled the second time. I pursed my lips in annoyance. I was pretty good at reading lips, but sometimes unusual words confounded me, especially if I didn't have context clues to help me. \"One more time, with the state, please.\"\n\n\"Albuquerque, New Mexico.\"\n\n\"Albuquerque!\"\n\nHe grinned. \"That's it.\"\n\n\"Did I say it right?\"\n\nHe grinned. \"Close enough.\" He took my arm. \"Come on, let's go. I'm starving.\"\n\nWe drove to the store. I could drive, since driving was primarily a sight-oriented task, but because I couldn't hear the honk of a horn or the cry of a siren, I had to keep my eyes moving, which meant I couldn't listen. If he drove, I could watch his lips and he wouldn't be forced to sit in silence.\n\nNow that we'd gotten over the initial awkwardness of him finding out about my deafness, things were progressing smoothly again. He still failed to look at me sometimes, but he was aware of it. I could tell he was trying, and I didn't begrudge him his occasional lapses. For those who could hear, it was so natural, so instinctive to be heard when they spoke, they didn't even think about remembering to look at me, and it took time to retrain themselves.\n\nWe arrived at the store and walked up and down the aisles. He was a quick learner and touched me on my arm to get my attention before speaking, allowing me to look around without worrying about missing something he said. People sometimes became frustrated with me, always having to repeat themselves, expecting me to pay rapt attention to them so when they spoke, I would 'hear.' Kane wasn't like that. He took responsibility to make me aware he wanted my attention before speaking. My friends treated me the same way, and it allowed me to relax around him.\n\nLike my friends, he would also nudge me when someone was approaching from behind, gently pulling me into his side so I didn't step in front of someone or have to keep my head on a swivel. I didn't have to instruct him, he seemed to instinctively grasp how he could help, without being overprotective. There was a sweet spot between being unwilling or unable to adjust and smothering me, and he had quickly found it.\n\nHe touched me, holding a can of red beans in front of me. \"Beans or no beans.\"\n\nI shrugged. \"How do you make it?\"\n\nHe placed the beans in the basket. \"Beans it is. That's the great debate at home, but I come down firmly on the side of beans make it better.\"\n\n\"You're the expert.\"\n\nWe continued, adding items to our basket, collecting enough supplies to last us a week or more. He touched me as we paused at the milk cooler. \"Can I ask you something?\"\n\n\"Sure.\"\n\n\"Why do you speak so softly?\"\n\nI smiled. \"Because I can't hear myself, I can't tell how loud I'm talking. I used to have a problem with that. People said I was yelling.\" I shrugged. \"So...\"\n\nHe nodded. \"Gotcha.\"\n\n\"Do I need to speak louder?\"\n\nHe shook his head. \"No. I thought maybe it was because...\"\n\n\"What?\"\n\nHe shook his head. \"No, it's nothing.\"\n\n\"Oh, no. You were going to say something. Say it.\"\n\nHe looked down and back up again. \"I was going to ask if it was because you were embarrassed by how you sounded, but I realized how stupid that sounded.\" He held my eyes. \"Besides, I think you sound sexy as hell.\"\n\nMy eyes widened and I glanced around to see if the people around us heard. When I turned back to him, he was smiling. \"What?\"\n\n\"I could get used to this.\"\n\n\"What?\"\n\n\"I'm not actually saying anything now, only mouthing the words. I think I like the idea of being able to talk to you in private, even in a public place, like telling you how sexy your voice is, without anyone being able to overhear.\"\n\nI felt a little chill race down my spine with his words. \"I think I'd like that too,\" I mouthed in return.\n\nHe chuckled, his eyes crinkling as his chest bounced. \"Sorry. I'm not nearly as good at that as you are.\"\n\nI grinned. \"I said, I think I'd like that too.\"\n\n\"Maybe you can teach me?\"\n\n\"Maybe.\"\n\n\"Sign language too?\"\n\n\"Maybe.\"\n\nHe put his hand on my hip and drew me to his side as a woman pushing a buggy passed us. After she passed, he released me, but I was in no hurry to step away from his side. We finished our shopping and made our way to the checkout. As the young guy at the register checked us out, Kane was grinning.\n\n\"What?\"\n\n\"Tell you later.\"\n\nHe pulled his wallet out, but I touched him, and he put his wallet back into his pocket. Brooklyn should have explained the rules to him. This trip was on me. \"I've got this,\" I said as I pulled out my credit card, looking at the amount on the screen before passing my card over.\n\nKane touched me. \"He said to use the chip reader.\"\n\nI nodded as I slid my card into the slot. Seconds later the screen flashed, telling me to remove my card. I removed it and tucked it away into my wallet.\n\nWe walked out of the store. This was when my deafness bothered me. I couldn't hold a conversation and do anything else, even something as simple as walking back to our car. We paused and he began loading our bags into the back.\n\n\"What were you going to tell me?\" I asked.\n\nHe paused in what he was doing, a broad smile on his face. \"Did you not see how hard that guy was trying not to stare?\"\n\n\"The cashier?\"\n\n\"Yeah.\" He paused as he watched me. \"How do you not realize how beautiful you are? The guy could hardly keep his eyes off you.\"\n\nMy face heated as I looked down. \"I don't know about that.\"\n\nHe waited for me to look up. \"I do,\" he said, holding my gaze until I had to look away again.\n\nWe drove back to the house and unloaded our bounty. Most items were put away, but some remained on the counter, and as soon as we finished putting items away, he began browning hamburger and preparing the frybread.\n\nI'd had other lovers, but none had volunteered to cook for me. I could cook, but it wasn't an activity that I particularly enjoyed. I watched as he went about the task of preparing our dinner, his movements sure and confident. He touched me on the hand.\n\n\"You said you were from Omaha?\"\n\nI nodded. \"That's right.\"\n\n\"So, what do you do in Omaha?\"\n\n\"My family owns a pet food and pharmaceutical company. Have you heard of Luposine dog food or MeoWow cat food?\"\n\nHe nodded. \"Yeah. That's you?\"\n\nI nodded. \"LPP, an acronym for Larson Pet Products, is the holding company for the brands. We also have a line of pet pharmaceuticals that we sell under the LPP brand. Things like flea, tick, and parasite prevention products, along with a new product that is doing very well for us, Remissis. That's Latin for relax. It's a mild sedative that allows dogs that suffer from separation anxiety or noise aversion to live better lives by relieving their anxiety without affecting their behavior.\"\n\nHe watched me for a long moment. \"Okay.\"\n\nI nodded. \"Yeah. It's a real breakthrough product. It's only been on the market for about a year, but already it's by far our best-selling and most profitable pharmaceutical. If it keeps growing like it is, it's going to surpass our cat food line to become our second most profitable brand in a year or two.\"\n\n\"Behind dog food?\"\n\nI nodded. \"Yes. Our dog food lines brought in around eight hundred million dollars last year. Cat food, about four hundred million, and Remissis, two hundred million. Everything else amounts to another six hundred million or so.\"\n\n\"Wow. So, your company is worth, what, two or three billion?\"\n\nI paused while I thought about it. \"About four, give or take a few hundred million.\"\n\nHe pursed his lips in what I assumed was a whistle. \"So what do you do?\"\n\n\"Oh. I'm the president and CEO.\"\n\nHis eyes opened wider. \"Oh, wow. I had no idea.\"\n\nI nodded. \"Yeah. My grandfather started the business, Dad took it over, but he stepped down and retired a couple of years ago. Now I run it.\"\n\n\"And your brother and sister?\"\n\n\"How'd you know I have a brother and sister?\"\n\n\"You told me.\"\n\nI frowned. \"I did?\"\n\nHe grinned. \"Yeah, earlier, when I was being a dumbass and you were answering all my unasked questions.\"\n\n\"Oh, yeah, I remember now. I'm the oldest, so I'm running the company. Monty, my brother and the baby, he's the head of sales and marketing. He can sell snow cones to Eskimos in winter. Sparrow, my sister, was the COO, but she took over my position as CFO when Dad stepped down.\"\n\n\"And how old are you?\" he asked, a teasing grin on his face. He didn't think I'd answer him.\n\n\"I'll be thirty in October. Sparrow, she's twenty-six, and Monty is twenty-four, soon to be twenty-five.\"\n\nHis smile spread. \"Thirty, huh? Good thing I like older women.\"\n\n\"Okay, smart guy, how old are you?\"\n\n\"Twenty-eight.\"\n\n\"Oh no! It's like I'm robbing the cradle.\"\n\nHe snickered. \"I don't mind if you don't. Babies get to do something I wouldn't mind doing,\" he said, staring pointedly at my breasts.\n\nI giggled, enjoying his flirting. So many men walked on eggshells around me. It was refreshing to have someone treat me like, well, normal was the only word I could think of.\n\n\"And what do you do in Albuquerque, Mr. Reynolds?\"\n\nHe grinned. \"Like you, I'm president and CEO of a company.\"\n\n\"Really? Anything I've heard of?\" Kane was getting more interesting all the time.\n\n\"Yep. Heard of Law and Order Property Management?\"\n\nI frowned. \"Law and order?\"\n\n\"Lawn,\" he said more slowly.\n\nI grinned. \"Oh, I get it. Lawn and Order.\"\n\n\"Lawn in Order,\" he clarified.\n\nMy smile widened at the play on words. \"Even more clever.\"\n\nHe smiled as he nodded, dropping the doughy goop in the hot oil to start it frying. \"Yeah. I own a landscaping company. I run eight crews, and we maintain mostly commercial properties and HOA common areas.\"\n\n\"What common areas?\"\n\n\"Sorry. Home Owner Association. Town home communities where the lawns, common areas, and streets are maintained by the homeowner's association. Nothing so grand as your multi-billion-dollar company, but we maintain about two hundred properties a week.\"\n\n\"You own that?\"\n\n\"Yeah. I started out mowing the neighbor's lawns with a push mower when I was about ten, and it grew from there.\"\n\n\"I'm impressed.\"\n\nHe chuckled. \"Yeah, right, but nice of you to say so.\"\n\n\"I'm serious. I might be the head of a larger company, but I inherited my position, where you built your company from the ground up with your own sweat and labor.\"\n\nHe made a face that indicated he'd take the compliment. We talked some more about trivial stuff as he finished preparing our meal. I watched as he dipped up the frybread and placed it on a plate. To me it looked like a giant, flat doughnut without the hole and sugar frosting. He next piled the meat and bean mixture into the center of the bread and topped it with chopped tomato, shredded lettuce, cheese, and sour cream.\n\n\"Ta-da!\" he exclaimed as he picked up our plates and carried them to the table.\n\nI followed with two beers, placing them beside the plates. I might not be able to hear, but there was nothing wrong with my nose, and the dish before me smelled wonderful. I cut off a piece, and after blowing it cool, popped it into my mouth. A smile spread as I chewed before I brought my right hand to my lips and then dropped it into my left palm.\n\n\"That means it's good,\" I said as he looked at me curiously.\n\n\"How do you sign 'thank you?'\n\nI showed him, repeating the previous motion, but keeping my left hand down and gesturing to him as I brought my hand away from my lips. He repeated the motion, and I brought my index finger to my lips and motioned away.\n\n\"That means 'you're welcome.'\"\n\nWe finished our meal, and I showed him a few other signs. It was sweet of him, trying to learn, but it wasn't something I could hope to teach him in a month, even with hard practice, and I didn't want to practice hard with him. I grinned to myself as we loaded the dishwasher. There were other things that were hard, and I'd want to practice with, that would be a lot more fun.\n\nThe sun was setting as we wandered onto the deck, the lights of Asheville twinkling below us as if stars had fallen from the sky. The mountain air was pleasantly cool, and we sat in companionable silence. Good thing as it became too dark for me to reliably read his lips.\n\nBy ten I was suffering. I'd gotten up early this morning, the east coast time kicking my ass, my body thinking it was an hour earlier than the clock said. I smiled to myself. Kane wasn't feeling it now, his body thinking it was only eight, but he'd feel it in the morning.\n\nI rose and paused in front of him. \"I'm going to bed.\"\n\nHe stood. \"Good night.\" I could see him debating with himself, probably the same debate going on inside my head. If he asked, would I join him in his bed? I wasn't sure, but in the end, he didn't ask and saved me from having to make a decision.\n\nHe followed me into the house, touching me on the arm. I turned to face him. \"May I kiss you good night?\"\n\nI smiled up at him. \"Yes.\"\n\nHe placed his lips on mine in a slow, innocent kiss. I sighed as our lips slowly parted. \"I'll see you in the morning,\" he said.\n\nI nodded as I lifted my right hand to my lips and covered my left hand, my left held palm down this time instead of palm up, as I had for thank you. He watched my movement.\n\n\"Not thank you. Your left hand is upside down. Good night?\"\n\nI smiled. \"You're a quick study.\"\n\nHe smiled back at me. \"I've always wanted to learn another language.\"\n\n\"You're in luck, then. But not tonight.\"\n\n\"Tomorrow then.\"\n\nI nodded, and he kissed me again. He signed good night and I felt a pleasant warmness flow through me. I repeated the sign back to him as I turned to my room. As I closed my door, I sighed. Ms. Brooklyn Lancaster was very good at her job indeed.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Kane</center>\n\nI swam up out of the darkness of sleep, smiling to myself as I pulled the warm softness more snugly into my chest. Yesterday, on our first full day together, we'd spent the entire day touring the Biltmore Estate. The house and grounds were simply amazing. We'd gone on three tours yesterday, the self-guided house tour, the grounds tour, and then the special tour that Brooklyn had arranged that allowed us to see things few visitors were able. We'd also visited the Biltmore vineyards.",
        "We'd had dinner in Asheville that night, and over our Italian dishes, Meadow had shown me several more signs. It was so easy to forget she was deaf. When she looked at me, her confusion evident, during the carriage ride through the grounds, I'd realized she wasn't hearing enough of the driver's patter to follow what he was saying, so I'd begun silently repeating what the driver said so she wouldn't be left out, touching her when he started speaking so she could 'listen' to him through me. I didn't mind at all as it gave me an excuse to touch her.\n\nI hadn't been kidding when I told her that her voice was sexy. I liked how she almost whispered, forcing me to listen closely, as if she was always sharing a secret with me. Add to that, she had a slight slur on her soft C's and S's, and the rest of her pronunciation was off just enough to make her sound... exotic was the best word I could think of to describe it. She wasn't difficult to understand, but there was something about her speech pattern that made me want to sit and listen to her speak for hours.\n\nWhen we'd returned to the house, we'd settled onto the deck and watched the light fade as the city below us began to blaze with light. We sipped our adult beverages, mine one of the beers left from our meal the previous night, and hers from the bottle of wine we'd picked up at the Biltmore vineyard gift shop. The weather was perfect, so different than the heat of an Albuquerque summer.\n\nI softly kissed her on her shoulder as I sighed, sleep pulling at me again. I hadn't wanted to spoil the view by turning on a light so she could see my lips, so as the night air cooled and the hour became late, we sat in companionable silence. I smiled as I remembered the butterflies swarming in my stomach as I touched her gently on the arm and held my hand out to her. She took it and I pulled her into my arms. She didn't resist, and I lowered my lips to hers, pausing a hairsbreadth from hers to give her a chance to turn away. She hadn't, and I'd taken her lips for my own.\n\nShe'd melted into my arms, and there was no way she couldn't feel my hardness between us, but she didn't seem to object to that either. We slowly disengaged from the kiss as I'd smiled down at her. Her back was to the house, so there was just enough light cast on my face for her to see me. I want you, I mouthed, and had been rewarded with a smile.\n\n\"I want you too,\" she replied.\n\nMy heart had leapt with joy before the dread had set in. I'd been so long without a woman, almost two years, I worried that my first impression wouldn't be a good one. Despite my worry, I'd taken her lips in another slow, gentle kiss, before I'd taken her hand and slowly towed her to my bedroom.\n\nI'd been right to be worried. Despite thinking about baseball, my business, and even the death of my dog years ago, I'd gone off like an eighteen-year-old virgin. I'd burned in embarrassment, but she'd taken it with good humor and allowed me a chance to redeem myself. We'd made love three times before we slept, and I was satisfied that despite me being gone in sixty seconds the first time, I'd left her fulfilled.\n\nI kissed her on the shoulder and neck, my desire for her swelling, along with other parts of me. She was so incredibly beautiful she nearly took my breath. But there was more than that. She was strong, unbelievably strong. Despite her\u2014I didn't want to use the word handicap because she was anything but\u2014condition, she'd risen to the head of one of the largest pet food companies in the country. If only\u2014in my mind I heard the ripping screech of a phonograph needle dragging across a record.\n\nNo! I raged at myself. You're not going there! Not now, not ever again! That's behind you! She made her choice! You have a chance to be happy! Don't be an asshole and fuck it up!\n\nI shoved the thoughts aside. That chapter was behind me, with a new one opening in front of me, and I didn't want to fuck it up. Meadow moved, stretching and groaning. I found it interesting that even though she couldn't hear, she still made all the unconscious noises people made, such as groaning when stretching, and my favorite, soft sighs as we made love.\n\n\"Good morning,\" I murmured, even though I knew she wouldn't hear.\n\nShe rolled over and smiled up at me. Good morning, she signed.\n\nI smiled and signed it back. Her smile spread and her lips begged to be kissed. I took them in a leisurely caress, sighing as I slowly pulled back. There was something inherently erotic about doing most of our communication while being intimate with looks, gestures, and touches, instead of words.\n\nI caressed her face as I held her gaze, falling into the infinite depths of her eyes. Her smile softened as she touched my lips with a finger. I kissed her again, more passionately than before, and I felt her respond. I began kissing down her body, losing myself in the moment, thinking only of her, my past, at least momentarily, forgotten.\n\n<center>-oOo-</center>\n\nWe strolled, hand in hand, along the streets of downtown Asheville, wandering in and out of shops Meadow found interesting. Shopping for trinkets was near the bottom of my list of things I wanted to do, but Meadow was clearly enjoying herself, and that made the time well spent. Despite my lack of enthusiasm for shopping, I had to admit there were some amazing items on display, from quilts to hand-blown glass to jewelry, all created by local artists. She didn't buy anything and seemed content to simply browse, occasionally holding something up for me to see if she found it particularly interesting.\n\nAfter lunch at a local barbecue, the tangy, vinegary sauce so unlike any barbecue Meadow or I had tried before, we'd continued our wandering, going nowhere and in no hurry to get there. Asheville might be in the mountains, but it was still warm, and I tugged her to something that interested me, an ice-cream shop.\n\n\"What flavor?\" I asked as I pulled out my wallet.\n\nShe carefully looked over the available selection and then pointed. \"May I sample that?\"\n\nThe girl behind the counter smiled. \"Pralines and Pecans is one of our best sellers,\" she said as she dipped a tiny amount onto a disposable wooden spoon.\n\nMeadow's eyes opened slightly wider as the treat disappeared between her lips. \"Oh, yes, I can see why. A scoop, no, make it two scoops of that, on a waffle cone.\"\n\nThe girl smiled. \"For you, sir?\"\n\n\"I'll have a strawberry milkshake.\"\n\nMeadow started to pull out her wallet, but I placed my hand on hers. \"My treat.\"\n\n\"But that's not how\u2014\"\n\n\"My treat,\" I repeated, adding a smile so she'd know I wasn't upset since she couldn't hear my tone.\n\nShe hesitated and pulled her hand out of her purse. \"Okay, if you insist.\"\n\n\"I do.\"\n\nI paid, we took our treats, and settled at one of the umbrella-covered outdoor tables. I watched her nibble and lick at her cone until she met my eyes. Even though there was a family of four, two of them small children, sitting right next to us I grinned. You're turning me on with the way you're eating that ice cream.\n\nShe smiled as her licks suddenly became much slower and more seductive. I'd mouthed the words just to tease her, but her sudden change in demeanor caused a hardening in my pants. I snickered. I'd just been one upped and she knew it, her eyes dancing as she watched my face.\n\nShe offered me a taste of her cone. I tried to do to her what she'd done to me, slowly licking the side of the cone before curling my tongue deep into the frozen desert and pulled off a healthy bite, but all I succeeded in doing was giving myself a brain-freeze. As my face crinkled, I held the palm of my hand to my forehead as I waited for the pain to dissipate while Meadow's musical laughter rang in my ears. As the ache faded, I grinned at her, slightly embarrassed that my attempt at seduction had the opposite effect.\n\nShe held her hands up, fingers curled with thumbs pointed at each other, and made a motion that reminded me of female body, and then laughed again as she took her cone back from me. I tried to work out what the sign meant but failed. She could tell I didn't get it and made a smoochy at me.\n\nThe family sitting beside us left as I was finishing the last of my milkshake and the last bit of her cone disappeared into her mouth. She wiped her lips and made the sign again. \"Sexy,\" she said.\n\nNow that I knew what the sign was, it was obvious. I had it right, the sign was probably a stylized shape of a female body, but I hadn't put two and two together.\n\n\"Yeah,\" I said with a rueful grin.\n\nShe snickered. \"I thought so. I saw you make a face like that a couple of times last night... and once this morning.\"\n\nI warmed, both in embarrassment and memory. At least now I knew what my 'O' face looked like. \"It's because you're so damned,\" I began, finishing with the sign. I'd remember that one. \"Are you ready?\"\n\n\"For what?\" she asked, her face the picture of innocence.\n\nShe was playing me, and I smirked. \"For whatever you want.\"\n\nShe took a long, obvious look around us before bringing her gaze back to. \"Too many people around,\" she said, never cracking a smile.\n\nI tried, I really did, but I couldn't stop my snicker, causing her to grin in response. I made the sign I'd just learned.\n\nShe made a fist and quickly rocked it up and down at the wrist, like a nodding of her head, in agreement. I took her arm and pulled her in, giving her a quick, public smooch, before sliding my hand down her arm and taking her hand again.\n\n\"Shall we?\"\n\nShe bounced her fist again as she followed me away from the table.\n\nWe spent another couple of hours wandering around, popping in and out of shops, before we returned to the glassblower's shop we'd visited before stopping for ice cream. Meadow picked up a clear half-globe that had a brightly colored glass jellyfish swimming over a glass sea bottom. She'd admired the item the first time we'd stopped in, and though I knew nothing about glassblowing, it should be obvious to anyone that it took amazing skill to craft something like that, and it was reflected in the price.\n\nShe admired the piece again before obviously making a decision. She carried the item to the register where she paid for her purchase, the clerk carefully packaging the item in a padded box.\n\n\"For my desk,\" she said as we turned for the door, her jellyfish in a small bag.\n\nI took her package, carrying it in one hand while holding her hand in the other. We made our way back to the Ford. I touched her hand for her attention. \"Eat in or out?\"\n\nShe quirked her lips to the side as she thought. \"I don't want you to feel like you have to cook all the time, so\u2014\"\n\n\"In it is, then.\"\n\nShe smiled. \"You're sure?\"\n\n\"Positive. We still have some hamburger left over, so it's going to be taco Tuesday.\"\n\n\"Indian Tacos?\"\n\n\"Regular this time, for variety, and so I can save room for dessert.\"\n\nWe drove home, talking about whatever subject came to mind. As I browned and seasoned the hamburger, she leaned against a cabinet, watching me.\n\n\"What are you planning for dessert?\"\n\nI smiled at her. I'd been waiting, and hoping, she'd ask. \"Something that's soft, warm, pleasing to the lips and tongue, and smells terrific.\" I liked how she watched me.\n\n\"What would that be?\" she asked when I didn't continue.\n\n\"Sopapillas. Remember, I bought some at the store the other day?\"\n\n\"What? Soap?\"\n\n\"Sopapillas,\" I said more slowly.\n\nShe shook my head again. \"I can't get it. Can you write it down?\"\n\nI searched the kitchen until I found a pen and paper and wrote the word down, adding a phonetic spelling so she'd know how it sounded. She tried the word out, and it was pretty close.\n\n\"Perfect,\" I said as I pulled the frozen desserts from the freezer so she could see.\n\nShe trilled out her musical laugh. \"You had me going there for a minute.\"\n\n\"What did you think I meant?\" I asked, struggling to keep my face neutral.\n\n\"Oh, nothing.\"\n\nI waited a pair of heart beats before returning the package to the freezer and turning to face her. \"Or maybe I'll cover you in honey and have you for dessert.\"\n\nI liked how her eyes widened. I held her gaze until she smiled. \"Maybe we should have dessert first?\"\n\n\"Maybe. Something to whet our appetite?\"\n\nShe swallowed hard and smiled before making the curvy woman sign again. She grinned. \"See if you can figure this one out.\"\n\nWith her left hand, she curled her pointer finger to thumb with her other three fingers raised, making the universal gesture for 'OK.' She then made a fist with her right hand, save her pointer finger, which she rapidly pistoned through the hole of her left hand. I snickered.\n\n\"I think I get that one. Is that a real sign?\"\n\nShe grinned. \"No, but I think it should be. It's meaning is obvious, don't you think?\"\n\n\"Very.\" I paused, still smiling. \"Do you want to...\" I asked, repeating the sign.\n\nShe grinned, rocking her fist up and down.\n\nI reached over, placed my hand behind her head, and slowly drew her lips to mine. We shared a leisurely kiss before I released her. She grinned at me and made a flurry of sign. If she expected me to get any of that, she was going to be disappointed. Her smile spread.\n\n\"I said, 'Stop fucking around and let's go. I'm ready for dessert.'\"\n\n\"Maybe I won't start out as a two-pump-chump tonight.\"\n\nShe laughed again, the sound warming in ways I hadn't felt in a very long time. \"You didn't do badly last night... or this morning...\" she said before fanning her face with her hands.\n\n\"Just wait until I get you in my bed tonight,\" I said, holding her gaze.\n\nShe held my gaze a moment before she rose from her prop and took my hand, slowly backing up as she tugged on me. I pulled her to a stop just long enough to set the mostly cooked beef off the heat. It'd hold for a little while. Meadow was ready for dessert, and I didn't want to keep the lovely lady waiting.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Meadow</center>\n\nWe walked along the beach, my arm tucked inside Kane's, my body close to his as we held hands. The sun had set an hour ago, but the sand was still warm on my bare feet as the gentle ocean breeze rippled my gauzy wrap, the full moon slowly rising out of the ocean to bathe us in its soft light. I leaned into him, wanting to be as close to him as possible, wanting, almost needing, to feel his touch. I'd never done anything so romantic in my life, and having Kane at my side only made the stroll that much better.\n\nIn our two weeks together, Kane had impressed me. He wasn't the first man in my life, but he was the first one I was starting to think about a long-term relationship with. My love life had been a series of short-term relationships that ended in failure for one reason or another. Sometimes it was me that walked away, other times the guy. Most of my lovers were men who could hear, and they invariably fell into one of three categories.\n\nThe smallest group thought it was cool fucking a deaf chick. I suspected at least a few of them were saying things they'd never say to a lover who could hear as they lived out some dark fantasy where they verbally degraded a woman. These men were good for one thing, and one thing only, and that was getting an itch scratched. We rarely dated more than a week or two before I wised up or they tired of me.\n\nOther lovers couldn't adjust to my deafness. I think some of them tried, but me not responding when they spoke to me, or my being unable to enjoy things they did, such as music, eventually drove us apart. It was frustrating for both of us because a couple of the men I'd really liked, but my deafness was simply too big a hurtle for us to overcome. These relationships lasted longer than those with guys who simply wanted to bang a deaf girl, but they still ended in failure.\n\nThe third group tried to smother me, either thinking I was helpless or out of a sense of pity. I invariably broke off the relationship with men like those. I couldn't abide their pity, and I didn't need a knight in shining armor riding to my rescue on a white charger. While I couldn't hear, I wasn't helpless, and in my thirty years, I'd learned to cope in nearly every situation. These relationships generally lasted the longest, one lasting several months, but they too always ended in failure.\n\nI'd also dated three deaf men. While it was a relief I could be myself, and they understood what it was like being deaf, for whatever reason we never clicked. One was angry with the hand life had dealt him, and with the other two, it was simply a lack of chemistry.\n\nI looked at Kane, and I warmed. Kane, however, was damn near perfect. Not only was he panty dropping handsome, his tanned, toned, muscled body making my mouth water every time I saw him, but most importantly, he treated me like a normal person. He still occasionally made mistakes, but he was trying, didn't blame me for something I couldn't change, and that was all that mattered to me. Best of all, he was simply a good person, and funny in a gentle, self-deprecating way. He treated me with kindness and respect without being overprotective, and he instinctively understood when to help and when to let me do it myself. When he did help, it was with only a few words, a nudge, or a gesture, just like anyone would with a friend who'd simply missed something. His help was so subtle I suspected when we were together, nobody around us even realized I was deaf.\n\nHe stroked my arm, our silent signal he wanted my attention. He turned us so the moon was behind me. He was so thoughtful, positioning us so what light there was shined on his face so I could read him. \"I can't believe how beautiful you are in the moonlight.\"\n\nThe moon provided just enough light for me to make out what he said. I smiled and looked away. I changed my mind. The best thing about him was how he made me feel about myself. Not his words. Words were hollow and meant nothing. How he looked at me was the thing I liked best. I was expert at reading people, and when he spoke to me like that, his eyes and the softness of his face filled me with joy. Nobody had ever looked at me like he did, and I was reveling in it.\n\nHe stroked my arm again. This time when I looked up, he replaced words with action, slowly pulling me to a stop before taking my lips. He was the best kisser I'd ever experienced. How a man could put so much feeling into a simple kiss was beyond me, but he could. His kiss was soft, slow, and deeply passionate without slobbering all over me. Just like him, it was perfect.\n\nHe smiled down at me. \"I've always wanted to kiss a goddess under a full moon on a secluded beach.\"\n\n\"Oh, stop it.\"\n\nHe grinned, enjoying the teasing. \"No, it's true.\"\n\nI had to look away. When we were being intimate, like now, he embarrassed me with his teasing, over-the-top praise. I'd normally write it off to idle flattery or an attempt to ingratiate himself so he could get in my pants... but those looks, they told a different story.\n\nI looked up at him again. \"And now that you have?\"\n\nHe smiled down at me. \"I can die happy.\"\n\nI snickered and looked away again as we returned to our stroll. I looked at him. \"Is that something you plan to do anytime soon?\"\n\n\"I hope not. I have a long list of places I want to kiss you.\"\n\n\"Oh? Like where?\"\n\nHe pulled me to a stop. \"This seems like a good place.\"\n\nHe kissed me again in another slow, gentle meeting of our lips. I sighed as our lips parted. I stood in his arms for a long moment before pulling back. We walked again, but before we had taken ten steps, he stopped me again.\n\n\"And here.\"\n\nI snickered as he lowered his lips to mine, blocking him with a finger on his lips. \"Stop, or we'll never get back to the room.\"\n\nHe waited until I removed my finger before kissing me, something I didn't mind at all. \"I don't care,\" he murmured as he slowly drew back.",
        "I settled into his chest. \"Neither do I.\"\n\nHe held me, his cheek resting on my head as the moon rose behind me. I could have stood there all night, but his closeness and the feel of his arms around me caused me to want him to do more than kiss me. I eased out of his arms, but not before we shared another lingering kiss.\n\nI sighed out of our kiss, incredibly content. This was turning into the best month of my life. I took his hand and gently tugged him back in the direction we came. By the time we returned to our room, thankfully, it would be bedtime.\n\nI smiled. Our first night together, he'd been so cute, his obvious horror from coming so quickly endearing. He'd more than made up for it the rest of the night, and the next morning, and that night... and every night and most mornings since. Between the way he looked, and the way he made me feel, both in and out of the bed, I simply couldn't get enough of him, and he never disappointed.\n\nIf he treated all his lovers like he did me, I couldn't understand why someone hadn't snapped him up by now. Luckily for me they hadn't. For at least the next two weeks he was mine, and woe be unto the woman who tried to poach him, because I'd go after her with fangs and claws bared.\n\nHe stroked my arm, the touch for my attention sending a shiver of pleasure through me. I looked at him. \"What?\" he asked.\n\n\"What?\" I asked, either not getting what he said or not understanding what he was asking.\n\n\"You were smiling.\"\n\n\"Can't I smile?\"\n\n\"Sure, but I was wondering why.\"\n\n\"How about because I'm happy?\"\n\n\"Oh?\"\n\n\"Yeah. I met this guy, he makes me happy, and that caused me to smile.\"\n\n\"Who's the lucky fellow?\"\n\nI was struggling to keep my smile in check. \"You may know him. Tall. Handsome. Funny. Great in bed.\"\n\nHe paused, his face twisting as if he were thinking. \"Nope. Don't know anyone like that.\"\n\nI snickered. \"That's too bad, because I was going to...\" \u2014I made our joke sign for fucking, poking my finger through an okay sign instead of forming a pair of 'Vs' with my two hands and slapping one over the other, the proper sign for sex\u2014 \"but if you don't know anyone interested, then...\"\n\nHe grinned at me. \"I didn't say I didn't know anyone interested, I said I didn't know anyone who was tall, dark, and handsome.\"\n\n\"Don't forget funny and good in bed.\"\n\n\"Yeah, that too, but if you'd be willing to settle for me, I'd be interested. I can be funny in bed.\"\n\nI smiled. He could be funny in bed, but in all the best ways, making our love making fun. I heaved a dramatic sigh. \"Well, if you don't know this other guy, I guess you'll do.\"\n\n\"Yes!\" he said, pumping his fist and scrunching his face in victory, causing me to giggle.\n\nHe smiled down at me before taking my hand, starting us walking again. We strolled slowly along, saying nothing, until we reached the boardwalk leading to the B&B where we were staying, our shoes still parked at the end where we'd left them. The lights from the house were shining brightly, but this close to the water, we were still surrounded in darkness. I bent for my shoes, but before I could touch them, he gently pulled me back, turned me, and drew me into his embrace. He held me close as I melted into his chest, his arms around me making me feel safe and protected.\n\n\"We should go,\" I said. \"They're going to lock the doors soon.\"\n\nI don't know if he spoke because I couldn't bear to pull back from his embrace to see, but he shook his head. I smiled as I sighed. We might have to sleep on the beach, but the idea didn't bother me. The night was warm, the sand was soft, and making love on the beach before falling asleep in each other's arms sounded wonderfully romantic. He heaved a sigh before slowly loosening his embrace, taking my lips once more before letting me go.\n\n\"As much as I don't want to, I guess we'd better go before they lock us out.\"\n\nMy turn to sigh. \"I guess.\"\n\nWe put on our shoes and walked slowly to the house, our fingers intertwined. As we entered, Barbara, the owner, smiled at us. \"You almost got locked out.\"\n\n\"Sorry. I forgot the time. It\u2014\" I began before stopping as her eyes flicked between Kane and me. I was talking over him. I glanced at him, but I couldn't see his lips well enough to know what he said. When her eyes settled on me, I began again. \"Sorry. It was so romantic walking on the beach, I forgot the time.\"\n\nBarbara looked at me oddly and smiled. \"Yes, well, I'm glad you enjoyed your walk.\"\n\n\"I did.\"\n\nWhen Barbara's eyes flicked to Kane I looked at him. He was looking at me, so I could see what he said, but all I caught was \"\u2014night.\"\n\nI looked back to Barbara. \"Yes, good night,\" I repeated before he nudged me into motion and followed me up the stairs. We were about halfway up when he softly tickled me on the back of my legs, just under my ass, making me yelp softly in surprise and excitement. \"Stop it!\" I hissed with a grin, swatting at his hand, but in truth I liked his teasing touch, the tickle exciting me and making me think of him tickling me in a more intimate manner.\n\nWe entered the room. When we'd arrived this afternoon and I'd seen the big four poster bed with the canopy, I'd wanted to make love to him on it right then. Now I would get my chance. I turned to him and poured into his arms. He held me a moment before slowly stepping back.\n\n\"So you know, the reason Barbara looked at you like she did is because you said, almost word for word, what I'd just told her.\"\n\n\"Oh. Sorry.\"\n\nHe brushed his lips over mine. \"Don't apologize. I'm glad you feel the same way.\"\n\nI sagged into him again. \"I do.\"\n\n\"Are you ready for bed?\" he asked, slowly pulling out of my arms.\n\n\"Yes. Are you?\"\n\nHe grinned down at me. \"Aren't I always?\"\n\nI smiled. He was, and it made me feel sexy as hell. The man was insatiable, our personal best being four romps one rainy day in Asheville, and I loved it.\n\nWe made a quick visit to the shared bathroom, Kane going first. When I returned from brushing my teeth, he was already in bed, the linens neatly folded back, covering him from the waist down, leaving plenty of eye candy on display. A small smile played on my lips as I slowly undressed, taking my time as I held his gaze. He watched me with rapt interest, a small, sexy smile quirking his lips, until I slowly slid beneath the linens with him. We were spending three nights on Roanoke Island before we returned to Asheville, and as he rolled over to lightly cover me with his body, gazing deeply into my eyes, I knew we were going to have to make the most of our time in this wonderful bed.\n\nAs his lips found mine, he kissed me, slowly, softly, deeply before pulling back. He watched my face, the moon providing just enough light so I could see his lips.\n\n\"I've always wanted to make love to a goddess in a canopy bed under a full moon beside the ocean.\"\n\nI smiled, his gentle teasing warming me. \"And once you have?\"\n\nHe smiled. \"Then I can die happy.\"\n\nMy smile grew as we replayed the conversation from the beach. \"Is that something you plan to do anytime soon?\"\n\n\"I certainly hope not. I have a long list of places I want to make love to you.\"\n\nI chewed my bottom lip, my thoughts returning to the idea of making love to him on the beach. So far we'd only made love in a bed and once in the shower, but I was game to try somewhere else. \"I think I'd like that,\" I whispered.\n\nHe softly touched my lip with a finger. \"So would I,\" he said before again taking my lips for his own.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Kane</center>\n\nI pulled the Explorer to a stop at the gas pumps in Greensboro. We were on our way back from the beach, and both the car and its passengers needed fuel. I'd been working on my signing, and while finger spelling was still hopelessly beyond my ability, I could sign the basics.\n\nEat? I signed after filling the SUV.\n\nMeadow bounced her fist. Yes.\n\nWhere?\n\nShe made a sign I didn't know, and she instantly picked up on my confusion. She was exceptionally good at reading people and their expressions. \"Anyplace is fine.\"\n\nI pulled away from the pumps and stopped as we scrolled through our phones, looking for places close to the interstate that looked interesting. I turned my phone to her so she could see and pointed at a place that had good ratings. \"How about this?\"\n\nShe waggled her fist. \"I saw that, but it's behind us.\"\n\n\"Only a couple of miles.\"\n\nShe bounced her fist again and it was decided.\n\nI got back on the interstate and drove the four miles to the previous exit. I made a left, and after a couple of stoplights, pulled into Granny T's parking lot, a local eatery well regarded for its home-style cooking and fried chicken.\n\nWe were between the lunch and dinner rush, so we were seated immediately, though the place was still busy. We were just starting to look at the menu when a young girl arrived. \"I'm Rachael, and I'll be taking care of you today. What can I get you to drink?\"\n\nMeadow looked at me, her confusion evident. Rachel was a gum chewer, which made it hard for Meadow to read her. \"She wants our drink order.\"\n\n\"Unsweetened iced tea.\"\n\nI nodded. \"The same.\"\n\nOur drinks arrived as we were still looking over the menu. I touched her hand. \"I think I'll have the fried chicken. You?\"\n\nShe bobbed her head side to side a moment. \"I think I'll have Granny's Meatloaf.\"\n\nI grinned. \"I thought about that. Can I have a bite of yours?\"\n\nShe smiled. \"Maybe, but it'll cost you.\"\n\n\"Oh really? What?\" Whatever it was, I was sure I wouldn't mind paying up.\n\n\"A taste of your chicken.\"\n\nI was almost disappointed. \"Is that all?\" I asked with a smile of my own. \"In the car, what was this?\" I asked, repeating the sign, my thumb out like I was hitchhiking, before I looped it in front of my chest, tucking in my thumb and raising my pointer finger before shaking it like I was scolding someone.\n\n\"Anywhere,\" she said, repeating the sign.\n\nI tried it again. She was so fluid and graceful in her signing, where I felt like a klutz. She was Shakespeare and I was Ed Wood.\n\nRachael returned, smiling through her gum chewing. \"Ready to order?\"\n\nNormally I let Meadow order first, but I touched her hand before speaking. \"I'll have the fried chicken platter, all white meat, with mashed potatoes, and pinto beans.\n\nHaving seen me order, Meadow knew what Rachel had asked. \"Granny's meatloaf, mashed potatoes, and green beans,\" she said when Rachel looked at her.\n\n\"Got it! It'll be out in a minute.\"\n\n\"She said it would be out soon,\" I repeated when Meadow looked at me.\n\nMeadow nodded. \"Some people are so hard to read.\"\n\n\"You mean you can't understand me when I talk like this?\" I asked, making exaggerated chewing motions as I spoke. I smiled as she continued to watch my lips. \"I said 'You mean you can't understand me when I talk like this?'\"\n\nShe grinned. \"No. Lip reading is hard enough without someone chewing their cud like a cow.\"\n\nI snickered. \"How do you sign cow?\"\n\nShe put her thumbs against her temples with her pinky's pointed forward, like horns, and then flipped them up. She repeated the sign using just one hand, giving me the informal version. I repeated the informal version. There was a simplistic beauty in ASL, many of the signs obvious once you realized their meaning. I was learning, and I wanted to learn more. When Meadow was reading my lips, I could tell she was focused and concentrating, but even when I fumbled through my signing, she was relaxed. I didn't want her to always have to concentrate when talking with me, so I was motivated to learn.\n\nShe put her thumbs back to her temple, and this time her first two fingers were pointed forward before she quickly curled them into her fist twice. She smiled at me as she watched me work it out. I didn't have a clue. \"Bull? Milk?\"\n\nShe snickered. \"Horse,\" she informed me, repeating the informal version of the sign before holding her fist out and quickly tightening her grip a couple of times.\n\nI chuckled, the meaning obvious. It was exactly how I imagined someone would milk a cow. \"That's milk.\"\n\nShe nodded her fist at the wrist with a smile. I smiled back, her smile and approval all the encouragement I needed to keep working at it. We continued working on signs, and I learned mashed potato, bean, and chicken. The problem with learning sign, as with learning all new languages, is in the usage. How often does 'chicken' or 'cow' come up in a conversation? The words I used often, such as eat, go, bathroom, food, fun, good, happy, yes, no, and other words, I could retain. Some words, even though I didn't use them often, also stuck, like sexy, just because I thought of them often when with Meadow, but other words, like 'mashed potato', would be gone before the meal was over.\n\nI saw Rachel approaching with our food. She slid the plates in front of us. \"Can I get you anything else?\"\n\nMeadow looked at me. \"Is everything okay?\" I watched as Meadow glanced over her plate before she touched her fingers to her chin and quickly move them away. I nodded. \"We're good.\"\n\n\"Like, is she deaf?\" Rachael asked, topping off our glasses.\n\n\"Yes.\"\n\n\"Really? That's so interesting. She doesn't look deaf.\"\n\nI couldn't explain why, but Rachael's comment instantly raised my hackles. \"Really? What does deaf look like?\"\n\nRachael knew she'd stepped over the line and tried to backpedal. \"Uh... I don't know.\"\n\n\"Well, you don't look ignorant, but you are.\"\n\nRachael's eyes widened before her mouth hardened and she turned to stomp away.\n\nWhat? Meadow asked, looking up as Rachael stormed away.\n\n\"Nothing.\"\n\n\"It must be something.\"\n\n\"She asked if you were deaf, and when I said, 'yes,' she said, 'you don't look deaf.' I told her she didn't look ignorant, but she was.\"\n\nShe held my gaze for a moment. \"That wasn't very nice.\"\n\n\"Maybe not, but it pissed me off.\"\n\n\"Why?\"\n\n\"I don't know, but it did. What does deaf look like, anyway? Stupid bitch.\"\n\nShe frowned. \"Kane, what's wrong?\"\n\nI took a deep breath and let it out slowly, trying to let my aggravation go. \"Nothing. She just rubbed me wrong, that's all.\"\n\n\"It's okay. I get stuff like that all\u2014\"\n\n\"But it's not okay,\" I growled.\n\nShe held my gaze for a moment before looking back at her plate. \"Let's eat before it gets cold.\"\n\nWe ate in silence, the tension between us felt by both of us. Rachael appeared once, refilled our glasses and slapped the bill on the table before walking briskly away, her former friendly, bubbly manner completely absent. I didn't give a shit.\n\nWe were approaching the end of our meal when a round man with graying hair stopped at our table. He looked uncomfortable. \"Excuse me, but I'm Don, the manager. I came to apologize for what Rachael said. Could you, uh... pass that along to your...\"\n\n\"Girlfriend,\" I said. \"You can tell her yourself.\"\n\nHe looked like his stomach was upset. \"I... uh... don't know sign language.\"\n\n\"I don't either, not much anyway. Just look at her and speak normally. She can understand.\"\n\nDon turned to face Meadow. \"Ma'am, I'm sorry for Rachael's comment. She and I have discussed what constitutes appropriate behavior with our guests.\"\n\nMeadow smiled. \"Apology accepted. I think he was more upset about what she said than I was.\"\n\n\"Well... thank you for your understanding, but that doesn't make it acceptable behavior, and I hope this... unfortunate incident... won't prevent you from visiting us again.\"\n\n\"It's okay.\"\n\n\"We're just passing through,\" I added, \"but the food was great. Now that this, as you put it, unfortunate incident has been cleared up, I'd be willing to eat here again if we're in the area.\"\n\nDon nodded. \"Thank you. Is there anything I can get for you?\"\n\nDon was looking at me when he spoke, so I repeated it to Meadow, who shook her head.\n\n\"No. I guess we're good.\"\n\nDon nodded again. \"If you need anything, let me know, and... uh... thank you for your patience and understanding. Enjoy the rest of your meal.\"\n\n\"Sorry I snapped at the waitress,\" I said quickly as he began to turn away. I really wasn't sorry for one word I'd said, but I was trying to be magnanimous. Don nodded one last time before moving away. I looked back to Meadow. \"At least someone around here isn't a total asshole,\" I mouthed.\n\nShe looked at me, her brows slightly crinkled. \"Are you sure everything is okay? I've never seen you so... upset.\"\n\nI took her hand. \"Yeah, I guess.\"\n\n\"You're not embarrassed by me being deaf, are you?\"\n\nI couldn't have been more surprised if she'd slapped me. \"What? No! Why would you think that?\"\n\nShe shrugged. \"I've only known you for a couple of weeks, but this was so unlike anything you've done before.\"\n\nI looked down and started to speak, but remembered and looked up again. \"No. It's... personal.\"\n\n\"Is it me?\"\n\n\"No. It has absolutely nothing to do with you.\"\n\n\"Want to talk about it?\"\n\nI sighed. \"Not really, but especially not here. Too many ears.\"\n\nShe held my gaze. \"Are we okay?\"\n\nI rocked my fist. \"I hope so. I didn't upset you by what I said, did I?\"\n\nShe pinched her first two fingers and thumb together, twice, for the polite version. No.\n\nI sat back and let out a slow sigh. I didn't feel one ounce of guilt for verbally slapping Rachael, but it was bothering me that Meadow was, at least mildly, upset over my action.\n\nWe finished our meal in silence as I stewed over my action. Maybe I'd overreacted, but dammit... what? What had I hoped to accomplish by being an ass?\n\n\"Are you ready?\" Meadow asked as I stared at my plate.\n\n\"Yeah. Let's get out of here.\" I grabbed the check without thinking as we rose, Meadow slowly pulling the paper from my fingers when I stepped back to allow her to go in front of me. Even though this was supposed to be an all-expense paid trip for me, I still hadn't gotten used to the idea of having Meadow pay for everything.\n\nWe approached the register. Rachael was there, glaring at us. \"Twenty-three fifty-two,\" she said, her eyes and voice hard.\n\nMeadow handed over her card. Rachael took it and swiped it viciously before handing it back. Meadow took it, signed her receipt, and hand it back. \"Thank you.\"\n\n\"Please come back,\" Rachael said, though her tone indicated she'd be just as happy if we were hit by a truck.\n\nI followed Meadow out, not giving Rachael a second glance. I pulled her to me when she stopped by the Ford. \"I'm sorry,\" I murmured and realized I'd said it as I held her, so she hadn't heard. I held her for a moment longer before releasing her. \"How do you say 'sorry?'\"\n\nShe made a fist with her thumb tucked into her fingers and rotated it twice over her chest in a clockwise motion. I repeated the sign back to her.\n\nShe touched my face. \"It's okay. You're sure it has nothing to do with me?\"\n\nI nodded. \"Absolutely nothing. Are you upset with me?\"\n\nShe smiled. \"No, but I don't understand what set you off. I'm a big girl. I don't need you to protect me, to fight my battles for me. I can take care of myself.\"\n\nI opened her door and she crawled into the SUV. I shut the door and walked around to my side. \"I know,\" I said as I shut my door. \"It's just...\"\n\n\"What?\"\n\nI sighed. \"I don't know. You're the most capable person I know. Maybe what she said doesn't bother you, but it bothered me.\"\n\n\"But you don't know why?\"\n\nI looked down. \"I know why.\" She touched me on the hand. I'd spoke to my feet and she hadn't heard me. \"I know why,\" I repeated, looking at her.\n\n\"Will you tell me?\"\n\nI didn't want to. I didn't want to open that old wound again, but she deserved the truth. \"Yes, but can we wait until we get home? Well, to Asheville I mean?\"\n\nShe rocked her hand before placing her hand on my arm. \"It's going to be okay.\"\n\nI nodded as I started the car. \"Yeah.\"\n\nWe drove a long time in silence, my guts twisting, the pain that I'd almost forgotten coming back. It was true that time healed all wounds. I was trying to get on with my life, to put my past behind me, but now and again, like with Rachael's comment, that old hurt came back. I didn't love Meadow, but I was strongly attracted to her, and I didn't want to fuck this up.",
        "I wasn't trying to hide my past, and she deserved to know. If we were going to make this work, maybe she needed to know. We'd begin climbing into the mountains soon, so I reached over and took her hand, squeezing it gently, before I had to have both hands on the wheel.\n\nShe looked at me and smiled, squeezing my hand in return, before bringing it to her lips for a kiss. I don't know why, but that simple gesture touched me, and Goddammit, I wanted to cry. I clamped down on my emotions. I wasn't going to cry, and I damn sure wasn't going to cry in front of her. She'd been dealt a shitty hand by life, but she'd taken it, run with it, and made something of herself. Compared to that, my piss-ant little problem was nothing.\n\nWhen the road began to climb and weave, I slowly, and with much regret, pulled my hand from hers and placed it on the steering wheel.\n\nIt was raining as I pulled the Explorer to a stop in the garage. My stomach tightened. I didn't want to talk about what I needed to talk about. We stepped into the kitchen and she turned to me, stepping in close. I held her for a long moment before she slowly stepped back.\n\nShe held my gaze. \"If you don't want to talk about what's bothering you, I understand. It's none of my business.\"\n\nI heave a sigh. \"No. It's okay.\" I took her hand and led her into the living room, steering her to the couch. I sat down beside her, took another deep breath to summon my courage, and began to speak.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Meadow</center>\n\nI watched, waiting for Kane to speak. Clearly something was bothering him. Over the past two weeks, I'd caught an occasional glimpse of something, some dark emotion playing over his face, but the flashes were rare and short lived, so I hadn't given them much thought.\n\nHis outburst in Granny T's, however, I couldn't ignore. I didn't mind him defending me, though I thought he was a little harsh with our waitress, but his lashing out was so unlike him. In that moment, he'd reminded me of Randal, the man I'd dated for a few months who walked around with a chip on his shoulder, always looking to take offense over every little thing. That had quickly grown tiresome, and when we'd parted ways, typically for him, he'd blamed me rather than his actions for causing our breakup.\n\nKane looked at me. \"About two years ago, I was supposed to get married,\" he began. I frowned, wondering where this was going and what it had to do with what had happened in the restaurant. \"It was a girl I'd known for a long time. I met Candi, Candice, in high school, and we dated until she went to college. While she was gone, we kind of drifted apart, but after she graduated, we hooked up again.\"\n\nHe paused, his eyes defocusing as he replayed memories, his smile slightly sad. \"Anyway, we dated for a couple of years, and then I asked her to marry me. She said yes.\"\n\nThat surprised me. I thought this was going to be a story of love lost.\n\n\"Anyway, she worked for the Albuquerque PD as an SRO. She\u2014\"\n\n\"I didn't get that. A what?\"\n\n\"An SRO, a School Resource Officer. It's a police officer stationed at a school.\"\n\n\"Oh, okay. Sorry.\"\n\n\"It's okay. She was an SRO, and one afternoon, on her way home, she stopped at a convenience store to get a drink. She walked in on an active crime. From what I could find out, the robber panicked when she walked in and shot her.\"\n\nMy heart sank. \"Oh, no. I'm so sorry.\"\n\nHe nodded. \"Yeah. Three months before the wedding. It was a wild shot. The police don't think he even meant to do it, had squeezed the trigger when he panicked, stumbled over a rack of chips, and fell. Anyway, he shot her and ran. The police never caught the guy. The bullet hit her,\" he said, placing a finger against his neck, under his jaw on this right side, \"and traveled up and came out,\" he touched his temple by his right eye.\n\nHe looked down, said something, and looked at me. \"Sorry. It didn't kill her, but it destroyed her jaw, her cheek, and shattered the bones around her eye.\" He looked down again. \"They got her to the hospital, but she was never the same after that.\"\n\nI waited, but he didn't continue. I wasn't sure what the point of the story was. \"Okay,\" I finally said to fill the growing silence.\n\nHe looked up, his eyes haunted. \"She was blind in her right eye, and the side of her face...\" His face twisted. \"The doctors said they could rebuild her face, and replace her jaw, but obviously there'd always be scarring.\" He looked down again before he returned his gaze to me. \"Something happened to her. She... couldn't adjust. Something. I don't know.\" His eyes were sad. \"She seemed okay at first, as long as she was all bandaged up. She couldn't speak, but she'd write these long letters to me while I was gone to work, telling me how much she loved me, how afraid she was, how much she appreciated me staying with her, all kinds of stuff. We delayed the wedding, but later, as she began to heal, she changed. She stopped writing, and then she didn't want to see me anymore, and she said some things, accused me of things that weren't true.\"\n\nI nodded. \"I'm sure it was hard for her.\"\n\nHe nodded in agreement. \"I'm sure. I tried to ignore it, to still be there for her, but finally I couldn't take it anymore. I told her parents when she was ready, I'd be waiting.\" He watched my eyes. \"It was the last time I saw her. She never called. I stayed in touch for a while, through her parents, but she became a different person. She wouldn't even talk to me. Finally, her mom told me to stop calling.\"\n\nI waited, but that seemed to be the end of it. \"I'm sorry, but I don't understand.\"\n\n\"I know,\" he said softly. \"I told you it didn't have anything to do with you.\"\n\n\"I'm sorry for your loss, but what has this got to do with what happened in the restaurant?\"\n\n\"Nothing, really. It's just... I feel guilty for walking away. I feel like I should have stayed and fought for her. I think what she was doing was a test, a test to see if I'd stand by her, and I failed. When the going got rough, I couldn't take it, and I walked away from her.\" He paused, but I could sense he had more to say. I remained quiet so he could ponder his next words. \"When that waitress said you didn't look deaf, that pissed me off so much. Who the hell is she to judge you? She doesn't know you. She doesn't know what you've accomplished in your life, and to reduce you to defining you by your deafness?\" His lips thinned. \"I don't even know her, but you're a million times the woman she'll ever be.\"\n\nI felt a shiver of pleasure at his words. \"What happened wasn't your fault.\"\n\nHe nodded. \"I know.\"\n\n\"I'm not talking about her getting shot. I'm talking about her pushing you away.\"\n\n\"Maybe.\"\n\n\"No maybe about it. Kane, listen to me.\" I waited until he looked up. \"When I was learning to talk, I would get so frustrated I'd want to scream. I would literally go home and cry in frustration. But you know what's even harder? Losing something you had. I don't miss being able to hear. I've never heard anything, so I can't miss it, but people who could hear and were going deaf because of disease or injury, many of them were angry. They were angry all the time, and they' lash out at people and say terrible things.\"\n\nHe nodded. \"I understand. Candi was distraught , I get that. That's why I should have stayed, but I didn't. I cut and ran.\"\n\n\"Did you? Or did you do as she asked, as she demanded?\"\n\n\"Semantics,\" he said with a wave of his hand.\n\n\"No, not semantics. She didn't want to see you. What were you supposed to do, force yourself on her?\"\n\n\"I could have been there for her.\"\n\n\"How long did you wait for her?\" He looked down. I touched him on his hand, and he looked back up. \"How long did you wait on her?\"\n\n\"You're the first.\"\n\n\"The first?\" I asked, confused. \"The first what?\"\n\n\"The first woman I've been with since she was shot.\"\n\n\"You waited two years?\"\n\nHe nodded. \"It'll be two years in October.\"\n\nI couldn't fathom that kind of dedication. A few weeks to a month or two after my breakups, I was ready to try again. \"Don't you think that's enough?\"\n\nHe nodded slowly. \"That's why I'm here. My friends kept telling me I needed to move on with my life.\"\n\n\"Do you still love her?\"\n\nHe looked at me and heaved a sigh. \"No, not really, not anymore. I keep telling myself she made her decision.\"\n\nI nodded. \"She did.\"\n\nI left unsaid that I thought she was a fucking moron. Kane waited two years for her. Two fucking years! While I was sorry for what happened to her, I couldn't stand people who wallowed in self-pity, especially if they took it out on someone else. So, she might be blind in one eye, at least she could still see. So, she might have some scarring. I couldn't see Kane loving her any less. Listening to Kane describe her, she reminded me of Randal, and how he was always looking for a slight, always looking for a reason to be mad about his condition. She had no idea what she had with Kane. She'd taken him for granted, and then when he'd stepped up, she'd pissed it all away in self-pity.\n\nI took his hand. \"Speaking as someone that can, at least partially, understand what she was probably going through, I can tell you it's not your fault. You need to stop beating yourself up over it.\"\n\n\"I'm not.\"\n\n\"The hell you're not. I can see it in your eyes.\"\n\n\"Well, I'm over it now.\"\n\n\"No you're not, and you won't be until you understand that you can't fix people. They have to fix themselves. Trust me, I know. I've learned to accept my deafness. It's part of me, but it doesn't define me. I'm happy with myself, but I'm not like this because someone made me this way. It's because I made myself this way. Maybe, someday, Candice will accept what happened to her, and she can get over her anger. But she has to do it. You can't do it for her.\"\n\n\"Yeah.\"\n\nThis was one of the rare occasions when I wished I could hear, to be able to hear his voice so I could read his pain. I took his hands in mine. \"Kane, look at me.\" He did. \"It sounds like you did all you could.\"\n\n\"Maybe.\"\n\nI sighed, trying to figure out how to reach him. \"Okay, listen to me. If I send you away, I want you to go. It's not a shit test, okay. It probably wasn't with Candice either. You know what you did? You reminded her of what she didn't have anymore. She saw in you happier times, and she couldn't deal with it. I know it's hard to understand now, but you may have done her a favor by leaving.\"\n\n\"You can't know that.\"\n\n\"You're right, I can't, but I've seen it before with people who suddenly became deaf. Some of them wanted to make a clean break with their past. I guess it hurt too much to be reminded of what they lost. I don't understand it, but I've seen it happen.\"\n\n\"Maybe.\"\n\n\"Let me tell you something. I had a boyfriend once, Randal. Like me, he'd been deaf since birth. He was angry all the time, and he would constantly belittle people for the slightest things. I couldn't put up with his shit and left. Why should you be held to a higher standard?\"\n\n\"Did you love him?\"\n\n\"No, but\u2014\"\n\n\"Then that's the difference.\"\n\n\"Why? People divorce all the time, and they were in love once, right? Just because you love or loved someone doesn't mean things can't change. You said yourself, Candice changed. She became a different person. Maybe the new Candice didn't love you anymore.\"\n\nHe held my gaze for a long time. \"Maybe. She said she didn't love me anymore, but I didn't believe her. I thought it was more of the same shit she'd been spewing.\"\n\n\"What if she was telling you the truth?\"\n\nHe watched my eyes for a long moment before scrubbing at his face furiously. \"I don't know.\"\n\n\"I think your friends gave you some good advice. You waited for her, longer than most would, I suspect. Unless you're prepared to live alone the rest of your life, at some point you have to accept she doesn't want you.\"\n\n\"I have,\" he insisted. \"Which is why I signed up on Brooklyn's dating app.\"\n\nI wasn't sure I'd completely convinced him. His hurt ran deep, and it wasn't going to heal overnight, but I could sense the darkness inside him lifting.\n\n\"Can I tell you something?\"\n\n\"Sure.\"\n\n\"I don't want you to take this the wrong way, but I'm glad Candice decided she didn't want you, because I do.\"\n\nHe smiled, the first smile I'd seen since we left Greensboro. \"You do, do you?\"\n\nI nodded. \"Yes, and not just in my bed. I like you, Kane, I like you a lot. The past two weeks have been the best two weeks of my life.\" He looked down, his face flushing. I touched his hand and he looked back up at me. \"Candice was a fool. She didn't know what she had, and she threw it away.\"\n\nHis smile caused a tingle to race through me. \"I almost didn't come.\"\n\n\"Why?\"\n\n\"I don't know. Screwed up again. Afraid.\"\n\n\"Afraid of what?\"\n\nHe shrugged. \"Just afraid.\"\n\n\"And now?\"\n\nHe smiled again. \"So damned glad I came.\"\n\n\"I'm glad you came too.\"\n\n\"Even the first time?\"\n\nThe crisis was passing, and I grinned at his teasing. \"Okay, maybe not the first time, but you've more than made up for that.\" My smile spread. \"And after two years? Who could blame you? If I'd been two years without getting laid, I'd have probably come the moment you touched me. Has it really been two years?\"\n\nHe nodded, his eyes cast down. \"Yeah. You're my first since, well, in a long time.\"\n\nI didn't know why, but I was inordinately pleased that I broke his dry spell. I smiled to myself. Dry spell? Hell, it was a drought.\n\n\"If you ever want to talk about this again, I'm all ears... so to speak.\"\n\nHe chuckled. \"No. I'm okay. I don't know why what that waitress said made me so mad, but I'm over it.\"\n\n\"Can I tell you something?\"\n\n\"Sure.\"\n\n\"I don't need you to protect me\u2014\"\n\n\"I know,\" he said.\n\n\"Let me finish. I don't need you to protect me, but it makes me feel good that you're willing to stand up for me.\"\n\n\"That's what friends... and lovers... do for each other, right? They stand up for each other?\"\n\nI nodded. \"Yeah, but I've had men think I'm helpless, so they think they have to do everything for me. I've also had men who were total pricks and acted like they expected me to read their minds because I couldn't hear. You're not like either of those.\"\n\n\"You're the least helpless person I know.\"\n\nI smiled. He always said the best things. \"You remember the second night? You mentioned having me for dessert.\"\n\nHis eyes crinkled as he thought. \"No.\"\n\nI nodded. \"You were teasing me about having sopapillas for dessert, and you said you might cover me in honey and have me for dessert. You wrote the word down for me.\"\n\n\"Oh yeah!\" he said, his face brightening in memory. \"I remember that now. As I recall, we ended up having two desserts that night.\"\n\nI grinned. \"Yeah. But I'm thinking you need to make good on that.\"\n\nHis smile slowly faded. \"Covering you in honey?\" I nodded. \"And having you for dessert?\" I nodded again. He held my gaze before pulling me slowly to him, kissing me in that way he had that inflamed my passions like nobody before him.\n\nHis lips slowly pulled away from mine. \"Should we eat first?\"\n\n\"Are you hungry?\"\n\n\"Not for food.\"\n\n\"Me either, but how about for dessert?\"\n\n\"Always for dessert.\"\n\nI smiled. \"Me too.\"\n\nHe kissed me again as he softly caressed my breast. \"Did you mean it, the part about the honey?\"\n\n\"Have you ever done that before?\"\n\nHe clamped his first two fingers and thumb together. No.\n\nI smiled. \"Me either, but I've been thinking about trying it.\"\n\n\"Suddenly I'm thinking about trying it too.\"\n\n\"Good.\"\n\n\"I'll try not to make a mess.\"\n\nI smiled \"What fun would that be?\"\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Kane</center>\n\nI picked up the plastic squirt bottle from the side table where I'd placed it and drizzled the honey in a thin stream over Meadow's breast, enjoying her soft gasp before I slowly licked the sticky substance off her.\n\nWhen I'd finished spilling my guts about Candice, we'd retired to the bedroom after a brief stop in the kitchen so I could grab the container of honey. I knew what she'd said was true, that Candi had pushed me away and I needed to let it go. I'd heard it enough from friends and family, but having Meadow tell me... somehow that made it more believable. Maybe it was because she'd lived some small part of what Candi was going through. I didn't know and I didn't care. All that mattered now was Meadow.\n\nWe'd slowly undressed each other as we kissed and touched, and now I was making good on my threat to cover her in honey and have her for dessert. I wished Meadow could hear the rain pattering on the roof, it's quiet rattle and the slow, distant rumbles of thunder adding to the eroticism of what we were doing.\n\nI tipped the bottle up and drizzled a little more of the thick, golden liquid over her other breast, making sure I could chase it all up with lips and tongue before it ended up on the linens. Licking the honey off her was sexy as hell, but I didn't want to sleep in the stuff.\n\n\"Oh my God...\" she sighed as I licked at her, her hands resting lightly on my head.\n\nI made sure her breast was clean before moving to her lips. She kissed me, her tongue dancing with mine. I slowly pulled back from her kiss and tipped the bottle up again, making a cross with the liquid, nipple to nipple and down her belly. I dutifully licked it all away, her taut, flat stomach heaving as I worked my way lower. I thought about continuing down, but decided I was having too much fun tormenting her with anticipation. I returned to her lips as she took them with greed, holding me in the kiss until she had her fill. I spread more of the honey over her breasts, a larger portion, but before I could begin licking it away, she pulled my lips to hers again, pulling me down and smearing the nectar between our bodies.\n\nSo much for not making a mess, but I no longer cared. There were three other bedrooms in the house we could sleep in, and I leaned into the kiss. I ended the kiss and attacked her chest with lips and tongue, licking, kissing, and sucking everywhere as I chased the sticky substance. I moved down her body, cleaning her as I went, until I reached her most intimate area. I squirted more honey on her, avoiding her pussy, not knowing if the honey would cause her problems later, but making sure I'd drizzled it all around the area.\n\nHer soft moan as the liquid flowed over her was one of the sexiest sounds I'd ever heard, and I went to work cleaning her up. She liked to watch me feast on her and had propped herself up on pillows so she could see. By the time I was finished kissing her clean, she was thrusting her hips softly, and I smiled at her as I feathered my tongue over her flower for the first time that night.\n\nI'd learned she liked it slow and easy, right up to the moment of climax, when if I went at her hard and fast, her orgasm swelled into what must be a brain-melter. She watched me pleasure her, her hands on my head as her breasts heaved with her panting. The honey on my chest was making me stick to the linens, but it didn't matter, and I smiled at her again as I went about my task.\n\nWhen her head began to tip back, her eyes closing, that was my cue. I began to lick her harder and faster, my tongue slithering into all her secret places as my lips snapped and pulled. She pulled my mouth more firmly to her, and I increased the strength of my kissing as a shuddering wave passed over her. I held her tight as she bucked and thrust, my tongue busy, until with a hissing groan she relaxed.\n\nI continued to tease her but slowly reduced the force of my kisses as I looked up at her, smiling at her look of satisfaction. She tugged at me, and I quickly kissed my way up her body to enjoy the caress of her lips.\n\n\"Now you,\" she said. She had only one volume for her voice, but it was sexy as hell, especially when we were being intimate, both physically and emotionally.",
        "She nudged me to my back before picking up the bottle, squeezing a healthy dollop over my cock before smiling at me. I almost groaned. Her bedroom smile was so incredibly sexy, just seeing it made my cock ache.\n\nThe feel of the honey oozing down my shaft was unlike anything I'd felt before, but it was nothing compared to the feel of her tongue as she lapped it up. I groaned as she caressed me with her tongue before swallowing me. I placed my hands on her head and gently pressed her down. She couldn't quite take all of me, but Goddamn what she did felt good!\n\nShe coughed as she backed off, smiling at me before taking me into her mouth once more. I groaned again as I slowly thrust up, my pleasure soaring as she swallowed me. With another cough, she backed off to catch her breath. She kissed around on me and reached for the bottle. I thought she was going to cover me in the golden liquid again, and she did, but not in the way I expected. She squirted a large glob onto her breasts and wrapped them around my member.\n\n\"Oh... fuck!\" I hissed as I slowly pumped myself between her breasts.\n\nShe was going to make me come before we got to the main event. She turned me on so much I could go a couple of times, but I needed some time in between rounds to recover. I didn't want to come on her, I wanted to come inside her, so I could enjoy the intense closeness I felt while making love to her.\n\nI opened my eyes, and she was looking at me, a smile playing on her lips. She knew exactly what she was doing. I could feel my orgasm starting to form. With supreme effort, I stopped thrusting, but she was having none of it and began to massage my cock with her breasts.\n\nWe always made love with the light on so she could read me. \"Meadow, stop,\" I whispered, knowing she was watching my lips. \"Meadow! Meadow, stop! You're going to make me come!\" I switched to sign and frantically slapped the side of my hand into the palm of the other with a chopping motion, signaling her I needed her to stop. She didn't stop until the last possible moment, leaving me groaning in despair as I teetered on the edge of bliss.\n\n\"Fuck,\" I hissed again as my orgasm began to recede.\n\nShe brought her lips to mine for a torrid kiss, her lips and tongue sweeter than normal. My wetness and the honey she'd smeared on her breasts made her feel slick as she lay across me while we devoured each other. When I thought I'd regained my control, I rolled her to her back and ducked under her legs, draping them over my shoulders as I slowly entered her.\n\nI sighed. We'd given up the condoms after the first few days, and she felt so incredibly tight, wet, and warm. Best of all, she liked to be fucked deep and slow, just the way I liked it. No, not fucked, made love to. I settled to her depths, our mutual sighs of pleasure mingling in the air. I opened my eyes and watched her face. Her eyes were closed as I began to thrust slowly, but they opened and she watched my face, a small smile playing at her lips.\n\nI slipped her legs from my shoulders as I leaned in, my lips searching for hers. We kissed, our hands wrapped in each other's hair until I left her lips and kissed under her chin and lower, kissing away the sticky smears on her chest as I slowly pistoned into her.\n\nHer breathing began to speed up and deepen, her tell that an orgasm was pressing in on her. I braced myself on stiff arms and increased the power of my thrusts, slamming into her harder, deeper, and faster. She began to keen softly, her fingers biting into my arms as she was overwhelmed, my own orgasm approaching in a rush. I fought it, holding against it with everything I had, but my control was slipping and I was losing the battle with pleasure. I slammed into her one last time, pushing myself in as deep as possible and holding myself there, stalling my climax and allowing Meadow to have hers.\n\nAfter a moment she sighed, her body relaxing, her eyes opening lazily as a slow smile tickled her lips, lips that were begging to be kissed.\n\nI lowered myself, taking her lips as she wrapped me up. We kissed, our breathing hard as I began thrusting again. She squirmed, trying to twist her hips, and I allowed her to dump me off her. She followed my roll, swinging her hips over mine before reaching between us and holding my cock erect as she slowly lowered herself over me.\n\nShe rarely spoke during our love making, communicating with touches, gestures, and expressions, and it was sexy as hell. Her face crinkled as she settled over me, her eyes closed, the perfect picture of a woman in pleasure. She sat on me a moment until her eyes opened, and then she smiled down at me before bending to take my lips.\n\nWe kissed as I slowly rocked my hips, the heat of her kiss and the pleasure of moving inside her making me ache. I began thrusting harder, pushing her hair out of her face so I could see the pleasure written there. She rose as she took over our love making, bracing on my chest and rocking her hips as she stared at my face. I caressed her breasts, dragging my fingers over their hard points and cupping them gently in my hands.\n\nI was drowning in pleasure. \"Stop or you're going to make me come.\"\n\nShe smiled at me and shook her head. I groaned, battling my orgasm as it continued to build. I tried to pull her down, to kiss her lips, but she stiffened against me.\n\n\"I'm going to come!\"\n\nAgain, she shook her head and quickly brought her fingers and thumb together. No.\n\nI tried to dump her to the bed, to gain some relief, but she braced against me and shook her head. \"Meadow! You're going to make me come!\"\n\nHer face twisted in pleasure as she shook her head. I grabbed her hips, trying to hold her down as my back arched, but she powered through my efforts to stop her, her breathing becoming harder and deeper. I was lost, my rapture surrounding and drowning me as I fought the crippling pleasure.\n\n\"Meadow! Stop! Stop! Fuck! Shit! You're making me come,\" I snarled before the thread holding my orgasm in check snapped. \"Fuck! I'm coming,\" I grunted as I splashed into her, but she didn't stop her thrusting hips. I hauled her down to my chest, taking her lips in a savage kiss, our tongues slithering and darting. I held her tight as she pumped her hips, the tension in her body telling me she was about to climax again, but the searing pleasure of her fucking me as I orgasmed was almost too much to bear.\n\nI threw my head back, the exquisite torture of me sliding inside her shredding me. I tried to stop her thrusts again, but she wouldn't be denied, until with a shudder of her own, she groaned, her hips suddenly still.\n\nWe sagged out of our orgasms at very nearly the same moment. She lay on my chest, panting, her head on my shoulder, until after a long moment, she slowly rose, pushed her hair out of her face, and brought her lips to mine for a long, slow, erotic kiss. She smiled at me as she slowly pulled back, rising and pulling me from within her, her movement causing me to hiss with the sudden flair of pleasure. She touched my lips with her finger, before replacing it with her lips.\n\nAfter another long, deep, kiss, she sighed as she settled into the crook of my arm. I held her, at peace with myself and the world. She touched my lips again, and I kissed her finger. She smiled as she rocked her head slowly, snuggling in.\n\nThe bed was a mess, covered in splotches of sticky, as were we, but I didn't care. Nothing mattered except this one perfect moment. I slowly stroked her arm and she looked up at me.\n\n\"We're need to take a shower.\"\n\nShe nodded and rocked her fist slowly then made an 'L' with her finger and rocked that forward twice. Later.\n\nI nodded slowly in agreement. I was in no hurry to let her go.\n\nWithin minutes, sleep was pulling hard at me, Meadow's slow, deep, rhythmic breathing, the patter of the rain, and the profound sense of peace lulling me into slumber. I reached, Meadow groaning as I stretched to switch off the lamp, before snuggling her close again.\n\nI supposed I'd always remember the good times with Candice, but my feelings for her were muted, blunted by new feelings that were growing. Feelings for Meadow. I'd only known her a couple of weeks, but her pull on me was undeniable and growing stronger every day. I'd been instantly attracted to her, but that had been physical, the attraction any man would feel for a beautiful woman, but now I was attracted to her in other ways.\n\nNow that I knew her a little better, she was not only beautiful on the outside, but she also had an amazing strength that I admired. A smile played at my lips as I silently thanked all the people who had kicked me in the ass and forced me to take a hard look at myself. Without them I'd have never met Meadow, and I wouldn't be lying here with this amazing woman in my arms.\n\nI sighed heavily as darkness began to close around. I kissed her softly on her head. This was right. I'd been struggling to put my past behind me, but at this moment, I didn't care about my past anymore. I only cared about my future, a future that I hoped would include Ms. Meadow Larson.\n\nI was smiling as I slipped into slumber, my last waking thoughts of Meadow and what might be.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Meadow</center>\n\nKane and I stood at one of the many scenic overlooks along the Blue Ridge Parkway, my back against his chest as he held me loosely around my stomach, my arms curled around his. We were in our last week together, and the thought of our looming separation made my heart ache. In the past ten days we'd we'd done so much. We'd hiked, sampled wine, looked at gems, and raced go karts. We'd shopped and laughed, and we'd made love. Lots of love. As good as the first two weeks were, the last ten days were even better.\n\nWe were alone at the side of the parkway, and he kissed me gently on the ear as we watched the sun set beyond the mountain peaks, the sky painted with an explosion of red, orange, and gold, his breath on my neck soft and warm as he held me close. It was such a simple, loving gesture, it made my heart sing, yet made me want to cry at the same time.\n\nAfter he'd opened up, we'd talked about Candi at length several more times, what she was going through and the things she'd done and said. Perhaps I should have been upset or annoyed, talking to him about an old girlfriend, but he was hurting and I wanted to help him. He slowly began to change as we discussed what happened to Candi. He was still the same kind, fun-loving guy he'd always been, but he seemed more at peace now. Perhaps our long talks had lanced the pain he was keeping inside and allowed it to slowly drain away. He was healing, and in doing so, he was becoming more... what? I smiled to myself. Perfect was the only word I could think of. He was abso-fucking-lutely perfect... and in a few days I was going to lose him.\n\nI'd lost guys that I liked before, and I'd recovered, sometimes more quickly than others, but this was different. I supposed I'd eventually get over him too, but it would take a long time. He would be the man all others were judged against, and they would be found lacking.\n\nHe kissed me again, this time on the side of the neck. I sighed. He made me feel so desired, and not only for my body. Like now, for example, his kisses were sweet and innocent, filling me with contentment. He could be incredibly passionate when we were in the throes of our love making, but other times, like now, his small touches only served to remind me that he was there for me, while not making me feel he was interested in only one thing.\n\nHe'd had only had the one outburst, at Granny T's, but from that I knew without a doubt he'd immediately leap to my defense if I needed him, that he'd never allow anyone to belittle me for something I couldn't change. That knowledge warmed me in ways all the sex in the world couldn't. He was also working hard to learn sign, something few of my hearing enabled friends bothered to do since I could read lips, but it was another of those little things that showed me he cared. He knew it was easier for me to sign, and he was making the effort so I didn't have to.\n\nIt was these, and dozens more of the little things, that caused him to rise far above any of my previous lovers. I smiled to myself again. It also didn't hurt him any that he could make me come so fucking hard, that I'd noticed other women looking at him with envy and desire, or the fact that he only had eyes for me.\n\nI sighed as I drew his arms tighter around me.\n\nWhat? he signed in front of me.\n\nI turned to face him. Nothing.\n\nWoman says nothing something.\n\nI smiled. His syntax was clumsy, but he was still learning. Happy, I replied, my signing slow and simple for him.\n\nMe happy. Sad.\n\nWhy?\n\nTime over. Home. No.\n\nSame.\n\nHe paused as he looked at me. He started to sign, I not\u2014 but stopped. \"I don't want to leave you.\"\n\nMy lips curled down. \"I don't want that either.\"\n\nHe held my gaze for a long moment. \"Come home with me.\"\n\nMy heart melted and broke at the same moment. \"You know I can't.\"\n\nHe looked at his feet and spoke. I suspected I knew what he said, but after a moment he looked at me. \"Yeah, I know. That's the answer I expected.\" He smiled, but it was clearly forced. \"You can't blame a guy for hoping, though.\"\n\nNo.\n\nHe held my gaze for a long moment. \"How do you say love?\"\n\nMy heart nearly stopped, but I showed him the sign, crossing my arms over my chest with my hands clasped into fists.\n\nHe watched me for another long moment, the debate clear on his face. Me love you.\n\nI whimpered. \"Do you mean that?\"\n\nMaybe. He held my gaze, and I could sense he had more to say. \"I think I'm falling for you. The thought of you leaving makes me...\" sad.\n\nI was struggling not to cry. Yes. I know how you feel. I could tell he didn't get it. \"I feel the same way.\"\n\n\"What are we going to do?\"\n\n\"You could come with me.\"\n\n\"To Omaha?\"\n\nYes.\n\n\"But my business.\"\n\n\"They have grass in Nebraska, probably more than they do in New Mexico.\"\n\nHe swallowed hard. \"That's a big leap, having to start over.\"\n\nI nodded. Yes.\n\n\"I'll have to think about it.\"\n\nYes.\n\n\"Are you sure you want me that close?\"\n\nI looked at him like he was crazy. Yes, I signed before I brought my fist from 'yes' and bumped the inside of it to my forehead and then pointing at my butt.\n\nHe repeated the sign. \"Dumbass?\"\n\nYes.\n\nHe chuckled. \"That's a big step for you too.\"\n\nYes.\n\n\"Are you sure you're ready for that?\"\n\nI thought, but only for a moment, before I rocked my fist. Yes.\n\nHe smiled at me a moment as he cupped my face in his hands, my eyes closing in pleasure at his touch. He tipped my face up and brought his lips to mine, his kiss so warm and loving. I enjoyed their caress until he slowly pulled away. I opened my eyes and he was staring at me, his face soft, a tender smile on his lips.\n\nHe released my face. Me love you.\n\nI raised my hand, my middle two fingers folded with the other two fingers and thumb splayed. His eyes danced between my hand and my face. \"I love you.\"\n\nHe smiled and made the sign back, his smile spreading before he kissed me again. He suddenly pulled back, and as I opened my eyes, I noticed a car pulling into the overlook. He didn't release me, instead turning me to face the darkening mountains again, his arms once again going around my waist.\n\nI'd made the 'I love you' sign to instruct him, but as I thought about it, I realized that maybe the sign wasn't entirely instructional. When he'd signed his love, tentative as it was, my heart had leapt with joy and a warmth spread through me. Did I love him? As he said, 'maybe.' I wasn't sure I knew what love was, not this type of love. I loved my family, and I loved my friends, but what I felt for Kane was different.\n\nWhen I was with him, I felt like I glowed. I felt warm inside and at peace with myself and the world. It was a feeling I'd never felt before. Was that love? I chewed on my bottom lip. I still had a few days to sort it out, but one thing was completely clear, I wanted him with me. I wanted time to let these feeling develop and grow, to see where they went. I'd only known him three weeks, but in these three weeks, he'd become very special to me, and the thought of never seeing him again made my stomach roil and churn.\n\nWe watched as the sky darkened, the ruddy reds and brilliant golds fading into the deep blues and blacks of night. The car that had interrupted us left, but I was in no hurry to leave his soft embrace. I tried to think if I could have stood still like this, for almost an hour, totally relaxed, with any other man. I couldn't think of even one instance where I wouldn't have gotten bored or squirmy.\n\nI turned in his arms. It was too dark to read his lips, and almost too dark to sign, so I replaced words with action by kissing him. His kiss was again so slow, warm, and yes, loving. I smiled as our lips slowly parted. Did I love him? No, I didn't think so... but as the small smile tugged at my lips, I was prepared to admit I might be falling for him.\n\nWe had a lot to talk about over the next four days, and we couldn't do it standing here in the dark. \"Take me home?\"\n\nHe kissed me again, a fleeting kiss that left me wanting more, before he took my hand and led me back to the Explorer, opening the door for me. As he settled into his seat, he turned all the lights on inside the car. \"I'm sorry if I made you uncomfortable.\"\n\nWhat?\n\n\"What I said.\"\n\nI smiled. \"You didn't.\"\n\n\"I'm not trying to rush you. It's just...\"\n\nWhat?\n\nHe looked away, staring out of the windshield for a moment, before turning back to face me, his face troubled. \"You make me feel at peace. When I'm with you, everything seems to make sense. You... quieten that little whisper in my head that says I fucked up with Candi. I wonder...\" He shook his head.\n\nGo on.\n\nHe slowly licked his lips. I didn't know what he was going to say, but it was clearly hard for him. \"I wonder if what happened to Candi was so I could find you. I know that's a terrible thing to say, but...\" He looked away, his shame clear.\n\nI touched his hand. \"I told you, what happened to Candice isn't your fault. The only person at fault is the guy who shot her.\"\n\nHe nodded. \"Yeah, I know. I know that up here,\" he said, tapping the side of his head. He looked at me for a long moment, his eyes searching my face. \"I've only known you a month, less than a month, but I can tell... I can tell that...\" He ground to a stop, but I said nothing, letting him work it out in his own time. \"I loved Candi, but I can tell that I'm falling so much harder for you,\" he said in a rush, speaking so fast that I had so do some interpolation to fill in the words I missed. \"The thought of losing you hurts as much as losing Candi did, but it's only been a month.\" He looked at me, his eyes sad. \"I'm falling for you, Meadow Larson, and I'm falling hard.\"\n\nHe looked away as tears welled in my eyes. He'd been hurt deeply, but he was willing to give his heart to me and open himself up to being hurt again. I leaned into the center. He turned to face me, his handsome face tight with dark emotion. I waited until he leaned in to kiss me.\n\n\"You're not a bad person, Kane.\"\n\nHis lips pulled down, his face sad. \"Yeah, I'm terrific.\"\n\n\"I don't believe in fate,\" I said. \"I don't believe Candice was shot in some grand cosmic scheme to drive you to my arms. Things happen, good and bad. What's important is how we deal with them.\" I paused, watching his face to see if my words were reaching him. \"It's up to you to decide how you want to live the rest of your life. Do you want to spend your time beating yourself up over something even you admit isn't your fault, or would you rather move forward with your life, taking enjoyment where you can?\" ",
        "He sighed. \"Yeah, I know. I'm sorry for putting you on the spot, and for constantly dumping my stupid fucking problems on you.\" He looked away and started the car.\n\nI watched him a moment. \"Kane.\" He looked at me. I decided to try it on for size. I love you.\n\nHe nodded. \"Yeah. You showed me.\"\n\nNo. I love you, I said again. The second saying was easier than the first, and more surprisingly, saying it felt so right.\n\nHe sat stone still, his eyes wide. You love me?\n\nMaybe, I said with a smile.\n\nMaybe?\n\nYou love me?\n\nHe smiled. Maybe.\n\nSame. More time. Home me?\n\nHe licked his lips. Maybe. Need think.\n\nNot long. Miss you.\n\nHe stared at me, his eyes so soft and loving. I tingled with is gaze. There was no maybe, no doubt. I was falling for him, and I was bubbling over with excitement and anticipation. He pulled me to him, kissing me deeply. As our lips slowly parted, he pulled back and smiled before opening his door and hurrying around to my side. He opened my door and pulled me out, dragging me to the edge of the parking area where we stood in the beams of the headlights.\n\n\"I've always wanted to kiss a goddess on a mountain top,\" he said with a slow, sexy smile.\n\nIt was the first time he'd teased me with the goddess moniker since our first conversation about Candice. What you waiting on?\n\nHis smile spread as he slowly pulled me in. His kiss was so warm and deep, the best kiss I'd ever had, and that was saying something considering the other kisses he'd given me. As we sighed out of the kiss, our lips a hairsbreadth apart, I realized it wasn't the kiss that was different, I was different. I'd opened my heart just a crack, and that was all it took. Oh yes, I was definitely falling in love with Mr. Kane Reynolds.\n\nI love you, I said.\n\nHe smiled at me, a mischievous twinkle coming into his eye. \"Meadow Larson loves me!\"\n\nI couldn't hear him, but I could tell by his sharp intake of breath before speaking he'd screamed the words to the world before he ran in tight circles, jumping and pumping his fists into the air in victory. I laughed at his antics, his over-the-top exuberance both funny and touching at the same time.\n\n\"Kane Reynolds love me!\" I cried as loudly as I could.\n\nI wanted to cry. Shouting my feelings to the world was incredibly liberating. We were the only two people for miles, but it didn't matter. The words were out there and could never be taken back. He rushed to me, picked me up, and whirled me around before placing me back on my feet and kissing me fully.\n\nI want you, he said.\n\nI smiled. When home.\n\nHe shook his head. No. I want you... \"Forever.\"\n\nI touched my pointer finger to my temple and then thrust my fist toward him with my pinky and thumb extended upwards. \"Forever.\" I want you always I said, putting it all together for him.\n\nI want you always, he repeated.\n\nI smiled. I want you always, I repeated, the saying becoming easier and more meaningful with every repetition.\n\nHe smiled down at me. I want you other way too.\n\nSame.\n\nGo home?\n\nYes. Make love to me?\n\nHe smiled. Always.\n\nI smiled. Like idea.\n\nFirst, he said, before his lips closed over mine again, kissing me slowly before pulling me in and holding me tight. I sighed as we stood in each other's embrace. There would be plenty of time for the other, later.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Kane</center>\n\nI rode along on the back of my bright yellow mower as it jiggled across the lawn. I was a one-man-band again. After Meadow and I had made our feelings for each other known and had returned to Asheville, Meadow had begged me to come with her as we made mad, passionate love. I didn't know if she meant climax with her, or move to Nebraska with her, but it hadn't matter, because I'd done both.\n\nWe'd spent the next few days working out the details... when we weren't making love. That was nearly all we did over our last four days together. We'd talk about our future until we became overwhelmed with our need for each other, tumble into bed to make love, sleep, wake up, and start all over again. I'd lived more in those four days than most men did in a year, and I fucking loved it.\n\nWhen I'd left for New Mexico, we'd agreed that we'd take a month and think about the life changing event we were considering, trying to force ourselves to step away from the whirlwind of emotions that had enveloped us and to think, to really think about what we were contemplating. I made it twelve days before, during our nightly text exchange, I announced I was done thinking and was ready to make the leap if she still wanted me. She offered to come help me pack my stuff.\n\nThe next morning, I pulled Mike Delahunt, my number two guy, aside and told him I was closing up shop. To say he was shocked would be an understatement, but within an hour, he'd offered to buy me out. Mike was still trying to arrange financing, but I hadn't waited. Leaving him in charge, I'd started making arrangements to put my house on the market, took the newest truck and trailer along with my baddest-ass stand-on mower, a blower, and string trimmer, and hit the road for Nebraska. He'd taken good care of the business for the month I was gone. He could do the same after I left until Lawn in Order was his.\n\nI whirled the machine around at the end of the stripe I was cutting and started back the other way. I was at peace. In Albuquerque, I was pulling about three hundred grand a year, gross. Now I was making less than a fifth of that, but I didn't care. I didn't have to make payroll, I only had the one mower and truck to maintain and insure, I didn't have to deal with employee's not showing up or doing a half-ass job, and best of all, the off-book benefits more than offset any short-term loss of income.\n\nWhen I arrived in Omaha, I already had my first two contracts. I'm sure the landscaper that formally had the LPP, Inc. account was pissed to lose it, but screw him. He wasn't doing that great of a job anyway. I couldn't tell he was doing anything other than mowing and blowing, and I'd already engaged in battle with the weeds and had spread fresh mulch to tidy the place up a little.\n\nI'd planned to rent an apartment until I got settled, but Meadow had convinced me to move into her house with her instead. I smiled as I whizzed along on my mower. Technically I was trading labor for rent. Meadow lived in a nice house, much larger and better appointed than my small house had been, and she'd given me a blank check to do with the yard as I saw fit. When I wasn't mowing her corporate campus or the manufacturing plant across town, I was working in her yard, installing better landscape lighting, upgrading her sprinkler system, and reworking the design of the landscaping to make it a show piece among the other beautifully groomed lawns. My smile widened. I had to make sure to earn my keep, so I was often laboring late into the night, at no charge, to ensure she was fully satisfied that I was providing her with full service.\n\nAt the plant, I simply mowed the grass and kept it tidy, but I was working my ass off on the headquarters campus. With a hundred and ten acres to play with, I had plenty of room to make changes. I'd laid out two large planting beds in the massive front grounds and filled them with brightly colored plants that formed the Luposine and MeoWow logos to either side of the entrance, positioned so they were easily seen from nearby I-80. I was planning to install an irrigation system to keep the most visible part of the campus lush and green, and I was also working on plans to put in a dog park in an unused corner, complete with doggy drinking fountains and shaded benches for their human friends.\n\nIn the month I'd been in Omaha, I was focused on LPP, Inc., and wasn't even looking for additional clients. Not only did I want Meadow's business to look its best, I wanted something I could point to for other potential clients, and I was going to make LPP my show piece.\n\nI turned again at the end of the line and buzzed back across the lawn. I was nearly finished with my mowing. As soon as I finished, I'd blow the clippings off the drive, and then I had to haul-ass over to Omaha Power Equipment. My new snowblower and snowplow were waiting to be picked up. In Albuquerque, winters were slow and I sometimes struggled to keep my crews busy, but in Nebraska, winter meant snow removal. I wanted to be ready to keep Meadow's drive and LPP's parking lots and sidewalks cleared.\n\nI whirled the mower around and started back the other way, tidying up the grass as it began to go dormant for winter. In Albuquerque I spent most of my time supervising crews, answering the phone, and paying bills. I'd forgotten the sense of accomplishment I felt when I whipped a piece of property into shape. Mike could have Lawn in Order and all the headaches that went with running an operation that big. RLS, Reynolds Landscaping Service, would do me fine for now.\n\nI finished mowing and quickly blew the drives and parking lots clean before packing up. Mowing the headquarters by myself was over a half-day job, so I had to hustle to get to OPE to give them enough time to fit the plow to my truck.\n\nAs I pulled out of OPE's parking lot, a gleaming yellow plow blade hanging on the front of my truck, I was grinning like a kid with a new toy. It was the middle of October, and I was looking forward to having some snow to clear.\n\nAfter having my truck fitted, and with my new snowblower loaded, I drove to the small storage building I rented. In Albuquerque I had a regular business, complete with a storage space for all the trucks and equipment, a place to do light maintenance, and an office. I was too small to need all that now, but I wanted a place to keep my equipment out of the weather, plus I didn't want to clutter up Meadow's drive with my stuff. It was a bit of a pain in the ass having to drop and hook the trailer every day, but like a lot of things since I moved to Nebraska, the benefits far exceeded the hassles.\n\nI pulled into the garage beside Meadow's Jaguar. Normally I beat her home, but not today. I stepped into the kitchen. I did most of the cooking, because cooking was clearly not Meadow's thing, but she was busy at the counter chopping vegetables. Since she had a knife in her hand, I got her attention by flicking the light off and on instead of touching her on the shoulder.\n\nShe turned to face me, a smile on her face as she wiped her hands on a towel. You're late she said after dropping the towel on the counter.\n\nWe communicated mostly with sign now. It was easier for her, and it kept me in practice. I was still learning, and I was terribly slow with finger spell, but I was getting there. Yes. I picked up the snowblower and plow today. Bring on the snow!\n\nShe grinned. I bet you won't be saying that by spring.\n\nMaybe, maybe not. I'm planning on building a six-foot tall snow sculpture dog in the front of your offices when we get enough snow.\n\nYou are not! she said with a huge grin.\n\nYes, I am.\n\nI dare you!\n\nWatch me.\n\nShe snickered. If you do, I'll have our marketing department get pictures of it. They've already taken pictures of the living logos and posted them on our Facebook page. It got lots of likes.\n\nAll part of the service.\n\nHer smile became more mischievous. I like your service.\n\nI grinned at her, a rush of warmth flowing over me and straight to my manhood. She could say so much with how she moved, conveying emotion and texture in her signing, just like a person could by modulating their voice. I despaired ever being able to achieve the subtly in my signing she accomplished so effortlessly, but I'd keep trying. I moved in for a kiss, but she blocked me with a hand on my chest, her eyes dancing.\n\nYou're dirty.\n\nI thought you liked it when I was dirty.\n\nI loved it when she flushed. You're right, I do, she said before melting into me.\n\nI kissed her passionately, my desire for her roaring. The first weekend I'd attacked her yard, digging up and relocating bushes, cutting away sod, and spreading mulch as I reshaped beds, she'd brought me water a couple of times. She'd offered to help, but I waved her off. This was my contribution, and I knew she didn't like working in her yard, which was why she'd hired her yard work out. After I'd drained the glass, she'd stood and watched as I worked, saying nothing.\n\nWhen I finished for the day and had come inside, shirtless, sweaty, and covered in dirt, she'd practically attacked me. At least we'd made it to the bed instead of doing the deed on the hard, cold tile of the kitchen, though we left a trail of clothing in our wake. After a raging orgasm that left me panting and shaken, we'd showered together, and after I was clean, we went back to bed and got busy getting dirty all over again.\n\nI sighed out of the kiss, watching her eyes. The next day I didn't even bother with a shirt, and I'd finished the day even more covered in dirt and mulch. The resulting sex was even more explosive. I was too much of a professional to go shirtless when I was working my commercial account, but I made it a point to not wear a shirt when working in her yard at home, at least until it started getting too cold.\n\nWant to shower with me? I offered.\n\nShe watched my eyes a moment before slowly stepping back. Yes, but no. I'm in the middle of dinner. Go ahead.\n\nI put on an exaggerated pout. Are you sure?\n\nShe grinned and gave me a playful shove, making shooing motions. Yes. Go!\n\nI slumped away, my shoulders sagging as I slowly dragged one foot in front of the other. Once I was out her sight, I stopped clowning around and finished walking to our bedroom where I began stripping out of my pants and shirt.\n\nNormally I'd already showered by the time she got home. The dry grass had blown around as I mowed, and I was covered in dust and chaff, but I wasn't nearly as dirty as I was some days. I smiled as I tossed my clothes into the hamper for later washing. Maybe the problem was that I wasn't dirty enough, and I had my dark green RLS shirt on.\n\nI was standing in the shower, the warm water pouring over my head, rinsing the dust and grime off me, when I heard the shower door open. Meadow stepped in and immediately melted into my arms.\n\nI thought you might need some help washing your back.\n\nI smiled at her. Always, but I thought you were working on dinner preparation. Did you get finished?\n\nShe smiled up at me. No. I got distracted.\n\nSo, what's for dinner? I teased.\n\nI'm thinking you are.\n\nI smiled in return, our gazes locked. Funny. I was thinking of having you for dinner.\n\nMaybe we'll have each other.\n\nI paused a moment before I touched her face. A banquet fit for a king.\n\nAnd a queen.\n\nIt took me far longer to finish my shower with her help than it would have had I done it myself, but I wasn't complaining. After we exited the shower, I slowly patted her dry, kissing her stomach as I dried her legs. I worked my way back up, once again kissing her stomach, then her breasts, and finally her lips.\n\nI love you.\n\nI love you, she replied.\n\nI smiled down at her as I took her lips again, pulling her into me, her naked body so wonderfully soft and warm against my skin. The words came so easily now. It had been only six weeks since our time in North Carolina, about ten weeks since I met her for the first time, but these ten weeks had been the happiest of my life, so much so I was beginning to think in terms of before Meadow and after Meadow. It was as if my life began anew when I stepped off that plane in Asheville.\n\nShe slowly pulled out of the kiss, her hand falling to my erection. \"I'm starving,\" she said as she slowly caressed me.\n\nMaybe we should eat?\n\nShe smiled. \"Exactly what I'm thinking.\"\n\nShe pulled me to our bed by my cock, stopping at the edge and turning to face me. I started to kiss her, but stopped, holding her gaze.\n\nWhat? she asked.\n\nI took her hand and held it to my throat so she could feel the vibrations of my voice. It was something she'd asked to do once, wanting to 'hear' what I sounded like. \"I love you.\"\n\nShe smiled. \"I love you, too.\"\n\nI continued to hold her gaze. She was more beautiful now than ever, her beauty far more than just her appearance. Thank you.\n\nFor what?\n\nFor being there when I needed someone to help me get my head screwed on straight. For... being you.\n\nShe smiled, her face softening. You just needed someone to keep telling you what you already knew.\n\nThen thank you for telling me.\n\nShe nodded. You're welcome. She continued to watch my face, her small smile slowly fading. Are you okay?\n\nI nodded, overflowing with love. There are no words.\n\nFor what?\n\nTo tell you how I feel.\n\nShe touched my face. I know.\n\nI pulled her hand to my lips, kissing her palm. You can't know. I thought I loved Candi, but...\n\nBut what?\n\nBut, I didn't. I only thought I did. The way I feel about you... I shook my head, unable to continue. There were no words, spoken or otherwise, that could come close to describing how I felt about her. Words were the fly, my feelings the world. You're everything to me. Without you, I'm less.\n\nHer face hardened. Don't say shit like that. You know I hate it when you do that.\n\nI touched her face. No. You complete me. You complete me like no one ever has, like no one else ever will. To be me, I need you.\n\nShe softened and smiled. Okay, that's better. I feel the same about you.\n\nI pulled her close and held her tight before slowly relaxing my embrace and taking her lips. I want you... always.\n\nShe smiled. I've given you my heart. The rest you'll have to take. She smiled, her hand falling to my manhood again before slowly caressing me. \"Hopefully often and with great enthusiasm.\"\n\nA smile tugged at my lips as I brought them to hers. I could manage that.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Brooklyn</center>\n\nI picked up my phone, selected a contact from the list, and lifted the phone. \"Ms. Larson, this is Brooklyn Lancaster. Can you talk?\"\n\nI sent the text on the way, placed the phone aside, and turned to other matters, but before I could touch my computer, my phone chirred with a returning text.\n\nYes.\n\nI'm following up to make sure you're happy with my services.\n\nI got a thumbs up emoji, a smiley face with hearts for eyes, and a heart with quiver lines. I smiled. I assume that means you're happy?\n\nOh my God, Brooklyn. Kane is PERFECT. I don't know how you did it, but I'm so thankful you did. He's living with me, and I've never been happier. Never! Ever!\n\nI smiled. I'm happy for you.\n\nThank you! Kane had to sell his business, but he seems happy with the price he got for it, and he's doing well here. He said he's happy working by himself, and he's glad he doesn't have to deal with the headaches of having a bunch of employees anymore. Our grounds have never looked better, and he's already picked up another client based on the work he's done on our campus.\n\nGood for him. Sounds like things are working out for everyone.",
        "Yes. I'm very happy, and I think he is too. I wish he were here. I'm sure he'd want to thank you himself.\n\nHe has my number.\n\nThere was a momentary pause before she replied. I've sent him a text.\n\nAs you know, I work almost entirely off referrals. May I count on you for a reference or referral?\n\nAbsolutely! Anything I can do for you, I will!\n\nThank you. Is there anything else I can do for you?\n\nNo. You've already done enough, and I mean that in the best possible way. I didn't know I could be so happy and content.\n\nVery good, Ms. Larson. I wish you the best of luck. You and Mr. Reynolds both.\n\nThank you, Brooklyn. Thank you so much.\n\nYou're welcome. Enjoy the rest of your day.\n\nThank you. You too.\n\nI placed my phone aside as I smiled. Finding someone that could deal with Meadow's... condition, and was still a good match for her, had been tricky, but it seemed that Kane Reynolds filled the need nicely.\n\nI was working on my computer, reviewing my notes on potential companions for William Ogden. I was studying one entry when my cell rang. I picked it up. \"Brooklyn Lancaster.\"\n\n\"Ms. Lancaster. Kane Reynolds. Meadow said you wanted to talk to me?\"\n\n\"Not exactly. I was following up with Ms. Larson, and I told her you could reach out to me if you needed to.\"\n\n\"I see. As a matter of fact, I do have a couple of things I want to say to you.\" I felt a slight chill from the coolness of his tone. \"You, Ms. Lancaster, must be some kind of witch. I don't know how you did it, but... Meadow is... unbelievable. You couldn't have picked a more perfect person for me.\"\n\nI relaxed, the smile coming through in his voice on his last sentence. \"I'm glad things are working out between you and Ms. Larson.\"\n\n\"Working out? Did you say working out? That doesn't even come close to describing it. I am so hopelessly in love with her I can barely do my job. Do you know how hard it is to make a mower go when you're floating with joy? I can barely hold the safety switch down.\"\n\nI giggled. I'd realized that Kane was a comedian when I interviewed him, but he was even more exuberant now. \"I'm pleased you feel that way.\"\n\n\"I do. People are going to think there's something wrong with me because I constantly walk around with this big, stupid grin on my face.\"\n\n\"That's really good news. I'm happy for you.\"\n\n\"Thank you,\" he said, all the teasing joviality gone. \"In all seriousness, I can't thank you enough. Meadow... she's... helped me.\"\n\n\"With what happened?\"\n\n\"Yes. She's helped me get past... my confusion, I guess is the best way to put it. Meadow is an amazingly strong, compassionate and understanding, woman.\"\n\n\"Yes, Mr. Reynolds, she is.\"\n\n\"I guess I owe you two debts of gratitude. One for introducing me to Meadow, and another for helping me pull my head out of my... rear.\"\n\nI had the impression he changed what he was going to say at the last moment, and I smiled. \"Thank you, but all I did was introduce you to Ms. Larson, and I've been well compensated for that. The rest, that was all you and Ms. Larson, so I consider us even.\"\n\n\"Not even, Brooklyn. Never even. If there's ever anything I can do for you, call me. I can't repay the debt I owe you, but I can make payments on it.\"\n\nI nodded to myself. \"Thank you, Mr. Reynolds. That's very kind of you to say. It's not often that I call upon a companion for a reference, but should I need to, may\u2014\"\n\n\"Absolutely!\" he interrupted. \"Any time.\"\n\n\"Thank you.\"\n\nThere was a moment of silence. \"Is there anything else you need from me?\"\n\n\"No. I wish you and Ms. Larson the best of luck together.\"\n\n\"Thank you, Brooklyn. Thank you so much.\"\n\n\"You're welcome, Mr. Reynolds.\"\n\nWe hung up and I rocked back in my chair, a small smile on my lips. I had a good feeling about Meadow and Kane. Not all my clients and companions stayed together forever, and most were enthusiastic in their praise when I performed my follow-up call, but it wasn't often that I could hear the depth of the love I heard in Kane's and Meadow's voices.\n\nI nodded as I turned back to my computer. Yes, I had a very good feeling about them."
    ],
    "authorname": "SanityCheck",
    "tags": [
        "billionaire",
        "deaf",
        "holiday",
        "millionaire",
        "north carolina",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/matchmaker-08-august"
}