{
    "title": "Fated Destiny Ch. 02",
    "pages": [
        "Despite the heat of the day, it felt cool in the vine-covered arbor on the estate's gardens. Tom sat on a stone bench with his head in his hands. Footsteps sounded on the brick walkway outside the arbor and stropped, but Tom did not look up. Dr. Maleski sighed and sat down next to the young man.\n\n\"I am sorry, my boy,\" apologized Dr. Maleski. \"It is a large amount to svallow at one time. I understand your skepticism.\"\n\n\"Skepticism?\" laughed Tom with a wild catch in his voice. \"My unknownth-great grandfather, who was a Roman soldier, captured a vampire and not just any vampire, but a sex vampire! The vampire also yells out a name that implies that Covington has lived for hundreds of years. You then threw in possessions and a werewolf on top of that! If I hadn't seen what Desiree had done to Mr. Silverman, I would say you all belong in an insane asylum\u2026maybe I belong in one too.\"\n\nSergi frowned at Tom's use of Covington's first name and said, \"I vish it vere that simple. I vould gladly join you there. Unfortunately, this is all too real.\"\n\n\"So now what?\" asked Tom. \"Do I magically turn into Buffy and slay the great vampire and her cult?\"\n\n\"No, Thomas,\" chuckled Sergi. \"Do not let your imagination run vild. Unlike the popular movies, there are no vampire cults. Vampires are minions of hell and as such, they seek to dominate each other. Vampires make other vampires, but can only control one or two others\u2026maybe three if he or she is strong enough. Those being controlled strive against their master all the time.\"\n\n\"So vampires are usually alone,\" surmised Tom.\n\n\"Of their own kind, yes,\" replied Sergi. \"There vill be those of mankind who vill be drawn to the power, immortality, and mystique of the vampire.\"\n\n\"What do we do now?\" asked Tom.\n\nDr. Maleski smiled at Tom's choice of words. It indicated that Tom was beginning to see himself as part of whatever happened.\n\n\"You need to rest,\" said Sergi, placing a hand on Tom's shoulder. \"You have had a terrible shock and then learned that reality is not as you thought it vas. Rest and give your mind time to sort out vhat you have learned.\"\n\nA set of heels clicked on the bricks announcing a new arrival to the arbor. Both Tom and Dr. Maleski looked up as Gretta came into view through the archway.\n\n\"Excuse me, Herr Doctor,\" said Gretta as she stopped in front of them. \"There is a telephone call for you.\"\n\nSergi excused himself and Tom took his first good look at Gretta. She was about five-foot, eight-inches tall. He remembered her face with the laughing brown eyes, which was framed by her pageboy hairdo. She was dressed in a French maid's outfit, which came off the shoulders and was pushed out in the front by her very large breasts. Her shapely legs were enclosed in black nylon and went all the way up to where her short skirt was puffed out by white taffeta. Tom felt himself blush because he was staring and put his head back down into his hands.\n\n\"Is everything good, mein herr?\" came a soft voice as a hand touched Tom on the shoulder.\n\nTom looked up and was greeted by the same sight he had seen earlier in the bedroom. Gretta had bent over to touch Tom on the shoulder. Tom had straight view down the valley between her breasts and would swear that he could see her navel. He jerked his head back in embarrassment as he kicked his legs up and over the stone bench. Tom sprang to his feet, putting the bench between him and Gretta.\n\nGretta straightened up and placed her hands on her hips. With a sly smile, she easily stepped over the bench and sashayed towards Tom. Tom backpedaled, but stopped when he banged up against a stone column and the latticework which held up the vines. Gretta inhaled deeply and pinned Tom in place by leaning forward to mash her massive hooters against his chest.\n\n\"You are not afraid of me, are you?\" cooed Gretta softly, moving her torso around in little circles.\n\n\"I\u2026er\u2026uh,\" stammered Tom, looking around for an escape. \"I\u2026Woohoo!!!\"\n\nEvery muscle in Tom's body tightened when Gretta reached up with both hands and grasped his cock through his pants. His prick tightened up the most and started to harden up as Gretta rubbed it with her hands. Tom put his hands on Gretta's shoulders to move her aside, but she tightened her grip on his cock.\n\n\"Acht du leiber!\" gasped Gretta as her hands stroked his long cock. \"I thought it was big when I saw it this morning, but this\u2026!\"\n\n\"Please stop,\" hissed Tom through gritted teeth as all the teasing and embarrassment that his cock had caused him in the past came back to haunt him.\n\n\"Why?\" asked Gretta, suddenly sensing the discomfort that Tom was in.\n\n\"Tom? Are you here?\" sounded Anya's voice from the garden.\n\nGretta pushed back off Tom and nimbly stepped back over the bench. With a quick tug at her neckline, she settled her large breasts back into place and smoothed out her skirt. Tom stepped away from the latticework and managed to adjust his cramped cock just before Anya walked in to the arbor.\n\nAnya, dressed in black slack and a white blouse, stopped as soon as she saw who was inside. Gretta gave Anya a quizzical look as red-faced Tom tried to act nonchalant, while trying to hide the front of his pants. Anya sighed and shook her head.\n\n\"I thought I would show you around the grounds,\" said Anya to Tom. \"Grandfather is taking a telephone call about a disturbance. We may not be available later.\"\n\n\"I had better go and get changed then,\" said Gretta. \"Excuse me.\"\n\nGretta left quickly and without a backward glance. Anya motioned for Tom to follow her and they walked side by side through the garden. Rows o roses, potted plants and carefully pruned shrubs gave the garden a relaxed, peaceful atmosphere. Tom looked over and saw that the house was actually a large fieldstone mansion, built on top of a hill so that it looked down into the valley. A long driveway led up between tow pastures from the street.\n\n\"I am sorry if I embarrassed you this morning,\" said Anya. \"My grandfather says I'm too bold at times and I suppose I am. I have a bad habit of trying to shock people. A teasing I never grew out of. I am sorry.\"\n\n\"At least you saved me from Gretta,\" joked Tom.\n\n\"Ah, Gretta\u2026She, unlike me, has the strength to act on her inclinations,\" mused Anya. \"Something I never mastered. If you had dropped your sheet this morning in response to my taunt, I would have run from the room\u2026with dignity and discipline, but I would have still left. Gretta would have stayed and undressed with you.\"\n\n\"In which case, I would have run from the room,\" stated Tom with a slight blush.\n\n\"Why?\" asked Anya with a smile. \"I think a romp with Gretta would be just what a young, strong, virile man like yourself would kill for.\"\n\nTom began to turn away from her, his face blushing bright-red.\n\n\"Sorry\u2026sorry,\" apologized Anya, touching Tom's arm lightly. \"Bad habit strikes again. I'm good at reading people and recognizing their strengths and weaknesses.\"\n\n\"What happened last night that your grandfather is on the phone about?\" asked Tom, changing the subject.\n\n\"You mean the disturbance? I don't know. Grandfather will tell us\u2026\" Anya stopped when a loud bell gonged from the manor house. \"It seems he is ready to tell us, if you'll excuse me.\"\n\n\"I'll go with you,\" replied Tom.\n\n\"You're supposed to be resting,\" said Anya as they walked back towards the mansion.\n\n\"I've gotten plenty of sleep. Besides, if it is about Covington, I want to hear it.\"\n\nAnya looked at Tom sideways out of the corner of her almond-shaped eyes, but did not say anything. While she had teased him about his shyness around women, she had also correctly guessed on his strength of character and intelligence. She smiled slightly to herself as the entered the house.\n\nSergi and Gretta were waiting for them in the spacious living room. Gretta had changed, to Tom's relief, out of her maid's outfit and into blue jeans and a white pullover. While the blouse did little to hide the size of her breasts, it was a lot less erotic than the maid's uniform.\n\n\"Ah, Thomas and Anya,\" said Sergi as the two of them walked in. \"Ve have a small problem. Nothing to do with MS. Covington, but it may give you, Thomas, an idea of vhat ve try to accomplish.\"\n\n\"What's the problem?\" asked Tom.\n\n\"A poltergeist has appeared in a large church downtown. The priest and I are friends and he called me about it. Specifically, a Milton Haskins has died. He vas a contractor who renovated parts of the church and vas a major benefactor. His body vas taken to the church after morning services vere concluded to lie in state. That vas when the poltergeist appeared.\"\n\n\"Could it be Haskins?\" asked Anya.\n\n\"Possible, but doubtful,\" replied Sergi. \"The priest, Father Roberts, vas attacked and it seems to him that the poltergeist is trying to keep everyone avay from the casket.\"\n\n\"Why doesn't Father Roberts just get an exorcist and blast it back to wherever it came from?\" asked Tom.\n\n\"Father Robert's branch of religion vehemently denies the paranormal,\" answered Sergi. \"Only his relationship vith me vould allow him this avenue.\"\n\n\"Meaning it has to be kept quiet or Father Roberts would find himself on the wrong side of a church inquiry, verstehen?\" commented Gretta.\n\n\"Huh?\"\n\n\"She asked if you understand,\" said Anya. \"Most spirits appear due to a specific event. Ninety percent of our work is spent trying to uncover that event and resolve it.\"\n\n\"So what caused the ghost to appear?\" asked Tom.\n\n\"That ve do not know,\" said Sergi with a smile. \"Not yet.\"\n\nIt was only a couple of minutes later before Tom found himself sitting uncomfortably close to Gretta in the backseat of a minivan. Her body was right up against his and her hand had a habit of resting on his thigh\u2026no matter how many times he moved it aside. Anya was driving and Sergi was sitting in the front passenger seat. To Tom, the trip seemed endless before they pulled up in front of a grey stone church.\n\nDr. Maleski led them around to a side door marked 'Church Office'. The four of them entered and walked down the hallway to the first door. Inside the office was a short bald priest, whose relief at seeing them was evident on his face. There was a nasty-looking cut on Father Roberts' left cheek.\n\n\"Sergi, thank you for coming!\" exclaimed Father Roberts. \"I'm at my wits end as to what to do.\"\n\n\"Please, sit down and tell us vhat happened,\" said Sergi.\n\n\"Of course\u2026of course,\" huffed Father Roberts, pulling out a handkerchief to wipe the sweat off his forehead. He motioned for everyone to have a seat also. \"The trouble started after the funeral home brought the body of Milton Haskins here. He died suddenly on Saturday from a heart attack. His will left the church with a sizable donation provided he could lie in state for the viewings. The viewings were supposed to start tomorrow afternoon. Anyway, after the casket was dropped off, I began hearing noises in the church. I went to investigate and saw a blue light surrounding the coffin. The coffin was shaking violently and I rushed forward to hold it down. That was when the blue light separated from the casket and flew towards me, hitting me with enough force to knock me down. When I fell, I hit against a pew and cut my cheek. I\u2026I then ran out of the church.\"\n\n\"You did vell, Timothy, and I think you do have a spirit here,\" said Sergi. \"Anya, please see to his cut and afterwards go over Mr. Haskin's contributions. I vould like to see the blueprints of the church. Gretta and Thomas, I vant you to go into the church and see vhat is happening. Take no action and just observe.\"\n\nJawhol, Herr Doctor,\" replied Gretta as Tom grimaced at being teamed up with her. \"Can you give us a brief description of the church layout, Father?\"\n\n\"The hallway opens out into our reception area,\" said Father Roberts. \"There will be stairs going down in front of you. They lead to the classrooms, the kitchen and the banquet hall. There are also storage rooms and a small chapel in the basement. The double doors off the reception area go into the library. Past the stairs going down, you will see a hallway going back to the sacristy and the restrooms. There is also a set of back stairs that go up to the Great Hall and down to the kitchen. If you turn left at the reception area, you will see wooden steps that go up to the Narthex and the main church.\"\n\n\"Thank you. Let's go, Thomas.\"\n\nTom followed Gretta out of the office. Tom could sense that Gretta had changed from being playfully oversexed to intently serious. They walked into the reception area where Gretta stopped and turned to face him.\n\n\"Tom, we are looking for things that are out of the ordinary, no matter how trivial,\" she said to him. \"Don't be confused by what you have seen in the movies. Each spirit is unique, just like people. Where do you think we should start first?\"\n\n\"I'd say the church.\"\n\n\"As good a place as any,\" replied Gretta, turning left to go up the wooden steps.\n\nThe Narthex was a long, red-tiled room with a vaulted ceiling that ran the width of the church proper. Three sets of double doors were on the right leading into the church. Opposite them were three arched doorways going outside. Sunlight streamed in from a large stained glass window, illuminating the entire area in light and color. A wide wooden staircase was to Gretta and Tom's left going up to the Great Hall.\n\nLooking around carefully, Tom saw nothing amiss, but he felt the apprehension building inside him. Gretta walked over to a small wood door set between two of the arched doorways and opened it carefully. Tom looked around her and saw a round stone room, which was dominated by the wrought iron circular staircase spiraling both upwards and downwards. Three heavy ropes were lashed down on one wall by the door.\n\n\"Bell tower,\" commented Gretta. \"I bet it leads to the storage rooms.\"\n\n\"I don't see anything unusual,\" said Tom, letting out his breath. \"Let's check the church.\"\n\nThey walked in through the center door and Tom stopped after entering. The church looked enormous in the dim light coming from the stained glass windows to their left and the huge round window over the altar. The vaulted ceiling towered above them, held up by eight gothic stone columns. White marble steps rose up to the choir stalls and onward to the altar. The altar was white marble with a large stone relief of the twelve apostles behind it. To Tom, who had grown up in a small country parish, the effect was impressive, humbling and cold.\n\n\"What do you see?\" asked Gretta, breaking Tom out of his trance.\n\nTom looked around quickly and said, \"What I don't see is Mr. Haskins.\"\n\n\"Sehr ghut,\" muttered Gretta in approval. \"There are two alcoves on either side of the altar. His body may be in one of them. Come.\"\n\nThey walked cautiously up the center aisle until they were halfway towards the altar. Gretta then moved left, cutting through a pew. Tom followed her until they were able to look into the alcove. A single spotlight shone on a painting of Mary and there was a small altar in front of it.\n\n\"It's Our Lady's Chapel,\" whispered Tom to Gretta. \"I don't see the coffin.\"\n\nGretta nodded and motioned Tom to follow her. They walked back down the pew to the center aisle, stopping only briefly for Gretta to cross herself in front of the main altar. They then moved on towards the other alcove.\n\nCurved marble steps led up to the right alcove. The alcove was an octagonal room painted in dark blue with blue-green stained glass windows. A spotlight shone down from the ceiling illuminating a life-size marble angel who was holding a large seashell bowl. Against the far wall was the coffin. A sparkly blue light surrounded the casket. He coffin rattled and shook on its gurney. Tom gasped when he saw the blue light. Suddenly, everything froze for a split-second and then the light winked out.\n\n\"What happened?\" whispered Tom.\n\n\"I don't know,\" whispered Gretta. \"We need to get a closer look at the coffin. It might give us more\u2026\"\n\nBefore Gretta could finish her sentence, the blue light surged up out of the floor beneath her. It grabbed the bottom of her blouse and yanked it up over her head before she or Tom could do anything. Tom's mouth dropped open and he stared in shock as Gretta's tow large breasts bounced into view, hidden only by the flimsiest white lace bra Tom had ever seen. The bra barely held her massive melons in place and her dark areolas were visible under he lace as her hard nipples pushed out the material.\n\nA string of curses in German snapped Tom back to reality. He looked up and saw Gretta's blouse fly up to the ceiling and disappear. Squinting upward, Tom saw a dark rectangular patch on the ceiling and guessed that there was an opening up there. He looked back at Gretta, who was also looking upward. Tom found his eyes straying down to her breasts. He blushed and spun around so his back was to her.\n\n\"Sorry,\" he mumbled. Tom pulled off his shirt and held it out behind him. \"Here.\"\n\n\"Thank you, Thomas,\" said Gretta. \"I\u2026Nein!\"\n\nTom felt his shirt snatched out of his hand. At Gretta's exclamation, he spun around only to see his shirt flying up towards the ceiling. He looked over at Gretta to find her casting an appraising eye over his hard pecs and flat stomach. Tom worked out regularly and it showed.\n\n\"Think there is a way up there?\" asked Gretta, looking back up at the ceiling.\n\n\"Probably through the bell tower,\" said Tom. \"There maybe a crawl space between the ceiling and the roof. Why?\"\n\n\"Because it took our clothes up there,\" stated Gretta. \"There may be a reason and I would like to have something to wear outside when we leave.\"\n\nTom nodded, not wanting to appear half-naked in front of Anya and her sharp tongue. He followed behind Gretta as they headed back to the Narthex. His eyes first settled on her naked shoulders until he realized that he was staring. Tom shook his head and lowered his gaze, but immediately realized that watching her swaying, round ass was not much better. Feeling and uncomfortable heat rising up from around his neck, Tom settled on looking at the top of Gretta's head.\n\nThey walked out into the Narthex and went over to the tower door. Gretta immediately went inside and started up the spiral staircase with Tom following behind. The staircase went up about twenty feet before ending on a stone floor in the tower. The entire level was bare except for an iron rung ladder attached to the far wall.\n\nTom looked up the ladder and saw that it extended upwards about sixty feet to end at a trapdoor. There was a narrow walkway at the top of the ladder before the trapdoor which went around the wall to two small wooden doors. Three ropes came up out of the floor and went straight up the wall into the next level. Tom guessed that the bells were above the trapdoor.\n\n\"How's your climbing skill?\" asked Gretta, walking over to the ladder.\n\n\"As good as your's,\" replied Tom confident in his athletic ability.\n\n\"Let's go then,\" and Gretta started to climb up.\n\nGretta was twenty feet high when the blue light materialized through the trapdoor and flew down at her. Tom froze as the eerie apparition sped towards Gretta, who yelped in fright at the sight. She then gasped in shock as the blue light yanked her pants downward exposing her white thong panties.\n\n\"Thomas, help!\" yelled Gretta.\n\nTom galvanized into action as he saw Gretta's pants catch around her shoes and then have her legs lift away from the ladder. He climbed up rapidly and grabbed Gretta around the waist as her body was pulled out at a forty-five degree away from the ladder. Tom grunted as Gretta's body jerked and then jerked again as the light yanked away at her pants. Tom knew his grip would not good and he laced his legs between the rungs to free up his other hand.\n\nGretta screamed when a particular violent wrench on her pants broke her grip on the ladder. Tom barely managed to grab her wrists as Gretta was pulled free of the ladder. He felt his body twist as he tightened his legs in the rungs. As Tom twisted, a bracket attaching the ladder to the wall caught his trousers right above the zipper. With aloud rip, it tore his pants and underwear all the way down to his mid-thigh.",
        "What struck Tom as strange was the eerie silence with which everything was happening. There was no rush of wind, things flying around, or flashing lights. The only sounds he heard was his own heavy breathing from his exertions and Gretta's scared gasps for air. Their bodies were now perpendicular to the ladder.\n\n\"Kick off your shoes,\" grunted Tom through clenched teeth.\n\nGretta nodded, her short hair framing her frightened face. She looked down to where her legs were being held straight out by the force pulling on her pants. Tom gritted his teeth even tighter as Gretta's body moved this way and that as she tried to kick off her shoes. Tom's legs were beginning to pull free from the ladder when Gretta finally got one shoe off and her pants were yanked free of her legs.\n\nTom gasped in pain as he suddenly bore all of her weight as Gretta swung back towards the ladder. He managed to pull her up so she would not crash into it and she could grab a hold of one of the rungs. Just as Gretta grasped one of the rungs, Tom's legs gave way and he fell face-first towards the floor. Tom frantically grabbed a bell rope, which jerked his body upright. His body snapped into the thick rope and caught him right between the legs. The pain caused him to collapse onto the floor and he hit his head on one of the stones.\n\nGretta stared in horror as she watched Tom fall, catch himself and then crash to the floor. He curled up into a fetal position with his hands clutching his groin as Gretta descended the ladder. She kneeled down quickly beside him.\n\n\"Thomas! Thomas!\" she cried out, cradling his head.\n\nGretta could see that Tom's eyes were unfocused as he moaned in pain. She gingerly felt his head and was relieved to find that it was not cut. She tried to examine his groin, but his arms tightened when she tried to move his hands away.\n\n\"No!\" shouted Tom with anger in his voice. \"I'm not Jumbo!\"\n\n\"What?\" asked Gretta perplexed by his statement.\n\n\"No, I won't show it to you!\" muttered Tom sullenly. \"Stop calling me Jumbo.\"\n\n\"Ah,\" sighed Gretta in understanding. She loved old movies and recognized Tom's reference to the huge elephant, Jumbo. It was not a far jump to connect that reference to his cock size and how it came to affect his shyness. \"I would never call you that,\" crooned Gretta softly. \"You have hurt yourself and need to examine you to see how badly you are injured. Please, I just want to see how you are.\"\n\nTom's head lolled back and forth, unable to focus on any coherent thought. Somehow, Gretta's words penetrated his jumbled thoughts and he warily relaxed his hands from his crotch. Gretta held her breath as his large flaccid cock came into view.\n\n\"Is it okay if I touch it?\" she asked. \"Tell me if it hurts.\"\n\nGretta gingerly reached out and grasped Tom's limp dick. She watched him closely to make sure she was not hurting him as she delicately examined it. Tom moaned at the touch, but not in pain. Gretta, emboldened by his moan, began to gently stroke his cock up and down. It started to harden under her ministration.\n\n\"No\u2026You can't\u2026I\u2026I\u2026,\" muttered Tom confusedly as he weakly tried to cover up again with his hands.\n\n\"Shh\u2026hush,\" soothed Gretta, gently pushing his hands away with one hand while holding onto his cock with the other. \"I will not make fun of you, mein liebchen. You have a very nice cock. It is vonderbar!\"\n\nTom relaxed at her words and quit trying to cover himself, either lulled by the sincerity in Gretta's voice or the gentle squeezing of her hand around his shaft. Gretta sensed the lessening of Tom's resistance and brought her free hand back to grip the shaft of his long cock. Slowly, looking for any sign of rejection, Gretta slowly slid her hands up and down Tom's eleven-inch cock. Tom, dazed and confused, laid back and moaned again in pleasure. No one had touched him this way before.\n\nGretta, encouraged by his reaction, smiled and tightened her grip on his hard prick. Her breasts were squeezed together between her arms as she pumped his cock with longer, surer strokes. Gretta knew exactly what Tom had gone through to be so shy. Her own bustline had blossomed early, but, whereas Tom retreated into himself, she discovered that boys were fascinated by her body. She learned the power and control she had over them by just shaking her shoulders or stretching her arms upwards. All the boys were soon dancing to her tune, which in her pride and arrogance, led to her downfall and possession.\n\nGretta shook her head to drive away those thoughts. She had changed and was not that prideful girl she once was. She loved sex, but did not use it as a weapon anymore. She did not know if Tom would remember any of this, but Gretta felt it might help him with his problem. She gently rubbed a finger over the sensitive nub of skin on the underside of the head of his cock. Gretta was rewarded by another moan and a pronounced twitch of his cock. Clear pre-cum began to ooze out the slit, which Gretta smeared all over the head of his cock with her fingers.\n\nGretta scooted a little closer to Tom's hips. Looking at Tom out of the corner of one eye, she leaned forward and laved her tongue around and around the head of his huge cock. Tom's whole body shuddered from the warm, wet sensation and his hands clutched at the hard stone floor beneath him, but he made no move to stop her. Gretta opened her mouth and sealed it around the thick shaft as her hands continued to stroke up and down.\n\nTom gasped as the tip of his cock was engulfed in a warm, wet cavern. Gretta's tongue lashed over the sensitive skin causing Tom to shudder and shake as his passion grew. Bobbing her head in time with her hands, Gretta knew Tom would not last long. A flash of disappointment coursed through her mind that Tom's huge, beautiful cock was not stuffed deep into her pussy, but Gretta reasoned that there would be another time for that.\n\nTom's body shook and tensed up tightly. He shuddered a second time as his hips arched upward off the floor. Gretta had been waiting for it and leaned upward with his thrust, her mouth still sealed around his cock. The first spurt however caught her by surprise. A huge gush of hot, thick sperm seemed to spurt endlessly into her waiting mouth. Her cheeks billowed out from the second spurt of cum as she swallowed to try to stay ahead of it. As it was, some of the white fluid still leaked out from the corners of her mouth to dribble down her chin.\n\nTom's hips collapsed back onto the floor as he panted heavily. Gretta waited until his cock began to go soft before removing her mouth from it. She wiped the cum off her chin and licked her fingers clean. Once the jizz was gone off her face, Gretta covered Tom's cock with a flap of his torn pants and kissed him on the cheek.\n\n\"That was good,\" she said to him softly. \"I'll be back shortly with help.\"\n\nGretta ran back down the spiral staircase and out through the Narthex. Just before the office door, she stopped and poked her head around the corner. Sergi and Father Roberts had a blueprint out and it was spread across the desk. Anya was sitting at the church computer, scanning the information on the screen.\n\n\"Herr Doctor, I need your help,\" said Gretta, causing everyone to look up at her.\n\n\"Vhat do you need, Gretta?\" asked Sergi.\n\n\"We found the entity. Tom was hurt, but not seriously. He is dazed, though.\"\n\n\"Show us,\" said Sergi and everyone in the office stood up to go see.\n\n\"Wait!\" said Gretta, holding up a hand. \"Whatever it was stole our clothes.\"\n\n\"That's a new excuse,\" stated Anya acidly as Father Roberts' mouth dropped open.\n\n\"Anya!\" admonished Sergi. \"Not now. Stay here and finish vhat you vere doing. Father, I vill go vith Gretta. Please find some robes for them to put on. Vhere is Thomas, Gretta?\"\n\nSergi picked up the first aid kit that Anya had used to clean and bandage Father Roberts' cheek. He followed Gretta to the Narthex and up into the bell tower.\n\n\"It was not as Anya implied,\" said Gretta sullenly as she started up the spiral staircase.\n\n\"You must admit that it is very\u2026uh, vhat is the vord\u2026incriminating,\" said Sergi, glancing up at Gretta's jiggling ass in front of him and smiling. \"Let us vorry about Thomas. Ve can get the story once ve get him down from here.\"\n\nTom was still sprawled out on the floor. Sergi checked his head and neck before opening the first aid kit and pulling out an ammonia ampoule. Holding the ampoule under Tom's nose, Sergi broke it. Tom snorted and jerked awake as the strong odor hit his nose.\n\n\"Easy, my young friend, easy,\" said Sergi, putting a hand under Tom's shoulder to help him sit up. \"How do you feel?\"\n\n\"I'm a little dizzy. Where\u2026\" and Tom's voice caught in his throat as his eyes focused on a half-naked Gretta, who was watching him. Tom blushed bright red and turned his head away.\n\n\"Let me help you up,\" said Sergi, extending a hand to Tom.\n\nWith Sergi's help, Tom sat up slowly and then started to stand up. The trouser flap fell off to the side and his cock dropped out of the tear. Tom immediately let go of Sergi's hand to cover up in front of Gretta. He landed back on the floor with a thump.\n\n\"Gretta, ve vill meet you in the library,\" said Sergi with some asperity at Tom's actions. \"Thomas is sufficiently recovered that the two of us can make it down.\"\n\nGretta nodded and went down the stairs. She was disappointed that Tom still acted the way he did, but then realized that his shyness would not be overcome by a single incident, especially when he was dazed and confused at the time. She left the bell tower to go find Anya and Father Roberts.\n\n\"Now that two big distractions are gone, let us get you up and downstairs,\" said Sergi, helping Tom to stand up. \"How is that?\"\n\n\"Fine,\" said Tom. \"As long as I go slow, I should be okay.\"\n\nThey made their way down the stairs and out of the bell tower. In the narthex, they met a very red faced Father Roberts. He was holding a long black choir robe, which snapped down in the front. Tom took off his torn pants and put on the robe. The three of them then headed to the library. Anya and Gretta were there, both sitting on opposite sides of the room and glaring at each other. Gretta was wearing a black robe also.\n\n\"Thomas, please sit down and tell us vhat happened,\" said Dr. Maleski, who sat down in a Queen Anne's chair.\n\n\"Well, we were climbing up the ladder\u2026\"\n\n\"Excuse me,\" interrupted Sergi. \"From the beginning\u2026when you left the office.\"\n\nTom sat still for a second with his eyes closed as he organized his thoughts. He began to relate what he saw and heard when he and Gretta explored the church. Tom stammered only slightly when telling how Gretta lost her clothes.\n\n\"I got Gretta back to the ladder after it\u2026uh\u2026took her pants. That was when I fell to the floor,\" said Tom, finishing up. \"I don't remember anything after that until you showed up, Dr. Maleski.\"\n\n\"Very good, Thomas,\" said Sergi. \"Gretta, do you have anything to add?\"\n\n\"Only the impression that the spirit was attacking the coffin in the room with the angel.\"\n\n\"But Mr. Haskins wasn't placed in the baptismal room,\" stated Father Roberts. \"He was placed in the center aisle in front of the altar steps.\"\n\n\"Indeed,\" commented Sergi. \"When you first encountered the entity, how did it attack you?\"\n\n\"How? Well, uh, I was walking back to the office after checking on the coffin,\" answered Father Roberts. \"I had my hands in my jacket pocket when it grabbed the back of my jacket, pulling me off balance. I couldn't catch myself and I fell into a pew. You know, it might have been trying to take my coat and I just got tangled up in it.\"\n\n\"My thoughts exactly,\" said Sergi. \"According to the blueprints, the baptismal room was actually a separate tower and was renovated five years ago by Mr. Haskins' company. Did anything happen during the renovation?\"\n\n\"Not that I can recall,\" said Father Roberts.\n\n\"I went over Mr. Haskins' donation to the church,\" interrupted Anya. \"He has made a sizable donation on the fifteenth of every month dating back five years. The only exception was June four years ago.\"\n\n\"That was when Milton got married,\" stated Father Roberts. He then jerked upright. \"There was something that did happen during the renovation. One of Milton's workers disappeared. I had forgotten all about him. Milton married the man's widow a year after his disappearance.\"\n\n\"What?\" exclaimed Tom. \"Isn't that\u2026uh\u2026it is, uh\u2026what I mean is\u2026\"\n\n\"I think the word you're looking for is motive,\" said Anya.\n\n\"Oh, no,\" countered Father Roberts. \"It wasn't like that at all. When Sandra reported her husband missing, Milton brought in his whole crew and searched the church from top to bottom. He took care of Sandra when the insurance company refused to pay death benefits. She went to work for him and then they became close. I don't think Milton even knew who she was before the disappearance.\"\n\n\"Let us review,\" said Sergi. \"The coffin containing Mr. Haskins' remains vas moved from the church proper to the baptismal room. Renovations vere done to that area five years ago when a man disappeared. A year later, that man's wife marries Mr. Haskins, vho's company did the renovations. Mr. Haskins died and vhen his coffin is placed in the church, out entity appears.\"\n\n\"It can't be the man who disappeared,\" argued Father Roberts. \"Milton and Sandra have been to this church dozens of times after the renovations were completed. They were even married here. This\u2026whatever\u2026never appeared then.\"\n\n\"I do not know vhy it has appeared now,\" admitted Sergi. \"Maybe some spiritual bond vas created or broken by Mr. Haskins' death.\"\n\n\"What sort of renovations were done?\" asked Tom.\n\n\"There was a leak in the tower roof, which went undetected for years,\" said father Roberts. \"The water ran down between the inner and outer walls. It pooled in between the supporting stone walls in the basement and destroyed the mortar down there. The entire base had to be rebuilt along with the roof and the framework on one wall.\"\n\n\"We never got to the basement,\" said Tom, and then added, \"or the roof.\"\n\n\"Thomas, I vant you and Anya to check the basement under the baptismal room,\" said Sergi. \"Do not disturb anything. Gretta and I vill look in the roof crawlspace.\"\n\n\"What can I do?\" asked Father Roberts of Sergi.\n\n\"Can you call Mrs. Haskins and ask her to come here?\"\n\n\"She is supposed to stop by later, but I'll call her now.\"\n\nAs they were leaving the library, Anya stopped Gretta with a touch on her arm. The two of them waited until they were alone.\n\n\"I'm sorry, Gretta,\" said Anya. \"I jumped to all the wrong conclusions.\"\n\nGretta smiled and said, \"As your grandfather stated, the evidence was incriminating. I would have believed the same if our roles had been reversed. Please do not tease Tom so much. It will only increase his shyness.\"\n\n\"I'll try, but it goes against my nature,\" said Anya, returning Gretta's smile.\n\n\"Yes, and my nature is to see if I can get him to like me\u2026a lot!\"\n\n\"There is something about him\u2026\" mused Anya. She looked Gretta in the eye. \"Between you and me?\" Gretta nodded. \"We can't do anything overt. No crawling into his bed when he is asleep\u2026no grasping or grabbing. He has to be the one to initiate any encounter. Agreed?\"\n\n\"Agreed!\" said Gretta, shaking Anya's hand. \"It would be faster though if we tag-teamed him.\"\n\n\"But not as much fun,\" said Anya as they left the library.\n\nAnya met Tom by the basement stairs and they headed on down. After only a cursory look in the classrooms, they went through the kitchen to the banquet hall. Past the hall were the storage areas. The areas had been set up in long side-by-side alcoves that wound around underneath the church. Tom found a light switch and flipped it on. The dim lights did little to dispel the gloom of the grey stone walls.\n\n\"It should be all the way in the back,\" said Anya.\n\n\"Great,\" was Tom's sarcastic reply.\n\nAs they made their way through the area, Tom was a little surprised by the size of the storage area. Old furniture, folding tables, discarded office equipment and even racks of clothing was there all helter-skelter. Once, both of them jumped in fright and then smiled weakly at each other when they came upon a life-size Halloween skeleton. The two of them eventually found their way to the door which opened into the room under the baptismal font. The room was empty.\n\n\"Why isn't there anything in here?\" asked Tom, perplexed by the bareness of the room.\n\n\"No,\" replied Anya, while looking at the walls, floor and ceiling. \"They probably emptied it for the renovation and it's so far back that no one has been here since then. I don't see anything unusual in here. Let's head back upstairs.\"\n\nAs they started to leave, Tom looked back and stopped. The outside of the room had been buttressed in stone. Tom looked again and could not shake the feeling that something did not look right.\n\n\"What's wrong?\" asked Anya.\n\n\"I don't know. It's\u2026I don't know,\" replied Tom. \"I want to look at that wall to our right.\"\n\nAs they walked around to their right, Tom saw what had been bothering him. The buttresses were evenly spaced at the eight corners of the tower. What had caught Tom's attention was that between two of the buttresses, the space had been filled in with stone and mortar almost the way up to the ceiling. It produced a sloping wall, which in the dim light, seemed to be the same as the other walls. Tom caught something out of the corner of his eye and stood up on his tiptoes. At the top, he saw what appeared to be a jumble of cloth.\n\n\"It looks like clothing up there,\" said Tom, pointing the mass out to Anya.\n\n\"Your's and Gretta's?\" asked Anya.\n\n\"Could be,\" said Tom. \"You know there may be enough space between these walls for a body. Do you think he is in there?\"\n\n\"I'm not sure,\" replied Anya.\n\n\"I think he might be trying to show us where his body is,\" said Tom.\n\n\"That makes sense,\" said Anya. \"Pretty good for a ghost hunter in a dress.\" She laughed at Tom's affronted look. Anya pointed to the top of the wall. \"Look! There seems to be a ledge at the top. I'm going to take a look.\"\n\nAnya pulled a pencil flashlight out of her pocket and turned it on. The rough stone of the sloped wall aided her ascent. She quickly reached the top and flashed the light over the stone.\n\n\"Tom, there's a slab up here. I, ugh, can't seem to move it. Come on up, but don't disturb the clothing.\"\n\nTom knotted up his choir robe between his legs. He grimaced as Anya gave him a wolf whistle, but decided to let it alone. He climbed up to where she was. The slab of stone was about three feet wide by four feet long and set flush to the top of the wall. Tom got out his pocketknife and tried to pry it up.\n\n\"I can't get it up either,\" he said, after several tries. He looked at the clump of hard plastic he had pried out of the crack. \"This is caulk. Someone put the stone in place and then sealed the edges.\"\n\n\"Let's go,\" said Anya, starting down. \"We need to tell Grandfather. Don't\u2026\"\n\n\"I know,\" interrupted Tom. \"Don't disturb the clothing.\"\n\nThey climbed back down and went upstairs. The office was empty, but it was only a short while later before Sergi, Gretta, and Father Roberts returned.\n\n\"Ve searched the entire bell tower and both crawlways,\" said Sergi. \"Ve found nothing. Anya?\"\n\n\"We found the clothing,\" said Anya. \"It was placed next to an unusual renovation. The renovation was to one of the tower walls under the baptismal and it looks like an additional wall was added between two buttresses. It's big enough to hide a body and there is a stone slab on top.\"\n\n\"Father Roberts, what about Mrs. Haskins?\"\n\n\"I called Sandra and she will be here in about fifteen minutes,\" replied Father Roberts.\n\n\"Very good,\" commented Sergi. \"That vill give me a chance to see the renovation. Anya, I have something for you to do.\"\n\nThey all went together back to the basement, except for Anya who was following her grandfather's instructions. Dr. Maleski looked intrigued by the placement of the clothing and the renovation itself. Concluding his investigation, he led everyone back to the office to await the arrival of Mrs. Haskins. She arrived five minutes later.",
        "Sandra Haskins was a woman in her mid-twenties with shoulder-length brown hair. Her most appealing features were her big, brown eyes and the sincere smile she gave to everyone as they were introduced. Her loose, white blouse and black wraparound skirt showed off her athletic, hourglass body without being ostentatious.\n\n\"What is it, Tim?\" she asked Father Roberts in a melodious voice. \"What was the urgency? You sounded like you had seen a ghost.\"\n\nFather Roberts choked and went into a coughing fit. Sergi stepped forward and kissed Sandra's hand as Gretta thumped Father Roberts on the back.\n\n\"You must excuse Timothy, Mrs. Haskins,\" he said. \"Ve have a mystery and I am afraid I am the one who requested you to come immediately. I have to ask you some questions that vill be painful.\"\n\nSandra looked at Father Roberts, who nodded to her reassuringly. She took in a deep breath and said, \"Go ahead.\"\n\n\"Vhat can you tell us about your first husband's disappearance and Milton Haskins?\"\n\n\"Um, Andy, my first husband, disappeared five years ago,\" said Sandra. \"He worked for Milton. The police could not find out what had happened to him. Our insurance company refused to make any payment on Andy's life insurance until seven years had passed by. I was unemployed and going to lose our house, car\u2026everything.\"\n\n\"That was when Milton first called me. He said Andy had been a good worker and not one to run off like that. I'm afraid I broke down at that point and sobbed out my whole predicament to him. The next thing I know, he loaned me the money to pay off my debts at a very low rate. Milton gave me a job and later we started going out together. I said yes when Milton asked me to marry him. He was much older than I was and I didn't really love him, but he gave me something I desperately needed\u2026security.\"\n\n\"Vhat do you think happened to your first husband?\" asked Sergi.\n\n\"I know he's dead,\" said Sandra with a finality that could not be denied. \"Nothing else can explain his continued disappearance.\"\n\nDr. Maleski was interrupted by the loud buzz of a doorbell. Father Roberts went to see who it was and returned with Detective O'Malley following behind him. Her expression changed from indifference to suspicion when she spotted Tom, Anya and Sergi in the office.\n\n\"Practicing for the choir, Parta?\" she asked sarcastically.\n\n\"Mr. Parta's presence here is entirely of my doing,\" said Sergi in a cool tone. \"He helped us search this church and in doing so ripped his clothing, thus necessitating the wearing of the robe. He does not need an indecent exposure charge. I am surprised to see you here.\"\n\nColleen grimaced at the rebuke, sighed and said, \"I'm on call. When the dispatcher gave out a call for a body being found, I came right over. Andy Vettana was one of my first cases as a detective.\" Colleen looked over at Sandra. \"You were his wife, right?\"\n\n\"I was.\"\n\n\"Well, where is the body?\" asked Colleen, looking around at everyone.\n\n\"Ve think it is in the basement,\" replied Sergi.\n\n\"Think?\" repeated Colleen with suspicion creeping back into her voice.\n\n\"Ve found an unusual wall vhich had been built during one of the church's renovations. There appears to be a stone slab on top, vhich may cover an opening. I believe this lady's husband may be in there.\"\n\n\"Might? Maybe? Believe?\" repeated Colleen. The look on her face clearly showed she thought she was on a fool's errand. \"Let's take a look and get this over with.\"\n\nIn the basement, Colleen's interest perked up as she examined the sloping wall between the buttresses and the stone slab on top. Tom dug out the putty around the slab with a knife from the church's kitchen. With several scraped knuckles, pinched fingers and some frayed patience, he and Father Roberts managed to pry the slab up using screwdrivers, a crowbar and a lot of luck.\n\n\"There is an opening up here,\" grunted Tom through gritted teeth as he managed to get his fingers under to stone to lift it.\n\nHuffing and straining, he and Father Roberts managed to move the slab off to one side. They climbed down to catch their breath as Colleen climbed up with a flashlight. Everyone waited with baited breath as she looked down into the opening. It was several long moments later before she came down before saying anything.\n\n\"I want to apologize, Dr. Maleski,\" said Colleen as she jumped to the floor. \"There is a body in there.\"\n\n\"Is it\u2026is it Andy?\" asked Sandra with a catch in her voice.\n\n\"Probably. If I remember the clothing description correctly, it's a match. We won't know for certain until the M.E. examines the body. I am sorry for your loss.\"\n\nSandra's face turned white and she began to sway back and forth. She would have fallen if Father Roberts and Gretta had not caught and held her up by the arms.\n\n\"I think it would be best if you went back to the office,\" said Father Roberts to Sandra. He looked at Colleen. \"With your permission.\"\n\n\"I'll meet you in the office,\" said Colleen. \"I know this must be a shock.\"\n\n\"The second one today that she didn't need,\" replied Father Roberts as he and Gretta led Sandra away.\n\n\"The second one\u2026?\" asked Colleen\n\nSergi motioned for Anya to follow Father Roberts. He then said, \"Mrs. Haskins' second husband has just died and his body is in the church. She vas coming in to finalize the funeral arrangements with Father Roberts. Vill she be suspected in her first husband's murder?\"\n\n\"If this is her first husband,\" said Colleen. \"I believe she was with her mother the entire time of Vettana's disappearance. That's a good alibi. Who's this Haskins' guy?\"\n\n\"The man who renovated the church and probably built this wall,\" stated Sergi.\n\nColleen's eyebrows arched upward and she glanced back and forth between Sergi and Tom. Tom could see the thoughts racing through her mind. Colleen finally shook her head and pulled out her radio to call for the Crime Lab and the Medical Examiner.\n\n\"You know you just put her back in the bullseye,\" stated Colleen to Sergi.\n\n\"These are facts any detective vould have found,\" said Sergi. \"She told us Mr. Haskins gave her a loan vhen she vas bankrupt an then gave her a job. The company's records vill verify that. Do you think it might be that Mr. Haskins wanted her?\"\n\nColleen did not answer him. Several hours passed by before Colleen, Sergi, and Tom came back to the office. The lab technicians and the crew from the M.E.'s office had come and gone. Another officer had dropped off a thick file folder to Colleen, who perused through it. In the office, Colleen pulled out a notepad and pen before turning to face Sandra.\n\n\"When did you meet your second husband?\" she asked Sandra.\n\n\"Over five years ago,\" replied Sandra. \"Milton's company was having a huge success. He threw a grand party on the 4th of July for his employees and their families. That was when I first met him. I didn't see him again until after Andy's disappearance.\"\n\n\"I was correct in that the clothing on the body matches that which Andy Vettana was wearing when he disappeared,\" stated Colleen. \"I sure the body is his. The body's skull was fractured by a blow from the back. That means it had to be someone who had access to the church and knew about the renovation.\"\n\n\"It might mean more than that,\" said Sergi. \"The blueprint shows that the vall renovation was added after the repair vork had been started.\"\n\n\"Added? Added by whom?\" asked Colleen.\n\n\"Uh\u2026it was added by Milton Haskins,\" said Father Roberts meekly. \"He told me the wall needed additional support.\"\n\n\"What does that mean?\" asked Sandra, looking around. \"What are you saying?'\n\nColleen's eyes met Tom's and their faces mirrored the sympathy and pity they both felt for Sandra. Colleen snapped her notebook close and stood up.\n\n\"Father, I will need to borrow these blueprints,\" she said briskly. She turned to face Sandra. \"I am sorry and I'm afraid we will have to contact you tomorrow, okay?\"\n\nSandra just nodded dumbly, unable to comprehend or grasp a coherent thought. Colleen sighed, rolled up the blueprints and left. Sandra shook off her incoherence at the sound of the closing door.\n\n\"I want to see my husband's coffin,\" she announced as she stood up.\n\n\"Um\u2026Er\u2026I don't\u2026\" stammered Father Roberts as he looked to Sergi for direction.\n\n\"Ve need to see it anyway,\" said Sergi. \"I think it vould be best if you, Anya, and Gretta stayed here.\"\n\n\"Grandfather!\" protested Anya.\n\n\"I know. I am a male chauvinistic pig, but ve do not know if it has gone or not. It vould be best if just Thomas and I vent vith Mrs. Haskins.\"\n\nThe look on Anya's face bespoke her dislike to his plan, but she did not say anything else against it. Tom and Sergi ushered Sandra out of the office and into the Narthex. Sandra's face was set and expressionless as Tom held open the door for her. As they walked up the center aisle, a puzzled look came to Sandra's face.\n\n\"Where is his coffin?\" she asked. \"It should be right here.\"\n\n\"It is in the baptistery,\" said Sergi as he led her around to the alcove.\n\nSandra stopped as soon as she could see through the arch into the room beyond. The iridescent light still surrounded Haskins' coffin. The casket shook and rattled as if something was attacking it. Sandra turned to Sergi in fear.\n\n\"What is that?\" she whispered, her voice breaking in fright.\n\n\"The spirit of your first husband trying to take revenge for his murder,\" said Sergi softly. \"I had hoped that finding his body vould have released it.\"\n\n\"Can I\u2026Can I talk to him?\" asked Sandra.\n\n\"I wouldn't,\" advised Tom. \"He attacked us earlier.\"\n\n\"Why?\" asked Sandra.\n\n\"Angry that he vas murdered,\" stated Sergi. \"Angry that you married his killer. Vhatever bonds held his spirit in check vere removed by Haskins' death. If you wish, ve can proceed, but vith caution.\"\n\nThey walked up the steps to the baptistery and stood in the archway. Sandra called out tentatively, \"Andy?\"\n\nThe blue light froze and the coffin ceased its rocking. Tom tried to swallow, but his mouth was dry. The blue light flew off the coffin straight at them. Before they could do anything, Tom and Sergi were knocked backwards by a tremendous force and landed in a heap up against the front pew. Sandra screamed as the blue light surrounded her and lifted her up off the floor.\n\n\"Please, I didn't know!\" pleaded Sandra to the light. \"No one knew! I've been in hell all these years since you've been gone. Haskins meant nothing. He was never the man you were.\"\n\nTom made to get up and rescue Sandra. He stopped when Sergi grabbed a hold of his arm and held him back.\n\n\"Sit still,\" ordered Sergi. \"Look!\"\n\nTom looked up. The blue light had ceased lifting Sandra up. It held her still, her feet a goof foot above the floor, as if it was contemplating her words. Suddenly, Sandra gasped as she felt one of her breasts being fondled. The touch moved across her stomach to rub the V between her legs. Sandra sighed at the remembrance of a touch from five years ago.\n\n\"Oh, yeah, baby,\" she crooned as she closed her eyes. \"You always were a horny devil. You know how I like it.\"\n\nTom jerked in shock as Sandra's blouse was quickly yanked over her head by an invisible force. Her breasts, held by a sheer lace bra, bounced free as the bra was pulled upwards. The spirit did not pull her bra completely off, but used it to tie her wrists together. Sandra gasped as she was spun around and her arms lifted over the tall statue's head. Sandra was lowered until she was just hanging by her wrist and the spirit whipped off her skirt and panties. The blue light moved back a foot or two away from her.\n\nTom gasped as the blue light coalesced into a translucent human shape. Tom got the impression of a beard and ponytail, but the image was too indistinct and blurred to make out any other details. The ghost did not look at Tom or Sergi, but moved up behind Sandra.\n\nAndy's ghost grabbed Sandra by the hips and pulled them upward. Then, with one quick lunge, he sank his phantom prick all the way into Sandra's waiting cunt. Sandra yelled in delight as her pussy lips were pushed apart and a fullness invaded her vagina. Tom could only watch wide-eyed as the ghost began to pound its eerie blue cock in and out of Sandra's hot pussy.\n\nTom grimaced as his cock became hard in a very uncomfortable position. He shifted it around so that it was not bending in half. Sandra's body shook with each impact as she gasped and panted in passion. Tom was half surprised not to see the statue rocking back and forth from the intensity.\n\n\"Oh. God! Andy, YES!!!\" cried out Sandra. \"Fuck me! Fuck me!\"\n\nSandra stopped chanting as her passion rose and she could no longer catch her breath. Her body was shaking and her tits jiggling as the ghost continued to pound her pussy. Suddenly, her body tensed up as her orgasm exploded inside her. Sandra, hooked up by her wrists, could do nothing, but cry out in the throes of her sexual release.\n\nAndy's ghost pumped his transparent cock in and out of Sandra's hot, dripping cunt. Sandra hung her head down limply as her orgasm had drained all the energy out of her body. Tom saw the ghost shimmer brightly and then shimmer again. It rammed its cock all the way into Sandra and held it there.\n\n\"Oh, God!...Oh, yes!!!!\" moaned Sandra as she felt a hot, unearthly liquid spurt deep into her womb.\n\nThe scene before Tom's eyes remained frozen for the longest time. In fact, it was only a couple of moments before the ghost withdrew its prick from Sandra and gently lowered her hips. Sandra was still panting heavily as the ghost leaned over to kiss her brow and caress her hair. It turned to face Tom and Sergi, raised an arm and disappeared completely.\n\n\"Come, Thomas,\" said Sergi. \"We must cut her down.\"\n\nSandra hung limply from the statue, her body quivering every few seconds or so from orgasmic aftershocks. Tom stopped, acutely embarrassed, when he realized that he would have to hold the naked woman up while Sergi Undid her wrists. Licking his dry lips, Tom grasped Sandra around the waist and lifted her up. Sergi was unable to untie the bra and had to cut it with a pocketknife.\n\n\"Thank you,\" panted Sandra as Tom lowered her to the floor. \"He's gone, isn't he?\"\n\n\"I believe so,\" stated Sergi. \"Are you alright?\"\n\n\"Yes, better than I have been since Andy's disappearance,\" replied Sandra as she bent over to pick up her blouse and skirt. Tom averted his gaze when he caught himself staring at her hanging breasts.\n\nSandra quickly dressed, sans bra. She, Tom and Sergi headed out of the church and back to the office. Anya quickly took in Sandra's disheveled state and raised a questioning eyebrow at her grandfather. Sergi made a small motion with his hand which forestalled her questions and comments.\n\n\"Well, what happened?\" asked Father Roberts.\n\n\"The spirit is gone,\" stated Sergi.\n\n\"It is? Great! We can move Milton's coffin back to its proper place.\"\n\n\"I'm afraid not, Father Roberts,\" said Sandra flatly, startling everyone. \"Please leave the coffin where it is. I'll have the funeral home come by to pick it up and bury it.\"\n\n\"What? Why?\" asked Father Roberts in shock. \"His last wishes\u2026I mean\u2026\"\n\n\"If you are worried about the lost of the endowment the old bastard left to the church so he could be buried in grand style, I'll make sure it's paid,\" said Sandra harshly. Her voice and face then softened at Father Robert's hurt look. \"If it's his soul you're looking after, please feel free to say something at the gravesite.'\n\n\"I'm ashamed to say I was thinking about the money more than his soul,\" admitted Father Roberts. \"Have the funeral director contact me before they come and I'll go to the gravesite.'\n\n\"I believe that is our cue to leave,\" stated Sergi. \"I will call you tomorrow, Timothy. Mrs. Haskins, it has been a pleasure.\"\n\n\"That will be Miss Vettana, Dr. Maleski and please make it Sandra. I will also be calling on you later.\""
    ],
    "authorname": "JohnEvans",
    "tags": [
        "vampire",
        "ghost",
        "big tits"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/fated-destiny-ch-02"
}