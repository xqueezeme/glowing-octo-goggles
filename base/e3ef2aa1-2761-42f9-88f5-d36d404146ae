{
    "title": "The Maestro Ch. 07",
    "pages": [
        "Note: This is the (really, truly) final chapter of the series. It's possible I might write a few stand-alone vignettes, but I have other works to focus on for now. Thanks once more for all the support and feedback I got during this process. It is all so appreciated! \n\n-----\n\nSummer was finally making its presence known in the foggy coastal city where Claire was at that moment wading knee-deep in the restless ocean. She had gone out in a little black bikini, glad to have a warmish breeze brushing her bare skin. She hadn't thought about the fact that a variety of different bruises, yellowish-green older ones along with purplish new ones, would be showing - on her thighs, upper arms, wrists and ankles. A few strange stares had come her way before she'd figured out what was bothering people. She had mostly ignored them, wandering out into the water.\n\nThe ocean had always been her \"happy place.\" Maybe it was the calm, rhythmic way that the foamy waves rushed in and lingered on the sands before draining away. Maybe it was the way that the water could be a bright, sparkling blue and turn to a muted grey-green in a few moments. It had been her favorite vacation spot as a kid, the place she'd driven when she got her very first car to get away from it all, a place she turned to whenever she felt sad or confused.\n\nHer life had gotten very complicated as of late. It was August, almost halfway in between the upcoming start of her second season with the symphony and her trip to Paris with Sebastien, her Maestro, her lover, and inexplicably, her friend. She had known him just over a year now, and their relationship had changed so much in that time that it was dizzying to think of it.\n\nIt was only in the past few weeks that she had realized how deeply she cared for him, in fact that she loved him. Suddenly she was looking at life, at everything, so much more seriously. So instead of just joy and anticipation, when she saw Sebastien, or thought of him, those feelings came along with the heavy burden of the secret she was keeping. And why, she asked herself, was she keeping such a secret, when she knew - or thought she knew - that Sebastien also cared for her? She had met his family, for goodness' sake. Always, she came to the same conclusion. He may have cared for her, but he had never given any indication that he thought of her as a partner, someone to be with long term.\n\nShe had been pulling away, little by little, since they had returned from Paris. Of course the apartment he had fixed up there was amazing, and beautiful, and the part of her that secretly hoped for more wanted to believe that it was an indication that he meant there to be more between them. Hadn't he said he had bought it, essentially, to bring her to? Well, the more practical part of her would respond, he probably wanted it anyway, or he could always sell it, or use it with another woman in the future, when their sexual attraction had fizzled out and they separated.\n\nStill, it didn't seem very likely that it would ever fizzle. For her part, Claire felt that something big, something almost integral to her very person had been awakened by Sebastien. In daily life, she was strong, opinionated, ambitious, passionate about everything she pursued; the very epitome, she sometimes thought, of the modern woman. Yet with this man, as with no one before, she found such great joy - and arousal - in submitting to his every desire (well, almost every desire) and to be punished and pleasured by him. She sometimes tried to picture having a \"normal\" sexual relationship again, and it just didn't seem like it could ever be as fulfilling. Perhaps she would meet someone who would light the same fires in her as Sebastien could, but she doubted it.\n\nThen, too, there was this odd tug-of-war between them. She was not really the pursuer, as she had been in previous relationships with men. Rather, she was certainly the pursued. And yet, it wasn't so simple as that, either. She pulled away from Sebastien, pushed him away from her, resisted him at every turn, challenged and excited him. Even as she was pulling away from him this time, wasn't it just as much for the anticipation of the punishment she would receive as it was because she had felt the need for a little breathing room? Maybe more. She had thought many times about what would happen if they made their relationship really \"official.\" If they seriously dated or even, she hesitated to think, got married, would they still have that same friction? If they did, would it constantly threaten to tear them apart? If they didn't, would they simply become bored or disillusioned, and drift away?\n\nIt hurt too much to think about. So she sought the solitude of the coast, the companiable bubbling of the waves that didn't ask for anything in return.\n\nShe trailed her fingertips through the surf, feeling the chill from the waters raising goosebumps on her skin. She wandered aimlessly, thinking of everything, thinking of nothing at all. She spent about an hour there, just walking back and forth. It was the first beach-worthy day in several weeks, summers in that little city typically being blanketed by the chill fog for what in the rest of the country were the three hottest months of the year. As she approached the rocks where she had left her bag and shoes, she involuntarily tensed with the sudden feeling that she was being observed.\n\nClaire took a moment to think of how she must look. She cut a petite, somewhat slim figure, her bathing suit covering just enough, her body curved in the right places. Her deep auburn hair was pinned loosely to her head, wispy tendrils giving her a charmingly windswept appearance. Though she had probably looked either pensive or simply relaxed walking in the shallow water, anyone perceptive would have noticed that she was moving more conscientiously. Mocking herself internally, she assumed a pose against the rock that she hoped radiated peaceful indifference, and then turned her head toward the beach.\n\nA young man was watching her. He was lounging on the sand, a book forgotten in his hand. She wondered what she would have done if she had been totally single, unattached. Would she have waited for him to come to her? Would she have wandered over to him and introduced herself? Would she have simply gone about her day? Impossible to know. The young man had shifted several times, seeming to be convincing himself to get up, and then think differently of it.\n\nHis attention shifted to the side as someone passed him, and Claire followed his gaze up to a sight that pierced her heart. Sebastien. She wasn't nearly as surprised as she should have been, but somehow he always seemed to know things about her that she had naively thought were her own private secrets.\n\nHe was tall, thin, his straight black hair, dark eyes, dark suit making him stand out among the other beachgoers, uniformly shorter, tanner, blonder, more casual. Still, the suit always fit him like a second skin - well-tailored, yes, but it was more than that. He was coming closer, and she noticed that he was actually barefoot. Of course that made sense for the beach, but she still caught her breath. Somehow a barefoot man in a suit was so sexy to her. Or was it just him?\n\nShe met his eyes, willing her expression not to change to what she was feeling inside, any of the feelings: trepidation, desire, fear, or hot, sweet, passion. His face, too, gave away nothing. She turned her face away, watching the ocean and breathing in slowly to master her heartbeat.\n\nEven as she was still processing the sound of sand shifting aside slowly, she felt his hand brush her stomach, which quivered with the touch. She looked at him and before she could speak, his mouth was on hers, hot, wet. She let out a soft sound without meaning to and he crushed his body against hers, pressing her into the rough rocky surface behind her. As they kissed, she tried to think of something to say when their lips parted. Maybe something funny, something sexy, even something sweet and romantic.\n\nAs he pulled away from her, she felt herself fighting against the urge to sigh. He was so handsome. She twisted her mouth into a sulk instead.\n\n\"How do you always know where I am?\"\n\nA smile ghosted around his lips, but his eyes were serious. \"Why are you always running off someplace I need to find you, mon abeille?\"\n\n-----\n\nRehearsals had started with a vengeance for the symphony, after Claire and Sebastien's vacation to Paris. They were leading the season off with a massive undertaking in the theme of love: sixteenth-century Italian madrigals sung by double choir, and a number of operatic arias with lush orchestration, sung by soloists, sometimes in duos or trios. Claire had eagerly participated in suggesting pieces for the concert, but had lately turned to her music in dread.\n\nOnce she realized the depths of her feelings for Sebastien, it seemed the absolute height of ridiculousness to be on stage, singing in front of him about love. He was no idiot. Surely he would see through the pleasant facade she put on for singing to the warm depths of feeling underneath. Their eyes might meet, and he would realize the truth, and she would die of humiliation.\n\nLuckily, the sheer number of performers meant that she was not put on the spot in every rehearsal. She dutifully showed up to each one, even when her pieces were not even on the schedule. The music really was gorgeous, and she would have been a fool to pass up the opportunity to absorb as much as possible. Some of these songs had not ever been recorded, and to hear them being performed was such a treat.\n\nStill, being the soprano meant that she participated in more pieces than any soloist except the tenor, and she was frequently called upon to perform on cue. Some days, she was able to sublimate her discomfort into a convincing show of cheer. Other times, she was driven to distraction by Sebastien's sheer presence, the strange feeling of singing love songs near him, the memory of him inside her, bringing her to orgasm again and again.\n\nAfter one such reverie, she was reprimanded sharply by Sebastien.\n\n\"Claire! Your attention, please!\"\n\n\"Sorry, Maestro,\" she murmured demurely, seeing his eyes glint in pleasure. So she was not the only one whose mind wandered to dark places, she thought with warm satisfaction.\n\nIt was with some measure of relief that she escaped from rehearsal that day. She glanced ruefully at her running shoes, hanging neglected from a hook in her dressing room. It seemed that she had little need of running of excess energy these days. She should have been gaining weight, she supposed, but then the fine trembling in the tautness of her muscles as Sebastien tortured and teased her probably burned plenty of calories.\n\nShe had just stepped onto the sidewalk outside the symphony hall, when a tall, handsome man encircled her waist with his arm and drew her into an embrace.\n\n\"Ren\u00e9, please, what if they see you?\" she protested, referring to the other musicians.\n\n\"What if they do? It's not as if they know about your affair with the illustrious conductor, do they?\" he teased.\n\n\"Shhh! They don't, but I don't want them asking me any questions either. What are you doing downtown?\"\n\n\"I come to you as the humble servant of the Maestro,\" he said with a little bow. \"He requests your presence in his automobile.\"\n\nClaire followed him, not feeling nearly as reluctant as she thought she should. They walked a block, then around the corner toward the middle of the block, where she saw the town car parked. Ren\u00e9 held the door open for her, then walked off toward the driver's seat as she stepped inside.\n\nActing swiftly while her back was turned to shut the door, Sebastien grasped her wrists, jerking them together behind her back. She gasped, squirming at the sudden lack of movement. Then, just as quickly, he pulled her around and over his lap. He released her wrists, but she found that they had been tied together. Helpless again. She felt him reaching beneath her lap to undo her pants.\n\n\"Maestro, what are you doing?\" she cried. In response, his hand came down firmly on her backside.\n\n\"Quiet, Claire. If you cannot use your mouth for singing, or to explain your poor performance, do not use it at all.\" The harsh tone of his voice, more than his words, silenced her. He sounded disappointed in her. Yet, she thought wryly, he seemed determined to make the best of it.\n\nHe had finally succeeded in sliding her pants down around her knees, and was running his finger along the lace edge of her thong panties.\n\n\"At least you've dressed the part,\" he murmured. Claire flushed, feeling very exposed, even though his windows were tinted.\n\n\"Please, Maestro, people can see me!\" A sharp slap fell upon her left buttock, and she winced in pain.\n\n\"Very well, Ren\u00e9, you may take us home now.\" The car began to move, and Sebastien gave her another few spanks. \"I wanted to administer your punishment while your offenses were still fresh in your mind. However, since I have left my usual implements at home, it seems the personal touch will have to suffice.\"\n\nAs he spoke, he struck her slowly, methodically, alternating locations so as to bruise her tender flesh evenly. She whimpered and writhed in his lap, hoping each blow would be the last. Her skin was tingling, and she knew it must already be red. One particularly hard spank brought tears to her eyes. Soon, she was sniffling pathetically into the fabric of the seat as he spanked her. The growing warmth between her legs did nothing to lessen the embarrassment of her situation. She imagined scores of pedestrians gawking at her upturned ass as it received the punishment. Her face was as red as her buttocks when he finally let her up.\n\nShe was hoping to be released and re-dressed, but soon discovered things would not go her way. Sebastien helped her sit up, but left her hands tied uncomfortably behind her back, now pinned against the seat. He left her pants around her knees. She wiggled her hips, even though she knew it would do no good.\n\n\"Ah, how careless of me, mon abeille,\" he said. But instead of helping her with her pants, he slid his fingers between her legs, eliciting a choked moan as he grazed her damp panties. \"I know how you get. It's so terribly impolite to leave a lady waiting, don't you think?\" He moved her panties aside, sliding one finger up into her. Bolts of pleasure raced through her as his palm slid against her clit. But each time she felt herself coming close to an orgasm, his hand conveniently shifted somewhere less pleasurable until she pulled back from the edge.\n\nBy the time they had reached the apartment building, Claire was nearly wild with desire and pent-up arousal. Ren\u00e9 helped her out of the car, sliding her pants abrasively over her still-tender buttocks. She followed them through the lobby, shivering slightly when her pants pressed too tightly into her inflamed center.\n\nUpstairs, she was antsy to get up to Sebastien's bedroom, eager for him to finish what he had started. Her breath sped up as the men removed her clothes, pulse quickened as they tied her to the bed. Then they, too, stripped off their clothes, climbing into bed, and she very nearly moaned aloud in anticipation.\n\nShe was surprised when neither man turned to her, however, instead coming together and kissing deeply. Claire watched in fascination as they stroked each other to hardness, and then collapsed onto the bed to suck each other's cocks. She realized that she had never watched any man give another oral sex, much less two at the same time, and she found it arousing and interesting.\n\nWhen Sebastien's tongue began to explore further down between Ren\u00e9's buttocks, Claire was neither surprised nor bothered. His finger slid into Ren\u00e9 slowly, wiggling back and forth. A muffled moan came from the other end of the bed. Claire watched the finger-fucking with a bit of jealousy, but it was nothing compared to how she felt when Ren\u00e9 got to his hands and knees, offering himself to Sebastien.\n\nSebastien rolled a condom onto his cock, still slick from Ren\u00e9's mouth, and pushed it into the other man, inch by slow inch. His hands caressed Ren\u00e9's lower back and buttocks. He leaned forward to murmur something in the other man's ear. Claire felt utterly left out, no more interesting or useful than a piece of furniture. She'd seen them have sex before, of course, many times, but she had always been involved, wanted. For the first time, a hot wash of jealousy rushed over her. It should have been her underneath Sebastien. He had no right to cut her out completely, to make it so obvious that his mind was not on her, even as she sat so close to him. She was angry at him, and angry at herself as her irritation fought with arousal inside her body.\n\nThen she thought bitterly, she supposed she knew how he felt during rehearsals, when her mind wandered away from the task on hand, and him. She turned away from Sebastien pounding into Ren\u00e9, but couldn't block out the moans. Still, she couldn't watch anymore. It was turning her on, and she loved it, and hated loving it. She squeezed her eyes shut for a moment, but then turned her head back and opened them. If he could do this to her, she could at least stare sullenly back at him. But it appeared that he had been watching her already.\n\n\"I think,\" he said softly, \"mon abeille has had more than enough punishment. Have you not?\" Claire's pride wanted her to lift her chin, ignore him. But her hurt feelings won out, and she nodded once, slowly. Sebastien slid his sheathed cock out of Ren\u00e9, making the other man shiver. He leaned over Claire, loosening her bonds. \"I wonder if it is a blessing or a curse to have such a tender spot in my heart for you. I want nothing more than to see you happy.\"\n\nShe shifted uncomfortably. She didn't know what to say. She only knew that she ached to be touched, by one of them, by both of them. Then Sebastien pulled her over his lap, tilting her hips back so that both men could enter her. She let out a stilted moan as they did. She felt so full, so complete. She kissed each in turn as they thrust gently inside her.\n\nHands gripped her everywhere; now gripping her buttocks, now drawing slippery circles on her clit. She cried out as she came, tightening around them. Several more thrusts and Ren\u00e9 was groaning as he emptied himself into her, followed shortly by Sebastien. Claire, sighed, leaning back against Ren\u00e9. Sebastien was already stepping off the bed.\n\n\"After such a long day, I think a shower is in order. Would you care to join me, Claire?\" She murmured a dissent, and he pursed his lips. \"Still angry with me, mon abeille?\" She shook her head, and he disappeared into the bathroom. Claire fell back against the pillows, looking up at Ren\u00e9, who was grinning.\n\n\"What?\"\n\n\"Now that we are alone, I suppose I can have my way with you.\" She raised an eyebrow, and he laughed. \"Why don't you tell him what is bothering you?\" he asked, serious now.\n\n\"I, well, I don't think he would understand. Or maybe I don't think he would be happy to hear it.\"\n\n\"I think you underestimate mon fr\u00e8re.\"\n\n\"Maybe,\" she said, unconvinced.\n\n\"In my experience, it is always better to get the unpleasant thing out of the way so that we can go on with our lives. Besides, you might be surprised.\"\n\n\"If you knew what it was, you wouldn't think so,\" she said. He shrugged, rising to pull his clothes on.\n\n\"Well, what I am sure of is that you will never know if you do not tell him. Please excuse me, I am sure he will not mind if I left myself out.\"\n\nThen he was gone. Claire pulled the warm blankets around herself, and soon drifted off to sleep.\n\n-----\n\nLate Sunday morning, Claire awoke in a tangle of sheets and warm limbs. Extracting herself carefully, she took her hairbrush from the bedside table and ran it through her hair. The soft, shiny waves tumbled down around her naked shoulders as she watched Sebastien in repose, the muted sunlight washing over him through the gauze curtains. There was something so inexplicably sexy about him, the aura of power she sensed even as he slept. Just the knowledge that he could wake up at any moment and force her to fulfill the dark desires they both had was at once terrifying and powerfully arousing.",
        "As soon as she'd put the brush down, his hand lazily crept over to her, circling her ankle and pulling her back down into the nest of covers. He pulled her in against his body, still hot from sleep, kissing her deeply. His fingers splayed over her bare breasts, caressing them softly. As his tongue ran over her lips and slipped between them, the long fingers of one hand mirrored it, gently stroking and probing her already wet depths.\n\nHe nibbled a path down her neck, and she let out a soft sigh. Her stomach clenched in anticipation as he disappeared under the blanket. He held her hips firmly in place with one hand as his tongue replaced his fingers, flicking at her most sensitive spots.\n\nShe gasped aloud, as much in pleasure as in amazement that no matter how deeply he took her, how much sensation she sometimes bore, just the feeling of his mouth on her could still drive her to such heights. She felt two of his fingers sliding into her, rocking back and forth. It elicited soft, wet noise, simultaneously embarrassing and arousing her further. God, she was always so wet for him.\n\nShe pushed the blanket back, and his eyes met hers for the first time that morning.\n\n\"I had to see you,\" she murmured. The sight of him between her legs made her quiver. The thought of it being her Master there, licking her, finger fucking her, heightened the sensations she felt. Throwing her head back, she gave in to the pleasure, feeling her body tighten around his invading fingers.\n\nHe nibbled at her gently as she came down, eyes rolled up, watching her, patient. She opened her eyes, half-dazed, and crawled down to him. She kissed him, wanting to taste herself on his lips. Her hand ran down the front of him to cup his cock, already half hard. He rolled onto his back, and she leaned over him, sliding her mouth down over him.\n\nShe felt his hand tangling in her hair, guiding her head ever so gently. Such control. She loved watching him fight to keep it.Her hand wrapped around his cock in a firm grip as her head bobbed up and down. She swirled her tongue slickly around the tip, as she stroked him with steady, even motions. She felt the tension in his body as he struggled against his release, and abruptly let go of him. The breath left him in a gusty sigh and he sat up, reaching for her again.\n\nHis eyes roamed her body as she crawled toward him. She swung one leg over him and sank down until he was buried in her pussy. Sebastien gathered her close to him, kissing her lips, her neck, sucking on her nipples even as her breasts bounced against him. His hands squeezed her buttocks firmly, and she let her eyes unfocus, thinking only of her pleasure, and the man whose arms she was in.\n\nHe was so warm, his scent intoxicating. She felt the prickles of pleasure building again as she rode him. He captured her mouth with his, wrapping his arms around her, and pulling her as close as possible as he made love to her mouth.\n\nAh, love. It was like an emotion she'd never felt before that moment, like the newness of eating your favorite food after a long deprivation, rediscovering the deliciousness. Her heart swelled with tenderness for Sebastien, with a sorrow that her words must remain unspoken. She was shaking all over, feeling pleasure washing over her, and she knew she would burst.\n\nSebastien was murmuring to her in French, so sweetly, but the buzzing in Claire's head drowned out everything but \"mon abeille,\" over and over.\n\n\"Maestro, I...I...\" she whispered. The words formed on her lips, but at that moment the dam broke. When it did, it was not tender words that rushed out, but fat teardrops that dripped onto Sebastien's shoulder as she rode the edge of pleasure, startling him. She felt him grow harder inside her, and her knees grew weak. She buried her face in his neck, feeling his pulse, tasting the salt of his skin and her tears.\n\n\"Mon abeille,\" he said with concern.\n\n\"No, please, keep going,\" she interrupted, sliding off his lap and onto her hands and knees. She sniffed, burying her head in a pillow. Her heart was aching, but she still wanted him, so badly.\n\n\"Claire, are you all right? Perhaps we should-\"\n\n\"No! Please finish. Please, please,\" she begged.\n\n\"But you are crying,\" he protested.\n\n\"I'm fine. I want you to,\" she insisted, her breath hitching unevenly. So he thrust back into her, drawing a moan from the back of her throat. He grasped her waist, fucking her as deeply as he could go. Slipping one hand beneath her, he rubbed her clit firmly with his fingertips.\n\nClaire struggled to master her tears, her breathing. She felt the orgasm approaching like a runaway freight train, but it was as if something intangible kept it from barreling into her. It drove her crazy.\n\n\"Ahh, ahh, I can't, I can't,\" she moaned. Can't come again, can't say I love you, can't leave you. \"Maestro, please...\"\n\n\"What, mon abeille?\"\n\n\"Fuck me,\" she cried, gasping as he complied with a pace faster than she expected. She could hear their skin slapping together, the sparks of pain and pleasure as he bumped into her as far as he could go. It would never be enough, she thought, she would always want more.\n\nSebastien's thrusting grew erratic, and with a final push forward and a loud exhalation, she felt him shooting his come deeply into her. Then she, too, cried out, fingers grasping desperately at the bedsheets as she shivered violently.\n\nClaire realized at once that she had been holding her breath. She felt Sebastien's hands stroking her back as her body calmed. She didn't resist as he pulled her up to face him, but turned her face away.\n\n\"Don't look at me,\" she mumbled. He took her chin firmly, turning her head back to look at her squarely.\n\n\"Enough of that nonsense,\" he said shortly. \"Now, what is wrong?\"\n\nShe looked at him, so serious now in the bright noon sunshine. Her lip trembled.\n\n\"I can't tell you.\"\n\n\"Can't tell me?\" he echoed with consternation. \"Why ever not?\"\n\n\"I just can't,\" she said miserably. \"Please don't be angry with me.\"\n\nSebastien sighed. \"You know I am not,\" he said more softly. \"But make no mistake,\" he added in an ominous tone. \"You have been acting strangely, and I will find out why, one way or another.\"\n\nAt that moment, she had no doubt.\n\n-----\n\nIt was late August, and now nearly every day was sunny and warm, though it was growing darker and stormier in Claire's heart. She caught Sebastien giving her strange looks. Lovely nights with him grew uncomfortable as the words she longed to say died on her lips, leaving inadequate phrases behind. Ren\u00e9, too, shook his head in baffled disapproval, though strangely it seemed equally directed at Sebastien and herself.\n\nIn the middle of a particularly grueling week of rehearsals, Claire arrived a bit earlier than usual, to find that the auditorium wasn't set up as it generally was. The music stands were clustered in one corner of the stage, and the chairs ranged in a wide semi-circle around the back of the room. In the center of the stage, she saw Sebastien conversing casually with two people she didn't know. What was going on? She leaned against the wall, half-hidden in the shadows, watching them.\n\nSebastien was listening attentively with a charming smile as the woman was talking animatedly to him. Then the man must have made a joke, because all three of them laughed. Claire twirled her hair for a moment, not wanting to interrupt the conversation. The decision was made for her, though, as she suddenly sneezed. It was soft, but loud enough in the echoing room to get everyone's attenion.\n\nShe shuffled her feet in embarrassment as they all glanced in her direction, but her heart twinged when she saw the warm smile on Sebastien's face. He excused himself to the others, and strode across the stage toward her, deliberately slow, so that she had ample time to watch him and anticipate his touch. All he did was run his finger lightly down her cheek, but the touch - and the look in his eyes - made her shiver.\n\n\"Mon abeille, I am pleased to see you here today,\" he said, reminding her that she hadn't been on the day's rehearsal schedule. \"We have a surprise today.\"\n\n\"What's going on?\"\n\n\"You'll see,\" was all he would say.\n\nWhen the orchestra was gathered, Sebastien addressed them. \"You have all been working very hard on the repertoire for our season opener, and I would like to commend you on it. But I feel as if a little essential something is missing from your performances, something I hope to remedy today. Most people lack a basic bodily awareness of this music, which was, after all, largely intended as music to dance to. So I have invited Scott and Mary, local dance instructors, to teach us all some of the traditional dances of the time period.\"\n\nA wave of sound rose as members of the orchestra murmured to each other. Claire heard one of the cellists exclaim to the bass player sitting beside her in surprise.\n\n\"This is so cool! I'm pretty sure he's never done anything like this, at least no while I've been with the symphony.\"\n\n\"I think you're right. But don't you think he's been acting really weird ever since rehearsals started up again?\"\n\n\"Yeah, I guess so. Almost like he's, I dunno, happier.\"\n\n\"Maybe he's getting laid.\"\n\n\"Oh, sure, like he ever had a problem with that before.\"\n\n\"No, seriously! Maybe he's dating someone.\"\n\n\"You don't think we'd know? There's never anyone around.\"\n\n\"Hm. Maybe he's dating one of us,\" said the bass player thoughtfully. Claire stiffened a little, but both women just giggled dismissively after they'd thought about it.\n\n\"Everyone, quiet please. I know it is a bit unusual, but I think it will help. It had better,\" he went on in a warning tone, \"because I can't fire all of you.\" Nervous laughter from the musicians at this. Sebastien gestured to the instructors, moving off to the side to lean against the wall and watch.\n\nScott and Mary started up the music recording they'd brought, and demonstrated the dance moves.\n\n\"It may seem staid and conservative compared to the close-quarters dancing often seen today,\" Scott was saying, \"but remember that for many young people, this might be the closest they'd get to their intended until their wedding night. In a way, even holding someone at arm's length could be considered a kind of foreplay.\" He wiggled his eyebrows, twirling Mary around the floor and eliciting laughter from the orchestra.\n\nClaire stole a look at Sebastien, but he wasn't looking at her. He was watching the dancers with a slightly amused expression on his face. As if he sensed her looking at him, he turned his head, finding her at the back of the group. He quirked an eyebrow at her, and she blushed, quickly looking away.\n\n\"Well, do you think you've seen enough of this one?\" called Mary. \"Why don't you all get up, find a partner, and we'll try it out!\"\n\nClaire hung back, not feeling as eager as the others to grab a friendly fellow musician and twirl around with them. She figured that she would just wait to see if there was anyone left without a partner, and then she could pair up with them. But there was no one left. The couples were already ranging in a circle around the stage, just like the ballrooms in movies.\n\nShe shifted in her chair, wondering if she should stay seated, or get up and move to a place even more out of the way. But Scott, who was walking around and adjusting the starting positions of a few musicians, saw her fidgeting.\n\n\"Well, that's no good. You've got to have a partner, too!\" he exclaimed.\n\n\"No, really, I'd rather just watch.\"\n\n\"Nonsense. Well, Maestro Boulet, how about you?\" he asked teasingly.\n\n\"Yes, Maestro, come on,\" some of the musicians urged, obviously in a good humor and hoping their conductor was as well. Sebastien pushed himself off the wall, and walked over to her. She swallowed. This would be one of the very few times he had ever voluntarily touched her in front of the orchestra. He bowed slightly before her, holding out his hand.\n\n\"Mon abeille,\" he murmured out of earshot of the others, \"would you dance with me?\" She felt the blood rushing to her cheeks as some of the musicians whistled or called out cute comments at them.\n\n\"Remind me to kill you later, Maestro,\" she grumbled, placing her hand in his and allowing him to help her up.\n\n\"Don't overstep, Claire,\" he said in a low voice. He led her into the center of the circle.\n\n\"Shouldn't we be with the others?\" Claire asked.\n\n\"Certainly not. Haven't you ever seen dance scenes in films? The stars are always in the center,\" he said, and she wasn't sure if he was teasing her or not. She frowned up at him. \"Besides,\" she added,\" I already know how to do this dance, and you can just follow my lead.\"\n\n\"Mmm, well aren't you just multi-talented,\" she mused.\n\n\"I am glad you see you've noticed,\" he said with a half-smile. He took her hand in his, setting his other lightly on her waist. Her heart leapt in her chest as he gazed down at her. The music started.\n\nSebastien spun her around easily and the world melted away. Everything narrowed down to the throbbing violins, the feel of his hand on her, the intense gaze in his eyes as he twirled her about. The others were chatting merrily, laughing as they fumbled steps and bumped into each other. But Claire had no words to say. She had been in his arms so many times before, so many ways, and yet it was an entirely new experience. Every fiber of her being wanted to close the gap between them, sink into his body, breathe in his scent.\n\nEvery step was like a drop filling her heart up until it washed over her, nearly bringing a tear to her eye. They moved so slowly, deliberately, round and round. It really did feel like a dance of seduction. Of promise. She had shifted her eyes downward until she was sure she would not cry. When she looked up again, that shining fullness of heart must have shown. Sebastien let the most tender look fill his face, and her eyelashes fluttered briefly, feeling for all the world as if any moment their lips, their hearts, would meet.\n\nThen the music stopped, and the moment was over. Claire reluctantly let her arms drop, and then she suddenly became aware that everyone else had stopped dancing, probably ages ago, and she had Sebastien had been the center of attention. There were a few exchanged glances, a few incredulous looks as Sebastien brought her hand up to his lips.\n\n\"You have beautiful form, Maestro Boulet,\" Scott said. \"And you two move so well together. That's rare to see the first time two people dance together. It is your first time, is it not? Claire was silent. Was the blush on her cheeks giving her away? She inclined her head slightly toward Sebastien, knowing he would save her from answering.\n\n\"Claire and I have not danced together before, no,\" he said, apparently choosing his words carefully. They had danced together, once, but without music it was rather different. \"But Maestro and soprano are used to moving together in other ways. Working together to make music is very similar. Claire is excellent at taking my every direction, when she wants to be.\" It was quite a compliment for Sebastien, Claire thought, and from the looks some of the musicians were giving each other, she was not the only one who did. Sebastien was either oblivious or, more likely, didn't care.\n\n\"Well, everyone, you are all free to remain here and practice your parts, of course, but I suggest you all take the afternoon off to rest instead.\" He touched Claire's shoulder, which she took as a sign that she was not free to go, and moved away to speak to Scott and Mary further.\n\nMost of the musicians wasted no time in leaving. Sebastien walked the instructors to the stage door, and Claire dawdled, playing a jaunty little tune on the piano as she waited. She heard his soft footsteps and stilled her hands, letting the soft reverberations float into the air.\n\n\"I had hoped, mon abeille, that you would consent to dance with me once more, this time in private.\" Her heart turned over as she looked up at him under lowered lashes.\n\n\"Of course, Maestro, it would be my honor.\" She placed her hand in his and allowed him to lead her back to center stage. He tapped the stereo with his shoe, and soft music broke the silence.\n\nHe took her into his arms again, guiding her smoothly across the floor. She felt more relaxed knowing they were alone, and gave herself over to the music. After many rotations around the stage, she again got the urge to close the arms-length space between them. This time, she did not stop herself.\n\nSurprising him, she stepped toward him at a time when she should have stepped away, bumping into him. She rested her head on his chest and gave out a little sigh. Taking his cue from this, he wrapped one arm securely around her back, holding her close.\n\nThe smell of his cologne was thick around her. The warmth of the room and the spinning made her head fuzzy. So when next Sebastien spoke, at first she was sure she had misheard him.\n\n\"Hmmm?\" she asked vaguely.\n\n\"I was saying that I believe it might be time to announce our, ah, involvement to the orchestra.\" \n\nClaire pushed back in surprise.\n\n\"You what?\"\n\n\"Come, surely you can't mean to keep it a secret forever. As careful as we are, we are bound to let something slip now and again. Supposing a musician had forgotten something and surprised us, even as we are now, or worse. We are lucky it has not happened yet. And after this afternoon, surely they are growing suspicious.\"\n\n\"What about this afternoon?\"\n\n\"I would have a hard time believing that anyone who saw the look on your face this afternoon could think we are only colleagues.\" Her face burned with embarrassment.\n\n\"You should have said something!\" she said indignantly.\n\n\"Oh? You think I should have leaned down and told you to stop enjoying yourself so much?\n\n\"Maybe,\" she said uncomfortably. \"Plus, you didn't see the look on your own face, so-\"\n\n\"Very well, we are both to blame!\" he said in exasperation. \"But that does not change the face that it has happened.\"\n\nA bubble of panic began rising in her throat. She couldn't do this. It wasn't what she'd had in mind for this afternoon, or for her life. She was shaking her head slowly, over and over, and backing toward the stage door.\n\nThen in a flash, she was gone, footsteps clattering as she ran. Ran away from him, and the truth. He let her go.\n\n-----\n\nLate afternoon found Claire perched on a rock at the beach, her knees drawn up to her chin, watching the surf. She didn't particularly want to think about the last words she and Sebastien had had with each other. She wanted to pretend the conversation had never even happened. She was more content to watch the tide roll in and out as the sun sank lower.\n\nThe footsteps she'd been expecting for the past hour finally crunched up behind her, and she turned to see the young man she'd first noticed days ago. Was it only days ago? It felt like months away.\n\n\"Hi,\" he said, a bit awkwardly. \"I notice you here a lot, so I thought I would introduce myself. The name's Malcolm.\" She glanced down at him, brushing stray strands of hair from her forehead.\n\n\"Pleased to meet you, Malcolm. My name's Claire.\" They chatted for a few moments about nothing in particular. She learned that Malcolm was a graduate student, and that he came to the beach for a quiet place to study. She listened to him, but her inner voice was marveling at how different their lives were, when they were probably barely different in age. His life seemed so easy, carefree, while hers had taken on a distinctly darker tone.\n\nShe noticed movement out of the corner of her eye, and looked up to see Sebastien leaning up against his car, watching them. Malcolm turned to see what she was looking at, and turned back to her.\n\n\"Oh, it's that guy. Listen, has he been giving you any trouble? You never seem happy to see him.\"\n\n\"Hmm, no, things are just... a little complicated.\"",
        "\"Well, who is he? Should I stick around?\"\n\n\"He's...well, I guess you could say he's...my boyfriend.\" The word sounded foreign to her, so collegiate and casual compared to the truth. But what was right? Lover? Master? Surely not.\n\n\"Oh!\" Malcolm sounded surprised, and Claire supposed she couldn't blame him. \"Well, I guess I'd better go. It was nice to meet you, Claire.\" She nodded vaguely as he picked his way back up to the sand. Claire slid off the other side of the boulder and wandered farther away, climbing over rocks until she'd reached a small, deserted spit of sand. It was a recent discovery for her, and she loved it because it was always empty. Even now, she saw her own track of footprints as the only ones there. Probably when the tide came in, it completely covered the sand, so people stayed away. She didn't care. Secluded and quiet, it was perfect for daydreaming, napping, and generally avoiding conversation with strangers. Of course, she reflected as Sebastien came into view several minutes later, this would be a conversation she could not ignore. Still, she pretended not to notice him, lounging on the warm sand as the gentle breeze played over her bare legs.\n\n\"So, you thought you could escape me for another afternoon,\" he said, stepping up beside her.\n\n\"That's not why I'm here.\"\n\n\"Come, I thought we had gotten beyond silly lies,\" he said reproachfully. \"Very well, why are you here, if not to avoid me?\" She thought for a moment, still looking out over the ocean instead of at him.\n\n\"I feel...safe here. I don't know why, but I always have, ever since I was a little girl.\"\n\n\"I see,\" he replied quietly. He sounded pensive. Or was it sad? \"Well, I am sorry that you feel the need to escape so often lately. I had thought that you were growing more comfortable with me/\"\n\n\"I am, but...\"\n\n\"But?\" he prompted.\n\n\"I'd say you're a lot more dangerous than safe. It can be very exciting,\" she admitted, \"but it doesn't feel like... like...\" She trailed off.\n\n\"Like home,\" he murmured above her. She tensed. \"Claire, we need to talk.\" She stood abruptly, intending to walk past him.\n\n\"I don't have time for this argument,\" she said, starting to walk away. He grabbed her wrist firmly.\n\n\"Are we going to argue?\" he asked mildly. She pushed away from him in frustration, but found herself overbalanced as they topped to the firm, damp sand. It felt cool beneath her bare skin, and gave softly as she struggled beneath him. Despite her efforts, he pinned her easily, her wrists above her head. She felt the most delicious jolt of pleasure at the knowledge that she was trapped.\n\n\"Maestro, what are you doing? People might see.\"\n\n\"I don't care,\" he said, pushing aside the top of her bathing suit. \"I want you. Right now.\" She was surprised at the change in his behavior, and melted into his embrace, her nipples hardening instantly in the open air. She felt the bubbling foam of waves as they tickled her toes. The sound of a zipper barely entered her consciousness as Sebastien kissed her neck, her breasts. Then he was pushing aside her bathing suit bottoms and pressing against her, inside her. He swallowed her moan in a kiss, and she watched emotions shift in his brown eyes as he moved inside her.\n\nThe waves rushed in around them, now grazing her upper thighs. She broke the kiss, tipping her head up to glance at the water.\n\n\"Maestro, I believe the tide is coming in,\" she murmured.\n\n\"So I see,\" he replied, pulling her up and turning her onto her hands and knees in the damp sand. She stretched her arms back over her head, her dangling breasts just brushing the sand. \"We should take care that it does not swallow us,\" he said, bracing his hands on her hips and plunging into her again, as the surf swelled up over her calves.\n\nClaire looked up as he pounded into her, stretching her back as she gazed up at the sheer rock cliff that bounded the beach. The road twisted just on top of the cliff, but they were too close to it for anyone in a car to see them. Still, it was thrilling to know that they could be discovered at any moment. She ducked her head down then, looking between their knees at the foaming waves, chillier now than they had been earlier.\n\nOver the water, the hot orange sun was sinking into the horizon, lighting the sky with pretty pinks and purples. A bigger wave swelled, chilling her breasts, belly, and legs in one second. She gasped at the sensation of the sand slipping away below her knees, Sebastien's inexorable thrusting pushing her higher and higher, even as she sunk into the sand.\n\nThe surf was crashing into them oftener now, and she lifted her head away from the ground.\n\n\"Mon abeille,\" he said into her ear, \"I'm afraid we cannot stay here much longer.\" His breathing hitched out unevenly, and she tensed in anticipation. Cursing softly, Sebastien thrust into her deeply once more. The feeling of his come shooting into her sent her over the edge, and she stiffened, shivering all over as she, too, came.\n\nAnother wave rushed in, this time soaking her hands. They scrambled to get out of the surf, collapsing onto the firmer sand farther up the beach. Claire adjusted her swimsuit, but Sebastien was watching the sunset moodily. Claire touched his shoulder gently, and he turned to her with a half-smile.\n\n\"Romantic, no?\" She looked out at the water swelling serenely, the setting sun painting the sky even more prettily than before. Sex on the beach. Every woman's dream, right? So why was a voice inside her head screaming at her to run, even as her heart trembled? The light touch of his fingertip on her lips made her turn. She had a moment to see the dark look in his eyes before his lips crashed down on hers possessively.\n\nHer nipples hardened almost painfully. It was the growing cold, she told herself. But she heard the soft moan that escaped her mouth as Sebastien bit down on her lower lip before pulling back.\n\n\"You cannot hide from me forever,\" he said ominously.\n\n\"I don't know what you're talking about.\"\n\n\"Of course not,\" he replied, sounding a little bitter. \"So, you win, we shall keep our little secret.\" He stood, turning to wrap her in his overcoat. Then he lifted her, carrying her in his arms as he carefully made his way over the rocks and back to his car. She felt warm, cuddled and cozy in his arms, and, surprisingly, safe. She had won. But, strangely, it no longer felt like such a victory.\n\n-----\n\nClaire took her place on stage nervously. The entire company - full orchestra, double choir, three other soloists - were there for their first complete rehearsal. After the overture, the next sound anyone would hear would be Claire's voice, floating ethereally above the sparse instrumentation of her first aria. She took a deep breath, launching into it with the blind faith of a singer who must pluck her note from thin air. It was always a bit of a relief having hit the perfect pitch, and then she could relax into her piece.\n\nOr, she would have, if not for the subject matter of this particular aria, about a young woman's unrequited love. She sang stiffly, and Sebastien brought the orchestra to a screeching halt after a minute.\n\n\"No, no, the sound is all wrong,\" he snapped, clearly frustrated at having to correct something that should have been perfect. \"You are not giving yourself to the music. You must feel it. Commit to it!\" he ordered.\n\nClaire swallowed, her mouth suddenly dry. Singing words that struck so deeply to her heart's core did not sound like a good time to her, but what choice did she have? She steeled herself, watched Sebastien cue the orchestra, and began again. Each note brought a tiny, piercing pain to her chest as she watched him marking the beat with his baton.\n\nHer voice faltered, and he cut them all off again. \"Claire, please! Pay attention to what you are doing. Your intonation is a little better, but honestly it's still very weak.\"\n\nHer lip trembled, and tears sprang to her eyes. Oh no, not here, not now, not in front of all these people. She took a breath, willing herself calm. \"I can't do this,\" she stammered.\n\nSebastien looked at her curiously, and flipped through a few pages in the stack of pages on his stand. \"Very well,\" he said, sounding irritated, \"we can skip it for now and go on to the next piece, but we shall have to come back to it later.\"\n\nHe opened his mouth to announce the next piece, but Claire interrupted him to speak, the first of her tears spilling down her cheeks. \"No, no, I can't do any of this!\" she exclaimed. She was breathing fast now, very close to breaking down. She shook her head and went offstage at a fast clip, but not, she noticed with relief, running. Her stomach dropped. It wasn't like her to break down in public like this, and it could cost her everything.\n\nShe ducked into her dressing room and grabbed her bag. She thought of him out there, going on as if nothing had happened - which, she reflected, is probably what he should do - and her breath hitched in a sob.\n\nShe opened her dressing room door to leave, and saw Sebastien in her doorway. Before he could say anything, she slammed the door in his face, startled. He opened the door and strode in, looking very much like he was restraining himself from doing something that he would regret.\n\nHe spoke in a low voice. \"Where do you think you are going?\"\n\n\"I have to go. I can't do this, be here.\"\n\n\"Why not?\"\n\n\"I can't tell you. I have to go.\"\n\nShe attempted to push past him, already knowing it wouldn't work. He grabbed her upper arm firmly, and a little tremor ran through her.\n\n\"No, you will come with me,\" he said, marching her down the hall. It was deserted. He brought her to his office, pushing her down firmly onto one of the chairs. \"You will stay here until rehearsal has come to an end, and then you will talk to me.\" There was no arguing with his tone, and she set her jaw as he shut the door, locking it behind him.\n\nShe wiped her tears away furiously and leapt up from the chair. He must have known she wouldn't stay put, she thought. She tried the doorknob, and found that he had locked it from the outside. She hadn't even known he could do that. She jiggled the door, but to no avail.\n\nShe paced his office, pissed now. How dare he lock her in his office and tell her to wait, as if she was an errant child? She had to, had to... do something. She cast her eyes around, and saw the little window, near the ceiling. She bit her lip. It looked big enough. Was it worth whatever he would do to her?\n\nYes.\n\nShe dragged the chair over to the window and popped open the latch, tilting the glass out. She sucked in a breath and squeezed through the opening, looking to see how far she was from the ground. She was on the ground floor, and the drop wasn't too bad. \n\nMoments later, she was striding away from the symphony hall, pleased with herself.\n\n-----\n\nShe didn't go home. Why would she, when he knew where she lived? Of course, she couldn't avoid him forever, unless she wanted to leave town now, quit, hire someone to come pick up her things. The fact that it even tempted her was pretty sad. She opted to go to a little cafe, studying her music and picking at a salad until a few hours had passed. Seemed pretty safe. Of course, he could always be waiting for her at home, but she might as well find out sooner rather than later.\n\nClaire was actually surprised when she didn't see him outside of her apartment building. Still, she remained cautious inside until she stepped off the elevator at her floor and made her way around to her front door. Not there. She glanced suspiciously at her door. Could he get inside? Probably. Her heart sped up as she unlocked the door. She shut it behind her with a little click, and did a quick walkthrough. He wasn't there. She should have felt relieved, but instead she was filled with dread.   She just knew he was somewhere, plotting his revenge. She was on edge all night, but Sebastien never made contact.\n\nThe symphony had scheduled rehearsals for the following two days, but Claire just couldn't force herself to go and sing love songs to him. She expected furious calls at any minute, but there was silence. Sebastien didn't call, and neither did any of the musicians. Perhaps he was finding a last-minute replacement for her? The thought hurt, but what could she do about it? She couldn't expect him to cripple the entire performance because she was having a personal problem.\n\nStill, the anticipation of hearing from him ate away at her. Every minute, she envisioned worse punishments, more humiliation and pain.\n\nOn the third day after she had walked out on him, she couldn't stand it anymore. She picked up the phone, and dialed.\n\n\"Allo?\" drawled a familiar voice.\n\n\"Hello, it's me.\"\n\n\"Ahhhh, cherie, I wondered if I would hear from you,\" Ren\u00e9 said, amusement evident in his voice.\n\nClaire signed softly. \"Is he very angry?\"\n\n\"Angry is not quite the right word,\" he said thoughtfully. Her heart leapt hopefully before he added, \"Livid would be more like it.\"\n\n\"Shit,\" she said with feeling. \"What should I do?\" she asked, more to herself than to Ren\u00e9.\n\n\"Would you like my advice?\"\n\n\"Okay.\"\n\n\"Beg his forgiveness, take your punishment, and then tell him how you feel.\"\n\n\"How I feel about what?\"\n\n\"That could not have been a serious question!\" he said scornfully. \"Tell him you love him!\"\n\n\"How did you know?\" she asked in a small voice.\n\nShe heard an explosion of sound from his end of the phone, and he spoke incredulously. \"That's a stupid question. I'm surprised your entire orchestra does not know! You two must be better actors than I thought.\"\n\n\"I could never tell him.\"\n\nA long sigh. \"Do not tell me that you think he does not know.\"\n\n\"Well, he's never said-\"\n\nAnother loud sound interrupted her, and she could see Ren\u00e9 in her mind's eye, rolling his eyes at her. \"Of course not! You're obviously uncomfortable with the subject. He pushes you in every other way. You have met his family, for goodness' sake, and when no declaration of love was forthcoming in Paris, well, what do you expect? Do you want the man to humiliate himself for you?\"\n\nShe swallowed, processing Ren\u00e9's outburst. \"Would it be so hard for him to say it first, then?\" she asked derisively. The long silence that greeted her ears was eloquent. If it was so easy to say it, why hadn't she? \"Fine, I get your point. But I just can't tell him. He's been pretty clear about this being just for fun. It seems unfair to spring feelings like this on him.\" Another sigh from Ren\u00e9. \"Has he told you that he loves me?\"\n\nAnother long silence. \"Not exactly.\"\n\n\"Did he say that he wants me to tell him that I love him?\"\n\n\"He... has indicated that he believes you are hiding something from him, but that is all.\"\n\n\"See? Wouldn't he tell you if he loved me?\"\n\n\"Perhaps,\" he replied, very quietly. \"He does not tell me everything, you know. Well, do as you wish, then. I know that he is at home. I can see him pacing over there.\"\n\nThe phone clicked in her ear as Ren\u00e9 hung up on her. Great. Now neither of them were happy with her. Oh well, she couldn't please everyone. She could always call Sebastien, but frankly, she wasn't confident that he would pick up. She changed out of her pajamas and tousled her hair, making sure she was presentable. Might as well take the few extra minutes to look nice. After a moment's hesitation, she buckled her ruby red cuffs around her wrists. Just that simple feeling made her grow warmer, softer. Such a curse.\n\n-----\n\nClaire hopped out of the cab in front of Sebastien's apartment building. Immediately, her eyes were drawn to the tall figure leaning up against the wall.\n\n\"What are you doing here?\" she asked warily.\n\n\"I thought you might want an escort,\" Ren\u00e9 replied cheerfully. \"He's in a very nasty mood.\"\n\n\"Fine,\" she said, turning her back on him as she went into the building. He inclined his head, following her. They didn't speak in the elevator, and he didn't rush her on the walk to Sebastien's door. She knocked timidly.\n\n\"Well?\" came a clipped voice on the other side of the door.\n\n\"Maestro, it's me,\" she said, trembling a little.\n\nThe door swung open immediately, and the force of his hot glare made her take a step back. She lifted her hand to run her fingers through her hair, and watched his eyes track the movement, probably noticing that she was wearing the cuffs he gave her. \"Now I am your Maestro, after-\" He broke off, narrowing his eyes. \"What are you doing here?\"\n\nClaire opened her mouth to answer, but heard Ren\u00e9 speak from behind her. She had almost forgotten he was there.\n\n\"I thought she could use an escort,\" he said softly.\n\n\"You called him?\" Sebastien directed this toward Claire. She winced.\n\n\"I didn't think you would pick up if I called.\"\n\n\"But you did not try?\" What was this? Was that hurt she saw shadowed in his eyes? He firmed his jaw, eyes flicking from one to the other. \"Well, what do you want?\"\n\n\"I - can we do this inside? It's kind of private.\" Sebastien arched an eyebrow, staring pointedly at her. Ah, Ren\u00e9, right. \"Well, I didn't...\" she mumbled, trailing off.\n\nSebastien pursed his lips, then stepped out of the doorway slightly, to let her in. \"Not you,\" he said as Ren\u00e9 moved to follow her. \"Oh no, this is between Claire and I.\" He brought his arm up to block the doorway casually.\n\nRen\u00e9 looked in at Claire. She lifted one shoulder in an uncomfortable shrug. She wasn't calling the shots anymore. His eyes slid back to Sebastien, and he asked something softly in French. Sebastien responded dismissively, and Ren\u00e9's eyebrows lifted. He replied lightly, and Sebastien nodded, lifting his arm and walking back into the room.\n\nRen\u00e9 leaned in to Claire, brushing his lips against her cheek. He touched her shoulder lightly and smiled enigmatically. \"Au revoir,\" he said, backing out and going down the hallway. She watched after him. His goodbye had sounded very final. Treipdation began prickling in her chest.\n\nSebastien shut the door, locked it. He turned to look at her, studying her face. They were alone. Her mouth went dry, and she felt her knees quiver. She felt terrified suddenly, but of what, she did not know.\n\n\"Please, make yourself at home,\" he said, gesturing to the sofa. She perched on it gingerly, and she almost didn't hear his next question over the beating of her heart. \"Why did you come?\"\n\n\"I-I-I wanted to see you,\" she faltered, licking her lips nervously.\n\nHe seemed to be thinking, trying to decide something. At last, he knelt down in front of her, putting them eye-to-eye. \"Claire. Are you pregnant?\"\n\nHer eyes popped open, the question coming as a complete surprise. She laughed reflexively, a move she automatically regretted. \"Oh, my gosh, no! Is that what you thought?\" His face closed down, and he stood up abruptly. His hands clutched into fists, and she flinched, though he had never struck her in any way not meant to please. \"I-I'm sorry, that was a completely reasonable question,\" she said. \"But no.\" He glowered down at her, waves of hot anger pouring off him.\n\n\"Very well. Would you like to tell me what has been distracting you?\"\n\n\"I... I can't,\" she managed.\n\n\"Then why did you come?\"\n\nShe cast her eyes down to the carpet. It was a good question. \"To apologize for running out on rehearsal the other day. To... to beg your forgiveness, and ask if you will punish me for it,\" she said, carefully avoiding admitting that she wanted the punishment. Badly.\n\nThe corners of his mouth softened slightly. \"I see. Come with me.\"\n\n-----\n\nShe had done it again, Claire thought ruefully as she followed Sebastien, vibrating with barely repressed anger, up into his bedroom. He pointed to his bed, and she timidly sat on the foot of it, watching him with nervous eyes. He walked to the wall where his closet, and yanked open the mysterious door next to it. Hooks on the walls of the tiny room inside were hung with some interesting-looking implements - she spotted the Stinger looking innocuous among other similar devices - but her eyes were all for the thing that Sebastien was dragging out into the middle of the floor.",
        "It had four legs, a flat top, and a smaller platform about halfway to the floor, with sturdy-looking hooks and loops in various places. She didn't even have to wonder - she knew what this was: a whipping bench. She had supposed it would only be a matter of time before she was strapped down to one, so much better suited to the purpose than was the bed, and with better angles for whipping than the upright rack Sebastien had used before (which, she had since found out, was really a heavy-duty easel - yes, really - he had bought, not yet knowing where to procure the \"real\" thing).\n\n\"Are you going to tell me what is the matter with you, Claire?\" he asked acidly. She rolled her eyes up to look at him where he had come to stand, towering over her. She swallowed, but shook her head. \"Then I am going to strap you down and beat it out of you. This is your one chance to tell me. If you leave, I will not stop you, but you will not come back. Otherwise, you are not getting up from there until I get the truth from you.\"\n\nShe licked her lips nervously. Time to make a decision at last, she thought. Did she really believe that he would not let her up from the bench until she confessed all that was in her heart? No, perhaps not. But she would be willing to bet that her resolve would break long before she would be injured enough to stop, and even longer before his patience would run out. So. She could tell him now, or she could tell him later. Either way, she would probably have to tell him. She opened her mouth, but nothing came out. Perhaps courage would come from pain.\n\nShe held out her wrists, the red leather cuffs softening from wear and the D-rings scuffed from use. Was that a glint in Sebastien's eyes? Was this what he had hoped for all along?\n\nHe grasped her hands, pulling her up to her feet. He undressed her slowly, carefully, folding each article of clothing and setting it aside. With each fold, the anticipation in her chest grew stronger and her breaths shallower. When she was naked, save for the cuffs, he led her to the bench. She knew what to do. She knelt on the lower platform, bending at the waist to lie stomach-down along the top of the bench. Sebastien deftly tied her wrists and ankles in place, then stood, admiring her.\n\n\"This is your last chance,\" he said firmly. \"Will you tell me?\"\n\nWhen she remained silent, he clucked his tongue in disapproval, and went to retrieve the Stinger, along with a paddle and what looked a lot like a bullwhip. He laid them neatly on the side table she was facing, a reminder. He then knelt next to her, running his hand softly up and down her back, and kissed her softly.\n\n\"Tell me when you are ready to speak. Je t'adore, mon abeille.\"\n\nShe nodded, and he disappeared from her sight. Almost immediately, she felt a sharp slap of pain on her buttocks. Apparently, there would be no warming up first. Tears sprang to her eyes and she pressed her lips together firmly, trying not to cry out. Soon, soon the pain would begin to fold into pleasure as the warmth spread over her back, her buttocks, between her legs. But at first, there was only pain.\n\nShe whimpered mutely as her back sang with stinging pain. Her head felt like it was floating as the nerves on her backside ceased to tingle and instead began to feel numb. As soon as her head fell forward limply, Sebastien stopped, running his hands over her body. This simple touch felt magnified, and she writhed beneath him. Her skin was soothed when his palms touched her, but as soon as they had passed over one section, it burst into fiery pins and needles.\n\nAll at once she realized how very exposed she was, how very helpless. She tried to move her limbs, and found each fastened tightly. Delicious.\n\nSebastien appeared in front of her, looking down at her questioningly. She only stared back. He dropped the Stinger back onto the table, and picked up the paddle. He disappeared from view again, only to make his presence quite evident with the thudding strokes of the paddle on her ass. Each felt firm, hard, as if she was having a softball repeatedly thrown into her flesh. One particularly hard stroke jolted the entire bench forward a half-inch or so, and forced a cry out of Claire, as she wondered how big her bruise would be.\n\nHe kept the paddle only to her buttocks and upper thighs, but it was enough. An ache began to form, creeping out from where he aimed his blows. It was at this point that she noticed another very different ache growing between her legs. Ahh, finally, respite from the pain in the pleasurable shivers that would accompany each swat.\n\nWhen she began to moan, so softly, Sebastien stopped again. He walked around to the front, cocking his head to the side questioningly. Again, she said nothing. He set the paddle down on the table, and picked up the whip, brandishing it menacingly and stroking its length.\n\n\"I think you are enjoying yourself too much, mon abeille. I will never learn anything from you this way.\" So saying, he cracked the whip. She heard the whoosh of air, the loud snapping sound of the whip, and jolted, startled. The next crack brought with it a searing pain across her buttocks as the whip made contact. Sebastien whipped her slowly, giving at least ten or fifteen seconds between blows for her writhing to stop. She imagined that her burgeoning arousal would die down, but to her surprise, the bench between her legs felt soaked with her moisture.\n\nThe whip roamed her entire backside, from shoulders to ankles. He had never covered so much of her body in one session, and she felt on fire everywhere with a tingling sensation of pain mixed with pleasure. She didn't know how much longer she could stand it. But she still felt her heart behind a wall of fear.\n\nBlissfully, this new torture, too, ended. Again, Sebastien's hands slid over her wounded flesh, caressing, drawing out new pleasures, but also new pain. He laid his cheek gently on her left buttock, and she felt how very cool it was compared to her skin. He pressed kisses into her wherever the whip had touched, and eventually her skin was alive with tingling and a dull ache that had spread everywhere.\n\nHe set the whip aside and looked down at her once more, sighing softly.\n\n\"Very well, you must still be too comfortable.\" He came around and untied her ankles, helping her to place her feet on the ground, rather than resting with her knees on the platform. The bench was just high enough that she would have to stand on her tiptoes in order to brace herself on the ground. He retied her ankles, and she reflected that it certainly was less comfortable. It was an awkward position, and she supposed that was the point.\n\nHe snatched the Stinger up from the table and stalked around her, striking her with more force than before. Bolts of pleasure shot directly to her pussy, and she ground it gently into the bench. The blows made the tears in her eyes spill over down her cheeks.\n\n\"Mon abeille, what are you hiding from me?\" Thwack! \"What is wrong?\" Thwack! \"Are you leaving the symphony?\" Thwack! Then, softer, \"Are you leaving me?\" Thwack! \"Is there someone else?\"\n\nClaire was startled to hear the things Sebastien was asking her. So, had he been worried all this time that she was on the verge of leaving him for someone else? The words wanted to burst out of her, but she could only imagine the worst possible outcome of telling him. He would tell her that it was all just a game, and she was being a silly little girl. This was her greatest fear, she admitted to herself.\n\nThe pressure, the pain, the pleasure, the fear of disappointing Sebastien, the despair that she had already caused him pain. The tears flowed freely from her now, as freely as Sebastien's arm continued to swing.\n\n\"Why won't you tell me?\" he asked, his voice sounding desolate.\n\n\"Sebastien, please!\" she cried. It was their signal, his name. He knew she was at her limit. The blows stopped immediately, and she heard the Stinger drop to the floor. He appeared in front of her again, and he looked so... so sad, tunneling his fingers through his hair. She wanted to reach out and touch him, but her arms were immobilized against the bench.\n\n\"Mon abeille?\" he asked, very softly. She struggled to control her breath in the sudden lack of sensation. After a moment of slow breathing, she felt the tears stopping.\n\nShe looked up at him underneath drenched lashes. \"I... I... I love you.\" Sebastien said nothing. He was standing very still. Claire sniffed. \"Is that... is that what you wanted to hear?\" She tried to make it sound scathing, but it sounded only beseeching. \"I love you.\"\n\nHe dropped to his knees suddenly, touching her cheek with his fingertips. \"Ah, mon abeille, it is what I wanted to hear very much, have hoped to hear for a long time. I confess,\" he said, touching his heart, \"I was afraid that you would never say it. Afraid you did not feel it.\" He brushed his lips against hers, the barest touch. \"I love you, too. Did you not know?\"\n\nShe looked down at the floor. She had not even dared to hope it, but if she was honest with herself, she could admit that she had at least suspected as much.\"Stupid, I'm so stupid,\" she moaned softly.\n\n\"No, no, never stupid,\" he said, peppering her damp face with kisses as he untied her. He helped her off the bench, as she stood, unsure she could keep her feet underneath her. When her knees trembled, he lifted her in his arms, and carried her to the bed. His shirt was damp with sweat. She writhed when she felt the covers, cool against her reddened skin.\n\n\"Ah, have I hurt you, mon abeille?\" Claire looked up at him with an expression of utter bafflement that made him laugh softly. \"But of course, I believe I've lost my mind,\" he said, shaking his head. \"But what I meant to ask is if you could, that is, if you still wanted to...\" Was Sebastien actually flustered? Claire blinked in amazement, pushing herself up to come face-to-face with him. She leaned forward, pressing her lips to his with a smile.\n\n\"Sebastien, are you giving up on being the master so easily?\" she teased. He didn't seem to know how to respond. So she slid off the bed, arching an eyebrow at him. \"Well, if you're not going to maintain control of the situation, I don't see any reason to stay.\" She made to walk away, anticipating that he would grab hold of her wrist. She was not disappointed.\n\n\"I think not.\" She pulled her arm away from him, tossing a cheeky smile over her shoulder. \"I would not walk out of the room, if I were you,\" he said darkly.\n\nClaire only gave a shrug with one shoulder and opened the door, walking out into the hallway. So, she thought, the games would start already.\n\nShe made it to the living room, and was just beginning to wonder what she would do if he did not come back downstairs, when the bedroom door slammed. She leaned casually against the arm of the sofa and looked toward the balcony, where Sebastien presently appeared, wearing only his slacks, which had already been unbuttoned. She caught her breath, not just at his appearance, but at the glare he had on his face. He strode over to her, gripping her upper arms firmly.\n\n\"Did you not get enough before, Claire?\"\n\n\"I never get enough of you, Maestro,\" she said with a little smile. The corner of his mouth quirked up before he could stop it, but he still pushed her down firmly to her knees, jarring her a little. He knelt down to tie her wrists together, and then looped the soft rope he was using around her ankles as well. The constant tension in her shoulders eased a bit as she waited patiently.\n\nHe spread her knees wide, which left her balanced, but with an ache in her thighs. He opened his pants, pulling out his cock, already hard and waiting for her. Bracing his hands on the back of her head, he thrust his hips forward, pushing himself into her mouth. At that moment, she did feel as though she was rocking unsteadily on her knees, but she pushed the thought away to focus on the task at hand.\n\nShe kept jerking her arms unconsciously, forgetting they would not come free to help her. So she moved her head back and forth with a little difficulty, running her tongue over the hard length of him in her mouth. Her thighs were increasingly damp with her wetness. She felt him get even harder as he bumped against the back of her throat before he pulled out of her mouth reluctantly.\n\nSebastien pulled the ties from her ankles, pushing her back onto the soft carpet. She winced, still tender from the whipping, so he pulled her up to straddle him instead as he lay back, watching her.\n\nShe held her breath as she sunk down onto him, blowing it out when her hips rested against his. She rode him steadily, her arms still clasped behind her back. Sebastien's hands went up to play lazily with her bouncing breasts.\n\n\"You are so lovely, mon abeille, my Claire,\" he said.\n\n\"Th-thank you, Maestro.\" She watched Sebastien beneath her, eyes darkening as his pleasure grew. When she sensed that he was close to coming, she slowed her pace, lifting as far off of him as she could and sliding, ever so slowly, back down. In frustration, he grasped her hips to try and force her back down.\n\n\"Ow, ow!\" she exclaimed, as his fingertips dug painfully into her buttocks. He withdrew his hands at once, and Claire resumed riding him as before. The next time she felt him tense below her, she did as before, raising up off him. Again he went to grab her, and again her noises of pain warned him off.\n\nSeveral more times she played this teasing game, until Sebastien's upper body shone with a thin sheen of sweat, and he was glaring openly at her.\n\n\"Giving the Master a taste of his own medicine, I see,\" he murmured, frowning. Her eyes grew bright with merriment and she bit her lips so that she wouldn't laugh. \"Well, I think we've had enough of this,\" he said, flipping her over and this time ignoring her grimace.\n\nHe thrust into her, hard and a little painfully. She cried out as he filled her, bumping into her as far as he could go and feeling so big inside her. This time he was merciless, fucking her as fast as he was able. Before she even anticipated it, she was coming, hips rising to meet his thrusts as she tightened around him.\n\nHer whole body shivered as he continued pumping into her, nerves still tense and waiting for another release.\n\n\"Yes, yes, mon abeille. Come for me again,\" he urged. She flicked her eyes up, watching him watch her, and felt herself tumbling over the edge once more, as he had commanded. He jerked his hips several more times, at last giving a final thrust as he emptied himself into her. She writhed below him, feeling the jets of his come filling her. Her shoulders ached, her back burned, and her pussy was already beginning to feel sore, but her heart was light.\n\n\"Mon abeille, adoree, I love you so.\"\n\n-----\n\nRustling and a few stray coughs filled the auditorium as symphony-goers settled in their seats for the symphony's second opening season with Claire as their star soprano. As she smoothed down her dress and her hair for the thousandth time that night, she couldn't help but think of Sebastien. For it was opening night the previous year that she had stumbled upon him playing Moonlight Sonata, a piece that had become, essentially, their song. It was the night that had finally brought home to her the deep attraction she felt for her conductor, and the first bare hints that he might have thought of her, too.\n\nA knock on the door brought her away from those thoughts, and she opened it to find Sebastien in her doorway. He held a single yellow rose, probably drawn from the bouquet he'd given her that morning. She blushed, remembering the way he'd teased her with one of the blooms, drawing it over her hard nipples and other places. He smiled softly, and she knew he was thinking the same thing. She took the flower and, checking to see that the hallway was empty, rose on her tiptoes to kiss him on the cheek.\n\n\"Well, mon abeille, are you ready?\"\n\n\"I think so. Don't you ever get nervous?\"\n\n\"Not really. But then I am really only there waving a baton around, don't you think? I haven't got to hit any notes at all,\" he teased. She set the rose aside, and took his offered arm, letting him lead her to the stage.\n\nThe room exploded in thunderous applause at their appearance, and she took her place at the front of the stage, between Maestro and orchestra. He looked up at her, smiling a secretive smile with those dark eyes that hinted of so much more. Things would never be the same as they had been before that first night they made music together. They could only get so much better."
    ],
    "authorname": "barabajagal001",
    "tags": [
        "bdsm novella"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-maestro-ch-07"
}