{
    "title": "Mikey and the Chickadee Ch. 10",
    "pages": [
        "I can't thank you all enough for your kind comments. I find them extremely encouraging as I continue to write. Please feel free to email me anytime.\n\n*****\n\nBy Thursday the city had descended into a strange, bitter cold, which I believed optimistically to be winter's final death rattle before yielding to spring. The radiated heat inside Mikey's apartment was befitting now, and not at all uncomfortable as I stretched out opposite him on the couch. At his suggestion I had thrown together a change of clothes and ventured over after dinner. We would leave for work together in the morning. \n\nTuesday night's dinner had wormed into discussion and Mikey lifted the bulk of his arms, interlocking his fingers on top of his head. \"Sophie likes to talk,\" he said. \"I don't know if you noticed when you were alone with her. She'll sort of lead the conversation sometimes.\"\n\nI shrugged. \"It didn't bother me. I thought she was really nice.\"\n\n\"Yeah, and I don't mean to say it's a bad thing. She's great at jumping in whenever there's a lull in meetings with clients.\" He lowered his arms and cuddled up against the couch cushion. \"What did you guys talk about when I was away?\" he asked, only casually disguising a furtive curiosity. \n\n\"You, mostly,\" I said, hiding part of my face with a throw-pillow. \n\nHe closed his eyes, head resting against the cushion. \"Part of me knew that she would talk about me if I wasn't there. I don't mind, really. As long as she didn't make me look like an ass.\" \n\n\"She didn't,\" I said. \"I promise.\" It was the first time since dinner that he'd shown anything other than a passing, joking interest in what Sophie and I had discussed when we were alone. I found this heightened fascination problematic, owing to the disparity between my will to hide nothing from Mikey, and a sense that full disclosure would be, apart from everything else, unhelpful. It might also be disastrous in terms of Mikey's confidence and amassing effort to understand himself. I tried to imagine how it would go-explaining how things had gotten quite overt, and that the conversation had been almost entirely about him, about how Sophie had come to accept, beyond question, this relegating truth about him that he could not yet see...and above all, that this man who, for example, had professed explicit lack of interest in ever kissing another man, was of such crushing substance that it made him into someone for whom biding my time wasn't a complete misadventure. In spite of compliments diverted toward his character, the reductive, don't-worry-he'll-come-around tone of the conversation rubbed shoulders with offensiveness. I wanted to protect him from that. \n\nI had spent Wednesday wondering intermittently about Mikey's motivation to have Sophie meet me. \n\nHe could not have anticipated that we would have such extensive opportunity to speak in his absence; on the other hand, I trusted he knew his cousin's nature. Maybe he sensed something about her intuition with respect to him. Perhaps, during the plausible instant that she and I were alone, he sought to have me know things about him that he himself could not explain. Ultimately, though, my predilection to overthink things exhausted me; these thoughts were outlandish and at the moment impossible to confirm.  \n\n\"I got the idea that she's happy we're hanging out,\" I said. \"She thinks really highly of you. She said you're a good guy.\"\n\n\"Naturally,\" said Mikey with a grin. \"Yeah, I remember when I was telling her about you she got all excited. I haven't held on to a lot of friends from my past, and she gets worried when I'm not being very social. Really, there's nothing to worry about, but I can't convince her of that.\"\n\n\"She cares a lot about you.\"\n\n\"Fuck yeah she does,\" he said, pulling his knees to his chest. \"She's three years older. When we were younger, that automatically gave her some authority over me. Sometimes it still kind of seems like it's there. It's not really on her terms, though; if anything I'm imagining it.\"\n\n\"She may always be that kind of figure for you. My sister is for me.\"\n\nHe nodded. \"I don't mind that.\" After a pause he said, \"It sucks that it's so cold tonight. I wanted to walk on the seawall near downtown. Should have done it when I had the chance.\"\n\n\"You'll be able to again soon.\"\n\nHe smiled and rose up. \"I want to play video games. Will you join me?\"\n\n\"You don't even have to ask,\" I said. \"I've been craving a little GTA.\"\n\n\"Who hasn't,\" he said, kneeling in front of the TV stand. \n\nWe played for over an hour before Mikey rolled over on the floor. His on-screen persona stood still, swaying a bit unnaturally and performing the occasional subtle gesture at random. \n\n\"I've had enough,\" he said, laying on his side and facing away from me. He tossed the controller over his shoulder and it thumped across the rug, landing near my knee. \n\nI had set a large pillow against the coffee table and leaned my back against it. \"You're so reckless,\" I said. \n\n\"I'm reckless? Who shamelessly mowed down fifty people with a Lamborghini half an hour ago?\"\n\n\"You don't know the difference between a game and real life.\"\n\nHe shrugged. \"Blow me.\"\n\nI laughed. \"You realize you need to be careful what you say around me,\" I told him. \"I just might take you seriously.\" \n\nHe was silent for a couple seconds, his back still turned to me. \"What makes you think I'm not serious?\" \n\nI sat forward and tugged hard on his shoulder, rolling him into his back. He looked up at me, his upside-down expression all but vacant, awaiting my response. \n\n\"If you're serious,\" I told him, \"then I don't want to waste any time. I would hate for you to change your mind.\"\n\nMikey looked down at his lap and then back at me, a detectable blip of wonder surfacing in his eyes. He unbuttoned his pants without breaking eye contact. \"I want you to do this to me,\" he muttered. \n\n\"Stay where you are,\" I said. \"I'll do it.\" I moved to where I could access him, spreading his legs and positioning myself between them. \"Are you comfortable enough here?\"\n\nHe nodded. \n\nI knelt before him now on the rug, pulling down his pants zipper, fingers brushing past the rapidly growing presence that waited beneath. \"You're kind of big, you know.\"\n\nHe stared up at the ceiling. \"I think I'm about the same as you.\"\n\n\"Yeah, well, I'm kind of big.\"\n\n\"I'm aware,\" he said. \n\nI pulled his pants down around his legs, just as he aided me by lifting his backside briefly from the floor. As I relieved him of his underwear he managed a small laugh. \"I'm going to feel, like, indebted to you if you actually suck my cock.\" \n\nI paused, inches from him. \"We can figure that out later,\" I said. \"Just relax, okay?\" \n\n\"Okay, Chickadee,\" he said. \n\n\"Actually, there's just one thing-if it happens.\" I paused, and he glanced down to meet my gaze, dark eyes shifting to focus on one eye, then the other. \"If you come,\" I continued, \"I want to swallow you. I don't want you to be caught off guard when I do it. Is that okay with you?\"\n\nHe look back at the ceiling and smiled. \"It's okay. I want you to have that, if that's what you want.\" \n\nThen I held him in my hands, noting that he was just shy of fully erect and angled easily toward me. I pulled down his foreskin and took him artlessly, halfway into my mouth. He did not taste like anything but smelled minimally stale, just as I would expect by this time of day. I leaned far over him now and glanced down to see the toes of his left foot curl and tighten. I advanced downward, letting him slip cleanly back into the hollows of my throat. Against my lips I felt the mild coarseness of his trimmed black hairs, hemming in the base of his cock. He was wholly engorged now, filling my mouth at least as much as I'd ever experienced. However, because it was Mikey, and as I presently realized just how badly I had wanted this, his bulk-swelling against my tongue, the roof of my mouth, the back of my throat-felt all its own, unique and unprecedented. \n\n\"How the fuck do you do that?\" he asked quietly. \n\nI did not answer him but drew myself upward, detaching completely, then descended again upon him. I pressed on, no longer parting from him, attempting to incite in him the greatest amount of pleasure my abilities could sustain. \n\nDuring these moments he moaned softly, eyes shut. His head rolled to one side and he lifted his hand, feeling my hair and neck. He warned that he was close and went so far as to push against my shoulder, attempting to usher me up and away. I stood my ground and he flattened his hand against the floor. Hid body turned rigid and his arms lifted him slightly. To my contentment he began to thrust, concurrent with the first blast of his semen, into my mouth. I buckled down on him, holding him there as he continued to transfer himself into me. I swallowed rapidly so that none of it was lost. \n\nOnce he finally broke from me he breathed deeply. The scene was tidy, the light-brown skin of him just slightly damped by my saliva. He looked down, and then at me. \"It's all gone,\" he said. \"You swallowed all of it.\"\n\n\"That was the plan,\" I said, sitting back and smiling. \n\n\"Oh my god, that's so hot,\" he said. \"Like, it's all in your stomach now.\"\n\n\"It is,\" I said. Remnants of him, tasting slightly bitter now, lingered in my mouth and caused a tingling feeling in my throat. It had been a long time since I had done this, and I felt privileged to have done it for Mikey.\n\nHe coaxed his underwear and pants up around his waist, raising his head and squirming up against the broad leg of the coffee table. He remained like that, neck canted in a fashion that looked uncomfortable to me. \"That sort of exhausted me...in the greatest way possible. I am officially indebted.\"\n\nI shook my head. \"No, you're not. I wanted to do it to you, probably even more that you wanted it.\"\n\n\"I guess I can understand that. Lately, I've kind of been curious what it's like. You look so big-I can't imagine it in my mouth. I'm scared to try.\"\n\n\"You don't have to if you don't want to.\"\n\n\"I never thought I would. Never, ever.\" He steepled his fingers above his stomach, inspecting them silently for a moment. \"With you, though...I'm starting to feel kind of different about it.\" He laughed a little. \"It's not that I'm wanting a dick in my mouth all of a sudden. It hasn't happened to me in that way.\" He paused again, carefully gathering his thoughts. \"But...I mean...if the person it belongs to is really incredible, then I guess that's why I'm starting to want it. And not just a little. Because it's a part of them that they're giving me.\"\n\nI looked away, toward the kitchen and grinned. \"You're not deliberately trying to get me all emotional, are you?\" \n\nHe laughed, sat up and hugged his knees. \"Of course not. But it's how I feel, and I wanted you to know.\"\n\nI smiled at him. \"Thank you, Mikey. Really.\"\n\nHe stood and asked what I wanted to do.\n\n\"Can we watch another movie? Maybe another old one?\"\n\n\"Whatever pleases you,\" he said with a grin. \"You're the guest.\"\n\n\"You need to stop saying that.\"\n\n\"Maybe. Once you've been over here a lot more, maybe then I'll stop. But that time has not come yet.\"\n\n\"Alright, alright,\" I said, dragging myself across the floor to the foot of the bed. \n\nTogether we sat and once again sorted through his ragged stacks of DVDs. \n\n\"African Queen,\" I blurted out. \"Nailed it.\"\n\n\"But we haven't even looked at half of them.\"\n\n\"Hey,\" I calmly protested. \"I thought I was the guest.\" \n\n\"Piece of shit,\" he muttered, clasping a hand to my shoulder and rocking me back and forth. \n\n\"I'm kidding,\" I assured him. \"Let's see what else is here.\"\n\n\"Actually, I'm good with African Queen, seriously.\"\n\n\"Alright, then. If you're sure.\"\n\nOnce again we watched casually, and about ten minutes in, Mikey asked, \"Have you ever seen interviews with Katharine Hepburn?\"\n\nI told him I hadn't.\n\n\"She's unlike anyone else. Well, I mean, the only other people even kind of like her came out of the same world. Females in movies from that time.\"\n\nI smiled at him. \"Why do they have to be female to be like her?\"\n\n\"Because that's all part of it. To have all these ahead-of-the-time opinions, and shout them out in interviews-if you were a man, big fucking deal...\" he trailed off, reaching out a performing a masturbatory gesture over the coffee table before continuing. \"It was a time when, if you were female, half the people out there-no, more-assumed before you opened your mouth that a man had already said something of greater value. So fucked up. You know what Bette Davis said was her biggest mistake in her marriage? She said it was picking someone who wasn't as smart as she was. Well, I mean, she said it a lot more eloquently than that, but still, can you imagine the courage that took on her part? And at that time?\"\n\nI shook my head. \n\n\"Sorry,\" he said. \"I think about this stuff too much sometimes.\"\n\n\"It's fine,\" I said. \"I don't disagree on any particular point.\"\n\nAt this, he smiled. \n\nWe watched about half the movie before Mikey confirmed that he was too tired to go on. \"You can still finish if you want. I'll just fall asleep here.\"\n\n\"Let's go to bed,\" I suggested. \"It's late enough for me.\"\n\nA blue ceramic mug sat near the edge of his small bathroom vanity, it which he kept his toothbrush. After he'd finished preparing for bed I took his place to find that the one I had opened last time remained in the mug, next to his.\n\nI washed up, removed my shirt and came to his bedside to find him lying with his eyes open, pillow propped up somewhat against the headboard. His stout, bare shoulders cropped up just above the comforter. I removed my pants unreservedly and climbed into bed next to him. He remained completely still as I did so. I turned to him and asked, \"Is everything okay?\"\n\n\"Sorry, just woke up a little as I got ready for bed, I guess. Start thinking about things and then I can't stop.\"\n\n\"I know how that feels,\" I told him. \"Is anything bothering you?\"\n\n\"Not really. It's sort of a sad night for me. It happens sometimes. I didn't think it would tonight, though. With you here and all.\" \n\n\"You can feel however you want with me here. I don't care.\"\n\nHe nodded and started to speak, but the words hung in his throat. For a time all I could hear was the low whine of a streetlamp at the corner through his vent window. He shifted and said, \"When my parents died, I began to feel so many unexpected emotions that eventually nothing surprised me. But there's this one thing that has stuck around. And I have to say, I never would have expected it to be like this.\"\n\n\"What is it?\" \n\n\"It's like, I can imagine so clearly either one of them saying all this shit they used to say. And their voices come to me as if they were alive yesterday. My dad hounding me to keep applying for scholarships. Or my mom telling me to stop paying for my own bus fare. I swear to god, for the rest of my life, I'll always remember exactly what they sounded like.\"\n\nIn these final few words, Mikey's own voice took on an unfamiliar hue, and I glanced over at his face to see that there was now a single, small dewdrop tear, whose thin trail glossed the skin of his cheek. \n\n\"Sometimes,\" he continued, \"it's like I start to conjure them up a little, and then I can't stop. It's hard to deal with. Then I wonder, like, if it will always be like this. Like if this one small part of it will always feel so fresh. It'll kind of suck it that's true.\"\n\n\"Mikey,\" I said. \"Can I do anything?\"\n\n\"It's fine,\" he said. \"I'm glad you're here.\" \n\n\"I'm glad I'm here, too.\" I paused and then asked, \"Would it help to talk about it some more? Can you tell me more about that day? What it was like? Or don't tell me, if you don't want to.\"\n\n\"I can tell you all about it,\" he said. \"That part isn't so hard for me.\" He turned onto his side to face me, flattening his pillow a little. \"It was in the morning,\" he said. \"I was at school. City campus. I got called from class. Did you know they don't make you identify the bodies unless they absolutely have to? I didn't know this until then, but it's really just this trope type of thing that always makes it into movies and shows for dramatic effect. I didn't even see them until the funeral. Actually-\" He paused. \"Actually, I never really saw them again. It was strange, for sure, seeing what used to be them, but it's not like I was looking at who they were anymore, all made up in a box.\" \n\nI nodded, facing him so that our gazes aligned from our separate pillows, and he itched his nose before continuing. \"Anyway,\" he mumbled before his voice descended to a sort of heavy tone, \"they were headed east on the freeway. There isn't much of a center divider for a stretch once you get past Celadon. A truck driver crossed over and hit them. I mean, there's not much else to say about that part of it-something so definite. How can you even try to pick it apart? You won't find any answers doing that.\"\n\n\"Right,\" I said. \"I understand.\" \n\n\"Man,\" he said softly. \"This is weird-telling you all this. Good, I guess. What else do you want to know?\"\n\n\"What was it like for you after that? Like, what was life like?\"\n\nHis eyes fell to the pillow and remained there for some time. \"My life changed. It was kind of this bizarre, violent change that I could never have fathomed before it happened. It's even hard to put it into words now...but I can say that I remember being convinced that part of me had died. I think that's a cliche for a reason. My existence became pretty terrible. Most of me was just...gone.\" He stopped to ruminate on this for a moment. \"And I had this sensation of being absolutely certain I would never get that part of me back. I was thinking, this is my life now. In general it will be very unpleasant, every day, forever.\" He stopped himself again, folding his hands up under his chin. \"Anything else?\"\n\n\"Wow,\" I said quietly. \"I don't know. I guess I want to know where you're at with that now.\"\n\n\"Oh, well, obviously I don't feel that way anymore. But the way it all started coming back to me, so incredibly gradually...it's like the most unsatisfying progression I could have imagined. I went through my own grieving process, but for quite a while, even after the nastiest parts of that, life was still shit. Sleeping, eating, working-everything kept going, more or less, but it all came to me through this hazy, awful filter. And then it was like...one day...I would realize that, for weeks, things had been slightly less shitty. And I was at total fucking loss for what in particular had gotten better. When had it changed? And then, weeks later, it would happen again. I would think, shit, this week actually feels a little like the old days.\" He paused and looked me squarely in the eyes. \"I can't tell you what had changed, or when. I wish I could. That sensation of having lost most of how it felt to live day-to-day-I don't get that anymore. I am once again the complete person I was before it happened. But I don't know when I began to feel like myself again.\" At this, he stopped talking altogether and looked away. He seemed only just now aware of how much he'd said. His expression lay hijacked by apprehension, soliciting some kind of verbal response. \n\n\"Mikey,\" I said. \"I'm just really glad you found that part of yourself again.\" \n\nHe smiled. \"Thanks for listening, Chickadee. The funny thing is, for a long time, I couldn't get emotional about them-at least not in any recognizable way. But now, with everything I've gotten back...this sense of normalcy...in that context, I cry when I think of them. I don't think it's bad at all. I try to welcome it. Memories come up lately, and I cry. That's really the extent of it, you know?\"\n\n\"Yeah,\" I said. \"I know.\" I though for a moment and said, \"I wish I could have known them.\"\n\n\"Me too,\" he said. \"I think you would have liked them. I know they would have liked you.\" ",
        "\"I can't even imagine them. Can you give me something? What's something you like to remember?\"\n\nI watched him reflect. Then his face changed all at once, flooding with warmth, as if some prevailing shot of consolation had finally arrived through a vacuum tube extending back into his past. \"There was this trip we took to the interior,\" he said. \"I think I was already eighteen. It was just me and them-we hadn't done anything like that in a long time. I sat in the middle seat just behind them in the van. My mom was handing me some kind of snack-I don't remember what it was-and we were playing this endless license plate game. I remember feeling like I was just a kid. Normally, by that age, I hated feeling that way. I hated anything that made me feel like a child. But in that moment...I don't know. It was just different in that moment. I felt really safe with them. I felt like it would be okay if it stayed like that forever. I wish-\" He stopped himself. Gone from his expression was any perceivable degree of solace. He sighed and his words crept out precariously onto some imagined threshold, \"I just wish I had known it was the last time I would get to feel that way.\"\n\nMikey stopped talking altogether now. He reached under the edge of his pillow with both hands and lifted it, curving it up against his face. In this way he couched his countenance from me, as he held very still. He was silent. For a period of several seconds, I don't believe he breathed at all. Then he drew in a mammoth breath, so enduring as to be inhuman, like a ship keeling to one side. He held it for an instant and then released, shuddering slightly, the air slipping unevenly forth. \n\nI waited for what felt like a long time before saying, \"Mikey, what can I do?\" I wanted desperately to put my arms around him now. \n\nHis voice cracked slightly, muted and deep through the pillow. \"You've already done so much for me.\"\n\nI did not ask his permission as I moved closer to him. I sent my left arm up over his side, just below his shoulder, and pulled him tightly against me. His pillow-barrier remained and separated his face from my chest. He wordlessly lifted his head and dragged the pillow out from under him entirely, casting it down near his feet. He burrowed into my chest and stayed put, breathing softly in and out. I felt him relax incrementally with each whisper of hot air against my skin. A period of time passed, after which I felt all but certain he was asleep. I tucked my mouth and nose slightly into his hair and smelled him. My comfort asked for no change in position. Accepting now that he had been put completely at ease, I, too, relaxed. \n\nIn the morning I woke up, once again before Mikey, as well as before the alarm we'd set. I lay on my stomach, halfway on top of him, arm slung around him, the side of my head pressed cleanly into the center of his chest. My other arm was stuffed underneath me and alongside his; we held hands here, I realized, against the cotton of my underwear-a meaningless barrier between us and my bulging flesh. \n\nCaught off guard by this surprise advancement, I jumped enough to wake him. I went to lift myself off of him. \n\n\"Stop,\" he grumbled. \"Where are you going?\"\n\nMy own voice far from prepared for the day, I rested again on him and mumbled, \"This seemed a little intimate.\" \n\nHe said nothing for a moment and then laughed. His chest rumbled beneath my ear. \"Don't worry,\" he said. \"We're doing a terrible job at being fuck-buddies, that's all.\"\n\nThere was nothing else to say, so I just laughed along with him."
    ],
    "authorname": "kidboise",
    "tags": [
        "gay",
        "gay male",
        "gay fiction",
        "gay romance",
        "gay asian",
        "asian gay",
        "mm romance",
        "interracial",
        "gay sex",
        "gay love"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/mikey-and-the-chickadee-ch-10"
}