{
    "title": "Mystery Shopping",
    "pages": [
        "Lucy had been a mystery shopper on and off for a few years. It wasn't something she had ever intended to make a career out of, she liked her real job, but it was nice to get free stuff and try out new things. She would never have been able to afford some of the restaurants she'd been to if not for the mystery shopping. She certainly wouldn't have tried paint-balling. The company she worked with were easygoing and allowed their mystery shoppers to pick and choose which of the available jobs they wanted to do. So, Lucy was surprised when she received an e-mail directly inviting her on a job. The e-mail explained that her answers on one of the personality quizzes that they periodically sent out had led them to believe she would be ideal to test this particular client's product. Lucy couldn't think what would make her any different from all the other mystery shoppers but she sent a reply saying that she'd be delighted to co-operate if they sent her the details.\n\nOn the appointed date Lucy arrived at the designated address which turned out to be not quite what she was expecting. Instead of a restaurant or theatre or some other kind of commercial venue she arrived at a fairly large suburban detached house with unkempt grounds. She checked and re-checked the address and, still uncertain, rang the bell. The heavy oak door opened and behind it was a tall man wearing a long, black smoking jacket and leaning on a cane. His age was hard to determine but if Lucy had to guess she'd have put him in his early forties. Worry or ill-health had speckled his hair with grey and furrowed his brow but he still had a somehow youthful expression. He smiled warmly at Lucy.\n\n\"Miss Knowles?\" He enquired politely.\n\n\"Yes.\" Lucy replied, \"Am I at the right address? Is this Magnificent Machines?\" The man nodded, \"And you're Mr Trenter?\" The man nodded again.\n\n\"Yes, you're in the right place.\" He stepped back from the doorway and gestured her inside. Lucy stepped into the quiet house, still somewhat confused, \"All will become clear, Miss Knowles.\" \n\nHe gestured her towards a seat in the parlour off the hall and she sat, \"Magnificent Machines is my company. This isn't exactly mystery shopping, it's more... product testing.\" Lucy nodded, still frowning, \"Your answers in the personality tests show that you may be the ideal candidate to test my products for the consumer market.\"\n\n\"Why are you using a mystery shopping company, then?\" Lucy asked, \"Wouldn't a market research company be more appropriate?\" Mr Trenter nodded.\n\n\"Yes, and I use those sometimes too.\" He agreed, \"I seek out my candidates from all sorts of companies.\"\n\n\"Okay.\" Lucy replied, \"What kind of products? Magnificent Machines is a little vague.\" Trenter laughed.\n\n\"Purposefully so.\" He agreed, \"Will you join me in a glass of wine?\" Lucy shrugged. It wasn't much past midday but this was turning out to be rather a strange job so a glass of wine was welcome. Trenter limped into the kitchen, leaning on his cane for support, beckoning Lucy to follow him.\n\nOnce in the spacious, modern kitchen Trenter pointed to a tall moulded plastic stool and Lucy perched on it as he searched the cupboard, producing two wine-glasses, a corkscrew but no wine. He turned and smiled bashfully.\n\n\"Rather embarrassingly, I've forgotten to bring a bottle up from the cellar.\" He said, \"Do excuse me.\" As he limped towards the door, Lucy started to get up.\n\n\"Would you like a hand?\" She asked, guilty that this poor man was going to limp all the way down to the cellar on her behalf.\n\n\"No, no, my dear.\" Trenter said, waving her back into her seat, \"You stay here. I shan't be long.\" And he left, pulling the door to the kitchen closed behind him.\n\nAs the door closed Lucy almost jumped out of her skin when the chair she was sitting on started to vibrate gently. She almost leapt off the stool until she realised it was rather a pleasant sensation. The man was clearly an inventor of some kind, perhaps this massage stool was one of his inventions. After all, there was such a thing as massage chairs. Lucy decided to test the chair and surprise Trenter when he returned that she had found one of his inventions. It wasn't long before she became aware that the vibrations were beginning to get stronger at the front of the stool where a moulded piece of plastic stuck up between her legs. She licked her suddenly dry lips as the vibrations began to tickle the lips of her vagina, sending ripples of pleasure around her groin.\n\nKnowing that she shouldn't but doing it anyway she shifted her hips slightly so that the vibrating plastic nestled further into her folds. It was a naughty thing to do but it felt wonderful, she was grateful suddenly that she'd worn no panties today so the only fabric between the stool and her pussy was her skirt. The vibration increased in intensity again and she let out an involuntary little moan. Biting her tongue she reminded herself that she was in another person's house, a person who could return at any moment. But, of course, he wouldn't be able to see what she was up to if she lifted the back of her skirt up. As long as she kept the front of her skirt down he would be none the wiser and then she could press her clit down directly on to this vibrating button beneath her. As surreptitiously as possible she did this, squirming to get her skirt up around her arse at the back, pulling it down around her knees at the front.\n\nShe re-arranged her hips again and pushed herself down on to the vibrating stool. She put her hand over her mouth to stop herself squealing with pleasure. The seat was moulded exactly right to fit between her lips and press up against the entrance to her hole and her clit which by now were wet and pulsing. She would have to find an opportunity to wipe the seat, the sensible core of her brain told her, but the rest of her was too busy rocking her hips forward subtly, rubbing herself up against this glorious sensation. The sensible bit told her that this was ridiculous, she was basically fucking a stool in someone else's house with the possibility that a stranger she'd met five minutes ago could walk in and discover her. She tried to pay attention to the sensible bit, keeping an eye on the closed door and one hand over her mouth as she ground her pussy against the vibrating plastic which seemed to be increasing in intensity as her orgasm built. \n\nIn the blindness of the orgasm she couldn't quite remember when the vibration had stopped but by the time she had re-entered the real world it had and was just a perfectly innocent kitchen stool, now covered in her cum. She pulled her skirt back down with a shaking hand and stepped down to the floor. She spied some kitchen towel, grabbed a piece and was wiping the stool clean when Trenter pushed open the door, carrying a bottle of wine. Lucy whirled round and smiled nervously.\n\n\"I spilled some... err...\" She looked around to see her own lie. There was nothing anywhere near her that could possibly have spilled. Trenter smiled kindly.\n\n\"Yes.\" He replied, \"I know.\" Lucy frowned, \"Don't be embarrassed, I really am flattered.\"\n\n\"What?\" Lucy asked in a small voice. Trenter walked round her, patting the back of the stool as he went.\n\n\"My invention.\" He said, fondly, \"I don't have a name for it yet. You seemed to enjoy it.\"\n\n\"I... err...\" Lucy stammered, \"I'm sorry, I...\"\n\n\"Goodness, don't be sorry!\" Trenter laughed, \"Every other candidate so far has leapt off as soon as the thing vibrated!\"\n\n\"Well, maybe if people knew...\" Lucy suggested. Trenter shook his head.\n\n\"No, I want the right kind of girls to test my machines.\" He said, \"The kind of girl who likes cumming enough to do it in someone else's house.\" Lucy blushed fiercely, \"I mean that as a compliment, Miss Knowles.\" He assured her.\n\n\"How did you know I didn't jump off as soon as it...?\" Lucy began the question but was cut off as a screen set into one of the cupboard doors jumped into life when Trenter aimed a remote at it. Lucy was astonished to see footage of herself from just a few moments ago. She had thought she was being discreet but the footage showed her moaning and grinding away, her legs splayed wide open, her hot, wet pussy on display. She turned to Trenter, her mouth hanging open. He pointed up at a camera, almost hidden above the cooker hood.\n\n\"Purely for research purposes, I promise.\" He assured her, \"I'll even sign a legally binding document to that effect. No-one shall see this except me.\" Lucy opened and shut her mouth a few times as Trenter rifled through a drawer and pulled out a few sheets of paper and a pen, \"This is the contract, and the document about the films. Read it. If you wish to continue on testing my other products, sign where the crosses are and follow me. If you do not wish to continue, I bid you good-day and will destroy the footage I have just taken, you have my word as a gentleman.\" Lucy stared after him as he bowed slightly awkwardly and left by the door he'd just entered from. Of course, she wasn't going to sign anything, she was going to leave. The sensible bit of her brain was left to watch as Lucy feverishly read the contracts, signed and hurried through the door to see what other treats Trenter had invented.\n\nTrenter smiled hugely when Lucy entered the next room.\n\n\"I'm so glad.\" He said. The next room had a chaise lounge along one wall with an unusual looking black dress draped on it. Next to that was a padded cabinet, about waist high with a lot of ornamentation down the top of two sides. The rest of the room seemed to be mainly chests of drawers and cabinets. Trenter's storage room, perhaps.\n\n\"If you don't mind, I'd quite like to combine two products here.\" Trenter said.\n\n\"Alright.\" Lucy agreed. Trenter gestured to the dress on the chaise lounge.\n\n\"The dress, of course,\" He picked up a small object from the top of one of the cabinets and held it up, \"And this.\" Lucy peered at the moulded plastic object. It was pear shaped, on a wide flat, base with ridges all around it.\n\n\"A butt plug?\" Lucy asked. Trenter nodded, \"I've never used one before.\"\n\n\"Would you like to try now?\" Trenter asked, \"You may refuse.\" Lucy looked at it. It was really quite small, not like others she'd seen and she was intrigued by the ridges around it. Like the condoms perhaps, ribbed for her pleasure. Anyway, she didn't want to disappoint this charming man.\n\n\"Yes, I'll try.\" She agreed. He smiled, pleased.\n\n\"I'll leave while you change into the dress and insert this.\" He handed her the butt plug, \"Call me when you are ready.\"\n\nHe limped out and Lucy hovered uncertainly for a moment. She hadn't forgotten about the hidden camera in the kitchen but she also hadn't forgotten about the document she'd signed. Nobody would see the footage apart from Mr Trenter and he had already seen her pleasuring herself with a stool so Lucy figured it didn't matter if he saw her changing. Nevertheless, she took off her clothes facing the wall. Inserting the little butt plug gave her a little shiver, but not an unpleasant one and she found she rather liked the feeling of having it there, only really noticing it when she moved. She wasn't sure how much she'd like a bigger one though. The dress was rather more difficult and she had to remove all her underwear to get into it. It was tight fitting, black and made up of interconnecting strips of black leather. It took her a while to figure out exactly which way was up, down, back or front but eventually she had it on. She admired herself in a full-length mirror. The dress was just above her knees and off the shoulder, the black leather strips criss-crossing her body and leaving bare flesh between them. The dress made her look slutty and the feeling of the butt plug made her feel slutty, and she loved the feeling.\n\n\"Mr Trenter!\" She called out. After a short pause, the man entered and looked her up and down appraisingly.\n\n\"Nice.\" He said, \"Do I get a twirl?\" Lucy turned all the way around once. As she was halfway around her second turn, Trenter caught her arm while she had her back to him.\n\n\"Let's see if this works.\" He muttered. Lucy frowned to herself as Trenter fiddled with the dress at the back, near her waist. Finally he pulled something free from the dress.\n\n\"Brace yourself.\" He warned her. Then yanked. Lucy realised that he'd freed one of the straps and pulled it. That strap was connected to all the other straps in the dress so as Trenter pulled the dress restricted Lucy's movements, pinning her arms to her side. Trenter reached around her, pulling the strap around her waist, trapping her wrists as well, then reattaching the strap to the back of the dress and standing back to admire the view. Lucy was almost completely immobilised, could barely walk and couldn't move her arms at all.\n\n\"What's this for?\" Lucy asked.\n\n\"For people who like this sort of thing.\" Trenter replied, punctuating his sentence by whipping his cane across Lucy's arse. Lucy tottered forward, glad she'd abandoned her heels when trying to get the dress on otherwise she would have fallen. The cane whipped her again but this time she was ready for it and stood her ground. She loved a good spanking and could feel her pussy starting to throb as the third blow landed.\n\nAs it did, she felt a vibration which surprised her until she remembered the butt plug. It had gently started to vibrate. She let out a cry somewhere between surprise and pleasure.\n\n\"You do like this sort of thing, my dear, I thought you would.\" Trenter said, pleased.\n\n\"How do you know?\" Lucy asked, her voice already shaking.\n\n\"I can see the light has come on on my device. All my devices measure your heart rate and other boring things to see how aroused you are and they react accordingly.\" He explained, \"You must have noticed that the stool seemed to do just as you wanted it to.\" Lucy nodded that she had, \"Well, if you're enjoying it let's continue.\" He took her by the arm and lead her over to the padded cabinet.\n\n\"Bend over.\" He instructed her. Lucy did so, bending at the waist awkwardly because of the confines of the dress. She found that a recess had been cut into the back of the cabinet, just at the right place for her head to rest. As she lay flat and settled her head into the recess she heard a click and suddenly found that she could move even less than she could before.\n\n\"Clever, isn't it?\" Trenter said, \"There are metal strips throughout the dress and a strong electro-magnet inside the cabinet which I have just turned on. You will find it impossible to move.\" She heard him step away for a moment then return, \"I have a few of this that I wanted to test out.\" He muttered, half to himself, then Lucy heard the crack of a whip and felt the sting of leather across her buttocks. Lucy grunted and was rewarded with another stroke.\n\nTrenter kept up a running dialogue as he tested various different paddles and whips, even feathers at one point. The tickle of the feathers against her boiling skin had made her tingle with excitement. As she had the butt plug increased its vibration and to her surprise increased in size as well. She almost made Trenter take it out but the feeling of the vibrations in her dirtiest hole were making her wet and horny so she said nothing as Trenter continued to pummel her backside, making her pussy weep, making her cry out like an animal. And her increasingly aroused state making the butt plug vibrate madly and expand so much that each of Trenter's blows hit the edge of it and pushed it further up her butt, making her moan even more. The vibrating plug was pushing against the walls of her vagina from the other side and she was writhing and screaming with an orgasm that wouldn't come. While she liked the plug in her arse she wanted something in her pussy. Trenter stopped testing his paddles and whips and stepped away again, giving Lucy a few moments to calm down.\n\n\"Good, Miss Knowles.\" He said. She heard the click again and felt Trenter's hands on her as he helped her to a standing position. As she stood, her own juices dripped down her leg. Trenter saw and smiled, \"Only one last test.\" He promised, \"And you'll be able to cum.\" Lucy would have blushed but she did really want to cum. Trenter loosened the dress for her and turned to a drawer, pulling out another item of clothing. He handed it to Lucy.\n\n\"The dress won't be appropriate for the next test.\" He said, \"You might like this. I wasn't going to test this today, but you'll probably enjoy it.\" He smiled as she took it, \"No panties, but put your heels on.\" He instructed, \"You may leave the butt plug in or take it out, it's your choice. Once again, call when you are done.\"\n\nAnd he left the room. Lucy struggled out of the dress, feeling the butt plug's vibrations dull as her heartbeat dropped. The item Trenter had given her was a bra that was simply a collection of leather straps again, with some notes attached. The notes told her to put the bra on first, which she did. Finding that it was like a skeleton of a bra, leather straps going all the way around the outside of her boobs, and smaller straps going around her nipples. The notes told her to tighten the straps as much as wanted. The tighter they were, the more it would hurt, said the notes. Lucy tightened them as much as she could bear. Her breasts were squeezed and her nipples clamped in tight little straps. It was a sensation she'd only briefly had before when a lover had grabbed her breasts. To feel it constantly was wonderful. \n\nShe strapped her high heels on and called for Trenter who returned with what looked like a dog leash. This he attached to a strap running between her nipples and tugged. Lucy gasped but didn't complain, the ripple of pain had been accompanied by a wave of pleasure and her pussy was reminding her again that she would like to cum very soon. Trenter nodded as if reading her mind and turned, leading her by the tits back in to the kitchen. He opened the back door.\n\n\"My next invention is in the garden shed, it will help you cum. It is doubtful my neighbours will see you.\" He told her, \"Do you care if they do?\" Lucy shook her head, she'd do anything to cum right now. Trenter smiled again and led her through the garden. None of the neighbours did see her but the thrill that they might had left Lucy with a very wet pussy.\n\nTrenter unlocked his shed and pulled Lucy inside. A yank which sent a shockwave through her breasts and straight to her cunt. As her eyes became accustomed to the light, she saw that Trenter had built an exercise bike. It had a hole in the saddle and, given the devices so far, Lucy would bet her last coin that a dildo came out it.\n\n\"I don't have a camera in here.\" Trenter explained, \"So, if it's okay with you, I will watch and make notes.\" Lucy nodded, she didn't care. She wanted to get on that bike and feel something in her, \"Very well, then it is all yours. I think you've already guessed what it does.\" Trenter removed the leash from her nipples and Lucy clambered gratefully on to the bike, arranging herself over the hole in the saddle. The sensible voice cropped up again to remind her that she was going to fuck herself with a bike, in front of a stranger, in a slightly dirty back-yard shed. Lucy told the sensible voice she knew that but she would explode if she didn't fuck something pretty soon and who cared if he was watching. Trenter settled himself on a chair facing Lucy and placed a clipboard and pen on his lap, \"When you're ready, Miss Knowles.\"\n\nLucy began to pedal slowly and, as she had suspected, a dildo poked up through the saddle's hole and tickled the entrance to her hole. She began to pedal faster and the next time the dildo slid inside her. She moaned loudly, then moaned again when the butt plug that she had indeed left in started to vibrate again. The dildo was big, moulded like a penis and even felt less like plastic than most dildos. In her relief at having something inside her she stopped pedalling. It slid out of her again and she began to pedal faster and faster, causing the fake cock to plunge in and out of her wet cunt. She knew that if she stopped pedalling the cock would go so she kept going. She glanced over to see Trenter watching her impassively, jotting down the occasional note. Somehow, that made her more horny than if he'd been whacking it.",
        "The big dildo stretched her cunt and the butt plug stretched her arse and the vibrations were pushing her closer to the brink of orgasm. Pedalling manically the dildo still continued to fuck her and she let out another scream of pleasure when the saddle started to vibrate against her clit. With her bound breasts bouncing and her nipples adding prickles of pleasure to the symphony, she pedalled hard and fast, screaming with pleasure as the orgasm erupted from her tortured breasts, her newly stretched arse, her fucked pussy and her tingling clit all at once and crashed through her. She cursed and trembled and quivered as the orgasm flooded through her, ebbed and flowed away. When she opened her eyes, Trenter was standing over her.\n\n\"You've been most helpful, Miss Knowles.\" He said, handing her a bathrobe, \"If you'd like to test more of my products, my business card is in the pocket.\" Lucy laughed and nodded. She'd certainly be giving him a call."
    ],
    "authorname": "beckettsbride",
    "tags": [
        "toys",
        "voyeur",
        "stranger",
        "masturbation",
        "watching"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/mystery-shopping"
}