{
    "title": "TRC - Searching for the Sky Ch. 04",
    "pages": [
        "Welcome back!\n\nFor those of you reading The Runesmith Chronicles for the first time I recommend starting with the first book, Oni and the Farmer. Mostly so you have a better understanding of how things like the magic system works and what's going on as I often reference earlier chapters/books.\n\nI update my Bio with the latest Chapters and projects I'm working on each time I put up a new post.\n\nAs always votes and feedback are greatly appreciated!\n\nEnjoy!\n\nBlu\n\n------\n\nEdited by: Old Fart\n\n------\n\nChapter 4\n\nTwo figures silently made their way up to Carriston's wall, stopping just outside of the light of the torches placed along the ramparts. They had spent the last few minutes carefully observing the city's Night Watch and were now just biding their time, waiting for their opportunity to get inside.\n\nA couple of guards stopped and talked for a moment directly above the place he and Ria had scouted out earlier. It was in the very center of the fortification between watchtowers and there were no obstructions on the other side beneath where the two men stood.\n\n\"Ready?\" Kal whispered to the cloaked figure beside him.\n\nDaxas nodded beneath the hood causing the cloak to fall open slightly and reveal one of Kal's shirts and pair of trousers, cinched and rolled up to better fit the woman. The wolf girl was extremely uncomfortable wearing human clothes but understood the necessity. Once they were inside they still had to get to the entrance of the slaver's hideout which meant going through city streets and any one of the people they met might raise the alarm if they discovered a monster girl among them. Wearing Kal's cloak she was almost indistinguishable from a human, only the bump over her rear where the cloak laid against her tail was any indication of her canine heritage.\n\nThe guards finished their chat and continued in the direction they were facing. Once the guards had gone a few steps, human and wolf dashed up to the wall. Daxas held the cloak open and Kal put his arms around her, holding her tight. The wolf girl wrapped him up leaving only his head free as his strength rune shone brightly beneath the cloak. After pushing some of the protection portion of the strength rune into his passenger, the mage bent his legs and leapt skyward.\n\nKal had told the wolf they were going to jump over the wall but had forgotten to mention how. Daxas was none too thrilled about her and the human's heads coming so close to the stone ramparts or how those same heads went sailing through the space so recently vacated by the guards, their feet made an arc above them as they sailed over the battlement upside-down. If not for keeping Kal and his spells covered she could have reached out and touched the guard's walkway as they began righting themselves while dropping to the ground inside the city.\n\nShe noticed a little bit of white light leaking out from inside the cloak as their descent slowed dramatically, the feather fall rune letting them land with barely a whisper.\n\nOne of the guards paused and turned around, it had sounded like something fluttering behind him a moment ago. His fellow watchman had also heard the sound and noticed that his friend had stopped walking. Scanning the sky and the lighted ground outside the wall one finally looked at the other.\n\n\"Bat?\"\n\nHis friend shrugged, \"Big bat, but probably.\"\n\nThey both turned about and continued their patrols.\n\nWhen the watchmen had moved far enough away, Kal cautiously looked up, checking to be sure they wouldn't be seen, then led the wolf girl away from where they had landed and through a few of the city's darkened streets before stopping to get his bearings, as well as let out a huge sigh of relief.\n\n\"That was surprisingly easy,\" he said smiling back at his companion. \"I'm not holding onto any hope that the rest of this rescue will be the same.\" His smile faded when he saw the look on her face, \"Um, did I do something wrong?\"\n\n\"No,\" said Daxas, \"just warn me the next time you flip me upside down, I nearly screamed.\"\n\nKal bit back a comment about how next time he flipped her upside down she would be screaming for more. Now wasn't the time for that. Gesturing for her to follow, they made their way through the back streets of Carriston. He did his best to avoid crossing major roads and made sure there was no one on the streets when left with no alternative. Occasionally, carts with lanterns hanging off each corner, manned by the Night Watch, forced them back into the darkness of an alley but those instances were rare. Thankfully, their destination was in a part of town that had remained abandoned long after the discovery of the river beneath them. People had just started moving back into this area as recently as a few years ago. City folk were sparse there during the day, at this hour it was a ghost town.\n\nA half an hour later Kal and Daxas peeked around the corner of a nondescript wooden house, one of the few that appeared occupied, at the entrance to a rickety warehouse. Were it not for the two men standing guard it would be easy to assume that it was abandoned like so many of the other buildings in the area. According to Ria, the structure concealed the tunnel leading to Kogen's hideout.\n\nThe mage looked back to see Daxas glaring at the men, one side of her mouth attempting to curl into a snarl. Stepping back, he firmly pulled her away from the corner, the wolf glaring at him as soon as she couldn't see the slavers anymore.\n\nKal gave her a stern look, \"Those girls in there need an alpha, not a rogue bitch intent on fulfilling a personal vendetta. I know that they hurt you badly, but this isn't the time for revenge.\"\n\nThe wolf continued to scowl at him for a few long seconds before grunting in acknowledgment. \n\n\"Good,\" he said, nodding. Kal produced a small canvas bag from a pocket, fine dust fell from the bottom each time he moved it. \"Do you have yours?\"\n\nAfter a moment's searching, she wasn't used to having pockets, the wolf girl held up a similar bag that also leaked the powder-like dust from between its threads.\n\nKeeping to the shadows, they made their way carefully and quietly over to the side of the building. Above them, gray flakes of paint still tenaciously clung to the wood under the eaves, giving it a rough look in the faint moonlight. Time and weather had stripped away anything lower long ago. He and Ria hadn't done much more than mark the location and worked out a path back to where he planned on going over the wall. Seeing the condition of the dilapidated storage building up close, he started to worry about whether or not the roof would hold them. Unable to think of a better option he decided to hope for the best. Stepping away from the side of the warehouse he motioned Daxas over. Once again, she wrapped his cloak around him as he used the strength rune to launch them both up to the top of the building. This time they were far enough away from the guards that the faint fluttering from the cloak went unnoticed.\n\nLanding lightly on the roof, human and wolf slowly and silently made their way to the front edge of the building, each taking up a spot directly above one of the men. At Kal's signal, they both held out the small satchels and gave them a little shake before ducking back behind the edge of the roof.\n\nSeconds later a couple of indignant voices rang out below them.\n\n\"Oi! Da fuck is this!\" said the slaver staring upward and looking for the source of the dust cloud that had just coated his head and shoulders. The only response he got was a series of violent sneezes from his fellow guard.\n\n\"Fug, I god id in my node,\" said the second guard once he could talk again.\n\nThe first man scanned the sky one last time before going to help the other slaver, who had just noisily blown his nose into the crook of his arm before dragging his sleeve across his face to clean off the rest of the mucus. Clean being relative, his sleeve made it look like this was a frequent practice. As he neared the other man, the dust coating them began to glow. He experienced a moment of panic as the dust caught in his eyelashes blinded him with golden light before he pitched forward, sound asleep before he even started to fall. Kal cut the feather fall rune and dropped to the ground from where he had been drifting down above them, barely catching the man before he could hit the ground. Strikes or attacks canceled the sleeping spell and Kal had found out the hard way that falling flat on one's face qualified for at least one of those.\n\nThe other guard had slumped against the warehouse wall when the spell took effect but only stayed there for a few moments. His boots dug shallow furrows in the dry dirt as his back slid down the side of the building, coming to rest on his bottom. He then sagged to one side and began to snore, large snot bubbles forming each time he exhaled. Kal situated the two men so they were leaning against each other before looking up towards the roof, only to see Daxas come around the side of the building.\n\n\"Hung off the edge then dropped down,\" she said in a hushed voice, responding to the questioning look on his face. Nodding, he met her in front of the large double doors on the front of the warehouse. Easing one side open, Kal let the wolf girl slip inside before entering himself. Looking around one last time for any possible witnesses, he gently closed the door behind them.\n\n------\n\nOff to one side, eyes that glowed red from a darkvision spell widened at the events transpiring in front of the entrance to the slaver's hideout. Even more so when the woman walked back to the edge of the warehouse roof and knelt, grabbing ahold of the eaves before flipping over the side.\n\nAs she hung there his enhanced eyesight witnessed her feet change from human to canine and fur covered. She let go and dropped into a crouch, the dog-like legs absorbing most of the impact from the fall but not all of it. The lump made by the woman's tail showed plainly under the cloak until she stood up again. Her canine feet changed back to human just before she rounded the corner to meet her friend, who had left the two guards sleeping peacefully by the door.\n\nThe observer secretly hoped they enjoyed their nap, Kogen was likely to kill them if the two sneaking in did anything to disrupt his business. He watched through slitted eyes, hiding the telltale red glow from the darkvision spell as the male of the duo checked his surroundings one final time before disappearing inside. The beggar tasked with keeping up with the comings and goings of the slavers slowly backed out of the pile of trash and detritus he had been hiding under. His superiors would want to hear about this.\n\n------\n\nKal turned around to see Daxas pointing at the roof near the back of the building.\n\n\"Really,\" he said dryly. Where she was pointing there was a large hole which starlight shone through near the back wall. They could have avoided the guards altogether. Kal shrugged, nothing to be done about it now.\n\nBefore them lay a large ramp leading underground, heavy wooden beams braced the floors and roof of the tunnel and had small magical lights placed at even intervals. It wasn't a lot of light, but still enough to keep a horse and wagon from caroming off the walls. Clay plaster coated the walls and ceiling, much like the larger wall at the end of the tunnel. Beneath their feet, something akin to the grout he had seen used to build stone or brick buildings covered the ramp, but this seemed much stronger and even felt a little like stone. However, looking over towards the center of the ramp it was easy to tell that natural rock was significantly stronger. The horseshoes on the wagon team had already done considerable damage to the floor in the middle of the tunnel.\n\nReaching out with magic he latched on to the material and lifted. Kal could tell it had stone in it, but also something else that made it feel slippery and unwieldy from a geomancer's perspective. He returned the piece to its place in the ramp and decided to leave it be, that was a mystery for another time.\n\nLooking up he saw that Daxas was a few paces ahead and had turned to wait for him, her expression letting him know she was unhappy with the delay. Giving her an apologetic smile for getting distracted, he quickly caught up to her before they continued on their way downward.\n\n------\n\nThe leader of Carriston's thieves' guild lay in his bed moaning from the attention being paid to his prick by Madame Tufa's latest 'donation'. She was one of the newer girls and didn't have amazing skills, but she was enthusiastic and seemed to enjoy what she was doing. If it was an act, this girl was damn good at it.\n\nA staccato of knocks came from the door to his room, the pattern announcing who was on the other side. The girl bobbing on his cock stopped, the question plain in her large brown eyes. With a smile he reached down placed a hand on her head, pushing down slightly. Along with announcing who wanted to speak to him the knock also stated that it wasn't a high priority, only the most important issues were worth interrupting a blowjob.\n\n\"Come,\" he called out. A red-headed woman quietly opened the door and stepped into the room. The guild leader smirked, at times he found it amusing how even here, where it was totally unnecessary, his charges still made an effort to remain silent. The woman's clothes were tight to reduce the amount of noise she made when plying her trade but without being restrictive. He'd seen how some of the more domineering of Madame Tufa's girls dressed, while just as tight as the woman before him they often looked just a tiny bit awkward. The only way for the redhead to move more naturally would have been if she was naked, not that he would have minded one bit.\n\nThe woman ignored the girl still bobbing up and down on the man's prick and handed him a piece of parchment. \"Someone is raiding Kogen,\" she said.\n\nThe guild leader lightly tapped the girl's head, indicating that she stop and let him concentrate on the letter. Instead of pulling off, she sucked in a deep breath and ran her lips all the way down to his base, the head of his cock slipping into her throat with a swallow. The man grunted at the unexpected sensation. He looked past the parchment to see the girl had her eyes closed and a contented look on her face, her tongue making tiny movements that were pleasurable but not distractingly so. Madame Tufa might not get this one back.\n\nThe letter simply stated that one of the beggars' guild's lookouts saw a young mage and a dog girl breaking into the slavers' hideout. The writer also thought it important to mention that they had left the guards alive. Admittedly, with the ruthlessness of many of his dealings, the guild leader did think it slightly odd for them to leave a potential enemy at their back.\n\n\"Orders?\" asked the messenger. Her face was getting flushed, but the man noted that she directed her sidelong glances at the girl, not him.\n\n\"None,\" he said handing the parchment back.\n\nThe redhead's eyes widened, \"You aren't going to warn him?\"\n\nThe man shook his head, \"The guild isn't getting a cut of his business, which means it isn't our problem. Besides, we get a cut of the whorehouse's profits, his slaves are hurting that.\" He stopped speaking as the girl pulled back and took a couple of deep breaths through her nose before burying her face in his pubes again. \"Try to get that to Rist if the beggar's guild hasn't gotten to him already, he has someone interested in a young man suspected of being a magic-user.\"\n\n\"Understood,\" said the woman then looked over at the girl, \"Is she a keeper?\" she asked.\n\n\"If she's as good with her hands as she is with her mouth she is,\" he said, groaning as the naked woman's tongue began moving more vigorously over the underside of his cock. \"Care to join us?\" The woman pulled back and made a sound indicating she liked the idea. Since she started, she had yet to let his prick escape her lips.\n\n\"Sorry boss you know the answer to that, I don't do dick.\" The redhead reached over the bed and ran a hand over the naked woman's ass, her fingertips brushing along her folds and bumping into the girl's fingers that were making slow circles around her clit. The girl squeaked then let out a low moan as the female thief slipped two fingers inside her, seeking out the small rough spot on the front of her sex and gently rubbing it. She then let out a disappointed whine as the other woman pulled her hand back, leaving her empty. \"Have you fucked her lately?\" she asked holding up her fingers.\n\n\"Not since this afternoon,\" he replied, trying hard to maintain focus on what the thief was saying.\n\n\"That means this is all her,\" she said putting the fingers coated with the girl's juices in her mouth and slowly licking them off. \"Mmm... tasty,\"\n\nWhile staring at the thief the guild leader reached down and directed the girl to go faster.\n\nSmiling at her boss's reaction she turned and headed back towards the door. \"If you don't cum in her pussy send her to me next,\" she said over her shoulder, \"and let me know if you want to keep her. I'll start on her training right away.\"\n\nAs the door to his bedroom closed the man reached down and grabbed two handfuls of hair on the back of the girl's head. He then paused and watched with amazement as the girl lifted up on one elbow and angled her body in preparation for the coming throat-fuck, even more amazing was that she was using one hand to fondle his balls while the other flew back and forth across her clit. Shaking off his surprise he tightened his grip on her hair and began thrusting up into her mouth as he pulled her head down.\n\nThe girl beat him by a couple of seconds, shoving herself down onto his cock while her body locked up and ignoring him tugging at her hair so he could continue to move. He enjoyed listening to a woman moan as she came but the silence of the girl's orgasm while her body spasmed with pleasure was certainly something he could get used to. The frantic working of the girl's throat as she came proved to be too much and he began emptying his balls directly into her belly.\n\nShe held out as long as she could before the need to breathe made her pull back, the last couple of spurts landing on her tongue. Breathing deeply through her nose, she laid her head on the guild leader's thigh, the head of his prick resting just inside her lips as it softened. He looked down at the happy smile on the girl's face and saw that her hand continued to move between her legs, lightly teasing her lips and clit but without any urgency. Laying his head back against the pillow, he groaned; Madame Tufa was going to be so pissed at him for stealing another one of her girls.\n\n------ \n\nKal and Daxas both stared in confusion at the two large wooden doors standing before them. They were wide open.\n\nKal looked at Daxas and shrugged. \"When they brought me in they didn't stop to open them, and there doesn't appear to be anything like stables down here for the horses,\" he said looking around the large empty room. Inwardly he was glad he hadn't decided on using the wagon as their getaway, that entire plan would have just fallen apart.\n\nWith the wagon driver and his helper absent the only thing left was the smaller door to the actual hideout\n\nLocked from the inside. Kal had hoped for, but not expected, their lucky streak to continue. He began inspecting the door frame and hinges until Daxas got his attention. She waved emphatically at the door and made a wiggling motion with her fingers.\n\nKal leaned in close and whispered, \"I don't know the spell to unlock doors.\" In a different situation, he would have laughed long and hard at the incredulous look on the wolf's face. Instead, he went back to looking at the door.\n\nIt swung inward so knocking the pins out of the hinges wouldn't work, he couldn't reach them. The thick beams the door was set into didn't appear to have any glaring defects, nor did the door itself. Kal let out a low growl in frustration. He had wanted to find a quieter way in, but nothing was presenting itself. Kal put his hands just above the door lock and pushed energy into the strength rune before giving the door a shove.",
        "The door held as Kal skidded backwards into the middle of the room. He quietly cursed himself for forgetting to anchor his feet as he walked back. It was now Daxas's turn to fight down the urge to laugh.\n\n\"Huh? What?\" they heard from inside followed by an annoyed groan and some shuffling that sounded like someone getting up off the floor. The wolf's eyes widened in panic, but the mage smiled, they might be able to turn this to their advantage. Kal had expected the disgusting man who checked him for weapons to sleep elsewhere. Then again, if he were one of the slavers he doubted he would be keen on having someone who smelled so bad sleeping in the same room.\n\nKal stumbled and fell up against the door, \"Lemme in baby,\" he said slurring his words heavily, \"I walked all the way (hic) here to shee youu. Did I ever tell you, you live a fuck of a (hic) long way away from the tavern?\"\n\n\"What the fuck!?\" said the man on the other side of the door. The look on the wolf girl's face made it clear she thought the human had completely lost his mind.\n\n\"You know it, baby... I got what you need. Best dick in the city, (hic) right here. You wanna fuck? All ya gotta do is lemme in.\"\n\n\"How the fuck did you get past the boys?\" asked the man. He sounded like he was digging around inside the room.\n\n\"Boys? You got boys in there wit you? Need ta get rid of them boys... you got a (hic)man out here to take care o' you.\"\n\n\"Can't you tell I'm a man!?\" the slaver yelled through the door. Kal winced, that was a bit loud\n\n\"Dat's right baby, I'll be your man. Gonna beat on dis door all night long until you lemme in so I can show you how much of a man I am!\"\n\n\"Like fuggin' hell you are,\" the man inside grumbled, the words were accompanied by the soft click of a crossbow being cocked. \"Looks like the guys are going to have one to pick up in the morning,\" Kal heard as the man unlocked the door and pushed the handle down.\n\nKal moved as soon as the door began to open. Grabbing the handle on his side, he shoved with the help of the strength rune, pushing the dirty man back. As the mage stepped into the room he checked the door's momentum with one hand, so it wouldn't swing open and slam against the wall, while the other grabbed the crossbow and pushed it off to the side in case it went off. With the door taken care of, he let go of the handle and slapped the man in the forehead, a cloud of fine dust enveloping him. Pulling his hand back and letting the small satchel of dust drop to the floor, a dark purple magic circle appeared in front of it as he cast the sleep spell. When the dust began to glow, the slaver's eyes went from shock and fear to drooping and finally closing as Kal pulled the unfired crossbow from his limp fingers and leaned the grubby little man up against a nearby wall.\n\nOnce the situation was under control the smell hit him. They had intentionally not eaten earlier in the day just to prepare for this room, it appeared to have been a wise choice with how his stomach was threatening to unload its contents. Glancing behind him, he saw that Daxas had retreated to the middle of the larger room. Even there she looked like she was about to retch. The wolf girl waved emphatically for him to get on with it.\n\nKal picked up the small satchel of dust from the ground and stepped over the sleeping man to the door at the back of the room. He carefully pushed the handle down and cracked the door open enough to peek out into the kennels.\n\nOnly to see a bleary-eyed Sylus standing in the middle of the room, staring at the door with a confused look.\n\nKal stood up straight and strode through the door.\n\nThe confusion quickly changed to recognition and surprise when he saw the mage. \"You...\" he managed to blurt out before the small bag of powder struck him in the chest just below his neck.\n\nThe speed rune flared as Kal dashed across the room, skidding to a halt in front of the salesman. Bringing up his hand he cast the sleep spell just below Sylus's chin and pointed up at an angle, just in case he had exposed any of the dog girls to the dust. If he put one to sleep by accident he would need to carry her far away from Sylus and the other slaver, or risk waking them as well when he canceled the spell. It took a few moments longer because the powdery sand he used was all over the man's neck and face instead of the top of his head but eventually the salesman's eyes closed and he began to topple backwards. Kal caught him by the front of the shirt and picked him up, carrying him back to the small room he had just exited and Daxas was now making her way through, having taken a corner of his cloak and folded it over many times before holding it over her mouth and nose.\n\nAs Kal closed the door behind them a few of the nearby dog girls looked on with wonder at the two new people. So far, none of them showed any signs of hope that they were being rescued, despite a couple of them seeing Kal take out one of the slavers right in front of them.\n\n\"Get Jakis,\" Daxas whispered, \"Once you have control of them make them obey my orders and we can get them all out of here.\"\n\n\"You're sure, 'orders' not 'commands'?\" he asked.\n\n\"We only need the collars to punish them if one goes rogue.\" She said removing Kal's cloak and handing it back to him then going to work on the rest of his clothes she was wearing.\n\n\"Got it,\" he said, nodding then softly calling out, \"Ria.\"\n\nThe sprite materialized next to her bag and flitted up to his shoulder, absent her normal greeting when she realized where they were.\n\n\"Grab her clothes and I need my staff.\"\n\n------\n\nJakis was just beginning to wonder what was taking Sylus so long, it usually only took the man a couple of minutes to drain his balls.\n\n\"Don't move,\" came a voice from behind him and to his left at the same time a piece of cold metal pressed against his neck.\n\nThe accountant just barely turned his head to see the man who had bought the wolf standing in the doorway by his desk, he held what appeared to be a sword with a three-foot blade and an equally long handle.\n\n\"Give me ownership of all of the girls,\" said the man in the cloak.\n\n\"I don't have ownership, Kogen does.\"\n\nThe money-changer felt a slight sting as the blade just barely bit into his skin. \"Liar,\" said the man, a moment later the wolf he had bought stepped through the doorway behind him, without any sign of a collar.\n\nJakis wasn't strong or brave, but he was smart, which is why Kogen hired him. He had also been fiercely loyal, up until the point Kogen nearly beat him to death, those days were in the past. \"On one condition,\" the cloaked man's eyes narrowed in suspicion, \"I'm going with you. If you take the girls there's not a doubt in my mind Kogen will kill me. Take me with you and I'll help you however I can.\"\n\nThe man pulled the weapon away from his neck, \"Done. I need ownership of the girls and the locks on their chains.\"\n\nJakis took a deep breath. This was his point of no return, once he gave this man control of the slaves his life was forfeit in this city as long as Kogen was alive. That thought brought up another question. \"Is Sylus...\"\n\n\"Sleeping,\" said the man, \"I'd rather be out of here without any blood on my hands.\"\n\nThat certainly wasn't the answer of a man who would run him through as soon as he had the women. \"All of the collars within my possession now belong to...\"\n\n\"Kal.\"\n\n\"Now belong to Kal.\"\n\n\"Come,\" said Kal.\n\n\"One moment,\" Jakis opened a drawer and tossed Kal a familiar looking bag, \"That's the money you paid for her,\" he said nodding at the wolf, \"Kogen hasn't been here to collect it yet. There's a key to the locks in here somewhere,\" he said as he began quietly shuffling through the drawers.\n\nKal whispered something to his weapon making it change into a metal capped staff before looking back at the accountant. \"I don't need a key I just need ownership of the locks,\" he said. \"It doesn't need to be anything ceremonial just state that they now belong to me.\"\n\n\"Th... The locks on the girl's c...collars now belong to Kal,\" he stammered, completely confused.\n\n\"That'll work,\" said the ghostly image of a sprite sitting on Kal's shoulder. \"Say the words, boss.\"\n\n\"Ria store the locks on the girl's collars.\"\n\n\"Got it!\" said the sprite excitedly before jumping off Kal's shoulder and zipping through the leather curtain which the naked wolf girl was holding open.\n\nJakis grabbed the bag that held his personal money, he hesitated briefly before taking the bigger bag that held a sizeable chunk of the money Kogen had made in the last week. He then followed the man into the kennels.\n\n------\n\nBarely discernable strings of magic moved from the accountant over to Kal, tying him to each of the collars in the other room. They had gone unnoticed before and probably would have remained that way if not for so many moving at once. It was a stark reminder that he owned these women and not in the loving selfless way that he owned Ikuno and Bea. The feeling didn't settle well with him.\n\nAs he and Jakis entered the kennels specks of light were floating up from the individual cages as Ria flew past, making a beeline for the bag at his waist. By this time there was enough of a commotion that even those who had been sleeping when they first entered pressed up against the metal bars of their door, peering out at the trio standing at the end of the room.\n\nKal raised his voice as much as he dared, \"I am your new owner, for the time being. You will do whatever I say as well as obey any orders given to you by Daxas here.\" Ria flitted back across the room and under the piece of hanging leather to collect the lock on Rose's cage. At the same time, a wide array of emotions appeared on the faces of the dog girls. Some were filled with hope while others seemed to fall further into despair, seeing him as just another human master and not yet understanding that they were being rescued. A couple of them were casting hate-filled glares at Daxas. \"You're up Dax,\" he said, smiling.\n\nKal didn't really have any idea how this whole alpha-wolf thing really worked but what he saw shocked him.\n\nDaxas dropped down on all fours, trading out her human limbs for their canine versions, but the transformation didn't stop there. Long gray hair sprouted from her back in the shape of an arrow pointed at her tail, at the same time the hair in her head grew out becoming shaggy and almost mane-like. The last glance she spared for him showed her teeth had grown out the same as when she had gotten angry with him. However, nothing prepared him for her eyes. The kind, lusty, vulnerable, determined, human eyes were gone, replaced by the glowing golden orbs of a wolf.\n\nWith a slow, determined pace she stalked over to the closest dog girl, her hackles raised and teeth bared. Kal opened the door to the cage, the girl inside looked to take after a beagle and was plainly no match for the much larger wolf. Kal worried that he might be throwing the women from the frying pan into the fire as the smaller girl crouched down on all fours, backing away and whining in fear. The beagle bumped into the back of her stall and yet Daxas kept coming. With a cry of despair, the dog rolled over onto her back in submission. The wolf bent her head growling and snapping her teeth right next to the beagle's neck while the dog girl tried to look anywhere but at the wolf girl. After a few tense moments the hair in Daxas's back laid down and the wolf licked the smaller girl's cheek.\n\nThe woman looked up at the wolf in surprise, in turn, Daxas retracted her fangs before leaning down and kissing the girl tenderly on the lips. It didn't strike Kal as passionate or sensual, more like one woman saying, \"Welcome home,\" to another.\n\nBy the time she exited the kennel, Daxas once again had fangs and was eyeing up the girl in the next stall. Meanwhile, the beagle girl bounced back up onto her feet and followed the wolf out of her prison, coming over and sitting by Kal and Jakis, content with staying out of the way of her pack alpha. A few seconds later Ria and Rose joined them, the golden-haired dog girl taking up a spot next to the beagle.\n\nThe wolf girl repeated this process three times until she came to one of those who had been giving her hate-filled stares. The girl was nearly the size of Daxas and had copper colored hair with a white streak down the middle faintly bordered by strips of deep brown, almost black. He was fairly sure that someone in the church had named dogs with those markings after Saint Something-or-other. Like the wolf girl, this one was in what Kal was coming to think of as 'alpha form.'\n\n\"You sold us out to a human,\" she snarled, her body twitching from the punishment exacted by the collar. \"You're covered in his scent,\" the girl's voice dripped with accusation\n\n\"Shit! Shit! Shit! You can all talk freely now!\" said Kal in a panic, he'd forgotten about that restriction.\n\nJakis leaned over, \"It will also hurt them if they try to open the doors to their kennels.\"\n\nKal was about to make another declaration but stopped. \"I think I'll leave that one in place until Dax is done. We don't need the girls bolting and causing issues.\"\n\nKal's sudden announcement caught the dog off guard. \"Not only is his scent on me but his child grows within me,\" growled the wolf girl. \"He could have taken the golden one and been on his way, his contract fulfilled, but instead he is here rescuing you,\" the wolf's voice took on a dangerous tone. \"Do you think I have made a poor choice of mates?\"\n\nInstead of answering the woman laid down on her belly her look apologetic and contrite but without an ounce of submission.\n\nKal opened the door and Daxas stepped in, like the others she licked the girl's cheek, but something felt different. \"Come,\" said the wolf girl, \"we are taking too long. Help get the rest of these bitches straightened out, so we can get out of here.\"\n\n\"Open all the cages,\" suggested the large dog girl, who appeared to be Daxas's new beta. \"You go down the middle, I'll have a word with any that don't get in line.\"\n\nThere was little reason to worry about dissenters, the two largest women walked almost side by side, the dog keeping one to two steps behind the wolf, snarling and snapping at the rest of them. If Kal was completely honest with himself, even he felt a little intimidated by the display.\n\nAs Daxas neared came to the last few girls Rose popped up beside Kal, \"Question: why are you doing this now?\"\n\n\"Because right now I own all of these girls and I don't want to. Dax is taking them so I only need to use the ownership for their safety.\"\n\n\"I understand that, I meant why now? Wouldn't it have been better to get us all out of here with the collars and then do this?\"\n\n\"Probably, but the sooner she does this the sooner I can lift the rest of the restrictions on the collars and won't have to worry about them getting punished by accident.\"\n\n\"Kal you're putting us in danger by doing this here and now, any one of the slavers could want a late-night piece and walk in here.\"\n\n\"You're right, we should have done this later. Thankfully, it looks like she's almost done. 'Late-night piece?' never thought I'd hear that out of your mouth.\"\n\nRose shrugged, \"You hear things, sometimes those things stick.\"\n\nDaxas came walking up with the rest of her pack in tow. Taking a close look at the faces before him, he realized that Rose may have been wrong about letting Dax form her pack now. Some of these women had looked broken beyond repair, only good as a wet hole for a man to put a cock into. Now, while some of them still wore a haunted expression from their experiences, there was an undercurrent of determination.\n\nOf course, there were a few who were still in heat and were eyeballing him and Jakis like fresh kills ready to be dug into.\n\nAs silently as possible, Kal made his way just inside the doorway to the slavers' sleeping quarters. Embedding the view into his mind he wove an illusion that closely matched what he was seeing and put it up in the doorway, obscuring the gaggle of dog girls that was about to pass by. It wasn't perfect, but it was still better than what Ikuno could manage.\n\nStepping through the illusion he went over to the exit. Instead of a lock, this door had a flat metal bar with a handle that rotated around into a metal bracket set into the doorframe. It took nearly a full minute for him to open the door without the metal screeching as he rotated the bar.\n\n\"Ria!\" he whispered waving her over. \"Do you have anything that could lubricate these hinges?\"\n\nThe sprite seemed to look through him for a moment as she searched, \"Nope nothing, there's some lamp oil but that leaves a nasty smell and I don't know how well it would actually work as a lubricant.\n\nOut of the corner of his eye, he saw Jakis go over to his desk and pull out a small brass oiling can. Tiptoeing across the room, the accountant handed it to Kal. Taking the can, he gave his staff back to the sprite while he started oiling the hinges. \"It's for my scales,\" he explained, then shot a wistful look back at his desk.\n\n\"Give it to Kal and he can have me store it,\" said Ria.\n\n\"What if he keeps it?\"\n\nRia giggled quietly, \"Wait till you see the inside of the tent, your desk doesn't have anything on the stuff in there. Besides, Kal isn't like that.\"\n\nJakis gave her a confused look. How much stuff could a person pack into a tent? Aloud he said, \"I give my desk and all its contents to Kal.\"\n\nRia looked to over at the mage, who just finished oiling the last of the three hinges. Once she saw him nod, she waved her hand and the entire desk with all its contents turned into a single mote of light before floating across the room to the sprite's bag.\n\nKal straightened up and squirted a copious amount of the thin oil around the locking bar's pivot before looking at Ria and pointing at the oil can. Once she stored it, he carefully tested the door. It wasn't silent, but it was a vast improvement. He had expected the smell of the river to waft in but as he opened the door he instead felt a draft at his back. The sound of rushing water wasn't terribly loud but should have been noticeable for someone imprisoned where the wolf girl had been, however, he was curious how she had known the water was dirty with the air flowing away from the hideout.\n\nRia darted down the tunnel behind the door and was back in a couple of seconds \"There's room,\" she stated.\n\nKal looked back across the room at Daxas and made a beckoning motion. The wolf girl turned to her beta and sent the woman over after a couple of words, then another girl a couple of seconds later. Kal noticed that the two coming towards him had switched to human legs along with the third the wolf now making her way towards the door. More girls stood and switched to human legs at the wolf's words. He was glad Daxas had thought of the clicking of their claws on the stone floor, it hadn't even crossed his mind.\n\n\"Don't go past me or you will end up in the river,\" Ria said quietly to the first dog girl. Once the woman nodded the sprite zipped off down the tunnel. As girls came through one by one and disappeared beyond the door, Kal took a small rock out of one of his pockets. Pushing some magic into the little stone, he turned it into a rod about as long as his finger then wrapped it around the handle of the lock. When he looked up, Rose and Daxas were the last two passing in front of the opening covered by his illusion. They had yet to hear a peep from any of the sleeping slavers.\n\nThe mage stepped through the door and turned. Ropes of magic extended from his hands down into the stone beneath his feet, turning and moving forward for a moment before surrounding a rectangle just in front of the door about as wide as his hand. After carefully transferring both tethers to a single hand he pulled the door closed as quietly as possible. His strength rune glowed as he held the hand with the magic cords flat and lifted his wrist while keeping the tips of his fingers in place. Kal smiled as the torchlight coming from beneath the door vanished, blocked by the rocky lip he had just made that matched the angle of his hand.",
        "His last task was reaching out with geomancy a second time and grasping the ring he had put on the lock's handle. Watching where the pivot pin came through on this side he began making a circle with his hand approximately where the handle would travel if he were on the other side. The pin rotated to follow his movements until he had nearly brought the bar into its bracket. The line of magic he was using to move the stone ring touched the metal bracket on the other side, the iron absorbing the magic tether in an instant.\n\nThe locking bar fell into the bracket and bounced, loudly ringing each time. Kal cringed as the girls waiting further up the tunnel gasped. Putting an ear to the door and not hearing anything from the slavers, he breathed a sigh of relief and made his way to where the girls, sprite, and ex-slaver were waiting for him.\n\nThe width of the tunnel forced Kal to turn sideways and sidle past the girls to get to the front of the group. Quite a few of them, including Daxas and Rose, had no reservations about rubbing their breasts against their rescuer as he scooted past. As he reached Ria, Jakis and the pack's beta, the mage summoned a floating light to illuminate what turned out to be a small natural harbor. The circular room had a small crescent-shaped ledge that ran along the near side of the room, tapering off as it got further away. The water swirled lazily just below the edge of the natural walkway, pushed along by the flow of the river beyond. Now that the door was closed and there was nothing bringing in clean air, the stench from the river had already become significantly stronger in just the last minute.\n\n\"Ria, give the girls the masks,\" he instructed, then addressed the women, \"Put these over your mouth and nose, it won't keep out all of the bad smells, but it should filter out enough to keep you from getting sick.\" He looked at Jakis, \"I'm sorry I only made enough for the women.\" Watching the sprite make a square of fabric with a thick layer of wool attached to it appear in the large dog girl's hand, the hawkish man shrugged and pulled a handkerchief out of a pocket, folding it until it was about the same size.\n\nWhen the bag of holding's avatar returned he had her retrieve the first boat, the speck of light floating out and touching the surface of the water... before quickly returning to the bag. Kal and Ria wore similar looks of surprise as they looked at each other.\n\n\"Maybe it has to be a solid surface?\" the sprite suggested.\n\nKal thought for a moment, \"I need my staff,\" he said. Once the sprite had produced it he held it out and whispered, \"Pike.\" The staff extended as the platinum end cap turned into a small leaf-shaped spear tip. Kal placed the long spear in the water, \"Try again Ria.\"\n\nThe speck of light touched the pike just behind the spearhead, turning into one of the large stone boats with a small splash. The sprite misjudged how far out to go on the spear and the boat began slowly spinning in place as it drifted into the middle of the small harbor, well out of the mage's reach.\n\n\"Hook,\" said Kal as he pulled the pike out of the water. The spear shortened as the point changed into a large rounded hook made for footmen to pull enemies off their horses. Snaring the boat, he dragged it to the edge of the harbor, unable to hide his smile from seeing his idea of a stone boat actually working. Holding it in place, he waved for Jakis and the first set of girls to get on.\n\nAfter letting Jakis cautiously step into the boat, he and Daxas's beta helped the rest board except for two that she sent to the back of the line. At Kal's questioning look she informed him it was her alpha's decision that the girls weren't to approach the slaver for sex, and those two girls were in heat. Kal nodded but inwardly groaned, with the wolf talking about a three-day orgy he had been grateful for the possibility of help with so many women.\n\nAs the last girl boarded, Ria gave the large dog girl one of the saplings while Kal gave her a small stone that lit up with a word. He attempted to explain that the stick was to push them away from the walls but descended into a fit of coughing. The fumes from the river were starting to get to him since he was the only one without something over his mouth and nose.\n\nRia came over with a worried expression as did Daxas, the sprite asking him if he wanted his mask.\n\nKal waved her off, \"I can't talk with that thing on. I'll get it when we're out on the river.\"\n\n\"Bullshit,\" said the wolf after taking a deep breath through the silk air filter, \"you said you were going to use that on me to protect our pup for the trip down. You said you would need to power those marks on your mask the entire way, you can't do that if you are passed out from not being able to breathe.\"\n\nThe mage's eyes widened at the accusatory glare she gave him. With a sigh he held out his hand, the sprite making his runed leather mask appear in it a moment later without being asked. \"Traitor,\" he snapped at the sprite, the small smile on his face showing that his feelings didn't match his tone.\n\nRia plopped down on his shoulder. \"You're just going to have to deal with the fact that I like you and want you to stick around for a while,\" she said as he cinched down the straps behind his head and the rune on the front started to glow\n\nWhen Kal added the rune that would allow him to breathe underwater he also made some improvements to the mask. Tiny squares of leather held in place by metal clips covered holes on either side. This allowed air to escape but any pressure from the outside pushed the pieces into the holes, preventing water from entering. He got the idea from watching how the valves on the blacksmith's bellows worked. Up near the nose, a second set of one-way valves on the inside prevented the mask from becoming a death trap if he was knocked unconscious. Fitted plugs on small strips of leather could be clipped across them for use underwater.\n\nSince he had no plans on diving into the river, he undid the clips; bad air was still better than no air.\n\nKal and Ria repeated the process of summoning the first stone boat, the sprite making this one appear close enough for Kal to reach out and grab it. Kal held the boat in place once again as the rest of the girls boarded. The mage hopped in, making the boat sway enough that some of the dog girls grasped the sides or each other in alarm, and pushed away from the rocky ledge.\n\nKal had Ria give him the other sapling, which he then passed to Rose who took it with a firm nod. Slipping the straps over his head he took a couple of deep breaths before telling Rose and the pack beta to take them out and into the river proper. He then held out the mask for Daxas who pulled the fabric and wool square from her mouth and placed it over Kal's. The mage was surprised at how intimate the moment felt as he tightened the straps to fit her comfortably. Now he just needed to stay in contact with the mask for the next few hours. As Rose pushed them out into the river behind the other boat, Kal sat and Daxas leaned up against him while many of the girls started to settle in. It was going to be a long ride.\n\nNineteen sets of eyes looked back up the river as they heard a faint banging coming from the inlet they just left.\n\n------\n\nKogen sat up as he was startled awake, he wasn't sure at the moment if what woke him had been a real noise or something in his dream. He peered about his room for a moment, looking and listening for anything out of place before laying his head back onto his pillow. The leader of the slavers tossed and turned for the next few minutes, something felt wrong. He normally fell asleep quickly, lulled by the sounds of all the money on the other side of his room's wall.\n\nKogen's eyes snapped open, the normal din coming from the kennels was gone. He listened for a moment longer just in case it had only been a lull. No whines, growls, or barks, the bitches were either dead or gone.\n\nThe leader of the slavers jumped up out of bed, snapping his fingers at an armor stand. Breastplate, vambraces, tassets, and greaves all jumped off the wooden display and opened, wrapping around their respective body part and clicking into place before he grabbed his sword, throwing the strap to the large weapon's scabbard over his head. As he opened the door and walked out of the room, two straps hanging from the sheath near his waist floated up and buckled themselves, securing it in place diagonally across his back.\n\nThe illusion barely registered until the man walked through it, the golden-haired bitch in the back cage and Jakis's desk suddenly disappearing. Growling, he strode over to the leather curtain and ripped it down. His eyes scanned the empty room for just a moment before roaring in anger.\n\n\"Get the fuck up! We've been raided!\" he bellowed towards his men's sleeping quarters as he stomped across the room, following the bitches' tracks up to the door leading to the river. Spinning the bar out of its bracket he yanked on the door.\n\nIt didn't move.\n\nKogen pulled on the door again and again in mounting frustration, the tiny lip of stone holding it shut at the bottom going completely unnoticed. When he finally let go, he threw his head back letting loose a guttural scream before kicking the door repeatedly. Breathing heavily, he turned and saw his men had gathered behind him, staring wide-eyed at their raging leader.\n\n\"Find Sylus and Jakis,\" Kogen glanced at the place where the accountant's desk used to sit, \"if he's still here.\" He drew his sword from its scabbard, \"I'm going to go find out why our guards let this happen.\"\n\n------\n\nThree hours into their gentle drift, Rose had traded off with one of the other girls manning the pole for their little boat and curled up next to Kal and Daxas. The conversation was kept to a minimum because of the masks and, unfortunately, no one could get any sleep since they didn't have any means to secure the filters to their faces.\n\nOne of the girls began slowly crawling towards them from the other side, whimpering and pleading with her eyes.\n\nDaxas looked up at Kal the question plain on her face.\n\n\"Here?\" he asked pulling the silk and wool air filter away from his mouth for a moment.\n\n\"ee eeds ih,\" the wolf said from behind the runed mask, her voice heavily muffled.\n\n\"No,\" he said shaking his head, \"not here, I can't take a chance on being distracted or sleepy.\"\n\nThe girl looked like she was about to burst into tears for a moment then brightened up, during that brief flash of sadness Kal realized that it was the same girl who had been presenting herself when he bought Daxas, the realization made him feel horrible for denying the woman a second time.\n\nThe dog girl came over and whispered excitedly in the wolf's ear. Daxas looked back at Kal a second time before nodding to the woman and holding Kal's hand to her mask before moving out of his lap. The girl tugged down the front of his trousers, apparently, his opinions meant little to the pack. He scowled at his traitorous cock as it hardened from the girl's hand gently stroking him. Once he was hard she turned around and sat down on his prick. Then stayed there with a happy look on her face as Daxas rearranged herself so she was comfortable as well as keeping the mask within easy reach of Kal.\n\n\"Are... you... serious?\" he asked the wolf girl, uncovering his mouth to speak. He could see the smile in her eyes as she sat up for a moment to look at him and nodded, then snuggled in underneath his arm. Sighing heavily, he noticed that the other girls were staring intently at where his prick had disappeared into the woman currently straddling him. Three of them seemed to be having much stronger reactions than the rest. Hearing heavy breathing next to him, he saw Rose panting behind the piece of silk and looking flushed. Make that four.\n\nKal laid back against the side of the boat and groaned. The next few hours were going to take forever.\n\n------\n\nLuckily for Kal, the girls got some sense of relief from just being filled and they didn't even mind if he went soft as long as he stayed inside them. Rose begged off when the other girls offered her a turn saying that she didn't want to betray the old wizard who had sent Kal for her. Despite the normal physical reactions, the young mage didn't really enjoy the experience, the toxic nature of their surroundings was a severe mood killer along with everyone having to hold pieces of fabric over their mouths. However, he also understood that these girls were in dire need and that it could eventually get so bad as to cause physical pain. Judging by the looks of relief they had when he entered them, the dog girls had waited until well past that point before approaching him.\n\nUnfortunately, their relief was short-lived, and he had to go through the whole scenario a second time before light from the surface began filtering through the end of the tunnel.\n\nA cheer went up from the boats as they broke out into daylight; the rescue had started some time past midnight and, judging by the position of the sun, it was now afternoon. Kal estimated that they had been drifting along for close to ten hours, possibly more.\n\n\"Ho! Well met!\" came a call from the western shore. A man wearing all black except for a shimmering deep blue cloak seemed to appear from nowhere. The pack beta had taken over using the pole for the last leg of the journey and now held it pointed towards the man as if to keep him at bay.\n\nThe man held up his hands, \"I mean you no harm,\" he said loud enough for everyone to hear, \"I just wish to speak with the mage and the money-changer.\"\n\nKal nodded at the girl with the sapling in his boat, also the first to approach him hours ago, and she began pushing them towards the shore. Taking the mask away from his mouth the smell was still bad but as they floated further downstream the light breeze kept bringing in fresher air to dilute it.\n\n\"If you wish to talk then back away please, I would like to get the girls clear of the river's miasma before speaking.\"\n\nThe man bowed gracefully and walked a good distance away from the shore while the girls wielding the poles ran the boats aground. Daxas stripped Kal's mask off and jumped onto the sandy shore, the dog girls flooding out of the boats and lining up in rows behind her while casting wary, but not hostile, glances at the stranger.\n\nThe last to get out of the boat, Kal approached the man with Jakis in tow.\n\n\"That's the leader of the thieves' guild,\" he whispered to Kal, sounding terrified. \"He has a lot of influence in Carriston.\"\n\nKal nodded as they stopped a few paces from the guild leader. If you wish to parley I would appreciate it if all members present were visible,\" he said, glaring at the two humanoid outlines of swirling magic on either side of the man.\n\n\"Rist was right you are an odd one,\" the leader of the thieves' guild smiled and nodded to either side. To his right, a red-headed thief in tight clothing appeared while to his left a younger woman flickered a couple of times as she fought with the clasp on her cloak, the same deep blue cloak as the other two were wearing.\n\n\"How may I help you, Mister...?\"\n\nThe man waved off the question, \"my name is unimportant. What is important, is what Kogen is doing right now and what kinds of plans you have for Jakis there.\"\n\n\"I would imagine Kogen is putting together a hunting party unless he believes all of us to be dead or dying.\"\n\nThe man winced, \"See... there you would have a problem. I'm sure you were hoping for the second of those two but in fact, it's the first. You left traces of magic all over his hideout from an illusion, to his men sleeping. Since you are a magic-user he has assumed that you made it down here alive.\"\n\n\"Then why are you here and not him?\"\n\n\"Because instead of going after you right away, he decided to take out his anger on the man who sent you to him.\"\n\n\"Rist.\"\n\nThe man nodded, \"Rist doesn't like being threatened and Kogen is lucky he isn't dead. When he wakes up and tries to get information on you from Rist he is going to find that a number of organizations within the city, including my own, have paid the man very well to not know a thing about you.\"\n\n\"Then you're what? My ally?\"\n\n\"'Ally' is such a strong word,\" said the guild leader, sighing and looking up towards the sky, \"it denotes a degree of friendship and camaraderie.\" He looked back at Kal, \"We aren't friends, I did this to serve myself and my guild.\"\n\n\"Fair enough,\" said Kal. He was surprised by the man's bluntness but not his answer. \"What are you needing me for?\"\n\n\"Kogen needs to leave Carriston of his own free will, with lots of people as witnesses for validation. As such, I'm setting things up to strongly suggest he go hunting for you.\"\n\n\"If the man is such a pain then why not just kill him instead of going to all of this trouble?\"\n\n\"Because Kogen has been the upper echelon's pet for many years, ever since he started supplying them with 'toys.' If he's killed here in the city there will be a huge investigation and the people behind it will be wiped out. We took in the failing assassin's guild a few years ago and I won't put my guild into that kind of danger. You, however, I don't mind sacrificing. If you and him cross paths and you end up killing him, all the better.\"\n\n\"So, I'm your bait for Kogen,\" Kal was mildly shocked that he wasn't more upset about the situation. \"What about Jakis?\"\n\n\"Actually, I want the accountant,\" Jakis gasped and turned to bolt. \"Not like that you twit! To do your job!\" Looking back to Kal he continued, \"Word has it, you were looking to learn some magic. Give us the money-changer and we will give you two months before setting Kogen loose.\"\n\n\"Four.\"\n\n\"Two and a half.\"\n\n\"Three and a half.\"\n\n\"Three.\"\n\n\"Done.\" Kal turned to Jakis, \"is that fine with you?\"\n\n\"As long as they let me bring my desk.\"\n\nThe guild leader watched the interplay between the two, \"Why do I feel like I've been had.\"\n\n\"Because you assumed he was my prisoner?\" asked Kal smiling. \"Do you have a bag of holding or anything that could transport a large desk?\"\n\nThe man looked at the redhead, who then stepped forward. \"Anthiss\" she called. A ghostly image of a winged serpent popped up over her shoulder and snuck underneath her hair, wrapping around the woman's neck.\n\n\"How may I help you, Master?\" said the avatar in a lilting, female voice.\n\nAs the two spoke Kal summoned Ria and had her retrieve the desk putting it on the grass between them.\n\nThe guild leader stepped forward and ran his hand over the polished wood. \"I'd heard that you went back and bought this when your previous employer was selling all of his belongings.\" He looked up at Kal, \"Even if you had demanded a year it still would have been worth it. This man made a particular Duke in Carriston extraordinarily rich and powerful. Seeing that he was the reason behind her father's success, one of the lord's daughters took a shining to him, even so far as having this desk made for the man. His employer didn't like that one of his children was interested in this commoner and fired him, which is where Kogen snapped him up. The Duke's businesses all fell apart after Jakis left, leaving him destitute. When he sold all of his belongings Jakis went in and bought this, paid three times its actual value because the Duke didn't want to sell it to him.\"\n\n\"How do you know all of that?\" asked Jakis.\n\nThe guild leader smiled, \"Because your lady friend works for me now, and is looking forward to seeing you again.\"\n\n\"You? How?\"\n\n\"Actually, it was Madame Tufa who bought her from her father to pay off a gambling debt. He was convinced that he could win his fortune back. She ended up with me for the night and I recruited her.\"\n\n\"You mean bought her,\" said the young woman on his left. \"he had to buy out the girl's contract like he did with me,\" she explained to the accountant.",
        "He raised an eyebrow, \"You're a free woman, you can leave the guild any time you like.\"\n\n\"Pfft! Like hell you're getting rid of me that easily,\" she said giving the man a salacious grin and glancing meaningfully at his crotch.\n\nThe corner of the man's mouth twitched as he tried not to grin while the redheaded woman attempted to hide her laughter behind her hand.\n\n\"Come along Jakis, unless anyone has any objections,\" the guild leader looked between Kal, Jakis, and Daxas with her pack, no one spoke up. \"You should consider yourself lucky your friend settled for only three months,\" the man told the money-changer as he walked across the small gap between them. \"You won't be allowed to leave the guild's headquarters until Kogen is out of town. Not that I think you will mind as the Duke's daughter was very keen on making up for lost time.\"\n\nThe older female thief had the winged snake collect the desk and give the guild leader another one of the deep blue cloaks which he then threw around Jakis's shoulders, securing the top clasp. He then took the lower fastener and threaded the knot through the loop on the other side. As the accountant vanished the man looked at Kal and the girls out of the corner of his eye then undid the intricately detailed closure, making Jakis appear again.\n\n\"Not worth the time,\" he grumbled as he started to walk away, the others falling in line behind him. \"The boy can see us anyway and the dogs hunt by smell.\" He raised a hand and waved goodbye without turning around. \"Three months! You have three months Kal! Make sure you've learned what you needed to and gone on your way in that time!\"\n\nKal stood there glaring at the man's back, certain that he had never mentioned his name.\n\n------\n\nAfter climbing up the rockslide to the upper plateau Kal and the girls came to the forest edge. Turning and looking at the line of women behind him, he was slightly amazed at what he saw. Daxas had arranged the girls in order of smallest to largest meaning she and her beta were at the end of the line. All the women were walking on canine legs, the smaller dog girls in front taking large steps while those coming behind stepped into the paw prints of the girl in front of her. Even though it was relatively easy to follow, the trail gave the impression only Kal and one or two of the larger dog girls survived.\n\nA short way into the southern side of Carris forest he stopped everyone and had Ria give him a square of plain, white fabric. Throwing it on the ground, he called out, \"Panta.\" Then stood back as the tent assembled itself.\n\n\"Velu,\" he said stepping forward and opening the flap for the beagle girl who happened to be the first in line. \"Go slow as you go in!\" he said emphatically. \"There are steps on the inside.\"\n\nThe lack of yelling and loud thumps as they entered meant that they must have listened.\n\nDaxas was last in line and threw her arms around Kal, kissing him hard on the lips. \"You saved my girls, thank you,\" she said before ducking inside. He followed a moment later along with Ria who was sitting on his shoulder, sealing the tent behind him.\n\nTurning around he saw all of the girls bunched up between him and the fire pit. Some were staring intently at him while others looked about the inside of the magic shelter in awe. \"Ria, collect the collars.\"\n\nSqueaking happily, the sprite jumped off his shoulder and buzzed around the group of women their hands going to their necks as the collars turned into specks of light that floated over to her bag hanging off Kal's belt.\n\nHolding his arms open, he grandly announced, \"Ladies... welcome to freedom.\"\n\nKal's eyes widened and he took a step backward seeing the sudden change that came over the pack. On the trip from the city, only a few of the girls and Rose were showing signs of being in heat. Now a dozen sets of eyes blazed with lust directed solely at their rescuer.\n\nKal took another step back. \"Oh, fuck.\""
    ],
    "authorname": "BluDraygn",
    "tags": [
        "fantasy",
        "magic",
        "monster girl",
        "monstergirl",
        "oral",
        "wolf girl",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/trc-searching-for-the-sky-ch-04"
}