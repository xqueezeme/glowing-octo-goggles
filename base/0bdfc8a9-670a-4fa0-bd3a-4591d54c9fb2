{
    "title": "A Masturbation Club",
    "pages": [
        "Attention censors--All participants are over 18.\n\nAttention guys -- No 38 DDD's here. No anal or other female cruelty either.\n\n==================\n\nIt all started when my sister in law, Gail, called and said our friend Alice had decided to supplement her income with something called Slumbertime Parties. She still had a 4 year old at home and was both bored and just a bit short on money for her personal self.\n\nI already knew that the parties were to demonstrate and sell erotic items to women. I did not know the extent of the product line.\n\nBeing just a few years older than Alice (33) and being back in the work force for only 2 years I was quite sympathetic. So when I got an invitation to her first party. I was an easy sell. My only toy was a dildo made by Don, my loving husband, but it didn't vibrate. I knew that there were many exciting vibrating toys available. I just hadn't know how to get them.\n\nPlease don't think that a desire for toys indicated any failing by husbands. I like many females I had more capacity than my male partner. Aside from that he was not always home when the twinges struck. Don was all for me getting some toys. \"Much better than a 'boy toy'.\" were his words.\n\nWell it was quite a party. Almost all of the 15 girls there were new to the party approach. About half of us owned something but only one girl owned up to having a 'collection'.\n\nMy best friend Lana and our friend Janet were also there. I had no qualms about them seeing me there nor did they seem embarrassed by my presence.\n\nWe played games, we saw sexy nothings to wear, sexy lotions to apply to intimate places and so many toys that I got horny just examining the samples and reading the catalogue. Everyone bought something. \n\nI ordered two things, one was about the size and shape of a egg that had a multi speed vibrator inside. The other was hard rubber and just a bit bigger than my husband Don's penis. It curved at the end which reminded me of a favorite lover in my past and it was also equipped with a speed controlled vibrator.\n\nOf course everything had to be ordered. The egg seemed to be popular and most ordered one of those. My friend Janet had ordered something called 'The Beaver' whose function I didn't quite understand at the time. \n\nLana ordered something made of gel which was equipped with a suction cup and a hard plastic vibrating cock which was bigger than the one I ordered. I kidded her saying that we could always share. She smiled but didn't reply.\n\nAlice said that everything should be in by the weekend. Arrangements were made to use the Gail's apartment. She was divorced and her apartment would be empty and therefore private. Nobody wanted to explain things to curious kids. The time specified was 10:00 AM.\n\nWhen I got home I was extra horny and I immediately attacked Don who was already in bed. After a quickie we paused and while we were still coupled I detailed my purchases and the other incidents of the party. He was rock hard when I finished and it turned into one of those great fucks which will be included in my final book of memories.\n\nCome Saturday we all met at Gail's. There were a bunch of packages on the table and our hostess had generously set out a supply of various batteries. Everybody showed up promptly. Most had left by 10:15\n\nThen there were only five of us left the others apparently hurried home to examine and try out their purchase. Those remaining were me ( Barb), Alice, Gail, Lana and Janet.\n\nSince we five showed no signs of leaving Gail took the hint and put on a fresh pot of coffee and a coffee cake. \"I made it just in case.\" she explained. \"I hoped that you four would stay. Somehow I feel like this joins us together a little more.\"\n\nIt wasn't the first time that we five had been a group. Without any deliberate plan we had often been seated at a table at a large affair or just together for dinner or drinks. By us I mean either the girls only if it were that type of occasion or the girls and their significant other if it was a couples occasion. \n\nOther than the eggs everyone had bought something different. Soon we were passing things back and forth and making rude remarks about their use and the expected result of that use. \n\nIt wasn't long until there was buzzing from Lana's egg. She passed it around an again there were rude remarks and suggestions. After a couple of minutes more all of the eggs were buzzing and Gail dared everyone to try their's out. \n\n\"You first.\" we all shouted almost in unison. \n\n\"I need it.\" she said. \"I haven't been laid in two months.\" With that she spread her legs and held it to her crotch. \n\nPerhaps I should explain that it was mid June and the weather was warm. We had all dressed in something skimpy and cool. Alice was wearing a sun dress the rest of us some form of loose shorts. Some briefer than others.\n\nAs Gail pressed it to herself it seemed to sink in and become held between her vulva. I came to the conclusion that she was not wearing panties as wetness began to show around the egg. Meanwhile Gail's eyes were beginning to glaze and her lips were parted and she was breathing hard.\n\nI thought it best to break up the action so I began to clap. Soon the other's joined and Gail came out of her daze and announced that coffee and cake were ready in the kitchen. We were all quiet as we drank and ate until Janet broke the silence saying.\n\n\"You all may think I am awful saying this but I totally enjoyed watching Gail. And I have to admit that it made me horny. So there.\"\n\nWell that broke the ice and we all allowed as we felt the same way. Finally Lana popped up with a surprising suggestion. Not only was I surprised by the suggestion but I was more surprised that it was made by Lana. She seemed to be the most sexually conservative of us all.\n\n\"I think that we should all do what Gail did. It's only fair. We all got a thrill watching her not why shouldn't she get to watch us?\"\n\n\"Well look who's a closet exhibitionist.\" said Gail. \"But I'm all for it.\"\n\n\"That's two.\" said Lana. \"Barb?\"\n\n\"I'm in if you and Janet are. Janet?\"\n\n\"OK.\"\n\n\"Well I never was a party pooper.\" said Alice. \"Count me in. In fact I think we should start a club. How about we get together once a week and masturbate together. Sounds pretty damn exciting to me and it certainly doesn't hurt anybody.\"\n\nWith that Gail poured more coffee and we kicked the idea around and we all agreed and then we made up some rules.\n\nRules:\n\n1. No non participants. If you stayed you played.\n\n2. Panties a minimum when action starts. Beyond that your own choice.\n\n3. Bring your own toy. Trading allowed but not required. 4. No touching others without both their permission and no objection from the other three.\n\n5. Meeting. 8:30PM to 9:30PM Thursday. Place Gail's house unless she is indisposed. Attendance not required if a good excuse. Examples of good excuse. Monthly distress. Vacation. A better offer. \n\nBy now we were all charged up and we headed back to recreation room. There was some fumbling around as some opted to use the facilities. Gail meanwhile went to her linen closed and came back for several beach towels to protect the upholstery.\n\nI accepted her offering but I knew that I wouldn't need it. I would strip to my panty but no way was I going to bare my pussy. No way!\n\nOne by one we stripped to out panties. All except Gail. She still wasn't wearing any. Her almost totally shaved pussy was right out there and glistening in it's wetness.\n\nSomehow after a few minutes we were all holding vibrating eggs to our pussy. I looked around and we were in varying states of arousal with the most aroused being Gail. \n\nShe was obviously near orgasm and all eyes were fixed on her beautiful expression. Her very visible arousal was having a similar effect on me and I was pushing the device as far into me as the panty would allow. It still wasn't enough in spite of me having the speed at maximum.\n\nThen without conscious thought my hand was inside my panty and the egg was sliding around my slippery pussy trying to find the perfect place to rest. Then it found the place solidly against my clit. I switched hands.\n\nNow my left hand was holding the egg and my right was below it inserting two fingers into my cunt. Then it was my fingers fucking me and the egg buzzing against my clit. Seated next to me Lana was had her hand inside her panty also.\n\nMy eyes were seeing ever increasing states of arousal and then watching Gail orgasm. Her second I think. Around me were moans and expressions of pleasure. Then came the final event which pushed my way over the edge and on to multiple orgasms.\n\nI felt a hand slide down my wrist and on top o my left hand. It pushed my hand harder against my willing clit. I had closed my eyes and I kept them closed. Was it Lana on my right or was it Janet from my left. Truth told I really didn't care.\n\nI simply went with it and felt trembling begin in my pussy and engulf my whole body. The line that I was crossing here was so exciting. The trembling was replaced by my pelvis pushing up against what was now three hands. Then it retreated only to raise again. Then again, and again, and then again in that trusting motion that the body does in that moment of seeking deep penetration. \n\nThen we must have all erupted at once. The sounds were so erotic, the sights, now that I had opened my eyes simply overwhelmed me. I took my left hand from under Lana's right (yes it was Lana) and slid it over to her crotch. \n\nI took control of her egg so that she could finger herself. She was the last to come. The rest of us looked around at each other. Still aroused and somewhat embarrassed but all with silly grins on our face.\n\nGail started it and by the time she had finished we had all joined in, saying.\n\n\"Next meeting Thursday at 8:30. Last one to come is a rotten egg.\" \n\n\"OK.\"\n\n\"Well good, no party poopers here.\" said Alice. \"Count me in. In fact maybe we should start a club. How about we get together once a week and masturbate together. Sounds pretty damn exciting to me and it certainly doesn't hurt anybody.\"\n\nWith that Gail poured more coffee and we kicked the idea around and we all agreed and then we made up some rules.\n\nThat accomplished we were all charged up and we headed back to recreation room. There was no doubt that we were all in and the excitement level was intense.\n\nOne by one we stripped to our panties. All except Gail. She wasn't wearing any. Her almost totally shaved pussy was right out there and glistening in it's wetness.\n\nAfter a few minutes we were each holding a vibrating egg to our pussy. I looked around and was thrilled by the sight. Each of us was in a state of arousal with the most aroused being Gail. \n\nAround me were moans and expressions of pleasure. Then I went way over the edge and on to multiple orgasms.\n\nGail had started it and one by one we wore ourselves out and finished it.\n\nThen Gail spoke out and said in a firm and positive tone. \"Next meeting Thursday at 8:30. Last one to come is a rotten egg. That's a joke. Get it.\" \n\nChapter 2\n\nIt was Thursday at 8:28 when I rang the doorbell.\n\nI was the last one to arrive and the others were sitting around sipping wine and waiting for me. Like me they all seemed to have worn a minimum of clothing. I was wearing a T and cotton running shorts and panties. The panties were necessary because otherwise my cotton shorts would have a big wet spot between the legs.\n\nThe conversation didn't stopped when I entered and I picked up a few comments from around the room.\n\nJanet. \"I'm in love. I even gave it a name.\" \n\nLana. \"I set an orgasm record.\"\n\nGail . \"By the time I get everybody out of the house in the morning so that I can have a quickie I'm dripping.\"\n\nAbout then Lana, the evening's hostess, wrapped for order. \"I see no reason to delay. My thought was that maybe we each give a report on our new toys. Anybody?\"\n\nI spoke up first. \"I never had a vibrator before and I love it. The first time what with the anticipation I came in about 2 seconds. And I do mean 2 seconds.\"\n\nLana spoke next saying. \"I bought that suction cup thing. I stick it to the bottom of my bathtub and fuck it while the tub is filling with hot water. It's different and it's fun. I don't come much but I certainly enjoy it.\"\n\nJanet was next. \"I had told Jim what I ordered but not that it came in. I didn't tell him about our Saturday morning either. I wanted to try it out first. Anyhow I trembled with anticipation all weekend and Monday morning till I finally had the house to myself. By then I was so wet I could have handled a bear. \n\nAnyhow I was wearing a skirt and no panty and as soon as the coast was clear I ran to the bedroom. I laid down on the bed and shoved it into myself. I just savored the feeling for a while and almost came just from doing that. \n\nI had memorized the controls and then I just turned it on. Full on. Both units. I just held it there for about 15 minutes and just enjoyed the sensations. I couldn't believe how strong my orgasms were. Not many but really powerful.\n\nAlice was holding a clear glass dildo in her hand. \"God. I'm so hot listening to this stuff. I hope nobody minds if I start. With that she pushed her shorts and panties aside and slit the round end of the dildo deep inside of her. She was stroking herself with it even as it first entered her.\n\nThat broke everything up. We all turned wild and horny. Gail pulled off her shorts and her panties and shoved her egg inside of her and began fingering her clit. She came quickly and then picked up a vibrating stick like device and held that to her clit.\n\nLana had found a place of the floor that her suction cup penis would stick to and she was naked as she impaled herself with it. She held her other purchase in her hand and was offering it to me to try. \n\nI thought for a moment and then decided that I would start with my own and then think about trying her larger one. \n\nMeanwhile Janet too had become naked. \"I can't wait either and I'm going to start.\" Having said that she picked up her Beaver and slid it beneath her short skirt and against her pussy. In seconds she had a look of ecstasy on her pretty face.\n\nBy then I was hotter than the proverbial fire cracker but still a bit modest. Like Alice I just pushed things aside and shoved by vibrating penis deep into my cunt. Like the expert I had become I had turned it full on by the time it was all the way inside of me. \n\nThe room was alive with sound. Vibrating noise. Squishing noise. Moaning noise. Panting nose. Little pleasure yelps in varying pitches. \n\nIt was also rapidly came alive with the smell of sex. With the smell of raw female pussy juice as Don calls it. As I looked around at the four faces I saw four females as I had never seen them before. It was a picture that my mind will treasure always. \n\nBy then there was a lot of very serious and energetic masturbation going on. Meanwhile somehow in the midst it all clothes were being shed. I looked around and realized that I was the only non-naked one there. I stopped long enough to remedy that situation.\n\nInteresting enough Lana and I had not talked since the Saturday get together. I knew that we had crossed some kind of a line and I wasn't ready to speak of it. Neither, as I found later, was Lana.\n\nBe that as it might be here in this room and at this time we were on the same wave length. Without conscious thought we had moved closer to one another and were almost touching. Lana was still fucking her suction cup dick but was now holding the vibration penis against her clit and was in the middle of an orgasm.\n\nWhen she came down off of it she said. \"Let's trade dickies. You need to try the larger one and I can tickle my clit just as well with yours.\" Then she added a question. \"Did you see what Gail and Alice are doing?\"\n\nI looked over to see what was going on. It was a very erotic sight. Alice had removed the clear glass dildo from herself. She was sitting on the floor with her back to the couch and her legs spread wide. Sitting between her legs with her back to Alice was Gail. \n\nAlice held her hand which still held the dildo between Gail's legs and was inserting it into Gail's pussy. My pussy gave a couple of twitches as my mind comprehended that this might be turning into and orgy. If it did I certainly wasn't going to fight it very hard.\n\nI had never done the girl/girl stuff but I certainly had fantasized about 'IT\". In those fantasies I certainly enjoyed doing 'IT\". I had no moral compunctions but only had refrained because it had never been offered except once. In that case I could not develop any desire for the girl making the offer.\n\nI pulled the vibrator from my cunt and held it out to Lana. Without a word she took it in one hand and held her larger one out to me. Actually it probably wasn't really bigger than my husband sometimes gets but it did seem big to me at that moment. \n\nAs I was trying to decide whether to put it into my cunt Lana was holding my toy tight against her clit and was beginning to orgasm.\n\nThe look on her face was one of pure joy. Just about then Janet walked over to us. She was walking funny because she still held beaver inside of her and her knees were weak. \"Did either of you ever come standing up?\" Her voice broke as she succumbed to another orgasm and she sank to her knees on the other side of Lana from me. \n\n\"It feels so different. It's almost like there is something different inside of me. The first time Jim fucked me with my other dildo as I stood I thought that he had substituted another. I made him stop and show me. I loved it but sometimes it actually makes my knees weak.\"\n\nThen she continued saying. \"I don't know how many that was but I've about had it. Isn't this exciting watching everyone doing it. It's better than porno and I really like watching you two.\" Then she looked over at Alice and Gail. \n\nNow they were laying on the floor with their legs intertwined kissing and doing things to each other's pussy. Jan added. \"That's such a hot scene and it's giving me ideas. How about us three get together. Those two certainly won't miss us.\"\n\nAs my mind wrapped around that statement from Janet my body brain took over from my head brain and I discovered that I had removed the big guy off my clit and was shoving him past my slippery cunt opening. It really felt good. \n\nI squeezed my cunt tight around it and the vibrations coursed through me setting me on fire. I moved my eyes back and forth from Janet to Lana to the couple on the floor. I breathed in the smells and listened to the sounds of passion and surrendered myself to it and I began to feel the orgasm start in my toes work up and through my whole body and overwhelm me.\n\nMuch as we had ended the first session Janet and Lana and I ended this one hand in hand and head to head as we each completed our orgasm. \n\nLana, Janet and I and our husbands were sitting around a table at the Moose Club enjoying the music and \"shooting the bull' as the guys call it when being polite. It was something we did about once every five or six weeks.\n\nWe girls were still horny from the second meeting of the \"Masturbation Club' two nights earlier. It wasn't as if we had not totally enjoyed ourselves. The fact was that it awakened something new in us. As we hurried out the door to go home we had arranged this little get together.\n\nIt was not all that unusual to be in that place on a Saturday night. It was a bit unusual for us not to be a group of five couples. However Gail and Alice seemed to have paired off. We three without having actually said so in words seemed to be forming a threesome. \n\nSince we had not discussed it I did not know what if anything Larry or Jim knew about our get-togethers. As yet I had not told Brad. He was certainly aware of and benefiting from my increased hornyness and was not asking questions.",
        "As usual the guys headed for the game room in the back. This gave us a chance to talk as they shot pool or played darts or ping pong. \n\nLana seemed to have that slightly glazed look and half smile which spoke of recent sexual gratification. Janet and I both sported rosy cheeks and wandering eyes which spoke more of lust. Lana was the first to speak.\n\n\"Whatever it is that we started it's the best thing I have ever done. I told Larry about it last night and it's been non-stop sex ever since. We sent the boys to my parents this morning and didn't get out of the sack until it was time to come here.\"\n\n\"I've been holding off telling Brad.\" I said. \"But I've been so horny that he's probably figured out that something happened. Up till now he thinks it's the toys.\"\n\n\"That's about my situation too.\" said Janet as she put in her two cents worth. \"But I'd be embarrassed to tell you how many times I did myself yesterday. I was off work and home alone from about 8 till 3. I actually did wear out the batteries in both my new toys.\"\n\n\"Well. What is the next event on our program?\" I asked. \"And what about Gail and Alice?\"\n\n\"I have a hunch that they would just as soon have their own private club. They seemed to be doing just fine without us, but I guess we should sound them out. How about you doing that Barb? Gail is your sister in law. Will she 'tell you true'?\"\n\n\"I think so I'll give it a try and let you know. Now what about us three?\"\n\nJanet replied saying. \"As far as I'm concerned we were doing just fine. I still want to get together and for the moment I won't worry if it's three or five. Now if we get carried away with our little touchy feely stuff then that might be a different story.\" \n\n\"Oh. Do you want to get carried away?\" asked Lana. \"Just asking. I'm not against it but I really can't say I'm ready for it either.\"\n\n\"Hey guys.\" I had to interrupt. \"I think we're getting ahead of ourselves. Let's just relax and enjoy whatever develops and not try to force anything.\"\n\n\"Meanwhile before the guys come back I'm horny enough that if I dance with Larry or Jim I might get a little carried away. Is that going to be a problem? If it is I'll behave.\"\n\n\"I don't care so long as he goes home with me. The more worked up Larry is the better.\"\n\n\"My sentiments too. Here they come. Sorry, they aren't coming, darn it, they are approaching.\" This from Janet who used to be quite reserved.\n\nWell dance we did. We mostly danced with other husbands and we very deliberately worked them over pretty good. It worked too. Brad was wound up enough that it carried over into Sunday and we had sex each time the kids seemed to be out of the way for awhile.\n\nLana and Janet reported similar results and I began to think very naughty thoughts. Thoughts that just a short time before would have brought instant self incrimination.\n\nI did call Gail to feel her out and after hinting around a bit Gail understood what I was asking and said. \n\nWell. To be totally honest we did get a little carried away. But it didn't get beyond some kissing and helping the other use their toy. It was very erotic having her fuck me with a dildo. Almost like being fucked by a strange guy.\"\n\n\"Is that all you did?\" Said I as my pussy started to tingle. I really don't see much wrong with that.\"\n\nGail replied. \"That's all and I hope we are still up for this week. Just the thought of us five doing it together makes me horny.\"\n\n\"Know what you mean. I'm in. See you then.\" By then I was wet again and I headed to the bedroom to give myself a quickie. This week I thought maybe I'd try to trade toys with someone. It had been very exciting to try Lana's vibrator. It was just enough different from mine to give me a much different sensation.\n\nJanet was obviously getting great orgasms from her Beaver and in fact I was considering adding one to my Christmas list. Maybe she would let me try it. Should I call her and ask? Maybe I would. \n\nThen. \"Hi Jan. Just wanted to let you know that Thursday night is still on. It will be at Gail's again. You up for it?\"\n\n\"And how. God, last Thursday was awesome. If I were a guy I'd be showing hard every time I think about it as it is I get wet but no one can see. \n\nWatching everybody as I did myself was just about as exciting as it gets. Don't you think?\"\n\n\"You know it. I get wet each time I get a visual of you standing over me with Beaver inside of you and you coming and coming. That was so erotic. I was coming too as I watched you.\"\n\n\"I know you were. I think watching each other was making us both come. Don't you?\n\n\"So anyhow Thursday is a go.\" \n\n\"Great Barb. Now how about between now and then?\"\n\n\"I don't follow you Jan. Enlighten me.\" I thought that maybe she was suggesting something but I wanted it to come from her if she was.\n\n\"Ahh, well, well to tell you the truth I wouldn't mind a get together before then. Maybe you and Me or maybe you and Lana and me.\" Janet hesitated but before I could reply she said. \"I can't believe I said what I just said. It almost makes me sound like a lesbian or something.\"\n\n\"Well maybe we both are. I did enjoy touching you and Lana but I don't think I'm ready for much more than that. At least not yet.\"\n\n\"But anyhow call me if you get in the mood for something short of a lesbian encounter.\" \n\nBefore she could reply I continued. \"I didn't get a chance to ask you. How did it go at home Saturday night? I've got to tell you it was hot at my house. You and Lana really worked Brad over good. We must have done it at least six times between Saturday night and Sunday. That's a recent record.\"\n\n\"Well, now that you mention it we did it in the back seat out in the parking lot. Jim was so hot he came almost right away. It was all right though I got off just that quick too.\" \n\nBest laid plans etc, etc. We didn't manage a get together before Thursday night. But it was quite a good time for us all and somewhat different than the previous week.\n\nSince Gail had no kids and her husband is always away on Wednesday and Thursday nights the 'Meeting' was scheduled at her house. Apparently she had put a lot of thought into the situation. She had turned her attic room into something which put me in mind of what I thought a Brothel might look like. \n\nShe said that her husband had helped. They did it for their own selves but she said that he (Gerald) seemed to have thoughts of entertaining up there. She didn't explain further but I got the picture.\n\nIt was a large room they had spread three 3/4 beds around on the floor. Nothing larger would get up the stairs explained Gail plus, she said, Gerry said that considering the activity for which the room was intended for a 3/4 bed was plenty large enough.\n\nSoft red lights, plenty of chiffon hanging around. Plush pillows on top of deep pile throw rugs, soft music and exotic smell completed the arrangement which almost made me wet just from the effect.\n\n\"Since I'm the hostess I get to set the agenda. OK?\" Nobody objected so Gail continued. \"First since we are all walking I made some punch. Drink up. Then I thought that we would each do a solo. With either our own or someone else's toy. Then somebody else gets to make next week's plan. OK?\"\n\nAgain nobody objected and everyone started on the punch which I learned was called 'Fish House Punch' and it was might powerful.\n\n\"Great stuff.\" opined Alice. \"It's going right to my pussy. Of course almost everything goes right to my pussy recently.\"\n\nJust then Lana popped up with. \"OK who goes first. I vote for Gail since it's her idea and her house.\" We all clapped our approval. \n\nGail indicated her surrender by un-tying the belt on the satin robe that she was almost wearing and dropping it to the floor. She had nice boobs on a 5'5\" body and the fact that she played tennis almost every day was apparent as I observed her tight but rounded body.\n\nShe turned around slowly in a mock pose for us and then reached under a pillow and came out with what appeared to be a slightly smaller version of Janet's Beaver.\n\n\"Gail's been holding out. Where did that come from Gail? Come on now, fess up.\" This from Janet.\n\n\"I've had this guy for about six months. Gerry picked it up on one of his trips. He got totally horny just waiting for me to try it out. I was real mean and I made him wait until I did it in private the first time. What a night that turned into.\"\n\nGail showed no bashful reluctance and turned on the vibrators and put it deep into her cunt. \"This doesn't rotate she said it has two vibrators in the dick and one in the clit exciter. This is the first time that I've done it standing up. \n\nShe stood and let the toy so it's thing for a moment then in a husky and wavering voice asked. Is it OK if I come now?\"\n\nWithout waiting for a reply she did just that. She was pushing it into herself as hard as she could and her whole body seemed to be involved in her orgasm. Her head was thrown back and she was making erotic sounds. I like my three companions couldn't help but have my fingers plunging in and out of my pussy.\n\nShe continued not letting her orgasm finish and I couldn't help myself. I slid my skirt down to the floor and then threw my T-shirt into the air and then I was naked too. I had temporally lost my dildo. I found myself with my hand on Gail's shoulder and with two fingers in my cunt as I finger fucked myself standing there in front of God and everyone. \n\nI was amazed at myself for doing what I was doing. I looked around at the others to see their reaction. By now they were all naked. As they watched Gail and I they began to clap their hands in unison with my strokes. Then Gail got into the spirit.\n\nShe held her toy inside of her cunt with one hand and began to slap her side in time with the others. I couldn't help but start laughing and began slapping my side in rhythm too. That is until I came with a rush and earned an additional round of applause. \n\nThat sort of broke up the exhibition phase. I put out my hand to Gail and she handed me her Baby Beaver to try. Then she asked to try Janet's beaver saying that she wanted to try the rotation feature. Janet took the suction cup dildo from Lana and her own egg and found a piece of bare floor for the suction cup and quickly got busy with herself. \n\nLana took Alice's clear glass dildo and her own egg and spread out on her back on a bed and was soon obviously enjoying the combination. \n\nAlice helped herself to my hard rubber vibrating cock saying that it reminded her of a past lover. Since that was a reason that I bought it I made a mental note to compare histories with Alice at the first opportunity. She flopped on the same bed that Lana was on and got right into it.\n\nGail was still standing as she pushed the Beaver into herself. I stood next to her and turned the Baby Beaver controls to full high. He being wet from Gail's juices and I being wet from my own he slid deep into my cunt without effort. Once in there I squeezed my cunt around him as hard as I could and I swear that I could feel his vibrations in my finger tips.\n\nWithout conscious thought Gail and I had our hands on the other's shoulder in mutual support. I glanced down and noticed that Gail's nipples looked very long. Then I looked at my own and saw that mine were just as long and that one was almost touching one of Gail's. I couldn't help myself and I leaned a bit closer until they were touching. \n\nGail looked at me and winked and then said that she was so weak that she needed to lie down. She gave me a brief kiss and I was sure that she gave me a bit of tongue. She then spread herself out over a second mattress.\n\nThere being no room for me there I took the third mattress and watched the joyous facial expressions and exotic body movements of my friends. As before the room quickly filled with the delicious odor of sex and the erotic buzz of vibrating joy toys. \n\nOver riding the buzz of vibrators was the moans and yelps and the heavy breathing and the rhythmic thumping caused by five women as they floated in and out of orgasm.\n\nWe finally exhausted ourselves and soon found our way to the back patio. We were each somewhat disheveled and half dressed. But no one could see us as we enjoyed non-caffeine soft drinks or tea. Again rowdy remarks were common but couldn't hide the undercurrent of love which resulted from our shared experience. \n\nAs we parted there was more intimacy than the previous week and all of the parting kisses were lip to lip. Some kisses lingered a bit longer than might be considered proper. \n\nI had not told Brad about the club as yet. I was waiting for an opportune time. He did know about the party and about my purchases and that I was a lot more horny since then so he wasn't complaining or asking questions.\n\nSeveral times we had used the toys in our lovemaking and he seemed to come extra quick and extra hard when we did.\n\nFinally one night he did start to question me and the time seemed right so I held his dick in my hand and 'confessed' about the club. \n\nHis immediate reaction was to become hard as a rock. Then I briefly described the sequence of events to date as I continued to hold his hard cock. Suddenly I felt it explode and spew cum all over my belly. \n\nThat sounded like a message to me. He must like the whole idea. He didn't loose his hard so I pushed him over onto his back and climbed on. \n\nFor the next few days I simply enjoyed. I used my toys frequently and looked forward to the next club meeting. Sometimes as I masturbated I fantasized some outgrowth of the meetings like having Alice fuck me with the glass dildo as she had done to Gail. \n\nSeveral times I imagined Lana and I doing each other I with my dildo in her and she with her's in me. These brought intense orgasms but I really had no thought of actually doing such things. Of course only a few weeks ago I would have thought the idea of being in a Masturbation Club as being very weird also.\n\nThat Wednesday there was a flurry of phone calls to make sure everyone was still on board. In addition an additional idea was floated and accepted that at each meeting someone would lead off.\n\nIn other words someone each week would start the ball rolling by doing something erotic. Whoever did that would make the rules as to what should immediately follow. I having been involved in the previous meeting opener was put at the bottom of the list as were Gail and Alice.\n\nLana was elected for this week and Janet for the next week. I couldn't help but speculate on what Lana would do. I questioned her several times but all she would say was that she had figured out an interesting trick that she would introduce to us all. She did ask that I bring my egg.\n\nAbout 1:30 on Thursday I found myself home alone and horny as all get out. I called Lana and quickly learned that she was in the same state. I thought about inviting her over so that we could masturbate together.\n\nAs I was trying to work up the nerve Lana suddenly said. \"How about some phone sex? We can each do ourselves and tell each other our fantasy as we do it. OK?\"\n\nAt that moment I was already trying to wiggle out of my shorts and panties while holding the phone with my shoulder. \"I'm already three quarters out of my clothes. If you're serious I am ready.\"\n\n\"Give me a minute. I'm downstairs and in tight jeans. Let me get them off and get to my bedroom. I'll call you back in a minute.\"\n\nA minute later the phone rang. \"I on my bed, I'm naked, and my fingers are playing a tune on my clit. How are you doing?\"\n\n\"I just slid two fingers into my cunt and I am going to fuck myself while I tell you about my fantasy yesterday. I thought about us doing our vibrating dildos together but side by side on the same bed and each of us holding it for the other.\" \n\nJust a few seconds later I heard Lana gasp. \"Oh shit, I'm coming, you made me come. You?\"\n\nI was too but silently. We continued but just told each other what we were doing to ourselves and no more talk about doing each other. We each came again and then again before Lana's daughter came knocking at her bedroom door.\n\nThat night before I left for the meeting Brad locked the bedroom door and kissed me passionately and finger fucked me. When I was close to orgasm he stopped and then pushed me down the steps and out the door. As usual I was naked under my sun dress.\n\nI reached Gail's front door at the same time as Alice and we kissed briefly before entering. \"You were one sexy sight walking with the sun behind you. I was wet to start with, I'm twice as wet now.\" \n\nShe pushed me ahead of her and slid her hand under my dress and pinched my bare bottom as we went up the stairs to the third floor. We were the last to arrive. The other three girls had already made themselves naked and had drinks in their hands.\n\nI wasted no time in shedding my dress and sitting on my legs on the middle bed. Gail handed me a drink which I promptly downed half of and Alice sat next to me her knee against my right thigh. I was startled to notice that my pussy signaled it's approval of her action.\n\nAs I looked around the room I noticed that everyone but me had one hand in their crotch area and nobody's hand was standing still. I invited myself to do the same and began to fuck myself with my middle finger. \n\nAt this point Lana stood up and spoke. \"First I am going to do my thing and then since I get to direct the main event this is what I have decided upon. It's based upon what we saw Alice and Gail do with the glass dildo. \n\n\"It looked like a lot of fun to me so tonight I want Alice the other three of us. So as not to get too carried away I brought a two minute timer. No more than two minutes each. Any objections? Good. Now I will do my demonstration.\"\n\nMeanwhile the single finger in my own vagina had been joined by another. I was wiggling them inside By then I had developed so much pussy juice that the squishing my fingers made as they moved about was noticeable to all. \n\nLana turned to me with a question in her expression. \"In my bag.\" I said. Lana rummaged around until she found my egg. \n\nLana had a shopping bag by her side she reached in and removed a strange looking item. I finally recognized that it was a plastic banana attached to a metal rod with a spring on the end and a clamp at the bottom. \n\nShe explained. \"I was fourteen when I discovered the pleasures that could be derived from the use of the artificial banana. I love it to this day. A few weeks ago Larry made this gadget. \n\n\"How it works is that we clamp it to a chair. Then Larry sits on the chair. I stand in front of him and the banana is just the correct height to be half in my vagina. After I put it in me I stand in front of Larry with my hands on his shoulders and his hands on my buttocks. \n\n\"We kiss and then I move my ass and he guides me and I fuck the banana as we kiss and do other things to each other. It's a totally different sensation having it inside of me and fucking it standing up. Remember Janet the other week? That's where we got the idea. \n\n\"I'm going to do it just a bit differently since I can't ask anyone to play Larry. I borrowed Barb's egg and I have my own. I'm going to hold Barb's egg to my clit as I fuck the banana but give the control to her. I'll use my own on my boobs as I do.\"\n\nAs she was speaking she clamped the device to the chair. Then she stood in front of it and held the banana as she stuck it into herself. She was obviously quite ready as I could see her juice running down it's length. It was a very sexy sight. \n\nShe experimented by making a couple of movements but the chair rocked. \n\nIt was obvious that it needed some weight to hold it down. Lana looked pleadingly at me and I nodded. She removed herself from the banana with a noticeable 'plop' as it slid out of her. I lifted my leg around the rig and sat my hot buttocks on the cold chair.\n\nNow the banana was inches from my face as Lana again positioned herself on it. I was not going to be able to finger fuck myself in that position so we decided that I would hold my egg to myself and Lana would hold her own.",
        "But we would each hold the other's control. It took a little trial and error to get ourselves started but soon we were into it and were both enjoying the beginnings of what promised to be great orgasms.\n\nAlmost immediately Lana turned the control on my egg up to full power. Then as I felt that Lana was getting near I increased the speed on her's. As I did that her body movements went into what is often called the 'short strokes'. \n\nWhen I noticed that I turned Lana's to full and dropped the control and put my hand on the base of the banana and now Lana had something to slam her open cunt into. She began to slam her sopping wet and stretched out pussy against my closed hand. \n\nThen Lana was coming with a scream and I was coming right behind her. I looked around at the others and they were each doing themselves with one hand and touching another with their other hand. It was so erotic to watch that we all continued for a while longer. \n\nWe all allowed ourselves to wind down and then looked sheepishly at one another as we got ready for the next event. \"Does anyone need a drink?\" asked Gail. I found mine and finished it and handed her the empty. \n\n\"I'll need that after Alice does her thing to me. I'm first if nobody minds.\" Again I couldn't get over my own brashness but I definitely wanted to feel that smooth glass dildo slide in and out of my slippery cunt. The fact that someone else would be doing it made it that much better.\n\nGail was positioning cushions for Alice much as they had been when she was doing Gail. Then she inserted a vibrating dildo into her vagina. When she seemed to be in position and had the glass dildo in her hand I sat between her legs with my back to her.  \n\nI could feel vibrations from her vibrating cock against my butt as they transmitted through the mattress and through her thighs and belly. She handed me the glass dildo for me get it started and I maneuvered it around until it had penetrated me about an inch. \n\n\"If you're ready I'll start the timer.\" said Lana. I nodded and Alice pushed on the dildo and it slid smoothly deep into me. She paused there for a moment as I enjoyed the feeling of fullness and then she started the in and out movements.\n\nIt was hard and smooth and it moved without effort in that well lubricated recess. I turned my head left and right with my chin pointed up simply enjoying the sensation. Alice's mouth was close to my ear and she began to whisper to me.\n\n\"I'm so sorry we only have two minutes. I'd love to make you come and come again until you are weak and exhausted. Please call me anytime.\" Meanwhile her other hand had found my breast and her fingers my nipple and her tongue got busy in my ear. \n\n\"I want the same treatment, said Janet \"and by the way I'm next.\" All to soon the timer bonged and I reluctantly forced myself to vacate my position. Gail handed me my drink and I swallowed a large slug. \n\nThere was the definite odor of raw sex in the air as Janet positioned herself with Alice and I laid back on another bed with my vibrating dildo. \"May I share your bed?\" I looked up to see Gail standing legs spread above me. \n\nShe was holding her mini beaver in one hand and massaging her clit with the other. \"I love skin to skin contact when we do this. Am I asking too much?\"\n\nAt that moment it sounded good to me and I repositioned myself length wise on the far side of the bed. Gail lay down next to me and laid her left foot atop my right ankle. We were touching from hip to ankle as I turned the switch on my GUY up to high and shoved him inside of me. \n\nAt that moment the all the events combined to overwhelm me and I began to orgasm. \"I'm coming!\" it was close to a shout. Gail slipped her arm beneath my head and pulled me close. \n\n\"Time is up.\" I heard Lana say that and I watched as she held out her hand and helped Janet up. I had looked away until I heard that old refrain. \n\n\"Is this a private party or may I come to. Pun intended.\"\n\n\"If you can find room help yourself.\" Second later Janet kneeled at the foot of the bed near our extended feet.\n\nA couple of minutes later I heard Lana say. \"We're ready here. Who is going to keep time?\"\n\n\"We're all too busy. You're on your own. Consider yourself on the honor system.\"\n\nMeanwhile we three were still going strong. Several minutes later the sound of girls in orgasm began to fill the room as we each enjoyed release and sometimes several. Nobody was keeping score but we were simply enjoying the sounds and the odors and the eroticism of the event.\n\nI looked around at Lana and Alice and saw that they had changed position. It was much like the scene between Alice and Gail. Each had their hand on the dildo that happened to be in the other.\n\nWe three on the bed had without conscious thought pulled ourselves into much closer contact with each other. I now had one arm around Gail and Janet had moved up. She was still straddling our legs but her knee was close enough that my hand touched it as I pumped my dildo in and out of myself. \n\nAs I came for what would be the last time I took my hand from my dildo and locked hand to wrist with Janet and pulled myself toward her so that her knee was against the dildo as it pushed me over the edge into a long rolling orgasm which ended the session for me.\n\nOne by one everyone became satisfied. We all sported the glowing face and self satisfied look of the well fucked female. We picked up and dressed much as we had arrived we again prepared to head for the kitchen. We stopped when Gail announced that there had been an addition to her home. \n\nNow there was an enclosed Jacuzzi where we could frolic in the nude as we partook of refreshments. Needless to say we were soon all naked again and enjoying the bubbles and the jets and having our final drinks and nibblies.\n\nAs we discussed the evening activities the conversation got a bit disjointed. I could tell what was on everyone's mind but no one seemed to be willing to say the words. \n\nI finally piped up with this little speech. \"I think that I'm as much of a prude as anyone but I have enjoyed every minute of every get together. No one has done anything to me that I didn't completely enjoy. I'm not sure where this is going but I'll holler but not complain if it goes further than I'm willing to go.\"\n\nAlice then said. \"Anybody uncomfortable? I'll take silence as a no. OK, lets hold hands and touch feet and make a vow of silence except to our mates.\" \n\nWe did that and then Gail turned the lights out. In the resulting darkness a bit of what guys describe as 'grab ass' began. I can't speak for everyone but after I felt a couple of hands pet my boobs and one give my clit a quick 'hello' I got into the spirit of things. \n\nI copped a couple of feels myself and later Lana and I dried ourselves and each other and shared a pleasant kiss.\n\nActually there was a second kiss and it was even more than pleasant. We stood naked face to face and each bent slightly forward and kissed again. Our breasts touched ever so slightly and our lips seemed to cling and just as we parted I felt, just for an instant, Lana's tongue touch my upper lip.\n\nAs we parted I looked at Lana's nipples and at my own. All four were extended and hard.\n\nLana and I left and walked toward home together in the dark. Along the way we walked part of the time with our hand on the other's butt occasionally rubbing and pinching.\n\nBrad was in bed when I got in the house and laying in bed, naked with the covers pulled down. I was totally horny and in the need of a real hard cock. I wasted no time in kneeling over him and impaling myself with his hardon. \n\nAfter I had his hard cock deep inside of me I took time to remove my dress and toss it on the floor. He said that he had become tired of waiting and was ready to start without me. As I described the evenings events to him he became extra hard and very aroused. \n\nWe screwed hard and noisily. I came about two minutes later and Brad did too. He kept his hands on my breasts squeezing them and fingering my nipples. \n\nWe were both still very aroused. We started again quickly and as we did we rolled over into the missionary position. I drew my knees up against my chest and the deep penetration which that caused brought us to our final orgasms. \n\nNext morning Brad allowed me to sleep in and I was only half awake when he left for work. Later I was drinking coffee and reviewing the previous nights events in a visual slide show and getting horny again when the phone rang.\n\n\"Hello.\"\n\n\"Hi Barb. What kind of shape is your pussy in this morning?\"\n\n\"Hi. A bit sore but well satisfied. It's not use to all the attention that it's been getting recently. You get laid?\"\n\n\"And how. You?\"\n\n\"And how. I'm still dripping and there's dried cum all over my thighs and belly. Definitely shower time. What's up?\"\n\n\"Shopping, that's what's up. I totally forgot, Larry and I are invited to a party tomorrow night. Larry's work buddies. We get together two or three times a year. I need a new frock. Join me?\"\n\n\"Give me 30 minutes to shower and get ready.\" I hung up and headed for the shower and washed thoroughly and washed my hair. I held my vagina open and let the massager rinse it out and then dried myself and dressed.\n\nLana picked me up. We made a whirlwind tour through a half dozen shops until Lana found just the right dress. It was about mid way between demure and sexy and just right for the type party she was attending.\n\nWe ate in the food court and chatted about everything and everybody except the club and it's members. When I got home my pussy was only damp and seemed healed and my libido was at a reasonable level. \n\nThe weekend was quiet. Brad spent Saturday on the lawn and other chores and Sunday fishing. Sunday afternoon we caught up with Brad at the dock and we found a beach for a family picnic and cooked the fresh caught fish.\n\nIt was Monday morning about 9:00 when the phone rang. It was Jan. After the mandatory greetings and catching up she popped out with.\n\n\"I was thinking, maybe you and I get together for a quickie later?\"\n\n\"What kind of quickie did you have in mind? I'm still not ready for the bi scene if that's what you had in mind.\"\n\n\"Just teasing. But all propositions cheerfully considered. Anyhow coffee and some frank talk. Then........? You game?\"\n\nIn spite of her denial of having ulterior motives the thought that she might be fibbing made my pussy began to tingle. Of course as someone else said these days everything made my pussy tingle.\n\nTwenty minutes later I was opening Jan's front door. Jan was in her office, sitting naked at her computer and reading the days offerings from Literotica. \n\n\"I can't get over it.\" she said. \"Some of these stories make me so horny. Most don't interest me. Others have titles and teasers so repulsive that I want to throw up.\" \n\nI responded saying. \"What we do is that Brad reviews the offerings every day. If he does see something I might like he sends it to my e-mail. He knows my taste very well. He's more tolerant of the other stuff.\"\n\nWe made our way to Jan's patio which was pleasantly sunny and I noted very private.\n\n\"Looks like a great place for nude sunbathing and for other private things too.\" I added.\n\nJan flushed a little and then nodded her head and said. \"I've been known to do both.\"\n\nJust then I noticed some yellow squash ripening in the sun on a nearby table. For some reason the shape excited me. I wondered if one could masturbate with a squash. \n\nJan must have sensed my thoughts. As I looked Jan pointed at the squash and asked.\n\n\"You ever try one?\" \n\n\"To eat, yes. To screw, no. Never tried any veggie. A plastic banana is as close as I got to that but they do look inciting.\"\n\n\"If you want nobody can see in here. I've got a porn ready in the player. We can watch it with the sound off and do it right here. We certainly have done worse things in each other's company. OK?\" With that she picked up the remote and turned on the DVD player and the TV. \n\nI looked at Jan to see if she was serious and said. \"I guess you do it out here pretty often?\"\n\n\"Pretty often is the right expression. Pretty often here, pretty often over there, and pretty often someplace else. The last few weeks I've been doing it again and again all over the house. I can't seem to get enough. I can't imagine what caused that can you Barb?\"\n\nI glanced at the TV screen where a young stud was just pulling his dick out of a beautiful blonde and as his cum flew all over her tits. I pulled my dress over my head and grabbed up the nearest yellow squash and without further thought shoved the small end up into me as far as it would go.\n\nI stood watching the action on the TV and holding the ball end of the squash in my hand began to fuck myself with it. Next to me Jan was doing the same and as she came close and put her hand on my shoulder for support.\n\nI wasn't much help for I was beginning to come too and my knees wanted to buckle. Somehow we managed to stay on our feet as we had our first orgasms of the day. At least it was my first of the day. \n\n\"I love doing it standing up.\" said Jan. \"But my knees are not always willing.\" We fell back on the sofa still holding these unusual pleasure instruments into our bodies.\n\nAfter we had rested a minute I thought of a question I wanted to ask. \n\n\"Janet. Tell me the truth. Did you ever make love with another girl?\"\n\n\"Honestly?\" I nodded. \n\n\"I don't know exactly how you would categorize it. It was our last night ever in the dorm. My roomy, Terrie, and I were just a bit high on some wine we had sneaked in. We were also naked. Somehow we started a pillow fight.\" \n\n\"Next thing we got giggling so hard we couldn't continue and we fell on the bed and started tickling each other. Then we started wrestling. We rolled around and at times had our legs wrapped around each other. \n\nFinally we were exhausted. There we were laying face to face with our thighs locked into each other crotch. We looked into each other's eyes and I just knew that were going to kiss. \n\nI was certain too that if we kissed while in that position with our hot naked bodies together that we were going to go all the way. I couldn't bring myself either to pull away or to kiss her. \n\nShe didn't say anything for a few minutes. \n\n\"Don't stop now.\"\n\nWell we got interrupted and it was dorm party time.\"\n\n\"And that was that?\"\n\n\"Yea. The next day she went her way and I went mine and that was that.\"\n\n\"You sorry?\"\n\n\"Sometimes, yes. Sometimes no.\" Then with a giggle she popped out with. \"I've been saving that particular 'cherry' for you.\" She hesitated another minute before starting again to pound the veggie in and out of her cunt. \n\nBy then most of it was glistening from being covered by her juices. She stood up and then bent forward support herself with her hand on the coffee table. She came again. I looked at her face and she was as beautiful as only a woman in orgasm can be.\n\nMeanwhile I was doing myself with my fingers the veggie having been put aside and forgotten. As I watched Jan come I felt my muscles tighten around my fingers and I slowed down savoring the sensation. I continued to finger fuck myself as Jan now laying on the floor continued her ministrations with the squash.\n\nAs the smaller end disappeared into her the ball end would spread her pussy as it came to a stop against her body. The fingers of her other hand were busy against her clit as she came almost continually in what many girls refer to as rolling orgasms. They are less intense but follow each other closely much like waves at the beach.\n\nAs her body reacted in a particularly spectacular fashion near the end my body reacted also and I experienced one of my better orgasms. I shook and quaked and trembled and kept saying that inane thing girls like to say at that moment. \"Yes. Yes. Yes.....................\"\n\nWe finally settled down and I used her shower. After she fixed some fresh coffee and a snack I rested as she showered. Afterward we sat at her patio table naked and refreshed ourselves.\n\nI picked up my dress and made ready to leave. \"Not so fast there girl. I want to be rewarded for my great idea and I want it before you cover up your lovely body.\"\n\nI spread my arms wide holding my dress in one hand and Jan approached me until our boobs touched and then bent her head forward. \"Thank you.\" I said and I bent my head forward to kiss her. \n\nJan kept her hands at her sides and we kissed for a long time with just our mouths and our breasts touching. My nipples were hard and erect and excited by the feel of my s naked breast. Our tongues touched some but mostly the kiss was soft and somewhat wet. I was reminded of a similar kiss with Lana.\n\nMy pussy continued to tingle as I found my way home. Before I could do anything about it the kids were home and supper needed to be made ready.\n\nSince at our next meeting I was to be the leader. I began searching my feeble brain for ideas but could think of none. Each idea seemed to be an extension of something we had done previously.\n\nI remembered a video I now had. It had been a special hit with Lana who had passed it to Janet who had passed it to me. She had praised it so highly that I watched it as soon as I could and found it to be as advertised. So I decided that the video would be the center of attraction.\n\nThat Thursday evening we were all prompt and no one wasted time before getting naked. Then Gail said. \"OK group I have an announcement. I talked Gerry out of our mountain lake cabin for Saturday night a week. \n\nThat will give us all time to get organized. I thought those who could would carpool and aim to arrive about 3:00 PM. On Sunday morning we would hit the local diner and go home from there. \n\nIt very private and on a lake where swim-wear is not necessary. Just us and our toys. Questions.\"\n\nAlice popped up with a statement. \"I've managed to get the company to designate some product as demos so I will bring a few new items. That will give us plenty of variety.\" That of course was greeted with cheers.\n\nJan held up her hand and was recognized. \"I've got a confession and a proposal. My confession is that I told my sister Ann about our club. She would love to join us. My proposal is that we let her.\" \n\nEveryone looked at everyone else. Finally one by one we nodded our heads and Ann was in. \"Bring her next week.\" Alice said and then, \n\nI was on.\n\nI stood with the remote in my hand and announced that I would do myself with my fingers. Afterward I would turn on the video and that it would be entirely fingers tonight. Then without waiting I began playing with my clit.\n\nBeing the center of attention by doing such a naughty thing in front of everyone was at first intimidating. But a minute later I found myself totally turned on and captivated by being the center of attention. \n\nI was generating pussy juice rapidly and I became so wet and slippery I knew that in just a minute it would be running down my inner thighs.\n\nI started by touching and then working my clit. After a couple of minutes I put two fingers of my other hand deep inside of me and began to stroke myself deeply. Being the star and standing in front of everybody brought out the exhibitionist in me. \n\nThe attention and excitement got to me and I stood there with my orgasm ripping through me. Everybody was watching and applauding and I felt wonderful. I also felt shocked that I had enjoyed it so immensely.\n\nI started the video. I announced that everyone was to join me when I called their name. I called each girl in turn. Alice, Gail, Janet, Lana and watched until each had completed their task and was finger fucking themselves. It was interesting and erotic to watch as each went about it a little differently.\n\nWhen all were busy and obviously happy I found a place on a bed and resumed my own joyful activity. Meanwhile the video with the sound off was generating both raunchy remarks and genuine excitement. ",
        "The screen was a montage of guys coming. Some coming by their own hand. Some by the hand of some female. Some coming as they pulled out of a cunt or a pretty mouth just in time to spray cum all over a willing body. The girls loved it.\n\nThe proof was the sounds in the room and the familiar but arousing odor of female arousal. Soon we were all calling for the actors to come and ejaculate their cum all over us.\n\nAs we really got into it Jan started something new and exciting. After a particularly strong and vocal orgasm she stuck her fingers under Gail's nose. Gail added more excitement to the event. First she took Jan's hand and held it. Then she pulled Jan's fingers into her mouth and started to suck on them. \n\nFollowing that while still holding Jan's fingers in her mouth she removed her on fingers and offered them up to Jan. Jan then followed Gail's lead and took the offered fingers into her mouth and began to lick them.\n\nNext thing I knew Alice pulled my hand from my crotch and began sucking my fingers. Like Gail I reciprocated and by the time the day's session was over we had all tasted the fingers of each of the others. \n\nOne especially erotic moment for me came the time Lana held my fingers and thoroughly tongued them as she bobbed her head stroking them giving them a simulated blow job. I didn't question the meaning of the gesture at that moment but simply enjoyed it.\n\nAs usual the facial expressions the sounds and the odor of sex was itself very erotic and added to the mix that caused some great orgasms.\n\nFollowing our new routine we retired first to the kitchen for refreshment and then on to the hot tub. As we settled in someone remarked about the masturbation possibilities inherent in the action of the hot jets of water against one's pussy. \n\nGail said that she had been able to stimulate herself but had never been able to orgasm. Alice said that she could masturbate all sorts of ways and in just a jiffy she was kneeling on a seat and facing a water jet.\n\nOne by one the rest of us entered and with varying amounts of enthusiasm joined the attempt to be first. I found the jet a very pleasant sensation but didn't seem to have the skill or the will to orgasm.\n\nFinally Alice shouted. \"I'm ready.\" We all watched and it was obvious that she had indeed brought herself to orgasm. She allowed herself to come down and then said. \"What I did was I spread my pussy with two fingers. Then after a couple of minutes I played with my clit while the water pulsed against it and that did it.\"\n\nLana and Jan both tried it. Jan came but Lana didn't \n\nAs we walked home Lana and I calmly discussed where all this was going. We agreed that we would work hard not to let the situation escalate. We did have families and reputations. We decided that she and I and possibly Jan could 'spin off' if need be and go our own way. \n\nI asked also. \"Hey Lana, what was with the BJ you were giving my fingers.\"\n\n\"Nothing I guess. I love giving oral and I guess for a moment I was trying to make your fingers cum.\"\n\nI invited Lana in but she declined saying that she needed to feel a real cock in her pussy along about now. Since I felt the same way we kissed goodnight and watched other to our respective doors. \n\n\"I feel the same way.\" I answered.\n\nThe real cock felt very good. Since the club was started I would feed Brad tid-bits of my activities when I needed to push him and his beautiful cock to new heights of passion and maximum output. (If you catch my drift.) \n\nAfter much discussion and some ground rules having been established we finally climbed into Gail's oversized SUV for the two hour trip to the cabin. It was Friday about noon we all having voted for the extra day.\n\nI didn't really become a reality to me until we arrived at the secluded cabin. We were six for the weekend with our newest member, Ann, having been invited to all our joy. She was about 50 but was a very sexy lady with a mischievous manner about her.\n\nThe cabin was obviously first class but was designed to be a guys hunting and fishing hide a way. It basically was one big room plus an oversized bathroom. There were six single beds plus two hide a beds. \n\nWe had each brought food which we deposited in the kitchen and our carryall which we tossed on which ever bed we claimed.\n\nI didn't bring much clothing as I planned to spend most of the weekend naked.\n\nGail had several cartons. One she said was reserved to be opened Saturday afternoon. Another she opened and spread out the new items. There were three of each. We read the package teasers and they read as follows. \n\n1. 7th Heaven Vibe\n\nWe call this one 7th heaven for a reason. Powerful probe with silicone sleeve with clitoral tickler. It has 7 levels of vibration, pulsation and escalation Plug-in jack for charging or extra power. Glow in the dark one touch activation. \n\n2. Back by popular demand. Experience Flipper's multi-speed, vibrating jelly covered bullet. The beak-like snout will give you wave after wave of orgasmic pleasure. \n\n3. Mr. Dependable. A 7\" long, thick jelly dong with suction cup on base. No batteries, no wires. Pitch your rubber ducky and make Mr. Dependable your favorite bath time toy. \n\nThere was also larger box which we were informed that contained a strap on harness and several attachments and a 'double ender' equipped with a vibrator on each end no less.\n\nWe all looked at Alice as Gail asked. \"What's with the lesbian stuff?\n\n\"I know it is considered that. But these two things don't require skin to skin contact. I brought them along strictly for anyone who might be interested.\"\n\n\"OK. You're off that hook.\" Said I. \"But what's in the big box?\"\n\n\"That's something that I know you will all love. But it's for a grand finale tomorrow.\"\n\nThen she added. \"I also brought something else.\" With that she opened a bag and spilled out a dozen or more bottles and tubes of exotic lotions and ointments.\n\nAs my mind began to seriously consider the various possibilities that this collection of toys, lotions and ointments and sexy females might produce I was a mass of conflicting but horny sensations. \n\nI looked around at the others and I could see a couple of far off stares and knew that I was not alone in my feelings. At that moment I knew that this was going to become a weekend to remember.\n\nWe spent about 15 minutes getting everything in order and then drinks in hand set about exploring the property. Apparently Gail's Grandfather In Law had owned this property as part of a large dairy farm. \n\nA flood control dam was built and the lake it created it left him with a large and valuable Lake front property. Over the years when he felt the need for funds he sold off a piece.\n\nFortunately those earnings had been well invested. So when he still owned thirty or so acres he split that into three pieces. He kept one piece and gave his only grandson one piece and his only granddaughter the other.\n\nThe grandson was Gail's husband Gerry who built this cabin near the water. There were about eight acres of trees surrounding the cabin. Obviously it made for almost total privacy. \n\nThere were two boats plus a Jacuzzi which was enclosed inside of a large Gazebo build near the water. There was also a tennis court and areas set aside for various other outside sports. The lake bottom had been made sandy and made a large water play area and a sandy beach for sunning ones self.\n\nAs we took the tour we began to know our newest member. She soon told of having belonged to a similar club several years before while a Navy Wife. She explained that it helped keep the girls marriage vows intact while their husbands were at sea. \n\n(See Navy Wives Club)\n\nThe tour convinced us all of the total privacy offered by the location and soon we were all naked. We grabbed towels and headed for the water. As might be expected this group of horny women with a history of intimacy the swim session soon developed into frolic.\n\nAlso as might be expected the frolic was used as an excuse to explore the bodies of others in the group. Ann was immediately involved and gave as good as she got. I could attest to the fact that her body though older was as well constructed as the best of us.\n\nAfter about fifteen minutes Janet said to us all. You guys can stay if you want but I intend to go back and try out some of the new goodies. With that she picked up her towel and began drying herself as she walked to the cabin.\n\nWithin a minute or so we were all following. I looked over the display and was immediately attracted to a bottle labeled 'Passion Fruit - an edible and warming body massage lotion.' \n\nA message on the package said. \"You and your partner will enjoy trying to hold on to the other's slippery body parts as you and they are warmed by the lotion.\"\n\nThat did it for me. I opened the bottle and immediately coated each breast with the oil. It began warming them right away and my nipples got most of the heat. I tried pinching my nipples and the oil was so slippery that I couldn't get a good grip. \n\nNext I massaged some into my mons and then between it's lips. Again the effect was almost immediate. My eyes were closed as I enjoyed the sensation and I was caught by surprise as I heard.\n\n\"May I try that? From the look on your face it must be pretty good.\"\n\nI thought I recognized the voice as Ann's but I didn't open my eyes but simply held out the bottle for her to enjoy. After a few minutes I again heard the voice say.\n\n\"Now I see why the expression on your face. This stuff is wonderful.\" I opened my eyes and sure enough it was Ann standing about a foot away with a far away exotic look on her face. She was trying to grip a nipple with her left hand and her right hand was massaging her slit with three fingers.\n\n\"I think that you're about to come.\" I said to Ann. She just nodded and kept going and I continued to watch. Sure enough in just about a minute her body began to tremble. She seemed unable to support herself and she glanced around seeking support. \n\nJanet was directly in back of her and obviously in a similar state. They backed up to each other and gave support to the other as they each came to their own mutual but separate orgasm. It was a beautiful sight. \n\nThey finished and I was calm enough to select a toy from those available. I chose 'Flipper'. He looked like a fun toy. Just for added interest after I checked the batteries I lathered him liberally with lotion. \n\nHe slipped into me without effort and brought a warmth to my cunt that I had never felt before. I turned him on full and had to fight to keep myself from an instant orgasm. His snout was producing extra special sensations to my clit and the lotion had both clit and cunt nicely heated.\n\nAbout then I detected a whiff of my favorite perfume. The scent of female arousal. As I let that enter my conscious mind I also began to hear the sound of vibrators buzzing and of little moans and other orgasm sounds. I looked around and there were five other females in various states of pre orgasm, orgasm or post orgasm enjoyment.\n\nIt was a beautiful sight that would, if photographed would be an instant best seller around the world. It was enough to overcome my resistance. I gave my body permission to orgasm and it instantly responded. And a wonderful response it was. Right up there ranking high where so many had been since we started this club.\n\nCLAP-CLAP - I heard the sound come from somewhere. \"OK ladies. That's enough for now. It's supper time.\" It was Gail speaking.\n\nEventually were got our minds on supper and we milled around and carried on some as we put together something which resembled supper. \n\nAfter supper it was still light but getting cooler as we sat around the Jacuzzi which was near the lake and was inside of a nicely sized Gazebo. We were all still naked now being warmed by heat the hot water emitted. Gail read the temperature. \"104 she said. Perfect. Who is going to join me and we'll check out the jets.\" She entered slowly letting her body adjust to the temperature of the water. I followed and was soon settled in enjoying the heat and the pulsing water and the closeness of the five other bodies.\n\nSoon there was a lot of sexual activity going on which was concealed by the bubbles and the darkening sky. For example I had my left hand on Lana's thigh and my right on Janet's and each of them had a hand on me. \n\nAnn was to Janets right and Alice was to Lana's left and Gail was in between Ann and Alice. Gail looked as if something was tickling her clit. I was not sure if it was a water jet, her fingers, her neighbors finger or some combination. \n\nActually I really didn't care. Earlier I had heard Janet ask Ann if she would partner with her if the double dildo and the strap on were brought out. Ann had agreed but commented that maybe they might want to experiment with more than one partner.\n\n\"Interesting.\" I thought and for the moment I was struck with disappointment at the fact that I did not have a sister to share my love with.\n\nAt that moment Ann looked at me and saw that I had heard the her last comment and gave me a wink. I winked back and it occurred to me that maybe we had entered into a contract.\n\nA tremor passed through me as thoughts flashed by in my mind of the types of possible encounters between us girls. I recalled some subtle but real exchanges and that produced mental images that were exciting to say the least.\n\nI have to admit that over the last several weeks that my lesbian hormones which were once quite active had petered out from lack of fulfillment. Now they were beginning to demand attention again. The thought of a direct sexual encounter with any of the girls present was becoming very exciting to me.\n\nThe three of the most interest at that moment were of course Lana and Jan and as of today Ann. Suddenly Jan squeezed my thigh and I looked to my left to see what was happening and I saw Jan's face take of a slight blush and her eyes become slightly glazed.\n\n\"Something's happening to her pussy.\" I said to myself. I had seen her face take on that exact look many times during our masturbation sessions. It was a face of a lady in orgasm.\n\nI looked beyond her at Ann who again winked at me. I knew that it was she who was doing pleasurable things to Jan their activity hidden by the bubbles.\n\nAbout then I heard another familiar sound and I knew that Alice was also having an orgasm. I looked and sure enough her body was moving as if she was fucking one of the water bubble jets. \n\nA few minutes later Lana apparently got into the same rhythm and she came also but less obviously than Alice. I knew because I could feel her bodies react through my hand. I began to gently squeeze her thigh in time with her bodies reaction.\n\nThe timer picked that moment to turn off the bubble maker and everyone took that as a sign that it was time to go inside. We were soon drying ourselves as we quietly and chastely walked to the house.\n\nIt was cool and we all quickly found need of some kind of a warming garment. Janet had brought some Fish House Punch which always broke down any tendency toward shyness and soon we had each picked out a new toy to evaluate.\n\nThis time I felt the need for a good fuck and I grabbed Mr. Dependable. There were two of each toy and Jan took the second MR. Dependable. She laid back on the floor and began doing herself with long but slow strokes.\n\nI was anxious for a better view and I took mine over and used the suction cup base to stick it to the floor directly in front of Jan. I kneeled over it bent forward with one hand supporting me and the other holding my precious dildo. \n\nI aimed it at my cunt and they found each other. I then slowly lowered myself until it slid easily deep inside of me. How good it felt. Hard. Very hard. I leaned forward and repositioned myself until it would touch my clit on every stroke. Then I was fucking it. I was fucking it hard until my first orgasm overwhelmed me. \n\nThen I allowed myself to relax and to do what I had moved to this particular spot to do. I wanted to watch Jan close up. I wanted to watch her toy slide in and then slide back out glistening with her juices.\n\nMeanwhile I began to hear and smell the eroticism of six horny broads who were satisfying themselves to their hearts content. As usual if one could capture, preserve, and market that scent it would sell for hundreds per ounce.\n\nI was close enough that I could see each little ripple of the skin and fold of Jan's pussy as her dildo slid in and our of her juicy cunt. I could smell her juices and my own movements on my dildo speeded up. I humped it and each time it filled me I felt each of it's ridges and valleys. My cunt was gripping it so tight I was concerned that the suction cup would let go before I exploded into orgasm. But it did hold and I did explode into orgasm.\n\nIt was marvelous to watch Jan's body react as she watched my orgasm. I saw the twitches and the little contractions increase and her juices leak around her dildo. Then her ass started to lift from the floor. Just a little at first. Then with increasing frequency and each time a bit higher.\n\nFrom around the room I could hear the squishing of pleasure instruments sliding in and out of sopping wet pussies. I could hear from a couple in addition the thump of a hand meeting crotch as the stroke bottomed.\n\nI could hear the little moans and gasps of pleasure and on occasion the uh-uh-uh as an orgasm struck with it's indescribable pleasure. I could smell too, smell the odor that I loved more than the odor of any food, the odor of a female body in lust.\n\nSomehow my face had found it's way between Jan's knees. I noticed the nearness and began to kiss the inside of her left knee as she approached her orgasm. Then it penetrated my dull senses what I was doing and how close I was to licking her pussy.\n\nAt that moment I happened to think of the 'Double Ender' and the 'Strap On'. I thought for a time as to just how they might fit into our activities. Then I found myself saying to Jan.\n\n\"Considering what we are doing how would you feel about using the TWO HEADED MONSTER with me?\n\n\"Anytime. Anywhere.\" Was Jan's reply. \n\nThat sent me back off into my own world of orgasm after which I was finished for the night. Later I found my way into one of the beds and later still I awoke in near total darkness to feel myself being covered with a light blanket. \n\nSomeone, I think that it was Jan, blew gently into my ear and whispered. \"I'm looking forward to it.\" At that point I began what a man would call a 'wet dream' when I awoke I was soaking wet as was my sheet even though I had no cum to ejaculate as I came.\n\nThen I fell back asleep. I finally came awake with quiet chatter all around me and the smell of a breakfast being cooked in the air. I did my morning ablutions and finished with a shower and joined the group at the buffet set up on the kitchen counter.\n\nAfter about 15 minutes of idle chapter Gail wrapped a glass with her spoon for attention and said.\n\n\"First I want to thank everyone for the wonderful day I had yesterday and last night. If anyone didn't suffer a whole bunch of great orgasms it's 'shame on them'.\" We all applauded and she went on. \n\n\"I propose that we use the morning to let our pussies recover and to tour the lake. Perhaps if you have not already it will also provided a chance to choose partners for the double stuff should you decide to open that box. Or maybe I should say 'Open your box for that' ha-ha. \n\n\"How about a tour, then lunch, then swim and jacuzzi then sex at about 3:00 PM?\"\n\nWe all signaled our approval and began cleaning up. Soon we were touring the lake in the 22 foot pontoon boat which had been tied to the dock.\n\nWe toured the lake for about 2 hours stopping to gas up and pick up some cold drinks. Then Gail found her way to a cove almost hidden by two small islands. She beached the boat and then told us why she had stopped there.",
        "\"The whole bottom is sandy and it's only waist high most places. It's a great spot to skinny dip.\"\n\n\"It's a great place for sex too.\" Those words came from Ann.\n\nAnn went on to explain. \"I've been here before, long ago. We were with another couple and we anchored our house boat here for a couple of days. We had a great time, all of us.\"\n\n\"More, more.\" Several of us cried out together. \n\n\"No. I've pretty much said all I plan to say except that everyone pretty much enjoyed everyone else before the trip ended.\"\n\n(See NAVY WIVES CLUB CHANGE'S COURSE.)\n\nAnn refused to say more and soon we were all naked and frolicking in the water. We were copping feels and wrestling with each other even more than usual. There were several erotic moments.\n\nOne for example came when Gail and I started some horse play which ended with her behind me and holding my boobs, one in each hand. I simply relaxed and we sank down under the water where our bodies were concealed.\n\nAs our heads came back above the water Gail continued to play with my nipples which grew harder as she blew in my ear. I reached behind me between our bodies and began to finger Gail's clit. Hard to tell where that would have gone until Ann and Alice attacked us. \n\nAnn whispered her apology saying that she thought that we were becoming too obvious and that Alice seemed like she might be upset with us. \n\nSoon after we got back aboard and cruised slowly back to the dock with me wondering just what might happen later if we did break out what might be thought of as Lesbian toys. I also considered how far in that direction I was willing to go today.\n\nActually I already knew 'how far' if it came to that. What I was really wondering was 'with whom' it would be. I was pretty sure that it would not be Alice. But insofar as the other three were concerned I would happily 'be with' any or all. \n\nWe made ourselves a delicious lunch and then partook of the Jacuzzi which this time seemed to make us all sleepy. At least it did me. I curled up on my bed with a light blanket and napped for about two hours. I guess I was building a reserve for what ever was to come. \n\nI awoke slowly and I found myself wet and horny and ready for whatever might develop. While still in that half awake stage I heard various remarks and light laughter. Various erotic pictures of what might be going on flashed through my muddled brain. That only increased the wetness and my horny state.\n\nWhen I was fully awake I found that I was in the midst of what might be called orgy preparations. There was punch made. There were toys laid out neatly. The double ender and the strap-on were also present. But there was something new.\n\nIt took a minute to figure out what it was. When I finally figured out what it was a thrill shot through me almost causing an instant orgasm. I walked over to it and carefully inspected it and found it to be exactly what I thought it was.\n\nI looked at Alice and said. \"I don't care how much it costs, order me one.\"\n\nWhat it was might be described as a English Saddle. It was mounted on four legs. It was equipped with a very erect cock about a third of the way back and at a slight backward angle. It had what might be called handlebars and attached to them there was a control box.\n\nI didn't know it then but there was also a remote control which would give someone else control as you rode.\n\nAlice first demonstrated the various vibration speeds. The she made it rotate in several different patterns. Then last but not least she made it thrust. \n\nIt had three different thrust patterns. Finally she showed us that there were five other different choices of penis attachments.\n\nNeedless to say we all walked around it and touched and felt and played with the control and made all sorts of bawdy remarks. Meanwhile each of us was putting our name in contention to be first.\n\nWe learned that this was the first model and was called Mark 1. It would soon be obsolete and it was not for sale. The Mark 2 was to have the capability to fuck from different angles and imitate doggie style or missionary style. They were working on an ejaculation ability. Price to be announced. \n\nWe all speculated as to what we thought the price would be. We all also made outrageous statements as to how much we would pay for it. Alice then offered up the info that the whispered price being bandied around among the sales staff was $995. \n\nWe all agreed that it seemed like about the right price and then I think we all began calculating in our own minds how we could afford one. The only one of us rich enough to afford one at this moment was obviously Gail. \n\nWe all looked at Gail as she said. \"If the Mark 2 will shoot hot cum, then order me one. I'll allow the club to use him as long as he lives at my house.\" \n\n\"OK.\" Said Alice. \"Any volunteers for the first ride.\" We all volunteered. Then Gail produced a deck of playing cards.\n\n\"How about we draw? High card or low card first?\"\n\nWe agreed on the obvious. The high card. I drew a Jack of clubs which placed me second behind Lana. Then it was decided that since the machine was obviously brand new and untried that Alice, having supplied it, deserved to take it's virginity.\n\nIn that same vain we elected Gail to have 'sloppy seconds' a position she happily accepted. Alice walked over to examine the attachments and quickly close one that she said closely matched her husband in size and shape. \n\nAlice attached it to the machine and watched and felt the penis with her hand as she ran the controls through their full range of options. By then I could see fluid running down her thigh.\n\nThat got me so hot that I headed to the other table to find my friend from yesterday. Mr. Dependable. I was just beginning to let him begin to probe my cunt as Alice carefully positioned herself on the saddle.\n\nShe wiggled around as she tried various settings. From my perspective I could not tell exactly what actions that she was trying. To be honest since I was now enjoying the ministrations of Mr. Dependable who was now deep inside of me and producing very erotic sensations I really wasn't much interested.\n\nI was well on my way to my first orgasm of the session when Ann and Lana and Jan lay down near me. Gail meanwhile was close to Alice studying what was going on and casually masturbating herself with her fingers as she did.\n\nAlice seemed to be proceeding slowly and she and Gail were paying little attention to us when Ann began to speak. \n\n\"This is a great weekend. Years ago I belonged to a club of Navy Wives. That was before vibrators but we had loads of fun together. My husband and I and another couple spent almost three days on that houseboat most of it in that same cove we were at this morning.\"\n\nShe continued. \"The guys masturbated with us at first. Soon we got past masturbation and tried all the various combinations of two, three and four that we could dream up. I still get wet when something reminds me of it.\"\n\nI felt the need to clarify her statement. \"Do you mean that you swapped?\"\n\n\"Yes.\"\n\n\"Do you mean that you and the other wife did lesbian stuff?\"\n\n\"Yes.\"\n\n\"Do you mean that you made threesomes?\"\n\n\"Yes.\"\n\n\"How about the guys. Did they do each other?\"\n\n\"Yes. But under slight duress. We made them do oral together before we girls would perform for them. They didn't argue much. It was fun to watch.\"\n\nBy then, between Ann's story and humping the dildo I was in the midst of a series of smaller orgasms which I've heard described as 'rolling orgasms'. \n\nJan popped in to the conversation saying. \"Ann and I are both bi. In my case only with her. But we'd love for you two to join us.\" \n\nJust then Jan had to stop as her pelvis began to jerk in that familiar ritual of her orgasm. It was a beautiful sight and I was very turned on by her suggestion.\n\n\"I'm game.\" I managed to mutter in between comings. \"But not today.\"\n\n\"Me toooooooooo.\" said Lana. But it was soft and hard to hear as she was coming as she said it.\n\n\"Time!\" shouted Gail. Interrupting us. \"Your ten minutes is up Alice dear. My turn.\"\n\nI watched as Alice separated herself from the machine. She needed a little help and it was obvious that the machine had fucked her thoroughly and well. Suddenly I could hardly wait. Lesbianism was something I would think about next week. Today was reserved for Mark. \n\nNow Gail stepped over to Mark and made ready to mount him. First though she bent and sniffed at the dildo that Alice had been using and smiled. It was still fully extended but was turned off. \n\nMark was about chair height or maybe a little higher the extending across the front. Gail stepped over the saddle and positioned herself over the still extended dildo which was still wet with Alice's juices.\n\nShe slowly lowered herself wiggling her butt while taking the dildo deep into her cunt until she was firmly seated in the saddle. It was so exciting to watch that my own juices were running down my crack.\n\nGail took the control in her hand and made a selection. I could hear a slight buzz as apparently her first selection had to do with the vibrators. She soon bent her head back showing her obvious enjoyment of whatever sensation she had programmed into Mark.\n\nAfter a few minutes she made a change I'm not sure what but this time she let it do it's thing until she came. She repeated that pattern several times. First making a change and then savoring it until she came. \n\nFinally she got to the control that made the dildo stroke in and out of her. It was obvious that this was happening as she got into the rhythm with it just as if she were being fucked for real. It was obvious too that it was giving her great joy.\n\nShe came quickly and then adjusted the control I assumed for a faster stroke. After three or more orgasms someone called time and it was Lana's turn. \n\nBy now the dildo and the saddle were sopping wet and Lana picked another dildo and wiped the saddle before beginning. Like Alice she retracted it and started from there. \n\nMeanwhile I washed Mr. Dependable and then peed and cleaned myself up as I awaited my turn. As I reentered the room Alice and Gail were walking toward the Jacuzzi holding hands. I had an idea that they would be spending the night in the same bed.\n\nLana was adjusting the control as I moved closer to her. She was humping back and forth over the dildo which seemingly was making it's longest strokes and at near maximum speed. \n\nLana seemed to be in continuous orgasm. Her head was back and her eyes glazed and her mouth hanging open through which she was gasping. Her eyes came around to me and my presence registered. \n\n\"Join me Barb. Please. There's room behind me.\" \n\nThere was room behind her and I climbed aboard. I was tight against her with my rock hard nipples boring holes in her back. I could feel the interaction between Lana and the stroking dildo. It was all very erotic.\n\nI first placed my hands on her waist but that didn't seem close enough. Then I wrapped my arms around her interlocking them at about belly button height. Lana removed her hands from the handlebars and took my hands in hers and placed my hands one on each breast.\n\nThen she took the handlebars again and left my hands where they were. I couldn't help but begin to pinch her nipples but before I got carried away time was called. \n\nNow it was my turn. Jan and Ann helped Lana off and I did much as Gail had done. I simply impaled myself with the dildo and began to check out the controls. \n\nThe controls were clearly marked so I first turned on the vibrators. There were three in the dildo. One at the base, one in the middle and one in the tip. I turned them on one at a time and ran each through it's entire speed range.\n\nEach of course produced it's own sensation and each at high speed brought me close to orgasm before I shut it down. Then I got brazen and turned all three on together at maximum speed.\n\nThat produced an immediate orgasm which continued until I turned them back off. Even then my orgasm continued for another full minute or so. \n\nI didn't have much interest in the rotating programs so I turned next to the thrusting control. By then juices were flooding from me and the dildo felt wonderful inside of me as I adjusted the stroke for it fullest length but kept the speed slow.\n\nJust as I had watched the other's do I couldn't help but make my pelvis move in long slow ellipsis which produced the maximum sensations. As I squeezed it along it's entire length with my woman muscles we produced sensations the like of which I had never felt.\n\nIt was a totally enjoyable experience and one which I wanted to continue forever. No quick orgasm here. I wanted to gallop off into the sunset with my cunt riding this instrument of pleasure.\n\nBut that was not to be. My time was limited and I soon turned up the speed and rode my new found lover to several glorious orgasms before my time was up.\n\nPoor Mark got little rest. Every time I awoke I could hear his mechanical noises and above them the sounds of one of my friends pleasure.\n\nAnn and I ended up sleeping together and I do mean sleeping.\n\nShortly after lunch we cleaned up the cabin and gathered up and washed the toys. Knowing looks passed between us as it was noticed that each and EVERY TOY had seen use.\n\n====\n\nThe club continued for several years and there were a few departures and a few additions. \n\nMeanwhile there were also some activity that while known to all was not mentioned in meetings except as raunchy remarks intended to stir up some action.\n\nNo promises but the first of the spin offs in well under way and hopefully will be out soon."
    ],
    "authorname": "Cousin-Barb",
    "tags": [
        "female masturbation",
        "dildo",
        "mutual masturbation",
        "public masturbation",
        "masturbation club"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/a-masturbation-club"
}