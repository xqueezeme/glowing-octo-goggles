{
    "title": "Story Telling 101",
    "pages": [
        "I am new to \"Literotica\" and for that matter, new to writing for the purpose of entertainment. I am not even sure how long I will continue. I read many stories by various authors before attempting to tell some of my own experiences.\n\nMy background experience and training probably greatly influence both my writing style and my judgment of stories written by others. As I say in my writings, I have been in the field of commercial construction management since the mid-'80s. When you are writing contracts, proposals, request for information (RFIs) or request for proposals (RFPs), you must be precise in your wording and descriptions. How long, how tall, what brand; the shape, the color, the style, and so forth; all become very important. \n\nThe feedback I am getting from readers is as varied as the critique of my management style. In my business, some people will say that I am extremely thorough; and in that I am highly complimented. Some others will observe that same style, then say something like, \"Ask him what time it is and he will tell you how to build a clock.\" Obviously that is an exaggeration, but I am still offended by that analogy.\n\nOne thing to remember about my writings is; If you are wanting me to get quickly into a description of the sexual act without telling just how we got there in the first place, you are reading the wrong author. I do understand that some people are only interested in the sex. I have even abandoned some stories because they were not interesting while they were getting to the good part. Every story is not for every person. You may find it difficult to believe, but I have never been able to sit through an entire showing of \"Gone with the Wind\" while many people are passionate about that movie \"classic.\"\n\nI have decided to give a few examples of what influences my story telling. I hope you will find some enjoyment in reading this \"non-erotic\" entry.\n\n<p align=\"center\">This is my theory on telling a story, listening to a story and judging whether or not that story is correct.</p>\n\nMark Twain said, \"Truth is stranger than fiction, but it is because Fiction is obliged to stick to possibilities; Truth isn't.\" That is not to say all unbelievable stories are true and certainly not that all believable stories are false. However there is an overlap where stories need to be verified in some manner to validate them.\n\nThat validation might come in the form of the trustworthiness of the story teller. I know people that I have known closely for several years, some as many as 35 years that would not tell a false story under any circumstances. Some of them might even use themselves as the character in a joke that sounds a little unbelievable, only to reach the punch line and break out laughing. At that time, their real intention is obvious, so explaining is unnecessary. Professional comedians do this all the time. I doubt seriously if all Jeff Foxworthy's stories are actually true and the same can be said for most all people in this field of entertainment. Holding these people accountable for their outrageous stories is as ludicrous as holding a professional actor or actress accountable, because they are not really like the characters they portray.\n\nValidation may also come in the form of detailing the contributing circumstances, like when, where, why and how. The best example I can think of, comes from the movie \"Working Girl.\" In this movie \"Tess,\" played by Melanie Griffith was trying to convince Mr. Trask, CEO of Trask Industries that is was HER idea to buy Radio Stations. Her efforts included telling how she was reading one particular portion of a magazine or paper and right across the page was another article that caught her attention and that caused her to look somewhere else, and so on, etc. She finally and methodically mapped out how she went from one step to another step to devise the final plan or proposal. I could go into much more detail about the movie plot, but the result was, it caught Mr. Trask's attention, so he asked \"Katharine,\" played by Sigourney Weaver, how SHE come up the same idea both women claimed as being \"theirs.\" She was only able to stutter and say, she just come up with it. Who do you think Mr. Trask believed? Right!\n\nAnother form of validation is having your facts straight. After the fallacy of the lyrics was first called to my attention, I always hated the portion of \"Cotton Fields\" by Credence Clearwater Revival (and many other singers) that said \"It was down in Louisiana, just about a mile from Texarkana.\" If someone will check the map, it is more like 30 miles from Texarkana to the Louisiana border. I guess finding location names that rhyme in the South where cotton is raised, takes preference over geographic accuracy. Judging by the number of different artist that recorded this Huddie Ledbetter, a.k.a. \"Lead Belly,\" written song during the last 4 decades; accuracy cannot compare to rhyme and rhythm when it comes to the popularity of a song. I do not think the same acceptance exist in storytelling.\n\nAnother similar song/movie geographic mistake was \"Smokey &amp; the Bandit.\" You remember the song; \"&hellip;them boys are thirsty in Atlanta, but there's beer in Texarkana&hellip;\" In the movie, as soon as the truck hit Texas, they were in a flat plains area, almost \"desert like\"; much like you might see in western Texas, maybe southwest of Abilene or Odessa. Texarkana Texas and Texarkana Arkansas are both surrounded by hills and pine tree forest, not plains and barren waste.\n\nI have used three different forms of entertainment here to help illustrate some of my personal beliefs and observations concerning communicating a story or an event. That seems to be part of the confusion between my form of storytelling and that of other people. Do you want the story to be entertaining? Or do you want it to be factual? Personally, I would prefer it to be both!\n\nI have read stories saying something like, \"We were driving across the US from LA to Florida. We spent the first night in Tucson, the second night in Amarillo and the third night in Mobile.\" I know instantly the story is not true. How did they get from Tucson, Arizona on Interstate-10 to Amarillo, Texas on Interstate-40 and then back to Mobile, Alabama on I-10? I have made some pretty major driving mistakes, but if you make one that big, please tell me how and why you did it; tell me how and when you discovered it and tell me how and when you corrected it.\n\nComparing two stories; one that is mostly based on facts or truths and then embellished by someone for entertainment purposes and another that is 100% factual, is like comparing a movie with a documentary. Both of these types have their purpose, and preference to one does not destroy the value of the other. My stories seem to lean more toward the documentary. Hopefully the reader or listener will find some entertainment while reading, but I refuse to sacrifice facts to gain that amusement value.\n\nI truly believe that the very best advice I ever received was when I was about 18 or 19 years old. A casual friend and I were together at a local car race track. We did not go there together, but somehow ended up together as we were trying to pick up 2 girls that had come together. In trying to impress these girls, I made a statement concerning running the track on foot as opposed to running it in an automobile. I mentioned I had run \"track\" in high school and then asked a question that exposed my lack of understanding for what I had just claimed. This other guy looked at me and called me by my name before continuing by saying, \"--- if you are going lye, at least know what you are lying about!\" So many times since then, I have heard someone tell a story trying to bring attention to themselves, only to destroy the authentication of the story by using inaccurate statements. I almost always remember this advice from so many years ago.\n\nOne of the best examples of this involves a bar room tall tale, that was told for the truth and not as part of a joke. I was working in a small southern town for several months. My standard hang-out in that town was the bar area, in a well-known nationwide chain restaurant. It was one of the town's most popular happy hour locations and there was almost a \"Cheers\" type crowd. Not exactly the same people every day as at Cheers, but if you went several days in a row, you would see many of the same people, multiple times. I was actually dating a lady who worked as one of the bartenders there; so sometimes I would go in at lunch or mid-afternoon when the crowd was sparse.\n\nOne of those afternoons, I sat around the corner from a guy I had seen maybe 3 or 4 times previous. At some point, maybe that same day I learned his name was Jimmy. He was always talking loud, mostly on his cell phone discussing his business which seemed to be some sort of specialized painting. The bartender I dated was pouring a simple drink using \"Jack Daniel's\" whiskey.\n\nThat prompted Jimmy to tell a story that seemed to grow as it progressed. He said a friend of his had bought \"one of those wooden Jack Daniel's whiskey barrels\"--- and when he got it home it had \"about 15 gallons of whiskey left in it\"--- and it turned out to be \"that Gentleman Jack.\" He went on to say, \"And we really did party until all that was gone!\"\n\nNow Jimmy didn't say exactly where his friend had been located when he bought the barrel, but at the time of his story, we were situated several hundred miles from Lynchburg, Tennessee. The only reason I mention location is; the further away from the distillery the barrel got, the more unbelievable the story got. I never said anything to Jimmy, but in that single story, he destroyed 100% of his credibility with me.\n\nA couple of days later I was talking to the girlfriend/bartender and asked her what she knew about \"Jimmy?\"\n\nShe said he came in pretty regularly and he seemed like a nice enough guy.\n\nI asked her what she thought about his \"Jack Daniels barrel story?\"\n\nShe said it was interesting.\n\nI asked her if she believed the story.\n\nShe said she had no reason not to.\n\nBecause she and I knew each other much better than either of us knew Jimmy and also because we had shared numerous philosophical conversations, I told her why I did not believe his story. I started by saying, \"Well I have taken time to research a couple of the smaller details of his story, to confirm what I remembered to be exactly correct.\"\n\nI said, \"First of all, I spent a lot of time in Nashville and middle Tennessee from 1986 until 1995. I visited the Jack Daniel's distillery 5 times from 1987 through 1993. The first time I went, I was alone on a Sunday afternoon and I was so impressed, I went back 4 times, taking 4 different friends with me.\"\n\nThis is what I see wrong with his story.\n\n<ol> <li>The regulating authority for distilleries in the United States is the \"Internal Revenue Service\" and they have a fully staffed office on the grounds of the distillery that monitors every single drop of alcohol produced, packaged and shipped. So the chances of a single ounce of whiskey leaving there, in the barrel are so remote; well, that alone makes the story unbelievable.</li> <li>A 53 gallon white oak wood barrel like they use at Jack Daniels weighs approximately 125 pounds. Depending on how accurate his estimate of \"about 15 gallons\" was and depending upon the actual alcohol content of the whiskey left in the barrel, the whiskey alone would weigh something like 105 to 125 pounds. Don't you think at least someone would notice this barrel weighing approximately twice what it was suppose to?</li> <li>15 gallon of any liquid inside a 53 gallon barrel, shaped like a wooden whiskey barrel would cause quite a \"sloshing\" effect every time it was moved. Don't you think at least someone would have noticed this odd movement and sound?</li> <li>The whiskey in the aging barrel has not been diluted to the exact alcohol percentage (or proof) as we are accustomed to in commercially available liquor. It has a much higher alcohol content (actually about 1 &frac12; times, greater), so it would probably be very strong and even bitter to the casual whiskey drinker?</li> <li>The only difference between \"Gentleman Jack\" and \"Black Label\" is that Gentleman Jack is charcoal filtered twice. Once before aging and once after aging. The only time the whiskey is inside the wooden barrels, is during the aging process. So if the 15 gallons of whiskey was still in the barrel, it could not have been filtered twice, so it could not have been \"Gentleman Jack!\" </ol>\n\nFurthermore, according to most experts, the second filtering is what makes Gentleman Jack so much smoother than other whiskies. Therefore mistaking (or confusing) unfiltered, full strength and ungraded Jack Daniels whiskey directly from the aging barrel, with bottled Gentleman Jack; would be akin to confusing lemon juice concentrate with lemonade.\n\nI went on to say, that with his story, Jimmy established with me just what kind of person he really was and from that time forward, I would question (in my mind) everything he said or did. \n\nI truly believe a person's integrity and their credibility are two of the most important and desirable qualities they can possess. I am sure you can recall an example where you were told a tale, that for some factual reason; it just could not be true. What did you think of the storyteller after that? I have never understood why a person would jeopardize their entire integrity and credibility for 5 minutes of perceived glory. You may disagree in this, but if Jimmy would lie to me and every other person around us that day, just for the sake of being the center of attention for a few minutes, would you want to enter into a business deal with him?\n\nI will interject here that most people, me included, will slip up when recalling the facts. This is especially true with dates and sequences of events. When I was much younger, I could not understand older people getting dates mixed up by one or even two decades. My parents or their friends might be telling about something that happened years previous and say it occurred in '56, when I had picked up on some detail making that impossible. I might question how that could have happened when they said it did, and they would say; \"Did I say '56? Oh, I meant '36.\"\n\nAs I have gotten older, and both seen and experienced more different numbers in that decade column, I find that simple mistake easier to understand and accept. I usually go in the other direction though. I will start to tell about something that really happened in 2004 and before I realize it, I have said '84.\n\nI guess there is an argument asking; \"If you can make a mistake about dates, why can't you make a mistake recalling other facts?\" My counterargument would be, \"It is not the mistakes you make; it is your INTENT in recalling and telling the facts.\" Comparing mistakes like; saying '56 when you mean '36, or saying East when you mean West, or saying August when you really mean October, or saying Labor Day when you mean Memorial Day; cannot be categorized along with the \"Jack Daniels whiskey barrel story.\" Jimmy knew he was fabricating that story as he went along that day. He was simply trying to impress someone.\n\nAnother thing I notice and hate about this confusing of facts, is when you can't remember who (or the name of who), you are talking about. I have read stories that may start out talking about Sara and before long they are calling her Sarah. I know they are pronounced the same, but if you are going to tell about having sex with her, please remember how to spell her name. I have even seen cases when the name started out as Sara and then shifted to Sally or Sandra or something totally different. Even if you are attempting to change the names, to protect the innocent (or guilty); please remember what you changed it to.\n\nIn the business world, there are times when we must \"cut to the chase.\" Don't tell about the labor pains, just show the baby. Sometimes in that business world you must almost tell the story backward for some people. First, you must state the \"bottom line\" then say, \"Now, do you want to know how we got there?\" My nature despises that type of action. If time allows, I want to know how we reached the final conclusion. I guess I could try moving the sex action to the beginning of the story and then say something like; \"If you want to know why we were there at that particular time and in that particular state of mind, you may want to continue reading.\" I could go on to warn the reader that there is no more sex in the remainder of the story. I hope you know this was said \"tongue in cheek.\" \n\nIn my erotic stories, if you want someone to get directly into the sexual act and close as soon as it is complete, you are reading the wrong writer. If you enjoy reading true stories that stand the test of comparison and reason, while establishing the basis for why we were at that particular place, at that particular moment, then \"welcome aboard.\"\n\nFeedback is welcome and encouraged. I don't expect everyone to agree with everything I say. That would be a boring world. My biggest request is that you let my thoughts provoke some thoughts of your own.\n\nThanks\n\nBuild_it_write"
    ],
    "authorname": "Build_it_write",
    "tags": [
        "writing how-to",
        "writing how-to",
        "story telling"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/story-telling-101"
}