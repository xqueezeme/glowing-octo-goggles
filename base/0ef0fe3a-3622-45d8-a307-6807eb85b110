{
    "title": "An Unexpected Reunion Ch. 03",
    "pages": [
        "Part three! It's taken longer than I wanted to get this done but I was hit with a really bad case of writers block half way through so took a bit of a break. \n\nPart four hasn't been started but I have an idea about where I want this story to go and ultimately end... I think? \n\nAs always please enjoy, I apologise for waffling, it's a bad habit. \n\nFeedback/comments are always appreciated! \n\n***** \n\nMay 2014 - Callie \n\nI wait until I can hear Lexie's gentle footsteps climb the stairs before I move to the front door and open it precariously. Peering down onto the street ahead I can see the lights of my car flashing brightly, the alarm is blaring and I can see the people across the street looking out through their curtains. \n\nI walk down the steps at the front of my house quickly and silence the alarm. Walking a full circle around my car I can see that the front windows been smashed and two tires have been slashed. \"Fuck.\" I run my hands through my hair and storm back into the house. \n\nMy head is swimming as I call the police and recall the events to them, by the time I hang up I can feel a migraine building and I feel nauseous. Who the fuck would trash my car? Why? I pour myself a whiskey and sit on the edge of the sofa and nurse it. The only time I look up is when I feel Lexie sit next to me, her hand begins rubbing soothing patterns up and down my spine. \n\n\"Is everything ok baby?\" I still melt every time she calls me that, I shrug my shoulders and take a sip of the amber liquid in the glass, relishing the burn as it goes down my throat. \n\n\"Someone's fucked my car up.\" \n\n\"What do you mean?\" Her hand stops momentarily and I look at her with raised eyebrows. \n\n\"Exactly what I said, someone's trashed my car. Smashed the windscreen, slashed the tires. Well and truly fucked it. Probably means it's going to get written off.\" My voice is flat, I know it's not her fault but I'm so fucking mad right now. \n\n\"Who would want to do that?\" \n\nI sigh loudly and shake my head \"I don't know. If I did I'd break their fucking legs.\" \n\n\"Shush Callie, no you wouldn't. You're better than that.\" I lean my head on her shoulder and take a deep breath. \n\n\"You have a much higher opinion of myself than I do. Why don't you go to bed, I need to wait for the police.\" \n\nI can feel her lips press against the top of my head and I pull up to look at her \"no Cal, give me that. I'll go get us another drink and we'll sit and wait together.\" \n\nTrue to her word we spend the next two hours curled up on the sofa together drinking whiskey and talking about nothing important, the police come and go taking both of our statements and photos and other stuff from the car which is then towed away. \n\nI'm leaning against the kitchen counter, whiskey glass firm in hand when I feel hands creep around my waist slowly. Lexie's body is pressed firmly against my back as she holds me silently for a moment, I rest my hands on top of hers and let out a deep sigh. \n\n\"What's on your mind?\" Her voice is soothing as she speaks to me. \n\n\"I just don't get it. I know the police seem to think it was just kids fucking about but... I can't shake this feeling like somethings wrong?\" It's the first time all night that I've voiced these concerns out loud and I can feel Lexie stiffen behind me. I turn in her arms and wrap my arms around her shoulders, looking down at her face I can see her eyebrows knitted in concern, her eyes are focused on the floor. With one finger I tuck it under her chin and lift her face so she's looking at me. \"Forget I said anything. Probably just being paranoid.\" \n\nI press a finger to her lips gently to stop whatever it is that's about to come out of her mouth, I don't want to talk about it anymore. In one swift movement I turn her so she's pressed against the cool marble of the kitchen counter and drop my mouth to her neck and begin covering the smooth skin there with hot, tender kisses. \n\n\"It really has been a shitty night, but I think I know something that's going to take both of our minds off of it.\" My voice is muffled as I talk against the smooth skin at her jaw as I nip and lick the length of it. I can feel Lexie's fingers curl in my hair as her breathing begins to increase. I let a hand slip from her shoulder and trail my fingers down the length of her spine whilst my mouth works its way up to her soft, plump lips. \n\nI push her closer to me by the small of her back and hear a small moan escape her lips as she pushes her hips up against me. I move and capture her lips with mine, kissing her deeply, moving my tongue against hers which she willingly gives after I run my tongue along the length of her bottom lip. Her fingers are woven in my hair keeping my face fixed firmly to hers, almost as if she's scared I'll disappear and leave her needy. \n\nMy hands curl around the bottom of the jumper she's wearing and I begin pulling it up and away from her skin. I've always loved the way her skin feels under my fingers, soft, smooth warm. Holding this woman close to me is like coming home after being away for so long. \n\nI drop the jumper she had on unceremoniously on the floor and run my fingers down the length of her body, pausing briefly to tug at her nipples, relishing the way she shivers under my touch. Hooking my fingers in the elastic band of the shorts she has on, a low guttural groan escapes my mouth when her teeth close over my bottom lip. \n\nRunning a hand below her shorts I cup her sex in my hand and let a throaty chuckle escape when I run one finger along the length of her slick, wet folds. \"So wet, so quick.\" Before she can answer I cover her lips with mine and kiss her hungrily, my finger continues running up and down her core slowly, nudging at her clit as it goes. \n\nI'm beginning to feel impatient when I pull the shorts she has down to ground, kneeling down in front of her I look up as she gaze down and give her a lop sided smile. My heart is pounding in my ears, I can literally hear my blood rushing through my veins as my eyes take in the sight of this perfect woman standing naked in front of me. I let my hands travel up the outside of her legs, just grazing her skin with my fingertips. Watching her watch me, we're trapped in this moment and it's like the world around us no longer exists. It's just me and her and us. \n\nTilting my head forward I plant soft kisses up the length of both of her legs, I can hear Lexie's panting increase in volume, her hands are still clinging to my hair for good measure. Pulling at it to the point that it's almost painful, but the sight in front of me and the pure anticipation that I'm feeling right now dulls the ache. \n\nMy tongue reaches the apex of her thighs and licks the length of her sweet tasting pussy, the action is rewarded by a low moan coming from Lexie's sweet mouth. Before I lose control I stand and lift her by her hip and sit her on the cool kitchen surface. \"Lie back...\" I whisper against her lips. \n\nFor once the woman in front of me does as she's told and lies back, flinching as the warmth of her skin comes in contact with the cold marble below her. The noise that escapes her mouth in protest of this quickly turns into a low main when I take one of her nipples in my mouth. My tongue running across and around her pebbled bud. The way it stiffens beneath my tongue sends sparks of desire shooting quickly through my veins. I want to ravish her, make her call my name and come until she's begging me to stop. I need to feel her around me and forget all the shit that's happened tonight. \n\nMy mouth switches between her breasts, my hands trail up and down the length of her waist, I can hear her whimpering under me. My own arousal growing between my legs goes ignored and will do until I've had my fill of this exquisite woman. I reluctantly leave her breasts and my mouth begins a slow and arduous trail down her flat, toned tummy. Kissing, nipping and licking as I go. She's writhing below me, silently pleading with her body to go quicker and give her the release she craves. Smiling against her skin I reach her hips and lick the length slowly, loving the way her skin tastes. \n\n\"Callie... please.\" I can hear her moan, I chuckle quietly and look up at her. Her eyes are fixed on my face, the way they glow with unspoken desire. \n\n\"Please what?\" \n\n\"You're killing me...\" before she can finish the sentence I part her thighs with my hands and dip my head so I can cover her completely with my mouth, my tongue licks the length of her and her arousal tastes so sweet. \n\nI probe her with her tip of my tongue, letting it swirl around her clit in long, slow movements. Her hips buck beneath me, pushing her mound hard into my mouth. I lift her legs over my shoulder and she wraps her ankles over each other and holds me close, pulling me further to her. I run the flat of my tongue over and over again from the top to the bottom and back again. \n\nWith two fingers I slide them effortlessly into her and begin to fuck her fast and furiously, throwing all of my frustrations into the way her body is moving below me. I can hear Lexie call out somewhere in the back ground but all of my focus is on driving my fingers in and out of her as fast and as hard as my burning muscles will let me. My tongue batters her clit relentlessly, I can taste her arousal and it's intoxicating, her hands are holding my head to her pussy tightly and her legs are trembling around me. \n\n\"I'm coming, oh shit. Callie. I'm coming. Fuck.\" Jesus fuck, if she keeps talking like that I'm going to come. \n\nI can taste her orgasm the second it hits my tongue, my fingers don't let up though. I want to push her over the edge again, her legs lock up around my neck and pull me to her and keep my mouth in place despite the fact that her hands are feebly trying to push my head away. \n\nHer second orgasm hits in quick succession, and she cries out loudly. I say nothing but pull my shirt over my head, lock her legs around my waist and carry her to my room. My mouth on hers the entire time, the only time I stop kissing her is to drop her on my bed and crawl up to her mouth again. Hesitating for moment I stare down at her, her fingers trail shakily down my cheek as the cup my face and pull my lips back down to hers. \n\nMay 2014 - Lexie \n\n\"Where do you think you're going?\" I reach out for Callie as she pulls away after leaving a lingering kiss on my forehead. I'm still in her bed which feels all too big without her in it with me. \n\nI can hear her chuckle throatily as she sits on the edge of the bed next to me and pushes the hair away from my eyes, I half open one to gaze up at her and feel a rush of disappointment run through me when I realise she's dressed for work. \"I have a breakfast meeting remember?\" She whispers almost as if reading my thoughts. \n\n\"Shit yeah. Do I need to go to work early?\" \n\n\"No. But I've really got to go Lex.\" I sit up to kiss her before she goes, the bed sheets falling down revealing my naked chest as I do. I can see Callie's eyes flit from my face and down to my chest immediately, a small smile creeping across her face. Without a word she lifts the sheet and covers me, shaking her head slightly \"and you're making it increasingly difficult to leave.\" \n\nI pout my lips at her but watch as she stands and brushes down the length of her form fitting grey pencil skirt, adjusting the way her white blouse tucks into the waist. My eyes travel down the length of her body as I roll to my side and prop my head up on an elbow. She looks every inch the sophisticated business woman, and it's so fucking sexy. Her thick auburn hair is tied back into a messy bun with loose strands of hair framing her gorgeous face. I find myself chewing on my lip as I watch her fuss in the mirror before slipping into a pair of black pumps and picking her phone up from the dresser. \n\n\"Don't be late Alexa.\" She winks at me and I blow her a kiss. \n\n\"Wouldn't dream of it Ms. Jenkins.\" My eyes are firmly glued to her arse as she saunters out of the room. I stretch out in the bed languidly and begrudgingly get out of it and shower. As much as I don't want to, I need to get ready for work. \n\nI shower, dress and fix my hair quickly, before making myself a cup of coffee. Walking into the kitchen I see something on the counter that stops me in my tracks. On the pale marble counter top is a small silver key and a short note. The sight of it makes my heart stop for a moment, Callie's mentioned a few times that she wants me to move in and I keep putting it off. I don't know why, I spend all my time here. And I love going to bed and waking up with her but I don't want her to feel rushed into a level of commitment she might not be ready for. \n\nWith nervous hands and a lump in my throat I pick up the folded piece of paper and hold the cold key in my hand as I read the words plainly written in Callie's careless scrawl. \n\nLex, \n\nYou're here so much I figured you may as well have a key. Lock up when you leave and I'll see you at work. \n\nMy eyes narrow and I re-read the two sentences on the paper, is that it? No heartfelt declaration of how she wants to share her space with me on a permanent basis and how she refuses to take no for an answer. \n\nCallie's never kept her commitment issues a secret from me, in fact she's been too honest about them at times. But I thought we were moving to a good place, she's been a little distant emotionally the last few days but I just figured that she was still mad about what had happened with her car. \n\nI float around the house in an aimless breeze packing and getting ready for work, my thoughts are anywhere but where they should be. I can't help but feel a little hurt, did she just give me this key for convenience? Because if that's the case I might just ram it down her smug throat. \n\nBy the time I'm sat on the tube headed towards the office my good mood from the morning has well and truly gone. I may be thinking too much into everything but the small silver object I have in my coat pocket feels as though it weighs a thousand pounds, I love Callie. I haven't told her. But I do, I never stopped. After my dad caught us and all but threw her out of the house and forbade me from seeing, speaking or even thinking of her again, it made me want her more. We snuck around for a few months after that but it got too much between her fleeting visits from university and me having to think up elaborate lies as to why I wouldn't be home began eating me out from the inside which is why I stopped talking to her. I didn't give her an explanation I just disappeared from her life thinking the clean break would help her move on from me. I was wrong. Leaving her that way broke me in a way I thought would be unfixable and I spent the last eight years punishing myself for hurting the only person I have ever loved and even though she constantly reminds me that she wants to move past this, a part of me struggles to believe her. \n\nWould I forgive her so easily had the situation been reversed? I really think about the answer to that question hard, for the length of the tube journey and I'm still lost in thought as I make the short walk to the offices earning me to be on the receiving end of various obscenities when I stop at random causing the commuters behind me to have to dodge me to avoid walking into me. \n\nBy the time I'm sat in my desk I feel sick and my nerves are wrought. I would forgive her, I'd forgive her almost anything but I need to know where this thing with us is going. I'm not eighteen anymore, I'm not willing to just be someone's casual girlfriend. I want a family, and I want that with Callie. I just don't know how I'm going to feel if I tell her this and she doesn't want the same things. \n\nI try and think about past conversations I've had with Callie the long term future for us and I come up at a blank, one resounding memory stands out and despite myself I find myself smiling. \n\nI think back to the day I met Callie's sister for the first time, we'd just had our first date, Callie had text saying some family stuff had happened and her sister would be with her when we went out the next day. Thinking back now, that was a huge deal for her. She told me how she never took girls home, never let them meet her family. And yet there I was sat in the passenger seat of Callie's little Ford, her sister sulking in the back seat because she was being forced to spend the remainder of the summer at her grandparent's house for reason I had no clue of at that point, and there was an awkward silence filling the small confines. \n\nI remember looking over at Callie's perfect face, her eyes were focused on the road, her jaw clenched in silent frustration and her hands were gripping the steering wheel so tightly her knuckles were white. \n\nI couldn't take it much longer, I had to say something \"you know... if this is a bad time. I can get out in town and go home? I don't want to get in the middle of whatever... this is?\" I remember gesturing with my hands and seeing Callie glance over at me briefly before turning back to the road. \n\n\"Don't be silly. Lana's just pitching a fit because she can't spend the rest of her summer drinking cheap vodka on the beach with her mates.\" \n\n\"I'm not a baby Clarissa. You can't keep pretending that you're mum. You're not her.\" Lana snapped from the backseat, I glanced over at Callie to gauge her reaction. A wry smile crept across her lips and she shook her head slightly. \n\n\"We've been over this Allana, you're not going home, not yet. If things change then I'll come pick you up in a couple of weeks.\" I'm impressed at how well she handled her younger sister, in fact I still find it hard to believe that they're sisters at all. Callie is beautiful in a glorious way, creamy coloured skin, blue eyes so deep you could fall into them if you spend to long looking at them, her hair looks brown but when the sun or light hits it in a certain way has the most amazing flecks of red through it. She's perfect. But her sister is all olive skin, dark hair and dark eyes. They couldn't look more different. \n\n\"This is going to sound stupid, but are you two actually sisters? Or are you're parents just really good friends so you call yourselves sisters? Because...\" I'm cut off by them both laughing loudly at me. I sank deep into the seat and crossed my arms over my chest defensively when I felt Callie's hand squeeze my thigh softly. \n\n\"Sorry, we hear it a lot. Yes we're sisters. Unfortunately I inherited all the looks from my dad's side of the family. Whilst moody bitch in the back possesses all of our mother's Italian looks. None of the charms though right Lana?\" Callie snickered, whilst looking back at her sister in the rear view mirror. \n\n\"Cazzo di cagna\" \n\nCallie laughs loudly and puts her hand back on the steering wheel \"Vuoi baciare tua madre con quella bocca?\" \n\n\"Technically no bitch. Where are we even going Callie? I'm starving.\" \n\n\"Wait... you both speak Italian? Holy shit.\" I've been in situations like that since that day, the type where you're sat in a room of people and begin to feel incredibly mediocre. But in that moment sitting in a car with Callie and her sister whilst they speak Italian fluently to one another I felt inadequate. \n\n\"My mum taught us, she was Italian, her family are all Italian. Dad never learnt it, but it's what we speak the most when we're around any of mum's family because none of them speak very good English.\" Lana explains to me patiently. \n\nThe car fell into silence again until we pulled up outside of some backstreet caf\u00e9, I'd never been into it until that day but it quickly became a favourite place for me. Not just because of Callie, but because the food was fucking amazing. \n\nSitting at a corner table at the back of the shop, Callie sat to my right, Lana sat across from me for that one moment whilst I began tucking into what was the best fry up I've ever had in my life Lana decided to drop a bombshell that made Callie choke on the tea she was drinking. ",
        "\"So, Lexie, this is weird because Callie never lets me meet her girlfriends.\" The fork full of food I was about to put into my waiting mouth hovers for a moment before I rest it back on my plate. \n\n\"I'm not her girlfriend.\" I say quietly, as much as I want to be we hadn't had that conversation. And judging by the way she was now spluttering into her teacup she wasn't expecting that ambush and she doesn't seem to be in any rush to actually put it right. \n\n\"But you went out right? Last night and the way you two keep giving each other eyes says otherwise.\" \n\n\"I will kill you brat. Stop talking.\" Callie warned quietly before turning to me and offering me an apologetic smile. \"Sorry about her, she lacks a brain to mouth filter.\" \n\nI don't know why but I lost my appetite, pushing my plate away I look down at the table and nod \"it's fine. Look I should probably get off, you'll want to leave soon.\" I dig some cash out of my purse and leave without another word. \n\nWalking down the street I light a cigarette and take a long draw \"Lexie wait!\" I can hear Callie calling after me, I want to keep walking, to let her go and do what she needs to do. I also wanted to sulk in private. \n\n\"What is it Callie?\" I flick my cigarette away and fold my arms across my chest. \n\n\"I could ask you the same thing, why did you walk out like that?\" \n\nI shrug my shoulders and avoid her gaze \"I don't know what you're talking about.\" My eyes stay fixed to the ground, suddenly the concrete seemed extremely interesting. Callie said nothing else, I couldn't see what she was doing. It wasn't until I felt her fingers tuck under my chin and her free hand on my hip that I knew she had moved. \n\n\"I think you're lying to me...\" her intense blue eyes gazed down into mine and I felt all the air rush out of me. Her touch always took my breath away and left me helpless against her. \n\n\"I... well... I... shit.\" I can't say anything, I just take her face between my hands and pull her lips to mine. Her mouth molds to mine quickly, she's rougher than she was last night. There's a hunger to the way she's kissing me. But it's short lived because she pulls away too soon leaving me breathless again. \n\n\"I think we need to have that conversation don't you?\" I look up at her and for a second hate the fact that she's so composed whilst I'm stood in her arms a breathless, flushed and panting mess. \n\n\"Do I have zero effect on you? How can you be so composed after kissing me like that...\" Her lip curls in a half smile as she lets go of my face and takes my hand to bring it to her chest where I can feel her heart pounding away at a rapid pace. \n\n\"Does that answer your question?\" I nod silently and she smiles again. \n\n\"I won't hide the fact that I'm scared of commitment Lexie. I barely know you and the things you make me feel terrify me. But I know I want to be with you. I've never felt that before. I'm scared that it leaves me open to be hurt and hurt you in return. Because I will you know, probably not intentionally but I'll fuck up in some way or another and you'll end up hating me but I'm too selfish to not want to have you.\" \n\n\"Clarissa Jenkins are you asking me to be your girlfriend?\" I relish in the dopey grin that spreads across her features at my question and she nods eagerly. \n\n\"I might be Alexa Bates... What do you say?\" \n\nI ponder thoughtfully for a moment and giggle when she rolls her eyes at me \"I could get down with that...\" my sentence ends with a squeal when she envelops me with her arms and lifts me up to spin me in a circle. \n\nShe finally sets me down on my feet and looks at me with a dark, smoldering gaze that leaves me squeezing my thighs together \"oh you are going to get some good loving later Ms. Bates.\" \n\nI curl my hands in her collar and pull her close, running the length of my nose against hers \"damn right I am Ms. Jenkins...\" \n\nI'm pulled out of my day dream by the arrival of the woman who has been preoccupying my thoughts all day. She greets me with a casual smile and it takes everything I have not to scowl at her. \n\n\"Be a diamond and bring me a cup of tea would you Alexa? And hold my calls until after lunch please, unless someone's dead or dying. I'm not interested.\" And just like that she breezes into her office not knowing what her simple, seemingly meaningless gesture has done to me. No, she's not going to lord it over me this morning. She's going to get a piece of my mind and she's going to listen and then she needs to make a choice. \n\nMay 2014 - Callie. \n\nNo sooner have I taken my coat off and loaded up my email when my door flies open and slams shut. Lexie marches across the room with meaning and stands in front of my desk with her arms folded across her chest. \n\n\"Is there something I can help you with Alexa or...?\" I can't finish my sentence before she slams something down on my desk and points to it angrily. \n\n\"What the fuck is this?\" She sounds annoyed, I look down at whatever it is she's pointing to and see the key I had cut for her to the front door of my house. \n\nI arch an eyebrow and push my glasses so they're sat on top of my head \"that, Ms. Osbourne... is a key. They're used for opening locks.\" \n\n\"Don't get cute Callie. Why would you give me a key if you didn't want to? And what was with that shitty little note you left?\" \n\nI look at her confused for a moment \"I don't really understand what's upsetting you, the key? The note or me?\" \n\n\"Right now it's a mixture of all three...\" Ouch... that hurt. \n\n\"Talk to me Lex, I can't help or apologise or fix whatever the issue is if you don't communicate.\" I gesture to a chair in front of my desk and she reluctantly sits down and crosses her legs. I can't help but watch, her skirt hitches just a little bit and I smirk. Unfortunately it doesn't go unnoticed and she scowls at me and pulls her skirt down to cover her leg up. \n\n\"I just... What do you want from this Callie? You said everything... but I don't know. You've never asked me what I want... and I'm scared that if I tell you. You'll run a mile. Especially after what I did to you. And before you stop me or say anything I know you say you're over it and you forgive me and all the rest of it but...\" I watch as she sighs and runs her hand through her hair. \n\nI stand and walk around to sit next to her, taking her hand in mine I force her to look at me \"what's wrong Lexie?\" I brush her hair out of her face and tuck it behind her ears, I feel my body relax a little when she pushes her face into the palm of my hand. \n\n\"I want a future with you Callie. I want a family and a life and everything. So when I woke up this morning and go downstairs and find a key on the side I thought for a fleeting moment that it was some gesture that you were asking me to move in with you again. Because I would've said yes. But when I saw your note I was more than a little bit disappointed.\" \n\nI stand up abruptly and lean against my desk, rubbing my forehead as I try and piece together what it is that she has a problem with. Because at the minute I'm coming up at a loss \"let me get this straight, so I've asked you repeatedly to move in with me and you keep saying no. Now you're mad because I left you a key to my house, that by the way I would love to share with you, but didn't ask you to move in with me?\" I can't help the small laugh that escapes my lips, I quickly cover my mouth with a hand and feign a cough. Clearly it didn't work. \n\nShe glares up at me and shakes her head \"you know what...\" she stands and begins walking towards the door \"forget it.\" And with that she leaves me standing in the centre of the room alone and completely confused. \n\nI'm barely alone for a second before the door opens and closes again and she throws herself into my arms and crushes her lips against my own. It takes me a second to respond before I'm holding her tightly to me and kissing her with the same eagerness. \n\nShe pulls back and smiles at me and my heart melts \"so does this mean you're moving in?\" \n\n\"Yeah, this means I'm moving in\" I feel her reach behind me and she holds the key up in front of my face \"I'll be needing this.\" She reaches up on tiptoes and kisses my nose gently. \n\n\"See you later loser.\" And just like that she glides away from me and leaves me feeling hot and bothered and incredibly turned on. \n\nLexie left the office before I did, she came in to say goodbye and left me with yet another kiss that set my pulse racing and left me squirming uncomfortably in my chair. That woman of mine is beguiling, frustrating and amazing all tied up nicely in one sexy package. As she informed me before she left she was going home, felt good to hear, to make me dinner. I don't think I've ever felt contentment like this, but, despite feeling all warm and fuzzy and dare I say it... in love? Again. I have this nagging thought in the back of mind that somethings going on in the background to try and bring my world crumbling down. \n\nMy car got towed early Sunday morning and the insurance company had a courtesy car delivered in the afternoon. The police seemed happy to let the case go as there was no evidence to suggest it had been done maliciously. But it all seems to coincidental, I gave them Torie's name they shrugged it off and weren't interesting in following it up any further. What are the odds that we come to blows that morning and then a matter of hours later my car gets trashed? I know it was her, I haven't said this to Lexie. I'm worried that if I do, she'll run for the hills blaming herself for bringing trouble to my doorstep and if I'm being honest I couldn't bear to lose her again. \n\nSo instead I've decided to keep it to myself and just focus on the woman who's finally agreed to live with me. At least having her close to me at home as well as at work means I can keep her safe if nothing else. \n\nSeven o'clock came and went I was still slouched at my desk scanning my emails and typing at my keyboard furiously. Eventually I lean back in my chair and stretch out loudly, hoping that the back of my very expensive yet disappointingly uncomfortable desk chair would hit the knot of muscle that had formed in the top of my back. Stiff, sore and hungry I finally shut down my computer and collect my things to leave for the night. \n\nThe walk through the office and the drive home was uneventful to say the least. In London, despite what people think every hour is rush hour and you're never not going to find yourself stuck in traffic somewhere. But I finally make it home, and trudge up the steps slowly and put my key in the lock. When I walk in the doorway I'm hit with the smells of what can only be a home cooked meal, and despite myself tears actually spring to my eyes. For the first time in my adult life I'm actually coming home from a long day at work to dinner and a loving woman. \n\nWalking into the kitchen leaves me speechless and my jaw hitting the floor, Lexie has her back to me, an apron tied around her waist but her bare buttocks on show to me. I drop my briefcase and throw my keys onto the counter and just stand and stare at the naked woman in my kitchen. \n\nShe clearly hears me because she turns around and gives me the sexiest smile I think I've ever seen in my life, her hands rest on her hips as they cock to the side and I feel as though I'm going to come there and then just from the look she's given me. \n\n\"I cooked dinner.\" She says nonchalantly gesturing around the kitchen. \n\nIn an attempt to stay calm I clear my throat and shrug my coat off and hang it over a kitchen chair, stepping towards her slowly I nod \"I can see that.\" \n\n\"I'm also naked.\" She says again, gesturing to her body masked only by the small apron she has on. \n\n\"Again, another thing that has not escaped my notice Ms. Osbourne.\" I walk up to her and wrap my arms around her waist, pulling her close and burying my nose in her hair. I feel her wrap her arms around my neck and I look down into her gorgeous dark green eyes and smile wickedly. \n\n\"Welcome home dear.\" \n\n\"What's for dinner? Is there a high chance of it burning? Or do I have time to enjoy my starting course first?\" I run my knuckles down the length of Lexie's spine and feel her shiver against me, her fingers begin playing with the loose hairs at the back of my neck and I can feel the skin begin to tingle. \n\n\"Well, I can turn the oven down but it'll give you... I don't know. Twenty minutes?\" I smile widely and turn the oven down, she looks at me knowingly and I feel the familiar build of anticipation in my stomach as I untie her apron string and lift it up over her neck. \n\n\"That's good.\" I toss the apron to the side and pull her to me, feeling her naked curves flush against my body. \"Because I only need ten.\" A delightful giggle escapes her lips because I cover them with my own and push her back against the kitchen work surface, my hands pulling eagerly at my own clothes. \n\nThe remainder of the week feels busier than most, between work keeping me at the office late most evenings and helping Lexie move her stuff from her flat to my house it's a wonder I've had any time to sleep. By the time Saturday comes with the impending charity gala I'd promised Keith and his wife I'd go to, I'm more than a little tempted to call them and make my excuses to not attend. \n\nBut the promise of Lexie on my arm is more than enough to spur me into going. She's in the guest bedroom getting ready whilst I'm sat in front of my dresser putting the finishing touches to my hair and make-up. My dress is a simple black gown, with one strap that sits on my left shoulder, the way it hugs my breasts and waist to then flow out makes me look curvier than I actually am. Finished with black, open toed Louis Vuitton's with a gold heel and the famous red soles. I feel like I'm ready, my jewelry is simple, diamond tear drop earrings and a diamond necklace, both left to me by my mother. I look in the mirror and feel like I'm ready, picking up the small gift bag from my dresser I make the short journey to the guest room and knock quietly before popping my head around the door. \n\n\"Wow...\" the only word I could fathom, because the woman stood in front of me was worth more than any words I could utter. Lexie looks radiant in a floor length silver satin halter neck gown. Her hair was pulled back to show off her long, elegant neck. She's wearing a pair of diamond stud earrings and her make-up is obvious yet subtle. Making her lips look plump, accentuating her wide eyes, making the dark green pools look deep and vast. My mouth went dry just at the sight of her. \n\n\"Are you going to stand gawking or shall we go? The car will be hear soon.\" \n\n\"Yes, of course. I er... I have something for you.\" I fumble with the gift bag and thrust it into her waiting hands, never has a woman left me feeling this nervous. But the way she's looking tonight, it's a wonder we'll make it out because right now... the only thing I want to do is... \n\n\"Callie... you didn't have to. This must have cost a fortune\" she's handling the dainty necklace nervously, I smile shyly at her as I take a few steps to close the distance between us. I gesture with my finger for her to turn around and take the necklace off of her to clip it around her neck, my fingers brushing against her soft skin. \n\n\"I know, I wanted too. I saw it a few days ago and figured it'd go well without ever it was you chose to wear.\" She captures my hand in one of hers as she spins around to look at me, without saying anything else she reaches out and leaves a lingering kiss on my lips. \n\n\"Let's go before we never leave.\" \n\nMay - Lexie \n\nStepping out of the car and walking into the venue was like nothing I've ever experienced before, red carpets, waiters handing out glasses of champagne and checking peoples coats. I clutched onto Callie's arm for dear life as we made our way into the large white tent where I was stunned once again into silence. I've been to weddings where they have grand marquee's but this is like something out of the movies. \n\nLarge and white, it's situated in the centre of a large green. Tables and chairs elegantly decorated surround what I can only assume is a dance floor as directly behind it is a stage where a big band is playing with a singer crooning some jazz number. Lanterns hang from the ceiling and other guests are milling around the room talking to one another and making introductions. \n\n\"There's a lot of people Keith and I have done business with in the past here, other editors, people in the publishing world. I'll introduce you to some people who may be able to help you further your career.\" Callie's words bring me back to reality and I look over at her confused. \n\n\"What are you talking about?\" \n\nShe smirks at me and kisses my forehead \"just smile and nod babe. Come on, let's go find Keith and Barbara.\" \n\nI'm led through the crowd by Callie, her hand never letting go of mine the entire time. Occasionally she'll bring me to a halt to introduce me to some person or another. I wasn't entirely paying attention. I was too busy suppressing the thrill I got every time she introduced me to someone as her girlfriend. Eventually we make it to our supposed destination when Callie taps an older gentleman on his shoulder and greets him with a tight embrace, he's nothing like I would've imagined him to be. Callie's told me all about Keith Lowry but I never expected him to resemble the man stood in front of me now. \n\nKeith is tall and built like a rugby player, he's stocky but not fat, he has gentle dark brown eyes and a hair of black hair that's peppered with flecks of grey, his dark moustache reflects the grey in his hair and he's stood smiling at me fondly. \"You must be Alexa, Clarissa's told me all about you.\" He extends his hand to me and I take it and shake firmly. \n\n\"Lexie please, and yes I am. It's so good to finally meet you.\" A woman I can only assume is his wife walks up and takes Callie's face in her hands, ignoring her husband and I. I have no idea how old she is but she looks fantastic for her age, her hair is a dark blonde colour cut short but she has a regal air to her. In a loose fitting blue gown she looks every inch the hostess as she regards Callie adoringly. \n\n\"You've lost weight Callie, are you eating enough?\" I can hear Callie tut at the older woman and even though her eyes are obscured of my sight I'm pretty sure she rolled them pretty hard. \n\n\"Jesus, must we do this every time Barb? Yes I'm eating enough. No I haven't lost weight, you just like to fuss. Anyway, there's someone you should meet.\" Stepping back she pulls me close to her, her hand resting firmly on my waist \"this is my girlfriend, Alexa. Lex, this is Barbara. Surrogate mother and full time worrier.\" \n\nI hold my hand out to shake Barbara's but I'm surprised when she pulls me into a familiar embrace, when she lets go her hands stay on my shoulders as she regards me from arms-length \"it's so good to finally put a face to the name\" turning away from me she smiles at Callie \"she's pretty pet. Too good for you I think.\" I can't help the giggle that escapes my mouth and Barbara winks at me as she lets me go, Callie's arm quickly finds its way back to my waist and she pulls me close. \n\n\"I know, but let's not keep reminding her. Where do you want us sat for dinner?\" Callie's swift attempt at changing the subject doesn't go unnoticed when both Keith and Barbara roll their eyes at her blunt tone. \n\n\"Over there with us, come. They'll be getting ready to serve soon.\" \n\nAnd so we sat, we ate, we drank and we chatted over the various courses. Keith is an astounding man, well esteemed and respect amongst his peers with and established publishing career. His with is charming, warm and witty, and the way the husband and wife interact and bounce off of one another is hilarious and endearing to see all at the same time. \n\nThe couple really do act like parents to Callie which is great to see, I met her father when we were younger and even though my dad was hardly Mr. Warmth her father was something else. ",
        "Callie and I had been together for about three weeks the first time I met her dad, I'd been to her house before that but he'd always been out. I assumed he was working but the truth was quite sad to see. Callie never told me explicitly that her father was a drunk, and an abusive drunk at that. We're on her sofa, she has me pinned beneath her, her hand is slowly making its way up my shirt and I have no intention of making her stop. The way her hand feels against my overheated skin is like nothing I've ever felt before, her lips are firmly on mine, her tongue teasing my own. I'm clawing at her back and my legs are wrapped tightly around her waist and I have no intention of asking her to slow down. \n\nHer hand is just about to pop open the button on my jeans when the front door slams open causing her fly off of me \"Callie?\" \n\n\"Shit...\" Callie's eyes go wide as she looks at me and then towards the living room door. \"Lexie... I'm sorry\" she begins to apologise and all I can do is watch her with a confused look as I run my fingers through my disheveled hair. \"I'm in here dad, what's up?\" \n\nThe living room door flies open, a red faced angry looking man stands in the doorway glaring at his daughter. He either doesn't see me sitting sheepishly on the sofa or he just ignores me \"what have you done for dinner?\" His speech is slurred as he talks to his daughter, this is the first time I've seen Callie look embarrassed. I instantly dislike the man, he's clearly had too much to drink. \n\n\"I haven't done anything dad because I've been working, I only got home a little while ago and I had someone over. I was going to order takeaway and get you something.\" Before I can think or stand or introduce myself her father moves into the room and stands directly in front of Callie, he towers over her. But despite his over powering stature she doesn't back down, she squares her shoulders and glares back up at her father. \n\nI shift uncomfortably on the sofa, the tension between the two of them is palpable. I want to say something to break the awkward silence but part of me is glad that in this instance I'm invisible to the scene unfurling in front of me \"where's your sister?\" his tone is demanding as he continues to stare his daughter down, I want to interject. To ask him who the fuck he thinks he's talking too, but it isn't my place, so instead I just watch silently. \n\n\"You know full well where she is dad, she's with Nona, and you're more than fucking aware of why she's there.\" \n\nSmack. His hand flies out and strikes her across the face with enough force to make her step back a few times. Before I can stop myself I'm off the sofa and by Callie's side, my hand comes to her waist whilst my other hand cups her cheek. She tries to push me away but I silently shake my head at her before turning my eyes on her father. His gaze meets mine for a moment and we just glare at each other in a charged silence and as quick as he arrived he left again and staggered up the stairs. \n\nI cup both of Callie's cheeks in my hands and force her to look at me \"is he always like that?\" my voice is barely above a whisper as I ask her the question. I had my suspicions that she had a difficult home life but I hadn't pried, I knew that if she wanted to talk to me she would in her own time. \n\n\"Yes and no. He drinks, but he's only been violent in the last month or so. I'm sorry you had to see that\" her eye turn away from me, sparkling with unshed tears, to see her look so unlike herself pulls at my heart. \n\n\"Hey... look at me Cal...\" my thumbs are tracing soothing circles on her cheeks as she slowly but surely brings her bright blue eyes up to meet mine \"you don't ever have to apologise to me. I love you for you... not your family. Get some stuff together you can stay at mine tonight, my parents aren't exactly aware that we're you know together but... umph\" I'm cut off when she pushes her lips against mine briefly, there's no urgency to the way she kisses me, it's not passionate or breath taking, it's soothing almost. \n\n\"You just said you loved me...\" were the first words out of her mouth when she finally pulled away from my lips and rested her forehead against mine. Butterflies flutter in my stomach and I nod slowly. \n\n\"Because I do... it's quite pathetic really...\" I laugh dryly as she pulls back enough so she can meet my eyes with her own. \n\n\"Well you're lucky really... because I love you.\" \n\n\"We're hopeless aren't we?\" I murmur, my heart beating a mile a minute in my chest. \n\n\"Completely. So I have an invitation to stay with you tonight? But your parents don't know we're together? I'm ok with that, I'll go get some shit together.\" I watch as she leaves the room and makes her way upstairs. My stomach was in knots as I stood in the hallway alone waiting for her to return, I'm terrified at the prospect of her meeting my bigoted father. \n\n\"Hey, space case...\" I'm interrupted by the feeling of Callie's feeling intertwining in mine, squeezing my fingers with hers, I look at her and my heart swells when I see the way she's looking at me. \n\n\"Hey yourself...\" I squeeze her hand and lean forward to brush my lips against her cheek, the woman sat next to me looks radiant. When she walked into the room earlier this evening it took me a moment to catch my breath again. The woman is a picture, black dress, perfect hair, incredible cleavage. It's a miracle I've been able to focus on anything else tonight. \n\n\"Dance with me?\" The band had just began playing 'they can't take that away from me' and the dance floor had begun to fill with couples. \n\n\"Sure, lead the way.\" She pulls me to my feet and we walk together to where the other couples are dancing in time to the music, she places my hand on her right shoulder and holds my left firmly in hers, her free hand snakes around my waist and holds my by the small of my back, keeping me close to her. \n\nWithout a word she begins to move us around the dancefloor, her eyes never leaving my face. \"I should've guessed you'd want to lead.\" I can feel the smirk on my face and a small giggle escapes my lips at the look that crosses her face. \n\n\"What can I say? I enjoy the control.\" My cheeks heat at the way her eyes smolder down at me. \n\n\"I've noticed...\" before I can stop her she spins me out and pulls me back close to her, my body fits along the contours of hers as if it were made to. I can feel the warmth of her body seep through the material of both our dresses, she rests her cheek against mine as we continue to sway to the music together as the songs change goosebumps form over my skin as she sings the words of one particular song in my ear. \n\n\"... and then I go and spoil it all by saying something stupid like I love you.\" I can't help but pull back and look up at her, she has a light dusting of pink colouring her cheeks and I grin at her. Resting a hand on her cheek I pull her lips down to mine and kiss her gently. \n\n\"I love you...\" the smile that breaks across her face makes my knees feel slightly weak, she kisses me again and the way her lips move against mine are full of promise that make my want to squeeze my thighs together. Her tongue flicks against my lower lip and it takes every inch of will power I possess to stop from moaning out loud. I'm about to suggest we go home so I can take her out of that sexy little black number she has on when someone taps me on the shoulder, I take a glance up at Callie who's eyes are unreadable before turning around and seeing who it is that's interrupting us. \n\nWhen I see my ex-girlfriend standing in front of me my blood runs a little cold, I want to slap the smug smile from her face when I feel Callie's hands curl around my wrist as if she can read my violent thoughts. \n\n\"What are you doing here Victoria? This is a private event.\" Callie's voice is cool as she speaks to Torie, who doesn't take her eyes off of me. There's something about the way her eyes are roaming over my body that makes me feel nauseous, where there used to be small spikes of excitement in the way she looked at me, now it just made me feel uncomfortable. \n\nTorie's eyes don't move from gazing intently at me as she answers the woman standing behind me who's now holding onto me possessively. \"I was invited, I'm Keith's financial advisor. You look nice Lexie.\" She pauses as she looks at me appreciatively again \"you look really nice.\" I can feel Callie's hand rest on my hips and she pulls me close to her so that I can feel her breasts push against the top of my back, her groin makes contact with my arse and I have to bite my lip to suppress a moan. Even in the most awkward situations my body reacts to her touch of its accord, I have no control over it. \n\n\"Stop it Tor, we've been over this.\" I sound resigned as I speak to her, trying to make her see for what feels like the hundredth time. \n\n\"Just five minutes Lex, please?\" Torie glared over my shoulder at Callie before looking at me with a softer expression. \"You owe me that much at least?\" I felt myself bristle in Callie's embrace. \n\n\"I don't think I owe you a damn thing after the way you behaved the last time we saw one another.\" I felt guilty when I saw her visibly wince at my words, it only lasts a second as I replay our previous interaction and that guilt is quickly replaced by a burning anger. \n\n\"I know, and I want to apologise for that. But...\" She's cut off by Callie bringing her to the point. \n\n\"So you've apologized. Can we get back to enjoying our evening now?\" I pull myself away from Callie and look up at her, she meets my eyes and almost pleads with me to leave with her. I look back at Torie for a moment and sigh loudly before turning back to the woman I love and shaking my head. \n\n\"I'll be five minutes love, I promise.\" I reach out and touch her cheek with my hand, she covers it with hers and turns her lips to press my palm. I need her to know she has nothing to worry about, that I love her and nothing Torie can say is going to change that. \n\nAfter a moment she lets go of my hand and turns on her heel to walk away from me, the sight of her head hanging slightly makes my heart hurt and when I turn back to my ex that hurt is replaced with frustration as I cross my arms across my chest and tap my foot impatiently \"get on with it then.\" \n\n\"Not here.\" Was all she said to me before she too, turned on her heel and walked away from me. I didn't want to follow her, but like the good girl I am I did as I was silently told and followed her until we were stood outside in the semi darkness on the edge of the green with the marquee behind us. The music was softer out here but you could still hear the notes being played as it carried across the darkness, the moon hung low and bright and if I were with anyone else it may have been quite a romantic setting. However, given my present company it was anything but. I feel tense, and frustrated. I don't know what she wants to say, we've barely spoken since we split up but she's right, despite her past behavior, I owe her five minutes. \n\n\"What is it Torie?\" I ask quietly, my eyes are trained on her back as she looks out across the grass, her shoulders are tense and her head hangs low. I watch as her shoulders move up and down as she releases a loud audible sigh. \n\n\"When did you stop loving me Lexie? Was it before or after you started working for her?\" She turns around and faces me, her face is unreadable as I try and predict how the next words I'm about to speak are going to make her react. \n\n\"Torie, you were kind, loving, generous. Everything I thought I needed when we were together and I cared for you deeply. But I didn't love you, not in the way you deserved. And I'm sorry for that, sorry I hurt you.\" \n\nI watch as she runs her hands through her hair and takes a step towards me \"I just don't get it Lexie, I thought we were good together?\" I know the question is rhetorical but nevertheless I feel obliged to answer. \n\n\"On paper we probably were Tor, but I love Callie. I always have, it never went away. We didn't split up because I woke up one day and just fell out of love with her. Meeting you and being with you was never a mistake, but I'm not the one for you.\" I reach out and brush the tear away from her cheek. \n\nTorie leans her face against my touch and closes her eyes \"I still love you Lexie. I just... I think you gave up on us too quickly. If I could just have more time, we could be happy together. I could make you happy...\" I shake my head at her and look at the floor beneath my feet, I begin to pull my hand away from her face but she holds it there firmly. Her grasp is so tight it almost hurts. \n\nLooking up her eyes are fixed on my face and they flash with a silent rage \"Torie, let go. You're hurting me.\" I try to pull away but her fingers squeeze tighter \"please, just let go of my hand.\" She says nothing but before I can realise what's about to happen she closes the distance between us and smashes her lips against mine, my eyes widen as I register exactly what it is she's doing. \n\nI try to pull away but her hand is still clasped over mine, forcing me to hold her face, her free hand is at the back of my neck, her fingertips pushing in at the skin there, forcing my lips to stay glued to hers. Her lips move fervently against my own and the sensation makes me feel sick, with my free hand I try to push her away to no avail. \n\nWithout much thought process I bring my hand back up and strike her cheek hard with the palm, thankfully this is enough to make her pull back and step away. \"What the fuck were you thinking Torie?\" I spat at her, wiping my mouth with the back of my hand. \n\n\"I wasn't, I wanted to make you feel something... don't tell me you felt nothing then. I know you did, you had too.\" She takes a step towards me and reflectively I move backwards, my eyes narrow at her and I shake my head. \n\n\"I felt nothing. Stay the fuck away from me. Stay the fuck away from Callie. Leave us alone.\" I try to turn away but she grabs me by the wrist stopping me in my tracks. I look at her and feel the muscles in my jaw tighten as I grind my teeth together, I can only imagine the hostility I must've radiated in that moment because she drops my wrist as quickly as she grabbed and without any other words passing between us I turn and make my way quickly to the tent. \n\nI ignore the throngs of people milling around and urgently move in the hopes of finding Callie quickly, I must look like a frantic mad woman. Dashing from one end of the marquee to the other. I searched the toilets, the bar, the dancefloor. But she isn't here. No, no, no, no. This cannot be happening tonight, tonight had started out so special. I told her I loved her and she just left at the first turn of trouble. \n\nI'm hit with an overwhelming sense of loneliness as I sit at one of the tables that embraced the dancefloor. I'm fighting the need to sob, my head is in my hands as I try and gather my thoughts. She can only have gone home right? I should go after her and make her see sense. I'm so involved in my own thinking that when I feel a warm hand touch me on the arm I almost jump out of my skin. Looking up I see Barbara sitting in the chair looking at me thoughtfully. \n\n\"I'm not usually one to pry, but I get the feeling somethings wrong?\" Her voice is warm as she reaches out and passes me a glass of water and a touches the corner of a napkin to the skin under my eyes. The gesture is so thoughtful and warm that I can't help but cry a little. \n\n\"Have you seen Callie?\" My voice quavers when I say my lovers name and a slight sob wracks through my chest. \n\n\"She left about ten minutes ago dear, she looked... well she looked hurt. Do you want to tell me what happened?\" \n\n\"Ugh, my ex is here. Victoria? She's Keith's financial advisor apparently. She wanted to talk. I agreed and then she... I don't want to go in to it. But now I can't find Callie... I need to go.\" I stand quickly, knocking the water over and making my way out of the room at break neck speed. \n\nI don't know how I managed to find my way home, I walked the entire way. I don't know how long it took, but by the time I unlocked and stepped through the front door my feet felt as though they were bleeding into the overpriced heels on my feet. \"Callie?\" I call out for her tentatively as I throw my keys onto the cabinet in the hallway and walk through to the kitchen where she's stood nursing a tumbler of whisky. \"Why did you leave like that?\" \n\n\"I saw you you know. The two of you out there, kissing. You look good together.\" Her eyes stay fixed on the glass in her hand, my heart breaks at the hurt so evident in her voice. I long to hold her but I know if I go there now she will push me away and I don't think I can handle that kind of rejection. \n\n\"Callie, it wasn't how it looked I promise.\" She scoffs at my words and knocks back the liquor in the glass before turning to pour herself a refill. \n\n\"Do you realise how clich\u00e9 you sound right now Lexie? Don't fucking lie to me.\" She's glaring at me know, her blue eyes full of hurt and anger. I shake my head at her and take a step forwards. \n\n\"I love you.\" \n\n\"Don't, don't fucking lie to me Alexa.\" Those words cut through me like a knife, my own anger swelled up inside of me and I launched my mobile phone at the wall to the right of me. \n\n\"Will you at least fucking listen to what actually happened before jumping to conclusions?\" I'm shouting at her and she visibly recoils from me before brushing past me into the living room where she sits on the edge of the sofa with her head in her hands. \n\nWordlessly I follow her in and sit in the chair across from her, my hands are shaking, my head pounds and I try as best I can to find the words to speak \"she kissed me.\" I hold my hand up to stop her from interrupting me \"I slapped her when she wouldn't stop. Not once did I reciprocate. The way her mouth felt on mine made me feel sick, it wasn't right because it wasn't you. She wants me back, she made no secret of that. But...\" I pause for a moment as I watch her carefully \"I don't want her. I want you, it's always been you.\" \n\nThe silence that looms between us is almost as terrible as her shouting at me \"why should I believe you Lexie? I mean, this... this has made me realise that you could just leave again. It's like I'm waiting for it all the time but I just push it back and push it back. But I don't think I can ignore it anymore.\" \n\n\"Callie, I'm going nowhere. You have to believe me, it won't happen again. I'm here with you for good. I love you. Baby please?\" I hate this distance between us, so I make the decision to drop to my knees and shuffle over so I'm knelt in front of her. I cup her face in my hands and force her to look at me \"look at me Callie, you have to see I'm being serious. You are the only woman I will ever love. I never wanted to leave back then, to check out the way I did is unforgivable but say the word and I will spend the rest of my life making you see that everything I am, everything I have is yours, please?\" I can feel my tears leave a burning trail down my cheeks as I pour myself out to her. I want her to see that I'm being serious, to make her see that my heart beats for her and only for her. But her eyes are so cold, so distant and I can feel her slipping from my grasp. \"Cal, what do I have to do to make you see that I love you and I'm not leaving this time?\" \n\nShe stays silent for a long time, her eyes searching mine. I watch as they conveyed emotion after emotion as she watches me watch her. I don't know how long I knelt on the floor in front of her with her face in my hands but by the time she spoke again my knees had begun to grow sore and tired. And then she finally spoke, the words she uttered made my heart stop and my mouth go dry. \"Marry me?\" \n\nAugust 2006 - Callie \n\nI'd become a frequent visitor at the Bates's since Lexie had been an unfortunate witness to the sperm donor I have the misfortune of calling \"dad\" Lana had come home accompanied by Nona, who was staying with her and dad until she could find a house for the two of them. Dad didn't seem to mind, in fact he was hardly ever there anymore. I spent time with Lexie away from the house for two reasons, Lana was insufferable. As much as I adore my younger sister she just won't let the fact that me, the serial slut, has gone and fallen in love. Secondly, my Nona doesn't know I'm gay. I think she'd be ok with it, but the family's very catholic and I love her so much I couldn't bear the thought of her disowning me. ",
        "So instead, I spend almost all my free time with my girlfriend at her house locked away in her bedroom where we spend most of our time in each other's arms silently appreciating one another. Her family don't know we're more than just \"friends\" at first I was ok with the idea. Then I started feeling as though she was ashamed of me until she explained how her dad was, and after meeting him and having a few heated topical debates with him I could see why. The man was a first class bigot. A member of the \"BNP\" political party he firmly believes in \"traditional values\" i.e. one man, one woman. Along with being an open and honest homophobe, when he found out about Italian heritage he went on about how immigration had ruined this once great nation. I tuned him out after that and kept dropping Italian insults into conversation. My personal favourite is \"maiale razzista\" or \"racist pig\". \n\nHe loves his daughter, but he's controlling, I brought the subject of university up and how Lexie should go if it's something she wanted to do and he soon shut that idea down and quickly shot his daughter down when she began to stand up for herself he silenced her with a look that made me want to stand up and kick him straight in the balls. \n\nHer mum is a salt of the earth kind of woman, she adores Lexie and I can see the feeling is mutual, but she's also terrified of her husband. She tries her best to cover the bruises, finger prints on her wrists covered by long sleeved jumpers, black eyes concealed with a concealer and split lips put down to the weather. But I say nothing, I just comfort Lexie when we're laid in bed listening to the shouting coming from downstairs. \"You know I could kick his arse right Lexie? Say the word and I'll end this for you.\" I remember whispering to her one night as she laid in my arms crying. \n\n\"And then what Callie? You kick the shit out of my dad and then what happens? You can't fix everything.\" I didn't reply, I just pulled her tighter to me and buried my nose in her hair, inhaling the comforting scent of her shampoo as I felt her warmth in my arms. \n\nApart from our shitty family life, things between Lexie and I were going great. In this fantastic woman I'd found my soul mate, my best friend and lover all in one. I'd never felt so at peace with myself than I have since I met her. Her friends hate me, but I don't care. Neither does Lex, we're too wrapped up in one another to care about anyone else that's around us. \n\nIt's another day where we're together, curled up on her sofa reading together, she has her head resting in my lap and I'm playing with her silken chestnut hair as I read. We don't always fill our silences with conversation, we don't need to, we're happy to sit and just be together. These are always my favourite days, eventually though I grow tired of reading so instead I set my book to the side and just watch as Lexie's eyes move across the page in front of her, she turns the page and continues reading, apparently ignoring my gaze. I want her attention, but if that's how she wants to play it then game on. So instead of speaking to get her attention, I let my hand wander down her side slowly until I reach the bottom of her shirt, without shifting my gaze from her eyes, which had now stopped moving and were just fixed on the book in front of her. I could see her teeth sink into her bottom lip when my fingers trailed along the soft skin above her jeans and began making their way up the curves of her toned, flat stomach. \n\n\"I know what you're doing Clarissa.\" She states matter of factly, I choose to ignore her and continue to touch her. My hand was now resting just below the soft lace of her bra, in a second I move it from there to cup her breast and run a thumb along the sheer material, barely hiding my smile when I feel her nipple harden and strain against her bra. \n\nShe says nothing else, just continues to stare at the page in front of her. So I slip my hand into her bra cup and squeeze her breast firmly and pinch her nipple between my thumb and forefinger. I notice the change in her breathing and she squirms slightly against the sofa, her eyes half close as I continue my ministrations. By this point I'm feeling pretty smug, she's panting in a way that makes me feel hot and bothered, her hips are rocking and she's all but closed her book. \n\nImagine my shock when I hear her growl to herself, throw her book across the room and practically jump into my lap. Her hands tangle in my hair as she claims my mouth greedily, I let her control the kiss for a moment before I pull her shirt up and off of her to toss it to the floor. She has the most amazing body I think I've ever seen, athletic muscles from years of hockey and swimming, but curves in all the ways a woman should have them. Turns me on just thinking about them, I let my hands travel down and over her curves and feel her muscles flex beneath my fingers. A growl escapes my lips as I wrap a hand in her hair and pull her head back to expose her throat before I shower it with hungry kisses. I suck, lick and bite my way up and down her throat, feeling her rock her hips as I go. I know all the spots that drive her wild and I'm not shy about letting her know that I know exactly what she likes and that I can control her body in ways she's only dreamt about. \n\nMy fingers find the clasp of her bra and I make short work of peeling it off and throwing that to the floor to join her other clothes. In one quick movement I lift her and move so that she's pinned against the sofa, her legs wrap around my waist and she pulls my hips down to meet hers. I can't hide the moan that escapes my lips at the contact, the way rocking against her causes a friction in my underwear against me that only adds to the flames burning through me. My mouth begins to trail back down her neck and begin a slow journey across her collar bones, her chest. I pause at her perfect breasts and kiss each hungrily, taking each nipple in my mouth I swirl my tongue around them until she's moaning for me to do more. \n\nI reach between us and unfasten her jeans with no hurry to move things along, my weight is propped up on my free arm and I gaze down at her for a moment. Basking in the way she's looking back up at me, the way her unusual tortoise shell coloured eyes burn into my own, the way her skin is flush with arousal. How her plump lips are parted as she breathes heavily. This is the woman I love, the one I'm going to spend my life loving, and in that moment, she couldn't look any more perfect. \n\nHer hands cup my face and I practically purr when she begins to stroke my cheeks with her thumbs \"I love you...\" I murmur as I lean into her touch, the way her gaze changes in that instance makes my heart beat a little faster in my chest. \n\n\"I love you too.\" She whispers in return before pulling my lips back down to hers and I pour every ounce of love, want and desire into that kiss. My tongue invades her mouth as I claim it and it's as though the world around us disappears. I feel her hand run down my front to the waist band of my shorts before she slips it underneath and finds her way to the slick folds of my pussy and she begins running slow circles around my clit. I moan into her mouth and buck my hips against her, electricity sparks through my nerve endings and I can feel my toes curl. My mouth continues down her front and I mirror her actions with my own hand, slipping it under her jeans and underwear but instead I plunge two fingers deep inside, curling them upwards as I thumb her clit causing her to moan loudly. \n\nShe brings me to the precipice quickly, our mouths move together clumsily as we each begin to reach our orgasm. I'm so close, my knees tremble, she's quivering beneath me and I'm about to cry out my climax when the living room door flies open. \n\nBefore I have time to react I'm being pulled away from her by my throat and I'm dropped to the floor, Lexie's dad is standing over me, looking down at me in nothing but pure disgust. I try to stand to protect Lexie but he delivers a quick, heavy kick to my ribs and the winds knocked out of me. \n\nGasping for air I crawl to all fours when I feel his boot fall to my back, forcing me back to the floor \"you dirty fucking dyke. And you...\" I can't see his face or what he might be doing, but I know he's addressing Lexie. Adrenaline courses through my body and before he can finish his sentence I leap to my feet and let my fist come into contact with his face. \n\n\"Lexie get dressed we're leaving.\" I say breathlessly, my chest is burning, my body aches bu the need to protect her is overwhelming so I push my discomfort to the back of my mind and glare at the man standing in front of me. Lexie's father, Kevin is looking between us, I can hear Lexie pulling her clothes on but she stays silent throughout the whole interaction. \n\n\"She's going nowhere with you.\" I square my shoulders and puff out my chest to stand up for the woman I love, choosing to ignore the pain that's now shooting through my ribs I stare him down. He has the same eyes as Lexie, but his are cold and hard. The guy has about six inches on me and is probably a good sixty pounds heavier, I doubt I could take him, but I'd give it a good fucking go before he laid a finger on my girl. \n\n\"Are you going to stop her? Lexie let's go.\" I try to turn and pull her to me but I'm stopped when his large, hairy hand closes around my throat and proceeds to slam me against the exposed brick wall behind me. \n\n\"DAD STOP!\" I can hear Lexie in the background, I can feel myself struggle for breath, I'm clawing at his hand, trying to pull him off of me. But the more I struggle the harder he squeezes, my vision is beginning to get blurry and for the first time in my life I'm actually afraid. Afraid of dying, of never seeing my love again, of never hearing her laugh, of never seeing my sister. I can feel a hot tear run down my cheek as I continue to fight for breath, to fight for life but my body feels heavy. I can hear people shouting around me but I don't know what they're saying, I can't see who it is. \n\nMy body hits the floor with a hard thud and I take a large gulp of air, my lungs burn and my head is pounding. I can feel hands on me, helping me to my feet \"are you fucking stupid Kevin, you could've killed her.\" \n\n\"She's a fucking dyke Alice.\" \n\n\"So? That doesn't mean you can choke her. Are you ok Clarissa?\" I can't talk, so instead I nod and take a meek step forward. \n\nI look over at Lexie who's cowered on the sofa, her face stained with tears, I ignore everyone else in the room and move to her and hold my hand out to her. I say nothing but I beg her with my eyes to come with me, to take my hand and leave this house. But instead she looks from me to her father and back at my hand and shakes her head before mouthing that she's sorry to me. \n\nI felt my heart shatter into a million pieces in that moment, I wait a second just to be sure she's certain before I turn on my heel and walk as fast I can out of that house and into my car. \n\nWhen I woke up the next morning I ache all over, but before doing anything I check my phone, hoping and praying that there'd be something from Lexie, I should've known it was an empty hope when there was nothing. I waited the whole day to hear something, anything. But there was an overwhelming about of nothing. \n\nBy the time the sun had set I was going out of my mind with worry, every time I'd called Lexie it'd had gone straight to voicemail. It didn't even ring, all my texts had gone unanswered. So, in a bid of mental desperation I came up with this ridiculous idea. I ended up driving to her street and sneaking through different gardens until I was stood on the well-kept lawn at the back of her house. I could see that her bedroom light was on, luckily for me her window was open. So like an idiot I began shimmying up the drain pipe, ignoring the way my ribs and back protested at the strenuous exertion and somehow made it up and through her window without falling. \n\nShe didn't say anything, she just sat on her bed her knees tucked up to her chin, her eyes red and raw from crying. I said nothing, I just moved to her bed and scooped her into my arms and held her close. My own tears escaped as I held her, I soothed her quietly, my hand ran down her hair as I try and calm her down. It breaks my heart to see her so upset, but I give her time to calm down, to let her cry herself hoarse if that's what she needs. \n\nEventually she stops crying and leans her head against my shoulder \"Callie... I'm so sorry about yesterday. I wanted to come with you but I...\" I put a finger against her lips and shake my head at her. \n\n\"Don't apologise, you were in an impossible situation.\" \n\n\"Are you ok? I can't believe he went at you like that.\" Again I shook my head at her and pulled away slightly. I watched as she turned on the bed and began examining my neck, there were deep purple bruises from where he'd had his hands, I had some light bruises on my ribs and back but nothing too bad. My skin began to tingle as her finger tips traced the outlines of my bruises, I catch her hands before she can explore more and place tender kisses to her fingertips. \n\n\"What happened after I left Lexie? I waited up half the night and all day to hear something from you. Do you have any idea how worried I've been?\" I know my tone becomes a little harsher towards her, but I'm mad. \n\n\"I know, I'm sorry. He smashed my phone, I couldn't use the house phone because well... he'd know. He's told my I'm not allowed to see you anymore. Said he'd track you down and finish off what he started yesterday if I did. Cal you have to believe me when I say I don't want to do it but I have no choice. I can't fight him. I'll never win.\" She's sobbing again and I ache at her despair. \n\n\"I know baby come here.\" I pull her into my arms again and that's where she stays for most of the night, eventually she stops crying and falls asleep and I lie there, wide awake whilst I comfort the love of my life. What am I meant to do? I can't lose her, I'm not strong enough for that. I'm so mad at myself for letting myself get so close to her, for letting myself fall in love. This is why I don't do relationships because they get messy and people get hurt. But as I look down at her sleeping form I know I couldn't help what had happened between us, I was always going to fall in love with her. \n\nSo, whilst I watch her sleep I come up with a plan to try and keep us together. In the morning I'm going to buy her a phone so we can keep in touch, then I'm going to get her a rail ticket so she can come and see me at university whenever she wants. We'll have to work out her father's work schedule so she can sneak out and see me before I head back but I know that if she's as into this as I am, and as long as we do it together we'll manage and come out on the other end. \n\nAugust 2014 - Callie \n\n\"Are you sure your sister doesn't mind me coming with you this weekend?\" Lexie asks again for what felt like the twentieth time. As annoying as it was I tried to stay patient as I drove the car through winding country roads towards my sisters farm house. \n\n\"She's looking forward to seeing you.\" I reassure her again before reaching over and squeezing her thigh. \n\n\"What if the kids don't like me?\" I roll my eyes and groan loudly. \n\n\"Lexie, please. They're going to love you and if they don't, well Becca's only four and Louie's two. You'll be fine. We're almost there.\" I turn a corner and indicate onto a narrow road, I can feel Lexie's nervous energy radiating off of her as the car continues the journey there. I have to bite back a laugh when I look over and see her chewing her lip, her left hand is twirling a lock of her hair between her fingers. I catch a glint of her engagement ring and feel my heart swell a little bit before feeling a little nervous myself. \"There is one thing I should probably mention\" I admit sheepishly. \n\n\"What? What is it?\" \n\n\"Lana doesn't know we're getting married.\" Lexie's hand slaps my arm hard before she begins ranting at me. \n\n\"What? Are you stupid? We've been engaged for three months. Three fucking months and you haven't thought it'd be a good idea to tell your sister, who by the way, I'm fairly sure hates me that we're getting married at the end of the year.\" \n\n\"First of all, ouch. It's just never come up and for the last time she doesn't hate you, she's just... wary that I'll get hurt again. She's happy I'm happy. She's worries, we're the only family we have left. After Nona died, and mums sister moved back to Italy. It's just us. Besides I figured it's the sort of conversation we'd rather have face to face.\" I'd never tell Lexie this but I'm terrified about telling Lana the truth. She's voiced her concern more than once about me and Lexie getting back together seeing as she's the only person who saw how broken I was when the realization set in that she'd left for good. I know on the surface she'd be pleased for us but deep down she won't approve and I don't want this to come between my sister and I. I'm hoping that when she sees how happy we are together, how happy I am, she'll have a change of heart. \n\nWe ride in an awkward silence until I pull up in front of Lana's grey stone farm house, turning the engine off I look over at my nervous fianc\u00e9e and take her hand in mine. \"Look at me baby.\" I murmur, she hesitates for a moment before gradually turning to face me. I take both of her hands in mine and give them a gentle squeeze \"I promise it's all going to be ok. We're going to spend the weekend eating someone else's food, drinking her wine. We'll end up with at least one of the kids in our bed during the night but they're gonna love you I promise. Lana has promised to be on her best behavior and by Sunday night, we'll be at home on our own and if you don't enjoy yourself here then...\" I pause as I gauge her reaction before finishing my statement \"I'll just have to make sure you enjoy yourself there.\" \n\nI watch the words sink in and a sexy smile creeps across her lips \"I'll hold you to that Callie.\" \n\n\"Good, now let's go before I start ripping your clothes off out here.\" I get out the car before she can respond and move swiftly around the car to open her door for her. As she stands I lean in to kiss her but I'm interrupted by the sound of a familiar voice. \n\n\"Aunty Cal\" I turn to the front door of the house and see a red headed little girl flying towards me. I grin widely at her and kneel down to pick her up as she launches herself into my arms, scooping her up and spinning round I pepper her face with kisses. \n\n\"Becca Boop. Ooooh I've missed you baby.\" I bury my nose in her hair and inhale her sweet smell. \"You smell yummy baby girl. Where's your mama?\" \n\n\"In the kitchen making dinner. I heard your car and looked out the window and it was you! Who's that?\" She points over my shoulder at Lexie, I turn and look at my fianc\u00e9 who's stood sheepishly next to the car, she gives Becca a half wave and a small smile. I grin at her and put my lips near my nieces ear. \n\n\"That's my special friend. Isn't she pretty?\" I whisper so only she can hear me. \n\n\"Yeah, she has hair like a princess. What's her name?\" I put her down and push her towards Lex. \n\n\"Why don't you ask her for yourself, she's been excited to meet you.\" I leave Becca to make her own introductions and watch for a moment, Lexie doesn't miss a beat, she kneels down and holds her hand out to shake Becca's for a moment and launches into a conversation about her favourite Disney film as I get our bags out the boot and shout my sister at the door. I only have to wait a moment before my baby sister emerges at the door with my nephew resting on her hip. The moment he sees me he begins stretching out and reaching for me, with a small laugh I take him from her and give him a kiss on the cheek as he clings to me. ",
        "With my free arm I wrap it around my sisters shoulder and kiss her on her forehead \"\u00e8 bello vederti sorella.\" \n\nLana stretches to look over my shoulder as she embraces me \"Alexa \u00e8 qui?\" I roll my eyes and gesture behind me to where Lexie is still knelt and talking to my little niece. \n\n\"S\u00ec, per favore siate gentili. \u00c8 nervosa.\" I turn to look at Lexie and our eyes meet for a moment, I smile at her and gesture for her to come over and say hello. I watch as she swallows nervously and stands, she stretches a hand out for Becca who takes it eagerly and she slowly makes her way over to us. \n\nWrapping an arm around her waist I hold her close to me, Lex wraps her right arm around me and holds on tightly. \"Lana, you remember Lexie.\" She holds her left hand out for my sister who takes one look and widens her eyes as she spots her ring but doesn't point it out. \n\n\"Of course I remember her, we only met once or twice but it'd be hard to forget. Lexie it's so good to see you again. You look well.\" She shakes her hand and pulls her close to kiss both of her cheeks. \n\n\"Thank you Lana, so do you. Your home is gorgeous, and your little ones are delightful.\" She finishes her sentence by cooing at the baby in my arm who's reaching out for her, I gladly let him go to Lexie and we all make our way inside the house. \n\nBecca chatters on about school and her friends and her dance classes as we sit around the kitchen table drinking tea and catching up. I watch Lana's eyes keep flashing down to Lexie's ring but she's yet to say anything. She's being polite to Lex, engaging her in conversation and asking what she's been doing for the last few years. She asked how we ended up back together and admitted that whilst she still has reservations about us, she's not seen me this happy in a long time. \n\n\"I understand why you're nervous Lana. You're her sister and I hurt her, but it's not going to happen again.\" Lexie squeezes my hand tightly and I melt a little bit as she continues talking \"I love your sister, I never stopped. I messed up badly and I'll never forgive myself in the way your sisters forgiven me, but I'm glad she has. I'll spend the rest of my life earning her forgiveness and showing her just how much I love her.\" \n\nLana says nothing, she just reaches out and squeezes Lexie's free hand before turning to me and fixing me with a stern stare \"Quando mi avresti detto che stai sposando?\" \n\nI shrug and return her look with a stern one of my own \"Oggi prometto. Will you stop looking at me like that? Stop it. We're happy Lana and we're getting married.\" \n\n\"Well good.\" \n\n\"Alright then.\" A silence falls over the table as my sister and I stare each other out. I can see Lexie look between the two of us until we both begin laughing loudly. Wordlessly we stand and embrace each other. \n\n\"I'm happy for you Cal.\" She whispers in my ear before letting me go and pulling Lexie up onto her feet and wrapping her arms around her, Lexie tentatively welcomes her embrace. \"So let me see the ring then.\" \n\nI stand with my arm around Lexie's waist whilst she holds out her left hand for my sister to inspect her engagement ring. Lexie and I had a bit of an argument when I told her I had no intention of wearing any rings. She put it down to my fear of commitment and slept in the guest room for almost a week until I made her see that I just didn't care much for jewelry. I eventually relented and agreed to a wedding band. \n\nWhilst Lexie and Lana were gushing over wedding plans the house phone rang interrupting them \"hold that thought, hello?\" a long pause followed as my sister held the phone to her ear, I watched as her brow furrowed and she let out a long sigh \"look, if you're not going to talk stop fucking calling.\" And she put the phone down. \n\n\"Problem?\" I ask as she sits back down. \n\n\"We've been getting a lot of prank calls lately, always a blocked number, never speaks. Just a lot of heavy breathing.\" My blood runs cold at my sisters words as an overwhelming sense of recognition sets in. \"What is it Cal? I know that look.\" \n\n\"How long have you been getting these calls?\" I ask quietly, the arm I have draped around Lexie's chair falls to her shoulders and I pull her a little closer to me. \n\nMy sister looks blank as she tries to think \"about seven, maybe eight weeks why?\" \n\nI shrug and play with the mug in front of me \"I just, we've been getting a lot of prank calls too. Always from a blocked number, never speaks, just a lot of heavy breathing. It's been happening since my car got done over.\" \n\n\"Well, you don't think it's the same person do you?\" \n\nI shake my head and look up at my sister \"penso che sia la sua vecchia fidanzata\" I watch as realization sets into my sisters face and she glances over at Lexie's face who's tuned the conversation out. She hates it when I speak Italian with Lana but I don't want her to hear this. \n\n\"Lei sa?\" \n\n\"Non lo so, non voglio spaventarla.\" I look at Lexie and smile weakly, I watch her brows furrow and she strokes my cheek gently. \n\n\"Everything ok love?\" I nod and take her hand. \n\n\"Everything's fine, where's Dr. Robert anyway? I thought he'd be home from work by now.\" I change the subject quickly. \n\n\"Don't even, he called earlier saying he had to do an unscheduled surgery, won't be home till late. So once the kids are in bed I'm thinking us girls open a bottle of wine or three and have girls night. Mama needs her vino.\" \n\nI laugh at her enthusiasm and how easily distracted she is, I still have knots tied in my stomach as I try and figure out if Lana's being harassed by the same person I am. I've been getting the phone calls for a long time, on the home phone, my mobile, my office line. Followed by stupid postcards that come through the post with nothing but my name, address and a stupid smiley stamp. I know it's all linked but I have no proof, so I do my best to ignore it and just continue as normal. Lexie doesn't know about the post cards, I bin them before she sees what it is. But she is aware of the calls. \n\nI try my best to ignore my anxieties for the rest of the evening, I distract myself by playing with the kids and putting them to bed. Then once the kids are in bed and I'm sat in the lounge with Lana and Lexie drinking a glass of wine and watching trashy tv it becomes a little harder to ignore. I feel tension in every inch of my muscles, Lexie's sat next to me on the sofa with her legs tucked under her, she has my arm draped around her shoulder and she's leant into my embrace. If she notices my shift in mood she doesn't mention it, she just sits quietly as I play with her hair. \n\nLana leaves us to fetch another bottle of wine and that's when the questions begin \"Cal, is everything ok?\" \n\n\"Of course, why wouldn't it be?\" \n\n\"You've been a bit off since the phone rang earlier.\" I roll my eyes a little and kiss her forehead. \n\n\"I just worry baby, you know how I am. I told you the kids would love you though, Becca's barely left you be for five minutes all night.\" I laugh and kiss the tip of her nose. Lana rejoins us and hands me the bottle and bottle opener, without so much as a thankyou I begin opening the bottle of red she's brought through and watch her carefully. \"What are you smiling at sorellina?\" \n\n\"You, I never thought you'd settle down. But it suits you Rissy. What were you two whispering about anyway?\" \n\nI top up all of our wine glasses before reclining back in the sofa \"how much your daughter loves Lexie.\" \n\nLana has her glass in her hands before I've even finished my sentence and takes a long drink from it \"I know, she thinks you're a princess because of your hair\" she elaborates when she sees the confused expression on our faces \"it's braided like Rapunzel's and Elsa's. Girls obsessed with Disney.\" \n\nLexie smiles slightly and shakes her head \"even though it's the wrong colour?\" She asks with a small laugh. \n\n\"Doesn't matter to her.\" \n\nThankfully as the night goes on I relax and laugh with my sister as we reminisce with Lexie, telling her stories about mum and about how I used to have to sneak her into the house drunk and how I used to climb through her bedroom window when I'd stayed out late and forgotten my key. \n\nBy the time we climb into bed I'm exhausted, tipsy and feeling much more relaxed than I had been. I snuggle in next to Lexie and kiss her deeply, I don't have chance to pursue it any further before she's pulling back and pushing me away by my shoulder \"not here Cal.\" \n\n\"Not where?\" I feign ignorance as my mouth falls to her neck and I begin trailing hot kisses along the length of it. My hand runs down the length of her body, over her hips and down her thighs to her knee. \n\n\"Not here Cal, what if they hear us?\" I kiss up her throat and pepper her jawline with soft kisses. I lean against her ear and enjoy the shiver I feel run through her when my hot breath hits her ear. \n\n\"Then you'd better be quiet.\" My teeth closes against her ear and she moans lightly. I laugh softly and kiss her on the mouth gently \"are you still saying no love?\" She doesn't speak an answer but she does twist her fingers into my hair and pulls my lips to hers aggressively. She parts my lips with her tongue and I can't hold back to moan that escapes into her hot, waiting mouth. \n\nMy hand curls around her knee and I hitch it up to my hip, exposing her lace clad center to me. I run my index down the length of it slowly and feel her muscles clench a little at the contact. She's practically purring into our kiss as I continue teasing her above her underwear, pressing harder each time my finger makes the slow journey from top to bottom, up and down. \n\nHer hips rock against me and I smile against her lips, this isn't going to be spectacular or earth shattering, I just really want to make my woman come. Lexie pulls away and buries her face into my shoulder when she feels my fingers slip past the lace and slide easily into her. \"You're already so wet baby...\" I murmur into her ear before closing my mouth against the crook of her neck, my teeth sink into her delicate flesh and she moans quietly against my shoulder. \n\nMy hand moves in and out at a slow pace, my thumb stroking at her clit in small circles. Her hips are moving in time with my ministrations, there's no hurry to this, no urgency, just her and me. \n\nHer own fingers move deftly down the length of my body and underneath the waist band of my flannel pyjama bottoms, seeking the warmth of my arousal she runs them across the length of my sex and I draw my breath in through my teeth in a hiss. \n\nTogether we become a mass of intertwined limbs, hands are moving against each other in a desperate attempt to bring each other to a climax. I desperately want to come with her, but the more she touches me, the more her fingers slide in and out of me at the deliciously slow pace she's set the harder I'm finding it to fight off my orgasm. \n\nI curl my fingers up and push against the patch of nerves hidden deep inside of her and Lexie mirrors, tiny jolts of electricity shoot from my toes to my fingers tips as she copies each of my movements, each stroke. \"I'm so close...\" I murmur breathlessly. My hips are bucking against her hand, I've almost forgotten my own attempts at giving Lex her own orgasm, my arm appears to be moving at its own accord as I'm too involved in the wonderful feelings she's giving me. \n\nI recognise the familiar build in the pit of my stomach, the easily recognizable burning sensation that overwhelms anything else that I may be feeling in that moment as the damn burst and I come apart against Lexie's fingers. \n\nDespite the need to relish in the post orgasmic bliss I can feel threatening to consume me, I spur into action and throw everything I have into bringing Lexie onto the same level that I'm on. It doesn't take long before her fingernails are biting into the flesh at my shoulders and she's silently crying out as she clenches around my fingers. \n\nAs we lie curled up together, Lexie's sprawled over my pyjama clad chest. Her fingers are drawing patterns over my sternum as I play idlily with her hair. \"I think you should take my last name\" \n\nShe raises her head slightly to look up at me and I meet her gaze in the darkened room \"why? I thought we'd agreed to double barrel?\" \n\nI remain quiet for a moment as I try and arrange the words in my head before I speak them \"I love you Lex and if that's what you really want to do then I won't but up a fight. But,\" I pause for a moment and brush her hair away from her forehead \"I want you to be my wife in every sense of the word, if you don't want my name then I'll take yours but I've always thought double barreling shows a lack of commitment. And I don't want that with you, I want you to see just how committed I am to you and us and what is going to be a wonderful life together.\" \n\n\"I wonder what Tiffany Speck would say if she heard her go on about how committed you are to a relationship?\" I'm more than a little confused about what she's talking about and even though she can't really see my expression she elaborates \"the night we met, I made you aware that you'd previously slept with one of my friends. Well it was Tiff Speck? Do you really not remember her name? Christ you really are a whore.\" I laugh at her words and reach down to slap her arse. \n\n\"I'm not whore, I never charged for it. Probably could've done though.\" That comment earnt me jab in the ribs \"forget that though, and fuck Tiffany Speck. I've only ever wanted a life with you... I don't expect you to make your mind up tonight but... just think about it love? Please?\" \n\nLexie stays silent for a while, her fingers resume drawing patterns and I just watch her as she lies in silent contemplation. She's quiet for so long I feel myself drifting off into sleep before she speaks again \"ok.\" \n\n\"Mmm?\" I murmur sleepily. \n\n\"I'll take your last name.\" She says defiantly \"on one condition.\" \n\n\"And what might that be?\" My eyes stay closed but I can't fight the smile that creeps across my lips. \n\n\"I get complete power of what we call our first child.\" \n\n\"We'll see love. Now go to sleep.\" \n\nAugust 2014 - Lexie \n\nI didn't think I'd be sad to leave Callie's sisters come Sunday afternoon, Lana's children are a blessing. Becca is so bright and intuitive, asking questions and holding her own in conversation despite her young age. She looks a lot like Callie, the same gorgeous auburn hair and bright blue eyes. Her nephew Louis is a lot like his mother and is cute as a button. Lana's husband, a handsome dark haired man, wasn't around a lot but when he was he was kind and attentive and it was clear to see that his wife and children are the center of his universe. \n\nThe journey home is quiet, Callie won't admit it but I can see that leaving the kids was hard on her. She's never come across as maternal, but watching her playing with the children, reading to them. The way she was patient and attentive made me yearn for the future she had promised me the night she sprang her proposal on me. \n\nThere I am, kneeling on the floor in our front room begging her to look at me, to believe that I'm going nowhere and that I'll do anything to make her see how much I love her. When she says the two words I never thought I'd hear come from her mouth. \n\nCallie's gaze was intent as she stared at me, the way her eyes burned into my own still makes me shudder. \"Marry me?\" Her voice was so calm, so controlled the words didn't register at first. \n\n\"What?\" my breathless reply almost got lost in the tense air that had begun to surround us, her hands move to my shoulders and she pushes me back enough so she can kneel on the floor in front of me. \n\n\"You hear me, I want you to marry me.\" \n\n\"But why?\" \n\n\"You love me, I love you. Seems like the normal next step to make.\" \n\nI remember shaking my heads as I try and let her words sink in \"Cal...\" I take her hands in mine and squeeze tightly \"you're asking me this because you're scared right now. I don't want you to make a decision that you may come to regret in the morning.\" \n\nI watch as a determined look falls on her face and lean my forehead against hers, she sighs heavily and pulls back. \"No, I mean it Lexie. I want you to marry me, I want you to be my wife. I want a life with you, to spend every morning waking up next to you. I want kids and a family and a future with you. Marry me Lexie.\" \n\nA car horn brings me out of my daydream and I look over at my soon to be wife and smile dreamily \"I don't think I can be bothered to cook tonight.\" I murmur, my hand resting on her thigh. \n\n\"Do you want to eat out?\" Her answer seems innocent but judging by the smirk on her lips she knows exactly what she's just said. \n\n\"Not really, I was thinking we could order in.\" I chose to ignore her innuendo, and watch as the smirk falls from her face \"and then if you're lucky I might eat you out for desert.\" \n\nShe risks a quick glance at me before indicating off at the slip road that leads to our house \"tease.\" \n\n\"I can't wait to get home.\" I murmur, resting my hand on Callie's which is clutching the gear stick I give it a small squeeze and rest my head against the car seat. \n\n\"I still love hearing you call it home you know.\" I don't answer I just smile at the wistful expression on my soon to be wife's face. The rest of the journey is made in a comfortable silence and we finally pull up in front of the home we share. \n\nWalking through the front door I get a sense that something's wrong, the vase on the cabinet in the hallway has moved and the photo frame that's home to a picture of Callie and I in Brighton is cracked. I can hear Callie shutting the car boot and the tell-tale sound of the car's central locking being set as I move through the house cautiously. \n\nThe living room holds the same irregularities as the hallway except on a much larger scale, every single frame that holds a photo of either Callie and I together or Callie with her friends and family is smashed. The only ones that are untouched are the ones that house me and my mum. The cushions on the settee are out of place, it looks as though someone's been sleeping there. \"Callie?\" I call out, I can hear her moving around in the kitchen, she's so obtuse at times. \n\nMy whole body is covered in goosebumps, the hairs on the back of my neck are on end as I take in my surroundings. I want to investigate the rest of the house, to see if there's anything personal missing or any other damage done but I'm rooted to the spot. \"CAL!\" I shout a little louder. \n\n\"Jesus, Lex. What's wrong?\" She's standing behind me, I choose to ignore the obvious sound of obvious annoyance in her voice and make her aware of the problem. \n\n\"Someone's been in here.\" I state, matter of factly and gesture around the room \"all the photos of me and you are broken and as stupid as it feels... I just know someone's been here.\" I don't have to turn around to know Callie's tensed up, she places a hand on my shoulder and squeezes. \n\n\"Don't touch anything, I'll call the police. Probably best to go sit in the kitchen.\" Before I have chance to reply she's gone, she's so bossy sometimes but I know it's because she worries. She needs control and something like this, the fact someone's entered our home and done this... it's so out of her control. \n\nWhat the fuck is going on?"
    ],
    "authorname": "Han_cg",
    "tags": [
        "romance",
        "lesbian love story",
        "lesbian sex",
        "lesbian",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/an-unexpected-reunion-ch-03"
}