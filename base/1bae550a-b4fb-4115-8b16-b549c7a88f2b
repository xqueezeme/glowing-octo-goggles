{
    "title": "Worlds Apart Ch. 03",
    "pages": [
        "Let the roasting commence. I know everyone hates it when authors start a series and either never finish it or take forever to post a new chapter. But my excuse for a five-year hiatus is that there wasn't much interest back in 2012 when I posted the original chapter, so I tied up Chapter 2 and moved on to other stories. But there have been requests over the years for a continuation or at least a better conclusion for Danae and Vincente, so I hope this will appease the masses. Thank you for your continued loyalty!\n\nSSW\n\n---\n\n----\n\nPROLOGUE - PRESENT DAY\n\n----\n\nAs much as I hated to admit she had been right, I would be forever thankful for Cristal's matchmaking project. After all of the suitors she'd tried to pair me up with over the years, I would have never thought I'd fall for a 475-year old man who was secretly part reptilian. And yet, here I was, moaning contentedly in his warm embrace.\n\nVincente had curved his hand around the globe of my breast, just barely gliding it over the surface for the longest time. Eventually, it came to rest underneath, cupping me. Massaging my pliable flesh. Making me shiver when the pad of his thumb grazed over my nipple. Then he pinched it between his thumb and forefinger.\n\nI shuddered with a gasp, arching into his touch.\n\n\"It still amazes me, my love, how sensitive you are.\" The velvety-smooth sound of his voice swept in my ear and caressed my mind.\n\nI sighed against his bent arm that cushioned my neck. I had been watching the shadows dance on the wall from the flickering candle flames. But when his hand stilled again, my eyelids fluttered closed.\n\nHis firm chest pressed against my back momentarily while he leaned forward, his mouth brushing kisses from my ear down along my jaw.\n\nI tilted my head toward him. Sighing once more when our lips met. My mobility hindered by his thick arm that lay over my right bicep, I bent my elbow and clung to what I could of his appendage. Holding my upper body at the opportune angle.\n\nOur kisses were light at first. Mere whispers broken by my coos because he resumed manipulating my breast. When he licked at the seam of my lips, I opened my mouth to him. His tongue swept in, dancing with mine, and my fingers squeezed at his muscles.\n\nDelicious tension swirled in my belly. Another slight pinch of my nipple made my breath catch in my throat. When my pussy contracted, I felt more moisture gather between my thighs.\n\n\"You are breathtaking,\" he whispered hotly against my cheek.\n\nThen he arched against me from behind, his length burying deeper within me. Reminding me that we were still joined there. He had been still for so long\u2014and it was so comfortable with him just filling me\u2014that I was prone not to consciously think about it.\n\nI released his arm and moaned louder when he arched again. My inhales escaped in long, shuddered breaths while his fingers skated down my stomach, coming to rest with the heel of his hand just above the soft flesh of my mound. The heat emanating from his palm seemed to brand me. Made my hips retreat from his touch.\n\nI pressed my ass back against him, but I had nowhere else to go now. I was trapped between his hard body and his strong hand. Positioned on our left sides, he had spooned behind me with our legs bent. The tops of his thighs and knees were molded against the back of mine so that I was essentially sitting on his lap after he'd impaled me with his cock.\n\nHe began a rolling motion from the waist down where our joined hips and legs rocked back and forth. Like two snakes slithering in ecstasy. He remained fully inside me, my walls contracting in response to his throbbing. His other hand tangled in my hair, gently but firmly holding my head to his shoulder. His tongue danced along my exposed neck. Along my shoulder.\n\nMy exhales became sharper. I gripped his arm again, my nails clawing at what skin I could reach. Whimpering when his fingers didn't move any further south. Just another inch...\n\nVincente nipped at my earlobe, his breath warm against my cheek. \"Sweet, sweet, Danae.\"\n\nA groan of frustration bubbled up from inside. \"Please...\"\n\n\"Shh.\" He kissed my jaw then nuzzled his face in my hair. \"Even after all this time, you are still so impatient, my love.\"\n\nI licked my lips. \"Only because you insist on torturing me.\"\n\nHis chuckle rumbled against my back. As if to prove my point, his fingers began to knead that sensitive triangle of skin. Splaying out, stroking with varying pressure.\n\nI tried to reach over his arm to play with my breast, but his bicep was a vice holding my arm immobile. He was right...I wanted instant gratification. I grunted in defeat and let my arm flop back on the bed while he did what he wanted with my body. His touch painting my skin with pleasure but not offering any relief.\n\nAnd then suddenly, he rolled onto his back and swung my body on top of his. As though rewarding me for my submission. He released my hair to caress my neglected breast. Gravity caused my head to relax back over his shoulder. My legs to fall open. I automatically propped my feet on the bed, intending to thrust up and down on his cock.\n\n\"Stay right there, Danae,\" he growled in my ear the second I rose up.\n\nObeying his command, I froze with my shoulders blades against his chest but my hips in the air and my pussy bared lewdly, my hands now supporting me on either side of him on the bed. I whimpered when he slid out until just the crown was in me. The back of my head pressed against his shoulder, my eyes clenched, my mind focused on his fingers. One of his hands continued to fondle my left breast while the other lightly stroked just above my pelvic area, still avoiding where I desired his touch most.\n\nHe began moving beneath me then, adding to the sensations already rippling through my body. It was slight at first. A brief reentry before withdrawing so that the rim of his cock caught on my tight opening. Then a little further in and back out to the rim again in excruciatingly slow motion. Over and over, more of his cock filling me each time before unsheathing his sword. Making my breaths stop and start in various intervals as though I were sending a message through Morse code.\n\nI tried to concentrate on holding still, to keep my lower half elevated. But he ran his fingers along my side, and my arms started to shake. Just when I was sure I would lose control and fall down on him, his hands abandoned their play to grip my hips. To hold me up. Then he drove up into me with one big thrust, forcing me to cry out.\n\n\"Yes, my love. Make music for me.\"\n\nAnd I did. A harmony of mewls and moans filled the room while his hips hit my ass, his cock stabbing me harder and harder. But the edge was still out of reach.\n\nThere was nothing I could do. So I remained suspended in air, propped up by his hands and body. My breathing grew heavy and even more erratic. Sweat gathered between us, making my upper back slide against him with each of his powerful, upward thrusts.\n\nI'd given up all hope for release when he suddenly let go of my hips so that I dropped down on him. My cry of surprise morphed to a strangled gasp. It took a moment for my brain to process what had happened before my body took over as though on autopilot. My ass wiggled against him. My back arched hard, pushing my pelvis down on him. My walls clamped around his cock, absorbing his pulsations. Anything I could do at all to increase the friction between us.\n\nHis arm wrapped across my upper body, roughly gripping my breast. \"Come for me, my love. Reap the rewards of patience.\"\n\nI screamed when his fingers touched my clit. Bliss spread over me like a drop of water on a tissue or piece of paper. Toes and fingers curled. My head rolled back and forth against his shoulder while I mumbled for him to stop. He ignored my pleas and continued stroking my most sensitive spot in languid circles, sending pleasure in unceasing waves throughout my extremities.\n\nBefore I could recover, he thrust up again. I stared at the flickering shadows on the ceiling now, my eyes and mouth frozen wide open in a silent scream. I heard his deep groan before another orgasm rushed over me.\n\nIn the cobwebs of my mind, I anticipated the gush of warmth that would fill me with his release. No warmth came, though. But I was falling. No, rolling. On my stomach now, I clutched at the sheets, gasping for breath, my body still writhing from aftershocks.\n\nHis movements became gentler, though he continued stroking in and out of my heat. And despite the slickness from my arousal and release, my body gripped him tightly. Because he'd swollen even more.\n\nI felt his hand moving between us. Bumping my ass while he stroked himself. Fresh tears spilled down my cheeks, wetting the bed. I had hoped he'd forgotten this time.\n\n###\n\n----\n\nFIVE YEARS EARLIER\n\n----\n\nVincente pulled me up next to his body after I'd sucked his cock dry for the first time. He sighed, one hand cupping my face, his thumb brushing over my lips. \"Oh, my sweet, Danae.\"\n\nI smiled wickedly. He was the one trembling now. At my hands. From my mouth.\n\n\"Come here,\" he whispered.\n\nHe tipped my chin up and brought our lips together. We met in a passionate moan. Then our tongues joined in a fiery dance, his hand holding my head still.\n\nI mewled softly, my fingers clutching at his arm. My left leg fidgeted. Vacillating from rising to lie over his legs and pressing for entry between them to get closer to him.\n\n\"Shh.\" He devoured my mouth again, his hand lowering. Stroking my hip. Skating along my thigh. Driving me wild.\n\nSeveral minutes later, I threw my head back with a growl when his fingers gripped behind my knee, yanking my leg up over his hip. When he pressed his thigh hard against my damp pussy. I rocked against him to the sounds of our combined heavy breathing and moaning. Whimpering while I strove to reach that pinnacle.\n\nAs if knowing what I needed, he gently pressed his fingers between us and circled my clit. It took only a moment before I felt the tension release. I cried out, my body continuing to undulate from his ministrations. Throughout, I felt his cock twitch against the top of my other thigh.\n\n\"You are insatiable, Danae.\"\n\nI put my head on his chest. One of his arms wrapped around my neck, his fingers lightly stroking the top of my left breast. His other hand caressed my side...my lower back. A shudder rattled my spine.\n\n\"You're going to break me,\" I said panting.\n\nHe only chuckled.\n\nWe lay there a few awhile longer before he helped me sit up. Then he stood and reached for the bottoms from his tuxedo.\n\nWhen our bodies parted, I whimpered. I suddenly felt...lonely. Empty. Logical thoughts filled my head. Tears welled in my eyes. My lower lip trembled.\n\nVincente sat down quickly and cupped my cheek in his palm. \"What is wrong, my love?\"\n\nI sighed and blinked, droplets drifting down my nose and cheeks. \"Well, for one, that.\"\n\n\"What do you mean, Danae?\"\n\n\"Calling me your love.\"\n\n\"But you are.\"\n\nI pressed my eyes closed, wrapping my arms around my naked breasts.\n\n\"Is there something else?\"\n\n\"What now?\" My vision was blurry when I looked at him again. \"What happens next?\"\n\nOne corner of his mouth curled up. \"Surely you are sore. Hungry. We will rest before we fuck again.\"\n\nI snorted softly. \"I meant as a bigger picture. I've had an amazing time here with you. And honestly, I don't want it to end. I don't want to leave.\"\n\nHe smiled fully at me, his eyes sparkling in the candlelight. \"You want to stay. I want you to stay. There is no problem.\"\n\n\"Vincente...\"\n\n\"Please, Danae.\" His smile disappeared, and he reached out to touch my face again. \"Now that I've found you\u2014\"\n\nI groaned. \"There you go again.\"\n\n\"I do not understand.\"\n\n\"All this talk about how you've been waiting for me, and now that you've found me... It's overwhelming. I have trouble wrapping my mind around how hard you've fallen for me so quickly. We just met.\"\n\n\"I feel I have known that you were out there my whole life.\"\n\n\"See? That? I didn't exist for most of your life. And trying to accept that you're...whatever you are?\"\n\n\"A dyson.\"\n\n\"Yes, I know. But for a human? It's unfathomable that you've been alive for as long as you say you have.\" And look so good, I added silently. \"I'm also still trying to get past how your...cock...it was a snake...then it wasn't...I feel like I'm having hallucinations.\"\n\n\"I can control it.\"\n\n\"Yes, so you said. I saw. But how? That's what baffles me.\"\n\nHe tilted his head. \"My emotions guide it.\"\n\nI let out a deep sigh. The bed shifted as he stood. My gaze followed, and I groaned softly at the sight of his bare ass and backside. How toned he looked. How strong.\n\nThe shadows played off his defined lines as he moved. As intimate as I'd been with the few other men before, I'd never paid much attention to their bodies. It was what they had done with their fingers and tongues that had fascinated me.\n\nBut Vincente? He was very much a man, regardless of whatever else he may be. And I could stare at his body for hours.\n\nHe pulled his pants on, sans underwear. When he started to sit down next to me, I shook my head.\n\n\"I can't think straight when we're,\" I waved my hand between him and me then the bed, \"together. Yet I don't want to think the thoughts I do when we're apart. Because what I feel when I'm with you is so much better than being rational.\"\n\n\"Then I won't leave you.\"\n\nI laughed at that. \"I have a job.\"\n\n\"You do not need to work. I am rich. We will live here together. You will want for nothing.\"\n\nI closed my eyes and flung myself back on the bed. Of course, he had it all planned out after only twenty-four hours. Then again, as he'd said...he'd been waiting a few hundred years to meet me.\n\nWhat the hell was wrong with me? Was I really considering his offer?\n\nWhen I cracked an eyelid to look at him again, he was still smiling. I grunted. \"I have a life, too. Am I just supposed to give all that up? After several hours of mind-blowing sex? Don't get me wrong, I have no regrets. But, I would be crazy to... What I'm saying is... Hell, I just met you.\"\n\n\"Danae\u2014\"\n\nI stood suddenly, barely hearing his growl when I rounded the end of the bed, fully naked. \"Oh, God, I need to talk to Cristal. I need my clothes.\"\n\nVincente silently watched me pull on panties, bra, and the new dress I'd bought for his party. He remained seated on the bed throughout. Naked from the waist up, he was a remarkable sight.\n\nAgainst the dark headboard and the scattering of black sheets and colorful, animal-print fur blankets that had somehow remained on top of the bed despite all of our lovemaking, he looked like he was posing for the cover of a Harlequin novel. The sweat covering his defined chest glowed in the candlelight. Each measured breath made his muscles ripple. His dark hair hung wildly about his head now. And his blue eyes flickered, reflecting the candle flames.\n\nDesire sparked in my core, causing my pussy to pulse and moisten.\n\nI clamped my mouth down to silence the cry rising up my throat. Then I grabbed my shoes and practically ran from the bedroom. My purse was in the main sitting area. I moaned at the decanter of blood wine on the table beside it.\n\nMy mouth went dry. Yet as my hand wavered over the glass stopper, the voice of reason in my head said my attraction to Vincente had merely been a result of the contents of that bottle. He'd already admitted that the concoction would boost my arousal. The more I drank, the stronger the effect would be. Like a drug. And not having had the drug in a few hours, my body had come off its high. Was jonesing for a fix. But if I allowed enough time to get the drug completely out of my system, surely, the magnetism between us would also depart.\n\nAvoiding temptation just barely, I continued on my path. It wasn't until I reached the double doors and tried the handle without success that I remembered I was locked in. I stared at the modern wood design. The hardware. At the electronic black box on the adjacent wall with the solid red light and the green word 'SECURED' staring back at me from the small screen. It was all such a contrast to the d\u00e9cor of the rest of his suite.\n\nI had heard his footfalls slowly approaching then stop. Now, I felt his presence looming behind me. Inviting me to turn around. It was so hard to resist.\n\n\"Danae\u2014\" Vincente's voice was gravelly. Alluring.\n\nMy eyes drifted closed. I swallowed heavily. When I spoke, my voice did not sound like my own. It was deeper...seductive. \"Please, let me out.\"\n\nHe reached around me, and I shivered at the coolness of his skin when his arm brushed against mine. Without my own warmth, his temperature had returned to normal\u2014for him. His hand lingered over the buttons on the black box. His breath caressed my ear as he whispered, \"Will you come back to me?\"\n\n\"I\u2014I need time to think.\" I gripped the door handle harder, my knees growing weak at the desperation in his tone. I held my breath, waiting for him to touch me. Silently begging him to. I didn't want our last physical contact to be cold. When he kept his distance, my exhale was more of a sob.\n\n\"Please come back, Danae. I will be waiting.\" And then his fingers flew across the number pad. The four beeps of varying tones and a snick as the lock disengaged seemed quite loud.\n\nSomehow, I managed to open the door and walk out without stumbling. He did not follow me. I wasn't sure if I was glad or not. Each step I took further away from his suite, the more I wanted to cry.\n\nMy keys were on the table in the foyer. The valet must have left them. Outside, the sun was already setting. Everything looked exactly like it had when I'd arrived last night, minus the multitude of cars lining the drive.\n\nI sat in my car for a few minutes. I wanted to go home and sleep. My body felt like I hadn't slept for days rather than a few hours. I had dozed off and on since last night, though I had not gotten any true rest due to my dreams. I could hear my bed calling me. But the missed calls and messages on my phone told me I needed to go somewhere else first.\n\n###\n\n\"Okay, back up, Danae,\" Cristal said, still pacing just like she had the whole time I'd explained what had happened the night of the party...where I'd been ever since. \"I introduced you to the richest, most handsome man in the state if not the whole world. He swept you off your feet and gave you the best sex you'll probably ever have in your life. He suggested you quit your job and move in with him. That he would support you. And you told him no?\"\n\n\"Yes, that's right.\" I hugged the throw pillow tighter to my chest.\n\nShe stopped before me and gripped my shoulders. \"Are you crazy?\"\n\n\"We haven't even known each other for forty-eight hours!\"\n\n\"That didn't stop you from sleeping with him.\" She rolled her eyes at me when I glared at her. Then she plopped down on the couch next to me. \"You could have said you'd think about it.\"\n\n\"Did I wake up on a different planet? You think I should have accepted his offer?\"\n\nShe shrugged. \"I would have at least entertained it.\"\n\nI dipped my head, murmuring, \"Yes, you would have.\"\n\nCristal pursed her lips. After a couple of deep breaths, she took my hands in hers. \"Danae. We've always been honest with each other. I'm not going to start sugarcoating it now. Neither of us is getting any younger. I've found my passion. Now it's your turn.\"\n\n\"I'm perfectly happy with\u2014\"\n\nShe scoffed at me. \"You can't tell me you'd prefer to stay a secretary for the rest of your life. Trapped under the glass ceiling of a man's world. Are you really thinking something better is going to come your way? Because here's a reality check. It's not. Vincente? That Greek god?\"\n\n\"He's French.\"\n\n\"Yeah, well, he's as good as it gets.\"\n\n\"This was a mistake.\" I gathered my purse and keys from the coffee table. \"Thanks for the invite to the party. It was fun. Sorry I've disappointed you yet again.\"",
        "\"Danae, stop!\" Her rapid footsteps followed me to the door.\n\nI did stop, but not until I was on the front stoop. I turned to her, fighting against the tears forming in my eyes. \"I came here looking for support, not a critique on my poor life choices.\"\n\nMy best friend crossed her arms. \"That's not what I said, and you know it.\"\n\n\"No, but it's what you meant. It always has been.\"\n\n\"You're being irrational,\" Cristal huffed.\n\n\"Am I? All the times you've tried to set me up? I'm not blind. I know you think I must be unhappy being single because you were. But I'm not you, Cristal. I never will be.\"\n\n\"What is that supposed to mean?\"\n\nA tear trickled down my cheek. \"I'm just asking you to please stop trying to change me.\"\n\n\"Sorry, I'm an interior decorator. It's my job to change things. For the better.\"\n\nThe sight and sound of the door shutting in my face felt eerily like a book being closed. Had I just ruined my friendship over a guy I had decided I didn't even want to be with?\n\n###\n\nI had heard my phone beep while I was driving home. But I didn't check the messages until I had pulled into my parking spot at my apartment.\n\nCristal: I'm sorry. I only want what's best for you. Please forgive me.\n\nThis wasn't our first fight, but it was the one that hurt the most. I couldn't get past the image\u2014the sound\u2014of that door shutting. I wasn't in the mood to be merciful yet. To just forgive and forget. I'd done that way too many times, especially with her. Maybe she'd finally realize I had feelings too, and saying you're sorry when you've damaged someone's self-esteem didn't always make everything all better again. It was like putting a bandage on a wound that needed stitches.\n\nThe three dots appeared on the text message screen indicating she was typing. They disappeared, reappeared, and then disappeared again. After watching the clock on the screen indicate that two minutes had passed and no other message came through, I locked the car and went inside.\n\nI realized it was silent\u2014cool\u2014after I deposited my purse and keys on the hall table. Much like Vincente's suite was. His literal man cave. Like a snake creating its nest to return to after chasing its prey. That thought made me shiver.\n\nI left the lights off and wandered across the living room. Still wearing my cocktail dress, I curled up on the couch and stared at the blank TV. My eyelids were growing heavy, and I was about to give into the lure of sleep when my phone dinged that I had a new message.\n\nCristal: He has some physical abnormality that makes you squeamish, doesn't he? Like three nipples, missing toes, or a hairy back. I get it, girl. No need to explain. Sorry again for being a bitch.\n\nOh, she had no idea how right she was. On all accounts.\n\nI considered responding, but I couldn't think of what to say. A moment later, a new message bubble popped up on the screen.\n\nCristal: Text me later if you're not still mad at me. I'm putting my phone on silent. Hubby wants to try out that new K-Y warming lube. *giggle*\n\n\"Way too much information.\" I grimaced and tossed the phone to the other end of the couch. Of course, my mind went south as I thought of sex. Which led to thinking about Vincente. Ugh.\n\nMy stomach grumbled, but I didn't have the energy to call in takeout or wait for it to arrive. I should have picked up something on the way home. Damn it. I took a hot shower instead and then crawled between the cool sheets of my bed, fully naked. Yet for all my exhaustion, I could not fall asleep.\n\nI stared at the ceiling of my bedroom, imagining flickering shadows from candles. My mattress felt hard. I missed the luxurious feeling of fur against my bare skin. A hot body pressing up against mine from behind in post-coital bliss.\n\nThe sobs started quietly. They intensified the more I thought about Vincente. About how it felt when he touched me. When I touched him.\n\nWas I crazy to turn down his offer?\n\nNo! It was exactly as I'd told Cristal. What person in their right mind would set aside their entire life for someone they just met? Even if that person was amazing\u2014albeit strange.\n\nThe more I thought about it, though, the more I could picture being with him. Hosting and attending parties. The sex alone made the proposal worth reconsidering. Maybe he would compromise. It couldn't hurt to ask him to give me time to get to know him better. Because Cristal had been right about one thing: I wasn't happy just being a secretary. I wanted more, especially since meeting Vincente.\n\nI rolled over and pressed my face into my pillow, my body shivering as the air conditioning kicked on. I had never felt so alone in my life. Maybe things would be better in the morning.\n\n###\n\nThe next week was torturous. The days were manageable. With tax season, the phones were ringing off the hook at work. A wonderful distraction from my thoughts.\n\nBut the nights? I cried myself to sleep, every one of them. Woke up each morning in a tangled mess of sheets. My throat feeling parched. And no matter what I drank, my thirst was not quenched.\n\nThen there were the dreams. They were a mixture of haunting, vivid memories of sex and nightmares of being chased by overgrown snakes and other reptiles. And I kept imagining I was living in the cult-classic, \"The Lost World\" by Sir Arthur Conan Doyle, Mr. Sherlock Holmes himself.\n\nAfter just two days, I admitted that it had to have been more than the wine that had caused my body to be drawn to Vincente. Yes, the contents of the liquor fed my desire. But there was connection there before I'd had my first sip. It was undeniable.\n\nBy Friday, I thought I really was going crazy. I'd managed to get through work, but I paced the length of my small living room so many times that evening, I was sure I'd walked a couple of miles. Of course, sleep did not come when I forced myself to go to bed. I tried masturbating, but that only made me cry harder because I kept imagining Vincente was there. Helping me ease that ache.\n\nI cried out my anguish to the dark of the night, thrashing on the bed in anger and frustration. There was only one answer. I had to accept my own fate. Or at least see where it led.\n\n###\n\nThe sun was just peeking over the horizon when I pulled my car up to the massive iron fence. Before I even got my window down, one side of the gate silently swept open. Huh.\n\nThe drive up the winding tree-lined road seemed longer than before. Or maybe I was just driving slower. I parked next to the elaborate, graduated three-tiered fountain in the middle of the circular drive. A week ago, crystal-clear water had danced against the spotlights that had been trained on it. Rivulets trickling over the scalloped edges between each level before pooling in the basin adorned with colorful water lilies that had closed up tight for the night amongst floating, emerald green pads.\n\nNow, the water was still. The flowers and their bed of leaves were absent. The fountain was just a lifeless, murky existence. Much like I'd felt the past six days.\n\nWith a deep sigh, I unfolded myself from my car and popped the trunk. Then I was standing on the landing of the ornately tiled steps that led up the front walkway. I felt dwarfed by the massive door to the estate as my hand hovered over the doorbell. Had I made the wrong decision? Maybe I should leave before it was too late.\n\nBut again, before I could make a choice, there was the snicking sound of two locks being turned. I held my breath when the door opened, creaking like from an old horror movie. I was prepared to deliver my speech, but my words died on the tip of my tongue.\n\nAn older man in a dark suit stood in the narrow opening, his hands clasped in front of him. \"Madame Danae, the master has been anticipating your return. He will be most pleased you have arrived.\"\n\nI stared at the butler, the same one who had let me in last week. So formal. Another reminder that I was out of my league here. He must have been the one who had opened the gate. Had he been watching for my arrival all this time? I had assumed he'd been hired, like the valets, to impress the guests. Proven wrong yet again. It made me wonder if there was other staff on hand. And did they all know about me?\n\nThe door opened wider, and the butler stepped aside. When I didn't move, he held out a hand. \"May I take your bags, Madame?\"\n\nMy voice finally caught up. \"Thank you...\"\n\n\"Gaspard.\"\n\nI nodded with a soft smile. \"Thank you, Gaspard.\"\n\nHe took the handles of my suitcase and the shoulder bag I had set down at my feet, rolling the former into the foyer before I finally stepped inside. The hall was dark except for three sconces glowing lowly, one by the stairway, and two others flanking the gilded mirror on the opposite wall. The space looked gloomy. So unlike the night of the party or even the day after.\n\nI waited until Gaspard closed the door and secured the locks again. Then I followed him up the winding staircase to the third floor. My heartbeat seemed to thump harder the further we climbed. My breathing became shallower. And then we were standing outside of the double doors to the master's private quarters. The mini castle within a modern mansion.\n\nGaspard pressed a button on the keypad. There was no sound for several minutes. Then the door nearest us started to open as a voice heavy with sleep and sadness called out.\n\n\"Did I not give explicit orders to not to disturb me?\"\n\n\"Yes, Sir.\"\n\nVincente fully stood in the doorway now, dark pants his only clothing. He opened his mouth, probably to continue his admonishment, but his eyes shifted over his butler's shoulder. The piercing blue orbs stared at me. Blinked slowly. Then he suddenly stepped forward with a gasp. \"Danae!\"\n\nMy cheeks heated, and I wanted to lower my gaze. To apologize for bothering him at such an hour. But all I could do was gaze into the seemingly endless depths of his eyes. Feel the dampness gathering between my legs.\n\nHe held out his hand, palm up. The coldness of his fingers wrapped around mine when I placed my hand in his. Then he tugged gently, urging me forward.\n\nI followed, stepping past Gaspard without a sideways glance. From somewhere behind me, I heard the rolling and soft scuffing sounds of my luggage being moved into the suite. The door closing. And then the only sound was the rapid beat of my heart in my ears combined with my heavy breathing while Vincente led me across the vast sitting area, lit by a single candle on the fireplace mantle.\n\nHe paused at a table where a full carafe of blood wine sat with two empty glasses. He started to release my hand, but I squeezed his, shaking my head. I licked my lips, swallowing. I didn't want the wine tonight. Not yet. I had to know first...\n\nHis groan met my ears. He raised my hand instead, pressing his now warm lips against my skin. Then we were moving again. He walked backwards toward the dark hall on the other side of the room, as though afraid I would disappear if he looked away. He only stopped once we reached the bedroom.\n\nVoid now of candlelight, the shadows enveloped us completely. Even more so after he shut the door.\n\n\"Danae...\" His voice was so deep. Thick with emotion. Reaching out to me from the darkness.\n\n\"Vincente, I'm sorry...I...\" I choked on the words I wanted to say to him. The reason for my departure. The delay of my return. The desires of my heart and the hope that he could fulfill them.\n\n\"Shh, my love.\"\n\nI couldn't see him at all, but I felt him. How he gently cupped the side of my face\u2014making me sigh\u2014stroking his thumb over the rise of my cheekbone. I worried my lip as his other hand mirrored his touch. Then he tilted my head back. His lips skimmed over mine, and I gasped.\n\nThere was no pressure behind the kiss, but it rocked me to my core. My entire body trembled. I reached up and grasped both of his forearms, whimpering.\n\nAgain, he gave me the chastest of kisses. Held my head still as I clung to him. Repeated the motion.\n\n\"Please...\" I whispered as he withdrew just a few inches once more. I whimpered again. Felt my knees grow weak. Licked at my dry lips and swore my tongue grazed his lips. I needed him so much it hurt.\n\n\"My sweet, sweet Danae.\" His breath warmed my lips. \"You do not know what your absence has done to me. You are in no position to beg. But I do so adore hearing the hunger in your voice. Do not stop on my account. Know, though, that I will not be remiss in acquiescing to your wishes.\"\n\n###\n\nI lost track of time. Was it still Saturday? Or the end of the weekend already? Every minute...every hour...they merged into one continuous haze of absolute pleasure.\n\nMy body was contorted in ways I'd never thought possible. Vincente's tongue and fingers had touched places I'd never let anyone else dare. And throughout it all, my hunch was confirmed: something natural drew us together like nothing I'd ever experienced.\n\nI released sounds I'd never known possible when he prolonged his ministrations. Building me up until I felt delirious, like I would break into a million pieces if he kissed, licked, or thrust into me one more time. He consoled me in his arms while I wept, only to repeat the cycle after I'd stopped thrashing beneath him.\n\nAfter several hours, I mumbled for him not to touch me for a while\u2014to let my nerves recharge. He finally gave me a bit of respite. Maybe because I had accepted the glass of blood wine when he'd said I must drink something, else I get too dehydrated from exertion. Or because I'd stopped begging him to touch me like this or kiss me like that and had completely bent to his will.\n\nWhatever his reason, I used the break to explain that I needed more time to get to know him better. To decide what exactly this meant for me. I insisted that I would return to my job Monday morning, but I would stay with him. Live with him for now to try it out, hence my suitcase. To my relief, he agreed to my suggestion.\n\nThen he rang for Gaspard to bring us some food. Vincente fed me while I lay naked upon the furs, making me feel a lot like a goddess. The perfect counterpart to his god-like persona.\n\nAfter we had eaten, I floated on the edge of sleep. Complacent with my decision to return. To stay.\n\n\"Come with me, Danae.\"\n\nI moaned as his finger trailed along the back of my shoulders. \"Where are we going?\"\n\n\"Marseille.\"\n\n\"Huh. In France?\"\n\n\"Oui.\"\n\n\"Can I take a nap first? I'm really tired.\"\n\nHe chuckled. \"Yes, my love. We will not go right now. But soon.\"\n\nI snuggled deeper against him. He was comfort to me. Something I had not known I craved. Missed since our parting. But what was lost was now found. \"Why are we going there?\"\n\n\"What better way to learn about me than through meeting my family?\"\n\nI inhaled, held my breath for a moment, and then let it out slowly. All or nothing, right? \"Okay.\"\n\n###\n\nMy phone had been on silent all weekend. When I'd gotten around to checking it, I had twenty missed texts. All from Cristal.\n\nThe one-sided conversation started with an apology for slamming the door in my face\u2014not that she'd bruised my ego by claiming I needed a man. Then she asked why I wouldn't I forgive her, especially since she had said she was sorry. There were a few ramblings about her activities since we'd last talked. And true to Cristal's nature, the last text was a quip about how she could take a hint that my extended silence meant I didn't have time for her or need her anymore.\n\nI was going to respond that I was taking her advice and finding my own happiness. I was even going to apologize...but only that my phone had been off. Something in me had just had enough, though. I knew that if I told her I was back with Vincente, she'd rub it in that if it hadn't been for her, we wouldn't have even met.\n\nI kept going back to one of her texts that pleaded for me to see reason.\n\nWhat I saw was someone I'd known for years but who I didn't really know. She was so into herself. I realized that maybe our friendship had run its course. I was grateful for her inviting me to the party, but she wasn't getting all of the credit. She may have introduced us, but I chose to come back. To be here.\n\nAfter a little waffling, I responded that I'd had a busy week and was taking some time to disconnect from life this weekend. Only I got an error that the number I had tried to reach was no longer available. She had blocked my number because I hadn't texted when she wanted me to? What a bitch! If I needed confirmation that I'd made the right decision to break away from that relationship, I'd gotten it!\n\nMonday morning found me going back at work, much to Vincente's chagrin. He growled when I crawled out of bed to get ready. Huffed when I insisted he either give me the code or get up to let me out of the suite. And then his kiss was half-assed when he finally picked option two. Maybe he'd thought a weekend of passionate sex would change my mind. But it was going to take a whole lot more than that to convince me to quit my job.\n\nHe was in a better mood when he saw I'd returned right after work, as promised. We ate our first meal together at his dining room table. Afterwards, I met his private chef, Andr\u00e9, and learned Vincente had two maids\u2014Giselle and Corrine\u2014as well as a gardener, Pierre. They all lived in the house, too, but on the second floor. At least the rest of the rooms weren't going to waste.\n\nI asked Pierre about the missing water lilies. He glared at Vincente before giving me a smile, saying he would be sure to replace them the next day. Apparently, the master had said they reminded him too much of me, and he hadn't wanted any reminders of my beauty. Hence the derelict fountain on my return. The darkened foyer.\n\nVincente just grunted his assent to bring the place back to life. Then he practically dragged me upstairs. He stripped me in the sitting area of his suite before carrying me to his bed. There, he tossed me onto the furs and yanked his pants down to reveal his erection capped with bulbous head, leaking his arousal.\n\nWe made love surrounded by candlelight. Exploring each other's bodies, discovering our special spots. And like the two previous nights, he cradled me in his arms. This time, I fell into a dreamless sleep.\n\nThe rest of the week was the same. Work, dinner, sex, sleep. I could easily get used to that cycle.\n\nAll of my free time was spent with my mysterious man. Most of it was naked in his bed, but we did talk quite a bit about our lives, especially our childhoods. I lay rapt by his side while he described meeting famous people I'd only heard of in textbooks. The horrors of war. The excitement of when new inventions were discovered.\n\nBefore I knew it, three weeks had passed, and we were finally on a plane crossing the Atlantic. I was immersed in a culture I'd only read about or seen on TV. The French were not snobbish at all. Rather, they were very polite. Respect begat respect. And having a handsome man by my side who spoke the language didn't hurt.\n\nVincente kept my hands held between his during the limo ride from the airport. I was shaking so badly, he thought I was having a seizure. I'd convinced him it was just nerves. But truthfully, it was more like a panic attack.\n\nI had not known what to expect as we were driven far out into the countryside by his grandparents' chauffeur. Did he worry as I did? He was bringing home a different species, not just a girl, to meet his grandparents for the first time. Sure, his mother had been human, but she had been dead for almost half a millennium. What would they think of me? I knew no other family members would be present, but impressing the patriarch and matriarch? That was a huge undertaking for a nobody such as me.\n\nWe rounded a hill, and suddenly my jaw dropped. The estate appeared like a stone fortress on the horizon. Spreading out and up, pillars and arches defining the entrance...the gardens surrounding it.",
        "It reminded me very much of Vincente's private suite yet in much grander scale. Classic to the era in which it was built. To the owners who still dwelled within. What exactly had I agreed to? I wasn't ready for this.\n\n\"Mademoiselle,\" Vincente said as he opened my car door, distracting me from my thoughts.\n\nI smiled shakily and took his proffered hand. Leaned on his arm for support while our shoes crunched on the gravel of the driveway. His presence only slightly calmed me this time.\n\n\"Vincente! Mon gar\u00e7on!\" A female voice called out before I saw a woman approach us from under a wider arch that defined the front entrance, her arms held wide open.\n\nI knew this must be his grandmother, yet she looked so young. She was tall, just like her grandson, and looked very sophisticated in her tailored slacks and blouse. Like a French model that'd only grown more becoming with age. Her gray hair was cut short, framing her narrow face. And little laugh lines around her eyes crinkled when she smiled. She definitely did not appear to be around the 900 years that Vincente had told me she was. I wondered if that was natural for dysons.\n\n\"Salut, m\u00e9m\u00e8re.\" He let go of my hand to kiss the woman on each of her cheeks. Then he turned to me, his voice full of pride as he said, \"Danae, this is Ren\u00e9e, my grandmother. Grand-m\u00e8re, my Danae.\"\n\n\"Is it Viscountess?\" I whispered at Vincente.\n\nHe shook his head. \"Only I have the title. It is not passed down through my lineage but was awarded at a time when it meant something.\"\n\nTurning back to his grandmother, I held out a shaky hand. \"Salut, Ren\u00e9e.\"\n\nThe woman's smile lit up her eyes. She bypassed my hand and went right to cup my face, kissing each of my cheeks. \"Elle est belle. Tr\u00e8s belle.\"\n\nI glanced at Vincente and raised my eyebrows.\n\n\"She said you are very beautiful.\"\n\nRen\u00e9e glanced at me and then tilted her head at Vincente. \"C'est elle?\"\n\n\"Oui. J'ai trouv\u00e9 mon c\u0153ur. Mon \u00e2 me.\"\n\nI poked his arm and whispered, \"And that means what?\"\n\nVincente stroked the back of his fingers across my cheek. \"She asked if you were 'the one.' I told her, yes. You are my heart. My soul.\"\n\nHeat filled my cheeks. I had not expected that at all despite the pet names he called me. \"Uh. Wow.\"\n\nRen\u00e9e laughed loudly then. \"Danae, you will learn that my boy is nothing but honest.\"\n\nI gave her a halting smile. \"You speak English?\"\n\nShe nodded at me and hooked an arm through mine, turning me toward the house. \"Now tell me, child, how was your trip? Did you enjoy it? My grandson, he would skip all the details. He's just like his grandfather. You will meet Liam later. He is out riding. Do you like horses? Vincente can take you to the stables if you want to ride before dinner.\"\n\nMy head was spinning with all of her questions. But my smile widened. I had nothing to worry about with impressing Vincente's grandmother. If he approved, she approved. I felt...at home.\n\n###\n\nWe had one week abroad, and I had intended to use it to see as much as possible of France. But we never left the estate. Vincente said that if I agreed to be with him\u2014to marry him eventually\u2014we would have all the time in the world. For now, I should relax and enjoy the peacefulness we were granted.\n\nIt wasn't difficult to relax once I'd relented to his wishes. Though I thought it was too soon to talk marriage. He'd hushed me with a kiss when I tried to tell them that. And then, he'd gone down on me and done an amazing thing with his tongue that I loved. Uh...yeah, I could get used to that!\n\nRen\u00e9e and Liam\u2014who gave me a good indication of how handsome Vincente would be at his age\u2014doted on me as if I were their own granddaughter. They offered me every amenity I could imagine from the aforementioned horses to an in-ground pool and a real feather bed (complete with fur blankets). Their staff prepared decadent dishes for almost every meal. And most of all, they honored our privacy when we went on long walks through the lavish gardens or chose to hide away in the rooms Vincente said he'd grown up in.\n\nGoddess? Maybe not. But I sure as damn well felt like a princess.\n\nCristal had been right about one thing. Being with Vincente, I had never been happier in my life. Her approach had just been wrong, in my opinion. It was sad that I couldn't share my joy with her. Trust me, I'd tried. But I got the same 'invalid number' error in response to my text to tell her I'd gone to France.\n\nJust as on that early morning when I'd returned to Vincente's mansion, I felt like I was where I belonged. And the longer I was with him, the more my decision\u2014my path\u2014became clearer. Ours was a strange relationship, but it worked. It was right.\n\nOur last day in Marseille was unusually warm. After a picnic in our favorite spot, we took a walk down to the lake at the back of the property. The sky had barely a cloud. A slight breeze rustled the trees along the bank, taking the edge off the heat.\n\nThe water beckoned me. I sat down sideways on the end of the wooden dock, dropping one leg over so my toes dipped into the coolness below. Vincente sat behind me, mirroring my stance with his legs on either side of mine.\n\nFor the longest time, I watched two birds swooping and diving out across the lake. Listened to the sounds of nature. Felt my lover's steady breathing as I leaned back against him, his fingers absently stroking my bent arm and leg. My other leg gently swung, my foot creating ripples in the water.\n\nA recollection of something he'd said that first day with him in Chicago compelled me to pull my leg up and twist to face him. But I worried my lower lip. Struggled to form the right words.\n\nVincente tucked a wayward strand of hair behind my ear. \"What is it, my love?\"\n\n\"You once told me that both partners keep each other alive, even if one is human...and they do not produce children. How have you survived for so long without a partner?\"\n\n\"Dysons can live up to five-hundred years without one.\" The light in his eyes grew dimmer. \"Yes, I am reaching my completion. I had accepted my fate. Decided to spend my last years in your country.\"\n\nThat thought brought an ache to my chest. \"What a lonely life.\"\n\n\"Do not cry, Danae.\" He brushed his thumb under my left eye, wiping away the tears I felt forming. \"My life has not been lonely. I have met many interesting people. Seen every corner of the globe. Experienced things you could not even imagine. That books do not tell you. But you would be right to think that yes, I have lived through almost five centuries without finding someone to...love. To feel that deepest connection.\"\n\nI nodded and pressed my side to his chest, but I was unable to relax again. I did the math while he caressed my back. He had 30 years left. He'd explained before that dysons aged 100 years to every human 10. Therefore, like humans, his kind was considered fragile and on death's door when they reached a lifespan of 1000 years old. Few made it that far, and even less surpassed it. If 100 years was long for a human, I couldn't image the time spent on this earth if a dyson could survive the equivalent. Even half of that\u2014which he had\u2014amazed me.\n\nHow did he manage, not having that special someone to share his thoughts and desires? Seeing every human he knew pass away? I would question if he was still capable of grief after having experienced so much, but I'd seen firsthand what my absence has done to him. It had practically broken him.\n\nAnd holding onto that many memories? There had been so many changes\u2014advancements. Especially in how people lived. Where they lived. Yet after all that time, he still chose to reside in what was essentially a miniature version of his childhood home. He'd just disguised it as a luxurious mansion in an upscale Chicago suburb. As though he'd adapted to the evolving world, though only to the minimum requirements for appearances' sake. Like having electricity throughout his home but preferring to use candlelight in the few rooms of his realm.\n\nI could understand his mindset. He'd found what made him most comfortable. Why sacrifice that to please others? I wouldn't peg him as a conformist. He held to ideals that had long been forgotten or ignored. But he wasn't really a rebel, either. Except...\n\n\"Vincente?\" I tilted my head back. \"How did you come to have padded handcuffs if you don't have a partner to use them with?\"\n\nHe shrugged. \"What was once taboo has become acceptable over time. Popular, in fact. I spent quite a bit of time in the circles of bondage and discipline. Observing. Wondering what the appeal was.\"\n\n\"What was your analysis?\"\n\n\"Women liked to be restrained, even without punishment.\"\n\nI raised an eyebrow, to which he smirked.\n\n\"Remember the times you were bound? Did you not feel your arousal mounting? Fear fighting with anticipation of the unknown to come?\"\n\n\"Well...y-yes.\" My cheeks grew very warm\u2014and my pussy wet\u2014just from those memories. \"The night of your party, were you planning to seduce someone to have a little fun? Is that your thing?\"\n\nThe back of his fingers caressed my cheek. \"I had no predispositions to entrap you that night, my love. Or anyone for that matter.\"\n\n\"So why \u2014\"\n\n\"Fate intervened. Brought us together.\"\n\n\"How do you mean?\"\n\nVincente dropped his hand and linked his fingers through mine in my lap. \"You were troubled, Danae. Your tension, it was palpable from the moment I stood beside you. Like an aura pulsing around your body. As much as the atmosphere suited you, you would have rather not attended.\"\n\nNow I was embarrassed for a completely different reason. I had no idea he had seen\u2014sensed\u2014my disinterest. I had offended him long before I'd chosen to escape after the tour. I nodded slightly, although he'd not asked me a question.\n\n\"To feel what you were feeling? It was new. Exciting, yet disquieting. It intensified the more I was with you. I ached to relieve your discomfort. But it was not possible with my visitors and your friend around.\"\n\n\"Oh, Cristal wouldn't have minded. She only invited me to the party so I could hook up with you.\"\n\nHis eyebrows shot up. \"Your friend, she planned our meeting?\"\n\nI laughed dryly. \"Cristal has made it her life's mission to introduce me to eligible men. She feels I'm unhappy\u2014incomplete\u2014without one. But only because that's how she felt about herself before she met her husband. I have since set her straight. Unfortunately, at the cost of our friendship. Which maybe was inevitable. How good can a friend be if they can't accept you for who you are?\"\n\n\"I see.\" He lifted our joined hands to his lips and kissed the back of mine softly. \"Your pain. I needed to ensure I was not the reason for your desire to flee. Your aura changed once we were alone. There was now also arousal. The balance shifted the further we drew away from the visitors. Something moved inside of me, long forgotten, lying broken. The wine...it was only to calm you. I did not want you to fear me. It was my intention to give you only a sip. I was told it could be quite powerful for a human. I was unprepared for how well you took to its taste. Delighted in how willingly you opened for me.\"\n\n\"And the handcuffs?\" I said, reminding him of my initial question I felt was still left unanswered.\n\n\"The bindings were from another time in my life. Once you and I were joined together\u2014when you only exuded serenity whilst in my arms\u2014I had a sudden desire to use them again. A new reason.\" His voice had grown quieter on that last admission.\n\nI thought on his words. I felt better knowing he hadn't just taken one look at me and made it his mission to bed me. \"You mentioned you had heard sex could be good.\" I twisted to look him straight on. \"Had you never been with someone before me?\"\n\n\"There you would be wrong,\" he chuckled. \"Many women have called me irresistible over the ages. I did not want to disappoint all of them. But I am not what they call a Don Juan. Those I chose to share intimacy with were special.\"\n\n\"But there was no one you've truly connected with? Wanted to marry?\"\n\nHis smile softened. \"There was a time, at the end of the eighteenth century. Elaina was the widow of an older man, an officer who died leading troops for Napoleon. I lived closest to them, and she took shelter in my home after theirs was torched by revolutionists. I felt burdened by her nightly wailing. I could not stand to see her so miserable. When she sought solace in my arms, I did not deny her. I provided her comfort when she required. Became more accustomed to her needs. I was content. I believed her to be as well. But then one day, she asked me to ease her guilt for sleeping in the bed of a man who was not her husband.\"\n\nAfter a long period of silence\u2014when his gaze was somewhere out over the lake, his thoughts probably lost in his past\u2014I whispered, \"What happened?\"\n\nHe blinked suddenly, as though remembering where he was. \"At the human age of twenty or so, I was still na\u00efve to the customs of the dysons. I had left here as soon as m\u00e9m\u00e8re and p\u00e9p\u00e8re allowed. The girl they had planned for me to marry had eloped with another. This suited me. I wanted to travel the world before settling down. I believed myself to be fearless. But, I was merely arrogant.\"\n\n\"How so?\"\n\n\"The thought of telling Elaina the truth of what I am? Even with all that I'd lived through, I had never been so terrified. I had always held in my true nature. There were many more dysons back then, and mating outside of our kind was not encouraged. Sex? It was acceptable. Anything more? No.\"\n\nI was still jealous that he could prevent a pregnancy if he wanted to. I wondered if dysons were susceptible to diseases like humans. I was going to ask him, but he let out a shaky breath, and I saw his eyes glisten, as if he were tearing up.\n\n\"I wanted to do the right thing by her. But if we were to wed, I would be expected to try to procreate. She would need to know the truth, and I feared she would not accept it easily, if at all. To assuage my own selfish desires, I told her I did not care for her in that way. And so she left. I had no desire to seek out intimate companionship for a long time after. It had been a partnership born of despair, and one I did not want to experience again.\"\n\n\"But surely, the time you spent with her...\"\n\nHe shook his head, his eyes downcast. \"It was not pleasurable for me.\"\n\nI gulped. \"Ever?\"\n\nOur eyes met again, my sadness reflecting in his. \"No, Danae. Not ever. Because I could not fully be myself with her. I was too afraid.\"\n\n\"Was it good for her?\"\n\n\"Always, or so she told me.\" His lips pressed together in a half-smile, half-frown. \"When I was much older\u2014more matured as a dyson\u2014I thought I'd found the one meant for me. It was in the 1960s. Bridgette was beautiful. Innocent. Like many humans at the time, she smoked marijuana. We met in a group traveling throughout Asia. After months on the road, the connection between us grew stronger. She was such a delicate flower. Blossoming for me every time we joined. Even more so when we smoked the drug.\"\n\nI definitely could not see him smoking weed. But there was so much of his life I did not know about. He probably held so many more stories than I had time to listen.\n\n\"I told her some of my adventures from her time period; she told me her dreams. One night, she showed me the special handcuffs she had acquired after I'd told her about watching a woman achieve greater release with them. I obliged. Once Bridgette was bound, I was enraptured by her willingness to give me her body so freely. To trust me. I could not control myself due to the drugs. I felt compelled to be as open in return. But she became hysterical. Thought it was the drug making her see things. I did not know she had a phobia of snakes. I abandoned the group that night. Chose to abstain from sex henceforth. The cuffs, I kept as a reminder why.\"\n\nMy heart ached for him. He'd spent the most of his life being chaste because of regret. A shudder raced up my back, and my chin trembled. I couldn't look at him while I asked my next question. I was too nervous of his answer.\n\n\"Why now then? With me? Do you even enjoy\u2014\" I gasped at his sharp grip on my chin. At the grim line of Vincente's lips when he lifted my face to his. I was not prepared for his gruff voice. The torment I heard there.\n\n\"I had been asleep my entire life. You have woken me, Danae. The first moment I saw you...\" His eyes closed, and he sighed heavily. When he looked at me again, the color ringing his pupils was as brilliant as sunlight reflecting off the surface of the bluest ocean. \"I have not known pleasure until I met you. I did not know how wonderful it could be just to listen to your voice. To be by your side. The day you left? Your aura, it had changed. I felt your pain again. I could not bear to be the source, so I had to let you go. But I was lost all over again. I did not know how I would go on. When you returned, you were radiating desire. You have not stopped glowing.\"\n\nGood lord, the man was a walking, talking romance novel. And maybe I was a fool to believe him, but I felt the same way he did. I was empty when I wasn't with him. The pain I had felt was due to confusion. But apart? I had found that something connected us even when my brain\u2014my body\u2014wasn't altered by his wine.\n\nHis hand cupped my cheek, his thumb rubbing my lips. \"I am serious, my love. I was merely adapting to each new century. Each change in politics, culture, and personal decorum. I have not truly lived until these past few weeks. I have missed so much. All because I had not met you.\"\n\nI had no idea what to say to that. Even if I had, he didn't give me a chance.\n\n\"My sweet Danae.\" Vincente brought his lips to mine, kissing me tenderly. Nipping at my bottom lip. Darting his tongue out then pulling back.\n\nWhen my lips parted, he tilted my head back. Restricting my motion as he repeated the feather-light touches. The tips of our tongues met. Flitted back and forth between panted breaths. Then he entered my mouth. Leisurely showing me the true meaning of a French kiss, which left me moaning and shaking while his other hand wandered.\n\nAfter some time, he wrapped his arms around me and tucked my head under his chin. Every muscle in my body seemed to go slack. My eyelids threatened to close when he stroked my hair. I fought against giving into sleep and wanting to capture this moment forever in case the dream disappeared.\n\nThis trip had been...enlightening. And yet, it prompted so many more questions spinning in my head. Most of all, what was to become of me if I stayed with him?\n\n###\n\nThe morning of our departure, Ren\u00e9e and I sat quietly side-by-side on a settee in one of the many parlors of her antiquated home, waiting for the maid to bring us tea. It felt natural to be there with her. Although she acted very proper\u2014noble even\u2014her presence was inviting, warm. Time had helped her become refined, just like her grandson.\n\nShe had talked for quite a bit about how much she'd enjoyed our visit. But once the maid had departed to carry out Ren\u00e9e's request, the conversation did not pick back up. The silence was welcoming. But it allowed my mind to wander.\n\n\"Ren\u00e9e, do you mind if I ask you a question? I have been wondering about something. But I am embarrassed to ask Vincente. And our time here has run out.\"\n\n\"Not at all. What is it, my child?\"\n\nI looked down, playing with edge of my shirt. \"How do women dyson differ from the men?\"\n\nHer cool hands covered mine, stilling my movement. As her touch warmed, I looked up to see her smile. \"Humans usually have one offspring at a time. Sometimes an anomaly causes two or possibly more. For us...for dysons? It is not unheard of to produce up to a dozen at a time. Though we still have the same nine-month incubation process.\"\n\nTwelve babies at once? Holy shit. I kept imagining a real snake with all those eggs developing inside it. It wasn't hard with her using terms like 'offspring'...'produce'... 'incubation'...all relating more to the reptiles than a human being in the sense of reproduction. I was able to stop the grimace that tugged at the corners of my mouth, but not the goosebumps that rippled down my arms.",
        "Ren\u00e9e laughed lightly. \"Our birthing process is not as painful, my child. But with multiple births, the risk is greater that the babies are not as well-developed.\"\n\n\"Like human preemies who are delivered too early?\"\n\n\"Yes. However, we still carry to term.\"\n\nThe conversation paused again as the maid returned with a tray. It gave my brain something else to think about, because I didn't have enough thoughts spinning around in there. She poured tea into two cups, doctored it to our liking, and then handed a cup to each of us.\n\n\"Merci, Analiese,\" Ren\u00e9e said with a slight tip of her chin.\n\nThe maid curtsied and left us alone again.\n\n\"Please, Ren\u00e9e, tell me if I'm bothering you with all of my questions. I'm just...I don't know.\"\n\n\"It is understandable, my child. This is all new for you. Please, ask away.\"\n\n\"I don't understand how a human can live as long as a dyson just because they are married.\" I turned to face her more and rested my back against the curved arm of the settee. \"There must be something to trigger the proverbial fountain of youth. Is it the blood wine? Vincente said it was a delicacy from here.\"\n\nRen\u00e9e slowly lowered her cup from where she'd lifted it to her mouth. It rattled in the saucer as she carefully set it down. \"You know of the wine, Danae?\"\n\n\"Yes. He gave it to me the night we met. Said it was to calm my nerves. I craved it like no tomorrow at first. But having not had it in weeks...the addiction has gone away. Maybe because I'm with him almost all of the time now.\"\n\nVincente's grandmother set her mouth in a thin line, her eyes darkening. It was the first time I'd seen her look stern. She studied me for so long that I fidgeted in my seat, like a child waiting for the principal to pass down punishment. Then the light returned to her eyes and she nodded. When she spoke again, her words were so soft I almost didn't hear them. \"Il avait raison.\"\n\n\"I'm sorry...\"\n\n\"He was right.\" She picked up her tea again. Her cup shook slightly before she took a sip. A sign of her age she'd let slip through the restraint she'd so painstakingly maintained? Or something else entirely? Then she slowly said, \"Coeur et \u00e2 me.\"\n\nHeart and soul. I'd heard Vincente whisper the French words in my ear so many times during our visit I knew them by rote. I sighed from relief. But only a little. Something was still...off.\n\nRen\u00e9e grew quiet. I was afraid to upset her by speaking, so I sipped the creamy liquid in my cup. Kept my gaze on my lap. Eventually, I heard her deep sigh\u2014the clatter of her cup being set down again\u2014before she spoke.\n\n\"The wine by itself is simply foreplay, if you will. It awakens your senses\u2014increases your libido\u2014as I'm sure you discovered. But combined with a private ceremony after the wedding? The two who have been united taste each other's special wine for the first time. For a human partner, they both drink his blend. Then la t\u00eate du serpent is revealed. The head of the snake. Before he plants his seed in her womb, it will bite her femoral artery, releasing unique venom that mingles with the alcohol in her bloodstream. If she is human, her aging process slows within days. As long as the ritual is repeated each year on their day, they are thus joined for his lifetime.\"\n\nI set my cup aside with a little less finesse than she had, spilling a bit of tea into the saucer. But my mind was focused more on the fact that Vincente had failed to mention he'd done two-thirds of a sacred ritual with me. I had been passed out for quite awhile. I didn't remember feeling a bite. But oh, God\u2014\n\n\"Danae...\" Ren\u00e9e's voice broke into my thoughts. \"You were drawn to my petit-fils...my grandson...before the wine, yes?\"\n\nI breathed deep, but I still felt less than confident. I looked up to see her watching me. I nodded, tried to swallow, and said, \"Strongly so.\"\n\nThe brown color of her eyes seemed warmer, like melted chocolate. \"Do you love Vincente?\"\n\nIf I had been asked that question a month ago, I would have emphatically denied it. But after spending the time with him that I had? After visiting his homeland? His closest family? My heart echoed the sentiments I'd thought the second day I'd been with him. I accepted him for who he was. And he had done the same for me.\n\nI wanted to be mad at him for not telling me what his actions that first night had meant...for not asking my consent before he did the whole snake-thing. The wine had been an aphrodisiac, but I now knew I didn't need it to be attracted to him. To want him, body, mind, and soul. Maybe he'd let his emotions guide him that night. But so had I.\n\nOne thing was certain. I wanted to be with no one but him. To care for and please no one else. Wasn't that what love truly was?\n\nTears were evident in both my eyes and my voice when I finally responded. \"Yes, I love him very much.\"\n\n\"Bon. Bon.\" She returned to her tea as though this were a normal conversation.\n\nI took a sip of my lukewarm tea, but my mouth felt like I'd been chewing on cotton. \"Why aren't there more females if they can have so many children? Vincente said there are few dysons left at all.\"\n\nRen\u00e9e nodded. \"When there were large litters, the risk of complications was always high. Many dyson women died in childbirth. Lost most if not all of their offspring. As more women perished, the males began to mate with humans to stay alive longer. To replenish our dwindling population.\"\n\n\"When a dyson and a human reproduce, what happens? Like, other than the snake thing.\"\n\nShe studied me again, her face grim. \"Tell me, Danae, after you drank petit-fils's wine, did he reveal la t\u00eate du serpent? Did you see the head?\"\n\nI wished nothing more than to jump up and run out of the room. But somehow, I nodded slowly.\n\nHer voice became a gravelly whisper. \"Did it bite you high up on the inside of your thigh?\"\n\n\"I-I don't know. I passed out...\"\n\n\"Stand up my child. Lower your pants.\"\n\nWhat? I just blinked at her.\n\nShe waved her hand in a circle. \"Be quick about it. You don't know who could walk in.\"\n\nIn a daze, I stood and unbuckled my belt. Undid the button and zipper on my shorts. Lowered them to my ankles and stepped out of the material. I hesitated with my fingers at the waistband of my panties\u2014 did she mean them too?\n\nShe suddenly put one hand under my right knee and lifted my leg so my foot was propped on the edge of a large, antique ottoman that was serving as a coffee table. Then she leaned her head down so far I could feel her breath on my thigh. On my pussy.\n\nI closed my eyes, telling myself this was not happening. Vincente's grandmother was not inspecting my crotch. But her voice reminded me she definitely was.\n\n\"How long as it been since you saw la t\u00eate du serpent?\"\n\nOh, God. Now she wanted to discuss my sex life?\n\nShe lowered my leg and patted my left thigh until I shifted my weight. Then she repeated the procedure after placing my left leg on the settee. \"Come now, child. How long?\"\n\n\"Um...a month I guess.\" My legs wobbled when her cool hands pressed my skin along my pantyline.\n\n\"How many times?\"\n\n\"Once...no, two times.\"\n\n\"Bon, no bite marks,\" she said and patted my raised leg. \"Get dressed. Vincente will be by soon.\"\n\nWhile I was pulling myself back together again, she sipped her tea and responded to my initial question as though we had not just shared such an intimate moment\u2014not to mention deathly embarrassing on my part.\n\n\"When a dyson mates with human, a female child born will always be human. All males are dyson. The pairing is good. More chances of survival for the child and the mother with a litter of only one or two. As long as such pairings produce males, the lineage will continue. Though, it has been a long time since a male has been born. Any remaining female dysons, like me, are growing too old to bare children. And it has become harder and harder for female humans to accept our men. With you and Vincente, our hope has been renewed.\"\n\nI sat down and laughed wholeheartedly. \"I can barely think about talking marriage. Having kids? That isn't even\u2014\"\n\n\"You must discuss. Soon.\"\n\nI blinked at her, my face heating even more than it already was. \"Now wait a minute\u2014\"\n\n\"Tu es avec un enfant, Danae.\"\n\nMy brow furrowed. \"Just what does that mean?\"\n\nRen\u00e9e reached over and gently placed her hand on my shirt over my stomach. \"I am a dyson. I can smell your fertility, my child. You are with my grandchild.\"\n\n###\n\n\"You got me fucking pregnant!\" I screamed again.\n\nI knew I was late. I'd figured it was due to all the stress this past month. But now it made sense. Still, it was difficult to accept.\n\nVincente sat on a settee in our bedroom, dressed in only pants with his hands in his lap. \"Danae, please calm down.\"\n\n\"When were you going to tell me we were practically married?\" I turned when I reached the fireplace and paced the other way. Again. \"Or is this how you planned to trick me into staying with you?\"\n\n\"I don't understand.\"\n\nI fisted my hands in my hair and groaned. \"You knew this could happen! You wanted it to happen. If I were to be having your child, you would say you needed to do the 'right thing' and marry me. I would therefore feel like I had no choice but to comply. How would I raise a child on my own? Hell, a dyson, even, if it's a boy!\"\n\n\"No. I did not trick you. I love you. And I did not know for sure. I am old for a dyson to be able to father a child. I did not know if you\u2014\"\n\n\"Cut the bullshit, Vinny. Your grandma told me she could smell that I was fertile. Surely you can, too.\"\n\nHe ran his hands over his face then hung his head. A very human-like gesture and a rare break in his aristocratic-like demeanor. \"When I am with you, I smell only your essence, Danae. Even when you are not aroused, it draws me to you, like a beautiful flower attracting a bee.\"\n\nI closed my eyes. God, why did he have to be fucking...romantic? Irresistible? I couldn't stay mad at him for long. I stopped at the bed and sat on the end.\n\nVincente rose and pulled on his dress shirt, leaving it unbuttoned as he joined me, but he didn't touch me. \"I am sorry that I upset you. This was not how I wanted our trip to end.\"\n\n\"Yeah, you and me both,\" I mumbled.\n\nThe weight of reality suddenly weighed on my shoulders. It drained me just to think about it. I wanted to both laugh and cry about the absurdity of my situation. My body swayed slightly. My vision blurred. Then I coughed several times as I swallowed while taking a breath.\n\nCool arms turned me. Surrounded me. Pulled me against a hard chest.\n\nThat last simple movement broke the dam inside me. My sobs choked my voice as I gripped the sides of his open shirt, clutching him to me. \"What am I going to do?\"\n\n###\n\nRen\u00e9e smoothed her hands over her slacks, her head held high. \"We must make it official today.\"\n\n\"Our plane leaves this evening,\" Vincente said, echoing my thoughts.\n\nHis grandmother narrowed her eyes at him. \"Do you not love Danae?\"\n\n\"Oui. I want nothing more than to be with her.\"\n\n\"Be the man I raised you to be,\" Liam said suddenly, his strong voice loud in the large room, belying his true age. He had sat stoically for the past thirty minutes, as if he were a king observing his subjects. Now he was passing down his judgment. \"You started this, mon petit-fils. Marry your love. Return home with your wife and child.\"\n\nI wanted to argue that I should have some say in this, but his grandparents were right.\n\nAn hour later, I found myself standing on the dock to the lake, wearing a flowing, sleeveless dress Ren\u00e9e had found in her vast wardrobe she'd collected over the years. The white satin was covered in intricate crystal beading that looked like it was made in the early 1900s. She'd given me a pair of white shoulder-length gloves to wear with it, and a diamond bracelet, necklace, and tiara-style headband set. Elegant. Just as I'd always hoped my wedding dress would be someday. It had just happened to be sooner than I'd expected.\n\nWith the breeze rustling through the trees and birds dancing across the water, Ren\u00e9e and the estate's staff stood as witnesses while Liam officiated over the ceremony. It was simple but poignant. Both of us sounded husky as we repeated our vows and said 'I do.'\n\nWhen we were announced as husband and wife, Vincente took my face in his palms and gave me the lightest, chastest of kisses. As our lips parted, he whispered, \"Je t'aime, Danae. Mon coeur. Mon \u00e2 me.\"\n\nI smiled, feeling a tear roll down my cheek. \"I love you, too. My heart. My soul.\"\n\nWe barely had time to toast a glass of champagne with his grandparents\u2014my new in-laws\u2014before we were changing clothes and being whisked away to the airport. Ren\u00e9e insisted I keep the dress and accessories. I promised her we would be back before I was due. Liam said not if they didn't come to see us first.\n\nFor the next ten hours, I felt a bit dazed as we flew back home. I couldn't stop staring at the band with two rows of diamonds twisted together on my left hand. At the wider, matching silver band on his ring finger. Vincente had said he wanted me to have something new, something that was all mine. I didn't dare ask him how much the set had cost.\n\nThroughout the flight, my apprehension rose. I knew what awaited us back home. We would be performing the private ceremony in its entirety, the way it was meant to be. Sealing the deal on this union. On my eternity.\n\n###\n\n----\n\nEPILOGUE - PRESENT DAY\n\n----\n\nI tried to muffle my cries with the comforter while Vincente moved against me. Within me. But my heartache triumphed any resolve I had left to remain strong, and a loud wail escaped when I turned my head to breathe.\n\nSuddenly, his body went still. \"Danae? Are you in pain?\"\n\nMore tears choked out my ability to talk, so I shook my head. I gripped the bedding when he withdrew his cock from me and held in my next gasp as I anticipated his re-entry. But he surprised me by gently turning me over instead.\n\n\"Shh.\" His thumbs went to work sweeping over my cheeks, drying my tears. Then he pulled me to his side and curled his body around mine, rocking me until my sobbing subsided. \"What makes you cry so, my love?\"\n\n\"I don't want to disappoint you,\" I managed to get out between deep, heaving breaths.\n\nHe kissed my forehead. \"You could never disappoint me, Danae.\"\n\nI felt the tears welling up again, if that was even possible, and turned to bury my head against his chest.\n\n\"Tell me, my love. Please.\"\n\n\"I-I haven't given you your heart's desire. After all this time. What if... I am afraid...\"\n\nVincente lifted my chin, forcing me to look him in the eyes. \"What is it you think I still want?\"\n\nA stray sob lodged in my throat, and it hurt to swallow. \"A-a son.\"\n\nHe studied me for a long moment. Then he leaned over me, his body heavy, hot, and sweaty from our lovemaking. When he rolled back, he held a picture frame. \"What do you see here, Danae?\"\n\n\"Us.\"\n\n\"Exactly. This is everything I want. You. Me. Our four lovely daughters. Happy. Healthy.\"\n\nAnother sob escaped, but it was muffled because he leaned over me again to put the picture back on our nightstand.\n\n\"And I will love any new child just as much as the others, Danae. Girl or boy. Understood?\"\n\nI nodded, my eyes blurry when I blinked up at him.\n\n\"I will give you some time, but we must complete the ritual tonight\u2014\"\n\n\"No.\" I gripped his arm as he started to pull away from me. \"I am good. Please. Don't leave me.\"\n\n\"Never, my love.\" He pressed his lips to mine, enticing my tongue to play with his...to enter his mouth.\n\nAfter making me pant for all the right reasons now, he rolled me onto my back. Then he trailed kisses from my chin, along my neck, across each breast, and down a path to my mound. He palmed my heat, his thumb stroking my clit lightly.\n\n\"Are you going to tease, or...Ah!\" I arched up when he slid two thick fingers inside me.\n\n\"Are you going to beg, my love? I so love it when you do.\"\n\nI clamped my mouth shut and smiled up at him, cupping my breasts in my hands.\n\n\"I will make you open that lovely mouth,\" he whispered as he got to his knees and sat back on his feet between my legs. Before I could blink, he grabbed my legs and pulled them up over his shoulders, jerking my body closer to his.\n\nI bit my lip, muting my yelp. But my eyes widened when he raised his cock, the two ruby red eyes of the snakehead reflecting the flickering candlelight around us. My pussy clenched as the forked tongue slowly slithered out while he pumped his hand along his shaft.\n\n\"I will make you come undone, my love.\"\n\nI was grateful m\u00e9m\u00e8re and p\u00e9p\u00e8re were watching the children downstairs. That no one could hear us in the secured suite of our Chicago mansion. Because I knew, he was true to his word...and I'd grown louder over the years.\n\nMy whole body arched up when he slowly pushed at my entrance, stretching me even wider. My jaw dropped, and a cry of delight escaped. Each hard inch forced in dragged my labored breaths out until I thought I would hyperventilate.\n\nI clawed at the sheets, watching his eyes blaze with renewed passion.\n\nHis hand moved between us, stroking himself until I thought my body would break from how thick he'd become. The torture began when he became still, fully seated within me. He leaned forward and cupped my breasts.\n\nAs he caressed my nipples, I felt la t\u00eate du serpent latch on. The sharp pain was duller than when it had bit my artery under that tender spot between my inner thigh and groin. Now, I closed my eyes at the slight tugging within, my hands grasping at his until our fingers laced together. When my pussy clenched around his engorged cock, his hands reciprocated with a tight squeeze. Back and forth until I felt him begin to move again. Signaling to me that he had completed the ritual.\n\nI expected him to unfold me from the confined position. He rose up on his knees and began thrusting at a deeper angle instead. Forcing sharp cries from my raw throat. When he leaned forward even more, pulling my hands together and over my head, my eyes shot open.\n\n\"Yes, come for me, my love. My sweet, Danae.\"\n\nMy entire being spiraled tighter and tighter in my core until it burst with my scream. His warmth joined mine, and I fell into the abyss of a world where only he could take me. No longer apart but together. Forever. Or at least a good 500 years.\n\n~ H "
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "fantasy",
        "reluctance",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/worlds-apart-ch-03"
}