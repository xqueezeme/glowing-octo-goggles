{
    "title": "A Real Man in My Life Ch. 01",
    "pages": [
        "I'm ashamed to say that I didn't get turned on to sex until well into my thirty eighth year, and it was through someone I'd never even considered.\n\nI had been separated from my husband of almost nineteen years for about twelve months. Parker Wallace was a driven man, and had been since before we married. His father had been absent for most of his growing up, reappearing for brief periods following imprisonment and the odd occasion that his parents tried to make a go of it again. His Dad was a premier bullshit artist, and some days made a good living, sometimes none at all. He spent his time looking for 'that deal', the one that would put him and his family on easy street, not because he was good but because he was convinced that he was, and that it was his 'turn'. \n\nI'd met him just twice leading up to our wedding, and on both occasions he spoke of the wonderful present he was getting for us with a glint in his eye, something that would set us up for our life together. Parker said 'Yeah, OK Dad.' He knew him better than that. \n\nAt our wedding, his Dad was full of jovial bonhomie in his suit and tie, and it wasn't until the next day when we were taking all of our gifts back to the house we were renting that I came across a white envelope marked 'To Mr and Mrs Wallace, lots of love Dad.' Inside was sixty five pound in cash, and I can still remember the denominations; one \u00a320 note, two tenners and five \u00a35 notes.\n\nI wouldn't have minded but my Mum and Dad had pretty much paid for the reception and given us three hundred pounds for incidentals.\n\nI gave it to Parker, who just looked at it.\n\n\"Check the twenty,\" he said, \"It's probably fake.\"\n\nMuch as Parker disavowed his Dad, as the years went on, he gradually turned into him.\n\nLike his Father before him Parker was a Spiv, a trader, a classic TV comedy style low life that hid behind a posh suit and a posh accent but always had an eye for the next deal, but because he was a director of his own company thought that made him a business man. Worse still, he had inherited his father's self-belief, but had a good education and there was no way he was going to prison every couple of years like his Dad had. Parker got his first job in an estate agency and bought and sold houses and arranged mortgages, but he learned about humans and their rather erratic nature straight from his old man.\n\nThis self-belief was born when, as a boy, he found a fifty pence coin on the floor by a shop checkout and afterwards would always drop something and use that as an excuse to look for dropped coins. At fourteen while at a holiday park he found a wallet in a toilet stall and from then on would always search public toilet cubicles for wallets or cash and would occasionally find them. Money was where you looked for it, it seemed.\n\nHe had inherited his father's biggest flaw (At least I thought it was) and that was 'never give a sucker an even break' and he had learned to take advantage of other people at an early age, be that their niceness, poor memory, gullibility or greed. \n\nHe would always take the cash from the found item and then throw what was left in the trash 'so no one could take advantage of the credit cards' - I do believe he felt this was a good thing. I pointed out that taking the cash was stealing.\n\n\"Should have taken better care of their possessions shouldn't they,\" was his standard response, \"at least I'm not going to be screwing their credit cards like some people would. Anyway, they'll claim it back on the insurance...\" \n\nInsurance, don't get me started; he was riding in my brother's car when he reversed into a low railing with the tiniest bump. Next thing I knew he was suing my brother for whiplash, again he insisted,\n\n\"I'm not suing your brother, I'm suing his insurance company, it's not his money...\"\n\nMy brother was a new driver and paying through the nose for his car insurance. Parker's solicitor 'settled' for \u00a3279, for his loss of wages and the solicitor's time. My brother's excess on his car insurance was \u00a3250.\n\nMy Dad settled out of court and the insurance company, and the following Friday at Mum and Dad's place he pinned Parker to the wall telling him in no uncertain terms that Parker and his children could freeze their arses of at a bus stop for all he cared from now on, he would never be welcome in his or any other member of his family's cars ever again.\n\n\"But it's the insurance company's mon...\"\n\nHe saw my Dad's look and wisely shut up.\n\nHe was so mean that he once even took a coffee shop points card, which is strange, he doesn't drink coffee; but he went into the nearest shop, asked how much was on the card, and spent the next few weeks going into the shop and buying tea until the \u00a39 was used up.\n\nHe had to walk a mile to that franchise and back again, when he could have just made himself a mug in the office and saved himself the grief. But no, as far as he was concerned it was free, so he had to have it. He binned it once I told him how they were registered on line and someone that lost it could be tracking its use. \n\nOn buses, ferries, trains or in restaurants he'd hang back and look for coats or bags that had been left and do the same. Twice he was caught in the act but put on his best customer care smile and gleefully handed them over saying that he was just looking for ID or a phone number so he could contact them.\n\nOnce a kindly looking grey haired gent handed him a five pound note and thanked him for his trouble. Parker demurred, but allowed the old boy to convince him to take it, to buy something nice for me or the kids.\n\n\"Ah well,\" he said, \"the old fart only had twenty quid in it anyway, fiver will do.\" He put it straight into his wallet - Parker never treated the wife and kids. He was under the impression that there was 'my money' and 'his money', not 'our' money, and it was bloody lucky that I was back working full time and on a very good salary, due to hard work, biding my time and always learning. I was the real wage earner but, you guessed it, I was never allowed to allude to it.\n\nTwo months before we split it rebounded on him, when during his interest in what turned out to be a a 'Miss Selfridge' shopping bag full of MacDonalds packaging the train pulled out of his station. He had to wait until the train, a limited stop, reached Swindon and he had to get the next train back, costing him the same fair he'd paid in the first place.\n\nI laughed; he just said, \"win a few, lose a few...\"\n\nI hated that aspect of him, which was strange as he thought it was a habit that should be encouraged and represented the true entrepreneurial spirit. I said that by his reckoning burglars, muggers, drug dealers and car thieves weren't criminals, they were just small businessmen trying to make a living. He grinned, until I pointed out that when his Fiesta XR2 was stolen and burned out, it wasn't a crime it was really a business opportunity for the car thief and perhaps he should have left the keys in to help out the entrepreneur that took it, thrashed it around, stole his gym bag with his \u00a3120 running shoes that he only ever walked in, his laptop and briefcase and left what remained as a smoking charred heap in the middle of the recreation ground. After all Parker would claim on the insurance...\n\nParker stopped smiling, because his XR2 was really old (a classic in his terms) the insurance company paid him out a pittance for it as insurance companies always do, giving him the book price not what he considered it worth. He had very little sense of humour...\n\nWe have three children, the blessing from our marriage. Gemma is a gorgeous eighteen year old brunette bombshell that is the spitting image of me at her age with lustrous hair, slim but curvaceous with my big brown doe eyes, with Parker's high cheek bones. She could have been a fashion model but instead chose to concentrate on her studies and was waiting to hear her A' level results so she could pick her University even though she had unconditional acceptances from four of them, and is going to be the most attractive school teacher in the South East one day. She has lots of good friends and tends to be a bit shy of boys knowing how difficult her father is with them.\n\nMy sixteen year old Tom is a lovely boy, with his father's looks and my height (I'm taller than Parker but was never allowed to discuss it or even allude to it) and passed his father a year ago. Parker hates that as well. \n\nTom is bookish and the complete opposite of his Dad, choosing to take A' levels in English, History, Sociology and Psychology. He wants to study one of those at University, and his father still wants to know what he thinks he's going to do with a degree in rubbish like that. He has started hinting that he wasn't sure he'd be able to afford to fund him (he'd never said that about his clever, attractive, popular daughter Gemma.)\n\nTom, bless him, told his Dad not to worry - he'd get a student loan; knowing his Dad for many years he patted his hand at the same time in a move to stop the inevitable 'come and learn the business from me, I learned everything at the school of hard knocks and then the university of life' speech.\n\nOur youngest is Bradley, and by far and away his father's son. A very precocious fourteen year old struggling to come to terms with his late puberty and the fact that sometimes you had to work to achieve something. Exams were pointless and unfair, after all he was way cleverer than everyone else in the class and he didn't need an exam result to tell him that. He would be millionaire by his fortieth birthday and retire while his classmates and even his teacher would still be living in council houses. His classmates snarled and laughed with equal measure, while his teacher made him stay late for his impertinence and retake the exam. Bradley went straight to the top man like Dad would have done; straight to the headmaster to complain, after all surely it was the teachers fault he'd failed the exam. The headmaster was just as scathing of Bradley's interpretation and put him on detention until the exam was passed to the same level that the rest of the class, every single one of them, had passed it. Bradley had a tantrum and stormed out, still convinced that you should get stuff because of how good you were without having to prove it - the headmaster called after him.\n\n\"Mr Wallace? If you walk out of school now you can leave your tie, jumper and blazer by the door as you'll be rendering yourself expelled,\" Bradley stopped in his tracks at the door, the headmaster lifted a pile of beige folders on his desk, \"I have dozens of young people that are just dying to come to this school, and will take your place and do the work that is expected of them.\" There was a pause, \"Well Mr Wallace?\"\n\nBradley went back to the classroom and did so for the next five school nights until he managed to get a low 'C' grade that got him off of the hook. He bitched every night mind you, sooooo unfair.\n\nAs well as the rights and wrongs of modern secondary education he had strong view on life in general and specifically on the breakdown of his parents' relationship, based on his own innate sense of right and wrong born of his maturity, experience and a specific moral philosophy born from these, AND the amount of smartphones, tablets, laptops, consoles and expensive things that his father bought him whenever he asked for them. \n\nBradley tried to spread his wealth of knowledge and experience to his elder siblings based on his developed philosophy. Cool stuff is good, money buys cool stuff ergo money must be good. \n\nExtrapolating that principle further he postulated that if you agree with a man with money you get cool stuff; cool stuff is also good - simple; Mum doesn't give him cool stuff ergo Mum must be an ungrateful bitch who drove Dad away by her lack of faith in a man that just happened to be extremely good friends with a much younger blonde with huge tits and long legs and spent nights in the same hotel rooms as her, even in the town he actually lived in. Gemma and Tom both continued to treat Bradley with the contempt that siblings normally keep for each other, only slightly worse. \n\nAll three had been to the local Catholic Church schools courtesy of enough visits to our local Anglican church to convince them that we were religious enough. This was also matched by Parker's regular cheques from his financial services company to both churches and the primary and secondary schools, so when we went to an open evening Parker was quite well known to the board of Governors and he was his usual charming self and quite soon Gemma was being presented with her first school blazer. Parker had a habit of being charming and a bit scary; there was, 'I love your school and what it does for our community and our children,' with a suggestion of 'I've already paid into your school and it's time for me to collect'; how he managed to insert some chill into a discussion about children's church based education is still beyond me. Once Gemma and Tom had left the cheques stopped, hence the Headmaster's willingness to see 'that disruptive, immature, idiot Wallace boy' out the door with minimum effort from him. \n\nI know this was the case because I was a member of a symposium of local secondary school managers and my opposite number at that school knew me and my three children, warning me that Bradley was 'starting to sail a bit close to the wind'.\n\nI thanked her for her candor and honesty, agreeing and apologising for Bradley's immaturity and idiocy, promising her that he was getting treated for the for the developmental delay but not the idiocy, that was down to his Dad. \n\nDespite Bradley's views, our break-up was based on Parker's bad temper and what he considered was me not making enough effort. He never stopped telling me how grateful I should be for all of his hard work, while he seemed to forget that at the same time, I was raising his children almost single handed, keeping his house immaculately I might add, but more than that I also worked full time, earning the real regular cash money that paid the mortgage and bought the groceries during those countless times when his occasionally off the wall projects didn't pay off and the credit cards were already close to their limits.\n\nParker's tantrums were aggressive but not violent. And that's what they were - tantrums. He'd have a bad day and things wouldn't go how he wanted or expected. He couldn't blame himself after all, that was never an option. Parker hardly ever kept an employee more than a year, simply because most of them were self-employed and while initially the money looked quite good, he was such an arsehole that even the most committed would walk out on him. \n\nHe came home with a black eye once, saying that he'd caught it on a cupboard door at work. I was to find out later that one of his 'can't fail' jobs had gone completely belly-up and Parker had lost a couple of grand into the bargain.\n\nOne of his 'guys' was silly enough to say 'I told you so' and Parker went spare, throwing the young man's desk over and damaging his Iaptop into the bargain.\n\n\"Get out!\" Parker screamed.\n\n\"You owe me a month's wages!\" said the angry man.\n\n\"I'll consider that payment for your incompetence!\"\n\n\"My incompetence? You fucking idiot, this was your crack from start to finish and your fuck up, pay me and I'll go!\"\n\n\"Get out!\" Parker screamed again. But this time his hysterics didn't phase the man in the way it normally did with the other young men that Parker employed.\n\n\"Or what?\" said the man leaning forward of his much shorter employer.\n\n\"Get...\" Parker stuttered.\n\n\"Yeah yeah, you already said that, and then I said 'or what'. What if I don't get out?\" The young man stepped into Parker's personal space, \"Watcha gonna do Mr Wallace? Shout at me again?\" The young man slapped Parker, hard.\n\nParker recovered and swallowed,\n\n\"I'll... call the police...\"\n\n\"Brilliant idea, yeah let's call the police!\" The man reached into his jacket and withdrew his mobile, \"999 isn't it,\" the man pressed three nines and held his finger over the dial button. \"Ready?\"\n\n\"Wait...\" said Parker. While he considered much of what he did to be legit, he really didn't want anyone looking too closely at what he had going on that was for bloody sure.\n\nThe young man picked up his laptop, now with a large crack across the screen from Parker's tantrum of throwing desk top stuff around,\n\n\"That'll cost you \u00a3500 Mr Wallace, plus what you owe me for last month. Tell you what let's make it a round \u00a33,000 and I'll walk away quietly and not tell anyone what's going on here.\" Parker hissed through his teeth. \"That's just made it \u00a34,000 Mr Wallace.\"\n\nParker reached into his pocket for his cheque book, \"no chance, I've heard about the cheques that you write Mr Wallace, I'll take the cash out of the safe please.\"\n\nParker always kept a large sum of cash in what he thought was his secret safe, he was amazed that someone else knew about it. \"Yeah, I'm just as fucking sneaky as you are, \u00a34,500 now Mr Wallace.\"\n\n\"Four and I never hear from you again.\"\n\n\"Done,\" said the man.\n\nParker tried all kind of nasty things in the next few days and reported the man for criminal damage. The police asked to see the office CCTV but Parker had switched it off some weeks back when he'd had a similar issue with another employee and it showed him in the wrong, so the police just said that they couldn't take any further action and he was working up to a tantrum when the detective said that he could still pop round and see what was going on. Parker apologised and disconnected the call.\n\nIn our twenty year relationship I don't think he ever put his hands up to admit a problem or apologise to me, the kids or my family for the fuck up's, disappointments or broken promises he caused on such a regular basis. \n\nHe'd rather lash out at the next nearest person, which in the office was one of his contacts or his staff while at home it was me, and I confess as the years went on I was waiting for slap around the face, but it never came. Mind you I think that's because he was scared of my Dad. I know this, as my Dad told me once that a teenage Gemma had confessed to her Gramps that Daddy sometimes loses his temper with Mummy. \n\nDad had said nothing but took him to one side at a cousins wedding after he ranted at me for having a joke with my brother that he didn't understand. He asked him if everything was OK; Parker asked why it shouldn't have been. Dad laughed and put his arm around his son-in-law's shoulder and walked to a large window.\n\n\"I get the feeling...\" he said given Parker a gentle shake, \"I have the feeling that you have started to lose your temper with Natalie.\" Parker made to open his mouth but my Dad shush-shush-shushed him and raised a finger, \"Now I'm sure Natalie isn't perfect and it's not my place to take sides Parker, but,\" he grinned, \"so help me you so much as lay a finger on her or my grandchildren, they'll have to spend three months gluing what's left of you back together so they have a piece big enough to do a DNA test on.\" He grinned in that wonderful way my Dad has about him and squeezed Parker making him wince. \n\nMy Dad has always been the nicest person ever, but he does confess he knows lots of people that aren't. My wonderful Dad had been a Sergeant Major in the Royal Marines and had travelled the world with them, retiring after 28 years man and boy to live on his pension and his part-time job at the local magistrates' court as an usher.\n\nMind you, I often believe that the later lack of violence at the end of our relationship was mostly down to Gemma and Tom and their almost magical appearance in any room that we'd be arguing in just at the right time; especially Tom. He'd amble into the kitchen his face buried in a book just as his father was getting to the spitting, snarling part of his temper tantrum and reach blindly for a cupboard door handle or the fridge, get his drink, or his biscuit, or whatever else he'd came into whichever room it was, most often the kitchen.",
        "Tom would take whatever he wanted lasting just long enough for me or his dad to stop in mid-flow and amble back out, leaving the door open. It would be just long enough to take the sting out of the conversation and gave one of us a chance to walk out. Gemma could do it as well but not with the same amount of bumbling unconcern that Tom could.\n\nBut it was only a time waster for the main event, and I saw it coming. Gemma and Tom were both due to be out on a particular evening and Parker was nice as pie for days prior to it.\n\nI had cooked and served the evening meal, Bradley had spent the whole night sniggering to himself thinking I couldn't see. I loaded the dishwasher, made sure I was in the right part of the kitchen diner, our standard room for arguing, and he came in.\n\n\"Come on then Parker, let's get this over with shall we?\" I said.\n\n\"Wh... what?\" He was obviously waiting for me to do something he start complaining about.\n\n\"I know you're spoiling for a row, so let's just get it out the way shall we? Bradley is running around like a Labrador puppy after a toilet roll for heaven's sake. Or should I have done something majorly bad and have let you down, the kids down, the school down but mostly myself down. Oh I don't know, there must have been something. After all Gem and Tom aren't here to stop you are they?\"\n\n\"Well,\" he started, \"as it happens there is, actually.\" The 'actually' sounded almost as petulant as Bradley did and his rant started. I stopped him mid-rant.\n\n\"So what do you want Parker?\" I said, doing the one thing he hated most - interrupting him, \"you know and I know that you've had enough and you want out of our marriage and move in with that blonde bitch Shauna with the big tits from your office.\" His chin dropped so fast I was surprised it didn't hurt. He looked really shocked for a moment and started to mouth the word 'Shauna'. \n\nI took my chance with his silence and continued, raising my voice now. \"Don't sit there and try to think of reasons why it's my fault, just have the bollocks to admit it, and let's get this done. I'm tired Parker, too tired to play your fucking games anymore. I've met her, I've seen all the credit card bills, and know what you've bought for her and from what shops; I will confess to being a little disappointed we couldn't afford that new bed for Tom, but somehow we could afford expensive jewellery and underwear for some woman that isn't even married to you, right?\" His mouth flapped like a goldfish, so I raised myself to my full height, folded my arms and looked down my nose at him. I sighed, I shook my head in disappointment, I went to bed.\n\nHe spent the night in the guest room, and moved out the next night, which was a Friday. He moved in with the other woman of course.\n\nI knew because his trusty secretary Edith wasn't that trusty, and liked me far more than him and told me what was going on, I had to tell her I already had my suspicions.\n\nAs part owner of the company I had access and passwords and had often gone online and looked at the books, something he thought me too stupid to do. He'd only made me a director so he could claim tax relief, lay blame, have someone to pay money out to and all that shit, and he explained it to me in the simplest terms. He forgot I had been to college, and I actually did that kind of thing for a living and was just way cleverer than him anyway.\n\nI saw he was paying for hotel rooms locally, which was stupid on his part. He never paid for anyone to stay in a hotel, ever - not even family and the dates matched days in the diary that he was supposed to be out of town. He was using the card in specific shops buying things that could only be gifts - all this on the company credit card. \n\nI asked 'our' accountants about it and they spoke with some embarrassment, but did tell me the shops and what, as far as they could discern, had been bought; Parker would always present receipts and try to find a way to claim tax back on what he considered 'hospitality'. I was even more suspicious of my dear Husband. I was in the office one day for a presentation, and Edith looked upset. Then she told me what was going on with the blonde bimbo that Parker had brought in to work on sales.\n\n\"It ain't fair Mrs Wallace, you've done nothing but support him and he pays you back like this.\" I told her I was ninety percent aware of what had been going on but said I was already talking to company solicitors about it.\n\nTo cut a long story short we separated and the kids lived with me during the week, going to his place on Wednesdays and sleeping in the spare room and on the sofa, and every other weekend. We went through mediation, not because he wanted a second chance but because he didn't want to divorce straight away for business reasons and we all still had to live. I guessed there was some things he couldn't explain or didn't want to until he'd found a way to hide or confuse what was going on.\n\nAs I said besides his posh suit, cheap shiny cars and business-like bullshitting, Parker was what my father called a wrong'un and although he managed not to get his fingers burnt in the same way his own father had, he was still bent. So bent that he could walk through a corkscrew without touching the sides.\n\nFrom dodgy cars that had been clocked, to overpriced and unnecessary repairs on buildings he hadn't actually worked on, lending money to people that didn't realise they owed him, he played all the dodgy scams he could. As a result of this, I told him that if he gave me the house he could keep the business and just pay child support on the kids until they'd finished university or college and could earn their own livings.\n\nThat was agreed and the accountants and company solicitors worked everything straight down the middle for us, and it worked quite well. Again, I was on first name terms with the accountants and solicitors and I rather think they squared things quite nicely for me despite his whining and bitching about 'his company'. The solicitor was able to show that 'our house' was actually 'my house' because he couldn't prove he'd done more than buy a few tins of paint and some furniture, most of which had gone through his company books because of the VAT. At first I was a bit worried about the choice of solicitors and accountants but my mind was instantly put at rest when it became obvious that they all actively disliked Parker and his girlish temper so much. I sat in Starbucks with the chief accountant and he told me straight that I was well out of anything going on with the company and while I was no longer a Director and had no further claims to any profits, I owned my own house outright, and I was well out of everything else and untouchable when it all went tits up - which it all inevitably would; he'd made sure I was safe and well out of it.\n\nParker started a rumour that the solicitor and I were having an affair and tried to use it as leverage; he told the solicitor this and he laughed. The solicitor was gay and in a relationship, and when he handed Parker his very last bill he gave his nasty former client a letter ending their business relationship with a few warnings and a threat that if Parker ever tried to threaten me or his firm again, he would regret it.\n\nA year later and things were going nicely, I had quite a nice routine going on and would use my weekend without the kids to get the house done top to bottom and shop and refill the freezer. My Saturday nights would be a nice meal, wine, a movie, a long soak in the bath sometimes, the very occasional evening out with friends to parties or nights out.\n\nOn that so memorable week, I'd been loaned a copy of 'Fifty Shades of Grey' by Georgina in my office and I promised to return it.\n\n\"Please do,\" said vivacious Georgie, \"once you've read it you'll see why I want it back!\"\n\nLike all of the other porn mummies I talked grandly that I'm sure I wouldn't be that impressed but I read it over lunch and couldn't put the bloody thing down. By going home time, I was dying to get back into it.\n\nI got home cooked myself some tea, and had an early night with the rest of my occasional Friday night half bottle of fruity white wine to 'help me sleep the sweeter'. I took the book to bed with me and by nine o'clock I was thoroughly captivated by both Christian and Anastasia and what they were doing. I was more turned on than I could ever remember being.\n\nSex with Parker had been exciting when we first started our relationship. As we progressed and got married, our lovemaking peaked before the arrival of Gemma. For instance when we went to bed, we'd hold each other and caress working slowly up to penetrative sex. We'd kiss and stroke and play for ages, then hands would move down to boobs, bellies, pussy, balls, penis, slowly working each other up to the point when we were ready to make love.\n\nOver the years this moved on to him reaching out to see if I was wearing a nightie or panties; if I wasn't he'd stroke my tits for a short while, stroke a hand down to rub my pussy, finger my clit for a short time, until he felt it was OK to finger me until he'd built up enough lubrication to fuck me. Mostly this would be on my back, but occasionally he'd tell me to get onto my hands and knees and he'd fuck me doggy style. It was OK but I never came, and normally was just starting to enjoy it when he did. I would then get up, do that funny walk to the on suite bathroom so there was no wet patch for me to sleep in or an embarrassing mark on the carpet. Eventually even that stopped as he spent longer and longer at his desk, and I guess was fucking the other woman.\n\nAs for me, this was my first time I'd felt horny in years, and I started to stroke my flushed cunt. After a while, my T-shirt nightdress came off and my hard nipples got in on the action. Eventually I was holding the book in one hand and as Christian mounted Ana, \"...I'm going to fuck you now Miss Steele...\" I came, groaning and crying out in the final release of all that sexual tension. I carried on strumming my clit, reading my way through their fuck and their release.\n\nI had the house to myself, and decided I wanted the last of the wine now sat in the fridge door. I picked up my glass and thought about putting my nightie on again, but feeling so relaxed and sooooo sexy I decided I'd take my walk to the kitchen naked, revelling in not having done this for years. I slowly walked downstairs conscious that you could see through the net curtains on the front windows if you were close enough and the light was on. No one was of course, and no way was I going to turn the lights on!\n\nI got to the kitchen, poured the last of the wine into my glass, and for badness took a small scoop of ice from the tray in the door of the freezer. I took a sip and headed back out into the hallway to walk back upstairs. At the foot, I stopped and looked out of the window; no one there that I could see. Taking my wine, I put one foot on the first step and then thought about my naked walk. With a finger on the light switch I paused for just long enough to convince myself and clicked it. The entire hallway and my naked body was bathed in bright incandescence, and I took a sip from my wine as I forced myself to slowly walk upstairs, swinging my hips and working my bottom for whoever might be able to see.\n\nI got to the top of the stairs and stopped dropping my weight to one leg and turning slightly so my dark pubic bush would appear against my pale skin. Half a second later I turned off the light and even though I did try to stop myself I ran to the upstairs hall window just to see if anyone was watching or might have seen my little display.\n\nThere was no one there of course, not at half past nine on a cul-de-sac Friday, but it was the fact that someone could have been! I went back to bed chuckling to myself and feeling even hornier than before, convinced I was going to have another orgasm before I slept.\n\nI thought about Georgina and how she must have wanked herself reading this book, and giggled. Georgie was another brunette and another single Mum that was still very much into men, and hardly ever stopped talking about that latest one.\n\nI will confess that I sniffed the cover just in case she had done was I was doing. I giggled again, but was still feeling really sexy and back in bed I read more of my book, but my arm was starting to ache with holding it up, so I decided I would finish my wine and just play with myself a little, and gently fall asleep. I took a large gulp of wine and took a large chunk of ice into my mouth slurping it prior to the familiar crunching. Then I thought back to when Parker and I had watched Mickey Rourke in 'Nine and a Half weeks' and we played with ice then. The piece was small enough and wet enough not to do me any damage so I swiped it experimentally across my already sensitive right nipple, and I gasped with the pleasure it afforded. I did the same thing with my left nipple and groaned grabbing my entire crotch and giving it a squeeze. I put the diminishing ice into my mouth and sucked away most of the water and moved it back to my right nipple again and it was thrilling, but it spun from my fingers across my still flat belly dropping into my navel. I giggled and putting hands either side squeezed it up and out where is slid further down my tummy to rest in my short pubic hair.\n\nWithout further thought I slid it down to my pussy briefly running it across my clit until it disappeared into my cunt, and I tried vainly to grab it and succeeded only it pushing it against what I now know was my G-spot and of course what was left of it soon became so much more moisture in my already sopping cunt, and with a few strokes of my clit I came laughing and with such a rush and feeling of relief. I grabbed a tissue and mopped around my pussy knowing that it was only tap water and not semen that would start to smell if left. I curled up with an arm across my still tender boobs while the other had not stopped cupping my pubic mound.\n\nI woke the next morning feeling soooooo fucking relaxed that I picked up the book again; \"I'm going to fuck you Miss Steele...' \n\nOoooooh yeah.\n\nI had a shower, got dressed in my jeans and one of my tighter polo shirts and as I finished my last mug of tea, I got to thinking about sex toys. The internet was of course full of them but the last thing I wanted or needed was a ten inch vibrator being delivered by the postman and the kids, especially Bradley, demanding to know what was in the secret package. Bradley I knew would tear the house to bits until he found out what it was, and would then text or email his father on one of the many devices he'd bought him.\n\nI did a quick google search and saw that there was an Ann Summers store in a nearby city a fifteen minute drive from my town. Just far enough away to be away but close enough to be close, and no one that would know me or report that Mrs Wallace from the school was buying sex toys. I parked and wandered around the town centre by-passing Ann Summers three or four times doing anything I could to avoid going in there while the place was still half full of shoppers. Eventually I judged that there was enough space in the store for me not to be overheard, and I walked around the shelves looking at what they had to offer.\n\nA young girl in her early twenties, obviously trained to spot confused nervous older women, walked across to me.\n\n\"Do you need some help?\" she said matter of factly.\n\n\"Yes,\" I said, \"I err...\"\n\n\"Are you looking for something for yourself, or yourself and a partner?\"\n\n\"Me,\" I said.\n\n\"Excellent,\" she grinned, \"follow me...\"\n\nOur discussion then moved around to whether I wanted clitoral stimulation or something for penetration. \n\n\"Both,\" I said.\n\n\"Right, can heartily recommend this,\" she took down a thrusting rabbit vibrator with a thousand bells and whistles that did everything bar cuddle me and talk about our feelings afterwards. The assistant had the most fantastic no nonsense way about her that completely removed the butterflies in my stomach and made feel at ease.\n\n\"That will do nicely,\" I said, but remembered from my research on my iPhone that morning that a purpose made vibrator was worth the expense, and mains ones were the best. I told the girl and she headed further along the rack and took down something that looked like curling tongs with a tennis ball on the end.\n\n\"Hitachi style,\" said the girl, \"has all these different heads, and,\" she said leaning forward conspiratorially, \"They are fucking dynamite; not supposed to say this but if you could only have one I'd buy this, and trust me, this is the only vibrator you'll ever need.\" She made a play of wiping a hand across her forehead, \"keep a pack of wet wipes by the side of the bed, and take the rest of the night off sweetie, and you'll come buckets.\" The girl looked me up and down appreciatively.\n\nI laughed and thanked her for her advice and bought my toys feeling liberated and sexy, hot, and cool all at the same time. At the checkout I asked her if many of her customers were, like me, a bit nervous. \n\n\"Oh, only about 95%,\" she said with a grin, \"But it's all about being comfortable. You wouldn't walk into a car showroom and expect to know what each car does and just buy it, nor would you buy the first mattress you saw without someone explaining the differences. Sex toys are no different. OK,\" she said with a cheeky grin, \"I can't let you have one to road test, nor can I let you jump around on a mattress with one, but you get my drift.\" I did, and shook her hand. She leaned forward and gave me a hug, \"enjoy,\" she said.\n\nI headed into Starbucks with my innocent brown paper bag and had a cappuccino to relax, and looked at the other women around the place that looked my age. Not for them the average jeans I was wearing and shirts up to the neck. They had jeans that were form fitting, not to say 'sprayed on' and were exposing chest flesh and cleavage. Parker didn't like me doing it, but he obviously liked women that did. I looked around, my turn I thought - revenge - so I finished my coffee and took my brown paper sack back to my car and locked it in the boot.\n\nI walked into one of my favourite clothes shops and hunted for a girl that could advise me like in Ann Summers. There wasn't one, so I worked up some courage and spoke to a woman my age with a really nice arse that was looking at the jeans rack so I asked what jeans she was wearing. I said that I wanted to wear something that showed off my shape after lots of years on not doing so.\n\nShe looked me up and down, noticing no rings on ring fingers.\n\n\"Date night?\" she smiled.\n\n\"Yes,\" I said, not wanting to admit the date was going to be a three way with me, Mr Hitachi and Mr Rabbit. Christian and Anastasia might be called upon as well.\n\n\"What size are you?\" I admitted I was a fourteen long. She took a pair from the shelf and handed them across, \"that's what I'm wearing,\" she grinned twisting to show her rather shapely arse, then whispered, \"They have some elastic in them somehow and pull you in a bit.\" She smiled again, \"you have a great night and I hope they get you the results you're after!\" She stopped, looked at my arse, walked to an end rack and handed me a pack of white string panties, \"VPL,\" she whispered and walked away grinning like a Good Samaritan, albeit it a slightly naughty one.\n\nI thanked her, took them and she walked off, but she stopped at the T-shirts. Without saying a word she walked back, took the string panties and took my hand pulling me towards the wonderbras.\n\n\"38-C?\" she said. I nodded trying to hide my look of surprise. \"Same as me,\" she said and handed me a Wonderbra in black, one in white and one flesh tone, then two pairs of matching size fourteen string panties for each. Then we crossed to a rack of T-shirts and she showed me the one she was wearing that was showing off her cleavage; I took one in my favourite green, and another in yellow. \"Have a great weekend!\" she whispered and headed off again.",
        "At the changing room, the young Saturday girl, counted my items and pointed out a cubicle.\n\n\"Make-over?\" she smiled, obviously after checking out what I was wearing.\n\nI grinned,\n\n\"Yeah, thought it was about time I treated myself!\"\n\n\"Well done you,\" she grinned. \n\nI pulled on the jeans and did up the button and zip. All of a sudden I had curves again, and felt fantastic. They were low riders and when I moved my hips, they just seemed to emphasise my shape more. I looked at the reflection of my bum and saw the line of my panties. 'VPL' - visible panty line - of course. I tore open the pack of my first pair of string panties since before Tom was born.\n\nNext my old bra came off and I replaced it with the Wonderbra.\n\n\"Hello boys,\" I said, thinking about the famous billboard adverts and looking at my new cleavage in the mirror, impressed with what I already had. I put on the green T-shirt and it fitted everywhere I wanted it to. I was really impressed at the hot looking yummy mummy I saw in the mirror staring back at me, most of all she had a great smile and looked confident.\n\nI approached the girl that was in charge of the changing rooms and said I wanted to wear the stuff I had on and she said it was no problem.\n\n\"You look fantastic,\" she said, \"really hot!\" She snipped off the labels from the jeans and T-shirt and waved them to the girl at the checkout saying I should just present the labels.\n\nI did, stopping to buy more knickers, including some high cut boy shorts; fuck it, I even bought more tailored tops and out of sheer happiness a second pair of the jeans in a lighter colour. \n\nI saw someone wearing a wide leather belt that was doing nothing to hold up her trousers but emphasised her hips brilliantly. So I went and got one of those as well. \n\nThe checkout girl was kind enough to put my original trousers in my bag with my purchases and again complemented me on my new look, saying that she had served a lady that said I would be coming through with my new jeans. She also wished me a great night; I said I was pretty sure it would be.\n\nI headed home after stopping to by a pair of suede boots that matched the trousers and the heels raised me about an inch and a half off of the ground but gave a great curve to my calves, thighs and of course my arse. Walking back to my car I couldn't stop looking at my reflection in the shop windows, noticing some of the admiring glances I was getting from some of the male shoppers - of all ages!\n\nI felt good about me for the first time in ages and made my way home. For a moment I wished I had sunglasses and a soft top car.\n\nI drove home and despite the small piece of steak I'd bought, the latte, Panini and muffin had been enough and I wasn't hungry. But while I didn't want to eat my special Saturday tea, I desperately wanted to use my toys. I knew I had the night to myself so prepared myself. I ran a hot bath and stripped naked, stepping into the steaming water and turning on the Jacuzzi. It was hardly used because our house had always been about quick and effective showers. So why the fuck Parker had insisted we install one amazed me - of course it was just another example of his social climbing bullshit.\n\nBut whatever the reason I was pleased that he had installed the bloody thing because I lay back in it feeling the refreshing blast of the jets releasing the day's tension and yes, you've guessed it, I even managed to get into a position so that one of them was blasting onto my pussy and another across my large soft bosom. It was wonderful.\n\nI brought myself off to a really nice orgasm, not as spectacular as the day before but still nice for all that. I wrapped myself in a large soft bath towel and tucked it between my boobs and sauntered back to my room. I dried myself off and lay back on my bed.\n\nThen it struck me that the front door, although locked, wasn't deadlocked and any of the kids could just walk in on me and my... err... relaxation techniques. So I ran downstairs quite forgetting my slow sensual walk of last night, this was a quick dash, a flick of the lock and a run back up this time with one arm stopping my boobs bouncing around as I ran. But when I did it this time I didn't just hold them down, I caressed them down and it was wonderful.\n\nI got back to my room, lay back on the bed and lifted the brown paper sack from the floor and lifted out both toys. The excitement was coming back to me and my pussy was soft of flushed and probably wet inside. My nipples tingled as I read the instructions, even though it was plainly obvious what I needed to do with them, in fact my brain had been doing just that since I first looked at my phone that morning.\n\nAs I purred and started to think dirty thoughts about how much fun I was going to have that night, and decided it was going to be playing with the big girls' vibrator tonight. I turned the package over. I pulled at the sides, the fucking thing was heat sealed! I scrabbled through my bedside table for scissors, nail clippers, a metal comb, anything that had a sharp point on it! FUCK!! I giggled to myself at the absurdity of my situation and decided I'd have to go to the bathroom; but then I just bit the bullet and decided it would have to be the kitchen and the large scissors in the drawer.\n\nI padded downstairs naked carrying my brown paper sack, playing with my long dark hair, and looking casually out of the netted windows and seeing my neighbours Samantha and David. They were chatting to someone in a car bending forward. Sam had a really nice arse and I looked and thought, 'hmm, my arse looks every bit as good as hers,' and thought nothing of my nakedness hidden by a gossamer of nylon It was darker inside than out and they never even looked in my direction, but I will confess to the tiniest thrill. I got to the kitchen, found the scissors and started at the packaging, slicing around the edges until both of the packets were open. I put the scissors away, put all of the plastic into the bin putting the cardboard inserts into the paper sack. I walked back to my bedroom with a slight disappointment that my neighbours had gone back in again. I wriggled my arse in the direction of their house with a chuckle.\n\nBack in my room, I figured it was about time I got down to my sexual adventure, and got the extension lead I used for my hair straighteners and plugged it into the socket by my bed. I plugged my wonderful Hitachi into it and lay back on the bed and rolled the switch on the side of the toy and felt it slowly start to hum. I looked in the bag and there was a plastic hood for it covered in little points that I knew would hit my clit wonderfully.\n\nI started by gently working it across all my erogenous zones, first around my boobs, down my waist to the flat of my stomach, then my inner thighs. My nipples were hard already and I gave them a bit of a treat. I rolled the button higher until it was almost full power, and it was really good. I was just stalling until it was time to put the thing against my clit of course. So I did.\n\nFuuuuuuuuuuuuuuuuuuuuuuuuck!\n\nI found the spot straight away, and pushed hard. I came and it was even better than the previous night, I left it there just to see what would happen next, and I came again; and again. Eventually I took it away from my puss and just lay back to get my breath. \n\nI dozed for a while. I came round and the house was in darkness. I got up and walked to the bathroom. I was amazed at how wet I felt, and the warm glow I still had from my pussy. I went back to bed feeling warm and just a bit fuzzy. I've no idea what the time was but I knew I slept through the night, my visions of a night of sexual frenzy and singlehanded abandon drifted into the ether.\n\nI woke at work o'clock the next morning, and it was a bright sunny Sunday morning. I looked at my beside table and there was the 'Fifty Shades' book, while on the other one was my rabbit vibrator, and on the bed was the Hitachi vibrator still laying where I'd left it last night.\n\nI smiled, it had been a great weekend and hadn't finished yet. I still had the rabbit to try. I hadn't had a good length since months before Parker left over a year ago, and I fancied something inside me. Just lying there thinking about it was enough and I was soon rubbing the tip of thing through the tiny strip of hair at the top of my pussy against my still hooded clit and thinking what it was going to be like having this thing pushing inside me.\n\nIt came with a small tube of lube but I thought I was probably wet enough. \n\nAnd so I was; I eased it against my pussy lips and ever so slowly pushed the smooth rubber tip against the fleshy labia at my entrance and it slipped in. I took a deep breath and pushed further but before I knew what I was doing I was pumping the thing in and out of me, a small section at a time until I was wet enough to take all of it. My thighs were spread wide I looked down between my boobs and thought how obscene this must look, and that was the start. I trembled slowly feeling the muscles in my thighs start to vibrate and the pumping in and out started in earnest. \n\nI was pushing thing hard up inside me, and it went further into me than anything else ever had. WOW! Fucking glorious, and as I lay there feeling my orgasm swell inside me I wondered why I'd never invested in one of these before. Pumping my hips and bottom up and down off of the mattress I came.\n\nShit, didn't I come; this was the best thirty quid I'd spent EVER! I started to feel a little dry though and thought that perhaps the lube was there for a reason, and swore that during my next shopping trip I was going to buy some KY, this could only get better. \n\nI lay back and relaxed, feeling the tied up cable rest against my wrist. It was electric! I pressed a button and the thing began to rotate and interfere with all the nerve endings at the mouth of my pussy, just like the blurb had promised, then my surprise increased as it started to move in and out of me, not much but just enough to stroke against my G-spot. Finally, my excitement was completed by the ears of the rabbit on the side resting either side of my clitoris and my pushing the thing into the back of my pussy just had my arse off of the bed again and my spare hand grasping and pulling at the bed sheet while I howled my way to my second orgasm of the day. Christ!\n\nThank God the kids weren't there, they would have been hammering my door down to find out if I was being murdered, raped or attacked by dogs. This toy I would need to keep for my fortnightly weekends to myself or perhaps buy a gag so I couldn't make any noise. I had a shower (and made myself come in there too - just a finger) then once dry got the wet wipes as suggested and cleaned my two new lovers and packed them carefully into an empty shoe box at the back of wardrobe with my real shoes in shoeboxes ready for my next night, or morning for that matter, of passion. I went shopping on my way home from work the next day and bought myself all three 'Fifty Shades' books and a couple of tubes of KY jelly. \n\nI tried to stop myself the very next night from fucking myself but woke up at gone one in the morning wet and outrageously horny. I got out my friendly rabbit and didn't bother plugging it in choosing instead to lay back and fuck myself with it to the most splendid come, using the tip to play across my G-spot which of course had me gasping and burying my face in the pillows to stop me crying out.\n\nI forced myself not to do it the next night, saving myself for Wednesday and the kids being at Parker's for the night. He collected them at seven and they all went off with everything they needed for school the next day. Once gone, I didn't have the little heart wrench I got whenever they went to his place, instead I ran upstairs and stripped naked, but stopped myself. Instead I out some lacy underwear and dressed up, black Wonderbra and matching string, black garter belt and stockings, shiny black 2 three inch heels and I even put on some make-up!\n\nI plugged in the Hitachi and lay back on the bed and began to pleasure myself with it, almost vibrating with the expectation of what was going to be one hell of an orgasm. I played it across my tits, eventually pulling them free of my sexy but nicely restrictive bra eventually taking it off to allow me to get at my hard nipples. I was able to get my tongue to my own nipples, something Parker had asked me to do once and I enjoyed the feeling of my tongue on my flesh, for me this time, and I was outrageously hot.\n\nI moved the Hitachi down to my pussy and pushed it hard against my flushed lips and felt them squish around. My tiny panties had to go as well and did within seconds leaving me in black stockings and suspenders and black heels. I felt and looked like some kind of porn star and watched myself in the mirror doors on my wardrobes, looking myself up down and seeing the dark fashion model eye make-up I'd perfected before I'd even left school.\n\nIt was time, and I reached over for the rabbit, plugging it in so I could take full advantage of all of its functions rather than just using it as a dick to fuck myself with. I lay back and turned on the vibrate and slowly pushed it in, slowly so I could get the full effect on the nerves at my entrance.\n\nFuck but it was wonderful and as the rough section played across my G-spot, I hit all the switches and let 'Bugs' - he is a rabbit after all - take me to paradise. I can't remember how many times I came, but remember coming round at a bit after nine o'clock, laying on my front, my arse high off of the bed on the all the pillows I'd stuffed under me to raise me, while Bugs had fucked me from behind with just the smallest amount of assistance from me, his clitoral stimulating ears still tickling my anus in the sexiest annoyance.\n\nI pulled Bugs from me and made for my on-suite, the sweetest ache from my pussy and vulva after all the work they had done, and a just noticeable soreness from my labia after all they had gone through. I kicked off my heels pulled the duvet over me for a nap, before I would go back downstairs, have some supper and shut things down for the night.\n\nI woke up at work O'clock the next morning just shy of my alarm going off feeling wonderfully rested, but still with my stockings and suspenders on and my face still made up and the various lights still on downstairs from the night before. Bugs was pressing against my thigh, where he had slipped out of me last night after I turned him off. I picked him up and my thumb turned on the vibrate mode; well it seemed a shame not to...\n\nHaving the house to myself I rolled on my back and fucked me with it, giving vent to all those noises that women really want to make but can't because of others in the house, the time of day and all that shit. I cried out, warbled, gasped and at won't point even howled through one long orgasm, or three separate, I can't remember.\n\nI eventually finished and dragged myself away from my bed and my toys feeling horny all over again. I showered and rinsed off the make-up, no way would my employers want to see a sexy looking Mrs Wallace on this cool Thursday morning.\n\nAs I drove to work I could still feel the faint tingle in my loins and I realised I would just have to do that again tonight.\n\nAt work, Georgie noticed my distraction;\n\n\"Wassup Nats?\"\n\n\"Oh nothing,\" I said trying to sit still on bottom that needed to be wagging in the air with Bugs protruding from my wet pussy. I knew I was wet down there and I could feel the string I'd put on this morning in praise of the night's activities running between my arse cheeks.\n\nGeorge looked around,\n\n\"Why Natalie Wallace, I do believe you got some last night?\"\n\n\"What?\" I said.\n\n\"You're still showing signs of eye make-up, you're wearing a string not the usual passion killers you normally wear,\" I guessed she could normally see the VPL that my friend in the department store had mentioned, \"you can't sit still; you've either got thrush or you got some last night. Can I ask his name?\" I blushed and put hands to my cheeks. \"Woohoo! Nats got some! Well done you!\"\n\nI picked up my coffee with a trembling hand,\n\n\"Bugs,\" I said, \"Bugs the rabbit. Best thirty quid I spent in years.\"\n\n\"All that from a toy?\" I nodded, \"fucking hell Natalie, we have so got to find you a good man!\"\n\nA good man; Georgie stood and walked to printer smiling at me all the time but in a nice way, appreciative of my night's work. I thought of having another man in my life, a good one, one that would appreciate me, one that I wouldn't have to argue with each night, one that could take me to bed and do the kinds of things that Mr Hitachi and Bugs could, to have me on my hands and knees as Bugs had done, the way I missed most of all, a real man.\n\nLittle did I know that in less than ten days, I'd meet him.\n\nAnd then some..."
    ],
    "authorname": "Androgynousother",
    "tags": [
        "masturbation",
        "sex toys",
        "rabbit vibrator",
        "hitachi vibrator",
        "underwear"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/a-real-man-in-my-life-ch-01"
}