{
    "title": "Dead and Horny Ch. 05",
    "pages": [
        "Hi all, I'm back with some more zombie/succubus shenanigans, just in time for the fall season!\n\nIf you're new to this, it's a spin-off from my main storyline, HFHM. While not necessary, you definitely want to read through Book Two of HFHM to fully understand some of the background.\n\nReturning readers, it's about damn time we see what the inside of an Order's base looks like...right?\n\nPlease don't forget to rate and review, and check my release schedule in my bio to see when the next chapter is scheduled to come out. I hope you enjoy this chapter! \n\nIn The Pit\n\nThe view from several hundred feet above the Berkeley Pit should have been breathtaking. The lights from the city of Butte sparkled like a bank of landbound stars, and the shadows of the nearby mountains were slumbering giants, each of them dreaming of Ragnarok when they could awaken and do battle with the gods of old.\n\nHowever, Dana couldn't help but pay more attention to the fact that Lily was being far too quiet tonight. After arriving at the hotel, the succubus had announced it was time to go. Her usual chatter had been replaced by an ominous quiet, and it was only when they were close to the pit that Lily had spoken up about a good place to hide the motorcycle. Now that she rode in the demon's arms, Dana half expected a joke about heights or being dropped.\n\nInstead, all she had for company was the wind in her ears.\n\nDown below, the pit was a blot of ink on the landscape, a shade of black that confused the eye into thinking there was nothing there at all. Lily descended in a tight circle, her body clad in black leather. Dana was in black jeans and a black jacket she had bought at a local thrift store with cash, a last minute purchase that she thought would help with their infiltration.\n\nUp close, the pit smelled of many things, none of them pleasant. Dana wrinkled her nose in disgust as they glided silently over the water and landed on a narrow strip of land underneath a steep cliff.\n\n\"We can get in from here,\" Lily said, a chill in her voice.\n\n\"Sounds good.\" Dana reached into her pockets and pulled out a pair of waterproof flashlights and some swim goggles. She strapped the goggles to her head and made sure that none of her hair was trapped beneath. The goggles might not even work, but she hated the idea of being dragged through the darkness below, unable to see where they were going.\n\nThe air was thick with the smell of rust and decay, and when she knelt by the water's edge, she felt a slight twinge in her stomach. There was another odor there that didn't equate with anything that she knew.\n\n\"Ready?\" Lily asked.\n\n\"As I'm ever going to be.\" She waded out into the water right behind the succubus. It was only a few feet from shore that the ledge they stood on dropped out, and they were now both suspended in the water. Despite being fully dressed, Dana noticed that she didn't really sink beneath the water itself. Also, her skin was starting to itch. \"So where to?\"\n\nLily grabbed Dana's wrist with her tail. \"Just kick as hard as you can.\" With that, she dove underneath the water. Dana took a deep breath out of habit and followed, kicking her feet and using her free arm to pseudo paddle.\n\nOnce they had gone far enough under the water's surface, Lily turned on her flashlight. Dana followed suit and saw that they were right up against a large stone wall that disappeared into the darkness below. Large grooves had been carved into the stone, and Lily was upside down, and using her hands to pull them even deeper into the Stygian darkness.\n\nThe flashlight beams didn't reach very far, and a tiny bead of red water was in the goggle of her left eye. She didn't know how deep they were now, but could already feel the pressure squeezing the goggles tightly against her face.\n\nMinutes passed, and the wall disappeared. They hovered in front of a large opening, and Lily swam into it, her wings acting like giant fins to propel them forward. Dana's whole body itched now, and she fought the urge to scratch. Even worse, she was becoming disoriented, the world around her starting to tumble about as she bounced along the stone ceiling of the cave they were in.\n\nThoughts of Alex floated in front of her mind, and then Tick Tock. She pointed her beam down, wondering if the motorcycle had followed them. Unable to see it, she tried to descend, only to be yanked back upward by Lily's tail. Disgruntled, she dropped her flashlight and watched it sink into the poisonous depths below until it vanished, hoping to see the mimic in the beam of the light.\n\nWhat if Tick Tock was hurt? She fought the succubus, but got pulled along all the same. The stone ceiling disappeared and suddenly they were in a large, air filled chamber, but she couldn't see anything through the blue tint of her goggles.\n\n\"You're a pain in the ass,\" Lily muttered, then dragged Dana to shore. There was a large, metallic cube the size of a barn sitting on the edge of the lake with circular glowing glyphs on every side of it. The succubus dragged them up onto land.\n\nDana tried to stand, but couldn't. Her equilibrium was trashed, and in the beam of Lily's light, she saw that her skin was red and peeling in several places like a third degree sunburn. She had known a girl back in summer camp who had gotten one. Sally? Sally Mal? Sally Sally had a cow, stayed out too long, so inside now.\n\nShe giggled.\n\n\"Fuck me,\" Lily muttered, dragging Dana away from the water. \"Try not to breathe in here. Even I can taste how poisonous the air is, I think it will burn the shit out of your lungs. You can even see where they've put up runes to keep the walls from degrading over time. This place is fucking nasty.\"\n\nDana groaned and flailed about as if drunk. The cube sat in front of a very large door next to a small hatch, and Lily turned the wheel on the hatch and then pulled Dana inside. It was like an airlock\u2014once the hatch was sealed, fresh air poured in through the vents above. There was a pair of benches and a half wall separated the room from a shower.\n\n\"You good?\" Lily asked.\n\n\"Urgh,\" Dana replied, then pulled off her goggles. Her fingernails felt soft to the touch, and one slid off and stuck to her goggles, which had become slimy. She held her hand up in front of her face and saw that fresh skin had reappeared near her wrists. \n\n\"Get those clothes off,\" Lily ordered, and Dana obeyed. She removed all of her clothes with Lily's help and tossed them on the floor. Lily turned on one of the showers and dragged Dana into the stream of water.\n\nSteam filled Dana's lungs, and a coughing fit struck. She spat out a glob of something shiny that tasted like a dirty penny.\n\n\"Nasty.\" Lily, now wearing nothing but her boots, smacked Dana on the back. \"Okay, so maybe dragging you into an acidic lake was stupid of me.\"\n\n\"Mef.\" Dana hacked up more of the substance, sounding very much like an asthmatic smoker.\n\n\"Shit, I'm glad we're past the stealthy part. You're making plenty of noise.\" There was a large bottle of soap, which Lily poured all over Dana. \"I don't think we were spotted and I doubt this room is being watched. The air in the landing area is so acidic, I doubt they could have cameras watching it, and I think we're about five hundred feet down. That cube out there is what the Order uses to get here, as well as to transport stuff down. It's made of some mega rare material and is protected by all those magical wards. Still, they have to scrub it down every now and then, and this room is for washing off all the shit they get exposed to outside.\" Lily pointed to the opposite wall where a bunch of hazmat suits had been hung up. \"See what I mean? This is why security is so lax. Even if you get past the lake, you could suffocate out there.\"\n\nDana retched, and this time, a large black glob came up that shimmered like mercury. Her hands were shaking now, and she tried to scratch at the large blisters on her legs.\n\n\"Okay, I didn't think we were going to do this, but...\" Lily yanked Dana to her feet and forced their mouths together. Lily's tongue was hot in Dana's mouth, and she felt a jolt of energy as a bit of fresh cum was passed along.\n\nHer whole body burned as if on fire. Fresh skin knitted itself back together, and the burns on her body faded away under the steam of the shower. Dana broke the kiss and coughed, sending another large glob of the liquid metal that had been poisoning her body onto the floor where it could circle the drain.\n\nThe room around her stabilized, and she tackled the succubus, pressing her against the wall beneath the shower's stream.\n\n\"Not even gonna buy me dinner firs\u2014oh!\" Lily's hands pressed against the tiles of the shower as Dana knelt down to bury her face in the succubus' exposed pussy. Her tongue slid along Lily's trim vulva and then into her snatch. She was hungry for the cinnamon-sweet taste of the demon, and she slid her arms between Lily's legs and grabbed her ass with both hands.\n\nThen she lifted. It was as if the succubus weighed nothing at all, and she stood up straight and pinned Lily against the wall.\n\n\"Oh, I love it when you're this feisty,\" Lily declared as she ran her fingers through Dana's hair.\n\n\"Mmf!\" Dana replied, then shoved a finger up Lily's ass. She couldn't help herself\u2014it was an urge to inhale the very essence of the sexual being before her, to possess her body and make her tremble with lust.\n\nFor a second, she was eating out the succubus in the shower. The next moment, she was living a similar memory with Alex. Back in college, the two of them had just finished a late night run at the gym and, for whatever reason, had begun fooling around in the shower. She had pinned Alex against the wall in this same manner without the lifting, and had sucked and fingered her to a quiet climax before someone else had wandered in to change.\n\nThere was no fear of that here, however, and as if reading her mind, Lily now wore the visage of Dana's late girlfriend. Her dark skin glistened beneath the hot spray of the shower, and she grabbed Dana by the ears and yanked her in.\n\n\"Mmm, yes, that's it baby, use that tongue to get me off.\" Alex's voice was husky and echoed off the shower walls. Dana now had a finger up her ass and two up her snatch, and the dark-skinned beauty in her arms let out a low grunt that became a quiet howl, her hips bucking as an orgasm rocked through her. She slapped her hands against the wall with a loud, wet smack, and then pushed Dana away so that she could slide back to the ground.\n\nIf not for the boots, the illusion would have been perfect. Even so, Alex kissed her roughly, then grabbed her by the hair and twisted her around so that she was bent over the half wall that separated the shower from the rest of the room.\n\n\"Ordinarily I would take my time, but we're in a bit of a hurry,\" Alex said. Dana clamped her fingers onto the cold brick wall as she felt something enormous press against her pussy. She took a peek over her shoulder and saw that the demon's tail was pressing into her. It was just enough to break the illusion, so she looked away and pretended it was just Alex using a strap-on.\n\nThe intense pressure made it feel like her hips were widening, and the wide part of the tail finally passed through her vaginal opening and slid the rest of the way inside, pulsating inside of her.\n\nDana groaned and squeezed the wall with her hands. Alex put her hands on Dana's hips and fucked her slowly, the tail expanding and contracting in time with Dana's inner walls. A rhythm had established itself inside her core, and the succubus was playing her like a finely tuned instrument.\n\n\"Oh, I almost forgot,\" Alex said, and then Dana felt pressure on her ass. A pair of fingers pushed into her asshole, and she arched her back in pleasure as the fingers and the tail alternated. Her entire pelvic region was like a raw nerve right now, and it caused a flood of heat through her whole body.\n\nParts of the wall crumbled beneath her fingers as she dug her nails into it, and she fought the urge to take a bite out of the brickwork itself. She was building to a massive orgasm right now, and she growled in both frustration and pleasure as her libido soared.\n\nThe fingers in her ass suddenly felt thicker, as if they had merged and turned into a dildo. A low growl built up in Dana's belly, and she sank her fingers into the half wall as her rear end was pushed into the air, her feet dangling over the ground. When she screamed, a fine spray of silver filled the air like a mist and immediately fell to the ground. Alex pounded her into that half wall for a second and third orgasm, and Dana finally fell flat against the top of the wall, her eyes rolling back in her head.\n\n\"Okay, okay...I'm good now...\" She opened her eyes to see that she had left long gouges in the brick surface beneath her hands, and there was a pool of metallic fluid underneath her. Her body had managed to reject the heavy metals present in the lake, casting them out through all of her pores.\n\n\"You sure?\" Alex asked.\n\n\"Yeah. You can remove that thing from my ass now.\"\n\nLily's laughter filled the shower. \"Boy, if I had a nickel for every time I've heard or said that...\"\n\n\"You've never said that. Heard it maybe. You've made a couple bucks at most.\" Dana grunted as both her ass and pussy emptied, and then pushed herself off the wall and back into the shower. Despite the constant stream of water, the heavy metals her body had rejected were still swirled along the floor, and she was careful to avoid stepping in them.\n\nLily grabbed Dana's clothes and rinsed them in the hot spray, careful to squeeze them dry. She used her tail like a giant clothesline and flapped her wings, causing a steady stream of air over everything.\n\n\"That's an interesting trick,\" Dana said, then picked up her shoes and stood behind Lily. A ring of fire had formed between Lily's horns as she panted with exertion, creating a hot breeze. It still took the better part of twenty minutes before her clothes were dry, but it was far preferable to walking around in squishy shoes.\n\nThere was a separate door leading out of the cleaning room, so once Dana was dressed, they went through it. Beyond was a long, stone corridor with a pair of wide depressions set into the floor that contained holes that made her think of a cog railroad line. Long glowing panels had been installed along the walls and ceiling, and behind them, the giant doors leading to the dock area were sealed shut with a series of locking mechanisms. It looked big enough for the cube to fit through without any problems.\n\n\"So, they just bring that whole room in here?\" Dana asked.\n\n\"Yep. Cyrus has only been here a couple of times, but they have to ride down in that big cube. There's no other way in or out, which makes this the perfect location to store anything. Before the pit filled with water, they built this part of it to house unclassified magic. These things can be dangerous, but you definitely don't want to house them just anywhere. There is a research team who decides how harmless they are, and then they either remain here or get passed along.\" Lily hopped into one of the depressions and walked along it, stepping over the grooves. Her appearance had changed to resemble one of the women from the Order who had chased them back in Fort Collins. \"Could someone like me get in and out? Sure. But that would require intimate knowledge of where to go once beneath the surface. The lake is a bad place, and even a determined warlock would struggle to find a safe way in.\"\n\n\"I'm sure,\" Dana agreed, scratching a phantom itch. She felt better now that her head was on straight. \"So where to from here? This place seems huge.\"\n\n\"I think it goes down the pit. The ground is sloped here, and...yeah, right there.\" Lily pointed at a nearby door that had a number on it. \"This is one of the storage rooms. We just need to find the research pod to find out where those marbles are and then we can split.\"\n\n\"You don't just have a map in your head or something?\"\n\nLily laughed, her voice echoing off the walls. \"All I have are some vague memories. Cyrus telling some other guy to send the items to the pit, and then a connected memory of riding that moving cube thing here when he was younger to deliver some beat-to-shit...Plymouth?\" She frowned. \"Think it was a Plymouth.\"\n\n\"There was an enchanted car down here?\" Dana could see another door a fair distance away still. The doors were about a hundred feet apart. \"And how did they fit a car through these doors? They're normal size.\"\n\n\"I have no idea,\" Lily admitted. \"All I have is some old memories to go off of. I have to admit, I'm very curious why the research station is so far inside this thing, I would have figured they would want it up front?\"\n\n\"I hate this place. It's like an aircraft hangar without any joy.\" Dana scowled at the ceiling. \"And if this place is so secure, why aren't there any cameras?\"\n\n\"Here.\" Lily handed over a piece of paper and a pen. \"Why don't you write down all your questions now so that we can ask somebody who knows later?\"\n\n\"You're being bitchy,\" Dana replied, ignoring the paper which turned into a puff of smoke. \"Even more so than usual. Do you want to talk about it?\"\n\n\"I'd rather be fucked with an elephant's dick wrapped in barbed-wire.\" Lily's lip curled into a sneer. \"Just having a bad day. Maybe I'm on the rag.\"\n\n\"That's been one benefit of being dead,\" Dana replied dryly.\n\nThis got a chuckle from Lily, and they continued on in silence. It was nearly twenty minutes of a long, curved tunnel that continued downward. The numbers on the doors steadily climbed, and it wasn't until they were in the upper sixties that they reached a set of double doors with no numbers.\n\n\"Hmm.\" Dana walked up to the door and put her ear to it. \"Don't hear anything on the other\u2014\"\n\nLily shoved the door open and Dana fell inside. Past the doors was a well-lit lobby with a man sitting behind a desk monitoring a bank of computer screens. The screens were alternating between night vision images from around the pit, and he spun in his chair when he heard them.\n\n\"Where did you just come from?\" he asked, reaching in his pocket for his wand. He wore a dark sweater over black jeans, and his hood had been pulled up.\n\n\"It's a long story, but Master Cyrus sent us.\" Lily said, then reached into her pocket. At the mention of Cyrus, the man relaxed a bit. \"He sent us to retrieve something from the Fort Collins incident, apparently he needs to check on something.\" She pulled an envelope out of her pocket and held it out. \"Here are our orders.\"\n\nFrowning, he stepped around the desk to accept it.\n\n\"That doesn't make sense, I\u2014\" his eyes rolled up in his head and he fell, revealing Lily's tail behind him. Dana caught him before he could hit the floor, and they dragged him back behind the counter.\n\n\"Clever,\" Dana remarked.\n\n\"Always am,\" Lily muttered, then placed her hand on his face. A few minutes passed before she removed it and turned to the bank of monitors. \"Looks like we need to go further in. He's just the desk bitch.\"\n\n\"Why do they have all these cameras?\" Dana wondered, looking at the monitors. There were so many of them, and they looked out all along the land surrounding the pit. However, she noticed that she didn't see any monitors watching the tunnel they had walked in on.\n\n\"Duh. To watch for trespassers.\" Lily was searching the man's pockets now. She came up with a keycard and a candy bar, which she stuck in her pocket.\n\n\"Then why not anything inside? If they have surveillance like this, then why not\u2014\"\n\n\"Oh, for fuck's sake, fine!\" Lily grabbed the desk guard's head again and closed her eyes. A dark stain blossomed in the front of his pants before she let go of him. \"Okay, so that's interesting.\"\n\n\"Did you just kill him?\" Dana asked.\n",
        "\"No, couldn't. This guy is lame, just beats his meat too often while fantasizing about someone else who works here. Coincidentally, that's how I got this little nugget of info from him. Wait for it...\" She held up a hand and then pointed at the man's crotch. \"Ha, there it is! Anyway, they minimize electronics down here. Haunted items can drain electricity to gain in power, which is fairly common knowledge, and they don't want some of the resident spirits wreaking havoc. Any electrical lines that go out there cause the systems in here to short out all the time, so they disconnected everything. Those glowing panels are some imported enchanted marble slabs from Jordan. No, the real reason for no cameras is kind of exciting. Apparently, that thing that lives at the bottom of the pit sometimes summons things.\"\n\n\"Wait, what? I thought you said it wasn't awake?\"\n\n\"Awake is a relative term for something smeared across time and space.\" Lily pointed to a series of glowing bars off to the side of the monitor. \"Think of it more like a dream. Occasionally, whatever this thing is thinking of bleeds over into the real world sometimes, and when it does, it roams the hallways for a while before disappearing. These bars over here will start to flicker if it's been detected. They're hooked up to some electromagnetic sensors along the corridor.\"\n\n\"Don't understand why they have bars but no monitors.\"\n\n\"Because apparently seeing or hearing it will drive you insane, even through a monitor.\" Lily had a wild look on her face. \"And that sounds so fucking cool! I am insanely curious now what it looks like, aren't you?\"\n\nDana had zero desire to mess with such a creature. Ever since dying and discovering that magical creatures existed, her life (and death) had been literally turned upside down. The last thing she needed was some kind of elder god nonsense that led to an eternity of insanity. \"Can we just get our stuff and go?\"\n\n\"Spoilsport.\" Lily stuck the card in a door on the other side of the room and knelt down. A scanner opened up and she pressed her face to it. It beeped twice and the door unlocked.\n\n\"Retina scan?\" Dana asked.\n\n\"Yep. Could just rip an eye out of his head, but apparently we're in a hurry, so just a little shapeshifter magic.\" She walked through the door and then down the hall. There was a series of rooms followed by a long hallway, but she went to the third door on the left and swiped the card through.\n\n\"Where does that go?\" Dana asked, pointing at the hallway.\n\n\"Dorms. There's about twenty people who live here year-round. They maintain the place and do research.\" Lily pushed the door open. \"And voila!\"\n\nOn the other side of the door was a laboratory. Clearly labeled boxes had been spread around the room, but each one had the same label at the bottom.\n\nCollected from Unearthly Delights\n\n\"These are all magic items?\" Dana wondered out loud.\n\n\"Nope. They don't have time to test this shit on site, so they just bring it all here.\" Lily picked up a nearby box and looked at the label. She set it down and repeated the process with the next one. \"I am very grateful that they are organized. Why don't you put on one of those lab coats? That way, if someone comes in, they won't question it. And if they do, just act like you're supposed to be here, okay?\"\n\n\"Yeah, okay.\" Dana put on one of the lab coats hanging by the door. She wasn't certain why someone would care about wearing such a thing while examining potential magic objects, but Lily's logic was sound. She opened a nearby box and checked inside to verify that the contents matched the label. Lily was right, the Order was thorough. As she set the box down, she felt the floor rumble beneath her feet. \"What was that?\"\n\n\"What was what?\" Lily had pulled a bong out of one of the boxes and pretended to smoke a bowl now that she had Dana's attention. When she opened her mouth, a hazy cloud of smoke emerged, and her eyes were all bloodshot.\n\n\"Seriously?\"\n\n\"Demons love to blaze it,\" Lily replied, then stuck out her tongue when smoke came out her ears.\n\n\"If I was alive, I would hate you so much right now.\"\n\nDana continued her search, but moved slowly, pausing every now and then to see if she could feel the rumbling once more. Were they far enough down that it was just some kind of small tectonic movement? Or maybe the thing below the pit decided to stretch? She found a thick file full of paperwork and flipped through it and was surprised to see a sketch of the pearl necklace Ratu had drawn for her inside. She pulled it out and flipped the paper over. The word Dragon Seed had been scrawled on the back, followed by a question mark. Interesting. When she put it back, she found some additional paperwork on it, and read through it quickly. Apparently, the Order didn't have the necklace either, but were very concerned about it being out in the wild. \"And you're sure that the marbles are here?\"\n\n\"Nope. Just a vague memory of Cyrus seeing them as they were collected. Guy out front isn't part of the chain of custody, so if they aren't here, then we will have to look somewhere else. I really hope they haven't been catalogued and stored in one of the big rooms, because those could take us days to search.\"\n\n\"Really? Days?\"\n\n\"Yes, days. Do you think they just leave stuff sitting out on the shelves? Wards everywhere, some objects are sealed in concrete so people can't just grab them and bail. I think that Plymouth may have been sealed in concrete. Seems a bit extreme to me, but whatever.\"\n\n\"I thought you said this is where they tried to store the non-scary stuff.\"\n\n\"Scary is a relative term. This place is built under a poisonous lake next to a being of immense power who may someday wake up and decide to eat half of Montana. The Order relies on people never knowing this place exists, and if they do, never letting them know what may be stored here. By themselves, most of these objects are never going to just wander off and kill a bunch of people, and a good chunk of them are...\" Lily trailed off and cocked her head. \"Okay, that time I felt it.\"\n\n\"What would make the ground rumble?\" Dana knelt down and put her ear to the floor. There was a steady hum punctuated with loud clicks. She immediately regretted not doing this earlier.\n\n\"Oh shit, the cube!\" Lily grabbed the boxes closer to her and dug through them. \"The cube is going up to let someone in!\"\n\n\"Shouldn't we be going then?\"\n\n\"We've got half an hour for the cube to go up, and half an hour for it to come back. I'm more worried about sneaking past whoever is coming down once we\u2014aha!\" Lily ripped the lid off of a box and stuck her hand inside. When she pulled it out, she held a small cloth sack. \"I did it! I found your fucking marbles!\"\n\n\"C'mon, let's go!\" Dana was already moving into the hall and Lily was close behind. They only made it a few feet when one of the other doors swung open behind them.\n\nLily pushed Dana against the nearest door, then swiped the key card through the reader and followed her inside when the door opened. The room was dark, but the lights came on automatically once they were inside. Unlike the previous lab, it was almost completely empty with a series of diagnostic devices set up around the perimeter of the room.\n\nIt was what was in the middle of the room that caught Dana's attention.\n\n\"Fuck, fuck, fuck...\" Lily whispered, her ear to the door. She sat there for another minute, then looked over at Dana. \"I don't think they saw us. We should be good to go.\"\n\n\"Lily? What am I looking at?\"\n\nIn the center of the room was a motorcycle that had been twisted like a pretzel. Parts of it had been dismantled and were strewn around the room with bits of rock and rust twisted up in the metal, and it could have been any other motorcycle in the world if not for the fact that she had spent an entire year restoring it.\n\n\"Huh?\" The succubus looked at the bike. \"You're looking at a hot mess is what you're looking at. C'mon, let's go!\"\n\nDana stepped toward the wreck, her hands on her chest. There was no mistaking it, this was Alex's bike. She knelt down and touched the cold metal with her fingers, the chrome riddled with scratches. \"This is my bike, Lily. How is it down here?\"\n\n\"It can't be your bike. We parked the bike on the way here, remember? It's not like they grabbed it and beat us down here, don't be ridicul\u2014\" the door opened and a man and a woman wearing glasses walked in. The man held a clipboard and the woman had a cup of coffee, and everybody froze when they saw each other.\n\nDana gave a casual wave. After all, she was supposed to be here. \"Evening.\"\n\n\"Oh, didn't expect to see anybody,\" the man said, then switched the clipboard to his left hand. \"Brother Bastien.\" He extended his right hand for Lily to shake it.\n\n\"Tell me about this bike,\" Lily said in her haughtiest tone while shaking his hand. The woman looked at Bastien, who just shrugged.\n\n\"We're not sure. Turned up about a week ago, down by the observation platform. Nobody knows how it got there, and\u2014\" he dropped his clipboard when Lily's tail struck the woman, and almost had his free hand in his own pocket before she got him next. Both of them slumped to the floor, unmoving.\n\n\"A week?\" Dana asked. \"How has it been here for a week?\"\n\n\"How the fuck should I know?\" Lily read Bastien's dreams for a couple of minutes. \"Shit. These two were part of a team of five, but they're here early on account of a pre-research booty call. We need to go, right now.\"\n\nDana beat Lily to the door and they ran into the front lobby together. On the monitors, she could see a small cluster of cars parked near the edge of the pit, and there was a phone at the desk that rang incessantly.\n\n\"Fuck me, fuck me, fuck me...hello?\" Lily's voice was now that of the desk guard. \"Yes, Master Cyrus. Was helping move something heavy...yes, I will put everyone on full alert, see you shortly.\" She hung up the phone and looked at Dana with dread in her eyes. \n\n\"Bad news?\" Dana asked.\n\n\"Apparently we were followed.\" Lily turned to look at the monitors. Though there were plenty of cars, nobody was by them, which meant their occupants were likely on their way. \"And even better, Cyrus was calling me from a phone by the loading dock and is headed this way right now in the cube.\"\n\n\"I thought we had almost an hour?\"\n\n\"We did.\" Lily was now looking through the drawers. \"But what I thought was the cube going up was the cube going back. They were right behind us on the way in.\"\n\n\"So, what are we going to do?\"\n\nShe looked at Dana and then over at the console. Lily tapped her hands on the desk, then looked at the guard on the floor. A grin broke across her face.\n\n\"Fuck me, I've got an idea so crazy it might work.\"\n\n<center>\ud83c\udfcd\ufe0f\ud83c\udfcd\ufe0f\ud83c\udfcd\ufe0f</center>\n\nCyrus sat on the hood of his car, his wand pointed at the motorcycle they had found parked along one of the side roads on the way in. Tasia and a few other Knights stood nearby it, their swords drawn just in case. The motorcycle was chained to a plate in the floor of the cube, and the cube was busy moving down the long hallway on ethereal gears. Ordinarily, they would have left the town car behind, but he now suspected that the succubus had gotten in somehow, so had stashed extra magical items in the car in preparation for whatever awaited them.\n\nHe touched the breast of his shirt, feeling the cold, hard metal of the amulet he wore beneath it. It had been an overnight gift from the Council, and if he was going to end up in another one-on-one with the succubus, at least he was now far better prepared.\n\nAmida sat next to Cyrus, his legs crossed and his eyes closed. In his hands, the necklace that Cyrus had given him was floating horizontally, as if being tugged forward.\n\n\"She's down here,\" Cyrus said, his suspicions confirmed.\n\nAfter Fort Collins, they had been able to track the succubus north, but then she had vanished, only to reappear somewhere on the East Coast. They had lost several hours heading east, and were on their way to the airport when she headed back into Montana on what Cyrus had assumed was a plane. Clearly full of some tricks, the last thing he had expected was for her to come here.\n\n\"Do you think she came for the Dragon Seed?\" Amida asked. He opened his eyes and the necklace became inert once more.\n\n\"If she did, she will be sorely disappointed.\" As of now, it was only presumed that the Dragon's Seed had been briefly available at Unearthly Delights. If it had been found, he would have taken it straight to the Council. An object that powerful could never be allowed to fall into human hands, and he was fairly certain that it already had.\n\nHowever, if the two had been tracking the seed, everything now made sense. While the succubus would have no use for it, the witch who owned her could do quite a bit.\n\n\"Coming up on the dorms,\" Tasia announced.\n\nThe cube was a large transport device capable of carrying tremendous loads, and a member of the Order controlled it with a series of levers up front.\n\n\"Any movement?\" Cyrus asked, referring to the bike. He was fairly certain that the blonde had cast an enchantment on it, but wasn't taking any chances.\n\nTasia shook her head.\n\nThe door for the dorms became visible around the curve of the tunnel, and he could see a couple of women waiting for them. One looked vaguely familiar with dark hair and her sword unfolded, and the other wore a lab coat and dark glasses. Likely he had interrupted any research that was going on down here.\n\nThe Knight waved and then stepped inside the door, leaving the researcher outside. The cube slowed its approach as the man at the controls pulled the levers into neutral, eventually coming to a stop.\n\nThe researcher stepped forth to greet them. Her hair was swept back into a tight bun and she held a clipboard.\n\n\"Master Cyrus,\" she said, then looked across the party. Her eyes stopped on the motorcycle and she froze in place. Eventually she looked at him with piercing blue eyes. \"I hear we have an intruder?\"\n\n\"We do.\" He slid off the hood of the car. \"I'm sure that you were working on something important, but we need all hands on deck. We went ahead and notified our people in Butte to keep an eye out, but we were able to track her here.\"\n\n\"What are we dealing with?\" she asked. \"And what's with the bike?\"\n\n\"Belongs to a witch,\" Tasia said. \"That's part of how we know they're down here.\"\n\n\"Oh.\" The researcher tucked her clipboard away under one arm. \"So, you think they've come down here because of the bike?\"\n\nThe door opened up and the Knight came back out, followed by a man in a dark sweater who looked like he had just woken up.\n\n\"Sorry about the delay, Master Cyrus,\" the woman began. \"The dorm is moving a little slow. We've been researching some crazy stuff which means long hours.\"\n\nCyrus nodded in understanding. He had been part of similar operations before and knew it was easy to lose track of time. \"Here, let's head inside and I'll brief you.\"\n\nTasia and Amida went ahead of him, and the Knight hesitated before sheathing her sword and pushing the man who had just come out back in. They all gathered together in the lobby with the researcher bringing up the rear. Tasia immediately went to the monitors to look them over.\n\n\"Did anybody come through here recently?\" Cyrus asked. \"Anybody who went out to check a storage room or one of the patrols?\"\n\n\"No, sir,\" said the man who had taken his position behind the counter. \"It's been a really long week and tonight was the first chance for most of us to catch up on our sleep.\"\n\n\"Oh? Long how?\" Cyrus looked past the man toward the door to the dorms. He was surprised that more people hadn't shown up yet.\n\n\"We had a potential break-in a week ago,\" the man explained. \"There was evidence we had been infiltrated, but none of the storage areas were breached and all personnel have been accounted for. We even had someone come up from town to conduct an internal affairs review, just in case. Between looking into the break-in and dealing with that, we've also had a spike in appearances of the Horror, which means we've had to go on a full lockdown several times.\"\n\n\"The horror?\" Amida asked.\n\nThe researcher who had let them in tilted her head at this.\n\nSomething was off down here, but Cyrus turned his attention to the man at the desk.\n\n\"It's what we call...well, It.\" He pointed at the bands of light near the monitors. \"They've been going off like crazy ever since the break-in. We even found a busted-up motorcycle down by the research platform.\"\n\n\"A motorcycle?\" Tasia asked. Cyrus, too, was immediately wary. He looked toward the door and thought of the bike currently chained down. It couldn't be a mere coincidence, could it? Alarm bells now rang in his head, but he couldn't figure out which direction they should be running as a result.\n\n\"Yeah, I can show you if you want.\" He patted his pockets, his face reflecting a sense of panic.\n\n\"Oh, here,\" the Knight said, then knelt down by the desk to pick up a card from beneath it. \"You must have dropped it.\"\n\nTasia let out a disgusted grunt and allowed the man to open the door for her, then followed him inside.\n\n\"The motorcycle that was found looks like it went through a tornado,\" the researcher said, causing the Knight to nod. \"So, you were saying that you could track the succubus?\"\n\n\"Yes. In fact, here.\" He turned to Amida. \"Please.\"\n\nAmida winced and held out the necklace. He heard the Knight let out a gasp and she touched her throat.\n\n\"Problem, sister?\" Amida asked.\n\n\"Just startled is all. I had one just like it, once.\" She waved her hand dismissively. \"Just a piece of costume jewelry I needed for something undercover.\"\n\nBrother Amida shrugged and closed his eyes. The necklace shuddered and started to swing from side to side like a pendulum. Every time it swung, it crept a little bit higher, and it appeared to be pointing to the dormitory that was built slightly above the research pod.\n\n\"It looks like she may already be inside,\" Cyrus said, then pulled his wand from his pocket. Was that why nobody else had come down? If so, they could already be dead.\n\nShit.\n\n\"Here, let's head in and check it out,\" said the Knight as she pushed the door open and stepped aside. Amida's face was a mask of concentration, and the unsteady necklace went rigid.\n\nIt was pointing directly at the Knight.\n\nCyrus realized what had been nagging at him since he got here. The duplicity was so simple, he hated himself for falling for it. He raised his wand, summoning the magic within it to blast her back to hell when he remembered that the succubus hadn't been alone when she came out to greet them.\n\n\"The witch\u2014\" he shrieked, but the researcher, who must be the witch in disguise, was already pushing his arm away as the magic blasted free of the wand. A ball of holy light tore down the hallway, scorching the walls and floor until it splashed against the distant doorway. Amida's eyes were now open, and he stuck his free hand in his pocket, but the succubus was faster.\n\nHer stinger appeared and struck like a snake, hitting Amida in the chest hard enough that he led out a grunt before falling forward into her arms.\n\n\"Chucklebunny, mother fucker,\" she sneered and then threw the mage into Cyrus. The two of them fell to the ground, and Cyrus heard a door down the hallway open up. The witch crouched down over Cyrus and covered his mouth with her hand to keep him from talking.\n\n\"Amida!\" Tasia cried from the hallway. Cyrus couldn't see her.\n\n\"The succubus in the dorms!\" The succubus shouted using Amida's voice from around the door. \"Master Cyrus is down!\"\n\nNO! He needed to free his mouth to call to Tasia, so he tried to bite the witch. Her eyes widened and she grabbed his chin with her other hand, twisting his jaw about to force his mouth closed again. She was surprisingly strong.",
        "\"Seriously, don't. For your sake.\"\n\nHe expected to see anger or delight written across her face, but if he was going to pick an emotion, she seemed more worried than anything else.\n\nHe fought to get up, but she held him in place. The succubus transformed into Tasia and came over to him.\n\nWith a wide grin, she leered down at him with Tasia's face, her tail coiling up to strike.\n\n\"Night, night, Master Cyrus.\" When her tail came down to sting him, there was a flash of light and she was knocked on her ass.\n\nThrough the witch's hands, he chuckled. As long as he wore the amulet, she couldn't touch him, not directly, and she had to use the desk to stand. Her tail had been reduced to a smoky mess that was slowly reforming behind her. Growling, she cracked her knuckles.\n\n\"Watch your hands,\" the succubus commanded as she stepped forward, and the witch let go. Cyrus opened his mouth to yell, but the succubus kicked him in the jaw hard enough that his head whipped around, knocking him for a loop.\n\nStunned, all he could do was try to open his eyes. He felt disconnected from his body, and knew that the only reason he was even still conscious was because of the defensive magic that protected him.\n\nThe front door of the lobby opened and filled with footsteps.\n\n\"She's in the dorms,\" the succubus said in Tasia's voice. \"She looked like me when she went, so be careful.\"\n\nHe heard mutters and the sounds of swords being drawn.\n\n\"I'll protect Cyrus and Amida, you all need to go help the others before she changes again!\" said the succubus. There were murmurs of assent and he heard the room empty. He prayed that only part of the team had come in, per protocol.\n\n\"Next phase?\" asked the witch.\n\n\"Almost.\" He felt the succubus lean over him and could feel the heat of her breath on his cheek. \"One day, I will catch you sleeping on the job,\" she warned, and then they left. He groaned in agony as the blinding light of the room filled his vision once more. His limbs felt like they weighed a thousand pounds and tingled as if full of sand.\n\nOut in the big hallway, he heard someone yell, followed by the sound of gunfire and a motorcycle starting, followed by screeching rubber. Seconds later, the town car's engine roared to life, and he heard the peeling of tires on concrete once more.\n\nDown the hall towards the dorm, he heard yells of confusion. The succubus had done it again, and he was even more disappointed in himself. They had fallen for such a simple ruse and then been defeated by little more than a manipulation of their own confusion. Groaning, he turned his head toward the door and waited, trying to hold in his dinner as waves of nausea rolled over him.\n\nSomeone else from his team arrived and came to assist him. Other members of his team fled the corridor and he could hear shouts of rage from Tasia.\n\n\"Stop them,\" Cyrus grunted, then stood with some help. \"That's the real Tasia, the succubus is already gone.\" By the time the fight in the hallway stopped, Tasia had injured several of her own comrades, and reappeared in the lobby with blood running down her face.\n\n\"Where is she?\" Tasia snarled, then ran for the door. Cyrus caught a flicker of motion out of the corner of his eye and grabbed the Knight by her shirt collar before she could go any further. The fabric tore, and she whipped around, eyes wide and nostrils flaring.\n\n\"Master Cyrus?\" she asked, but he kept his grip on her. Everyone in the room had turned to look at the monitor bank, and now she did, too.\n\nThe bands of light were all flickering.\n\n<center>\ud83c\udfcd\ufe0f\ud83c\udfcd\ufe0f\ud83c\udfcd\ufe0f</center>\n\n\"Act like you belong.\" It had been Lily's final piece of advice to Dana as the steady clacking of the cube had announced the arrival of Cyrus and his men.\n\nDana had thought it was a stupid plan, but trusted the succubus when it came to these things. People often saw what they wanted to see when confronted with new information, and the ruse that they belonged to the research staff had been an easy one to perpetuate.\n\nThey had both watched as the cube moved toward them on giant, spectral gears that glowed red hot. Once the cube came to a complete stop, the gears had faded away like the dying light of a candle, allowing the cube to rest on the ground between the large depressions. It was a sight to behold, but Dana kept her excitement in check.\n\nAfter all, she belonged, had seen it dozens of times already, definitely wasn't cool anymore.\n\nWhen Cyrus had looked at her and then away without a second thought, she said a silent apology to anybody who had ever been fooled by Clark Kent's glasses. By the time they all had walked into the lobby of the research area, Lily had woken up the guard using their previous guise as members of Master Cyrus's team. Naturally, now that Cyrus himself was here, that lie was even easier to accept.\n\nNeither group questioned their appearance or allegiance, and they would have been able to simply walk away as planned if not for the fact that they were being tracked by Lily's necklace. It had been a surprise to see such a thing being used as a magic compass, but the succubus was good at improv and had been able to keep her identity a secret for just a few more seconds.\n\nAfter knocking out Cyrus and sending the rest of his team down the hallway, she had expected their exit to be an easy one.\n\nNow, however, they stood outside with a small team of people from the Order who still stood guard around Tick Tock. Apparently, they all hadn't come rushing in, and once more, Dana was forced to rely on Lily's natural instincts.\n\nLily, still in Tasia's form, took command right away. \"Keep eyes on the door, the succubus is in the dorms, and she already got Master Cyrus.\" She was moving toward them at a brisk, but unthreatening pace, and Dana followed.\n\nWands and swords came out, but one of the men drew a pistol from his belt.\n\n\"A gun? You can't use a gun on a succubus,\" Lily said, now mere feet from the lip of the cube.\n\n\"But the bullets are silver,\" said the Knight.\n\n\"That's for werewolves,\" she replied, stepping past the rim and into the cube. The floor burst into flames, and a glowing rune formed all about her. She screamed and stumbled forward, catching herself on the edge of the town car. Her skin ignited, and white fire crawled all over her body, burning away Tasia and leaving Lily behind.\n\nEverybody hollered and the man with the gun fired. The bullet hit Lily in the chest and knocked her down, and Dana immediately raised her hands in surrender. It took a few moments to realize that nobody was even looking at her anymore, they were all focused on the flaming demon standing in the middle of the cube.\n\nLooking down, she contemplated the rune on the floor of the cube. It looked to be painted on, so she knelt down and scraped at it with her fingernails.\n\nWhen the Order closed in on Lily, she leapt from the ground and clotheslined a woman with her burning tail, then grabbed a man by the throat and tossed him into his buddy. Large horns jutted from her head, and her visage slipped, revealing something far more sinister beneath her human form.\n\nAs the melee continued, magic wands went off, sending magic in every direction, most of it bouncing off of the succubus without any noticeable impact. Lily was laughing maniacally now, and Dana finished scraping a gap in the paint just as she put a guy's head through the windshield of the car.\n\nThe flames immediately faded, and Lily let out a roar that cowed the remaining men and women of the Order.\n\n\"C'mon,\" she said as she grabbed one of the chains holding the bike in place and snapped it apart with her hands. The engine roared to life and Dana ran to the bike and hopped on just in time to see Lily take a blast of white light to the chest. The succubus fell, and Dana throttled up the bike and shot forward. She leaned down and grabbed Lily by the hand and dragged her down the tunnel, figuring a little road rash wouldn't hurt her.\n\nBehind her, she heard the gun again, and then her thoughts went foggy. Her whole body tightened up, and she would have fallen off the bike if Tick Tock hadn't extended an arm to support her. Her eyelids fluttered as random thoughts bounced around her head like confetti, slowly piecing themselves back together into images that she recognized.\n\nIt was the time she had smashed her hand changing a tire with her dad.\n\nNow it was when she had played softball as a teen, standing in the outfield and waiting for a sloppy pop fly.\n\nNow she was with Alex again, her beautiful Alex. She was on her back with her head in Alex's lap, and her girlfriend was reading a book of poems while stroking Dana's hair. They were on campus, just enjoying a sunny afternoon and...\n\nNow Alex was dead, and Dana had her face pressed against the glass of the church. She hadn't been allowed to attend the ceremony, and the people inside looked like tiny, shriveled dolls that wore paper dresses.\n\n\"Dana!\" It was Lily, and she was screaming. But she couldn't see her anywhere, there was too much sound in the way.\n\nSound? No, not sound. Light? The world became a pinprick and she gagged. The bike wobbled dangerously and she tried to grab her head, but her arms weren't working. Her mouth tasted like dust and oatmeal, and then she felt something massive work its way down her sinuses. The pressure built until there was a loud pop.\n\nShe was back in the tunnel, and going almost sixty on the bike. Up ahead was a wall, the end of the journey, and she slammed on the brakes, hoping she could stop in time.\n\nThe bike turned sideways and thick metal arms emerged from the engine block to keep them from falling over. Dana still had a death grip on Lily, who was leaving a trail of smoke behind her where the ground met her skin. They slid to an inevitable stop before a solitary door that had been painted red.\n\nBehind her, she could hear a car engine.\n\n\"What the fuck?\" Lily demanded. \"You needed to go the other way, what the hell is wrong with you?\"\n\n\"I... I don't...\" She coughed, then gagged, then spat something out. It struck the ground with metallic clang, and Lily, back in her normal form and standing in a cloud of wispy, dark smoke, knelt to pick it up. She wiped it clean and held it out.\n\nIt was a bullet.\n\n\"That was...in my head?\" Dana put a hand to the back of her skull. Sure enough, she could feel a slight divot in her scalp, much like a baby's soft spot recently covered over. Of all the things that had happened so far, the idea of an actual bullet rattling around in her head filled her with dread. If not for her ability to regenerate, that would have been it, the absolute end of who she was.\n\n\"Guess I can't blame you too much. Apparently, you had something on your mind.\" Lily pocketed the bullet and looked over her shoulder. \"They're coming and we don't have the element of surprise anymore.\"\n\nDana looked at the red door. She didn't even have to ask what it was. \"I guess we go inside?\"\n\n\"Why die a normal death when you can get eaten by an extra-dimensional being, right?\" Lily held open the door and Dana pushed the bike through. Once inside, she saw that the room was lit only by a set of red lights up above, and they were standing on a massive catwalk that hovered inside of a giant, black bubble.\n\n\"What am I looking at?\" Dana asked. Lily shut the door behind them and then walked to the edge of the catwalk.\n\n\"Currently, nothing.\" She scanned the edges of the room. \"We're at the bottom of the pit.\"\n\n\"We are? It's all black in here.\"\n\n\"That's the water. We're inside a giant, glass bubble. If you look by the edges, you can see how thick the\u2014\" Something struck the glass, and both of them went quiet.\n\nIt was a thick, fleshy appendage that shifted amorphously before her, lit solely by the waterproof flashlight held by dozens of fingers along its surface. Suckers that were also mouths and somehow eyes regarded them from the other side of the glass, and it felt like staring into a psychic strobe light. The anomaly hurt Dana's eyes to look at it. Pain built inside her head until she looked away, but Lily kept watching in fascination. Even now, the memory of what she had seen was already gone.\n\n\"Wow,\" Lily whispered. \"It's so...beautiful.\"\n\n\"Why don't you offer it a blowjob and see if it will get us out of here?\" Dana suggested.\n\nThrough the door, she could now hear the engine of the town car. The Order was close behind, and there wasn't anywhere to go in this room. She supposed they could try to burst the bubble and flood the place with toxic water, but she could almost sense the presence just on the other side. It was a sensation similar to the high frequency buzz of an old tube television, just on the edge of perception.\n\n\"Oh, I can feel it,\" Lily continued, and she hopped onto the railing, precariously balanced. \"It really is sleeping.\"\n\n\"Not sure how that helps us,\" Dana said, then looked at the door. The car had screeched to a halt. \"Should we block the door, or...?\"\n\nThe railing creaked, and Dana looked down through the holes in the observation deck to see that the succubus was now standing on the glass, her fingers pressed against the glass.\n\n\"I can almost see its dreams,\" she said, her voice filled with awe. Her tail was whipping around in excitement, and she was pushing her whole body against the bubble.\n\n\"Lily. Lily!\" Dana couldn't get the succubus' attention, and she could hear people on the other side of the door. Frantic, she looked over at the motorcycle. \"Tick Tock, we're gonna need something sharp, are you ready?\"\n\nThe motorcycle rumbled, and when Dana blinked, she heard metal parts shift around inside it. Tick Tock could only change when unobserved, so now was the best time to ready for a fight.\n\n\"Oh, there you are,\" Lily cooed, and the temperature in the room fluctuated wildly. \"What are you dreaming of? Maybe something hungry with lots of teeth? C'mon, show me.\"\n\nFootsteps had stopped on the other side of the door, and Dana imagined that an attack was being prepared. Whispered tones went silent, and she could just make out shadows beneath the door.\n\n\"I can see...\" The succubus went silent, then let out a scream. Dana's equilibrium shifted and she fell straight up into the air, along with Tick Tock. They bounced against the ceiling and fell down again, crashing into the observation deck. Whispers filled the room, somehow audible over the sound of Lily's screams, and a dark shape emerged from the shadows around the room and pooled together in the air before them.\n\nWhen they smashed into the floor, Dana heard a crash and then the door opened. Members of the Order rushed in and came to a halt, their eyes on something behind and above her.\n\nThe motorcycle roared to life, and two long metallic arms emerged, each one tipped with a point like a spear. She expected to see the mimic attack the Order, but instead, it stabbed her in the thigh and Lily in the gut, then carried them through the red door, knocking over a mage on the way through. The whispers were temporarily chased away by the roar of the engine, and Dana briefly saw a moment of panic on the face of a Knight who was holding up his sword in self-defense.\n\nOne second, he was a young man, the next, easily in his nineties. Before Dana could close her eyes, she watched as his skull inverted, his bones now on the outside. Screams of panic came from everywhere at once, and the motorcycle caught on something, its tires screeching against the ground. The hallway rippled around them as if it was nothing more than a reflection in a still pond, and Dana was caught up in the sudden warping of the world around her. That itchiness was in her head now, and had become a tiny voice speaking to her through the static of reality.\n\nLook at me, it whispered in hundreds of different voices.\n\nThe engine of the bike stalled, the absence of sound followed by a loud bang. The world went dark as Dana and Lily were pulled into a tight space that clattered along the ground. Tick Tock had fled the motorcycle and was now in the shape of a wardrobe that could barely contain the two of them.\n\n\"I'm sorry I'm sorry I'm sorry,\" Lily whispered at a frantic pace before switching to another language. Her litany was punctuated by screams, and a fiery halo appeared over her head, allowing Dana to see that the succubus was rapidly changing shapes, her body now twisted around like a pretzel. \"Wake me up, wake me up, wake me up!\"\n\nThrough Tick Tock's exterior, she could hear the whispers approaching and, remembering what Lily had told her before, pulled the bag of marbles out of her pocket. She felt around until she found a couple of good-sized ones and then jammed them into her ears. There was pressure as she shoved them deeper, and then she covered them with her hands.\n\nThe last thing she heard was screams of terror outside the wardrobe, and she closed her eyes. Tick Tock was picked up and tossed about, but clearly was capable of taking a beating. Dana's world became nothing more than darkness and dread, and she lost track of time. Lily bounced around inside the mimic with her, but Tick Tock's double doors were now gone, the inside of the wardrobe now a single piece of wood.\n\nShe didn't know how much time had passed, but eventually the doors opened and both of them fell out. She kept her eyes closed, afraid of what an eternity of madness would feel like, when she felt a tap on her knee.\n\nWary, she opened one of her eyes just a slit. The tunnel was completely empty, and Tick Tock was now a large sign with a message written on it.\n\nSAFE NOW\n\n\"Where...where did the others go?\" She looked around the tunnel and saw that even the town car was gone. Puzzled, she stood and attempted to remove the marbles from her ears. Remembering that they had the property of switching places, she found a smaller marble and tapped it against the one lodged in her left ear. The marbles traded places, and the small one rolled out of her ear canal, allowing her to hear again. She repeated the process with her right ear, and was surprised that she could only hear Lily's repeated mutterings. The marbles went back in the bag and into her pocket.\n\nIt was only after looking around again that she saw the bike. It had been twisted about and was embedded in the bedrock of the wall as if it had only partially phased through. Sorrow flooded her heart as she approached it, her hands reaching up to caress the formerly bright chrome. This was the bike that Alex had died on, and even after a year of restoring it, here it was again, destined to remain a wreck.\n\nEven now, she recognized the twisted shapes of what she had seen in the research room, her mind digesting the ramifications. Looking over her shoulder at Lily, she saw that the succubus now sat in a wooden chair, her legs pulled up to her chest. The chairs legs were already moving, and they walked back up the tunnel together.\n\nStopping only a couple of times for fear of being discovered, they eventually passed the research station. There was no sign of Cyrus' men, nor of the cube. It wasn't until eventually reaching the dock that she saw it sitting there, ready to depart for the surface.\n\nPraying that it wouldn't alert anybody, she found out how to open the device and led Lily inside. The faint sound of a phone ringing came from the other side of the tunnel access door, but Dana knew better than to answer. Undoubtedly, the Order would send someone to investigate, so she closed the cube up tight from the inside. The door slid shut and seemed to melt into itself, becoming one continuous surface, the inside lit by glowing panels similar to the ones in the tunnel. The lever mechanism was simple enough to operate, and they rode up together.\n\nOnce above the lake, Lily had calmed down a little bit, but remained silent as they departed the cube. It smelled like fresh rain, and the skies above were cloudy, giving them ample cover.",
        "With a little prodding, she was able to convince the succubus to take to the skies, all while she held Tick Tock in suitcase form. Down below, she spotted a pair of headlights as a car descended to where the cube was located, and she let out a breath of relief. Once safely away from the Berkeley Pit, they glided in toward Butte and landed along the edges of a suburb.\n\nUpon landing, Dana pulled her cell phone out of a pocket on Tick Tock. The mimic had made a small storage compartment for her phone when they had dropped him off on that old dirt road by the pit. She had figured the lake would have destroyed it, and now she hoped that their fight in the pit hadn't damaged it.\n\nShe turned it on and waited for it to boot up and confirm her theory.\n\n\"Aladdin,\" Lily whispered, then held herself on the cold pavement and shivered. She was in the form of an Asian woman with long, beautiful hair that had a flower tucked behind her ear. Around her neck was the necklace she had taken back from the Order, clutched tightly in one fist. \"Don't do this to me, Aladdin.\"\n\n\"No fucking way,\" Dana whispered once her phone turned on and displayed the date.\n\nIt was eight days earlier!\n\nSomehow their exposure to the thing in the bottom of the pit had sent them back in time, but how? And to what end? Right now, they were stuck in the past, and she knew the Order would find her bike and dismantle it in their research center, only for her to find it eight days from now.\n\nShit.\n\n\"Lily. Hey.\" She sat down next to the succubus. \"It's eight days ago, Lily. We got the marbles and we got away, but somehow we went back in time.\"\n\n\"You lost your marbles,\" Lily replied in a child's voice. \"Not playing with a full deck, not enough crayons in the box, not the brightest bulb\u2014\"\n\n\"Lily!\" Dana slapped the succubus, rocking her head to one side. The succubus twitched and shifted into her original form.\n\n\"It's eight days ago, I need to know what to do!\" A plethora of ideas occurred to her, but she had watched too many bad time travel movies and knew that doing anything to change the past was an incredibly stupid thing to do.\n\nIf not for being dead, she would be having a small panic attack right now for so many reasons.\n\n\"Go...safe. Hide for...catch up.\" Lily's eyes were no longer acting in concert with one another. One looked up while the other stared down, and they were both different colors. \"Why? Why have you done this to me? The djinn will always have power over you, you know that, right? You could lose everything with just one wish.\"\n\nShit. The eldritch being in the Pit had scrambled the succubus. Now she was stuck in the past without any of her stuff and her dead girlfriend's bike had been destroyed. They needed to find somewhere to lay low, at least until they could catch up to when they had left.\n\n\"Wanna go home,\" Lily whined, then started to wail. \"Wanna go home, feel safe, good.\"\n\n\"We can't go home yet, it will change everything,\" Dana told her, then pulled Lily in for a hug, her mind reeling. In a week, the Order would try to track them, and she didn't know if their magic would pick them up in two places at once. Would that create a paradox? That was the one thing they needed to avoid at all costs. \"We need to go somewhere where their spells can't find us. Somewhere similar to the house. Do you know of someplace like that?\"\n\nLily's eyes rolled around some more and then locked on Dana. She moaned, then said something in another language.\n\n\"I didn't catch that,\" Dana replied. Maybe if they went home, they could sneak in to the greenhouse or something? Hunker down there for a few days until\u2014\n\n\"Oh...orange.\" Lily's face scrunched up, and her eyes burned like tiny coals in her head. \"Orange...oran...Oregon. Safe in...Oregon. Mike owns land there, protected.\"\n\n\"If you say so.\" She stood up and surveyed the area. Hopefully the succubus would be more lucid in a few hours, but in the meantime, they needed something a bit faster.\n\nThe neighborhood they were in looked nice, and more than a few of these cars looked like they would make a comfortable ride. She found a comfortable two-door sedan that was unlocked, and with a little help from Tick Tock, got the engine to turn over. She helped Lily inside and then buckled Tick Tock into the narrow backseat.\n\nShe drove out of the neighborhood with her headlights off, then headed for the highway.\n\n<center>\ud83c\udf32\ud83d\udd78\ufe0f\ud83c\udf32</center>\n\nI hope you enjoyed this chapter, because the story is about to take an interesting turn. If you're having fun reading this, don't forget to rate or comment, I do read them all (eventually).\n\nFor those of you who know where this is going, get excited, because we're about to see an old friend (or two).\n\nI hope you are all doing well, and that the fall is bringing you a bit of good luck. Please take care of yourselves and each other, and I will see you next time!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "chase scene",
        "conspiracy theories",
        "eldritch horrors",
        "heavy metal",
        "shapechanging",
        "shower sex with butt stuff",
        "succubus",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/dead-and-horny-ch-05"
}