{
    "title": "Having Fun with Dycke and Payne Ch. 14",
    "pages": [
        "68. The dresses are here.\n\nOn the fifteenth of August, Dycke received a phone call, from U.S. Customs, to advise him that six very large boxes had arrived from Paris, and were waiting to be picked up. The boxes were inspected and approved and all customs duties had been prepaid.\n\nDycke asked the agent, \"Would they happen to be dresses?\"\n\nThe officer said, \"Yes, very expensive dresses.\"\n\nDycke said, \"Thank you. I will have a truck there to pick up the boxes, shortly'.\"\n\nDycke called Payne and said, \"The dresses are here.\"\n\nPayne went wild on the other end of the phone. She started screaming, dancing, and yelling for her mother \"The dresses are here, the dresses are here, the dresses are here!\" \n\nDycke remembered something after he got off the phone. Where were the six seamstresses that were supposed to accompany the dresses?\n\nHe need not have worried. When he arrived at customs, there were six women, standing around the boxes, like bulldogs, waiting to attack anyone that came near them. When they saw Dycke approaching the boxes, they formed a wall, between him, and the boxes.\n\nDycke bowed his head to them and said, \"Ladies, Lord Jeffrey Whitbred sends you his complements.\"\n\nOnly one of the women spoke English. She spoke for the group and said, \"Thank you, monsieur.\"\n\nDycke replied, \"You must be very tired, after your long flight. Allow me to have one of my agents escort you to your hotel. Tomorrow you can begin work fitting our women. Here is a credit card for you to use while you are here. Feel free to purchase or indulge yourself in any pleasure you may desire. Our food may not be as good as you have in Paris, but we try our best.\"\n\n\"Thank you again, monsieur. I am sure you will make us most comfortable.\" \n\nDycke had Milton take the women, to the Marriott Hotel, which was one street, from the boutique, where the fittings would be done.\n\nThe boxes were delivered, and the owner, who had been advised of their arrival, in advance, was overwhelmed with the sheer volume of boxes. \n\nHe asked, \"Where am I supposed to put all of this?\"\n\nDycke asked him how many events he had for this coming week.\n\nThe owner said, \"None.\"\n\nDycke's said, \"How about next week?\"\n\nThe owner said, \"None.\"\n\nDycke smiled and said, \"Give me the keys to the store, and go on vacation for two weeks. Put a sign on the door saying, 'I have gone on vacation. I will be back after Labor Day.' I will pay for your vacation.\"\n\nThe owner smiled and said, \"That sounds fine to me.\"\n\nDycke assigned round-the-clock guards for the store, to make sure nothing happened to the gowns, until each woman took hers home.\n\nSix women came bursting through the front door, 30 minutes after Dycke sorted everything out. Payne and Fiona led the way screaming, \"Where are our dresses?\"\n\nDycke tried to calm them down. He explained to them, that the women, who came with the dresses, had gone to their hotel to rest. The dresses would be unpacked tomorrow and the fittings would begin then.\n\nPayne screamed at him, \"You have to be fucking with me.\"\n\nDycke said, \"Payne, you said no sex, until after we get married.\"\n\nPayne went at him, like the bulls at Pamplona.\n\nThis time, however, he was ready for her. He sidestepped her first move, tripped her, she fell to the floor, and he sat on top of her.\n\n\"Babe, you must remember what your mother told you, and how you must incorporate it, when you are going to fight. Until then, you are going to wind up on the floor, face down, with me sitting on top of you.\"\n\n\"Let me up, you bastard and I will show you what I have learned.\"\n\n\"I will let everyone leave. I will let you up, but I will remind you what I told you the last time we had a confrontation. There will be no holds barred. I will come at you, full force, with everything Bob and Marti have taught me, regardless of how much pain it may cause you. Are you sure you want that to happen?\"\n\nPayne rethought her options and said, \"No, I do not think so.\"\n\n\"What is your second choice?\"\n\n\"I will wait until tomorrow to see the dresses.\"\n\n\"I think that is a very wise decision. Give me your hand and let me help you up, but if you take a swing at me, all bets are off, and you are going down hard.\"\n\n\"Would I do that to you?\"\n\n\"I will quote you Payne, 'Every day of the week and twice on Thursdays.'\"\n\nDycke extended his hand, lifted her up, and kissed her lips, gently. He noticed the anger in her eyes and he said, \"Do you remember what I said about that look?\"\n\nThe look vanished from her eyes, and she said she was sorry.\n\nDycke went to Chad's office and put the names of all the women who were getting dresses into the M & M computer. It came out with a list of names and a time schedule for each of them to be at the boutique. Everyone received their appointment time, so there would not be a line outside the door for fittings. Everything went off like clockwork, except for one minor thing. The bridal gowns were not there. Panic resulted, and phone calls to Paris went unanswered. Phone calls to Lyons went unanswered. Dycke was getting ready to fly to Paris, when Suzette calmly walked into the boutique, followed by two women and two men pushing a large pallet. \n\nFiona looked at her, and nearly kissed her feet, when she saw the box behind her. \n\nSuzette asked, \"What is the problem here?\"\n\nFiona said, \"We could not find the wedding dresses. We could not contact you or anyone, in Lyon. We did not know what to do.\"\n\nSuzette laughed and said, \"Did anyone read the invoice inside the box number one?\"\n\n\"What invoice?\"\n\nSuzette said, \"Inside box number one, there is an invoice. It said that box number seven would be delivered late. It contains the wedding dresses, and it will be delivered personally, by me.\n\nThey looked at the stack of boxes. Box number one was at the bottom of the heap. It had yet to be opened, because none of the women's names, who had been fitted, had been in that particular box. Everyone looked at each other, in embarrassment, and laughed.\n\nDycke took Suzette aside, and reminded her not to mention his Lordship's name in front of anyone. It was a secret for a very special person. He asked her to remind the seamstresses not to mention it either, because he had let it slip once already.\n\nSuzette agreed, and began giving orders to her ladies.\n\nBy August 23rd, everyone had been fitted and dresses taken home, except for two people, and both of them were scarlet red, with anger. They had not even been allowed to see their dresses. Suzette tried to calm them down, and told them everything was well. Certain items were being placed on the dresses, after hours. It would be inappropriate for them to see the dresses, before they were completed. Bob had taken the precaution of taking the firing pin out of Fiona's gun, because she had threatened to shoot Suzette, if she heard one more excuse. On the 24th, finally, the phone call, finally, came for Payne to come in to be fitted. Fiona would not be denied the opportunity to see Payne's dress. She grabbed her mother and said, \"Dycke, if you get killed, while I am not here, it is Suzette's fault, not mine.\" They got into her car, and raced towards the boutique. She passed through a radar trap, on their way there, and she was pulled over for speeding. The officer had never heard such foul language, coming from such a beautiful woman.\n\nHe asked her for her driver's license and registration. \n\nBefore she opened her pocketbook, she said to the officer, \"The first thing you are going to see when I open my bag is my gun. I have the appropriate permits.\"\n\nThe officer put his hand on his weapon, and told Fiona to take her weapon out, slowly, and put it on the dashboard. After that, he wanted to see her permits. \n\nFiona did as she was told and handed all the information to the officer, in quick order.\n\n\"What is your hurry, ma'am?\"\n\n\"My wedding dress is ready, and we were in a hurry to see it.\"\n\n\"If you keep going 60mph, in a 35 mph zone, you may not live, to see your wedding day.\"\n\nFiona said, \"I know, but this is the first time I am getting married, and I lost my head.\"\n\nHe said to her, \"According to your permits, you are doing security work for Dycke Schneider. I am going to give you a warning this time. However, next time tell Mister Schneider, it will cost him double what he gave the PBA Widows and Orphans Fund, next year, if his security people use our streets, as a race course\"\n\n\"Does that boss of mine, keep any of his money for himself? I cannot find a charity he does not give to, or a person he has not helped. No one has a bad thing to say about him, except the bride's brother, Steve Temple, who has hated him since he lost the state finals, to Dycke.\"\n\nThe officer laughed and said, \"I remember reading about that in the papers. That should lead to a lot of family fun.\"\n\n\"You have no idea how much fun this guy can get you into, in one day.\"\n\nThe officer said, \"I would like to meet this guy one day.\"\n\n\"He is eighteen. Chances are you will meet him, at one time or another!\"\n\n\"Okay, miss, you get behind me and I will get you to the store, without any more tickets.\"\n\nPayne was just coming out in her wedding gown, when sirens came blaring to a stop, outside the front door of the shop. She had no idea what was going on, until she saw Fiona going over to the officer, kissing him and waving goodbye. Then Fiona and Alvena ran into the store, and stopped dead, in their tracks. Fiona said, \"Payne, you are gorgeous.\"\n\nPayne asked, \"Me, or my gown?\"\n\nFiona replied, \"Both! I cannot see your hair under your veil but the gown is extraordinary. You look like an angel sent from heaven. I have never seen anything like it. If my gown is half as beautiful as yours, I will be extremely pleased.\"\n\nSuzette came out of the back, fuming at Fiona's statement. \"What do you mean 'If it comes out 'half' as beautiful as Payne's gown? Your gown is going to be perfect in every way, just as Payne's gown, is perfect for her. Why do you think we work so hard, with every person we deal with: every measurement we take, with every fabric we try on you. How dare you insult us?\"\n\nFiona stood there in shock. She meant no insult. She was just complementing the work on Payne's dress. She said too Suzette, \"I meant no disrespect; I have never seen anything so beautiful in my life. I did not believe anything could look that good on me.\"\n\nSuzette said, \"Just because you dress, like a gorilla, does not mean you are not a woman. You wore a dress in Paris, and you wore shoes that complemented it. Your wedding dress will prove you are truly a beautiful woman, coming into her own. Now, if we could get your husband to grow a little, the pictures would be easier. However, like Charles with Diana, we can have him stand on a box.\" \n\nFiona burst into laughter, as did everyone else in the store.\n\nPayne asked, \"Is anyone going to pay attention to me?\"\n\nSuzette turned, walked around her once, adjusted one-button came back around to the front and said, \"You are done. Take off the dress and we will store it, until Friday.\"\n\nPayne said, \"What, that is it? Nothing needs to be done to the dress at all.\"\n\nSuzette asked her if she was unhappy, with anything on the dress.\n\nPayne said, \"No.\"\n\n\"Is it too long? Is it too short? Is it too wide? Is it too tight? What is wrong with it?\"\n\n\"Nothing.\"\n\n\"In that case, what would you like us to fix?\"\n\n\"My brain; because it seems to have stopped working.\"\n\nSuzette smiled and said, \"I do not think so. You are getting married Saturday, and you are a little nervous.\"\n\nFiona put your dress on. There are no mirrors in the back. Do not break your neck trying to see what you look like.\n\nMoments later, Payne came out in street clothes and waited for the arrival of Fiona. There were only females in store; with two guards outside, making sure that, no man came near the entrance. \n\nSuzette came out first, and stood by Payne and Alvena. Two seamstresses opened the curtains for Fiona to make her entrance. Alvena's hand went to her mouth when she saw Fiona in her dress. Fiona took her reaction wrong, and started to turn back, thinking it was ugly.\n\nAlvena ran to her and said, \"Fiona, you look ravishing. Bob will be carried away.\"\n\nFiona said, \"You really think so?\"\n\nHer mother took her hand and brought her to the mirrors so she could see for herself. Fiona's gown was very different from Payne's gown. Where Payne's gown was angelic and perfect for an eighteen-year-old girl, Fiona's gown was elegant and stately, perfect for a woman. She stood there, admiring the gown, not daring to move for fear the mirrors might break.\n\nSuzette did her walk around but did not touch gown once. She looked at Fiona and said, \"The gown is just like the woman inside it, 'perfect.'\n\nAlvena said to Fiona, \"Your father and brother are smiling down at you. They could not be happier, or more proud of you, than they are right now.\" \n\nThe two women hugged each other, at the memory of their lost loved ones, and tears filled their eyes. \n\nThe crying had to stop, before Fiona ruined her gown, so Marti and Gabby complimented her on the way she looked, and how beautiful her gown was on her. They told her she was going to be the most magnificent bride anyone had ever seen, and Southern Living would have a new cover girl next month.\n\nFiona could not take any more complements. Instead of making her happy, she broke down into tears. Tissues and hankies appeared from everywhere, trying to stem the tide of tears, and save the fabric of the gown. \n\nFiona could not remember crying as much as she had in the last few weeks. However, it felt good to let all the feeling and tension out, into the open.\n\n69. The Paperwork and Party Work\n\nDycke and Payne had taken care of their marriage license, with both sets of parents in attendance. Bob, Dycke, and Piker purposely put off getting Fiona her marriage license, until the Friday before Payne's wedding, when everything was in a state of confusion. They needed Fiona to sign so many documents; she would not care what she was signing, as long as she finished soon. \n\nWhen Piker joked, he might have to go to confession twice on his daughter's wedding day, because of the lies he had to tell to get Dycke and Payne married; he realized he would have to spend the entire day in the confessional, when he finished lying to Fiona.\n\nHe had her sign some legitimate forms: her application for citizenship, change of insurance, change of name on a driver's license, Application for Entrance into the Doctoral Program, request for transcripts, permanent change of address, changes of residence for gun permits and many others. With all the screaming and yelling going on, in the office, the phone's ringing off the hook, messages coming in from the florist, and the caterers, Fiona could not wait to finished signing the papers, and go to City Hall, with Bob, Marti, Gabby, and other agents as witnesses, to get their license. \n\nWhen they left the office, Dycke and Piker smiled, shook hands, sealed the admissions envelope, and handed it to the courier, who was waiting to take it to the Dean of Admissions, for his 'personal approval.' \n\nDycke and Piker had the perfect fall guy for this incident, 'Bob.' When Fiona asked how she was admitted to a program, without signing an application, or her signature, they were both going to point at Bob. It probably would not work for long, however it might give them a sufficient lead to keep ahead of Fiona, until they could get to a car.\n\nPiker thought about closing the office at noon, but instead he sent everyone home that wanted to go home. Piker, Dycke, and several male agents stayed with him, because they wanted no part in what was going on with the females, at their homes. Tomorrow was going to be a circus, and there was no sense being at one, a day early.\n\nAt 5:30 PM, Piker received a call from his wife, which he could have heard without the benefit of the telephone. Alletta asked, \"Where the fuck are you guys?\"\n\nPiker calmly said, \"In my office watching television.\"\n\nAlletta said, \"The rehearsal was supposed to start fifteen minutes ago.\"\n\nPiker yelled, \"Oh shit, we are dead. He threw down the phone and ran for the door, with four men following him, and asking what was happening.\"\n\nWhen they got to the church, there were thirty-five women looking at them, with daggers in their eyes. The only men at the church were Chad and Father Vincent. The priest was not sure if he was going to perform a funeral, before he was going to perform a wedding. \n\nFather Vincent performed a miracle, and moved everyone into place, in a matter of a few moments. Payne was not happy, with her father's tardiness, and told him if he were late tomorrow, she would go down the aisle, without him.\n\nUp at the front of the church, Dycke said to Steve, \"Do you have to stand so close?\"\n\nSteve replied, \"When I pull the trigger, I want to make sure I do not miss.\"\n\nFather Vincent ran everyone through their paces, twice, so they knew what to do the following day and dismissed them for them evening. It took thirty minutes and everyone was looking around for something else to do.\n\nDycke said, \"It is now time for the after rehearsal dinner party. I am going to take you all to Payne's favorite place. Milton, Wendy's for everyone!\" Dycke ran down the aisle, and out of the church, with a screaming horde of women after him.\n\nWhen everyone was outside screaming at him, Dycke, turned to his mother and said, \"Mom, where did you make the reservations?\"\n\nHis mother said, \"In honor of our children's wedding, we are going to have 'Pizza and egg creams for dinner.'\"\n\nHalf the people in the crowd who knew of the restaurant cheered, the other half asked, \"What is an egg cream?\"\n\n70. The Wedding Day\n\nThe forecast for Saturday was wonderful. The prediction was for a twenty percent chance of rain, with clear skies, calm winds, and a temperature in the low eighties. \n\nHowever, the sun did not rise into a blue sky, South Carolina skies, on Saturday morning, as expected. Outside nothing was visible, except rain, blowing, horizontally, in a 40 mile per hour gale. The National Weather Service missed the temperature, by a few degrees, also. Instead of the low eighties, at Charleston International Airport, it was fifty-one degrees. How much more money did NOAA want for another 'Weather Observation Satellite?'\n\nDycke was sound asleep, when his cell phone rang at 7:10 AM, and he heard Payne's voice screaming at him. \"Do something!\"\n\nDycke rubbed the sleep out of his eyes and said, \"Do something about what Payne?\"\n\n\"Look outside, you twerp.\"\n\nDycke looked outside his window, saw the weather, and thought for a moment. He said, \"Payne, go back to sleep, and do not worry about it. At 2:05 PM, it will stop raining and the sun will be shinning. Your shoes will not even get wet, on the way to the church.\"\n\nPayne looked at her and of the phone and said, \"Really, are you sure?\"\n\n\"I have never lied to you before, and I am not going to lie to you on the day we are getting married.\"\n\n\"Thank you, Dycke. You have made me feel so much better.\"\n\nDycke put his head under the pillow and said, \"Dear God, I need your help today. If you say 'No' I will be dead, soon, and I hope to see you this afternoon. If I do, it means I have just told a lie to the woman I love. Please forgive me, for the sin of lying, in advance.\"\n\nDuring the morning, the weather only got worse. There was street flooding and lightning all over the Charleston area. According to the Weather Channel, the rain was to last all day, because of freak weather condition that had occurred in the upper atmosphere. Dycke could not have cared less. All he wanted was the rain to stop in Charleston, by two o'clock this afternoon, or Payne would kill him by three. He prayed all morning for the miracle he needed to occur, by two o'clock this afternoon.",
        "Marti knocked on his door at eleven o'clock to wake him up, with bad news. She said, \"Dycke, the ground crew called, and said the plane was grounded because there is an electrical fault that they cannot find. If they cannot find it, before your departure time you will not be going anywhere. Plan to spend the night in the bridal suite. If the aircraft is not fixed by morning, we will have one sent up, by Gulfstream, and get you on your way.\n\nDycke went ballistic. He put on the best act of his life. He told Marti to get someone from Gulfstream up there, if she had to, to find that electrical fault, and get that airplane ready to fly that evening.\n\nMarti told him that she would try, but it was a Saturday, and Gulfstream was probably closed, for the weekend.\n\nStill irate, he slammed the door in Marti's face. As soon as he did, he broke into a smile, thinking his plan was working perfectly. What he did not know, was Marti was smiling on the other side of the door, also.\n\nShe said to herself, \"You little runt. You may be smart, but we have been in this business a lot longer than you have been alive. We know every trick in the book, and your little trick was so easy to pick up, Gary laughed when he saw and heard you planning it. We have a surprise waiting for you. You will not be happy, when we spring it on you.\"\n\nAt 1 PM, it was still pouring, and Payne started to dress. Alletta told her not to worry. They would cover her with plastic sheeting, and her dress would be fine.\n\nPayne told her mother not to bother. Dycke promised her the rain would stop by 2:05 PM.\n\nAlletta looked at Payne and told her that Dycke can do many things, but he could not control the weather.\n\n\"Mother, he promised me that it would stop raining. He has never lied to me before, and he will not lie to me this time. It is our wedding day, and he knows how important it is to me. I will be heartbroken if it rains, and my dress gets ruined on the way to the ceremony.\"\n\nAt 1:30 PM, guests started arriving at the church. They were seated by the groomsmen. None of the bridesmaids had yet arrived, because Payne told them not to leave, until she did.\n\nLimousines were stationed in front of houses, throughout the suburbs of Charleston, waiting for the women to depart. At two o'clock, the rain abated. The sun broke through the clouds, and brightened the sky to a vivid blue. At exactly 2:05 PM., the rain stopped. Dycke fell to his knees and thanked God, for the favor he desperately needed. He would live to get to the altar and get married to the woman he loved. He prayed to his maker, until his dad knocked on the door, and told him it was time to leave.\n\nPayne shouted with glee and looked at her mother and said, \"I told you so. Dycke promised, and he never breaks his promises to me. He told me it would stop raining, and it did. He loves me so much; he even made the sky turn blue. I could not live without him, mother, I hope you understand that now.\"\n\nAlletta looked at Payne and said, \"Any man that can change the weather for my daughter, deserves her more than I do. Enjoy your life with him, sweetheart. He will make you the happiest wife, and the most loving mother.\"\n\nPhone calls were made to tell the bridesmaids to leave for the church. Payne departed in time to arrive at the church, five minutes prior to the ceremony. As soon as, she was in the vestibule of the church, Father Vincent signaled the organist to start playing. The bridesmaids and groomsmen marched down the aisle and as promised, Jessica, Gail, Annabella, and Savannah led the procession. The matrons of honor and the maid of honor, Cynthia, were in position on the altar. Dycke was standing by the communion rail, with Steve, awaiting the arrival of his bride.\n\nPiker lowered his daughter's veil, took her arm, and said, \"I am not losing my daughter, I am gaining a son, that I love.\"\n\nThe Wedding March started, and they began the long walk down the aisle. One could hear a pin drop as the congregants looked at Payne and the most gorgeous gown, they had seen on a bride, in a very long time. She was a vision of angelic beauty, in her soft, flowing gown, and by the time she reached the altar, there was not a dry eye, in the house.\n\nEven Suzette, who had designed the gown, had a tear in her eye.\n\nPiker handed Payne to Dycke and said, \"If you do not take care of my little girl, the way you have in the past, I swear before God, in this Holy Sanctuary, I will make you shorter than you are.\"\n\nDycke and Steve started to laugh, and no one else except Father Vincent knew why.\n\nDycke said to his soon to be father-in-law, \"Put it into contract form, dad, and I will sign it, in blood.\"\n\nThis time, it was Piker's turn to laugh. He turned, and walked to his seat.\n\nAlletta asked him what all the laughing was about was.\n\nPiker said to her, \"It is a long story, and I will tell you about it, later.\"\n\nFather Vincent told those assembled, about the first time he met these two young people before him. He told them how devoted they were to each other, at that time. He had not expected this marriage to come so soon. He was pleased to see that they had decided to keep the bonds they had pledged to each other; on that day, they had their private and informal wedding. He congratulated the parents of these two wonderful young adults, for their faith in God, and for their faith in each other.\n\nThe ceremony continued for another twenty minutes, until Father Vincent said those magic words, \"I now pronounce you husband and wife. You may now kiss your bride.\"\n\nDycke lifted Payne's veil and kissed her chastely. They turned to face those assembled to see the wedding, which erupted into applause, for the new bride and groom.\n\nThe remainder of the afternoon for Dycke and Payne was a blur. They were greeted by so many people, if they were quizzed, they would have only remembered close relatives and friends. Dycke's nearly photographic memory failed him. \n\nPayne did not even try to remember any of the names of those she met. She had other things on her mind. Cynthia and she kept sneaking glances at each other during the entire affair.\n\nMarti came over to Dycke at 10 PM, and informed him that the aircraft had not been repaired. He would have to spend the night at the hotel. The ground crew would work through the night to find the fault, and repair it by morning.\n\nDycke nodded his head and leaned over to tell Payne the bad news. \n\nMarti could not help but smile, when she saw Payne shed a tear, when she heard the news. She said to Gabby, \"That girl should be an actress. You better get Aaron and change into your civilian clothes. The new aircraft is due here in an hour. I want you both on it, before Dycke and Payne realize that their game has been compromised. Do not forget to give my note to Dycke, when you are airborne. I know he will appreciate it.\"\n\nAfter dinner was over, Art Shell stood up and said, \"I guess you are wondering why your dinner plates have not been removed from the table. If you feel underneath your plate, you will find a sealed envelope. As you may or may not know, this month's Powerball Lottery is worth more than four hundred million dollars. The drawing was Thursday, and no one has come forward and claimed a winning ticket. We knew the exact amount of guests, we would have at this gathering, and I purchased that amount of tickets using the quick pick method. Not knowing which plate would go to which person, and not knowing if we would have a winning ticket, I am going to ask each of you to write these numbers on your envelope. Afterwards, open your envelope and see if they match. If they do, you are four hundred and some odd million dollars richer than you were a moment ago.\"\n\nEveryone in the room laughed and wrote down the numbers Art gave them.\n\nFrom around the room, people started saying, \"It is not me, and it is not me.\"\n\nUntil someone at the dais said, \"Oh shit, it is me.\"\n\nPayne shouted with glee, \"I knew it. Anyone who could stop the rain for me had to win the lottery.\"\n\nAll eyes turned towards Dycke, and everyone started to laugh and applaud.\n\nHis Uncle Turnquest yelled, \"It is only right, that the wealthiest man in this room, should become wealthier, by an act of God, and luck, on this wonderful day.\"\n\nSteve, who was sitting to Dycke's right, could not believe it. He yelled at Dycke, \"That should have been my plate, you bastard. I could have been as rich as you, you son of the bitch.\"\n\n\"Steve, I told you never to talk about my mother that way.\"\n\nDycke took his pen, signed the back of the card, and handed it to his new father-in-law. He said to Piker, \"Dad would you and Art look into this for me. What are the best options, for short and long-term taxes and investments, for Payne and me?\"\n\n\"Dycke, Monday morning we will inform the lottery commission that we have the winning ticket and we will submit it, after we get advice from a tax attorney. We will run it through M & M, and see what it says and compare it with the attorney and Art's knowledge of the tax code. We will go on from there.\"\n\nDycke said, with a smile on his face, \"Dad, do you think you will make me a billionaire, by the time I am nineteen?\"\n\nPiker laughed and said, \"If you keep winning lotteries, of this size, absolutely!\"\n\n71. To trick, or to be tricked\n\nBefore Payne and he left for the hotel, Dycke went to see his uncle, with Payne at his side.\n\n\"Uncle Turnquest, I would like to introduce you to my new bride, Payne.\"\n\nTurnquest rose and kissed Payne on both cheeks. He said to her, \"Young lady, you have made a wonderful choice, in a husband. Cherish him, as he cherishes you, and you will have a long and happy marriage.\"\n\nPayne kissed her new uncle, and told him that Dycke was her one and only love. He had never lied to her and she will never lie to him. They love each other so completely that nothing and no one will ever tear them apart.\n\nDycke introduced her to Lord Jeffrey and told her that he was a new business partner, never mentioning anything about the dresses.\n\nFiona had not been sitting at the dais. She and Bob were seated with a group of agents strategically placed at tables, in case of trouble. They were all on duty for this event, even though they were dressed in formal attire, for the wedding. She was kept away, from both of these men, so she would not recognize Lord Jeffrey. They wanted the surprise for her wedding day, to catch her totally off guard.\n\nDycke and Payne went back to the dais and announced that they were leaving on their honeymoon, and thanked everyone for coming. They asked them to stay and have a good time, for as long as they wished. He kissed Payne, one more time, to everyone's delight, and they proceeded to leave the building with Cynthia, Steve, and their security detail, in tow.\n\nThey arrived at the Marriott Hotel, and went directly to the bridal suite. Steve and Cynthia had the room next to them. Each suite had a balcony, which were separated by four feet and a three-foot high iron railing. As soon as both parties changed their clothes, Dycke went outside to help Cynthia over her railing, across the divide and into his suite. Steve did the same for Payne going the other way. Both men then switch sides, without any problem.\n\nSince Payne had already switched bags, the bags Steve and Cynthia brought to their room, were carrying Dycke and Payne's clothing. Payne told her brother to read the note in his suitcase and play the disc in his stereo loud enough for the guards to hear it. As soon as it started, she and Dycke would look out the door, sneak down the stairwell, and get a cab to the airport.\n\nSteve started his stereo, and it played the sounds of Dycke and Payne making love. Dycke opened the door to Steve's room and he heard one his agents say, \"My God, they are at it, already.\"\n\nThe other agent replied, \"What do you expect, it is their wedding night. More than likely, they will be at it, again, and again, and again.\"\n\nDycke smiled as the agents started reading their magazines. Payne slipped out the door carrying her suitcase, and Dycke carried his, closing the door, quietly.\n\nAs soon as he did, both agents grinned, stood up, went to the elevator, pressed the call button, and started downstairs. They waited for the newlyweds to exit the stairwell and followed them. They tailed Dycke and Payne as they got into a taxi, which was driven by an agent, they did not know. The two agents got into a waiting car, with two other agents, and followed the taxi, to the airport. The new G5 aircraft was waiting, in front of the hangar, with one engine running.\n\nPayne and Dycke were very excited to see the aircraft waiting for them. The taxi pulled up to the hanger, and Dycke paid the driver handsomely. The driver went to the rear of the taxi and attempted to open the trunk to retrieve the bags. The trunk would not open. This was all a ruse, to give the four agents in the following car, time to board the aircraft. \n\nFinally, the trunk popped open and the driver offered to carry the bags, to the aircraft. Dycke accepted the offer, took Payne's arm, and led her to the boarding ramp. The driver put the bags in to the aircraft, and closed and sealed the hatch. Then, unnoticed, she followed the couple up the boarding ramp and closed the aircrafts door.\n\nAs Dycke and Payne turned to go down the aisle to their seats, expecting to see an empty aircraft, six agents popped their heads up and yelled, \"Surprise!\" \n\nDycke grabbed Payne's arm, turned around, and wanted to flee the aircraft. He saw the taxi driver standing behind him and she said, \"We wanted to go to Disney World, also.\"\n\nDycke said, \"Shit!\" His shoulders slumped and he asked, \"How long has Marti known?\"\n\n\"Since the day you called Gulfstream about the new jet. Then you called to make reservations, at the Grand Floridian Hotel. Finally, you received an e-mail reply, which Gary intercepted, confirming the time, and date of your arrival. Three strikes and you are out in any ball game Dycke. In ours, it only takes 'ONE', and we do not let that happen. So sit down, enjoy the ride to Orlando and when we are in the air, we have the message for you, from the boss.\"\n\n\"I do not like the sound of that, at all,\" Payne said.\n\nAs they reached cruising altitude, the party began and food and champagne started flowing. However, the newlyweds were given soft drinks. Gabby walked up to Payne, smacked her on the back of her head, and said, \"You had better never try a stunt like this, again. If you do, I will take you over my knee and spank you until you are red.\"\n\nPayne smiled at her and said, \"Only Dycke is allowed to do that.\"\n\n\"Then I will find some other way to punish you, do you understand?\"\n\n\"Yes, Gabby, I understand.\"\n\n\"Payne, I do not think you do understand. If we lose a primary on assignment, it reflects on us as a group. When you no longer need us, we will look for another person, to protect. If that client looks at our resume and sees we have lost a primary, they will look to the next available agency, and we will have lost a valuable customer.\"\n\n\"I did not think of it that way, Gabby. I will make sure that Dycke understands it, as well as I do now. Thank you for explaining it to me.\"\n\nGabby handed Dycke Marti's letter. It was short and concise. \n\n\"Dycke, you are one dumb fuck. You know I am going to get even with you, for thinking you are smarter than we are. While you are enjoying your honeymoon, I would advise you to run every morning, because when you get back, you will be running your first marathon. We are going to run you into the wall, and we are going to enjoy every minute of it. Enjoy your honeymoon, you little runt. I know I will enjoy the morning after you come back. Cordially, Marti.\"\n\nDycke laughed!\"\n\nPayne asked him what up.\n\nDycke handed her the letter.\n\nPayne's reply was, \"Oh shit, you are in trouble.\"\n\nHe replied, \"No, not really.\"\n\nPayne looked at him, and decided that her husband had truly gone over 'to the dark side.'\n\n72. What are we supposed to do here all night?\n\nSteve walked around the opulent wedding suite, listening to the sounds of Dycke and his sister making love and said to Cynthia, \"What are we supposed to do here all night?\"\n\nCynthia replied, \"I do not know about you, but I am tired and I am going to get ready for bed.\"\n\nSteve started looking around for a place to bed down for the night, and decided that the couch looked comfortable enough. He took off his shoes and socks went to his bag, found a pair of his sleeping shorts, and went into the second bathroom to change. When he came out, he fluffed up one of the couch pillows, and laid his head on it. However, he knew he was going to need something to cover himself, because the room was cold. He went to the bedroom door and knocked on it, to make sure Cynthia was decent and he could walk in.\n\nCynthia said, \"Come in, Steve.\"\n\nSteve took a few steps into the room and stopped. Cynthia was standing there in a gorgeous sheer gown, which hid very little of her beauty.\n\nShe said, \"I have waited a long time for this day, Steve. Please be gentle with me. The last time was a nightmare, and I never believed I would do this again.\"\n\nSteve walked over to her, and handled her like the most delicate crystal. He kissed her softly and asked her if she was sure that she wanted it to be him.\n\nShe said, \"I am sure. You have waited for this day. You have not cheated. You have not looked for anyone else, since we started dating. I have seen all the girls looking at you, and you looking back at them. However, you have never strayed, and you have kept your promises to me.\"\n\nSteve took the little bows that held the gown onto her shoulders and untied them. It slipped from her body, and she was as naked as the day she was born. Steve said, \"Cynthia, you are the most beautiful woman I have ever seen.\"\n\n\"Steve, you do not have to lie to me. You have been with every cheerleader at our school and every other beautiful girl on campus. I am thrilled that you picked me to be faithful to and I could not be happier.\"\n\n\"Cynthia, I am not lying. The others had larger breasts or bigger butts, but your body is perfect. No man, in his right mind, could look at you, and resist you. You are perfect in every way a man could ever imagine.\"\n\nCynthia looked into Steve's eyes and realized he meant every word he was saying. She reached for his shorts and pushed them down his legs. He stepped out of them, and pushed them away with his foot. She reached for his penis, but Steve stopped her. \n\nHe said, \"You are not ready for that Cynthia. Let's make love and the rest will come along naturally.\" He picked her up, as if she was a child's toy, and laid her on the huge bed. He lay down beside her and they kissed, intimately, for the first time. They kissed for a long time, but when his hand touched her bare stomach, she froze.\n\nSteve kissed her and he said to her, \"Babe if you want me to stop, I will stop right now. Remember, I am not them. I will not hurt you; I am in love with you. I will try to erase all the bad memories locked up in your mind. It may not happen in one night, it may never happen. However, while you are with me, nothing bad will ever happen to you.\"\n\nCynthia cried and leaned into his shoulder and said to him, \"Steve, would you hold me, for little while, before we start.\"\n\n\"We can hold each other all night, if you would like. Tomorrow is another day, and we will see how you feel then.\" He wrapped her in his arms, and held her tight and he could feel her relax. He knew that the thought of sexual intimacy scared her to death. He could only hope that he could release her mind, from the horror of the rape that tormented her. He would try to erase them through tenderness and love. He could wait; he could wait for a very long time, because he had fallen in love, with this beautiful, fragile, young woman. They fell asleep holding each other throughout the night. ",
        "She was so tiny, Steve did not notice, that she had climbed on top of him, in the morning. He did notice that his normal morning erection felt very warm, and was being moved on, in a very slow and seductive manner. He opened one eye, then the other and tried to clear the cobwebs from his mind. When he did, he saw Cynthia riding on his hips, smiling down at him.\n\nShe said, \"Good morning, sleepy head. Your monster was awake, and I was very frightened of it. I decided to try it on for size, on my own terms. I did, and it fit, very snugly, but it fit. I hope you do not mind.\"\n\nSteve smiled at her and said, \"I would have liked to have been awake for this event, but as long as you are happy, I am happy. Come down here and kiss me.\"\n\n\"Steve, I cannot reach that far. You are going to have to sit up, and come to me.\"\n\n\"This will require a change in position, but at this point, I think you deserve it.\" Steve spread his legs, put his arms at his side, pushed himself back and up, dragging Cynthia along with him.\n\nCynthia screeched, as she felt Steve's dick change position inside her. It was now upright, and deeper inside her. However, she was encompassed by his arms and he was kissing her face and neck. She liked this part, very much.\n\nHe asked her if she was finished doing her part, and if he should take over.\n\n\"I have never done it that way, but it was fun. My legs were getting tired, so show me what all the girls, at school, were raving about, Steven Temple.\"\n\n\"No, I will not show you that person, because in bed, he was an animal. I will show you the person I want to be with you. I want to please you more than anything else in this world pleases you. I want to please you like Dycke, pleases Payne. I want our love to be like theirs. I will never be as rich as he is, but I will do my best to make our life as comfortable as I possibly can.\"\n\nCynthia said, \"Steve, would you shut up, and make love to me.\"\n\nHe did not answer, as he rolled her over, onto her back, while he stayed in an upright position. His hips moved in and out of her, while his hands were able to move to her breasts and squeeze her nipples, until they were thoroughly inflamed. He reached down, licked each one, and then sucked on them, as if he was trying to bring milk forth.\n\nCynthia moaned in ecstasy. Her hips were moving with his, and she was looking at his face, while he adored her body. Her mind said, \"He does love me. He is not trying to take advantage of me. All the girls went after him, and he chose me. How did I get so lucky?\"\n\nSteve placed a hand between her folds and searched for her clit. When he found it, Cynthia arched her hips, and screamed. He continued to rub and press against it, as he increased the movement of his hips to a higher speed.\n\nCynthia felt a knot form in her stomach and her head began to thrash. She bit her lips together, trying not to scream, but when it finally happened, she could not control it. She came in a full-throated, high-pitch scream that would have scared birds away, if there were any around.\n\nSteve was not finished with her. He continued moving his hips and pressing against her clit. Cynthia had not recovered from her first orgasm. Her eyes were still hazy, when her second orgasm started to develop in the pit of her stomach. She was saying, \"No, no, no.\" but screamed, \"Yes,\" at the top of her voice, when she came the second time.\n\nThis time Steve came along with her. Then he remembered, \"I did not have a condom on! She started it, so she must be safe. Right? I had better ask her, however, if I do, I may ruin the mood. Oh, fuck, I would rather ruin the mood, than, have a baby so young.\"\n\nCynthia was just coming down from her second high, when Steve said to her, \"Babe, you did not put a condom on me, and I just came inside you. Please tell me that you are safe.\"\n\nCynthia grinned at him and asked, \"You said you loved me. What would happen, if I were to conceive our baby?\"\n\nSteve replied, \"I would marry you, in a heartbeat.\"\n\n\"Thank you for telling me that, Steve. I guess I can come off the pill, now.\"\n\nSteve started tickling her, and she laughed rolling all over the bed, as he tormented her, with his hands. He said to her, \"If you ever do that to me again, my heart will stop.\"\n\nThere was a knock on the door to their suite, and the door opened, without either of them answering it. The butler announced his arrival saying, \"Room service, your breakfast is here.\"\n\nSteve yelled, \"Please leave the bill on the table. I will sign it later.\n\nThey made said, \"There is no bill, sir. Everything is prepaid, including the tip.\"\n\nCynthia giggled. Steve looked at her and said, \"What is up?\"\n\n\"You can thank your sister for our weekend together. We do not have to leave until Monday. Everything is paid, in advance. We can buy anything we want in the hotel, but Dycke said for you to remember, that he still has the title to the Corvette, whatever that means.\"\n\n\"He is just reminding me to be a good boy. However, I believe this hotel has a jewelry store. Let's eat breakfast, go down stairs, and see what they have in diamonds.\"\n\nCynthia asked, \"Why diamonds?\"\n\nSteve replied, \"That is the stone you normally buy, when a guy asks a girl to marry him, right?\n\nIf Steve had not caught her, Cynthia would have been on the ground. He looked at her startled face and said, \"If you did not want to marry me, all you had to say was 'No.' I would have understood. You did not have to fall and hurt yourself.\"\n\n\"Steve, you did not ask me to marry you. You just assumed that I would say yes.\"\n\nSteve got down on both knees and said, \"Cynthia Udele Morgan, would you do me the honor and privilege of giving your body to me, in marriage?\"\n\n\"Steve, it is hand, not body.\"\n\n\"What would I do with just your hand? I want the whole thing, or nothing. Make up your mind woman?\"\n\n\"Yes, Steve, I will marry you. You have made me so happy.\"\n\n\"Cynthia, I am going to make your initials come true. You are going to C.U.M. so often, you will not know which way is up.\"\n\n\"Steve, if you ever use those initials on any of our invitations or in conversation. I will cut you from stem to stern. Then, I will cut your balls off, and stuffed them down your throat.\"\n\n\"Cynthia, I did not name you, your parents did. I think it is only fair, people get to know the real you. After this morning, I believe your initials truly fit you, perfectly.\"\n\n\"Steve, if you see a steak knife missing from the dinner table tonight, you should not sleep too soundly. It could indicate the shortest engagement, ever.\"\n\n\"Please cut my throat; I have become very attached to my balls.\"\n\n\"I think I will kill you instead. Talking to you is too hard.\"\n\nSteve picked her up and tossed her onto the bed. Cynthia screamed, but it was no use. Steve was so much bigger than she was; she had no control over him. He spread her thighs and attacked her pussy with his tongue.\n\nCynthia yelled, \"Oh, fuck!\"\n\nSteve yelled, \"No, cunnilingus!\"\n\nCynthia said, \"What?\"\n\n\"Oral sex, Cynthia, you will love it. I am going to eat your cunt, until you C.U.M.\"\n\n\"You had better never use those initials again, Steve. You could get seriously hurt. However, you may continue what you are doing, because it is wonderful.\"\n\n\"Lie back and enjoy it, babe. You will see stars by the time I am finished with you.\" Steve went back to torturing her cunt with his tongue and fingers. He licked and bit her inner and outer folds. His fingers found the rough spot on top of her sheath, as his thumb worried her clit to exhaustion. His right hand played with her breasts, his mouth kissed and played with her lower stomach and belly button. When he felt her start to shake, he removed his fingers from her cunt, grabbed her legs, and folded her in half, so her cunt was facing up. He focused his eyes down at hers. He wanted to see her reaction, when she came from her first oral experience. He wanted to see her face, with need in it. He needed to see her glow, as she passed through the ecstasy of climax. He wanted to know he could bring her that joy.\n\nCynthia did not realize she would be able to move her hips against the bulk of Steve's body. With the way he had her twisted, and his weight against her mere one hundred plus pounds, she thought there was no way she could move him. However, when her body started to shudder, and her legs and hips started to stiffen, Steve could barely hold her still. They still had eye contact, but her movement made it more difficult. When she came, she barely had her shoulders left on the mattress. She lifted him straight up, with her petite frame. She wet his face with her juices, and screamed with joy.\n\nSteve got what he wanted. He saw her climb the ladder to ecstasy. He saw the need in her face. He heard her wantonness, as she demanded release. When she came, and her body released its fluids, he watched her, as glow flowed into her cheeks and face. Happiness was in every pore of her body. He let her legs down. He lay beside her, and kissed her face. He touched her breasts and she no longer shied away from his hands. He was no longer one of them, he was now hers, and she was his.\n\nCynthia looked at him and said, \"I guess with all the practice you have had, I have a lot to learn. I am looking forward to it, but do not kill me in the process.\"\n\n\"We will go as fast or as slow as you want. We have a lot of years ahead of us and now maybe, I can get Desiree off my back.\"\n\nFrom the outside room a familiar voice called out, \"I would not count on that, Steve.\"\n\nSteve said, \"How the fuck did you get in here.\"\n\n\"I told you Payne wanted to be sure that Cynthia did not get hurt. I have been here all night making sure that did not happen. You were a good boy, Steve. Although I agree, with Cynthia, asking for her hand in marriage would have been better.\"\n\nSteve said, \"Is nothing sacred around here?\"\n\nCynthia looked at him and said, \"This is what happens when your sister marries a very rich guy, and needs to have her big brother protected from a very little girl. I could have killed you, during the night, and no one would have ever noticed, except Desiree. She would have caught me, and sent me to jail. However, you would have been dead, but I would have been caught.\"\n\nSteve said, \"Instead of being protected by her, I think I would rather have been dead.\"\n\nCynthia smacked him on the back of his head. She said, \"Let's take a shower, eat breakfast, and go down to that jewelry store, before you change your mind.\n\nDesiree said, \"If he changes his mind, I will break his leg, and he will never race again.\"\n\n\"Do you see what I have to put up with all the time; she hates me.\"\n\nCynthia nodded and said, \"Yes she does, but look what she has done for your grades and your times. You should be very grateful to her.\"\n\n\"Listen CUM; I am beginning not to like you.\"\n\nCynthia's entire one hundred and six pounds hurtled into Steve, like a rocket-propelled grenade. Steve hit the floor never realizing what hit him, until fists started pounding on the back of his head.\n\n\"I told you never to call me that, and I meant it. I will beat your face into a pulp, and remind you every day, if I have to Steve. Do we understand each other?\"\n\nSteve had his arms up protecting himself. He said, \"I understand, I really do.\"\n\nFrom the living room area, he could hear Desiree laughing.\n\nHe yelled, \"Be quiet in there. I just got my ass kicked. I do not need any help from the peanut gallery.\"\n\nDesiree said, \"Steve, you are one hundred and eighty pounds of muscle. You have just been mauled, by one hundred and six pounds of irate female. If that is not funny, I do not know what is funny.\"\n\nCynthia said, \"I am going to take a shower. If you are going to behave, and want to join me, you may. If you are going to act up, you can go play with yourself.\"\n\nDesiree broke into laughter, again.\n\nSteve yelled, \"Enough already!\"\n\nDesiree yelled, \"I can tell who is going to wear the pants in your family.\"\n\nSteve said, \"Like hell. I will run away from home first.\"\n\nCynthia grabbed him by his balls and said, \"What?\"\n\nWrithing in pain, Steve said, \"Nothing, babe.\"\n\n\"That is what I thought you said.\"\n\nDesiree laughed again, but Steve remained quiet and just fumed. He would think of a way to get them both. Individually or together, but he would get them.\n\nIn the Promenade of the main lobby, there was a fine jewelry store and from looking at the prices in the window, Steve nearly had a stroke. Cynthia held onto his arm, smiled, and said, \"We are only looking, Steve.\"\n\nThey browsed through the store for almost an hour, until Cynthia saw a ring she truly loved. She asked to try it on, and a woman took her aside, and placed the ring on a black mat, so she could see every facet, before she placed it on her finger. \n\nSteve watched Cynthia fingering it. He knew she would like this ring, however, he knew he could never afford it. He decided to call Dycke, and see exactly how much, he was allowed to spend in the hotel, considering his edict on the Corvette.\n\nDycke answered the phone and said, \"Steve. I'm a little busy now, we are on Space Mountain.\"\n\nSteve replied, \"That is the lamest ride in the park. Are you going on Dumbo next?\"\n\n\"We just got off Dumbo, Steve. The merry-go-round his next.\"\n\n\"That figures, Dycke. The agents must really love you.\"\n\n\"Why do you think we are going on the merry-go-round?\"\n\nFinally, Steve laughed. He said, \"Dycke, I have to ask you a very important question. What is my spending limit here at the hotel?\"\n\n\"Why?\"\n\n\"I want to buy Cynthia an engagement ring.\"\n\n\"I am sorry, Steve. I must have heard you wrong. Would you say that one more time?\"\n\n\"Come on Dycke you heard me the first time. I want to buy Cynthia an engagement ring.\"\n\nSteve heard his sister go crazy. \"I knew it. I knew it. I knew this weekend would do it.\"\n\nWhen Dycke started talking, again, he asked Steve where he was buying the engagement ring, and what the price was.\n\nSteve replied, \"The ring is just under thirty-eight thousand dollars and then there are the taxes, the insurance, and the certification. The manager said it would come to about forty-three thousand dollars.\"\n\n\"Steve, let me talk to the manager.\"\n\nManager took Steve's cell phone and after a few moments, the manager went white. He wrote down a phone number and a name. He said to Dycke, \"Mister Schneider, it is Sunday.\" His next response was, \"Yes Mister Schneider, right now.\"\n\nThe manager picked up the house phone and dialed the number Dycke gave him. When the phone was picked up, he said, \"Sir, my name is Harold Mann; I am the manager of 'Exquisite Jewels' in Charleston, South Carolina. I have just spoken with a Mister Dycke Schneider, and he has given me your name, in reference to a purchase to be made here. It is a 4.1 carat, Bright Yellow VVS1 GSI certified stone. I have quoted him a final price of forty-two thousand two hundred and sixty dollars all-inclusive. \n\nThe manager's ear came away from the phone, and Steve could hear the other man calling him a thief. The tirade went on for more than a moment. The manager was told to look at the laser tag inscription, on the diamond and read it to him.\n\nAfter a moment, the manager was told that the diamond came from a mine owned by a consortium, in South Africa, that Dycke was a partner in. If he or his boss ever wanted to see another diamond from Dycke or his jewelry division, the diamond had better be given to this couple for the cost of insurance and this certification, alone. He was told to have the owner call him tomorrow and he will discuss other details.\n\nThe managers answer was, \"Yes, Sir.\" He hung up the telephone, looked up at Steve, and said, \"Who is Dycke Schneider?\"\n\nSteve said, \"He is an eighteen year old kid with a great many friends, in very influential places. He, also, has nearly eight hundred million dollars in his bank account.\"\n\nThe manager shook his head and said, \"Let me write up your receipt, and I will charge it to your room.\"\n\nSteve looked at the slip with the charges on it, and when it got down to the bottom line, he shook his head. The final charges were three thousand five hundred six dollars and seventy cents. He said to himself, \"It is good to be the king.\"\n\nCynthia had the ring on her finger, and loved every second of the experience. It was slightly large on her; however, the clerk said it could be sized for her, by the morning. She said to the woman, \"It is lovely but I am sure we cannot afford it.\"\n\nSteve asked her, \"Why not? I just charged it to the room, like Dycke told me to do.\"\n\nCynthia looked at him and said, \"He will kill you for charging this to the room.\"\n\n\"If he does, you will always have the ring to remember me by. Diamonds are forever, babe!\"\n\n\"That is not funny, Steve. I would rather have you, than the ring.\"\n\n\"I saw you playing with the ring, and I could not help myself. It is yours forever, because I will love you forever, even if forever is when Dycke gets the bill.\"\n\nCynthia yelled, \"Desiree, get in here and kill him now.\"\n\nDesiree walked into the store and said to Steve, \"Tell her the truth before I break your leg.\"\n\n\"How do you know the truth?\"\n\n\"It is my business to know your business, Steve. Tell her the truth or I will.\"\n\n\"You always spoil my fun. I spoke to Dycke, and Payne was thrilled to hear I had asked you to marry me. I asked Dycke if it was all right to buy you a ring. After some negotiation with two people, the manager came to an agreement on the price. The ring is yours, Cynthia; I love you very much.\" \n\nDesiree said to Cynthia, \"What Steve told you is the truth, but it is covered by so much bull-crap, you would never see it, in the light of day. I should break his leg, but as I said, technically, he did tell you the truth.\"\n\nCynthia asked the woman who was helping her, what the normal price would be to walk out of the store with this ring.\n\nShe replied, \"About $43,000.00\n\nCynthia asked Steve, \"How much did you just charge to the room?\"\n\nSteve said, \"Three thousand five hundred six dollars and seventy two cents.\"\n\nCynthia asked Steve, \"What did Dycke negotiate with a tank?\"\n\nSteve said, \"No. However, the diamond seems to have originated from a mine that a consortium owns. Dycke is part of that consortium. The person Mr. Mann spoke to on the telephone implied that the owner of this store might never see another diamond, if we did not get this one 'Free.\" \n\nCynthia screamed in joy, but the woman behind the counter blanched, because her commission had just flown out the window.\n\nSteve asked Cynthia to take off the ring and give it back to the woman, to have it sized for her. \n\nCynthia said, \"No.\"\n\n\"Cynthia, take the ring off. If it falls off, during the day, I can guarantee you Dycke will not let me buy you another one.\"\n\nCynthia looked at the ring on her finger and said, \"It looks so good there.\"\n\nSteve said, \"It will be there for a very long time. I am not getting married, until I am forty.\"\n\nCynthia surprised him when she said, \"That is fine with me. You have promised that I will be your only one. Desiree and I will keep you to that promise. I will start acting like a dutiful wife, Tuesday, when we get home. You will start getting sex once a month, if that often, and we will keep you to the national average.\"\n\nSteve said, \"You women have all the angles covered. If we do not do this, you do not do that. If we do this, you still do not do that. It is like a union that is always on strike.\"\n\nCynthia said, \"You see Desiree, he is not as dumb as you think.\"\n\nDesiree replied, \"I guess he does have his moments.\"\n\nCynthia handed over her ring and received a receipt for it. She would have it back by noon tomorrow.\n\nPhone calls had to be made. Cynthia called her mother, who thought her daughter had been smoking marijuana. She ran to her room to check her stash to see if any was missing, and realized it had not tampered with. So if Cynthia had not taken any of hers, she might have a supply of her own, she was crazy, or she was crazy in love.",
        "Alletta Temple heard her son on the phone. However, when he told her he was engaged to Cynthia, she just laughed, and hung up on him.\n\nHe called his father, and said, \"Dad, please do not hang up. I just asked Cynthia to marry me, and she said yes.\"\n\nPiker said, \"Who is this? Why are you pulling my leg?\n\n\"Dad, it is me, Steve, your son.\"\n\n\"If this is my son, what day were you born?\n\n\"I was born on January twentieth, nineteen eighty-seven, twelve and a one half minutes before my sister.\"\n\n\"You could have heard that in school.\"\n\n\"Dad, you grounded me in the third grade for putting superglue on your briefcase locks and you could not open them.\"\n\n\"I have told that story a million times.\"\n\n\"What do I have to do to convince you that it is me?\"\n\n\"Tell me you're not getting married, and I will believe you.\"\n\n\"I cannot do that, dad. I asked Cynthia to marry me this morning, and Desiree heard me do it.\"\n\n\"Is Desiree with you?\"\n\n\"Yes she is dad.\"\n\n\"Let me speak to her.\"\n\n\"Hello, Pike. Are you stunned?\"\n\n\"You are telling me it is true?\"\n\n\"Did the sunrise in the East this morning?\"\n\n\"I never expected that horn dog to get married, in my lifetime.\"\n\n\"Not only married, Pike, but he is in love up to his eyeballs.\"\n\n\"You have got to be kidding me.\"\n\n\"Cynthia has a ring through his nose already. When she pulls it, he follows her like a puppy. It is too beautiful to behold.\"\n\n\"What did my wife say, when she heard this news?\"\n\n\"She hung up. She did not think it was him.\"\n\n\"I will call her, and see if I get a better response.\"\n\n\"Maybe this will help you. Dycke helped Steve with the cost of the diamond; he bought her a four-carat ring.\"\n\n\"Should I bother asking how much the ring cost?\"\n\n\"It started out at forty-three thousand, but Dycke ensured he is paying a little less.\"\n\n\"Okay, I will bite. How much less, Desiree?\"\n\n\"Thirty-seven thousand dollars less, Pike.\"\n\n\"You have to love that son-in-law of mine.\"\n\nDesiree said, \"If it ever happens to me, I know where to go to get my ring.\"\n\n\"You can count on it. He will treat you like a princess. Let me call my wife and then I will call 911 to rush her to the hospital. Maybe I should make those phone calls in reverse.\"\n\n\"Either way, Pike, have fun.\"\n\n73. \"The Revenge of the Protection Detail.\"\n\nDown at Disney World, Dycke and Payne were having a blast tormenting their agents. They took them on every child's ride in the park. They insisted they all go on the rides, not just one, or two of them, but all seven. If Dycke was going to run a marathon, he was going to make it worth his while.\n\nPayne kept looking at Gabby's face, and her displeasure was enough to make her laugh. At the beginning of each day, they went on the Merry-Go-Round. Dycke had the agents ride the horses, while he and Payne sat in one of the seats, kissing. Then they went on \"It's a Small World,\" twice in a row, just to get the agents growling. Then it was on to the Tea Cups. At lunch, the agents were not talking to the 'happy couple,' in words, but if body language could be interpreted, the shooting gallery would have been next, using live rounds for ammunition, and the newlyweds for the targets. Payne knew that if they started getting death threats this week, it would be coming from their own agents.\n\nOn Thursday, they boarded the jet back to Charleston, and a happier seven agents, you have never seen. Two people, in the middle of the aircraft knew, when the wheels touched down, there would be a woman waiting for them, with a smile on her face, but with evil intent in her heart. Payne wondered if there was a parachute on this aircraft. There was not!\n\nOnly one person noticed the mistake that was made on the nose of the aircraft, where Payne's name was placed. It was supposed read, \"Payne's Two.\" Either, the painter was drunk or was being fired the next day, because it read, \"Two Payne's!\" As Marti looked at it, she could not have agreed more. The aircraft would be repainted, but it served as an object lesson, for this moment. As the stairs descended from the aircraft, seven agents made a beeline for Marti. Each one demanded her immediate attention, for abuses upon their psyche, caused by Dycke. They demanded time with him, for self-defense training. Putting it bluntly, each one wanted at least one hour, to beat the crap out of him, for putting them on children's rides.\n\nMarti listened to every story of abuse, and finally said, \"Children, children, children; I have listened to your messages on my cellphone and read each of your e-mails and I promise you that he will pay for his abuses. Tomorrow, he is going to run his first marathon. Who would like to volunteer to go with him?\"\n\nSeven hands shot into the sky, and Marti made eight. She said, \"Wonderful. We will drive him into the ground. We will keep a pace that will burn his legs off. We will teach that 'undersize runt' to follow orders, or pay a penalty, he will not enjoy. By the way, where is that little runt?\"\n\nDycke stuck his head out of the limousine and said, \"I am waiting for all you pussies to stop bitching, and take me home.\" He slammed the door closed, and locked it. He was safe in the limousine, and he knew it. \n\nMarti glared at him and said, \"6 A.M., or I burn the house down.\"\n\nDycke smiled at her and replied, \"I hope you do not mind looking at my ass all day.\"\n\nThe car started moving away, and smoke was coming out of Marti's ears. He had just challenged her, and no one, had ever done that to her, in all her years.\n\nMarti had planned everything for the next morning from lead cars to chase cars. However, Dycke did a little planning of his own. At five thirty, four police cars drove up to the front of Dycke's home with their lights flashing. Dycke smiled, and walked outside to greet them, and he started warming up. At twenty minutes to six, two Humvees arrived, carrying Marti and the seven members of his protection detail, who wanted nothing short of a piece of Dycke, to mount on their wall. Marti asked Dycke what was up.\n\nDycke smiled at her and said, \"It would not be a marathon, without a police escort, would it? We even have drink stations and cheerleaders along the way. Payne will be here to kiss me as I break the tape at the finish line, in first place. I thought all of this would add a nice touch.\"\n\nMarti glared at him and said, \"You do not stand a prayer in hell of coming in first place. If I do not beat you, Robin or Marlena will.\"\n\n\"Do you want to bet?\"\n\nPayne ran over to Marti and said, \"Do not do it. He has never lost a bet. He even made it stopped raining, on our wedding day. Do not bet him, please.\"\n\n\"Do not worry, Payne. The mighty always have to fall the first time. Carthage fell, Greece fell, and Rome fell. Dycke Schneider will fall, today.\"\n\n\"Marti, please do not do it. I do not know how he does it, but he does not lose.\"\n\n\"Payne, do not worry. For Dycke to win, he has to come in 'first place.' Not only does he have to beat me, but also two people who are experienced marathoners. He does not stand a chance in hell.\"\n\nPayne said, \"Remember, Marti, I tried to warn you.\"\n\nDycke said, \"All right, Marti what do you want?\"\n\nMarti thought for a moment and said, \"I want you to 'Bow' to me, and call me 'Your Majesty' for the rest of our tenure here. You have to keep our entire staff for at least ten years, with appropriate and timely raises, and you will never disobey me or my staffs' instructions ever again.\"\n\nDycke smiled at her and said, \"Agreed. When I win, you will do the following: You will wear dresses to work for the rest of your working career with me. You cannot quit, and only I can fire you.\"\n\nMarti screamed, \"No.\"\n\n\"Are you backing out of the bet? Are you afraid of losing to an eighteen year old 'undersized runt.'?\"\n\nPayne yelled, \"Marti, do not do it. He is baiting you.\"\n\nMarti looked at Dycke and said, \"On your best day, you could not beat me.\"\n\nDycke stuck out his hand to shake hers' and said, \"I will see you at the finish line, if you make it.\"\n\n\"You son of a bitch; I am going to hand you your head, today\"\n\nSteve came out of the house, rubbing his eyes and asked, \"What is going on?\"\n\nDycke smiled and said, \"We are going to run a marathon. Do you want us to wait for you?\"\n\nSteve said, \"Yes, I will be ready next year, good night.\" He turned around and went back to bed.\n\nAt 6 A.M., the first police car started the 26 mile 365 yard marathon, with nine people in pursuit. Dycke stayed in the middle of the pack, Robin and Marti were with him, and Marlena set the early pace. The police cars kept announcing the mileage and the time, to let everyone know the pace that was being set. \n\nAt five miles, Marti put on a burst of speed, which put her in the lead by more than six hundred yards. Dycke stayed in the pack.\n\nRobin did the same thing, at seven miles, but Dycke did not take the bait, and he stayed with the pack.\n\nAaron made a significant move, at twelve miles, to a point; the police car was out of sight. Dycke was tempted to start, but decided it was still too early in the race. Eventually, Aaron was visible on the horizon and Dycke was happy, he had not gone with him.\n\nAt sixteen miles, Dycke made his move. He slid to the outside, and move up alongside Marti and said, \"Take a look at my ass because that is all you are going to see for the remainder of this race. I will see you at the finish line.\"\n\nThey had been averaging five and one half minutes per mile, and Dycke picked up the pace to a blistering 4 minutes 15 seconds per mile. Everyone behind him picked up their pace, trying to stay with him. At twenty miles, Dycke was out of their site line, and running smoothly. At twenty-four miles, he was nearly three miles ahead of the pack. As he made the turn towards his home, he started to coast. He broke the tape, and Payne kissed him, as she promised. She asked him where everyone was. \n\nHe said to her, \"They should be here in about ten minutes or fifteen minutes, or so.\"\n\n\"How did you do that to them.\"\n\n\"One day you must come to work with me, and I will show you.\"\n\nAs Dycke said, Marlena crossed the line nearly ten minutes later, followed by Robin, Marti, and the rest of the troops. They glared at him as he stood past the finish line, applauding their arrival. Marti came in fourth, as he had anticipated. Her age was catching up to her, even though she would not admit it. At forty-eight, she was a physical specimen you did not want to mess with, but twenty-six miles, 365 yards was more than most bodies can handle. Dycke applauded her loudly as she crossed the line.\n\nHe handed her a bottle of Gatorade and said \"Marti, my mother, you and I are going shopping Monday.\"\n\nDycke ducked as the bottle of Gatorade flew over his head.\n\nHe yelled to her, \"Would you prefer a \"Personal Assistant?\"\n\nThe look he received nearly killed him.\n\n74. \"Fiona's Wedding Day, or In Sickness and In Health!\"\n\nIt was now noon, the marathon was forgotten, and all thoughts turned to Fiona's wedding. Bob was persona non grata in his own home, so he set up shop in the bridal suite in the Kensington Manor. Marti and Alvena were with Fiona, marking time, because everything that could be done was already done. \n\nThe spies were in town, for Fiona's wedding. The FBI was in town watching the spies, who were in town. The CIA, which is not supposed to work, in the continental U.S., had sixty agents on vacation, in Charleston, for the weekend. The Defense Intelligence Agency had a workshop going on at Charleston Air Force Base, and the NSA had a Conference at Summitt Hotel. Charleston had never seen so many spies, spying on spies, since the Civil War. \n\nGrace Church was ready. The bride and groom were ready. Time was the limiting factor, and 2 o'clock the next day could not come fast enough. Then Fiona got her period, and she wanted to shoot herself. She was a week early and normally she was as regular as clockwork. She wanted to scream. She was inconsolable. No one could talk to her. Marti called Bob and gave him an update. He told Marti to give Fiona the phone, so he could talk with her.\n\nFiona picked up the phone and said, \"What do you want?\"\n\n\"I told you once before, you let the little things drive you crazy. This is a little thing. If you do not stop this shit, right now, I am going to announce at our wedding tomorrow, that you are thirty-seven years old, and you will be thirty-eight next February. Do you hear me?\"\n\n\"How did you find that out? Who told you? I will kill her.\"\n\n\"Fiona, I was a spy. I used to do this for a living. Now are you going to be good, or do I have to get a megaphone for tomorrow?\"\n\n\"I will be good, Bob.\"\n\n\"I love you, Fiona Brooks. Relax, take a deep breath, and remember, 'In less than twenty-four hours, this will all be over, and we will be together, forever.'\"\n\n\"I love you Robert Short.\"\n\n\"I know Fiona; we were made for each other, and I grow taller every day.\"\n\nFiona laughed as she hung up the phone.\n\nBacillica Schneider did not feel well when she got up in the morning. Her stomach was queasy and she nearly had to vomit. She went downstairs and made herself a cup of chamomile tea, which helped her greatly. This is going on too long, she thought to herself. I had better make an appointment with my doctor. She was due for her yearly physical, in October, so she called her gynecologist and moved it up to the first week in September. Her breasts had been sore, probably from over-use by Chad recently, but she would rather be safe than sorry. She dressed for the day and forgot all about it, thinking about tomorrow's festivities.\n\nAlletta and Payne were out, apartment hunting, by the harbor. Dycke wanted to rent rather than buy, because of the nature of his businesses, and the possibility of children in the near future. They looked at a Penthouse apartment that encompassed the entire top floor of a building. At eighteen thousand square feet, it was so big, they would need a fleet of 'Segway's' to get around it. It had space for anything one wanted, and the views were amazing.\n\nPayne called Dycke to see if he was available to look at the apartment, instead he asked her, \"Payne do you want the apartment?\"\n\nShe said to him, \"Yes, I want it.\"\n\nHe said to her, \"Do you remember what you told me, in our bedroom, about making decisions?\"\n\n\"Dycke, I was only joking. This apartment is two hundred thousand dollars a month. That is 2.4 million dollars a year.\"\n\n\"Very good, Payne; high school was not wasted on you. I will put my office in it, and it becomes a business deduction.\"\n\n\"You are going to get such a beating, when I see you.\"\n\n\"Payne, make a decision. Live at home, with your mother, or live in that apartment. Choose one or the other.\"\n\n\"Dycke, I want the apartment.\"\n\n\"Alright, stay there. I will send Art over.\"\n\nPayne looked at her mother and said, \"Mom, he said it is okay.\"\n\n\"Darling, how many times has Dycke said 'No' to you?\"\n\n\"I do not believe he ever has, mom.\"\n\n\"Then Payne, you better start thinking about furniture for this place. It is going to need a lot of it.\"\n\n\"I cannot do that without him, mom. It is going to be his home, too.\"\n\n\"Then Payne; Sunday is furniture shopping day, with your husband.\"\n\nAt 12 PM, Grace knocked on Fiona's door. When Marti answered it, Grace told her Dycke was downstairs, and needed her immediately. She would stay with Fiona for the rest of the day.\n\nMarti picked up her things, and went downstairs and found the limousine waiting for her. She opened the door and got in. Dycke was not inside, Lord Jeffrey was. He said, \"Good afternoon, Martina. Are you all ready for tomorrow?\"\n\n\"Yes, your Lordship, I am ready.\"\n\n\"Is that the hairstyle you are using for tomorrow?\"\n\n\"Yes, what is wrong with it?\"\n\n\"Milton, you know where to go. Immediately, please.\"\n\n\"Where are you taking me, your Lordship?\"\n\n\"I am taking you to a place you have never been before. I am going to stay there, with you the entire time. If you make a scene, one of the four people there, will shoot you with a tranquilizer dart, and we will take care of you, while you are unconscious. Do you understand?\"\n\n\"Yes, your Lordship.\"\n\nMilton pulled up along the Regal Salon and Spa, at the Ritz-Carlton Hotel and Marti's immediate reaction was, as expected. \"You are not doing this to me, are you?\"\n\n\"Martina, you are my escort for tomorrow. You will look every bit the part. Stop complaining and let's get this started.\"\n\nMarti stepped out of the car and noticed four people, standing in strategic positions, smiling at her. Lord Whitbred took her by the arm and led her inside, where a group of women was waiting for her arrival. At 5'11\" and 160 pounds of muscle, Marti was an imposing figure. With the growl on her face, most people would have run away. Lord Whitbred said to them, \"If Martina gives you one moment of trouble, come to me and I will take care of it.\" He pulled Marti's bag away from her arm, and the women took her into the back to be waxed, plucked, steamed, pedicured, manicured, trimmed in unmentionable areas, massaged, given a haircut by a stylist, and made up by a professional make-up artist.\n\nNearly four hour later, they were finished. Martina went to get dressed and instead of finding her clothing, she found a completely new ensemble: a matching bra and panty set, garters and stockings, a rose color suit, with a knee length skirt and matching shoes. If she had a gun, she would go out front naked, shoot his lordship, and then shoot herself. However, he had the foresight to take her gun away. So she got dressed and she had trouble doing so. She had to ask one of the young women to show her what to do with certain items of clothing to make them fit properly.\n\nShe had to walk around in the shoes for a few moments to get her balance, because she was not used to the slight rise in the heels. Running shoes were a way of life for her, and she had never worn anything else since she was a teenager. When she was ready to go outside, she put her head down, and prayed no one would laugh at her. \n\nLord Whitbred was sitting in the waiting area, as he had promised. He raised his eyes, when he heard the door open, and saw Marti, as a woman for the first time, in either of their careers. He stood up, looked at her, and was amazed. He said, \"Martina, you are ravishing. Have you seen yourself, in a mirror?\"\n\n\"No, your Lordship, I was afraid to look.\"\n\nHe kissed her on both cheeks, took her to the full-length mirror, and stepped aside, so she could see how wonderful she looked.\n\nMarti gasped, \"Is that really me?\"\n\n\"Yes Martina, that is you, not the persona you hide behind. Any man would be proud to have you on his arm. You are truly magnificent. You are tall, straight, and proud. It exudes from every pore of your body. Let's go, we have people to see, and places to go.\" He held out his arm, and Marti put her hand through it, and held on. As they approach the limousine, a group of people turned around and started taking pictures of the handsome couple. \n\nMarti was stunned. Dycke had done it to her, again. The entire office staff was there and half of her agents. They began taking pictures of them. They were applauding the way she looked, as she walked out of the spa, and into her new lifestyle. There were also professional photographers there. Dycke was taking no chances. He wanted pictures of Marti looking her absolute best, and walking next to the debonair Lord Whitbred could not have made her look better.\n\nAs she approached him, she said to Dycke, \"Thank you. I should kill you, and maybe I will, but thank you for what you did for me today.\"\n\nDycke bowed and said, \"You are welcome, Your Majesty.\"\n\nMarti smiled and smacked him on the back of his head.\n\nDycke said, \"Ooow. What was that for?\"\n\nMarti said, \"It seemed like the right thing to do, at the moment.\"",
        "Lord Whitbred was whisked away back to his hotel, to keep Fiona's surprise intact. Everyone else headed to Grace church, for the rehearsal. This time, everyone was early, but those who had not seen Marti, at the spa, had time to look at her, and comment on how beautiful she looked. \n\nWhen Fiona arrived and saw Marti, she said to her, \"Payne warned you not to bet with Dycke. However, he has turned you into a beautiful woman. Do we kill him now, or after the wedding?\"\n\nMarti smiled and replied, \"I have not decided, yet. I know he is going to die, but the method, and the length of time we will take to do it, has yet to be decided. I will get back to you on that decision.\"\n\nThe Right Reverend Michael Rivers called everyone to order, and told each of them what he expected. He asked them to form up in the vestibule of the church and he would tell them when to begin. Chad would be given the honor of walking Fiona down the aisle, and give her away.\"\n\nDycke had reserved an entire restaurant for that evening's rehearsal dinner and Alvena was the center of attraction, again. Fiona did not remember half the stories she was telling about her, but everyone who listened to her mother was sure that they were true, and laughed the evening away.\n\nBob was prepared this time, and after an hour of listening to Fiona's mother telling stories, he handed his bride two maximum strength aspirin for the headache that she had, or would have shortly.\n\nFiona washed the aspirin down, with half a bottle of wine, to ensure they would work, quickly. What she did not remember was, this mixture gave you a maximum strength headache, in the morning, and sometimes made you nauseous. Both of those things happened to Fiona, the following morning.\n\nShe called Bob and he told her to use an ice pack for the headache, but he had no idea what to do for her stomach. He told her to call Bacillica and see if she knew anything that would help her, because her mother was out shopping.\n\nWhen Bacillica picked up the phone, Fiona said, \"You sound awful, what is the matter?\"\n\n\"I do not think it is anything major, Fiona. I think I have a stomach bug. I have felt nauseous for the last week or so, and I have a nagging headache that comes and goes. I drink some chamomile tea, and I feel a lot better, afterwards. I have a doctor's appointment on Tuesday to see what is going on. I will be at your wedding; I will not miss that for the world. I may not go to the dinner afterwards, but I will be at the service.\"\n\n\"I have a headache this morning, and I am nauseous, also. I mixed aspirin and wine and I am paying for it now. Will the chamomile tea help me, also?\"\n\n\"Absolutely! If you have some honey in the house, add a drop to it, for sweetness. It will settle your stomach and your headache will vanish.\"\n\n\"Thank you Bacillica. I will have Gracie get me the tea and honey at the store. Feel better, and I will see you at the church.\"\n\nAlvena came back from some last minute shopping, looked at her daughter, and asked, \"Are you pregnant?\"\n\nFiona said, \"Mom, I have my period, I am not pregnant.\"\n\n\"Do you have a heavy period or a light one?\"\n\n\"It is light, but it is steady.\"\n\n\"You are pregnant.\"\n\n\"Mom, give me a break. I am getting married in a few hours. I do not need to be harassed by you now.\"\n\n\"When I was pregnant with you, I had light periods for three months. Are you nauseous? Do you have a headache that comes and goes for no reason at all?\"\n\n\"I have been having headaches, lately.\"\n\n\"You are pregnant.\"\n\n\"Mom, not today, please, let me be.\"\n\n\"Where is Gracie?\"\n\n\"I asked her to go to the store, and get some tea and honey.\"\n\n\"Chamomile tea?\"\n\n\"Yes, how did you know?\"\n\n\"You are pregnant. Call Gracie and give me the phone.\"\n\n\"Hello, Gracie? This is Alvena. Would you do me a favor and get me two different pregnancy test things. I think she is pregnant. Thank you. Goodbye.\"\n\nGracie was back in a flash. She looked at Fiona and said, \"I thought you had your period?\"\n\n\"I do. This is my mother's idea of a joke.\"\n\n\"Gracie, five will get you ten, she is pregnant.\"\n\n\"How can you be so sure, if she has her period?\"\n\n\"As I told my darling daughter, when I was pregnant with her, I had a light period, for the first three months. She does not believe me. Those little testers will let us know in a few moments. Get going, Fiona, I want to know if I am going to be a grandmother. I have waited a very long time for this to happen, and I am not going to wait one more second, than I have to.\"\n\nFiona went into the bathroom and opened the packages. She read the instructions, and urinated on both testing strips. She was going to wait and see the results, for herself, but her mother yelled to her, \"Bring them here; I do not want you to cheat.\"\n\nAs the allotted time passed, both tests turned blue. Fiona's face turned white. Grace caught her, as she started falling towards the floor. \n\nThe next thing Fiona felt was a pillow, under her head, and an ice pack on top of it. She looked up and saw two smiling faces. Her mother asked, \"Are you feeling better, oh, pregnant one?\"\n\n\"How, Mom? I just came off the pill, and we just started trying. It is not that easy for most people. Some couples try for years, before they get pregnant and I get pregnant in the first few weeks. It is not supposed to happen that way, is it?\"\n\n\"Baby, sometimes people get lucky. Bob and you are in love, and you two are going to be wonderful parents.\"\n\n\"What time is it? I have to start getting ready soon. I have to tell Bob he is going to be a father. He will be so happy. He is such a wonderful man, mom.\"\n\n\"It sounds like you two had a wonderful first date.\"\n\n\"It was not a date. I challenged him to a Karate Match, and he accepted. I am younger, taller and I thought, stronger than he was. I was correct on the first two, but I beat the heck out of him in the first match, and he knocked me senseless in the second one. He cheated during the third match, and his tongue forced me to concede, while we were in the shower. I had so much fun with him that night, I could not leave him.\"\n\n\"It is 12:30 P.M.; do you think you can stand up now?\"\n\n\"My wedding is at two, and I will not be late for it. Help me up and we will see what happens.\"\n\nFiona wobbled, for a while, however, that passed quickly. She sat down while Gracie made tea for everyone. They talked about her pregnancy for a time, and then, Fiona said it was time for her to dress. She showered quickly, did all her intimate things, and wondered how Bob would react to the news. Then, she thought about Bacillica. She said she had been nauseous, for a while, and that she had headaches. Fiona wondered if it could possibly be morning sickness. Could Bacillica be pregnant? If she were pregnant, that would be too funny for words. \n\nAt 1:30 that afternoon, Fiona, Gracie, and Alvena left for Grace Church. It was a very short ride from Bob's apartment building and when they arrived, there was still a crowd, outside the church. Alvena told the limousine driver to continue driving until everyone was inside the church. Then Fiona would be able to get out without the hassle of moving through dozens of people. It took another fifteen minutes, but everyone was finally inside, and Fiona was able to exit the car. Chad met her at the curb, with Marti. They straightened her gown, and led her towards the entrance to the church.\n\nFrom behind them a voice said, \"Mister Schneider, if you do not mind I would like the 'honor and privilege' of taking Miss Brooks down the aisle to meet her new husband.\"\n\nFiona did not immediately recognize the voice, but she whirled around, wondering who was trying to interrupt her wedding ceremony. When she saw Lord Jeffrey, she cried and fell into his arms.\n\nHe kissed her on her cheeks and whispered in her ear, \"Daughter, you are too beautiful for words. I do not want Bob to think I upset you. Please, put a smile on your gorgeous face, and allow me to walk you down the aisle.\"\n\n\"Your Lordship, how could you possibly know about my wedding? Who contacted you? How did this happen? I have a million questions for you?\"\n\n\"Fiona, I believe I can answer most of them with one word: Dycke.\"\n\n\"Your Lordship, either Marti or I have to kill him. He is too good a person. People are going to take advantage of him, all his life. \"\n\n\"Fiona, I will discuss that with you later. Right now, my daughter, they are playing our song.\"\n\nLord Jeffrey Whitbred and Fiona Brooks walked gracefully, down the center aisle, to a waiting Robert Short and Angus McFarland. Lord Jeffrey kissed Fiona, and presented her hands to Bob. Then he took his place beside Martina Innocent, and watched as the Right Reverend Michael Rivers performed the Episcopalian Marriage Ceremony. Unlike Dycke and Payne's ceremony, video cameras were allowed in this church, so the entire ceremony could be watched over, and over again.\n\nAfter they were pronounced \"husband and wife,\" they turned and accepted the applause and congratulations, from their fellow comrades in arms. As they were walking back down the aisle, Fiona stopped to ask Bacillica how she was feeling. Bacillica responded that she was feeling much better than she was this morning. Fiona whispered into Basilica's ear, \"Is it possible you are pregnant?\"\n\nBasilica's pupils dilated, and she sat down quickly. That answered Fiona's question, as well as any verbal answer could have.\n\nChad asked his wife what was wrong. She said to him, \"Fiona just asked me something that I could not answer properly. Please do not ask me again.\"\n\nChad said fine and let the subject drop.\n\nThe happy couple got into the limousine and headed towards the studio where the official pictures would be taken.\n\nLimousines behind them carried the remainder of the wedding party, including Martina and Lord Jeffrey.\n\nFiona decided that the best way to tell Bob about her being pregnant was to tell him fast. She did it in the most obvious way. She took his hand, placed it on her stomach, and said, \"Hello daddy!\"\n\nBob's hand flew off her stomach and his eyes looked into hers. He said, \"Really?\"\n\nFiona went through the entire story, about her mother's intuition, and the two test kits and Bob started kissing Fiona, as if the world was going to end, at midnight.\n\nHe said, \"I never thought I would have a child. You make me so proud of you. You start school next month and you are going to have our baby. What more can aman ask for in life.\"\n\n\"Bob, I am not going to school. I am on protective detail. I do not have time for both of them.\"\n\n\"Yes, I know. You will have to speak to your boss about that situation.\"\n\n\"What has he done now?\"\n\n\"I am not at liberty to say, however, I wind up being a babysitter.\"\n\n\"Someone has to stop that man, or he is going to go broke.\"\n\n\"Somehow, my love, I do not think so.\"\n\nThe pictures were taken, the hors d'oeuvres were eaten, and everyone entered the Main building for dinner.\n\nDycke did one thing that the FBI and the other federal agencies did not count on. He had the building swept for bugs, before anyone entered it. His people found nearly 700 listening devices, and twenty-five recording devices hidden in the flowers under the tables inside crevices and anywhere anyone could hide something as tiny as a quarter. As everyone entered the building, Dycke's agents funneled each guest towards the crates, which held the devices, the various government agencies had hidden. They all smiled and went to their tables and knowing their conversations would remain private. \n\nWhen everyone was seated, several agents picked up the crates and brought them out to the four unmarked vans that were being used as listening posts. They knocked on the rear doors, until they were opened. The listening and recording devices were unceremoniously handed back to the federal agents, and they were invited inside, for dinner. Each of them accepted.\n\nDinner conversation among covert operatives is very graphic, and sometimes gory. However, these men and women live on the edge every day they are on assignment. Bob and Fiona circulated amongst these people, during the evening, and reminisced about the good times and bad times, from the Soviet era, to the present day. Many, like Bob, wound up forgotten, by their governments, until it suited them to get them out of a foreign country.\n\nMany stories that were told that night would have closed, or cleared up, many operations, governments around the world would have paid dearly to seal. However, these were Dycke's guests, and nothing they said, while they were in this country, was going to compromise them.\n\nAs the evening was ending, Bob stood up to make an announcement. He said, \"Ladies, gentlemen, and honored guests, I have been informed today, by my lovely bride, that we are pregnant.\"\n\nFiona wanted to kill him for making that announcement. However, everyone in the room was standing and applauding. Lord Whitbred approached his 'daughter' with a smile on his face, a mile wide. He hugged her to his body, kissed her, and congratulated her. He ordered her to give up her gun. He told her that he would not take no for an answer. He said to her, \"Guns and parenthood do not mix. You have a husband that adores you and can keep you safe. You can keep a gun in your house, for protection. I do not want you to carry one every day. Do you understand me little girl.\"\n\n\"Yes, your Lordship. I will take care of that, immediately.\"\n\n\"I was expecting an argument from you. I am glad to see that you are maturing.\"\n\n\"Not really, your Lordship. I was just informed by my husband, that I am starting school in September. Somehow my boss got me into the Doctoral Program in Economics and I will be up to my eyeballs in numbers, very shortly.\"\n\n\"I am going to enjoy working with Dycke. He seems to be my type of fellow.\"\n\n\"Your Lordship, never make a bet with him. He does not lose. I do not know how he does it; however, he does not lose. He had never run a marathon and he ran against eight people, who run them every year. He bet Marti that he would be first. He would have to call her 'Your Majesty' for the rest of her life, if he did not win. If he did, she had to wear dresses to work every day. She wanted to back out of the bet, but he baited her and used her own words against her, until she finally agreed. He beat everyone to the finish line by over ten minutes. We still do not know how he did it, but we will find out; then we will kill him. He is that good, your Lordship and his mind is as sharp as any you will ever come up against.\"\n\nLord Whitbred laughed and said to Fiona, \"Where are you going on your honeymoon?\"\n\n\"I cannot go on a honeymoon, now. I will have to see a doctor, about the baby. I will have to check about school, and I have to check with a friend, to make sure she is feeling better. We will put it off until Christmas.\"\n\n\"I hate to say this, but it works out perfect for me. I will stay a few days longer and I have a surprise for you and a few of your friends. Will you help me set up a catered dinner, at whoever has the largest open space and we will have some fun for an evening, before I leave.\"\n\n\"Of course, your Lordship. My apartment has the largest open space and we can have everyone over for a dinner there. Whom would you like to invite?\"\n\n\"The Schneider's, Dycke and Payne, the Temples, including Stephen and his fianc\u00e9e, Turnquest Schneider, Martina, Gabby, Desiree, Angus McFarland, and everyone that escorted you to Paris. If we could do this on Wednesday evening, I will have everything delivered and set up at your home in the afternoon, and the food delivered in the evening. There should be enough people, for a lively get together.\"\n\n\"Wednesday will be fine, your Lordship. I will advise everyone about the party and they will be there, with great anticipation.\"\n\n\"You be well, my daughter, and do not worry about the baby, he will be just fine.\"\n\n\"Your Lordship, I just found out I am pregnant. There is no way to know, at this early stage, what sex the baby is.\"\n\n\"In that case, Fiona, his middle name will be Jeffrey.\"\n\n\"Yes, your Lordship, I will tell Bob that he is going to have a son, whose middle name is going to be Jeffrey. I am sure he will be very pleased.\n\nSunday afternoon, Dycke, Payne, and their mothers went to the apartment to look around. \n\nDycke asked, \"Payne which room is the playroom?\"\n\nPayne looked at him and said, \"I do not know? I did not plan for a playroom.\"\n\n\"We were going to sleep on the floor?\"\n\nPayne looked at him and said, \"You son of a bitch,\" and chased after him through the unwalled apartment.\n\nDycke yelled, \"I told you not to talk about my mother, that way.\"\n\n\"I was not talking about your mother, you bastard.\"\n\n\"There you go, again. Now, I am going to have to spank you, because you insulted my mother, twice.\"\n\nPayne screamed, because the tables had turned and Dycke was chasing her. \n\nThe mothers were standing on the terrace, laughing uncontrollably.\n\nWhen playtime was over, Dycke asked the three women if it would be a good idea to have a professional decorator help Payne decorate part of the apartment in early childhood furniture. He thought it was a good idea, because he and Payne would be running around it, at all hours of the day and night, like children. In addition, they were hoping to have the sound of little feet running around the apartment, sooner rather than later.\n\nNo decision was made, but it was left open for discussion.\n\nTuesday morning, Bacillica went to her doctor. She wanted to find out why she had been so sick lately, and to get a prescription for birth control pills.\n\nHer doctor took blood and a urine sample. Then, she started a complete physical examination.\n\nBacillica told her doctor that her breasts had been extremely tender lately and hoped that she had not developed anything serious.\n\nThe doctor started with her neck and checked her glands and under her arms and then her breasts, and her stomach and kidneys. Everything seemed fine. She checked her abdomen, which was a little swollen, and tender. The doctor proceeded to put Basilica's feet into the stirrups and began the pelvic exam.\n\nWhen the doctor finished her pelvic exam, she smiled and asked, \"Bacillica, what do you consider serious?\"\n\n\"I have been very worried that I have cancer.\"\n\n\"No Bacillica, you do not have cancer. You have a lifelong disease.\"\n\n\"Oh, no, what is it?\"\n\n\"Bacillica, you are pregnant.\"\n\n\"How can I be pregnant? Last year you told me I might be going through the beginning stages of my changes, because my periods were irregular.\"\n\n\"The magic part of that sentence was 'MIGHT BE GOING' not you are going through menopause. I would say you are about five to six weeks pregnant. It is early enough, if you want me to terminate the pregnancy, I can, because of your age, but you are very healthy and should have no problem carrying this baby to term.\"\n\n\"I am Catholic. There is no way I could terminate this baby, even if my life depended on it. Besides, when I tell my husband I am pregnant, he is going to kill me, and that will solve the problem.\"\n\nThe doctor smiled and said, \"I would not bet on that happening. Late in life, babies are sometimes loved the most. I want to see you in six weeks, for your first sonogram. My nurse will give you all the prescriptions you need for your prenatal vitamins, and prescription medicines. Take them as if your life depends on it, because your baby's life does.\"\n\nBacillica walked out of the doctor's office in a daze. When Frankie saw her, she said, \"Oh my goodness, Fiona was right.\"\n\nBacillica looked at Frankie and asked, \"Are there any secrets kept between agents?\"\n\n\"Bacillica, there cannot be. Your lives depend on the knowledge we have. The more we know about what is going on in your lives, the better we can protect you. It does not leave our circle, but we have to know. If Dycke had a mistress, and we did not know about it, that makes him vulnerable, when he is with her. We would not tell Payne, because it is not our business to tell her, but we have to know.\"",
        "Bacillica nodded her head and said, \"I understand. Please take me to my husband's office. I may as well get this over with, as soon as possible.\"\n\nFrankie said to her, \"Five will get you ten that he is thrilled.\"\n\n\"Five will get you ten, that he is unconscious, after I tell him.\"\n\nShe looked out the window during the drive to Chad's office, hoping that he would not be disappointed with her. He believed that she had continued taking her birth control pills, even though they had not been having sex for a very long time. She did not see the point in taking them, because of all the warnings that came with them and with the mistake she made with the doctor's wording about her going through 'her changes,' she was going to be a mother, again, at the age of forty-two. This child would graduate college, while she was collecting Social Security. \n\nGrace walked with Bacillica to Chad's office, and his secretary told him that his wife was here. Chad asked her to send her in and when he looked at her face, he knew something was wrong. He went to her, took her in his arms, and said, \"Cili, what is the matter?\"\n\n\"Chad, I think it is best that you sit down.\"\n\n\"Cili, I am fine, you went to the doctor this morning. What is wrong?\"\n\n\"I am pregnant!\"\n\nChad's eyes dilated as he looked into her eyes. \"Really? Are you sure? How far along are you? Is everything okay? Did the doctor say you would be okay? Is there any problem with you carrying the baby? You are not answering me. Talk to me, Cili, say something?\"\n\nBacillica smiled at her husband and said, \"If you would stop asking so many questions. I could answer them one at a time. I thought you were going to kill me, because I got pregnant. I stopped taking the pill because we stopped having sex. There was no sense in my taking them, with all the warnings, so I stopped. Then, all of a sudden, we started acting like rabbits, and I became pregnant. I did not even think about the pill, until Saturday, when Fiona asked me, if I was pregnant. I had been nauseous. I had been having headaches, and I did not put it together, until she asked me. The doctor confirmed it this morning. I am six weeks pregnant. As I counted back six weeks, you got me pregnant the day I got back from Paris. Two years of sperm met one egg and overpowered it. Congratulations, daddy.\"\n\nChad, kissed his wife and said, \"It was that picture on the ceiling. I told you it made me think of all the nasty things I could do to you. It also did one thing I did not think of, but I could not be happier for the both of us. Can we still go on vacation?\"\n\n\"I did not ask the doctor that question. I will call the office and find out if we are able to fly. If not, we will take a cruise.\"\n\n\"That sounds great to me, Cili. I will be free at the end of September. I put the ads online and in the paper for a senior design architect, as I promised. I will interview the people as they come in. I wonder what the girls and Dycke are going to say, when they hear they are going to have a baby brother or sister in the family.\"\n\nBacillica replied, \"Dycke and Payne will be thrilled, the girls will think that we are nuts.\"\n\n\"I am with Dycke and Payne. I am thrilled.\"\n\n\"I was so worried that you would not be, Chad. I did not know what your reaction would be. You work so hard already. Now you will have to work longer to support another child.\"\n\n\"Yes, and I really hate my job.\"\n\n\"Bacillica laughed at her husband. She held him tight, kissed him, and told him that she loved him, with all her heart and soul.\"\n\nChad whispered in her ear, \"Regardless of what you tell me, I am not taking that picture off the ceiling.\"\n\nShe hit him, blushed, and smiled.\n\nWhen she left his office, she took Frankie by the arm, and said, \"You are going to pay for this baby forever, you know.\"\n\nFrankie looked at her and said, \"Me, why me?\"\n\n\"You sent him the naked picture of me, from Paris. The picture got into his libido. He got all horny, started screwing me like a rabbit, and that is how I wound up pregnant. Therefore, it is your fault. You are going to pay, until this child turns eighteen.\"\n\n\"Does that mean I have job security, for nineteen years?\"\n\n\"Yes it does.\"\n\n\"Oh goody.\"\n\n\"Let's go get pizza, an egg cream, and some pickles. I can blame it on the pregnancy.\"\n\nFrankie laughed at her, as they walked towards the elevator.\n\nThe news spread like wildfire. Chad called Dycke, who was, as he expected, thrilled for both of them. Dycke called Payne, who, after the shock wore off said, \"Our children will be able to play with a lot of other children in our family.\"\n\nPayne called her mother and Alletta started counting back to make sure she had not missed a period. She said to Payne, \"I am very happy for her. I am also very happy for me, because I am not pregnant.\"\n\nChad called his oldest daughter, Maureen, to tell her the news and she reacted true to form. \"Is mom crazy? She is too old to start another family. What about her health, dad; how is your health, dad? You will both be in your late sixties, when this child graduates college.\" So many things can go wrong at her age. Her blood pressure could spike and we could lose her. I do not want that to happen. I love her too much.\"\n\n\"Maureen, the doctor said your mother is in perfect health, and will be able to carry the baby to term. I want you to be happy for her, and treat her with kindness and respect.\"\n\n\"I always have, dad, and I always will. I will stop by this weekend, to see her.\"\n\nChad nearly had an identical conversation, with his youngest daughter, Ambrosia. She, also, would be there, this weekend to see her mother. He grinned and thought Dycke would probably want to be in Hawaii.\"\n\nAfter Bacillica got off the phone with her doctor, she was slightly upset. The doctor told her she was not going anywhere for at least another two weeks, or until all her blood work came back. She wanted to be sure that everything was fine, before she became a world traveler. She also needed to be inoculated for a few diseases if she was going to certain countries in Africa, Asia, or the Middle East.\n\nShe put the doctor's mind at ease and told her that her traveling would be in the Western Hemisphere or Europe.\"\n\nWednesday, Bob and Fiona's home became a little hectic. The tables, chairs, and dinnerware arrived shortly after 1 PM. They were placed, in a pile, in the middle of the living area, and the men departed. Shortly afterwards, the glasses and stemware arrived. By four o'clock, it appeared that a feast, for one hundred people, was going to be prepared that evening. Dinner was supposed to start at seven and everything was still in a pile in the middle of the room. Fiona had no way to contact Lord Whitbred to find out if anything had gone wrong with his plans, but she need not have worried.\n\nAt five-thirty, an army of 30 men and women arrived at her home, and started to set up everything that was required for the evening. Twenty minutes later, they were finished. Some of them assembled a twenty by thirty viewing screen, which Bob believed would be for the evening's entertainment, while others changed into formal attire, to act as servers, during the party.\n\nAt 6:30P.M., guests started to arrive. Fiona and Bacillica hugged each other when they met, and talked about being pregnant. Dycke and Payne arrived, with his Uncle Turnquest, who was lecturing Dycke about the wonders of owning property, and the potential tax write offs, in Switzerland. Dycke was hanging on his every word. Lord Whitbred arrived, with Marti on his arm, and she looked wonderful in a Sapphire blue dress. When everyone saw them enter, they stopped what they were doing, and applauded. Lord Whitbred extended his arm so Marti would stand, 'on her own', and know the applause was for her. She blushed, bright pink, which accentuated the blue in her dress, wonderfully. She would never get used to this. She bowed, slightly. Lord Whitbred went over and whispered something into her ear. She shook her head 'no', and he said it again, softly, but with more authority.\n\nMartina crossed her right leg behind her left, and curtsied. Everyone in the room, including Lord Whitbred, applauded loudly, and chuckled.\"\n\nMarti looked at him, with fire in her eyes, and he said to her \"Martina, play nice.\"\n\n\"Yes; your Lordship.\"\n\nAll the women in the room, went over to Marti, and told her how stunning she looked. They continued asking her all the questions, one woman would ask another, but no one had ever asked Marti before. This was new territory for her, and she would have to get used to it, quickly.\n\nPromptly at seven o'clock, the food arrived. Fiona and Payne quickly realized that the menu was the same as it was in Paris, when they were being fitted for their wedding dresses. They did not mind at all, because they were able to eat the duck confit, cassoulet, truffles, chocolate mousse, and the tarts, this time. Dycke, Payne, Steve, and Cynthia were restricted to one glass of wine, each, because they were only eighteen, and unlike Paris, they were under the drinking age in the United States. However, everyone else enjoyed the champagnes and wines, throughout their meal.\n\nWhen the main meal was over, and before the final desserts were served, Lord Whitbred stood up and made an announcement. I have made a documentary, which I am going to edit and may present at the Cannes Film Festival, in the comedy division. I have not had a chance to add music, or upgrade the sound as of yet, but I would like your opinions on what you see here tonight. I am only showing thirty minutes of this documentary, which is nearly 14 hours long. Some scenes are graphic in nature. There is nudity and some language that may be considered offensive. Please hold your comments, until the end.\n\nA rear screen projector was started and scenes of Paris were displayed in front of them. The camera zoomed in on an innocuous looking store with two plain looking bridal dresses and a dusty entrance. Fiona yelled, \"Oh, fuck\" and Lord Whitbred laughed.\n\nFrom high above the room cameras zoomed in on a group of people entering the circular studio. Lead in by Suzette, everyone was very talkative and excited. Payne recognized herself and said, \"Oh No.\" Fiona replied, \"Oh yes.\" Reactions started around the room as more and more people recognize themselves in the video being displayed. Gracie said, \"Oh shit!\" \n\nDycke smiled asked, \"Lord Jeffrey, am I going to see my mother in an X-rated movie?\"\n\n\"No, Dycke, more like RRR. The language is X, but the visuals are not.\"\n\nYou could hear Fiona scream as they showed her the back of the dress, and Suzette, ordering her to undress. When she did not do it and Suzette ordered her ten women to undress her, the look on Fiona's face was priceless. Everyone, especially Bob, was laughing mightily. Alvena was laughing along, with him. Hearing these tiny women order Fiona to stand straight and not to move was priceless. When she did move, and was criticized, the face she gave was more priceless than the one before it. It did not matter that she was naked, because no one cared. Everyone was looking at her face, because it was the center of attention.\n\nWhen Payne was brought in to the scene, her scream was like fingernails being dragged along a chalkboard. Suzette told her women to strip her, gently, and everyone in the room laughed, because Suzette's women were like army ants. They went after clothes, voraciously. If you had them on, they wanted them off, \"Now.\"\n\nPayne's arms tried to protect her clothes from them, but it was no use. When she went to protect her panties, her bra was gone. When she went to protect her chest, her panties were gone. She was naked in less than thirty seconds. Just like Fiona, she was told to stand straight, and still, continuously. When she did not, she was criticized in both French and English. When she responded in both languages, the seamstresses criticized her skills, in both languages and told her to stand straight and still, again. When she did not, they stuck her with a pin, and she screamed, until she acquiesced.\n\nThen came the fun part: \"lunch.\" Four cameras zoomed in to catch every glance at the feast made by Fiona and Payne. When Suzette handed them their plates of quiche, oysters, and a bottle of water, the looks on their faces were magnificent. The scene went into slow motion, and everyone, at the party, laughed at both women. Even Payne and Fiona were laughing, at themselves. If looks could kill, Suzette was a dead woman. \n\nWhen the cameras resumed normal speed, it was time for everyone to laugh at Alletta, and Bacillica. Chad knew his wife was pregnant, but no one had told Piker, until this very moment. When Chad leaned over and said to him. \"This picture got my wife pregnant.\" \n\nPiker yelled, \"Pregnant! Bacillica, you are pregnant?\"\n\n\"I guess your wife did not tell you. I am six weeks gone. He got me the night I returned from Paris.\"\n\nPiker looked at Alletta.\n\nShe looked back at him and said, \"No, I am not pregnant.\"\n\nPiker said, \"Good girl.\"\n\nDycke looked at him and said, \"Do not worry about it dad. One pregnant female in your family, at a time, is going to be enough for us to handle.\"\n\nPiker looked at Dycke and said, \"Payne is pregnant?\"\n\nPayne yelled, \"I am not pregnant.\"\n\nDycke looked at her and said, \"Do you want to bet?\"\n\nPayne stopped. They had only been married two weeks. She was due for her period, in a few days. There was no way she could be pregnant. There was no way for him to know if she was pregnant. She thought to herself, \"Finally, I have him. I am going to win a bet, with the unbeatable, Dycke Schneider.\"\n\n\"Yes, I will bet you I am not pregnant.\"\n\n\"Okay, what do you want for it?\"\n\n\"I want my pink sports car, and I want to drive it.\"\n\n\"That is a hard one for me; because I have seen you drive.\"\n\n\"Are you afraid that you will lose?\"\n\n\"No, I am afraid I would lose you, if I lose. Okay I will make you a deal. You can drive the sports car, as long as Gabby is with you.\"\n\n\"I agree. What do you want?\"\n\n\"When I win, whenever I ask you a question, regarding men, you will say, \"Yes, men are superior to women.\"\n\nPayne said, \"Never! I will never say that to anyone.\"\n\n\"Now, who was afraid they are going to lose?\"\n\n\"You son of a bitch.\"\n\n\"Payne, how many times do I have to tell you not to speak about my mother, that way?\"\n\nPayne looked at Bacillica and said, \"Mom, I am not talking about you, when I say that to him.\"\n\nBacillica smiled and said, \"I know that dear.\"\n\nDycke asked, \"Do we, or do we not have a bet?\"\n\n\"How are we going to know who wins?\"\n\nGracie said, \"There is a store down the street that has the testing supplies. That is how we verified Fiona was pregnant.\"\n\nDycke stood up and said, \"I will be right back, I will go to the store and get one.\"\n\nFiona said, \"No Dycke, buy two of them. Different brands using different methods, that way it will be a fair test.\"\n\nSteve stood up and said, \"I will go with him to make sure he does not tamper with them.\"\n\nAs they were walking towards the store, Steve stopped Dycke. He said, \"Dycke, I have not had a chance to thank you properly, for what you did for Cynthia and me. It was very generous and kind of you. It made Cynthia very, very happy, and that happiness meant the world to me. After what she went through last year, I was afraid that she would never smile again. The ring, and the proposal that went with it, meant the world to her. I want you to know, if I can ever do anything for you, all you have to do is ask, and I will do it.\"\n\nDycke looked at Steve, and smiled. He said, \"I am going to ask you for something now, and you do not have to do it, if you do not want to do it.\"\n\nSteve said, \"I told you I will do anything, and if it is within my power to do it, I will do it immediately.\"\n\n\"Okay Steve, here goes, 'Will you be my friend?'\"\n\nSteve said, \"Oh, no, not that. You had to ask for that. Do you know how hard that is going to be? I am going to have to visit your home and be nice to you. I am going to have to visit my sister, in your eighteen thousand square foot apartment, overlooking the harbor. Do you know how hard that is going to be on Cynthia and me? We will have to 'Segway' race, around you apartment. You are going to force us to go into your sauna, whirlpool, and hot tub. You are going to have a 'hot tub', right? We are going to have to sleep in a permanent guest room facing the river. We will be forced to baby sit, during those short summer vacations you and Payne are going to take, so Cynthia and I can charge you exorbitant prices for overtime, sleeping over and changing diapers. I, also, want my own personal Segway, Dycke. I will say okay, but this is going to be very hard on Cynthia and I to handle.\"\n\n\"Yes Steve and I know the sacrifices, you will have to live with, but that is what I am asking, and if you cannot do it, I will understand.\"\n\n\"Okay, let's try this, first. Let's shake hands, and if I do not die; we will go from there.\"\n\nDycke laughed as he extended his hand, and Steve took it.\n\nSteve said, \"Well, we both made it through that, so we will see what happens, from this point on, okay.\"\n\n\"Okay, Steve, but remember I still have the title to the Corvette. Straight A's would be nice, and I would like to see you win, at least, one race this year. After all, you will not be looking at my ass this time.\"\n\n\"Dycke, you are still a pain in my ass, and yes, I know, my sister says the same thing.\"\n\nDycke replied, \"Let's go to the store, before they think we eloped.\"\n\nWhen they returned from the store, Cynthia's first question was, \"Did you two enjoy making out.\"\n\nSteve replied, \"You did not say, and I did not agree to, not fooling around with men. I looked at Dycke's ass so many times racing against him this past year; I decided to try a fling on the wild side. Dycke was very accommodating, and afterwards, we shook hands, to seal our new friendship.\" \n\nEveryone laughed. Steve had gotten the better of Cynthia, this time, and she frowned at him to show her displeasure. \n\nShe said to him, \"I will get you for that one.\"\n\nSteve kissed her, and said, \"That is what I was hoping you would say.\"\n\nSteve handed his sister, the two small packages, and before she left for the bathroom, she said to Dycke, \"I get to pick out the sports car, right.\"\n\n\"Any car you want, in the entire world.\"\n\n\"That is what I wanted to hear, loser.\"\n\n\"Remember, Payne, 'Men are superior to women.'\"\n\nPayne snarled at Dycke, and as she went into the bathroom, she said, \"Not on this planet, nor any other planet, with intelligent life.\"\n\nA rumble of laughter swept around the table.\n\n\n\nShe turned on the light, read the instructions, and urinated on both test strips.\n\nSeveral minutes later, Payne walked out of the bathroom, and as she approached the table, all eyes turned towards her.\n\nShe looked straight at Dycke, threw both test strips at him, and yelled,\n\n\"I HATE YOU DYCKE SCHNEIDER!\"\n\n                     <center>The End or the End of the Beginning,\n\nYou Decide.</center>\n\nNote: I hope you have enjoyed reading \"Having Fun with Dycke and Payne\" as much as I did writing it, for you. Your comments have been appreciated. Thank you, very much! Prolonged_Debut10"
    ],
    "authorname": "Prolonged_Debut10",
    "tags": [
        "romance",
        "revenge",
        "love",
        "travel",
        "lust",
        "adventure",
        "anal",
        "inheritance",
        "oral"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/having-fun-with-dycke-and-payne-ch-14"
}