{
    "title": "Kassandra, Woman of Mystery",
    "pages": [
        "Sometimes living with danger is exciting.\n\nI met Kassandra not long after I took up residence on Chicago's northside while I was attending DePaul University as I worked on my MFA in 2001. I had managed to sublet a studio apartment three blocks from the campus from the son of the previous tenant, an older woman who had moved to an assisted living facility in Evanston because of her health.\n\nMy new abode was the rear apartment on the fourth floor of a mid-century five-floor walkup in the Lincoln Park area. A Chinese restaurant occupied the street level of the building at 2415 N. Halstead Avenue, and there was a separate entrance to a stairway that allowed access to the upper floors. For the first month and a half I lived there I had no contact with any of my neighbors, but that changed one fateful day.\n\nSince I first moved into my new abode, I was serenated almost nightly by loud music that came from the apartment directly above. I didn't mind the volume, because I enjoyed their taste in rock, jazz, rhythm &amp; blues, and classical music. I often found myself humming along as I cooked, cleaned, and did my schoolwork. Still, I wondered who this kindred soul was.\n\nMy question about the identity of my upstairs neighbor was answered one morning in mid-October as I sat in my regular booth in the front of 'The Coffeehouse', a small neighborhood coffee shop directly across the street from my apartment. As I mindlessly gazed out the front window people watching and pondering my place in the world, I was roused from my reverie by a voice that sounded almost angelic asking, \"Do you mind if I sit here?\" I looked up to see a mass of curly blonde hair that framed the most beautiful blue eyes I had ever seen. I realized I must have been staring when she smiled, and I motioned for her to sit.\n\nAs she sat down with a mug of steaming black coffee just like mine, I took the rest of her in. She appeared to be about 5' 6\" and was slender but had curves in all the right places. She was wearing skinny jeans and a faded jean jacket over a white crop top that was straining against her firm B-cups and erect nipples, and her long slender fingers were tipped with long blood red painted nails that looked dangerously sharp. When my eyes returned to those hypnotic blue eyes, I realized that she was older than me, but was perhaps the most beautiful woman I had ever set eyes on. I found myself completely captivated by her beautiful smile that was ringed by blood red lipstick that matched her nails.\n\nShe started the conversation saying, \"Hi, I'm Kassandra Inverness, and I've seen you in my building. You rented old Mrs. Kowalski's studio just below me, didn't you?\" When I told her I had, she said, \"It's a lovely place, I used to check on Mrs. K for her son, and I was saddened when she left. I hope you don't mind me playing my music so loud.\"\n\nWhen I finally found my voice, I cleared my throat, and said, \"I'm Todd Magnussen, and the volume doesn't bother me at all. In fact, I'm really enjoying your taste in music.\"\n\nShe looked at me puzzled, and remarked, \"Really, I didn't think that anyone your age enjoyed 'real music'.\"\n\nI smiled and said, \"My father is the Chair of the School of Music at Millikin University, and I grew up listening to everything from Beethoven to Beck. The only kind of music I don't care for is Rap, but I do like Hip-Hop, because they use classic Jaz riffs in their 'compositions'.\"\n\nShe nodded, and changed the subject, saying, \"So Todd, how is a small-town guy like you coping with our great big city? Is all of this insanity too much for you?\"\n\nI smiled and answered, \"Growing up in Decatur didn't prepare me for Chitown, but some of my father's students were from the suburbs, and most of the roommates I've had over the last four years in Carbondale when I was getting my BA, were Chicagoans. They filled me in on a lot of the local 'customs', including dealing with panhandlers, and riding the EL. I'm also glad to be living so close to Wrigley Field. I grew up one of the few Cub fans in a city full of Cardinal fans.\"\n\nShe smiled and then and pointed to the Cubs button on her jacket. Then she motioned to my Nikon FM-2 and the 35-105 Ais Nikkor attached to it that was on the table next to my coffee, saying, \"Asking if you are a photographer seems unnecessary, because that 'classic' from the '80s already answered my question.\" I told her that my 'Baby' was a present from my father for my 14<sup>th</sup> birthday and added that most of my classmates at DePaul had modern autofocus electronic marvels and wouldn't even know how to use a camera like mine. We spent the next two hours talking about photography, and I was impressed by how much she knew about cameras and film. She was impressed when I told her that I did my own developing and printing in the lab at DePaul.\n\nNext, she told me an 'abridged version' of her 'life story'.\n\nShe had been born in a Navy hospital in American Samoa in 1964, when her father was stationed there. She grew up in San Diego, had always loved martial arts, and by the time she graduated UCLA with a degree in Political Science, was a black belt Karate.\n\nShe told me a little about her brief career as a model that had helped her pay for her undergraduate degree in Art History. She finished her story by telling me how she was introduced to a 'black ops' guy at a party after she graduated, and how he recruited her for the CIA. She said they had traveled all over the world for the next decade, 'fixing' things.\n\nShe finished her story by saying, \"When I get to know you better, I'll fill you in on some of the 'gory' details.\"\n\nAs she was leaving, she said, \"By the way, when you take Dr. Kelso's 'Art Nude' class, I'd love to be your model. When the weather permits, I sunbathe nude on my balcony, so I never have any tan lines. You're welcome to join me when the weather gets warm if you like.\"\n\nI watched her walk out of the coffee shop and followed her perfect ass and shapely legs that ended in brown Doc Martins, wiggle their way north on Halstead, until she disappeared around the corner. When I finally pulled myself together, I realized that I had developed a painfully uncomfortable erection during my conversation with this incredibly beautiful woman. Then I did the math in my head and realized she was almost two decades older than me.\n\nI knew most of my friends would consider her a MILF, and even though I was not normally attracted to older women, I couldn't stop thinking about her. I looked at my watch and realized that my time slot at the University photo lab was in fifteen minutes, so I left my empty cup on the counter next to hers, grabbed my camera and backpack, left the coffee shop, and headed for the lab, making it there with five minutes to spare.\n\nOnce inside the darkroom, I loaded the three exposed rolls of 36 exposure Kodak Tri-X 400 I had taken for my semester project into the soup and set the timers. When the processing was finished, I rinsed the negatives, hung them to dry, and went to the closest vending machine to buy a Coke.\n\nAs I was sitting on the windowsill thinking about this beautiful mysterious woman, Adam Ruggieri, an old roommate from SIU, walked up to me and asked, \"Dude, who was that hot babe you were talking to at the coffee shop this morning?\"\n\nI smiled and said, \"That was Kassandra, my neighbor.\"\n\nAdam asked, \"Why haven't you told me about her before? Man, she's smokin' hot!\"\n\nI grinned and said, \"Actually, I only met her in person today. I've been listening to the music coming through the floor for a couple of months but never knew who my upstairs neighbor was until she asked to sit with me this morning.\"\n\nThe rest of our conversation consisted of Adam telling me all the things I should be doing to 'get into her pants', and me nodding politely in agreement. When my friend stopped to take a breath, I looked at my watch and realized my negatives were probably dry. I excused myself saying, \"Later dude, I've got work to finish,\" and returned to the lab. I took my now dry negatives down and I cut them into shorter strips. I arranged them on an 8\"X10\" sheet of Tri-X paper and made contact prints of the three rolls I had processed. Since Kodak had endowed DePaul's Art school, we were provided with their products for free, so this was a great deal for a 'financially challenged' post-grad students like myself.\n\nI headed to my next class when I was finished. When I was done for the day, I headed back to my apartment to fix something to eat and look over the contact prints to decide which images were worth using for my semester project.\n\nAfter I ate, I sat at the small desk next to the convertible couch, that was the only bed left in my apartment, because Mrs. Kowalski's hospital bed had left with her. The sofa-bed, however, was much more comfortable than the dorm room beds I had when I attended SIUC, and I slept well on it. I used my magnifier to choose the images that were good enough for my semester project, 'The invisible Homeless in Chicago'.\n\nOf the three rolls I was using for my project, the first one was shot in the Loop, the second on the Westside, and the third on Lower Wacker Drive. I decided to pick the best dozen images from each roll and make 5\"X7\" 'proofs' of my choices on my next visit to the lab. I would show them to Alfredo Sanchez, Professor Phillip's assistant and let him pick what he thought were the best ones. The rules of the semester project said that each student could submit no more than a dozen 8\"X10\" prints matted to 11\"X14\".\n\nI had, however, been told by Rob Fury in Art History class who had taken Professor Phillips' class last year, that my professor was more impressed with a lesser number of more 'Powerful' images. Because of this, I had decided to limit my final selections to 8 images.\n\nJust as I finished making my choices, I heard the music upstairs start. Tonight, it was Wilson Pickett's 'Mustang Sally' that was shaking my walls, so I knew it was going to be a rhythm &amp; blues and soul night. I put my things away, turned off all my lights except for the lamp next to my 'bed' and started dancing around the room as I undressed and got ready for bed.\n\nBy the time Otis Redding's 'Try a Little Tenderness' was just finishing, I was completely nude, and climbed into bed. I turned off the light and fell asleep listening to Wilson Pickett wailing, \"I'm gonna wait till the Midnight hour.....\"\n\nA week later, I was sitting in my regular booth at 'The Coffeehouse' looking over the proofs I had just picked up from Alfredo and was considering his choices, when Kassandra slid into the seat across from me, dressed exactly as she had been the first time we met, except this time her lips and nails were smoky brown and matched the eye shadow she was wearing.\n\n\"Wat'cha doin' Todd?\" she said with that thousand-watt smile on her face.\n\nI told her, \"I'm trying to decide which images to use for my semester project. I submitted proofs of the best dozen shots from each of the three rolls I took to Professor Phillip's assistant Alfredo, as some of the other students had suggested. However, the images he picked were not as good as the ones I thought were my best.\"\n\nKassandra smiled and asked, \"Did you offer to pay Alfredo anything?\" When I looked at her puzzled, she said, \"Alfredo is a pervert and a corrupt bastard. If you didn't bribe him, he probably picked your worst images. Gerald Phillips is a fine artist, a talented photographer, and an honest man, but he's too busy to take care of the day-to-day details, so he lets Alfredo have free reign with stuff like this. Show me what you've got there.\"\n\nI slid the three dozen 5\"X7\" proofs across the table to her, and she shuffled them around until she had them spread out across the whole table, arranged into three groups of twelve. She had them grouped together by the locations where I had taken them. Then she started removing certain ones and setting them aside. When she was finished, what remained were the eight images I had originally picked as my best.\n\nThen she said, \"Todd, these are some very powerful photographs. I'm guessing that that your project is about the homeless in Chicago?\" When I nodded, she said, \"And the ones that Alfredo chose are now in my 'discard pile', right?\" When I nodded again, she said, \"I know you are limited to twelve images, but you've been told that Professor Phillips is more impressed with a lesser number of more powerful images, is that also right?\"\n\nWhen I told her she was, Kassandra said, \"Todd, your assumptions are correct, Gerry is more impressed by quality over quantity, and in my opinion, these are your best eight images.\"\n\nThen she removed two proofs that I had originally been 'on the fence' about and said, \"I think that if you use these six images and print them on Illford Premium Max paper using Kodak chemicals, your results will be well worth the extra effort and cost and will earn you exceptional marks.\"\n\nBefore I could open my mouth, she continued, \"Todd, I know that Kodak provides the school with all the supplies you need, but printing these on Illford paper will make your photos stand out from the crowd. Are you allowed to have someone help you in the lab?\"\n\nWhen I told her I could, she asked, \"When is your next lab time slot?\"\n\nWhen I said it was next Thursday at 10AM, she said, \"Meet me here at 9:30 with your negatives, and we'll work together. I'll provide the paper and teach you some of the secrets I've learned over the years from the best people in the business.\"\n\nKassandra looked at the clock on the wall of the coffee shop and said, \"Todd, I have an appointment I need to keep, and I know you have classes, but I would really like to talk to you about your 'project' some more. I'd like to make you dinner tonight, so if you don't have any other plans, knock on my door about 'sevenish', and we can finish our discussion.\"\n\nShe stood up and continued, \"You don't need to bring anything other than yourself and the appendage that seems to be causing that large bulge in your pants every time we meet.\" She smiled when she saw me blush, and as she left the coffeeshop, I could hear her giggling.\n\nAfter she walked out the door, I watched the sexiest ass I had ever seen as it walked up the street and disappeared around the corner. As I finished my coffee, I realized how embarrassed I was that she had seen through my calm facade.\n\nI realized that not only had I gotten an erection both times we had met, I also got hard whenever I thought about her. I wondered, 'Was I becoming obsessed with this gorgeous older woman? Was she alright with this? More important, how did she feel about me? Did she want my body as much as I wanted hers?'\n\nThese questions would haunt me for the rest of the day and make it difficult to concentrate during my Art History and Photojournalism classes. When I got back to my apartment, I showered, shaved, and brushed my teeth. I decided to forgo underwear and dressed in a well-worn pair of 501's, a tee shirt with Andy Warhol's 'Marilyn' printed on the front, and my brown Topsiders, without socks.\n\nWhen I stepped onto the landing of the top floor, I heard Vivaldi's 'The Four Seasons' coming from apartment 5B. I knocked on her door, and when it opened every one of my senses were overwhelmed by the sights, sounds, and aromas what greeted me.\n\nWhat I saw took my breath away and caused an immediate painful erection. Kassandra had tied her curly blonde hair up in a messy bun and appeared to only be wearing a white apron that hung around her neck, covering her breasts, and was tied around her waist.\n\nMy ears were overwhelmed by the sound that seemed to envelop me, and I realized it was coming from two custom made large floor-to-ceiling column speakers. Standing between them was a bookcase with the upper shelf filled with books. The next shelf held a McIntosh tuner and preamp next to a McIntosh tube type 400A amplifier. The third shelf held an Ampex 7\u00bd' reel to reel tape machine, next to a professional looking turntable. The bottom two shelves were completely filled with vinyl albums in their original covers, and I wondered what treasures were hidden there because I had heard nothing but great music so far.\n\nMy sense of smell was also overwhelmed by the aromas of garlic, oregano, fennel, rosemary, cilantro, and basil. The apartment smelled exactly like my grandmother Tombolo's kitchen every Sunday when we visited her house after Sunday Mass when I was small.\n\nShe kissed me and grasped my tumescence that was trapped by my left pantleg, and said, \"Someone's happy to see me.\"\n\nWhen she turned around, my suspicions were confirmed, because I saw 'in the flesh' what I had been the object of my lust since the day we first met. After I closed the door behind me, I watched her naked posterior wiggle as she walked across the room toward the kitchenette, as she said, \"My ass looks better without jeans covering it up, doesn't it sweetie?\"\n\nWithout thinking, I answered, \"It looks amazing no matter how you dress it.\" When she turned around, she smiled when she saw how much I was blushing, and said, \"Dinner will be ready soon, relax and make yourself comfortable.\" When I sat on her couch, she looked over her shoulder and said, \"Loose the textiles Todd, whenever I have guests, I expect them to be naked, just like me.\"\n\nI quickly slipped off my shoes and tee shirt, and as I unbuttoned my jeans and slid them down my legs, I watched her smile get even bigger when she saw my growing erection, 'in the flesh'. Then Kassandra turned around, turned the oven control to 'Warm', took off the apron and walked over to the couch where she sat next to me.\n\nShe took my hard manhood in both hands and said, \"I need an appetizer before dinner,\" and bent down to kiss its circumcised head. She smiled and said, \"You have a beautiful cock, Todd. I have been wondering what he looked like since the first time I saw that sexy bulge in your pants.\" Then she took me into her mouth and swallowed me until her lips were touching my pubes. I could see the head was lodged in her throat by the way her neck was bulging.\n\nShe pulled her head back, licked my precum from its head, and said 'Yummy.\" Then she went to work, licking, sucking, slurping, and stroking me until I was on the edge of exploding. Somehow, she knew what was about to happen, took me deep into her mouth again, and started swallowing as soon as I erupted. She drank every drop of my seed, and when I finished squirting, she eased back off me, licking the final remnants from my slit and swallowed the rest of my load.\n\nThen she kissed me and said, \"Todd, you really taste yummy, but now it's your turn to 'take care of me'.\"\n\nShe lay back on the couch and I looked at the most beautiful vulva I had ever seen. It was smooth and hairless except for a small tuft of blonde hair at the top that looked like a 'Hitler mustache'. Her lower lips were pale pink, swollen and completely hid everything, like a very young woman. When she spread her legs, her womanhood started opening like a flower blooming in the early spring. As her Labia Majora parted, her Labia Minora came into view, and they were bright pink and very wet. When she spread them open with her fingers, her vagina gaped open, and was oozing her fragrant juices. I leaned forward and inhaled, enjoying the wonderfully erotic fragrance.\n\nI looked up into her lust filled eyes and said, \"Kassandra, you smell like heaven,\" just before I dove tongue first into what turned out to be the most delicious and responsive vagina I would ever encounter during my lifetime. It tasted like ambrosia and spasmed on my tongue when I reached in and 'tickled' her very prominent 'G' spot.\n\nAs I dined on her and did my best to 'take her to heaven'. She seemed to be enjoying what I was doing to her, but it wasn't 'rocking her world like I normally did. When all the tricks I normally used didn't work, I tried something one of my roommates at SIU had shared with me. As I sucked on her clitoris and rammed the first two fingers of my left hand in and out of her vagina, I used her juices to wet my right thumb before I stuck it in her asshole and twisted.",
        "This caused Kassandra to erupt like Vesuvius, and squirt all over me and her couch. She shook like she was having a seizure, as she screamed, \"FFUUCCKK!!!\" at the top of her lungs.\n\nWhen she opened her eyes after several minutes, Kassandra said, \"Holy Fuck Todd, where did you learn to do that? I've never had a man make me feel that good before.\"\n\nI smiled through my soaking wet face, and said, \"I tried everything I knew that usually worked for me, but you weren't cumming, so I figured an ass as lovely as yours needed to have my thumb in it. By the way Kassandra, I've never seen anyone squirt as much as you just did.\"\n\nShe climbed up on my lap and started kissing me uncontrollably. When she finally calmed down, she said, \"Darling, you have just taken me to a place I have never been before. When we first met, I sensed there was something 'special' about you, but what I just experienced with you was akin to a 'Religious' experience. Other than my father, I have never been 'in love' with any man in my life, but what I am feeling for you right now I've never experienced before.\"\n\nI kissed her and said, \"Kassandra, I have never met anyone like you. I didn't lose my virginity until after my eighteenth birthday when I was a Senior in high school, and I've been with a lot of girls and women since then. I don't understand what just happened between us, but it is like nothing I've ever experienced before either.\"\n\nJust then both of our stomachs started to growl, and Kassandra said, \"Perhaps we should eat, and discuss this more when our appetites for food are satisfied.\"\n\nWe both went into the kitchenette and finished getting dinner ready. While Kassandra set the table and took a salad out of the refrigerator, I opened the oven and used the two hot pads that were next to the stove to remove the lasagna and set it on the stove top. I retrieved the two plates from the table and used the oversized spatula to cut and serve two generous portions. I placed the plates on the table as Kassandra filled two large glasses with chianti from a wicker covered bottle, and we sat down to eat.\n\nAbout two bites into the meal. I asked, \"This is delicious, where did you get the recipe?\"\n\nShe looked surprised, and said, \"I got it from an old friend, why do you ask?\"\n\nI answered, \"It tastes exactly like my grandmother's lasagna, and her recipe was passed down to her from her grandmother who grew up in Napoli.\"\n\nShe smiled and said, \"The old friend who gave me this recipe is Mario Batali, and he got it from his grandmother who was born in Naples as well. It really is a small world.\"\n\nI smiled and wondered, 'Does she really know Chef Batali, or is she just bullshitting me?' I would soon find out she was not a name dropper and in fact, really did know many influential people.\n\nAfter we finished eating, I helped her clean up and put away the leftovers. When we were done, Kassandra took hold of my manhood, and as she led me away from the kitchenette, it started hardening in her hand. When we got to the couch, she kept looking at it and I could tell she saw something unusual.\n\nWhile I am not huge, I am a bit larger, and a bit thicker than most men. However, what Kassandra had noticed was that my cock has a bend near the end that curves back toward my stomach.\n\nWhile this curve is not pronounced, it had always been sufficient enough to stimulate every woman's 'G' spot I had made love to. My first lover at SIU immediately noticed my 'bend' and was only too happy to show me how to use this feature to my advantage and her pleasure.\n\nEarlier, as Kassandra was caressing my cock when she was preparing to fellate me, I thought she had noticed my 'bend'. Now that I was sure she was aware of it, I said, \"Yes, my dear, I do know how to use my 'curve'.\"\n\nI saw an evil smile on her face, as she pushed me down on the couch, and climbed on top of me. She took me in both hands, kissed the head, and said, \"I think I'll call him 'Toddy' from now on. When you hear me ask, 'Can Toddy cum out and play?' you'll know what I mean.\"\n\nKassandra raised herself up, lined 'Toddy' up with her vagina, and impaled herself on me. I felt her shake and her vagina spasm around 'Toddy' as she positioned herself to use my 'curve' to give herself the most pleasure, and then started to move on me.\n\nI lost track of time as she 'rode' me, and I don't remember of how many times she came, but I am certain that it was at least three times for each of the three times I did myself before we both fell asleep.\n\nWhen I awoke as the sun's first rays were starting to brighten her apartment, I realized that 'Toddy' was 'at attention', and still being clutched by Kassandra's vaginal muscles. When she opened her eyes, she looked at me and smiled. When she realized I was still inside her, she started to move, and soon we were once again fucking like rutting animals. When we both came simultaneously, she checked out, and I almost lost consciousness myself.\n\nWhen I was able to move, I sat up. I held her with 'Toddy' still buried in her vagina and as I stood up, she wrapped her legs around my waist. I carried her now semiconscious body into the bathroom and turned on the shower. I adjusted the temperature, stepped into the tub, and pulled the shower curtain closed behind us. As the warm water washed over our bodies, Kassandra started to wake up more. We kissed as she let her legs drop from around my waist, and as her feet touched the tub floor, we both felt my now soft 'Toddy' slide out of her vagina.\n\nWhen she finally became aware of her surroundings, her body reminded her of what we had been doing together. The first lucid words she said were, \"Damn Todd, my pussy is really sore. We really got carried away last night, didn't we?\"\n\nI kissed her gently and said, \"I have never had a better dinner, or better sex in my life.\"\n\nAs we dried each other, I said, \"Kassandra, I've known a lot of women and most of them I slept with were in love with my cock, but no one has ever named him before.\"\n\nI could see her thinking, so I added, \"I have never experienced a vagina as sexy and satisfying as yours, so I think I will name her 'Kassie'. Whenever we are in public, and you hear me say something like 'Toddy would really like to play with Kassie', you'll know what I'm talking about.\"\n\nAs she was drying 'Toddy' she said, \"I like the sound of that, but I think 'Toddy' and 'Kassie' overdid themselves a bit last night, and need to rest, don't you?\"\n\nWe both agreed, got dressed, and helped each other make omelets. Later, as she kissed me goodbye at the door, she said, \"I need to go 'out of town' tomorrow for a 'job' but I'll be back by Wednesday night. See you Thursday morning at the Coffeehouse.\"\n\nThat night the music was Brahms and Debussy, and I soon fell asleep and dreamt that Kassandra and I were floating on a cloud as we watched Toddy and Kassie 'playing' together below us like small children. They were playing tag and running around a weeping willow tree next to the bank of a lake. When Toddy caught Kassie, he would plunge into her and she would squeal excitedly.\n\nThen she would break free and giggle like a happy toddler as she ran ahead of him and teased him until he caught her again. They kept this up until they finally coupled, and both were locked in a passionate embrace. When they finally broke apart this time, Kassie squealed, and a tiny little vagina popped out of Kassie crying like a baby.\n\nI woke up the next morning trying to understand what my dream was all about. Was I was really falling in love for the first time in my life? Did I want her to me the mother of my child? Kassandra was a devastatingly beautiful woman, extremely intelligent, an excellent cook, and the most passionate lover I had ever shared a bed with. I had never met anyone that I had 'connected' with on so many different levels before. I was starting to think why I had been wasting my time dating women my own age because I may have just met 'the love of my life'.\n\nWhen I heard no noise or music coming from upstairs, I remembered what Kassandra had told me the afternoon before and realized that she had left for her 'job'.\n\nI dragged myself out of bed and went to the bathroom to get ready for my day. It took a while for my 'morning wood' to relax enough to allow my bladder to empty and noticed that 'Toddy' was still pink and a little 'tender'.\n\nAs I was enjoying my coffee across the street later, Adam slid into the booth across from me and said, \"You did 'it', didn't you?\" When I asked him what he was talking about, he said, \"Don't bullshit me Todd, I know you fucked that 'righteous' babe, didn't you?\"\n\nI smiled and said, \"Out of respect for a particularly lovely lady, I will neither confirm nor deny that any copulation occurred. However, I did enjoy a fine meal that she prepared for me, and we did enjoy each other's company afterward.\"\n\nWhen Andre tried to push me for details, I said, \"Adam, Kassandra is a very nice lady, and this wasn't a 'hook-up'. We connected as friends, so I won't share anything about what happened between us with you. If I hear that you are spreading any bullshit about the two of us, I'll see that they find your rotting corpse floating in Lake Michigan.\"\n\nMy friend's eyes got really big, and he said, \"Woah dude, chill already, I didn't mean to piss you off. I've never seen you act this way about a woman before, so you must really like her.\"\n\nI calmed down and said, \"I really do Adam. I've never met anyone like her before. She's almost as old as my mother, but we like the same kind of music, and we talked about everything. She told me things about the amazing life she's led, and I told her about my family. I'm still trying to sort out how I feel about her and where whatever relationship we have might be going. Please do me a favor and don't tell anyone you know about us, OK?\"\n\n\"I've got your back, buddy.\" He said and added, \"By the way, if she has any friends, could you send them my way? I haven't been able to get any of these stuck up big city girls to even give me the time of day.\" I told him I would try, and we both remembered we had classes to get to, so we left the coffee shop together and walked north on Halstead toward the campus.\n\nI managed to keep my mind on my classes for the rest of the week and didn't think about Kassandra again until I was sitting in my booth on Thursday morning after 9AM drinking coffee.\n\nAt 9:30 on the dot, she walked in the door carrying a large purse, wearing dark Wayfarers, and a scarf covering her hair. She wasn't wearing any lipstick and was wearing heavy looking 'concealer' makeup. The formerly dangerous looking nails were now unpainted, and barely reached past the ends of her fingers. She looked tired and sat across from me without getting her coffee first. I got up, grabbed a mug, filled it and set it down in front of her. She picked it up with both hands and took a big swallow before setting it down and letting out a big sigh.\n\nWhen I asked her quietly if she was alright, she took off her dark glasses, I could see that she was not. Her eyes were bloodshot, her face looked swollen even with the makeup, and she looked like she was in pain. I reached across the table and took both of her hands in mine and held them. I could feel the tension flow out of her until she finally said, \"Sometimes these 'jobs' don't go as planned, and there are 'unexpected consequences'.\"\n\nShe didn't say anything for the longest time, and we just sat there drinking our coffee until she noticed the big clock on the wall was indicating it was 9:45. She smiled and said, \"Thank you Todd, I really needed that. Just being here with you this morning was all I needed to make me feel better. I'd like to tell you about what happened, but for right now, I cannot.\"\n\nShe put her shades back on, grabbed her purse, and as she stood up, said, \"We have things to do this morning, let's go.\"\n\nI followed her out of the shop, and we walked together up Halstead until we turned west on Fullerton. In the middle of the block, we walked into the School of Arts building, and I had the feeling that everyone was looking at us, but no one said a word. When we were walking down the third-floor hallway, Kassandra put her arm around my waist and snuggled close to me when she saw Alfredo walk out of his office. I put my arm around her, and as we passed him, she smiled that thousand-watt smile and said in a sugary sweet voice, \"Hello Alfredo.\"\n\nI heard the box of papers he was carrying hit the floor with a thud that echoed down the hall. We continued walking, not looking look back, as I continued to hold her close to me. We both kept our composure until we walked into the photo-lab at the end of the hall, and when the door closed behind us, we both broke into uncontrollable fits of laughter.\n\nWhen we finally calmed down, she said, \"That was fun.\" Then we went into the smaller 'manual' darkroom that few people used, took our coats off, and got ready to work. I got out my negatives, turned on the light table and laid them on it. I took the magnifier and identified the six we were going to print by putting a small piece of masking tape on either side of the ones we had chosen and mounted the first strip into the enlarger's negative holder.\n\nI turned on the enlarger's light and adjusted the head until the negative image filled the 8\"X10\" grid on the base. I put a plain sheet of paper in the holder, placed it position under the enlarger, and adjusted the bellows until I had the image focused properly. I set the aperture of the enlarger lens aperture to f4 and told Kassandra I was ready. She looked at the enlarger and said, \"Todd, I know that f4 is the proper aperture setting for Kodak paper, but we need to set it to f3.5 for Illford paper, because we are working with a much higher contrast emulsion.\"\n\nShe reset the lens and used my magnifier to adjust the focus. Then she used the hand held light meter to check the exposure time. The meter indicated 5 seconds, but she set the timer to 5.2 seconds.\n\nNext, we filled the developing trays with chemicals. We filled the first with Dektol (developer), the second with a 2% solution of acetic acid (stop bath), and the third with a solution of thiosulphate salt (Hypo). Then we put the plug in the sink and filled it with lukewarm water. When the water started to run into the overflow, we turned on the red safelights and turned off the ceiling lights.\n\nKassandra took a package of Illford paper from her purse, opened it and placed one sheet in the holder under the enlarger, emulsion side up. She reclosed the package and put it in the metal 'dark-box' on the counter and closed the lid. When she said everything was ready, I pushed the start button on the enlarger's timer.\n\nWhen the enlarger's light turned off, I took the exposed paper out of the holder and slid it into the first tray, and we both watched the image appear on the sheet as it developed. Just as I was getting to remove it, Kassandra said \"Wait,\" and then a second later said, \"OK, now.\"\n\nI removed the print from the developer with the wooden tongs I had ready, and dropped it into the stop bath, and waited about 30 seconds. I rinsed off the tongs while I waited and transferred the print to the fixer.\n\nAfter about a minute, I transferred the print to the sink and let it soak there for a few minutes. When I was sure that all the chemicals were rinsed from the print, I hung it up on the wires that were strung from the ceiling by two close-pins and turned on the ceiling lights.\n\nAs I watched the print dry, I was amazed by how much sharper the image we had just created was than anything I had printed before.\n\nAs I was staring at the results of our work, Kassandra said, \"Do you see what I was talking about? The blacks are darker, and whites are brighter, and the edges are much sharper. Also, the greys are a lot less muddy than they are with Kodak paper.\" I agreed with her, and we spent the next hour making prints of the rest of the photos we had chosen.\n\nWe repeated the same process with the other five images, and when we were finished, all six prints were hanging to dry. Then we cleaned up after ourselves, dumping our used chemicals into the 'waste recycle' tank, rinsing our trays and tongs, and draining the sink. Kassandra reset the enlarger controls and timer back to where they were when we arrived, and said, \"You should always reset everything when you are finished, so no one knows your 'secrets'.\"\n\nI understood what she was talking about because the subtle changes she had made, and the paper we were using had produced results far better than I had ever achieved before. As we waited until the prints were completely dry, Kassandra took her resealed package of paper from the dark-box and put it into her large purse. Then she took seven sheets of tissue paper and a large manila envelope from her purse.\n\nWe placed the now dry prints between the tissue paper and slid them into the large manila envelope and put it in her purse. We took one more look around the darkroom to make sure we had not forgotten anything, and then left the darkroom.\n\nWhen we walked out of the lab into the hallway, Kassandra turned the opposite direction from the way we came in, and said, \"Follow me.\" I did what I was told, and she showed me the 'back way' out of the building. We didn't encounter anyone I knew, and soon we were in the alley behind the building, next to the service delivery dock walking east. We ended up on Halstead about a block from our 'home'.\n\nAs we were walking back to 'our place', Kassandra asked, \"Do you have the matting and frames for the prints yet?\" When I told her I didn't, she said, \"Don't worry, I know a guy.\"\n\nWhen we got 'home' I could see she was in pain as we climbed the stairs, so I asked, \"Kassandra, would you like me to give you a massage to relieve your sore muscles?\" When she looked at me questioningly, I said, \"I had a roommate at SIU who was a physical therapist and made extra money helping the jocks with their sports injuries. I learned some of his techniques when I helped him in late February and March during basketball tournament season. By the way, Henry was the guy who told me about the 'thumb in the ass' trick,\"\n\nThe last remark got her attention and she said, \"O.K. Todd, I'll let you help me because right now, every muscle in my body is screaming at me.\"\n\nWhen we got to her door, I took the key from her and opened it. I told her to relax on the couch, and undress when she felt like it. I went to her bathroom and found the two things I needed, Epsom salts and baby oil. I grabbed two large white bath towels and a white bedsheet from her linen closet, and when I returned to the main room, Kassandra was standing there wearing only a plain white bra and white cotton bikini panties. She was having trouble unhooking her bra, and I could now see that her body was covered with bruises.\n\nI undid the bra's hooks and removed it, squatted down and removed her panties. I spread the white sheet on her couch and told her to lie face down on the it. I used the two large white towels to cover her completely and told her to relax. I undressed to my boxers and ran the bottle of baby oil under a stream of hot water in the kitchenette sink to warm it up.\n\nI knelt at her feet, pulled back the lower towel to her knees, and started massaging the warm baby oil into her calves and feet. When I felt her leg muscles start to relax, I kept working on them until I felt the tension go away. Then I covered her lower legs up, and pulled the towel down exposing her thighs and ass.\n\nI did the same to her thigh muscles and glutes. I worked on them until they started to relax but stopped when I started to smell her arousal. I covered her up and moved to the upper part of her body. I worked on her hands and arms before I worked on her neck and back. When I was finished, she was so relaxed she nodded off, so I left her to sleep.",
        "I went into the bathroom and started filling the tub with hot water. I added three generous handfuls of Epsom salts, and stirred the water to mix in the salts while I adjusted the temperature so that it was not too hot. When I had enough water of the correct temperature in the tub, I turned off the faucets and went into the other room to get Kassandra.\n\nShe was starting to stir, when I got to the couch, so I took off the towels, picked her up, and carried her into the bathroom, where I gently lowered her into the tub. I helped her lie back and when I put a folded hand towel behind her neck, she relaxed and closed her eyes.\n\nAs I washed the heavy makeup that had started to melt from her face, I noticed that her skin was getting pinker and the bruises were starting to fade because the hot water was causing her blood vessels to expand which lowered her blood pressure slightly.\n\nI knew the bruises would return when her body cooled, and her blood pressure became normal again, so I let her soak. When the water cooled, she became more alert and said, \"I feel much better Todd, you are a miracle worker.\"\n\nI smiled and told her that I didn't cure her, I only gave her some relief. Then I asked her how many Motrin's she had taken since she got home, because I had seen a family sized bottle in her medicine cabinet that was half full.\n\nShe told me that she didn't remember because she was in a lot of pain by the time she got home after the taxi ride from O'Hare. I told her \"I'm going to stay the night to make sure you don't start bleeding internally because too much ibuprofen can thin your blood to life threatening levels.\"\n\nI opened the tub drain, helped her up, dried her off, and carried her into the bedroom. I lay her in bed, crawled in next to her, covered us up, and held her until she fell asleep.\n\nWhen I heard her snoring quietly, I carefully got out of her bed, and went into the bathroom to clean up the mess we had created. When I was done there, I cleaned the rest of her apartment and when I finished, I realized I was hungry. I looked in her refrigerator and saw a small piece of left-over lasagna, so I warmed it up and ate it.\n\nNext, I checked on Kassandra and saw she was OK. I decided to take a nap because I knew this could be a long night, so I took off my boxers, and when I crawled into bed behind her, I felt her relax as she snuggled into me and 'spooned'.\n\nWhen I awoke, I realized it was morning and I had slept through the night. My first thought was to check on Kassandra. The warm body pressing against mine reminded me that I was still in bed with her. I soon realized that she was quite well because she had my morning wood trapped between her thighs and was using it to stimulate her vulva and clitoris by 'humping' me.\n\nI kissed her ear, and whispered \"Good morning Darling, would 'Kassie' like a visit from 'Toddy' this morning?\"\n\nShe didn't say a word, but threw off the covers, rolled me on my back, climbed on top of me, and impaled 'Kassie' on 'Toddy'. She started riding me like Annie Oakley, yelling, \"YEEHAA\".\n\nHow long we fucked, I do not remember, but when 'Kassie' started to spasm on 'Toddy' we both lost control and exploded together. When we came down from our mutual euphoria, we kissed, and stared into each other's eyes for what seemed like hours but was probably only a few minutes.\n\nKassandra broke the silence, and said, \"Thank you Todd, for taking care of me. I was in bad shape yesterday but pushed myself, so I could help you. I wanted to make sure your photos blew everyone's else away.\"\n\nI answered her saying, \"Kassandra, I was amazed how much you knew about the process of printing from negatives. I first learned about printing from my father in our basement darkroom and learned the 'finer points' as an undergraduate at SIU. Yesterday you helped me create images that were better than anything I have ever seen in any gallery. Where did you learn that stuff?\"\n\nShe smiled and said, \"I've had the opportunity to work with some amazingly talented photographers over the years, but it was Francesca Woodman who took me under her wing, in the late 1970's during her time in Rhode Island, before she moved to NYC. Even though I was only a teenager, we 'connected' when I modeled for her on Block Island, and after we finished shooting, she invited me into her home in Providence. She took me into the darkroom with her and showed me how the 'magic' was done. During the month I shared her home and her bed, she taught me the basics of what she called 'wet-work' and exposure, as well as introducing me to my 'Sapphic' side. I think she knew then that she was not long for this world, and wanted to pass her knowledge onto someone, and I am grateful she chose me. I miss her a lot.\"\n\nI was beginning to realize that Kassandra actually did know 'famous' people, because only someone 'in the business' or a dedicated student in the field of photography like myself would be familiar with someone as obscure as Frannie Woodman.\n\nI heard her stomach growl and asked, \"Hungry?\" When she smiled and nodded, I watched as she climbed off me, got out of bed, and made her way to the bathroom. I saw she had regained the 'spring' in her step, and the bruises on her body had faded to the point where they were barely visible. I shook my head and thought, 'This woman has an incredible metabolism'.\n\nI realized that I had to empty my bladder as well, and when I walked into the bathroom, she was sitting on the toilet, watching the remnants of our lovemaking drip into the bowl. When she saw me walk in, she asked, \"Do you need to pee too?\" When I nodded, she said, \"Come here, there's room enough for both of us.\"\n\nI had no idea what she was talking about, but as I walked toward her she scooted back on the seat. When I was standing close enough, she gently grasped my penis and aimed it at the space between her vulva and the front of the bowl. When she started to urinate, my prostate responded, and our two streams joined as they splashed together into the toilet. Before that day, I thought that making love was the most intimate thing that a man and a woman could share, but what we just did took intimacy to a whole new level.\n\nWhen we finished, Kassandra shook the last drops from my penis, took 'Toddy' in her mouth, and cleaned the remnants of our lovemaking from him. When she stood up, and I kneeled and returned the favor. In retrospect, I must admit that the flavors of my sperm and her vaginal juices, mixed with her urine tasted pretty good.\n\nWhen we finally got to the kitchen, I started a pot of coffee. Kassandra put on her apron and started frying a skillet half full of ground sausage. I cracked open and whipped eight eggs in a bowl, and when the sausage was almost done, I dumped the eggs in the skillet with the sausage. Kassandra stirred the mixture until the eggs were done, set the skillet on a cold burner, got out two plates, a package of flour tortillas, and some salsa.\n\nWe drank our coffee and ate homemade breakfast 'burritos' while we talked about my photos and how we should arrange them. We finally agreed that her suggestion that hanging them in two horizontal rows of three photos, with the photos taken in the same areas together vertically, and all spaced 2\" apart.\n\nI remembered I had two classes after Noon and realized that it was 11AM. We finished eating and I helped Kassandra clean up her kitchen. As I was getting dressed, she said, \"Do you have any plans for tomorrow?\" When I told her I didn't, she said, \"I'm going into the Loop tomorrow to do some shopping, would you come with me?\" When I asked her what time, she said, \"Meet me across the street at 10 for coffee, and we'll catch the Red Line up on Fullerton.\" I told her I would and kissed her goodbye. I went downstairs to my apartment and changed my clothes before I left for my Art History class.\n\nLater, as I was leaving my Photojournalism class, I saw a crowd of people gathered around Adam, and when they saw me, they soon surrounded me. Evidently the word had gotten around that I had been seen in the company of a beautiful woman, and everyone wanted to know who she was.\n\nWhen I tried to act like I didn't know what they were talking about, Debbie Tuttle, a busty young redhead that sat behind me in Professor Phillip's class spoke up saying, \"Todd, I saw you walking down the hall with this gorgeous blonde yesterday morning. When you two walked by Alfredo, he 'freaked out', dropped his box of papers, and when it hit the floor the box split open, scattering the papers all over the floor. When I went to help him pick them up, I heard him mumbling, 'She came back, and she's with Magnussen,\" over and over.\n\nI smiled and said to Debbie, loud enough for the whole crowd to hear, \"The lady's name is Kassandra, and she lives in the apartment above mine. She knows a lot about photography and is helping me to improve my developing and printing skills. She is old enough to be my mother, and there is nothing 'going on' between us.\"\n\nWhen the crowd quieted down, I continued, \"We were going to the lab to make the prints for my project when we saw Alfredo, who I guess she knew, and she whispered in my ear, 'play along with me, I want to mess with an old friend'. When she cuddled up next to me, I was as embarrassed as Alfredo was, but I didn't lose it like he did.\"\n\nDebbie blushed, as the rest of the crowd roared, and the guys were patting me on the back and shaking my hand. After the crowd dispersed, only Debbie and Adam were left standing in front of me. Adam spoke first, saying, \"You two caused quite a stir when you walked in here yesterday and people noticed. When you caused Alfredo to freak out, a lot more people noticed. When Debbie came running over to me and spilled her guts about what she had seen and heard, even more people noticed, and the rumors started to spread.\"\n\nDebbie blushed again and said, \"I'm sorry Todd, I was surprised when I saw the two of you together. You've always been so serious, and I'd never seen you with a woman since you started Grad School here. When Alfredo lost it, I thought that something interesting was going on, and I jumped to the wrong conclusion.\"\n\nI took the young redhead's hand, and said, \"It's alright Debbie, you didn't know what our relationship was. Kassandra is a very special lady, and she has been a lot of help to me. Do you know who Francesca Woodman was?\"\n\nWhen Debbie said she did, I continued, \"Kassandra modeled for Ms. Woodman in Rhode Island when she was a teenager and learned about how to develop and print from her. Since that time, she has worked with a lot of other pros, and when she offered to help me with my project, I jumped at the chance. When you see what we created together two weeks from now at the exhibition, I think you will realize that Kassandra is much more than just a pretty face.\"\n\nDebbie gave me a big hug, said quietly, \"I care about you Todd. I think of you as the big brother I never had. Alfredo is such a 'horndog' and has been trying to get me to date him since the first day I set foot on campus. I find him disgusting and have been fending him off ever since them. When I saw how he reacted to you two being together, I was happy to see him get a taste of his own medicine.\" Then she whispered in my ear, \"I can tell how the two of you really feel about each other and your secret is safe with me.\"\n\nAs my two best friends at school walked away, I wondered, 'Debbie and Adam saw through my ruse, but everyone else believes that Kassandra and I are 'just friends'. I need to be more careful about 'public displays of affection', or everyone on campus will know the true nature of our relationship'.\n\nI headed back to my apartment and tried to clear my head. After I grabbed a hoagie from Portillo's on the way, I spent the evening catching up on my required reading and taking notes on what I thought might be on my final exams in January. I decided it was time to 'hit the hay' when the music upstairs started. When I heard Don Felder's opening riff to 'Life in the Fast Lane', I knew it was going to be an Eagles night. I danced through their greatest hits, and finally fell asleep listening to Don Henley singing 'Desperado'.\n\nI was awoken the next morning by marching band music. This didn't surprise me given Kassandra's varied taste in music, but this wasn't Sousa, Fillmore, or any other famous martial music composer's work. It was an obscure march titled \"Our Director\" that was written by F. E. Bigelow, and I recognized the very same recording by Arthur Fiedler and the Boston Pops that used to play all the time at home.\n\nMy father liked it because of its unusual form for a march (AA-BB-CC-A), and also because an old mentor of his, William Morse, had used the CC bridge as the basis of a 'fight song' he had arranged for the new high school (Limestone CHS near Peoria), that had hired him as their band director when it first opened in 1953.\n\nAs I dressed, I tried to decide whether this was a coincidence that Kassandra had chosen this particularly piece of music, if she was psychic, or if she had used her CIA contacts to learn everything about me. As I ate my toast and drank my orange juice, I decided not over-think this too much and decided it was just a coincidence, as Sousa's 'Semper Fidelis' played next.\n\nI didn't say anything to Kassandra about the music as we drank our coffee in 'our' booth at the coffee shop, or as we rode the Red Line EL, but later, as we were walking on the 100 block of E. Jackson Blvd, I asked her, \"So, I guess you like Bigelow?\" When she looked at me puzzled and didn't answer me, I added, \"'Our Director', you woke me up with it this morning.\"\n\nI could almost see the wheels turning in her head until she finally said, \"Oh that, it's on my favorite Boston Pops album.\" I smiled and nodded because I had caught her in a lie. While 'Our director was the second cut on the 'B' side of a Boston Pops album of 'modern' marches, 'Semper Fidelis' was on an entirely different album. It was the first cut on the 'A' side of the 'Fourth of July' Boston Pops album. I let it go because I realized that she must have a good reason for her subterfuge and was probably just being careful.\n\nA short time later, as we were walking north on S. Wabash, I realized we had arrived at the Mecca of the Midwest for photography enthusiasts. We were standing in front of 230 S Wabash Avenue, the home of Central Camera Co, the place where my father had purchased my Nikon.\n\nWhen we walked through the doors, I felt like 'a kid in a candy store'. Behind the counter that stretched from the front to the rear of the store were glass covered shelves full of new and used cameras and lenses from every manufacturer I had ever heard of, and some I hadn't.\n\nThey were arranged somewhat alphabetically, with Canon's in the front, and Yashica's in the rear. In the very center were the cameras that were manufactured by Nippon Kogaku (Nikon), and there were examples from brand new F5's and F90's, to pristine examples of classics like my FM-2 and F3's, and even a couple of F2's and Nikkormat's.\n\nThere were also examples of every Nikon prime and zoom Lens from the oldest Ai and Ais models to the new autofocus models in every focal length. As I stared transfixed, I overheard the grey-haired man behind the counter said, \"Hello Kassandra, here to pick up your package?\"\n\nI heard Kassandra say, \"Yes Max, I hope it's ready.\" I was not really paying attention because an item on the top shelf had caught my attention. A pristine Nikon F-3T-HP with a 50mm f1.4 Ais lens attached, and its original box behind it, was staring at me screaming, 'Buy me now Todd!' This was the ultimate manual focus Nikon body, with a titanium frame, a polished titanium finish, and a high eyepoint pentaprism. It had the same 1/4000sec maximum shutter speed and 1/250sec flash sync as my FM-2, but the F-3 was the top-of-the-line model when it came out in the 1980's, and this was the titanium model. I felt like Ralphie on 'The Christmas Story' lusting over a 'Red Ryder' BB gun, and I wasn't keeping my excitement a secret very well.\n\nWhen Max came back and set a cardboard box about 16\" square and 6\" tall on the counter in front of Kassandra, I noticed him whisper something to her. She nodded to him as she was signing the sales slip, and he walked down to me saying, \"My name is Max Feinstein, may I help you, young man?\"\n\nI smiled and shook his hand saying, \"I'm Todd Magnussen, and my father bought my camera here about eight years ago. I was wondering if I could look at that F-3T-HP on the top shelf?\"\n\nMax smiled at me and said, \"Excellent choice, Mr. Magnussen, she certainly is a beauty\" and got a stepstool to reach the top shelf. He unlocked the glass doors and opened them, stepped on the stool, and retrieved the camera. He brought it over to me, and gently set it on the mat in front of me. I took off my backpack, removed my 'Baby' from it and sat it down next to the beauty Max had just retrieved.\n\nAs I inspected the object of my lust, Max was doing the same to my 'Baby', and when both of our curiosities were satisfied, Max said, \"We sold a lot of these back in the day, but I can tell that this is one of ours, because it still has our 'mark' here on the bottom,\" as he pointed to a small oval sticker about \u00bc\" long on the baseplate that had 'CC' printed on it, opposite where the motor drive would engage with the film take-up spool. He continued, \"I can see that you have taken excellent care of it, and if you are thinking of 'trading-up' I can make you a really good deal on the F-3T\"\n\nI frowned a bit and said, \"Max, I would really love to trade with you, but I'm a starving grad student at DePaul, and even with a generous trade in allowance, I think that this just might just be out of my price range. I've only seen the F-3 before in the catalogs and had never held one before. I just wanted to see one close up. Perhaps, some day when I'm rich and famous I'll be able to buy one.\"\n\nHe shook my hand and said, \"I understand, Mr. Magnussen, but if you ever decide to part with your pristine FM-2, please come see me, I promise I'll give you 'top dollar' for it.\"\n\nI thanked him and watched him put it back in the display case. I smiled and thanked him, and we walked out the doors. Once outside my head cleared, and, I asked, \"What's in the package Kassandra?\"\n\nKassandra grinned and said, \"The six frames and the matting for your photographs. I told you I knew a guy, and as it turned out I got better looking frames and matting than the art store next to the college for less money. Here, why don't you carry them.\"\n\nI took the package from her, and after we walked about a block farther north on S. Wabash, Kassandra asked, \"Are you hungry?\"\n\nI looked at my Timex and said, \"Well, it's lunchtime, so I guess I am.\"\n\nIt was then that I realized we were in front of Miller's Pub. Because I was carrying a large package, Kassandra opened the door and held it while I walked through the door. We were shown to a booth immediately, even though there were several people waiting in line for tables. A man dressed in an expensive suit who seated us and called Kassandra by her first name asked me, \"May I take care of our package.\"\n\nI was quickly learning not to question things when I was with Kassandra, because everywhere we went, people seemed to know her. We were served two large burgers with 'homemade' potato chips and the best beer I had ever tasted. When the bill came, she signed it, our package was handed to me by a busboy at the front door, and a young man held the door open for us as we left.\n\nAs we were riding the EL back to Lincoln Park, I was deep in thought, attempting to process the inconsistencies in what my companion had told me about herself, when she noticed my distraction, and asked, \"What's on your mind, Todd.\"\n\nI answered, \"Do you know everyone in town?\"",
        "She kissed me on the cheek and said, \"I know it must look that way to you, but I don't know everyone. Over the years I have acquired a lot of influential friends, and from now on, they will be your friends too.\" Then she whispered in my ear, \"Besides my friends, I have also acquired some enemies, but I will do my best to make sure that you never meet any of them.\n\nAs I pondered what Kassandra had just said, I recognized how similar it was to a line from Mario Puzo's 'The Godfather an it gave me a chill.\n\nI was beginning to realize that she was a much more complex person than I first thought. I could see now how she used sex as a tool to help her deal with the insanity in her life, but also needed intimacy to make her feel human. I decided to ignore the subterfuge she was using to conceal her 'secret life', and just enjoy the time I spent with her. Perhaps not saying anything else to her about what I was thinking the best thing for me to do for now.\n\nLater, when we were mounting my prints to the cream-colored matting and preparing mount them in the black chrome frames she had purchased, I could see the difference they made. I agreed with her that her choice of matting and frames enhanced my images and looked ten times better than the flat black plastic frames and white matting that the college's art store sold. I knew she was lying to me about the cost difference however, as she most assuredly paid at least twice as much at the camera store.\n\nAfter we packed the photos in their frames back into the box, carefully placing the tissue paper and packing around them for protection, Kassandra said, \"If you like, I can keep these in my safe until it's time for the exhibition.\" I agreed with her and followed her into her bedroom carrying the now full box. When we got to her bedroom, she slid open a panel in the back of her closet and revealed a safe door that looked like it belonged in a bank.\n\nWhen Kassandra spun the combination lock's large dial back and forth six times, and when it 'clicked', she moved the large brass handle and opened the safe, I saw a dozen or more drawers that looked like the ones in a safety deposit vault, and three shelves that had various sized cardboard boxes on them. She rearranged the boxes to make room for my package and placed it in the space she had made. She closed the door and spun the dial on the combination lock.\n\nAfter she replaced the 'hiding panel' and closed the closet door, she turned around and kissed me passionately. When she broke our embrace, she asked, \"Would 'Toddy' like to play with 'Kassie'?\" When I told her that 'he' did, she started undressing. I undressed as quickly as I could, and soon we both tumbled onto her bed where we made passionate love for the rest of Saturday. We spent all day and night Sunday in bed together except for the time we spent eating, bathing and relieving ourselves. We finally got dressed Monday morning after eating breakfast, and I left for class about 10AM.\n\nOver the next two weeks, we 'connected' every two to three days, as our schedules allowed, but had coffee together every morning at 9AM in 'our' booth. On the Friday morning before exhibition, we were walking north on Halstead, to the School of Arts building with my photographs. When we reached the second-floor auditorium, I went into the office, and filled out the paperwork for my entry and was given an entry number tag (016) and told to attach it and my photographs to one of the presentation boards that were in the auditorium.\n\nWhen we entered the auditorium, we saw three dozen easels with 4'X4' \u00bd' thick black painted plywood boards on them. We walked up to one of them, and as I was trying to figure out what to do next, Kassandra reached into her purse and pulled out a measuring tape and pencil. She spent the next ten minutes measuring and put six marks the board, indicating where my photos should be placed.\n\nThen she reached into her purse and retrieved a #2 Phillips screwdriver and a handful of wood screws. I watched in awe as she drove the six screws into the board, seemingly effortlessly. Then she opened the box containing my framed prints and used her pencil to print \"Todd Magnussen #016\" on the back of each of the framed prints.\n\nNext, she hung one the prints on one of the screws. I finally caught on, and soon all six of my photos were hanging perfectly on the board. I knew what to do next, and pealed the backing from my entry number tag, revealing the adhesive and stuck it on the board above the center photo. While I was doing that, Kassandra had retrieved a white sheet from a pile in the corner, and as soon as I was done, she covered our work with it.\n\nAs we were walking out of the room, I noticed that there were five other easels covered with sheets the same as mine was. As we left by the rear entrance, she asked me, \"Do you have a suit Todd?\" When I told her I did, she said, \"Good, Todd, tomorrow night is one of those times you should dress up in your 'big boy' clothes and have Vern on the corner shine your shoes. I'm certain that your work will be 'noticed' and you should look like you are as 'famous' as you certainly will be by the end of this evening.\"\n\nI nodded and decided to wear the black suit my mother had bought for me when I graduated from SIU and have the man who cleaned hats and shined shoes on the corner of Webster and Halstead shine my black oxfords. As we were walking into our building, Kassandra said, \"Pick me up at my door at six tomorrow evening. I need to visit the salon, so I will see you then.\"\n\nI saw her to her door and went back to my apartment to get my dress shoes. I checked on my suit and dress shirt while I was there, and saw that they were still in the plastic covers from the cleaners back home since I hadn't worn them since I moved in. I took the bags off and let them air out, because they still slightly smelled of the cleaning chemicals.\n\nI walked down to Vern's Shoeshine Parlor and Hat Shoppe and waited while he shined my shoes. When the old gentleman asked me where I was going, I told him about the exhibition. He asked me if anyone was going with me, and when I told him that I was escorting Kassandra, he said, \"Hot damn Todd, you've got the finest lady in Chicago goin' with you. If your photos don't win first prize, your date definitely will.\" I smiled and agreed with the old man and realized that Kassandra would turn heads no matter where she went, and probably be one of the most beautiful women there.\n\nAt six on the dot I knocked on her door, and once again my senses were overwhelmed. Her hair was quaffed to perfection, and her makeup looked like it had been done like a Hollywood makeup artist. Her lips were a sultry dark red and matched those dangerous looking nails that had made their appearance again holding a black clutch.\n\nHer dress was a black strapless number that pushed up her boobs and enhanced her cleavage to the point where it was distracting, and she wore a white ermine shawl around her shoulders. The dress hung to her mid calves but was split up her left side to where her panties would normally be showing (if she were wearing any), and I could see the lacy tops of her sheer grey thigh highs when she walked. The hose ended in black stilettos that made her only a few inches shorter than my 6' 2\", and I had to take a deep breath to regain my composure.\n\nHow she walked so effortlessly down the stairs in those heels I do not know, but her left hand barely touched the inside of my right elbow on the way out of the building. When we walked out the door, there was a cab waiting, and the cabbie held the door open like a limo driver for us.\n\nWhen we pulled up in front of the Art School, the driver opened the door for us, and immediately drove away as we were walking across the sidewalk. The attention we attracted when we walked through the door and up the curved staircase to the exhibition was probably ten times that of the day we 'surprised' Alfredo the day we made the prints that were on display this evening.\n\nThe first person to greet us at the top of the stairs was Professor Gerald Phillips, and his beautiful wife Yvonne. He shook my hand and said, \"We are so glad to see you Mr. Magnussen, and I believe I know this lovely lady who is accompanying you.\" He took Kassandra's hand and kissed it saying, \"So nice to see you again Kassandra, it has been too long.\"\n\nMy companion smiled and politely let go of his hand before walking over to his wife who was staring daggers and said, \"Yvonne, you look lovely tonight, I wish I could wear a dress like that.\" And whispered something to the younger, bustier woman. When they parted, the professor's wife was smiling and seemed relieved.\n\nAs we were walking into the exhibition room, I asked Kassandra, \"What just happened?\"\n\nKassandra said quietly, \"Gerry, Yvonne, and I have a 'history' and the current Mrs. Phillips is a bit jealous. I told her since I had you, I wasn't interested in Gerry anymore.\"\n\nI smiled to myself and as I looked around the room I realized that on my arm was the most beautiful woman in the room.\n\nWe walked around the room looking at the photographs that were displayed on the easel supported boards that lined the perimeter, each with the name of the student/photographer and the entry number printed on a white card attached to the top of the easel. As we neared the end, I became concerned because I had not yet seen my photos.\n\nAs we got to the last easel, a woman's voice from behind us said, \"Kassandra, is that you?\"\n\nAs my 'date' spun around I saw her smile as she recognized the voice of someone she obviously knew. By the time I turned around, Kassandra was being hugged by an attractive woman with short brown hair wearing an emerald green floor length gown.\n\n\"Evelynn, what are you doing here tonight?\" Kassandra asked the woman in the green dress.\n\nThe woman did a mock curtsey and said, \"You are looking at one of the four 'celebrity' judges for the student photography contest. Our good friend Anne Geddes is the other woman and two has-been men are the other two. Why are you here Kassandra?\"\n\nKassandra put her arm around me and said, \"I am here accompanying the artist that created one of the entries into this contest. Evelynn, allow me to introduce Mr. Todd Magnussen. Todd, this is Evelynn Byrne, the curator of the photography department at the Art Institute of Chicago.\"\n\nI was familiar with this woman's name but knew very little about her other than having seen her name on a plaque on the wall at the entrance of the photography wing of the Art institute on N. Michigan Avenue in the Loop. Anne Geddes, however, was a name I was quite familiar with as her photos of babies and very small children were world famous.\n\nMs. Byrne shook my hand and said, \"I'm glad to have made your acquaintance Mr. Magnussen. How do you know Kassandra?\"\n\nI answered, \"Thank you Ms. Byrne, it's a pleasure to meet you. I know who you are because I often visit the Art Institute and have seen your name on the wall there. Kassandra is my neighbor, I live in the apartment directly below hers. She has also been helping me improve my skills in the darkroom.\"\n\nEvelynn smiled and said, \"Oh, so you are a contestant in this contest, which one of these 'masterpieces' is yours?\"\n\nI answered, \"I'm afraid to say that my entry is not among those on display in this room. I find this troubling because I filled out the paperwork and was given a tag with the number '016' which I affixed to the top of the mounting board. When I left here yesterday, it was in this room, covered by a white sheet.\"\n\nI witnessed Ms. Byrne's expression change from passive to surprise, and then a big smile as she said, \"Mr. Magnussen, your entry is not being displayed on the main floor because it was chosen by myself and the other judges as a finalist early this afternoon, and is currently one of four that are behind the curtain on the stage at the far end of the room.\"\n\nShe continued, \"It became obvious to us that there were four entries in this contest that were far better the rest of the entries. There was also one of those four that was in a class by itself and was chosen unanimously by all six of us as the best of the lot. I think that we should move to the other end of the room, because I am sure that you will be invited onto the stage when the awards presentations begin in about ten minutes.\"\n\nI walked toward the stage thinking, 'Even if I only get an Honorable Mention, that will assure me of an 'A' in Professor Phillip's class.' When I got to the 'front' of the room, I saw that the crowd in the room was filling the space behind me, with Kassandra and Evelynn standing on either side of me.\n\nSuddenly, the room lights dimmed, and the lights on the stage got brighter. When the crowd quieted down, a gentleman dressed in a tuxedo stepped from behind the curtain and walked to the microphone on a stand in the middle of the stage, and said, \"Welcome ladies and gentlemen. I am Eugene Debs Hartke, Chair of the School of Art, here at DePaul University, and I would like to welcome all of you to this evening's presentation of our School of Photographic Arts Annual Postgraduate Competition.\"\n\nWhen the applause died down, Doctor Hartke continued, \"I'm sure that you have all enjoyed viewing the works of our fine graduate students that are displayed in the hall, but we have saved the best for last.\" He then motioned, and the curtain opened behind him, revealing four easels behind him that were covered by white sheets. He continued, \"Behind me are the works that were voted to be the four best creations by our committee of judges comprised of the department heads of our four Art Schools and four members of the International Art World. At this time, I will introduce you to our judges. First please welcome Doctor William Thompson, Chair of the School of Visual Arts for Photography.\" Dr. Thompson walked onto the stage and the crowd applauded.\n\nDr. Hartke continued introducing the heads of the Drawing and Painting School, the Sculpture and Ceramics School, and the Video and Filmmaking School, who all received applause from the crowd.\n\nIt was when the next round of introductions started that I noticed that Evelynn was no longer standing next to me.\n\nDr. Hartke started, \"Now I would like to introduce our judges who represent the fields of endeavor that our students will hopefully be working in after they graduate. Please welcome Dr. Evelynn Byrne, Curator of the Photography Department of the Chicago Art Institute.\" The applause she received was much larger than the academics received before, and when it died down, he introduced, \"The world-famous photographer of children, Ms. Anne Geddes.\" She also received a large round of applause.\n\nThe last two judges, a local quasi-famous portrait photographer named James Kusha who was most famous for his portraits of former Chicago Mayors (Dailey, Washington, and Byrne), and Dean Williams, a still photographer for television shows and film crews in the Chicagoland area (best known for his photos of Bozo the Clown), only received a smattering of applause.\n\nThen Dr. Hartke said, \"To presenting the awards for First Prize, Second Prize, Third Prize, and Honorable Mention, please welcome Professor Gerald Phillips, whose students are the participants in this competition.\" Dr. Hartke stepped away from the microphone as Professor Phillips took his place as the crowd applauded.\n\nMy professor started his remarks saying, \"Thank you ladies and gentlemen. The photographs in this hall and on this stage represent the collective works of my students. While this is not a requirement for graduating my class, for all who submitted a project, it will be counted as half of the final grade they receive for this semester, and I am proud to announce that every one of my students participated this semester.\"\n\nA cheer rang out from the crowd, and when it died down, the Professor continued, \"While everyone will receive extra credit for their efforts, in addition, the creators of the works on this stage will also receive a grant from the Kodak corporation for their prize-winning efforts.\"\n\nAfter a smattering of applause, as he motioned to the easel behind him at the left side of the stage and an assistant removed the sheet covering it, revealing eight black and white framed photos depicting older women playing with very young children. When he said, \"The winner of the Honorable Mention prize, and a check from Kodak for $100 is Debbie Tuttle,\" a loud high-pitched scream could be heard over the applause, and I could see my friend Debbie running toward the stage.\n\nWhen Debbie reached the stairs to the stage, she almost fell up them, and when she finally made it to the top, she had to pull up the top of her pink strapless dress, as her large boobs had nearly freed themselves from the elastic and lace that were struggling to keep them hidden from view. She accepted her prize and was escorted backstage by one of the assistants.\n\nWhen the commotion died down, Professor Phillips motioned to the easel next to the one that had just been unveiled, and when his assistant uncovered it, eight black and white framed photographs depicting food carts and their patrons were revealed. He then said, \"The winner of the Third Prize and a $250 check from Kodak is Carlos Hagene.\" As the audience applauded, Carlos, made his way to the stage with a much calmer demeanor than Debbie, and accepted his check as he shook Professor Phillips hand.\n\nMy friend walked calmly off the stage, and the Professor motion to the next easel and it'd cover was removed. When I saw the eight black and white framed photos of Karate students posing, practicing, and mock fighting, I knew who the photographer was. My friend Richard Gamboa was a Karate fanatic to the point he had named his Siamese cat 'Miyagi' after Pat Morita's character in the 'Karate Kid' movies. Rich was already on his way to the stage when Professor Phillips announced his name as the Second prize winner. He strode up to the stage like he owned the place and bowed to the Professor before accepting his $500 check. He bowed to the crowd, and quietly walked off the stage.\n\nA hush fell over the crowd and the Professor played it to the hilt. Finally, he motioned to his assistant and the cover on the last easel was removed. Even though I knew that I had won First prize, it still shocked me when Professor Phillips announced my name as the winner of the First prize and the $1000 check from Kodak. I pulled myself together and made my way to the stage, while receiving pats on the back and handshakes from friends and people I had never met.\n\nI really don't remember what I said to my Professor or what he said to me when I reached the stage. In fact, I really don't remember much of anything until much later when we were all drinking champagne at a reception in the backstage lounge. Kassandra was on my arm as we 'rubbed elbows' with people at the highest levels of academia, local politics, and members of the art community. When we got there, I noticed that Adam was standing very close to Debbie, and when I went to the bar to get two our glasses refilled, I saw Adam doing the same. I asked him, \"So, you and Debbie?\"\n\nHe grinned at me and said, \"What can I say Todd, after that day downstairs we started talking and found out we had a lot in common.\" Then he leaned in close and whispered, \"She loves my cock and I love her big boobies.\" Adam and I 'high fived' each other and went back to our ladies to enjoy the party.\n\nKassandra and I mingled with the crowd, and later, toward the end of the reception, I was talking to Kassandra and Evelynn when Professor Phillips walked over to us. During a lull in the conversation Gerald asked, \"So Todd, your photographs are so much better than every other entry, what kind of paper did you use?\"\n\nThat was when it hit me, because the check that was now in the inside pocket of my suit coat had been written by Kodak, it was probably unethical for me to accept it because we had not used their paper to make my prints. Before I could speak, Kassandra said, \"Gerry, the rules of your contest do not specifically state what products you must use.\"",
        "My professor said, \"While the rules do not specifically state that you must use Kodak products, because they have endowed the school and sponsor this contest, the use of their products is implied.\"\n\nI reached into my pocket and pulled out the envelope that held the check, but Evelynn snatched it from me saying loud enough for the entire room to hear, \"Gerald Phillips you are a corporate whore.\" The room went dead silent as she tore the envelope and check into a dozen pieces before she threw it up in the air like confetti. Then she opened her purse, took out her checkbook, wrote a personal check, and handed it to me. She looked directly at said, \"Gerald, I have just written Mr. Magnussen a personal check for $5000 for his photographs. The Art institute will be taking possession of them Monday morning and will be displaying them in the main gallery by the end of the week. After I talk to the Institute's board of directors, I am certain that they will create an endowment to cover the rest of Mr. Magnussen's education here at DePaul. You have a real prize here in this very talented young man. Don't let your greed and narrowmindedness cloud your vision. Come on Todd, let's blow this pop stand.\"\n\nAs I was led out of the ballroom by two beautiful women, I heard the sound of a champagne glass shattering as it hit the floor, followed by applause and cheers from behind us as we exited the building. I was still numb as I climbed into the back of a black stretched limo with Kassandra and Evelynn, and finally asked, \"Where are we going?\" about ten minutes later as we entered the loop.\n\nEvelynn smiled at me, and said, \"Kassandra has agreed to share you with me tonight. Anne gave me the key to her suite at the Palmer House and told me to have fun. She really loves your work, but doesn't share my weakness for young men, and is spending the night with some family members in Oak Park before she heads to New York tomorrow.\"\n\nWhen she started rubbing my crotch, 'Toddy' responded and she smiled, as Kassandra said to me, \"I told you this was going to be a good night.\"\n\nAuthors Note: There is a lot more of this story to tell, but I will only share it with you, my readers, if you tell me so in the comments. Also, I am open to suggestions from you about what you would like to see 'Toddy' and 'Kassie' to do next."
    ],
    "authorname": "jsmangis",
    "tags": [
        "mature sex",
        "oral sex",
        "watersports"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/kassandra-woman-of-mystery"
}