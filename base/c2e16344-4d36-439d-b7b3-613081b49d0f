{
    "title": "Dexter's Renaissance Ch. 11-12",
    "pages": [
        "Chapter 11 The New Order\n\nIt felt quite strange walking into the office on Monday morning. I was expected to inhabit the corner office, the same office John Flannery had occupied. It was a given that John would not be returning from his leave. As usual, I was the first to arrive and that gave me an opportunity to scout his office more thoroughly. I had assumed that much of John's things and files would still be there but that didn't turn out to be the case.\n\nAt some point the office had been cleaned and emptied of any of Flannery's personal files and memorabilia. Whether he had done it himself or had someone do it for him, I didn't know. It seemed barren and cold now with nothing at all to personalize it. I thought it would be a good idea to remedy that and I was thinking Michelle could help me.\n\nA set of keys was hanging from the lock on the centre desk drawer and I removed them. A second key fit the filing cabinet and a third fit a set of cabinet doors built into the wall. When I opened it, I found a well stocked bar with a refrigerator and sink to complement it. It would appear that the previous resident could host a nice little reception if he was in the mood.\n\nI stood gazing out over the view of the Toronto skyline and lakeshore. Not quite as dramatic as Vancouver, but very nice just the same. I knew from my conversations with Tom that Trent owned the floor on which we were situated and it must be worth a fortune in today's commercial real estate market. \n\nAs I looked around, I realized that this office was too pretentious for me. I was a pretender in this new role. There was no doubt in my mind that Terry could handle management of the design department. He had the maturity and now the experience to accept the responsibility. So what was I to do? \n\nI was sitting in the big leather chair behind the desk, lost in my thoughts when I became aware I was not alone.\n\n\"Good morning, Dex. I see you've found your new office,\" Janice said with a smile.\n\nI shook my head. \"I'm not comfortable here, Janice. I feel like a fraud. I'm nothing more than a trumped up designer pretending to be a general manager. I'll be out of touch way back here.\"\n\n\"I don't know where else you could go, Dex.\"\n\n\"I was thinking about the meeting room. It isn't as big as this room. We could swap places and make this the meeting room. That way I'd be more visible and the meetings would be in a quiet, well lit area.\"\n\n\"Are you sure about this?\" she asked, her brow wrinkled.\n\n\"Nope, but I know I'm not comfortable back here. Too isolated. You know me by now. I like to be where the action is. You can't do that back here, tucked away. The only things we'd have to move would be the table and chairs from the meeting room and the desk, file cabinet and chair from here. The meeting room has a big window so it won't be like I'm stuck in some cave.\"\n\n\"You're the boss, Dex. I guess I can see your point. You are a lot more social than the previous occupant,\" she grinned.\n\n\"Can you arrange with someone to get it looked after? In the meantime, I'll stay where I am until that's done. Brigit can look after the telephone switch I imagine,\" I said looking around.\n\n\"I'll call the building superintendent. He looks after that kind of thing.\"\n\n\"Thanks. One other thing. I haven't met the person in charge of accounting. Who is that?\"\n\n\"Well, technically, no one. Our last manager quit to take another job. That was almost six months ago. John didn't want him replaced and left it to me to make sure the work was done on time. For now, Teresa Tremonte is looking after getting the work co-ordinated and filed. She sends her information to Vancouver now. I don't know any more than that.\n\n\"I'm no accountant, Dex. Just like you, I'm doing the best I can without the credentials to know if everything's okay. So far the auditors have been satisfied but they're due back in a couple of months so things could change.\"\n\n\"Damn!\" I spat. \"What the hell was John thinking? Running this place without financial guidance is a recipe for disaster. There's only so much you can cut back before you can't function. Is Teresa capable of running the department?\"\n\nJanice shrugged and I should have known that was coming. She was in no position to make a judgement. \n\nI was frustrated. Everywhere I turned the so-called economies had turned into problems that needed addressing. My phone call to Tom was going to be a lengthy one this afternoon.\n\nJanice was watching me and I'm sure she could hear the gears grinding.\n\n\"You'll figure it out, Dex. Do what you think is right. Tell Tom what you want to do and why. That's all you can do.\"\n\nJanice was right. If Tom rejected my plan, I'd have to go back and see what alternatives I could come up with. Right now, my new number one priority was to establish some management in accounting.\n\n\"Thanks, Janice. You're right of course. Now, let's get the coffee started.\"\n\nTerry arrived a few minutes later, choosing to adopt the earlier start in the design department. I called him into my office and closed the door.\n\n\"Terry, sometime this morning there will be an announcement that I have been appointed General Manager of Trent Engineering. This is being done with the knowledge and approval of Rueben and Dick,\" I said, stopping to see his reaction.\n\n\"Great. I think that's great. You're just the guy for the job, Dex,\" he said sincerely.\n\nI relaxed a bit. \"As a result, you will be promoted to Manager of Design, effective immediately. Your pay will increase accordingly by twenty percent and you will continue to report to me. I suggest you discuss this with Petra to let her know that she would be next in line and that she shouldn't be discouraged that she didn't get the job. I don't expect a problem but I think you should acknowledge that she's your right hand and that she should expect a raise as well, although not as large as yours. She will be in charge in your absence. I will talk to her as well. Any questions?\"\n\n\"Yes. When did all this happen? I didn't have a clue any of this was going on.\"\n\n\"No ... I understand. You and Petra have been an important element in getting this department back to where it had to be. Your cooperation and support has shown me that you both are going to be invaluable in the growth of Trent. My work is essentially done as far as that project goes. Rueben has let it be known that he didn't want the administrative responsibility so he'll be Manager of Engineering Services but senior to you.\"\n\n\"Oh boy, this is a surprise. When will this be announced?\"\n\n\"This morning. Rueben and Dick already know, as does Janice. So it's really a matter of informing the rest of the staff. We'll get everyone together at ten o'clock in the meeting room and make a couple of announcements. Until then, please just keep it between you and Petra for the time being.\"\n\n\"Yes ... of course. Is it all right if I call my wife? She'll be really excited when she hears.\"\n\n\"Sure,\" I said, pleased at his enthusiasm. I stood and walked around the desk, holding out my hand. Terry took it and we shook heartily. \"Congratulations, Terry. You've earned this.\"\n\nI started plotting my move to the new office if for no other reason than to give myself something to do for the next two hours. Janice stopped in to tell me that the men would be in to move the furniture sometime after eleven that morning. Brigit was asked to inform the staff of the general meeting in the \"old\" meeting room at ten. I could see a lot of question marks on faces until we had everyone in the room just after ten o'clock.\n\n\"You all know that Trent Engineering has been undergoing a substantial facelift in the past few weeks,\" I began. \"Your cooperation and energy has made that project go better and sooner than anyone expected. For that, the partners want you to know how grateful they are and wish to thank you in a tangible way.\n\n\"First of all, the wage freeze has been lifted.\" There was a general voice of approval with that announcement.\n\n\"Secondly, we are beginning to hire new staff as we obtain more business for the firm.\" Again, sounds of approval.\n\n\"I also want to make some personnel announcements. First, Rueben Golowitz is Manager of Engineering, as you already knew. Janice Meriwether will continue as Manager of Administration, and I'm pleased to announce that Terry Sanderson has been appointed Manager of Design. \n\nCongratulations, Terry,\" I said, and there was a round of applause. Apparently I had made a popular decision.\n\n\"A decision on a Manager of Accounting Services will be announced in due course,\" I added vaguely. \n\n\"I have been asked to assume the role of General Manager,\" I continued. \"I promise to be accessible and visible as long as I am here. Naturally, Rueben will be in charge in my absence. I will be moving the office to this room later this morning. The new meeting room will be the corner office that so few of you ever visited,\" I chuckled.\n\nI was about to say something when someone began to clap, and within a few seconds, everyone seemed to be applauding. I was surprised and very happy that my appointment had been accepted so well. I breathed another sigh of relief. We were off to a good start.\n\nI had a number of people stop by the office and congratulate me and thank me for helping Trent \"get back on its feet.\" I just hoped I could keep the momentum going in the right direction for the next while. \n\nReuben and Dick stopped by and insisted they take me to lunch, so I quickly agreed.\n\n\"I like your meetings, Dex,\" Reuben said with a grin. \"They're short, to the point and leave everyone feeling good. That's a big change from the last regime.\"\n\n\"Good news meetings are always easier than bad news ones, Reuben. I'm just happy we have the support of the staff, particularly you and Dick. You guys and your staff are the engine that makes this place work. The rest of us don't have a job without you.\"\n\n\"The attitude around the office is so much different from before,\" Dick observed. \"Our guys are much more into their jobs now that they don't have layoffs or cutbacks hanging over their heads. Wolf is really good at finding work, isn't he?\"\n\n\"Yes. Very good. He'll do everything he can to keep us hopping around here. But I wanted to ask you about contact with some of the local architects and contractors. Who looked after that in the past?\"\n\n\"David Gauthier,\" Dick answered. \"He was a real go-getter. He could schmooze with the best of them. When he died our contacts dropped off and in the end, we really didn't have any. I think that's something we need to address if we want Trent to restore its local reputation.\"\n\n\"I agree,\" Reuben chimed in.\n\n\"Okay, that's at the top of my agenda. Any suggestions?\"\n\nThe two men looked at each other, apparently uncomfortable with a response. Finally, Reuben spoke.\n\n\"Stop me if I'm on sensitive territory here, Dex. David and Michelle were a good team on the social scene. I think Michelle might have brought in as many opportunities as he did. I was wondering ... if you and Michelle are okay with it ... you might think about re-establishing contacts that she had in the past.\"\n\n\"No need to tiptoe, guys. Michelle and I are living together and I'm not trying to keep it a secret. So ... let me talk to her and see how she feels about it. I'm not an engineer so I'm going to have to take a different approach. I'll have to get some advice on that from Wolf and Tom as well as you two.\"\n\n\"Anytime, Dex,\" Reuben said quickly. \"You'll get our full cooperation. You've done a great job so far and I can see you and Michelle being a very effective force together.\" \n\n\"Well, first things first. I have to get her to agree that it's a good idea,\" I smiled.\n\n\"I'm betting that won't take too much convincing,\" Dick said. \"I got the impression watching her that she enjoyed the role. Good luck.\"\n\nBy the time we got back to the office the furniture had been moved and my phone and computer installed. I went in and sat down, looking around the room. There were a number of photos on the wall, undoubtedly of past projects at Trent. Janice had arranged to have my files moved from the design department office to my new, giant desk. \n\nShe had instructed the movers to place the desk at the end of the room with the windows on the right. That would reduce the glare on the computer screen. Sun shades would look after the view to the south during the spring and summer months. When I looked around, I had taken up barely a third of the space available.\n\n\"Janice, there's a table in the other open office that doesn't seem to be used. What is it for?\" I asked. \n\n\"Lately, that's where the auditors have been housed. Why do you ask?\"\n\n\"I think I'd like to have it in my office for smaller meetings and planning sessions. Right now I feel like I'm wasting useful space. If we can round up four comfortable chairs, it would help make the office more friendly.\"\n\n\"Sure. I can get a couple of the guys to move it this afternoon. Won't take but a few minutes.\"\n\n\"Thanks. I wanted to talk about a suggestion Reuben and Dick had today. They were talking about Michelle and maybe me re-establishing contact with the architects and contractors that her husband had developed. It would be a proactive move to find some more business and get Trent's name back in front of these people. What's your opinion?\"\n\n\"I think that's a hell of an idea. She knows who to talk to and how to get appointments so it's a natural. You can handle the P.R. part easily, Dex. It isn't knowing all about engineering, it's about giving them the confidence that Trent is back to where it was before David passed. That and the improvements you've made will make a huge difference.\"\n\n\"That's good to hear. I'm a little reluctant to be the face of Trent Engineering but Michelle could pull that off no problem from what you're telling me.\"  \n\n\"I'm sure of it. I like the idea that we're going to look after ourselves and not wait for someone else to find business,\" she said with a positive nod of her head.\n\n\"Did David ever bring any of the clients in for a tour of the offices?\"\n\n\"Yes, once in a while. He wasn't that familiar with the design department but he usually did the tour just before taking them to lunch at the University Club. That usually impressed them too.\"\n\n\"I forgot to ask. Is that a corporate membership?\"\n\n\"Yes. John pretty much made it off limits when things started to go downhill but I can easily get you recommended for an associate membership on Michelle's say-so. In the meantime, you can use her membership.\"\n\n\"Good. Anything else I should know?\" I asked.\n\n\"Well, since the salary freeze is off, I'd better get you a salary review schedule and you and Rueben and Terry can get started on what needs to be done. I'll look after my end of the business. Your responsibility is only for the managers but they will have to bring all the reviews and recommendations through you for final approval.\"\n\n\"Fine, that's the way it should work. In the meantime, I'll get with Tom and discuss what we can do and when we can do it.\"\n\nI couldn't put it off any longer and called Vancouver to talk to Tom. An hour later I had two pages of notes and the outline of a plan to handle the immediate problems. \n\n\"There's no doubt you can't continue without adequate accounting supervision,\" Tom said. \"The previous controller quit right in the middle of our negotiations and wasn't replaced. The young woman they assigned to handle the load reported to Janice but I don't think she was ready to take over as manager. You have two choices. Pick one from the Vancouver operation that could handle the job or hire locally. My suggestion is the latter. We can get him or her up to speed with our procedures fairly quickly with one of our people on loan for a week or so.\"\n\n\"Okay. I'll get an advertisement ready ASAP. Shall I use the previous person's salary as a guide?\"\n\n\"Sure. You might have to pay more but I'll leave that to your judgement. The former man quit because he could get a job for more money and less hassle,\" Tom said without humour.\n\nWe went over the salary scale and our budget, looking for ways to help some of the people catch up to where they should be. Tom agreed we didn't want to be losing valuable people right now. That would send the wrong signal and make our recovery more difficult. I e-mailed him the salary schedule that Janice had conveniently formatted on Excel. It also showed the history of each individual's salary from five years previous. That would be helpful as well.\n\n\"I'm going to do something a little out of character, Tom,\" I said. \"I'm going to team up with Michelle and start a program of calls on all the previous contacts we had in the architectural community as well as contractors. We want to get them comfortable with Trent once more and have them believing in us again.\"\n\n\"Boy, it didn't take you long to become a 'Trent Man,'\" Tom chuckled. \"But that's a really great plan, Dex. It's something I know you can do and with Michelle's help and contacts, I'm betting you'll surprise yourself at just how well you do. I'm all for that.\"\n\n\"Thanks. It's something proactive I can do instead of just sitting around the office all day. I just hope Michelle likes the idea too.\"\n\n\"You mean you haven't discussed it with her?\" \n\n\"Not yet. Keep your fingers crossed. She's an important person in this company and I want to take advantage of her talents,\" I said.\n\n\"I'm not touching that line with a barge pole,\" Tom laughed. \n\nBy five o'clock that afternoon I was beat. Too much energy and tension had gone into the day. The enjoyment of giving the staff some hope for a better tomorrow had worn off in the afternoon as Janice and I worked to figure out just what to do about salaries. \n\nShe took it upon herself to draft an advertisement for a senior accountant and ran it by me that afternoon. I approved it and she said it would be in the Wednesday through Saturday editions of the morning and evening papers. I made a note to talk to Teresa Tremonte, our temporary head of accounting, first thing the next morning so that she was aware of what was going on. She would be invited to apply for the job if she chose.\n\nThe walk to the streetcar stop and the ride out Lakeshore Drive was a pleasant relief. A two block walk to Michelle's apartment building was the completion of the journey. She had given me the keys to both the elevator-penthouse access and the door to the apartment before I left for work. \n\nI was tired, but not down. I couldn't resist. \"Honey, I'm home,\" I called as closed the door behind me.\n\nI heard the strangled laugh from the kitchen then saw her broad smile as she came out to meet me.\n\n\"You just couldn't help yourself, could you?\" she said as she wrapped her arms around my neck.\n\n\"Nope. You planted the seed on Friday so it's all your fault.\"\n\n\"How was your day?\" she asked, changing the subject.\n\n\"It had its moments. I have been rewarded in my new position with several vexing problems, however.\"\n\n\"I guess that was to be expected. I'm sure some of them have been hanging around just waiting for the new boss to look after them,\" she smiled.\n\n\"Yes ... that's very perceptive of you. Some of them are old problems. However, in talking to Tom this afternoon, he made it known that they are my problems now.\"\n\n\"Anything you can't solve?\"\n\n\"I don't know yet. I have to find a new senior accountant. I have to find some money in the budget to reward staff for living through the salary freeze. And, I have to convince you that we should team up and start calling on all the old architect and contractor contacts that you and David made. Other than that, the rest is kid's stuff,\" I grinned.\n\n\"What's that last part again? You and me making calls?\" she said warily.\n\n\"You got it, sweetie. You dress your sexiest and we'll take them to the University Club and get them wined and dined and we'll be back in business,\" I kidded.",
        "\"You're serious?\"\n\n\"Yup. I may be making light of it but I'm told you and David were a very effective team in keeping our company name in front of the people who made decisions about which engineering firm to use on their projects. I'd like to re-establish that team approach.\"\n\nShe looked at me long and hard. I'm not sure what she was thinking but after a bit she broke into a smile.\n\n\"Alright,\" she said warily. \"I want to see you work your magic on some of those crusty old buggers we had to put up with.\" \n\nI pulled her into me again.\n\n\"Thank you. I was worried you might not want to. I'm not very confident myself about this but I think we should make a try at it.\"\n\n\"Maybe I've got more faith in you than you have. I think we might make a very effective team. You're nothing like David. Nowhere near as intense. I have a hunch you'll charm them much more easily than you think. You just be yourself and I'll be decoration.\"\n\n\"I'll have to rely on you to tell me who's who on the list of targets. You will have met most of them while I won't know any of them. I'm thinking we could do one or two each week if that's feasible,\" I suggested.\n\n\"I think that's very doable but we won't know until we try. When do you want me to start?\" she asked with a smile.\n\n\"No time like the present. How about next week? You can cook up a list of contacts and we'll start making phone calls.\"\n\nI was sitting, now. It was a large wing chair with an upright back, big enough for a very large person. On a small table beside me was a glass of single malt scotch, a brand I'd never heard of and in the past, unlikely to have been able to afford. Michelle had finished the dinner preparations and was sitting across from me, waiting for the oven timer to signal our meal was ready.\n\nI don't exactly know how I became aware of the change but I felt a tightness in my chest and it seemed to be intensifying. I put my head back in the chair and attempted to breathe slowly and relax every muscle I had control of. I couldn't seem to effect any change and the tightness continued to increase. Now I could feel the onset of a headache. This wasn't right. \n\n\"Michelle,\" I said weakly, looking toward her. \n\nI remembered seeing the look of shock and then fear on her face before I lost consciousness.\n\nChapter 12 A Nasty Surprise\n\nI awoke slowly, bits and pieces of consciousness coming and going along the way. I could hear sounds and when my brain collected enough information I was fairly sure I was in a hospital. That made sense, although I had no idea why I was there. I tried to remember but all I could think of was the look on Michelle's face. I closed my eyes and let go of all thoughts once more.\n\nMy next moment of consciousness had a badly overweight nurse fussing over some machine that was beeping along quite happily on its own. Whatever happened to the lovely, lithe young ladies that used to populate the nursing corps? Once again, I drifted off.\n\nI completely lost sense of time and place when I next awoke. I was no longer surprised to find myself in a hospital room, hooked up to various probes, tubes and other paraphernalia. I lay there for a while, now fully awake, wondering just what might have happened to me and when I would find out. A little judicious exploration revealed I had what I would learn later to be a nasal oxygen tube fitted around my head and a catheter in my penis that would allow me to urinate without having to use a bedpan. \n\nMy mind was functioning better now. I had a clue what had happened. I remembered the chest tightness and then blacking out. I guessed I had suffered a heart attack or something similar. A clock on the wall told me it was nearing seven o'clock but I had no idea whether it was am or pm. This time of year it would be light at either.\n\nI closed my eyes and tried to think about what it might mean. A heart attack! As far as I knew, there was no history of heart problems in our family. I was a non-smoker and a light drinker since the fun of getting shit-faced evaporated sometime before I got married. I didn't weigh any more today than I did back in college. My time in the Caribbean had corrected that. I exercised, although I had to admit it was pretty haphazard lately. What the hell had happened?\n\nI must have dozed off again, waking when I felt a gentle touch on my arm and a soft voice calling me.\n\n\"Wake up, Mr. McLeod. Come on, time to wake up.\"\n\nI opened my eyes to see the nurse I had observed before leaning over me with a smile and that oh-so-soothing voice. \n\n\"There you go. How are you feeling? Any pains or aches? Any discomfort?\" she asked.\n\nI shook my head a croaked a \"no\" in response. \n\n\"Water?\" I finally asked.\n\nShe passed me a foam cup with a bent straw and I sipped it greedily. I could feel the easing in my throat.\n\n\"Your doctor will be along shortly. He's probably going to want to ask you some questions. I'm sure he can tell you what's going on,\" she said sweetly.\n\nIf I had only heard her voice and not seen her, I would have pictured as a slim, lovely woman in her mid-twenties. Just the same, she might not have been a picture of loveliness but she was reassuring and professional and I could live with that.\n\nShe moved around the room efficiently and made sure I was comfortable before she left. I could see what I assumed was an IV drip on a stand near my right side. I counted several electro-probes attached to my chest, neck and one arm. Wondering what they were recording I looked around. I could see a colour monitor showing a number of values, including heart rate, respiration and who knows what else. I was definitely wired for sound.\n\nTwenty minutes later, a doctor walked into my room and introduced himself.\n\n\"Good morning, Mr. McLeod,\" he said in a friendly manner.\n\nWell, that solved one mystery. It was morning. Just what day it was, I wasn't so sure.\n\n\"I'm Doctor Holtz. I'm a resident on the cardio ward and I'm going to be working with you for the time being.\"\n\n\"Good morning, doctor. Where am I?\" I suddenly wondered.\n\n\"Lakeshore Regional Hospital. You were brought here when you had some sort of event at your home.\"\n\nI nodded my understanding.  \n\n\"What day is this?\"\n\n\"It's Wednesday. They brought you in Monday night. We've been keeping an eye on you and making sure you're stable before we woke you up.\"\n\n\"Michelle? Where's Michelle?\"\n\n\"Your wife had been here constantly since you arrived. I think she went home late last night to get some sleep. I didn't want to see her as a patient as well.\"\n\nI didn't bother to correct him on our status. \n\n\"Any idea what happened?\"\n\n\"I think we've got a pretty good idea but we'll need to do some scans and tests to confirm it. My gut tells me you have a wonky valve in your heart. Maybe more than one.\"\n\nI kind of appreciated the humour the doctor chose in his description. He was making this sound something less than life-or-death. \n\n\"Fixable?\"\n\n\"Easily. Probably with non-invasive surgery. That means we don't have to crack your chest open to repair it. Of course, that assumes our guess is correct. We'll know better later today. Why don't I get a little history on you?\" he smiled.\n\nFor the next fifteen minutes he asked questions and I answered them to the best of my ability. I could see him nodding and occasionally smiling.\n\n\"Well, your history and habits indicate just what we think might be the problem. You may have been carrying this around with you for quite some time and be completely unaware of it. I'd like to know what brought it on, though.\"\n\nI shook my head and shrugged. I had no idea.\n\n\"Have you been under stress lately? Home life, job, that sort of thing.\"\n\n\"Job, I guess. I'm a newly appointed general manager at a local firm. It's a whole new thing for me. Something I'd never been trained for and never thought I'd achieve.\"\n\n\"Ah, well that could be a contributor, all right.\"\n\n\"I'm in the final stages of getting a divorce, as well.\"\n\n\"Another factor that could add to your stress. Anything else?\"\n\n\"No ... not really.\"\n\n\"Good. Well, we're going to put you through some scans and tests today so be prepared to be run around the hospital a couple of times. I'll see you again tomorrow morning when we have a better idea of what might be wrong with you.\"\n\n\"Thank you. When can I see Michelle ... my wife,\" I added quickly.\n\n\"As soon as she returns. I'll let the duty nurse know it's okay.\"\n\nMichelle showed up a little after ten. I didn't think it was possible for her to look haggard but she did this morning. I could see her eyes were red and bloodshot and her jaw was trembling as she approached my bed.\n\n\"Dex? Are you all right?\" Her voice was tentative and uncertain. She was clearly very upset.\n\n\"I'm going to be fine,\" I reassured her. That might have been premature but she didn't need any more doubt.\n\nI raised my hand, mindful of the tubes and took hers, squeezing it in confirmation.\n\n\"Oh, Dex. I was so scared. I thought I might lose you. I couldn't go through that again. I just couldn't.\"\n\n\"I know, love. Don't you worry about me. The doctor was in earlier and they think they know what's wrong and it's something they can fix easily.\"\n\n\"Are you sure?\"\n\n\"As sure as I can be. They're going to do a bunch of tests today and then they'll know for sure. Don't go worrying yourself sick now. You look like you've been having a bad time and I don't want to see that.\"\n\nShe nodded with a grimace that was an attempt at a smile. She bent over and kissed me. A nice, long, sensitive kiss that left me feeling a lot better. I hope it did the same for her.\n\n\"Do Rueben and Tom know what happened?\"\n\nShe nodded again. \"Yes, I called them yesterday morning before I knew you were still unconscious. The hospital told me you were in intensive care and stable. They didn't know any more than that.\"\n\n\"I just woke up this morning. I guess they wanted me quiet for a while until they could figure out what happened. Have you had any sleep in the last day or so?\"\n\n\"Not much. A little early this morning. I couldn't get my mind to shut off. I kept thinking about what happened to David and now you. I couldn't believe it was happening all over again.\"\n\n\"It isn't. I'm still here and it wasn't an aneurism. They think it might be a heart valve. If it is, it's no big deal to fix it.\"\n\n\"Oh, I hope so, dear. I need you so much. I love you, Dex. I truly, truly, love you.\"\n\n\"Do you? God, that sounds good. I love you too, Michelle. I don't think I realized it until you weren't here when I woke up. I wasn't afraid for my health, I was afraid I might not see you.\"\n\nNow the tears came. I had to assume they were happy tears because she was kissing me and holding me by the shoulders, all the while blubbering like a baby. I felt nothing but relief. I was alive and I was in love and I finally admitted it to myself. Thoughts of Sandra never once entered my mind. There was no comparison between Michelle and my ex-wife in personality. For all her status and wealth, Michelle was a giving person. I was sure now that she was the right one for me.\n\nThursday morning came with Michelle once more by my side. She looked so much better today than she did yesterday. She would be with me when Dr. Holtz gave me the results of their tests; good or bad. She insisted and I wouldn't deny her. Not if she was really going to act like my wife.\n\nWhen I was admitted, Michelle gave them all the necessary information that she could glean from my wallet. Since we were living at the same address the admitting staff assumed we were married. A lucky break for both of us. If I had my way, we would be confirming that properly sometime in the near future.\n\nDr. Holtz explained that his suspicion had been confirmed and that one of the valves in my heart had a malformation that probably occurred before I was born. I had carried this defect around with me for nearly fifty years without any hint of a problem until now. Happily, it could be corrected with non-invasive surgery and he recommended that I be scheduled for that as soon as possible. Neither Michelle nor I were about to argue with him.\n\n\"As soon as possible\" turned out to be five weeks, the second week of September. I had been resting at home for most of it, with supervised visits to the office with Michelle making sure I didn't get too involved in the day-to-day. I was pleased that the office was doing well under Reuben's supervision but everyone wished me a speedy return.\n\nI was admitted the day before the surgery was scheduled, and the next thing I knew I was being wheeled out of the operating theatre and back to my room. An hour later, Dr. Holtz stopped by to let me know the surgeon had said everything went exactly according to plan and I should be as good as new in a couple of days.\n\nThree days later I was on my way back to the apartment with Michelle. I had been told to take it easy and not get involved in any strenuous exercise for two weeks. I would be back to see my doctor for a follow-up then. Michelle floored me when she asked the doctor about sex. He smiled and said it would be fine as long as we didn't get too carried away. I wasn't sure about what \"too carried away\" meant but I didn't think I'd test the boundaries.\n\nMy realization that I loved Michelle wasn't some bolt-from-the-blue revelation. It snuck up on me and when I first awoke in the hospital that morning after my collapse I was disappointed that I didn't see her there. That stuck with me for the rest of the time before she arrived and then I knew what it meant. I wanted her there. I wanted her to be with me. There wasn't anyone else. Her reaction to my condition was all the proof I needed that she felt the same way. I didn't need her to tell me she loved me. It was her actions, not her words, that told the tale.\n\nWe didn't make love that first few days. I think Michelle was being overly protective of me. But in bed at night she held me to her and rained soft kisses on me. It was great medicine and I returned them, getting a bit bolder with them each day. At last, five days after I had been released, we joined. I didn't last very long at first but with a little help from her, I managed a second session that was much more satisfying for her. I felt no after effects from the effort except euphoria.\n\n\"Now that I'm getting my strength back, I'm going to be able to bend you over the kitchen counter and have my way with you again,\" I chuckled.\n\n\"Promises, promises,\" she laughed. \"I'm just so happy you're better and we don't have to worry about it happening again. The doctor said everything else is fine and you're in very good health. It's probably what kept you from having this happen even sooner.\"\n\n\"Moving on to another subject,\" I began. \"Michelle, you know I love you. It took me a while to realize it but I do. Will you marry me?\" \n\nShe looked at me in surprise, but quickly recovered. \n\n\"Yes. I will. I will marry you,\" she cried, tears now flowing freely. She wrapped her arms around my neck and held me closely.\n\nIt took a while before she regained her composure and then kissed me, thoroughly and deeply. \n\n\"I think we should go looking for a ring today,\" I suggested.\n\n\"No. No, we won't,\" she said, holding up her left hand. \"This ring was my grandmother's and was given to me by her. I promised to wear it for the rest of my life. I don't want you to think it's a symbol of David. It's a family heirloom, and I hope you can understand that.\"\n\n\"Yes ... of course I can. It's a very beautiful ring and I'm happy you want to respect your grandmother's memory. But I would like to get you something that symbolizes our engagement and love. What do you suggest?\"\n\n\"Your body in my bed every night and waking up to see you every morning,\" she smiled.\n\n\"Very nice, but not quite what I had in mind. Something more tangible. Maybe a tattoo or a piercing?\" I kidded.\n\n\"Never!\" she spat. \"Not in a million years!\" she reemphasized. \n\n\"Okay ... let's see ...,\" I began again.\n\n\"Don't bother. Teasing me won't help you find the answer. I'm going to give you a few days to think of something and you'd better be serious about it. Just as serious about it as you are about me.\"\n\nI didn't get the impression she was kidding so I nodded acceptance of her condition.\n\nI know Michelle contacted her family to let them know she intended to remarry. I heard a couple of the conversations in the evening but she was reluctant to discuss them with me. In any event, she assured me that all of her living family, mother included, would be invited to the wedding.\n\nI would contact my parents and offspring to let them know as well. It had been over two years since Sandra and I had separated. I wondered what their reaction would be. I wasn't worried about my parents. They didn't particularly warm to Sandra in the first place, although I never really knew why. We weren't estranged but my father had taken an early retirement and they travelled quite a bit. I envied them and hoped that within a few years, Michelle and I could emulate them.\n\nMichelle and I began our program of visits to architects and contractors the next week. We decided we would re-visit those whom she and David had formerly made contact with. It turned out to be a good decision. In each case, they remembered Michelle and welcomed her visit. It was the first one that caused me concern. I wasn't sure just what to expect and I hoped I wouldn't be found wanting.\n\n\"Hello, Mr. Whitmore,\" Michelle said brightly as we were welcomed by one of the senior partners of McAllister, Fulton, and Whitmore, Architects.\n\n\"Please, Michelle, I thought we had progressed to 'Charles' when last we met,\" he smiled.\n\n\"Thank you, Charles. I'd like to introduce Dexter McLeod, our General Manager. There's been reorganization at Trent Engineering and I thought you might want to hear about it.\"\n\nMichelle was smooth and we were welcomed and escorted into a meeting room. She gave a brief synopsis of what had changed at Trent in the last year and suggested I had been the driving force behind those changes. Whitmore turned to me and gave me a questioning look.\n\n\"I don't recall you from my previous visit to Trent, Mr. McLeod.\"\n\n\"No, sir. I'm from Vancouver and I've only been here in Toronto a few months. I have been at Pinecone Engineering for over twenty years, however.\"\n\n\"And what is your area of expertise?\" he asked, clearly curious.\n\nI was caught with a question I didn't expect, so I answered truthfully.\n\n\"Design. My skills are related to converting concepts to finished designs via computer.\"\n\n\"Well, that's certainly an important area in any business. Keeping up with all the changes is a bit overwhelming, I imagine. Everything I read suggests the ground moves on a regular and frequent basis,\" he grinned.\n\nI breathed a silent sigh of relief. I had passed the first test.\n\n\"Dex has re-made our design department, Charles,\" Michelle slipped in. \"We would be delighted if you and any of your staff would care to visit the offices at any time in the future. I think you'll be quite impressed with the new vitality at Trent.\"\n\n\"I'd like to, Michelle. Perhaps we can have lunch one day and a tour.\"\n\n\"The University Club suit you?\"\n\n\"That would be very nice. I'll have my secretary check my schedule and I'll let you know when we can find some time.\"\n\nThe meeting ended a few minutes later and Michelle and I left the offices, my chest still tight from tension. It had gone much better than I expected, particularly since I had fielded the unexpected question about my \"expertise.\"\n\nAs we stepped out onto the sidewalk, I breathed another sigh of relief, this time audibly.\n\n\"You were great, Dex,\" Michelle smiled and hugged my arm. \"Your answer to his question was just right. Well done.\"\n\nI nodded in agreement. \"That was something I didn't expect but I gather from his comments it's an area that interests him so I'll make sure we have a good show for him when he visits. For a first time, I thought we did okay.\"",
        "\"We did very well, thanks to you,\" she said. \"Our next one should be easier. Charles isn't the most outgoing man and I thought our reception today was much better than I anticipated. Here's hoping they all go as well as that.\"\n\n\n\nOver the next month we visited two other architectural firms and four general contractors. I quickly discovered I was much more at ease with the contractors than with the architects. My field experience and my opinions on how the relationship should be between general contractors and engineering firms was in parallel with their beliefs and that made our conversations much more free-flowing and informative.\n\nI was sure it would be several months before we saw any fruit from our visits but I was wrong. I had a call from Charles Whitmore inviting us to bid on a new project less than two weeks after our visit and before he had made his social call on our office. A week later, a general contractor asked us to intervene on their behalf in a dispute with a steel fabrication sub-trade related to the interpretation of specifications. This was a dangerous situation. We didn't need to make enemies either of the general contactor or the sub.\n\nRueben and I visited the site and listened to both sides of the argument. I knew I wasn't qualified to make a judgement but Rueben took that worry away. Within a few minutes of looking at the specifications and plans, he suggested a compromise that seemed to satisfy both parties. No hard feelings and both the contractor and fabricator thanked us for our help. \n\n\"I like the way you guys think,\" Gus Molinari said as we headed off toward our vehicles. We can work with people like you, Dex ... Rueben. I'll let my people know just how much you helped solve that problem. Thanks again,\" he said, holding out his hand.\n\nWe shook and parted, heading back to the office.\n\n\"Well done, Rueben. I was worried it was going to become a pissing match to see who would win. You defused that perfectly.\"\n\n\"Thanks. I don't think they could have come up with that solution without an engineer to approve it. They needed us and I think Gus saw that right away. The fabricator didn't but he was grateful it didn't cost him an arm and a leg to fix the problem.\"\n\n\"Well, someone told them to contact us so I guess Michelle's and my visits are beginning to show results.\"\n\n\"Yeah. Just what we needed too. I've got a good feeling about what's happening at Trent, Dex. I can feel the energy and I haven't felt that for some time. Anytime you need me or one of my people to help on this type of problem, don't think twice about asking. It will pay dividends, I'm sure of it.\"\n\n\"Me too,\" I agreed. \n\nThe wedding had been set for the third Saturday in October. The invitations had been sent and the replies were coming in. My parents said they would attend and planned to be in Toronto the week before the event. They would be staying with friends of theirs I didn't know. I was happy they were making the effort. \n\nI purchased an airline ticket for Meredith to come as well once she had indicated she wanted to attend. Michelle insisted that she stay with us in the apartment rather than a hotel and to tell the truth, I was delighted that she did. Jon sent his regrets but wished us all the best and arranged for a gift to be delivered before the ceremony. It was a case of a very fine vintage Chilean Cabernet.\n\nIt was Michelle's side of the family that seemed to be slow responding. She didn't seem to be upset about it so I didn't express any concern but I did find it odd. The first to confirm he would attend was her brother Mark in Montreal, then son Kyle and father William, or Billy as he preferred to be called. We had heard nothing from Michelle's mother, Martha, or either her older son or older brother.\n\nWe had already conducted two tours of the office for prospective clients and they went off without a hiccup. Charles Whitmore brought his junior partner along who turned out to be a computer \"geek\" and had more than a dozen questions about the CADD systems we employed and what I saw on the horizon. He was also interested in whether we could \"model\" some of their designs for them for presentation purposes. It would be a lot cheaper than conventional modelling. \n\nOur second tour was for Humber Contracting, the firm that we had helped in the dispute with the steel fabricator. That visit was primarily held in the engineering section as they got into discussions of design and practical application. Gus Molinari and I chatted about my project in Sint Maarten. His company was looking for foreign work and wondered what the problems might be. We agreed to consult with him if we had some useful experience.\n\nI was sitting in my office the next day when I had a phone call.\n\n\"Mr. McLeod, my name is Michael Catchpole. I am Michelle's older brother. I think we should meet for lunch this week. I think we need to talk.\"\n\nI didn't warm to his voice. His tone said he wasn't making a request as such, he was giving me an order. I almost told him that I wasn't available this week but changed my mind when I remembered this was Michelle's family.\n\n\"I think I can find the time. Would the University Club suit you,\" I said, trying to push back at some of his implied arrogance.\n\n\"That will do fine. Tomorrow then?\" he asked, trying to force the issue.\n\n\"Let's make it Thursday instead, Mr. Catchpole. I have guests in the office tomorrow.\" I didn't really but I couldn't resist pushing back at him. \n\n\"Very well,\" he said with a note of reluctant acceptance. \"Thursday at noon, then.\"\n\nIf I'd have written down the conversation verbatim, it wouldn't have looked anywhere near as rude as his voice made it sound. Worse, he had pushed me into being less than polite as well. Ah well, I'll know what to expect from him after I talk to Michelle.\n\n\"He's his mother's son,\" Michelle said as we sat in the living room before supper. \"He's convinced he's someone important and likes to lord it over anyone he meets. It doesn't always work. It certainly doesn't work on me or his father.\n\nYou have my permission to give as good as you get.\"\n\n\"Well, I haven't heard what he has to say but his tone is pretty aggressive.\"\n\n\"He wants to see who has the audacity to marry his sister without getting his permission. After all, he is the elder brother,\" she smirked.\n\n\"Ah ... so ... the western upstart offends the western pretender,\" I laughed.\n\n\"Something like that. I can't see Michael in Calgary, to be honest. He'd be much better in Ottawa or even England with his attitude. By the way, don't call him Mike. He hates that.\"\n\n\"So I guess I shouldn't be looking for someone with a ten gallon hat and big silver belt buckle, huh?\"\n\n\"No ... more like a charcoal suit, dark tie and starched white shirt with cufflinks. I wouldn't be surprised if his underwear wasn't starched,\" she snorted.\n\n\"It's going to be an interesting meeting. I'll do my best not to offend him and I'll try to get him to come to the wedding if he hasn't already decided to.\"\n\n\"Good luck,\" Michelle grinned as she rose to go to the kitchen and serve our meal.\n\nI was physically and mentally prepared for my meeting with Michael Catchpole. I had chosen a dark blue suit, white dress shirt and dark burgundy tie. I was as \"eastern\" as I could get with my wardrobe. Michelle approved. Mentally, her support of my not having to accept his disdain or insults gave me the freedom to respond as I saw fit. \n\nIn the end, I wanted him to at least acknowledge that Michelle had the right to chose whomever she wanted for a partner. I also wanted him to attend the wedding and not upset or insult his only sister. I wasn't sure what the outcome would be so I would just have to \"play it by ear.\"\n\nI was five minutes early at the University Club and the maitre d' seated me immediately. It was almost fifteen minutes later that I saw him lead another man toward my table. I rose as he approached.\n\n\"Hello, I'm Dexter McLeod,\" I said politely with what I hoped was a sincere smile and an extended hand.\n\n\"Michael Catchpole,\" he replied unsmiling. His handshake was weak and brief. \n\nHe seated himself and I followed. He was an inch or two shorter than me and very slim. He had a hawk-like face that was clean-shaven and unremarkable other than his penetrating blue eyes and prominent nose. His hair was cut professionally short and was almost completely grey. As Michelle had predicted, he was wearing a charcoal suit, white shirt, and dark blue and red striped tie. \n\nI was wondering how I would get a conversation started. I had almost forgotten that it was he who had asked for the meeting. \n\n\"I thought it appropriate to meet the man who intends to marry my sister,\" he announced. \"I'm surprised and disappointed that I hadn't heard anything about you from her before receiving the invitation to the wedding.\"\n\n\"Do you talk to Michelle often?\" I asked, knowing full well he didn't.\n\n\"No ... not often. We don't have much in common, it seems.\"\n\n\"You're both family,\" I stated the obvious.\n\n\"There are times...,\" he began, then stopped. \"Our family isn't very close as you probably already know, Mr. McLeod.\"\n\n\"Call me Dex, please Michael. I'd feel more comfortable if you did.\"\n\nHe looked at me for a moment before responding.\n\n\"Very well, Dex. Tell me how you met my sister.\"\n\nI recited the short version of her contacting me and our brief relationship, leading to where we were today.\n\n\"I gather she's very impressed with your accomplishments at Trent. I wouldn't have expected that,\" he said.\n\n\"Why?\"\n\n\"Trent is an old firm and had lived on the good graces of the Toronto establishment for many years. For you to come in and try and recover from the loss of that connection was, to say the least, presumptuous.\"\n\nSomewhere in his voice, I detected just the slightest hint of admiration. \n\n\"Sometimes, when you don't know any better, you just plunge in and do what you think is right,\" I said. \"Perhaps ... just perhaps, the old Toronto establishment isn't as well established as it used to be.\"\n\nI think my answer caught him by surprise. For moment he said nothing, remaining expressionless. Then, against all odds, I saw the beginning of a smile.\n\n\"My time in Calgary has taught me that not everyone in the business community bows to the east. My best wishes on your efforts. I'm surprised but perhaps I shouldn't be. I've always respected Michelle's judgement and in your case, that seems to be proven once again. My congratulations on your engagement as well,\" he said, holding his hand out once more.\n\nThis time his grip was firm and warm. Whatever ice had been present earlier at our meeting had been melted and I sensed we were going to get along well.\n\n\"Thank you. I feel very lucky that she has accepted me. Can I assume you and your wife will attend the wedding?\"\n\n\"Yes, of course. I will let Michelle know that her son Carter will also be there.\"\n\n\"Great ... I'm really pleased to hear that.\"\n\n\"Have you heard from mother yet?\"\n\n\"No. Unfortunately we haven't.\"\n\n\"I'll call her and see if I can't get her answer promptly. I assume my father has responded positively?\"\n\n\"Yes, he has, as has your brother, Mark, and nephew Kyle.\"\n\n\"What about your family, Dex?\"\n\n\"My daughter Meredith and my parents will be here. My son is in Chile and can't get away. He sent a gift however.\"\n\nWe ordered our meal and chatted about inconsequential things for the rest of the lunch. I was warming to Michael. He wasn't quite the \"stuffed shirt\" I was led to believe. I wondered what ... or who ... had changed him.\n\n\"You aren't what I expected,\" I finally said in a moment of candour.\n\n\"Ah ... well ... I suppose I can guess what you were told. Uptight, formal, old-school type with no sense of humour. That about it?\"\n\n\"Ha Ha,\" I chuckled. \"Pretty close. But you dress the part.\"\n\n\"I'm in Toronto. This club has certain expectations. Now, if we were in Calgary, that would be quite a different matter.\"\n\n\"How so?\"\n\n\"Well, no charcoal suit unless I was going before the Board of Directors. More likely a sport coat or blazer, slacks, open-neck shirt, loafers. I had to buy this shirt just for our meeting,\" he grinned.\n\n\"Sounds a lot like our Vancouver office. So ... I've been misled about you then.\"\n\n\"Well, let's just say I had an epiphany when I arrived in Calgary. Discovering that Toronto wasn't the centre of the universe and that the economy was largely resource based put quite a different light on matters. I had to change my perspective somewhat.\"\n\n\"I'm going through that in reverse, I think. But with Michelle's guidance, I'm doing better at appealing to the Upper Canadian business sensibilities.\"\n\nHe raised his water glass in salute. \"Good luck to you, Dex. I think your idea of including Michelle in your plans is excellent.\"\n\n\"Thank you ... but where do you get all this information about us from?\"\n\n\"Why from the only reliable source at Trent of course, Janice Meriwether,\" he grinned again.\n\n\"I might have known. Well, that just shows who really runs Trent Engineering.\"\n\n\"I never realized just how important someone like Janice was until I had my own office to run,\" Michael admitted. \"My 'Janice' is named Lorna, and she's invaluable. She also conspires with my wife to make sure I don't forget important dates or events. I couldn't do without her.\"\n\nBy the time we'd finished our coffee and had run out of conversation, I had a completely different picture of Michael Catchpole. He wasn't who he was portrayed to be and I wondered if even Michelle knew that. I would be interested in her reaction to my meeting.\n\nTo be concluded\n\nMy thanks to ErikThread and DaveT for their skillful editing and helpful suggestions. Any errors are mine alone."
    ],
    "authorname": "coaster2",
    "tags": [
        "team"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/dexters-renaissance-ch-11-12"
}