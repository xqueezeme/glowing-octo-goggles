{
    "title": "Let Me Help You, Good Doctor Ch. 05",
    "pages": [
        "Dominique's body has never felt so heavy and satiated until now. She didn't want to move and was just content to lie in bed. She kept her eyes closed and pulled her body closer to the heat emitting from Nik. She felt his hold tighten around her and she smiled to herself letting the scent of his musk fill her nose. \"You know it is past nine right?\" she heard him mumble.\n\n\"I didn't really notice.\" She replied lazily.\n\nFor the first time, she really didn't. Normally Dominique would flip out about being in bed so late, but she was starting to see some benefits to it. Guess it would help to have someone like Nik who made her cum more times than she could ever imagine.  \n\n\"I think we need too. I don't want anyone to walk in on us, again.\" He reminded.\n\n\"We weren't doing anything the last time though, but I guess this time it would look a little suspicious, huh?\" she felt his head nod on top of hers, \"So, what should we do?\" \n\n\"Well, I am all up for staying in bed for a little bit longer, but we do need to get up. I know my mom would be concerned about you since I said you were sick,\" Dominique sighed, \"but I'm going to need you to move too.\" She could hear the slight chuckle in his voice and she reluctantly pulled away from him but made sure not to let him see the look on her face. \n\nShe tried to maneuver out of bed but he quickly pulled her back against him, pressing his lips firmly to hers without hesitation. She molded against him, feeling his tongue move deeper into her mouth. He grabbed a hold of her hair tugging it back to explore her mouth further. The little moans that escaped her mouth made his rod stiffen. Damn, this girl was such a turn on, he thought as he pulled her to straddle him. \n\n\"Nik, your mother is going to worry about us.\" She whispered in between kisses and he groaned in response, \"We should get up.\"\n\n\"I know.\" He replied still kissing her soft lips. Dominique felt the same way, she didn't want to stop. It was almost like she was a little insatiable when it came to him. She finally pulled herself away being the bigger person and moved off of him. Nik watched as she grabbed her robe and securely tied it. She looked so sexy all ruffled like that. \n\n\"You should get up and take a shower too.\" She reminded him with a leering smile as she headed to the bathroom. Oh he planned on it; he thought throwing the blankets off of him and following right behind her.\n\nLater that day, Dominique was in the kitchen helping the women finish up everything for the herd of policemen that were coming for the retirement party. Dominique was starting to learn more and more about cooking being in the kitchen with Ada and his sisters. Her mind did on occasion flutter to Nik, especially since he was just outside in the front, helping his brothers with the BBQ. \n\n\"Dominique, are you feeling any better honey?\" Ada asked and Dominique's head immediately perked up.\n\n\"Oh, I'm feeling great Ada, thank you.\" Dominique smiled.\n\n\"I was worried about you since you left so early.\"\n\n\"Oh, yes ma'am. I wasn't feeling too well.\"\n\n\"But you are all better now?\" and Dominique just nodded and to her shock Fiorenza, Amadora, and Mika giggled.\n\n\"What?\" Dominique smiled.\n\n\"Nothing, sweet heart. I was just worried about you.\"\n\n\"Yea especially since Nik didn't come back to the party.\" Fiorenza said with a hidden smile.\n\nOh she knew this tactic so well; Jade and Katrina does this all the time. Dominique just meekly smiled and shrugged, \"He just was watching over me.\"\n\n\"Really?\" Amadora smiled.\n\n\"Don't pay attention to my daughters. There are some things that deserve to be kept secret. I wish my two daughters knew that as well.\"\n\n\"Hey now mom, we only tell because we want your advice and we don't tell you about everything.\" Fiorenza defended.\n\n\"You're right baby. It's just so refreshing to see my children finding their happiness.\"\n\n\"Um, I hope Nik does find his.\" Dominique quickly said.\n\n\"I believe he could have.\" Ada said quickly eyeing her and Dominique shook her head vigorously.\n\n\"Oh no, I don't think it will be me. Nik and I are just good friends, besides I don't think we see each other like that. I'm pretty sure he wants someone a little more glamorous.\"\n\n\"Well honey after what we have seen last night, you can look pretty glamorous yourself.\" Amadora said and the girls nodded.\n\n\"No, I'm just plain me that happens to dress up every once in awhile.\" Dominique shrugged.\n\n\"Yea, I think you are a little more than just plain. Nik told me how close you are to your friends and some of the things you have done for them and him as well. I would think anybody would be happy to have you in their family.\"\n\n\"Well, that's almost true.\" Dominique shrugged. Ada looked up at Dominique and saw how her head hung as she chopped the celery. She stood next to her trying to decipher the hidden sadness in her voice. \n\n\"Are you alright sweetie?\" she whispered to her.\n\n\"I'm okay ma'am.\" Dominique said feigning a smile.\n\n\"Okay, you seem kind of down and I just wanted you to know that if you ever feel like talking to me, you can.\"\n\n\"Oh you don't have to do that ma'am. I'm okay, really I am.\" Dominique smiled nervously trying her best to hold up a straight face, but the look of concern on Ada's face was really wearing her down; it was a look of motherly concern. \n\n\"Dominique, I know we just met but I feel a strong connection to you and I want you to think of me as someone you can turn to, in your own time. I know you have your own family and mother, but I'm here anytime you need me.\" She said placing her hand lightly on her arm.\n\nDominique stopped chopping and stood there frozen at Ada's words. She's right; they just met each other and she is acting more motherly to her then her own mother. Dominique didn't get it; how could this stranger make her feel warm when every time she reached out to her mother, it was a cold slap. Even Nik's father has been great to her. Her hands started to shake so she quickly put the knife down without looking up. The silence in the room was deafening as she tried to keep her emotions in check, but she just couldn't get it and she wanted to so bad. \n\n\"Thank you, um, I have to go.\" Dominique quickly said and walked out the back door without any explanations, heading to the pool house.\n\nNik was outside with his father and brothers helping. He was pretty much in and out the conversation though; his mind went back to Dominique and their explosive night and morning. In fact, he couldn't wait till they were alone, which this was starting to get very strange for him. He was use to getting his fill and moving on to the next, but with Dominique, he wanted more of it. He just shook his head as he brought the beer bottle to his lips.\n\n\"Nik!\" he heard his mother shout, \"Nikola!\" she shouted again and saw her marching towards him with a look of concern on her face.\n\n\"What's wrong?\" Nik said immediately setting the bottle down.\n\n\"You need to check on Dominique.\" The minute she said her name, his heart started beating double time.\n\n\"Why? What happened?\"\n\n\"She and mom were just talking and then she rushed out the back door. Did you invite a crazy girl to the house, because I was starting to like her?\" Amadora commented.\n\n\"Amadora!\" Ada immediately said, silencing her, \"Nik, all I told her was that if she needs someone to talk to that I was always here.\" Now that doesn't sound like her, Nik thought.\n\n\"What else did you say?\"\n\n\"Well I also told her that I know that she has her own mother but that she can come to me.\" That's when it came crashing into him.\n\n\"She's kind of iffy about families, but I'll go check on her.\" Nik said rushing past every one as he headed to the backyard.\n\nHe was about to head to the pool house when he saw her sitting in the grass in front of the lake. He let out that breath he didn't know he was holding and carefully treaded his way to her. He sat down next to her and saw her eyes were a puffy and red. She's been crying. He wrapped his arm around her shoulder and pulled her to him. \n\n\"Why did you bring me here?\" she asked softly.\n\n\"I told you, to keep me company and I wanted you here.\"\n\n\"You bring me around your perfect loving family?\"\n\n\"Believe me, there is nothing perfect about them. I mean think about it, I'm the best looking one.\" He smiled trying to lighten the mood.\n\n\"I'm serious Nik. Your mother and father have been more than great and they are so loving. You don't know how lucky you are to have that.\"\n\n\"Tell me about it Dominique. What's been going on?\"\n\nShe took a deep breath before continuing, \"My mom was 18 when she got married. Her family arranged it with their friend's son who was moving to the states for work and they were wealthy. They have been here for five years and she had two sons. Her husband was working so much and left her with the children so one day she met this guy at a restaurant. He sweet talked her, gave her the attention she wanted, and she started having an affair with him. It wasn't long before she fell in love and he convinced her to leave her husband for him when she told him she was pregnant. She told her husband everything and that she was leaving. When she was ready to leave, he never showed up and left town without her.\"\n\n\"Did something happen to him? Do you know who he is?\"\n\n\"His name is Michael Sharpe and no, it was pretty much he wanted to get his socks off and didn't want to take care of a kid. She went begging to her husband to take her back and he did. Then I came along. Everyone accepted me, even her husband, but for some reason my mom couldn't. I tried so hard to please her, to make her love me but she just ignored me.\"\n\n\"So, your aunt Crystal is your dad's sister?\" she nodded into his chest.\n\n\"She saw me and knew I was her brother's child. She tried to convince him to help take care of me. I lived with her and she raised me with the help of my mom and her husband so that my brothers and I were close. She hardly looks at me and she doesn't say anything to me. I just don't get it. How can people that just met me like your mom and dad, show me more love than my own mother and father? He let his sister raise me for goodness sakes and I haven't heard anything from him!\" Nik shook his head; he couldn't believe any man would give up on his kid.\n\n\"Do you know where he is?\"\n\n\"I do, even tried to call him once, but he kept saying he doesn't remember my mom. I know he got married and has kids, so I have other brothers and sisters I don't know. It just sucks that I feel like I'm a burden to one parent and they both don't want me.\" She ended with choking back a sob which made Nik tighten his hold around her.\n\n\"That's not true. I mean, I don't know your dad or your mom, but you do have people that love and care for you. I mean look at your two best friends, your aunt Crystal, and now apparently my mom and dad.\"\n\n\"I know and I do feel bless for them, but it still bothers me why my mom the woman who gave birth to me can't bear to talk to me or that my dad doesn't want anything to do with me.\"\n\n\"Have you thought about visiting him?\"\n\n\"Yea, he's not far from here and apparently he owns his own restaurant. Every time I get the urge to go, I back down. I know Katrina and Jade had said that they will go with me but with my schedule, I can't do it.\"\n\n\"What do you mean not far from here?\" Nik asked.\n\n\"He stays in Bridge Gate. It doesn't matter anyway Nik. I'm just so confused by them and I study everything I could to get some sort of reason of why they did what they did.\"\n\n\"Well I can answer for only your father, it's because he is selfish.\" Dominique sharply moved her head towards him staring at him with eyes wide, \"I mean he wanted to lay down with your mom and not use a condom and then figures out that he had a baby on the way. He puts the responsibilities on his sister, while he goes and lives his life. What kind of man is that? If that's how he is going to treat you, then maybe you are better off not knowing him.\" She shook her head and smiled briefly.\n\n\"You know I think my friends been want to tell me that but didn't want to hurt my feelings. It's refreshing to hear that from you actually.\"\n\nHe hooked his chin under hers, staring deep into her soulful eyes, \"I'm going to be real with you baby, no matter what.\" She instantly smiled, running her finger tips on his forearm. \n\n\"I appreciate that Nik. Jason use to tell me that I should give it some time, but I don't know how long I can wait.\"\n\n\"And that's true but you have waited long enough. I believe that you should confront them about this.\"\n\n\"In time I will.\" She said lifting up her chin.\n\nHe stared down at her and her plump lips thinking how much he craved her lips. This was getting a little too intimate for his liking and hers too. Nik pulled away from her magnetic eyes and stared straight into the lake. Dominique followed his gaze, clearing her throat. She doesn't know how things with Nik have escalated so quickly. Yes, she had sex with him and enjoyed it very, very much, but there was something bubbling inside her. She was losing sight of her original plan being around him so much. She decided to stay quiet and watch the lake with him.\n\nAfter almost an hour, Alfonso's friends showed up for the BBQ. Dominique went to Ada and assured her that she was okay. Dominique's heart leaped when she saw her breathe a sigh of relief and then hug her. Nik showed Dominique around to some of the men. They all looked at Nik in awed replaying stories of how Alfonso would bring the kids to the station. Dominique just stood there listening and laughing. They looked so jovial; this was the first time in awhile that Dominique had the chance to let go and not have to over think. She was also happy that she shared everything about her parents with Nik; who was surprisingly supportive. Even though he may not understand, the way he looked at her when she told him the story eased her mind and body. All in all she had a great time with everyone. \n\nLater that night, Dominique reluctantly packed her bags. Nik told everyone that they were leaving the first thing in the morning and she was a little disappointed. She got all of his sister's numbers and promised to keep in touch with them. Amadora even hinted that she hope to see more of her. She was packing the rest of her bags when Nik came in the pool house after talking to his dad. Towards the end of the night he and his dad have been talking for awhile privately, but she figured that it could be something about his brothers. \n\nNik came in breathing a sigh of relief surprised to see that Dominique had packed his stuff too. She smiled up at him wanting to kiss him senseless. So she figured what the hell. She walked up to him, threw her arms around his neck, and pressed her lips to his. Nik smiled against her lips, kissing her back. He tightened his hold around her, bringing her closer to him. He felt his cock stirring in his pants thinking it has been too long since he has been inside of her. \n\n\"Don't you think you need to pack?\" she whispered.\n\n\"I was hoping you would have taken care of that for me.\"\n\n\"Oh, I see someone is being lazy. I think you can handle that.\" He was about to kiss her again when she heard her phone ring. \n\nShe opted to ignore it but reconsider thinking it could be Katrina or Jade. She picked it up without looking at who it is. \n\n\"Hello.\" She said with a smile still staring at Nik.\n\n\"Hey Dominique, I hope it's not too late.\" \n\nShe swallowed hard, pulling away from Nik, \"Jason, no it's not too late.\" \n\nNik dropped his arms from around her and moved around her. He swore this guy always had a way to ruin a perfectly good moment. \n\n\"I was wondering about you. I haven't heard from you since you left.\"\n\n\"Oh, I'm okay. I'm still here with Nik and his family. We are actually having a very good time.\"\n\n\"Oh,\" he paused, \"that's nice. When will you be coming back?\" \n\n\"I think we are heading back tomorrow.\"\n\n\"Okay, well I know Candi and I wanted to talk to you about some things. She found some dresses and she wanted to get your opinion on them.\"\n\n\"Oh, well I can't wait to see them. How are you doing?\"\n\n\"I'm good.\" He cut himself off, \"So you are meeting the family? That's pretty big.\"\n\n\"Everyone has been great. How has everything been there?\" she asked taking a glance back at Nik and saw him in the bedroom. \n\n\"It's been the same here. I have gotten some work done and helped Candi as much as I can stomach. You know she is terribly missing you since all this wedding stuff is like Greek to me. I just told her whatever she likes, I love it.\" Dominique smiled lightly as she heard him chuckle, \"I was wondering if we can get together for dinner, just me and you like normal.\"\n\n\"Um, let me get back to you Jason okay?\" She didn't wait for a confirmation as she shut the phone close. \n\nWas he really inviting her to dinner? Alone? Apparently Jason is getting the idea that this thing between her and Nik is real. For some reason that didn't bring the joy she thought it would have brought, in fact she felt guilty. She went into the bedroom and saw him finishing up the packing. She saw the tension in his body and wondered if he caught some of the conversation. \n\n\"So what did lawyer boy have to say?\" Nik said not even looking up at her.\n\n\"He wondered if everything was alright and that Candi needs my help with the wedding stuff.\" She sat on the end of the bed, \"Are you alright?\" she asked.\n\n\"I'm fine, just getting ready for the drive tomorrow.\" \n\n\"Nik, I really appreciate you bringing me here. Your sisters are so crazy and I know it makes you feel good to hear about your brother getting out.\" He let out a big sigh, \"You reaching for conversation because you must think I am mad, but I appreciate what you said about my family.\"\n\n\"I am not reaching for conversation. I'm telling you the truth.\"\n\n\"I know you are, but for you to say it like that let's me know that you think I am upset. You aren't the only one who knows a little psychology.\" He smiled heading to the bathroom.\n\n\"Ok Nik, lets talk about why are you upset.\"\n\n\"Actually I'm not. I was thinking about other stuff and we really should get some sleep before we head out.\" He walked past her and Dominique pouted.\n\nShe really didn't want to sleep, at least not now. They still had some business to take care of as far as she is concerned. She decided to turn on the television to drown out the silence. She flipped through the channels until she landed on her all time favorite movie. Nik happened to look up at where she stopped and smiled to himself.\n\n\"Are you looking at a scary movie before you go to bed?\" he said.\n\n\"What? Don't tell me that you are scared of Freddy Kruger?\" he laughed out loud.\n\n\"Are you kidding me? I love Nightmare on Elm Street.\"\n\n\"Shut up!\" she smiled turning to face him, \"This is my favorite series.\"\n\n\"Oh really? When my mom let Gianni watch us over night, we would watch all the series and my sisters hated it. My mom didn't like us watching scary movies like that, but I love it.\"\n\nShe started laughing, \"You know I actually had my Aunt Crystal get me the sweater and the hat and one year I went as him for Halloween. I remembered I scared Jason so bad that year climbing into his room. Oh he hates scary movies.\" Nik laughed with her loving how her face lit up.\n\n\"Look at you, Miss Organize has a dark side.\" He said sitting next to her.\n\n\"I guess. I don't know for some reason I would always look at Nightmare on Elm Street with my favorite ice cream, chocolate chip cookie dough. Afterwards, I would make me feel better after a rough day.\"\n\n\"Do you have all of them?\"\n\n\"No, I haven't even started getting them yet. I just hope to catch them on tv.\"\n\n\"Which one is your favorite?\" he said lying back.\n\n\"I like part three, my all time favorite, besides the first one. I just love that it's prime time bitch line.\" She laughed, \"I hated the second one though.\"",
        "\"Oh I totally agree; that kid got on my nerves with all his whining and screaming.\"\n\n\"Not only that, Freddy in love. What kind of crap is that?\" she shrugged as she snuggled next to him. \n\n\"What were some of your other favorite scary movies?\" Nik asked.\n\n\"Well, I do like the Friday the 13ths too, only because they did make me laugh. I love seeing the different ways those kids would get caught by Jason.\"\n\n\"I don't know, my second one would be Michael Myers for me. I love his style; just did it and kept on going, plus you can tell he had a game plan with his kills.\" Nik wrapped his arm around her. \n\nShe looked up at him and found him staring back at him, \"Who would ever thought that we would find a connection with scary movies?\" she chuckled.\n\n\"It's the all time guilty pleasure, well that and porn. Are you into that?\" he leered and she couldn't help but start laughing. \n\n\"I have seen my fair share if that's what you are trying to ask in a not so subtle way.\" She reminded.\n\n\"Oh, now that I would have never pictured for you babe; I figured you would turn your head and think it's disgusting.\"\n\n\"I think it's perfectly healthy to indulge in it a little bit. I don't know what you thought about me before Nik but I'm not a complete prude.\" She pouted.\n\nHe paused staring at her pouty lips as his body tighten ready to feel her again, \"No, you're not. Last night was very evident of that.\" He said rolling over on top of her and nearly cringes when she nibbled on her bottom lip. \n\n\"So, now you think I have a wild side?\" She whispered wrapping her arms around his neck.\n\n\"Oh babe, I know you have one.\" He ended the conversation by pressing his lips to hers in a searing kiss. \n\nShe accepted the full weight of his lips, pushing her own tongue into his mouth to duel hers. Her body felt like an electric current was surging through her making her pull him closer to her. She just couldn't get enough of him when he kissed her. It was almost like the outside disappears and there is nothing for her to focus on but him and her needs. She nibbled down on his bottom lip and heard him lightly growl into the kiss. \n\n\"I want you to do something for me again.\" He whispered.\n\n\"What's that?\" she cautiously asked. \n\n\"I want you to strip for me.\" \n\n\"I already did that for you.\" She reminded.\n\n\"No baby, I want you to strip all the way for me.\" He said and she pushed her head back into the pillow. \n\n\"Well, um, I believe I can do that.\" She said a little nervous. \n\n\"Hey now, it's just me here. It's not like you haven't done this before.\" He smiled and she nodded. \"I realize that, but you want me to go all the way.\" She gulped as he moved off of her. \n\nShe felt like she was back in school giving a big speech in front of everyone as she stood at the head of the bed. Nik turned off the TV and sat up in the bed. Dominique stared around the room thinking that she should have some music with this. She reached the bottom of her tank top and pulled it up above her head. Nik's mouth watered at the sight of her full breast encased in her bra. She hooked her thumbs in her skirt and slowly pulled it down her legs. Dominique didn't have the tall, long legs but her legs were very shapely and tone. She still reminded him of those old pinup girls, very voluptuous. \n\n\"Don't forget the hair.\" He reminded and she nodded.\n\nNik's breath caught in his throat as she felt moved in slow motion. She unhooked her bra, letting the garment fall to the ground. Her pert nipples made his mouth water as if beckoning him like a moth to a flame. She reached up to her hair and took out the pin, shaking it out. Her hair flowed in lose curls framing her face. She reminded him of the first night he told her to undress for him and she looked like so fierce and exotic, like a lion. His cock was at full strength in his pants and it pulsed with need for her. She shimmed out of her panties leaving them on the floor. Yes she was truly a work of art, he thought with a smile.\n\n\"Come here.\" He said and she bit down on her bottom lip noting the lust in his eyes.\n\nShe felt so empowered by the way he looked at her that she took the liberty of crawling up his body slowly enjoying the look in his eyes. She made short work of the distance and straddled him, plopping herself on his lap. She went to the buttons of his shirt and unbuttoned them keeping her eyes locked on his. Her breath came in short pants as she revealed his hot olive toned skin. He helped her push the shirt of him, running her hands down his sculpted chest. He couldn't hold back anymore, he brought her head down and slanted his lips against hers. \n\nHe grabbed a hold of her hips pulling her firmly against him. She got so lost in the sensation that her body heighten with pleasure. She grabbed a hold of his face, caressing his tongue with hers. She could smell her arousal in the air and knew that it hit his nose when he flipped them over so that she was lying on her back. He made quick work of his pants and boxers tossing them to the floor. He kissed all over her neck and her smell invaded his nose making him dizzy with need. He couldn't wait any longer, he was throbbing. He kicked his pants and shoes off quickly as she caught glimpse of him. He took a hold of his manhood and slowly rubbed the outside of her lips with it. \n\nShe arched into him opening her legs a little more to accommodate him. She wanted to feel him so bad and it was slowly becoming a need. He heard exactly what her body was saying and eased himself inside of her. He gritted his teeth as he felt her grip his length. He looked back at her and saw her eyes were pleading with him to continue. \n\nHe thrust his full length inside of her stiffening as she gripped him. Her mouth flew open as he continued to stroke her inside with a delicious sensation. He leaned down to kiss her as she wrapped her legs around his waist as he pushed in quicker. \n\n\"Oh Nik, that feels so good.\" She said gritting her teeth.\n\nHe leaned his head on her shoulder as he relished in her hot wetness. It felt like heaven to him; it made his head swirl in ecstasy and his body tightens. Her moans filled his ears sounding like complete song. He lifted his head up and connected with her lust filled heavy eyes. He pounded inside of her as her nails dug into his back. He barely even noticed the pain; he just wanted to get as deep inside her as he could. \n\n\"Fuck.\" He whispered as she clamped down on his length.\n\nShe could feel her toes curling and her body soaring to impossible lengths. No one has ever satisfied her so thoroughly. She screamed out his name in his ear biting down on his shoulder. Oh he loved the fact that she seems so primal when they had sex. He couldn't hold back any longer and felt his entire body stiffen as he spilled himself inside her. He growled against her neck tightening his hold on her hips. The room was filled with their heavy breathing as they lie there unmoved. In truth, Dominique didn't want him to move, if she could, she would have them stay like this all night. Nik shut his eyes tight trying to decipher what was really going on here. Why was his body reacting this way with her? \n\nThe early morning came so quick that Dominique wanted to actually sleep a little bit longer. She took her time saying good bye to Nik's mother and sisters promising to keep in touch with them. Nik was loading the bags up with his father while she was still talking to Ada. \n\n\"Are you sure that you are going to call me? I want to hopefully see more of you Dominique.\"\n\n\"Yes ma'am. I have your number so we can still talk, I promise.\"\n\n\"Okay.\" She gave her one more hug, \"You two have a good drive.\" \n\nDominique nodded and got in the truck waiting on Nik to say another good bye to his family. She was truly going to miss them. While she waited, she went ahead and text the girls that they were leaving now. \n\nNik had been pretty quiet for most of the drive. She figured that his dad must have told him something and he was thinking about it. She hoped that he wasn't rethinking what they shared this weekend. Even though she knew how Nik operated, they didn't stop the upcoming feelings she was having for him. No, she had to push them away; it was nothing but good sex. Well, great sex. \n\nShe sighed and looked out the window watching the trees go by. She didn't even notice when he exited until she saw different scenery. They were in a town, a pretty small one too. She didn't know why but something about this brought a sickness in the pit of her stomach. She sat up at full attention when he stopped at a restaurant. Once she saw the name of the place, her heart stopped.\n\n\"Nik, what the hell are you doing?\" she said staring at him as if he had performed the ultimate betrayal.\n\n\"I figured that we could go ahead and get some food to eat.\"\n\n\"You know that's not what I was talking about. Why are we at this restaurant?\"\n\n\"Dominique, you need to go through with this. No more putting off and no more excuses.\" She paused staring back at the restaurant, \"You know you want to do it and you need to above all. You just need to talk to the man.\" \n\nDominique bit down on her bottom lip looking at the place that was filled with people. He was right and she did need to do this but could she really face him after all these years? Why should she do it at his restaurant of all places? She sighed to herself as he got out the car waiting patiently for her. Well, no time like the present she thought taking a deep breath before getting out. Nik smiled as they both walked inside to see the place packed. She watched Nik walk to the hostess that looked like she was in her late teens. She was taller than Dominique only by a little bit but she was a pretty girl especially around the eyes. \n\n\"Hi, welcome to Pop's Restaurant, is it just the two of you?\" she asked with a bright smile.\n\n\"Yes, please.\" Nik replied. \n\nShe looked around for a little bit and then returned her attention back to them, \"Okay, well follow me and I will show you to your table.\" They followed her to a nearby table by the window. Dominique stayed quiet the entire time but she wondered if this girl could be her half-sister. She looked like the pictures the she seen of her father. The thought of possibly meeting her sister for the first time was a little exciting. She looked around the restaurant and everyone looked as if they were having a good time enjoying the food. Well that's one thing she didn't know about him. Aunt Crystal didn't really go into details about her father other than how they grew up. \n\nDominique took a deep breath and turned towards Nik as he looked through the menu. She felt her palm sweating and felt her body shaking. She closed her eyes tight trying to calm her nerves from escalating. She felt on a brink of a panic attack and she said a small prayer in her mind. As she took a deep breath she felt something grab her hand and she instantly flipped her eyes open and saw Nik's hand holding hers. She relaxed into his soft touch taking a deep breath. She nodded and looked into his eyes as a warm feeling cast over her body. She was feeling a little more at ease with him being there. An older woman came to the table with a warm smile on her face, \"Hi, sorry about the wait, we are a little short on staff. What can I get you good looking people?\"\n\n\"Um, I'm not sure.\" She stammered.\n\n\"Do you guys need a little more time?\" she asked looking between the two.\n\n\"Well, what do you recommend? We are just really passing by and new around here.\" Nik said striking the conversation with her. \n\nThe lady smiled and just before she said another word, she took another look at Dominique. She looked at her as if she was trying to decipher or trying to place her face somewhere. Dominique nibbled on her bottom lip as the woman stared at her. Nik could see the woman's mouth part the more she looked at her. \n\n\"Um...well we have really good fish here. My husband is the owner and cook and it's a special recipe.\"\n\n\"Really? Well, I have always been the type of person that wants to talk to the cook just to get a feel for him. Is there a way we can talk to him just for a minute?\" Nik said and the woman just swallowed hard.\n\n\"Yea, I will get him.\" She said quickly retreating to the back. \n\n\"She knows.\" Dominique whispered to him once the woman went to the back.\n\n\"Good, she should know. Hopefully, we will get the answers needed.\" He said watching the kitchen door.\n\n\"Nik, do you think we should leave? What if she tells him and he doesn't show up?\"\n\nHe sighed, \"Oh he is going to show up and if he doesn't I have friends in very high places around here that can make this situation very bad for him.\" Nik nodded returning his attention to the door.\n\nDominique turned towards the door and saw an older heavy set man come out and she stopped breathing for a second. He was completely bald and seemed taller than she would have thought. He was wiping his hands on his towel and had a smile on his face as he made his way to their table. She couldn't believe it; she was really going to meet him for the first time. She did look like him, she could see why his wife looked at her the way she did. Her heart was beating so hard that she felt like it was going to pop out of her chest. \n\n\"How are you doing, sir? My wife tells me you want to see me about the fish.\" He said with a smile, putting his hands on his hips.\n\n\"Yes, I heard that it was a special recipe.\" Nik said casting a glance between him and Dominique.\n\n\"Oh yes, something that I had for some time now. It's a family secret and I will guarantee that you will enjoy it.\"\n\n\"A family secret? Where are you from?\" Dominique finally spoke and he glanced her way.\n\n\"Well, I am from Davidton, not far from here.\"\n\n\"Oh really, we are heading back to Davidton now. You may know some people there.\"\n\nThe man cleared his throat, \"Well, I don't know. I have family there, is there something else I can help you with? I have to get back to my kitchen.\" he said trying to leave the table.\n\n\"Do you know a Crystal Richardson?\" Dominique finally said, \"Or maybe a Arisu Lin?\" \n\nHis gaze immediately went to Dominique and she swallowed hard. He looked as if she laid a bomb at his feet; in a way she did. Nik looked at him to gauge his reaction.\n\n\"Who are you?\" He finally asked.\n\n\"I think you know who I am.\" \n\nHe cleared his throat looking towards the back, \"I don't think I do.\"\n\n\"I'm your daughter. I'm Dominique. Your sister and my mom have been raising me and I just wanted to see you and talk to you.\"\n\nHe took a long look at her; she knew that he was trying to see if what she was saying was true. She looked like him some so he couldn't deny it. It seemed like the entire area got quiet waiting for him to say something.\n\n\"I think you have the wrong person ma'am.\" He finally said and she felt as if someone punched her in the chest.\n\nIt took her awhile to find her voice, \"No, I don't. I already know what happened between you and my mother. I don't want anything; I just want to talk.\"\n\n\"I'm sorry miss but I am not the person that you think I am and I don't appreciate you bringing my sister's name into this.\" He said coldly and Nik's temperature raised. The nerve of this asshole, Nik thought.\n\n\"Did you hear what she said? She doesn't want anything from you; she just wants to talk to you. Damn man, it isn't that hard.\" Nik said as his fist balled up.\n\n\"I'm telling you that I am not this girl's father and I appreciate her real father wouldn't appreciate you approaching him like this. I have a family here and you saying things like this could really upset them. Now if you not going to order anything, then you need to leave.\" There were a couple of guys that came from the back about just as tall as him. Dominique's heart was breaking; this wasn't what she pictured.\n\n\"Yea I will order an asshole with a side of being a dick.\" Nik said and the two guys moved towards Nik but her dad stopped them.\n\n\"If you have a problem, then you and this young lady can leave.\" \n\n\"You know,\" Nik scoffed, \"I do have a problem.\" He said pushing away from the table standing in front of him.\n\nOnce Dominique saw Nik get up and the entire restaurant turn their attention to them, she instantly snapped out of her stupor. She rushed up to get between the two, \"No Nik, it isn't worth it.\" She looked back at the man that seemed so cold, \"I don't even know why I thought you would be different. Aunt Crystal warned me how you were, I just thought that maybe you would feel different now that I'm older. Thank you for confirming that I'm fine without you. Let's just go Nik, please.\" She sighed and the man that was suppose to be her father swallowed. She turned her attention to Nik. \n\n\"Fine.\" Nik said heading to the door. \n\nDominique took one more look at him before following Nik out the restaurant. She felt a little hollow after everything that happened. A part of her was happy that she finally got that over with but the way he looked at her was the part that was excruciating. He looked at her with recognition but it instantly changed to disdain. He knew who she was, she saw it in his eyes, but he didn't want to admit it. Then she recalled the men that stood by his side and a part of her knew that some of them may have been her brothers. She sat there for a moment and then thought it was for the best; there was one big load lifted off her shoulders. As far as she was concerned, she didn't have to see or speak to him ever again. \n\nNik just sat in silence mentally kicking himself. He thought that after she would see her father that he would take her in and she would be happy, but it was just the opposite. Nik couldn't believe the balls of this guy; how could any man deny his child? She looked similar to him and he still treated her like she was some crazy woman from the street. Not only that, Nik felt guilty for basically pushed her to meet him. He wished it could have been gone different. Damn it, why couldn't it be different? \n\nAs they arrived back home, Nik figured that she wanted to go home and he wanted to wait to explain why he did what he did. Dominique looked up and saw Jade and Katrina's restaurant coming up. \n\n\"Nik, you mind just dropping me off here. I'll get Jade to take me home.\"\n\n\"What?\" he suddenly said and she still didn't look up at him.\n\nHe pulled over to the side and turned his attention to her, \"I can take you home. I have no problem with that.\"\n\n\"I know you don't. It's just I want to be alone.\"\n\n\"Alone? Or you want to be away from me?\" she sighed running her fingers through her hair, \"Dominique, I didn't think he would do something like that. I wanted you to finally face your father and I'm sorry that I pushed you. I just thought it would be helpful.\" He said blubbering and she sighed.\n\nShe finally faced him and saw the sorrow in his eyes; something about that look touched her deeply and made her heart beat overtime. She reached for his face and took hold of it with both her hands making him look up at her.\n\n\"Nik, you were great. Without you I probably still wouldn't have the courage that I did to see him. I know that we both wanted it to be different but this is the closure that I needed with him. Thank you so much for all that you have done for me this weekend.\"\n\n\"I just wanted you to have fun and relax.\" He finally said as the soft stroke of her finger against his cheek made him shiver inside.\n\n\"And I did, I really truly did. I just want to hang out with the girls for a little bit. If you want, I will see if Jade will open her trunk and I can put my stuff in her car.\"\n\n\"No, I will take your stuff to my place and then I can bring it to you when you get home.\" She smiled watching the boy in him look off to the side.\n\n\"I'll see you later okay?\" he nodded and she leaned over to kiss his lips.\n\nHe sighed to himself as he felt her tongue stroke his. Even though he protested, she pulled away from him and he stared back at her, \"I'll see you.\" He smiled and she hurried out the car before she itched to do something else with him.",
        "He watched her tread all the way to the restaurant noticing her hips swinging to their own sensual beat. He never noticed that before, he thought with a smile. He drove away from the restaurant as an idea popped into his head for tonight. \n\nDominique walked in with a little smile on her face and went to the back where she knew everyone was. She took a deep breath trying to make sure that there were no signs of anything happening this weekend. She knew they had a thing about a certain glow that happens after sex and she didn't understand it much. After taking a couple more deep breaths she opened the door as their conversation immediately ceased.\n\n\"Hey missing person, how are you doing?\" Jade said with a smile.\n\n\"Welcome back.\" Katrina smiled.\n\n\"Hey guys, I'm good. How is everything going with you two?\" Dominique said keeping her composure as she sat down in front of Jade's desk. \n\nDominique looked between both of her friends and saw them both staring at her. She cleared her throat and rubbed the back of her neck.\n\n\"So, what's going on? Did I miss anything?\" Dominique quickly asked. \n\n\"I am starting to wonder if we missed something.\" Jade said and Katrina just giggled.\n\n\"What are you talking about?\"\n\n\"How was your trip?\" Katrina asked.\n\n\"It was great, his mom and dad are great and really nice. His sisters and brothers are so hilarious. I was surprised I really enjoyed myself.\" Dominique smiled.\n\n\"That's good, anything else happen? Like something between you and Nik?\"\n\nShe cleared her throat and said with a straight face, \"No, we just had a lot of fun and hung out with each other.\" \n\n\"Dominique, I hope you don't think we are that blind.\" Jade said.\n\n\"What are you talking about?\" she quickly asked.\n\n\"You and Nik, it's written all over your face.\"\n\nDominique swallowed hard and quickly shook her head as she felt her throat go dry, \"I mean nothing major happened. Just a little kiss sometimes.\" She swallowed and they continued looking at her. Her brow started to sweat and she started twiddling with her thumbs, \"I mean we may have had sex once or twice.\" She finally admitted under their strong stare.\n\nJade and Katrina jaw dropped and it was at that moment she realized that she fell for it. She always fell for it and this was definitely something she didn't want them to know yet. \n\n\"Why do I always fall for that?\" Dominique said looking up at the ceiling.\n\n\"We don't know but we love it when you do. You slept with Nik?\"Jade said. She sighed, \"Yes, I slept with him and it was very nice. That's it.\"\n\n\"That seems pretty different for you Dominique. You normally don't sleep with someone that you aren't in a relationship with.\" Katrina said.\n\n\"I know. I don't know what came over me. I felt pulled to him and when it happened, I felt like something just exploded inside me.\"\n\n\"So I guess what they say about Nik is true, huh?\" Jade smiled.\n\n\"What? What do they say about him? I mean I'm pretty sure there is some sort of rumor going around about his skills in the bedroom.\" Dominique quickly retreated.\n\n\"We were just kidding. There is nothing going around about him; at least, not that we heard.\"\n\n\"Oh, I'm sorry. I'm just a little bit paranoid about it. Like you said, I don't do casual sex but it was so much fun.\" She said with a smile, \"Then on our way back, I saw my dad.\" She said lowly and Katrina gasped. \n\n\"You did? Did you find out what he was like?\" Katrina asked.\n\n\"What did he say to you?\" Jade quickly fired off.\n\n\"Guys, don't get your hopes up too quickly. He kept saying that he was not my father. I looked him right in the eyes and he kept denying it.\" Katrina was the first to come over and give Dominique a big hug, \"I'm so sorry sweetheart.\"\n\n\"Are you going to try again?\" Jade asked.\n\n\"I'm not and I'm okay with that. I made the effort when I really didn't have too and he still rejected me, even though his sister raised me. I saw him and now that I did, I can be at peace. I mean, it's his loss.\" Dominique smiled as Katrina smiled back at her rubbing her shoulder.\n\n\"You're right, it is his loss.\" Katrina agreed.\n\n\"If you feel this way about him, why can't you feel the same way when it comes to your mom?\" Jade asked; something that Dominique knew would come from Jade.\n\n\"It's different. She has been there my whole life and my dad hasn't.\"\n\n\"Your mom has been there for you in body but everything else she hasn't been. I'm not trying to beat you up about this,\" Jade said when she saw the uncomfortable look on Dominique's face, \"I am just concerned that you are trying to bend over backwards for her and in the end, it's having an effect on you.\" \n\n\"Everything will work out in the end. I have no choice but to keep believing that and as my friends you two don't have any choice but to be there for me.\"\n\nJade shrugged, \"Well, that's true. If you really feel that way then I will stop over stepping and let you handle it. Now, lets move on to you and Nik.\" Jade smiled.\n\n\"This is nothing going on to discuss. We are just two really good friends,\" Dominique paused, \"but I have to admit there is something there.\"\n\n\"Do explain.\" Katrina said.\n\n\"I mean there is this sexual tension that is very evident between us and I may have acted on it. I enjoyed it a lot, but that's not where I need to focus on. I still have Jason and all this other stuff.\"\n\n\"Are you really still going through with the seducing Jason thing?\" Katrina asked.\n\n\"Yes, I think.\" Dominique paused, \"Look it doesn't matter. I know what I have planned and that's what I'm sticking too.\"\n\n\"Well, alright. We will stick by your decision because we know that you will make the right one.\" Katrina said with a smile and Jade nodded in agreement. \n\n\"Good, now can you guys take me home? I need to go ahead and unpack and give Jason a call. I know he called me while I was there and I need to get back to him.\" Dominique forced a smile and sighed.\n\nAfter talking a little bit longer with the girls, Jade took Dominique home without any arguments. She wasn't really looking forward to calling Jason so soon. She wanted to just sit around for a while. She made it into her bedroom and was greeted with her luggage. She smiled to herself thinking about Nik, he was truly sweet but how did he get the key to her apartment? She could hardly believe he did everything he could to let her see her dad. Even though it didn't go well, she was truly grateful for everything that he had done. A little part of her wanted to call him over to keep her company, at least he could get her mind off some things and what's weird was it was a little bit more than the sex. Oh well, he was probably in his apartment hanging with the guys or something. \n\nShe was about to start unpacking when she heard the door. She must have forgotten something in Jade's car. She went over to the door and smiled at who she saw on the other side. \n\n\"I thought you might want some company.\" Nik said with a smile.\n\n\"And what makes you think that?\" she said returning the smile but putting her hands on her hips.\n\n\"Well, I at least need the company. I'm watching a scary movie and I need someone to hold my hand.\" He said holding up a DVD.\n\nDominique took a close look and gasp in shocked, \"Is that Nightmare on Elm Street 3? Where did you find it?\"\n\n\"I actually went to one of those Goth stores and found it there. I was thinking a little Freddy Kruegar with some ice cream.\" He said producing another sack and she couldn't help but to laugh. \n\n\"Well, why not?\" she said moving out the way letting him in. \n\nShe let him set up the DVD player while she went to grab a couple of spoons. She didn't realize how excited she was about watching a movie with him. It was just a normal movie that she watched plenty of times before but for some reason it was different. She shook her head quickly. She needed to stop over thinking things and just feel. She joined Nik back in the living room and saw him lounging on the couch waiting to start the movie. \n\n\"So, what brought this on?\" she asked sitting next to him.\n\n\"Well, a very smart woman told me that she loves to watch scary movies with her favorite ice cream and she would feel better.\" He said taking the spoon as she opened the ice cream.\n\n\"Nik, I told you I'm okay about what happened earlier.\"\n\n\"Your mouth says that but I know better. I looked in your eyes and saw it.\" He stared into her eyes and she couldn't return the stare. She just stared into the ice cream, \"It hurt. I didn't know what to expect but I didn't expect that. It's like my parents spent most of my life rejecting me; he was just the first person to actually saying it.\"\n\n\"Well, I think with your mother it could happen, but you can't make her have a relationship with you. She has to make the move because you have done your part.\"\n\n\"I know, that's what everyone tells me, but it doesn't hurt to go see her just to check on her. I want some acknowledgment that I exist from them.\"\n\n\"And you will get it in due time.\" He said pulling her close to him, \"Now let's pay attention to the movie.\" \n\nShe sighed and put a spoon full in her mouth as the movie started. Everyone was starting to sound like a broken record. She knew that they were right about the whole thing but she still had some hope, but for now, she was going to enjoy lying here watching her movie and eating ice cream. She curled up closer to Nik as he dug into the ice cream.\n\n\"Don't eat all the chocolate chips.\" She said with a smile.\n\n\"What? That's one of the best parts.\" He smiled.\n\n\"I know that's why I said don't eat all of them.\" She said pushing his spoon out the way with hers.\n\n\"Oh don't be such a baby.\" He smiled and held up the spoon to her lips. She smiled as she wrapped her lips around the spoon, savoring it. It seemed to taste sweeter from him. \n\n\"Well now I have something else you can wrap your mouth around like that.\" He smiled and she punched at his shoulder as he chuckled. They returned their attention to the movie, feeling the effects of the tiring weekend slowly overcoming them.\n\nNik awoke with a start when he heard the television static. He didn't even realize he had fallen asleep. He looked down and saw Dominique curled at his side asleep as well. He moved a stray piece of hair out of her face and that made her curl closer to him. Wow, he thought with a smile as she settled back to sleep. How could she be so gorgeous and not know it? \n\nHe carefully got up laying her head softly on the couch. He turned off the television and cleaned up the ice cream making sure to throw everything away. He was about to leave but made the mistake of looking back at her. She needed to be in bed, he concluded. He lifted her up off the couch into his arms. She instantly wrapped her arms around his neck, settling her head against his shoulder. He carried her to the bedroom and laid her down on the bed. He sighed looking down at her as she pulled her knees closer to her body. Well, he didn't want too but he should leave her alone to get good nights sleep.\n\nHe was heading to the door when he heard a small sound. He turned around and saw her still laying there sleep. Well maybe he was hearing things; it has been a long day. He was about to turn away when he heard his name whispered softly.\n\n\"Nik.\" She whispered again and he turned to face her.\n\n\"Go back to sleep, Dominique.\" He said back to her.\n\n\"No, come sleep with me please.\" She yawned, which made him wonder if she knew what she was saying. \n\nHe looked at her and she was still laying there sleep. Why the hell not? He got in the bed behind her and wrapped his arms around her body. She sighed with content as his body heat lulled her back to sleep. He tenderly kissed the back of her shoulder just before laying his head on the pillow. This was definitely new for him. He never just lay in bed with a girl without sex and for the first time he was content with it. What the hell was going on?"
    ],
    "authorname": "Myanlass",
    "tags": [],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/let-me-help-you-good-doctor-ch-05"
}