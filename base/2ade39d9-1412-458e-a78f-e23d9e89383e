{
    "title": "Sheffali's Caravan",
    "pages": [
        "Author's Notes:\n\n'Sheffali's Caravan' is a standalone story in the Jack Danner universe.\n\nIt gets a little dark, as life is hard on Llevven, but never lose hope.\n\n********\n\nSheffali's Caravan\n\n********\n\nPrologue\n\nThe Gate Network was reputed to be thousands of cycles old, and many of the races whose planets were connected to the instantaneous transportation system were equally old and established. They'd gone through their turbulent cycles and emerged wizened survivors with stable, if sometimes stagnant, civilizations.\n\nThe Tik, a race of Sentient Mechanical beings, administered, maintained and operated the expansive transportation network. They ensured the Gate Network continued to support all Assembly members.\n\nThe rules for admission in this community were few. There was a charter of dos and don'ts that each invited race had to agree to follow. The single most important rule was to maintain peaceful interactions with the other members of the Gate Network. Failing to do this meant expulsion from the Network, a fate most could not endure. What you did to your own citizens on your own planets was your own business. Fuck with someone else? That meant trouble.\n\nThe Borrelians were not a young civilization, but they'd only been part of the Assembly for close to a century, making them comparatively new. As such, they were under the scrutiny of the more senior members, who watched for any and all signs of misbehavior.\n\nWhile they diligently followed the Charter to the letter, behaving in a most civilized manner with the other races of the Network, the Borrelians had a dirty little secret.\n\nGenocide.\n\nThe typical Borrelian lifespan was slightly over two hundred cycles, yet they reached adulthood after just twenty. That's when biological imperatives drove them to find mates and begin building families of their own. Normally war and its accompanying scourges would maintain the population levels. After the last Great War, the newly victorious Rulers implemented a new system of social order which they insisted would bring peace and prosperity for all Borrelians. Few understood its chief purpose was to give the Rulers a means to control their people. They'd found their solution for stabilizing their civilization and implemented a caste system. The populace, weary from the last war and fearing the horrors of another, desperately accepted this promise of peace.\n\nWith war a thing of the past and new prosperity on the horizon, the populations on their planets began to grow again. After much debate, the Rulers agreed. Acquiring additional planets was the answer.\n\nThe Borrelians had well-established space travel. Their Empire had expanded to a dozen planets spread across three planetary systems. They sent ships out into the void beyond their third and stumbled upon a fourth system with two viable worlds.\n\nThey just needed to eliminate the current inhabitants.\n\nAs the Borrelians had just joined the Assembly, the need to complete their acquisition of the fourth system meant their war efforts had to be accelerated but quietly.\n\nTheir enemy was unknown to the Assembly, so the Rulers determined they weren't technically breaking any Assembly rules. As long as the Tik never found out about the war or their enemy, the Borrelians could quickly conclude their genocidal efforts and expand into the fourth planetary system.\n\nThe caste system imposed rigid rules for which of their planets each citizen was allowed to inhabit. Even after they joined the Network, none of the population were permitted to emigrate to any planets outside their three planetary systems. The Rulers demanded absolute control over their citizens, and those off-planet could not be trusted to maintain their policies. A few privileged members were sanctioned to work amongst the worlds of the Gate Network, but even these called Borrelia home.\n\nWhile most Borrelians were aware of the enemy, none would speak of the terrors who struck in the night. It became a well-established fact amongst the population that even whispering their names would bring the horrifying death-bringers down upon the whisperer, their friends, and family.\n\nThis silencing propaganda campaign was engineered by the Borrelian Intelligence Agency for the Rulers to terrify the populace. This effectively kept the secret from the Tik.\n\nWhat should have been a rapid elimination of their enemy from their two worlds developed into a generational war, as the enemy still on the planets became masters of guerrilla war tactics, becoming the very thing the Borrelian Rulers whispered into their citizen's ears.\n\nThe hunt for the Ush who fled in ships into space was proving fruitless, as well. The Rulers were very frustrated with their military, but with the possibility of being caught by the Tik, they wouldn't stop the war effort until they were sure they'd killed them all.\n\nTo ensure the Tik remained unaware, the rulers kept any sign of their war effort away from their three Gate hosting planets. They also informed the Tik they were not permitted to visit their other worlds as this interfered with their cultural development.\n\nWith Gates only on the principal planet of each system, the Borrelians no longer used space travel to move civilians between the systems. However, intra-system space travel was still heavily relied upon, as it assisted with controlling the movements of their population. The only space travel outside their systems was done by their military in their clandestine and continuing actions outside the outer borders of their third system. These military ships never docked in the orbital stations over any of the planets with Gates.\n\nThe Borrelian home system included the planet of their birth, Borrelia, whose Gate was the only one linked to the Gate Network. While they recommended against this restriction, the Tik had no rule specifying that all Gates must connect to the Network, as long as at least one did.\n\nThis system had two additional inhabited planets, Aeolis and Casellion.\n\nIn their second planetary system, the primary planet was Gibral, which hosted a Gate restricted to point only to their primary worlds. The remaining inhabited planets in the system were Secco, Zirdel, and Weena.\n\nThe final planetary system had five planets. Hessani was the primary planet, and its Gate was restricted to point to Gibral. The rest of the inhabitable planets of the system were Dozany, Tetnal, and Llevven. The fifth, Zhirra, was only used for scientific and military research stations and home for their military fleet headquarters. Living conditions there were borderline because of its distance from the local sun.\n\nBorrelians were bipedal humanoids roughly similar to another young race, the Humans, but had more redundant organs, such as dual hearts, stomachs, livers, and brains. Their internal skeleton was like a Human's, but their increased bone density and larger muscle mass gave them greater strength at the cost of agility and speed. They also had slightly elongated skulls and jaws compared to Humans. They were harder to kill and healed quicker than Humans as well. Their ability to adapt to a wide range of environmental conditions gave them better flexibility for habitation.\n\nThey had tough soled feet with two broad toes for excellent stability on many surfaces, and, like the Altarians, they had two-fingered hands with two opposing thumbs, but they were much larger.\n\nBorrelian skin coloration varied from deepest black to light grey. No cultural or social significance was assigned to the tone.\n\nHowever, their society was rigidly controlled by a strict caste system based on the uniformity of this coloration. The more singular the tone of their skin, the higher the individual ranked in the caste. There were three life stages when a Borrelian's skin tone could change: birth, puberty, and adulthood.\n\nA Borrelian's place in society, the benefits they received, and the planets the final change adults were allowed to visit and live on, was determined by this seemingly arbitrary classification. The planetary restrictions were not applied to children, but the rules for wearing body and face-covering gowns for lower caste members were.\n\nGenerally speaking, the further out you went from their primary planets, the lower the caste you'd encounter and the lower the technology levels became. This tech disparity also increased depending on which planetary system you were in, from high in the Borrelian system to low in the Hessani system. The lower the tech levels on the planet, the harder the living conditions and the higher the mortality rates. This was by design, as the Rulers secretly used this for population control for the less desirable castes.\n\nAssessments were made during the three life stages. Newborns had the most precarious stage. Low caste infants born to high caste parents often suffered sudden infant mortality. While a vile practice, secretly, it was considered favorable to acknowledging you'd failed to maintain your caste's minimums.\n\nThese assessments would categorize the subject into one of seven castes:\n\nPure: With their skin maintaining a single tone with minimal variation and no blemishes over their entire bodies, these first caste citizens were allowed to live on any of the primary planets of the three Borrelian planetary systems, though they were strongly encouraged to emigrate to Borrelia in the home system. While the other two primary worlds, Gibral in the second system and Hessani in the third, enjoyed the benefits of higher technology and cultural entitlements, Borrelia was the homeworld, so the best of the best was found there.\n\nAccented: Borrelian's with uniform tone over most of their bodies but having a darker or lighter tone symmetrically highlighting distinct areas of their bodies, such as the eyes, hands, feet, were considered to be Accented, second caste. They could visit the primary worlds freely for periods of time but primarily lived on the second planets of the three systems unless married to a Pure. Many found Accented citizens more physically appealing than the Pure, but this remained an unspoken fetish.\n\nShaded: When their skin tone transitioned from one brightness to another in an even gradient on the body, such as light on their front to dark on their back, or light on the outer surfaces of arms and legs fading to darker tones on the inner surfaces, this was considered Shaded, third caste, as long as the change was a smooth transition and the shading was symmetrical. The Shaded were permitted to visit primary planets for brief intervals and live on the second and third planets of the three systems.\n\nMixed: Borrelians who had only two distinct tones on their bodies, such as a light or dark streak or swirl against another distinctive tone, were Mixed, caste four. These markings tended not to be symmetrical, so they were not considered attractive. This caste was not permitted to visit the primary planets (except for transfers between Gate and spaceport) but could visit the second planet if properly garbed in body and face-covering robes. They could live on the third planets, but only if they continued to wear the robes in public. This garb restriction was not required beyond the third planet.\n\nPatched: When there were three or four distinct tones included in the stripes or swirls, the Borrelian was Patched, fifth caste, and the restrictions placed upon them increased. They were not permitted to visit any primary (except for transfers between Gate and spaceport) or second planets but could visit the third only if they wore fully concealing robes. They could live on the fourth planet in a system, but the garments were strongly recommended.\n\nSpotted: In rare cases, the streaks or swirls found on fourth or fifth caste civilians were broken into or accompanied by spots or rosettes. This classified them as Spotted, sixth caste. They were restricted to the fourth planets in the planetary systems, which subsequently eliminated access to the Borrelian home system. Only Weena mandated full coverage robes at all times. Llevven was less militant about the requirement, but it was recommended.\n\nChaos: Rarer still were those afflicted with multiple tones in streaks, swirls, and spots. These were considered the damned of the race--Chaos, the seventh caste. They were prohibited from marriage or breeding and were typically sterilized when they reached adulthood, though this practice wasn't strictly followed in the third planetary system. They were also restricted to the fourth planet and mandated to wear the full coverage robes at all times.\n\nWhile it was possible to rise to a higher caste as pigment stabilized, more often it destabilized, and variations increased. Thankfully, there'd never been a case of a shift of more than two levels per change interval, and a drop of four levels was rare.\n\nThe only place it proved impossible to maintain their caste system was within their military, which already had a functioning ranking process and was not willing to impose a second one. The decision was made to allow military rank to take precedence. Final decisions on promotions within the ranks were still determined by the Borrelian leadership, so higher caste soldiers found career advancement smoother than their lower caste comrades. A majority of senior officers were within the first three castes.\n\nThe Borrelian Rulers used the caste system to maintain control over their people, but they still needed additional space to expand. The planetary restrictions would change again once they could offload their less desirable members onto these new worlds.\n\nThe Borrelian People were generally gregarious and even-tempered, who preferred to follow the rules over living in anarchy. Even when those rules weren't in their personal best interests.\n\nBut everyone has their limit.\n\nChapter 1\n\nWhat makes a person rich?\n\nMonstrous piles of money? Expansive palaces filled with fine art and furniture, surrounded with gardens and pools of crystal-clear waters? Perhaps it's fine dining while socializing with the movers and shakers of caste-appropriate society?\n\nThese were the trappings of financial wealth that Lorrenz Sheffali's colleagues in the Trader's Guild all craved. They had ambition and a cutthroat dedication to seeing their dreams come true.\n\nBut most would never acquire these things, and even the few who'd begun their acquisition weren't happy.\n\nLorrenz knew the secret to success.\n\nBeing content.\n\nHe worked hard because he enjoyed it. He accepted his day as it unfolded and accepted wrinkles in his plans, and his skin, as they arrived.\n\nFrom working hard, he earned a good living. He and his wife, Lissan, were very careful with their business' income and put whatever they could back into the business. This ensured its growth.\n\nThey didn't spend their money on any of the things his colleagues desired. They had humble needs.\n\nThey owned a comfortable, unremarkable home on the city's outskirts, far from the flashy neighborhoods. It was built within a walled compound next to their warehouses, stables for the draft beasts, and their children's homes. They had options on several empty lots to their left and right, so they had room to grow.\n\nThey'd been blessed with many children, sixteen in total. Nine male children joined the family business and eventually took wives of their own. Of their seven daughters, six left to join other families in marriage, as their society's rules demanded, while one remained. This one's cast was forbidden from marrying or having children of her own, so she worked within the family business.\n\nBorrelian caste and marriage rules were the only things that strained Lorrenz's contentment. He believed his daughters deserved to make their own choice to stay with the family, but none of them wished to cause trouble for their parents, which rocking these particular rules definitely would.\n\nSo, he'd done what he could and arranged agreeable mates in good families for them.\n\nThis left him with his daughter, Noola. While she was a Chaos caste, he ensured she had access to teachers and books, and gained apprenticing experience during her childhood. She'd become a brilliant vet, and he was delighted she was with them, but he feared she was lonely.\n\nAll because of the stupid Borrelian caste system.\n\nIt had plagued Lorrenz throughout his life. He'd been born as a caste level two, Accented, with dark grey skin which faded to black around his eyes and on his hands and feet. His parents were both caste three, Shaded, with matching dark grey on their fronts fading to black on their backs. He was their only child, as they struggled to make a living on Dozany, the second planet of the third planetary system. His parents were hopeful that he'd have a bright future ahead of him, perhaps even emigrating to Aeolis in the home system. They'd taken him for aptitude testing and were told his analytical, organizational, communication, and leadership skills were very high. Excited, his parents spent much of their savings on special early age tutors hoping he might have a career in politics or catch the eye of one of the larger companies. Reading about the myriad worlds of the Gate Network, Lorrenz studied their cultures and discovered he had an aptitude for languages.\n\nHis voracious intellect drew him to the public library, which was the only place he could get computer terminal access to review information on all the distinct races. He became good friends with the head librarian and spent many hours speaking with her about the amazing things he'd read. As she also enjoyed languages from the Network Races and had become fluent in several, he practiced with her.\n\nThe elderly female, whose son was in the military, saw Lorrenz's interest and showed him a book her son had smuggled home after one of his secret missions. He was distraught from something he'd seen or done, and after a night of drinking, he tried to destroy the book. She rescued it from their fireplace when his back was turned.\n\nIt contained a history of their enemy, a study of their culture and language. It was like no book he'd ever seen before, as it incorporated technology to produce sounds.\n\nIt even had a comprehensive section on learning their language and used the unique tech to assist him. He learned how to speak Ush, but he only did so with her and in private.\n\nHe excelled in his studies, and with his emphasis on languages, he dreamed of becoming an Ambassador for the Borrelian Administration.\n\nThen came puberty.\n\nLorrenz could still clearly recall the shock and disappointment on his parents' faces the morning he'd groggily walked into the kitchen for first meal, unaware of the jet-black streaks on his face leading down from his eyes to his throat. He had similar lines on his hands and feet, distinct and straight, leading from the darker skin towards his elbows and knees.\n\nThey'd taken him to an assessor that morning, and he was officially classified as Mixed, caste four. His parents' plans were in serious jeopardy. Lorrenz's chances for regaining the lost caste levels were extremely slim.\n\nAs a level four child on a second planet, he was forced to hide his new coloration behind a face and body covering gown. This meant his friends could no longer play with him if they wished to avoid beatings from their parents.\n\nHis keen intelligence benefited him, as he returned to the public library to take advantage of the resources to continue his studies if they weren't already reserved by higher caste members. While his parents could no longer pay for supplementing his education, Lorrenz knew he should study harder, so when he became an adult, he'd be able to repay his parents for their earlier efforts on his behalf. He turned his attention to commerce in the hopes of one day running a business to earn good money.",
        "He built his savings as best he could, taking whatever jobs were available to someone of his caste.\n\nThe morning he awoke to discover he'd transitioned into adulthood dealt another devastating blow, as his body had betrayed him once more. Black freckles now accompanied the black stripes on his skin. His new assessment ranked him as Spotted, caste six, and scheduled him for emigration to Llevven, the fourth planet in the system, giving him two days to do it.\n\nBefore he boarded the spaceship for Llevven, he'd tried to give his parents half of his savings, but they refused to accept, telling him he would face greater hardships as a sixth-caste citizen on the more primitive planet. He could not rely on help from anyone, so he needed the funds more than them.\n\nThat was the last time he'd been able to speak with his parents.\n\nHis initial cycles on Llevven had been eye-opening as it was considered the last planet in the Borrelian Chain of Significance. The meager luxuries he'd taken for granted on Dozany were nowhere to be found on the low technology world he now found himself on. The societal rules he'd followed diligently on Dozany were no longer considered important, and he'd had to think quickly to adapt to the new, rougher environment.\n\nBecause of the planet's primarily arid conditions, wearing the body covering gowns made practical sense, and everyone did it.\n\nHe was lucky to have had such an excellent education early on, as his sharp intellect and outstanding work ethic served him well in the occupations he took on. He worked his way up through every level at a trading house, learning the ropes, the tricks, and the downfalls inherent in the business. He knew after just five cycles what his life plan was to be, and he'd begun taking steps to make it happen.\n\nThe trading house master's sole daughter, Lissan, was approaching adulthood, and she'd grown quite fond of Lorrenz during her visits to her father's offices. They'd matched wits and found common interests to discuss each time she'd drop by his desk. While he thought he'd done an excellent job of hiding just how smitten he was with her, he'd later learn she'd known how he felt from the first time they'd met.\n\nLorrenz was nothing if not honorable, so he knew he could make no overtures towards a relationship with her until she'd reached full adulthood. When they'd met, she was fifth-caste, with light grey skin on her front which gradually darkened on the back half of her body. Her shoulders and neck were covered with swirls of darker grey in two shades. He thought she was truly lovely, and with only one level difference, there was a chance her parents would agree to their marriage!\n\nThe day she'd transitioned to adulthood remained etched in his mind as both the worst and best day of his life.\n\nShe'd come straight from the Assessors to his desk in the trading house. He was shocked to see the swirls on her shoulders and neck were gone! She showed him her certificate indicating she was now Shaded, caste level three. He'd burst into a joyous smile for her, as her future would be greatly enriched by this wonderful change. Then the ramifications of her upgrade slapped the expression from his face. With her brilliant mind and her new caste, she should live on Aeolis or Casellion as her opportunities there would be so much greater. His future suddenly seemed cold and empty without her.\n\nHer words rang clear in his memories.\n\n\"You love me.\"\n\nHis jaw had dropped in surprise at her bold yet accurate statement.\n\n\"Yes, I do.\"\n\n\"Will you marry me?\" she asked.\n\n\"But you're--\" he began his argument.\n\n\"--in love with you. That's all I need. I ask again, will you marry me?\" she asserted.\n\nHe was nodding before he found the words. \"I'd be honored to marry you! Your parents--\"\n\n\"Cannot deny my wishes now that I'm an adult of a higher caste than them,\" she finished with a twinkle in her eye.\n\nThat was also the day Lorrenz learned never to argue legalities with his soon-to-be wife. She'd studied the ramification for all possible changes she might have and made contingency plans to ensure her goal was not denied to her.\n\nA quick trip to the courthouse yielded them a certificate of marriage. When they returned to the office to approach her father with the news, Lorrenz was presented with the response that while he'd gained a wife, he'd lost his job. The father was not pleased with being outmaneuvered by his daughter, so he took out his frustration on the male who'd stolen his daughter's promising future.\n\nHe couldn't argue with the older male, but he was smart enough not to challenge Lissan. His life plan needed to begin that day!\n\nThe abandoned property he'd purchased was on the outer edge of town, with easy access to one of the trade routes through the mountains. There was a small home where he'd spent his lonely bachelor nights, a large stable, and a building that would make an excellent warehouse. The walled compound was large enough for future expansion, and they had no neighbors. He repaired the security wall around the property and purchased some guard beetles to protect his investment while he was away on business trips.\n\nLissan used the dowry money she'd negotiated out of her parents to purchase their first pair of Druug. The huge beetles were the planet's beasts of burden and would pull the wagon he'd bought with his dwindling savings.\n\nThe Sheffali Trading House was in business.\n\nNow, fifty-five cycles later, Lorrenz was a comfortable passenger on the driver's seat of the lead wagon as his caravan made their way through the final mountain pass. They'd begun the last stretch of their journey down towards their home, the capital city of Mnemmesh. The four large wagons pulled by eight Druug were loaded with beautiful moon shells, a high-demand commodity in the capital. They also had nutrient-rich oils and dried powders used in medicines. Another major trade item they'd gotten was a large quantity of the finest sea salt. Rounding out their haul was a collection of unique items they'd picked up from the more distant villages. These were surprisingly well-received in the capital city because of their uniqueness and high handcrafted quality.\n\nThis trip would yield an excellent profit!\n\nThe Eastern coastal villages they'd visited were grateful for the medicines they'd brought to them. The brightly colored fabrics woven by master artisans in the capital city had been traded for two full wagons of moon shells! The flour and spices they'd brought to trade had been highly welcome, too.\n\nAs he thought of their cargo, Lorrenz frowned as he recalled they were also returning with the weapons they'd taken from a group of bandits who attacked the caravan three days out from the capital city. Normally, the confiscation of firearms from attackers was just a reward for surviving and was a welcome inclusion to the caravan's armory. This raiding party had weapons decidedly more advanced than any they'd ever seen before. Two had carried energy weapons, only available to the military and illegal for anyone outside the military to have in their possession.\n\nIf the caravan's secret guardian hadn't taken the bandits out before they opened fire with them, there would definitely have been casualties on the Sheffali side.\n\nLissan suggested they deliver their latest acquisition directly to the new Commander of Llevven's military forces, as she'd heard the female was honorable.\n\nTheir guardian guided the caravan over the ancient and worn-down mountain range and through its dense forest. The peaks were no longer tall, and the passes through them were now easily navigated. Unfortunately, they were also a choke point where less experienced or more desperate groups of bandits often lay in wait. This time there were none, and they reached the lower edge of the forest without issue.\n\nThis was as far as Lorrenz's foster son, their secret guardian Zell Saah Henn, would go. The caravan rolled to a stop, and Lorrenz swung down to the ground to join the heavily cloaked male who'd been jogging next to the wagon for the last hour. His coverings led those outside the Sheffali family to believe Zell was seventh caste, Chaos. That suited their purposes, so none in his family would attempt to correct that impression.\n\nLorrenz wrapped his arms around his son and enjoyed the hug he received. Zell would leave the caravan before they left the forest to minimize his exposure to outside eyes, as he did each time they returned. He couldn't join them at the homestead but lived alone in the forest instead. That made Lorrenz sad, but he understood it was critical for Zell's safety and his family's.\n\n\"Thank you for protecting us on this journey, my son,\" Lorrenz said with a fond smile. He could just see Zell's expressive eyes through the slit on his face covering. He knew Zell's exceptional eyesight found the material transparent, so it was no hindrance to him.\n\n\"As always, it was my greatest honor, father.\"\n\nZell's voice was one aspect they could not disguise. It was deeper than a Druug's growl but smoother than the polished inner surfaces of the moon shells they carried. No Borrelian throat could produce sounds that caressed the ears so well. So, Zell remained silent around anyone not in their family.\n\nHe was in his fifty-third cycle but hidden as he was in the concealing robes, it was impossible to identify his age or even his sex by his appearance. He was slightly shorter than the average Borrelian male but broader in the shoulders than any female.\n\nThe lead Druug team grumbled as they knew they were close to home and the comforts of their pen. Lorrenz cast a glance up at his eldest son Freem, who was the caravan's Master Druug Wrangler. He was making sounds to comfort the beasts as he sat upon the bench, holding the reins. He smiled down at his father and waved to Zell, who returned the gesture.\n\n\"I'm concerned by the presence of military weaponry,\" Zell said softly for Lorrenz's ears alone.\n\nThe Grand Chief of the caravan nodded. \"Lissan had excellent advice for me on that. I will deal with it appropriately and will let you know the outcome when next we meet.\"\n\nZell bowed his hooded head, accepting his father's words. \"I await your call.\"\n\nLorrenz nodded as he touched the whistle Zell made for him. It hung from a chain around his neck under his robe. It made a sound no Borrelian could hear, but Zell could from vast distances away. They'd arranged a few codes so Lorrenz could send different messages to his foster son.\n\nHe watched Zell wave to Olle, Lorrenz's fifth son, their Chief Caravan Security Officer, to indicate that the caravan was back in his hands. Zell also waved to Noola, who was sitting on the bench of the last wagon, as the two were good friends. With another nod to Lorrenz, he ran into a small forest side path and immediately disappeared. As always, Lorrenz was amazed by his son's ability to move silently without disturbing the foliage. Zell was equally comfortable in the desert. Perhaps more so, as his people were native desert dwellers.\n\nWith a sigh, Lorrenz climbed back up onto the bench next to Freem, who got them moving once more. He smiled at his son, who smiled in return. Solid, dependable Freem, whose skill with the large beetles was second only to his wife Laalaa, who drove the second wagon. Their son Gritt controlled the beasts on the third wagon, and Gritt's wife, Hale, managed the last wagon as they were the family's assistant wranglers.\n\nHale was also the family's only other Shaded caste. She'd followed Lissan's example by marrying Gritt the moment she reached adulthood, so she could remain on Llevven with the one she loved. Many thought the two third-levels were mad to not use their caste as a ticket to planets boasting higher tech and greater conveniences, but both were happy.\n\nIn total, fifteen members of the Sheffali family were in the four-wagon caravan. Sixteen, if you counted Zell, and Lorrenz certainly did. They had Druug wranglers, vets, doctors, chefs, cargo handlers, security, and the Caravan leader and his wife. The rest of his family was ahead of them at their homestead on the edge of the city.\n\nMany caravans tried to travel with less crew and hired talent when required, but Lorrenz preferred people he could trust to do their best as they had a direct investment.\n\nLorrenz's eyes turned once more to the dense forest they were about to leave. He knew Zell had a home somewhere in the dark greenery and professed it to be quite comfortable. Zell had lived alone for most of his life, but Lorrenz still worried about his son's solitude. It went against a Borrelian's nature to remain alone, but then, Zell wasn't Borrelian.\n\nThe wagon gently swayed as it left the forest and entered the outer edges of the vast plantation fields surrounding the capital city. To his eyes, it was a sea of gold dancing with the breezes crossing the wide-open expanses. The wheat's motion and the wagon's sway made him imagine they were on ships sailing across that sea. He looked up at the late afternoon skies and saw the twinkle of the brightest guide stars already appearing. They'd be home before the sun was completely set, and that eased his mind.\n\nAs he considered the early stars, his thoughts went back to Zell, their guide through the wilderness, who came from the stars.\n\nVery early in Lorrenz and Lissan's careers, they'd been on a trek to the eastern coast with their single wagon drawn by a pair of Druug. Bad weather made the main trail impassable, but Lorrenz knew of a secondary route that would bypass the worst of the flooding at the cost of a few extra days of travel. While they were far off the main trail, they set up camp for the night. The storm had finally passed, and the sun was reaching for the horizon. Just before they settled for the night, they heard a strange warbling wail in the distance.\n\nCarrying nothing more threatening than some wagon repair tools, they ventured into the scrub and came across a scene they'd never forget.\n\nThey saw the wreckage first. It was partially disguised by scrub branches, mainly to hide it from above, but at ground level, it was unmistakably a spacecraft--a destroyed one at that.\n\nReclining in the shelter of one of the bent wings was a being they'd never seen before. Covered in black fur, it was bipedal like themselves, but they could see this being was no longer capable of walking as the bends in its lower limbs showed severe breaks, poorly healed.\n\nIts jaws seemed to project forward, though there was keen intelligence in its large eyes. Oversized, pointed ears swiveled to follow sounds. A black bar of leathery skin above ridges flared to gather scents. Its hands and feet had strong-looking fingers and toes ending with round padded tips, hiding hooked claws that flexed out unconsciously for the female.\n\nWhat drew their attention was the smaller but matching being clinging to the larger one. It was a child, and it was crying. The older one struggled to remain conscious as it had spotted them. It spoke, and Lorrenz's skin tingled with surprise and shock. It was speaking a language he'd studied in secret so long ago with the librarian! It was Ush, the language of the terrifying enemy who kills from the darkness!\n\nBut Lorrenz also heard the sorrow of the child whose parent was dying. An infant who would soon be alone on a planet, surrounded by enemies. He reached deep into his knowledge of the language and uttered a single sentence that changed their lives.\n\n\"We are not enemies. We are friends. How can we help?\"\n\nThe female Ush looked at them suspiciously but with the beginnings of desperate hope in her eyes. She whispered something quietly to the child, and it turned its face to see them. Lorrenz thought it was the sweetest creature he had ever seen. Small and round, with fur so black it disappeared against the fur of its mother. Its eyes were wet with tears, and its lips trembled in its sorrow.\n\nIt was startled and hissed when it spotted them, opening its jaws fully to intimidate the strangers. Lorrenz recalled the fear that shot through him when this cute small creature opened both its vertical and horizontal mouthparts to display multiple rows of razor-sharp teeth. It was like its face disappeared behind the savage display. Its little claws still looked capable of ripping through his skin.\n\nThe female said something sharply, and the child immediately stopped to look at her. She said something else, and it looked back to them in surprise. Then it desperately rushed over to Lorrenz to grab his hand and drag him closer to its mother. Lorrenz and Lissan knelt next to the adult Ush and took a closer look at her injuries. Glancing at the damaged ship, he was amazed she'd survived at all.\n\nLorrenz asked again what they could do for her, but she told them her strength had reached its end. Her injuries were too great, and though she'd lasted a cycle, she wouldn't survive past the night. He asked how she'd ended up here. She spoke slowly as she was extremely weary, and he was grateful, as he was rusty with the language.\n\nThe pregnant female had been conscripted into the war effort in their final desperate days as the Ush faced defeat and potential genocide.\n\nShe had piloting skills, so they put her into a single occupant fighter to escort and protect the fleeing refugee ships. In an ambush, her ship took damage, lost its connection to the fleet's navigational systems, and got separated from the main fleet when they all did a last second jump. She didn't receive the coordinates they used and jumped blind. She didn't know where the others went, and she didn't have sufficient fuel to hunt for them. Miraculously, she detected and followed a Borrelian intra-system freighter to Llevven, but her damaged ship was almost out of fuel, and she crashed. She was severely injured during the landing, but the ship did its best to repair her and kept her alive until its batteries failed after a month. She wasn't healed sufficiently, but she wouldn't immediately die. Then her body went through labor, and she gave birth to Zell.\n\nShe survived on rations, and Zell nursed until he was six months. The Ush mature quickly because of the severe conditions of their home environment, so Zell could augment their diet by hunting insects and small reptiles. She taught him all she could, but she felt her injuries begin to shut her body down. Major organ failure was imminent. She taught Zell how to remain hidden and survive on his own in the wild when her health took a sudden downturn.\n\nLorrenz assured her he and Lissan would do whatever they could to keep him safe on a world hostile to the Ush. They would protect him like he was their own child. He could see the relief in the eyes of the female. She'd been clinging to life as long as she could for her child, but now she could rest.\n\nShe looked at her child and touched his face. She asked him to live with honor and compassion and to make her proud. He was crying quietly, but he nodded stiffly. Lorrenz was impressed by the child's strength.\n\nHe asked the female if there were any rituals she wished them to perform after her passing, but she said no. She told them there was a small book in the ship she wanted Zell to have. It contained the history of his people, their language, and their culture. Lorrenz quickly looked inside and found the book. He recognized it as the same book the librarian's son had taken on his mission.\n\nWhen he returned, the mother had slipped away, and Zell was crying on her chest.\n\nThey gave him time to grieve as Lorrenz and Lissan discussed how they'd fulfill their promise to the mother. They knew they couldn't bring him home. They couldn't take him into any of the cities they visited. He would have to remain in the wilderness, but they could set up a shelter for him where they could take care of him. He'd come with them on their trips, but he'd have to stay out of sight and remain in the wilds. Lissan worked out the plan with contingencies, as that was one of her strengths.",
        "Voices called out to Lorrenz from the fields, drawing him from his memories. He smiled and waved to the workers. It was an old farm hand superstition that greeting a caravan returning from a successful trip brought the greeter good luck as well.\n\nHe snorted quietly, earning him a glance from his son. As if luck was a common commodity to be shared. He realized that on this return trip, their good luck charm was currently taking his well-earned rest back in the forest.\n\nChapter 2\n\nZell eased himself through the dense woods, his senses on maximum as his perceptions flooded his mind with data.\n\nThe forest was filled with life. He was surrounded by it. He let the individual impressions filter through and detected nothing to be concerned about. No Borrelians had used this trail in a very long time. He knew the woods could contain creatures that could be as dangerous to Zell as his foster father's species, but none were nearby.\n\nSetting course for his hideaway, he stepped off the trail and slipped deeper into the shadowy forest. He wouldn't approach it in a straight line, and he remained on high alert, looking for any sign of Borrelian presence. His eyes took in the condition of the trees from canopy to roots as he slipped between them, winding his way higher and higher up the ridgeline toward the top of the treeline. He tasted the air and picked up the flavors of the creatures present nearby and those which had passed by.\n\nAs he moved, he grazed upon the forest's offerings. There was a glut of life from the smallest beetles up to bull pigs which could give the bulky Druug a run for their money. Zell wasn't hungry enough to tackle something that large and aggressive, so he remained downwind of a group of the agitated beasts as he passed them by.\n\nMany of the plants here were edible, and some had medicinal qualities. He'd learned this from Noola and often collected them for her.\n\nHe took his time but reached his shelter just as the sun dipped below the horizon. He circled his home away from the caravan but found no evidence of interference, so he slipped inside. He cleaned out a few insects that had taken up residence and allowed himself to dial back his perceptions.\n\nZell already missed the desert. He definitely preferred the empty expanses of hot sand. It was where he felt most comfortable. He looked forward to hearing the whistle and joining up with the rest of his family as the wagons moved towards the mountain pass. He'd scout ahead and deal with any threats to the caravan. That was something else he did very well. He was a hunter, and using those skills to protect his family filled him with a deep sense of satisfaction. The weapons, ammunition, goods, and money they collected from the bandits all went towards the caravan. His brother, Olle, was in charge of inspecting the confiscated weapons to see if they were worth adding to their armory, selling to another caravan family, or destroying them to keep them from the hands of another bandit.\n\nHe knew his father would likely have them back on the road in a week or two. They were one of the most active traders on Llevven. They did the long treks to distant communities, delivering mail and medicines, a service paid for by Llevven's governing body. They traded goods in all the small to medium-sized villages along the east and west coasts. The larger cities were monopolized by a few larger trading houses, but Lorrenz actually made more profit than them on his runs. Not that the brilliant trader disclosed that fact to anyone.\n\nHe smiled as he thought of his foster parents. He was incredibly grateful to them for the incredible risk they'd taken when they found him and his mother at the crash site. Lorrenz and Lissan had an endless depth of compassion in their souls and gave him sanctuary, even though it put their very lives in jeopardy. Had they been caught harboring the enemy, they would have been executed immediately. Yet, they took him in and made him a member of their family.\n\nZell had spoken with Lorrenz many times about why he was considered an enemy to the Borrelians. His father could never discover the answer to that question, as no one was willing to discuss it. Lorrenz was smart enough not to push his luck.\n\nIn the early days, they took Zell with them on their journeys and taught him many things.\n\nHe learned how to speak Borrelian, but his voice was too distinctive, so he could only speak the language with the family and never around strangers.\n\nThey taught him about Borrelian culture as they learned about the Ush from his mother's book. There was much about his adoptive parent's culture he didn't understand and didn't agree with, starting with their senseless caste system. It pleased him immensely that Lorrenz agreed.\n\nHe learned how to wear Borrelian robes to hide his differences, though he didn't need the coverings when he hunted at night.\n\nHis night vision was exceptional, and he discovered he preferred to be awake during the night when his new parent slept. From an early age, he could help them by keeping watch while they slept. He only needed a few hours of sleep during the day to feel completely rested.\n\nAs their trade routes went from the capital city of Mnemmesh in the center of the continent to the east coast and sometimes the west coast, they had to cross deserts to reach the coastal towns and villages. Zell discovered how much he loved the expansive arid regions. He learned how to move silently and invisibly across the sands at night, hiding under the sand during the day when his parents would continue on to do their business in the towns and villages. He was always excited to see what they brought back and wondered if there would ever be a day when he could join them.\n\nNot that he'd minded being left to his own devices out in the hot sands. There was so much to do there!\n\nHe learned through trial and error which desert creatures he could defeat and survived some significant mistakes only through his superior agility and speed when he fled. He had a few small scars to remind him of less fortunate lessons.\n\nHe fed himself from the creatures he killed and honed his hunting skills until he was the deadliest creature of the night.\n\nThen came the event that changed everything.\n\nThey'd just returned from trading on the eastern coast. His parents had encountered issues as their trading partners in the villages needed larger shipments, and Lorrenz and Lissan were still doing the runs with their single wagon and the two Druug. He recalled the discussions at the campfires on the return journey about how they might expand, but they just weren't earning enough to afford it. They were sad as they kept putting off starting a family until they increased their revenue, and it was taking so long. Zell wanted to help them, but he couldn't participate in the trading, as he remained hidden.\n\nHe was eleven cycles old and already growing into his adult size. He was strong and an excellent hunter, so he could save them some money by augmenting their food reserves. It helped, but it wasn't enough.\n\nHe'd left the wagon at the edge of the forest with hugs for his parents and realized he had a craving for dune grubs. He knew his father wouldn't be calling for him for at least a week, so he ran back over the mountain pass and down into the valley leading to the desert. He arrived just as darkness settled over the vast sea of dunes. There was only a sliver of moonlight to light his way, but he was quite comfortable in the dark.\n\nHe continued on towards a spot he knew would be rich with the tender morsels.\n\nWhen he heard laughter, he hid and slowly climbed up the side of a tall dune to peer down at the horrifying scene below. Five Borrelian bandits were picking through the cargo of a three-wagon caravan that had been following the same route his family's had. They'd obviously pulled off the road to camp amongst the dunes where they were attacked. While the bandits had let the Sheffali's single wagon pass, this three-wagon caravan was just too much of a temptation as they were newer and larger. Lying in the sand next to the wagons were the six bodies of the trading house family members.\n\nZell recalled how sharp his focus had become and the intense feelings of fear and rage surging through his body as he pictured the same fate befalling Lorrenz and Lissan. He tugged himself free of his robes, slipped over the top of the dune, and became death incarnate.\n\nOnce he returned to himself, the bandits were dead, and he was covered in their blood. He was uninjured as he struck too quickly, and they'd been too terrified to fight back effectively.\n\nLorrenz had drilled into him how important it was for him to remain out of sight of all Borrelians and how he must leave no clues to his presence. Now, he was standing amongst the brutal carnage of his first killing of another thinking being, and there were five bodies! Their blood was still dripping from his razor-sharp hooked claws.\n\nHe didn't feel the slightest bit of remorse for the bandits. Llevven was better off without them.\n\nHowever, he'd broken a promise to his foster parents. He felt almost physically ill about that.\n\nZell moved back into the darkness of the dunes and quickly cleaned his fur in the sand. He donned his robes and raced through the night at his maximum speed. He paused outside the city boundaries to calm his breathing.\n\nSneaking into the city proved to be a simple task, and the guard beetles in the homestead compound avoided him once he clicked to them. He slipped into his foster parent's small home and stood outside their bedroom door, struggling to think of what he might say to make amends for breaking his promise.\n\n\"Father? Mother?\"\n\nThere was a brief noise inside the room, then the door opened, showing Lorrenz standing in the doorway with a look of surprise on his face.\n\n\"Zell? What's wrong? Are you injured?\" the male asked quickly, and Zell's heart clenched in his chest. His first words were of concern for Zell, not the sharp condemnation he'd been fearing.\n\n\"I-I'm sorry, father. I didn't know what else to do. I'm not injured... but tonight... I killed five Borrelians bandits who murdered a family of traders on the edge of the desert.\"\n\nLissan stepped out into the hall and gathered Zell into her warm arms. Lorrenz wrapped his powerful arms around them both. Zell instantly felt better. He shuddered at the thought of losing their love. They were all he had.\n\n\"Come. Let's sit in the kitchen, and I'll make some tea. We can talk and get some details for your mother,\" the father said.\n\nOnce they were settled around the table with warm tea cups in their hands, Lissan grilled Zell on every detail he could recall. When he described the sashes he'd seen around the gowns of the dead traders, his parent's faces showed their shock and sadness.\n\n\"Oh! The Tarron Family! They'd just expanded their homestead at the southern edge of town,\" Lorrenz sighed.\n\n\"We need to get to them before the beetles do! We need to contact the Tarron survivors, the Mrissa and the Jakkan families, and have them accompany us to the site,\" Lissan exclaimed. While she wasn't particularly religious, Lissan had a strong sense of respect and wanted to ensure the family received some dignity for their passage to the other side.\n\nLorrenz frowned. \"We'd have to make contact at first light and immediately head back over the pass if we are going to get to them before the carrion beetles arrive. How are we going to explain how we know they're dead and where to find them? We just got home ourselves!\"\n\nLissan looked at Zell. \"You said it looked like they'd just set up their camp off the route?\" He nodded, and she continued. \"They must have been only a few hours behind us. The bandits must have let us pass as we remained on the route and were too small for their effort.\"\n\nZell nodded, as this matched his thoughts as well. If he'd been patrolling instead of resting on top of the wagon, he might have been able to catch the bandits. His thoughts stalled as he realized he didn't know if the outcome then would have been different than it was now. Except the Tarron family would still be alive. This was his first encounter with murderous thieves, and Zell proved to himself that he could be equally violent. Maybe more. He looked up to see Lorrenz watching him.\n\n\"I can see you're feeling sad for not protecting the Tarron family. While I've known they could be out there, this is my closest call with bandits. I haven't spoken with you about them. I probably should have.\" He sighed and thought of his next words carefully. \"All life is sacred, but when people choose to put their fortune ahead of that principle, they forfeit their own claim to live.\" He cupped Zell's cheek and looked into his eyes. \"The death of those bandits was their just reward for their actions.\" He lowered his hand to take one of Zell's to examine it. \"My fear is we are trapped in a situation of being unable to explain how they died and how we found them without disclosing your presence. I assume you used these on them?\" He tapped Zell's finger pads, which hid his retractable claws.\n\nZell nodded with a sad look at Lorrenz.\n\nLissan snorted, drawing surprised looks from the two males. She looked at them with a small smile.\n\n\"I have answers for both questions.\"\n\nZell recalled how he'd run all the way back to the site of the murders to prepare the scene as Lissan had directed him to. He finished only an hour before they arrived.\n\nShe and Lorrenz had insisted he rush back to the forest to hide when he was done, but he knew he could hide under the sand a short distance away and remain unseen. So he did.\n\nIt was noon when the three wagons from the city arrived and began their hunt. Lorrenz and Lissan were aware of the exact location, but they let Ogami Jakkan, the head of the Jakkan Trading House, make the discovery. The male was with his son, Kitow, and the two began shouting for the others to join them. Soon Henko Mrissa, head of the Mrissa Trading Company, and his daughter, Chalis, stood with Lorrenz and Lissan next to the bodies.\n\nChalis turned to stare at Lissan in shock. \"It's true! You have the sight!\"\n\nAs Lissan had explained to her husband and Zell earlier, her reputation of having a touch of prescience would finally become useful. She knew that her ability to foresee eventual results with great accuracy was simply her keen logical mind working through all the reasonable outcomes based on all known factors. As most had no skill at all in this, they naturally assumed it was a kind of magic. She found people's willingness to believe in supernatural attributes but refusal to accept her intelligence to be quite annoying.\n\nLissan shook her head sadly. \"If I had a useful power, it would have manifested before they were murdered by the bandits instead of disturbing my dreams with these horrific images. I felt the anxiety of traveling through this area ourselves only hours before they came through. I put it down as end-of-journey jitters. Now it seems it had an actual source.\" The group was nodding as she gestured to the dead bandits. The group moved to examine them. They were all familiar with the tense emotions that surfaced just before returning from a long trip. This further solidified her story.\n\nIn the middle of the five bandits was the largest viper beetle any of the gathered beings had seen.\n\nZell had a tough time finding one of the vicious beasts, and once he had, it almost proved to be too large for him to kill. He had some nasty scratches from their battle, but it was dead amongst the bodies while he lived.\n\n\"There's an almost poetic justice here,\" Henko sighed as he looked at the terrible wounds inflicted upon the bandits. \"They did not live to enjoy the spoils of their deeds. Killed by a giant beetle and soon to feed smaller ones.\"\n\n\"Should we proceed with the burial ritual?\" Lorrenz suggested.\n\nHenko and Ogami both nodded with serious expressions. \"Definitely. Before the carrion beetles arrive for the bandits,\" the second male agreed.\n\nThey pulled shovels from their wagons and dug a shallow pit over by one of the dunes. This would hold the six family members resting side by side. Once they were positioned properly, Henko poured a flammable oil over the bodies, and they stood in silent reflection for a moment. Henko, as the senior-most-Trader present, recited a poem to guide them on their journey to the other side. Then he lit the oil, and everyone stood back and watched in silence as the bodies were quickly consumed by the ferocious heat from the fire.\n\nLorrenz looked at Henko. \"No one answered at the Tarron homestead when we went there this morning before coming to see you. Who is left to carry on?\"\n\nThe senior trader looked at Lorrenz in surprise, and Ogami shared a look with Henko as well. \"The house of Terron is no more. What you see before you were the last of them.\"\n\nLorrenz and Lissan gasped and looked at the others, who nodded sadly.\n\nOnce the flames died out, they covered the ashes with sand from the dune. Then the men dragged the bodies of the bandits away from the campsite over to the empty dunes. They stripped the bodies as they would carry nothing with them to the other side after the beetles picked them clean. All collected weapons, ammunition, valuables, and any cash were placed on a blanket by Ogami and his son.\n\n\"We now must address the disbursement of the Tarron estate,\" Henko said solemnly.\n\nLorrenz and Lissan gaped at him. \"What?\"\n\nThe senior trader nodded. \"By ancient Caravan Law, if there is no one to inherit the estate, it goes to the ones who discovered the dead.\" He turned to his daughter. \"Please fetch my satchel from the wagon.\"\n\nShe rushed off and returned momentarily. The father pulled out a writing pad with a stylus. These were imported items, and Lorrenz watched with interest as Henko quickly wrote out a contract. He looked up to Ogami and Lorrenz. \"The division of items is based on traditional categories and will be divided amongst the three families present, the Mrissa, the Jakkan, and the Sheffali. The categories are: the homestead and all items therein, aside from warehoused goods and Caravan equipment and beasts, the Caravan equipment and beasts, and finally, the goods currently found in the warehouse and within the caravan wagons.\"\n\nZell watched and listened from his vantage point on a neighboring dune as his mind absorbed this news. The tragedy the Tarron family suffered might yield something positive for his family!\n\n\"As Lissan was the one who brought us here, House Sheffali will have the first pick. House Jakkan will have second pick, having found the actual scene of the murder, and Mrissa will accept the last. Do you agree, Ogami?\" Henko asked as he looked at the other house leader.\n\nAfter a moment's hesitation due to the exceptional value of the homestead, the male begrudgingly nodded his agreement.\n\nThey turned to Lorrenz and Lissan, who turned to face each other. They leaned their foreheads together and whispered. Zell wished he could be there with them.\n\nThey nodded to each other, then Lorrenz looked at the other two men. \"We will accept the Caravan equipment and beasts.\"\n\n\"What?\" Ogami exclaimed in surprise.\n\nHenko smiled at Lorrenz. \"Surely, you meant to say the homestead? As I recall, you currently live at the far edge of town in a rather unimpressive estate; pardon my frankness.\"\n\n\"It would be a grand upgrade, but we are a trading house of humble means. Such luxury would be lost on us. We will get better value by increasing our capacity. The extra wagons, equipment, and Druug would be gratefully accepted. Thank you!\" Lorrenz and Lissan bowed to the other house leaders.\n\nHenko glanced at Ogami, whose broad smile said he accepted the Sheffali's decision most willingly. He looked back to Lorrenz, shrugged, and nodded as he added that notation to the contract. He looked once more at Ogami, who was finally controlling his expression. \"We accept the homestead,\" the male said calmly. Henko raised an eyebrow as he made the required notes on the contract.",
        "\"And Mrissa accepts the warehouse and caravan contents.\" He signed the contract and had Ogami and Lorrenz sign it as well. \"I will register this with the Mnemmesh Property Office tomorrow morning. If you could bring the caravan wagons to the Mrissa warehouses, we will unload them before we go to the Tarron estate.\"\n\nLorrenz nodded.\n\nHenko looked at the blanket and frowned. \"Now we have the matter of the bandit's effects.\"\n\n\"House Jakkan humbly drops all claim to these items,\" Ogami said with a generous smile.\n\nHenko smirked. He didn't want the items either and wouldn't allow himself to look less generous than Ogami. \"House Mrissa does as well.\" He looked to Lorrenz. \"The items are yours.\"\n\nLorrenz and Lissan bowed in acceptance.\n\nZell watched as his parents linked the three teams of Druug in a chain, then tied the lead team to the back of their wagon. They dumped the bandit goods into their wagon.\n\nOgami's son, Kitow, discovered the bandits riding beasts. They were not healthy creatures, so Lorrenz removed their tack and released them to live out their final days in freedom. The riding gear went into the wagon for selling later. Then they all headed back over the pass to Mnemmesh.\n\nThe next time Lorrenz and Lissan came to the forest to speak to Zell, he learned that the Tarron estate had hired two elderly Druug wranglers who agreed to work for the Sheffalis for room and board. They would care for the beasts until the family took over those roles. With the ability to expand their business, it was now time for Lorrenz and Lissan to start their family.\n\nZell recalled the discussions they'd had regarding the possibility of encountering bandits again. Lissan was worried that Zell could be hurt. Lorrenz expressed similar concerns but believed Zell's hunting skills, stealth, speed, and strength made him more than a match for any bandit. It was situations when there was a team of bandits, better organized than the ones Zell had killed, that troubled him.\n\nLorrenz and Lissan now had weapons and trained with them out in the desert until they were both deadly accurate and could defend themselves in the wagons. For Zell, Lorrenz gave him one key instruction. If they were attacked by bandits, they could leave no witnesses. They could show them no mercy. This lesson Zell took to heart.\n\nAs the cycles passed and the Sheffali Trading House's fortunes increased, bandits targeted their caravans more frequently, but none survived the effort. The routes became safer as a result, and their business grew.\n\nLorrenz and Lissan grew their family at a rate of one child every cycle for sixteen cycles. That was the age offspring could join their parents on the caravans after training to be experts with the weapons Zell collected. Each subsequent cycle brought greater success, and Zell continued to protect them.\n\nNow, he'd taken energy weapons from the bandits he killed. That shook him.\n\nThe sound of an injured bull pig stumbling by his hideout drew Zell's attention back to the present. He picked up the scent of its fear and blood and the pong of the rival who'd driven it away. The bull was no longer the strongest, so it could no longer lead its pack. The injury it had was severe. Zell would have to neutralize the spilled blood on his ridge to avoid drawing predators near his shelter.\n\nZell slipped outside and picked up its trail. He would chase it a few ridges away, then end its pain. Then he'd feed and not have to take another meal until he was called by his father to join the caravan once again.\n\nHe grinned as he was eager to return to that duty.\n\nWhile he'd been doing it for fifty-three cycles, he loved every minute. He knew from the Ush book, his life expectancy should be over three hundred cycles... if he could avoid being shot by a bandit... who now had energy weapons.\n\nBeetle dung!\n\nChapter 3\n\nFleet Commander Julla Gorresh was the new leader of Llevven's Planetary Battalion, headquartered in the capital city of Mnemmesh. Her rank had been reinstated to allow her to take on this role, though she was definitely overqualified for surface duty. It was a snub, but only those in the Borrelian military would understand that.\n\nThe previous officer in charge of the surface battalion had held the rank of Battalion Commander when he'd been killed by one of his senior officers in a gambling den shootout. Then the powers-that-be gave her back her military position and dropped her into his chair, likely hoping she'd follow in his footsteps.\n\nIt hadn't always been that way.\n\nShe'd been born on Aeolis, the second planet in the Borrelian home system to Accented parents. She matched them from birth, and her caste remained stable through the two changes. She had pale grey skin with attractive darker shading around her eyes and on her hands and feet. She was considered exceptionally beautiful by Borrelian standards. When her intense drive for excellence brought her to the recruitment office, the military saw they'd found their shining example. Her peak physical conditioning, academic assessments, psychological profile, energy, drive, and dedication all made her the ideal soldier. The Rulers of the Borrelian Empire used her image in their news releases and recruitment campaigns as she represented the best of the best. However, they downplayed her Accented caste, lightening those areas in their press and publicity releases.\n\nOnce she was assigned duties on one of their battle cruisers, she'd put her energies towards fulfilling her responsibilities to the best of her abilities. In that, she was spectacularly successful.\n\nJulla saved the crew of her ship by detecting an Ush ambush before the trap was sprung. Her method for detecting the Ush hit squadrons was quickly taught to the other comm officers throughout the Borrelian fleet, and for a while, casualties dropped significantly.\n\nWhen her Commander's error took them off course, and behind enemy lines, a missile struck the bridge and took out most senior officers, including the Commander. She pulled the injured Lieutenant Commander off the bridge as the breached level bled its air into space. The ship seemed crippled, and the sole officer was too shell-shocked to give orders. Julla got the engineers to pull off a miracle by rerouting power for life support through the emergency lighting circuits. She donned a pressurized suit to re-enter the bridge and saw it was open to space. Julla got the comms and navigation systems back online, ejected all the empty life pods as decoys, which successfully distracted the Ush fighters. As the enemy scrambled to fire at the bait, she sent a message burst and powered up the ship's jump system to make one last jump to safe space. The Ush chased the crippled ship to finish it off, but discovered they were facing several battle cruisers who decimated the Ush squadron quickly.\n\nJulla quickly rose through the ranks and became one of the most highly decorated officers in the Borrelian fleet.\n\nHer feats were spoken of in whispers, but with great admiration, on all planets of the Borrelian Empire, but never in the presence of non-Borrelians, and always avoiding the mention of the enemy. Loved ones came home because of her. She was the hero of the people.\n\nWhen she became Commander, her strategies made a larger difference in protecting her people as they reduced the reckless actions that previous officers had been following. She was now receiving her orders directly from the senior-most military officers who passed them along from the Borrelian Rulers. She quickly learned neither group appreciated having those orders questioned.\n\nShe knew the war was over. The enemy's resources appeared to be exhausted. Full-scale space battles were becoming fewer and farther between, and the fighting on the planet surface had evolved into smaller-scale skirmishes and surgical strikes. The Ush changed their tactics to flee, not fight, yet her orders continued to be, give no quarter, hunt them down, and spare no effort toward eradicating the threat. She knew the Ush were no longer a threat. Despite that, the kill orders arrived.\n\nShe quickly became disillusioned by her leaders in the war effort as she became more and more aware of the true nature of their enemy. The truth was being withheld by the Borrelian Rulers, and the populace was being fed lies.\n\nOn her last mission in the war as a Fleet Commander, the highest rank they could give her before moving into the level of those who gave the orders, they came upon a single freighter containing Ush refugees fleeing their home system. Unable to justify complying with the vile order she'd received, she refused to fire upon and destroy the unarmed freighter. She was relieved of duty and confined to quarters on her ship. The refugee ship was destroyed, killing every soul on board.\n\nJulla's crew were faithful to her as she'd saved them often and brought them victory. They revered her as she'd protected them and genuinely cared for them. Something that could not be said for many other officers.\n\nWhen their ship returned to the orbital station above Aeolis, the crew leaked a story of their Commander suffering from battle fatigue. The rulers were blocked from having her quietly tried as a traitor and executed when a massive upwelling of compassion and support for Julla arose from the Borrelian people. This reminded the leaders that they'd put Julla up on a pedestal, and her war efforts made her the public's hero, so they had to treat her carefully.\n\nSo instead of an expedited trial and quiet execution, they put her on administrative duties on Aeolis, but that only lasted six months. Her popularity amongst the people continued to grow as they saw her as their protector. It didn't hurt that she used her new position to increase their quality of life and safety, regardless of caste. She'd also focused her attention on the corrupt members of the local administration.\n\nShe wasn't above getting her hands a little dirty to force these criminals into the light. If they fought dirty, she'd fight deadly, but also smartly, so she was never caught.\n\nThe Borrelian Rulers had the Military Senior Command move her to Casellion until she became a nuisance there too. Then it was Secco in the second planetary system, skipping Gibral with its Gate and Tik. When they'd exhausted the planets in the second system, she was moved to Dozany in the third system, bypassing Hessani, and further down the Chain of Significance she went. With each planet change, they'd park her in a low responsibility position. She'd always find a way to improve conditions for the common citizens. She'd continue to weed out corruption and abuse of power from the inside. It took longer and longer for her to make these changes on the planets they'd drop her on, but she was nothing if not tenacious. Everywhere she went, the people loved her because they saw her making a positive difference in their lives.\n\nShe took comfort with the thought that she left each planet a little better than it was when she arrived. How long it remained in that state was not up to her. The people remembered how things got better during her cycles with them.\n\nTwenty-five cycles later, the war against the Ush limped along, the military somehow unable to flush out the remaining Ush resistance on their two planets. Deadly in a fight, impossible to locate, and having nothing to lose, the Ush were proving to be tenacious beyond the Borrelian Rulers' expectations. They couldn't migrate any Borrelians to the planet until all the Ush were gone, as their propaganda campaign had been too effective.\n\nThey also couldn't find the ones who escaped on the evacuation ships fleeing the planets. The desperate jumps they made into the unknown left them untraceable, and it wasn't known if they even survived. But Julla wouldn't count them out.\n\nAfter being bumped from planet to planet, Julla found herself on Llevven, the end of the line, with a seemingly hopeless challenge ahead of her. This world was home to the discards from the military.\n\nShe realized the Borrelian Rulers and the senior brass of the army had reached the limit of what they'd take from her. With her so far from the primary worlds, it was finally time to end her interference. They likely expected her to be killed at the hands of the undisciplined soldiers, who wouldn't stand for her changing how they abused their positions. Even the senior officer who'd killed his commander hadn't been arrested for his crime!\n\nAs the planet's highest military authority in charge of its security, she submitted the request for sanctioning state of emergency measures due to the systemic corruption she'd discovered and documented. This report and appeal would be delivered to the Borrelian Rulers for their approval. As they were behind the corruption, Gorresh submitted the delivery via a hard copy mail bonded courier, which would take months to arrive on Borrelia. Using this method implemented security protocols that required the response return via the same delivery channel. She ensured the return mailbox address was incorrectly identified, so when the Rulers' response finally arrived, it would be returned to Borrelia for readdressing via the courier again. Until the required approval or expected denial returned, she could assume her appeal was accepted as defined by the current law and act accordingly. That play would give her over a cycle of absolute control and full authority. These laws had never been exercised, but they were on the books and maintained the legality of her actions, and she was making excellent use of them.\n\nThe Borrelian Rulers also hadn't considered that Llevven's military corruption was so rampant, they didn't bother to hide it.\n\nIn her first weeks in office, she identified and took out the top three ringleaders responsible for the worst violent abuses. These crime syndicate bosses in military uniforms were easily identified by their terrible reputations for vicious cruelty towards the populace they were charged to protect. They'd carved up the city into their own little kingdoms.\n\nUsing her new authority, she personally hunted, captured, charged, tried, and executed each on the spot with brutal efficiency. Then she seized the assets of their criminal enterprises as they'd made no effort to hide them. This money was immediately returned to the communities each crime boss controlled. She made sure her message was crystal clear for everyone down the chain of command in the dead criminal's enterprises.\n\nOver the next few weeks, she repeated her actions on any ambitious lieutenant who thought they could pick up the reins of their dead bosses. By the end of the month, the syndicate collapsed, and over a dozen hardened criminals were off the streets permanently. The Commander's reputation for protecting the general populace was strongly reinforced, and her popularity soared.\n\nJulla's latest goal was weeding the malcontents, incompetents, and the corrupt from her troops. This looked like a long-term project, but she wasn't one to settle for later when now was available. Good things didn't happen unless they were made to happen.\n\nIn the six months she'd been in her new role, she hadn't so much rocked the boat as torpedoed it, setting it ablaze. Everyone was nervously watching for her next move.\n\nThey didn't have to wait long, as she immediately disbanded Mnemmesh's City Guard in its entirety, citing they were unfit for duty. They'd abused their role for personal financial gain and harmed the citizens they were supposed to serve.\n\nJulla was training their replacements from a hand-selected group of raw recruits. The ones she chose were young, fit, and completely dedicated to her, reporting only to her as well. She was filling their heads with the true meaning of the Borrelian Military's Code of Honor, something she experienced while flying through space on the battle cruisers with her fellow soldiers. She emphasized integrity, respect, duty, courage, and loyalty. Julla spent one-on-one time with each of her new commandos to assess them and earned their trust as they earned hers.\n\nWhile this was going on, she reviewed the many distinct divisions she had under her command. Each was going to be squeezed to separate the diamonds from the coal. Soon she would begin.\n\nAs the military forces were the only means of enforcing laws on Llevven, they needed to earn the people's trust once more. To begin this effort, she was allocating some of her time to handle a few cases personally. This was an excellent training exercise for her new recruits as well.\n\nShe reflected this was going to be one of the most demanding missions she'd ever taken on, but then, she'd never turned away from a challenge.\n\n-=-\n\nLieutenant Pinorra Heltas sat in his third-floor office, down the hall, and across the open atrium from his new commander's office. He swore he could feel her too-aware eyes staring at him through the walls right now.\n\nHe knew that was just paranoia, but he also knew it was just a matter of time before Fleet Commander Gorresh's purge caught up to him and discovered the crimes he'd committed for his own personal gain. The wicked acts he'd perpetrated to rise in the ranks to reach this top floor office with its garden view and a sightline to the Commander's office door.\n\nHe needed to escape Llevven before that happened. He already had one of the two things required for the journey.\n\nA lucky young citizen was recently assessed as a Shaded caste, and her family purchased a pass to take the Gate system all the way to Borrelia for a once-in-a-lifetime trip. Alas, before she got to use it, she went missing--a case for the City Guard to investigate... if Gorresh hadn't sacked them all.\n\nDue to an increase in night patrols of the Commander's new pets, Pinorra was forced to bury the young female's body under his basement. The money he took from her would pay for the intra-system flight from Llevven to Hessani, where he'd use the pass to take the Gate to Gibral, then to Borrelia. He didn't currently have enough to cover the intra-system space flight from Borrelia to Casellion. As a Mixed caste, he could live there if he wore the covering robes. He had no issues with that as he wore them now, aside from the face covering.\n\nThe next issue he had was that he couldn't afford to live on the more expensive planet, but he had a plan for that, too.\n\nHe knew he was smarter than the three idiots the Commander had planted in the ground, as he was far more cautious and secretive about his actions. He was also smarter than the ousted City Guard, six of whom should have contacted him by now on the comm he provided to them with the two energy rifles from the armory in the basement. He'd taken a colossal chance with this, as the Commander would eventually discover the missing weapons unless he collected them to sneak them back into the armory soon.\n\nHe saw a splash of late afternoon light on his ceiling and stood to look out his garden view window. Below were flower beds, some small ornamental trees, and benches for those who wished to appreciate nature. Seated on the bench was one of his informants with a small mirror to reflect the last rays of sunlight to his window. The old male stood and left the garden slowly.\n\nPinorra frowned. Something was wrong.\n\nLeaving his office, he headed down to the ground floor and stepped outside. He set his course to the large plaza with a fountain and arrived only a few minutes later. He paused to watch the dancing water, its noise acting as a perfect sound block for nearby ears. The old male from earlier stepped up beside him and faced the fountain as well.\n\n\"You were asking for news of caravans arriving in the city today. There were only two. The Mrissa Caravan from the southern coastal city of Astellus and the Sheffali Caravan from the east coast villages. Both greeted the field workers with indications of success.\"",
        "Pinorra was screaming with rage inside. The useless ex-City Guards couldn't take out a simple village caravan when he armed them with energy rifles? He nodded stiffly and tossed a silver coin towards the fountain intentionally short. He turned and walked away as the old male bent painfully to pick up his payment.\n\nHow could this simple task have gone so wrong? He didn't dare use the comm to contact the Guards-turned-Bandits. He'd have to wait for them to contact him.\n\nWith anger and worry twisting his gut, he went back to work.\n\nThere had to be a way to salvage his plan!\n\nChapter 4\n\nLorrenz enjoyed a leisurely breakfast with Lissan in the comfort of their small home. They sipped their tea in comfort on their little porch and watched their family's activity in the homestead.\n\nThe previous night they'd arrived, and a flurry of activity began that was only now calming.\n\nLaalaa, Freem, Grit, and Hale had uncoupled the weary Druug from the wagons and led them next to the shallow stone trough next to the barn. Lorrenz's eighth son, Treeg, was the Homestead Druug Wrangler, and he guided each of the large beasts through the medicated waters in the trench to soak their bellies and legs. Grit and Hale collected the wriggling parasites from the water with nets after each Druug passed through. These would be fed to the guard beetles as a treat.\n\nFreem and Laalaa were ready to give the soaked beasts a good soapy scrubbing with rough brushes on long poles to ensure their upper surfaces were clean and free of pests as well. This was the step you'd watch if you were ever interested in hearing a Druug purr. Truthfully, it was more of a rapid clicking as their heavy mandibles trembled, but their contentment was the same. Druug loved a good, rough scrub.\n\nThe apprentice vets Hirral, daughter of third son Petre and wife Seela, and Jeelu, daughter of fourth son Alleg and wife Winni, were next. They fed the clean Druug a carefully prepared treat that contained medicinal roots. This was a health and immunity booster.\n\nOnce all the now sleepy beasts of burden were clean and dosed, they were guided to an outdoor pen next to the main barn where there was food and water. The four Druug held in reserve were locked in a large stall inside the barn with strong metal bars separating them from the returning beasts. This allowed the creatures to slowly re-bond with their pack mates after being separated. The four could enter the exterior pen in the morning for the full reunion. During the night, there would just be a lot of curious mutual snuffling.\n\nWhile this beast grooming was happening, the unloading of the wagons was being managed by Lorrenz's seventh son, Drema, who was their Chief Warehouse Inventory Handler. Fourth son Alleg was Chief Caravan Cargo Handler and worked closely with his brother to ensure the wagons were emptied quickly and efficiently. All free hands were pulled in for this duty.\n\nOnce they were emptied, the wagons went into the garage where they were inspected, repairs were made, and underwent any other scheduled maintenance.\n\nAny medical issues the caravan crew had on the journey would have been dealt with by their Chief Caravan Doctor Petre, or by their Assistant Caravan Doctor Marrela, the wife of Lorrenz's sixth son, Stevv.\n\nStevv was the Chief Homestead Doctor and ran a free medical clinic next to the property's front gates. This is where the Sheffalis gave back to the community. They had deals with the different pharmaceutical manufacturers in Mnemmesh and good relations with the city hospital. Stevv spent two days of the week performing surgeries at the city hospital, and in turn, his clinic got the required supplies to handle the overflow of patients who couldn't afford to pay for medical assistance.\n\nLorrenz was really proud of Stevv, but he was also the most troublesome child of the family. Brilliant, charming, and a mirror image of his father from the day he was born with his Spotted caste, his ego was too large for his head and spilled out frequently.\n\nStevv ignored his parent's advice and married a female six cycles his senior because she was truly lovely. She was a Mixed caste who was borderline Shaded, with a soft light grey on her front fading to a medium grey on her back. She could pass for Shaded, but for the three lighter grey bands on her back, which bumped her to Mixed, fourth caste.\n\nInfatuated, Stevv wooed her and wore down her resistance until she agreed. She had medical training, so she began studying under him to increase her skills to assist him in the clinic. That's when his ego showed its ugly side. Eventually, Marrela spoke to Lorrenz and Lissan and was assigned permanent duty with the caravan. She couldn't live with her husband, but she'd fallen in love with the Sheffali family and wished to remain within it.\n\nWith this separation, their marriage was saved. With these long periods away, the partners agreed to take other lovers as long as they were discreet and only did it while apart. Lorrenz and Lissan looked the other way as this seemed to work for them, and it maintained harmony within the family and caravan.\n\nLorrenz knew Petre and Seela let Marrela join them in their tent, but he didn't want to know any more than that.\n\nLissan smiled at him and tipped her chin toward the trading house complex. A runner was coming from the back door toward their home. It was Olle and Jaritta's son, Penna, who was now fifteen, just a cycle away from joining the family business. Would he become caravan security like his father or a caravan cargo handler like his mother? Maybe he'd try something completely different. Lorrenz and Lissan would welcome whatever he chose.\n\nThe office complex he just rushed out of was a large two-story structure added to the homestead when they had sufficient family members to run the business while the caravan was away. Their second son Danne and his wife, Shalee, were General Manager and Public Relations Manager, respectively. Theirs was another relationship Lorrenz and Lissan did their best to just accept.\n\nShalee was a master schmoozer and was connected to the city's unofficial news channels--the gossiping wives of the wealthier families. While the Sheffalis were not numbered amongst the most affluent families, Shalee nonetheless insinuated herself into that social strata and gleaned a wealth of information from it, keeping the channels open and active.\n\nBubbly and outgoing, she was flirty and not above using sex to get what she wanted, which was mostly information. Through these means, she obtained account access to the city's data net and a computer to link it. That was a rare bit of tech in a largely tech-free world. Lorrenz and Lissan were completely comfortable trusting her as they knew she was fiercely protective of the Sheffali family.\n\nShe was also the one who informed them of the new Commander's assignment to Llevven and gathered as much information as she could about the new leader of the planet's military. They learned much about the war hero and that she'd been in administrative positions for decades before being assigned direct control of the military here. Considering the state of corruption in the ranks, Lorrenz had to wonder what was going through her superior's minds when they assigned her back into active duty here, of all places.\n\nPenna arrived with a huge grin and shared hugs with his grandparents. \"You both look very well,\" he said.\n\nLorrenz smiled and nodded. \"Traveling keeps us young. What news do you bring us?\"\n\n\"Uncle Danne and Aunt Shalee asked me to let you know that they are at your disposal this morning if you'd like to visit,\" the young male said.\n\nLissan nodded. \"Please let them know we'll be there shortly.\"\n\nWith another grin, the boy ran back to the offices.\n\nLorrenz and Lissan tidied up their breakfast dishes and walked arm in arm to see their second son and his wife. They found them upstairs in his office.\n\nHugs were given and seats taken, Shalee choosing to perch herself on the front edge of Danne's desk as he sat facing his parents. Danne began.\n\n\"I received the cargo listing from Alleg and Drema this morning, and I can promise this will be one of our best returns to date. The demand for Moon Shells is at an all-time high, and this shipment looks like it might meet all the requests we've received with a small reserve to spare.\" Lorrenz smiled at this news, so his son continued.\n\n\"The pharmacologists were at the gate first thing this morning to pick up the oils and powders you brought, and we got them settled straight away. Not sure why they were in such a hurry, but they appreciated our ability to provide the volumes we did. Shalee got us a contract with some high-end boutiques for the artisan products, so the profit will be excellent for those items. How are our trade partners?\"\n\nLorrenz nodded. \"Each was very pleased we could take all of their inventory. That said, we're contemplating adding a fifth wagon to the east coast route.\"\n\n\"Yes!\" Danne cheered as he'd been hoping his father would concede that they could handle the extra volume of trade. \"Such excellent news!\"\n\nLorrenz held up a hand to slow the festivities. \"We still have to work out the logistics of crewing the extra wagon.\"\n\nDanne nodded as he understood the ramifications. He'd discussed it many times with Treeg, Alleg, and Drema. They represented the beast, cargo, and warehouse divisions, so they all had a say.\n\nThe next generation of children was getting to an age where they'd be able to assist, but that was at least a cycle away. He knew his father played the long game. Danne felt his job was to find ways to accelerate this plan. Sometimes his father agreed, and sometimes he took longer to agree. They had an excellent relationship.\n\nLorrenz looked at the couple with a serious expression. \"We encountered an additional complication on the return this time. Zell collected two energy rifles from a group of bandits three days out from here. Danne looked at his father in concern, and Shalee gasped. Lorrenz held up his hands to ease their minds. \"All are well, due to Zell's actions. He is well, too.\"\n\nDanne looked at his wife, and she began her report.\n\n\"There has been unrest amongst the business community due to the new Commander's clean sweep activities. She released the entire City Guard. She's replacing them with new people with a new ethic that doesn't support business as usual. These are younger, less jaded personnel, eager to prove themselves to their new Commander. She's breathing new life into the military, and as they are the primary security on Llevven, crime in the city is actually dropping. The citizens are feeling more hopeful, but it's making the local business owners and trading houses nervous, even the larger ones. They've gotten used to paying protection money and bribes. Now, the City Guard are doing their job, their proper one.\" Lorrenz smiled at that assessment.\n\nShalee continued. \"The Commander's spy network is already significant, and as you requested, I've been contributing anonymously. She is scheduled to begin replacing her corrupt officers. The information I've provided should assist with this.\"\n\n\"So, she's a person of integrity? That's welcome news,\" Lorrenz sighed as Danne and Shalee nodded.\n\n\"We must connect with the Trader's Guild this morning to give them an update of the eastern route. We'll be informing them of the latest challenge with bandits,\" Lorrenz said.\n\nDanne frowned. \"Do you think they might convince the military to intervene this time?\"\n\nLorrenz shrugged. \"I'm just hoping they'll be more careful about securing their armory. We don't need their interference.\"\n\nDanne nodded, understanding his father's reference to their secret security team of one. He changed topics. \"Have you considered doing a run to the southern coast? I've heard rumblings that the Mrissa caravans aren't meeting the demands for goods. The Jakkan and Vresh have the larger east coast cities locked down, but the south market looks like it would welcome some diversity.\"\n\nLorrenz listened to this with interest. A southern route would be refreshing as the distances were shorter, but Henko wasn't someone he wanted to make an enemy of. The Mrissa were still one of the largest trading houses. To hear they may be struggling was concerning.\n\n\"I'll speak with Henko to gauge how threatened he might be by such a venture,\" Lorrenz said, seeing his son's satisfied smile. Always pushing for expansion, Lorrenz was very much aware of Danne's ambitions of being one of Llevven's leading trading houses. He never shared this with his son, but he shared that ambition. He left him in the dark to maintain Danne's belief that he was the driving force behind their growth. It kept his son fully engaged, which made him a better General Manager. The younger male was also learning the value of strategic thinking from his father. Like everything, it was a work in progress.\n\nHe spent some time with Danne reviewing the books as Lissan shared intel with Shalee. Then it was time to head off to the Trader's Guild Hall. Lorrenz was very pleased with their progress and how profitable Danne was going to make their recent trip. They shared hugs once more with their son and his daughter-in-law before heading over to the garage to arrange for a carriage.\n\nPulled by a smaller relative of the Druug beetle, their two-seater wagon was necessary to take the couple the remaining distance into the city. The lack of urban development on the eastern edge of the town was both a boon with lower property pricing and a hindrance by appealing to the criminal element that sometimes chose empty buildings to set up shop. They'd done sweeps through the nearby buildings to ensure they remained vacant and left notices that such occupation would not be tolerated, but these messages were sometimes ignored.\n\n\"Upper window southwest corner of the Demsy building,\" Lorrenz said quietly and felt Lissan prepare.\n\n\"Two from the right and three on the left side street, as well,\" she murmured.\n\nLorrenz nodded imperceptibly. \"No quarter today.\" Lissan nodded as she understood.\n\nThe moment the bandits launched their ambush, Lorrenz and Lissan opened fire with the deadly long barrel handguns they carried for such activities. They practiced with the firearms frequently, so their speed and accuracy with them outclassed their opponents. The deafening boom from the guns was a weapon in itself, as the unprepared thugs were partially stunned. Then the large-caliber rounds tore through the ground level thugs with rifles and the sniper in the upper-story window.\n\nFour seconds later, the fading echoes of the booms were the only sound in the neighborhood. They waited and heard a new sound. It was another wagon approaching rapidly from behind them. That was likely Olle and Murro, their ninth son and Chief Warehouse Security Officer. Those two took their security roles seriously and tried to get their parents to bring a security detail with them wherever they went. Ahead of them, they heard the squawk of a City Guard raptor mount. The large flightless avian mounts were tireless runners and carried one rider each.\n\nLorrenz and Lissan cast their eyes to the nearby buildings, but the threat was over. They slipped their weapons away before the City Guard officers raced into view. Olle and Murro arrived shortly afterward and pulled up beside them.\n\n\"Mother, Father, are you all right?\" Murro gasped as he clenched his rifle in his hands.\n\n\"Yes, we're fine. Thank you, Murro. Olle,\" Lorrenz said with a smile. The two City Guard stopped their tall mounts directly before the wagons.\n\n\"What happened here?\" one of the young males asked, and Murro made a sound of outrage. Lorrenz raised a hand to calm his youngest son before looking at the officer.\n\n\"We encountered some bandits who sprung an ambush upon us. We defended ourselves. I'm Lorrenz Sheffali, and this is my wife, Lissan. These are my sons Olle and Murro, who came to check on us after shots were fired.\"\n\n\"So, they were not involved?\" the second City Guard asked.\n\n\"No, they were not,\" Lorrenz answered.\n\nOne of the officers rode over to check the bandits and returned to his partner. \"Only the five bandits?\" he asked.\n\n\"There was one more pointing a sniper rifle at us from the upper floor corner window of that building,\" Lorrenz said, pointing to the building behind the officers. \"None of these buildings are occupied by tenants, so anyone in them is trespassing.\"\n\n\"Did the sniper escape?\" the City Guard asked.\n\n\"No,\" Lissan said calmly. \"but they might still be alive. Use caution.\"\n\nAs the bandits had struck from within city limits, their goods belonged to the city. Of course, the city also had the responsibility of disposing of the bodies.\n\n\"We were on our way to an appointment. May we leave?\" Lorrenz asked.\n\nThe two officers looked at each other then nodded to him.\n\n\"Thank you,\" he said to them and turned to his sons. \"Will you be accompanying us?\"\n\n\"We think that's prudent, considering the circumstances,\" Olle remarked.\n\nLorrenz nodded his agreement, then faced the officers. \"Thank you for your prompt arrival and for taking over the scene. I will mention this when I speak with your Commander.\"\n\nThe young male's smiles widened. \"Badges three-two-two and four-six-five,\" one offered.\n\nLorrenz smiled. \"We'll remember.\"\n\nThey got on their way again as the officers dealt with the dead bandits, looking for identities and collecting anything that might be sold to pay for the processing of their bodies.\n\nThe east end was so empty because of a plague that struck the city ages ago. It first struck in this community and spread westward. The people at the time superstitiously linked it to this side of the city. By the time they found a cure, most of the residents here had perished.\n\nThe disease had long been eradicated, but the deep-seated fears took much longer to fade. Lorrenz had no issues with it remaining an inexpensive neighborhood to live in.\n\nAfter a few more blocks of undeveloped plots and abandoned structures, they passed through a huge archway in a narrow hedgerow and immediately saw signs of life and commerce on the other side, as if the wall of plants somehow protected this side from the plague. In truth, it had spread almost to the core of the city, but the worst cases had been on the other side. The hedges gave the people something solid to base their intangible fears upon.\n\nOnly two more blocks passed before they stopped in front of the large stone structure that was the Trader's Guild Hall. It was an impressive edifice, but aside from containing records, administering trading house contracts, and managing Trade Disputes in the meeting rooms, the building was far more impressively constructed than necessary. Lorrenz would have preferred if the money it'd cost had gone towards improving the road surfaces on the routes out of the city.\n\nOlle and Murro waved to them from their cart as Lorrenz tied their beast to the parking post.\n\nLorrenz climbed the stairs with Lissan and went into the building without further delay. They approached the front desk and submitted their validated medical relief documents indicating successful delivery to the eastern coastal villages and towns. These forms would be submitted to the government offices that tracked the health of the people.\n\nThis was a service Lorrenz and Lissan took seriously and were proud to take part in.\n\nThey'd receive a small stipend for the delivery, which didn't cover the revenue they could have generated with the space the drugs used.\n\nHenko Mrissa entered the front doors behind them and called out a greeting, so they stopped to wait for him to catch up. Lorrenz noted the Trade Master was moving slower than usual and appeared to carry some heavy burden.\n\n\"Henko, my friend. Are you well?\" Lorrenz asked him quietly in concern when he joined them.",
        "The male looked into his eyes and saw only compassion, so he smiled gently. \"Thank you, Lorrenz. I am as well as can be expected. The passage of time takes its toll, and life is not always kind either. We endure and move forward, yes?\"\n\nLorrenz had to nod in agreement, as the other male did not appear to be ready to share more than he had.\n\n\"Come! Let's make ourselves comfortable in the lounge, so we may discuss your latest journey!\" Henko said with renewed enthusiasm.\n\nThey climbed the grand staircase and entered the double doors at the first-floor landing. Inside, the walls were covered with colorful woven tapestries displaying scenes of caravans arriving on the shores of the east, west, and south coasts of Llevven's one habitable mega continent.\n\nNo tapestries were displaying the north, as there were no established settlements of any kind in that frozen and mountainous region. It was the source of most rivers that flowed through the continent's center and provided their drinking water.\n\nSeveral other males in the large chamber sat in clusters of chairs, discussing business and trivialities as they enjoyed hot beverages. They waved to the new arrivals with smiles. Lorrenz and Lissan smiled and waved in return. She was the sole female who set foot in the hall. There was no rule against it, and she wished more of the wives of the trading houses took an interest in this part of their businesses. The Sheffali Trading House may have been smaller than the others, but they were well respected because of their longevity and steady progress.\n\nLorrenz spotted a free quad and took seats on the plushly cushioned chairs as the doors pushed open once more.\n\n\"Ah! Good! You haven't begun yet!\" Ogami gasped as he rushed into the room and took the last open chair in the group.\n\n\"Greetings, Ogami,\" Lorrenz said with a smile, and Lissan nodded to the male as well.\n\nThe leader of the Jakkan Trading House had risen greatly in Llevven's social strata because of his long-ago acquisition of the Tarron homestead. He never forgot who he owed for that.\n\n\"Did you encounter any issues with your latest trip to the eastern coast?\" Henko asked with some urgency in his tone.\n\nLorrenz looked at his friend and nodded. \"Yes, there seems to be an increase in the number of bandits on the route. We encountered three small groups, no more than four in each outbound, and on our return, we ran into a group of eight, three days out from the city--\"\n\n\"Casualties?\" Henko blurted.\n\n\"None... Henko, what's happened?\" Lissan in concern.\n\nThe male shook his head as he looked away.\n\n\"His granddaughter has gone missing,\" Ogami said gently, and Henko jolted in pain. \"I'm sorry, Henko, but these people are your friends. They're concerned for you. We all see the strain it's placing on you.\"\n\nLorrenz and Lissan were shocked to hear of such a thing happening to someone of his social ranking. As cynical as it sounded, the rich were typically exempt from the more sinister crimes. There was just too much attention on them for the criminals to get away with such acts.\n\n\"You've spoken with the new Commander of the forces?\" Lorrenz asked. \"I've heard she has integrity.\"\n\nHenko nodded. \"Yes, she is personally investigating the disappearance.\"\n\nOgami snorted, and eyes turned his way. \"In the meantime, the female is stirring everything up. We no longer know who to bribe to make things work as they once did. No one enjoyed paying graft, but at least business moved in expected patterns. She fired the City Guard! All of them!\" Lissan shared a glance with her husband as this matched Shalee's report.\n\nLorrenz noticed others were leaving their chairs to join their group to take part in the conversation. He looked back to Ogami. \"We met two of the new Guard this morning on our way here after six bandits attempted to ambush us a few blocks from our homestead.\"\n\n\"WHAT?\" Henko and Ogami gasped, and the others standing around their cluster of chairs made outraged noises to hear this was happening within the city walls.\n\nLorrenz was taken aback by the strength of the outburst.\n\n\"You said the City Guard recently lost their jobs. Many were just bandits with uniforms. This is a logical stepping stone for them,\" Lissan offered.\n\n\"How-How did-\" Ogami stuttered.\n\nLorrenz smiled at their friends. \"We've gotten rather proficient with weapons over the cycles.\"\n\n\"You and Lissan took out the bandits?\" Henko asked, wide-eyed.\n\nLissan nodded. \"You don't wait for rescue in those circumstances. You take action.\"\n\nThere was another murmur from the surrounding group, but it was of approval this time.\n\nHenko leaned forward and locked eyes with the Sheffali's. \"We believe the increase of bandits on the trade routes is directly linked to the new Commander's efforts to cull the criminal elements from her forces. Two caravans have failed to return from the western coast trade route. One was the Sprell family running with two wagons, and the other was the Krattos family, who ran a five-wagon, heavily defended caravan. We fear they've been murdered. Both were carrying medicine for the western communities. A solitary expedited courier managed to get through and returned from Washtan on the west coast. They reported neither caravan arrived in the city. They never received the medicine. The pharmaceutical delivery contract's payout has tripled, but... none of us feel confident enough to take it. We've asked the military for support but were turned down by the Commander's office because of her current efforts.\"\n\nHe hadn't come out and directly asked Lorrenz to take the mission, but saying none of them would do it made the request clear.\n\nLorrenz and Lissan glanced at each other. He'd arranged for their oldest daughter, Bonna, to marry into the Krattos family. They believed she worked at the homestead, not on the caravans, but that might have changed. They leaned back in their chairs as they contemplated what they'd just heard from their colleagues. Too frightened to send their own caravans into danger, they wanted the Sheffalis to volunteer.\n\nThe established fact that they had a spotless record of surviving attack after attack made them the obvious candidates for the job, but Lorrenz and Lissan knew that was mainly Zell's influence. They were in no hurry to put him in danger again with this unknown situation.\n\n\"That's a pretty big ask,\" Lorrenz said slowly as he looked around at the hopeful yet guilty expressions.\n\nHenko was the first to nod. \"Yes, we know. We're all experienced traders and caravanners, and we've had our share of encounters with danger on our journeys. However, most of us rely upon the security teams we hire, but lately, we're now having issues with them. They're all raising their rates for hazard pay which diminishes the profit of making the trip. It's their job to deal with the hazards!\n\nYours is the only caravan exclusively run by family members, and your record of surviving encounters with bandits without casualties is something we all envy. Then you and Lissan just informed us you defeated a team of six by yourselves on your way here!\" Once more, the gathered made impressed sounds.\n\nLorrenz brushed aside the compliments. \"As our caravan is made up of family members, we'll need to speak with them before we can agree to take on such a mission,\" he stated firmly. \"We've only just returned from the east coast and haven't replenished our wagon's stores or completed any of the planning for our next run. We were considering a run down to the sunny south coast as a change of pace from being ambushed.\" Lorrenz casually mentioned that last suggestion to see how the other would react and saw some very uncomfortable expressions. The southern routes were much less bandit infested, and these older Traders were comfortable with their stranglehold on the market there.\n\nHe saw he'd have to back-burner Danne's ambitions for the southern destinations for a little while longer. He looked to Lissan and saw she'd picked up that impression as well as she smiled with a raised brow.\n\nLorrenz would speak to his son about expanding their east and west coast coverage because he wasn't about to let these older Traders have their cake and eat it too, at least not without compensation.\n\n\"We'll take this news back to our homestead and have a family meeting. We'll get back to you in the morning,\" Lorrenz stated.\n\n\"Of course! If you need a day or two, we don't want to rush you,\" Henko said generously.\n\nThey stood and nodded politely to each other as they left. Ogami walked with them to the front doors as the rest went back to their chairs. Henko sat and stared out a window at nothing.\n\nAs they walked down the stairs, Lorrenz looked to Ogami. \"Henko is taking this very hard.\"\n\nThe male nodded. \"His granddaughter just became an adult and was assessed as Shaded. He insisted she travel to Borrelia and purchased the Gate pass for her. She insisted on using her own savings to pay for her passage to Hessani. I think Henko wanted her to emigrate to Casellion. Then she went missing.\"\n\nLorrenz and Lissan shared sympathetic expressions with Ogami. Then Lorrenz touched his arm. \"I'm going to try to get an appointment with Commander Gorresh. I will see what I can find out for Henko.\"\n\n\"Thank you, Lorrenz! You are a true friend!\" Ogami said with a smile.\n\n\"Take care!\" Lorrenz said, while Lissan touched the male's arm with a smile.\n\nThey went back to their wagon and nodded to their sons waiting in the next wagon. Murro was driving now. \"Let's go home,\" the father said and got nods.\n\nThe trip back was uneventful, and Lorrenz brought their wagon back to their garage, where their granddaughters Hirral and Jeelu, took the reins as they stepped down. They kissed the girl's heads and got grins for that, waved to Olle and Murro, then headed back to their home to make some tea and discuss the next steps.\n\nSitting on the porch, once more sipping the hot beverages, Lorrenz looked to his wife and sighed. \"I know what you're going to say. We must make the journey to the west to deliver the medicine, and I agree, but there are costs involved.\"\n\nLissan smiled. \"And I know what you're going to say about those. I also agree we'd be putting Zell into considerable danger, especially if the western route bandits also had access to these energy weapons. There's also the fact that we wouldn't make such a trip without goods to trade, and we're not prepared. That's a financial cost. We need to speak to Danne about that. He might be able to perform some miracles. We could also pressure Henko or the others with contracts with western buyers to cut us in on the orders they aren't currently delivering. I'm sure they have customers suffering because they're hesitating to go.\"\n\nLorrenz nodded. \"That would put us in a good place with these buyers.\"\n\n\"It would make the most sense if we could run a five-wagon caravan. The west coast buyers would see we're capable of fully serving their needs,\" Lorrenz sighed, then caught the motion of Penna running over from the office once more. He had a serious look on his face this time. Lissan shared a look with her husband.\n\nPenna got right to it once he arrived. \"You have visitors waiting in the reception hall asking for a meeting with you both. I was told they're representatives from the Krattos family.\"\n\nLorrenz and Lissan immediately stood to follow their grandson back to the large building and entered the reception hall. Danne and Shalee were already there. Danne made the introductions as all four stood to greet the Sheffali family leaders.\n\n\"Father, Mother, may I present Stron Krattos and his wife Illia, envoys from the Krattos family. They've come to make a personal appeal to the Sheffali family.\" He turned to the couple. \"My parents, Lorrenz and Lissan Sheffali.\"\n\nStron tipped his head forward in respect, as did Illia a second later. The female appeared dazed.\n\nLissan turned to Penna, who was standing next to the door. \"Could you bring a tea service and some biscuits?\"\n\nPenna nodded and slipped from the room.\n\n\"Th-thank you for seeing us on such short notice, and I apologize for coming to see you so soon after your return from the road,\" Stron began.\n\n\"It's quite all right. We just learned of the disappearance of your family's caravan on the western route,\" Lorrenz said compassionately.\n\nStron nodded, then looked away for a moment as he collected himself.\n\nPenna returned, pushing a small cart laden with a teapot, cups for six, and a plate of cookies.\n\nLissan thanked him, and he returned to the door as she served their guests the calming tea. Illia looked especially thankful for the kindness.\n\n\"Yesterday, the sole survivor of the Sprell convoy, a boy barely past his sixteenth cycle, entered our yard and collapsed. He delivered a note and fell unconscious. The doctor we called for him told us he wouldn't survive the night, and he didn't. The delivered letter was a ransom demand for the seniors. It says my great grandparents, Axell Krattos and his wife Indri, are alive and will be returned if we pay their captors five hundred thousand credits within the week. I cannot access any of the assets of the estate.\n\nWe immediately went to the Commander's office, but we were turned away by one of the officers. He told us that her plate was full, so she wouldn't be taking on any more work until she'd dealt with internal matters. We never got to see the Commander.\" Stron took a moment to regroup. He sipped some tea and ate a biscuit. He'd obviously not had anything to eat for the past few days.\n\n\"My great-grandmother left specific instructions for the situation where they are captured. She called it a contingency plan. She said she got the idea from you.\" He gestured to Lissan, who smiled slightly and nodded as she recalled speaking with Indri about her own contingency planning.\n\n\"She left instructions for us to follow. It said for us to reach out to the only family who may have the means to determine their true fate, the Sheffali's. I don't know why she had such faith in you, but I'm sure she had her reasons. Until my great grandparents, or any of their descendants, are found alive, I'm authorized to offer you any resources we have at our homestead to support the search and retrieval of survivors. If they've all perished, I will offer you exclusive salvage rights to all assets.\" Lorrenz and Lissan made a sound of protest, as Stron and Illia would be the Krattos family if none of the others had survived.\n\nStron took a deep breath. \"If there are no senior members of the Krattos family left, I'll have no choice but to collapse the business. I cannot run it as I've been legally made an agent of the family. My personal ownership rights have been permanently removed.\" He gave them a crooked smile, which showed his true pain. \"I'm the outcast of the family. The one who didn't fit in and follow their rules, so great grandfather Axell wrote me, mostly, out of the family and left me behind to act as their agent.\" He saw a reflection of his pain in their eyes. \"Oh, I'm sorry. There's one other family member left at the homestead to manage the reserve beasts when the caravan left. Bonna is the Homestead's Druug Wrangler. She's your daughter?\"\n\nRelief poured through Lorrenz and Lissan as they nodded. Then the father looked at Stron in confusion. \"Isn't Bonna the most senior Krattos family member?\"\n\nStron shook his head. \"Krattos marriage contracts block spouses marrying into the family from inheriting control over family assets. Their children can, but not them. It's something else I protested against, which put me outside my family's favor.\"\n\n\"What will happen to you and Illia if we cannot rescue a living family member?\" Lissan asked gently. Illia began to cry quietly, so Stron put his arm around her.\n\n\"I'm not sure. We have some savings, but being ejected from a family has made it difficult to find employment,\" he said.\n\n\"Do not despair. We will do what we can to ensure you are not alone and have a future,\" Lissan assured Illia and smiled at Stron.\n\n\"There is much to discuss with our family tonight. Please return tomorrow to be our guests for the midday meal. We will let you know our decision then,\" Lorrenz said kindly.\n\nStron saw their meeting was done, so he carefully helped Illia to her feet. The couple thanked their hosts, then left to return to their homestead. Danne walked them to the door.\n\nWhen Danne returned, Lorrenz carefully lifted the chain holding Zell's whistle from his neck and gestured for Penna to come closer. He put the whistle over the boy's head. \"Find your father and ask him to take you to the edge of the forest. When you're there, you will signal for Zell to join us tonight. Your father knows the proper sequence. He will tell you how to use the whistle to call for him. Go now and go quickly. Return that to me when you get back. Be safe, as the bandits may still be out there.\"\n\nThe boy's eyes were wide, and he smiled with excitement at being given such an important mission. He nodded to his grandfather and rushed away.\n\nLissan stood and faced the others. \"We need to prepare a good meal for tonight. It's a rare event. All of my boys will be home.\"\n\n-=-\n\nLieutenant Pinorra Heltas sat in a small park across from the City Government Offices building. He'd just received an update from one of his street rat informants about an attack on the Sheffali patriarch and matriarch this morning. It wasn't good news.\n\nHe felt Commander Gorresh's noose slowly getting closer. He had a few critical projects underway, and he didn't need the Sheffalis interfering in them or drawing the Commander's attention.\n\nHe still had a customer waiting on the goods he'd promised he'd get from the Sheffali caravan before it crossed the mountains. His hired guns were supposed to have killed the Sheffalis and moved the goods to a sheltered valley in the foothills he'd identified for them. They were to signal when they got there. He'd meet up with them a few days later to kill them and deliver the goods to his customer.\n\nInstead, the caravan wiped out the bandits. Trained soldiers were taken out by goods traders. Now those goods were in the Sheffali warehouse. The family was too well organized to send in another team to take the family out in their homestead. He needed to cut the family's head off to send the rest into a panic. Then he could wipe them out. Finally, he'd take their moon shells and get his money to get off this planet and pay for his new life on Casellion.\n\nSix bandits, including one reportedly exceptional sniper, targeted the couple on their way to the Trader's Guild Hall to achieve that goal. The five ex-Guard were now dead, and the sniper was in critical condition in the hospital with her arm blown off.\n\nPinorra would have to make a brief visit to the hospital now to ensure the female never woke up to tell anyone who hired her.\n\nHe needed to come up with a new plan and quickly. He was too smart to end up dangling from the bitch's noose.\n\n-=-\n\nZell neutralized the bull pig's blood across the ridgeline with a mixture of ground leaf pulp and mushrooms as the digestive enzymes they provided would consume the dropped blood, the pungent pulp masked the odor and accelerated the enzyme's work. As a bonus, there'd be an increase in mushroom growth over the next cycle, which would keep creatures from using this route. The forest would take it back.\n\nHe was on his way back to his shelter when he picked up the strong, vibrating note of the whistle. He listened carefully and heard three distinct tones of three counts, with three counts of silence between. That was the meet at the homestead signal. Something must have happened. Something significant if they will risk having him found there.\n\nHis shelter was secure, so he had nothing to hold him back from proceeding immediately for his parent's place, except for the late afternoon sun. He made his way silently through the forest, collecting rare mushrooms for Seela, the Chief Caravan Chef, and placing them in a sack he carried for such occasions. Eventually, he reached the forest's edge, where he'd wait for darkness. He could hear the sounds of the field workers moving out of the fields to the waiting wagons, which would take them back to Mnemmesh. He climbed a tree and poked his head up through the canopy to watch the progression of wagons heading back to the city. He wondered what it might feel like to live in such a densely populated community."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "sci-fi",
        "non-erotic",
        "castaway",
        "alien",
        "romance",
        "love",
        "geek pride"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/sheffalis-caravan"
}