{
    "title": "And Soon My Evil Plan... Ch. 02",
    "pages": [
        "BetaGirl had been keeping herself rather busy and mostly out of the pages of the tabloids, mores' the pity. I don't watch the network news very much and didn't even blink very much when the top news story at Drudge was \"Meteor Approaches \u2013 End of Life on Earth CERTAIN!!!!!!\" Drudge is always wound up about something, but he does link to any updates from my own web site, so I can't much fault him for getting a tad excited. It did seem to be a pretty big hunk of rock quite capable of pulling off another mass extinction event killing off 98% of all life on earth, like the Cretaceous \"dinosaur killer\" strike 65 million years ago.\n\nThere is not much point in being a mad but 'reformed evil scientist' if you don't get to play with forbidden technologies like radical magnetic pulse launchers and massive particle beam generators. I was going to do everyone a favor and quietly blast our incoming uninvited extraterrestrial guest into a few billion pieces of safer rubble that should do nothing scarier than provide a nice light show as they burned up in orbit, but there was just one slight problem. That whole project was still really just in Beta, and not ready for prime time use. My crew of highly paid assistant fellow mad scientists told me that my \"super-weapon\" was almost finished, but required much more testing before using. No one ever conquered the world by using a beta-version of anything, and we cut every time corner down to the last few seconds before I felt secure enough to press the button to blast that incoming massive hunk of nickel-iron into rubble, virtually at the very last moment as it was starting to enter the earth's atmosphere.\n\nI then sent a few emails around to Drudge and few friendlier news outlets saying \"No worries, I blasted that big bad space boulder! Yea, Me!\" and parked myself off to bed early to watch the Sci-Fi channel 'Disasterthon' I'd recorded earlier of \"Meteor\", \"Armageddon\" and \"Deep Impact\". Some of our secret space alien watchers would probably be unhappy about my saving the earth, but screw them and their round grey heads. If they wanted to debate the point with me I'll use my new toy against their bright shiny spaceships and see who gets the last laugh! \n\nThere was a bit of bitching from the usual eco-freaks about all of the meteor dust that was now in the atmosphere. It would take a few years to entirely go away but even the most aggressive estimates didn't project it to displace more than 1.3% of the earth's incoming sunlight. We'd get a slight touch of global cooling and some pretty red sunsets for awhile \u2013 sounds better than species extinction to me, but some folks are never satisfied.\n\nIt was early the next morning I learned that BetaGirl was now alleged to be \"missing\" after her own attempt to stop the meteor, but I didn't think twice about it (I knew she was a tough girl and a survivor) until I found her washed up on the beach of my private island in the southern Bahamas the next morning, when I did my morning walk.\n\nShe was breathing, but just barely. She didn't seem to have any major injuries, but her normally invulnerable skin was a mess of small cuts and bruises. She looked like she had gone on a date with Mike Tyson.\n\nAll I could tell at first was that she was nude (and pretty), and I assumed that she was just some party girl who had fallen off of a yacht and washed ashore that way. It wasn't until after I picked her up and started to carry her back to my fortress that I recognized her face. As none of her injuries seemed critical, I cleaned and bandaged her up the best I could and put her to bed in a guest room and left her alone to sleep. I then phoned a temporary nursing agency in Andros City stating I would pay top rates for a trained nurse (preferably someone one with an adventureous streak and a sense of humor) and would have a helicopter waiting to collect her in less than a hour.\n\nNormally, according to the Evil Overlord Guidebook, the \"Fair Maiden\" should never be left unsecured in rooms full of bolt cutters, gasoline cans, knives, scissors, lockpicks, bandsaws, fire axes, chain saws, plasma cutters, electric drills, submachine guns, hand grenades, flame throwers and the like under the assumption that simply because she is unable to leave the room, she is helpless. In her case, I just left her door open and unlocked. Normally, any of my evil minions who ever left any prisoner alone and unsecured would themselves be left alone and unsecured in a very secure room full of angry bio-tech enhanced wolverines. In this case, I was going to make an exception.\n\nEvery test I performed indicated that BetaGirl had apparently now somehow lost her powers! Hopefully, this would improve her temperament, but somehow I doubted it.\n\nShe slept for the best part of two days, but woke up long enough to drink some water given to her by the nurse and then she went right back to sleep again for another full day. She woke up hungry the next time, and we fed her some soup in bed. She wasn't delighted at all with my company... but she was hungry, so I left the room after making my 'hellos' and left her to fume at the nurse... who turned out to be invaluable. I hired her permanently and put her on the company pension plan. Our medical benefits package had been a bit weak anyway.\n\nBetaGirl stayed in bed for most of the next week while she regained enough strength enough to even be able to sit up in bed. She could only walk in a stiff shuffle at first, and tired out extremely easily. Her wounds seemed to heal very slowly and she was sore all over her abused body, but her mind and memory were as normal. She tried giving me a good deal of lip during my evening short visits with her, but even her nurse told her bluntly to be ungrateful and \"shut up and be nice, or leave\", and that I'd done everything quite properly and her rescue had been performed in a very gentlemanlike manner in all respects.\n\nI told her bluntly after our first exchange of not so witty repartee that I'd have a helicopter or seaplane standing by to take her anyplace she wanted to go... when she wanted to go. If she couldn't walk, fine \u2013 I'd push her wheelchair to the plane myself. If she was going to be a 'guest' then fine \u2013 start acting like one, or she could fly or swim her way somewhere else more congenial to her. She bit her lip and vaguely nodded. I guess she thought it was going to be \"Zombie Girl - Part 3\" and it took a good deal of explaining to convince her that I'd already had my revenge and holding grudges is very counter-productive in the evil mad scientist line of work. \n\nShe'd destroyed three of my private and personal pieces of real estate, and put me in a back brace for nearly a month before a really good chiropractor straightened me out. I, in turn, had taken some non-sexual liberties with her personage and made a few entertaining videos, but otherwise, no harm \u2013 no foul. I'd gotten my Presidential Full Pardon, royalties were finally flowing into my bank accounts and I was almost in the mood to be creatively constructive and invent new and useful things, for the first time in several years. The slate was even as far as I was concerned, but it took her about another week to shake my hand and agree for us to start on a clean slate.\n\n*****************\n\nAfter about two weeks of convalescence, BetaGirl was able to shuffle about well enough now to start getting around in the fortress. I offered her a flight or a boat ride out, but she didn't seem to show any particular interest in leaving just yet. She started to take normal meals at the main dining table with me, and spent most of her days sunning on the upper patio deck or going down to the beach to take gradually longer swims in the warm Caribbean waters. \n\nShe made a few phone calls to report to her bosses that she was \"Ok, but taking a rest for awhile\", which they seemed increasingly unhappy about. Apparently, AlphaGirl was giving them some fresh hell about her absence. \n\nIt's far too complicated to explain the entire situation between earth's only two acknowledged Superheros. BetaGirl is a very public figure, saving the world for democracy every single day, with extra matinee performances on weekends. AlphaGirl, on the other hand, is a nearly mythological figure that remains very hidden and squirreled away in some government facility, mostly because she's currently bloated to the size of a very large double-decked bus or a decent sized whale. Far too huge to attend to any of her own biological needs unaided. Apparently she's now constantly fed mechanically via tubes with other devices to process her voluminous waste products. She's even smarter than I am apparently, and much crazier, with vast mental powers that boggle the imagination, but that doesn't stop the government from using her to do the majority of their top level secret planning. In effect, she's become her own branch of the government, with every important agency both dependent upon her... and scared out of their wits by her.\n\nBetaGirl is the only person that AlphaGirl speaks of as a friend, rather than as a 'subject' and she's the one they bring in to straighten AlphaGirl out whenever she slips into an unusually deep psychotic raving state. Together, these two were the only real survivors of an especially ill-considered \"super soldier\" bio-med program in the early 1960's. Most of the subjects (possibly involuntary) died, and the rest went either batshit crazy (and unusable) or developed powers that were uncontrollable (and thus unusable). I got the definite impression that some of these poor souls were locked up for good next to my cell in that very deep and secret government prison. I made a note to start looking into that theory... no one deserves that kind of treatment.\n\nAlphaGirl and BetaGirl were the only two successes, gaining incredible super powers. BetaGirl additionally seems to have been frozen in time, and appears to all eyes to be an attractive and buxom blonde in her mid-to-late twenties. She hasn't aged a day or grown a grey hair in over forty years!\n\nHer handlers didn't like the idea of BetaGirl being off of the reservation one little bit, but they'd never be able to trace down the signal of my Internet phone system that bounces off a couple of dozen proxies and comm satellites with periodic stops through the telco's of several of the world's least advanced shitholes. My guest had the good sense to keep her whereabouts private, at least for now. Good, I didn't want to deal with any black helicopter 'rescue' squads this particular week. I admit to being a fairly vengeful person, but I'm definitely not bloodthirsty. I've wrecked a lot of real estate over the years \u2013 but I haven't knowingly hurt anyone else in the process.\n\nI guess that is why I'll never make a very satisfactory Evil Overlord... I lack the sense of \"Total Commitment\" that one would have to make, to accept the death of innocent victims to complete my plans to their utmost capability. Really, I suppose it's just time to quit the game entirely, after all, just how many card carrying mad scientists have full Presidential Pardons? Maybe it was time to stick to making better toasters and quit trying to save a world that didn't seem to really want to be saved after all. Plus I definitely need to start getting laid regularly... I'm getting to be almost thirty!\n\nThe idea of BetaGirl as a potential romantic partner didn't quite enter into my head until she walked into my office one afternoon wearing a skimpy bikini she had ordered from Wicked Weasel and had express mail delivered to us. Being a very rich evil scientist, I can afford daily courier service from a PO Box in Miami straight to my island door every afternoon. I still buy and sell a lot on eBay (you'd be surprised at the obscure but useful scientific equipment you can buy there) and for many years had a Powerseller account under the name of 'MadScientist', and do 99% of my normal shopping via mail order catalog. I have hundreds of catalogs piled up on a table next to one of my 'play' computers and BetaGirl soon found herself a new hobby - shopping therapy online, doubling my catalog collection with new additions from women's wear and shoe vendors.\n\nThe bikini didn't leave much to the imagination, but I'd seen all of her charms on display already when I rescued her on the beach, but her outfit really did fuel the imagination.\n\n\"What evil plot are you concocting now... and why don't you like me very much?\"\n\nTalk about two loaded questions! The first one at least was easy to answer.\n\n\"Nothing new and or exciting. Just tweaking my computer code that will destroy the evil PayPal and its' loathsome parent eBay once and for all, unless they turn from the dark side and reduce their seller fees and dismantle their DSR's of unspeakable evil. Soon, my lovely... soon. Mwuahahaha!\" Sorry, I just couldn't resist wringing my hands together and uttering a maniacal evil laugh. The effect would have worked out much better if I had been wearing all black clothing, not to mention a cape. A week of beard stubble, Hawaiian shirt and shorts didn't quite carry the same effect.\n\nActually, that particular evil plan was working quite well. A few points lower and I'll soon be able to start a proxy fight to grab secret control of the company and sell it off to either Google or Microsoft, or better yet Amazon.com. Hehe... eBay wants to act like Amazon, then let them be assimilated by the real thing, instead of becoming a loathsome imitation.\n\nShe gave me a bitter frown and I relented by giving her a more truthful answer.\n\n\"Actually, I've been a very good boy, I have... lately since my Pardon, and I haven't plotted against a single corporation or government entity... not but what they aren't mostly the same thing nowadays. Today, at this very moment, my thoughts are on making a killer mid-season Fantasy Baseball trade to dump some of my extra power hitting for some quality pitching, especially a relief pitcher that can get me a few Saves before going on the DL for the rest of the season. As for why do I not like you? Actually, I rather do... especially in your current attire, although I'm sure you need no reminding that that particular fabric becomes quite transparent when wet, as it currently is. Which leads to the intrusive and embarrassing question of how you managed to shave so completely and smoothly down there when you had your powers, assuming that particularly intimate hair was as invulnerable as the hair on your head.\"\n\nActually, come to find out, she couldn't shave or even trim that particular hair then, which meant that she had to be relatively conservative in her costume choices, or at least how her underwear covered her extremely bushy crotch. Her nurse had helped her to shave in exchange for returning the favor, and I decided I really didn't need to know all of the other intimate details... it made me wonder just how friendly she had become with her nurse.\n\nSome friendly exploration not withstanding, BetaGirl, or rather just \"Mona\" for the likely future, was very heterosexual and quite willing to apparently pursue a relationship with me. Her super powers had made sexual relationships with normal men extremely frustrating. For example you certainly wouldn't want her to give you a blow or hand job and risk losing your member entirely. Asking her to clench her vaginal muscles tight was just asking to get it crushed instead. I didn't even want to think about how anal could be accomplished... or the likely after effects. Plain and cautious missionary sex was possible but boring, but her bouncing on top of you could be hazardous to life and limb. Sex while flying? An interesting theory, but the physics make it very difficult and probably nerve wracking. In short, Mona had been just about as sexually deprived as I had been lately, and was finally now possessed of the ability to do something about it. \n\nI think it was her that towed me into her bed by my ears, but I'm not quite sure. Her skimpy thong bikini definitely never made it out of my office.\n\nOur first time together was very, very good. Round two was even better. Round three was such a distinct improvement that we skipped dinner and had breakfast in bed together the next morning. No, the nurse didn't join us. I swear everyone has a dirty mind!\n\nIt took a few days, but we discovered that we could talk to each other about things during the odd moments when we weren't having hot nasty sex or thinking about having more hotter and even nastier sex later while we were romping nude on the beach. Both of us were exceptional in our own way, and neither of us had any social peers, let alone real friends. We were both just too... different. We lived such unique and singular lives that only another similarly gifted (and maladjusted) individual could understand and truly accept the other for what we both were. The combination of one very lonely ex-superhero, combined with an equally lonely reformed mad scientist and former would-be evil overlord made for interesting chemistry... but it worked somehow. Together we felt like we 'belonged' for the first time in our lives and that life was really worth living, and not just something to be enduring.\n\nThen I had to nearly go and ruin it by 'curing' her.\n\n****************\n\nSince the meteor incident, I had been very curious about what had actually taken place at those last moments before I destroyed the meteor with my particle beam weapon. The best we could figure was that BetaGirl had been right there underneath, trying to force this irresistible force away... but largely failing, until my blast struck them both and blew everything apart. She came crashing down into the sea, virtually powerless and merely mortal now.\n\nThis led me to think that a reversal of the magnetic polarity field for my beam might restore her powers. Heck, this sort of thing always worked on Star Trek. It took a few months, but I built a reduced scale weapon that could channel its energy into a well-lined room. In theory, if I carefully controlled the gradual increasing level of power, BetaGirl could regain at least some, if not most of her powers. She was surprisingly reluctant and reticent about this opportunity to become her old previously powerful and possibly immortal self once again. She wanted to think about it, and she did for several more long weeks until guilt drove her to decide to give it a try.\n\nShe didn't miss the long decades of government work, largely black book stuff that she was often ashamed of, but she did resent not being able to perform even minor feats of rescue. Ships were sinking, planes were crashing and fires were breaking out in buildings with children trapped helplessly on the top floor without hope of rescue... and no BetaGirl to come and save the day. It's hard to watch people die on TV and know that you could have positively saved them... maybe. In the end, she decided that she needed to try and become BetaGirl once again, if only to help those in need once more.\n\nWith her powers gone, there was more than a fair chance that I'd accidentally microwave her to a burned cinder instead, but everything worked out just fine and after a few minutes at the lowest intensity she could tell that it was going to work. We slowly built up the power, as we would decompress a diver with the bends, and a day later, a fully restored BetaGirl was once again ready to go off and save the world. Mona was going to have to take the backseat once more.\n\nI'd like to say that things worked out with no problems, and that BetaGirl did her thing during normal business hours and then came home to be just Mona for the night, but it didn't quite work out that way. Her Government handlers were ecstatic to have her back, enough so to publically giving me the front page credit for \"curing her injuries from the meteor\" but they didn't like the idea of giving up any sort of control over her. She held firm, though, and worked out a sort of contract employment arrangement for national security critical jobs only, so that she could devote the majority of her time to more 'public service' and rescue jobs.",
        "Our sex life took an immediate definite hit downwards, and then began a slow death spiral to the bottom. It was no one's fault \u2013 we both wanted it to work... but sex with a super-powered partner was wasn't very ergonomic, and we mostly quit trying after my second hospitalization for internal bruising and a few odd broken bones. \n\nThis was going to be tragic, but our relationship just wasn't going to work without some sort of minor leveling of the playing field. I toyed with the idea of giving myself super-powers, but then decided that I wasn't quite cut out for the job, and should just stick to what I do best. Invent. So I did.\n\nIt took awhile, but when I next invited BetaGirl over for dinner I had a slight surprise for her... a sealed bedroom in the heart of a complex magnetic inhibiter field that 'temporally' muted her powers down to a safe enough level for us to enjoy sex together without frying my own body. It worked to perfection, and saved our sex life and relationship from oblivion. Mona has a place to come out and be herself again, even for just a few hours. B&D has certainly become much more interesting for her when she can't instantly break out of tied knots and can actually feel a good spanking on her ass.\n\nNext, Mona wants me to build the new Turkish island vacation home with an even larger field that would encompass the entire house, so she could enjoy being 'normal' for up to several days at a time, but be able to run outside and immediately regain her powers and fly off in the event of an emergency. This would give us the best of both worlds, and if this experiment succeeds, during our first candle lit dinner in our new home, I'll ask Mona to become my wife... and I think she'll accept!\n\nAs for the issue of her possible immortality, that's my current major research project and already I've made several breakthroughs studying how Mona's cells self-regenerate themselves. I think in another year or two, I'll be able to alter mine to do the exact same. I can think of a lot of government assholes who won't like this idea much either, or will want it for themselves, but I won't tell if it you won't.\n\nTHE END\n\n********\n\n<CENTER>Author's Afterward:\n\nThank to my usual crew of editors and advance readers! I've always wanted to write a superhero story. This is a fairly silly one, but I enjoyed writing it. Later, I'll give a try and doing a more serious one, but let me know if this amused you :)\n\nI have nearly fifty published stories so far and I am slowly getting them re-edited and posted here. \n\nI enjoy receiving and replying to reader emails and my Blog can be read by clicking on my Bio or my Name just below, then clicking the Contact tab and then Webpage.</CENTER>"
    ],
    "authorname": "Stultus",
    "tags": [
        "comic",
        "superhero",
        "romance",
        "romantic"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/and-soon-my-evil-plan-ch-02"
}