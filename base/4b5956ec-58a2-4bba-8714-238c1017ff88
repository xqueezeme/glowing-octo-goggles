{
    "title": "Speech and Debate Pt. 07",
    "pages": [
        "When my eyes opened on the morning after my first workout session with Daniel, I wondered if I had been transported to some kind of medieval torture chamber while I slumbered. Or if the Black Death had made a sudden come back and ravaged my body overnight. Maybe small pox? Or Polio? \n\nI was engrossed in a pain the likes of which I had never experienced, never even thought possible. Each of my limbs felt carved of wood, every joint stiff and unbending. Even my skin seemed to hurt. If opening my mouth to scream hadn't raised the specter of even more pain, I would have cried out to anyone in a five mile radius.\n\nIt took several minutes for the panic of my condition to wear off and to make an attempt at physical movement. It was not a pleasant experience, but I eventually maneuvered my legs to the floor and stood on what felt like 100-year-old dry twigs that threatened to break under the weight of my body at the slightest provocation. I shuffled to the bathroom, a journey of about 30 feet that took at least five minutes, all of which I spent cursing Daniel and his insufferable weight training machines. \n\nBurn them all! \n\nI had nearly reached the desired oasis of the bathroom, with the promise of scalding hot water and steam to loosen my body back towards a human state when my mother called up the stairs to me.\n\n\"David!\" she cried. \"Are you up? Is that you?\"\n\nIn agony, I raised my hand to my temple, suddenly very aware that not only was my body on fire, but my head also throbbed inside my skull. A lovely sidecar to the hateful cocktail of suffering I had morphed into.\n\n\"I'm up,\" I croaked, steadying myself against the hallway wall. \"Jesus, Mamma, do you have to scream!\"\n\nHer response was immediate and Southern to the core.\n\n\"Watch your mouth, young man!\" she admonished. \"I brought you into this world and I damned sure can take you out if you don't check that tone of voice!\"\n\nI actually considered taking her up on the offer. I eventually decided against it.\n\n\"Sorry, Mamma,\" I said as humbly as I could. \n\nI was 18, but I could have been 45 and it wouldn't have made a difference. In the South, your Mamma is your Mamma, with all of the due respect that title entails. \n\n\"Your friend is here, Sweet Pea,\" she called, mollified by my filial response enough to no longer threaten my very existence with sudden termination.\n\nMy friend? Here? It's barely 6:00 in the morning?\n\n\"What?\" I asked, my throbbing head unable to make sense of the new information.\n\n\"Your friend is here,\" she called back again, obviously unhappy with having to repeat herself. She sighed mightily, as if raising me was suddenly a great burden and she wanted to make sure I knew just how much trouble I put her through on a daily basis, but in the loving way of mothers. \"Never mind.\" \n\nHer voice lowered and through the constant sound of blood in my ears I thought I heard her speak to someone downstairs.\n\n\"Go ahead up, hun. Second door on the right.\"\n\nIf I had been able to run, or move, or even crawl, I would have. My hazy eyes suddenly focused on Daniel's energetic and fully functioning body as he bounded up my stairs two by two. \n\nLike a goddamned gazelle. \n\nI stood, supporting myself against the wall in my pajama pants, torso bare, as he settled before me with a huge smile plastered across his face. Despite my body's ache for him, I wanted to punch him square in the jaw. If I could have felt my arms, I would have. At least, I like to think I would have.\n\n\"Wow, nerd,\" he said in his sultry baritone as he surveyed my humiliation, \"you look awful.\"\n\n\"I wonder why!?\" I snapped and immediately regretted the decision to raise my own voice as it echoed with terrible consequences inside my head and sent me reeling. Daniel's arm shot out to steady me. Amazingly, his touch seemed to have a calming effect on my muscles and head alike. \n\nHe flung his arm over my shoulder and turned me to lead me hobbling back towards my room. I would have panicked at him seeing it in such a disheveled state, but the harm was already done. What good would it do to rush ahead and throw my dirty clothes under the bed now? \n\nRush. HA! \n\nNow that was a thought.\n\n\"Come on. Let's get you up and moving.\"\n\nHe pushed me gently to my bed, and made no comment about the state of my room. My legs stuck out straight in front of me, my knees unable to bend as they should. My thighs felt as if I'd been whipped with bamboo sticks.\n\n\"I'm never working out again,\" I moaned as I fell back onto my mattress, laying across it in the wrong direction. I didn't even feel Daniel sit down beside me towards the foot of the bed, I was so wrapped up in the torment my body had decided to inflict upon me.\n\nDaniel's fingers wrapping into my right thigh made me wince. He pressed firmly and eased off. The pain lessened a bit, the blood beginning to work back into my legs. He worked my sore muscles, first my thighs, then bending to the floor to massage my calves.\n\nI tried my best not to sigh, but it was a hopeless cause. His fingers knew just where to prod and push, which knots to attack first. For once, his touch wasn't sexual or even emotional. It was healing. He drew the pain from my body, inch by tortured inch, his fingers a magic salve on my skin. \n\nThe fire I'd been burning in began to subside to a dull ache. My hips loosened so that I thought walking might be possible in the not too distant future. My arms and shoulders melted under his touch, my shoulders un-bunching and my lats relaxing so that I could actually breathe easier. I hadn't even realized I had been hunching in on myself through the pain, as if protecting myself from a coming blow, but Daniel soon had me straightened.\n\n\"Feel better?\" he asked after minutes of silence while his touch danced over, around, and through my muscles.\n\n\"Much,\" I replied, still laying on my back, but now able to raise myself onto my elbows. I stared at him for a moment, seeing him for the first time, the blinders of my torture removed.\n\nHe smiled at me, his hand rested warmly on my thigh, his thumb moving slowly over my pale skin. I crunched myself forward, uncaring of the blistering pain it re-awakened in my stomach, and kissed him. He returned the kiss gently and his grip tightened a bit on my quads.\n\n\"What are you doing here, Daniel?\" I asked when I pulled back.\n\n\"Just making sure you're okay,\" he said. I could tell that he meant it.\n\n\"That's very sweet of you, Daniel, but you didn't have to do that.\"\n\nHe chuckled at me.\n\n\"The little wooden boy I found in the hallway might suggest otherwise,\" he joked.\n\n\"I'm never gonna live this down, am I?\" I asked in my most dramatic fashion.\n\n\"Nope.\"\n\nWe smiled at each other again. \n\n\"Come on, Nerd,\" he said, suddenly rising from his seat beside me. \"We still got work to do.\"\n\nHe stood with his hands on his hips, looking down at me as if he actually expected me to rise up and match his pose. I felt better, yes, but not to the level of his apparent ease. I hadn't even worked as hard as he had last night in the gym, but he looked fit as a fiddle. \n\nHe must have noticed my confusion.\n\n\"Come on! Grab your books. My car is parked five miles down the road. We're going on a run.\"\n\nGrab your books. Right. Run? You should be committed. You are obviously dangerously insane. \n\nMy jaw worked but no sound came. Daniel grabbed my wrists and yanked me to my feet over my wordless protests. \n\nI'm not sure how I got dressed, much less how my books made it into my bag and onto my back. It all passed me by in a bewildered fog. Going down the stairs was something akin to a death march. The look on my sister's face as I shuffled to the door, my face painted in absolute agony, Daniel urging me out from behind, was humiliating. I would have to find some way to repay her when my body decided to return from vacation. \n\nThat first morning run took me nearly an hour. Daniel literally ran circles around me, chatting amiably about this and that, pushing me on and giving me words of encouragement and kindness at each new step. \n\nI prayed for a car to hit me. \n\nBetter yet, a Mac Truck.\n\nThe next three weeks passed in a similar fashion. \n\nMy strength increased little by little until I was only marginally dead when I awoke each morning. Daniel would arrive at my house, we'd jog to his car and he would drive me to school; or he would drive along side me in my Camry as I ran so I could drive myself the remainder of the way. Then the weight training sessions after school. \n\nI hate to admit it, but I began to actually enjoy the physical exertion. For the most part. I still don't recommend it, but no more will I judge those morning joggers and gym goers with so harsh an eye. There are benefits. \n\nOne of which, at least for me, was that I got to shower in the Varsity Showers every morning before school. \n\nWith Daniel.\n\nAs we settled into this daily morning routine, the showers at school soon became the biggest motivating factor in my quest for physical fitness. Each time we entered the Varsity Locker Room, still only dimly lit by a few flood lights so early in the morning and completely absent of the Varsity players it usually housed, my brain flashed to my first encounter with Daniel within those walls.\n\nThough my body ached, I was hard by the time I heard the water of the semi-private showers at the end of the room spring to life. Daniel adjusted the water temperature. It was a race to see which of us could strip off our clothes faster. Sometimes, in our haste to undress, we would forget an article or two of clothing and step into the spray, our bodies pressed together and arms grasping at each other, only to find the clammy wetness of fabric still attached to our skins.\n\nThough I wanted nothing more than to admire the beautiful curves of his body, to wash his skin with my tongue and hold him to me until the bell rang, the nearness of other students and the coming first bell always hung over our heads like a knife. It did little to deter us but it added a level of possible discovery and intrigue that was impossible to deny.\n\nDaniel had my back pressed to the tiles of the big open shower space, his hand working my aching cock in a slow twisting motion he was growing more adept at. His lips pressed to my neck and he softly moaned into me. My head rested on the wall behind me and I melted into his kisses, my hand grabbing for his uncut cock as the water poured over us.\n\nThe taste of him, the heat of his cock in my hand and mine in his as I kissed him in the open shower was like a drug. \n\nI was an addict and I didn't care who knew it. \n\nWell, that wasn't exactly true. A small part of my conscious mind still listened intently for the sounds that would indicate someone coming.\n\nWe knew we didn't have time for a full-on sexual encounter in our brief morning sessions, but my hands grabbed at his ass and stroked his cock, feeling his wet balls slap against my wrist as I urged him towards his release.\n\n\"Fuck yes...\" he groaned against me, his own manipulating on my cock never slacking.\n\nWe kissed fiercely under the water, his tongue roughly pressing for entry. I granted it easily, every time. \n\n\"Mmmmm,\" he moaned into me. \"Don't stop, I'm close. A little faster.\"\n\nI continued as he asked, increasing my speed a bit. \n\n\"Oh shit...yes...oh, god, I'm gonna cum soon. Fuck, you are so fucking hot.\"\n\nThat was the first time Daniel had mentioned ME as being the object of his desire; not just my cock or hole or some body part. \n\nThe effect was instantaneous.\n\nI grabbed at his ass for support and raised onto my toes as I felt my cum travel up my shaft.\n\n\"Ahhh,\" I yelled as quietly as I could, unable to tell him what was coming.\n\nMy cum splashed against his stomach and mixed with the hot water and mingled into his body hair. \n\n\"Fuck yes,\" he moaned and kissed me roughly. \n\nI felt his cock expand in my hand, my grip tightening in the throws of my release, his tongue making me go weak in the knees. His cum shot upwards and landed on my chest, right between my pecs, as he collapsed on to my body. His cock pressed into my own and my grip expanded so that I held both of our jerking tools in my fist, slowly milking the white cum from us both.\n\n\"Ahh...shit...ahhh...\"\n\nOur breath came in gasps as our passions ebbed and flowed together. Daniel kissed at my neck and his grip on the small of my back pulled me against him firmly.\n\nIt our orgasmic state, we hadn't heard the sound of the main locker room fluorescent lights buzzing to life, or noticed the change in light levels. We were still panting when we heard the voice.\n\n\"Is somebody in here?\" \n\nIt called and echoed around the empty space, a deep and manly tone.\n\nDaniel and I sprung from each others' embrace as if we had been burned by the sound. We immediately turned to face the wall and opened at least a foot of empty space between us. My cock leaked ropes of white from my still aching slit and they fell to the tiled floor and were washed away immediately. Daniel's own cock was arching up to the ceiling and bobbing as it pulsed out a final stream of his seed. \n\nAt least, with our cocks towards the wall and our bare asses facing the opening of the shower room, anyone who saw us would only see two guys showering before school. \n\nWe heard the footsteps enter the varsity locker room a moment later but we kept our eyes locked on the wall in front of us, knowing that even the slightest change in our posture could give away our very evident states of arousal.\n\n\"Daniel? Is that you?\" The voice came again.\n\nDaniel craned his neck around, careful to keep his body facing flush to the far wall and answered.\n\n\"Yeah, Coach. It's me.\"\n\n\"You're here early.\"\n\n\"Sorry,\" Daniel began. \"Just helping my friend here start up a work out routine.\" \n\nHe nodded his head in my general direction.\n\nI know it's stupid to think that I would have been invisible to Coach B as he saw the two of us from behind, but until Daniel had indicated, \"my friend,\" I held out the vain hope that I would somehow go unnoticed by the man.\n\n\"Who is that?\" Coach asked, his voice shattering any lingering hopes of my escape.\n\n\"Umm...Hi...coach,\" the word sounded odd on my tongue. \"Hi,...umm. I'm David.\"\n\nCoach B laughed at my flustered state, a full-throated, very friendly, and utterly masculine sound.\n\n\"I know who you are, David. You may not play a sport, but I make it my business to know just about everyone at this school.\"\n\n\"Sorry,\" I offered, unsure how to respond.\n\n\"Keep up the good work, boys. I'm sure Daniel can whip you into shape. He's one of my best players. You're in good hands. Lookin' good, the two of you.\"\n\nI stood and stared at the wall, my cock deflating rapidly from abject terror mixed with utter confusion at what had just happened. I listened as Coach's footsteps receded towards his office at the far end of the main locker complex. I could have sworn that I heard a deep chuckle under his breath as he left.\n\nI must have imagined it. Coaches didn't chuckle. Certainly not at two naked guys in the Varsity Showers, one of whom was as out of place there as an Octopus in the Sahara. \n\n\"What the fuck just happened?\" I asked Daniel, as I released the breath I'd been holding, afraid to so much as move in case the Coach should suspect...something.\n\n\"That was Coach B,\" Daniel said beside me. I noticed that I wasn't the only one to return to his flaccid resting state.\n\n\"Obviously, jack-ass,\" I retorted. \"Do you think he saw anything?\"\n\nDaniel shrugged and twisted to rinse himself in the shower spray. \n\n\"I dunno,\" he offered with little evident care in his voice. \"If he did, I don't think he cared.\"\n\nI was shocked, to say the least. \n\nIf the Coach had seen something, then Daniel and I were both at risk. Unless, as Daniel suggested, he truly didn't care. It seemed unfathomable that he COULDN'T have cared. We were two guys, after all. And this was the South. This kind of thing just wasn't done. Was it?\n\nMy classes with Daniel had become the highlight of my daily academic experience. We had settled into a comfortable routine in the classroom, one of teasing and furtive glances and secret text messages. I still kept mainly to myself most of the time, but even in my usually day-dreaming state, I began to notice that my classmates had begun to regard me with less hostility, or at least a different degree of apathy.\n\nThe attention that Daniel had begun to show me, never overtly really, just an acknowledgment of my existence, had served to awaken others to my presence as well. It was a disconcerting change but not an unwelcome one. No one invited me to the popular parties that weekend, or asked how my night had been, but neither did they simply stare through me on the sidewalk. Now, they would step out of my path if I was walking towards them. \n\nI wondered if Daniel had sent some kind of message to the popular crowd, through their secret popular club meetings I was sure they held on a weekly basis, alerting them to his protection of me. \n\nI doubt it. \n\nHigh Schoolers are often seen as brainless automatons a vast majority of the time, acting on unseen forces that the rest of the world has moved past and left to dimly recalled memories; but they are often capable of subtle shifts in behavior that most don't give them credit for. It is a strange and unique landscape.\n\nDr. Plarston's AP English Literature was still my favorite class, and not simply because Daniel had taken up residence across from me and teased me with near constant groping of his package and licking of his lips.\n\n\"So, as you know,\" she began one bright spring day some weeks after our return from Boston, as the air was just beginning to warm, \"the SAT's are coming up in two weeks. I know most of you have already taken them, and already applied to schools and universities, but this is the final opportunity to better your previous scores and impress the admissions departments.\"\n\nI looked at Daniel sitting across from me. I knew that he had gotten into the State University, just a few miles down the road and he was planning to attend. I was still undecided myself, but my options were all very good. Neither of us were in need of taking the SAT's again. \n\nI had gotten a 1580 (damned quadratic equations had tripped me up, yet again) and I was satisfied with my score. I didn't know what Daniel had gotten, but it was obviously enough to garner a spot at a decent school.\n\n\"I'm going to pass around a sheet. Sign your name on the left if you would like to receive some tutoring on the SAT's from one of your peers. And sign on the right if you are willing to tutor a fellow student,\" Dr. Plarston announced as she held up a clipboard and started it around the classroom. \n\n\"There is extra credit involved for both sides of the tutoring spectrum, so keep that in mind.\"\n\nThe bell rang, releasing us to our next class. I began to pack my things amongst the hustle and bustle of my peers doing the same. I didn't sign the sheet when it arrived at my desk, simply passing it along to the student behind me. I didn't need tutoring, I had no intention of taking the test again; once was more than enough. I doubted if anyone would like to spend any more time with me outside of class, even given my apparent rising social status.\n\nI had maneuvered my backpack onto my shoulders and was headed towards the exit when Dr. Plarston called my name.\n\n\"David,\" she called to me as she sat at her desk. I turned an walked towards her, unsure what she might need from me. I had turned in my assignments and my grades were still the highest in the class.\n\n\"Yes?\" I asked hesitantly.\n\nShe looked up from the clipboard that had made it back to her.\n\n\"I'm glad to see that you signed up to tutor.\" \n\n\"Pardon?\" I asked confused. I hadn't signed the paper.\n\n\"It's nice to see you reaching out a bit, opening up. I know High School can be a trying time, but I'm happy to see you taking advantage of your time here with us.\"",
        "\"I'm sorry,\" I began again, still flustered and totally unaware of what the hell she was talking about. \"I...,\"\n\n\"Now, there are several people to choose from, any of whom should count themselves lucky to have you on their team. Take your pick.\"\n\nShe held out the clipboard to me and I took it from her without thought. My eyes scanned the names, all of which I recognized. \n\nThere was Amanda of the popular girls, and Ian the jock. Amanda had even placed a little heart over the second A in her name, though that particular letter didn't call for the embellishment. I guessed she was envious of people with an \"i\" in their name and decided to insert her own Lisa-Frank-esque flare on her signature.\n\nThere, at the very top of the right hand side of the page was my name, under the heading \"Tutors.\" It was written concisely and neatly in blue pen. \n\nBut it was not my handwriting. I recognized the script immediately and scanned the left-hand column for the name I knew I would find there.\n\nSure enough, \"Daniel\" had written his own name third from the top on the, \"In need of tutoring\" side. I couldn't help but smile a bit. He signed me up to tutor and signed himself up to be tutored, even though he didn't need it. It was a small gesture, but one that I was sure was meant for me.\n\n\"I'll take Daniel,\" I said, my confidence rising in me as I handed the clipboard back. The double entendre was lost on Dr. Plarston, but I laughed to myself at my own witticism. \n\nDr. Plarston seemed surprised, her eyebrows arching high over her glasses as she took the clipboard. \n\n\"Are you sure?\" she asked. \"There are plenty of other people in need of...\"\n\n\"I'm sure.\" I said quickly, halting her apparent concern for my well-being if she placed me directly in the path of a jock. She was a smart woman. They don't just hand out PhD's willy nilly.\n\nI smiled my best smile to reassure her; my heart leapt in my chest as I watched her check off my name and Daniel's on the list before her. It was done. Dr. Plarston still seemed taken aback as I gave her my goodbyes and headed back out to my next class, a new found spring in my step.\n\nI essentially floated above the sidewalk as I made my way to my favorite reading spot, a big tree in the Annex courtyard, the same spot Daniel had first approached me on our first day back from Boston. He had promised me would find a way to see me. He had not disappointed.\n\nI was grinning like an idiot when I fished my phone from my bag and authored a text to Daniel. He stood about 10 yards away with his usual cohort of jocks. And Amy. Always Amy. She was like a bad case of acne I just couldn't seem to shake.\n\nDAVID: You don't know what you just did. You're in my world now, Jock-Boy. You may own the gym, but I got the brains.\n\nI sent the message. \n\nI watched as Daniel reacted to its delivery and removed his phone from his pocket. He let out a burst of laughter as he read it, making his friends turn towards him as he tried to regain his composure. Daniel didn't seem to pay them any mind as they looked to him for a reason behind his outburst. He swiveled his head around, searching for me. When he found me, my back leaning against my familiar tree, my eyes locked on his face just waiting for him to meet my eyes, he smiled broadly.\n\nNo one else existed when he smiled at me like that. I was surrounded by a hundred other students, but I saw only Daniel. Even Amy was like a ghost in my vision. \n\nHe turned his eyes to his phone and I watched as he tapped out his response.\n\nDANIEL: Bring it, Nerd. Game on.\n\nFuck. I nearly exploded right there. \n\nMy cock was growing in my jeans at a rapid clip. I'm pretty sure Daniel noticed my condition despite me trying to cover it with my books. Damned hormones. \n\nI leaned my head against the trunk of my tree and stared through the newly budding branches to the bright blue open sky. I let the light stream down on me and closed my eyes to bask in the happiness his reply had sent me spiraling into. \n\nSo few words with such a profound impact. I was definitely addicted. \n\nIn that near euphoric state, I heard Amy's voice break through my fog like an eagle screeching from on high. No, an eagle is too majestic. Her voice was more like that of a Harpy. \n\n\"Who the hell are you texting?\" she griped, reaching for the phone in Daniel's hand with her well-manicured claws. They seemed more claw-like now than I had noticed before.\n\n\"No one,\" Daniel said, drawing his phone away from her and moving out of her path as best he could. She nevertheless continued in her struggle to wrest the phone from him until he was able to put it in his pocket and physically pin her arms to her sides when she tried to retrieve it.\n\n\"Then why are you smiling like an idiot if it's just 'no one,'\" she demanded.\n\n\"Are you jealous or something?\" Daniel asked.\n\nOoohh. Bad move. \n\nI'm as gay as the day is long, but even I knew you're never supposed to bring up jealousy to an agitated female teenager. Not unless you have a well mapped plan of escape. \n\nAmy nearly went nuclear.\n\n\"WHY!? Should I be? Are you texting another girl? Who the hell is she?!\"\n\nDaniel paid her little attention as he gathered himself and began to walk away towards the Senior parking lot. Amy continued to harangue him from behind, desperately trying to get him to turn around and confront her. Daniel was having none of it. He just walked and let her rant behind him, only giving her the satisfaction of saying:\n\n\"It's not a girl!\" \n\nA few moments later my phone buzzed in my hand.\n\nDANIEL: First tutoring session. My house. 6:30 after baseball practice.\n\nIt wasn't a question. \n\nI quivered a bit at his commanding tone, even given my intellectual upper hand. I could get used to this power struggle.\n\nI had always been acutely aware of the relative cheapness of my vehicle when I parked next to the Mercedes and BMWs my classmates had been given upon that most sacred of teenaged milestones: the driver's license. But I was never more so than when I pulled into Daniel's driveway.\n\nI had to check the address I'd been given by the Upper School Administrator when I informed her of my tutoring plans, just to ensure that I hadn't somehow gotten turned around and ended up in Martha's Vineyard or some other haunt of, \"The Lifestyles of the Rich and Famous.\" \n\nBut I was in the right location.\n\nHis house was gigantic. My own modest home could have fit easily inside his garage, with its space for 4 cars as well as a window that hinted at some sort of large room overhead. A FROG, as they are called down south: Finished Room Over the Garage. \n\nThe yard was immaculate and expansive, with a wrought iron fence at the back that hinted at a large wooden deck and the bright unnatural blue of an in-ground pool. Was that a stone fire pit off to the left? Of course it was.\n\nThe main house itself stretched up for three visible floors, in a square boxish shape with large front facing windows and hunter-green wooden shutters to each side. The entry way was flanked by two massive columns that supported a large triangular brick and stone awning. The massive front door was banded in brass and surrounded by intricate frosted glass windows. \n\nI must have gaped as I exited my puny little car and headed up the front walkway to the main door. In my awe of this domicile, I didn't even realize that Daniel's familiar red Jeep wasn't in the driveway. Perhaps he had parked it in one of the copious garage spaces?\n\nMy stomach lurched when I pressed the doorbell and heard the sonorous \"bing bong\" echoing inside through what I could only assume were palatial marble lined floors and mahogany encrusted furniture. I was looking up to the ceiling of the front awning with its matching brass bound porch light when the door swung open in front of me.\n\nI don't know what I was expecting to find, but certainly not the diminutive woman who stood before me with an inviting smile.\n\n\"Hi, hun! You must be David,\" she said with a southern drawl that made it seem like she was singing her greeting to me. It instantly put me at ease.\n\nShe was shorter than me, maybe around 5'6\" with long dark hair that she wore loose around her shoulders, curled at the ends. Small strands of silver were dusted in it's ebony lengths, but it only made her appear wise, not old. She wore a brightly patterned silk scarf tied around her temples to keep her locks from falling into her face. And what a face it was. \n\nHer skin was smooth and olive complected, just like Daniel's. Tiny lines crept from the corners of her eyes and encircled her mouth so that she almost seemed to be on the verge of laughing at any moment and made her age an impossibility to guess. She wore a simple tan shirt and khaki pants that fit her well and showed off her athletic body. She was barefoot on the hardwood floor (no marble, thank god!) and her toenails were painted a bright purple, the only sign of the expected southern style.\n\n\"Umm...Hi, yes, I'm David.\" I said, my nerves making my voice break a little as I spoke. \"Is Daniel home?\"\n\nShe smiled at me and I suddenly realized why I was so nervous. Her brown eyes sparkled and danced in the setting sunlight. \n\nDaniel's eyes. They were nearly identical. The same soft brown, the same wide openness, the same full, dark lashes. Those eyes were truly windows into her being, as they were into her son's. And now, they showed only joy at meeting me. My nerves gave way under her stare and I eased even more.\n\n\"He's not home yet, sweetie. Why don't you come in and wait for him. He shouldn't be but a minute or two. You hungry?\"\n\nShe extended her arm to me and stepped aside to usher me into her home. I mumbled something in reply as best I could as I followed her in and she shut the door behind me.\n\n\"The kitchen is just down that hallway there. Let's get you fed!\" \n\nShe motioned towards the hallway in front of me, which seemed to stretch on past the limits of my vision. The massive nature of the house dwarfed her as she walked in front of me, her bare feet making little slapping noises on the shining wood floors. But she seemed a part of the place as well. In the coming weeks, I would find touches of her personality on nearly every surface of the place, from the art on the walls to the tools in the kitchen.\n\nIn no time, she had me seated on a high stool at the massive island that dominated her kitchen and she busied herself with making me a snack of baby carrots and hummus.\n\n\"We like to keep it healthy here,\" she joked as she set the plate before me.\n\n\"Oh, please,\" came an unseen voice from somewhere behind me. \"She's just doing that to impress you, is all. Don't let her fool you.\"\n\nI turned in my stool to search for the source of the voice, but saw only one long hairy lower leg draped over the back of a white couch that faced the largest TV screen I had ever seen. The owner of that hairy appendage remained obstructed from my view until he lifted himself up a bit to stare at me from his lounging position.\n\n\"Oh hush, Adam. I'm doing no such thing. You mind yourself,\" Daniel's mom clicked towards the man. \"Don't mind Adam, hun. He's home on spring break from Vanderbilt. I, for one, can't wait till he goes back!\" \n\n\"Hi,\" Adam called from his couch. \n\n\"Get up and say hello properly please, Adam,\" his mother admonished. Adam sighed as if this was a huge inconvenience on him, but rose and shuffled to the island.\n\nHe was taller than his little brother, of a height with me, but the resemblance was clear. Where Daniel was muscular and built for contact sports, Adam seemed crafted of longer, leaner stuff; not lanky, but built for...I don't know...the tour de France instead of Baseball? \n\nHe plopped himself down in a stool next to mine and repeated his greeting.\n\n\"Hey, I'm Adam.\"\n\n\"David,\" I said. I wasn't sure if I should hold out my hand for a proper shake, but thankfully Adam saved me from wondering.\n\n\"Mom, can I have a hot pocket?\" he asked.\n\n\"Fine. Just don't spoil your dinner. Your father will be home shortly and we will be eating as a family.\"\n\nAdam rolled his eyes and lumbered to the freezer to make his chosen snack while his mother continued to move around the kitchen, collecting supplies for the aforementioned dinner.\n\n\"So,\" Adam said in my general direction, \"you tutoring my little bro?\"\n\n\"Yeah. SAT's.\"\n\n\"Didn't he already take those?\" \n\n\"He can take them again if he wants to, Adam. Leave the poor kid alone,\" his mother chided, rising from a cabinet with a large stainless steel stock pot big enough to boil me inside.\n\n\"I'm only asking, mom. Jeeze!\" He pressed the buttons on the microwave and watched his chosen snack rotate inside. \"Didn't you go to Boston for the Nationals? Are you the same David?\"\n\n\"Adam!\"\n\nI stopped with a hummus laden carrot stick halfway to my mouth and stared at him. He stared right back at me, through another set of Daniel's eyes. His mouth curved up a little in a slight smile that seemed to say, \"the door is open, bud. What are you going to do?\"\n\nI cleared my throat.\n\n\"Yeah. I went to Boston. Not the same category though. I'm in actual Debate. Lincoln Douglass style. You know? After Abraham Lincoln. The 16th President. Emancipation Proclamation? Freed the slaves. Daniel does original oratory, but then you already know that don't you. Why wouldn't you? Not like he'd hide that fact. I was in Boston too. For what it's worth. I mean, we didn't win anything. The snow made us late? Remember? That snow storm? Never been so cold in all my life. Never seen that much snow in one place. So we didn't get points or anything so it didn't really matter if we went in the first place. But I was in Boston. It was my birthday too. 18th. In Boston. In the snow. But it didn't matter cause we were late...\"\n\n\"Christ dude, take a breath!\" Adam squawked as he did his best to hold back a laugh at my distracted ramblings. \"Nervous much?\" He waggled his eyebrows at me from across the room and winked.\n\nThe sun was apparently taking up residence in my face. I blushed from toes to hairline in a blink.\n\n\"You go to your room Adam Samuel, and don't bother David again! You hear me, young man? You get!\" \n\nHis mother did his best to save me, even using Adam's middle name, a sure sign of coming trouble for those of us raised down South. Adam shrugged his shoulders and shuffled from the kitchen down the same hallways I'd traveled, headed to some distant part of the manse I couldn't yet begin to fathom, a shit-eating grin still plastered across his face.\n\nI let my heart rate slowly come back to normal when I heard the front door open in the distance and then close just as quickly.\n\n\"David?\" Daniel called from afar, \"You here?\"\n\nWhen Daniel arrived in the kitchen and smiled at me seated at the island, I don't think he was aware of just how obscenely sexual he looked. To me at least.\n\nA navy blue baseball cap sat low on his brows but did nothing to hide his beautiful features. His white button down baseball shirt was unbuttoned and hung loosely around him, exposing a dirty and nearly see through white tank top. The black swirls of his trimmed chest hair poked from above the neck of it and I could just make out the outline of his dark nipples. His tight baseball pants were stained in orange-red mud on the knees and thighs but they hugged his legs in all the right places. His crotch was full and pulled up tightly in what I could only assume was the jock strap he wore beneath. The smell of his sweat and exertion hit me like a tsunami and I blinked in awe at him.\n\n\"Daniel! You look a mess! Why didn't you shower before you came home?\" His mother asked with a look of embarrassment plastered on her features. \n\n\"Because I didn't want to leave mu buddy David here at your mercy for any longer than absolutely necessary, Mother.\"\n\n\"Very funny,\" she scoffed lovingly. \"Now you boys head up stairs.\"\n\nI jumped from my seat, doing my best to hide my eagerness. Daniel's chest heaved in his sodden tank top and he stared at me with an intensity that I had come to recognize meant sexual games were about to commence. My body's own intensity began to build as well.\n\nDaniel jerked his head toward the hall way and I followed him as he turned. He very nearly ran towards the stairs and I bounded up behind him.\n\n\"Shower! Please!\" his mother called to our retreating backs.\n\nOne good thing about a sprawling mansion is that I got to walk behind Daniel for much longer than anticipated and watched his rounded muscular ass move beneath the stretchy white fabric of his baseball pants. By the time we neared his room, which I am still not sure exactly how to get to, I was already have erect and near crazy with madness at the urge to touch him.\n\nDaniel closed and locked the door to his room and immediately his mouth was on mine. He held me against him, unmoving, just breathing me in in one long inhale as our lips pressed together. He released me on the exhale.\n\n\"That's much better,\" he said. \"I was about to burst I wanted to kiss you so bad downstairs.\"\n\nThe long kiss and the compliment were more than enough to make me his. \n\nI steadied myself a bit against the emotions and looked around his room. In my fantasies, Daniel's room was covered in sports memorabilia and trophies of all shapes and sizes, satin ribbons in blue and red and yellow marking off all of his many athletic achievements. And those things were there, if in smaller numbers than anticipated. There was a queen sized bed with a grey plaid bedspread. A desk with a laptop and desk lamp. Windows. A dresser. Dirty clothes scattered around the floor. A bookshelf with old notebooks and a few novels. A bedside table and alarm clock. \n\nI don't know why I expected it to be anything other than what it was: completely ordinary. It looked almost exactly like my room, except for the size, the trophies, and lacking in books. But other than that, not so different from where I was comfortable. \n\nBut it smelled of Daniel. The room reeked of him and the scent that I had come to adore as being HIM. I took it in for a moment as he watched me. I was turning in small circles and gazing at everything when his arms captured me from behind, wrapped around my stomach and pulled my back into his chest. His lips pressed into my shoulder and I eased into his embrace as if I'd been born to reside there.\n\n\"Mmmm, that's nice.\" I said to the air.\n\n\"It is.\" Daniel kissed my ear and I shivered. \n\nHe kissed down my neck and I trembled. His hands moved from around my waist and he grabbed at my growing cock through my jeans. I sucked in through gritted teeth, the strength of his grip taking me by surprise, reminding me that I was almost always at his mercy. I throbbed under his palm.\n\n\"Daniel...I...,\" I started. His fingers found the button of my jeans and undid them with one masculine hand.\n\n\"Yeah?\" he breathed in my ear.\n\n\"Ohhh...I...I,\" my zipper came down slowly. Daniel flattened his palm on my belly and slid his finger down my hips and under the elastic of my boxer briefs. I felt the tips of them brush my pubes.\n\n\"You...?\" Daniel teased. \n\nHe grabbed my cock in his grip and tugged me from my pants, my dick bouncing into his palm in the open air as he gently pulled on me.\n\n\"Fuuuck...,\" I tried to resist it, but it felt like my skin was melding to his, like we were becoming one person as he jerked my cock from behind.\n\n\"So, what do you have to teach me, nerd?\" Daniel whispered, his teeth coming down on my earlobe as he said it through gritted teeth. I moaned and pressed my ass back into his growing dick, my body ready for him to take me right there.\n\nI don't know how I did it, but I somehow shook myself free of that trance and turned to face him, backing up by about 2 feet, a safer distance when I wanted to essentially pounce on him.\n\n\"You need to go shower.\" I said as firmly as I could. \"And we WILL be getting some studying done. You may not actually need SAT tutoring, but you could use some help in your other classes I'm sure.\"",
        "Daniel smirked at me, the outline of his dick clear against the white fabric of his pants. He removed his button down shirt and stared at me. I stared back, doing my best to hold my ground. \n\nHe lifted his sweaty tank top and stood there, with his chest exposed, the nipples I'd seen hidden now evident and erect. His fingers traced down his stomach slowly, feeling over the bumps and mounds of his own abs. He undid the button of his pants and pushed them to the floor.\n\nMy still exposed cock pulsed and a clear stream of precum fell from my slit to his carpeted floor. Try as I might to hide it, my body ached for him and betrayed my desires.\n\nHe stepped out of his pants and socks. As he had done that first night in Boston, he was in his white jock strap with the thick white band at the waist, his rigid member outlined beneath the cotton that strained to hold him back. \n\nHe made it jump and my eyes widened, my mouth began to water.\n\n\"Shower...,\" I commanded in a harsh whispered croak that he had to struggle to hear. It was all I could manage.\n\n\"If you insist.\" \n\nHe turned from me and walked towards the door in the far wall that lead to his own private bathroom. I dug my nails into the palms of my hand to keep from tackling him from behind as I watched the perfectly tanned globes of his ass, outlined in the thin white elastic of the jock. \n\nThe water started and soon I could hear Daniel humming contentedly to himself as he showered. I stuffed my sorely unused dick back into my jeans and zipped myself up, adjusting my hardness so it pointed north just as there was a knock on the door.\n\nI arranged my shirt to cover my boner as best I could and opened the door. Adam stood outside, leaning against the frame and blocking the exit with his entire body.\n\n\"So, you gonna make sure my brother gets a decent score?\" \n\nMy face was getting flushed again. He knew something about me, about Daniel, and he was enjoying tormenting me about whatever it was he thought we'd done.\n\n\"I'm going to do my best,\" I replied.\n\n\"You'd better.\" \n\nAdam made as if to return to wherever in the huge house he'd emerged from and I shook my head in confusion as I started to close the door on him.\n\n\"He likes you, you know,\" Daniel's older brother said, a seriousness coming to his voice for the first time since meeting him.\n\n\"Likes me?\" I asked.\n\n\"No need to play dumb, dude. He's been happier than I've seen him in a long time. Ever since he came back from Boston.\"\n\nI tried to conceal my smile, but failed and ended up studying the floor with mock intensity. Daniel had been happier since Boston? To a great enough degree that his brother had taken notice? My interest was piqued. \n\n\"What do you mean?\" I prodded, hoping he might illuminate me as to precisely how Daniel had changed since our fateful trip.\n\nAdam shot me a half smile, so very like the one Daniel used to turn me to goo. But he said nothing and continued down the hallway towards his unknown destination.\n\n\"What do you mean?!\" I repeated to his retreating back.\n\n\"Just take care of him.\" He replied, not turning to look at me. \n\nThere was a hint of reprisal in his voice, as if he would do all in his power to make sure that I did take care of his little brother. It was simultaneously frightening and endearing to see his love for his sibling so outwardly emoted. \n\n\"He's my little brother and I don't want to see him get hurt.\"\n\nAdam shuffled down the hall and into a side door without expounding further.\n\nI was still standing in the doorway, holding open the door when Daniel emerged from the shower. I had been so caught up in Adam's mysterious and semi-threatening missive that I hadn't heard the water turn off.\n\n\"Was someone there?\" He asked from behind me. I shook myself and turned, closing and locking the door behind me once more\n\nDaniel had a length of sky blue towel wrapped around his waist. His skin was flushed and beaded in tiny drops of water, as if he'd slept all night in a field and woke covered in dew. It dripped down his chest and his abs, pooled a little in his belly button and continued down his treasure trail. He breathed deeply and flexed his muscles slightly for my benefit, reveling in my expression as he did so.\n\nHis uncut cock bulged beneath the fabric of the towel, the long thick outline of his shaft just making itself known through the covering.\n\n\"Better? All clean.\" Daniel dropped the towel.\n\nHis cock was truly a thing of beauty. I'd seen it dozens of times now, but it still sent me to trembling every time he revealed it to me. It was just plumping up, swelling a bit but still flaccid enough that it hung over his massive balls. His dark pubic hair was trimmed and framed it perfectly. There were no tan lines on his waist, the olive skin of his stomach flowing seamlessly into that of his groin.\n\n\"That's a loaded question to ask me while naked, and you know it,\" I said low in my chest, my passions beginning to ignite, my body starting to tingle in anticipation of his imminent touch.\n\nDaniel walked towards me slowly, his eyes still holding my gaze. When he was just inches from me, I felt his fingers at the hem of my shirt. I didn't try to stop him as he lifted it above my head, my arms rising easily as he tossed it aside to pool on the floor amongst his own clothes. His palms rested on my chest as he stared into me. \n\nI could feel the warmth of his shower, the dampness of his skin as it made contact with mine. He pressed his fingers into me and slid his hands down my sides, over my ribs and my hips, and rested finally on my ass. He pulled me closer to him, my hardening cock pressing into his stomach through my jeans.\n\nI couldn't speak. Daniel was the leader here. We may have begun this with the ruse of me being the teacher and him the student. But this was his room, his place in this world, and he could do what he liked here. Including me.\n\nHis fingers found my button and zipper again, and pushed my jeans to the floor with ease, careful to never break my gaze as he disrobed me. As if hypnotized, I couldn't tear my eyes from his face, the chiseled angle of his jaw line and the strong, straight shape of his nose and full lips. I stepped from my jeans and was finally equally as exposed as he was.\n\nDaniel looked down, finally letting my eyes free, gazing at my cock as it rose from semi erect to full throbbing mast. When he looked back at me, he was smiling and there was an unmistakably hungry look in his eyes.\n\n\"Now that's much better.\"\n\nHe brushed a quick kiss across my lips and sank to his knees before me, resting on his heels, his hands gripping my hips and making sure I wouldn't escape.\n\nHis tongue licked at my slit and made a lazy circle around the rim of my cock as he looked up at me through his dark lashes. His hand gripped my shaft at the base and he guided me towards his open mouth, sucking me in and wetting me with his tongue. \n\nHe lavished my dick, running his tongue over it and swirling it around, teasing every nerve as he slowly jerked me with his strong hand.\n\n\"Daniel...your...oh, fuck...\" I was trying to tell him that his brother had spoken cryptically to me, but his tongue fluttered over the sensitive skin under my cock-head. He bobbed his head downwards and took half of me into him as I tried.\n\n\"Mmmm,\" Daniel moaned through his full mouth, one hand rolling my full balls in his palm like dice as he jerked me and sucked at the same time.\n\n\"Holy, shit...,\" I started, \" Daniel, Add...oh my god...Adam was he...ahhh don't stop that, do that again.\"\n\nDaniel's brown eyes looked up at me and he pushed himself further until I was nearly all the way down his throat, which he opened for me with ease. My fingers worked through his short black hair, urging him on despite my protestations to the contrary.\n\nDaniel bobbed on my shaft and worked his tongue in swirls over my head on the back stroke.\n\n\"Fuck! We have to study Daniel.\" I said, though it pained me greatly and I said it with only half-hearted enthusiasm. Half-hearted at best.\n\nDaniel pulled back from my cock and looked up at me from his position resting on his heels. \n\n\"We can study once you fuck my face and I taste your cum.\" He said as he jerked my saliva slicked cock. Those were his terms and he had stated them with no hint of uncertainty.\n\nHe opened his mouth again and pushed me all the way to the base. Watching my huge dick disappear down his throat and his desire for me to fuck his face and swallow my load still resounding in my head drove my academic pursuits from me.\n\nI grabbed the sides of his head and thrust myself into him. I pulled back and watched his eyes as I thrust back in. \n\nThey were so open, so willing. He knew I wouldn't hurt him, but he wanted me to use him.\n\nI obliged and picked up my speed, plunging in and out of his throat, ignoring the small gagging noises he made and the tears that began to leak from the corners of his eyes. I held him in place and forced my cock deep inside him.\n\nDaniel's own hand was furiously jerking his cock, pointed directly at his face. He groaned and moaned and his body writhed in time with my thrusts. \n\nI felt myself getting close.\n\n\"Shit, you want me to cum down your throat?\"\n\nDaniel nodded as I plunged my cock into him, just on the verge of viciousness.\n\n\"Are you ready for my load, jock boy?\"\n\nHe nodded again.\n\nI jerked my cock from his throat and aimed it straight at his face. His mouth remained open and his tongue outstretched, ready to receive his prize.\n\nDaniel leaned forward to be nearer the source of his coming meal and took my first shot right on his tongue and over his stubble lined cheeks. I let out a quiet roar as I pumped three more streams into him, Daniel finally closing his lips over my head and sucking the cum from me, licking at my slit and collecting it all.\n\nI watched him swallow my load as his lips kissed and licked my shaft from my tip to my balls. My breath came in gulps. I was growing used to the enhanced effect Daniel had on the size of my loads, but it was still sometimes too much to handle.\n\nDaniel rose gracefully and pulled my face down to kiss him. I tasted my seed on his tongue as he opened for me and explored my mouth. \n\n\"God. That was perfect,\" he said when he pulled back, my face still held gently between his palms.\n\n\"It was,\" I agreed. There was something I had been trying to tell him before he'd obliterated logical thought. What was it?\n\n\"I'm not through with you yet, nerd.\"\n\nDaniel put his palms to my chest and pushed me backwards towards his bed. I let him lead me, gentle push by gentle push, the grin on his face widening as I neared his intended destination. It seemed I could watch his intentions grow, watch the playlist of what he wanted to do to me and what he wanted me to do to him expand as we got closer to the mattress.\n\nMy knees bumped the footboard and all it took was one final shove for Daniel to lay me flat out on my back. My sensitive cock leaked an errant bead of white onto my stomach as Daniel crawled onto the bed, his knees to either side of my body.\n\n\"Did you like that? Gagging me with your big cock?\"\n\nHis arms rippled as he pinned my wrists over my head and pressed me to the mattress with a kiss, not giving me a chance to answer his question. His bare ass hovered just over my cock and my hips pressed up from the bed on their own, wanting, needing, seeking to be buried inside him again.\n\n\"See, there's a plan here, nerd,\" Daniel began, his face drawing close to mine, my wrists still held in his grasp. He kissed my clavicle and pushed his ass back so that my dick pressed into his crack.\n\n\"Mmmm...see, now that you've given me one load, it should take you a lot longer to give me your second.\"\n\nHis eyes sparkled in the light above me, afire with the wickedness of his plan and the new heights of pleasure he planned to push me, as well as himself, to and over.\n\n\"They call it milking, so I've read. I hope you didn't have plans for the next hour or two,\" he teased. \n\nHe knew and I knew that even if I had, I would have dropped them in an instant had he asked. \n\n\"You're going to fuck me long and slow. I'm gonna ride your cock till you want to explode. I want you buried so deep inside me I can't tell where I end and you begin. You understand me?\"\n\nI nodded, my mouth dry and my tongue stuck to the roof of my mouth.\n\n\"Good. Let's begin, Nerd.\"\n\nHe released my hands and flipped his direction quickly, placing the perfect rounded mounds of his ass directly over my face.\n\n\"Get me ready,\" He commanded, kneeling astride my shoulders.\n\nMy hands grabbed at his ass cheeks and spread them easily, his pink hole exposed to me again. My mouth watered and I was finally able to cleave my tongue from the roof of my mouth. I plunged it directly into him.\n\n\"Ohhhhhhh, yes.\"\n\nDaniel arched forward, his hands grabbing my thighs. I raised my knees to give him something to hold onto, to use to push himself against me.\n\nHummus and carrots had not been enough, so I ravaged his opening with everything I had, burying my face into him until I was forced to pull back for fear of actual suffocation. Daniel, for his part, used his new leverage on my knees to undulate his lower body, fucking himself against my tongue and pressing his hole into my mouth.\n\nA constant whine of pleasure eased from him and drove me on.\n\n\"Ooooo, finger...,\" he panted when he could catch his breath, \"fuck, oh my god, finger!\"\n\nI wet one long finger and pressed it to his hole. His ass pushed back against me and I slipped inside him as smooth as silk. I didn't even have to move my hand; Daniel took over the motion, riding my long, thin digit with ease.\n\n\"More.\"\n\nHe didn't say how much more, so I placed two more fingertips at his loosening hole when he pulled back from me. When he pressed back down again, he threw his head back in pleasure and he screamed so loud I thought for sure that his parents or brother would hear. The idea of being caught in the act only made it all the hotter. His sphincter squeezed all three of my digits tightly, and I could feel him convulse around me.\n\n\"Oh fuck David. Yeah, dude, fuck my hole...god it feels so good.\"\n\nI used fingers and tongue to fuck him, turning my digits inside and arching them towards his hard stomach, searching for that ball of nerves I knew would satisfy him. He began to glisten with a thin sheen of sweat, panting heavy and fast but loosening to my touch bit by bit. When I brushed his prostate, he collapsed onto my raised knees and seemed to have difficulty raising himself back up. His triceps trembled and I watched the normally strong muscles of his back and lats shake as he tried.\n\n\"Oh shit, David. I can't take it anymore.\"\n\nHe rolled off of me and flipped himself around, flopping his entire weight into me, pressing along the entire length of my right side. I turned to face him as much as I could and pulled his flushed face up to kiss him. Our cocks ground into each other, the sweat and steam of our passion making them slip and slide against each other while our tongues kept time for our two person sexual tango.\n\nI never wanted to move from there, never wanted to let him out of my arms. \n\nDaniel threw one massive hairy thigh over my legs.\n\n\"I want to look at you while you fuck me,\" he said while he continued to grind himself into me. \n\nHolding him close, I placed my free arm under his knee and hoisted his leg near my shoulders. He was bulky and muscular, but he was also more agile and flexible than that muscle might convey. His forehead pressed close to mine, our noses touching, his hairy chest heaving and bumping with mine, sensitive nipples hitting sensitive nipples. I held his leg up and thanked the heavens for my extra three inches of height. It meant that I could angle myself under him.\n\nDaniel reached between us and gripped my cock in one hand, maneuvering it with some difficultly until it rested right against his slick hole.\n\nHe kissed me gently and nodded into my kiss. I pushed forward and felt the head of my cock pop inside of him.\n\n\"Ahhhhhhhhh my god,\" Daniel moaned. His eyes fluttered closed and he bit his lower lip between his teeth. I loved being able to see his expression as I entered him. \n\n\"Mmmm...more.\"\n\nI pressed further and watched as his mouth opened as inch after inch of me pressed into him. I could feel his uncut cock pressed into my stomach begin to twitch and jump, coating my skin with his slick precum.\n\n\"Give it to me,\" he whimpered, his free hand grasping my neck in a death grip, smashing my face to his in a kiss full of violence and caring in equal and erotic measure.\n\nI finished my thrust and felt his hole settle onto my pubes. His ass spasmed up and down my shaft like the lights on a Test-Your-Strength-Sledgehammer-Game at the State Fair. Wave after wave of him, up and down and back again, squeezing me tightly.\n\nHis hips began to rock, but he had little range of movement here. I know he wanted it slowly so I started out that way. I used the weight of his body as my counterweight, allowing gravity to pull him back down to my hips as I thrust in.\n\nEach movement seemed to set him trembling anew.\n\n\"It's... It's...the whole time...It's too...,\" he was gasping for air, trying to speak but unable to find the strength as I slowly pumped myself inside of him and then withdrew from him, keeping only an inch or two trapped.\n\nHis cock was throbbing in a rhythm now, pressing into my stomach as his arms wound around my neck, trying to hold on to me as if he needed the support.\n\nI pushed in again and Daniel moaned. I felt his cock expand and the first jet of supremely hot cum squirt between our stomachs. Trapped there, he pulsed again and again, jet after jet of his cum smearing our torsos as we slipped and writhed into each other.\n\n\"Don't stop...keep going...it's the spot...the whole...oh...god baby, don't stop.\"\n\nThat word. He'd never said that word before. Nerd, dude, Bud. Those I was used to. He'd called me, \"baby.\"\n\nSomething snapped in me, some unseen gate opened and parts of me I didn't realize I kept hidden were suddenly flung into the light. Daniel continued to paint our stomachs with his cum, leaking between us to the sheets below.\n\n\"Say it again,\" I growled at him as I pushed my cock into him, quicker than before.\n\n\"Don't stop, baby. Oh. Fuck!\"\n\nI slammed myself into him again.\n\n\"Yes! Fuck!\"\n\nAgain I rammed myself in. \n\nI could feel him trembling, see his eyes closed tight and the grip of his arms around my neck as he held on for dear life. I began to pound his hole with all I could at my sideways angle.\n\nDaniel let out a wordless moan, his mouth hanging open, eyes glazed, fingernails digging into my shoulders.\n\n\"Don't...stop...don't stop...oh god, I'm gonna cum again...oh jesus fucking christ...fuck...don't...Oh fuck baby.\" \n\nHe drew out the last syllable of that final word as he began to ride another round of orgasm.\n\nI felt his ass clamp down on my pole as I sheathed it in him a final time. The word \"baby\" echoed in my skull and I felt myself empty into him, fill him entirely. I couldn't even moan as I came, only convulse soundlessly, my essence ripped from the depths of me and exploding into him.\n\nDaniel whimpered and whined as he wound himself in slow circles on my hips, feeling my cum smear against his insides, some of me leaking from his hole and dripping down my spent balls to the bedspread below. \n\nWe stayed like that for a long time, my cock pulsing my life inside of him, his hole squeezing me tightly, until our breathing evened and we slowly returned to normal. He eased himself from me with a satisfied sigh and nuzzled up next to my chest.\n\nI turned and glanced at the alarm clock on the bedside table.\n\n\"Sorry,\" I said.\n\n\"For what?\" he asked, \"That was beyond incredible.\"",
        "\"It took all of 23 minutes. You wanted to go for hours.\"\n\nHe laughed, his strong arm coming to rest over my chest and play lazily with my nipple.\n\n\"I'll let it slide this time. I may have over estimated how much pleasure I can take at one sitting. Those two damned near killed me.\"\n\nI could have fallen asleep right there, naked and satisfied on Daniel's bed, his soft black hair tickling my shoulder and brushing against my nose when I leaned in to kiss the top of his head. \n\nBut the universe is a cruel mistress.\n\nFor the second time in an hour or so, a knock on the door sent me scurrying to retrieve my clothes from where Daniel had removed them and frantically searching for my backpack. Daniel crawled easily from the bed and picked up a pair of boxer shorts, apparently at ease with near total nudity around whomever was on the other side of the door.\n\nBy the time they knocked again, I was sure they would hear me rustling to get dressed. Daniel gave me only a moment of breathing room, just barely enough time to zip up my jeans again, before he pulled open the door.\n\n\"Dinner's ready hun.\" Came his mother's voice. \"You two have a good study session?\"\n\n\"The best,\" Daniel said. \"I'll be down in a minute, Mom.\"\n\n\"David?\" she asked from the door, \"you're more than welcome to stay.\"\n\nMy heart pounded fit to beat the band, from my anxiety at almost being discovered naked in her son's bed, covered in his cum, my own leaking from his thoroughly fucked ass,AND the offer to stay for dinner.\n\n\"I'd love to, ma'am, but I really have to get home. My mamma's got her own dinner plans tonight, I'm afraid. Another time, I hope.\"\n\n\"Consider it a standing offer, Sweet Pea.\" She turned and headed back downstairs.\n\nDaniel closed the door.\n\n\"She likes you,\" he joked boyishly, that half smile giving me a run for my money again. \n\nCould I go for a third? Better not risk it.\n\n\"I'm glad. I like her too. Way different than I expected.\" I offered as I straightened myself and gathered my book bag on my shoulders. \n\n\"She's an old hippie. Peace, Love, and Sunshine, and all that stuff from the 70's or whatever,\" Daniel said, with a tone that hinted that he had already tried and failed many times over to understand his mother and her history but that it was a lost cause at this point. \n\n\"She's great.\" I made ready to leave.\n\n\"We're still on for our run in the morning, Nerd,\" Daniel informed me, not hint of question. Declarative statement.\n\nI rolled my eyes and held back a disappointed groan but nodded.\n\n\"Fine. See you in the morning.\"\n\nDaniel leaned forward to kiss me again, softly. \n\nWhatever this had become, wherever it had started, it was something entirely different now. There was emotion building up between us, a history and a past that could crush us if we didn't handle it carefully. I felt...something... for him, when he brushed his lips to mine. Something deeper than mere caring. \n\nIt was almost love. Maybe it was love. The Greeks say Love comes in many different forms. I am not sure what \"Love,\" this was, but it was growing rapidly. It was already to a point where denying it was beyond pathetic.\n\n\"Bye.\" Daniel said with a smile and turned back to his room to find suitable clothes for dinner. \n\nI made my way downstairs and to the entryway without much effort. I only got turned around once when I missed a connecting hallway and ended up in a room that I can only assume was designed for piano concerts of some kind, given the Baby Grand piano it housed. But I soon found the front door and was about to open it when Adam's hand on the handle halted my exit.\n\n\"Don't forget your jacket,\" he said, holding it out to me. In my haste to get upstairs with Daniel, I had left it on the stool in the kitchen.\n\n\"Thanks,\" I said, dropping my eyes to his feet, unable to look him in the eyes after my rambling and his mysterious warnings.\n\n\"Thank you.\" He put an odd emphasis on the second word. \"Sounded like you took good care of my little bro.\"\n\nHe smiled at me and winked again. \n\nI could have died right there. Adam KNEW.\n\nMy face felt like a furnace and I booked it past Adam and down the front walkway to my car in a flash. If my Mamma ever found out that I left without saying \"goodbye\" or \"thank you\" to my gracious hosts, she would have made it impossible for me to sit down for a solid month. \n\nDespite feeling my impending demise rapidly approaching, I woke the next morning and arrived at school with no negative consequences. The school day passed as it always did, slowly and with my mind reliving my exploits with Daniel in a vivid technicolor loop. My two periods with Daniel were becoming a welcome distraction and I silently thanked my mother for instilling a strong work ethic in me. I was somehow able to juggle my course load with my expanding sexual fantasies and distracted interactions with Daniel and not see a decline in my performance on any level.\n\nIn my final class of the day, while I watched the clock slowly tick down the minutes and seconds until my parole from my academic prison, as I'd come to consider it, since it kept me from my truly encompassing desire of Daniel, I was daydreaming of what lay beneath his jeans when a pastel pink slip of paper was placed on my desk by the teacher.\n\nI knew what that meant.\n\nIt was the \"official\" slip that meant a student was summoned before someone of authority. Someone needed to see me; the principal, a teacher, administrator.\n\nMy name was on the top in a neat script, and the lines underneath scribbled out my instructions:\n\nDavid,\n\nPlease come see me in my office ASAP after school today. Thanks. Coach B.\n\nPanic took hold immediately and I looked around the room like an animal caught in a trap. There were still five minutes left of class, and in those five minutes, I imagined every possible horrible scenario that was surely about to come crashing down around my ears.\n\nAdam had somehow told the Coach what he suspected of me and Daniel. Coach was going to put an end to the distraction of his star athlete. Daniel's parents would be in the office when I arrived. They would scream at me for corrupting their son with my homosexual ways. Daniel would be there, unable to end our dalliance himself and turning to his Coach and mentor to bring us to an abrupt end. \n\nOver and over they played in my mind, always ending with me alone, standing against several very angry and hate-filled adults who judged and sentenced me, leaving me beaten and broken, lower than I'd ever been before.\n\nI wanted to cry, to scream, to run and hide. I was in fight or flight mode, full-scale.\n\nThe bell finally rang and I lifted myself on shaky legs and made my way to the courtyard. \n\nCould I just run to my car and pretend I hadn't seen the paper? Would the Coach call my house? Were my parents already in his office right now?\n\nMy body carried my mind like a snail in its shell, stumbling towards the Gym Complex. I felt like people were talking about me as I walked, like they knew where I was headed and why. They would surely be there to witness my downfall. How could a nerd like me expect to remain on his rising social path? I would get what was coming to me for deigning to reach above my station.\n\nNumbness eventually settled in and like a living coma patient I ambled towards my final punishment.\n\nThe two dozen or so times I had been in the Locker Rooms, all of them in the company of Daniel, a guide and protector in the strange realm, there had been no one else present. When I opened the heavy double door and shuffled in, I was met with a vast array of my athletically gifted peers, all in various states of undress.\n\nThere were the expected quick movements to cover themselves under the gaze of my gay eyes. Towels were wrapped quickly around bare waists and hands covered teenaged packages. I paid them no mind. They could have been in the midst of the worlds most intense gay orgy and I wouldn't have noticed a thing.\n\nThankfully no one spoke to me as I wound around my classmates. They must have been as surprised to find me there as I was to be there. They all towered over me, or seemed to despite their actual height. These were the top echelon of this school. I was in a forrest where every tree could, would, and sometimes had made it their mission to torment me. And I was willingly, in so far as I had a choice in the matter, placing myself on their turf and at their mercy.\n\nMy eyes must have been as wide as saucers, but I saw nothing. I was nearly to the far door where I knew I could find Coach B's office and where my fate lay. I passed the opening to the Varsity Locker rooms without noticing.\n\n\"Hey! Nerd!\" Daniel's voice shouted from off to my right, echoing in the open spaces.\n\nI turned to him, my body naturally responding to the sound of his voice and the pet name he had lavished on me since our first night together. Even in my zombie state, Daniel still held sway. \n\n\"Woah, David. Are you okay?\" Daniel asked as he approached me. He was naked from the waist up and wore a white towel to cover himself. My lower lip trembled. \n\nI would not cry in front of him, not in front of him or his jock confidants. \n\nI. Would. Not.\n\n\"I...I'm...\" I stuttered, unsure if I should speak or what to say, terrified that speaking would let loose the floods I was desperately keeping locked inside be with everything I had.\n\nDaniel's strong hands rested on my shoulders and squeezed gently, a sign of encouragement. He had come to recognize when I was on the verge of something new, something terrifying; in his growing connection to me, he sought to make it better. I could have kissed him for it. If it wouldn't have meant being torn limb from limb by the entire varsity baseball team, that is.\n\n\"You'll be fine,\" he said quietly to me. A few pairs of eyes turned towards us, Daniel's hands on my shoulders and his gaze holding mine. I trembled at the openness of it all, the vulnerability. \n\n\"Coach B is a good guy. You've got nothing to worry about.\"\n\n\"But what if he...what if...,\" my mind started the horrible montage of all the ways this could end terribly. Then I realized that Daniel...\n\n\"Do you know why I'm here?\" I asked, suddenly aware that he was not at all shocked to see me here where I never should have been. Daniel smiled and winked at me.\n\n\"Coach is waiting for you. Chin up, Nerd. Don't worry.\" \n\nHe turned from me with a gentle shove in the direction of Coach B's office. As he walked back into the Varsity Locker room he dropped his white towel and sauntered slowly to his locker, making sure I got a full view of his muscular back and perfectly round ass as he moved.\n\nEven that site didn't completely erase my fear. \n\nIt helped. A little. Okay, more than a little.\n\nI knocked timidly on Coach B's door and entered when I heard a firm, \"come in.\" \n\n\"David,\" Coach B said, seated behind his utilitarian desk, surrounded by file cabinets and shelves full of trophies and ribbons from his distinguished career here. \n\n\"Good to see you again. How've you been, bud?\"\n\nWell, that certainly wasn't what I had expected.\n\nHis voice was friendly and open. And he'd called me bud. Did he not remember me from 9th grade P.E and the humiliation of my legendary attempt at anything involving coordination of any kind? \n\n\"I... I'm okay, I guess. Coach.\" The word still felt foreign to me. \n\n\"Thanks for stopping by,\" he said. \"Have a seat. I have a proposition for you.\"\n\nThat could mean anything. I could still be in for a world of hurt. I numbly took a seat in one of the two folding chairs he set up across from his desk. I kept my hands on my knees and tried my best to stop their trembling from becoming too noticeable. I took a deep breath and readied myself for the blow.\n\n\"As you may know,\" Coach B began, \"Jason is out for the rest of the semester with a case of mono.\"\n\nI had heard about Jason's unfortunate medical dilemma. We all had. He had made the mistake of going to a party with the infamously held-back walking petri-dish of virus and bacteria known as Katy. I was of the opinion that he got what he deserved, but I kept that to myself.\n\n\"Yeah,\" I said, keeping my reply short, sweet, and too the point.\n\n\"Well, Jason is...was...the Varsity Baseball Team Manager. Now I have to replace him for the rest of our season, which as you may or may not be aware, starts this coming weekend. I was wondering if you might be interested in the position?\"\n\nHe let the question hang between us for a while. I had come expecting to be demolished, but instead I was offered a job. Had I fallen through a worm hole on the way here and landed in bizzaro-land?\n\n\"Ummm...I...\" I stammered in my haste to say something, but unsure what to say. \n\nCoach B rescued me from my ramblings.\n\n\"You'd get a uniform, of course. First initial, Last name. Take care of travel arrangements, ensure the equipment is packed and stored well, make sure everyone has what they need. Basically take care of the team when we travel and when we play here at home. There's some math and stats involved as well, but as I understand it, you far surpass Jason in that field already, so I think you'll pick it up pretty quick. What do you say?\"\n\nMy mouth hung open.\n\n\"Did I mention, when we travel, everything is covered? And we each get private rooms.\"\n\nI wasn't sure what he was hinting at, but there was something in his tone that indicated he had just sweetened the deal with that offer.\n\n\"Why me?\" I asked and was just as stunned as him to hear the words come out of my own mouth.\n\n\"Daniel tells me you are a very...capable...young man and we'd be lucky to have you.\"\n\nHe stared at me over folded hands. \n\nHe knew. I could tell that he knew. Why wasn't he getting angry, yelling, screaming, shouting and calling me names?\n\n\"Individual. Rooms.\" He repeated each word slowly, enunciating them to the fullest.\n\n\"Sure,\" I said. It wasn't until I saw him smile that I realized I had just accepted his offer.\n\n\"Good,\" Coach B replied as he shuffled some papers around on his desk. He found what he was looking for and handed the sheet of paper across to me.\n\n\"Here's a general schedule. We'll get the rest of your paperwork and uniform specifications set up tomorrow after practice. You'll start tomorrow after school. 3:45. Cool?\"\n\nI held the schedule and glanced down at the list of times and places. Times and places I would now be spending with Daniel. I felt the smile creeping up my face.\n\n\"Very cool,\" I said.\n\n\"DANIEL!\" Coach be suddenly roared, startling me a bit so I dropped the paper and had to scramble to pick it up as it floated to the ground.\n\nDaniel's bare torso poked through the semi-cracked door. I had forgotten to close it behind me in my nervousness upon entering.\n\n\"Yeah, Coach?\" He asked. \n\nI turned to see his face, shoulders and chest in the doorway, the rest of him still in the locker room. He met my gaze and winked at me. I smiled back at him. I would have to think of some way to repay him for letting me suffer in my head when he obviously already knew what this meeting had been about. My cock began to swell in my jeans as I thought of the possibilities.\n\n\"Made a good call on David, here,\" Coach said. \"He's gonna be our new team manager.\"\n\n\"Oh yeah?\" Daniel said with mock surprise. He maneuvered himself into the office and I was faced with the full glory of his body. He wore his baseball jock and something I would come to know as a cup. But that was it. His hands came to his hips and he expanded himself to his full height and girth. \n\nHe never looked at me, but he knew exactly what he was doing. He was showing off for me. His abs tightened and I watched the muscle ripple down the lines of his adonis plate and gently shift the bulge in his jock.\n\nMy mouth went dry again.\n\n\"It will do us some good to have a little brains amongst all of y'alls brawn.\" Coach said. \"Maybe he can make y'all shower more too. The smell of you is nightmare inducing sometimes.\"\n\nHe chuckled at his own joke. There was truth to his statement. The smell of the locker room now that it was full of jocks was more...pungent...than when Daniel and I came here to shower together in the mornings after our runs.\n\n\"I'm glad it worked out,\" Daniel said as he extended his hand towards me. I rose from my chair to take it. I met his eyes and refused to break that gaze. It was something I never would have thought possible, not in a million years, but I had just been ushered into his world. I was a part of it now, truly a part of it. \n\nAs mind boggling as that was, I was looking forward to the possibilities. \n\n\"I look forward to working with you, Nerd,\" he said, taking my hand firmly in his.\n\n\"You too, Jock.\" I shook his hand with equal firmness and watched his eyes widen a bit at my show of strength.\n\nHe had opened the door for me. \n\nWith that handshake, I stepped through it with new-found confidence and into a strange and unfamiliar world."
    ],
    "authorname": "DAMackey",
    "tags": [
        "shower",
        "anal",
        "rimming",
        "cum",
        "nerd",
        "jock",
        "jerk off",
        "sports",
        "highschool",
        "tutor"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/speech-and-debate-pt-07"
}