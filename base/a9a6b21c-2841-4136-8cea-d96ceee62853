{
    "title": "The Damp, Gray Gone Ch. 02",
    "pages": [
        "Introduction. Okay, if you thought Part 1 was long, then this one's longer. Like I said, though: There only seemed to be two logical cutoff points. The good news for you, the reader, is that you only have to suffer through three boring chapters instead of four.\n\nAs luck would have it, I noticed in a comment to Chapter 6A of WWWM that it looks like Chapter 6B is being released at about the same time as this story is coming on line. (P.S. It's about time, DQS!!!) If any of you are like me, you'll be too busy reading about and analyzing how the Angel of Death has survived the nutjob cop to spend much time even thinking about this. Still, if you do have a few moments, I'd appreciate your comments and thoughts.\n\nThanks again. \n\nCHAPTER EIGHT\n\nWe were up bright and early the next morning.\n\nActually, Kyle was up bright and early, and he was doing his best to get me moving along as quickly as possible.\n\n\"Settle down,\" I said with a mouthful of toothbrush.\n\n\"But Dad,\" he said, standing next to me and combing his hair again. The kid had a thing for neat hair. \"You promised.\"\n\n\"Nothing's gonna be open for a while, little man,\" I said, rinsing the toothpaste from my mouth and spitting it into the sink.\n\n\"Yeah, but--\"\n\n\"But nothing,\" I said, rubbing scalding water on my cheeks to soften the stubble for my shave. \"We'll have some breakfast, then we'll start searching for the perfect dog. Fair enough?\"\n\n\"Fair enough,\" he said, running out of the bathroom to parts unknown so I could finish getting ready.\n\n* * * * *\n\nBy one, we'd been to two pet stores in Rockford and the Winnebago County Animal Shelter. None of the dogs had excited Kyle all that much, though, and we decided to stop for lunch at the Grant City Tap before driving over to see if the Lincoln County Animal Shelter was still open.\n\nWe had just ordered some burgers and sodas when Kyle waved at someone behind me.\n\n\"It's Miss Palmer,\" he said.\n\n\"Your teacher?\"\n\n\"Uh huh,\" he said.\n\nI turned around and damned near fell out of my seat.\n\nTwo women who looked like sisters were waving toward us and smiling. I managed to raise my hand back, but I knew it came off as a feeble effort at best.\n\nOne of the women whispered something to the other, and they both grinned in unison.\n\n\"Pretty, ain't she?\" Kyle said.\n\n\"I thought she was old?\" I said, turning back to Kyle.\n\n\"Still,\" he agreed, \"she's pretty. Even if she is old.\"\n\n\"Which one is she?\"\n\nHe looked back at them, smiled and nodded his head, and looked back at me.\n\n\"She's the one in the pink shirt,\" he said.\n\n\"Who's the one in the pink shirt?\" I heard from behind me. \"Hello, Kyle.\"\n\n\"Hi, Miss Palmer.\"\n\nI looked up at sparkling eyes and a bemused smile.\n\n\"I was asking him which one was his teacher,\" I said.\n\n\"Kristin Palmer,\" she said, holding out her hand.\n\n\"Luke Patterson,\" I said, taking her hand and holding it.\n\nShe was gorgeous, and I knew what Whitney had meant about her being the head cheerleader type. She looked like she could still be in college. Her face was oval, unlined, with bright eyes and an upturned nose. Her lips were expressive and all mysterious at the same time, like she was thinking something about you, and you only hoped she was thinking what you were thinking about her. Her face was framed by short-cut, light brown hair parted slightly off center and framing her features perfectly. And her body? Just. Fucking. Wow. Think healthy. Really, really healthy.\n\n\"So you're the famous Professor Patterson?\" she said. \"It's an honor.\"\n\nI chuckled. \"Just Luke. And I'm not so famous.\"\n\n\"I don't know about that,\" she said. \"Kyle here says you're a war hero with the medals to prove it.\"\n\n\"Too stupid to duck,\" I said. \"Nothing heroic about that.\"\n\n\"We're looking for a puppy,\" Kyle blurted.\n\nShe looked at him, and a softness came over her face. She adored children, I realized. You could see it all over her.\n\n\"And what kind of puppy are you looking for?\" she asked.\n\n\"Not a clue,\" I said. \"We were just going to have some lunch and go to the animal shelter. See if they've got anything there.\"\n\n\"Sounds like a plan,\" she said.\n\nThe waitress arrived with our burgers and sodas.\n\n\"I'll leave you men to it, then,\" she said. \"Happy hunting.\"\n\nI watched her walk away.\n\n\"See what I mean, Dad?\"\n\n\"Huh?\" I said, turning and looking at Kyle.\n\n\"Pretty, huh?\"\n\nI had to force myself to keep my eyes on him.\n\n\"Sure,\" I said. \"I guess so.\"\n\nWe were almost done with our burgers when Kristin reappeared at our table.\n\n\"Sorry to bother you,\" she said.\n\nI tried to finish chewing and gulp down my mouthful of food.\n\n\"No,\" I finally managed. \"No bother.\"\n\n\"It's just that I was talking to Allysin. My cousin over there? She says she knows someone with a litter of puppies. There are three left.\"\n\n\"What kind of dogs?\"\n\nShe smiled. \"Pugs.\"\n\n\"Like from Men In Black?\" Kyle asked.\n\n\"Where'd you see Men in Black? It's rated--\"\n\n\"At Tyson's house,\" he said, then turned back to Kristin. \"That kind of dog?\"\n\n\"Those're the ones,\" she said, grinning widely.\n\n\"They're cool, Dad,\" Kyle said to me.\n\n\"Who's the friend?\" I asked.\n\n\"Tim and Nicole Franklin,\" she said. \"They own the Bar and Grill?\"\n\nI nodded. I'd been there a few times, and I was pretty sure I knew the owners by sight. They were about my age, and their kids helped out around the restaurant. Good food.\n\n\"So . . . .\"\n\n\"Allysin knows them pretty well,\" she said. \"You want, she can give them a call and see if it's all right for you to drop by?\"\n\n\"Where do they live?\"\n\n\"Out on Seven Oaks.\"\n\nI looked at Kyle. \"Well?\"\n\n\"Let's go see 'em, Dad,\" he said, his half-finished burger and fries now pushed to the side.\n\n\"If it's not too much trouble,\" I said to Kristin.\n\n\"No prob,\" she said, and walked back to her table. I noticed she wasn't wearing a wedding ring.\n\n\"Dad,\" Kyle whispered, \"you're staring.\"\n\nI turned back to face him, a lopsided grin on my face.\n\nHis eyes went to the heavens. \"Jeez.\"\n\nI left the money on our table, then stopped at their table on the way out.\n\n\"Have a seat,\" the other one--Allysin--said.\n\n\"I don't want to interrupt--\"\n\n\"We'll go with you,\" Kristin said. \"Show you how to get there.\"\n\n\"They're expecting us in a half hour or so,\" Allysin said. \"We've got time to finish our lunch, okay?\"\n\nI looked from one to the other, amazed at the resemblance between the cousins. Sure, I could tell them apart. Still, they were both absolute knock outs. And they both had that evil flash in their eyes and that way of expressing untold carnal promises with their lips.\n\n* * * * *\n\nWe all watched Kyle giggling on the lawn as the three puppies--none larger than a gerbil--climbed over him and licked and nipped at him.\n\n\"They all like him well enough,\" said Nicole Franklin, \"that's for sure.\"\n\n\"Maybe you'll take all three?\" her husband said, his arm over her shoulders.\n\nThey were easy together, comfortable and happy and content. Talk about a devoted couple, I thought with a flash of pain.\n\nI caught Kristin looking at me, and her face looked a lot like mine must've looked at that moment. Gone was the playful smile and sparkling eyes. Instead, she had a sardonic smile, a smile that told me she'd had this once and lost it.\n\n\"What d'ya think?\" I asked her.\n\n\"I think you've got a choice to make here.\"\n\nI nodded.\n\n\"The male,\" I said to Tim. \"If it's okay, I think we'll take the male.\"\n\n\"Problem with women?\" Allysin snickered, but Kristin shot her a glare. Something passed between them in a split second; something that turned Allysin's look to a forced smile.\n\n\"That's great,\" Tim said. \"Let me go get you a crate to take him home in.\"\n\n\"That's not really--\"\n\n\"Never bought a puppy before, have you?\" he cut in.\n\n\"Nope.\"\n\nHe laughed, shaking his head. \"Poor bastard.\"\n\n\"Tim,\" Nicole said, \"don't talk him out of it yet.\"\n\n\"I'll get us some beers,\" he said, walking toward the garage. \"Tell you all about how to train a puppy and take care of him.\"\n\nI started to protest, but Kristin spoke before me.\n\n\"Sounds good,\" she shouted, her eyes on me as she said it. They were eyes that said, 'Sit down and shut up if you know what's good for you.'\n\nI decided not to argue with those eyes.\n\nA half hour later, I was comfortable with my newfound rudimentary knowledge of how to potty train and care for a puppy. The most basic lesson learned from Tim and Nicole was simple: I was fucked. For the next six months, until the tiny pug was older and trained some, I'd be busier than hell trying to raise a baby in addition to my own son.\n\nI know what most of you are saying. Well fucking duh, idiot. What did you think it would be? To tell you the truth, I didn't think about it at all. I'd never had a dog before. As a child, the issue never came up. With Kyle, the issue arose and was shot down by Whitney. So there you go, sometimes things aren't as simple as we think.\n\nThe look on Kyle's face as he played with that tiny, wheezing ball of fur, though, told me there was no going back. He hadn't looked this happy--this full of unbridled joy--in months.\n\n\"I've never seen him like this,\" Kristin said, walking up beside me and watching Kyle play.\n\nI sighed. \"Yeah. Been awhile.\"\n\nShe put a hand on my arm, and I turned to face her. \"Hang in there, okay? I know what you're going through, and it's tough.\"\n\nI wanted to ask her how she could know, but then I remembered about her own checkered marital history. I couldn't remember if Whitney had mentioned it, so I wondered if she had any kids of her own. By the look on her face, though, I suspected she did. Either way, it was clear she knew just how tough this was on me and Kyle.\n\n\"Thanks,\" I said. \"For everything.\" I looked back at Kyle and nodded toward him rolling around in the grass. \"Especially for this.\"\n\n\"No prob.\"\n\n* * * * *\n\nThe Franklins had given us enough food to get us through the night and the next morning. Also, we had a crate for the little fellow to sleep in until we could get to the store the next day and get all of the puppy-raising, dog-owning essentials. So Kyle and I just enjoyed ourselves in the backyard when we got home.\n\n\"What're we gonna name him, Dad?\" he called out from the yard.\n\nI pondered the question as I flipped the barbecued chicken and corn on the cob roasting on the grill in front of me.\n\n\"Well?\" he said, scooping the little black-faced bundle of tan fur into his arms and walking to the deck.\n\n\"You got any ideas, little man?\" I said, worried the squirming little pup would break free, fall, and die at any moment. Kyle kept a solid hold, though.\n\n\"Not really,\" he said. \"I was thinking of a general or something. You know, like the stuff you're always reading about.\"\n\n\"Like General Lee?\" I said.\n\nHe shook his head. \"No. They said he's China.\"\n\n\"Chinese,\" I corrected. \"He's from China, and things from China are called Chinese.\"\n\nHe ignored me. \"So are there any famous China generals?\"\n\nI searched my memory, discarding most of the names that came to my mind.\n\n\"How about Sun Tzu?\"\n\n\"Who's he?\"\n\n\"Thousands of years ago,\" I answered, \"he was a famous general who wrote a famous book.\"\n\n\"What was the book called?\"\n\n\"The Art of War.\"\n\n\"And it's still famous?\" he asked.\n\n\"Still used today.\"\n\nHe grinned. \"And we can call him Sonny for short.\"\n\nI ran my fingers through his head, then reached down and scratched the snorting midget behind his ear.\n\n\"Sonny it is,\" I agreed.\n\nCHAPTER NINE\n\nSchool for me started the next day. Not classes, but an endless series of meetings to get ready for classes.\n\nWhen the afternoon meetings ended, I found myself in my office behind my desk flipping through resumes trying to weed out the finalists for my two research interns for the upcoming semester. They were paid positions--though the pay was, to be honest, beyond paltry--and the competition was fierce. More than forty students had applied, which represented about two-thirds of the seniors majoring in history or related areas.\n\nAfter an hour, I had weeded it down to three finalists who would be interviewed for the two positions. Randall Meeks, Jeremy Scott, and Heather Farley. Yeah, I know what you're thinking, but you'd be wrong. Besides being incredibly beautiful, she was a solid writer and researcher, and she'd made Dean's List every semester so far. Her drop dead gorgeous looks were just a bonus.\n\nI phoned the three of them and arranged for interviews the following morning, then shoveled some books and notes into my briefcase and made for home.\n\n\"Luke,\" I heard from behind me as I unlocked my car door.\n\nTurning, I saw Doug Morrissey running up behind me.\n\n\"Wow,\" I said, taking in his now clean-shaven face and slimmed down figure. \"Looks like the summer's been good to you.\"\n\nHe grinned. \"Time to get off my ass and make a go of it again.\"\n\n\"Sounds like a good plan,\" I said, trying to keep the pleasant smile and failing.\n\nHis eyes narrowed. \"Where you at in it?\"\n\n\"It's over,\" I said.\n\nHis eyes widened. \"So soon?\"\n\n\"Yeah. Couple weeks ago.\"\n\nHe nodded, his face clouding over.\n\n\"I got Kyle,\" I said. \"Joint custody, but he lives with me.\"\n\n\"You're kidding.\"\n\nI shook my head.\n\n\"And the finances?\"\n\n\"House was mine, so she didn't get any of it. Our incomes were close enough, so there's no alimony. Well, I let her keep a hidden 401(k), which is really why there's no alimony.\"\n\n\"And the rest?\"\n\n\"Fifty-fifty.\"\n\nHe gave a bitter chuckle at that. \"Told you that bitch Rebecca was good.\"\n\n\"She was,\" I said, \"so thanks. Really. I would've been clueless. And she may have been a bitch to you, but. . . .\" \n\nHe nodded at my implication. \"Tell me about it. Hotter than hell.\"\n\n\"Like she could trip you and beat you to the floor.\"\n\n\"With her panties already down,\" he added.\n\nWe savored our own visions for a moment.\n\n\"So,\" I said, then looked him up and down. \"Looks like you're finally getting past it, though.\"\n\n\"I finally met someone.\"\n\n\"Really?\"\n\nHis head bounced as the grin returned. \"She's great.\"\n\n\"Do I know her?\"\n\nHe shrugged. \"Maybe.\"\n\nI laughed. \"What is this? Grade school? You want me to pass her a note in home room, you'd better clue me in.\"\n\n\"We'll see,\" he said, turning to leave me standing there.\n\nFor whatever reason, that's the first time I had hope. Hope that it would get better and somehow back to normal. Doug's divorce had been brutal, and he'd been down in the dumps about it for a couple of years. Now, though, he was almost back to his old self. He now looked a lot more like the easy-go-lucky, happy, bouncy guy with a zest for life and for living that I'd not seen in three years or more. He'd finally gotten over it.\n\nIt seemed to bode well for me. For the first time, I believed what everyone said: Someday I'd get over the anger and regret and bitterness and go back to being happy.\n\nOf course, I thought as I pulled into my garage, Doug hadn't been spending all of his spare time as a single parent to a little boy and his even littler puppy dog.\n\n* * * * *\n\nHeather Farley sat before me, her legs crossed all prim and proper, the appropriate look of academic seriousness on her face. In her navy blue slacks and long-sleeved white blouse, she appeared to be a young professional rather than the bouncy Valley Girl-type she usually looked like.\n\n\"And what would be your duties as you understand them?\" I said.\n\n\"Research and memos,\" she said. \"Whatever topic you assign, I'd be responsible for researching the topic thoroughly, then preparing and submitting a memorandum encapsulating the salient points.\"\n\nEncapsulating the salient points. See? There was a legitimate reason why she was a finalist. She was one hell of a lot smarter than most of her peers. And judging by her dress and demeanor--Jeremy Scott had shown up for his interview in jeans and a Phish tee shirt--she was one hell of a lot more mature, too.\n\n\"You've spoken to past interns?\"\n\n\"Absolutely,\" she confirmed.\n\n\"And you know you could probably work for Professor Whitman?\"\n\n\"I understand,\" she said, her eyes staring straight at me and holding the look. \"But I don't want to work for him.\"\n\n\"He's the chair of the department,\" I countered. \"It would certainly be far more prestigious on your resume for graduate school.\"\n\n\"True,\" she said. \"But you'll soon be Dean of History, so that won't matter.\"\n\nI leaned back in my chair. \"And you know this how?\"\n\nShe gave an enigmatic smile and brief shrug. \"I just know.\"\n\nI stared at her, but she didn't flinch. Yet, the look on her face told me she was dead serious, and that shocked me. I'd been in meetings on and off throughout the summer, and no one had mentioned the retirement of Hubert Whitman, a colossal figure at Chadwick who'd been teaching there since my parents were in diapers. Sure, he was certainly well past retirement age, but most of us agreed they'd be carrying him out of the school in a casket, and that was as it should be. He was still sharp as a tack and had more energy than many professors half his age, so the thought that he was stepping down was a bit farfetched.\n\n\"Fine,\" Heather finally said, \"if you want to know I'll tell you. But this stays between us, okay?\"\n\nI nodded.\n\n\"He told me. Professor Whitman himself. I already interviewed for him yesterday. And while he offered me a position, he still recommended I meet with you. This may be his last semester, and he says you're likely to be the one taking over.\"\n\n\"Is he okay?\" I stammered. \"I mean, he's not sick or anything, is he?\"\n\n\"Not a clue. He seemed fine to me. Same old Professor Whitman.\"\n\nI nodded. \"And he's already offered you a position?\"\n\nShe snorted. \"If you want to call it that. It would mostly just be cleaning up his papers and sorting things out. A career's worth of notes and that sort of thing. That's why he recommended I meet with you instead. He said most anyone could do it for him, and I shouldn't pass up the chance to actually get something out of this.\"\n\nI looked at her, down to her resume, then back to her again. She raised her eyebrow, waiting for my decision.\n\n\"Fine. You're hired.\"\n\nIn a flash, the professional demeanor was gone and the schoolgirl giddiness was back. Intern positions could make a big difference in graduate school applications, and the higher up the professor for whom she interned, the more difference it made. As such, this was a big deal, and her excitement was common.\n\n\"Thanks, Professor,\" she said. \"You won't regret it. Really.\"\n\n\"Now I'd like your opinion on the other two finalists,\" I said. \"Mr. Meeks and Mr. Scott.\"\n\n\"Meeks,\" she said immediately. \"Jeremy's way smarter, but he's lazy, too. Randy's a hard worker. A better writer, too. Jeremy will try to skate by, but Randy will bust his ass.\"\n\nI nodded. That was my assessment, too. Almost to the letter. The problem with Jeremy Scott was that he'd never had to work for his grades. It had all come easy to him, and he wasn't used to going the extra mile on anything.\n\n\"Well, Ms, Farley,\" I said, pushing back from my desk, standing, and reaching my hand across to her. \"Welcome aboard.\"\n\nShe pumped my hand in response. \"Thanks, Professor.\"\n\n\"Don't thank me yet,\" I said. \"I'll need you here tomorrow morning by eight-thirty.\"\n\n\"No problem,\" she smiled. \"What're we gonna work on?\"\n\n\"Don't know yet,\" I lied. \"We'll know tomorrow morning.\"\n\n\"Fair enough,\" she replied, then gave a dazzling smile and sashayed out of the office.\n\nIt was going to be a very trying semester if I had to watch that ass on a regular basis, I thought, adjusting my package once she'd gone.\n\n* * * * *\n\nAt five-thirty Wednesday, the doorbell rang.\n\n\"Your mom's here,\" I called into the back yard before going to answer the door.\n\n\"Hi,\" Whitney said when I opened the door.\n\n\"Come on in,\" I motioned with my head, stepping aside.",
        "\"Awkward, huh?\" she said after a moment, her voice low and her eyes on the floor.\n\nShe had dark circles under her eyes, her pallor looked pale, and her hair was dull and lifeless.\n\n\"You doing okay?\" I said, lifting her chin with my hand.\n\nShe looked up at me with a blank stare. \"Sure.\"\n\n\"You don't look so good.\"\n\nShe looked around the living room, now stark and half empty after our property division.\n\n\"You need some new furniture.\"\n\n\"Probably this weekend,\" I said. \"I'll probably go shopping while Kyle's with you this weekend.\"\n\nShe paused, then nodded.\n\n\"Hey Mom,\" Kyle said, running through the kitchen toward her with little Sonny doing his best to catch up from behind.\n\n\"What's this?\" she said, leaning down and pulling Kyle into a tight hug.\n\nKyle was squirming with the pressure of her squeeze, and he managed to break free enough to scoop the bouncing puppy into his arms.\n\n\"He's Sun Tzu,\" Kyle said. \"Isn't he great?\"\n\nShe looked at me, then back to Kyle and the puppy. \"Sun Tzu?\"\n\n\"We call him Sonny.\"\n\nKyle held him out to Whitney, who took the writhing, wheezing little creature into her hands and stared at him.\n\n\"He's ugly,\" she said, smiling.\n\n\"He's cool,\" Kyle insisted. \"Real cool.\"\n\nShe handed Sonny back to Kyle, who made faces at the dog before holding his cheeks closer to Sonny's face for an endless series of squealing licks.\n\n\"So he finally got his dog,\" Whitney said, her eyes staying on Kyle and Sonny.\n\n\"It's helped,\" I said.\n\n\"I see that.\"\n\nWe watched for a moment longer, but the silence soon became uncomfortable.\n\n\"Well, you two best be going,\" I prompted.\n\nHer vacant stare jarred at that, and she turned and looked at me.\n\n\"You'll have him back by eight or so?\" I asked.\n\n\"Somewhere around there.\"\n\n\"Give him here,\" I said, holding out my hands to Kyle.\n\nHe transferred Sonny to my arms, then turned and took Whitney's hand.\n\n\"So what're we gonna do?\" he said to his mom as they walked out the door together.\n\nI didn't hear her response, preferring to close the door behind them.\n\n\"No,\" I said, holding Sonny up and looking into his sparkling brown eyes. \"What're we gonna do? Huh?\"\n\nHis yipping response told me our plans had better include dinner.\n\n* * * * *\n\n\"Has either of you ever read this?\" I asked, sliding one copy each across my desk toward Randy Meeks and Heather Farley.\n\nI, Claudius, by Robert Graves. They picked up their copies, looked at the cover, then flipped to read the book's description on the back cover.\n\n\"Never heard of it,\" Randy said, pushing his glasses up before running his fingers through his tangled hair.\n\n\"Me, neither,\" Heather said.\n\n\"It's about Claudius, a Roman Emperor who died in 54 A.D.\"\n\n\"And we're gonna be researching him?\" asked Randy, confused. I preferred military history, and he must've had visions of researching some great historical battle.\n\nI shook my head. \"Not Claudius. Or the others, for that matter. No, I want you to read the book and tell me what you think we should be researching and writing about. Something that's not been covered in great depth.\"\n\n\"Based on this?\" Heather asked, looking at the book again.\n\n\"Based on that,\" I said. \"Read the whole thing by Tuesday and get me a memo on your recommendations. Each of you. And don't work together.\"\n\n\"So you want our own ideas?\" Randy asked with no apparent aggravation at being asked to do this over the Labor Day weekend. \"Not a joint effort between the two of us?\"\n\n\"Precisely, Mr. Meeks. I want you to each read it and come up with a new angle of looking at the transition period from Roman Republic to Roman Empire. Any aspect of that transition. This book, while not history as such, can at least be useful in showing you how many things happened in history that we don't really teach. Or even know, for that matter.\"\n\nHe shot a glance at Heather, but she was already reading the first page of the book.\n\n\"So I'll leave you both to it,\" I said, waving them off.\n\nRandy rose to leave, but Heather stayed still, locked in the book.\n\n\"Ms. Farley?\" I said.\n\nShe looked up, her concentration broken. \"Yes?\"\n\n\"You don't have to do it here,\" I said. \"You can probably go back to your dorm or apartment or whatever and work on it there.\"\n\nShe frowned, then shook her head. \"If it's just the same to you, I'd rather stay here. My roommates are back and getting set up. I'll never be able to--\"\n\n\"The library?\" I suggested.\n\nShe smiled a dazzling array of teeth and sparkling green eyes. \"Here's fine.\"\n\nRandy looked from her to me, then back to her again. She was already slouched back into the chair reading again.\n\nWe gave each other a look. Women. Then he smiled, shook his head, and left.\n\n\"Tuesday then,\" he said on his way out.\n\n* * * * *\n\nBy three, my last faculty meeting of the week was complete. There was still no word about Professor Whitman and the potential vacancy for Dean of History, and I was afraid to say anything to anyone or let on in any way that I knew something could be up. The other professors--Whitman included--likewise seemed to be going about business like there were no changes on the horizon.\n\n\"You still here?\" I said upon entering my office. Heather had moved from the chair and was now behind my desk scribbling notes on a piece of paper.\n\n\"Uh huh,\" she said, not bothering to look up.\n\nI watched her, amazed. It was clear she'd finished at least most of the book by now, which was no small feat. And given her frantic writing pace, it was also clear that she had a plethora of ideas for research projects.\n\n\"Can I have my desk back?\" I asked, tossing my briefcase in the chair she had been sitting in when I'd left two hours before.\n\n\"In a sec,\" she said. She finished writing something, underlined a word three times, then looked up at me.\n\n\"Wow,\" she said, her face a mixture of wonderment and amazement. \"How've I never heard of this book before?\"\n\n\"Good question,\" I responded, walking behind the desk and looking at her notes. It was a series of questions. Very perceptive questions at that. \"It's a classic,\" I mumbled. \"One of the top works of the twentieth century by almost anyone's reckoning.\" \n\n\"Jesus,\" she said, wheeling my chair back and hopping up, snatching the notes away before I'd finished reading them. \"It's really . . . I don't know . . . inspiring, I guess. To think that you can do something like this with something like that.\"\n\n\"Like what?\"\n\nShe laughed. \"Roman history, Professor. I mean, come on. Have you ever studied anything so incredibly dry and boring in your life?\"\n\nBefore I could respond, she threw her arms around me and hugged me tightly. \"This is gonna be so much fun.\"\n\nI froze, terrified of three things. First, that someone would walk through the door at any moment and I'd be in deep shit. Second, that her hug would last too long and she'd feel my soon-to-be-rampant hard on pressed against her. Third, and in apparent conflict with the latter point, that her hug would end anytime soon. It felt . . . well, you know.\n\nI cleared my throat just before terror number two could rear its ugly head--so to speak--and backed away from her.\n\n\"Fun,\" I agreed.\n\nShe winked at me. \"Tons of fun,\" she confirmed, then slid the book and her notes into a backpack which she slung over her shoulder. \"Same time tomorrow?\"\n\nI tried to find my voice, but couldn't. She took this for a yes.\n\n\"Til then,\" she smiled. \"Toodles.\"\n\nShe sashayed out the door, the sashay more provocative than the day before.\n\nThere was no doubt she knew her effect on me. Hell, she had that effect on any straight, post-pubescent male with a pulse. And she seemed more than willing to use it whenever the mood struck her.\n\nCHAPTER TEN\n\nI didn't really feel like going back to the office the next morning, beautiful blonde coed or not. Instead, I had two spare keys for the office made--one for each intern--and left them with Sarah, the secretary, bright and early the next morning.\n\nWith three free days over the Labor Day weekend now expanded to four, I spent the morning surfing the net for living room and master bedroom furniture ideas.\n\nA few things that should be exceedingly obvious. First, I'm a guy, so I could care less if my furniture all matches the rest of the decor. Second, I'm a guy, so I don't really know what decor is to begin with, let alone how to match any of it. Third, I'm a guy, so shopping for furniture ranks right up there with flat beer and colonoscopies on my list of shit to avoid--pardon the pun.\n\nTo that end, God bless the internet. We have a few furniture stores in Grant City, including the ones in the shopping mall on the edge of town. Rather than wade through the shopping throng for hours the next morning, I decided to get some ideas up front, make sure they were in stock, and get it all done without hardly leaving the house.\n\nTwo hours later, though, I knew I was in deep shit. Apparently, furniture fabrics, styles, and colors are all written in a secret code that only women can understand. I, who can speak two languages and read four (English and Spanish; those two plus Latin and Greek, if you're curious) simply couldn't decipher what the hell they were describing. The pictures helped some, but not much. So with a sigh, I gave up.\n\nSun Tzu was sleeping in his crate in the corner of the den, his smattering of snores, grunts, and dreamy yips barely audible, yet strangely soothing. I decided to look through my e-mail, then crash for a nap before Kyle got home.\n\nI had four e-mails. Heather and Randy both e-mailed that they were done reading I, Claudius and hoped to have me their preliminary notes by Monday morning. I e-mailed them back and said Tuesday was fast enough. The third e-mail offered to introduce me to the wonders of Viagra at a low introductory rate, which was more than a touch insulting. The fourth e-mail, though, would soon have me wishing I had saved the Viagra offer, because I was sure an erection was nowhere in my immediate future. Oh no, that fourth e-mail emasculated me all over again.\n\nThe message was from CLDLaw@lincty.net, and it was entitled \"Saturday?\" I clicked the message, not knowing what to expect.\n\n\"I know you're still mad at me,\" the text read. \"but I really wish we could move past all of that. What's done is done and there's no changing it. Now that the dust is settled, though, I was wondering if you wanted to have a drink together or maybe even dinner. There's no reason we can't still be friends. Or more.\"\n\nAnd just that quickly, all the pain of the past five months came crashing back down on me. Sure, I knew sooner or later I'd be seeing Whitney with other men. Hell, we were both going to be moving on, and it did no good to pretend otherwise.\n\nThis, though, was different. Way different. This was a reminder of that great unanswered question: What the hell had happened to my marriage? Reading the message again and again, I could glean no clues to help me answer that question, but I now had an e-mail address to investigate if I wanted answers.\n\nI sat back, tense as hell and still trying to decide whether I should investigate this further when another thought occurred, a thought that all but directed my course of action. Namely, how had this e-mail come to my e-mail address? Actually, to the e-mail address Whitney and I used to share?\n\nThe answer came almost immediately: Whitney had opened another e-mail account; an e-mail account with a name close to our own.\n\nI logged out of the e-mail account, then went through the log in procedure again. I typed \"Patterson123@lincty.net.\" I stared at it for a minute, then added a 4. \"Patterson1234@lincty.net.\" I typed in my password--hell, any password would work--and got \"Invalid E-Mail Address.\" I deleted the 4 and stared.\n\nIt had to be close to our actual e-mail address. There was no way they'd been communicating through our home e-mail. Given how often I checked our e-mail, it was far too risky to use our own address. Still, it had to be close. Close enough where one extra letter or number--or one less, for that matter--would result in the e-mail coming to our regular address.\n\nFive minutes later, I had it. \"Patterson_123@lincty.net.\" That little underline made all the difference. Now that I had a valid address, time to figure out the password. I tried everything. Her name, my name, Kyle's name, middle names, parent's names, maiden names, all of the names with birthdates and social security numbers and anniversary dates and old phone numbers. Nothing. The message was always the same. \"Invalid Password.\"\n\nI looked at the clock on the wall. Almost three. Kyle would be home soon. Then my eyes drifted over to a small, brass nameplate, the paperweight I'd gotten for Whitney when she won her first jury trial. SuperLawyer. I remembered giving it to her, and remembered more vividly her giddiness and giggling and excitement as she placed it smack dab in the middle of her desk all those years ago. And now there it sat, dusty and ignored, forgotten on a shelf in the corner of my den. I wondered how long it had been sitting there, how long since she'd taken it out of her office and brought it back here.\n\nTurning back to the screen, I typed it in. SuperLawyer. The second attempt, with all lowercase letters, and I was in. One click on the history of undeleted messages, and I was staring at a list going back eleven months.\n\n\"Dad,\" Kyle called from the front door, slamming the door behind him.\n\n\"In the den,\" I said, highlighting the whole list and clicking Print All.\n\n\"Hey, Dad,\" he said, steamrolling into the room and straight for the crate. \"Hey, Sonny.\"\n\nThe pup was already up, standing, yipping at Kyle, his tail going a mile a minute.\n\n\"Come on,\" he said, opening the crate and running back out of the den, Sonny in hot pursuit.\n\nI looked at the list of e-mails being printed, then to the door Kyle had just run through, then back to the e-mails. I clicked on a message dated March 19, 2010. The evening Kyle and I had stayed awake eating pizza and watching movies, Whitney silent on the couch the whole time. The evening a few hours after I'd told her I was going for the divorce.\n\n\"I know this is tough on you,\" he wrote her. \"You've been so unhappy for so long, and now you're feeling guilty and sad. Sad at the shambles your marriage has become, guilty because your little boy is going to be going through this. I wanted more than anything to take you into my arms again today. Hold you and hug you and make tender, gentle love to you. While I understand your confusion, and how torn you are about finally leaving him, just remember how happy we will all be together. You, Kyle, and me. I want it more than anything in the world, and I know you do, too. We'll be the happiest family in the world when that day finally arrives.\"\n\nI was right, I thought. She'd met him that day, but she hadn't screwed him. Not that day, at least. The e-mail strongly implied that they had already had sex by then, though.\n\nI read her response to CLDLaw. It was from the next morning.\n\n\"He told me yesterday afternoon that it's over,\" she wrote. \"Luke is divorcing me. We are telling Kyle today sometime. I don't know what to do. Last night we ate pizza and watched movies until Kyle fell asleep across Luke's lap. You should have seen them. They were so peaceful and content. As I watched them, I realized one thing. You and I don't have anything like what Luke and I have, and we never will. I don't know what I have been doing for the past two months, but it stops now. I do NOT want to see you again.\"\n\n\"Dad?\" Kyle said from the doorway.\n\nI looked up.\n\n\"What's wrong?\" he asked.\n\nI tried to smile. \"Nothing, little man.\"\n\nI exited the e-mail and scooped up the thick stack of printed messages. \"Just let me put this away, and I'll come out and play with you and Sonny, okay?\"\n\nHis face lit up in joy. \"Hurry,\" he said, running back outside.\n\nI locked the e-mails in a drawer, then went out to the backyard to join Kyle and the Romescu clan all playing with Sonny. The poor little fellow seemed about to burst from the excitement of having five screaming kids all chasing him and throwing things for him and petting him. He looked exhausted by the love being showered upon him, and I envied him.\n\n\"It was a good idea, Doc,\" Sally said from behind me.\n\n\"It's taken his mind off of things, that's for sure.\"\n\nShe placed a hand on my shoulder. \"It'll all get better, you know. It'll take awhile, but it'll get better.\"\n\nI put my hand over hers. \"Thanks.\"\n\n\"No problem,\" she said, reaching around and pressing a cold can of beer into my chest. \"Now come on. It's Friday night.\"\n\nWe both drank our beers and chatted while watching the kids run little Sonny ragged.\n\n* * * * *\n\n\"Did you feed him yet?\" Whitney asked as she shouldered Kyle's duffle bag shortly after six.\n\n\"No. Figured you'd want to take him out or something.\"\n\n\"Probably just something quiet back at the apartment,\" she said. \"It's been a long week.\"\n\n\"Tell me about it.\"\n\n\"Classes starting next week?\"\n\nI nodded, not really wanting to engage in small talk with her. She knew damned well classes always started immediately after Labor Day. And she knew Kyle hadn't been fed because he'd asked her where they were going the second she walked in.\n\n\"No furniture yet,\" she said, her eyes lingering across the great room and kitchen.\n\n\"This weekend.\"\n\nShe turned to me and gave a small smile. \"That's right. You told me that.\"\n\nKyle raced back into the room, stopping at the couch before he came to us. Sun Tzu was sprawled on his side in the middle of the couch, still panting in exhaustion from the afternoon play session.\n\n\"Bye, Sonny,\" he said. He petted the dog, gave him a gentle kiss on the muzzle, then hopped up and ran to me for a hug.\n\n\"Have a good weekend, Dad,\" he said, squeezing me tightly. \"I love you.\"\n\n\"I love you, too,\" I said.\n\nHe took Whitney's hand, and she led him to the door.\n\n\"Have a good weekend, Luke,\" Whitney said.\n\n\"You, too,\" I said, then--bitterness finally rising to the surface--added, \"Super lawyer.\"\n\nShe froze, then turned over her shoulder and looked at me for a moment. The look on my face must've confirmed her worst fears because she sagged, nodded, and led Kyle to her car.\n\n* * * * *\n\nFour hours and three beers later, I knew a few things.\n\nFirst, Whitney had lied. She'd slept with him on at least a half dozen occasions.\n\nSecond, he was clearly a lawyer. A lawyer with a firm whose e-mail address was CLDLaw@lincty.net.\n\nThird, there was a firm in nearby Sherman Oaks named Cahill Levine & Dunleavy. There were nine lawyers in the firm, and seven of them were men. There was no e-mail address listed on their web site.\n\nFourth, he'd chased her. Hard. And it took months before Whitney had finally succumbed to his advances.\n\nFifth, despite his repeated entreaties, she'd never taken back up with him after her e-mail of March 20.\n\nSixth, with the exception of the occasional digs from him about how I didn't really care for her feelings and ambitions, there was no indication what I'd done wrong. None of Whitney's e-mails--not a goddamned one of them--had said anything negative about me. Instead, I was more like an afterthought in all but her March 20 e-mail. In that one, I read more like a fond memory, sort of like a nostalgic look back at a happy Christmas memory from childhood.\n\nThere were still some things I didn't know, though.\n\nFirst, who the hell was he? Neither of them had addressed or signed any of their messages back and forth.\n\nSecond, what started this? Sure, he'd chased her, but I had no clue if she'd first sent the signal she was available or looking.\n\nThird, when did I go from being Whitney's husband and the love of her life to a fond memory? When did she quit loving me and why?\n\nWhat the fuck did I do wrong?",
        "It was almost eleven, and I was ready for bed. Then a thought occurred to me, though, and I decided to check it out.\n\nI logged back into the secret e-mail account and clicked on the history. Sure enough, they were all now deleted. There was one message still in the box, and it was unopened. The content info line read simply, \"Luke, I'm So Sorry.\"\n\nI left the message unopened, clicked off the internet, and went to bed.\n\nFuck her. Let her wonder if I'd actually read them.\n\n* * * * *\n\nBy nine-thirty Saturday morning, I was climbing the walls with boredom. Poor Sun Tzu had already been walked around the block to the tune of what seemed eleven miles, I had already read the New York Times and the Wall Street Journal, my grapefruit-and-toast breakfast only took ten minutes, and I had nothing to do until the stores opened at ten.\n\n\"The park,\" I said to Sun Tzu. He did his level best to ignore me and hide.\n\n\"I'll carry you,\" I promised, finally catching him and holding him under one arm and his little cage under the other. He appeared partially mollified when I put his cage on the passenger seat, him in the cage, and went around to the driver's side. By the time the car was going, Sonny was snoring.\n\nFive minutes later, I pulled into the parking lot of Veteran's Park. There were a few people already there, some jogging on the paths and a few mothers pushing the children on the swings over to the side.\n\n\"Come on,\" I said, rousing the pup and holding him in my arms.\n\nWe took a leisurely stroll around the park, and Sun Tzu was content to lay in my arms and give sleepy looks to passing joggers. It was a warm morning, and the walk felt good; it definitely felt better than sitting in the living room staring at walls and listening to silence.\n\nAs we neared the swing set and the yells of happy children, Sonny's ears perked up and he pushed himself up in my arms, searching for the children. Once he spotted them, he started yipping and his tiny, curled tail began beating in rapid rhythm against my chest.\n\nI was staring from Sonny to the children, smiling, when I saw her. She looked up and saw me at about the same time, and I froze.\n\n\"Hey,\" Kristin called, waving while she pushed a little boy near Kyle's age on the swing.\n\nI lifted my head in greeting, just watching her for a moment. She seemed relaxed and easy around the boy, just happy with the simple pleasure of pushing the boy on the swing. I envied her, both her relaxed demeanor and the companionship of her child.\n\nAfter a few minutes of watching, the little boy jumped off the end of the swing, tumbled through the grass, and got up smiling at me.\n\n\"Can I see your puppy, mister?\" he said, running up to me with a lopsided grin.\n\n\"Sure,\" I said, bending down and releasing the pug.\n\n\"Come here, boy,\" he said.\n\n\"His name's Sun Tzu,\" I said.\n\n\"Sonny,\" he said. \"I know. Kyle told us about him.\"\n\nHe was petting the dog, who was enjoying the company of the boy far more than he'd enjoyed my company all morning.\n\n\"What's that saying?\" Kristin said, walking up. \"'Something and snails and puppy dog tails; that's what little boys are made of.' I don't remember.\"\n\n\"Me neither,\" I said, standing.\n\n\"Alone this weekend?\"\n\nI nodded. \"First time.\"\n\nShe gave a sympathetic smile. \"Takes some getting used to.\"\n\n\"Yeah. So I'm noticing.\"\n\nShe bent down and petted Sonny, who all but ignored her in favor of the more rough and tumble attention of the boy.\n\n\"So this is what? Two Saturdays in a row, Luke? You stalking me?\"\n\n\"Just killing time until the stores open,\" I mumbled, then decided to change the subject. \"Your son?\"\n\n\"Ben,\" she replied, standing up with her eyes on him the whole time.\n\n\"So you're in the same boat as me?\"\n\nShe turned to me, her face unreadable, and nodded. \"Pretty much.\"\n\n\"But at least it's your weekend, right?\"\n\nShe shook her head. \"I'm dropping him off at his dad's house in about twenty minutes.\"\n\nI nodded, not sure how much more to ask. She was pretty--hell, drop dead friggin' gorgeous--and seemed nice. Add to that my loneliness and apparent isolation from anyone other than Doug in the same boat as me and I wanted to get to know her better. Still, I wasn't sure how to--\n\n\"So what're your plans for the rest of the weekend?\" she asked, interrupting my thoughts. Her face was again polite inquisitiveness.\n\n\"Furniture shopping.\"\n\n\"Really,\" she said. \"A man. Furniture shopping.\" She gave a chuckle. \"I'd pay to see that.\"\n\nI raised an eyebrow. \"Really? Like lunch?\"\n\nHer eyes narrowed. Was it too open?\n\n\"I just . . . well . . . I mean. . . .\" I let my words die the embarrassed death they deserved.\n\nThe smile came back. \"So you're asking for help in furniture shopping, and in exchange I get to buy lunch?\"\n\nBefore I could say anything, she answered her own question.\n\n\"Okay, Professor,\" she said. \"Sounds like a plan.\"\n\n\"I'll buy the lunch,\" I offered.\n\nShe shook her head. \"Nope. I opened my big mouth, and you called me on it. Fair's fair. Woman of her word and all that.\"\n\nI smiled, glad for the company on what was going to be an otherwise empty and miserable day.\n\n\"So where do you live?\" she asked.\n\n\"Winston Hill.\"\n\n\"House number?\"\n\n\"Seven fifteen.\"\n\nShe looked at her watch, then at Ben and Sun Tzu. \"Okay, how about I take Ben out to his dad's house and meet you back at your place in about a half hour. I can take a quick tour of the house--get an idea what you need and what style and colors--and we'll go look at some things.\"\n\n\"Sounds like a plan,\" I agreed, wondering how much time I'd have for a thorough cleaning before she arrived.\n\n\"Thirty minutes then,\" she said, holding her hand out for Ben. \"Come on, honey. Time to get you off to Dad's.\"\n\nI scooped up the pug and followed them to the parking lot.\n\n* * * * *\n\nWhile the house would never pass a West Point inspection, it was clean enough for normal human beings.\n\n\"You're right,\" Kristin said, leaning against the door frame and staring in at my empty bedroom. \"Stark. You definitely need furniture.\" She turned and looked at me. \"Where the hell do you sleep?\"\n\n\"Sofa in the den,\" I said. \"It's a hide-a-bed.\"\n\n\"That must be comfortable,\" she snorted. \"Let's go.\"\n\nThree hours later, the furniture shopping was almost done. Contrary to my initial fears, Kristin's selections for me--I really can't pretend I had a major say in any of it--were tasteful and masculine. Well, at least there were no floral prints, and the colors were mostly browns and burgundies.\n\n\"Okay,\" she said as we left the Lazy Boy store. \"Recliners, entertainment center, dresser, coffee tables, and end tables are out of the way. Just the bed left.\"\n\n\"Wanna go back to Bergner's?\" I asked.\n\n\"Sleep Comfort,\" she said. \"Pricey, but worth it.\"\n\nSo off we went to look at inflatable beds, something I'd never even heard about.\n\n\"Lay on this one,\" she said, sprawling across one side of a massive king size bed.\n\nI sprawled on the other side. \"Comfy, but a little soft.\"\n\n\"Then watch this,\" the sales lady said, and pressed a button on a remote control in her hand.\n\nI heard a whirring sound, and a minute later the bed was hard as a rock.\n\n\"Cool, huh?\" Kristin asked, hear head turned to me and a massive grin on her face. A grin and sparkling eyes that mesmerized me.\n\n\"Very,\" I agreed. \"But the king size? I mean, can't I just go with a--\"\n\n\"Not a chance,\" she insisted, then her face softened. \"You're gonna find someone else again, Luke. You really will.\"\n\nI nodded, then her grin returned.\n\n\"And when you do,\" she continued, \"you don't want her hogging you right off the damned bed, right?\"\n\nI grinned back. \"Right.\"\n\n\"He'll take it,\" she said, hopping off the bed.\n\nI laid there for a moment, wishing I'd gotten the smaller bed. The one that came with Kristin in it. And smaller so she'd be forced to curl up against me.\n\n\"You'll need a headboard,\" she said. \"This comes with its own bed frame, but you'll need to make--or have someone else make--a headboard.\"\n\n\"Or you can buy a king size bed frame and just put this inside of it,\" the sales lady suggested.\n\nKristin shook her head. \"Tyler's dad still does woodworking. He can build you something that'll be ready by the time this is delivered.\"\n\n\"Tyler's dad?\" I said.\n\n\"My ex father-in-law.\"\n\n\"And he'll know how big to--\"\n\n\"He's already done a few of them,\" she said. \"I'm sure the measurements haven't changed.\"\n\nI nodded. \"Fair enough.\"\n\nWe spent the next ten minutes filling out the delivery instructions and paying for the new bed. Then, before I really knew it, we were standing in the hallway of the mall with people rushing by us. We were done. My house pretty much furnished in a little over three hours.\n\n\"Lunch?\" I suggested.\n\n\"Something light,\" she said.\n\n\"I'll buy,\" I assured her.\n\n\"It's not that. I'm just not that hungry.\"\n\n\"Me neither. Still, if we don't eat something, we'll be starving in an hour or two.\"\n\nKristin looked me up and down as if appraising a racehorse, seemed to make up her mind on something, then gave me a grin as she hooked her arm into mine.\n\n\"Come on, hero man,\" she said, pulling me along. \"I think I know just the place.\"\n\nFifteen minutes later, we were parked outside a small bakery on Grant City's main drag.\n\n\"How've I never noticed this place before?\" I asked, getting out of the car.\n\n\"You're not from here,\" she said, leading me into the tiny bakery. \"It's a well kept secret.\"\n\nA plump woman with steel gray hair, pince nez glasses, and a white smock with matching apron smiled and leaned toward us from behind the counter as we approached. Five minutes later, we were seated at a tiny table in the corner, nibbling on fresh croissants and sipping hot espresso.\n\n\"How did I ever miss this place?\"\n\nKristin grinned. \"I told you: You've got to grow up here to find these little out of the way cubbyholes.\"\n\n\"So why don't you tell me about yourself?\" I asked, afraid to look at her as I spoke.\n\n\"What d'ya wanna know?\"\n\nI lifted my eyes to meet hers, and she was smiling easily. \"I don't know. I mean, I know you're a teacher. And I know you've got a little boy--Ben. I know you were married to the writer. Tyler Whatever-his-name-is.\"\n\n\"Collins,\" she said, the smile still there. \"Tyler Collins. He was my first husband. My second husband was a cop, and that one didn't last very long. Ben is Tyler's son. Randy and I--he's the cop--Randy and I didn't have any kids.\" She snorted. \"That one barely lasted long enough to even get all the wedding presents unwrapped.\"\n\nOver the next half hour--the latter half spent walking the main drag together--Kristin told me all about how she'd gone through two husbands. How she'd grown lonely and impatient with Tyler; left him in Florida and moved back to Illinois; married Randy; had Ben, who ended up being Tyler's son; gotten dumped by Randy; begged Tyler for a second chance; started teaching; was turned down by Tyler, who instead married his editor; and spent the past five years plus raising her son and going on the occasional date.\n\n\"Questions?\" she said when it was done, her voice soft and resigned.\n\nI stopped and turned, looking at her. \"This isn't an interrogation, Kristin.\"\n\n\"I know. It's just that . . . well . . . I mean, I've made some real major mistakes. Some mistakes that've hurt a lot of people. Not just Tyler and Randy. Ben, too. And Tyler's folks and my folks and my cousin and . . . well, a lot of people.\"\n\n\"Did you do it to hurt them? Intentionally hurt them?\"\n\nShe shrugged. \"Doesn't really make any difference, does it? The point is that I did hurt them. Because of me, they all suffered. Why I did it doesn't really matter. It just matters that I did it.\"\n\n\"And you don't think that they're even a little bit at fault for any of this? You think Tyler--and especially Randy--aren't even a little bit at fault?\"\n\n\"Tyler, maybe a little. Not really, though. I really put him in an impossible position. Randy, quite a bit more. But still, none of it wouldn't have happened without me. If I'd had my head out of my ass--maybe been able to think it all through better--then I'd like to think I wouldn't have done it. But . . . well, I'm pretty sure I'd have still done it. Then, at least.\"\n\n\"And now?\"\n\nShe shook her head. \"Not a chance.\"\n\n\"So what's different?\"\n\n\"Ben,\" she said, surprised I had asked such a stupid question.\n\n\"That's all?\"\n\nShe started walking again. \"Of course that's all, Luke. C'mon, you've got Kyle. You know what I mean. You think you'd ever do all that shit if it meant putting him through all of that again? If he'd have to go through a second divorce with you?\"\n\n\"I didn't even want him to go through the first divorce.\"\n\n\"No,\" she said, her low, reflective tone matching mine. \"If I'd known I was pregnant, I'd have never left. I'd have come clean with Tyler and begged him to forgive me and I'd have spent the rest of my life trying to hold my family together.\"\n\n\"You think he'd have forgiven you?\"\n\n\"Dunno,\" she said. \"I'd like to think he would've. He was always a great guy. Still is.\"\n\n\"You sound like you're still in love with him.\"\n\n\"Sure. Why not? He's Ben's father, and he's a great guy.\"\n\n\"But?\"\n\n\"But he's moved on. He's got a new wife now, and they've got a little girl of their own now, too. So yeah, sure, I still love him. But it's really a fond love. A comfortable love. Not a burning passion. I gave that up. Our ship sailed, and even if it came back to port I couldn't get on again.\"\n\nI was silent, and she didn't say anything else until we were in the car driving back to my place.\n\n\"Penny for your thoughts,\" she said.\n\n\"I don't know,\" I replied, eyes on the road. \"I just can't help but thinking that maybe Whitney--she's my ex--that she didn't really think this all through.\"\n\n\"I don't know,\" Kristin said, putting her hand on my forearm. \"Sounds to me like she changed her mind toward the end. Like she wanted to do what I wish I'd had the chance to do. Beg your forgiveness and try to spend the rest of her life making it all up to you.\"\n\nI shot a glance at Kristin, then back to the road. \"Just one thing missing,\" I said.\n\n\"I know. She didn't want to have to come clean in the process.\"\n\n\"Bingo.\"\n\nWe pulled into the driveway beside her car, and I shut down the engine.\n\n\"Luke?\"\n\n\"Kristin?\"\n\n\"If she'd have come clean,\" she said, turning to me. \"If she'd told you everything up front, would you have forgiven her?\"\n\nI thought about it for a moment, then shrugged.\n\n\"Guess we'll never know.\"\n\nCHAPTER ELEVEN\n\nI'd asked Kristin to dinner for that night, but she begged off. Dinner with her folks. She promised to call me the next day sometime, and I told her I'd be there.\n\nSo my first Saturday night alone consisted of Puppy Chow for Sun Tzu and a bowl of soup for me. Five episodes into the Band of Brothers box set, I put the pup in his crate, went back to the couch, and went to sleep.\n\n* * * * *\n\nOne of the worst parts about growing old is my inability to sleep much more than six hours a night. As a teenager, most of my weekend was spent in bed until almost eleven. At West Point, of course, that changed dramatically: I was up by 0430 every morning. That's really early for those of you not acquainted with military time. The rest of my time in the Army was similarly spent in snatches of sleep. After the Army, though, I enjoyed sleeping until at least eight or nine most weekend mornings, and managed at least eight hours of sleep nearly every night.\n\nNow, though, when I most needed to sleep my time away to avoid the unbearable emptiness of the house, you think I could sleep now? Not a chance.\n\nSo there I was at five thirty, walking a clearly irritated puppy around the block for the fourth time. A few hundred yards into the fifth trip around, a tall, elderly man in pajamas and a bathrobe was waiting for me from his front porch.\n\n\"You shouldn't do that,\" he called.\n\nI stopped and turned to him.\n\n\"Do what?\"\n\nHe nodded down at the wheezing puppy. \"Walk him so much. Or so fast, either. He's a pug.\"\n\n\"And you know this how?\"\n\nHe smiled a patient smile. \"Because it's what I do. I'm a vet.\"\n\nI looked down at Sun Tzu, then back to the man on the porch. Scooping the dog into my arms, I walked to the front porch.\n\n\"Sorry,\" I said. \"I didn't mean to be snotty or anything.\"\n\nHe looked at me for a moment, then to the dog now snuggled into my chest.\n\n\"Allen LaCroix,\" he said, reaching over to pet the puppy.\n\nHe was about seventy, tall and gaunt, bald with a gray, close-cropped monk's ring of hair and reading glasses. His forearms, though, belied his age. They looked like bands of steel.\n\n\"Luke Patterson,\" I responded.\n\n\"Pugs have a shortened, soft palate,\" he explained, looking at me as he spoke, \"so they're just not good at breathing. It's why they snore so loud. And wheeze and pant so much, 'specially in hotter weather. They get winded and overheated real easy, so you need to keep an eye on 'em in this weather. Make sure he gets plenty of water when you get him home. And you may want to check out the pads of his paws. They're probably swollen pretty bad. Ice them.\"\n\n\"But I only--\"\n\n\"Walked him four times around the block today,\" he said. \"I know. I counted. And you walked him for nearly an hour yesterday. Probably two and a half, maybe three miles you walked him. I saw that, too, while I read my papers near the front window. You'll kill him, son. Sure as shit, you keep it up and you'll kill him.\"\n\nI nodded, terrified of what I'd nearly done. \"I didn't know.\"\n\nHe smiled. \"Most first-time pet owners don't have a clue. Someone shoulda told you, but they didn't. So now I'm telling you.\"\n\nHe scratched Sun Tzu behind the ears. \"Water. First thing when you get him home--and you'd best carry him there. See how he's already panting so's he can't quit?\"\n\nHe was, but he was also looking up at me with adoring eyes and--to my eternal shame--love and happiness and trust.\n\n\"Promise,\" I said.\n\n\"Okay, Luke Patterson,\" he said. \"Just thought you should know.\"\n\n\"How'd you know I'm a first-time pet owner?\"\n\nHe chuckled. \"Because you're letting the dog walk you instead of the other way around. Next time you walk him, keep him cinched in tight to your side. If he tries pulling ahead, jerk him back. You've got a harness collar here, so you won't be hurting him none. You'll just be showin' him who's the boss.\"\n\nHe chuckled again, then waved and went back into his house.\n\nI walked back home, got Sonny a big bowl of fresh, cold water, and put him down. He drank nearly half the bowl in no time, and his panting started to subside.\n\n\"Sorry, boy,\" I said, petting him when he was done. He wagged his tail, then went to the living room and curled up in the middle of the floor.\n\nI, on the other hand, spent the next hour getting over the shakes that had overcome me. Christ, how would I have explained to Kyle why Sonny was dead?\n\nAs if enough shit wasn't going wrong in his life, he came inches from having me kill his dog.\n\nJesus H. Christ!\n\n* * * * *\n\nBy nine, I decided to go grocery shopping. Do you have any idea how bored you have to be before grocery shopping actually becomes the highlight of your day?\n\nI was in the produce aisle when I heard the familiar voice behind me.\n\n\"Ewww,\" Heather Farley said, reaching in and smacking the zucchini from my hands. \"Don't buy that, Professor. It's gross.\"\n\nI looked at her and laughed. \"Good morning, Ms. Farley.\"\n\nShe gave a bright smile, as did the shorter brunette next to her.\n\n\"Morning, Professor Patterson,\" she intoned in mock schoolgirl.\n\n\"Okay. Fine. We're not in class. Call me Luke.\"\n\n\"And you'll call me Heather?\" she said.\n\n\"And me Brandi?\" the other girl asked.\n\n\"Fair enough.\" I turned back to the zucchini. \"So what's so gross about zucchini?\"\n\n\"Not zucchini,\" Heather said. \"Just that zucchini.\"",
        "\"Okay, I'll bite. What's so wrong with that zucchini?\"\n\nShe looked at me like I was hopeless. \"It's crappy and grown with pesticides and insecticides and picked before it's ripe and ripened with gases and transported from God knows where and it's God knows how old. Get the picture?\"\n\n\"Okay. And my alternative is?\"\n\n\"Dude,\" Brandi chimed in. \"Look around yourself. You're in the breadbasket of the Midwest. You drive down any road and within five miles you'll find farmstands all over the place. It'll be better and fresher and taste better and be better for you.\"\n\nI looked from Brandi to Heather and back again. These girls seemed like clones with a passion for long, run on sentences.\n\n\"And fruit?\"\n\n\"Melons are in season,\" Heather said, then flashed me a look that seemed to invite me to take a quick peek at her melons.\n\n\"Same farmstands?\"\n\n\"Usually.\"\n\n\"And meat?\"\n\nHeather looked at Brandi and they nodded almost in unison. \"Sure, you can buy your meat here. Not your bread, though. There's this bakery on Winsted Street? You know the one?\"\n\nI nodded. \"Just went there yesterday for the first time.\"\n\nThey nodded knowingly. \"That's your best bet.\"\n\n\"Come on,\" Heather said. \"Follow us. We'll help.\"\n\n\"I'm pretty sure I can take it from here,\" I protested.\n\n\"Yeah. Right,\" Brandi snorted.\n\nShe rolled her eyes at Heather who rolled her eyes back in response.\n\nSo I spent the next half hour being guided around the grocery store buying almost nothing except milk, coffee, pasta, meat, and frozen vegetables (though only if those vegetables were out of season). And, strangely, it was fun. Heather and Brandi were a pair of chatterboxes, talking almost nonstop about classes, professors, boys, and the like.\n\nOnce through the checkout lane and into the parking lot, Heather turned to me.\n\n\"So you wanna follow us to some farmstands?\"\n\nI smiled. \"No thanks. I'm pretty sure I can take it from here. And this time I mean it.\"\n\nHeather batted her eyes at me. \"What's wrong, Professor? Afraid of being left alone with the two of us for too long?\"\n\n\"Yeah, Professor,\" Brandi joined in, putting an arm around Heather's waist and pulling her hip in close. \"Don't think you can handle it?\"\n\nI felt the blood rush to my head, both in embarrassment and in sudden arousal. I tried to stammer, and they both started giggling.\n\n\"Okay then,\" Heather said, flashing a grin that offered promises of things I'd only heard about, \"but if you change your mind, you've got my e-mail.\"\n\nI barely managed a wave.\n\nAn hour later, now fully loaded up with fresh bread and croissants and some vegetables from a farm stand two miles out of town, I was back in my kitchen unloading my morning's haul. There were no messages, and I was more than a bit disappointed.\n\nThe phone finally rang, though, when I finished putting the groceries away.\n\n\"I was wondering when you would call,\" I answered.\n\nThere was silence, then Whitney spoke. \"Oh. You were . . . uh . . . expecting someone?\"\n\nI deflated. \"Yeah, sorta. What's up, Whit?\"\n\n\"I was wondering if I could bring Kyle back today instead of tomorrow like we'd planned.\"\n\n\"Something wrong?\"\n\nShe hesitated, then answered. \"Well, he's pretty bored. And he misses his puppy, too. And . . . well . . . I've got a pretty big trial starting on Tuesday, and I'm thinking of getting an early start on final trial prep.\"\n\nI thought about it for a moment, wondering if this would screw up any potential plans Kristin may offer.\n\n\"Luke?\"\n\n\"Sorry,\" I said. \"When're you thinkin' of bringing him back?\"\n\n\"Now?\"\n\nI looked up. It wasn't even eleven yet. \"Sure, that's fine. Whenever. I'll be here.\"\n\n\"Thanks, Luke,\" she said. Then, after a slight pause, she added, \"I hope I'm not messing up something for you.\"\n\n\"I'll deal with it,\" I said.\n\n\"Sorry.\"\n\n\"See you soon.\"\n\nI hung up. No good bye, no I love you. Just hung up.\n\n* * * * *\n\nKristin called just after Whitney dropped Kyle off. He was in the back yard, playing with Sonny, when the phone rang.\n\n\"Hello.\"\n\n\"Morning, Luke,\" Kristin said.\n\n\"Good morning to you.\"\n\n\"So do you have any plans for today?\"\n\nI sighed. \"Whitney just brought Kyle back. A day early.\"\n\nShe laughed. \"Welcome to it. Might as well get used to it now.\"\n\n\"This happens to you a lot?\"\n\n\"No,\" she said. \"Not a lot. Sometimes, though. And sometimes it goes the other way. Sometimes I use Tyler as a babysitter if I have a hot date or something.\"\n\nI pondered this, wondering how often she had hot dates.\n\n\"You there?\" she asked.\n\n\"Yeah, still here.\"\n\n\"Well, do you still wanna get out of the house today?\"\n\n\"You got something in mind?\"\n\n\"I do, actually,\" she said. \"Think you can handle being around my ex-husband and his new wife?\"\n\n\"Say again?\"\n\nShe laughed. \"Tyler's invited me out to his house for a cook out. A Labor Day party. I mentioned I might be bringing a date, and he said fine.\"\n\n\"Yeah,\" I said, \"but Kyle--\"\n\n\"Is welcome to come along. Ben will be there--along with at least a dozen other kids--and Tyler's got a pool they can play in.\"\n\n\"And you won't be uncomfortable?\"\n\n\"No,\" she answered. \"This doesn't happen often, but it happens often enough that everyone's pretty comfortable with the situation. I mean, we're not all best buds or anything, but we get along and put up that front for Ben. And we still have a ton of mutual friends, so it's not really all that uncomfortable anymore.\"\n\nI looked out at Kyle, realized Sonny was already tiring and needed a nap, and figured I had nothing better on my platter. Okay, that and I wanted to see Kristin in a swimsuit.\n\n\"So do I bring swim trunks?\"\n\nShe laughed. \"If you wanna swim.\"\n\n\"You bringing a swimsuit?\"\n\n\"I guess you'll just have to come along and find out, won't you?\"\n\n* * * * *\n\nAn hour later, swim trunks and towels for Kyle and I in a duffle bag, we picked up Kristin in front of a small, neat house with perfectly maintained landscaping and a flawless lawn.\n\nShe opened the door before I could ring the doorbell.\n\n\"Come in for a sec,\" she said. \"You can help me carry the beans and some stuff.\"\n\n\"Was I supposed to bring something?\" I asked, following her through a neat and homey living room into a tiny, galley-style kitchen. She was dressed in shorts and a sleeveless, button-up blouse, and I appreciated the view of her smooth, toned legs and extremely nice posterior flexing beneath her shorts.\n\n\"Not really,\" she said, unplugging a crock pot on the counter and nodding for me to take it. \"If you want, we'll stop on the way out and you can get a case of beer or pop or something.\"\n\n\"Fair enough,\" I agreed.\n\nShe scooped up a duffle bag of her own and her purse and turned. \"Sorry, but there's no time for a tour now. Maybe next time?\"\n\n\"Sure,\" I said, looking around one last time before following her out. \"It's nice, though.\"\n\n\"Yeah,\" she agreed. \"Cozy. And not too much.\"\n\n\"Who does your landscaping?\" I asked as she opened the back door to my car and she and Kyle exchanged greetings.\n\n\"No one,\" she said, putting her things down on the back seat before taking the crock pot from my hands and putting it on the floor before turning to me. \"I do it all myself. Keeps me busy when Ben's with his dad.\"\n\n\"It's real nice,\" I said, opening her door.\n\n\"Thanks,\" she said with a bright smile, sliding into the seat and buckling her seat belt.\n\n* * * * * \n\nAn hour later, I'd met most of the twenty or so adults at the party. Tyler Collins and his wife Marisa--she was an up and coming science fiction author, I was told--were pleasant and easy to talk with. Their home was pretty, but not too large or in any way ostentatious, and it sat well off the road on a five-acre parcel surrounded by hundred-year old oak trees.\n\n\"And you were in the Army?\" Tyler said.\n\nI nodded. \"Got out in ninety-two.\"\n\n\"What did you do?\" Marisa asked. She was pretty in a tall, gangly sort of way, and her smile was easy, but sly and half-hidden. Also, she didn't seem to speak much, but when she did it was direct and to the point.\n\n\"Infantry,\" I said. \"Platoon leader.\"\n\nShe nodded, and Kristin spoke up.\n\n\"Kyle told the class he's some kind of war hero.\"\n\nTyler raised an eyebrow at that. \"War hero?\"\n\n\"Forgot to duck,\" I answered.\n\n\"That Kuwait and Iraq thing? Desert Storm?\"\n\n\"That's the one,\" I confirmed. \"Gulf War.\"\n\n\"Did you see battle?\" Marisa asked.\n\nI hesitated, then nodded.\n\n\"And you did something heroic?\"\n\n\"No more than I was supposed to do.\"\n\nMarisa's sly smile returned, and she fixed me with a stare. \"Are we going to have to torture you to get the story out of you?\"\n\nI felt their stares and knew they wanted me to tell them some John Wayne tale of valor and honor and all that other bullshit. But I knew they wouldn't understand. None of them had been there, and you had to have been there.\n\nMarisa sensed my hesitation, though, and let me off the hook. \"You could learn something, Tyler,\" she said, still looking at me.\n\n\"And what's that, dear?\"\n\n\"Mystery is a good thing.\"\n\n\"But I write mysteries.\"\n\n\"I mean in a person,\" she said. \"Sometimes it's best to keep certain things to yourself.\"\n\nHe laughed. \"And I'm what? An open book?\"\n\nI watched them, worried about a potential flare up. But her sly smile was now turned on him, and coupled with a softness in her eyes that showed she loved him just the way he was. And his confidence in receiving that look--in knowing her devotion to him--was also visible in his easy stroking of her arm.\n\n\"Not in you, Tyler. In your characters. Hold some things back. Let the readers wonder what the secrets are, and don't spill them all at the end.\"\n\nHe nodded at this, looking from Marisa to Kristin to me. Then his grin nearly split his face. \"My harshest critic.\"\n\n\"So,\" Kristin said in the lull, \"anyone going into the pool?\"\n\n\"Are you?\" Marisa asked me.\n\nWhen I hesitated, Kristin flashed me a devilish grin. \"I'm only going in if you're going in.\"\n\nI looked at Tyler and Marisa, both of whom had lopsided grins on their faces, then back to Kristin. I really did want to see her in that swimsuit, I decided, and--assuming we were going to become at least friends--I was only putting off the inevitable.\n\n\"Where do I change?\" I asked.\n\n\"Follow me,\" Kristin replied, taking my hand and smiling.\n\n\"If you're not out in five minutes,\" Tyler said, grinning and raising his eyebrows.\n\n\"He wishes,\" Kristin snorted back at Tyler. \"He can use Ben's room. I'll use the hallway bathroom.\"\n\n\"Spoilsport,\" Marisa chided.\n\nFive minutes later, towel wrapped around my waist, I walked back to the rear lawn of the house.\n\n\"You have the whitest legs I've ever seen,\" Kristin said.\n\n\"Like a ghost,\" someone next to Tyler said.\n\n\"Why the towel?\" Marisa asked. \"You wearing Speedos or something?\"\n\nI looked from her to Kristin to the others, then took the towel away from my waist.\n\nThey tried not to gasp or look shocked, but none of them managed to totally control their surprise.\n\n\"Like I said,\" I explained, looking down at my the jagged lines of scar tissue rising above the suit from my right hip and going down nearly to the knee of my right leg, \"I forgot to duck.\"\n\nKristin drew near and reached out, her fingertips tracing the angry, knotted lines of scarring above my waist band.\n\n\"I'd rather you didn't do that just now,\" I said softly. \"Something's liable to pop up in a most embarrassing manner.\"\n\nThe tension broke and everyone laughed. Then Tyler offered to let us go back in and take some more time changing if that was going to be the case while others just suggested a corner of the pool away from the children. And though Kristin seemed to take it all in stride, I was beginning to blush.\n\n\"Oh look,\" Tyler laughed. \"Looks like someone's got a crush on someone.\"\n\n\"Tyler,\" Marisa warned, shooting him a glance.\n\n\"Sorry,\" he said, still chuckling. \"Go on, you two. Keep an eye on the kids for awhile and we'll start grilling.\"\n\n\"Sure you don't want some help?\" I asked.\n\nHe shook his head. \"Positive. Just go have some fun.\"\n\n* * * * *\n\nAfter a half hour in the pool, mostly spent avoiding getting splashed, dunked, or otherwise jumped on by a dozen kids of all ages, Karen and I were sitting on the concrete slab with our feet dangling in the water.\n\n\"Does it hurt?\" she asked, her eyes on the kids.\n\n\"No. The warm water makes it feel pretty good, actually.\"\n\n\"Is that why Kyle says you're a war hero?\"\n\n\"No,\" I said, turning to look at her. Granted, it was only a one-piece suit, but she did a nice job of filling it out. \"His mom told him that. The first time he saw the scars, he wanted to know what it was. That's what she told him.\"\n\n\"Does he know what it's from?\"\n\n\"He knows as much as you.\"\n\n\"Does anyone else? I mean, besides Whitney, of course, and probably your folks and whoever was there when it happened.\"\n\n\"Nope. You've about covered it. Except I never told my folks.\"\n\nUnderstanding now how quiet I kept the matter, she was tentative with her next questions.\n\n\"So are you?\"\n\n\"Am I what?\"\n\n\"A hero?\"\n\n\"Tough to define, don't you think?\"\n\nShe turned and fixed me with a stare. \"Did the Army define it that way?\"\n\nI stared back, then nodded. \"Yeah. I got my medal for it. Medals, if you count the Purple Heart.\"\n\n\"Which one did you get?\"\n\n\"Silver Star.\"\n\n\"Is that a biggie?\"\n\nI shrugged. \"Sure. Third highest one they give out.\"\n\nShe gave me a smile and a raised eyebrow.\n\n\"What?\"\n\n\"So I guess you really are a hero then, huh?\"\n\nI chuckled. \"No. Like I said, just too damned stupid to get the hell down.\"\n\nI watched her face move closer, and I froze, my eyes getting wide.\n\nShe kissed me. Not a smoldering kiss; not really even a romantic kiss. Just a light brushing of her lips against mine. Whatever you call it, though, it was electric, and it was over before I could kiss her back.\n\nThen reality hit, and I looked around. No one else had seen it, including Kyle.\n\n\"Don't worry,\" she whispered. \"He wasn't looking.\"\n\nI smiled, glad she understood and didn't mistake my reaction for rejection.\n\n\"Always wanted to kiss a hero, Luke Patterson,\" she said.\n\nI felt the giddiness in my belly, a lightness that hadn't been there in a long time.\n\n\"That all you ever wanted to try with a hero?\" The words were out of my mouth before I could check them.\n\nHer grin got downright flirtatious at that. \"Maybe if it's the right hero. You know, not just any old hero.\"\n\n\"So there are a lot of those around here to pick from? Heroes, that is?\"\n\nShe laughed. \"Good point.\"\n\n* * * * *\n\nBy six-thirty, I was beginning to worry about little Sun Tzu. Sure, he'd sleep twenty hours a day when Kyle wasn't around, but he still needed to eat. Add to that a belly full of chicken, coleslaw, beans, and potato salad, and I was also ready to just crash and relax.\n\n\"But Dad,\" Kyle protested, \"Ben wants me to spend the night.\"\n\nI looked at Kristin, who shrugged.\n\nJust then, Marisa came over. \"Sorry,\" she said. \"Ben asked a couple of hours ago. And it's okay with us if it's okay with you.\"\n\nI looked from her to Kyle, then to little Ben standing impatiently and expectantly ten feet back, then back to Marisa. Okay, I didn't know them from Adam, but how dangerous can two authors really be?\n\n\"You're sure it's not a problem?\"\n\nShe smiled. \"Really. Ben wants him to stay, and we've got plenty of room.\"\n\n\"What time should I pick him up tomorrow?\" I asked, at which time Kyle gave a whoop of joy and Ben pumped his fist.\n\nKristin chuckled, and Marisa grinned. \"We'll drop him off at your place. Probably at about noon.\"\n\n\"Thanks,\" I said, which she waved off before giving me a hug and thanking me for coming.\n\nI took five minutes to lecture Kyle on manners, being on his best behavior, and all the other crap my parents always lectured me about when staying at someone's house for the first time. He spent those five minutes rolling his eyes and waiting for me to finish so he could get back in the pool.\n\nMost of the drive back to town was spent in a comfortable silence. It became a lot more comfortable when Kristin grabbed my free hand and put it on top of her thigh down near the knee. I shot her a look, but she was just staring straight ahead with a smile playing at her lips.\n\n\"So you wanna get a drink somewhere before you drop me off?\" she asked.\n\n\"Sounds nice,\" I replied. \"Can I drop by the house and feed Sonny first? And let him out of his cage for a few minutes?\"\n\n\"Sure.\"\n\nFive minutes later, Sonny was out of the cage and scampering around the backyard, sniffing every blade of grass before lifting his leg and claiming it as his domain.\n\n\"Got a beer?\" Kristin asked from beside me on the deck.\n\n\"Sure,\" I said, going to the fridge and grabbing a couple of bottles of Amstel Light, popping the caps, and returning.\n\n\"One ice cold beer for the lovely lady,\" I said.\n\nShe took a long pull from the beer.\n\n\"Something wrong?\" I asked.\n\n\"Just getting my courage up,\" she said.\n\n\"For what?\"\n\nShe took another long pull from the beer, then gave a tiny burp and giggled. \"Sorry.\"\n\nI snickered, then took a long pull from my own beer.\n\n\"You need some courage, too?\" she asked.\n\n\"I don't know yet. I just figured if you needed some, then maybe I'd better get some, too.\"\n\n\"Oh really?\"\n\n\"Really.\"\n\n\"Then let's see if either of us needed the liquid courage,\" she said, putting her beer bottle on the railing. She turned to face me, then shot a look at my beer bottle.\n\n\"Does this mean that. . . .\" I said, my eyes on her while I put my beer bottle down.\n\nShe nodded, then stepped close, leaned in, and kissed me. No slight brushing of the lips this time. Oh no, this was the real thing. Gentle kiss with light pressure moving to a little more pressure and a slight parting of the lips. Then her tongue was out, tracing my lips until my tongue joined the duel. Her hands were softly running through my hair, and I put my arms around her, hands on her back, and enjoyed the moment.\n\nThen, after maybe a minute, she broke the kiss and looked at me.\n\n\"Thanks.\"\n\n\"I think that should be the other way around,\" I murmured.\n\n\"It was nice.\"\n\n\"It was amazing.\"\n\nShe smiled, a happy smile, not the lascivious one. That told me she'd gone as far as she intended to for the time being.\n\n\"So did I pass the test?\" I asked.\n\nShe searched my face to see if there was any hidden meaning in my words, which there wasn't, then gave me a peck on the cheek.\n\n\"It's not an audition,\" she said. \"It's something I've wanted to do since last week.\"\n\n\"Then why didn't you?\"\n\n\"Because I didn't know if I liked you enough. Remember what I said?\"\n\nI nodded. \"We've got children now. No sense in rushing into something that may only hurt them.\"\n\nShe nodded, relieved at my understanding. \"So I'm sorry if you want more now, but I just can't take that chance. Sleeping together too soon just complicates things. Makes people . . . . I don't know. It just changes things.\"\n\n\"It makes them possessive,\" I said. \"And too appreciative too early, I guess.\"\n\n\"Meaning?\"\n\n\"Meaning if we slept together too soon, then you'd definitely become the rebound, which is not something either of us wants.\"\n\nShe thought about that and her lips narrowed, her eyes staring off to the side.\n\n\"Did I say something wrong?\"\n\nShe turned to me and smiled. \"No, Luke. Not a damned thing.\"\n\nThe smile looked forced, though, and I took a stab at her sudden anxiety.\n\n\"You know,\" I whispered, \"just being the first one after my divorce doesn't mean you'll ever be a rebound. If we play this right--and assuming we don't hate each other in a few months--there's no reason we can't become best friends before we become more. And if that's in the cards, then so be it. If it's not, though, it'll have nothing to do with you being rebound or anything.\"\n\nHer eyes sparkled with teardrops, but her smile told me I'd said just the right thing.",
        "\"Goddamn you're smart. No wonder you're a professor.\"\n\nAnd she leaned in and kissed me again, only this one lasted longer than the first one. This one only ended when Sun Tzu decided to announce his presence by yelping and whoofing and bouncing up and down at our feet.\n\n\"Ouch,\" I said, breaking the kiss.\n\n\"What?\"\n\n\"Little shit just nipped my ankle.\"\n\nShe laughed, then picked up her beer and took a sip. \"Let's get him fed and go have that drink.\"\n\n\"Good plan,\" I agreed.\n\nCHAPTER TWELVE\n\nAt eleven-thirty the next morning, Kyle bounded through the front door and made a bee line straight for Sonny, who was equally elated to see his big brother and best bud. They romped together out to the back yard.\n\n\"Hello,\" I heard someone call.\n\nI walked from the kitchen to the living room and saw Tyler Collins standing in the doorway.\n\n\"Just wanted to make sure someone was home,\" he said.\n\n\"Come on in,\" I said. \"Have a beer or a pop or something.\"\n\nHe smiled, shrugged, and stepped in, closing the door behind himself.\n\n\"Did he behave?\" I asked.\n\n\"Sure,\" he said. \"They had a blast. He may need a nap, though. Sorry, but they didn't fall asleep on the couch until almost midnight.\"\n\nI chuckled. The joys of sleepovers.\n\n\"Name your poison,\" I said, opening the refrigerator so he could see inside.\n\n\"Just a Diet Pepsi, please.\"\n\nI pulled out two and handed one to him. He popped it, took a drink, then placed it on the counter, leaning easily against the countertop as he did so.\n\n\"So what's it like being a bestselling author?\" I asked for want of anything else to say.\n\n\"Busier than you'd think. There's the writing, then the editing. Then more editing. That's after I come up with the story idea and research it all first, of course. And while all that's going on, there's consultations on the movie scripts if it sells, book tours, talk shows, and the rest of the crap that goes into selling the book.\"\n\n\"Sounds pretty hectic.\"\n\n\"Way more hectic than I'd have ever guessed,\" he confirmed. He took another sip, then said, \"And you? The life of a history professor?\"\n\n\"Nine hours a week in class; maybe eighteen hours a week on average preparing for classes and grading exams and term papers; another nine hours a week of office hours to meet one-on-one with the students; and faculty meetings a couple of hours a week.\"\n\n\"That's not so bad,\" he observed.\n\n\"Then,\" I added, \"there's the inevitable research and writing we do on our own, usually with research and editing help from student interns. You know, stuff for historic journals and the occasional small-press book.\"\n\n\"And that's how much more time a week?\"\n\n\"Maybe fifteen hours.\"\n\n\"Okay,\" he said, holding up his hands. \"It now officially reached the borderline of hectic and too much.\"\n\nI shrugged. \"It's not so bad. I can do a lot of the work from home. Class preparation and writing and stuff. And it doesn't really matter what time I do it here, especially now that. . . .\"\n\nHe looked at me, heard my words, and saw the look on my face. He finished my sentence in his head, then said, \"Yeah. That's how I got started writing.\"\n\nI mulled over in my head how to ask the next question, but he saw the look on my face and grinned.\n\n\"So,\" he said. \"You and Kristin are . . .?\"\n\n\"Friends,\" I said. \"For now, at least.\"\n\n\"Good idea,\" he said. \"When I went through it--when Kristin left me--I was just . . . you know . . . .\"\n\n\"Lost?\"\n\n\"Or worse.\"\n\n\"So you would recommend?\"\n\n\"Take it slow. Get to know each other. Talk. A lot. Talk about what you each want out of life and what you like and don't like and all the little shit that can suddenly become a big deal, y'know?\"\n\n\"Sure.\" I took a sip, again unsure how to proceed. Tyler's face was an open book, though, so I just decided to say it. \"She told me what happened with you two.\"\n\nHe nodded. \"Pretty bad.\"\n\n\"But she says she's changed now. That she'd never do it again.\"\n\nHis eyes narrowed, and he looked at me long and hard before speaking.\n\n\"Did she say why?\"\n\n\"That she couldn't put Ben through anything like that again.\"\n\nHe nodded. \"Explains a lot.\"\n\n\"Like what?\"\n\n\"Like her lifestyle since Randy divorced her.\" He finished his pop, put the empty upside down in the sink, then crossed his arms in front of his chest. \"She was a selfish little bitch, Luke. Sorry, but it's the truth. But since her second divorce, she hardly dates. I mean, hell, this town's big, but it isn't that big. And Ben tells us almost anytime she has a date. We're not prying, y'know. But we're usually the babysitters when she does, so we have a pretty good idea. And we all still hang around pretty much the same places, so we'd know if she was with a string of boyfriends.\"\n\n\"But she hasn't been.\"\n\n\"Like a fucking nun almost. Like she's terrified or something.\"\n\n\"And you thought?\"\n\nHe smiled. \"I'd like to say I thought it was Kristin pining away for me, her lost love. But that's bullshit, of course. That would've stopped the second Marisa and I got married. Then we thought she just didn't want to be thought of as a tramp or anything. A MILF, I think they call it nowadays.\"\n\n\"And now?\"\n\nHe shrugged. \"Her reason makes sense. A lot of sense, actually.\"\n\n\"And?\"\n\nHe patted me on the shoulder. \"And I think it means she's not the selfish little bitch she was back then. I think it means she may have just finally gotten her priorities in order, and she's not putting herself at the top of that list.\"\n\nI couldn't look at him when I asked the next question, both from embarrassment and from fear at the answer. \"You know if she's seeing anyone else?\"\n\n\"I'm positive she's not. Ben told me all about her and Allysin taking you out to get the dog. He said that was the first time she's ever even talked about another man or seemed happy about meeting one in ages. Maybe almost a year. And he notices those things. He's pretty protective, I guess. I'm pretty sure he wonders why she's not with someone again like I am.\"\n\nI nodded, contemplating his words and taking all of this in.\n\n\"Still,\" he continued, \"you gotta wonder.\"\n\n\"About what?\"\n\nHe raised an eyebrow. \"She's known you what? A few weeks?\"\n\nI nodded.\n\n\"And you two left together last night, right?\"\n\n\"Right.\"\n\n\"And you spent the night together, right?\"\n\nI gave a sad shake of the head. \"Two kisses. Good kisses. Hell, great kisses. Still, just two kisses, a beer here, two beers at the Bar and Grill, and home to our respective beds by ten.\"\n\nHe put on a look of mock astonishment. \"Not even a handjob? A titty rub? Just a few kisses?\"\n\nI laughed. \"Tell me about it.\"\n\nHe was still laughing when he left a few moments later.\n\n* * * * *\n\nHaving Kyle back after only three days apart reminded me how much busier I was around the house when he wasn't with Whitney. And it reminded me how much happier, and not so alone, I was, too.\n\nAlso, it was fun spending the afternoon making Russian tanks and soldiers in the basement, and painting the cooled tin castings.\n\nIt's easy to see why the father-son bond simply cannot be overrated.\n\n* * * * *\n\n\"Okay,\" I said to Heather and Randy, who were waiting in my office when I got there just before eight on Tuesday morning. \"What've you got for me?\"\n\nRandy looked at Heather, who merely nodded in response. She reached into her backpack and handed me a neatly typed memorandum.\n\n\"And yours?\" I asked Randy.\n\nHe wouldn't look at me, but Heather spoke for him. \"We did it jointly. I ran into him Sunday night, and we spent most of our time going over our two memos. Our ideas were roughly the same, so we put it all together into one neat package for you.\"\n\nI looked from her to him, then down at the memo. \"That true, Randy?\"\n\n\"Yes,\" he stammered.\n\n\"And this one memo contains all of your ideas? The ones you each had on your own?\"\n\n\"Yes,\" he croaked.\n\nI looked at Heather. \"And why did you decide to do it this way?\"\n\nShe shrugged, not the least bit perturbed by my cool demeanor. \"Why should you read essentially the same thing twice? Time is money, you know, and this way you'll get all of the ideas and only have to read them once.\"\n\n\"And we did make the ideas more . . . well . . . more detailed working together,\" Randy added.\n\nI looked at them both long and hard. In the past, I'd had interns who did this, but only because one of them was carrying all of the weight or they'd switch back and forth on the assignments, thereby only doing half the work during the internship for all of the pay and credit. That didn't seem to be the case here, though.\n\n\"Okay,\" I said, tossing the memo aside, \"then tell me what you two think is the best idea for a new way to look at this period in classical Roman history.\"\n\n\"We'll do better than that,\" Heather said, damned near bouncing with excitement in her chair. \"We even came up with a title. And it's enough for a book, too.\"\n\nI raised my eyebrows. \"Then don't keep me in suspense.\"\n\n\"Was Empire Inevitable?\" she said.\n\n\"Meaning?\" I said, holding my hand up for Heather to be quiet so Randy could answer.\n\nHe cleared his throat. \"Meaning did the Roman Republic have to end. How many steps along the way could something have changed--little things and big things--that would've ended the brief monarchy Julius Caesar started and Octavian cemented? And why did it continue after Octavian--after Caesar Augustus--died?\"\n\nI thought about it. Not totally original, but still a ton of different ways to tackle it.\n\n\"That's it?\" I asked.\n\n\"No,\" Heather answered before I could stifle her. \"We compare it to a more modern transition from republic to dictatorship to show how history repeats.\"\n\n\"Okay, Heather, I'll bite: Which modern transition do we use?\"\n\n\"America,\" she beamed triumphantly.\n\n\"Us? The United States?\"\n\nHer head nodded so hard I though her teeth would fly out. \"Sure, we're not there yet. Still, look at the comparisons. Stratification of wealth. Military-industrial complex. The same tired old men--and some women--running our lives from Washington for year after year after year, and all of their campaigns financed by the super wealthy and the business interests. All so those super wealthy can stay in power themselves and use the rest of us to keep them there.\"\n\n\"That sounds a lot like conspiracy theory,\" I said, liking the idea but wondering what else was there.\n\n\"It's not,\" Randy said. \"Think about it. The government waves the flag to keep everyone patriotic and focused on their pride as Americans. The Romans did the same thing. And every time there was a threat to the Empire--every time the people demanded a return to the Republic--the emperors did the same thing.\"\n\n\"Jesus, Professor,\" Heather exclaimed, \"it's how Caesar took total control right from the very beginning. He played the rich off against the poor, promised both something he never really delivered on, and kept them both distracted by wars and pride and each other.\"\n\n\"And Octavian was even worse,\" Randy said. \"He all but canonized Caesar before the people so he could follow through with the Civil War and keep power while executing all of his political foes.\"\n\nI leaned back and looked from one to the other, impressed by their work.\n\n\"The story of Caesar wasn't really in the book,\" I observed.\n\n\"I know,\" Heather said. \"But once the idea took root, I went back and did some quick reading on it.\"\n\n\"And you?\" I asked Randy.\n\n\"He already knew all that,\" Heather answered for him. \"My quick research consisted of reading a term paper he did for Professor Whitman's class last year.\"\n\nI just nodded, still leaned back in my chair and looking from one to the other. But as I thought more about their topic, the more my smile widened. After maybe a minute of silence, they both started grinning, too.\n\n\"It's good, isn't it?\" Heather asked.\n\n\"Uh huh,\" I said. \"Maybe real good. There's been a lot written about the transition from republic to empire, but very little of it looked at it from the other side--from the view of what little things could've changed that would've prevented the whole slide to tyranny.\"\n\nShe shot Randy a look, and he blushed under her scrutiny. But the smile still didn't leave his face. I'm pretty sure he was happier about Heather's approval than about mine.\n\n\"Okay,\" I said, swinging forward in my chair, \"here's how this is going to happen. You two spend the next week independently researching as many sources as you can about the conditions in Rome between, say, 100 B.C. and 47 B.C. Make that 110 B.C. Land reforms were getting under way around then. Stratification of wealth, wars, senators and ruling bodies, maybe even how it was all but hereditary even by that time. And you will do it separately, understand?\"\n\n\"Understood,\" they chimed.\n\n\"Then get together and give me an outline. With sources. Nothing fancy. Just the basics, okay?\"\n\nThey nodded.\n\n\"Then the following week, I want the same thing on the United States for post-World War II to the beginning of Bill Clinton's presidency. And include in that one as many names of long-terms senators and congressmen, high level bureaucrats, and their children or other close relatives in high government positions. Sound doable?\"\n\n\"So long as they're just the basics,\" Heather said.\n\n\"Yeah,\" Randy chimed in. \"We can't get that much depth so quickly.\"\n\n\"Just the basics for now,\" I confirmed, then gave them both a stern look. \"But one other thing you need to include in all of that.\"\n\n\"What?\" Randy asked.\n\n\"You've got your basic premise, okay? You're saying--I'm saying in an article or, more likely, a book--that the Roman Republic slid into dictatorship because of certain things, that altering any of countless little things could've changed that, and that those same certain things are now happening in America, right?\"\n\nThey nodded.\n\n\"Well don't be totally sold on your hypothesis, okay? Just because we think that's the case, don't set out to prove it by ignoring all evidence to the contrary. If there are any differences, I want them, and I want them highlighted, underlined three times, and made crystal clear, okay? Even if there's a contradiction in the sources, I want the contradiction raised. Am I making myself clear?\"\n\n\"Because that may change the hypothesis, but it still doesn't scrap the whole thing, right?\"\n\n\"Exactly,\" I confirmed. \"But if you want the whole thing to be a piece of crap, then ignore anything that disagrees with you and just bully ahead with your own set of facts. And make me look like an ass in the process.\"\n\n\"Being selective with your facts is for demagogues,\" Randy said, starting one of the sayings I harped on in classes.\n\n\"But it's not historians,\" Heather finished for him.\n\n\"For Chrissake,\" I said. \"You two actually listened in class?\"\n\nThey chuckled, but their excitement over my reception of their idea, and their new project, was written all over both of them.\n\n* * * * *\n\nAfter a hellish summer of misery and loneliness, the first day of classes was like slipping into a pair of old leather shoes. Familiar and comfortable. I knew what to expect, was happy to be where I was, and was relieved at the simple joy of teaching a group of young men and women who, for the most part, were equally excited about learning what I had to say.\n\nIt was nice.\n\nAlmost as nice as getting home to Kyle and Sonny.\n\nMy routine there was also quickly becoming easy and comfortable. Not to say it didn't have its moments of crisis and loneliness and bitter memories, because it did. Still, I was learning to deal with both present and past a little better each day.\n\nLittle did I know.\n\nCHAPTER THIRTEEN\n\n\"Look, Dad,\" Kyle said during breakfast, prodding his finger into the picture dominating page one of the Lincoln County Register.\n\n\"I know,\" I said, lowering the paper. \"Your mom's on the front page.\"\n\n\"Why?\"\n\n\"She started a big trial yesterday.\"\n\n\"What kind of trial?\"\n\n\"Some men are charged with selling drugs. Illegal drugs.\"\n\n\"To children?\"\n\nI nodded. Kyle had a real soft spot for all children, which broke my heart lately given the predicament in which he now found himself. \"Sometimes. To adults, too, though.\"\n\n\"And mom's trying to put them in jail?\"\n\n\"That's right.\"\n\n\"Good,\" he said, smiling for the first time at the mention of his mom.\n\n\"That's right, too,\" I agreed. Then I thought of something else. \"She may be a little late tonight, honey.\"\n\n\"Why?\"\n\n\"Because of this trial. They sometimes run late.\"\n\nHe thought about it for a moment, then nodded. \"That's okay, I guess. This seems pretty important, right?\"\n\n\"But not more important than you, little man.\"\n\n\"I know. Just can't be helped, I guess.\"\n\n\"Exactly. But it doesn't mean she loves you any less.\"\n\n\"I know, Dad,\" he said, bored now with the conversation and turning back to the comics.\n\n* * * * *\n\nWhen Whitney hadn't called by six thirty, though, I was getting pissed off. Years of experience had taught me that trials--even major felony trials--usually ended for the day by five. That was more than enough time for her to get home, change, and come pick up Kyle. Definitely enough time for her to at least call.\n\nI started calling her cell phone and office phone at five minutes to seven, but ended up only leaving a string of more frustrating messages.\n\nBy nine, I was too pissed off to even leave a message anymore. Kyle had been in bed for a half hour, sad and upset, and I dearly hoped she would answer so I could chew her ass but good.\n\nBut she still wasn't answering by nine thirty, and I just gave up.\n\nWhat the hell did I expect? She'd blown off visitation early over the weekend, and it was now clear she was putting this trial ahead of Kyle.\n\nAgain.\n\nJust like she'd put it all ahead of me and our marriage.\n\nStill, she was doing this to her own kid?\n\nYou're shitting me, right?\n\n* * * * *\n\nMy senior-level seminar--Twentieth Century Foreign Policy Decisionmaking--finished at two-twenty, and I was packing up my materials in the small classroom when I heard someone clear his throat. I looked up and saw a man and woman, both about my age and both dressed in slacks, dress shirts, sport coat on him and business jacket on her, with weary eyes and for him a natural slouch. She was pretty, tall and slim, with hazel eyes that looked tired. Oh, and I couldn't help but notice the bulges under their armpits from their shoulder holsters.\n\n\"Professor Patterson?\" the man said.\n\n\"What can I do for you, detective?\" I asked, snapping the briefcase shut and leaning against the lectern.\n\nHe shot her a glance, raised an eyebrow, then turned back to me.\n\n\"Shoulder holsters,\" I explained. \"Neat haircuts, dressed in jackets. You're either police detectives--the officers usually wear uniforms--or rogue spies sent here to kidnap me. Since I can't imagine why a foreign government--or even my own, for that matter--would want anything to do with me, I figure you're detectives. Am I wrong?\"\n\n\"Lieutenant Gavers,\" the man said, then nodded his head at the woman. \"Sergeant Adams.\"\n\n\"What can I do for you, Lieutenant?\"\n\n\"Do you have a few minutes? We'd like to ask you some questions.\"\n\nI looked at my watch. \"I can give you fifteen minutes, then I have to get home before my son gets home from school.\"\n\nHe looked at her again, and she shrugged. Something passed between them, in his look and her shrug, and he turned back to me and started right off with the questions.\n\n\"Were you married to Whitney Patterson?\"\n\n\"Yes.\"\n\n\"The prosecutor?\"\n\n\"That's the one.\"\n\n\"And you're divorced now, right?\"\n\n\"Yes.\"\n\n\"When's the last time you spoke with her?\"\n\n\"Sunday morning,\" I said. \"Somewhere around eleven.\"\n\n\"And what was that conversation about?\"\n\n\"She wanted to drop Kyle off a day early. It was her weekend for visitation.\"\n\n\"Did that make you angry?\"\n\n\"A little. But it ended up working out.\"",
        "\"And why were you angry?\"\n\n\"None of your business.\"\n\nHe looked at the pretty sergeant, who gave a grim smile and took over the questioning.\n\n\"Did she say why she was dropping him off early?\"\n\n\"Yes.\"\n\nShe waited for me to continue, but I was already a bit peeved by their attitudes and the tone of the interrogation. So fuck 'em: I'd answered the question; let them ask the next one.\n\n\"Okay, Professor,\" she said, her impatience showing, \"why was she dropping him off early?\"\n\n\"She said she was dropping him off early,\" I stressed, given that I didn't really know if she was telling the truth, \"because there was nothing for Kyle to do at her apartment, he was bored, he missed his puppy, and she wanted to start prepping early for her big trial that started a couple of days ago.\"\n\n\"But you didn't believe her?\" she asked, catching the qualifier I'd put on my answer.\n\nI shrugged. \"I didn't really think about it. If that's what she said, that's what she said.\"\n\n\"So you don't trust her?\" Lieutenant Gavers asked, zeroing in for the kill shot I'd given him with my pedantic demand for precise answers.\n\n\"She's my ex-wife, Lieutenant. As of only about a month or so ago. So you'll excuse me if I don't exactly . . . if we're not really on the best of terms right now.\"\n\n\"So it was a bitter divorce?\" he pressed.\n\n\"Is there a cheery one?\"\n\n\"So it was bitter,\" Sergeant Adams said, writing in her notebook.\n\nWhen I said nothing to her restatement, Lieutenant Gavers took over again.\n\n\"What did you say? When she said she was bringing him home.\"\n\n\"I told her to go ahead. Any plans I may have hoped for would be adjusted.\"\n\n\"Were you angry?\"\n\n\"No.\"\n\n\"Not even a little?\"\n\n\"No.\"\n\n\"You're telling me--\"\n\n\"The proper way to ask the question, Lieutenant,\" I said, my voice going to pissed-off-professor-lectures-student mode, \"is, 'How did her request to bring him home early make you feel?'\"\n\nHe glared at my tone, and I glared right back at him.\n\n\"The answer to that question,\" I continued, \"is frustrated. It was frustrating. We'd already rearranged the weekend schedule to give her time to get set up. Then she missed her first Wednesday night for the same reason. Now she was cutting short her first visitation for work. So I was frustrated. And sad, too. For Kyle. He doesn't deserve to play second fiddle in his mother's life.\"\n\nI turned to Sergeant Adams, whose face softened and her gaze now avoided mine. \"Write it down, Sergeant. 'Frustrated.' You didn't miss bitter, so don't miss this one.\"\n\nShe turned to Gavers, and he nodded. She wrote it down.\n\n\"Let's cut this short,\" I said. \"She dropped him off at the curb--didn't even bother bringing him to the door or helping him with his duffle bag or anything--and that's the last I've heard from her.\"\n\n\"What about last night?\" Sergeant Adams said. \"It was a Wednesday. Did she show up?\"\n\nI shook my head. \"Without even bothering to call. Just blew him off. And yes, that did piss me off. A lot.\"\n\n\"So what did you do about it?\" Gavers asked.\n\n\"Left about seven messages between her cell phone and her office voicemail.\"\n\n\"When?\"\n\n\"Between seven and about nine-thirty.\"\n\n\"And the tone of your messages?\"\n\n\"Starting at pissed off and ending at extremely pissed off. You should've seen Kyle's face as the night wore on without her even bothering to take the time to at least make a fucking phone call.\"\n\nI felt myself shaking with rage at the memory of my little boy's disappointment. Gavers's next words, though, popped my rage like a pin to a balloon.\n\n\"She's missing,\" he said. \"She didn't show up at work this morning. No one's seen her since she left the courthouse at just after five last night, Professor.\"\n\nMy eyes went wide and darted between the two of them.\n\n\"So you were at home last night between, say, four-thirty and eight?\" Adams asked.\n\nI nodded.\n\n\"Anyone see you? Other than your son?\"\n\nI nodded. \"My neighbors, the Romescus. They saw me at probably about five. We chatted for a few minutes while the kids played. Then again at about six-thirty and a couple of times after that when I went out onto the back deck to call Whitney.\"\n\n\"They were out in their yard all night?\"\n\n\"Yeah,\" I said, my voice cracking, my throat dry. \"Having a barbecue. Then Sally and Charlie just sat on the deck talking and watching their kids running around until about seven-thirty or so. They weren't out there after that.\"\n\nI saw a movement at the door and looked over Gavers's shoulder.\n\n\"Professor Whitman,\" I said to the spry Dean of History.\n\n\"I . . . uh . . . Luke, I was . . . .\"\n\nI looked at the two detectives.\n\n\"We're finished here,\" Gavers said. Sergeant Adams snapped her notebook shut while Gavers fished around his jacket pocket.\n\n\"Here,\" he said, extending a wrinkled, worn business card. \"You think of anything--and I mean anything--you call, okay?\"\n\n\"Yeah.\"\n\nI put the card in my pocket while I watched them leave. They both nodded to Professor Whitman as they walked past him.\n\n\"Luke, is now a bad time?\"\n\nI just stared at him, wondering what I was going to tell Kyle.\n\n\"What is it?\"\n\n\"It's Whitney,\" I said. \"She's disappeared.\"\n\nHis eyes went wide. \"My God.\"\n\n\"Sorry,\" I said, snatching up my briefcase. \"I gotta get home before Kyle gets there.\"\n\nI strode past him without another look.\n\n* * * * *\n\nI checked the call history on my home phone and saw a number from Sunday I didn't recognize. I dialed the number, writing it down on a piece of paper while it rang.\n\n\"Hello?\" she said.\n\nThank God, right on the first try.\n\n\"Kristin,\" I managed, my eyes locked on Kyle in the backyard.\n\n\"Luke?\" she said. \"Something wrong?\"\n\n\"Can you come over here?\"\n\n\"Luke, you're scaring me. What's wrong?\"\n\n\"It's Whitney. She disappeared.\"\n\n\"Did-a-runner disappeared or kidnapped disappeared?\"\n\n\"I think it's the second one,\" I said. \"The cops interviewed me. An hour and a half ago. She didn't show up for work this morning, and no one's seen her since last night.\"\n\n\"Maybe she just wanted to get away from everything for awhile,\" Kristin said.\n\n\"Not a chance. She's right in the middle of a huge trial. If she just took off, she'd get fired and then some. Hell, she'd never work again. Maybe even lose her license or something.\"\n\nKristin didn't even pause. \"We'll be right over.\"\n\nTen minutes later, Ben charged through the house and out the sliding glass door to the backyard. Kristin was close behind him, her face anxious as she looked me over.\n\n\"You holding up?\"\n\n\"What do I tell him?\" I asked.\n\n\"Nothing. Not a damned thing.\"\n\n\"But what if . . .?\"\n\nShe set her face in grim determination. \"If it's the worst case scenario, you tell him when you know for sure. Otherwise . . . well . . . otherwise just tell him she's busy and she'll spend a lot of time with him when the trial's over.\"\n\n\"Lie to him?\"\n\n\"Yes, Luke. Jesus Christ, you can't tell him she's missing. You wanna tell him the truth? Tell him she's maybe in a ditch somewhere dead? Or worse, being raped and beaten and tortured?\"\n\nI shuddered. These images had raced through my mind--all of the worst case scenarios--but Kristin was the first one to put them in words. And ex-wife or no ex-wife, Whitney was still Kyle's mother. Also, I realized for the millionth time, there was still some love in my heart for the woman who'd cast me aside like yesterday's bathwater.\n\n\"Listen,\" Kristin said, her voice getting low and steady, \"if he thinks she's blowing him off, he'll be hurt and angry and resentful. But sadly enough, there are others in his class--hell, one in the backyard with him right now, for that matter--who've all gone through the same thing. Kyle's been dealing with it for the past five or six months, and this'll just seem like an extension of that. But if you tell him she may have disappeared or worse? Jesus, Luke, he'll be a total basket case. He'll have nightmares and . . . and it won't be good. So don't tell him what's going on unless you have to.\"\n\nShe was right. Fuck absolute morality. Nothing is black and white; the world's comprised of varying shades of gray. And if ever there was a time to lie to your child, this was damned sure one of them.\n\n\"So what else do I do?\" I asked.\n\n\"You let the police handle it,\" she said. Seeing the look on my face, she rushed to continue. \"I know it's not going to be easy. I know you'll feel helpless and useless and all that, but there's nothing else you can do. You're a history professor, Luke, not a trained policeman, right?\"\n\n\"Still,\" I said. \"There's gotta be something I can do.\"\n\nShe pulled me in and hugged me tightly. I hung my face into her shoulder and caught a whiff of her shampoo. Peaches. Same as Whitney's shampoo sometimes.\n\n\"You hold together, Luke,\" she whispered into my ear. \"That's what you can do. You hold it together and be strong in front of Kyle. You be there for him. That's the most important thing you can do right now, understand?\"\n\nI just squeezed her tighter in response, feeling better at the close contact with another human being who cared.\n\n\"Now let's get some dinner going, okay?\" she said, and loosened her grip on me. \"We'll stay for awhile so Kyle's got Ben to play with.\"\n\n\"Thanks,\" was all I could think of saying.\n\n\"What're friends for?\" she said, then busied herself in the refrigerator looking for something to make for dinner.\n\n* * * * *\n\nI slept on and off all night. The dreams came back, along with the ache in my hip, and I was being surrounded and shot at. All around me, the Iraqi soldiers were overrunning the trench, and new trenches were popping up everywhere I turned. Looking around, my platoon was either dying or dead, and still I kept shooting as the bullets tore into me.\n\nI awoke with a gasp, sitting straight up and panting for breath. My mind was still frozen on the last image in my dream: Whitney, being dragged away by a band of Iraqis, them ripping her clothes off as they dragged her and me trying to pick them off with a massive machine gun firing fully automatic bursts that kept missing them.\n\nMy head swiveled automatically, looking outside to check the bad weather I knew was coming. It was already beginning to drizzle outside, not much more than a light mist, and the skies bordering dusk and dawn were slate gray with angry thunderclouds moving across the heavens.\n\nA damp, gray dawn, like so many hundreds of others since that day in southern Iraq. And, just as with the others, my hip and upper thigh ached to the bone, like the bullets and shrapnel were still clawing their way into my depths.\n\nThe only difference between this and all the others before it was that Whitney had disappeared without a trace. On this damp, gray dawn, my boy's mother was gone.\n\nThe urge to do something more, to get off my ass and go looking for her, was still squirming around my brain, still telling me I needed to act.\n\nThen Kristin's words came back, and I couldn't fault her logic. What the hell did I know about finding a kidnapping victim?\n\nBut there was something there, something I couldn't put my fingers on. The more I thought, the more my brain refused to cooperate in bringing it to the forefront.\n\nTwo hours later, though, Kyle noticed something and commented on it. That's when it hit me. All of it. Not just the answers to my endless questions, but the whole picture just came out of nowhere and punched me right between the eyes.\n\nWhen it hit me like a freight train, I decided--was compelled to--ignore Kristin's advice. And Gavers's demands.\n\nAnd, to a large degree, common sense. "
    ],
    "authorname": "Rehnquist",
    "tags": [
        "divorce",
        "cheating"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-damp-gray-gone-ch-02"
}