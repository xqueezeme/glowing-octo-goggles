{
    "title": "A New Way of Seeing Things Pt. 04 Ch. 04",
    "pages": [
        "For those who don't like a lot of dialogue, my apologies. I feel like I've been writing a lot of it lately, and that's likely to continue for at least the short term. I've been feeling the need to firm up some \"how, whats and whys\" for my own peace of mind, and besides, I just like writing dialogue. It's an interesting challenge. However, I'll continue to do my best to include as many naughty bits as possible.\n\nStandard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\n. \n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*\n\nAs predicted, Gwen was walking a bit gingerly the next morning, and while she did her best to hide it, at least one of the employees could not help but notice. Andrew remembered seeing her move like that before, and now as then attributed it to some sort of accident involving her horses. Her strength and balance had to be affected by her age, although it hadn't touched her looks\u2014she was every bit as attractive in a MILF sort of way as she ever had been. Of course, that evening he had seen her and Tim by the pool had greatly elevated her sexiness factor. Against his better judgment the young plumber had been thinking of ways to get another look; he had ideas but lacked the courage to act on them.\n\n\"I hope everything's okay,\" he offered as Gwen handed him his work orders for the day.\n\n\"I'm sorry, Andrew?\"\n\n\"You look like you're a little sore, or something.\"\n\nGwen smiled, feeling a bit of warmth on her cheeks. \"Yes Andrew, I'm fine. Just a little too much...exercise...this weekend.\"\n\n\"Well, rice, Mrs. Nelson.\"\n\n\"Rice, Andrew?\"\n\n\"Yeah, rice\u2014you know...it stands for rest, ice, compression, elevation? My football coaches used to tell us that all the time when we hurt somethin'.\"\n\nGwen smiled. Rest would be nice, but that wasn't going to happen this week. Ice? That might be difficult to apply to the sore part, and compression, well she had no idea how to even do that there. She stifled a giggle at the thought of elevation, imagining herself on all fours, elbows down and rear end up. That might make the soreness worse, should Tim, or even the young man offering the advice, catch her that way... \"Thank you Andrew, I'll remember that.\"\n\n\"Oh, you're welcome,\" he quickly, replied, pleased with himself that he had apparently been of help. \"Guess I better get goin'\", he added with an embarrassed smile, holding up the papers he had been given as if to explain why. She nodded and moved on. \n\nThe soreness was just a distant but still exciting memory by Friday and Gwen found herself wondering if she had discovered the meaning of compression by sitting on her rear end doing paperwork all week. It was not just paperwork; items from mental to do lists had been moved into mental folders, separated by what was done and what still had to be done. The partnership paperwork had been moved into the done folder; Eric's lawyer and Adam knew each other well and had acted quickly. Eric's investment was sitting in the business' account, earmarked for the building and equipment expansion; that was moved to the done folder as well. The preparations for the dinner to be held in Martelli's private room Saturday night was still in the in-process folder; that would only be moved after the dinner had been successfully executed. The employees had been told it was an event to show Tim and Gwen's appreciation for their efforts; only Eric and Cliff knew it was to announce the new partnership and expansion plans as well. \n\nThe sound of the shop door opening below was quickly followed by a male voice. \"Hello?\"\n\nGwen hurried down the stairs. \"May I help you?\"\n\n\"I have a delivery for a Gwen Nelson?\" \n\nTommy, their normal delivery man, had stopped by at his usual time a half hour earlier, and this certainly wasn't Tommy. \"I'm Gwen Nelson,\" she said warily, \"but we're not expecting a delivery.\" The 'we' was used as a sort of minimal protection; better to let this stranger think she was not alone here.\n\n\"Something from Holtz and Kulow, ma'am,\" he offered, looking at his computer tablet. Gwen knew the name well; it was one of the best saddle makers in the country. \n\n\"I didn't order any\u2014\"\n\n\"Shipped on behalf of Jubalee Farms,\" he said, checking his computerized paperwork and cutting her off. \"No name, though.\" Sylvia Danning's stables, Gwen knew, putting the pieces together. \"Should I, uhh, bring it in here?\"\n\n\"Oh\u2014no, you can leave it outside, I'll take it up to the barn.\"\n\n\"I can take it up there, if you like,\" the young man offered. A tiny little thing like this shouldn't have to carry heavy things, he thought, clearly underestimating the woman before him.\n\nTo her mild surprise, Gwen smiled and accepted the help. \"If you would, that would be very nice.\" He effortlessly toted it up the small rise, putting it down just inside the barn doors and waiting for Gwen to open it.\n\nShe looked up at the young man. \"Thank you...do I owe you anything?\"\n\n\"Oh no,\" he assured her, \"everything has been taken care of. Would you like to open it so you can make sure it wasn't damaged in shipment? I can throw it back in the van if it is and save you some time.\"\n\nShe grabbed a nearby baling twine knife and sliced open the cardboard. It was indeed a saddle, the same kind as the one she had ridden that Sunday in Mrs. Danning's field, black mesh stretched over rolled leather, something between English and Western in size and style. \n\n\"Huh. Is that a saddle? Never seen one like that before,\" the young man announced. \"Does it look okay?\" \n\n\"I think so,\" Gwen replied as a blush reddened her cheeks despite being certain he had no idea of its intended use. A small envelope was taped to the saddle horn, a card inside that. She opened it and read the handwritten note.\n\nDear Gwen, \n\nThank you so much for modeling! Danilo has not allowed me to see the results yet but assures me he was very, very pleased with them and is sure I will be, too!\n\nI understand that you did not seem displeased with the saddle I provided for the Sunday shoot. Please accept this new one as my way of saying thank you for posing! Please understand this design is still a work in progress, perhaps you might have some suggestions for improvement when you come to see what Danilo's finished product looks like?\n\nAll my best\n\n--Sylvia\n\nPS\u2014Do be careful about falling off! I nearly did the first time I used mine to its full benefit.\n\nGwen pondered what to do with it. She was keeping it, of course, even though the Lady urged sending it back while the driver was still here. Hiding a saddle from those with business in the barn would be difficult...Tim would understand, of course, and Cricket would know exactly what it was. Natalie would almost certainly find the saddle both interesting and amusing. But how could something like this be explained to Alison and KD? \n\nShe still had no answer as to what to tell her daughters as she watched the driver go back down to his van and pull away, finally moving the saddle to a back corner of the tack room and covering it with some old blankets. Gwen thought about the saddle for some time after she returned to the shop, shuffling mental and physical folders at her desk while her mind continued to wander back to the gift in the barn. There was still a couple of hours before any of the trucks would be back...but still a lot to do before the dinner Saturday night and wasn't that the reason you told Natalie you couldn't ride today, the Lady whined. There's still time to do all of that, the Slut countered, and Gwen swiftly juggled her calendar as she walked back up to the barn, not bothering to detour to the house for a change of clothes. \"Hey Dart, want to go for a quick ride?\"\n\nThe new saddle was pulled from where it had been stored just a little while ago and put on the horse, the fit good. To a bystander the scene might have appeared a bit odd, Gwen still dressed in her work attire walking the Morgan up the field into the woods above. It would make more sense once they moved past the first screen of trees and she paused to disrobe and hang her clothes on a nearby branch. Even her shoes were carefully placed at the base of the tree despite the Lady's warning that having to walk the horse back for any reason would be painful indeed. Gwen didn't care; the Slut wanted to be naked, even more naked than that Sunday in Mrs. Danning's field.\n\nShe swung a leg over Dart's back, remembering how many times she had done that for Danilo, and settled herself on the saddle. The mesh felt like it did that day, and the strip of rolled leather underneath that seemed to have been formed to perfectly nestle into her cleft was there, too. Gwen almost imperceptibly nudged the horse in the flank with a heel and started him in a walk while eschewing proper riding technique and allowing herself to gently sag against the mesh. Each bounce of the animal's back brought her in contact with the leather strip, lightly at first then with more force as she allowed her muscles to relax. Horse and rider were halfway to the picnic clearing when he was brought a halt, Gwen wanting a steady platform while she further tested the saddle's unique fit.\n\nHer rear end sank heavily, a posture that would have brought scorn from Else Ritter. She thrust her hips thrust back and forth against the hardness beneath, tentative at first and then with more force. The mesh felt different against her bare skin now that there wasn't the thick thatch she sported the first time, not unpleasant, a little like Tim's stubble but more subtle. Gwen willed herself to put Dart back into a walk. She tried a gallop next, developing a rhythm that teased with each bounce of the horse's back when she allowed herself to make contact with the saddle beneath. They were approaching the turn to the picnic clearing; Gwen slowed the animal to a walk and sagged back into the saddle, biting her lip as she thrust her pelvis forward to maximize contact. \n\nShe brought Dart to a stop in the shade just before the brightly lit clearing, thinking it might be nice to dismount, lay on the table and give her naked body to the sun gods in offering, letting whatever might happen, happen. But the breeze against her skin felt good, too, and the rolled leather pressing against her clit enticed her to stay...Gwen let the horse's leads go slack over his neck\u2014no need to accidentally pull on them and confuse the animal. Her now-free hands gripped the saddle horn with both hands as her hips resumed their rocking motion. She hunched over the horse's neck as the feeling emanating from her midsection grew more intense, thankful his training kept him from wandering into the trees while his rider was preoccupied. \"Uh-uh-uh,\" she breathed with each thrust of her hips against the saddle, her clitoris firmly pressed against leather and rubbing against mesh. And then her climax was upon her, as powerful as ever yet she fought to mute it, fearful even in her ecstasy that she might spook her mount. Her whole body slumped as the waves quieted, and she understood Sylvia Danning's warning; there was no strength in her legs, and maintaining balance was difficult. Gwen's senses returned to her, and the feel of the breeze against her skin was intensely satisfying, like the caress of a lover. She giggled after finally straightening again in the saddle. \"Good boy,\" she said, affectionately bending to pat Dart's shoulder. How many horses could you count on to not interrupt their rider's orgasm? How would you even teach such a thing?\n\n***\n\nGwen's carefully laid plans for the dinner ensured the event went as expected, employees and their dates enjoying the food and drink, those in the know doing their best to keep up their ends of the conversations while worrying about the reaction from the announcement. Two had come alone; Eric definitely had no time for a girlfriend now that he had a business to grow and Andrew was currently between hopefuls. Gwen took the seat next to Andrew; she couldn't help but notice his nervousness and while she assumed it was because his boss was sitting next to him, she chose to pretend it was because he had a desirable woman close at hand. She noted he seemed to be making an effort to talk with her in particular.\n\n\"You seem to be, uhh, not sore, any more,\" he offered nervously. \"You're walking better.\"\n\n\"Oh no, that went away pretty quickly,\" Gwen replied with a smile. \"Honestly, I didn't even think it showed. You're very observant.\" \n\n\"Oh, uhh, yeah, I guess...so you didn't need the rice?\"\n\nShe continued to smile. \"Well, I did the compression part and I'm sure that helped. Thank you for suggesting it.\"\n\nHis face brightened. \"You're welcome\u2014any time!\" \n\nDessert was being served when Tim rose and cleared his throat. \"Hey, quiet down and listen up, you guys,\" he asked in the voice that always seemed calm but carried authority. The employees quickly quieted in response. \"So first of all, Gwen and I wanna thank you all for all the hard work you've been putting in. We've been busier than ever, and you guys have been doing a hell of a job getting' it done.\" Smiles and nod and murmurs came back from the table. \n\n\"In fact, we've been doing so well,\" he continued, \"that we're here to tell you that Nelson Plumbing is expanding. We're gonna add more plumbers and trucks and add on to the shop. And we're also gonna get into more HVAC work\u2014we think we can do some good business there. But Gwen and me need some help running the place so,\" he paused, seeing that he had everyone's attention, \"we're bringing on someone to help make sure everything goes okay.\" Tim paused, gauging the looks on the younger employees faces' hearing their murmurs and wondered if they knew exactly what that meant. \"We're adding a partner to the business\u2014Eric.\" He smiled and motioned to the blushing young man as mouths dropped open and heads swiveled to where Tim's hand was pointing at. It took a moment for the words to sink in, but \"cool,\" and \"congratulations, man,\" and \"holy shit\" all began to rise from the table in a rising crescendo. Tim let it go for a moment before calling for their attention again. \"And while I'm up here,\" he announced, \"I'd also like to announce that the first thing me, Gwen and Eric decided as partners was to offer Cliff a position as the Director of Training and Continuing Education, and we're all really glad he said yes. . He'll still be out on jobs, but he's also going to be responsible for making sure we all have the most up-to-date information on what the hell we're doing. We're gonna need more plumbers, and a few of you have been apprentices way too long,\" he said, eying that side of the table, \"hopefully you guys can put two and two together? If not, Cliff's going to help you do the math.\" There were some good-natured groans quickly followed by heartfelt congratulations. \n\nThe rest of the evening was spent answering questions as best they could, understanding the uncertainty that came with change and trying to build enthusiasm for the new arrangement. Eric, even though he was the same age as the younger employees but didn't hang out with them, was universally respected by the younger employees; each of the apprentices and Andrew privately decided he would make an acceptable boss, although they all also decided that any disputes or decisions of importance would be brought to Tim. And then they'd be taken to Mrs. Nelson, Mike laughed to himself. \n\nThe dinner broke up some time later, the attendees breaking into smaller groups. The apprentices and Andrew were heading off to somewhere with beer to further discuss the ramifications of all this while the Nelsons, Cliff, Cheryl and Eric and started for home. \n\n\"Hands on the wheel, eyes on the road,\" Gwen said with a giggle as Tim's hand landed on her knee, although she made no effort to remove it.\n\n\"My eyes are on the road and I had to keep my hands off you all night,\" he replied with a chuckle. \"What with you lookin' all damn hot like that.\"\n\n\"This is hot?\" she asked nervously, gesturing to her clothing and quickly reviewing her choices. \"I usually wear something like this for business meetings.\" In truth, what she was wearing would still be considered conservative by just about anybody; a light grey long-sleeve blouse buttoned up well past where any cleavage might be visible, and a dark grey calf-length skirt. Low heels and a tasteful amount of jewelry completed the look.\n\n\"Oh, you definitely got the look of a managing partner with a business empire to grow,\" Tim replied with a chuckle. \"But I know what's underneath.\" The hand still on her knee began to slowly pull the hem of the skirt up.\n\nGwen placed her hand over his, her determination to stop him wavering. The wine and champagne from dinner had calmed her nerves before the announcement and produced a mellow glow after. \"My underwear?\" She didn't think he had seen her select it...\n\nHe continued to bunch up the fabric in his loose fist. \"I was thinking what's under the underwear, but I should probably check that out, too. I've got one hand on the wheel, how about you let the other hand play a little.\" She responded by running her fingers up to his hard bicep.\n\n\"Gonna take forever to get to the playground with all this in the way,\" he grumbled, gently tugging the gathered fabric for emphasis. \"Especially with you sitting on a bunch of it. How about you just take it off?\" \n\n\"Here?\" she asked, looking out at the houses and shops going by, the cab of the truck lighting and darkening in rhythm with each streetlight they passed under.\n\n\"Dare ya. I promise not to look. My eyes are on the road, remember?\"\n\nGwen eyed her grinning husband intently studying the road before them, then impulsively accepted his challenge with her own smile and unbuttoned the waist before lifting herself off the seat and pushing it down. Tim's hand retreated when she reached it, then was back even as she was kicking the skirt off over her shoes.\n\nA quick check confirmed his eyes were indeed still on the road while his hand turned circles over her inner thigh. Gwen spread herself a bit more to invite and accommodate his touch, and fingers soon grazed over her underwear.\n\n\"Lace?\" Tim asked, risking a glance.\n\n\"Eyes on the road, mister,\" Gwen reminded him with a laugh, \"and yes, lace.\"\n\n\"Does the bra match?\" \n\n\"It does.\" \n\nHe continued to explore, a finger running along one edge \"Doesn't feel like there's a lot there. Thong?\"\n\n\"Yes. They were supposed to be a surprise for you when we got home.\" \n\n\"They're a surprise right now. Probably good I didn't know you had them on during dinner, I wouldn't have been able to concentrate, you being all business-like on top and all sexy underneath.\"\n\n\"Mm-hmm...\"\n\nTim's fingers found their way under the thin band of lace above her mons. \"No stubble yet,\" he casually observed.\n\n\"I tried my hand at cleaning it up a little in the shower today. Natalie's right\u2014it's a lot like shaving your legs.\"\n\n\"Well, just so you know, I'm happy to help anytime...his middle finger found the way blocked by bunched lace as it slid down her furrow. \"They're kinda snug on you right now...how about you take those off, too?\" \n\n\"You're going to have me naked by the time I get home,\" Gwen laughed, but again lifted her hips and reached for the waistband anyway. \n\nTim's hand left her and turned palm up. \"Give 'em here.\" She obliged and his fingers worked to find the string of the waistband while he kept his eyes forward, then hung them from his rearview mirror. ",
        "\"You do like to hang your trophies, don't you?\" Gwen giggled as she watched the lacy white fabric swing back and forth while his hand returned to between her thighs. \n\n\"Maybe I can hang them next to that spot in the shop office where my fish is going.\" \n\n\"I didn't know\u2014oh!\u2014\" she squeaked as his finger circled her clit\u2014\"that we had agreed it was going there. \" Gwen wasn't sure she liked the idea of that fish looking down on her while she worked, but the underwear might be an interesting conversation piece...'oh, those? Those are from the night we announced the expansion.'\n\n\"Just an idea. You're really wet,\" he announced as his finger slid lower. \"I didn't know business dinners got you all hot and bothered.\"\n\n\"That's from you wanting to play, that's your fault,\" she breathed, watching the lights of the oncoming traffic, imagining what they would think if they knew what was going on in this truck. \"I was perfectly fine with waiting until we got home. We do have the house all to ourselves this weekend,\" she reminded him. Cricket was in her office all weekend helping with an audit. \n\n\"I know,\" he chuckled, \"but I guess I got an urge to screw one of my business partners.\" \n\nThe Lady again warned against driver distraction even as Gwen reached for the bulge in his slacks. \"Then I guess that should be me,\" she sighed theatrically. \"Naughty boy. You promise you'll want me once we get home?\"\n\nHis finger slid up inside her as Gwen tilted her hips to allow him access. \"You know I will. Why wouldn't I?\"\n\n\"You'll see. Pull over.\"\n\n\"Here?\"\n\nWherever you think it's safe.\"\n\nTim thought quickly, is cock urging him on. He knew there was an out-of-business auto parts place up ahead, both storefront and parking lot dark in the night, and turned the truck into its entrance. There was no great place to hide the vehicle from those who might wonder why it was there, but the promise of what Gwen might be offering made it worth the risk and he flicked off the headlights while rolling to a stop. \n\n\"Push your seat back,\" Gwen ordered, unbuckling her seatbelt. Tim hurried to remove his own and did as he was told even as Gwen scooted towards him to unbuckle his belt. Her lips were around his length as soon as it appeared, the trapped heat from between his legs carrying the intoxicating aroma of soap, sweat, male musk and sex up to her nose. Tim's hand continued to play at the pussy she had conveniently positioned in reach, stroking the bud at the top of her slit before sliding down along the lips into her opening. His other hand, now freed from the responsibility of driving, gently guided her head. \n\n\"Oh, you do that so good...\" His eyes briefly closed in bliss before snapping open at the light reflecting from the mirror brightly enough to penetrate his eyelids. He tried to focus on the source of the rotating blue lights pulling up behind the truck, triggering his brain to hurriedly form a to-do list and order it in importance; his first task was to get the lips on his cock off it without seeming rude. \n\nGwen felt her husband's body stiffen and knew something was wrong before he was able to offend. Her eyes flew open as well, the cab of the truck bathed with headlights and a pulsing blue strobe, and her own mind began to form an urgent to-do list. She sat upright in an almost violent fashion, continuing on to reach to the floor in search of her skirt. Tim was thankful for the chance to reach for his zipper while his mind searched for plausible explanations as to why they were parked in front of an out-of-business storefront in the middle of the night. \n\nOfficer Robert Quinn saw the silhouette of a head pop up from the driver's side. Coptus interruptus, he thought with a smile, or as some of his buddies called it, cop-blocking. Sorry, man. This had happened more times than he could count\u2014pulling up on a parked car to find the occupants in various states of undress performing various physical acts. Sometimes it was kids that couldn't find a better place to get their freak on, sometimes it was a hooker, sometimes it was payment for a drug deal. Sometimes his arrival was not noticed and he had shone his flashlight into the back seat of a car more than once only to be greeted by the vertical smile of a naked ass hard at work. The best he could hope for in those cases was a girl's ass... Tonight he hoped it was just kids; a lot less danger and paperwork that way. Make sure they both wanted to be there, they were both of the age of consent, tell them to move along. Hell, if they seemed like nice kids and didn't give him shit he might even let 'em finish up. \n\nHe approached the driver's side window as he always did, quickly enough to not give them enough time to hide any paraphernalia that might incriminate them, but still moving with caution. The window rolled down as he reached it. His senses were on high alert, looking, listening and...smelling. His nose was attuned to the scents of drugs and alcohol, clues as to whether further caution or inspection might be necessary. The smell that wafted out of this truck was also quickly recognizable\u2014the smell of sex. The face staring back at him was not a kid's. \n\n\"Good evening, folks,\" he drawled while his flashlight flitted through the truck in a well-practiced pattern, the underwear hanging from the rearview clearly highlighted before moving on the passenger's face before slowly moving down. Her skirt was laid across her legs like a blanket, leaving glimpses of bare thigh where it couldn't cover. Tim saw the beam of light stop on his panic-stricken wife, then move on to the space behind the seats. \"Everything okay here?\"\n\n\"Oh\u2014yeah\u2014we're good, I just, uhh, had to send a text\u2014\" he reached for his phone sitting on the console as if to prove his story\u2014\"didn't want to be driving distracted, you know?\"\n\n\"We appreciate that,\" the officer drawled, noting the seat was pushed back far enough to make reaching the pedals impossible. It did mean more room for his passenger to fit her head or ass without bumping it on the steering wheel, though...\"well, just to be official, if I can see your license and registration, please, so I can say I was doing my job if anybody asks.\" The officer glanced at the information and looked up again. \"Thank you, Mr. Nelson. And this is...?\"\n\n\"This is my wife, Gwen, Gwen Nelson\" he quickly explained. \n\nOfficer Quinn's flashlight returned to her, and he touched the tip of his ball cap. \"Ma'am.\"\n\n\"H'lo,\" she mumbled. \n\nHe focused the light elsewhere to return some of her dignity and moved his hand away from his holster. \"If I could uhh, see your license, too, ma'am, just to make sure you're who Mr. Nelson says you are.\" \n\nShe hurriedly reached for her purse while struggling to maintain control of her skirt, unable to avoid revealing the curve of her bare hip and ass, confirming the panties on the mirror were hers, while shaking hands opened her wallet. \"Let me go check these out and I'll be right back,\" the officer said with a smile. \n\n\"Oh my God,\" she wailed, using Officer Quinn's absence to hurriedly sort out her skirt and put it on, \"we are in so much trouble!\" \n\n\"We're not in trouble,\" Tim reassured her while trying to appear calm. \n\n\"He knows what we were doing!\"\n\n\"Maybe. But he didn't see anything\u2014not really, anyways\u2014so he'll probably just tell us we shouldn't be here and tell us to move on.\"\n\n\"You don't know that!\"\n\n\"That's what the cop did the last time I got caught...\"\n\n\"You've been caught before? When? With who?\"\n\n\"Before I met you and I'll tell you later,\" Tim replied, looking in the mirror. \"He's coming back.\" \n\nOfficer Quinn reappeared at the window, handing back the registration and licenses. \"You're all set. You can, uhh, finish sending that text if you want. Just do me a favor and move on before I come back, probably in an hour or so, just so I don't have to stop again...plenty of time to send a text, right?\" He again tipped the bill of his cap to Gwen and smiled at her, then Tim in turn. \"Enjoy your evening, folks.\"\n\n\"Thanks officer, stay safe.\" Tim rolled up the window as the cop ambled back to his SUV, then smiled at Gwen. \"Told ya.\"\n\nThe fear --inspired adrenaline racing through her mixed with the sense of relief she felt and produced a rush of exhilaration. \"I can't believe we got caught,\" she breathed, resisting the urge to giggle.\n\n\"And nothing happened,\" Tim replied, his own adrenaline giving way and then refreshing the lust that had been put on hold. \"Cops are regular people, too\u2014they know what it's like to get an urge with a pretty girl. As long as you're not making a scene, they got more important things to do.\" He offered her the panties he had taken down from the mirror. \"Want these back?\"\n\n\"Not yet,\" she replied to his surprise, looking back over her shoulder to ensure the patrol car had indeed moved on before hanging them back on the rearview. Her hand continued on to his crotch, feeling around for what lay beneath the fabric. Her arousal might have been a little slower to recover than her husband's but it was resurgent nonetheless, and the feeling was making her positively reckless. \n\n\"What are you doing?\" Tim asked, not daring to hope that she wanted to resume their activities after the scare. \n\n\"Just checking to see if you lost any of your, umm, enthusiasm while you were busy making up stories for the officer.\"\n\n\"Maybe a little,\" Tim admitted with a chuckle, \"for a little bit. But that usually happens when I'm distracted. Now that everything's good again I think it's making a comeback.\" \n\n\"Apparently so,\" she agreed, gentling petting the length as it grew. \"I'm always amazed at how fast it comes to life.\"\n\n\"You, uhh, wanna pick up where we left off?\" he suggested, his voice hopeful.\n\nGwen smiled and reached for his belt. \"We've only got an hour before the officer comes back. Think you can be done by then?\" \n\nTim laughed. \"I'll probably be done a second time by then.\"\n\n\"Save the second time for the house,\" Gwen replied, dipping to take the newly freed and freshly potent length between her lips. \n\n\"Might be easier for both of us if you took your skirt off again...\"\n\n\"That's for your second time, too,\" she said after she let his length bob free of her mouth. \n\n\"If you say so...\" Both hands came to rest on her head as she recaptured his shaft, bobbing deeply enough to nearly make her gag, retreating enough to tickle the head with her tongue before taking him deep again. He was done well before the hour was up, gripping her head firmly but not painfully with strong hands while Gwen wrapped her hand around the base of his cock and allowed him to fuck her mouth. \n\nHe came, each pulse matched to a soft grunt. Tim loosened his hold of her, and she swallowed, then rose to kiss him. \"Home, please,\" she asked, sliding back over to her seat and delicately wiping the remains of his orgasm from any place their kiss might have missed. \n\n\"You were going to tell me about the first time you got caught?\" Gwen asked once they were back on the road again. \n\n\"It was the summer after my senior year in high school.\"\n\n\"With who?\"\n\n\"You remember Karen Horne, KD's English teacher her Sophomore year? I told you we went to high school together?\" he replied slowly.\n\nShe did, a fireplug of a woman, albeit a fireplug with curves and a massive pair of breasts. \"Oh my God, she was one of your girlfriends? Why didn't you tell me?!\"\n\n\"She wasn't exactly my girlfriend and I didn't think you'd want to hear about it then. You sure you want to now?\"\n\n\"I do.\"\n\nTim weighed her reaction carefully. Rather than being upset, Gwen sounded truly interested...\n\n\"She was Karen Calaveras back then and like I said, she wasn't my girlfriend, we were just at the same party and we ended up...together...just that one night.\"\n\n\"Were you two friends?\"\n\n\"We just knew each other from school...we didn't hang out together, though.\"\n\n\"So you just asked her to have sex and she said yes?\"\n\nTim laughed. \"I didn't ask her, she asked me. Charlie was worried I wasn't getting enough even back then so he kinda told her I was good in bed, and after a couple of wine coolers she wanted to find out how good.\"\n\n\"Charlie really does look out for you,\" she laughed. \"And how did you get caught?\"\n\n\"Kinda like we did tonight,\" Tim admitted. \"The party was out in a field over on Atkinson Road, we snuck back to where I parked the car, and the cops showed up to shut the party down. I think they were just there to their beer supply with the stuff they took from us. And then they went around checking cars... \"\n\n\"So there were other people there?\" \n\n\"At the party? Yeah, but that's what the cars were for\u2014most guys took the girls out to their car if they wanted a little privacy, although sometimes people would just go at it right there in the field. You didn't want to make it obvious you were going out to your car, though, because then people might come over for a free show, just to give you shit. That's what I thought it was at first, one of my buddies shining a flashlight in the backseat, but turns out it wasn't.\" \n\nGwen giggled. \"And what were you doing in the backseat?\"\n\n\"Well, you know...we were doing it.\"\n\n\"You mean like what we were just doing or...sex?\"\n\n\"Full-on humping. Neither one of us had our pants on, I was on top of her, she had one foot on the top of the backseat and the other on the driver seat headrest. You get the picture.\"\n\n\"Gwen giggled. \"I do. And is that how the police found you?\"\n\n\"Yup. I had just finished, which I don't think Karen was too happy about, and was lyin' there enjoying the moment when the backseat lit up. Like I said, I thought it was somebody from the party giving us shit, maybe even Charlie checking in on me, but when the cop knocked on the window and said 'police', man that changed my tune fast. Christ, that cop must've been laughing his ass off. I'm trying to get off her, find my pants and roll down the window at the same time, she was trying to get me off of her to find her jeans. Even after we got untangled we kept slamming into each other trying to get dressed. \"\n\n\"And what did the officer do?\" \n\n\"He was really cool about it, made sure she wanted to be there and was old enough, and that I wasn't too drunk to drive, and sent us on our way.\" Tim left out the cop's parting words, said loud enough for Karen to hear\u2014'next time get her shirt off too, son, never miss a chance to play with a pair of titties like that.' \n\n\"And that was the only time you two did it?\"\n\n\"The only time. I don't think I lived up to what Charlie told her to expect and we were definitely both too embarrassed to talk about it after. Besides, she wasn't really my type. It did make that parent-teacher conference kinda awkward, though.\"\n\nGwen laughed. \"I'll bet.\" The string streetlights had ended, the cab of the truck now only lit by the occasional car going in the other direction. \n\nTim was lost in his post-orgasmic glow and was slow to notice his passenger unbuttoning her blouse, catching Gwen out of the corner of his leaning forward in her seat and slipping the shirt off her shoulders and back. \"Eyes on the road, mister,\" she warned while reaching for the clasp of her bra. \"Or I'll put it back on.\"\n\n\"Yes ma'am, sorry\" he said with a grin, still managing to catch a glance of her skirt again coming off. \"I never get tired of looking at your spectacular titties.\" \n\n\"You can look all you want later, but you seem to be doing a good job of keeping us on the road, so...\" His right wrist was firmly grasped, pulling his hand from the wheel and placing it on her breast. He was allowed to play off and on for the next ten minutes, Gwen moving his hand down to her sex then back up to her tits whenever she drew close to losing control from his touch before moving it back when her gathering climax had subsided. \n\n\"Home,\" he announced as his hand reluctantly left her wetness to help make the turn into the driveway. \n\n\"Home,\" she agreed, sliding from the truck before his hand could return, leaving her clothes behind and walking on to the deck, waiting for Tim to unlock the door. There was no doubt for either where their next stop was once inside the house, and Gwen was only on the bed a moment before he joined her. She pushed him on his back as soon as he lay down, swinging a leg over his midsection and grabbing his cock to line it up before sinking down on it. \n\n\"Ohhh, yessss,\" she hissed as he bottomed out. \"That's nice. Thank you for being hard for me so quickly.\"\n\nTim grinned and reached for her breasts. \"Any time. It was easy.\" \n\nHer eyes closed as her hips began to rock back and forth on the cock she was impaled upon. \"We got caught tonight!\" \n\nHe chuckled. \"Mm-hmmm...guess it wasn't too bad for you after all?\"\n\n\"No, I guess not...it was a little exciting!\"\n\n\"Just a little?\"\n\n\"Very...\"\n\n\"What would you have done if he had caught us?\"\n\nHer eyes opened slightly. \"You mean more than he did?\" \n\n\"Yeah, what if your head was still in my lap?\"\n\nGwen fell forward, her clit grinding into Tim's pubic bone while she buried her face in his neck. She remembered his hands on the back of her head as she had sucked him. \"Would you have let me up?\"\n\nHe grinned at the thought as his hands roughly grabbed her asscheeks. \"Maybe, maybe not. Maybe I would've have held you right there and made you finish me before I let you up.\"\n\nGwen's hips ground against him, and he could hear her ragged breathing in his ear. \"Really? You would have let him watch you finish?\"\n\n\"Oh, yeah. He's a guy. I bet he would have liked to see that.\"\n\n\"And you would have let him see me without my skirt on?\" \n\n\"Uh-huh. I would have let him watch you come, too.\"\n\n\"Ohhh...\" She ground into him even more furiously, a whimper escaping her throat.\n\nTim could sense from her increased urgency that the fantasy triggered something in her, and decided to push his luck\u2014how much dirty talk was too much? \"Maybe he would have whipped his cock out and jacked off right there watching you? Maybe he's got a big one...\"\n\nThe hastily produced visual and the hardness pressed against her clit sent her over the edge. \"Oh-mmm--mmm\u2014\" Gwen fought to keep from crying out, but could not hide the fact she had stopped breathing. \n\n\"Jacking off, wishing it was his cock instead of my finger...\" Tim continued, his hands now caressing her back. Gwen shuddered and stiffened, then relaxed, her body lying heavily on the man beneath her. He waited a moment to allow her to revel in her bliss before deftly rolling her over, smiling down at her as she smiled back with half-open eyes. \"All good?\"\n\n\"Very good...\" his thrust began slow and measured as he bent to kiss her but soon picked up in intensity, eventually getting small gasps with each one as he drew close. His final stroke was delivered with all the leverage he could manage, and then it was his turn to bury his face in her neck and recover. \n\n\"Well, this has been a most interesting evening,\" Gwen said with a smile after she returned from the bathroom and lay down next to him.\n\n\"Good interesting, or bad interesting?\" he asked cautiously. \n\n\"Good,\" she replied thoughtfully. \"Very good.\"\n\n\"All of it? You didn't mind me talking dirty?\"\n\n\"It was so dirty,\" she admitted with a giggle. \"I liked that. You're always so polite in public.\"\n\n\"And how about getting caught for real tonight? Did you like that, too?\"\n\n\"Almost caught,\" she corrected. \"And once I knew we weren't going to jail, it was exciting, like I got away with doing something bad. I never used to try and get away with doing bad things.\" \n\n\"And you like doing bad things?\"\n\n\"Sometimes, if it's the right bad thing, and I'm with the right people.\" She kissed him.\n\n\"You alright knowing about me and Karen Horne?\" \n\n\"Of course. That happened before you knew me and honestly, I would have been surprised if you hadn't said yes to a girl who offered herself to you. I don't know how as a healthy young man with needs you stayed with me back then. I wonder if things would have been different if you had hadn't been so polite and just taken what you wanted.\"",
        "\"I've never, ever, intentionally forced you to do anything you didn't want to do and that especially goes for sex,\" he said seriously. \"Not then, not now, not ever. And back then, I just figured since you were a virgin, you were just kind of scared and hoped you'd like it after we got married and it was alright.\"\n\n\"I like it now...\" \n\n\"Really glad to hear that. To tell the truth,\" he continued, \"I know guys say they want to be the first in a virgin, but I never really cared about that\u2014being your first scared the hell out of me.\" He chuckled. \"From what other guys told me, I thought virgins bled a lot and said how much it hurt the first time. You didn't do either and I thought I did it wrong. Hell, for the longest time I thought we didn't have sex a lot because I sucked at it and you didn't know it could be any better.\" \n\nGwen smiled. She was confident her years in the saddle had taken care of her hymen, and while Tim had been a tight fit, he was certainly no bigger than some of Miss Ritter's dildos... \"It wasn't you, I told you that...now, it sounds like Cricket's ex was really bad at sex but you're really good at it, which is why I let her find out with you how good it can be.\"\n\n\"Gotta admit, being used as a practice dummy does stroke my ego a bit,\" he replied with a dismissive shrug, \"not to mention some other parts. But I gotta tell ya, I've always wished you had slept with some other guys before me. That way you could've known what you were getting into. If you thought I sucked, at least you could have even taught me some things they did that you liked.\"\n\n\"You're incredible in bed,\" she admonished. \"I don't need another man to compare you against to know that.\" \n\n\"Yeah, still, I've always felt bad that you've never been with another guy. Maybe somebody with moves I don't have, or a big dick\u2014that's gotta feel different than the same old thing, right?\"\n\n\"How many moves can there be, and I have big penises in my nightstand, remember?\" Just missing the bodies to go with those penises, the Slut reminded her. \"And I've been with other women,\" she reminded him with a light laugh. \"That feels very different.\" \n\n\"Yeah, but one guy must feel different than another one, right? Taller, heavier, hairier...bigger?\" \n\n\"All I know is how you feel,\" she replied, still laughing as she hugged herself to him. \"You feel wonderful.\"\n\n \n"
    ],
    "authorname": "BusyBadger",
    "tags": [
        "dirty talk",
        "exhibitionism",
        "husband",
        "masturbation",
        "voyeur",
        "wife"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-04-ch-04"
}