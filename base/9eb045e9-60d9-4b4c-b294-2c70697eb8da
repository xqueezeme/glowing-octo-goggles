{
    "title": "Gentle Violence",
    "pages": [
        "This one I wrote pretty much just for myself, trying to do something new with several different themes. It won't be everyone's cup of tea, but I think it stands as a story, so I decided to put it online. If you like monster sex and my brand of happy ending, maybe it'll work for you. \n\nDisclaimer: This one is a shade rougher and darker than my usual. Contains monstrosities and mindfuckery. Proceed only if that's your sort of thing. \n\n&nbsp; \n\n- \n\n&nbsp; \n\nClarice looked into her mirror, saw nothing staring back at her, and tried to convince herself she was sane. \n\nHer efforts were not aided by the fact that she was in an asylum. Though she had been let out of the padded room, her new room had few comforts and no sharp edges. The straitjacket still pinned her arms against her body. It bound her tightly except for around her chest, because Ferdinand... but no, she didn't want to think about that. Better to focus on her sanity. \n\nIt had been a year since her family had decided that she was inconvenient and sent her here. In the beginning, she had been certain that the doctors would soon discover that she had full command of her senses and send her back. That had been before the frowning doctors, before Ferdinand had touched her, before her mind and body had been through so much... \n\nBefore the nothingness in the mirror. Clarice couldn't help herself and her eyes wandered up toward the mirror on her wall. \n\nShe strained to see herself, to see if she had changed more. Could this be one of his tricks, to keep her from having a view of herself? Before the mirrors had started going blank, she had watched her once slim body become increasingly voluptuous, contorted to his desires by the rituals. She had thought she was pretty before, but now... Clarice stared where her reflection should be and strained her eyes, not wanting to see how she looked now and yet desperate for it... \n\nFor a moment she did glimpse herself, but not the young woman she hoped she still was. There had been a glimmer of herself with her arms unbound, but far too long and ending in claws. Her jaw had hung slack and filled with several rows of teeth, and her eyes... \n\nA moment later the vision was gone, and she was staring at the nothingness. Everything in the room reflected just as it was in reality except for her. Instead there was a terrible, weighty nothingness that floated where she should have been. The sensation had been getting stronger lately and she found herself wondering if she truly was going mad. \n\nWhile she stared, the nothingness shifted. A shimmering oval appeared, barely visible and yet as undeniable as the nothingness. Clarice stared despite herself and realized that it was a mask. A mask made of perfectly clear glass, only visible as the light caught it, yet... \n\nA mask of her face. \n\nClarice shuddered and threw herself back, her head hitting the wall behind her. The blow made her vision swim and sent pain through her body, but it didn't make the mirror return to normal. In fact, the weight of the emptiness seemed to be pressing down on her now, and the mask was drawing closer. \n\nThe lock on her door clicked and all at once it was over. The mirror reflected nothing but her, eyes wide and bloodshot. She looked mad, but she was sane. She had to be. Being kept here all day might have been driving her a little mad, but all it took was the door opening to bring her back to reality. \n\nFor a few heartbeats, she hoped that the visitor would just be one of the nurses. They came to bring her food occasionally, and some even loosed her jacket to let her eat for herself. But she heard the tenor of his voice, saw his shadow as he entered the room, and knew that it was Doctor Ferdinand. \n\n\"Hello, Clarice.\" He had such a soft, gentle voice. Clarice shrank down into the corner beside the door before he could see her, before those dulcet tones could capture her mind. \"How are you doing today?\" \n\nAs soon as he stepped inside, she launched herself at him. Clarice had no clear plan in mind, knew that he could overpower her even if her arms were free, she just wanted to hurt him. Hoped that she could get her teeth into his body. If she bit into his ear, she could tear it off, she would... \n\nBite his ear affectionately, maybe run her tongue over it or just whisper loving nothings. She couldn't remember why she had been upset, but it was likely because of his long absence. A calm smile spread over her face as Ferdinand turned to face her and she heard the gentle ticking. \n\nHe held the metronome in his hands like it was an instrument of his trade, but it could never be mistaken for anything of the sort. The device was strange and misshapen, bulging with strange tentacle-like strands. And the pendulum that swung back and forth... it was pitch black, as if a strip had been torn from the world and there was absolutely nothing beyond. \n\nClarice stood and watched it swing back and forth peacefully. It ticked with each movement, the gentle sound soothing her mind. When she heard Ferdinand chuckle, only a small part of her shuddered in horror. The rest looked up to smile at him. \n\n\"Hello, Master.\" \n\n\"You will call me 'Doctor' today, pet. We are going to visit some very important colleagues of mine, so you will need to be on your best behavior.\" \n\n\"Of course, Doctor.\" Her body automatically straightened and squared her shoulders as well as she could in the straitjacket. When he controlled her like this, she felt little emotion. It was far preferable to the warm rush of emotion when he made use of her body. \n\n\"This way, Clarice. Don't delay.\" Ferdinand left the room, hiding the twisted metronome again. She followed silently, the sound still ticking peacefully in her mind. Now that she had seen her Master for who he truly was, she would never attack him. While her world was filled with this bliss, she knew only the joy of serving him. \n\nHer Master only came to her for two reasons: to make love to her or to ask her for help in his rituals. The majority of Clarice loved both equally, so long as she was being of use to him. A small, miserable part of her was glad that today would be a ritual. No amount of cutting from the knives or shame of being shown to his \"colleagues\" could compare to the sweet pleasure of his gentle touch... \n\nWhile walking, a shudder ran through Clarice's body and she nearly stumbled. She had no idea why she might have felt such a thing, not when she was so near Master. Ferdinand... no, Master... turned toward her and frowned. He fiddled with the metronome under his coat, then just shook his head. \n\n\"Hurry along now.\" \n\nFree from distracting thoughts, Clarice drifted happily after him as they entered the unused wing of the asylum. A locked door marked as a supply closet opened to reveal a staircase that descended deep into the ground. Her little-used legs soon ached, but Clarice continued on with a placid smile. At the bottom she found the familiar sacrificial circle, surrounded by Master's friends. \n\nThough one or two wore the formal black robes of their order, most dressed as they did in real life: respected doctors, lawyers, heirs to great estates. Men who spoke of things far too important for her ears, who deserved to have pets like her. Clarice smiled happily at the thought, though of course she loved Master most of all. \n\n\"Raise your arm, pet.\" His hand slid along her arm and she shuddered with joy, happy to raise it for him. Master was speaking, but she couldn't understand his worlds, just listened to his soft voice as he raised the ornate knife and explained what he was doing to the others. \n\nEventually the knife did cut into her arm, drawing her blood. It ran from her freely, pooling in the small bowl that seemed to be made from bone. Clarice stood with a smile on her face, trying to focus on the images carved on the walls around them. Such funny images, with strange tentacles reaching over everything... \n\n\"Strip and lie down on the altar.\" No matter how far her mind wandered, a command from her Master cut through her reveries. Clarice smiled and quickly moved to disrobe and lie down on the twisted altar in the center of the circle. Though the ritual was different every time, there were always similarities. Besides, she was obeying Master. \n\nFinishing his ritual, one of the men reached down into the bowl of blood... and withdrew something dark and twisting. Even through her happiness, Clarice flinched slightly. That creature had not existed a moment ago, and it should never existed at all. Even the men who had come here for the very purpose of performing these dark rituals looked at it with some distaste. The man held it at arm's length as he moved closer to her and Clarice tried and failed to focus on his face. \n\nSoon all she could see was the small twisting creature... and then it dropped. It hit her stomach and immediately burrowed into her flesh. Clarice screamed and her entire body arching off the stone, her mind burning with twisting black pain. \n\nAs the creature expanded inside her, tearing and chewing and consuming, everything was stripped away. The happiness fled like mist under the sun. Though this was a terrible, unholy sun, she welcomed it. All the men around her were just men. Especially Ferdinand - he was only her \"master\" when he used that subtle metronome to control her. \n\nThough the pain went on for a long time, eventually it ceased. It always did. They needed her, after all, and though the lives of young women were cheap, they could not afford to simply discard her after so much work. She collapsed back to the altar, trying not to focus on the awful mass crawling out of the gaping wound in her stomach. \n\nShe could feel it burn like acid as it crept out of her, but strangely, that burning was also what saved her. Though her insides should have been shredded and she should have lost enough blood to kill her through the gaping wound in her stomach, that wound... no longer existed. There was a strange purple scar there, seeming to pulse faintly, veins reaching deeper into her body. \n\nHad it ever been that way before? Clarice had endured many other rituals, but between the agony and the joy, it was difficult to remember details. She didn't think there had been any ritual like this before, but others had given her wounds that should have killed her. Yet even with those, she didn't remember the injury healing like that... \n\nThe mass that had crawled out of her had been split open by Ferdinand and the other men. They began murmuring excitedly as they extracted what they wanted. At first she couldn't focus, it just looked like a twisted mass. Then suddenly it was familiar: it was another metronome. \n\nFerdinand set his own down on the table and set the pendulum rocking back and forth. Another pendulum had been attached to the second metronome, but they seemed out of sync and there was no sound within her mind. Still, he didn't seem at all upset. \n\n \n\n\"You see? No obstacles remain to the original ritual.\" \n\n\"They still aren't connected,\" another man objected. \n\n\"Give it a moment of time. The slime hasn't even cooled.\" Ferdinand did bend down and poke at the pendulums, a slight frown on his face. Another man shook his head and scowled. \n\n\"I still think we should have made her birth the thing. More proper that way.\" \n\n\"Oh, but I would never want to ruin my dear pet's pussy.\" Ferdinand looked down at her with a smile that made her shrink away, but she was exhausted. There was nothing she could do as he reached down, ever so gently, and caressed her lower stomach. His fingers slid lower until they slid inside her, drawing a whimper from her. It was worse than when the creature had been tearing apart her insides. \n\nJerking away from him, Clarice tried to curl up against herself. But at that moment, both pendulums began to tick. The sound was even louder than before, as if the two were resonating, and soon it filled her entire mind. She lay on the altar with her eyes blank, barely even able to think. \n\nSo the purpose of the ritual had been to create another one of the metronomes. Their power had increased, and no doubt they would ensnare other girls. She heard them say as much, laughing and congratulating one another on their success. \n\nAnd why shouldn't they? A soft smile spread over Clarice's face as the ticking of the metronomes reminded her that all was good and right in the world. There was no more pain in her stomach and she saw no need to look down at the injury. All she needed to do was enjoy how happy Master was and wait for him to command her again. \n\nEventually he did, ordering her to dress and return to her room. She happily went with him, glad that she had been of service to her Master. \n\nEvery mirror they passed on the way back, Clarice set her eyes forward and refused to look. She was sane, after all. There were no masks staring at her from the other side. \n\n&nbsp; \n\nX X X \n\n&nbsp; \n\nClarice lay on her side like a rag doll, staring at the wall a few inches from her eyes. Though they didn't have her in the straitjacket then, that was only because it was pointless. After experiencing a ritual like that, she would be too weak to attempt anything for days. Which left her to simply lie there and thinking about what had happened to her. \n\nYesterday Ferdinand had made use of her body again. As usual, she moaned and leaned into his touch and told him how much she wanted to worship him, while part of her watched from a cold and distant place. That place was growing smaller, she feared, as her mind gave out. That was why she didn't flee the pain of the memories - in fact, she grasped at them. \n\nWhen the ticking faded from her mind, the disgust flooded back. Gone were the days when she had felt shock at what had been done to her. No, she was so soiled now that no one would ever want her. But her mind was overwhelmed by disgust for the person she had been while she was controlled. \n\nMore than that, she was filled with disgust for Ferdinand, and a seething rage that choked out every other emotion within her. She wasn't sure if he actually believed that she loved him, or if he knew it was false and just didn't care. Sometimes she wondered if he even knew himself. It didn't matter what the answer was, she felt nothing but contempt and repulsion for him. Raw, black hatred swelled up within her and- \n\nWhy? \n\nIt could almost have been her own mind. The word was quiet and somehow within her, yet too alien to be her own thoughts. Was she hearing voices now? Had she finally cracked completely? \n\nYet when Clarice forced herself to sit up, she saw what she had known would be there: the nothingness had collected within the mirror. She could see the glass mask now, and it seemed as though it was staring directly at her. For a moment she opened her mouth, then she shut it tightly. \n\n\"I'm not going to talk to you.\" Clarice pulled her legs up onto the bed and wrapped her arms around them, facing in the opposite direction. She might be hearing voices and seeing things, but she refused to play their games. \n\nWhy? \n\nThis time she was listening more carefully and she could tell that there was some intonation with the voice. It didn't sound angry or hurt, just... uncertain? Curious? Ambivalent? None of those words felt quite right for the neutral regard it extended toward her. Even though she wasn't looking, she could still feel it, the intensity of the emptiness pressing against her. \n\n\"I...\" Clarice took a deep breath, but it was too late to deny the thing now. \"You're probably another trick. Another effect of the metronome. He wants me to talk to you, or start trusting you, or... or... or something! Whatever it is, it will just make him control me more.\" \n\nWe do not understand. \n\nDespite herself, Clarice looked over her shoulder. The mask in the mirror betrayed absolutely nothing, of course. Regardless of if it was a hallucination or what, it just floated like an ordinary object. She glowered at it, which did no good at all. Less than no good, if her theory was correct. \n\n\"You don't understand? What is that supposed to mean?\" \n\nThat got her a long pause and Clarice thought she almost sensed confusion. The mask floated backward... she realized that it was getting closer to her position in the room, but too late to do anything about it. When the glass neared her in the mirror she was frozen in place, then it touched her and there was a rush of thoughts and memories. \n\nNothingness. \n\nWithout warning Clarice was lying on the bed. She lay sprawled as if she had fallen, and her eyes refused to stay still, instead darting around the room. It only came back to her gradually... the thing on the other side had touched her mind. \n\nAnd it had been nothing like the metronome, nothing at all. It had simply reached into her head and rummaged around, without the slightest hint of subtlety. Clarice was left stunned, yet strangely, she didn't feel violated. The being only wanted information, and if it didn't care about her, that also meant that it didn't care enough to hurt her. \n\nBut she wasn't sure that it was actually apathetic. Her sensation of it had been at a distance, as if she was being held at arm's length. She thought the mask was just that, hiding whatever the thing really was. Its true nature... what could it be? It seemed curious, and it was focused on her... something about it was familiar, too... could it be? \n\nThere is much we do not understand. This world is difficult. \n\n\"What exactly are you?\" \n\nSpeaking does not come easily. Using words from your mind... a spirit? A lost one? The memories of the dead? The eldest become youngest? \n\n\"Truly?\" She hadn't wanted to hope, but Clarice found herself sitting upright and staring into the mask. \"Are you... a spirit that I know? One that's come to help me?\" \n\nOur understanding is not formed enough to answer such questions. \n\n\"You do seem young and confused. Could... could you be my child?\" The first time she had gotten pregnant, she had been glad to feel new life growing within her. She thought it might have been the metronome controlling her, but she didn't care. For a time, she hadn't been alone. \n\nAnd then Ferdinand had done some terrible ritual to end the life of the baby, months before it was her time. She had been blank and smiling the entire time, and her memory of the ritual was still hazy, but she was sure that it had been killed. Sacrificed to some horrible ritual. They had spoken of its soul being sent to another plane, but she hadn't dared to hope? \n\nCould this thing be her child's spirit? That might explain its confusion, why it- \n\nNo. That does not seem correct. \n\nThough the voice sounded uncertain, it still shattered her fantasies. In an instant, Clarice realized how foolish she had been. Even accepting all these mad rituals, her idea made no sense. She was just so desperate for some scrap of hope that she was seeing connections where none existed. Perhaps that was the first step to growing mad in truth. \n\nShe struck the bed with a fist and then threw herself down, feeling miserable and wanting nothing more than to cry herself to sleep. Yet the thing didn't leave, and its presence was troublingly intense. Even with her face buried in the stiff pillow, she could feel it bearing down her. After a moment, Clarice looked back up and scowled at the mask. \n\n\"Fine, then what are you? Or just tell me what you want and be done with it! Stop staring and just explain yourself.\" \n\nThat is difficult. Your understanding of the world is broken and inadequate. \n\nClarice sniffed. Her reaction was a little absurd, and that in and of itself made her feel better. If this was a trick, it was nothing like any previous trick. And if she was going mad, she could think of worse ways. \"My deepest apologies for being uneducated. I'd meant to study more, but there is this whole matter of being locked in an asylum.\" ",
        "We were referring to your species. All of you have strange delusions about reality. \n\nThat made her blink and pulled her further out of her misery. She made herself sit back up again and stared at the mask. \"And those delusions are such that you can't even explain the slightest thing? I'm starting to think that you aren't really trying. Perhaps Ferdinand sent you just to torment me.\" \n\nNo. There was a long pause, then the mask floated forward... so close that it was as if it peered from the other side of the mirror. It would be easier to show you. Approach if you wish to understand. \n\n\"It's not like I have a choice, do I?\" \n\nThat produced an even longer pause, and Clarice felt like the thing was slightly puzzled. After a long time, she felt its words in her mind again. You have a choice. If this conversation is unproductive, we will leave. \n\n\"Wait!\" She hadn't realized how scared she was of being alone until the word was already out of her mouth. \"I... if I come to see whatever it is, will you promise you won't do anything to me? You're not going to reach into my mind and control me or anything?\" \n\nDistance is not an impediment to accomplishing that. The voice was utterly without concern, as if it could not comprehend that its words could make her uncomfortable. In a strange way, that made her feel better. After all, previously it had just floated over and reached into her mind. The fact that it was talking to her and giving her a choice was something, at least. \n\n\"Alright... I suppose my situation can't get any worse...\" \n\nThat is likely untrue. But we do not understand what your species wants. \n\nShe folded her arms and frowned at the mirror. \"You're not doing a very good job of convincing me of this.\" \n\nIt is irrelevant to matters of substance. But it would be better to understand. There was another pause, then the mask started to fade away. Perhaps it is too soon. We will return. \n\n\"No!\" Clarice stamped a foot, then marched toward the mirror. \"Don't treat me like some fragile child... just show me whatever this is that's so hard to understand!\" \n\nThen touch the mirror. \n\nHer anger took her almost all the way there before she paused and thought about what she was doing. Could this still be a trick? Some mad vision within her mind, and touching the mirror would somehow place her in Ferdinand's control? \n\nYet this felt nothing like that. Everything was always so comfortable and easy with him, the control gently pulling her to exactly where he wanted her. This experience was more baffling than anything, and the entity seemed to be utterly and absolutely indifferent to her. \n\nAfter another moment of hesitation, Clarice threw aside her doubts and reached forward. Mistake or not, this would actually be her choice, and sh- \n\nA flood of sensations tore through her mind, ripping her away from reality completely. There were hideous beings like nothing she had ever seen before, mad abominations of fleshy masses. Yet beside those forms were memories of emptiness that made her heart ache, impossible shapes twisting on themselves, colors she had never seen before, sounds that made her body scream... \n\nClarice staggered back, barely catching herself. It could only have been the slightest moment, yet her mouth was filled with what tasted like blood. When she looked up at the mirror, she saw that her eyes were bloodshot. More disturbingly, her pupils had grown until she could barely see her irises at all. \n\nNo... the truly disturbing thing was that the mask was gone. She was seeing herself in the mirror again, as if everything was normal. Clarice just stared at herself for a while, shocked at how mad she looked. Yet perhaps she was better now? If she was seeing a normal mirror instead of a- \n\nIt is difficult to explain. \n\nThe voice appeared again and she caught a flash of light reflecting off the mask of glass. It hovered just behind her now, and she could feel its presence beside her. \n\nBut that presence had changed in a horrible way. No, Clarice quickly realized that it was her view of it that had changed. The mask was nothing but a thin shell that covered something far different. On the other side, the entity was like that seething mass of flesh and mind-rending thoughts. If it was naturally a creature of such madness, no wonder it struggled to make itself understood. \n\nNo. We see reality as it is. Your species sees only shattered fragments. \n\n\"Did you... did you hear my thoughts?\" Though she should have been filled with revulsion, and the taste of blood was still thick in her mouth, Clarice found herself strangely numb. After so many thoughts had been forced through her mind, simple sensations like disgust seemed empty. \n\nThat might be an accurate way to view it, from your perspective. \n\n\"Then... have we been connected somehow?\" \n\nYou have been used as a connection for some time, resonating with the world as it truly is. The only difference now is that we are focusing on you. \n\n\"For some time...?\" Clarice felt something again as a cold knot sunk through her stomach. \"You mean Ferdinand's rituals? Are you... one of the things they're trying to summon? Or something like that?\" \n\n\"Something like that\" is probably as close as you can come to understanding. \n\nThe entity seemed to be speaking more comfortably now, as if making use of her mind had made communication easier. Yet that just made it easier for her to be angry with it. Clarice glowered into the mirror. \"Then why do you let it go on like this? Why do you let him do all those awful things?\" \n\nIn response, the entity reached into her mind again. She felt her disgust and revulsion be picked up like they were concrete objects, looked over with blank curiosity. It was a strange sensation, as if those emotions were being felt by someone else. As little as she liked to be reminded of them, it was not as awful as wallowing in those feelings. \n\nYou do not like these sensations? \n\n\"No!\" \n\nThen you should not experience them. \n\nFor a moment Clarice just stared into the mirror, flabbergasted. The entity still didn't seem to understand that what it had said was utterly absurd. In fact, she wasn't sure if it even understood her emotions at all, not in any meaningful sense. \n\nClarice took a deep breath and it became a shuddering gasp midway. \"Why? Why do you help them do such awful things? Is that the kind of thing you are? You enjoy all the pain and suffering?\" \n\nThat produced another long pause, and she had the sense that the entity on the other side of the mask was both uncertain and ambivalent. Ideas like distress and suffering seemed to be alien to it, even after their conversation. Just as she was about to give up, it spoke in her mind again. \n\nYour world is a mote of dust falling into a swiftly moving river. The mote exists for only a moment and then it is gone. \n\nShe sobbed and threw herself onto the bed. \"So you don't care at all!\" \n\nNo. But though the words were uncaring, Clarice felt the presence draw closer to her and it felt... not malevolent. There are many things that are irrelevant, including these sensations. \n\nShe couldn't help but look toward the mirror and saw herself in twisted form again. Her appearance was still monstrous, but no longer so shocking: it was a pale reflection of the twisted world of the entity. But that reality fell away and she saw the mask again, slipping closer to her... \n\nThe mask dissolved and she felt the raw alien power reach around her. Yet it was different than before, more controlled. Far from gentle, yet it reached into her mind with a confidence that it had lacked before. The truth of what it was doing made her head hurt, insane actions that she could not comprehend, and then all at once it cohered into a simple vision. \n\nClarice saw the thing pick up her sadness and disgust as if they were toys and then dropped them into a box. And all at once, those emotions were gone. No, not entirely gone... she knew they were there, but they no longer touched her. \n\nNext the entity rummaged around her head, grasping at childhood memories. Clarice shivered, imagining what horrors it could create... and yet a moment later, she found herself feeling comfortably numb. It wasn't happiness or contentment, just an odd emptiness. Compared to the trauma she had experienced, much less the insanity that was currently happening to her, it was a relief. \n\nWe have an interest in understanding irrelevant things. We will gather more information from you. \n\nNot exactly comforting, but at least Clarice believed the entity was being honest. The numbness had her feeling surprisingly sleepy, yet she forced herself to remain alert a little longer. \"This isn't so bad. Thank you.\" \n\nThat got no response. Perhaps the entity didn't understand the concept, or it didn't care. \n\n\"You're going to stay, right? Keep doing things like this?\" \n\nYes. This is a time for observation. \n\n\"Then it's awkward that we haven't been introduced. My name is Clarice.\" \n\nWe are aware. It said nothing else. \n\n\"...and you are?\" \n\nWe have demonstrated our nature. We understand now that you ask for a name, but such things are meaningless. If you seek a more appropriate label... What followed was a flood of sounds that were nothing like any language Clarice knew. She wasn't sure if some of the sounds could even be made by a human, or perhaps by any animal at all. \n\n\"I don't think I can say any of that.\" Clarice thought for a moment while she bunched up her pillow, trying to make the stiff thing a little less uncomfortable. \"But part if it sounded like 'Xthlo', I think. Is it alright if I call you Xthlo?\" \n\nWe cannot imagine that being relevant. \n\n\"Then... good night, Xthlo. I have had quite enough madness for today and I am going to bed.\" \n\nThat produced another moment of bafflement, then the entity withdrew. But it didn't take its numbness with it, so Clarice was able to settle down into the thin sheets. Her mind should have been racing with everything that had happened to her, yet she was rather calm. Not the placid calm of the metronome, but a blankness simply imposed on her. \n\nIt was better than the alternative. Clarice closed her eyes and immediately dropped into a dreamless sleep. \n\n&nbsp; \n\nX X X \n\n&nbsp; \n\nThe nurses escorted her to the doctor's room, but Clarice was certain that she knew what was awaiting her. Though she couldn't put her finger on the exact reason, she had embraced her madness and kept talking to Xthlo. Those conversations with him gave her a strong impression that Ferdinand would soon be doing much worse to her. \n\nDespite herself, Clarice did think of Xthlo as a \"him.\" It was an incredibly alien being, and it quite obviously could not care for her, but Xthlo was the only companion she had. Plus, after he had rummaged around in her head again, she no longer saw strange sights in the mirror, only the mask when his presence drew close to her. \n\nBut that day, there was no sign of him at all. Clarice felt remarkably sane as she was taken to Ferdinand's large office, which made it easy to reflect on what awaited her there. He had been affectionately caressing her lately, using the metronome without making use of her body, so it was only a matter of time. \n\n\"Ah, there you are, pet.\" Ferdinand looked up as she entered, smiled warmly, and set the metronome to ticking. The nurses seemed to notice nothing, or perhaps chose not to notice. They backed away, the door closed behind her, and she was alone. \n\nAlone with... with that awful man. Clarice set her jaw and tried not to think about the ticking, but it was such a soft sound, subtly worming its way inside her. Ferdinand frowned slightly before continuing to speak. \n\n\"I have enjoyed having you here, my dear. Watching you break, over and over, has been a wonderful diversion from my work. But that work is growing serious, now, and our more senior members are insisting upon acquiring the same power I possess. And I intend to give it to them, but regrettably, the process will render you rather... unusable.\" \n\nAlone with... with him. She closed her eyes, but she was subconsciously beginning to sway with the movements of the metronome now. \n\n\"I regret this, I truly do. And I feel for what you must be experiencing, though of course that makes this all the sweeter.\" \n\nAlone with her Master. Feeling the warm emotions bubble up inside her after so much teasing, Clarice eagerly moved forward toward him before he stopped her with a raised finger. \n\n\"But I suppose it's pointless to talk to you of such things, isn't it, pet?\" He rose and moved closer to her, slowly and without any concern. \"I do hope you enjoy yourself. This will be the last time.\" \n\nThat could have been horrifying to her in multiple ways, but all Clarice could do was giggle as his finger slid along her jaw. She leaned into his gentle touch and stared up into his eyes. He bent down, his lips brushing against hers, and slowly pressed her back toward the couch at the side of his room. \n\nWhile her mouth released soft gasps and sighs, Clarice shivered. As usual, he stripped her bit by bit, admiring her body with his hands the entire time. But soon enough he pressed her beneath him and pushed inside. \n\nNormally, that was when she fell apart and became a wanton harlot. But though Clarice could feel the soft heat growing in her loins and knew she was moving beneath him, she felt strangely separated from it. There was an edge of something else, her mind cracking as if under great pressure, that prevented her from giving in. Unless this was just another stage in her surrender? \n\n\"No, this can't end too soon.\" Ferdinand grunted and pulled out, clenching his eyes for a moment as he held back. Then he shook his head and shifted to sit on the couch, pulling her on top of him. \"Show me how much you love me, pet.\" \n\nShe couldn't help but obey, sliding on top of him like a lover. One of his hands explored up her stomach, his eyes drinking her in as she began to move on top of him. His other hand reached to cup one of her enlarged breasts, the flesh spilling over his fingers as he caressed her. It was warm and loving and horrible. A sob welled up on a back corner of her mind- \n\nAnd then, out of the corner of her eye, she spotted the glass mask. \n\nIt shattered and she was overrun by a visceral rush. Her mind was struck by an onslaught of what felt like bloody intestines, or perhaps something worse, squeezing around her and utterly pushing all thoughts from her mind. \n\nClarice opened her eyes and found herself floating in the doctor's room, except it had become a fleshy hellscape. Every surface was covered in pulsing, twisted flesh. She could dimly feel that she was still moving her hips atop Ferdinand, but there was no sign of them in the room and the sensations might as well have been happening to someone else. \n\nIs this preferable? \n\nA bloody tear opened in one of the walls and Clarice saw a pair of jaws filled with malformed teeth. The flesh convulsed and the mouth opened, revealing a single eye of a color that made her head spin. Clarice took a deep breath and looked up at Xthlo, for she was certain it was him. \n\n\"You did this?\" \n\nIs it preferable? Human minds are strange and fragile. \n\nShe found herself smiling up at him. \"Yes, this is better. So you do care!\" \n\nThe flesh around her convulsed and she sensed that alien confusion again. But after their conversations, Xthlo usually spent much less time uncertain. We do not \"care\" in any sense you understand. \n\n\"So you keep saying.\" Clarice folded her arms and stared at the eye, trying not to let the color get to her too much. \"But frankly, you don't seem so much of a monstrosity to me. You could have done so many terrible things to me, yet you didn't. And even if this is all some cruel trick, you have been a great source of comfort to me.\" \n\nHuman concepts such as comfort and kindness are irrelevant to us. But what Ferdinand and his circle fail to understand is that pain and cruelty are equally irrelevant. It is a cosmic coincidence that the pain of their rituals is functional, and their theories are yet another way for humans to try to bring order to that which lacks all order. \n\nClarice cocked her head, trying to keep up. She had grown somewhat used to Xthlo's strangeness, but he didn't make it easy. \"So you're saying they have things wrong? Not that he tells me very much, but he makes it sound like they have it all figured out.\" \n\nYes. Their concept of us is a petty, risible notion. \n\nThough she was glad for the relief, in the back of her mind Clarice was aware that she was still riding Ferdinand, moaning about how much she loved him and how much pleasure he was giving her. Looking for a distraction, Clarice discovered that it was difficult to move while simply floating like this. After a bit of flailing, she managed to snag a tentacle arching from a nearby wall and pulled herself down against it. \n\nThe fleshy surface was slimy and deeply unnatural in a way she couldn't quite pin down. It was also surprisingly hot, almost burning her, and Clarice rested against it. Xthlo watched in what seemed like indifference or confusion. Honestly, she preferred that to what was going on in the real room. \n\n\"Xthlo... is this just a trick? You wouldn't lie to me, would you?\" \n\nThat prompted a surge of something like amusement. Lies are a human concept. There is no reason to state anything other than what is. \n\n\"I know you don't really care, but... I'm glad you're here, Xthlo.\" Clarice pressed her cheek against the flesh, feeling the unnatural heartbeat vibrate through her almost painfully. She took a deep breath and closed her eyes. \"My parents and those nurses and even the other girls... they all might feel sympathy but they never did a thing for me. Thank you. For this.\" \n\nThere was no response, because of course there wasn't. Even when she had poured her heart out to Xthlo, explaining how her family had decided that she was better off removed, there had been nothing but alien incomprehension. Honestly, she was starting to find it comforting. At the very least, there would be no false sympathy from him. Of course, that meant nothing at al- \n\nYou are preferable.  \n\nClarice jerked back in surprise, staring toward the eye. \"I... I beg your pardon?\" \n\nComprehending these delusional motes generally brings a lack of perspective. This is expected and inevitable. But within that lack of perspective, we cannot help but form opinions about temporal beings, however brief they may survive. And we prefer you to humans who believe they control us. You have been made compatible and are therefore less detestable. \n\n\"Oh...\" Clarice put a hand to her chest. She had intended it as a joke, yet in truth she actually was a little touched. On an abrupt whim, she decided to just be honest. After all, could she be any more vulnerable to this monster? \"Xthlo... what's going to happen to me? With this ritual Ferdinand was speaking of.\" \n\nUncertain silence. It was hard to tell if the alien entity didn't want to respond or wasn't certain how to, but Clarice couldn't help herself from pushing on. \n\n\"They're going to kill me, aren't they? Or have you kill me?\" \n\nIn a matter of speaking. \n\n\"Is this ritual going to give them what they want?\" \n\nThe only answer was a surge of raw contempt. She smiled. \n\n\"Then... I think I can accept that.\" Clarice leaned back against the wall of hot flesh, letting the twisted veins sear deep into her. \"I sometimes fantasized about taking my own life. Perhaps it's better this way. But if kindness and cruelty are all the same to you, can you at least kill me quickly? I think I have had more than enough torture.\" ",
        "It is not so simple. The ritual will create a physical form for us in your world, which will possess some irrelevant deires and will make use of you in order to complete the ritual. New power must be birthed into your world. \n\n\"Can't you just... not do that? Eat them all or something?\" \n\nNo. We can accommodate you in irrelevant matters, but what must be, must be. \n\n\"I see.\" \n\nClarice thought about that for a moment, then shook her head at herself. What she was going to say... her mother would have been horrified, but then again, her mother had abandoned her a long time ago. \n\n\"Then I guess you're welcome to me, Xthlo. No respectable man would want me, any more, so I am happy to have you if it means Ferdinand stops touching me. Can you at least be gentle?\" \n\nHe is gentle. With the words came an increase of sensation and briefly she was aware of her body moving on top of Ferdinand as he caressed her lovingly. Clarice dropped to the floor and nearly retched. She was glad when she looked up and found herself in the hellscape again. \n\n\"Then... oh, I don't know. Mayhaps I'm ruined for everything, then.\" \n\nThere was an incredibly long pause from Xthlo, then she felt his power reach into her mind. Human desires may be strange and irrelevant, but they are no longer incomprehensible. Given more access to your mind, we will arrange something that is preferable. \n\nShe blinked, staring up at the eye within the bloody jaws. It did not blink back. Had Xthlo just said what she thought he did? Clarice rubbed tears from the corner of her eyes and smiled, not caring if she had gone completely mad. \n\n\"Then... I will leave myself in your hands.\" \n\nAs soon as she spoke, the power shoved into her mind and began sorting through her thoughts roughly. There were a surprising number of sexual thoughts that made her blush to recall. But as always, Xthlo was uncaring, simply observing every aspect of her dispassionately. Clarice closed her eyes and let herself come apart bit by bit... \n\nIt felt like only a moment, but suddenly she was whole again, in Doctor Ferdinand's office. He was speaking to her, but she could barely hear his words. Though she could feel the warmth of his cum inside her, she had been clothed again. In fact, she was sitting up quite properly and she wasn't sure that she had been the one who had put herself there. \n\n\"I will always love you, pet.\" Ferdinand caressed the side of her face and brushed back a stray lock of hair. \"I want you to call me Master, at the very end.\" \n\n\"Of course, Master.\" Clarice heard her words, but she hadn't been the one who spoke them. The smile that she gave him was almost real, though. \n\n&nbsp; \n\nX X X \n\n&nbsp; \n\nFor one final time, Clarice was taken through the secret door and into the chambers beneath the asylum. Ferdinand frequently touched her affectionately, but she could tell that his thoughts were elsewhere. Whatever this ritual was, he was certain that it would bring him all the power that he desired. \n\nWhen they reached the central chamber, the large crowd made it obvious that this was not like the other rituals. There were more men present than normal, some of them much more important-looking. Not that any of them mattered as much as her Master. Clarice's smile widened as she floated in the joy of serving him. \n\nThey spoke to one another about what a great task they were undertaking, but she had ears only for his commands. Eventually Ferdinand ordered her to strip and lie down on the altar, and she gladly did so. A small sane part of her feared their knives, or another beast that would tear into her, but no pain was forthcoming. \n\nInstead, Ferdinand took something small and slimy and slid it between her legs. Clarice couldn't help but moan as he touched her slit, chuckling as he found it wet, and began to push inside. He was pressing something within her and she found herself arching off the altar not in pain, but in pleasure. \n\n\"A slut to the end, aren't you?\" He eased off just as she was getting close, instead taking hold of another sphere and toying with it a little before pushing it inside her. \"Would you like to come, pet?\" \n\n\"Yes, Master! Please let me come!\" \n\n\"I think not.\" He chuckled and kept her on the edge, making Clarice whine in horrible bliss. The part of her that remained was disgusted with herself, clinging only to the memory of Xthlo's ghastly tentacles in her mind. Soon, they would give her to him and this would be over. \n\nHow long it went on, she couldn't be sure, but soon she felt stuffed full. Even when he was done, Ferdinand kept toying with her slit, smiling down at her fondly, keeping her just on the edge but not letting her come. \"You really were a perfect little toy. I almost want to give you relief... but it's better to watch you squir-\" \n\nThe world shuddered as something tore into it. Clarice heard gasps and curses from the men, but was only focused on the fact that her Master's hand had been taken away. But as she lay back, pleasure fading, she realized that something significant had occurred. \n\nBeside her altar, a monstrosity had appeared in the circle of sigils. It was a hideous abomination, man-shaped only in form, covered in strange protrusions and lacking anything like a face. \n\nIt was Xthlo. Clarice found herself smiling. \n\n\"Ferdinand, you'd better not have misdrawn those circles.\" Another one of the gentlemen scowled, but Ferdinand shook his head confidently. \n\n\"There were no errors. Once everyone has retreated to a safe distance, we can lower the inner barrier and allow the beast to... enjoy our sacrifice. Ah, look: the beast seems quite eager to begin the fertalization process.\" There was a cock-like tube of flesh rising from between the monstrosity's legs and Clarice found herself staring at it. Surely such an enormous thing couldn't fit inside her... \n\n\"And you're sure it won't just tear her apart?\" \n\n\"I doubt she will be useful for much once it's done, but that should not be a problem. These things want to impregnate our world, after all.\" Ferdinand clapped the man on the shoulder and guided him away from the circle. The whole group was retreating toward the stairs now, leaving her along with the abomination. \"Take heart, gentlemen. By midnight, we'll have every ounce of power we deserve.\" \n\nMost of them left the room with looks of disgust on their faces, as if after everything they had done here, this was the act that went too far. If she had not been frozen in place, Clarice might have smiled at the fussy gentlemen. When most were gone, Ferdinand lingered by the side, his hand over a line of chalk drawn on the wall. He looked back at her, eyes a little moist. \n\n\"I really wish it didn't have to be this way, pet. I'll remember you fondly.\" Then his hand brushed through the line. \n\nInstantly the chamber was filled with a terrible energy. The mass that should have been the abomination's head split open in a mockery of a mouth to release an earsplitting roar. It took a step forward that shook the chamber, clearly no longer bound within the small circle. Ferdinand and all the others quickly fled the room, leaving her alone with it. \n\nAlone with Xthlo. She would know that skin-crawling sense of horror anywhere. \n\nPart of her was afraid that she had made a mistake, that she hadn't really known what she was doing. But that feeling was overwhelmed by a sense of horror not her own, and a desperation for Ferdinand. Against her will, Clarice leaped to her feet, trying to run after him. \n\n\"Wait, Mast-\" A grotesquely-distorted hand closed around her head from behind. \n\nWhat followed was a rush of raw thought unlike anything she had ever experienced. It was as if molten lava had been poured into her mind, scouring everything. There was no comparison to the subtle ticking of the metronome, this power simply flooded through her. Leaving her nothing but an empty shell would have been effortless for it. \n\nAnd yet... \n\nClarice was dropped onto the altar like a limp doll and she simply rolled, finding herself staring up at Xthlo. Her mind felt scorched and ravaged, yet it was still her mind. Tears came to her eyes and she found herself smiling. Xthlo might hurt her, but he would never be cruel. He didn't care enough to be cruel. \n\n\"Xthlo...\" \n\nThe fertilization process will begin now. We have made preparations in your biological structure for it to be optimal given circumstances. \n\nShe swallowed a giggle. \"How gentlemanly.\" \n\nThat is not an accurate assessment. \n\nOne of his twisted hands took hold of her hips and roughly flipped her around. Gasping, Clarice barely caught herself on all fours. The hand was joined by a second, both gripping her hips firmly. She realized how he intended to take her and decided that it was better than having his bulk smash her to pieces against the altar. \n\nThough the hands on her hips were knotted and rough, nothing like Ferdinand's soft touch, she still found herself thinking of him. He had taken her like this sometimes, caressing her ass until she was about to orgasm from his touch alone. It had left her cooing happily and begging for more and utterly disgusted with herself. The memory made Clarice squirm uncomfortably... \n\nAnd then Xthlo's cock pushed between her thighs and against her stomach. \n\nShe had thought him erect before, but his cock had grown even further. It was an unnatural, twisted length, terribly thick. And when she felt his body push against her ass, she was shocked at how far up her stomach his length rubbed. Surely it was utterly impossible for such a thing to go inside her. Ferdinand's member had fit her like a hand in a glove, but this monstrosity... \n\nChanges have been made to accommodate details of biology. You may cease concerns, further choices are irrelevant. \n\nIt was hardly a whispered sweet nothing, but Clarice found herself slightly comforted. Yet memories of being with Ferdinand kept welling up as Xthlo slowly dragged his cock backward, unnatural ridges rubbing her stomach and between her legs. She realized that Ferdinand was the only man who had ever touched her, shaped her body and her pleasure and her entire being. He had owned her with the slightest touch, made her wet just by toying with her slit, just like the monstrous cock behind h- \n\nThat cock slammed forward, tearing through her body. It should have torn her apart, yet after Clarice finished her scream, she realized that it hadn't. Her entire body seemed to be wrapped around his shaft, an overwhelming sensation that left her arms and legs trembling. \n\nWithout hesitating, Xthlo pulled back and then thrust in again. Even more of his cock punched inside her and she gave another scream. His cock was like a burning hot pillar... yet there was pleasure alongside the pain. In fact, she found herself welcoming it. The burning edge of pain swept through her, consuming every one of the soft memories of Ferdinand. \n\nThe monstrosity gripped her hips tightly and fucked her from behind, slow but powerful strokes plowing into her pussy. Her entire body rippled with the force of them, her ass jiggling, breasts bouncing wildly, her hair flying as she tossed her head and screamed. He didn't relent, thrusting harder and jamming more of that monstrous cock into her each time. \n\nOnly when he was buried inside her to the hilt and her entire body wrapped around his cock did Xthlo pause. Clarice stopped screaming, instead gasping for breath through her sore throat. \n\nThe pussy that Ferdinand had claimed for himself was utterly destroyed. It was nothing but a fuckhole now, barely able to contain Xthlo's monstrous cock. There was absolutely nothing left of the lady that he had trained, only a piece of meat for a monster to use. \n\n\"More!\" Clarice used what little strength she had to look over her shoulder at him. The hideous body behind her was absolutely nothing like any lover she had ever imagined, wasn't really a lover at all. Xthlo's presence closed around her, as alien and uncaring as always, and she took a savage joy in that. \n\nAs we thought. Very well. \n\nTwisted hands gripped her hips tighter, not caressing but just using her flaring waist as a convenient handle. He began to fuck her seriously now, pounding into her reshaped cunt relentlessly. Clarice began to scream again as the raw sensation seared into her. The pain was lessening now, but there was still a burning edge of it, reminding her of what he was. \n\nAs if she could forget. She had soon screamed her throat raw again as her entire body was fucked mercilessly. On instinct she tried to squirm away from the assault, but it was completely meaningless: the monstrous hands kept her hips completely immobile to receive the powerful thrusts. \n\nUndeniable pleasure burned through Clarice as she came, then her entire body went limp. Her arms gave out and she collapsed forward, her breasts pushing against the cold altar. It didn't matter to Xthlo, who kept pounding against her ass from the slightly new angle. She gave a rough moan as even more of her body was carved out as dominated by his monstrous cock. \n\nShe understood what Ferdinand had said now about it being the last time, about her being ruined. If there had been any man left in the world who would have wanted her before, they wouldn't now. Even Ferdinand wouldn't have wanted to fuck her after her body had been reshaped by the monster inside her. She was fit for nothing but being a hole for it. \n\nClarice smiled and came again. \n\nHer legs had been braced against the altar, but soon even they felt like jelly and started to give out. She heard a grunt from the beast behind her and felt slight irritation from Xthlo. He moved her slightly, dragging her legs off the edge of the altar. \n\nIn one swift movement, Clarice found only her breasts and face against the altar while her lower half hung off the side. Her legs dangled limply, but that didn't matter, because Xthlo had kept his firm grip on her hips. He resumed fucking into her even more roughly than before and she discovered that she could still scream. \n\nHow long it went on, she had no idea, but she had long ago lost her voice. She gladly hung there, held up partially by his hands and partially by the monstrous cock impaling her. The raw pleasure had blasted every part of her mind raw and left nothing else. Though she would have been happy to stay like that forever, she realized that it was soon coming to an end. \n\nXthlo's face split open with a wet sound, following by a gurgling roar. Clarice braced herself, but she was completely unprepared for the rush of cum. She could feel it surging down the twists and turns of his monstrous cock, then it was bursting inside her. \n\nIt was nothing like anything she had felt before, alien and burning and perfect. With her pussy already barely able to contain his cock, it was utterly flooded by the rush of unnatural cum. All she could do was hang there and come yet again as it pumped inside her and flooded down her thighs. \n\nBy the time it was over, Clarice felt bloated. Every part of her body had to be filled with the monstrous cum. She wouldn't have been surprised if it had expanded her body, but her eyes had rolled back in her head and she could do nothing but lie there. She could still feel the last spurts oozing out of her. Her ass and thighs were plastered with it. \n\nHmm. Compared to her pleasure-addled mind, Xthlo sounded almost apathetic. Yet there was a new current to his mind that she hadn't heard before. Not quite as expected. \n\nShe just lay there, completely unable to respond. \n\nThat aspect is as expected. You will recover. Your body must be able to sustain more than this. \n\nMore? The idea was overwhelming and it sounded wonderful. If she could just stay here, be used as a fucktoy forever... the cock inside her was still hard, and now that it wasn't pounding her, she could enjoy all the strange ridges and contortions. Her body had survived, her cunt transformed into a hole shaped perfectly for the unnatural organ. \n\nBut the idea of staying forever reminded Clarice that it couldn't be. They were here for a reason, after all, and Ferdinand would not have done this if it didn't benefit him. The blank pleasure on her face finally gave way and she found herself frowning. \n\nXthlo could have fucked her back into senselessness, and she almost wished that he would. However, instead he pulled out, drawing a moan from her as he extracted his length. The slow movements stretched her overwhelmed pussy lips in a way that sent new pleasure trembling through her body. \n\nClarice collapsed first against the altar, but the edge was sharp. She managed to find enough strength to pull herself up onto it and dropped onto her back. After taking a moment to catch her breath again, she stared up at the abomination beside her. \n\n\"Wh... wh...\" Her throat was too sore and the slightest sound ached. \n\nYou will not be able to speak for some time. Your thoughts are sufficient. \n\nHer thoughts felt as thoroughly fucked as her body, but she managed to pull them together after a time. \"What happens next?\" Her voice seemed strange within her mind, but she pressed on. \"Now that I'm... fertilized... they need to collect what they want?\" \n\nCorrect. \n\n\"But then... they'll get what they want, right? More metronomes, and all the power that comes with them?\" \n\nThat is not relevant. \n\nClarice frowned slowly, turning that thought over in her mind. Not long ago, she had hoped for nothing more than a quick death. Now, she found herself wishing that far more was possible. But Xthlo had taken care of things so thoroughly, maybe it was best to leave it to him. If he kept fucking her like that, maybe she wouldn't have any time to think about what Ferdinand and his friends were doing with their newfound power. \n\nDeciding to devote herself to her new role, Clarice smiled at the massive organ that hung thickly beside her. \"Was this just... mechanical to you? You said your form would have irrelevant sensations... did you enjoy it at all?\" \n\nSuch things are irrelevant to us. A long pause, and the body shifted closer. However... such human constructions do possess additional desires. Mere necessities for the ritual, but not disagreeable. More such activities are preferable. \n\nJust what she had been hoping to hear. Clarice wanted to pull him closer, but wasn't sure she had the strength. Fortunately, Xthlo was as deep inside her mind as he had been inside her body and understood her thought even before it was fully formed. \n\nHis cock slapped down onto her body, burning cum splattering over her skin. She marveled again at how such a huge thing had gone inside her, not to mention how heavy it felt. Part of his cock was draped over her torso and the contorted head lay against her breasts. \n\nThe sight and feel of it should have horrified any normal girl, but Clarice had not been a girl like that for a very long time. Her body had been made into a toy for that awful man... until that toy had been broken and reshaped. Smiling, Clarice found the strength to reach up and stroke the twisted cock. \n\nGrunting, Xthlo shifted position, his shaft falling more between her breasts. On a whim, Clarice took hold of her breasts and wrapped them around his cock as best she could. Even at their enlarged size, she couldn't wrap them all the way around his shaft. But it seemed to be enough, as his hips jerked forward to thrust in between them. \n\nAs the head bumped against her face, Clarice opened her mouth and did her best to lavish attention all over the twisted organ. The angle was awkward and Xthlo's movements were strange, yet it felt right. Ferdinand had used her mouth, too, always gently smoothing her hair away from her face and making her smile up at him lovingly. ",
        "If he could have seen her now, she was certain that he would have been horrified. That thought urged her to redouble her efforts to pleasure the heavy cock draped over her. Just with the weight bearing down on her and Xthlo thrusting slightly, she felt more owned than she ever had with Ferdinand. \n\nIt soon became clear that Xthlo wouldn't be satisfied with just that, though. As the cock became even harder, eventually he pulled it away, shifting around to stand by her head. Clarice tilted her head back to look at him, uncertain at first, and then realized that was exactly what he wanted. \n\nWith her head upside down, she had an intimidating view of that pillar of unnatural flesh looming over her. It bounced against her face, splattering it with more cum, then dragged across it into position. She had a hard time believing that such a thick shaft could ever fit, but opened her mouth as wide as she could. \n\nXthlo began to push inside, the contorted head fitting easily enough but the thickest part of the shaft straining her jaw. It kept pushing in anyway and she found herself choking and gagging on it. The experience was certainly nothing like Ferdinand sliding between her lips, but she recognized that Xthlo was also being careful: the full strength of that body probably could have broken her neck. \n\nInstead he just thrust methodically into her mouth, beginning to enter her throat. And though she thought it impossible, somehow she adapted. She grew used to choking on the thick cock and tilted her head at a better angle to receive it. Her lips stretched thin around the shaft when a thicker part thrust through, but she could just barely take it. \n\nThe posture made her back arch, which thrust her breasts into the air. With her face filled with twisted flesh, Clarice couldn't see them... but she felt it when Xthlo reached down and grasped them. She shuddered as his hands wrapped around them. Though she had thought of her enlarged breasts as grotesque, they were the perfect size to fill his hands. \n\nRealizing that she could leave it up to him, Clarice lay back and let him claim another of her holes. Xthlo kept thrusting deeper into her throat while his hands squeezed her breasts. His fingers were contorted and rough, yet she found herself straining upward into his touch. The massive shaft was scraping her throat, barely able to fit, and she wanted more. \n\nThough the stench of cum had been pungent ever since it had flooded inside her, having it filling her mouth and dripping over her face made it overwhelming. It was slightly sour, not really a pleasant taste... but she tasted it gladly. She had thought she would never be able to escape the feeling of Ferdinand's slime in her mouth, yet compared to this thick cum she could barely even remember what his felt like. \n\nAs the thrusting continued, Clarice found her hands wandering down her stomach and between her legs. Good girls didn't do such things... but she was obviously not a proper lady with a monster groping her tits while shoving a cock down her throat. Clarice slid a finger inside her slit and found it slick with more than cum. \n\nSoon she was groaning, the sounds of her pleasure making her mouth and throat vibrate around the thick invader. Xthlo's cock had pushed most of the way inside her now, she couldn't fathom how much of it she had swallowed. Yet he just kept thrusting, gradually going deeper, his body around the base of his cock getting closer and closer to her face. \n\nWhen Ferdinand had made her use her mouth to pleasure him, he had also used the metronome to force her to come. He had seemed to take great pleasure in it, watching her shudder in pleasure with his seed in her mouth. Yet now Clarice found her throat being claimed by a beast that cared little for her pleasure, and yet she was chasing it herself, her fingers moving faster and faster between her legs. It was nothing lik- \n\nHe is irrelevant. \n\nXthlo's statement was the only warning she got before he began to truly thrust. Clarice screamed around his cock as it pulled most of the way out, then hammered back inside. Her jaw ached in the best way as he began to truly use her throat and his hands clenched tighter around her tits. \n\nThere was no space for any other thoughts, it was the most she could do to keep up with the monstrous organ thrusting into her mouth. Her vision was filled with unnatural flesh as the cock was buried to the hilt in her throat. It was impossible to breathe and Clarice found her vision going dark, yet her fingers were rubbing directly against her clit now and she was squirming wildly. She felt utterly used again, her face just a hole for the monster's cock, and it was glorious. \n\nThough it pulled back most of the way on each thrust, the cock was so thick that it was difficult for her to breathe. But that was nothing compared to when Xthlo roared and began to cum, still thrusting wildly into her throat even as jets of cum shot from his cock. She swallowed and sucked as hard as she could, but she couldn't come close to keeping up with the torrent of cum. It filled her stomach, her throat, spilled from her stretched lips and over her face... \n\nHer vision was growing dark now as breathing became impossible. Clarice felt a flicker of concern, then Xthlo reached into her mind to grasp the emotion and set it aside. \n\nHe didn't get a chance. Before he could manipulate the emotion, the feeling of his mind controlling hers made the hint of fear dissipate. Clarice closed her eyes happily and drifted into unconsciousness while still choking on his cock... \n\n&nbsp; \n\nX X X \n\n&nbsp; \n\nClarice wasn't sure when she had woken up, but at some point she realized that she was floating over the altar. The world had transformed itself into a fleshy hellscape again, so perhaps she wasn't really awake. Part of her had been hoping to wake with Xthlo still moving inside her, but seemed that was not to be. There was no sign of anyone in the chamber below, but twisted jaws wrenched open and his eye appeared beside her. \n\nShe smiled at him. \"Did I... die? I suppose it wasn't so bad...\" \n\nNo. The ritual is complete and harvesting has begun. \n\n\"Oh. You mean they returned? To harvest whatever they placed inside me?\" \n\nCorrect. We thought it would be preferable for you to be unconscious during the process. \n\n\"That's considerate, I suppose.\" Clarice stared downward, wondering what was going on in the real world. \"Is that it, then? They get what they want from me and you go away?\" \n\nNo. She waited for a further explanation, but none was forthcoming. \n\n\"What, then?\" \n\nYou will witness. \n\nThe fleshy walls began to slough off, a revolting process that didn't disgust her as much as returning to her body to feel his hands between her legs. \n\nClarice struggled to open her eyes, which had been nearly plastered shut with cum. She found Ferdinand over her, pulling something out of her pussy. It felt rather large, yet she felt little sensation from it. After her pussy had been brutalized by Xthlo's cock, it was numb and didn't feel much of anything from human fingers. \n\nAt least there was no love on Ferdinand's face now. He seemed to be repulsed by what had been done to her, which brought her a dark flicker of joy. Clarice kept her eyes mostly closed and tried to look around the room to get her bearings. \n\nThe object that had been pulled from her looked like the strange mass that had been converted to another metronome. But it wasn't just one: there was a small pile on the altar beside her, and other men were wrapping up the others and taking them away. It seemed that there were only a few left, and those remaining seemed impatient, as if things were nearly over. \n\nBeside her, Xthlo's body stood utterly still within the smaller circle. She hadn't expected that, having assumed that his body had gone back to whatever plane he was from. What was going on, then? Were they able to control him as they controlled her? That would be a bitter end for all this, but when she remembered the raw alien contempt of Xthlo's mind... she doubted it. \n\n\"You're still conscious?\" Ferdinand noticed her open eyes and frowned down at her. \"Might have been gentler to let you die. Surprisingly little bruising, but that thing has obviously ruined you.\" \n\nHis soft voice was seductive and horrible. Finding strength in her tired body, Clarice managed to pull herself away from him and crawl across the altar. He didn't come after her, merely shaking his head and watching her. \n\n\"Are you that traumatized, Clarice? You should know that I would never hurt you. Of course, given what's been done to you, I won't be touching you at all. No, it is clear that the time for that has passed.\" \n\nShe nearly fell off the side of the altar, trying to get closer to Xthlo's circle. It took a huge amount of effort just to pull herself up to her knees, her body exhausted beyond belief. Yet just as she drew near the circle, she heard the ticking of the metronome again. \n\n\"Turn around, pet. Face me.\" \n\nDespite everything, she could still feel the ticking in her mind. Tears began to form in her eyes and Clarice stared up at Xthlo's body. \"Help me, please...\" \n\nThis is irrelevant. \n\n\"Of course I'll help you, pet. I still love you enough to end this mercifully. Now turn around.\" \n\nShe could delay a little, but not resist his command in the end. Clarice felt her body turn and fully rise, facing him dutifully. There was gentle pity in his eyes, and after a moment Ferdinand pulled a sacrificial knife from his best. He examined the edge for a moment... then slid it across the altar to her. \n\n\"I have no use for a broken pet, and you look like you'd much rather be dead. So end it. Now.\" \n\nClarice picked up the knife against her will, but then stared down at it. What he said wasn't true. Her body ached all over and she could feel cum running thickly down one thigh from her abused pussy, but for the first time since she had been sent to the asylum, she looked forward to going on living. Surely he couldn't force her to do this... \n\n\"Pet...\" His voice grew more angry and the ticking became louder. It was throbbing in her ears and she knew that she would obey the command. Master became angry when she disobeyed... and yet she did nothing. Clarice stared down at the knife in her hand. \n\nPart of her fantasized about using it to stab him. It might have felt good to kill him, even while part of her still venerated him. And yet she couldn't. She wasn't sure if it was her mind forbidding her or just the fact that she was so tired. All she wanted to do was lie down and fall into the pleasure again... \n\n\"I wanted to be merciful.\" Ferdinand scowled at the metronome, setting it to rocking more quickly. It seemed even louder now, yet it couldn't touch her. He glowered at her and began coming around the altar toward her. \"But I don't need to be. These devices are already being shipped all over the continent. I will have my pick of girls better than you by this time next year!\" \n\nAs he drew closer, Clarice watched him numbly. With the ticking of the metronome thundering in her skull, she could neither obey nor attack him. None of it seemed to matter, though she didn't understand why. If he drew close, he would probably kill her, so why couldn't she do anything? \n\nThis is irrelevant. Xthlo's words made no more sense than before, yet she found herself slightly comforted. Perhaps, on a large scale, none of this mattered at all. At least she'd had a few hours of pure pleasure before she went... \n\nHer peaceful thoughts were interrupted by that infernal ticking. It really had become shockingly loud, reverberating through the chamber and through her mind. Ferdinand had paused as well, looking back at it with a frown and then rubbing his forehead as if he had a headache. So she was sane after all. But why was the ticking... \n\nNot ticking. A heartbeat. \n\nFor the briefest of moments, Clarice saw the world as it was. Ferdinand was a tiny sack of meat in a contorted abyss of flesh. He flailed uselessly, while she stood still, a monstrous version of herself that was nothing like the innocent girl who had been kept in the asylum. \n\nAnd the metronome... it pulsed with unholy power. No, the word \"unholy\" was wholly inadequate to what it contained - raw force that ground both holiness and unholiness to meaningless dust. The heartbeat pumped energy from far outside her world, power that could shake it to the foundations... \n\nThe vision vanished a moment later, yet Clarice found herself smiling slightly. Ferdinand was rubbing his forehead harder now and walking toward the metronome with that same frown on his face. As if a device had malfunctioned, when it had done nothing of the sort. \n\nAs the heartbeat grew louder and louder, he sagged against the altar, clutching at his chest. The beating was obviously reverberating through him as well now. With a grimace on his face, he lunged forward, trying to stop the movement of the dark pendulum. \n\nA moment later he fell back, clutching at the side of his face. From her brief glimpse, Clarice saw that one of his eyes had been liquefied and the side of his face closer to the metronome was melting. Ferdinand gave a low moan of pain, his once gentle voice breaking in the middle of the sound. Now he tried to drag himself away from the metronome, but the heartbeat was becoming louder and louder. \n\n\"Why doesn't it harm me?\" Clarice stared down at her hands, wondering if her skin would begin to melt as well. And yet, though her entire body throbbed with the heartbeat, she felt no pain. If anything, she felt better than before. \n\n\"You are ours. There would be no benefit in harming you.\" This time the voice came from Xthlo's body, which finally moved again. Ferdinand's remaining eye bulged in shock as the monstrous body walked over the circle that should have bound it and came up to stand beside Clarice. \n\nAbruptly she realized how tight her knuckles were on the knife and how much her body ached from the tension. She let herself relax, dropping the knife onto the altar and sagging against the contorted flesh behind her. A snake-like protrusion wrapped around her, keeping her from collapsing entirely, and she enjoyed the unnatural heat. \n\n\"You... you can't...\" Ferdinand tried to say something, but a moment later was clutching his throat in pain. He stared at them in disbelief, his eye growing ever more bloodshot. Though the heartbeat had become simply a part of her, barely noticeable, it was obviously putting increasing strain on him. \n\n\"She is ours.\" One of Xthlo's twisted hands shifted over her, grasping one breast and pulling her back against him. She couldn't help but give a sweet moan. A small part of her felt guilty for being so wanton... \n\nBut that part vanished when she saw Ferdinand's eye bulge at the sight. Clarice found herself smiling and wished that she could do more, but though the heartbeat had rejuvenated her, she was still very tired. Fortunately, Xthlo could continue to lead. His cock had been hanging heavily behind her, but now it began to stiffen, rising up between her legs. \n\nIt pushed against her soaked slit, making her squirm and murmur, then kept pushing. As it rose, it took her with it, the monstrous cock actually lifting her into the air. Clarice gasped and let herself fall back against his chest as the cock jutted from between her legs ominously. \n\nBoth Xthlo's hands moved to grasp her hips and thighs, easily holding her aloft. She sighed and let him control her completely, moving her body as if it weighed nothing to position it over his cock. Her sighs quickly turned to a long scream of ecstasy as he dropped her down onto his cock. \n\nIt felt impossibly huge and she was instantly stretched to capacity, just on the edge of pain... but the monstrous cock was fully seated inside her. After pounding her for so long, it had reshaped her cunt into a perfect sheath for it. Ferdinand stared in horror, watching the unnatural bulge in her stomach as she was pumped up and down the length like a toy. \n\nHer entire body shook wildly as her first orgasm rolled through her, but after that Xthlo withdrew. Clarice whimpered softly... and then understood as the tip of his cock poked up against her ass. Ferdinand understood as well, choking out something incomprehensible. That was one place where he had never taken her, though he had forced herself to play with a few toys in her ass. \n\nThose were absolutely nothing compared to the behemoth of a cock now pushing against her outer ring. Clarice could feel her body resisting it, struggling against the invader despite how desperately she wanted that cock to spear into her guts. It felt even hotter than before, and slick with the juices of her pussy. If only... \n\nShe felt her ass begin to give way and let out a wail that became a scream as it finally broke through. When the bulbous head popped into her ass, the grip on her hips jerked her down, impaling her on the massive column. It tore up inside her, burning in a way that she had never known that she wanted. Xthlo began to fuck her ass hard, claiming her final hole in front of Ferdinand. \n\nYet she couldn't even think about him, not with that cock inside her. Clarice was soon reduced to nothing but pleasure, groaning and twisting as she was pumped up and down the shaft. Just like her pussy and her mouth, her ass began to clench around the invader and become good for nothing but the brutal pounding. \n\nBefore long, she hung limply in his hands, her body simply jiggling as she was jerked up and down. Her eyes had rolled back in her head, drool slid from her mouth, and her juices had drenched everything below her pussy. It was bliss. \n\nThe ecstasy was only interrupted when she felt an eruption of cum inside her ass. That finally drew another scream from her exhausted throat as it filled her like magma. The pulses of it were exactly in time with the heartbeat, she realized, a seemingly endless supply of cum filling her ass and soon overflowing. \n\nOnly when it was done did Clarice manage to come back to herself and even remember that anyone else had been in the room. As her pleasure faded, she looked down and saw that Ferdinand had become a pile of meat barely resembling a human. Such a sight should have made any respectable girl blanch in horror, yet Clarice found herself smiling. \n\nXthlo pulled her off his cock and set her down on the altar. She gladly collapsed onto it and just lay there for a while, feeling the cum still ooze out of her. Just how much had he pumped inside her? Though she didn't know, she found herself wanting more. \n\n\"Is that...\" She coughed for a moment, and cleared her throat. \"Did that happen to all the other metronomes?\" \n\n\"Not yet.\" Xthlo moved to sit down on the altar and picked up the metronome with both hands, examining it. The main mass of it twisted and contorted, becoming something with such an unnatural shape that she had to avert her eyes. When she looked again, it seemed to be gone, yet she could still hear the heartbeat, feel it beating from the world itself. \"But in time, the inevitable will occur. We do not think you will find it disagreeable.\" \n\nImagining just what might occur, Clarice smiled and struggled to get up. Her ass ached, but it was a good ache. More importantly, her pussy felt sorely neglected. She began moving toward Xthlo, not bothering to put any sway into her walk. It didn't matter, not for what they wanted. \n\n\"Well, if that's not happening right away... do we have time for more irrelevant things?\" \n\n\"Yes. Human processes can be rather tedious, so that would be our preference.\" \n\n\"How romantic.\" Clarice chuckled and then pulled herself up to straddle Xthlo's hips. His monstrous body was too wide, forcing her legs to split substantially just in trying to straddle him. But she had a feeling that wouldn't be a problem, not once the cock jutting against her stomach got inside her. ",
        "Yet when Clarice started to move, trying to get into position, she found herself freezing. It was too much like her final time with that man, when she had been forced to ride him so gently. She bit her lip and clenched her eyes. Even dead, had he taken this away from her? All she had wanted was to give herself to Xthlo properly, yet there would be so many echoes of him. Could she do this? \n\nWhy not? \n\nThe monstrous hands closed around her hips again, lifting her body like it weighed nothing. It was effortless for Xthlo to raise her into position and then impale her again. Her pussy accepted him quickly and the memories of herself as a beloved pet crumbled. She was just a trembling sheath around the monstrous cock within her. \n\nSmiling, Clarice lifted herself up as much as she could. The pleasure of the cock pulling against her pussy made her legs give out and she dropped back down onto him, impaling herself again. Thrust by thrust, she let the madness that had held her for so long be replaced by an entirely different madness of raw pleasure. \n\nShe was finally sane. Clarice began bouncing in the monstrosity's hands, in time to the heartbeat of the world. \n\n&nbsp; \n\n- \n\n&nbsp; \n\nAnd scene. This is a standalone story, though I did have Desecration of Wings on my mind while I was writing it. Eldritch abominations are interesting, but there are so many different ways to write them and it's usually best not to do more than one. Also had a lot of other stuff I was thinking about at the time, and it ended up as a story I think is a little different. \n\nThanks for reading!"
    ],
    "authorname": "SierraLeeAuthor",
    "tags": [
        "abomination",
        "eldritch",
        "asylum",
        "mind control",
        "horror",
        "big dick",
        "big tits",
        "unnaturally big",
        "literally unnatural"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/gentle-violence"
}