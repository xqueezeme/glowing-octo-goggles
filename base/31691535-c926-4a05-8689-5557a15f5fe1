{
    "title": "Little Packages Ch. 06",
    "pages": [
        "(End of June)\n\nKitten\n\n\"To the Bride and Groom,\" the Best Man called out after finishing his speech.\n\n\"To the Bride and Groom!\" everyone in the wedding party responded, loudly clinking wine glasses together and laughing. The bride and groom got up and kissed, to more wild laughing and cheering.\n\nI stood off to the side and watched the whole thing unfold, holding a heavy bag filled with camera gear while Michelle moved in for the kill and grabbed some more pictures of the happy couple. Since I started working for her and Ahmed I've done almost a dozen weddings in two months. Not only was the ritual becoming familiar, I was starting to get a little bit cynical with the repetition of it all.\n\nI'd been to weddings before, of course. But I didn't exactly grow up in the wealthiest parts of Saskatchewan. Until recently, most of the wedding I'd attended had been in community halls and the bride and groom were on a tight budget. The richest one had given guests two whole drink tickets, which was considered very brave, quite extravagant, and extraordinarily stupid to give guests a free head start on getting hammered.\n\nOver the last couple of months I'd been to weddings at golf clubs, country clubs, and at least one small mansion. Several had an open bar, which I couldn't quite process even after Michelle explained it to me weeks ago.\n\n\"The bride's dress often costs more than the bar tab, Kitten,\" she said. Michelle was the only person other than Daddy to call me that, and only when no one else was in ear shot. She enjoyed watching me squirm a bit. \"Welcome to weddings in Prince Edward County, where they have more money than common sense.\" \n\nIf I had slipped into a low level disappointment about the whole wedding process, Michelle had a full blown doctorate in wedding skepticism. Only Ahmed remained genuinely upbeat and loved the whole thing. I bounced between the two of them, depending on how complicated the wedding shoot was going to be. I helped drag around gear, getting people organized, providing assistance to the couples, and the dreaded \"other duties as required.\"\n\nThis evening Michelle drew the short straw with the expensive wedding and high maintenance bride. Ahmed had a nice, quiet little wedding on a farm with less than 100 guests. Michelle was annoyed, but they asked for him specifically, so there wasn't much she could do.\n\nSpeaking of the Queen of Cynicism, she was finished shooting at the front table and was marching back towards me. This was our chance to grab a quick bite to eat before they did the first dance. After that, we were free ladies.\n\nShe stood next to me and handed me her camera, which I dutifully placed in the right spot in her bag. We headed to the back of the dining room, where there was a table put aside for us to sit down. As we'd both been on our feet for hours, and wearing heels, we didn't so much sit on the chairs as collapse on them. Shoes were kicked off and I could feel my feet throb.\n\nDaddy had gotten very good at foot massages the last couple of months, which was one more reason to keep him around. Unfortunately, he was in Toronto tonight and wouldn't be back until tomorrow, so I would have to put up with the throbbing.\n\nA waiter came by and put a couple of plates of standard wedding chicken in front of us. Fancy country club or not, weddings tended to stick to chicken, although there was one that had salmon, which was nice, even with Michelle turning up her nose at it. \n\n\"Never eat seafood when you're not near an ocean, Kitten,\" she told me. She was a Maritime seafood snob and proud of it.\n\nThe waiter asked if we wanted something to drink.\n\n\"Beer for me,\" Michelle said. \"And a Diet Coke for her.\"\n\nThe waiter leaned in and with a conspiratorial whisper said, \"They're not seriously carding anyone and it's an open bar. We can get you something stronger if you want.\"\n\nI smiled politely. \"Diet Coke is fine, thanks.\" He nodded and went to fill the order.\n\nMichelle grinned at me.\n\n\"Awww, he thinks you're cute,\" she said.\n\n\"One in every 10 are allowed to hit on me instead of drooling over you,\" I said. \n\n\"I think your ratio is higher than that. You underestimate yourself,\" she said.\n\nI shrugged. She might be right, but I was only paying enough attention to keep safe. I wasn't even doing that much during the first weekend on the job. Most of my time was spent with my mouth opened at the amount of money being tossed around. Then Michelle gave me a stern talking to about the rules of wedding photography. They were:\n\n- Always be professional. This was going to be a highly stressful day for a lot of people, who also paid us. Be the least stressful thing they have to deal with.\n\n- Dress professional. Look good, but remember you're not a guest. *Do not* dress sexy.\n\n- Do Not Flirt. Not with the guests. Not with the groom. Not with the bride.\n\n- Do not get drunk at the wedding.\n\n- Watch your back.\n\n\"These weddings are too often filled with people used to getting their own way and now they're drunk, as an added bonus,\" she told me. \"Stick by my side, Kitten. Nobody messes with a six foot tall redhead. You're just a tasty treat to some of these assholes.\"\n\nThat's why I was dressed in a navy blue, retro vintage style dress with flowers on it that came down to my knees and had pockets where I could stick things when I needed to. I had on simple kitten heels and put my hair back in a ponytail. The key was apparently to look professional, but not like a guest, but also not like a slob. It was a whole thing. I thought it was a bit boring, but Michelle was right. Between my modest appearance and her slightly terrifying one, I hadn't had any incidents so far.\n\nHaving to worry about my virtue every weekend was not entirely what I had in mind when I signed on to work for Ahmed and Michelle. I learned quickly that Ahmed and Michelle were hustlers; both the good and bad kind. The good kind in that they worked hard and they did a lot of different things to make a living. And they were generous in showing me everything they did. In the last couple of months, my photography skills have gone through the roof. I'd picked up modelling tips from Michelle so my pictures on Instagram were more popular than ever. And, true to his word, Ahmed had sat down with me and showed me how to use a 3D printer and some metalworking. It was great stuff and absolutely useful.\n\nBut they weren't completely honest when they offered me the job. Cosplay work was their sideline. Wedding photography is what paid the bills. I knew they wanted to do less of it, particularly Michelle who was really beginning to hate it. But the cosplay business was something they hoped would develop. Especially if they had a design school student who loved cosplay as an employee so she could make outfits and draw attention to the business. So far, it was slow going and the main business often sucked the oxygen out of the room.\n\nI liked them a lot and they were really charming. But, like I said, hustlers. I was a little annoyed by it, but they were paying me well, I was learning things, and every night I got to go home to my Daddy. There are worse ways to be hustled.\n\nThe waiter returned with our drinks and flashed me a smile. Michelle grinned at me as he walked away. I paid no attention to her. She decided to ask me something harder to ignore.\n\n\"So when is Ben coming back with his folks?\" she asked.\n\nAnd just like that I could feel a bucket of ice water splash into my stomach. I'd been doing my best to not think about why he wasn't home this evening to take care of me. He was in Toronto picking up his parents. Tomorrow I'd get to meet them for the first time. Nothing to be terrified of whatsoever.\n\n\"He said he'd be back around lunchtime. And Meg is coming up for a few days as well. They love her and wanted her to come up with them,\" I said.\n\n\"Wow,\" Michelle said, and for once there wasn't a teasing note in her voice. \"You ok with all of that?\"\n\n\"Yeah, actually,\" I said, picking at the chicken a bit. I was now a wedding chicken snob because I'd had better. \"I have to meet his parents at some point and at least when they're here I can have the excuse of having to go to work if things get weird. Plus, it's only for a few days and then they're off to Montreal to see some friends. And Meg has been surprisingly awesome the last couple of months.\"\n\n\"I thought she was a stuck-up bitch?\" Michelle said, taking a sip from her beer.\n\n\"I think we just got off on the wrong foot. I mean, she's a bitch, just like you're a bitch,\" I said. Michelle just shrugged her shoulders like I told her it was warm today. \"But she's really smart, driven and I think basically a decent person when she lets herself be one. She's warmed up to me and I like her now. She's more....relaxed. I mean, she's been giving me tips about what to expect from Ben's parents.\"\n\nMichelle laughed. \"What are they, serial killers?\"\n\n\"What they are is in their mid-70s, with a kind of weird dynamic that Ben has never been able to explain to me. His dad is very proper, and is a semi-retired lawyer. She was the typical stay-at-home mom with all these charities and groups she worked with later to keep busy. Meg described her as a sweetheart, but scatterbrained and a little too used to getting her own way. And that his dad intimidates everyone except his wife,\" I said.\n\nI shook my head. \"I dunno. Their fridge is probably older than me. It's going to be a weird couple of days.\"\n\nMichelle laughed. \"Well, if it gets too much, text me and I'll have a sudden cosplay emergency that only you can deal with.\"\n\n\"Thanks,\" I said, meaning it. I then glanced over to see the bride and groom were in the middle of a somewhat intense conversation. Wedding days, I was learning, rarely brought out the best in couples, but you didn't normally see them get quite this intense in front of everyone.\n\nMichelle spotted it too and shook her head.\n\n\"Two years, tops,\" she said. One of Michelle's hobbies at these things was predicting how long the marriage she was shooting was going to last. She even wrote them down in a book to keep track of how accurate her predictions were. So far nine years was the highest she'd predicted around me.\n\n\"This is making me deeply worried about what my wedding day is going to be like,\" I said. \n\n\"Elope,\" Michelle said simply. \n\nI looked at her and frowned.\n\n\"I'm completely serious,\" she said. \"You know what almost everyone of these couples wishes they had done when things got truly batshit insane? They all wished they'd eloped. Hopped on a plane, got Elvis to marry them in Vegas. Or went to a beach in the tropics. Anything but invite a couple hundred people, some they barely know, spending tens of thousands of dollars for a day where they're mostly annoyed with each other. So yeah, elope.\"\n\n\"That was breathtakingly cynical, even by your standards,\" I said. \n\n\"Years of experience,\" she said.\n\nThere was some rustling behind me and I glanced back. The toasts and food service was over and people were beginning to mingle. We probably had 20-30 minutes before the first dance. I looked back at Michelle and she nodded her head, agreeing with what I was thinking.\n\n\"Yeah, finish eating and we'll get ready for the first dance,\" she said. \"Then we need to bolt. I know this DJ. Nothing good is going to happen after that.\"\n\n\"Twenty bucks says their first song is by Adele,\" I said, grinning.\n\n\"That's a sucker bet. Come on, finish your chicken and then let's fly.\"\n\n***\n\nThe next morning I was laying out on the front deck of the house letting the warmth of the sun dry my naked body after the shower. It was a decadence I'd picked up in the last few weeks as the temperatures got warm. Because of the wedding work, our weekends were now Sunday and Monday. So on those days, I'd get up late, get a shower, and sit naked on the front deck to dry off. Daddy would bring out coffee and breakfast. I was a very spoiled little girl, but I loved it and he loved doing it. \n\nDaddy had even set up the front deck to give me a little privacy and some shade. Because of the red hair and pale skin he was deeply paranoid about me getting a burn. Like I hadn't spent most of my life being paranoid about the sun already. Daddy's fussing aside, these mornings were perfect. I could look out over the woods and see the lake in the distance. And it gave me a thrill to be outside and naked. Daddy said I was becoming an exhibitionist, and I think he might be right.\n\nI ran my hands down my body and noticed I was putting on a bit of weight. Not in a bad way, I just wasn't scrawny anymore. My ribs and bones weren't as obvious. I might even be developing some curves. If I wasn't careful I was going to need new bras. I was always a B cup pushing towards a C. Much more pasta and I was going to be a C pushing towards a D. This was entirely due to Daddy feeding me seven days a week instead of just on weekends. And because of the weddings, my hair had gone from a coppery red to a more strawberry blonde color. It was deeply weird. I felt like I was becoming a new person.\n\nWhich....wasn't wrong. I was changing. Daddy warned me it was going to happen, but I thought he was just overreacting, like he, well, we had at Disney. But he was right. It had been two months since I'd moved in. Last night was the first night we hadn't been together in that time and it sucked. I woke up this morning and my fuzzy Daddy wasn't there. There were no morning hugs or kisses. There was no light slap on my ass to get me moving because I was running late. I really didn't like not having him here.\n\nIt was as if some of the frantic energy and desperate need for our relationship to work had changed. We had been together for over six months so we were more certain it was going to work. Because of that we were able to simply relax. There was a routine where he'd drop me off at work and then go into Kingston to work out at the gym for an hour or so. He'd come home, putter in his office on some projects, and started supper while either Ahmed or Michelle dropped me home. After supper, if the weather was nice, we'd go for a walk on the paths behind his house. If it was raining we'd watch movies.\n\nAnd the sex, God that was still spectacular. We were still fucking four or five times a week. He could make me feel so Little and I loved it. I could feel myself getting wet thinking about it. I started sliding my hand down towards my pussy to take care of some of the frustration of not having a Daddy to pounce on this morning.\n\nThat's when the phone began to sing a Chungha song. I sighed and reached to grab it from the table. Meg.\n\n\"This is your 20 minute warning about our arrival,\" she said. \"We've just left Kingston.\"\n\nI could hear noise from the car in the background, so she had me on speaker. She was coming up, but took her own car. That meant Daddy and his parents weren't far off.\n\n\"Thanks Meg. I appreciate the head's up,\" I said. I looked out over my view and sighed. Time to go inside, get dressed, and pretend to be a grown-up.\n\n\"I assume Ben didn't text yet?\" she asked.\n\n\"No, but that's why I asked you to be my back-up,\" I said, standing up and stretching. I opened the door and headed inside, shivering briefly at the temperature change.\n\n\"Well, that's a good idea. He looked nervous this morning, but you sound pretty relaxed.\"\n\nRelaxed? Well, I was meeting my boyfriend's parents, who could easily pass as my grandparents. I was also going to have to spend the next four days trying not to slip up and call him Daddy in front of them. Being able to be Little and silly as a stress relief was going to be on hold until they left. I felt more resigned, although the tension and nervousness were hovering around the edges.\n\n\"I'll be ok. And thanks again for coming to be a back-up. I appreciate it,\" I said, walking towards our bedroom.\n\n\"Does this mean I've paid off my karmic debt?\" Meg said, only kidding a little bit.\n\n\"Yeah, we're square,\" I said. Honestly, I'd been trying to not make fun of her quite so much the last month or so. The Disney trip solidified my place with Meg. Not only did the relationship survive. I came back babbling about what a good time I had. In her mind it must be the real thing.\n\n\"Hallelujah, I'm a free woman. I'll see you soon, kid,\" she said and hung up before I could say anything. Leave it to Meg to make me regret letting her off the hook.\n\nI went over to the closet and pulled out a light green sundress that I thought I looked good in. Putting on a bra and panties on my day off felt like sacrilege, but I managed. But yeah, the bra did feel tight. Damn it, I didn't want to have to go bra shopping, but it was that or diet, and that wasn't happening. I put on my glasses and a headband to keep my hair in place.\n\nI pulled open a drawer and looked at the selection of collars. Yes it was tempting to wear something blatantly submissive, but Daddy was pushing 50, so let's not give him a stroke in front of his parents. I took out a nice silver chain that had a heart shaped lock run through a circle. It didn't look submissive unless you knew what to look for. I was really, really hoping a couple in their 70s wouldn't know what to look for.\n\nI posed in the mirror. Not bad. I mean, I didn't suddenly look like I was in my late 20s, but I also didn't look like jailbait.\n\nMy phone buzzed. It was Daddy giving me the head's up they were five minutes out. I could smack him for leaving it that late, but at least he remembered. Rather than just sit by the door and wait, I decided to put on the kettle. Daddy said they liked tea and had picked some up for them.\n\nI barely got the kettle going when I heard the door open. I huffed. If I was running late constantly, Daddy had the ability to underestimate how long something would take. I was unplugging the kettle and bracing myself to meet my potential future in-laws when I heard steps coming down the hall. Around the corner came an elderly blur who locked onto me before I had a chance to really process things and gave me a hug.\n\n\"There's my future daughter-in-law,\" she said, squeezing me. She let me go, gave me a big smile and then winked at me. While I was processing all of that I heard Daddy call out.\n\n\"We discussed you not calling her that, mom,\" he said.\n\n\"Oh hush, let your mother dream,\" she called back. Then she held me at arm's length, appraising me. At this point I was still kind of shell shocked so I was sure I had a goofy look on my face.\n\n\"Yes, I can see why he's so smitten with you,\" she said, and touched my face.\n\nI then heard the quick tapping of a cane coming down the hall and Daddy came around the corner with a look that was somehow annoyed, but also embarrassed the way a teenage boy might be if his mom was making a big deal of his new girlfriend. It was kinda cute, actually.\n\nWhile he was telling his mom not to jump me, it did give me a moment to process her. I'd seen pictures of her, of course, but in person it was always different. She was a little taller and had 40 pounds on me. She was also well put together. I slapped something together in five minutes in the bedroom. She had make-up on, styled her hair and used spray to keep everything in place. She was wearing a nice linen top and a skirt.\n\nBut the thing I liked most were her wrinkles. She was in her mid-70s, but the wrinkles all curled the right way. She was a woman used to smiling and laughing, and her face showed. She had the opposite of a resting bitch face. She had a resting happy face. It was nice.\n\nI never knew any of my grandparents. Dad's parents were never mentioned. Mom's dad died before I was born and she didn't talk to her mom. Which meant either mothers and daughters didn't get along in our family, or my mom was such a bitch that her own mom couldn't stand her.\n\nIt was at that moment that Meg came into the kitchen with an older version of my Daddy. Which was...weird. I like older men; that's been established. And it's not like Daddy was suddenly old news and I was lusting after his father. I looked at him and I was quietly happy with the realization that my Daddy was going to age really nicely. His dad had grey hair, but neatly trimmed. He didn't have a beard like Daddy, but he looked like the kind of man who shaved every day and didn't tolerate stubble. He was the same height as his son, around 6 feet, but whereas Daddy was more solidly built because of his time at the gym, his father was a slight man.",
        "Judging by how his father looked, my Daddy was going to be a handsome man for a long time.\n\nIf I didn't wear him out first, of course.\n\nIf Daddy's mom was a hugger, his father was a bit more formal. He smiled and it was like he was still figuring out exactly how to work the muscles to make that happen. But he'd been practicing and getting better. He also stuck out his hand. No hugs here. I stuck out my hand and gave what I'm sure was a very girly handshake.\n\n\"It's nice to meet the girl who's captured my boy's heart,\" he said. 'Girl' and 'boy'. Psychiatrists could have a field day interpreting all of that.\n\n\"It's nice to meet you too, sir,\" I said.\n\nThe smile got a little wider. \"Mike will do just fine. And I'm sure Helen will faint if you call her, ma'am,\" he said.\n\nBehind him I could see Meg. She was smiling at the whole situation. I knew I let her off too easy. And in all of this, I still hadn't had a chance to give Daddy a hug, let alone a kiss, to welcome him home. I was about to turn and rectify that situation, but his mom had grabbed him and was asking him where various cooking instruments were located in the kitchen, and his dad wandered off and was clearly evaluating the house his son had bought.\n\nSuddenly I was standing in the middle of the dining area by myself wondering what had just happened. That's when Meg came up next to me.\n\n\"They do make an impression, don't they?\" she said.\n\n\"I'm not sure what just happened,\" I said. \n\n\"Oh, don't worry. They'll swing around for a second strafing run in a few moments. Right now they had to confirm that he actually owns the house and has a girlfriend. They'll swing back to take over the place and begin prying you for information in a few minutes,\" she said, and then gave me a helpless shrug of \"I'd help, but what can I do?\"\n\nOf course this was payback for me torturing her for months, which I kinda deserved, but this was starting to freak me out when Helen came over and reengaged.\n\n\"Now, my love, why don't you show us around the house? I have to send Ben out to pick up a few urgent things for the kitchen so that just leaves you to show us around.\"\n\nAnd, sure enough, there was my Daddy heading down the hall. He glanced back at me and gave me a kind of helpless look. We had gone shopping a few days before in anticipation of what he called his mother's \"impending invasion of his kitchen.\" He even asked her what she needed in advance to try and avoid a situation where I'd be left alone with his parents.\n\nI didn't like this. Yes, Helen seemed nice, but she had to know that leaving me alone with her without Ben nearby would be really stressful, right? I could feel the frustration escalating into something that could become unpleasant. I hadn't seen my Daddy in days, I was getting overwhelmed by his parents, and now he was being sent away again and I hadn't had a chance to be with him yet and this wasn't fair....\n\nAnd that's when Meg, perhaps realizing the teasing and pressure was getting to me, swooped in for a rescue.\n\n\"Helen,\" she said, \"the poor girl hasn't had a chance to give her boyfriend a hug since he came home, let alone say hello to him. Why don't we give them a few minutes before you send him out again. Come on, the view from the deck is really nice and it'll give you a chance to get some of the Toronto air out of your lungs.\"\n\nShe seemed slightly baffled about being herded out of the kitchen towards the deck and even Mike seemed to realize they were being a bit much and mouthed \"sorry\" to me as he helped Meg get his wife outside.\n\nOnce they were out of sight I ran towards Daddy and buried my face in his chest and wrapped my arms around him. He hugged me back and kissed the top of my head.\n\n\"I am so sorry, Kitten,\" he said. \"That got out of hand much quicker than I expected.\"\n\nIt was an effort to pull back; I just wanted to breathe him in for a few moments to help center myself again. But I was being a big girl for the next few days and being Little right now was not going to help me deal any better. \n\n\"Sorry, Daddy,\" I said quietly, just in case they were still within earshot. \"I promise, I was chill this morning and your mom just swept in and...boom.\"\n\nHe shook his head. \"She can take over a room, that's for sure. I talked to her about this last night and on the car ride here and she still blew through here like Hurricane Helen. I'll go have a chat with her. There's absolutely nothing extra she needs in the kitchen anyway.\"\n\nI took a deep breath. \"No, I'll be ok, Daddy. I just needed a few moments to reset. You go to the store and get the things she needs. I'll be fine.\"\n\nWell, I hoped I would be fine. It was difficult to explain how my energy levels worked sometimes. I was fine 10 minutes ago and completely ready to deal with his parents. Then, boom! I hit a stressful situation, and then desperately wanted to be a little girl with my Daddy protecting me. He knew me better than just about anyone and even he didn't always get it right. Being Little was a huge recharge for me. Daddy liked his downtime where he could just read. My downtime was when I was a little girl, didn't have to think, and Daddy was in charge.\n\nBut I'd been working all week and we'd been busy preparing for his parents arrival. So right when I was mentally crying out to be his little girl, we didn't have the time or ability to do it. There was no getting around it; I was just going to have to be a big girl for the next few days, unless we got very lucky. But once his parents were on their way again, I was going to crash hard. I was going to be deeply Little. I might even take a few days off work. \n\nStill, there must have been something on my face. Maybe my resolve wasn't as strong as I thought. Or maybe he just knew his little girl very well.\n\n\"No. I appreciate you being brave, but this is mom thinking she's being clever chasing me out of the house on a fool's errand so she can get you alone and see what makes you tick. She's a good woman, I swear, but sometimes she just gets in her own way.\n\n\"So I'm going to say that I know none of the local stores have what she needs and I'm not spending an hour driving back and forth to Kingston because my knee is bothering me right now. Which is not 100% inaccurate after driving for several hours. And together we'll show her around. How's that sound?\"\n\nI hugged him again.\n\n\"That sounds great. I love you, Daddy,\" I said.\n\nHe bent down and and kissed me and suddenly all the freaking out of the last few minutes just washed away.\n\n\"I love you too, princess,\" he said. \"Now, let's go rescue Meg before she flees back to Toronto and leaves us both trapped with my parents.\"\n\n***\n\nWhile Daddy was calming me down, Meg and Mike must have been having a chat with Helen on the deck. A compromise had been reached on just how much Helen was going to take over the house now that she was here. Daddy claimed his knee was aching and he didn't really want to drive for an hour to find the things she needed got a slightly sheepish look from her.\n\nCrisis averted.\n\nI felt a little bad about it. She kind of looked a bit confused afterwards and I didn't want to be mean to his mom. She just came on stronger than I anticipated. Maybe if I was fully charged I could have handled it better. Daddy must have seen the guilty look on my face because he just kissed the top of my head and told me not to worry, that everything would be fine.\n\nAnd things did settle down. We did a proper tour of the house, which they mostly liked. They liked the deck and the view from the living room. Helen loved the space in the kitchen and I could tell was itching to get back in there to start making things. Both of his parents were politely baffled by his office with all the graphic novels and artwork. I couldn't help but smile a bit at that.\n\nI didn't think the spare room where Meg was staying was much; neither one of us used it all that much, but Meg happily sat on the bed and pointed out the window. \"There's trees,\" she said. \"I live in a condo where I can only stare at my ugly, tragically naked neighbours. I'll take trees.\"\n\nWe quickly rushed them through our bedroom. I did a thorough job hiding away anything incriminating. There was no lingerie in sight, no sex toys, or cat ears, and I'd removed the bondage straps on the bed that Daddy had bought a few weeks ago \"just to try out\". Which we did. Multiple times. Still, I was paranoid about them lingering there. It was bad enough that Daddy was saying that we might not have sex while they were staying there because they were both light sleepers. And I wasn't exactly quiet.\n\nI was going to negotiate that point...vigorously. \n\nTheir room was my work room, which I'd cleaned up and stashed away most of my fabric and clutter. Their visit was a much needed kick in my ass to clean the place up. Daddy hadn't said anything, but the room was a disaster area. At least now they had a place to sleep and I'd stashed most of my costumes and supplies in the outside shed for their visit.\n\nThe only thing left in the room belonging to me was my sewing machine resting on a table. Helen immediately latched onto it.\n\n\"My goodness, I had a machine just like that decades ago,\" she said, running her hands over it.\n\n\"I was still using it at school last year but then...Ben bought me a new one for there. He then took this one and got it repaired for me as a surprise and so I could do school projects on weekends while I'm here,\" I said.\n\nHelen thought that was adorable and was talking about the things she'd made over the years using that machine. I was mentally going over how close I'd come to saying 'Daddy had bought me a new one.'\n\nThis was an ongoing paranoia at the best of times. Michelle clearly suspected something, given the number of times I've tripped or hesitated over Ben's name. And it was only getting worse over the last few weeks when I've been living with him full time. I'd catch myself way too much getting ready to say 'Daddy'. It was only a fraction of a second each time, but it felt like hours.\n\nI was going to slip up at some point. I knew it. And with my luck it would be in front of his parents. Still, a quick look around and no one seemed to notice my hesitation, so crisis averted for the moment.\n\nI was jostled out of thoughts by Helen giving me some tips on how to best use the device. The others cleared out for a moment to get the luggage and to be spared the intricacies of sewing machine use. I was nodding and smiling politely. It might be an old machine, but I'd been using it since I was a kid. I could make that thing stand up and do a jig if I needed to.\n\n\"It's just nice to have someone talk to about sewing and crafting things. I'm glad you'll be able to take care of Ben when he needs something hemmed or made. Poor Beth was never really much good at that sort of thing,\" Helen said.\n\nI mean, seriously, how do you respond to that? I suspected this was her way of trying to bond with me, but God, I didn't want to do that by throwing a dead woman I didn't know under the bus. Daddy would never forgive me.\n\nFortunately I was saved when Mike brought their luggage into the room, and I gave them some time to get squared away. I tried to bury the incident just because I didn't want either Daddy or Meg to ask what was wrong because that was not a conversation I wanted to have with either of them.\n\nBut it kept cropping up during the rest of the day. Just little mentions when no one else was in earshot. Helen said how lovely I looked, which was nice because Beth was very....relaxed about her appearance. And when I was trying to give her a hand prepping supper while Daddy was outside barbecuing, She was making a pie while I put together a salad and some mashed potatoes. Bare bones stuff, but I got a reference that Beth didn't like to cook much and her and Ben used to eat too much take-out for her liking.\n\nI was trying to figure out a way to delicately say that perhaps she might want to dial it back a bit in case Ben or Meg heard when she hit me with the big one.\n\n\"I know how much he loves you. It's so each to tell, which is good because we were so worried about him after Beth passed. And I know it's early yet, but hopefully the two of you will have kids. I mean, not just because Mike and I would love to spoil some grandchildren, but I know how crushed Ben was when he found out Beth couldn't have kids. He always wanted them, but by the time he found out, they were married, and what could he do then?\" she said.\n\nThat was, in no way, anything resembling what Daddy told me had happened. I was about to ramble out something about we hadn't really talked about children yet, when I looked up from the cutting board and saw Meg.\n\nOver the last six or seven months Meg has humiliated me, infuriated me, made me laugh, been a good sounding board and, gradually, she was becoming a friend. Never in all that time did I feel sorry for her.\n\nRight until that second. She just looked....ashen.\n\nI was going to say something, but she waved me off.\n\n\"Helen, the boys have just about finished the steaks. You've got your five minute warning,\" she said, and forced a smile.\n\n\"Thank you, dear. We are just about ready for them.\"\n\nMeg forced the smile again and walked back towards the front deck. Ok, waved off or not, I had to say something or it was going to be four days of uncomfortable criticisms of Beth. And Daddy was going to hear it at some point and it would break his heart.\n\n\"Helen,\" I said, tentatively, somewhat aware she was holding a knife.\n\n\"Yes, dear?\"\n\n\"I really am appreciative of how welcoming you've been. We sometimes get looks because Ben has a few years on me, so it's really great how ok you are with this,\" I said.\n\nShe came over and chopped up some more veggies and threw them in a bowl. Apparently my salad was deficient. \"You make him happy. That's all that matters to me.\"\n\n\"I'm glad,\" I said. I hesitated for a second and then took the plunge. \"You know, he still talks about Beth to me fairly regularly.\"\n\nShe looked at me, surprised and with a look indicating she was puzzled why her son would talk about his dead wife with his current girlfriend.\n\nI continued. \"And I'm glad he does. I want to know about her because he's so important to me and she was so important to him. She helped shape who he is now. And I think talking about her helps when he gets sad. Which still happens sometimes.\"\n\nShe shook her head. \"It's been almost three years. He should be over that accident by now. I hoped he was now that he's with you.\"\n\n\"I'm not sure he will ever be 100% over it. It was traumatic. And...and I think he would be really hurt if he overheard you talking about Beth like that, or comparing her to me. So maybe while visiting you could perhaps take it easy on that. Please. I'd hate for him to get upset.\"\n\nIt was a wussy way of going about it, but I couldn't exactly tell my potential future mother-in-law to fuck off comparing me to my boyfriend's dead wife because it's really tacky, but it was as delicate as I could muster. I hoped she would take it ok.\n\nI saw the look on her face. Hope away, Kitten because she's not happy.\n\n\"I see,\" she said. \"Well, I'll try and be more careful of what I say in the future.\"\n\nOh boy. Fortunately, Daddy and Mike came in with a plate of steaks, mercifully ending the awkwardness. Still, I'd probably just made the next three days incredibly awkward because I felt sorry for someone that still drove me nuts half the time. \n\nSupper was slightly weird, but Daddy and Mike seemed too distracted to pick up the weird vibe coming from the women at the table. After supper, Daddy offered to do the dishes and, to his surprise, his mom said that would be lovely. She was feeling tired and was going to lie down for a bit. Mike said he'd join her. Meg said she was going to go for a walk and, spur of the moment, I asked if she wanted some company.\n\n\"Actually, yeah,\" she said.\n\n\"Great, so I'm stuck with doing all the dishes,\" Daddy complained.\n\n\"I'll make it up to you later,\" I said, getting on my toes and kissing him on the cheek.\n\n\"Promises, promises,\" he grumbled.\n\n\"I always keep my promises, Daddy,\" I whispered.\n\nNow all he had to do was let me keep my promise. I hadn't been fucked in days and I was getting antsy. \n\nIt was still plenty warm enough when we got outside and the sun wasn't going to set for another hour or so. Meg was waiting outside by her car and looked a little sheepish.\n\n\"I was actually just going to go up behind the sauna and sneak a cigarette, but now I guess I have to exercise or something. Where do we go?\" she asked.\n\n\"Actually, if you think you can handle a short walk, I know the perfect place,\" I said. She gestured for me to take the lead and I began marching up the hill, past the sauna and jacuzzi and followed a path into the woods.\n\nI had never been much interested in exploring the rest of the land Daddy owned. The house was on a couple of acres of land. I viewed it more as a buffer from neighbors than something to be explored. But once I moved here at the end of April, Daddy insisted on doing some hiking. And it turns out there's some nice trails and spots. I was taking Meg to one of them now.\n\nShe didn't say much during the hike. I figured she was just being contemplative, but she also might have been just trying to save her breath. The trail sloped upwards most of the way. After about 15 minutes the climb stopped and we came to the edge of a rise. Below was a stream which had about a 20 foot waterfall, and then a small pool before continuing on its way down to the lake.\n\nI'd hinted to Daddy that might be a good spot to do some clothing optional swimming, but he hadn't taken me up on it....yet.\n\nI could hear Meg trying to catch her breath a bit. I pointed out some rocks where she could sit down. She trudged over and sat down.\n\n\"I was beginning to think this was a particularly masochistic way of trying to kill me,\" she said.\n\n\"Please, you walk everywhere in Toronto,\" I said, sitting down next to her. She pulled out a pack of cigarettes from a pocket in her shorts and shook one out. She was waiting to catch her breath before lighting it.\n\n\"Yes, but everywhere is flat. I take elevators if I have to climb more than two flights of stairs,\" she said. I shook my head, and then the two of us lapsed into silence, just enjoying the waterfalls and the view. I knew she wanted to talk, so I figured I'd let her make the first move.\n\nAfter about five minutes of sitting and fussing with the cigarette, she pulled out a lighter, lit it, and took a deep pull. She exhaled the smoke away from me.\n\n\"They keep forgetting, you know,\" she said.\n\n\"Forgetting what?\"\n\n\"That Beth wasn't just Ben's wife, she was my best friend,\" she said, her voice getting uncharacteristically soft. \"She moved onto my street in Grade 3 and we were inseparable. We slept over at each other's house. We talked about who we had a crush on. Our first periods started the same week, for Christ's sake. She was the first person I told that I might like girls....\"\n\n\"I didn't know you were gay,\" I said. \"Ben never mentioned it.\"\n\n\"Bi,\" she explained. \"My first marriage was to a guy, and it was a disaster so I thought I should just go back to chasing after girls. Got married again, this time to a woman. Another disaster. I'm just not the marrying kind, apparently.\n\n\"Anyway, we did everything together. When Ben wanted to marry her, he didn't ask her father for permission, he asked me. And I said yes, but that he always had to protect her because she was the most important person in the world to me,\" she said, and now she choked back a sob.\n\nThere have been times when I would have cheerfully strangled Meg, but I wasn't so big a bitch that my heart wasn't breaking a bit listening to her. I leaned over and put my arm around her and squeezed. She didn't object and for a few moments we were quiet.",
        "\"I don't blame Ben for losing his mind after the accident,\" she said after a few minutes. \"I nearly did, and I wasn't trapped in a car screaming for help looking at her body. If I had been in that car, and knowing what we know now, I would have dragged myself out, got a tire iron, crawled over, and finished the job on the bastard.\n\n\"You know Ben tried to get him during a court appearance, right?\" she asked. I nodded. \"I was so mad afterwards, and he's always thought it was because he got thrown in jail. I was mad because he didn't get to him. There was a split second where I nearly joined in.\n\n\"But I was never allowed to feel that kind of rage and grief. From the moment the accident happened, I had to be the grown-up. I had to be the one who helped organize things for our friends because Ben was a wreck. I was the one who had to help Ben back to reality because, and I love them, Mike and Helen didn't have a clue what to do. Helen was baffled. Mike thought he should \"man up\". Getting him to a psychiatrist and getting him on anti-depressants never occurred to them.\n\nShe noticed that her cigarette had almost burned down to the filter. She took another pull on it, stubbed it out and put it in her pocket to get rid of later.\n\n\"How did you get him back to himself?\" I asked. Daddy had never said. He just said that a few months before we met, he snapped out of it and started to get his life back in order.\n\n\"I went over to their condo and I'd had enough. It had been 18 months since the accident and he was either going to snap out of it or I was sending him over the balcony. I love him, like a brother, but enough was enough. And I yelled at him and told him what I told you; that he wasn't the only one who lost everything when she died. That I couldn't move on until he moved on and that he was being a selfish bastard keeping us both in pain and misery like that. And that Beth would kick his ass to see him like this so he had to snap out of it. That, along with him taking the medication seriously and going back to his doctor, did the trick,\" she said.\n\nI was quiet for a few minutes. Daddy had told me it had been bad, and I knew it must have been; he's not one to exaggerate. But just hearing the raw emotion Meg was pouring out, it must have been hell for both of them. I desperately wanted to run down the hill and just hug him. But Meg was here, and right now, she was the one who needed help.\n\n\"Ben told me some of it. I knew it had been rough on him, but you're right, I never pictured how hard it must have been on you. I'm so sorry you had to go through that,\" I said.\n\nShe lowered her head, her hair covering her face, and I could hear her make a small noise and she cried for a moment. Then she lifted her head back up and wiped her eyes.\n\n\"Thank you,\" she said. I hugged her and she hugged me back.\n\nShe pulled back and then laughed.\n\n\"I'll be damned, but I think we're friends now.\"\n\nI joined her laughing. \"Yeah, I think we are.\"\n\nShe shook her head. \"Never, in a million years, when I caught you parading naked around his kitchen....\"\n\n\"Half-naked,\" I corrected.\n\n\"Whatever. I never thought we'd be friends. I didn't understand how he went from being a wreck to being with you in just a few months. I can understand it now. You're pretty amazing, Kit,\" she said.\n\nI felt like I was going to cry now. \"I swear to god, I'm not trying to replace her. I'm just...just so happy when I'm with him. He makes me feel safe and happy. He says I make him lighter.\"\n\nShe stood up, stretched, and took in the view. I stood up too and we quietly just watched the waterfalls for a few moments.\n\n\"I know you're not trying to replace her,\" she said. \"Well, I know now. I'm glad you're both happy. Honestly. Just hearing Helen put her down like that...it's weird. That's not what happened and she knows it. Her and Beth only ever had one thing in common; they both loved Ben.\n\n\"But they didn't hate each other; they just didn't understand each other.\"\n\nIt was getting near sunset and I didn't want us up here after dark.\n\n\"At least you were smart enough not to say anything to her,\" Meg said.\n\nOops.\n\n\"Well......\"\n\nShe turned and looked at me with her eyes wide open in surprise.\n\n\"Seriously? What did you say?\"\n\nI recapped our conversation in the kitchen. Meg started laughing.\n\n\"Well, I'm touched. And good for you for standing up for yourself. We'll see how she handles it. Helen is kind of used to being queen of the roost wherever she is. She is a sweetheart, mostly. But she can be high maintenance,\" she said.\n\nWe began walking down the hill.\n\n\"Well, I hope you appreciate my sacrifice,\" I said.\n\nShe put her arm around me.\n\n\"Oh I do, Kit. I do.\"\n\n***\n\nI woke up for what felt like the 10th time after going to bed. The nightshirt that Daddy insisted I wear in case his mom barged in was up around my breasts and my hands were down around my pussy. Given the dream I had just woken up from I was not at all surprised.\n\nIt involved being tied to the bed with Daddy between my legs and he had a dildo in my pussy and his tongue was on my clit and he just was not letting me cum, no matter how much I begged.\n\nI whimpered to myself and quickly ran my fingers along my clit. It only took a few seconds before I gasped and had a small orgasm. It was unsatisfying. Masturbating when I had a Daddy always seemed like a waste, unless he was watching me play with myself, which was hot.\n\nI rolled over and checked my phone. 3:30. Fuck. I rolled back and lay in bed frustrated and not getting any less horny or awake. Time zones, naps, and jet lag had kept his parents up until almost midnight. I tried to seduce him after they went to bed but he wouldn't go for it. I then tried begging, and he said maybe tomorrow night after they had settled better into this time zone.\n\nHe never said no to me before. I wasn't taking it well.\n\nI tossed for a few more minutes. This was no good. I wasn't getting any sleep at this rate and I would spend tomorrow exhausted, cranky, and horny. It was the Canada Day holiday, so that was not a good time to be all of those things. I was not going to be a pleasant person to deal with if that happened and it increased the odds exponentially that I was going to say or do something bad. I was already on thin ice with Helen as it was.\n\nI threw off the sheets, walked across the room and quietly opened the door. I stuck my head out and listened. I could hear the light snoring of Mike coming from the room down the hall. I padded down quietly and gently pulled their door the rest of the way closed. Meg's door was already closed. I then went back to our room, closed the door and listened intently. I couldn't hear anything.\n\nIt would have to do. I took off my night shirt and tossed it on the bed. I was declaring an emergency. I need to get laid. It was a medical necessity. \n\nI moved over to his side of the bed and gently lifted up the sheet and crawled under it. Daddy was sleeping on his side, which made this a little more challenging. The trick was to get him hard and then get him to roll onto his back. Once that happened I could get on top of him and start riding him. At that point, he'd probably wake up, but by then it would hopefully be too late and I would get off. \n\nIf I had been more focussed and less desperate and horny, I would have realized this was a terrible, terrible plan. But it made perfect sense at that moment.\n\nI slid up his side without touching him and gently took his cock out from his shorts with my hand. God I missed it. It had only been a few days, but I loved Daddy's cock. I felt like I was bonded to it at this point. It was perfect for me. Just the right size, shape, touch, and taste. I gently ran my hand over his cock, just enjoying the feel of it.\n\nAfter a few moments it began to get harder. I pulled it towards my mouth, wrapped my lips around it and slowly sucked it into my mouth. Perfect.\n\nAfter a few minutes of gently sucking his cock I could feel it getting harder in my mouth. I congratulated myself that my plan was working. But this is where the flaw kicked in; anytime I suck on Daddy's cock for more than a few minutes my brain just starts to melt. I zone out. I become Little. I get deeply silly or stupid or become a bimbo or whatever term you want to use. The fact of it is, when I suck Daddy's cock the world goes away.\n\nSo I was slightly surprised when the sheet was pulled back and Daddy was looking down at me. He had turned on a light by the bedside table. I looked up at him, but he looked fuzzy and I imagine my eyes must have been glazed. I kept the crown of his cock in my mouth and, to my slight surprise, I found I had also been rubbing my pussy up and down his leg while sucking on him.\n\n\"Kitten,\" he whispered in a slightly frustrated voice. I kept sucking. It's not like I didn't know he was going to wake up and be annoyed with me at some point.\n\n\"Kitten, we talked about this. Not now,\" he said more urgently and tried to push me off his cock. Instead I wrapped myself around his leg and sucked as much of his cock down as I could. Perhaps because I was tired, and out of it, but for the first time I was able to deep throat him. All of that wonderful cock fit in my mouth and slid down into my throat. I hummed in pleasure as I heard him groan.\n\nI finally had to pull back off him and took a gasp for air for a moment and then grinned. I'd finally done it. I was a good girl and took all of Daddy's cock. I looked up at Daddy and I could tell that he was frustrated, but less frustrated that I'd disobeyed him and more frustrated that he wasn't fucking me.\n\n\"Please, Daddy,\" I whispered urgently. \"I can't sleep because I'm so horny. Please fuck me, Daddy. I need you so badly. I'll be a good little girl and be quiet. Gag me. Put a pillow over my face. But fuck me. Please.\"\n\nThat did the trick because I was suddenly being tossed across the bed and landing on my back. The next thing I knew Daddy was between my legs. In one hand he held my discarded night shirt. He looked at me and it was less my kind and loving Daddy, but more my stern \"you've been a bad girl\" Daddy. I could feel myself get wetter.\n\nHe glanced at the shirt and I nodded. I could promise to keep quiet all I wanted, but there was no way I was going to be able to keep quiet the first time he entered me. They were going to hear me in Kingston. I opened up my mouth obediently and he placed the shirt there. It was harder to breathe and it had nothing to do with the shirt. \n\nHe then took my legs and placed them on my shoulders. I was panting into the shirt and moving my hips. I was also soaking wet so there was no need for foreplay; I was eager for him to just start fucking me. Then, last minute, he grabbed a pillow and put it over my face. Before I could react, I could feel his cock push forcefully into my pussy.\n\nI must have screamed. It's for certain that I blacked out for a moment. When I was able to focus again, Daddy was looking down at me, the pillow by the side of my head.\n\n\"Nod if you're ok, Kitten,\" he said quietly. I bobbed my head up and down quickly, not wanting him to stop. I needed more.\n\nHe pulled back and then slid back into me and I moaned loudly into the shirt. Some part of me knew that I wasn't being as quiet as I should, but it was late and the doors were closed, and I was gagged, and oh my fucking god I loved his cock. It was magic.\n\nI could tell this was a different kind of fucking, though. There was less of the playfulness and energy there was when we normally fucked. His pace was steady, like he was trying to be quiet and get me off. It was working as I could already feel myself quickly accelerating to another orgasm. I always had a hair trigger, but this was ridiculous.\n\nBetween my muffled moans, the flushed color of my face and me trying to lift my hips up to meet him, he could figure it out. Finally, I could see he was beginning to enjoy himself because with a grin he took his hands off the bed, and placed them on my breasts. I had a second to realize what was about to happen, and frantically reached out to grab the pillow and put it over my face. Then he slammed into me the same time he pulled on my nipples and gently twisted them.\n\nBoom. I screamed into the pillow as the orgasm exploded over me. I could feel my body twitch and my pussy pulse around his cock. I fully expected to feel the warmth of his cum flood into my pussy, but I was dimly aware that didn't happen. Instead, I could still feel the steady pace of his cock moving back and forth inside me.\n\nI took the pillow off my face and looked up at him, dazed. I wasn't sure I could form words at that moment. Daddy leaned in, but with my legs still on his shoulders I was being bent in half. It felt like his cock sank into me another inch and I groaned, still pulsing from the last orgasm.\n\n\"You wanted to cum, Kitten,\" he whispered. \"So I'm going to make sure my horny little girl cums until she passes out.\"\n\nI had a brief flash thinking \"Oh my fucking god\" before he began to plow into me again, with my knees down by my ears and his face just inches away from mine. I could see the look in his eyes and, it wasn't mean, but he was being dominant in a way he rarely does with me. And I quickly realized two things; that I needed it. After today I needed that release, not just by cumming, but by slipping completely into my Little space and letting him have his way with me.\n\nAnd second, I had to tell him. If I didn't he'd feel awful later, like he was mean or cruel to me, when he was just giving me what I needed. I reached up to take the gag out of my mouth and his hand stopped me and pinned it to the bed. I made my eyes go wide, hoping he would take the gag out. I needed to tell him quickly before I was too far gone.\n\nThank god, he figured it out because he reached out and took the shirt out of my mouth.\n\n\"What is it, Kitten?\" he said, and I could hear the tension in his voice.\n\n\"It's ok, Daddy. I need you to dominate me. I don't need to cum, I need to be your little girl,\" I managed to gasp out as quietly as I could. \"Have your way with me. Please. I need you to.\"\n\nHis face softened for a moment and then he leaned in and kissed me.\n\n\"I love you,\" he said. And before I could respond he took my shirt and put it back in my mouth. Then he used one hand to pin my hands above my head and the other gently rested around my throat. His face hardened, but it was play acting serious. He understood what I needed.\n\n\"You're mine, little girl,\" he growled in my ear and then began fucking me hard again.\n\nI came again, almost immediately. But this time, instead of fireworks exploding behind my eyes and my body spasming, it was like everything just let go. It was just....bliss. It was amazing. My brain just went away and I just enjoyed everything Daddy was doing to me. Dominating me. Taking over so I didn't have to think. Fucking me.\n\nThis went on what felt like forever. I was so out of it I was only dimly aware of hearing Daddy groan and then a rush of warmth into my pussy as he came. It was just one more wave of sensation washing over me. I was dimly aware that Daddy was letting go of my hands and removing his hand from my throat. He took the shirt from my mouth and I could hear myself let out a quiet gasp of breath.\n\n\"Are you ok?\" he asked. His voice was tender and a little worried. God, I loved him. I managed a goofy smile and a slight nod of my head. I was still flying.\n\nEventually he pulled out and I moaned in disappointment. I wanted him hard and in me forever. He lay down on his back and gently guided me onto my side so that my head was resting in his chest. He had his arm around me and was holding me tightly, while running a hand through my hair. It was wonderful. I gradually came down from my bliss, and while I was sad I wasn't flying anymore, I felt warm and loved in my Daddy's arms.\n\n\"I think I can sleep now, Daddy,\" I manage to murmur.\n\nI could hear him laugh quietly, as I began to fade out. He said something, I muttered back that I loved him too. And then I passed out.\n\n***\n\nI woke up slowly the next morning, finding it hard to snap awake. The combination of not being able to sleep for hours, then Daddy making me bliss out meant that making the world come back into focus was challenging. All I could piece together was that Daddy wasn't in bed with me. \n\nEventually, I managed to wake up enough to roll over and check my phone. It was almost 10 am. \n\n\"Oh my fucking God,\" I managed to gasp out. My voice sounded weird to me. Then I realized I'd been screaming so much into the gag last night I had made my voice raspy. Meg was going to have a field day when she realized.\n\nI got out of bed with the plan to throw on some clothes and head out to the kitchen and apologize. That's when I felt my legs buckle a bit as I tried to stand. God, how far gone was I last night that I was still this shattered hours later? I went over to the dresser to grab some clothes when I caught a glimpse of myself in the full-length mirror.\n\nWow, I was a wreck. My hair was a mess, which was not uncommon for first thing in the morning, but my eyes had dark circles under them, and there was the possibility of some light bruising around my neck. Also, because I had passed out after Daddy came in me, I was a mess below the waist. \n\nI looked like a well-used slut. Which, under ordinary circumstances that didn't involve potential in-laws visiting, I would be able to joke with Daddy about. \n\nI lowered my head, took a deep breath, and sighed. There was nothing to be done about it. I'd take my lumps from Daddy and Meg later, but right now I needed to make myself presentable. That meant a shower to start.\n\nThirty minutes later I opened the door of our bedroom. I was still feeling kind of spacey, but I was clean and the discoloration around my neck was mild unless you really look. My hair was as good as it was going to get, put back in a ponytail, and I had on an Alpha Flight t-shirt I robbed from Daddy and jean shorts. Maybe not fancy, but it was also my day off and a holiday. A certain amount of casual patriotism was acceptable.\n\nThere was no noise coming from the kitchen or living room and I was beginning to get worried. Where was everyone? As I was walking down the hall I noticed the door to the front deck was open. I went outside and there was Meg sipping a coffee, taking in the view. She glanced over at me and shook her head.\n\n\"My opinion of Ben is going up. What on Earth did he do to you last night that it takes until 10:30 to haul your ass out of bed?\" she said.\n\nI was bracing for some mocking, so I knew I was going to be embarrassed and I could feel myself flush. Still, I was an adult....kinda, although I wasn't feeling much like it at the moment. I had amazing sex last night. So what? I crossed my arms in front of my chest and stood up straight.\n\n\"I was having a hard time getting to sleep last night. D...Ben helped me,\" I said, mentally cursing myself for another near slip. \"Slept like a baby afterwards.\"\n\nThen, curious...\"Did you hear anything?\"\n\n\"Mercifully, no. I mean, have at it. It's not like I'm shocked you're having sex, I just don't need reminders that I'm not,\" she said, taking a last sip of her coffee and standing up. \"Come on, we're supposed to meet up with them for lunch.\"\n\n\"Where are they?\"\n\n\"Fortunately for you, when Helen and Mike got up this morning they asked Ben if it was ok for him to take them into Kingston before you woke up. Not entirely sure why, but I volunteered to stay here and wait for you. It's been a pretty relaxing morning,\" she said.\n\nMeg quickly left her cup in the kitchen and then grabbed her car keys and I followed behind. I was feeling kind of obedient, which could be trouble if I didn't see Daddy soon.\n\nWe'd been driving for a few minutes and I took the opportunity to text Daddy to let him know I was up and we were on our way. No response. I frowned and was trying to mentally will the phone to give me a response when Meg noticed. ",
        "\"Why the cranky face?\"\n\n\"Nothing. I told Ben we were on our way and he hasn't responded. I'm worried he's mad at me,\" I said. \n\n\"Why on Earth would he be mad with you?\" she said. \n\nThis was an odd friendship Meg and I were building, but she was one of the few people I could talk to about my relationship with Ben. My school roommate Gillian was in Toronto and, when she was responding to my texts, was no help in figuring out men, what with her being a lesbian and all. Michelle's responses were either to joke it off, tease me, or talk about herself. \n\nSo my go to for relationship advice was a slightly bitter divorce lawyer, who was also my Daddy's best friend, and who had seen my ass on our first meeting. Oh well. Desperate measures. \n\n\"I kinda woke him up when I jumped him last night and he was a bit cranky. I'm worried he's mad at me,\" I said. \n\nMeg laughed. \n\n\"So a middle aged guy got woken up in the middle of the night by his sexy, much younger girlfriend, because she wanted to get laid. And you're worried he's mad with you? C'mon, Kit. Think that through,\" she said. \n\n\"Well, when you put it that way,\" I conceded. \n\n\"Look, his parents were up and ready to go at the crack of dawn this morning. He might have forgotten his phone or it isn't charged. They might not be giving him a chance to breathe. Don't stress about it. They love you. You're doing great,\" she said. \n\nWhich cut to the heart of it. His parents. \n\n\"Yeah, but what if they don't,\" I said. Even I had to admit that came out whinier then I would have liked. \n\n\"Then you'll join a very large group of people who don't get along with their partner's family. There are t-shirts and weekly meetings. You'll be fine,\" she said. \n\nWe hit traffic heading into Kingston and inevitably we began to slow down and eventually came to a stop. Everyone was trying to get into town for Canada Day. Meg looked unphased. Living in Toronto means you're used to wasting hours of your life stuck in a car going nowhere. \n\nTo my surprise I heard myself saying, \"I don't like disappointing him or making him mad.\"\n\nGod, I sounded like a little girl. And then I realized that I was feeling Little and submissive. I was so fuzzy when I woke up this morning I hadn't processed it. And normally I have Daddy around to take care of me in the mornings and he wasn't here. So I was acting whiny and bratty around Meg. She looked at me, then back at the road. I turned crimson and was wondering if I should explain what was going on when she took a deep breath and sighed. \n\n\"Look Kit, I can tell there are...aspects of your relationship with Ben where you're a submissive. You don't always do a good job of hiding it - the collars you wear are a dead giveaway - and I'm not an idiot. Plus, well, let's just say there were some clubs I used to visit in Toronto when I was younger,\" she said. \n\nI must have had a shocked look on my face because she emphasized the next point. \n\n\"I never told Ben or Beth and I don't want to start answering questions now, ok?\"\n\nI nodded. \n\n\"Lord knows I'm not a relationship counsellor. But I've been a divorce lawyer for a lot of years. I work at shelters. I can't tell you how many times I've had women say those exact words to me about not wanting to disappoint their man and only trying to make him happy...\"\n\nI cut her off. \"Ben would never...\"\n\nShe held up her hand. \"And I'm not suggesting for a second that he would. But you're submissive and a lot younger. There's a power imbalance there you need to be mindful of. That means you've got to take care of yourself. I'm glad you want to make him happy and you care about him so much. But if you don't take care of yourself first things can get messy. Ok?\"\n\nI nodded and fought to keep from pouting and suspected I was only a little successful. Plus there was the whole thing about her figuring out part of our relationship. The traffic eventually began moving and most of the rest of the trip we were quiet. Meg navigated through the traffic and found a place to park that wasn't an infinite distance away from Pan Chanko. I was utterly unsurprised that this was where we were meeting for lunch. It was Daddy's favourite restaurant\n\nWe were mingling with crowds dressed in red and white and sporting Canadian flags. I was cheering up because the crowd's energy was so upbeat. But I was still quiet and as we approached the restaurant it finally got to Meg.\n\n\"Are you ok, Kit? I'm sorry if I came down hard on you in the car,\" she said.\n\n\"I'm fine. I...I'm still feeling out of it...from last night,\" I confessed. To hell with it, it's not like she hadn't figured things out. \"Normally if I wake up like this Ben is there to take care of me. He wasn't there, so you had to deal with me....like this. So I'm sorry if I was weird.\"\n\nTo my surprise she draped her arm around my shoulder and gave me a little squeeze. I could feel myself settling into it, craving the touch and affection.\n\n\"I should have seen what was going on sooner. Look, he loves you, you love him. Don't worry about anything else right now,\" she said, giving me one last squeeze and then letting me go.\n\n\"Thanks Meg,\" I said.\n\nWe arrived at the restaurant just before noon, and I saw Daddy with his parents. He immediately popped out of his chair and came towards us. He looked mortified.\n\n\"I'm so sorry, we were in such a rush to leave this morning that I forgot my phone and mom didn't remember to plug her phone in last night,\" he said.\n\n\"Don't worry about it,\" Meg said, and whispered something quickly to Daddy. He nodded and then came over and gave me a big hug. I melted, absorbed into his touch. I didn't know how badly I had missed it this morning. He then gently took me outside and steered me to a nearby bench where we sat down. \n\n\"I am really sorry, Kitten,\" he said, holding my hand. \"This morning was just a whirlwind. I forgot my phone and I didn't have the heart to wake you before I left. I should have left a note, but I didn't even think about that until I was half way into town.\"\n\n\"It's ok,\" I said, only kinda meaning it.\n\n\"No, it's not. I'm your Daddy and you're my little girl and I've been so wrapped up with my parents I haven't done a good job taking care of you. I'm really sorry about that,\" he said. \"I wouldn't have left you alone if I knew you might wake up in your Little headspace.\"\n\nHe really was sorry and worried about me. Immediately I felt better. I understood what Meg was talking about, but when I was like this I just craved my Daddy. His touch. His smile. His love. I could feel myself relax and the unhappiness ebb away. \n\nI managed a grin for him. To make him feel better. \n\n\"I forgive you, Daddy. But you'll have to make it up to me later,\" I said, meaning to tease. But then I wanted to make sure this didn't happen again. \"And Daddy? If I say I'm horny and I really need sex, well, it's ok to say no if you're feel sick or I've been a brat and you want to 'punish me'. I understand. \n\n\"But I was super horny and you said no because you were worried about what people might think. And that did weird things to my head.\"\n\nHe nodded and looked a little embarrassed. \n\n\"Ok. Fair enough, Kitten,\" he said. Then he leaned over and whispered. \"Next time my little girl needs her little pussy filled with Daddy's cock you just tell me and I'll take care of you. I promise.\"\n\nI squirmed and could feel myself soak my panties. If I wasn't still a bit sore from last night I'd be looking for a dark alley.\n\nDaddy saw the look in my face and smiled. \n\n\"Our favourite church is only a little ways away,\" he said. \n\nI wondered how serious he was and how much he was teasing. I leaned up and whispered in his ear. \n\n\"Rain check,\" I said and then nipped his ear. I noticed a satisfying bulge in his shorts. Good. He can sit uncomfortable through lunch too. \n\nHe squeezed my hand. \n\n\"Brat.\"\n\n\"And yet you love me madly,\" I said.\n\n\"I absolutely do,\" he said. And once more my panties got wet. God damn it. \n\n\"Hungry?\" \n\nNow there was a setup line, but I actually was starving because I'd skipped breakfast. I nodded and we stood up. He kept holding my hand, which I liked. \n\n\"Well let's get you fed,\" he said and we headed back to the restaurant. \n\n****\n\nLunch was good with Daddy sitting next to me and holding my hand from time to time, which was nice and helped me when I was still being a bit spacey. I told both Mike and Helen that I woke up not feeling well and Ben let me sleep in. If they had their doubts they were polite enough not to say anything. Even Meg managed to keep a straight face. They even did a nice thing over lunch. Helen handed me a small wrapped package. After saying the usual \"you shouldn't haves\" I opened it. Inside was a Claddagh ring. It wasn't flashy, but it was old and beautiful.\n\n\"Mike bought it for me when we were dating. He was at law school and studying all the time, and, I wasn't bad looking back then, and there were other offers...\" she said.\n\nI swear Mike and Daddy both rolled their eyes at the exact same time in the exact same way. It was a miracle I didn't rupture something trying not to giggle.\n\n\"So he came back on break and gave me this. You called it 'a downpayment' I believe,\" she said.\n\n\"You old romantic,\" Meg said. Mike actually looked mildly embarrassed and I got the feeling that didn't happen often.\n\n\"So I wore it until he got me the engagement ring, and then my wedding ring. And then it kind of got buried in the jewelry chest. But I found it a few months ago. And it's a shame it was buried so long. So I got it cleaned up and I thought you might like it. Lord know it won't fit around these old fingers anymore,\" she said.\n\nI looked at it sitting in the box when Daddy took it and held up the ring in his fingers. He then looked at me.\n\n\"Downpayment?\" he said, smiling. I wanted to punch him, but instead I found myself getting flushed and nodding my head.\n\n\"So which way....\" he said, fumbling with the ring a bit.\n\n\"Heart pointing towards the fingertip,\" Meg said.\n\n\"Left hand,\" Helen said.\n\n\"Ring finger,\" I added quietly holding up my hand. I'm almost sure it wasn't shaking.\n\nHe slid the ring on my finger and it fit almost perfectly. I doubt we'd have to resize it or anything.\n\nI wished the others weren't there. I wished I could be alone so I could kiss him like I wanted to. I wish there was a hell of a lot less clothing between us.\n\nInstead, I turned bright red and marvelled at the ring. It wasn't an engagement ring, but it was more than good enough for the moment. I leaned across the space between us and gave him a quick kiss and whispered in his ear I'd thank him properly later.\n\nThen I remembered my manners and turned back to Helen. She seemed quite pleased.\n\n\"Thank you, Helen. It's beautiful,\" I said.\n\nAfter lunch we were content to just walk around downtown Kingston. There were bands playing, plenty of events, and activities set up to celebrate Canada Day, so it was a nice way to kill a few hours. Plus it was sunny, but with enough a breeze to not make it too warm. Still, Daddy fussed with making sure I had enough suntan lotion on. I grumbled but he bought me cotton candy which distracted me. I had come out the other end of being Little and was pretty much back to normal, which was a relief. Trying to function like that in public was hard.\n\nAt one point Helen got wrapped up talking to a group of ladies showing some antiques. Daddy and Meg saw some game of chance I didn't recognize, but they did and it apparently reignited a rivalry that dated back to their time in university. Daddy apologized and I laughed and told him to go kick her ass.\n\nThat suddenly left me alone with Mike. I looked up at him and suddenly felt a bit nervous for the first time in hours. It was weird; it was like looking at an older, but serious version of my Daddy. And I know Daddy and Meg and told stories about how he could be a difficult man to warm up to, but I found myself liking him anyway. I could tell he was trying to change.\n\n\"Kit, would you mind going for a little walk with me? If I stand here long enough Helen is going to rope me into a home decorating conversation with those ladies and I'm going to have to pretend to be interested in old tables,\" he said.\n\nI laughed, said sure, and we ambled away from the others. Meg could text me when they were looking for us. Besides, I had the feeling Mike wanted to talk to me away from the others for some reason.\n\n\"So how big of a scare job did Meg and Ben put into you about me?\" he asked.\n\nI looked down at my feet for a moment. I mean, I'd already managed to piss off Helen once during their stay here. What was I going to say to him?\n\nShit, when in doubt....and when you're a bad liar....just go with the truth.\n\n\"They said you were a good man, but that you worked hard and had high expectations of others. And that sometimes that caused some....stress between you and Ben,\" I said, hoping I wasn't about to piss off potential in-law number two in as many days.\n\nTo my surprise, he just nodded his head.\n\n\"That's a fair description of who I was,\" he said. \"But I think it's a bit unfair to have told you that. I think you've put a huge amount of pressure on yourself the last couple of days.\"\n\nNo kidding, I thought. We were ambling down Ontario Street and every now and then I caught him glancing out towards the river and smiling. Kids with maple leaves painted on their face ran past us laughing. I suspected we looked all the world like a grandfather taking his granddaughter for a stroll. It made me smile a bit.\n\n\"I love your son an awful lot, Mike. And I think I managed to offend your wife yesterday, so I really don't want to upset you as well.\"\n\n\"You didn't offend her,\" he said.\n\nI must have shot him a pretty skeptical look because he laughed. Then he took a deep breath and sighed.\n\n\"She was upset because she didn't realize she was doing it until you pointed it out. Then she was pretty deeply mortified. And then a little scared. We were planning on giving you the ring anyway. A little 'welcome to the family' gift, but I hope you'll take it as an apology. Neither one of us are particularly good at saying we're sorry, I'm slightly ashamed to say,\" he said.\n\nThere was a lot to unpack there, but one word jumped out more than others.\n\n\"Scared?\"\n\nHe said nothing, but we turned off the road and headed down towards Battery Park. There was an unoccupied bench and he aimed for it. We sat down and I waited for him to speak.\n\n\"After the....accident, we obviously grieved with Ben. But after a few months he was still not coming out the other end of it. And I just didn't get it. I didn't. That's just who I was. She died, you grieved, you moved on. I didn't understand why he couldn't,\" he said.\n\n\"Oh Mike.\"\n\nHe shook his head and I knew he was ashamed of himself.\n\n\"I know. Four months in and I yelled at him to get over it already. And he didn't yell at me. He didn't scream at me. He just stood up from the couch in our living room, came over, looked me in the eye and said, 'Mom's going to be gone one day, Dad. What will you do then?' and he just walked out. We didn't speak for months afterwards.\"\n\nI didn't know what to say.\n\n\"Have you ever had a moment of clarity, Kit?\" he asked.\n\nI shook my head.\n\n\"You only ever get a few of them in your life. I had one when I met Helen. One when I held Ben for the first time. And I had one right after that conversation. I'd worked 50 hours or more a week for more than 40 years. I love my job, and I'm very good at it. 'Lawyers don't retire, they just die' is a joke I used to make. Helen never laughed because she didn't think it was a joke; she thought it was what was going to happen.\n\n\"But Ben said that and I suddenly realized I only had so much more time with Helen. And then what? More hours at the office until they found me slumped over my desk. I was horrified by the thought of it. Horrified.\n\n\"So I semi-retired. I put in a few hours a week, mostly mentoring articling students. I suspect I'm driving Helen nuts being around so much. We've had our routines over the years. She's used to her groups and volunteering, and suddenly I'm trailing after her like a lost puppy. But I should have done it years ago.\n\nHe stopped talking for a moment and looked out over the river. He started talking again, but didn't look at me.\n\n\"She's....forgetting things. And becoming a bit more confused and frustrated,\" he said. Then he looked at me and I could tell it was an effort for him to not get upset. \"Do you understand?\"\n\nI nodded, and then managed to find my voice.\n\n\"Do you know for sure?\"\n\n\"No, not for sure. Not yet,\" he said. \"We took Ben out this morning because we wanted him to know his mom was getting some tests and tried to be vague. He knew something was going on by the way his mom was behaving around you, so we had to tell him something. He knows we're not telling him everything, but he's letting it be for now,\" he said.\n\nI reached out and placed my hand on top of his. He took it and gave it a squeeze.\n\n\"I like you, Kit. You're funny and full of life and I think that's exactly what Ben needs. He's night and day since you came into his life. I'm not going to lie and say I wasn't worried at first about him dating someone so young, but I'm pleased to be wrong. You're a ray of sunshine and I'm grateful you love my son,\" he said.\n\n\"But I need to know you're going to be strong enough to be there for him if things get bad with Helen. He fell a long way last time. I don't want that to happen again.\"\n\nThis was a lot to process. It's not that he was asking a lot of me. I love my Daddy. Being there for him was a given. He joked 'For better or for worse' at Disney, but I'd marry him in a heartbeat if he asked. Insane, maybe. But I loved him and I couldn't imagine finding a better man. I was just trying to figure out how to be there for him.\n\nI took a moment. I looked at my hand and the new ring on it which glowed in the sunshine.\n\n\"I love your son so much I'm already dreading having to go back to school in September,\" I said. \"I'll still see him on weekends and, if I know him, he'll end up coming up to Montreal if I'm struggling or anything. He's the kindest man I've ever met,\" I said.\n\n\"He gets that from his mom. It used to drive me nuts as much he was like his mother. Now, I thank god for it.\"\n\n\"You're too hard on yourself. A lot of the good things you have I see in him. He's smart, organized, cares about the job he does, and he loves me, just like you love Helen, I think,\" I said.\n\nAt that he did turn away for a moment, and I could see him take his hand and run it across his eyes for a moment. I remembered being frustrated a few days ago at them coming here and taking away precious Daddy time. Now it felt like the most selfish thing in the world.\n\nThat was the moment my phone chose to buzz. I glanced at it. Meg.\n\n\"Where are you and Mike?\"\n\n\"Went for a walk. Heading back now.\"\n\nI hated to disturb him, but as I looked up from my phone he was already composed and beginning to stand. A little redness in the eyes was the only clue he had been upset. He held his hand to help me up. I took it and stood beside him.\n\nHe still loomed over me, much like Daddy does. But I looked at him and tried to emphasize how serious I was.\n\n\"I love Ben. I'll be there for him, I promise.\"\n\nHe gave my hand a squeeze and let it go.\n\n\"Thank you, Kit. That's all I can ask,\" he said. He then waved his hand back to the street.\n\n\"Shall we head back? No doubt by now my wife has bought an antique table that I'm going to have to try and figure out how to get back to B.C.,\" he said.\n\nI took his arm and we began walking back.\n\n***\n\nDaddy looked a little confused when we eventually came back, but Mike just said he wanted to get to know me a bit better and to tell me embarrassing stories of when he was a kid. Daddy looked skeptical, but when his father leaned over and quietly said \"I wanted to apologize to her about your mother\", he nodded.",
        "This was also Mike's way of letting me know to keep our conversation quiet....for the moment.\n\nIt was hard, because I wanted to rush up and hug Daddy and tell him it would be ok and I'll take care of him, but I knew that would be the wrong reaction. It would just get him upset. Instead, I resolved to be the best, most loving little girl ever and take good care of her Daddy.\n\nIt was a good rest of the afternoon. We even stayed in for supper, but afterwards Mike and Helen started looking tired, so we blew off the fireworks and headed home. Meg decided she was going to drive back to Toronto the next morning rather than drive back in the dark. I decided to bum a ride with her to work in the morning and let Daddy sleep in.\n\nTechnically it was supposed to be a day off for me, but I arranged to take a day off in lieu next weekend. I figured I was going to need some serious little time after the in-laws left, but now I was feeling guilty about it. But Mike and Helen insisted I go to work. They were pretty old school and hard work and sticking to your commitments.\n\nMeg seemed almost sad to be leaving as she was driving me to work. She enjoyed her time away from Toronto and work, I think.\n\n\"You need a vacation,\" I said to her.\n\n\"I need a life,\" she said. \"Being here this weekend was great. I needed a few days to relax, and every time I see you and Ben together, and Mike and Helen as well, I wonder if I'm doing the right things in my life.\"\n\n\"You're helping people. That's not nothing,\" I said, trying to be reassuring.\n\n\"I guess. Maybe I need to do more to help myself too,\" she said, as she pulled into Michelle and Ahmed's driveway.\n\n\"It's not too late. It's not like the rest of your life is set in stone,\" I said. I desperately wanted to tell her about Mike and Helen and to be willing to make changes in your life so you don't regret that you waited too long, but that wasn't my story to tell. Not right now.\n\nMeg glanced over at me and grinned. \"We're just a self-help meeting this weekend.\"\n\n\"I think it's what friends do,\" I replied as she came to a stop.\n\nShe was about to respond when Michelle came out on the front porch. I could tell she was a bit confused about the car, but then she saw me and waved. She was wearing a pair of old jean shorts with holes in them and a halter top. I had built up some immunity to Michelle's appearance and wardrobe. Meg had not.\n\n\"Jesus Christ,\" she said, and I had to resist the urge to slide a finger under her jaw and click it shut. She was practically drooling.\n\n\"She is married,\" I said, emphasizing hard on 'married'.\n\n\"I would pay to do her divorce,\" she said\n\nI leaned over to give Meg a hug goodbye and whispered \"she would eat your soul and you'd thank her afterwards. Just don't. Trust me,\" I said, and then I hopped out of the car, waved goodbye to her and escorted Michelle into the house before she hypnotized Meg out of the car. Meg was having a vulnerable moment and the last thing she needed was Michelle playing with her. After a moment I heard the car pull back and drive away. I sighed in relief.\n\n\"Is that Meg?\" Michelle asked. \"You told me she was a bitch, you didn't tell me she was a hot bitch. You should have invited her in and showed her around.\"\n\nI began walking towards the studio where I actually sewed and assembled things. I actually had a few projects I was working on. Still...\n\n\"Michelle, if I hadn't seen you in daylight I'd swear you were a vampire.\"\n\n\"Oh honey, there's all kinds of supernatural creatures that can move around in daylight,\" she said, and gave one of her irritating mystery smiles. \"I'll let Ahmed know you're here.\"\n\nThe rest of the day progressed with less drama and I actually managed to finish a very nice Black Cat costume in pleather and with fake fur trim. I thought it was pretty good and Ahmed gave me lots of praise on it. Next up was a Huntress outfit. I was pretty deep into it when Michelle tapped me on the shoulder and told me it was quitting time. I checked my phone and it was 5 pm. Wow, I was in the zone today.\n\nThankfully Ahmed drove me home, so I didn't have Michelle interrogating me for info about Meg. Instead he was complimenting me on my work and offering suggestions on the Huntress outfit. It was nice to talk shop.\n\nBy the time I got home, Daddy had already started supper. Mike and Helen were at the island and I swear Mike was physically restraining her from helping out. Daddy looked like he was enjoying making supper for them and took the occasional editorial comment from his mother with good grace. \n\nThey'd spent the day driving around the area and hitting some of Daddy's favourite places. I almost regretted not being along for the ride, but I was glad they had a good time.\n\nAfter supper we were all chatting when Mike said he wouldn't mind going for a walk to try and work off some of the meal and asked Helen to join him. She looked reluctant, but Mike said he wanted to see the waterfall Daddy had mentioned and it'd be nice to have some company. After some fussing, and a politely declined offer for us to join them, they headed out and up the hill. Daddy watched for a few moments to make sure they'd be ok and then turned and looked at me.\n\nSuddenly, I realized what Mike had done. That clever man.\n\n\"Daddy,\" I said, in a little sing-song voice. \"I need to get clean.\"\n\n\"Really?\" he said. Then I saw the grin begin to form.\n\n\"Uh huh. I'm really dirty,\" I said, and unbuttoned my shorts and pulled them down over my legs. I let them pool around my feet. I began walking backwards toward our bedroom. I quickly pulled the t-shirt I was wearing over my head and threw it on the floor as well. I was just in my panties and a bra that was a size too small and was showing off my tits nicely.\n\nI turned around and began skipping towards the bedroom. At the door frame I took off my bra and pulled my panties down. I was naked and looking at him as he moved slowly down the hall. \n\n\"Can you pick those up for me, Daddy? Then maybe you could clean me up?\"\n\nThen I disappeared, but not before I heard him call me a brat. I giggled and ran into the bathroom.\n\nDaddy hadn't done much work to the house. It was one of the reasons he bought it. He was perfectly happy how it looked and didn't really like contractors much. But once he realized how much time I was spending at the house, and how I could cheerfully spend an hour in the shower, he splurged and had a new one installed in April. I was in the middle of exams at the time and couldn't get home to him. It was a surprise reward for my great grades.\n\nIt was magnificent. He had the old bathtub removed and installed a huge walk-in shower with stonework on the floor and walls. Two people could easily shower in there at the same time. There were jets that could come out of the walls, and multiple rainfall shower heads in the ceiling. There were also railings on the wall and seats. Theoretically this was to help Daddy keep his balance when getting a shower, or being able to sit down if his leg was really bothering him.\n\nIn reality they had much more fun purposes.\n\nI walked into the shower, turned on the water and got it nice and hot. I grabbed a special cushion mat and put it on the floor in front of one of the seats.\n\nBy the time Daddy opened the shower door, it was already steamy. I was sitting and had my legs opened and was playing with my clit. Water was pouring down over my body and I was flushed, both from the heat of the water and from how horny I was.\n\nI could see him look at me and trying to figure out what to do first. I decided to give him some help. I stuck my legs out and began kicking them up and down a bit.\n\n\"Daddy?\" I said in my best little girl voice. \"I'm having a hard time getting clean down there. No matter how hard I try I still feel dirty. Can you help?\"\n\nHe grinned and walked towards me using the railing for balance. He had that hungry look in his eyes that I love. He carefully knelt down between my legs, and then took my left foot and kissed it. Then he ran his tongue along it.\n\nI squealed because it tickled and also because Daddy had never done that before. Actually, nobody had ever paid any attention to my feet before. But he sucked on a couple of my toes, ran his tongue along the arch of my foot. And when he wasn't kissing one foot he was massaging the other. It felt amazing on multiple levels.\n\nThe entire time I didn't stop playing with my clit, so whether I was making my hormones go through the roof or Daddy was, I did not know or care. \n\nEventually, he began kissing his way up past my ankle, along my calf, switching back and forth between each leg. He kissed and licked behind my knees which made me shiver. I didn't know my knees could make me feel that way. He then made his way up my thighs, closer and close to my pussy. I knew he wasn't going to give me what I wanted immediately because he liked to tease me. And sure enough, with me moaning, he nipped the inside of my upper thigh, then took my fingers from my clit and sucked them into his mouth.\n\nI looked down at him and whined. I couldn't help myself.\n\n\"Please Daddy. Please. I need you to lick my pussy. Please,\" I groaned.\n\nHe leaned in and was inches from where I needed him. He then blew air on my clit and it was like an electric shock going off in my brain.\n\nI was about to engage in some truly humiliating grovelling, but I need his tongue on me.\n\n\"Please Daddy. I've been a good girl.\"\n\nHe blew on my clit some more and I spasmed again.\n\n\"You were a brat who made me pick up your clothes. Don't you think that deserves some kind of punishment?\"\n\n\"I'll be your best little girl from now on, I promise Daddy. Please, please lick me. Please!\"\n\nI could actually feel his beard tickling the edge of my pussy lips and then he glanced up and we locked eyes. God I needed him, please he had to....\n\nAnd then, slowly, deliberately he took his tongue and ran it up my clit.\n\nI had the brief thought that Mike and Helen might have heard that scream at the waterfall.\n\nDaddy quickly went to work on my clit with his tongue while sliding two of his fingers inside my pussy, curved them and began stroking along my special spot. I wrapped my legs around his neck and put my fingers through Daddy's hair. Escape was impossible for him now. \n\n\"Daddy, Daddy, Daddy, don't stop, don't stop,\" I said over and over again, with the wave building and building inside of me. Finally Daddy took my clit, sucked it hard into his mouth while doing something indescribable with his fingers and I exploded.\n\n\"Oh fuck! Yes!\" I screamed, and came, my hips lifting off the seat. Daddy's face was getting soaked and it had little to do with the shower. He was unrelenting, continuing to lick and suck until I finally had to let him go and push him away.\n\n\"Oh God, please Daddy, I'm so sensitive, please,\" I said.\n\nHe grabbed one of the rails by my head and leveraged himself up. Suddenly, there was a big, thick cock right in front of me. I was still loopy from the orgasm, but Daddy's cock is always a lure. Before he even knew what was happening I leaned forward and took his cock in my mouth.\n\nMmmmmm, Daddy's cock. Best thing in the world. As I began sucking on it and running my tongue over his head, I could feel his hands run through my wet hair.\n\n\"You're going to be the death of me, Kitten. Either by breaking my neck when I'm going down on you, or giving me a heart attack when you're sucking my cock,\" he said.\n\nI momentarily took his cock out of my mouth and flicked my tongue underneath his crown. He groaned.\n\n\"You'll die happy, though, Daddy,\" I said, and then dove back down onto his cock, sucking away. It was perfect. The shower felt like being out in a warm rain. Daddy's hands running through my soaking wet hair. My brain melting away in post-orgasmic, cock-sucking bliss. I could have spent hours doing that, but Daddy had other plans.\n\nHe gently pushed me back, and I whined like I always go when I'm deprived of my favourite thing.\n\n\"Time for you to take Daddy's cock in other ways, Kitten,\" he said, his voice sounding strained. Even through the haze, I knew what he wanted. I stood up, legs wobbling a bit, and then grabbed the railing on the wall and then bent over, sticking my ass back towards him. I could feel his hands running down my back and ass. He moved closer and his hard cock was wedged between my ass cheeks. He gently humped me like that for a moment. I decided that was enough and I needed more.\n\nI pushed back the soaking wet hair from my face and looked back at him.\n\n\"Fuck your little Kitten, Daddy. She was a brat. Give her what she deserves.\"\n\nThen I turned and faced the wall and braced myself. Daddy didn't disappoint, sliding his cock into me with one firm, hard thrust that had both of us moaning.\n\nFor the next few minutes I held onto that bar for dear life as Daddy fucked me. It wasn't a punishing fucking like the other night, though. It was a good, hard, solid fucking. Bent over, with my hair in my face and the water from the shower coming down, Daddy's amazing cock plowing into me over and over. I could feel myself being lifted up onto my toes with every thrust. My brain was still mostly fried, so I couldn't do much more than grunt.\n\nI could feel myself building up again, but then Daddy slowed down and stopped. I moaned and wiggled my ass to get him to keep going, but Daddy leaned down and whispered in my ear.\n\n\"Daddy's knee is going to give out soon. Do you think you can ride me for a bit?\" he asked. \n\nI managed to nod my head, and he pulled out, leaving me empty. It wasn't the worst feeling in the world, but I still hated it. I wanted to be full, I wasn't, and that needed to be corrected.\n\nI straightened up with my head spinning and saw Daddy had moved over to where I had been sitting and eased himself down. He then patted his lap and I made my way over on wobbly legs. I climbed up on his lap, aimed his cock upwards and slid down, filling the emptiness. We both groaned. \n\nI didn't have the energy yet to start frantically bouncing up and down on him. Instead I just ground my hips on him, my clit rubbing against him sending little sparks. I looked into his eyes and smiled. My left hand found its way up to stroke his beard and we both noticed the ring. He smiled, took my hand and kissed it. \n\n\"That got sprung on you quick and spontaneously,\" he said. \"If you want to take it off and mom leaves I....\"\n\nI lifted my hips up and slid them down hard, which surprised him enough that his eyes got wide and he stopped talking. I waved my fingers in front of his face. \n\n\"The only way this comes off my finger is if you give something to replace it with. Clear?\" I said, giving him my best serious little girl face and voice. \n\n\"Crystal clear, ma'am,\" he said, making me giggle. He then pulled me in for a kiss. We did that for a few minutes, my hands wrapped around his neck and my body grinding on him. I could feel myself getting worked up again and was about to start bouncing in him when he broke the kiss. \n\n\"We're running out of time. We have to multitask and get you clean while we're fucking, little girl,\" he said and then took some body wash from a shelf and poured it into his hand. He then began rubbing it across my tits, my stomach, and around to my back. \n\nI smiled and took the bottle and repeated the gesture on him. He then cupped his hands around my ass and began moving me up and down, my tits sliding up and down across his chest. It felt amazing and I continued to run my hands up and down his back. \n\nGradually he started moving me up and down faster and I could feel my next orgasm building. I opened my eyes and could see Daddy was finally getting close too. \n\n\"I love you, Daddy,\" I said in a soft voice. Normally I'm moaning about his breeding me, but god, I just loved him so much at that moment. \n\nHe looked me in the eyes and smiled. \n\n\"I love you too, Kitten,\" he said. \"Daddy's close. Are you ready?\"\n\n\"Uh huh,\" I managed to get out. \"Your little girl is ready for your cum, Daddy.\"\n\nHe thrust up hard into me a half dozen more times and I arched my back, relishing having something so big pushed into me so hard that I defied gravity for a second. \n\n\"God!\" He cried out and I could feel him cum explode into me, making me even warmer. I let out a gasp and came. It wasn't an explosion in my head but just warmth and bliss spreading out across my body. \n\nI flipped back down and rested my head on his shoulder, trying to catch my breath. We held each other like that for a few minutes until I could sit up straighter and look at him. Kinda. Everything was still fuzzy. And very wet. \n\n\"Ohhhh, that was just what I needed. Thank you, Daddy,\" I said. \n\n\"My pleasure, princess,\" he said, and then kissed me, which made me start to giggle. \n\nI really, really, really didn't want to get up, but I knew we were pushing our luck and that his parents could come home any minute. Reluctantly I used his shoulders to leverage myself up. I gave a sad moan as his cock left me. \n\n\"So sad. I'll miss you, Daddy's cock,\" I said, and then leaned down to give it a quick kiss of appreciation. And maybe a quick suck into my mouth. \n\nDaddy gently pushed me back. \n\n\"We don't have time for Round 2, Kitten,\" he said. \n\nI pouted, but he was right. Besides this was a bonus. I thought I'd have to wait until his parents left or have another bound and gagged session in the middle of the night. Shower fucking with Daddy was always a treat. \n\nHe grabbed a nearby cloth, poured out more body wash on it, and began cleaning my body. I began shampooing and conditioning my hair. He was, thankfully, gently cleaning up around my pussy, even as I could feel his cum drain out. \n\nIt was nice. No, it was amazing. Not a moment of clarity; too many hormones racing around for that. But a moment of love. I was good with that. I hummed to myself as Daddy ran the cloth over me. \n\n\"You good, Kitten?\" he asked. \n\n\"I'm purrfect, Daddy,\" I said and then giggled. He laughed, kissed me and then I began going to work on getting him clean. \n\n***\n\n(End of July)\n\nIt was approaching sunset and Michelle was breaking speed records on a New York Interstate trying to cover as much ground as possible before it got dark. I was resting my bare feet on the dashboard of her SUV, which I knew was annoying her a bit but I'd also just spent all weekend standing up, so I thought she could indulge me a little. \n\nWe'd spent the weekend at a comic con in Connecticut of all places. Her and Ahmed and heard good things about it, table fees were reasonable, and it was located at a casino. That's all Michelle needed to hear. \n\nIt was meant as a test run on their cosplay business. Michelle and I would go, model costumes we worked on, sell a few, have some templates people could buy, and offer up our services to design and make tailored costumes. \n\nAnd it had worked pretty well. I was wearing the more family friendly cosplay outfits so we could target kids and younger teens. So I had my Batgirl cosplay, Merida, and a Rey costume I'd recently made. I even had the right lightsaber courtesy of my recent trip to Disney. Michelle was dressed mostly in military video game cosplay, which attracted a different crowd.\n\nIt had been a good time, although cosplaying as work was different than wandering around a con in a costume for fun. Plus, Michelle had vetoed Daddy coming along, which had pissed me off to no end. But Ahmed wasn't coming either, and she insisted this was a girls only working con. I was annoyed, but considering she was paying my salary, sharing a room with her, paying for my meals and giving me some extra time off for Daddy's birthday this coming week, I couldn't complain too much.\n\nStill, I was going to be glad to get home. We left Thursday lunchtime and it would be midnight before I got home. I already texted Daddy and told him not to bother going to sleep; his services would be needed once I got home. He responded that he just got back from his weekend in Toronto and would be waiting for me. Yum.",
        "It finally got dark enough that Michelle was no longer comfortable travelling at warp speed. She settled into something only slightly over the speed limit.\n\n\"Aren't you worried about getting a speeding ticket? You were going 90 mp/h there for a bit,\" I said.\n\n\"Do you know how many speeding tickets I've talked my way out of?\" she said. \"Don't worry about it.\"\n\n\"Fair point,\" I said, then yawned and stretched. I considered napping so I'd have some extra energy when I got home, but Michelle seemed like she wanted to talk a bit.\n\n\"So, we actually made money at that thing, believe it or not,\" she said, keeping her eyes on the road. \"Even after gas, the hotel room, meals, your salary, expenses, we made money. We sold the costumes we brought, the designs, the cosplay supplies, my photos, all of it. And that doesn't even count all the orders we took. You're going to be flat out for the next few weeks getting them all done before you head back to school.\"\n\nI groaned. \"Tell me about it. I have a lot of time hunched over sewing machines in my future.\"\n\nShe paused, and I could tell she was weighing her words. \"You could...stay on, if you wanted. I mean, keep working for us after the summer.\"\n\nI laughed. \"No offence, Michelle, but after this summer the next wedding I go to is my own.\"\n\nThe con, if nothing else, meant this weekend and next weekend I didn't have to go to any weddings. I was grateful for that. I had almost reached Michelle levels of exhaustion with them.\n\n\"No, no. No more weddings. I talked about it with Ahmed before coming to this con. This was a test. If we did well, we'd offer you something permanent. No more weddings. You'd just be making costumes and working comic cons. We'd have you dealing with the online stuff as well,\" she said.\n\nI was stunned. I knew they were happy with my work, but never dreamed they were going to offer me a full-time job.\n\n\"I....I don't think I can, Michelle. I mean, it's kind, but....\"\n\n\"Oh come on. You spent all weekend fidgeting with your ring, and you've spent weeks complaining about not wanting to go back to school and just stay with Ben. Well now I'm offering you the chance to do just that. Stay here, be with your man, work with us, and get paid. What do you say?\" she asked.\n\nThere was no way I could make this leap without talking to Daddy first. I suspect he wouldn't be happy with me dropping out of school, but I could be with him all the time, and maybe take the next steps in our relationship. And if his mom wasn't doing well, I mean, she wanted grandchildren and I wanted Daddy's children eventually....\n\nMaybe it would be ok. Maybe it would work.\n\n\"I...I need to talk to Ben first,\" I said. God that sounded sad even to my ears. \n\nMichelle kept her eyes on the road. I had the feeling she was disappointed, but not surprised.\n\n\"Not too long, ok Kitten?\" she said.\n\nI nodded.\n\nOh God, what was Daddy going to think?\n\n \n"
    ],
    "authorname": "thanagar",
    "tags": [
        "mature",
        "older man",
        "younger woman",
        "romance",
        "redhead",
        "ddlg",
        "daddy"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/little-packages-ch-06"
}