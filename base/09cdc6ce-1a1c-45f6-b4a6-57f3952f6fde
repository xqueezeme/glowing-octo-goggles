{
    "title": "Taken by the Viking Ch. 07",
    "pages": [
        "Sweet. Like peaches. Jordan grinned as his tongue lapped at the hot, wet pussy of his sleeping beauty. He'd always liked that fairy tale as a kid. A curse, a dragon, and a sleeping woman awakening to find herself bearing a royal twins. There had been other versions, he'd been told, but he liked the original. It was more real. A lot of the original versions of fairy tales had become popular on Earth, although once upon a time the more romanticized versions had been the popular ones. Since the wealthy left for the Moon, uncaring as the Earth was plunged into chaos until the war lords took over, carving out their territories, romance had died. That's what his mother had told him, anyway. \n\nHe pushed those thoughts away. They had no place in this room. In his bed. He was no longer a street kid, pushed out after his mother's death; he was the right hand man of the Wolf. And he had his own captured sleeping beauty.\n\nThat thought made Jordan smile again, his tongue lapping as he lapped at Trish's sweet pussy. She slept deeply, as she always did, exhausted by the day and his nightly demands; only her soft, sleepy moans and wet, swollen cunt indicated she was in any way aware of his touch. But he liked waking her with pleasure before he had to tend to his normal routine. He didn't need much sleep anyway, never had. In his life, there had always been too many reasons to stay awake, most of them life or death. \n\nThis... his baby girl, she was the first thing in his life that was pure pleasure.\n\nLast night she'd come apart for him. Submitted to him. He'd felt it. That moment... she'd be his. Eventually. Jordan didn't fool himself. He knew he was not a woman's ideal. He didn't talk enough. He didn't respond well to demands. And he was too controlling. Even women who said they wanted to be controlled didn't want a man like him. But his baby girl had needed someone to take care of her. He'd seen it. So he'd taken her. \n\nShe moaned again, her limbs moving in that restless way that said she was finally waking up. Jordan grinned and slit his fingers into her hot pussy, carefully, in case she was sore. He'd been rough last night, demanding, and he hadn't want to leave the room to go get the healing cream from Margolius. This morning he'd wake his little girl up, like he always did, pleasure her, and let her go back to sleep dreaming of him. \n\n******\n\n\"Sir... we need to talk to you.\" Two soldiers came to a halt in front of Jordan, standing at attention. Sitting on Jordan's lap, Trish was trying to ignore the soft caresses through her dress, her eyes moving around the large open area. Soldiers were always everywhere in the compound, but they were rarely watching her. She wondered, idly, if escape would be easier if she did it without Alex and Bella... but what kind of person would that make her? Not only that, but it occurred to her she had no idea what was outside the compound. \n\nThe real outside wasn't visible from any of the places Jordan had taken her to.\n\n\"Go ahead,\" Jordan said calmly, his big hand splayed on Trish' stomach.\n\n\"Well, uh... Sir, there's been an incident inside... um...\" The guard who was speaking looked at her and then quickly back at Jordan. His companion did the same. \n\nNodding, as if understanding, Jordan picked Trish up and set her down beside him. He stood and turned to look down at her. \"Don't move from here, baby girl.\"\n\nThe same firm tones he used in the morning when he was dressing her. Trish had discovered he meant what he said. She'd moved to the end of the bed this morning, wanting to see what he was doing in the bathroom while she wasn't in there, and had been soundly spanked before being returned back to her original location. After that, she hadn't tried to move again from that spot again. It wasn't worth it just to see what he was doing. Her bottom was still a little sore as she sat down on the hard bench.\n\nFollowing the two soldiers, Jordan moved out of earshot. Trish stared after him, trying to decide whether it was worth it to risk another spanking. It wasn't like she could go anywhere. Alex and Bella were right there and they weren't trying to sneak away either. Alex was swimming laps in the pool. Slowly, because he was probably starving by now, but still swimming. She looked up at the sky. Blue. So blue, with just a few clouds. Definitely nothing to help her figure out where in the world the compound was located.\n\n\"Trish...\" A whisper impinged on her thoughts. \"Trish.\"\n\nHer forehead creased as she dropped her head down to look at Bella, who was mere feet away from her, hanging on the edge of the pool. It was the first time either Bella or Alex had tried to communicate with her since that first day. She shot a worried glance over at Jordan, who still seemed engrossed in his conversation about whatever the incident was.\n\n\"What?\"\n\n\"Are you allowed to talk to us?\"\n\nTrish shot another worried glance at Jordan, her mind moving quickly. \"I don't know... he hasn't told me not to.\"\n\nOf course, if he caught her doing so, he might. Might even punish her for it. On the other hand - why was she trying to please him and follow rules that he hadn't even laid down for her? Besides, this would give her a chance to relieve some of her guilt. \n\n\"Bella... I just wanted to say I'm really sorry... About... you know...\" Surprisingly, tears sprang into her eyes as the repressed guilt welled up. She'd been avoiding thinking about the forced interaction between her and Bella, because she'd known Bella hadn't had a choice - had even taken two blows from Jordan's belt for hesitating - and yet she'd been resentful of Bella forcing herself on her anyway.\n\n\"No, don't apologize!\" Bella looked horrified at Trish's apology. She made a swift slicing motion with her hand, as if to cut Trish's words and regrets away. \"I'm sorry that I had to... but it's not either of our faults, okay?\"\n\nTrish nodded, although it didn't totally ease the guilt. Sure, Bella had basically forced herself on Trish, but only after being belted by Jordan. And Trish already knew her own public torments were at an end, but Bella's and Alex's would continue. \n\n\"Have you seen any of the news shows?\" Bella whispered.\n\nThe question was so odd, so unexpected, Trish had to blink before she could think to answer. She shook her head, glancing at Jordan. So far he'd kept her too busy to even think of watching the vids most of the time. Even in the mornings, he'd wake her up, make her orgasm, and then she'd fall back asleep until he came back for her. She was rarely awake before he returned and even when she was, she barely had time to do much more than go to the bathroom or take a shower. If she was in the shower when he got there, he'd climb in and clean her off to HIS satisfaction, which usually led to more orgasms. She shook those thoughts away, hating that she didn't totally hate the orgasms anymore. \"He never turns on the television.\"\n\nBella looked uncomfortable, but she persisted. \"The Wolf let us watch some yesterday. They were reporting on our disappearance but they didn't mention you.\"\n\nSighing internally, Trish just shrugged. \"I'm an orphan. I was on Earth on scholarship.\"\n\n\"I don't understand.\" To her credit, Bella truly did look like she didn't understand. Her position as a citizen of the Moon in a real family, with real wealth and power, meant she probably had no point of reference for what Trish's life had been like. She was completely protected, inured even, from what the Moon was like for anyone who wasn't really part of their elite community. Still, this time Trish did sigh, out loud.\n\n\"When was the last time an orphan was taken by the Wolf?\" Maybe some history would help Bella understand, since she obviously didn't get it.\n\n\"Umm...\" Bella made a face. \"Sorry, I've never been a Wolf follower.\" Which actually just made her a better person in Trish's opinion. The people on the Moon who were obsessed with the Wolf and his victims were just as bad as the people living in his commune. Maybe even worse in some ways.\n\n\"Five years ago, he was kept for one month,\" Trish told her. She was about to go on when recognition lit in Bella's eyes.\n\n\"Oh! He was taken with that other guy, Bryce something. I don't think I realized he was an orphan.\"\n\n\"Why would you?\" Trish asked, she felt her lips curve in a smile, acknowledging the sad reality of their world. \"I only knew because he was from the same orphanage as me. The news stations aren't as interested in people like me as they are in people like you and Alex.\"\n\n\"But that's wrong!\"\n\nOh good grief. Not that Trish disagreed with her, but really... society had been like this Trish's entire life and she was only a few years younger than Bella if that. She appreciated Bella realizing it was wrong once it was shoved in her face, but it had been wrong for years and Bella was one of the many who just hadn't bothered to notice because it didn't effect her. Trish understood; it was just how life was. Railing about the unfairness of it had never gotten her anything. \n\n\"You have families. People they can interview. Important people. Connections. I don't have any of that,\" Trish explained. Bella looked like she was about to cry, like she couldn't believe that life was actually this unfair, and Trish couldn't help but stare a little. She knew she was naive and weak in her own way, but how naive was Bella? Feeling like she should say something to make Bella feel better, she groped about for something that would at least sound possible. \"I'm sure if you and Alex hadn't been taken at the same time, I would have been bigger news.\"\n\nThat might be true. If there was nothing else of interest going on for the Moon. Someone like her might be mentioned, if they were really desperate for content. \n\nBella still looked sad and even a little angry, but she changed the subject. \"Have you been around the compound? Seen anything that might help us escape?\"\n\nTrish shook her head. \"I haven't even been able to figure out which doors lead to the outside. Anytime Jordan's going out, he locks me into the room.\"\n\nNot that she was awake most of those times anyway.\n\n\"Do you have computer access or anything?\"\n\nShe shook her head. She had tried, one of the few times he hadn't been around and she'd been awake. \"Not really... he leaves me there and I can access games or books or things to entertain me, but it's not connected to anything. I can't access anything that's not saved to the computer itself.\"\n\nThe frustration on Bella's face was somewhat echoed in Trish's heart, but she also felt like she might be more resigned to her fate than Bella obviously was. Then again, Trish had had more of a chance to see the compound, see the people there, than Bella and Alex had. She knew it was huge, bigger than she'd realized at first, and incredibly well guarded. The vast majority of the people there were trained soldiers. They were in every hall, all of the time, living out their lives. So far, she couldn't imagine an escape scenario that didn't end in tears; she hadn't even seen the opportunity for hope.\n\nBella's eyes flicked towards the direction Jordan was in and Trish immediately tensed up. Heavy footsteps heralded his arrival and Bella looked like she wanted to move away, but she didn't. Trish appreciated the gesture, although she hoped it didn't get them into even more trouble.\n\n\"Time to go back in,\" Jordan said, sounding almost bored. Trish relaxed slightly and then tensed again. \n\nWhat if he was mad and was just keeping it private, rather than public?\n\n******\n\nHe didn't seem mad, but Jordan did pull Trish aside before they went into the main room. When he started undoing the buttons on the top of her pink dress, she protested.\n\n\"I thought you said no more public stuff!\" The feeling of betrayal was stupid because in order to be betrayed she would have to trust him, and trusting him would be stupid. \n\n\"This isn't public, you're not onstage.\" Jordan pulled her body against him and for a second she thought he was going to hug her, but then she realized the position just allowed him to trap her arms between their bodies, while his long reach gave him perfect access to her ass.\n\nSMACK!\n\nSMACK!\n\nSMACK!\n\nSMACK!\n\nTwo swats to each cheek - hard ones - that had her biting her lip not to cry out at the sting. Still holding her against him, Jordan looked down and met her eyes. \"If you don't behave, I will spank you for the next two minutes. Then I'll give you the opportunity to behave again.'\n\nWith the surface of her ass already stinging, Trish wasn't exactly interested in getting more of a spanking plus whatever it was he wanted to do to her. The feeling of betrayed resentment lingered as she lowered her hands and he undid the front of her dress nearly to the waist. Her shoulders hunched forward, and Jordan reached into her dress to pinch her nipple.\n\n\"Stand up straight,\" he said. With his hard fingers trapping the little bud, Trish didn't argue, but slowly straightened up. The position made her breasts appear more thrust out, peeking through the dress. She looked around, but none of the soldiers walking by seemed to care. A few of them glanced at her and Jordan, but more with curiosity than real interest, before walking past into the main room. \n\nHe played with her nipple, pinching and rolling the little bud in a way that made her breast and core ache. The tiny bud started throbbing between his fingers and she felt like squirming as the rest of her body responded. Then he released her nipple to cup her breast, and reached into his pocket with his other hand and pulled out tiny looking clamp with rubber tips. \n\nTrish reacted immediately as he squeezed the clamp open, moving it towards her nipple. His fingers tightened on her breast and she let out a small whine.\n\nHis cold, blue eyes were merciless. \"I don't want to punish you in public, because I know you don't like it, but I will if you don't behave.\"\n\nBiting back another whine, Trish obediently stood in place as he close the rubber tips of the clamp on her nipple. The tiny bud throbbed as the sharp pinch made her flesh ache. Her head tipped back as she breathed in deeply. It hurt, but it was bearable. \n\n\"Good girl... see, that's not so bad,\" Jordan murmured, his fingers already plucking her other nipple, which was plumply erect, as if begging for the same treatment. \"I made sure they wouldn't be too tight for this first time.\"\n\nShe shivered again, and felt her ass clenching around her plug, as if all the toys he was using on her were somehow connected. This first time... which meant he planned to use the clamps again. This wasn't punishment for talking to Bella, this was just for his enjoyment. Trish moaned and whimpered as the second clamp closed down. Her nipples were throbbing now, aching in their confinement.\n\nAs Jordan did the buttons back up on her dress, the fabric brushed against the now hypersensitive buds where the very tips peeked out from the clamps, and Trish pressed her thighs together in despair at the need growing between them. Jordan put his arm around her, his big hand resting on the curve of her hip as he led her into the dining room. With every step she took, her breasts bounced, her clamped nipples rubbed against the fabric of her dress, and Trish became a little more aroused. Why the slight pain felt so good, she couldn't say, but it did. \n\nJordan took his usual seat by the Wolf, pulling Trish onto his lap. She settled in, her thighs pressed together, lips pursed, as she tried to ignore the little waves of heat and arousal flashing through her as her nipples throbbed in their confinement. Now that she'd stopped moving, the sensations were lessening in intensity, starting to feel more normal. As long as she didn't move so that her nipples were brushed or pressed again, it stayed that way. \n\nThey watched as Bella and Alex were brought in, and for the first time Alex kneeled and willing took the Wolf's cock in his mouth in exchange for food. Then Alex was led out again and Bella ended up on the Wolf's lap, the same way Trish was on Jordan's. Or, not quite the same way. Bella was naked after all, and the entire room was able to see what the Wolf's hands were doing as he played with her breasts, plucking her nipples, moving his hand down to thrust his fingers into her pussy. The brunette squirmed and moaned softly, fighting her own arousal in the same way Trish was fighting hers.\n\nThe clamps were making her fight harder. Jordan was keeping to his promise of not making her do anything public, but he was pushing the lines, as his fingers slid up her skirt and traced patterns on her inner thighs. No one could see but Bella and the Wolf, because the table was in the way, which she supposed technically meant he was adhering to his word, but Trish found it difficult not to react in a manner which everyone would be able to see. Especially when Jordan pulled the fabric of her dress tight across her nipples or flicked it back and forth, reigniting the throbbing into the tender, pinched buds.\n\nHis cock was rigid under her bottom, but he seemed entirely focused on the conversations and reports. Trish didn't know how he could attend to both his duties and tormenting her at the same time, but he didn't seem to have any problem with it. \n\n\"The shipment will be coming in from the northeast tomorrow,\" one of the soldiers said, looking between Jordan and the Wolf. \"Where do you want us to put it?\"\n\n\"The main entrance will be closest,\" Jordan said thoughtfully, his fingers sliding up Trish's thigh. A buzz of excitement hit her as she realized that was the closest she'd ever come to hearing where any of the entrances to the compound were. She exchanged a glance with Bella, whose wide eyes indicated she'd already realized the same thing. \"We don't have much space left in the storage there though.\"\n\n\"It's more important to get it into the compound quickly than anything else,\" the Wolf said. \n\nJordan nodded. \"The main entrance then, and we'll divide it up for storage once it's under cover.\"\n\nAnother interesting tidbit to know; they were worried about the main entrance being attacked - or maybe just being watched? Hmmm. Could be either... and then Jordan's fingers slid along her wet pussy lips and Trish shuddered as he successfully distracted her again. Her body's traitorous reactions should have angered her more, but she didn't have room for being angry with Jordan slowly coaxing her need higher and higher. \n\nAs the conversation continued, Jordan's fingers slid up to her pussy and pressed in, and it was all Trish could do not to cry out. She was sopping wet, her cream completely coating her lips, and it was far too easy for Jordan's fingers to impale her up to his knuckles. The needy throbbing between her legs increased as he twisted his fingers, pumping them slowly in and out of her... too slowly. \n\nFrom the main floor, no one would be able to see a thing, although they could probably imagine what he was doing if any of them were looking, but when Trish managed to focus enough to look at the soldiers, she could see they were all far more interested in watching the Wolf play with Bella. Barely any of them even gave her a second glance, if they looked at her at all. \n\nHer nipples ached and throbbed in their confinement as Jordan pushed her closer to orgasm, trying to swell against the clamps there. When he thumbed her clit, she jerked against his big body, shuddering around his fingers. Almost immediately, he pulled them away and Trish nearly cried out in protest before she bit her lip. Her body was pulsing, teetering right on the edge of cumming, and unable to push off the edge as Jordan's wet fingers pressed against the top of her inner thighs, keeping her legs open so she couldn't even put the slightest amount of pressure on her swollen clit. \n\nWith her eyes closed, she grit her teeth together, trying to fight against the heavy sensations swirling inside of her, demanding satisfaction. It was impossible to concentrate on what was happening around her.",
        "When Jordan abruptly got to his feet, carrying her in his arms, she didn't know whether a lot of time had passed or no time at all. It felt like both. Trish clung to him as he walked briskly from the hall, her body still quivering, although the need to cum had subsided a little... painfully, but at least it had. The iron bands of his arms holding her tightly made her think that perhaps he was feeling a little bit of the same desperation? Part of her hoped so, because at least that would be fair... another part of her didn't hope so, because she knew exactly how that desperation would be spent.\n\nUnsurprisingly, he brought her straight back to his room. Trish moaned a little as he placed her down in the center of the bed, not sure if she was moaning in denial of what was about to happen, or because she was so desperate to climax that part of her wanted it. Pulling the dress up over her head, he dropped it on the floor and, with two fingers, pushed her down so she was lying on her back. \n\n\"Arms above your head,\" he said, his blue eyes glowing as he loomed over her. \n\nShe found herself obeying immediately, too far gone in hazy need to even consider trying to resist. Not that it would have mattered. Jordan caught her wrists and quickly cuffed them, leaving her bound to the bed, arms stretched high above her head, leaving her helpless in the way he seemed to like. Kneeling between her legs, he loomed over her, his gaze arrested as he stared down at her.\n\nHis hands cupped her arms and slid down her limbs, fingers sliding around to her back once he reached her torso. Trish bit back a moan as they slid down to her breasts. The ache in her nipples intensified as Jordan's hands jostled the clamps on them, echoing the throbbing in her pussy. His mouth hovered over a sensitive bud, heating it... and then his hand moved and there was a small pinch as he removed the clamp.\n\nThe pinch was followed immediately by his hot mouth descending on her nipple, sucking the bud between his lips, and Trish let out a wild cry as sensation suddenly surged. Not just the pleasure of his mouth suckling the sensitive bud, but a tingling, sharp flare of pain as blood rushed back into the crushed nubbin. Jordan's tongue soothed the pain somewhat, but couldn't eradicate it completely, and Trish writhed beneath him as her flesh jiggled, her nipple feeling as though it was now swollen to twice it's normal size. When he finally lifted his mouth, she looked down to see it definitely did look larger than usual; plumper and standing out farther from the slight mound of her breast, and it was an angry, dark reddish color. \n\nHis mouth moved to hover over her still clamped nipple and Trish found herself pulling at the restraints on her wrists.\n\n\"No, no, no, no...\"\n\n\"I know it hurts, baby girl, but it has to come off,\" he said, right before she felt the pinch and then the wet heat of his mouth. Trish strained as tears sprang to her eyes. Her nipples were two throbbing points of pain throbbing on her chest, the discomfort radiating outward and right down between her legs. Part of her couldn't help wondering what clamps like that might feel like on her clitoris... and then she kicked herself for even having the thought. But her clit was aching so badly for some pressure on it, the thought had been only natural. \n\nFingers slid down between her legs. Circled around her clit, but didn't touch it. Trish made a strangled noise in the back of her throat as her orgasm hovered. She didn't beg though. She refused to beg. \n\n\"Say my name, baby girl,\" Jordan murmured, rather than asking her to beg like he sometimes did. \"I just want to hear my name on your lips as you cum.\" His voice coaxed. Cajoled. implied that surely what he was asking wasn't so much... especially compared to asking her to beg. \n\nHis finger circled again. Brushed against her swollen clit. A sob rose in Trish as her body arched. Demanding. It was doing as he asked, but it wasn't begging for something he was making her physically desire, no matter that her mind did not. That, she could do.\n\n\"Jordan,\" she whispered, licking her dry lips. Immediately she was rewarded as his fingers slid over her clit. \"Oh! Jordan!\"\n\nThe thick shaft of his cock pressed against her pussy and thrust in, making Trish cry out loudly as her pussy was brutally stretched open. Her anus clenched around the plug in her ass, igniting those nerve endings, and as his groin slammed against her pussy lips and clit, her long-awaited orgasm crashed over her.\n\n\"JORDAN!\"\n\nTrish didn't even realize she was screaming his name as she writhed beneath him, sobbing with ecstatic relief as the pleasure rode her. Her legs wrapped around the backs of his thighs, every wave of erotic bliss surging with every thrust of his cock into her body. The hot, hardness of his cock was like steel inside of her and her pussy convulsed around him, shuddering with the hot sensation of rapture. \n\nIt wasn't until her climax began to subside that she realized what she was doing, and she choked back another repetition of his name, her legs falling away from where she'd had her thighs tight around his waist. The tingling buzz in her pussy was pure physical satisfaction, little aftershocks of pleasure shuddering through her as Jordan continued to pump his cock in and out of her quivering pussy.\n\nWhen he suddenly pulled out, she was surprised, until he flipped her over. Her wrists crossed in front of her as he positioned her on her knees, bowing down before him, bottom in the air as if she was offering it to him. Trish shuddered, but she was too limp, too satiated to do anything but kneel there as his cock lined back up with her pussy and thrust in. \n\nThis position made him feel even larger, especially as his body rubbed up against the base of the plug in her ass. The feeling of fullness intensified as the plug was jostled, rubbing against her sensitive nerve endings. Flashes of pleasure were already coiling inside of her again. \n\nSLAP!\n\nA little puff of air escaped her lips as Jordan smacked her ass between his thrusts, surprising her. It didn't hurt exactly... just a slight sting and then warmth spread from the spot.\n\nSLAP!\n\nSLAP!\n\nSLAP!\n\nHis hand peppered her bottom, making her squirm as he spanked her in between thrusts. This wasn't a hard spanking, he was just doing it because he wanted to, because he liked it. The warmth spreading across her skin made her entire body feel flushed as cock rubbed against her inner muscles between each swat. Trish whimpered. She didn't want this to feel good, especially now, after she'd already reached her climax, and he was spanking her... but her body didn't care about things like pride or dignity.  \n\nSLAP!\n\nSLAP!\n\nThe smacks were becoming harder, heating her skin further, stinging a little longer, and Trish felt herself clenching around his cock every time his hand fell. Jordan's grunts and moans of appreciation made it clear how much he was enjoying taking her from behind and spanking her while he did it. \n\nWhen he began to play with the plug in her ass as well, in between thrusts, Trish found her body shuddering with the intense sensations it created. The plug was pulled back and forth, twisted, thrust, making her feel as though she was being fucked in both holes at once. And then he'd let go, slap her already pink ass a few more times, before returning his attention to playing with the plug.\n\nTrish was panting from fighting back the pleasure she didn't want, tilting forward to press her face into the mattress so he couldn't hear her moans and soft sounds of pleasure as his ministrations did exactly what he wanted it to. This made her sore nipples graze the bed every time Jordan thrust forward, shoving her body with his thrust, and increasing her overall pleasure, but at least he couldn't hear her. \n\nStill, he could feel the gripping of her pussy as he rode her, the way she shuddered as he fucked her with the plug in conjunction with his cock, the way her body rippled whenever his hand slapped the jiggling pink flesh of her ass. When he leaned forward over her, his hands sliding up her sides to cup her breasts again, Trish sucked back a whimper as his fingers closed roughly over her soft flesh. Her nipples throbbed, her ass clenched around the plug as his position pressed his body against its base, and she squirmed as his balls slapped against her clit when he thrust fully into her. \n\nSo full...\n\nSo good...\n\nLong, slow, hard strokes filling her up as he covered her body with his own, dominating her in every sense of the word, and while her mind might be reluctant, her body responded with euphoric delight. She was already sensitive, primed, from her first orgasm and he'd taken the time to build her up again. Tension coiled, tendrils of pleasure sliding through her, breaking down what little was left of her resistance. \n\n\"That's it baby,\" Jordan whispered in her ear, as if he could sense her submitting to him. \"Just let go... It's going to feel so good...\"\n\nHe sucked her earlobe into his mouth, biting down gently with his teeth and Trish cried out into the mattress, muffling the noise, as his hand slid from one breast down between her legs. Fingers sought out her clit... rubbed... circled... and pinched. The little jolt of pain that accompanied her pleasure sent her soaring higher.\n\nThe teeth skidded off of her earlobe, his body pulled back slightly, giving him more room to thrust harder... faster... his fingers worrying her clit between the callused pads, and Trish screamed into the mattress as her orgasm hit her like a space shuttle. The intense sensations multiplied as she felt Jordan move more roughly in and out of her, his cock expanding, pressing against the walls of her pussy as he started to cum. Hot liquid filled her as he pumped, his hips still moving even as he spurted his cum into her pussy. \n\nTrish sobbed with the intensity of the sensations wracking her, the ecstasy which seemed to burrow into her very marrow, the throbbing of her sore nipples and bottom, the soreness of her anus from having the plug played with, and the sorely satiated pulse of her pussy. When Jordan slid out of her, she felt utterly limp all over. Limp and almost too sensitive to be touched. Even his fingers stroking through her hair as he turned her onto her side and pulled her into to cradle against him made her shiver. \n\n\"So beautiful,\" Jordan murmured under his breath, his fingers drawing through the silky strands of her hair. \"My baby girl.\"\n\nIt really wasn't fair that the first time in her life she truly believed someone thought she was beautiful, that she felt like someone cared about her, that it had to be him."
    ],
    "authorname": "Goldeniangel",
    "tags": [
        "taken",
        "viking",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/taken-by-the-viking-ch-07"
}