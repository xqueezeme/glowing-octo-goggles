{
    "title": "Gloria's Daughter Ch. 03",
    "pages": [
        "This is the third and final chapter of Denny and Gloria's story. Even more than the second part, this one will make a ton more sense if you've read the earlier installments. But to recap: Denny has been one of Gloria's regular customers for twelve years. When he accidentally meets her college-age daughter - who hates that her mother is a prostitute - he is smitten with the younger redhead and asks Gloria to role-play as the daughter. During a role-play session, Gloria's daughter persona, \"Brandy,\" complains that they haven't had a real Thanksgiving dinner since Gloria's husband died. A month or so after this admission, Denny brings the two of them a restaurant-made Thanksgiving feast and is invited in to see the front part of Gloria's house for the first time. Also for the first time, he's properly introduced to Kaylee. The three have dinner together, Gloria gives Denny a completely non-erotic massage, and then she establishes a line that says it's okay for them to make friendly gestures as call-girl and client, but that any sex has to stay on the business side of their relationship. This isn't because Gloria wants to keep Denny at a distance, but because she says she needs his goodness in her professional life to keep her sane, and she doesn't think she can sleep with him on both a personal level and a professional one. \n\nI'd like to thank everybody for reading this far and for all the positive comments. I hope you find the conclusion equally as satisfying as the first two parts! \n\n***** \n\nWhen the door opened and I saw Kaylee, I had a half-second of happy deja vu that sent me straight back to the first time I'd met her. But after that half-second, the look on her face dropped any pleasure out of my heart like a sink-hole. \n\n\"Kaylee ... What's - Jesus, has something happened?\" \n\nShe nodded, biting her lower lip as if to hold some terrible secret in. Her shoulders trembled under the uncombed mess of her long red hair, and she had her arms wrapped tight around herself. \n\n\"Your mom -\" \n\n\"She was in accident.\" The girl's voice came out raw and uneven. \n\nUnable to help myself, I took hold of her by the arms - half to comfort her and half to squeeze something out of her that wouldn't be the worst possible news. She closed her eyes for a second, then said, \"It's not that bad. Some cracked ribs and her leg's broken in three places. Last night.\" \n\nThe way she sniffled and shuddered every other word confused me, made it hard for my brain to click on what she meant. But ... Gloria isn't dead or in a coma. The utter relief of that kept my legs from folding under me and let me find the backbone to approach with whatever had Kaylee in this state. \n\n\"Okay, so help me understand. Do you want to go inside to talk?\" \n\nShe glanced behind her, into the boudoir. Her shoulders nudged upward, then slumped back down. \"Sure.\" \n\nI got her inside, guided her to the loveseat, shut the door. \"Take some deep breaths and relax. I'm going to get you something to drink.\" \n\nHead in her hand, eyes closed, Kaylee nodded. I kept talking on the way to her mother's microfridge and wine stash. \n\n\"So if Gloria's going to be all right, then what? Why are you so upset?\" \n\n\"Dennis, her leg's broken in three places. She's not going to be able to work for two or three months.\" Her head came up off the hand, leaving her fingers tense and hooked. Her voice twisted upward in tone and volume. \"We're going to lose everything. The house, the car - I won't be able to go back to school in the fall.\" \n\nI poured her a big goblet of Gloria's burgundy and carried it back over. \"Look, no, they don't foreclose on you after you miss a payment or two, and maybe I could loan you something to help with tuition ...\" \n\nThe words were out before I could think about them and remember how completely tapped out I was at the moment. But it turned out not to matter. Kaylee's eyes looked into mine, her face distressed by my obvious ignorance. \n\n\"You don't get it. We're already two or three months behind on the mortgage from when mom lost a big ... client, last year.\" Shit. Harry with the belt. \"She gets a little caught up and then falls back again. And what, are you totally loaded or something? Stanford's expensive. Sixty grand a year.\" \n\nStanford? Jesus, Gloria said she was smart, but I didn't know she meant that smart. \n\n\"Okay, well ...\" Fuck, that's five grand a month. And there's what, twelve hundred bucks in your account? My savings had been completely shot that spring when my stepdad went off his antidepressants and decided to burn down the house with him and my mom in it. The fire department got them out, but the insurance called it arson and wouldn't pay, and on top of that they were underwater on their mortgage. I'd had to empty out my IRA and take the penalty to keep them from going homeless. \"Are you already maxed out on student loans?\" \n\nShe shook her head, eyes rolling. \"No, no. You just don't ... Mom couldn't risk having her finances looked into by signing me up for loans or financial aid. She makes a crap-ton of money, somebody would start wondering how a massage therapist pulls in twenty grand a month.\" \n\nI didn't count how many times I blinked before being able to reply. \"How ... can she be behind ... if she makes -\" \n\n\"Fuck, has she not told you this stuff? My dad owned his own company and he did something and got his ass sued off - like, millions of bucks in the hole. And then he went out drinking and drove his car off an embankment. And she'd let him put her on all the paperwork for the company, so she's on the hook for the judgment. Why else would she have ... she really never told you this shit?\" \n\nMy head shook, dazedly. \"She's not big on talking about her - your dad.\" \n\n\"Huh. Well, nobody could blame her for that.\" \n\nStanding there watching her as she took a big gulp of wine, I tried to figure out what I could do. Her eyes searched my face as if some tiny chance of a miracle might be hidden there, but she obviously didn't find it. \n\n\"Look,\" I said at last. \"Why don't we go see her?\" \n\nTalking to Gloria can make anything better. \n\nKaylee, though, stopped her miracle-search and squeezed her red-rimmed eyes tight. Then she made a fist of her free hand, pressed it against her forehead, and reopened her eyes looking as grim and hollow as I've ever seen anyone. \n\n\"No,\" she said, lowering the fist. \"There's only one way to fix this, and that's for you to show me how she does it.\" \n\n\"Show you ...\" \n\n\"How to fuck a guy for money.\" \n\nFor a second, I literally thought I was about to pass out. \n\n\"Oh my god, Kaylee, no. No, I couldn't possibly - and you can't - your mom would never forgive me for doing it or herself for putting you in that position. I can totally give you my four-fifty and maybe some more, however much that will help, but I won't let you have sex with me for it.\" \n\nCompletely unmoved, she said, \"Four-fifty times however many times a month is still nothing, Dennis. I mean, unless you're over here every other night at four-fifty a pop, which I assume you're not ... are you?\" \n\n\"Uh, four-fifty is for the whole month.\" \n\nNow it was her turn to blink. \"Holy crap. She really does like you, doesn't she? Dennis, she gets three or four hundred a session from most of her clients. I've been going through her accounting files all day trying to figure out how fucked we are, and that's the kind of money I need if I'm going to make the house payment and the car and insurance and my tuition bill. Four-fifty? Jesus, she lets you have it for cheap. How many times does that get you?\" \n\nMy face felt like she'd rubbed chili oil on it. \"Look, I don't think that really matters ...\" \n\n\"It does if you're going to understand what I'm up against. God, Dennis, are you like the most naive guy in the universe?\" \n\n\"You don't have to be mean.\" \n\nHer mouth shut and she stared at her wineglass, now half-empty. \"No. I guess you're right, I don't.\" Then she looked back up at me. \"But I do have to convince as many of Mom's clients as I can to let me stand in for her, or it's all gone. Everything she's been on her back opening her legs to keep hold of for the last thirteen years.\" \n\n\"Please don't be crude about your mother.\" \n\nI could see her having to bite her tongue. But she did it, and after she did, her face softened a little. \"Wow. You've really got it bad for her, don't you?\" \n\n\"I'd do anything for her,\" I said without hesitation. \"And if you take me to the hospital and let me see her and she says your plan really is the only way, and she wants me to help you, I will. But without talking to her, I don't want to hear another damn thing about it.\" \n\nWatching her think, seeing the wheels turn behind those flaring blue eyes, I wondered whether I'd successfully called her bluff - or if there was a bluff to be called. \n\nShe finished thinking, threw back the last of the wine, and stood up. \n\n\"Okay, then. Let's go.\" \n\n* * * \n\nNeither of us talked on the drive to the hospital. In the silence, I became acutely aware of her stunning body, just turned twenty a few months earlier. Christ, how many times has Gloria pretended to be this girl for me, and now there's the real thing sitting right there, and I'm hoping she tells me to keep my hands off it. \n\nKaylee stood a good four inches taller than Gloria, slimmer through the hips ... about the same bust size. Her mother had the sexiness of a stripper wrapped up in a MILF-housewife package, but Kaylee could have been a super-model, with a magazine-cover face, unbelievably straight, rich, blood-red hair, and a body that, dressed in shorts and a t-shirt, screamed to be poured into a string bikini for an all-day photoshoot somewhere sandy and tropical. \n\nShe wasn't someone very many men would turn down. \n\nGod, I hope Gloria says she's got a rainy-day fund squirreled away somewhere. \n\n* * * \n\nThey had the head of her bed raised, and she lay back against a pillow there, eyes closed, when I entered the room. At the receiving desk, they'd told us we had to go in one at a time, and Kaylee let me go first. \n\nThe bulk of a full-length cast made her right leg a larger bulge beneath the sheet than her left. Band-aids tracked their way up her left arm, and another one covered a cut on her forehead, smack in the middle of a huge bruise. Both her eyes had been blackened, and clearly no one had given her a brush or comb since she was admitted; her scarlet hair splayed wildly across the pillow around her head. An IV stand dripped fluid through a tube into her right arm. \n\nShe was so beautiful. \n\nAs I stepped closer, her eyelids cracked open, and a slow, happy smile lifted the edges of her mouth up. \"Denny ...\" \n\n\"Hi.\" \n\nShe tried to sit up a little, flinched in pain, dropped back against the pillow. \n\n\"Sorry,\" she gasped, then relaxed into a few deep breaths. Somehow the smile hadn't left her face. \"Not in the best shape to make our appointment, I guess.\" \n\n\"It will keep.\" \n\nHer hand lifted an inch or two off the blanket. I reached down and took hold of it. \n\n\"Kind of expected you to show up last night. Or on your lunch hour today.\" \n\n\"If I'd known, I would have gotten here before the ambulance dropped you off.\" \n\nAs if it took some effort to work through my words, her brows knitted and relaxed and knitted again. They must still have her pretty doped up. \n\n\"Kaylee ... called you. Didn't she?\" \n\nI shook my head. \"No, but she brought me when I showed up at your place tonight.\" \n\nThe essence of fuming motherhood settled into her eyes and simmered there. \"Showed up ... I told her to call you. Yesterday. Why did she go and let you ...\" \n\n\"It's fine,\" I said, squeezing her fingers. \"I really don't mind -\" \n\nTaking her hand back, she grimaced and squeaked and worked herself further up in the bed. \n\n\"Gloria, please, take it easy.\" \n\n\"If she didn't call you,\" she said, panting, \"did she call anybody? I know you don't mind, but some of them ... they'll be, pissed, if they show up and I'm not ...\" \n\nWow. Kaylee didn't come up with that idea on the fly talking to me. Gloria told her to cancel everything yesterday. And she didn't do it. \n\n\"Yeah, look ... Kaylee has this plan worked out that you're going to have to talk her out of, because I got nowhere when I tried.\" \n\nShe sat there for a minute, blinking, thinking. Then her hand lifted again, asking for mine. I took it. \n\n\"Shit, Denny.\" \n\n\"I know. I told her there had to be some other -\" \n\nHer head dropped against the pillow again, eyes closed. \"No, she's totally right. Fuck me, how could I have let this happen?\" \n\n\"You're not serious,\" I said. But the tightness of her grip in mine said she was. \"There's got to be -\" \n\n\"Denny.\" The blue of her eyes, swimming in those bruise-blackened sockets, shut me up. \"You're not a dumb guy. But I'm smarter than you, and Kayle is ... way smarter than I am. God. She must've ... I gave her my password, told her to call everyone, cancel ... she's been digging through my records this whole time. She can do the math. Trust me.\" \n\n\"But you've got equity in your house, right? You can use that to cover her tuition, then -\" \n\n\"Can't get an equity loan when you're behind on your payments, honey.\" She glanced down at her immobilized leg. \"And have no income.\" \n\n\"Well ... shit, sell me the house, and I'll get the equity loan. She doesn't have to ...\" \n\nMy voice dropped off at her smile and the tears in her eyes. \"Denny. What are you going to put down? That stuff with your parents ... I know you're busted.\" \n\nStanding there, holding her hand and meeting her gaze, I found my brain empty of any other solutions. \"Gloria, she asked me to help her.\" \n\nAmazingly, she laughed at that. The tears broke free and rolled down her cheeks, and her face immediately clenched in pain, from her cracked ribs, I guess, but the laugh kept going until it looked like she couldn't breathe. \n\n\"Oh,\" she said, sucking in a breath at last. \"Oh! God. You should have just ... said so ... in the first place.\" \n\n\"What do you mean? Why?\" \n\n\"Denny, she asked for help? Kaylee doesn't ask for help, honey.\" Something between pride and bedevilment showed in her eyes. \"Ever. If she'd go that far ... ask you to help ... she's set on it. No talking her out of it. You or me.\" \n\n\"So,\" I said, barely able to digest her words, \"you're just going to let her?\" \n\nShe shook her head. \"Can't stop her. That's it. Unless I call the cops on her. But then we still lose it all ... and I go to jail. Maybe her too.\" \n\n\"Wow.\" Her hand felt so soft and sure in mine. \"You seem awfully ... calm about the idea.\" \n\nRolling her eyes toward the IV stand, she got her smile back. \"Drugs.\" \n\nI tried to think of what else to say. Nothing came to me. \n\n\"Thank god she has you to help her.\" \n\nThat almost made me drop her hand. \"What? No, you're not seriously -\" \n\n\"Hah,\" she said, managing to keep it to a chuckle that wouldn't hurt her ribs. \"God's sake, Denny. I know you want to fuck her. What are you trying to protect me from? I know everything ... you want to do to her.\" \n\n\"Gloria, that's different. I wouldn't really -\" \n\nShe nodded. \"Yeah. It's different. Know what else is different? You, compared to them. Gentle. Kind. Sweet, nervous. Good to her. Not like my first couple of tricks. God, I spent so long ... puking in the toilet after the first few times. She knows you a little. Knows how much ... I think of you. You want her to have that, for her first one ... or Marty Harris? 'Smy first Tuesday appointment, Marty. What I call a pump-and-grunter.\" \n\n\"Ew.\" \n\n\"Right.\" Her eyes slipped shut again. \"We're stuck. She's gonna whore herself. You want to teach her how ... or let Marty do it? Know who I'd rather.\" \n\nI could feel my hand getting sweaty in hers. \"Gloria ...\" \n\nShe looked back up at me, gave my fingers a squeeze. \"Go fuck my daughter. You want to. She needs it. Enjoy yourself ... be sure she enjoys it too, if she'll let herself. And ...\" \n\n\"Yes?\" \n\nHer expression went wicked. \"Tell her you're going to call her 'Brandy.'\" \n\n* * * \n\n\"Holy shit. We're really going to do this.\" \n\nThe whole car ride back to the house - back to the boudoir - was full of Kaylee repeating that thought or something similar. \n\n\"I can't believe she didn't go ape-shit. Fuck. Oh crap. Fuck. I'm about to have sex with you for money.\" \n\nNo, you're about to have sex with me because I love your mom and she needs me to do this. Assuming I can get it up. But that last bit was fooling myself. I'd been rock hard since we both shut our doors and the soft hint of her perfume spread through the interior of the car. \n\n\"Hey, why are we stopping?\" \n\n\"ATM. If you're having sex with me for money, I need money, right?\" \n\n\"Mom's computer ledger said you already paid your four-fifty. I figured that was just for one time, but if I'm charging what she does, you're set for the month.\" \n\n\"Then I'm paying for next month. If I'm going to show you what it's like to pimp yourself out, you need to know how it feels to take the cash.\" \n\n\"I guess so. Holy shit.\" \n\nThe conversation paused while I keyed in my PIN and made the withdrawal. \n\n\"Wait ... next month? Does that mean you're really going to come back and keep all your appointments, while I'm ...\" \n\n\"Jesus, Kaylee, do you want to know what it's like to have a client or not?\" \n\n\"Fuck. Holy crap.\" \n\nWe pulled into their driveway around eight o'clock, still light outside with the evening sun of early summer. I switched off the engine. \n\n\"Okay. Here's the deal,\" I said. \n\nKaylee caught me in her skeptical blue gaze, back immediately straightening at my words. \n\n\"First off, none of that.\" \n\nHer eyes narrowed. \"None of what?\" \n\n\"That,\" I said. \"No tensing up because you don't think you're going to like what I have to say. No pushing back, no sharp looks, no sarcasm. When you open that door in a minute and let me in, I'm your customer, and you act like you're happy to see me, and the things I say are intriguing and arousing.\" \n\nShe tried to loosen up, didn't succeed as well as she might have. \n\n\"Next,\" I said, raising a hand and counting onto my second finger, \"you're going to need to dress yourself up before I knock on the door. Your mom's got a closet full of stuff, and I'm pretty sure she keeps notes on what to wear for who when.\" \n\n\"Yeah, I found that when I was digging around on the computer. Didn't have anything listed for you, though.\" \n\n\"I like the black silk kimono thing. I think she's known that for longer than she's had the computer.\" And I guess she pays enough attention to my special requests that she doesn't have to write them down. \"But that's not what you're wearing for me, because I don't want to be comparing you to her.\" \n\n\"What do I wear for you?\" \n\nFlash: Gloria as Brandy bent over a laundry-basket full of things she'd borrowed from Kaylee's room, a soft, pretty blue blouse on top of the pile, the frill that would hang across the breasts stained with cum from where I'd thrown a full condom on it. \n\n\"Uh ... how about something ... blue. To match your eyes. Something frilly, if you've got it. And white shorts if you have those. The tighter the better.\" \n\n\"Do I need to ... like, shave or anything?\" \n\nAwesome. She's still got pubes. \"No - look, we're getting deeper into the details than we need to right now.\" And it's not giving me a break from my hard-on. \"Your mom and I usually go two hours, but since I'm paying you extra and you need to learn the ropes, I think we should do three. There's an alarm on the nightstand by the bed, set it for three hours and make sure it's on 'chime.'\" There was a 'buzz' setting too, and it had scared the shit out of me the one time Gloria accidentally left the dial on the wrong spot. ",
        "\"Three hours, chime. What else?\" \n\n\"I'm going to do things in stages, okay? I'm going to start off as Nice Dennis, and hopefully when we've done a round of that, you'll be comfortable enough that I can switch to Demanding Dennis. Then if that doesn't scare you off, I'll eventually get to Dick Dennis.\" \n\n\"You act like a dick to my mom?\" A little heat colored the question. \n\nI raised a hand to placate her. \"Not very often, and the key word there is 'act.' Sometimes we role-play. She'll pretend to be,\" you, \"my boss, dressed up in a business suit.\" \n\n\"Your boss is a chick?\" \n\n\"Yes, my boss is a woman. And she's kind of a bitch. And she's my boss, so I don't get to be a dick to her. But Gloria can put on a wig and a suit, and then I get to tell my boss the things I'd like to tell her and order her to do the things I'd like her to do to make up for how she treats me at work.\" \n\n\"Huh.\" She thought for a second, then said, \"I guess I get it.\" \n\n\"So here's the really important part,\" I said. \"If we get that far - hell, even if we don't get that far, but something's happening and you need me to stop, you're going to have a safe word. And if you say it, I'll stop, no matter what, right then and there. Okay?\" \n\n\"I know what a safe word is,\" she said, a bit bristly. My eyebrows went up, and she bristled even more. \"From reading smut stories online, not from being a perv myself.\" \n\n\"So pick one. What's your safe word.\" \n\nShe considered for a moment. \n\n\"Asymptote.\" \n\n\"No, something simpler, something you can say quicker. And something that doesn't start with 'ass.' You may be saying 'ass' for some other reason, and I don't want to have to wait and see if you're going to add 'ymptote' every time you do.\" \n\n\"Scorn.\" \n\nI laughed. \"Sure, that's good. What else? Oh - boundaries. The customer is the customer, and if you're too picky about what you will and won't do, he's not going to want to pay you. But you get to say going in what you're willing to take and what you're not. Gloria doesn't let most guys do her in the ass, for instance -\" \n\n\"But you, she does?\" \n\n\"- but if you're okay with taking it there, that's up to you. To start off, I'd say you should be hesitant about letting anybody tie you up. And you should definitely insist on condoms, every time for every hole. And no kissing unless you want mono or something.\" \n\n\"Duh. But you didn't answer my question.\" \n\n\"And I'm not going to. You can ask your mom if you really want to know; I'm not going to piss on her privacy.\" \n\nShe tilted her head a little. \"Damn. You really are a nice guy, aren't you?\" \n\n\"Doesn't Gloria keep telling you that?\" \n\nA shrug was all I got in response. \"So what else?\" \n\nI didn't have any other instructions, but I still chewed on my lip a second. \"Just ... when you open that door and let me in, remember that I'm acting, okay? Even when I start off as Nice Dennis, I'm role-playing for you, and only because of what happened to Gloria. I'm not saying I won't start enjoying things at some point; I'm not saying it's going to be a chore. But I'm nervous as hell, and I really don't - I don't want you to come out of it hating me.\" \n\n\"Fuck,\" she said, blue eyes widening, \"are you going to ask her to marry you or something?\" \n\nI scowled. \"Just get inside and get changed. I'm ringing the bell in fifteen minutes.\" \n\n* * * \n\nWhen she opened the door, I saw Kaylee completely transformed. For one thing, she was eye-level with me in a pair of three-inch white sandal heels that matched her camel-toe-tight white denim shorts. She had on the blouse, too, and I stared at her tits in it for longer than I should have. They filled the top out lushly behind the neckline fringe, pert and proud and clearly unhampered by any bra. Only as an afterthought did I look to see that the cum-stain had definitely washed out. \n\nHer face ... well, every time I'd met her before, she'd had on very little makeup, just enough to accentuate the natural perfection of her features. Now she'd vamped it up - not in a tacky or sleazy way, but enough to make her lips a searing red and bring out the full vivacity of her eyes. I puckered as if to let out a whistle, but didn't. \n\n\"Wow. You look fucking hot, babe.\" \n\nShe got a smile on at that, with only a twitch of awkwardness. \"Um, thanks. I guess ... you're not looking bad yourself.\" \n\nA little forced, but she seems to have the idea. \n\n\"So, I guess - come on in, right?\" she stepped aside, holding the door wide, gesturing into the boudoir. The move looked natural enough. But before her hand dropped, I thought I caught it shaking. \n\n\"Sounds good to me.\" \n\nAs I walked past her, I caught a whiff of freshly applied perfume, something fancier and more intoxicating than the light scent I'd caught from her back in the car. It occurred to me that the earlier smell must have been her deodorant, not perfume. The state she'd been in, she obviously wouldn't have gotten up and put on perfume to start the day. Duh. \n\nThe boudoir, so familiar, usually so calming to me, seemed to crackle with unexpected static energy, threatening to zap me if I touched anything. My chest felt tight. My pants - in the crotch area, at least - felt even tighter. I put a hand behind my head, scratching the scalp there. It's very strange having to force yourself to do something you're dying to do, but that's what it took for me to turn my head and look Kaylee up and down several times as she stood waiting by the door. \n\n\"Yeah, super-hot. This is still kind of weird for me, though. You said on the phone you're taking over for your mom - does that mean you're up for anything she'd be up for?\" \n\n\"Uh ...\" \n\n\"No, never mind. I can tell you're new at this - I won't ask for anything freaky.\" \n\n\"You can tell? How?\" \n\n\"Well, you look like you're about to shit yourself for one thing.\" \n\nHer face reddened, her mouth opened, and her eyebrows dipped downward before she caught herself and shrugged instead of saying whatever had just popped into her mind. \"Okay, yeah. I'm a little nervous. How do we get started?\" \n\n\"Let's have a drink. Sit down on the couch.\" \n\nFor the second time that evening, I went to the tiny refrigerator and returned with wine - two glasses this time. I found her sitting very straight as far to one end of the little loveseat as its arm would let her go. \n\n\"Here.\" Handing her a glass, I relaxed into the other corner (well, pretended to relax), my legs angled toward the middle of the couch instead of pointing straight out like she'd left hers. \n\nShe took the glass and gulped from it. \n\n\"Whoa!\" I laughed, then reached over to touch her wrist. \"Let's not get you too hammered too fast.\" \n\nLowering the glass, she twitched a nervous smile my way. \"Sorry.\" \n\n\"Don't be sorry.\" I sipped my own wine, then leaned to set it on the floor as I reached for my shoelaces. \"I'm going to take my shoes off here.\" \n\n\"I'll try not to faint.\" \n\n\"Ha, see, that's good.\" My angle, as I bent, put my head almost level with her flawless white knees. I undid my laces by feel, eyes magnetized by her legs and pulled up along their clean, lush length to the point at which they entered her shorts and framed the denim-tightening curve of her mound. Then I realized where I was looking, turned my face back to my shoes and got them off. \n\nKaylee had her eyes awkwardly pointed at her lap when I leaned back into the cushions. \n\n\"Sorry,\" I said, before I could help it. \"I didn't mean to be a pig. You're just - god, you're fucking amazing.\" \n\nThat made her smile and squirm simultaneously, but at least it got her eyes pointed back my direction. \"Yeah, well ... maybe this is going to be a little harder than I thought.\" \n\n\"Drink some more of your wine,\" I said. Then, out of nowhere, I added, \"And I'll tell you about the first time your mom and I did it.\" \n\n\"Jesus, TMI,\" she said, holding the palm of one hand toward me. \n\nI laughed. \"Not the filthy dirty bits. The part like this, where we were sitting drinking wine and one of us was freaking out. But in that case, it was me.\" \n\nLooking at me suspiciously over the rim of her glass, she tipped it up and drank - then touched her fingertips to her mouth as a little ladylike burp snuck past her. \"Oop. Excuse me.\" \n\nThe embarrassment seemed to do her good. I raised my glass toward her, then took a drink myself. \n\n\"So ... why were you freaking out.\" \n\n\"I'd never done this,\" I said. \"Paid for sex. My whole life I thought it was sleazy and disrespectful and, well, just plain wrong. But my wife had left me six months earlier, and the sex had been bad for a year before that, and when I went out to strut my stuff with my newfound freedom, I ended up feeling shitty after every one-night stand, because I was still too hurt to go for a relationship and I felt like I was just using women as meatbags.\" \n\nHer eyebrows furrowed. \"Did you lead them on like you were Prince Charming? Or were they just out for a quick hookup too?\" \n\n\"No, I was pretty straightforward. None of them wanted more than a night in the sack. But I still felt like a user. Like I ought to want to get their numbers, call them again, maybe ask them out for dinner and a real conversation.\" \n\nKaylee laughed and shook her head. \"Dude, sometimes girls just want to fuck too. Why would you feel bad about it?\" \n\n\"I don't know.\" I shrugged. \"Maybe I'm just a romantic. Anyway, when a buddy of mine told me about your mom, I decided, 'What the hell.' If I was going to feel like a user, why not go all the way and use someone who definitely, a hundred percent for sure did not want me to call her for dinner and a movie sometime?\" \n\n\"Not completely illogical, I guess.\" She tilted her glass up again, getting near the end of its contents. \"But you got here and lost your nerve?\" \n\nFiguring I'd better keep up with her, I took another swig myself. \"I wouldn't exactly say I lost my nerve. But I got pretty close. And I might have, if your mom wasn't your mom.\" \n\n\"What do you mean by that?\" Genuine curiosity had taken over her face by this point. \n\n\"Well, she got me drinking and she got me talking ... and she kind of tucked her legs up on the sofa with us like this.\" I demonstrated, drawing my knees up and angling my hips. The position brought my body perpendicular to the length of the loveseat, so that I faced directly toward her. My right arm went up onto the sofa back. \"Only I'm sure she made it look a lot more casual and natural than it looks on me.\" \n\nThe last of her wine drained away and she held the glass idly by its bell, dangling her hand off the arm of the couch. \"It's a little girly. But you're sorta carrying it off. So what then?\" \n\n\"She asked a lot of questions, like she cared about the things I was saying. And every once in a while, she'd shift a little - not a lot, not like she was trying to move toward me, just like she needed to reposition a bit to stay comfortable. But somehow, every time, she ended up an inch or two closer.\" \n\nAs I attempted to show her, she raised an eyebrow. \"Dude, that was more like six inches.\" \n\n\"She was way better at it than I am.\" My hand now rested above her shoulder on the seatback. \"And every inch closer she got, I realized a little more how incredibly sexy she was.\" I scooted again. \"I mean, at that point, she was, what, maybe only five or ten years older than you are now, right? So she still had it all. Not as supermodel hot as you are, but hot and sexy aren't the same thing, and she just poured on the sexy.\" \n\n\"And then what?\" she asked quietly, glancing down to where my knees all but brushed against her left thigh. \n\n\"She kept talking to me, and she got one finger in my hair, like this.\" I showed her, lazily curling a lock of shimmering red around my index finger. \"And she asked me some more questions, and she unfolded her leg across my knee like this.\" My calf inside my dress pants came to rest at the juncture of her locked-tight knees, and then she let them part, so that my left leg could hook over hers. Her breathing sped up. She looked at my knee atop her own. \n\n\"I'm ...\" \n\n\"Hmm?\" \n\nFragile-looking blue eyes came up to meet mine. \"Whooh. I'm starting to think I can really do this.\" \n\nI brought my hand down out of her hair to brush her cheek. \"Of course you can.\" \n\nLeaning outward, my fingers trailing down her throat, along her collarbone, I set my wineglass as far out from the couch as I could. Then I took hers from her loosened fingers and set it beside mine. \n\n\"What do I do?\" she asked, trembling. \n\n\"Don't do anything just yet. Let me do.\" I brought my left hand up to rest on her right knee, my right curling the fingers around the nape of her neck, gliding the side of my thumb along her jugular to the hollow behind her earlobe. She sucked in a breath and bit her lip and closed her eyes. \"You're a very beautiful woman, Kaylee. You deserve to have things done for you.\" \n\nWith a kneading grip, I slid my hand from her knee along her thigh, thumb questing patiently along a path toward her groin. \n\n\"To you.\" Simultaneously, I pressed the tip of my thumb against the fabric that stretched tight across her mound and leaned in to put my lips against her throat, behind the corner of her jaw. She gasped. I smiled and whispered, \"Yes, that's good, right?\" into her ear. \n\nShe nodded, quickly. I kissed my way down her neck to the graceful slender curve of her collarbone. Lower, my thumb dipped into the right leg of her shorts, squeezed tight between fabric and thigh-flesh, pressing firmly inward, deeper, until I felt the hem of her panties. She widened her legs, slouched her hips down. My thumb rounded the corner between pant-leg and crotch, feeling the soft curve of her mons through her panties. \n\n\"Oh god,\" she said. \n\nTonguing my way down her breastbone, I tasted the salty skin within her cleavage. My right arm curved around her neck, bringing my hand downward from trapezius to clavicle to the neckline of her blouse and in. \n\n\"Aahh ...\" \n\nMy thumb found the button of her clitoris, rapidly engorging. I massaged it gently, briefly, as my fingers circled her erect nipple within the blouse. \n\nWorking my mouth wetly back up to her ear, I said, \"In a second here, I'm going to take my hands out of your clothes, and then if you want me to, I can get up and go to that dresser along the wall. It's got a box of oral dams in the top drawer. While I'm getting one, you could get your pants off, and then I'll come back and eat you out through it.\" \n\n\"Oh fuck ...\" she gasped. \"Are you for real? You're going to pay me for letting you do that to me?\" \n\n\"What can I say?\" I asked, continuing to rub her clit. \"Nice Dennis is nice.\" \n\n\"Jesus,\" she said, then sucked her lip between her teeth a moment. \"Okay.\" \n\nEasing my hands from within her clothes, I stood up and looked her over, splayed in the corner of the loveseat, legs now apart and stretched out before her, nipples pressing hard enough against her blouse to be noticeable even through the silky blue frill. She watched me taking her in, and when I smiled she sort of involuntarily followed suit. \n\nThe black chest-of-drawers opposite the king bed took me just a couple of steps to reach. I opened the topmost one, where a bowl of condoms and the dental dams and a healthy supply of various lubes sat in neat, orderly arrangement. \n\n\"Why don't you stand up and turn around and show me how sexy you can be getting those shorts off? Just the shorts - I'd like to do the panties, if you don't mind.\" \n\n\"Uh, all right.\" \n\nMuscles glided within the satiny skin of those pale anaconda legs as she rose. Her eyes stayed on me when she turned, face angled my direction over one shoulder - halfway between smolder and mistrust. South of that face and north of those legs, her ass swelled the confining white fabric of her shorts to water-balloon smoothness: taut and full and curved as though the laws of physics could not allow any other shape. \n\nSwallowing hard, I stopped her as she worked at the top button of her shorts. \n\n\"Hang on a second.\" \n\n\"What?\" The smolder in her eyes tilted further toward mistrust. \n\n\"Could you just ... I don't know, bend over for a minute before you take those off? I'm not sure I've ever seen an ass and a pair of shorts that worked together that well.\" \n\nHer expression did a little sashay of gratitude and embarrassment, but she turned fully away from me and leaned into the arm of the sofa, pushing the white-clad heart of her bottom out even rounder and firmer. If the shorts had split at the seams, it wouldn't have surprised me. \n\n\"Wow. Yes. Hold that for just a second.\" My throat felt dry as Death Valley, and my cock screamed at me to haul it out and jerk the hell out of it right now. But I managed to fumble in the drawer for one of the dental dams and a bottle of lube ... and a condom. \"All right, stand back up before I come just from looking at that. Holy hell, Kaylee.\" \n\nWhen she looked over her shoulder again, her ambivalence had all gone to a glow. \n\n\"So you want me to take these off now?\" \n\n\"Fuck yes.\" \n\nUndoing three vertical buttons, she watched my face as I watched her hands slowly release the fasteners of heaven. Her zipper went down so gradually that it ticked instead of zitzing. With her thumbs in the waistband, blocked from my sight by her torso, she tensed her arms to start pushing. \n\n\"No, no,\" I begged, moving my hands in a horizontal circle, \"bring them all the way around before you do that.\" \n\nShe did, thumbs sharking between the waistband and her flesh, fingers trailing first down her hips, then across the high slopes of her buttocks, ending pinkie-to-pinkie in a wide-spread clutch like pale honey poured over a double dish of ice cream. \n\n\"Whoosh,\" I said. \"Okay, I'm ready to see what you've got inside those pants now.\" \n\nNodding, she pushed and wiggled, ass rolling side-to-side as the tight denim crept downward. The hue of her flesh showed only a shade or two darker than the shorts. When her panties came into view, they were ghostly pink. \n\nHer shorts dropped to the floor. I continued to stare. \n\n\"You want me to bend over again?\" \n\nYes, until the timer goes off in three hours! \n\n\"No ... how about if you sit back down.\" \n\n\"Sure.\" She pirouetted around and down into the cushions, landing with her legs wide enough for me to see three different colors in her panties - the pastel pink, a textured pink-red shadow where the panties trapped her bush, and an irregular dark patch the size of a quarter, centered on the spot where her cunt pushed into the fabric. \n\nI walked slowly toward her, stepping around our two wineglasses to stand in the V of her spread legs. Her chest moved with fast breaths as I approached. When I stopped, her eyes glanced to my left hand, which held the lube bottle and had the wrapped condom between two fingers. I tilted the hand to emphasize the rubber in its little crinkly foil package. \n\n\"I could have pocketed or palmed this while you were turned away and brought it out once I'd licked you senseless,\" I said. \"But I didn't want to spring it on you like that ... our first time.\" \n\nHer eyes stayed on the condom. Deciding whether to be alarmed? Then she met my gaze and eased her hips lower to hang her ass right at the edge of the couch. \n\n\"Thanks, I guess. But you had me at, 'licked you senseless.'\" \n\nI grinned, lowered myself to one knee and then the other, set the lube and condom down at the base of the couch. Once I unfolded the dental dam, I brushed the hem of her blouse up along her belly until it bunched together, riding her ribcage right at the breast-line. That cleared enough tummy for me to lay the latex sheet out on. Then I wrapped my hands around the backs of her thighs and leaned deep into her crotch where a few breaths of dank, musky female arousal confirmed the nature of that conspicuously located wet patch. ",
        "Tilting my head, I brought my lips a finger's breadth from her dampness and bathed her crotch in hot air from my lungs. Her thighs trembled in my hands. \n\nCircling my hands back up to rest on her panties, I quietly said, \"I'm taking these down now.\" \n\nShe nodded, her lower lip between her teeth again. \n\nBacking away a little while tugging at her underwear, I made enough room for her to bring her knees together and let the bikini-briefs slip past them. She stepped out of the panties and immediately thrust her legs wide again. \n\nMy eyes didn't know where to come to rest on the wonder we'd just revealed: the unruly auburn thatch, the bulge of her mons, puffy and clean, or the glistening pink lips that peeked out surrounding her cunt-hole. I knelt again, putting my hands on my knees to make sure a finger didn't leap out to bury itself in her, or, worse yet, that I didn't grab her by the butt cheeks and haul my salivating mouth down to latch on like a lamprey. \n\n\"Here we go then,\" I said, surprised that my voice had any steadiness to it at all, and that my hands didn't shake wildly as I reached for the dam with one and the bottle of lube with the other. Pinching the latex sheet and thumbing open the bottle simultaneously, I felt a momentary out-of-body sensation that this was really happening. And Gloria knows about it. And she's okay with it. I have to be dreaming. \n\nBut the smell floating up from Kaylee's hungry cunt and the sound of her rapid breathing told me that, no, I was definitely awake, and here, on my knees between the legs of a breathtaking young woman. \n\nTilting the bottle, I drizzled a streamer of lubrication right onto her clit. She flinched. \n\n\"Cold?\" \n\n\"Yeah. No, wait it's...\" \n\nI clicked the bottle shut, set it down, pulled the latex dam into place by its corner. \n\n\"Tingly, huh?\" \n\n\"Uh-huh. Fuck, and now it's getting really hot ...\" Her tone said I'd definitely picked the right bottle. \n\nHolding the top edge of the sheet in place with one hand - half-on and half-off her bush, so that those wine-and-ginger curls tickled my palm - I tucked the rest into place across and under her, then bent to seal my lips onto the taut, smooth barrier, feeling the muted textures of her twat through its surface. \n\n\"Ohhh,\" she whimpered. I began to lick and simultaneously massage the upper curve of her mons with the thumb and forefinger that I'd used to trap the dam in place. \"God, that's so good.\" \n\nI smiled against the not-quite-right tightness of the dental dam. Either Kaylee was learning very fast how to pump a client's ego, or I was really getting her off. \n\nReaching my free hand into her crotch with my face, I got a finger past my chin and stroked up and down her crease, pressing inward just a little farther with each pass, forcing the latex shield to dimple and then glide past her slickened lips, working more and more of its thin, rubbery substance up into her cunt. By now she was groaning and thrusting with her hips, ravenous for the pressure of my tongue and the intruding shape of my finger. I started fucking the dental dam in and out of her with that one digit, its dry, wrinkled hollow clinging to my finger with each stroke. My lips and tongue kept up their efforts on the swollen nubbin of her clit, which I seemed to feel more distinctly through the latex with every lunge of her pelvis. \n\n\"I'm getting close - \" she panted. \n\nI slurped and finger-reamed her through the dam. \n\n\"Oh god, oh fuck -\" She grabbed my head, fingers in my hair, and clutched me hard against her pubic arch. \"Denny - Denny -\" \n\nDo it, Brandy. Come! \n\n\"AAHHH! Hhhh-Ohhhh - uh! Ahuh! Ghuhhhhh...\" \n\nHer back arched high off the couch. One leg came up over the shoulder of my finger-fucking hand and dragged me against her along with her hands in my hair. \n\n\"FUUCKKK!\" \n\nWith a last, explosive gasp, she fell back, breathing like a steam train. \n\n\"Oh god, Denny. Good god.\" \n\nI kissed my way up her belly, bringing squeals and jerks from her body. Nuzzling her neck, I wrapped my arms around her. Hers drew up and around me in return. \n\n\"Let me know when you've come down enough for me to fuck you,\" I whispered into her ear. \n\n\"Oh god.\" \n\nWe held each other a while, me kissing and nibbling at her throat and earlobe, Kaylee going steadily more limp until her arms fell away to either side. \n\n\"Okay,\" she husked. \"Whenever.\" \n\nLifting up, I found her eyes closed in placid satiation. \n\n\"Correct me if I'm wrong,\" I said, unfastening my belt, \"but this seems to be going really well so far.\" \n\n\"Uh-huh.\" \n\nThe button went next, and then I unzipped. \"So ... that being the case, it may be time for me to start edging into Demanding Dennis.\" \n\nShe cracked one eyelid and opened her mouth as if to say something, right as I lowered my pants and shorts enough for my fiercely erect cock to pop out. Her other eye opened and her head lifted. \"Geez. You're really about to fuck me, aren't you?\"  \n\n\"I had the impression that was the plan all along,\" I said. \n\n\"Yeah, but ... damn, you're really ready.\" \n\nShe had that right. I'd been hard as rebar-reinforced concrete practically since she let me in the door, and pre-cum beaded and dripped at the tip of my penis. Reaching for the condom, I said, \"Guilty as charged. And Demanding Dennis needs you to be alert and participating, not just lying there in the afterglow with your legs open.\" \n\nWith a sigh, she unslouched just a little and said, \"All right.\" \n\nI tore open the little packet and got the condom out. \"No. Give me a little more enthusiasm.\" \n\nAn eyebrow went up, and she levered herself higher on her elbows. \"What, like, 'Wow, what a penis, I really want that in me?'\" \n\n\"Don't ask me,\" I said, rolling the rubber onto my shaft. \"Think of something yourself.\" \n\n\"Uh ... well, that condom looks pretty hot going on. I mean, a naked dick looks better than a condom dick, aesthetically, you know? But seeing the condom roll onto it - kind of charges me up.\" \n\n\"Better,\" I said, snugging closer between her legs, my clothed erection like a compass needle pointing north. \"But try not to use words like 'aesthetically' when I'm about to stuff my cock up your sex-hole. And don't say 'pretty hot,' say 'hot.' Don't say 'kind of charges me up,' say 'charges me up.' Now get your shirt off and let me see your tits.\" \n\nShe pushed up and struggled out of the blouse, saying, \"I never noticed it before, but bossy men with stiffies are a real turn-on.\" \n\n\"Now you're getting it. That's - whoa.\" \n\nShirt off, she leaned back and gave me a perfect view of her even-more-perfect breasts. They sat high and full, with the pride of youth and the luck of good genes. Gravity tugged them down and to the sides at the moment, but did nothing to spoil their rich, round beauty. Gloria's had probably looked like that at some point, well before I'd met her - she still had a great pair of knockers, even if they'd been around the block. But I hadn't seen breasts like Kaylee's in real life since college ... hell, I wasn't sure I'd seen any that good ever. As I stared, she cupped a hand under each and lifted and squeezed them together, lightly tweaking the nipples between thumb and forefinger. \n\n\"So what does Demanding Dennis want me to do with these?\" \n\n\"Can you get one up to your mouth?\" \n\n\"What, like this?\" Lifting her right breast, she craned her neck, stuck out her tongue and ran it wetly around the areola, then licked the nipple itself, which jutted out like a fingertip. \n\n\"Uh-huh. Now let me have a turn.\" \n\nHer face moved back, but her hand kept the breast raised, the brown nub and puffy ring around it pointed toward me. I leaned in, sealed my lips on it, and suckled. \n\n\"Ooh!\" she said - not from my tongue rolling her nipple around, but because leaning forward had bumped the tip of my cock against her mound. \"Fuck, that's getting me really hot.\" \n\nI kissed my way up to her neck, felt the pulse with my lips - fast enough that I knew what she was saying wasn't entirely an act. \n\n\"Open wider, then, and let me fuck you.\" \n\nHer legs scissored even wider, brought her feet up to rest the heels on the lip of the cushion. I rose to stand on my knees, letting my cock home slowly in on the shining damp slit of her pussy. \n\n\"God damn, this is going to be good,\" I said. \n\n\"Fuck me like I've never been fucked.\" \n\nI plunged in. \n\n\"NGhhuh!\" she grunted as I slid all the way to my root, smacking my pubes down against her clit. \"Fuck, yes!\" \n\nAs good as that had felt, it looked even better - and pulling back out, until only the head remained in her, looked better still: the condom gleamed with her juice, and I'd swear I could see the throb of the veins along my shaft. \n\n\"More,\" she insisted. I thrust again, a long, steady, heady penetration into her depths. \"Yes, Denny, god, your cock.\" \n\nI bent, latched my mouth to her tit, and started fucking. \n\n\"Ah! Ah! Ah!\" she cried in time with my strokes. \"Yeah, damn, I've never done it like this.\" \n\nMy tongue dueled with the engorged bead of her nipple inside my mouth. My hips drove forward and back. My cock sluiced through her, shielded from the full glory of her cunt by its latex wrapper - probably the only reason I didn't come embarrassingly soon. \n\n\"Shit, Kaylee,\" I gasped, releasing her nipple to pant for breath. The sound of my belt buckle clinking against the couch with every thrust made a crude, lusty soundtrack for my humping. \n\n\"Gonna come, Denny - I'm gonna come -\" \n\nThat sounded a little forced to me, but I didn't care. It pushed me right up to the edge anyway. \n\n\"Ooh ... Kaylee, Kaylee ...\" \n\n\"Coming! AHH, yes, coming!\" Her heels hooked around me and tugged me in. Her hands went wildly to my back and clawed my flesh through the fabric of my shirt. \"I'M COMING SO FUCKING HARD!!\" \n\n\"FUCK!\" A steam boiler went off beneath my nuts, and I helplessly emptied myself into her in gouting, spasming spurts. \"Uhh, hoohh, unghhh ...\" \n\nThe finger talons relaxed along my back, smoothing the cloth they'd been digging through and caressing my shoulders and spine. Several more throbs weakly filled out the condom within her vagina. I lay atop her with my chin hooked over her shoulder, nose pressing into the loveseat's cushiony backrest. \n\n\"Damn, that was a rush,\" Kaylee said. \n\nI let out a few more panting breaths. \"Did you really come?\" \n\n\"No. Did you buy it? I felt like I was totally faking you into blowing your load.\" \n\n\"I bought it enough,\" I said, shifting so that I could look her in the face and give her a grin. \"Kind of a power trip, I take it?\" \n\nShe nodded. \"For being so Demanding, Demanding Dennis seemed pretty easy to wrap around my finger.\" \n\n\"Don't get too cocky. You haven't seen Dick Dennis yet.\" \n\n\"Well if he shows up soon, I think I can take him. Feels like I'm on a streak.\" \n\nMy cock pulsed again inside her. I took hold of the condom's rim and pulled out, sitting back on my heels. \n\nKaylee, flush with sexual success and the self-assurance of youth, really did look like she could take on the world. Which made my job as Dick Dennis way harder than my Demanding and Nice faces had been. On the one hand, I couldn't let Kaylee go into her first real trick thinking it would be as easy as what we'd just done. Maybe it would be, and she'd do just fine. But if this Marty guy Gloria had talked about really dumped it on her hard, her false confidence would make the crash twice as bad when he was done. \n\nOn the other hand, if I pushed too hard as Dick Dennis, I might scare her off of the business completely. Which might not be a bad thing - except that it would probably also ruin any chance of her ever trusting me again. \n\n\"What are you thinking about?\" she asked. \n\n\"I'm thinking about how to how to break your streak and then rub your nose in the cum-puddle I'm going to spew out from having you service me.\" \n\nHer eyes narrowed. \"Dick Dennis already?\" \n\n\"Don't call me that,\" I said, unbuttoning my shirt with sudden determination. \"Call me Mister Dennis, Sir.\" \n\n\"Really? Because I thought Dick Dennis would want me to do some things wrong so he could teach me a lesson.\" \n\nI dragged off the shirt and the undershirt too, both of them damp and the undershirt soaked from the fucking I'd just given her. Without warning, I chucked the t-shirt right at her head. \n\nShe dodged and batted it down with one hand. \"What the hell?\" \n\n\"Bury your face in that and suck in some deep breaths through your nose.\" \n\n\"Fuck, you really are a dick.\" \n\n\"Do it. And say, 'Yes sir, Mister Dennis, Sir.'\" \n\nGlaring, she took hold of the shirt. \"Yes sir, Mister Dennis, Sir.\" \n\nHer nose wrinkled as she lifted the sodden shirt toward her face. \"Whew, Jesus.\" \n\nWhen she pressed her face into the wet fabric, I slid quickly over to grab the dental dam from where it had fallen on the floor earlier. I made a pouch of it for two of my fingers, making sure I got the floor side in against them. Then, just as a little gagging noise came out of her and she started to lower the shirt, I lined my fingers up and jammed them all the way into her cunt. \n\n\"Agh! Fuck!\" she jerked and dropped the t-shirt and tried to wriggle away, but I kept the pressure on and followed her hips, vibrating my fingers inside her. \n\n\"Hold still.\" \n\nShe stiffened and sat there. With her hips no longer trying to squirm out of reach, I was able to start finger-fucking her with the oral dam. After a minute or so of squelching, slippery finger sex, she said, \"I'm really not liking this.\" \n\n\"You're not supposed to like it. I'm supposed to like it. That's your job, right? Letting me do things to you that get me off.\" \n\n\"I guess,\" she said sullenly. I reached up and tweaked a nipple. \"Ow! Hey!\" \n\n\"How do you say it? Not 'I guess.'\" \n\nThrough clenched teeth, she replied, \"Yes sir, Mister Dennis, Sir.\" \n\n\"Good.\" I kept hand-reaming her for a while as we stared at each other. Fuck. What's going on in her head? Is she remembering this is an act? Is she putting on an act for Dick Dennis? Am I making her hate me? \n\nOne thing was for sure: I wasn't going to get hard again from this situation. \n\nPulling my fingers out, I shook the dental dam loose so that it flapped lubily to the floor. \"Okay, enough foreplay for you. Now it's time for you to get me warmed up. Go get a couple more condoms.\" \n\n\"Yes sir, Mister Dennis, Sir.\" She got off the couch like she couldn't get far enough away from me fast enough. While she retrieved the condoms from the dresser, I stood up and got my pants the rest of the way off, then my socks. My dick hung limply between my legs, the cum-filled rubber still dangling from it. I walked over to the bed, flung back the sheets, and climbed onto the mattress on my knees. \n\nKaylee turned and took a step toward me, looking nakedly vulnerable but also defiant. \n\n\"Wait,\" I said, putting up a hand. \"Get some lube too. Gel, not the liquid.\" \n\nAs she turned back to the drawer, I admired her back and her ass. Still not a twitch from my dick, though. \n\n\"Put those on the nightstand,\" I said as she reached the foot of the bed with two condoms and a tube of gel. Then I patted the sheets in front of me. \"I want you on your back here for a minute.\" \n\nShe did what she was told, though without another Yes sir, Mister Dennis, Sir. I was actually just as glad for that - it made me feel like shit. \n\nSettling in on her back, she forced her gaze up at me, which meant she couldn't avoid seeing my pendulous cock and its spew-swollen rubber. I moved closer so that it drooped directly above her left shoulder. \n\n\"Take this off me.\" \n\nShe screwed up her face, but lifted a hand and tugged at the condom, then brought her other up to unroll it a bit until it slid loose. \n\n\"Now pour it onto your tits and smear it around.\" \n\n\"Ew.\" \n\n\"What?\" \n\nGruffly, she said, \"Yes sir, Mister Dennis, Sir.\" \n\nIt took her a couple of false starts before her nerve let her upend the latex tube and drip the gloppy leavings of our earlier sex onto her chest. Flipping the condom away, she brought her hands down to her breasts and began massaging my cum across them. \n\n\"Yeah, that's it,\" I said, watching her squeeze and knead herself, frosting her bosom with ejaculate. Despite my unease at treating her this way, it was a really hot sight, and at last I felt a hint of an erection stir. \"Okay, now we're talking.\"  \n\nI leaned across her - forcing her to twist her neck to keep my still-wet cock from slapping a cheek. From the nightstand, I grabbed one of the condom packets and ripped it open. Sitting back on my heels, I maneuvered the disc into place and unrolled it quickly along my still-soft but thickening prick. Then I knelt over her head and offered it to her. \n\n\"Suck.\" \n\nShe opened her mouth with a look of disgust, then lifted it to surround my cockhead. The tender touch of her lips worked like magic to stiffen me up. I thrust down while I watched her continue to play with her boobs, the coating of semen now rapidly drying to a sticky mess. \n\nHoly shit, that feels good, I thought, still feeling guilty, but with the physical pleasure starting to push that emotion back into the shadows. Kaylee bobbed her head up to swallow me in slow strokes - her eyebrows furrowed and the tendons of her neck standing out. It obviously wasn't a comfortable position for her to be blowing me from. But that didn't matter because I quickly got back to full erection, at which point I withdrew from her mouth and flipped around to get between her legs.  \n\n\"I don't think I'm ready,\" she said in an unhappy tone. \"Are you going to use the lube?\" \n\nFor a second I considered working up a dollop of spit and dropping it right onto her snatch. But Dick Dennis was only supposed to be a dick within the confines of the rules, which said no mixture of bodily fluids and orifices. \n\n\"If you want it, you get it,\" I said instead. \n\nI'd already lowered myself over her, which forced her to strain to reach the nightstand. I could have shifted to make it easier on her, but I didn't. My only compromise was to lift up my hips so she could reach between us and slather the gooey gel onto the condom around my dick. \n\n\"As long as you're down there, guide me in,\" I said. \n\nShe stared up at me, said, \"Yes sir, Mister Dennis, Sir,\" and brought the tip of my penis into alignment with her hole. \n\nI went in fast and rough, the overdone coating of lube making the glide smoother than I intended, although it still brought a glottal sound of discomfort from her. \n\nWhat had Gloria called the Marty guy? A pump-and-grunter. Right. \n\nPressing my weight against her, I grabbed her shoulders with both hands and began to thrust. On every in-stroke, I squeezed an animal noise from my throat - a pleasureless rutting sound with no happiness to it, only an insistent demand for orgasm. \n\n\"Uh, uh, uh,\" I panted and plunged, mechanically, ceaselessly, without variation. \"Uh, uh, uh.\" \n\nKaylee lay motionless beneath me. I had my mouth in next to her ear, so I couldn't see what kind of expression she wore. After several minutes of vulgar thrusting, I broke my scratched-record grunting to say, \"How's that feel, huh?\" \n\n\"I don't like it, De- Mister Dennis. Sir.\" The quaver in her voice sounded more real than I wanted it to. \n\n\"Uh, uh, uh, what, is my cock not big enough for you? Uh!\" \n\n\"No, it's big ... Sir.\" \n\n\"Uh, uh, uh, is it not hard enough?\" \n\n\"No, Sir, it's hard. It's just ...\" \n\n\"Uh, uh, uh.\" \n\n\"It's ...\" \n\n\"Uh, uh - wait.\" I lifted up, no longer humping. \"I know.\" \n\nShame and disgust were written all over her face. \"You do? What?\" ",
        "\"It's in the wrong hole. You need it in your ass.\" \n\nHer eyes shot wide. \"Oh my god, no.\" \n\n\"Yeah, you need to be buttfucked hard until you scream.\" Quick as I could, I pulled out and wrestled her over onto her stomach. \n\n\"No, really, no, stop ...\" She twisted and writhed, but my weight had her pinned in place, and I ground the sloppily lubed bar of my cock between her ass-cheeks. \"Dennis, no -\" \n\nI worked a hand between us, repositioned my dick, found the dimpled entrance to her bottom with its tip. \n\n\"Oh yeah, this is gonna be good. Get ready for it, baby.\" \n\n\"No, Dennis - SCORN!\" \n\nI was off her in a heartbeat, electric relief shooting from my chest out through my arms. \n\n\"Oh, thank god, Kaylee, I thought I was going to have to stop and remind you.\" \n\nShe froze, having scrambled halfway off the bed, her breathing wild and eyes wilder. As my words sunk in, the panic subsided to mere anxiety. \n\n\"You ...\" \n\n\"Are you okay? I could tell you were at least a little scared but I didn't know how much of it might be an act, and I didn't know whether you remembered about the safe word.\" \n\nSearching my face - which I hoped looked as concerned as I felt - she untensed, at least slightly. \"If I hadn't said it, you wouldn't have ...\" \n\n\"God, no,\" I said, looking down at my dick, which had shriveled completely by this point. \"I was already losing my hard-on when I pulled out of your pussy. It wouldn't have gone in even if I'd tried. Which I promise you, I was never going to do.\"  \n\nShe put her face in her hands, shuddering. \"Oh my god.\" \n\n\"Would it help if I came over and held you?\" \n\nInstead of answering, she rushed up and into my arms, tears rolling down her cheeks. \"Dennis, I was so scared.\" \n\n\"I'm sorry, baby.\" I stroked her hair and rocked us back and forth. \"I'm sorry.\" \n\n\"What if - what if one of them does something and I say the word and he doesn't stop?\" \n\n\"They all stop, Kaylee.\" I'm not sure I sounded or felt very convinced of that, but I went on anyway. \"Gloria's only told me about one time where she even had to say her word more than once.\" \n\n\"But what if they don't?\" \n\n\"Do you know how to shoot a gun? I'll show you where your mom's got one and a can of mace.\" \n\nShe pulled back and looked at me, bright blue eyes finding something in my face that they hadn't seen there before. \"Jesus. You really wanted me to know what I was getting into, didn't you.\" \n\nI nodded and brushed a strand of red hair from her cheek, where tears had stuck it to the skin. \"Yeah. I've never been that ugly with your mom, no matter what we were role-playing. But I know she has some clients who get off on being shitty.\" \n\n\"Whoosh.\" Her breathing had calmed down. She looked drained and exhausted now, but no longer petrified. \"I guess that's a good thing. After Nice Dennis - and even Demanding Dennis - I was thinking, 'What the hell am I going to school for? Mom was right, this is really a pretty good job.'\" \n\nI kissed her forehead. \"Well, I knew it was crappy of me to be Dick Dennis with you. But I thought it would be even crappier to give you the wrong impression about what things were really going to be like.\" \n\nA muddled, half-grateful look came over her, but she didn't talk. Instead, she just nestled her face back in against my shoulder. I held her for a while in silence. \n\n\"So,\" I said, when I thought enough time had passed. \"Now that you have the whole picture, do you know what you're going to do? Do you really want to go through with it?\" \n\n\"Well,\" she said, \"I don't quite have the whole picture, do I?\" \n\n\"What do you mean?\" \n\nShifting to look at me, she raised one hand and rubbed the fingers together. \"I still don't know what it's like to get paid.\" \n\nI smirked. \"That part usually happens when I'm dressed and ready to leave. Give me a second to get my clothes on.\" \n\nBut as I started to move away, she grabbed my arm. \"I don't think that's going to work.\" \n\n\"What do you mean?\" Her grip on my bicep, her tone, and the look on her face all seemed like they should be telling me something, but I didn't get it. \n\n\"I mean, you're not Nice Dennis or Demanding Dennis or Dick Dennis anymore. You're not Client Dennis at all. You're Denny, my mom's friend who brought us Thanksgiving dinner, who for some reason really cares about what happens to me even though I've only ever been crappy to him. All it's going to feel like taking your money is that I finally understand you're a really good guy.\" \n\nThat warmed something up inside me, but I could tell she meant more by it than just an expression of gratitude. \"Okay, well, I guess I screwed up the payment part. I don't know what to do about that, though.\" \n\nShe looked at me like I was stupid, which actually felt more comfortable and familiar than the soft, appreciative look she'd had a moment before. \n\n\"You don't? I thought it was pretty obvious you have to fuck me again,\" she said. \"As Nice Dennis or Demanding Dennis though. I don't need any more Dick Dennis lessons.\" \n\n\"You're serious.\" \n\nGlancing at the clock, she said, \"We're still way under three hours, and I need to hold some whore money in my hands. I can't know for sure what I'm going to do without that.\" \n\n\"Wow.\" I should have guilty, that it would be wrong to take advantage of what she was asking. But what I felt instead was my cock starting to stand back up. \"Then ... Nice Dennis or Demanding Dennis?\" \n\n\"Demanding Dennis, I think,\" she said. \"There can't be all that many Nices on Mom's client list, and I bet none at all as nice as you. Demanding Dennis is probably better practice.\" \n\nThat's a really good point. \n\n\"Right, then. Uh, is there anything else you want to say before I go back into, uh, client mode?\" \n\n\"Yeah.\" She leaned in and kissed me on the cheek. \"I'm really glad my mom knows you.\" \n\nI flushed, blood surging in both my face and my groin. \"Thanks. That's really sweet of you.\" \n\n\"You're welcome. And now Sweet Kaylee is signing things over to Slut Kaylee. What does Demanding Dennis want Slut Kaylee to do?\" \n\n\"Nothing,\" I said. \"Demanding Dennis says your name is Brandy for the rest of tonight. And Demanding Dennis wants you to go wash that other guy's cum off your chest and then come back and ride him cowgirl style while he gropes that fantastic rack of yours. Incidentally, Brandy is pretty surly and resentful about having to fuck Demanding Dennis. She feels like he's taking terrible advantage of her. But she always comes anyway.\" \n\n\"Sure,\" she said, reaching in to pat my erection. \"I'll be right back.\" \n\nWhile I lay on my back and the tap ran in the powder room, I wondered what Gloria might be thinking about this, right now, in her hospital room. Assuming she's not knocked out from the pain meds. I couldn't figure it out for sure, but apparently my cock was convinced she wouldn't be thinking anything bad, because it stayed pointed straight up the whole time Kaylee was in the bathroom. \n\nAfter a few minutes, she returned, breasts pink and dry from a fresh scrubbing. I ordered her to put the condom on me, and then she crawled onto the bed and into place atop me. \n\n\"God, Brandy,\" I told her. \"Your body is so fine.\" \n\n\"Yeah, sure. Let's just get this over with.\" \n\nShe angled herself, then slid down onto me and began to grind. \n\n\"Oh, yeah. Fuck me like that, baby.\" \n\n\"I'm fucking,\" she grumbled. \"Doesn't it feel like I'm fucking?\" \n\nHer cunt drooled so wetly along my shaft that I felt the fluid running past the condom and into my pubic hair. \n\n\"It sure does. Push your tits out for me.\" \n\nShe arched her back, lifting and emphasizing her amazing breasts. I put my hands up to them, clutched and rolled them around, marveled at their richness, fullness, softness. The slide and stroke of her crotch against mine, her vagina around the tower of my dick, matched the rhythm of my kneading as she stared coolly down at me. \n\n\"You look like you want to bitch at me about something,\" I said, stifling a groan as she hit a particularly good downstroke. \n\nShe folded her lips in as if to wet them before speaking. \"I just always wonder why a dirty old fuck like you thinks it's okay to make a nice college coed whore herself to him.\" \n\n\"Ha,\" I said, then, \"Oh, yeah, keep doing that. Mm-hmm. Why? Because I can, sweetheart. Because a dirty old fuck like me is never going to get a nice college coed to be his girlfriend, so I might as well settle for the next best thing.\" \n\nFor a second, something soft in her face looked like she might argue with me about whether a nice college coed would want to be my girlfriend. Then she hardened up her features and said, \"Damn right. In fact, I don't know how a dirty old fuck like you could get any girlfriend at all. The best thing that's ever going to happen to you is if you get to be with a really nice whore.\" \n\nI couldn't help smiling at that, even though it pushed me totally out of character. Kaylee sped up her motions, screwing me with delicious, quick rolls of her hips. \n\n\"You like that idea, huh? Some really sweet, smart, funny whore who'll get you off and act like you're some kind of gentleman and make you wish you really deserved her. Well, dream on, you nasty prick. *Nff* ... ohh ... but - but if you ever find her, all I can say is, if you find her, gnhh - shit - you damn well better treat her better than you treat me.\" \n\nShe gave up the act then and just fucked me, face squeezed tight in the heat of sexual frenzy. \"Fuck ... oh, fuck, Dennis ...\" \n\n\"Yeah, Brandy. That's it ... ooh, that's it ... who's a good girl? Who ... ahhh - who needs some cum up her snatch?\" \n\n\"Uhhh, god. Uhh, god, I'm coming ...\" \n\n\"Shit, me too, Brandy - do it, girl, do it -\" \n\n\"AH-AHAH - AHHH!\" She curved backward, making an almost perfect semicircle from her throat down her chest and along her belly. \"YE-EHSSS ...\" \n\nA squeezing pulse of orgasm tremored through her cunt, pushing me over the edge. I cried out her name - her real name, Kaylee - unable to help it as joy ricocheted through my body to burst loose as a fountain of bliss inside her. Up and up I shot my ecstatic wonder, burning through my entire form as this gorgeous young woman rode me to a peak of love - love for her, love for her mother, a crazy tangle of love and sex that shivered through me and tried its best to fill her from belly to braincase. \n\nThen, done, she fell down onto me, trembling, and I wrapped my arms around her and held her. She didn't pull away until the chime sounded, by which time she'd recovered enough to get back in character. \n\n\"Okay, time's up, prick,\" she said, rolling away so that my condom-covered dick flopped out onto my belly. \"Get up and get dressed and give me my damn fuck money.\" \n\nI groaned and rose from the bed, slowly, every inch of me fighting the need to leave that place of pure, warm comfort behind. It took most of the time I spent dressing to get my head together and work at playing my part right. \n\n\"Sheezus,\" I breathed, tugging out my wallet once I had everything on. \"You really wore me out, you little hussy. For such a prissy tight-ass, you sure can fuck.\" \n\n\"You should kick in some extra, then,\" she sneered. \"Except we both know you're too cheap to do that.\" \n\n\"You'd only waste it on some college learning, darling. Why would I encourage you to go and do that when you're so good at blowing and boning? Here. Four-fifty. While you're spending it, think about all the fucking it's going to get me over the next month.\" \n\nI slapped the money into her hand, then watched as she unfolded and slowly counted it. \n\n\"Holy shit,\" she breathed. \n\n\"That's right, honey. You earned it all. Your momma would be proud.\" \n\nShe looked up at me then, and a brief moment of tension held us both suspended. Not being in her head, I couldn't tell for sure what went on with her during that moment, but for me, it was a fight against an overwhelming desire to grab her up in a hug and not let her go all night. \n\nThen the moment passed, and she snarked, \"My momma will be proud. And don't think I'm not going to tell her all about it. Now there's the door.\" \n\nI got my feet in motion, unlatched and opened the door. Then, with one shoe in and one shoe out, I turned back and mimed a tip of a hat to her. \n\nShe rolled her eyes and waved me away, and I shut the door behind me. \n\n* * * \n\nI was at the hospital by quarter of nine the next morning, waiting for visiting hours to start. When the floor's receiving nurse let me in, I went straight to Gloria's room with a moderately giant arrangement of flowers. She laughed when she saw them. \n\n\"Oh, those are perfect, Denny,\" she said. Her voice and her laugh both sounded tired, but whole. \"Not too small to make a girl feel better, but not so big that she starts to wonder if you're trying to make up for an indiscretion.\" \n\nI cleared my throat and brought the flowers in, finding a spot on the bedside table to set them. \n\n\"You look good,\" I said, which was completely untrue in the sense that her eyes still had sickly dark bruise rings around them and the cuts and bandages and disarrayed hair remained as they'd been the day before. But it was also completely true in my heart. And it made her laugh again, which meant it was the right thing to say. \n\n\"You look good too,\" she replied. \"If I wasn't so doped up on pain pills, I'd make you get in this bed and fuck me, cast and all.\" \n\nI glanced over at the door, then stepped close and leaned down where I could say, without fear of being overheard, \"Well it's good you're on the pills, then, because I didn't bring any condoms. Kaylee and I used protection, but the rules still say I'm out of the no-condom club for a couple months, right?\" \n\nThat made her laugh even harder, until her eyes rolled up and one hand went to her ribs. \"Oh, ow, ow. Haha ...\" \n\n\"Are you okay? I guess I'm even funnier than I thought.\" \n\nShe slumped in the bed, hand still on her ribcage. But the smile stayed on her face. \"Oh, Denny. You don't seriously believe there was ever a no-condom club, do you?\" \n\nMy face went red, and I just scratched behind my head. \n\n\"So tell me how it was,\" she said. \"And you should pull up a chair, because I want details.\" \n\n\"Really?\" \n\n\"How else am I going to know if you got her ready?\" She pointed to a chair in the corner. \"Besides, I'm pretty much the nosiest mother in the world.\" \n\nDragging the seat over, I sat down and tried to think how to start. \n\n\"Well, uh ...\" \n\n\"Don't think about it so much,\" she said. \"First off, was it good?\" \n\nI met her eyes. They said she genuinely wanted to know. \n\n\"Parts of it were incredible,\" I said honestly. \"And parts of it were absolutely awful.\" \n\n\"Give me the awful parts first, so I know how worried I need to be about her.\" \n\nWith a deep breath, I told her about moving from Nice Dennis to Demanding Dennis to Dick Dennis, giving her a full description of the last of those and how terrible it had been to treat Kaylee the way Dick Dennis had. She nodded grimly through most of it, but when I was done, she looked relieved. \n\n\"That was perfect,\" she said, reaching a hand out, palm up, toward me. I took it and held it and she went on, \"Don't feel bad about it - that's exactly what she needed you to do.\" \n\nI shrugged, a little less guilt-crushed, but not feeling entirely absolved. \"Sure, but I can't help feeling bad. I was -\" \n\n\"No, you weren't,\" she said. \"You were careful and deliberate and concerned. Forcing yourself to do unpleasant things doesn't make you unpleasant, Denny. It just shows what you're willing to go through for other people. If you'd spent the whole time being Nice Dennis to her, that's something you'd need to feel bad about.\" \n\n\"I guess.\" \n\nShe patted and squeezed my hand. \"So did Dick Dennis scare her off?\" \n\n\"No,\" I said, shaking my head. \"She texted me while I was on the way home, asking if I would come today and listen from inside the house so that she'd feel safer for her first couple of appointments. I told her I'd be there by eleven.\" \n\nAfter a slow nod, she looked away for a moment. \n\n\"Is that okay?\" \n\nA humorless laugh whiffed out through her nose. \"I think that's the most complicated question you've ever asked me.\" \n\n\"How so?\" \n\nHer eyes settled blue and deep on mine. \"Well, it's good-news/bad-news/crazy-news/mind-numbing-news, isn't it? My daughter is about to do something that I would never, ever, ever want her to do. Because it's going to permanently change the whole way she looks at life. What kind of mother would be glad about that? But I am glad, because if she didn't I'm pretty sure we'd end up out on the street.\" \n\n\"No,\" I said. \"Not on the street. But it might get pretty uncomfortable if I had to put both of you up in my apartment for any length of time.\" \n\n\"You're so sweet. Anyway, I'm just ... I'm full of relief that she's going to do it, that maybe she can keep us afloat until I'm back on my feet, that I won't have screwed up her whole college career getting myself t-boned by some drunk idiot. But then I think about Marty Harris, and how in ...\" She glanced over at the clock. \"...three hours, he's going to be on top of my little girl. And then I think about you, how you're going to be there to protect her, to help her, how you showed her ...\" \n\nTears started from her eyes, and her throat choked off whatever else she might have meant to say. I stood up and leaned over and took hold of her as gently as I could. \n\n\"Oh, Denny,\" she gasped, \"thank you so much.\" \n\nShe held tight to me for a while, then, until her body stopped shaking and her sniffles had quieted down. \n\nWhen she let go, I smoothed her hair and kissed the unbruised side of her forehead. \n\n\"Don't worry,\" I said. \"In the end it's all going to be good news. Okay?\" \n\nHer eyes searched mine, and whatever they found put some of the humor back in her face. \"Not all of it,\" she said. \"There's one more piece of bad news.\" \n\n\"Oh? What?\" \n\n\"You're off my client list, Denny.\" \n\nI waited, trying not to hope that she meant what I wanted her to mean by that. \n\n\"Sunday night hurt,\" she said, knocking on the hard surface of her cast beneath the sheet, then running her fingers up and across her ribs. They didn't stop there, though. They kept moving up, to the center of her chest, where she pressed her hand flat staring at me. \"And this is where it hurt worst. I was lying there, screaming from the pain, sure I was going to die, just kicking myself over and over again. Because whenever I blinked away the stars and had a second that wasn't agony, all I could think was, 'Oh no, Denny. He's never going to hear me say it. He's never going to get to be with me as me. I'm going to die, and all I ever gave him was the whore part of myself.'\" \n\nAs always, I couldn't help scowling when she said that word. \"That's not all you ever gave me.\" \n\n\"Of course it isn't, sweetie,\" she said, reaching up to my cheek. \"I didn't say I was rational when I was thinking that. But it's the most awful I've ever felt, and I'm not ever going to let myself feel that way again.\" \n\n\"So you could handle ... us being together? And still do what you do?\" \n\n\"Good god,\" she laughed. \"If you can handle it, I sure don't have any excuse for not being able to.\" \n\n\"But you said before - I mean, you didn't actually say, but you implied ...\" \n\n\"Yeah. I was scared.\" She looked like the admission lifted something off her. \"You've been hurt, Denny, and I've been hurt. But bleeding there in that mangled mess of my car, with glass in my head and maybe a chance I wasn't ever going to see you again, I realized there's way worse ways of being hurt. And missing out on you is definitely a worse hurt than whatever's going to happen if I let you in.\" ",
        "I couldn't say anything to that. It was like every dream I'd ever had coming true. \n\nGloria took my hand and squeezed it tight. \n\n\"I love you, Denny.\" \n\nThe world seemed to float and flicker around me. For a second, everything turned the blue of her eyes. All I could manage was a whisper: \n\n\"I love you too.\" \n\nThen she smiled, and I leaned and kissed her, and everything was good."
    ],
    "authorname": "IanSaulWhitcomb",
    "tags": [
        "prostitute",
        "daughter",
        "role-play",
        "reluctance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/glorias-daughter-ch-03"
}