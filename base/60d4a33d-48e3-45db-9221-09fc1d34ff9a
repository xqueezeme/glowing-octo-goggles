{
    "title": "Ginger Gangbangs the Gorillas",
    "pages": [
        "\"Ginger, did you ever do a Gorilla?\"\n\n\"What, Taylor, is that a hint you want to go to the zoo?\"\n\n\"No Ginger, it's a serious question.\"\n\n\"Well, what kind of gorilla are we talking about here? The mountain gorilla? The lowland gorilla? Or\u2014\"\n\n\"Ginger!\" Taylor interrupted, \"I'm talking about the Glasgow Gorillas!\"\n\n\"They have gorillas in Scotland? That's a new one on me.\"\n\n\"A somewhat local soccer club, silly girl. Glasgow is a little borough northwest of Pittsburgh. Don't tell me you never heard of it. About a hundred people live there.\"\n\n\"It does sound familiar for some reason. I've never met any of those dudes on that soccer club.\"\n\n\"You will be meeting them soon, and they probably will be meating you.\" Taylor giggled.\n\n\"Huh? What in the world are you talking about, Taylor?\" Ginger snapped.\n\n\"They are having a friendly to celebrate Nude Day.\"\n\n\"What's a friendly? Sounds kinky.\"\n\n\"Oh, it's a soccer match that doesn't count for the standings or something like that.\"\n\n\"Who are they playing? As if I really care.\"\n\n\"Us. Our soccer team.\"\n\n\"We have a soccer team?\"\n\n\"Sure we do, Ginger. All the other girls in our sorority are playing. At least the ones who are around this summer.\"\n\n\"I didn't know the other girls played soccer, except me, in high school.\"\n\n\"Yeah, you were like a star so I heard.\"\n\n\"Made all-city. I even got a couple scholarship offers, but I wanted to go to a big school like ours, and I wanted to concentrate on my studies not sports.\"\n\n\"Ginger, you don't study at all.\"\n\n\"We are off for the summer, Taylor, why would I be studying?\"\n\n\"I never saw you studying last semester. Ever.\"\n\n\"Hey, I got all A's, didn't I.\"\n\n\"How in the world did you do that? Without having an advance copy of the exams?\"\n\n\"Did you ever wonder why the knees on my jeans look so worn out?\"\n\n\"I thought you bought them that way.\"\n\n\"Yeah, right. Now why would I want to play in a soccer match against some dipshits called the Glasgow Gorillas?\"\n\n\"Because you have so much to gain?\"\n\n\"Oh, like what?\"\n\n\"Why do you want to get all A's?\"\n\n\"Top grades equal a better job, which means more money. Not to mention that my father pays me $100 for every A.\"\n\n\"There you go. The reason why you are going to play in this soccer match along with the rest of us.\"\n\n\"Money? Who would pay to watch a bunch of us play soccer? Get real, girlfriend. The World Cup is going on and people can watch it on TV for free. I'm sure we would really suck.\"\n\n\"Exactly!\"\n\n\"Taylor, you are really pissing me off! Just tell me!\"\n\n\"Okay, okay. Don't go having one of your psycho-bitch drama queen hissy fits. Out of these 100 people who live in the borough of Glasgow, 40 are men between the ages of 18 and 44. Half of those 40 are on the Gorillas. Although the two oldest ones are coaches.\" Taylor paused, looking for a reaction.\n\n\"Yeah, so what? I'm not impressed.\"\n\n\"Everyone who lives in the borough of Glasgow is a nudist.\"\n\n\"Yeah, right.\"\n\n\"Really. Here, look at this pic of the Gorillas.\"\n\nGinger's interest appeared to be piqued for the first time. \"Uh . . . those dudes have big dicks. Relatively speaking.\"\n\n\"They are playing the soccer match against us naked, Ginger.\"\n\n\"Really?\"\n\n\"And guess what.\"\n\n\"What?\"\n\n\"We are also playing naked. Well, except for our hats. You don't think people will pay to watch a soccer match between a bunch of dudes with big dicks against some hot college babes where the only thing anybody wears is a hat? We have to wear a hat so that one player can be distinguished from another. They certainly don't want us to wear a jersey or anything that covers anything important. Well, we are allowed to wear shoes too.\"\n\n\"Where's my hat?\"\n\n\"Here. Write your number on the front and back with this magic marker.\"\n\n\"What's my number?\"\n\n\"It's 69. Every girl's number is 69.\"\n\n\"What's the name of our team?\"\n\n\"We haven't thought of one yet.\"\n\n\"How about Ass-hoe Girl-thrillas.\"\n\n* * * \n\nThe next day Taylor called Ginger all upset.\n\n\"Ginger, we don't have enough players! Ashley twisted her knee playing golf and can hardly walk.\"\n\n\"How did she do that?\"\n\n\"Uh . . . rumor has it she was trying some kinky maneuver on the last hole. You know, the 19th. With that hunk of a biker dude she just met last week.\"\n\n\"Hey, I bet I can get my sister Rachel to play. She likes moola. Tell me again how the money is going to work.\"\n\n\"The guy, Max, running this show owns a strip club. He has sold 10,000 tickets at $50 a piece. We get half of the gate and he gets half.\"\n\n\"What about the Gorillas?\"\n\n\"Oh, they are doing it mostly for free. I guess they like the idea of playing against naked chicks. The Gorillas can get money from the fans, though. Max gets all the money from the concessions, the booze and the food. But we can get money from the fans too.\"\n\n\"For what?\"\n\n\"Well, the fans are allowed to run onto the field momentarily and give money to the participants. Like for plays we make that they really appreciate. Max's idea. Kind of like when the patrons put money down a stripper's G-string.\"\n\n\"Where are we going to put the money?\"\n\n\"Hey, you have a choice. Your hat or your shoes Incidentally, Max rejected your name for the team. He went with the Blitzburgh Babes. Too late to change it now since it's on all the advertisements.\"\n\n* * *\n\nThe day of the game arrived. Nude Day. The stands were packed with many more than 10,000 fans. About 50 people sat together in one section and were all naked.\n\n\"Hey, those people are naked!\" Rachel exclaimed. \"Won't they be arrested?\"\n\n\"Rachel, we are naked too,\" Taylor snapped. \"So are the Gorillas.\"\n\n\"Yeah, those dudes are disgusting!\" Rachel observed. \"All hairy and sweaty from warming up. But yinz are totally hot! I'm glad you guys asked me to play, but is this legal? I don't want to wind up in jail. Ginger got pissed at me the last time she bailed me out Geez, all I did was pump my gas naked on a dare. Just my luck some church bus was filling up at the same time. If it would have been nuns instead of priests and altar boys, I wouldn't have got busted.\"\n\n\"Max paid off the cops,\" Taylor advised. \"No worries.\"\n\nThe match began and less than a minute in Ginger got a yellow card.\n\n\"What the hell was that for?\" Ginger screamed belligerently, her face becoming as red as her hair.\n\n\"You are not allowed to use your hands that that, young lady,\" the referee admonished.\n\n\"I never touched the ball! I never touched his balls either. It was his penis I grabbed when he went past me with the ball. Hey, he has an erection. That should get a yellow card. It's very distracting. All these Gorillas have hard-ons.\"\n\nThe yellow card stuck and the Gorillas scored a quick goal. Several naked fans ran onto the field and showered the striker with twenty dollar bills.\n\n\"Wow, I want some of that money,\" Ginger said, \"but they are going to score all the goals. We need to do something to distract them, me thinks. Rachel, remember that time when you were undergoing a sexual identity crisis and thought you might be a lesbian?\"\n\n\"Oh yeah. I had high anxiety. Did I ever.\"\n\n\"And you suggested that we have sex so that you could find out for sure?\"\n\n\"Who could forget. High anxiety turned into multiple orgasms.\"\n\n\"So let's do what we did then.\"\n\n\"Right here on the field?\"\n\n\"Can you think of a better way to distract the Gorillas so that our girls can score some goals?\"\n\n\"No, not at the moment. Yeah, let's do it. I think I could play better if I'm not so horny.\"\n\nGinger took Rachel's face in her hands. Softly she brushed lips with her. And then she really kissed her, sensuously exploring Rachel's mouth with her tongue. \"What did you think about the kiss?\"\n\n\"Girls can kiss better than guys,\" she replied seriously. Then they both began to giggle hysterically. \"Girls can do a whole lot of things better than boys, with the emphasis on hole.\" \n\n\"True,\" Ginger agreed, \"but I like dick too. I like it a lot. You should try it.\"\n\n\"No way!\"\n\nRachel put her fingers between Ginger's legs. \"I just love your little patch of red hair down here. It matches your head so perfectly.\"\n\n\"Yours is so . . .\"\n\n\"Naked?\"\n\nGinger giggled. \"Yeah, naked.\"\n\n\"Well, don't you dare shave yours because it's too pretty like this. Pretty little pussy. And it's getting wet! Mine is getting wet just thinking about eating you and you eating me.\"\n\n\"Me too. So what do we do? Hey, I'll pretend that I never ate pussy before, like when we did it the first time.\"\n\n\"That sounds like fun! Well, the best position for two girls to eat each other at the same time is side by side. The upside of my mouth and your pussy makes an ideal fit. There is more room for my mouth and it's comfortable. It's easier to go as long as it takes.\"\n\nThe two girls got into position at the middle of the field.\n\n\"You just do to me what I do to you, Ginger,\" Rachel instructed.\n\nRachel licked, nibbled, and kissed the inside of Ginger's thighs from her knees to her crotch. Gently, so gently.\n\nSuddenly a referee pulled out a red card, ready to lower the boom. \"You shouldn't be doing that, girls, seeing that you're sisters. Incest is a sin and against the law, I think.\"\n\n\"We are not related by blood!\" Rachel snapped. \"Ginger and I are both adopted. So take your red card and stick it up your ass.\"\n\nHe did. Well, he didn't exactly stick it up his ass. He put it in his back pocket. \"Alrighty then, carry on. I love watching girls do girls. My wife has a little plaything from China. You should see her polish the China. With her tongue.\"\n\nThe Gorillas gleefully cheered the referee's decision, and they all mulled around Ginger and Rachel, encouraging them enthusiastically.\n\n\"Stick your nose in that little red bush!\" one Gorilla yelled at Rachel.\n\n\"Hey Red, yodel in Blondie's canyon!\" another urged excitedly.\n\nThe Gorillas' language became more and more vulgar as the muff diving began.\n\nRachel stuck her nose in Ginger's little red bush and flicked the area around Ginger's clit with her tongue. It was obvious from the way that Ginger was squirming she wanted Rachel to put her tongue on her hot spot, but no, Rachel teased her more. She began to lick Ginger's pussy from the entrance up to her clit, keeping her tongue flat and her jaw relaxed.\n\n\"Oh . . . my . . . that feels good . . . so good . . . oh yeah . . .\" Ginger began to moan.\n\nRachel ran her tongue between Ginger's inner and outer labia on one side, while holding the two together with her lips. Then she did the other side. She went in and out of Ginger's pussy with her tongue and around and around. Rachel began to suck on Ginger's clit. Pulling on it and letting it go. She alternated the sucking with flicking her tongue all over and around Ginger's hot button. As she felt Ginger respond more and more, she picked up the pace. Harder and faster. She stuck her fingers inside Ginger to supplement her tongue working over Ginger's clit.\n\nAnd then Ginger lost it. Her entire body shook as she pushed her pussy frantically into Rachel's face, while screaming words Rachel never, ever heard her use before.\n\nA few minutes later Ginger purred, \"God, that was so-o-o-o-o good.\"\n\nRachel giggled and replied, \"I'm not God. I'm a goddess and so are you. Goddesses should have their pussies worshipped. Mine needs to be worshipped now.\"\n\nGinger began to do unto Rachel as she had been done unto. \n\nI t didn't take long before Rachel began to moan, \"Oh fucking yeah . . . ahhhhh . . . ohhhh yeah . . . yeah yeah yeah . . .\"\n\nRachel squirmed and thrashed about even more than Ginger had done until she had what appeared to be one great orgasm. Once she wound down some, she began to tease Ginger's pussy again. \"The good thing about girls is that we don't have to wait long before we can get off again.\"\n\nWhen it was over, not only did the Gorillas applaud, but so did all the fans in the stands. Soon many came running onto the field and covered Ginger and Rachel, who were still intertwined, with greenbacks.\n\nMeanwhile the Babes scored a goal to tie the game.\n\n\"Hey, I think this strategy really works!\" Ginger exclaimed, beaming.\n\n\"How about having sex with us?\" one of the Gorillas asked hopefully. All of them still had erections that looked like they needed immediate attention.\n\n\"Yeah, how about it?\" another seconded. \"Our fans, the ones who are naked, will give you even more money.\"\n\n\"Not me!\" Rachel snapped. \"I'm a lesbian.\"\n\n\"What about you, Red? How about it?\" the captain of the Gorillas demanded.\n\n\"Well, just what kind of sex do you want?\" Ginger inquired demurely. \"Oral, vaginal, or anal? She placed her hands under her breasts and pushed them up and together. \"Or maybe a titty fuck?\"\n\n\"I'd like just your plain old quick blowjob,\" the captain responded, \"so I can get back to captaining the team. It's tied now.\" But the Babes scored another goal as all this negotiating was taking place. \"Damn, now you are leading 2-1. C'mon honey, get to it. Down on your knees and breath through your ears.\"\n\n\"Hey, you dudes from Glasgow got any Scotch?\" Ginger asked. \"I need to anesthetize my throat, and I prefer Scotch.\"\n\nThe captain yelled to the sidelines, \"Water boy, get your bare ass and those Scotch-and-water bottles over here on the double!\"\n\nThe water boy came running over fast, his big dick flapping against one thigh and then the other. Ginger quickly chugged half a bottle. \"Thank you, water boy.\" And then she whispered so only he could hear, \"I love that movie. I'll give you a BJ after the game. As long as you have more anesthetic for my throat.\"\n\n\"Time to make my one-eyed monkey spit!\" the captain ordered. \n\nGinger stared at the big throbbing cock ready to burst inches from my face. \"I want your cock in my hungry mouth, Daddy. Do you mind if I call you Daddy instead of Captain?\" She breathed on it gently and then rubbed the tip all over her face. \"How bad do you want a blow job, Daddy?\"\n\n\"Real bad, my pretty little baby, real bad,\" he moaned. \"I feel like I'm going to just explode.\"\n\n\"You are going to explode, Daddy. Right down my throat.\" \n\nGinger began licking the head, circling the corona, then back to the head, lingering at the hole in the center. She squeezed the shaft and watched some clear liquid pop out of the hole. Then her lips closed around the corona and she began to suck more and more of him down her throat.\n\n\"Ohh . . . that's it, baby, that's it . . . so good . . . so good . . . ahh . . .\"\n\nGinger twisted her head from side to side, up and down and around and around, making sure her lips stayed in contact with the ridge of the head of his cock. She held her hand against her lips and moved up and down on him as if he were fucking her. Then she opened her mouth wide and tilted her head back. The captain pushed hard and his big cock just popped down her throat. All of it. Her lips were buried in his coarse bush. She put her hands on his as she pulled his cock almost all the way out of her mouth and then back down her throat. Over and over. He could tell she was smiling even with her mouth full of dick. The corners of her mouth gave it away.\n\nThe captain didn't say a word at the moment of truth. No, he just grimaced in ecstasy and gritted his teeth as his body shook and he exploded down Ginger's throat. She swallowed as much of his spunk as she could as she held her lips around his cock, and then she looked up at him and slid her mouth off like she was sucking the juice off a Popsicle. His knees buckled.\n\nThe captain regained his composure and ran off to lead the charge against the opponent, but there was nobody to captain. All the other Gorillas were standing around Ginger waiting their turn.\n\n\"Okay, what would you like?\" Ginger asked the biggest one.\n\n\"Praise the Lord, I'm next!\" he roared with approval. \"I'm a strict Baptist, and my preacher says that anything but missionary position is a sin. You know, so that the woman is submitting to the man. Also, oral and anal sex are prohibited.\"\n\n\"Oh, my,\" Ginger sighed. I doubt the missionary position is going to do anything for me. It usually doesn't. I like my sex a little kinky, incidentally. Make that a lot kinky.\"\n\n\"I'll give him some tips,\" one of the other Gorillas offered, and he whispered in the big one's ear.\n\nThe big one then proceeded to engage in sex with Ginger in the missionary position and pounded her fast and hard like a jackhammer. She seemed to be rather enjoying it until he pulled his dick from her pussy, ejaculated into his hand and slapped Ginger across the face quite hard.\n\nGinger looked dazed and disappointed and muttered, \"What the hell happened? I think I would have got off with a few more minutes of that.\"\n\n\"That was called the Paul Bunyan Flapjack,\" the Gorilla who had given the advice said with a big grin. \"My girlfriend loves it! Hey, can I be next?\"\n\n\"Yeah, okay, but hurry up, while I'm still wet,\" Ginger urged.\n\nThis one rolled her over into the doggy position and began to thrust almost as enthusiastically as the big one had. \"This is called the Bus Driver,\" he reported as he inserted his thumb into Ginger's asshole and turned it from side to side. \"See, I'm driving the bus.\" He reached around with his hand and squeezed her right breast. \"Now I'm honking the horn.\"\n\nGinger began to moan and groan as this one alternated between driving the bus and honking the horn as he fucked her from behind. But then he stopped and pulled out.\n\n\"Why did you stop?\" she screeched. \"I was close, so close!\"\n\n\"I busted a nut, baby, couldn't you tell?\"\n\n\"Oh sure. Who the fuck is next? Get behind me, Satan!\"\n\nA volunteer quickly did just that. He began to pull Ginger's hair harder and harder and she started to scream. Then with his other hand he covered and uncovered her mouth.\n\n\"Awawawawawawawaw!\" she wailed until she collapsed and writhed in ecstasy on the ground.\n\n\"Yeah, the French Indian War Cry does it every time,\" this one boasted.\n\n\"I'm next,\" another one insisted.\n\n\"No, me!\" challenged a real mean-looking Gorilla.\n\n\"Now, now, boys, you'll all get your shot to shoot your wad,\" Ginger chastised. \"Didn't you ever hear of the patience of Job?\" They all shook their heads indicating no as they stroked their ever-eager cocks. \"Let's see, I wonder what the rest of you might like.\" The Gorilla who had given the big one advice whispered in her ear. \"Oh, an international flavor. I like that! Just like the World Cup.\"\n\nChinese Bike Ride. English Toaster. French Pirate. Portuguese Breakfast. Japanese Noodle Beater. Ginger did all those and more, with the tutoring of her newly found sex consultant.\n\nFinally time expired and Ginger pushed the Gorillas off. Of course piles of greenbacks surrounded the spot where the Gorilla gangbang had taken place. \"That belongs to me!\" she pronounced. \"And my teammates, of course.\" She ran off to join them in celebration.\n\nThe Babes had scored 10 more goals while Ginger gangbanged the Gorillas, making the final score 12-1. Everybody went home happy on Nude Day, and both teams agreed on a rematch next Nude Day.\n\nAnd the moral of the story is: Sex is the most popular spectator sport and not the fucking World Cup.\n\n* * *\n\nAuthor's Note: If you put a really sweet public comment on this story, Ginger will send you a naughty pic of her in the uniform she wore for the match. "
    ],
    "authorname": "sarahhh",
    "tags": [
        "muff diving",
        "soccer",
        "blow job",
        "doggy style",
        "lesbian"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/ginger-gangbangs-the-gorillas"
}