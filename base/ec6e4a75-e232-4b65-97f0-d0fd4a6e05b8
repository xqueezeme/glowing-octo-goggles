{
    "title": "Watching the Detectives",
    "pages": [
        "I live for feedback.\n\n*****\n\n1 Philippa\n\nFor the umpteenth time I needed to move to get my circulation going again. I tried to stretch my legs but it's not easy in the front seat of my small car. Fuck, I thought as I snagged my tights against something beneath the steering wheel. If that was another pair ruined I would scream. I was parked facing a nondescript semi-detached house in a drab suburb of South London. It felt like I had been here for days when it had been just four hours as I checked my watch yet again. \n\nI hate night time surveillance jobs; they are often cold, uncomfortable, downright creepy, and sometimes dangerous. I keep pepper spray in my handbag and an extendable baton, bought in the US, in the car for protection, but I've never had to use them as I have always talked my way out of trouble. These bread and butter jobs are the kind of work that pays to keep the wolf from the door. Thank God for husbands who can't keep their trousers zipped up and wives who won't keep their knickers on. There was a steady stream of spouses who would make their way to my scruffy office with tearful appeals for me to find out whether Charlie or John or Samantha or Linda were straying from the straight and narrow. \n\nI guess I should introduce myself. My name is Philippa, 28 years old and a private detective in the aforesaid South London. I also happen to be a pre-op transsexual, but I assume none of you are interested in that. \n\nTonight I was following and hoping to catch a few photos of a little scumbag who was a serial cheater on his pretty wife. I couldn't understand any man who could come home to a gorgeous wife and then turn round and cheat with some of the slags I had photographed him with. However, mine was not to reason why, mine was to do and get paid. \n\nThe front door opened in the house I was watching and he stuck his head out to look around. They never check properly, so there was not much chance of being spotted. I raised the Nikon to my eye, focussed and shot a few frames. He ducked back in and then emerged with a woman wearing a dressing gown. They embraced and I got a lovely close up sequence of them kissing with his hand inside her dressing gown.\n\nI ducked down as he left the house and strolled down the street to where he had parked his car. I had an appointment with his wife tomorrow at the office which would lead to the usual tears and then anger. Still, I had done my job and would get paid. My work is done, I thought, pulled the car away from the kerb and drove off hoping to get some sleep. Shit, I had laddered my tights.\n\nThis is the glamorous life of a 21st century private detective trying to earn a living in the mean streets of Tooting, South London. Raymond Chandler, eat your heart out. \n\nHow did I get to become a private detective? It's a long story. I was named Philip after my grandfather who had died on D-Day on Sword Beach. He had married my grandmother two months earlier and my father was born five months later. Do the maths; things like that happened in wartime. My dad became a police officer in the Met police here in London until his retirement as a Chief Superintendent. He met my mum, who was ten years younger than him, and they tried and tried to have children and had pretty much given up when, hey presto, yours truly popped into the world. \n\nI loved my mum and respected my father. That's not to say I didn't love him, but he was a copper and had rules by which he lived and wanted me to live. I wasn't wild or rebellious but I guess I never lived up to his expectations for a son. I was small and slender, taking after my mum, wasn't good at sport much to the disappointment of my rugby mad father. I didn't fit in with what the boys wanted to do and I preferred to spend most of my time with the girls. It was hop scotch for me and not climbing trees. \n\nWhen I grew up gender dysphoria didn't exist. Well it did, but no one called it that back then. What I got called was fairy and pansy and sissy and bullied mercilessly. I didn't have the ability or the will to fight back and so I withdrew into my own world. I was unhappy but I didn't understand why.\n\nThat's when I discovered dressing. I was looking for some solace and I thought, as I liked doing girl things, why not try to look like one. I stole a pair of my mum's knickers from the laundry hamper one night and put them on in my bedroom. The feeling as they slid up my legs sent me dizzy and when I pulled them up tight I nearly fainted.\n\nThat was that, as they say. I would 'borrow' my mum's stuff and shoplift knickers and pairs of tights from local shops. I built a small collection of knickers and a bra and a couple of dresses I picked up from outside the charity shop where someone had left them for collection. I would get home from school and run to my room and pull on the knickers and the bra and a dress. God knows what I looked like, but I didn't care, I was happy. \n\nOf course, I got caught. Mum was crying and Dad went crazy, calling me all kinds of names and it would ruin him if it ever got out his son was a poof. After he had finished and stormed out, Mum came and hugged me and told me it would be OK and we would sort things out. Mum was so sweet and talked to me for ages about how I felt and why I did it and told me it was natural for boys to explore what they felt. She probably got me through one of the darkest periods of my life. Dad was no help, but he just didn't understand and therefore just rejected the whole idea.\n\nI still got to dress occasionally with Mum's passive connivance. She would look the other way rather than support it outright, otherwise Mum felt she would be letting my dad down. I built another small stash of clothes and even got my hands on some makeup I would practice with when I knew Dad was safely out of the way. One night I came down from my bedroom to the kitchen where Mum was sitting and she gently wiped some eye shadow off my face which I had missed before Dad could see it. She was and still is, a hero.\n\nThen, at about age 16, I was given my own computer and I discovered the internet. I not only discovered it, I nearly drowned in it. I soon found out I was not alone; indeed, there were many people going through the same struggle as me. It makes such a difference when you know others are feeling the same doubts and fears. It doesn't make them disappear, but you realise they can be faced up to and, just maybe, they can be overcome. They were also willing to show me how I could cope with the bigotry and prejudice I would face if I went down the path I was considering. I must have spent every spare moment for a year in reading and researching this new world. At last I had found an identity; I realised my feelings weren't wrong or perverted. I felt happier than at any time in the past. I knew I wanted to be a girl, not a boy.\n\nI got to know people online and we would get together when we could and get loaded on cheap cider, dress together and play around. At 18 I left school, found a job in an insurance office and hated it. However, it meant I could move away from home. I could be in boy mode at work and then get back to the one room place I was renting and could become the girl I wanted to be. Occasionally, I would go out dressed late at night to walk around feeling liberated and scared in equal measure. I developed some problems trying to balance the two sides of my personality, became deeply depressed and more than once contemplated suicide as the answer. Luckily, there were some good people I had met and they helped me to come to terms with what I was facing.\n\nI met an older T-Girl who was further down the path with her transition. She took a liking to me and helped me to get my head sorted out. She told me to stop trying to walk down two paths and to pick the one which suited me best and go with it. I guessed it would be a hard road if I chose to follow my heart. But I knew this what I had to do so, with my friend's support, I started on hormones and began the process of transition. It was such a huge relief to finally start the journey to the girl I wanted to be.\n\nIt was inevitable that I would have to come out at work, as the changes the hormones brought were becoming too obvious. I dreaded the reaction I would get from my colleagues, but I was surprised. After the first shocked reactions and sniggering it calmed down and people moved on to other issues to get worked up about. At least most weren't outrightly hostile, although there were two older blokes who were extremely nasty about it. A couple of the women took my side and sorted the two men out, but they never accepted me. It was bearable, but there were always snide remarks which hurt so much. However, I clung to the thought that it had to be worth it, as I felt so much better now I was making my first steps towards who I wanted to be.\n\nI was still lonely, however, until I joined a LGBT group which had started up locally, made some good friends there and life started to look up a bit. The support I got from the group helped me become more confident and I even dated a few guys for a while. There were still some bad times too and I came close to being beaten up on more than one occasion, but I carried a rape alarm with me and when it went off the arseholes disappeared pretty quickly.\n\nThings had got better with my mum and dad too. Mum had gently and persistently worked on Dad and he gradually came round to accepting my choices. I'm not saying he wouldn't have preferred it otherwise but I think he had always loved me; he couldn't understand how I felt. We began to talk with my mum's help and it's a lot better now. He did some research on his own about transgender issues and began to realise it wasn't the end of the world to have a daughter instead of a son. It took a lot for him to come round and I loved him for it. \n\nI was over at their house for Sunday lunch and I was moaning about my job. I had just been passed over for a promotion I knew I deserved, because, I was convinced, of who I was. Dad said if you're that fed up, go and do something you want to, nothing's stopped you in the past. We talked about it and out of nowhere he said he had an old mate from the force who had become a Private Investigator when he left the job. Dad was having a drink with him a couple of days ago and he had told my dad he needed someone to help out in the office and maybe some field work. Dad had promised to keep his eye out for anyone who might be interested.\n\nMum was horrified and gave Dad a right telling off, but my interest was piqued and Dad slyly set me up to meet Alan, his old mate. Alan was initially not keen, probably only seeing me because of Dad, but I had prepared well for the interview and, I think, impressed him with my determination to get the job. I'm also not too sure there were any other interested candidates, so Alan offered me a trial period, after which we could both decide if it was right for me.\n\nA lot of the work was office bound, not only filing and making excuses to the clients when Alan was too drunk to turn up to meetings, but also a lot of research work on the phone and on the computer. Alan was old school and couldn't get on with technology. Even his mobile was just a phone and he couldn't even cope with that at times. I had managed to develop a lot of computer skills and I soon was able to produce results for him which he couldn't have got anywhere else. \n\nIt is frightening how easy it is to find it information online. People are so careless about what they post on social media that it's laughably easy to find out so much unintended information. With a little fast talking and some greasing of palms it's also possible to get confidential information about people. I am constantly surprised at how little care people take about their passwords, for instance, and with some software and expertise you can get a lot of information which people should keep more secure. I also found I had a knack for being a fluent and persuasive liar if necessary. \n\nIt wasn't long before I was going out with Alan into the field and I think he enjoyed teaching me the tricks of the trade. I was a quick and eager pupil and I pestered and pestered him into letting me go out on my own to do some field work. I learnt everything from Alan and I will always be grateful to him. We made a good team, the business was growing and building a good reputation until, one gray autumn day, Alan keeled over in Streatham High Road and died from a heart attack. I was devastated, not only because I had lost a friend and teacher, but it had it seemed things were going so well and now I would have to start somewhere else. So, it was a great surprise when our solicitor told me that only a few weeks before his death, Alan had at last made a will and had left me the business. \n\nLet's be clear though, the business meant a scruffy office, some filing cabinets, a geriatric computer and surveillance gear but also, most important of all, his black book full of contact details with solicitors and divorce lawyers. These are the people who matter in giving out work as much as clients who come direct. I hit the phones hard and knocked on a lot of doors to persuade them I could do the same work Alan had done. Some didn't believe me and moved their work elsewhere, but there were enough I managed to persuade to give me a chance. It was hard work but it paid off, and I managed to keep my head above water. \n\nAbout this time a small lottery win paid for a trip to Thailand for me to get a boob job, my Adam's Apple shaved, vocal cords stretched, as well as my nose fixed and it was money well spent as far as I was concerned. \n\nI'm passable and, I have been told, pretty when I make the effort. I don't get made by many people and that's mostly only by other T-Girls. I live in a renovated apartment in what had been a police station before Government budget cuts forced its closure. I had bought it with some money left to me by an aunt together with a fairly hefty mortgage. I make enough from detective work to cover my outgoings and have a reasonable amount left over. So that's how Philippa Taplow ended up being the owner of TV Detectives - my joke. Most people think it refers to television detectives and I don't enlighten them, but it makes me smile.\n\nFollowing my late night photography session with the sleazeball husband, I managed to get a few hours sleep before I had to be at the office to present my report to the anxious wife. There were the expected tears and I keep a box of tissues on my desk ready for these occasions. \n\nAs I said a lot of my work is referred by solicitors or divorce lawyers, so I don't get many walk ins and none that looked like the woman who rang the bell in the office later in the morning. She was the kind of blonde you see in Hello magazine showing you her beautiful home. She was tall and elegant, blonde hair tumbling down over her shoulders in waves in a style I could only dream about and wearing a pink tailored short skirt and jacket, which I swear was Dior, over a white blouse. She had a pair of Chanel sunglasses perched on top of her head and I caught a flash of red on the soles of her dusky pink heels, which meant Louboutin.\n\nFor some reason she was dressed for Knightsbridge and slumming it in Tooting. \n\nIdiotically, I found myself wishing I had put on something more than my usual trousers and blouse and spent a bit longer on my makeup this morning.\n\n'Are you Philippa Taplow?' She asked, looking around as if she might catch something from just being in here. \n\n'Yes, that's me, and you are...?'\n\nShe was searching for somewhere to sit so I lifted some magazines off the only chair I had in the office and dusted it with my hand. Good start, Philippa. She reluctantly sat down and crossed her legs. In the short skirt she was wearing, it made even me wake up and pay attention. I couldn't place her perfume but I could tell it wasn't from the Pound Shop remainder bin.\n\nShe looked as if she couldn't work out if this was an office or a store cupboard and she carefully placed her Burberry handbag on the floor beside her, opened her jacket and sat back, albeit reluctantly, in the chair. \n\n'I'm sorry, I didn't catch your name. Mrs...?'\n\nIt doesn't matter for the moment, Miss Taplow. I believe my husband is cheating on me and I want to know if you can find the proof for me.'\n\n'It's certainly the kind of work we do,' I always say we as it sounds more impressive than the truth. 'Not that I want to turn work away, but why have you come to us? No offence, but I would have thought one of the bigger agencies would be more your style.'\n\n'Does it matter why? I'm here and I'm offering you the work. Do you want to do it or not?'\n\nYou pick up a sense in my line of work when someone wasn't being straight with me. I felt somehow she wasn't levelling with me, but if I turned away everyone who felt a bit hinky, I wouldn't have much of a business.\n\n'Ok then, tell me why you think he's having an affair and I'll tell you then if I think I can help.' I began to take notes but the voice activated digital recorder would fill in any gaps I might miss. Clients like to see me taking notes, it makes them think they are getting more value for their money. She went through the usual litany of reasons: unexplained late nights, callers hanging up, showering when he got home, unexplained items on the credit card bill, leaving the room to take calls, and so on.\n\nSometimes this is all coincidence and someone with low self esteem can turn innocuous events into something completely different. This woman definitely did not have low self esteem for sure. She seemed confident, arrogant almost, and to have everything planned carefully.\n\n'Have you challenged him about this?' I asked. I wanted to know if he was aware of her suspicions. It could make a big difference out in the field. If he was aware that he was suspected he would be a lot more jumpy and unpredictable. \n\n'No, not yet. I want to get some evidence before confronting him. I will tell you that I have the money in our marriage and I want this to be safely wrapped up before I go ahead. If he is cheating, then I will cut him out so fast his feet won't touch the floor.'\n\nShe looked around, 'Do you have any coffee?' \n\n'I'm sorry, yes of course. How do you take it?' \n\nI am a coffee freak and the one indulgence I had allowed myself at the office was to buy a good coffee machine. She asked for espresso so I busied myself making a couple of cups which gave me time to look at her again. She was, in fact, a little older than I had at first thought, but beautifully groomed. Hair and makeup were flawless in a way which takes a long time, or help, or both to achieve. She had large diamond studs in her ears and what to my eye looked like a Bulgari watch on her wrist. There was clearly money here and I thought again there was something off about her, but I couldn't put my finger on it.\n\n'Ok,' I said, giving her the espresso, 'before we go any further I should tell you my fees and if you're happy with those, then we can get into details.' I gave her a figure for my hourly rate at the top end of my scale. Charge what the market will bear, Alan used to tell me. She nodded and said, 'That's fine, I believe in payment by results, so I will pay a bonus on successful completion of the investigation. Would \u00a310,000 be adequate?'\n\nI succeeded in stopping my mouth falling open at this point. A client offering me a bonus, unasked for? Something was off, but what? I told her it was perfectly adequate.\n\n'I do need to know your names at this point, I can't go on without those.'\n\nShe looked uncomfortable and I wondered what was the problem. She must realise I needed to know.\n\n'My name is Eleanor Northcliffe and my husband is Gareth Evans. I continued to use my own name after we get married. I hope you understand the importance of confidentiality, Miss Taplow.'",
        "'If I didn't,' I said, 'I would be out of business very quickly indeed.' She nodded and we set about the details about her husband. She talked me through his habits, his work and who his friends were. I asked if she knew his email password, she did and told me, but it's so easy to get alternate accounts these days, it might not help. She also gave me his phone number and I asked if he had a second phone, but she didn't know. She also provided his car registration number. I told her to create a new email address which we could use confidentially. A new phone would be useful as well and imperative that her husband not know about them. She said she would arrange it and let me know the details.\n\n'How quickly could you get started, Miss Taplow?'\n\n'Well, if you can let me know where he will be this evening I can get started straightaway. That is, if you can pay something upfront as an indicator of good faith?'\n\n'Of course, will \u00a32,000, be adequate?.' Wow, this was too easy, I thought. I nodded and she wrote out a cheque and handed it across. Glancing at the cheque I could see it was written from an account with an exclusive City bank.\n\n'I am away from home on business a lot and I'm on a trip for the next few days. This is our townhouse address and I believe my husband will be staying there while I'm away.'\n\nMmm, I thought, townhouse? Implies there's a country house as well.\n\n'OK, Mrs Northcliffe, just some paperwork to be done and we're good. I will send you an update every day to the email address when you let me know what it is. It will be encrypted and I will send you details separately about how to decrypt it. Is that OK?'\n\n'Perfectly, thank you, now if there's nothing else, I need to be going.'\n\n'No, it's all fine. I will be in touch, when you send me details of the email address.' \n\nWith that she stood and with the look of somebody reminding themselves to send their clothes to the cleaners immediately, she walked out of the door. I sat still for a few moments, still trying to work my way through what had happened. I shrugged, sent a text message setting up a meeting later this evening, turned on my computer and opened up Google.\n\n2 Emily\n\nIn my local pub there's always a guy, probably the same guy, playing the slot machine with the concentration I imagine he would use on the control panel of a nuclear submarine. He never seems to win. Mug's game I think. \n\nI was sitting with an end of day gin and tonic, thinking about Mrs Blah Blah, when someone nibbled my ear from behind. \n\n'Emily. Please don't do that.' I said.\n\n'How did you know it was me?'\n\n'Emily, think about it, who else but you would do that to me in a straight pub?'\n\nShe came round and plonked herself down on the chair opposite me. Emily is my best friend; occasional lover and sometime assistant. She is also a beautiful woman who happens to be lesbian. Actually, her sexuality is a little more complicated than that. Em and I got together for the first time at a party when we both got blind drunk and ended up in bed. We sucked and fucked each other's brains out that first night and then found out we actually liked each other afterwards. It doesn't always happen that way. Emily doesn't go anywhere near men but I guess I don't count. She thinks of me as girl with a strapon attached, without any of the male bullshit which normally comes attached to a penis. She calls me her Private Dick, which she thinks is hilarious and I think is a joke well past its sell by date. These days if either of us gets an itch that someone of the other - nominal in my case - sex can scratch, then we get together. \n\nEm is a couple of inches shy of 6ft tall, curvaceous, with natural red hair tumbling down unkempt over her shoulders and with the face of a Renaissance Angel. Her looks belie her strength and she is a 3rd Dan black belt in Karate; she could convince you the Amazons were not a myth.\n\n'Yuk, straight pubs, what a waste of flesh.' She looked around, saw a woman sitting by herself in the corner, smiled at her and said, 'But sometimes there are opportunities.'\n\nI said, 'It's the landlord's wife.'\n\nShe looked puzzled and said, 'So what?'\n\nI shrugged, 'I don't want to get banned from another pub.'\n\n'Last time wasn't all my fault, that girl definitely fancied me.'\n\n'Yes,' I said, 'Until her boyfriend came back from the toilet and started to push you around.'\n\n'I only hit him once,' Emily said, 'and I pulled the punch.'\n\nThe guy had ended up sprawled across a table holding his bloody nose and screaming. Even then Emily got the girl's phone number before we were thrown out and banned. \n\nI sent Em off to get us some drinks and I saw her say something to the woman in the corner, who smiled back at her. She eventually returned with two pints and sat down so she could still eyeball the woman, 'So, what's the problem with Miss Snooty, then?'\n\nI had called Em and given her the outline of what had happened this morning.\n\n'There's just something off about it. She's loaded, that's clear, so what's she doing down in Tooting talking to me rather than one of the big boys up west? The name she gave me, I checked. She comes from a wealthy family, made their money in property deals. The word seems to be that she had a drug problem, met a bad boy and eloped, nearly got cut off from the family money but managed to repair things. At least the cheque was genuine, the bank confirmed that.'\n\n'Anything on the cheating husband?'\n\n'We don't know he's cheating yet.'\n\n'He is,' said Em, looking across at the woman, 'all men cheat, they're hardwired to. The little shits can't help it, it's just a case of when they get found out.'\n\n'Yeah, he checks out, seems to be a bit of a chancer. No criminal record but sounds a bit dodgy. Describes himself as an entrepreneur.'\n\nEm grunted and raised her glass to the woman in the corner, 'Maybe she likes getting down and dirty in Tooting. Phil, It's just a surveillance job, right?'\n\nI nodded. Emily was one of only two people in the world I would allow to call me Phil.\n\n'And no special requests, no beating anyone up or planting evidence?'\n\n'Emily, you know I don't do anything like that,' I tried to look offended.\n\n'More's the pity, you would earn a lot more money that way. So, what's your problem, Phil? Do the job, get paid and everyone's happy.'\n\n'Yes, I guess you're right.'\n\n'Damn right, sister.' \n\nI nodded and said I had to go, see if I could track down this husband where Miss Snooty had told me he would be tonight. I asked if she could help out on this job with some surveillance. She agreed and I said I would sort out a schedule by the morning.\n\n'Good luck,' Em said, 'and be careful.'\n\n'Good luck to you too,' I said as Em got up looking towards the woman in the corner.\n\n'Oh, I don't need luck.'\n\nShe didn't either, because the woman gave her a broad smile as Emily sat down next her. \n\nMrs Snooty's 'town' address was on a road just at the wealthier end of the King's Road in Chelsea. I managed to sneak into a spot with my car so I could keep an eye on both the house and the black Jaguar with the number plate Eleanor Northcliffe had given me. \n\nI knew this could be a long, possibly fruitless wait. Three hours after I started watching, the front door opened and the husband emerged. I snapped a few shots, more than anything to prove I had been there. I guessed he wasn't going to go far tonight because he was dragging a big black labrador dog on a lead. I slipped out of the car and followed him and the dog as they took a slow walk down the King's Road to Sloane Square and back. It's always difficult following someone walking slowly, It's best to do it from the other side of the street so you aren't so noticeable.\n\nHe made it back to the house in about half an hour and I was pretty sure he hadn't met anyone or even used his phone while he was outside. I was grateful for the walk though and then settled down again to watch. At about 11 o'clock, the lights all went out and I gave it ten minutes before deciding to call it a night. Emily and I split the day shift between us, but I would take the evening shift as that's when I thought anything would probably happen. Luckily, there was a coffee shop on the corner of the road where we could sit with a good view of the house during the day. Over the next three days Gareth Evans only emerged from the house twice a day to walk the dog, with delivery drivers and the postman the only callers to the house. I ached for something to happen.\n\nI reported this daily to Eleanor, complete with pictures, just to prove we were actually there. On the fourth evening he took the dog out for it's evening walk at about 7.30, a little earlier than his usual routine. I perked up, changes in routine normally meant something was going to happen. About an hour later, at 9 o'clock, he emerged and headed for his car. I sat up and as he pulled out into the traffic I followed behind in my little VW. It's great for this work because nobody notices such an anonymous car. I followed him down the King's Road, then out of Chelsea, over the river at Putney and along the river towards Barnes. I nearly missed him as he made a sharp left turn into a road of Edwardian villas. \n\nStopping about halfway down the road, he parked, left the car to walk up to one of the villas and rang the doorbell. I managed to park and double back to check the address and by the time I got there he was inside. Opposite the villa was a house in the process of renovation completely surrounded with scaffolding and plastic sheeting. I managed to squeeze through a gap in the fence and clambered up a ladder attached to the scaffolding onto the first floor level. I found a spot where I could see the house opposite and where I would also be concealed by the plastic sheeting. Thanking my stars for putting on jeans, boots and my warm coat, I settled down to watch. A light flicked on in a ground floor room opposite and a woman came to the window, looked out and pulled the curtains. It was too quick for me to get a shot, but I clearly saw Gareth Evans behind her in the room. \n\nNothing happened for the next hour and I began to curse Alan and then my father for getting me into this game. A light flicked on in the room next to the one with the closed curtains and this time I was more prepared, put the telephoto lens up to maximum magnification and steadied it against the scaffold pole. The telephoto lens would make the pictures grainy but would add to their realism when I had to show them. \n\nThe room was clearly a bedroom and It wasn't long before two women came into view. Please don't close the curtains, I pleaded to myself, please don't close them. One of the women went to pull them closed but as she did so, the other woman put her arms around her from behind and she turned round to kiss her. Shit, I thought, this isn't what I came to see. I ran off some shots, thinking Em would laugh at this. It was when the second woman turned her head towards me, it clicked that she seemed familiar. \n\nFuck, I thought, that's Gareth Evans. \n\nI rammed the camera back to my eye and flicked it to rapid. I was now sure the second woman was Gareth Evans in drag and a wig. He looked pretty good I thought and that's from an expert at dressing up in women's clothes. I whistled to myself, so that's the way he rolls. They were both kissing passionately now, their arms wrapped around each other. There was enough of a gap left in the curtains for me to still get a good view of the room and I kept the camera going on rapid.\n\nThankfully, I had loaded a fresh memory card this morning. I stopped to check the camera was working, and when I looked back into the room through the camera, Evans was on his knees in front of the other woman and pushing his hands up her legs and underneath her skirt. The woman put her hands behind her and unzipped her skirt and stepped out of it. \n\nEvans moved his hands up to her hips and I saw her look down and nod to him. He was smiling as he hooked his thumbs into her knickers and drew them slowly over her hips and down her legs and I nearly dropped the camera when I saw an erect cock jutting from her groin. Shit, I didn't see that coming. This could get very interesting. My first idiotic thought was that it was a strapon, but it was clear from the way it moved it was real and large. Evans looked up at her as he slid his tongue over the tip and then his lips parted to take the head into his mouth.\n\nBingo, that's the money shot. \n\nShe put her hands around the back of his head this time and pulled Evans deeper onto her cock. He took it into his mouth and started to lick up and down the shaft. I thought, this guy's no novice, he's done this before. He had both hands around the cock now and took the tip of it into his mouth, licking and sucking hard. She began to move her hips back and forth, forcing Evans to take more of it into his mouth and I could see he was gagging and finding it difficult to keep it in. He pulled back in order to draw breath and then, wisely I thought, concentrated on the head, using his tongue without trying to take it all into his mouth. His hands were wrapped around the shaft stroking it up and down whilst he sucked and licked the cock head in and out of his mouth. She threw her head back and I thought she was close to cumming. I have seen and photographed some extremely odd things in my job, but this was without doubt the most erotic scene I had ever photographed. Even watching through the camera lens this was making me hard and I let out a little moan as he deep throated her. I had to adjust myself at this point as my cock was painfully restrained. I switched to movie mode; I had to have this on film. \n\nThe woman looked down at him and said something which made him stop and smile. She pulled Evans to his feet and pushed him across the room towards the bed where he fell onto his back. I couldn't see everything from this angle but moving to the right a little I could focus right onto the bed. \n\nEvans climbed onto the bed and got onto his hands and knees in front of her as she edged up behind him. She lifted the skirt he was wearing and pulled down his knickers so his backside was now naked in front of her. She bent forward and she tongued his hole and he arched his back as he felt her tongue enter him. Somehow, I thought of Evans as him and the mystery T-Girl as she. She did this for a few minutes and then she reached over to pick up what looked like a bottle of lube. He looked back over his shoulder and watched as she lubed herself and smeared some onto his hole. He shivered as he felt it and then she slipped a finger inside him and he squirmed a little before pushing backwards onto her finger. She started to move her hand around and I could see he was begging her for more. She teased him a little more, withdrawing her finger and then pushing back in with two. He bucked as she drove her fingers deep inside him. \n\nI was getting so turned on by this I steadied the camera against the scaffolding and reached down to rub my now aching cock. She slapped him on the buttock and he reared as he felt the sting of her hand. I had managed somehow to unzip my jeans and eased my hand inside to rub my cock. I watched as she withdrew her fingers and moved herself up close behind him and take her cock and slap it against his hole. He looked over his shoulder to face her and I had a shot of him smiling as he anticipated what was about to happen. She pushed the tip of her cock just inside him and he wiggled his bum as if desperate to have it inside him. She pushed in a bit further and withdrew a couple of times before plunging her cock right inside him. I saw him shudder as he took the whole length inside and I swear I could hear him grunting as she began to move in and out, slowly at first and then faster and faster. \n\nMy hand was now rubbing my cock through my knickers and I pushed them down to get a better. I imagined I was the one in the room across the road fucking Evans and I felt my own climax building as I stroked myself to an orgasm. I put the camera down and leant back against the scaffolding and brought myself off until I came into my hand. Oh my God, this wasn't meant to happen, but what I had watched was so hot I just couldn't stop myself. I cleaned myself up with a tissue and then picked up the camera again. The two of them were now sprawled across the bed and It looked as if she had pulled out before coming as there was cum all over his back. I ran off a few more shots for good measure and then decided I had more than enough evidence and just wanted to get home.\n\nI scrambled down the scaffolding, slipped back out through the fence and was back into my car in a few minutes. I was so anxious to get home and more than a little ashamed at what I had done, that I didn't notice a small red glow as someone took a drag on a cigarette in the darkness across the road. \n\nI drove home to Tooting in a daze. To say I had not been expecting what happened was the understatement of the century. What I had thought was a simple cheating husband case had taken on a completely different complexion. As a T-Girl myself, I was now faced with outing another, in the most horrible manner. Should I let that affect me? Did it make any difference that Gareth Evans was cheating with another T-Girl rather than a woman, or another man for that matter? I was tired and drained and these thoughts were rolling around in my head until I got home. I would have to come to terms with that dilemma, even whether it was one, in the morning.\n\nI woke late the next day and, after a hasty breakfast, called Emily to fill her in on what had happened the previous night. She let out a 'sheeeet' when I told her about Evans' trans performance and she gleefully reminded me that she had told me he would be cheating, but would never have guessed that it would be in such a spectacular way. When I mentioned my reservations about 'outing' Evans, Emily was very clear and direct.\n\n'It's none of your fucking business. The wife is your n client, not Gareth Evans. You like horses right? Well if he was doing it with a horse, would that make any difference?'\n\nThe analogy was wonky, as I like horses, but I am not one myself. But I knew she was right and it helped clear my mind for the report I needed to write that morning. I knew Eleanor Northcliffe was still away, so I couldn't deliver the report personally until she returned, six days away, on the following Monday. I needed to write the report this morning when everything was fresh in my mind, so I headed off to the office with my camera and laptop, kick-starting the day with a couple of double espressos.\n\nI started by uploading all the photographs and video to my confidential cloud account as well as backing them to a local hard drive. I couldn't afford to lose this stuff so double bagging the backup was absolutely essential. I worked quickly, using my report template and it only took me a couple of hours to complete and polish the report. It was now lunchtime and I yawned and stretched, immediately feeling a knot in my back from the exertions of last night . I decided to treat myself to a massage at the spa a couple of streets away, followed by a quick pub lunch. I backed up the report to the cloud, grabbed my bag, locked the office and headed out into what had become a beautiful summer's day.\n\nFeeling much better after the massage I arrived back at the office about an hour later and immediately realised something was wrong. The door to my office was open and I knew I had locked it when I left. I stopped at the door and listened but could hear nothing from inside. Grabbing the pepper spray from my bag, I slowly pushed open the door and held the spray out in front of me as I slowly walked into the office. It was obvious it had been ransacked as papers and all the detritus of an office was flung all over the room. With a sinking heart I quickly checked and both the Nikon and my beloved MacBook Air had disappeared. I couldn't tell for sure but it looked as if they were the only two things missing. ",
        "I sat down and began to curse, long and loudly, using every swear word I knew and a few I made up as well. When I had finished, I called the local police station to report the break in. I didn't expect them to do anything, but I needed a crime number from them for the insurance claim I would be making. I could get by with my iPad for a while but the camera was a tool I couldn't do without. \n\nIt was while I was on the phone to the police that I noticed something about the door that I should have seen straightaway. Ringing off, I walked across to the door, knelt down and had a good look at the lock. It was a solid, heavy, serious lock, but there was no sign of damage, instead, there were a number of small scratches around the keyhole. I had assumed this was druggies or kids looking for something to fence quickly. However, I didn't think many druggies would be able to pick a lock of this quality.\n\nI spent the afternoon waiting for a Scenes of crime officer to turn up to look for fingerprints, making her coffees only to hear her say, 'You'll never get that stuff back, fenced and sold on by now.' I knew that was probably the case but it didn't improve my already foul mood.\n\nI sent a text to Emily.\n\n'Em. got a problem need 2 talk'\n\n'Wot r u pregnant?'\n\n'No u fool. Need 2 talk tonite'\n\n'OK Rutland at 7'\n\nThe Rutland is a beautiful riverside pub just by Hammersmith Bridge. I sat outside in the warmth of the evening and watched the action on the river, idly wondering about how much history had passed by on the river right in front of me. Henry VIII may have been rowed up river past this spot on his way to see his newly acquired palace at Hampton Court, and his daughter Elizabeth must surely have traveled the other way down to the Palace of Westminster. I spotted Emily as she walked across from the bridge and watched as the crowds parted almost by instinct to let her walk through. Men and women turned to watch her walk by. In another life I swear she would have been a Celtic warrior queen leading her people into battle.\n\n'Get me a margarita will you, Phil. I'm gagging for a drink.' she said as she sat down next to me. So much for the warrior queen.\n\nIf you ever ask for a margarita in a London pub be prepared for eye rolling, shoulder heaving and passive aggression from the bar staff. The girl behind the bar was about to say no, just because she couldn't be bothered, but her colleague, a tasty looking young guy, stepped in and said, 'No problem Miss, let me get them for you. It'll be a readymade margarita mix but our Tequila is pretty good. I think we've even got a proper glass somewhere. You sit down and I'll bring them across to you.'\n\nI stared at him in astonishment; he had to be new. I paid and went back to Emily, who was closely watching a gaggle of girl rowers, all in lycra shorts, tight tops, pony tails, and giggles stream past. I sat as Emily nodded her head at something behind me and said, 'The brunette at the back.'\n\n'What?' I said and turned to look. She was just like the others; tall, long legs, lithe and athletic and with the soft bloom of youth.\n\n'Baby dyke,' said Emily, 'watch and learn.'\n\nThe brunette turned round and looked at Emily who casually took off her sunglasses and looked straight back. The girl turned away and Emily started counting softly, 'one, two, three'...on the count of five, the girl turned back again to look. Emily opened her legs a fraction and the girl went pink and her head snapped round. A few minutes later the crew walked back past our table and the girl hung back a little, casually dropping a piece of paper on the table in front of Emily who winked at her as she hurried off to rejoin her crew.\n\nI grabbed the paper before Emily could and unfolded it. Scrawled on it was 'Cindy, call me' with her telephone number. It's happened before. On the rare occasions we are together in a lesbian club or bar, it's like bees round honey. They are rare occasions as I don't like going to them because right on lesbians don't always want to play nice with us T-Girls. As if we don't get enough hassle from straight society we also get it from some who should know better. Anyway, don't get me started on sexual politics because I will bore the pants off you. I sometimes wondered if lesbians were attracted to each other through some yet to be discovered force akin to magnetism.\n\nMy new BFF from the bar brought across the margaritas and smiled broadly at me. 'Enjoy your drinks, girls, let me know if you want anything else.' He gave me another big smile and left, collecting some empty glasses as he went.\n\n'I think you've pulled there babe.' Emily said loudly enough that he must have heard.\n\n'What? You're mad, he's a child.'\n\n'Yea, but you would, wouldn't you?' In a heartbeat I thought to myself.\n\n'So, what's this problem?' Emily said, pulling her hair back and securing it with a scrunchie. \n\n'The office was broken into today. My camera and laptop were stolen.'\n\n'Bloody kids,' she said, 'just wanted them for drug money I guess. It's all insured though, isn't it?' \n\n'Yes, that's not a problem, Everything was backed up as well, so I won't lose anything. The strange thing is it happened when I popped out for an hour at lunchtime. Hell of a coincidence don't you think? Just at the time I was out they choose to break in.'\n\nShe squinted at me, 'Well, they would choose a time when you're not there, after all. Or are you saying you think you were targeted?'\n\nI paused as I took a sip of the margarita.\n\n'The locks were picked, not smashed. Still think it was kids?'\n\nEmily was silent for a few seconds, 'No, that doesn't sound like kids, not unless they're teaching Breaking and Entering at GCSE these days. Do you think it's anything to with the Evans case?'\n\n'I had thought of it, for sure, but how could it be? The only person who knows I'm handling it is Eleanor Northcliffe, and she's out of the country.'\n\nEmily frowned, 'Yeah, you're right, that's just too much of a stretch. Just be careful, will you, please.'\n\n'Don't worry, I'll be OK, I have my trusty pepper spray, remember, By the way, how did it go with the woman in the pub? Can I go back there?'\n\nEmily grinned broadly, 'I'm seeing her tonight. Her name's Sophie. In fact, I have to go right now, I'm taking her to her first lesbian bar.' With that, she drained the rest of her drink and with a wave, disappeared into the crowd.\n\nI stayed for a while, luxuriating in the evening sunshine. The barman brought me over another margarita and I said, 'I didn't ask for another one.'\n\n'This one's on me,' he said with a smile, 'It will only cost you your phone number.'\n\nI laughed and thought why not? I scribbled my number on a bar mat and he slipped it into his jeans pocket. \n\n'Thanks babe, catch you sometime.'\n\nI left soon after and realised that my drive home would take me right past the road in Barnes where I had been last night. As I passed the end of the road I shivered, remembering what had I had seen and done the previous night. It was dark when I arrived home and I only had to spend five minutes trying to find a parking space for the car but it left me a few hundred yards walk away from my front door, and as I paused to find my keys in my bag a voice behind me called out, 'Fucking bitch.'\n\nI turned to face the voice, my hand reaching for the spray in my bag. The next thing I remember was trying to force my eyes open. I tried to sit up but my head hurt too much and I could hear someone talking but they seemed to be a long way away and I couldn't hear what they saying. I knew I had to open my eyes but I couldn't get them to obey my brain. The voice got closer and clearer and a man was speaking, 'Don't try to get up Miss, the ambulance is on it's way.'\n\nAmbulance? What for? Is somebody hurt? It was then that I realised I was the one who was hurting. My head ached and my ribs did too. I finally forced one eye open and looked up into the worried eyes of a young guy who was kneeling beside me. I was sprawled on the pavement outside my house and felt around for my bag. \n\n'If it's your bag you're looking for, Sally over there has got it safe. She's called the ambulance and they're on their way.' I looked around and there was an equally worried looking girl holding my bag. She tried to smile and said, 'We were round the corner and heard you scream, so we legged it round here and found you laying on the pavement. We heard some footsteps running away and guessed you had been attacked.'\n\n'Thanks, but I'm sure I will be alright, if you could just help me up, I can get inside. It's my house just here.'\n\nThe girl spoke again, 'Jack's a first aider, he says you might have concussion and that's why we called the ambulance.'\n\nAt that moment I heard the ambulance siren as it came round the corner and Sally jumped into the road to stop them.\n\ni tried to say that I was OK but my head felt heavy and my vision blurred and I must have passed out again. I can't remember much of the next few hours, although bits and pieces of it came back now and then. It's a mashup of sounds and voices and half remembered faces peering down at me with lights being flashed in my eyes and people asking me my name.\n\nThe doctor who came to see me when I finally woke up tried to fill me in on what had happened. I had been attacked outside my house, taken a big thump to the back of the head which had knocked me down and had then been kicked a few time as I lay on the pavement. Jack and Sally had rushed round the corner when they heard me scream and Jack had put me into the recovery position as Sally called the ambulance.\n\nThere didn't appear to be any serious damage but he wanted to run a few tests as I had been hit hard on the back of my head and he was worried about concussion. If all went well, he expected me to be discharged the following morning. He had given me something for the pain and told me to get some rest. He also told me that I had been lucky, because if I hadn't screamed and Jack and Sally hadn't been there so quickly, if might have been much worse.\n\nHe smiled and said that when I was admitted there was a bit of confusion about whether I should be in a male or female ward, but they had solved it by putting me into one of the private rooms. I managed a painful grin and told him it was the first time being TG had been a benefit. He laughed and said he would be back later to check on me. \n\n3 Tim\n\nI had drifted back to sleep again when I sensed somebody standing by the bed. I cracked open an eyelid to see the most beautiful pair of hazel eyes looking down at me.\n\n'Hello, Miss Taplow, I'm Detective Constable Tim Kent, is it OK to have a word?'\n\nI knew the police would turn up sometime as the hospital would have reported the incident as a matter of routine. Tim Kent looked young and very cute. Policemen had obviously changed a lot since my dad's day. I opened both eyes and said, 'Sure, why not.'\n\nHe sat down on the visitors chair and took out his notebook. 'You're Philippa Taplow, is that right?'\n\nI nodded and he went on, 'and you gave Charles Taplow as you next of kin?'\n\nAnother nod.\n\n'Would that be ex Chief Superintendent Taplow, by any chance?'\n\n'Yes, he's my father.'\n\nConstable Kent looked up from his notebook and said, 'I understood the ex Chief Super had one child,' he looked down at his notebook and then up at me, 'called Philip.'\n\nI rolled my eyes and said, 'What's this got to do with what happened to me?'\n\nHe levelled those gorgeous eyes at me and said, 'Just checking who you are, er, Miss.'\n\n'Look if it's any of your business, I was Philip, I'm now Philippa, can we get on with what happened to me?'\n\n'Well, you see, Miss Taplow, it may well be all about what happened to you last night.'\n\n'God, you think this happened because I'm TG, don't you?'\n\n'Don't you?' he replied. He also had the most beautiful eyelashes I have seen on a man to go with those hazel eyes.\n\n'Oh,' I dragged myself back to his question, 'actually, no, I think it's more likely to be because...' I just stopped myself from blabbing about what I had been doing the past few days.\n\n'Because of what. Miss?'\n\n'For God's sake, please stop calling me Miss. It sounds like I'm a primary school teacher. Call me Philippa, everybody else does.'\n\nHe smiled and said, 'OK, Mi...Philippa. Why do you think you were attacked?'\n\n'No, no, you're probably right, some people out there don't like girls like us.'\n\nHe paused and hoped I would say more, but I know when to shut up and let the silence just hang there. He looked back down at his notebook, 'Did you know there were over 100 reported attacks on TG people last year in London alone?'\n\nI shook my head, 'You're wrong, It's a lot more than that,' I said, 'most of them don't get reported.'\n\nHe nodded, 'Yes, I know and it's the reason why we set up the Hate Crimes Unit. I joined the unit a few weeks ago and when the hospital reported your attack last night, I was called.'\n\n'Great, too late for me though.' \n\n'Yes, I'm sorry, but if we catch these people then maybe we can stop it happening again.'\n\n'I'm sorry, but it will take much, much more than arresting a few neanderthal knuckle draggers to stop it happening. Until society understands being different is not evil or perverted and accepts people for who they are, it won't stop.'\n\nHe looked calmly back at me, 'Yes, I think you're right, but I can only try to catch them and lock them up.'\n\nI fell back on the pillows, 'OK, how can I help you?'\n\n'Did you get a look at whoever attacked you?'\n\n'No, he came at me from behind as I was trying to unlock my door and hit me as I turned round. I didn't get a look at him at all'\n\n'Did he say anything?'\n\n'He called me a fucking bitch and that's why I turned round. And no, I didn't recognise the voice.'\n\n'Nothing else, you can think of? Anybody who you think would want to do you harm?'\n\n'I'm a private detective, I've upset a lot of people in my line of work, but I don't think there's anyone who stands out. I've not had any threats and I'm not aware of anyone following me.'\n\n'Nothing else, then?'\n\n'No, not really. Can I get some sleep now? My head is killing me.'\n\n'OK, Philippa, can I get back to you if I have any further questions?' 'Sure, sure. Anytime, detective.'\n\nHe paused on his way out and turned to say, 'By the way, Philippa, I was after your dad's time, but I heard he was a good copper.' \n\nThat was nice of him to say, and it made me feel very proud of Dad.\n\nAs I drifted off, all I could think of was how jealous I was of those eyelashes. Sometime later I was dozing when Emily's face appeared around the door and she crept into the room.\n\n'God, you look terrible,' she said.\n\n'No shit, Sherlock. I feel fabulous.'\n\n'I hate hospitals,' she said as she put a bag of grapes and a bottle of Lucozade on the bedside table.\n\n'Well it's a good thing then it's me in here and not you,' I said, trying to sit up and wincing as my bruises decided join in the fun. \n\n'And I hate Lucozade,' I grumbled. Emily ignored me and began eating the grapes. \n\n'Some very hot nurses here, you know,' she now had a mouth full of grapes. \n\n'I had noticed, Em. It's a hospital, that's where they have nurses.'\n\nSarcasm was wasted on Emily who had by now munched her way through half the grapes. \n\n'I get so turned on by those uniforms,' this was a side of Emily I had never appreciated before. \n\n'How was policeman plod?' Emily asked. The grapes were nearly all gone now, a few small thin ones still remained on the otherwise bare stalk.\n\n'He was actually cute, has lovely eyelashes. He had heard of my dad who he reckons had been a good copper.'\n\n'So is cute policeman plod any closer to catching who attacked you?'\n\n'I don't think so, he thinks it's a hate crime.'\n\nEmily looked sideways at me, 'And you don't believe a word, right?'\n\n'Don't know Em, God knows there are enough attacks on us. It might be, but I have my doubts after the break in. Maybe I'm just getting paranoid.'\n\nEmily sat on the edge of the bed and then she pulled down the bed cover and slid in beside me.\n\n'Em, you can't do that in here, get out.' I hissed at her.\n\n'Who says? You've got a private room here. I bet you could do with some stress release.' With that she disappeared under the covers and I felt her fingers and then her mouth around my cock. \n\n'Oh my God, Em, you can't do this in hospital.'\n\nI could feel her tongue wrapping itself around my cock and I could feel myself getting harder as she used her hands and mouth to bring me to the edge. I closed my eyes as she started to pump her head up and down on my cock and her tongue was driving me wild. \n\n'Oh my God, Em, you have to stop, I'm going to cum if you don't.' She mumbled something which I couldn't hear with her head under the cover. I opened my eyes and saw a face peering into the room through a chink in the curtains. \n\n'For fuck's sake Em, there's someone watching! Stop it!'\n\nEmily, of course, did no such thing and just kept sucking. I could feel my climax building and and I leant my head back and groaned as I came into her mouth. Emily finally emerged with a big smile on her face just as the nurse who had been watching came into the room. \n\nEmily leant over me and gave me a kiss goodbye and I could taste myself on her lips. As Emily left the room she glanced at the nurse who was staring at her with wide open eyes and gave her a wink. The nurse blushed and hurried across to my bed and began plumping up my pillows and straightening the sheets.\n\n'Your friend, you know, are you together?' she said in a low voice.\n\nI leant towards her and said, 'God, no, we're just good friends. Why?'\n\n'Well, is she with anyone at the moment?' \n\n'No, not right now.'\n\nI knew what was coming.\n\n'You don't have a number for her, do you...'\n\nHere it goes again I thought.\n\nThe doctor appeared again and told me that the test results were all in and revealed no more damage than the bruises and cuts I had received during the attack. He said I could go home but to rest for a day or two, to let the bruises heal and take painkillers if I needed to. It was with immense relief I walked out of the hospital and took a taxi home. For once in my life, I did as I had been told and just took it easy.\n\nEm came round and we shared takeaways and too much wine, but I began to feel better and the bruises had started to change colour as they healed. Em slept over the first night back and she held me tight and we kissed and cuddled until I fell asleep. It felt good to have someone sharing the bed. We also shared a shower together and it was bliss to have her gently wash and soap my bruised body. Thankfully, I couldn't remember the kicking I had received but it was my ribs that had suffered most. They had turned various shades of black, red, blue and green. I probably looked like fruit a week past it's best by date.\n\nIt was two days later on the Thursday morning when I went back to the office and I spent the morning clearing up and cleaning the mess the Scenes of crime officer had made trying to lift fingerprints. It was a relief, therefore, to be interrupted by the phone. It was DC Kent asking how I was and if I would be willing to answer a few more questions.\n\nGrateful for the respite I agreed and he said he could be over in half an hour. He turned up a few minutes early and after accepting a cup of coffee we sat down.\n\n'Thanks for seeing me again, Miss Taplow, I mean Philippa. I'm sorry I don't have any definite news about who attacked you, but I wanted you to see something.'\n\nHe placed his iPad on the table and a grainy video started to play. It had been taken at night and showed two men, one larger than the other, running down a street before disappearing from view. \n\nTim said, 'That was from three weeks ago following an attack on a transgender woman in Streatham. She ended up in hospital too.'",
        "He pressed play again, 'This is footage taken after two other attacks on Transgender women in the last three months. It appears to be the same two men running away after each attack. These were the three attacks we know about, because they were reported. I think it's fair to assume that there have been other unreported attacks on the community by these two men.'\n\nDespite the U.K. possessing the highest number of CCTV cameras per head than anywhere else in the world, there's still doubt about how effective it is in fighting crime.\n\n'You haven't got any better footage?'\n\n'No, this is the best we've got.'\n\n'So, there's a couple of lunatic dickheads on the loose targeting the TG community?'\n\n'My bosses don't really want to say so, but yes, I think there is. I'm afraid that if we don't catch them soon, then another victim may not be so lucky.'\n\nI snorted, 'Lucky? You think ending up in hospital is lucky?'\n\n'I'm sorry, poor choice of words, but at least they survived.'\n\n'And you think these two attacked me?'\n\n'We can't be sure, but the other attacks were within a three mile radius of each other and that would take in where you were attacked. However, there was no record on any CCTV this time.'\n\n'What are you doing to catch these two bastards?'\n\n'I was hoping that's where you would be able to help.' I must have looked puzzled, because he hurried on, 'We're having trouble reaching out to the TG community. There's not much trust around that we are doing much to stop these attacks and there's a reluctance to talk to us.' 'Are you doing much?'\n\nHe looked away and said, 'I shouldn't tell you this but, no, not a lot. But I want to change all that. I want to build some bridges to the community, get to talk to people, to find out if they have an information that can help catch these two men. They need to be stopped.' He spoke the last few words with passion and I could tell he meant what he said.\n\n'How can I help?'\n\n'Can you help me to meet and talk to some of the community, help me to persuade them I am serious about catching these attackers. I thought that if you introduced me I might get more information. The only thing is that isn't an official investigation yet, I'm kind of moonlighting, so I couldn't do it as a policeman.' \n\n'Look, Tim, you aren't going to get anyone to talk to you dressed like that. They will make you for a copper in five seconds flat. No offence, Tim.' It was true, he would stand out like a pimp at a vicarage tea party.\n\nHe looked crestfallen. 'How can I get them to talk to me?'\n\nPerhaps there was a way, but I wasn't sure how keen he would be when I told him.\n\n'Tim, there may be a way. T-Girls aren't going to talk to a copper, but they will talk to one of their own.'\n\nHe looked puzzled, 'What, you mean you?'\n\n'No, Tim, I mean that if they thought you were one of them, they are more likely to open up and tell you something.'\n\nHe looked completely baffled and then the penny dropped. He blushed bright red and started to splutter. 'You mean me, dressed up? No, you can't mean it, I could never do that.'\n\n'Why on earth not? You're not too big. You're slender enough and about the same height as me. You have a nice bone structure, and I know girls who would kill to have those eyelashes of yours.' Me included, I thought.\n\nI started walking around him, imagining what it would take to make him presentable.\n\n'In fact, I think that you would look pretty in the right dress, makeup and wig.'\n\nHe held his hands up. 'No. no, it's not going to happen, I'm telling you right now.'\n\n'What are scared of Tim?' I asked, now back standing in front of him.\n\n'I'm not scared, well, yes I am, no I'm not. It's not going to happen.'\n\nHe was still blushing, probably down to the soles of his feet.\n\n'What's the worst that could happen? You're not going to run into anyone you know. We'll do everything at my place and we go straight from there. I'll be with you all the time. Look, do you want to talk to them or not?'\n\n'Well, yes, but surely there must be some other way? Can't you do it for me?' He was now virtually pleading.\n\n'No, I can't, you have to listen to the girls yourself. I can be with you, but this may be the only way to get them to co-operate.' \n\n'Even if I did do it, it wouldn't work because I would look so bloody ridiculous. I would look like a bloke in drag.' His tone had changed now. Instead of outright denial these were now objections and, as every salesman knows, objections can be overcome.\n\n'Yes, you might look like a bloke in drag, but that's what we all look like when we start. Some are better at it than others, because they have had more practice, like me, but everyone has their first time. I think I can help you to make yourself presentable to go as a first timer.'\n\n'I don't know, it seems to be such an extreme step.' He was now accepting it might be possible.\n\n'Look, Tim, I know you might be reticent about it but why don't you let me show you what could be done. Come round to my place tonight and we can give it a go. If it turns into a disaster, then that's it, I promise you. I will do my best to make you look as good as I can, remember I've had a lot of practice. Please, it won't go any further than us, I promise. What do you think?'\n\nHe had gone quiet and wasn't looking at me. 'I don't know...'\n\n'Come on, just you and me, what harm can it do?' \n\nHe looked up at me and I could see he was going to do it.\n\n'OK, but if I look ridiculous, then it's not going to happen, right?'\n\nI clapped my hands together, 'Sure, sure, but I promise you it won't be.'\n\nOn a whim I leant forward and kissed him on the cheek. 'Thanks, Tim.'\n\nHe blushed so prettily and said, 'What for?'\n\n'For what you're doing, of course.'\n\nWe made arrangements for him to be at my place later and he walked out, leaving me wondering, not for the first time in my life, what I had let myself in for. I knew Tim was about my size but maybe if I had a few more options for clothes it would be useful. I called Emily and told her what I was planning and when she stopped howling with laughter and making jokes about Dragnet and J Edgar Hoover, I asked if I could borrow some gear from her for tonight.\n\n'Only if I can be there. I have to see this.' she was still giggling by this time.\n\n'No, you can't, I promised him it would only be us two.'\n\n'Spoilsport, OK, I'll drop some stuff round. What do you want? Hot pants, crop tops, that kind of thing?'\n\nI started to think calling Emily had been a big mistake. \n\n'No, you idiot, just some skirts and tops, I know you have some. Not too short, you understand.'\n\nStill giggling she rang off and promised to do as I asked Soon enough the bell rang and Em was outside with an arm full of clothes.\n\n'I hope these are OK, 'she said, 'I've brought some shoes as well, just in case. Please let me stay and watch, I won't say anything, I promise.'\n\n'Em, you are not going to stay. He's nervous enough as it is, if you're here making jokes about Policeman's helmets, he'll bolt like a scared pony.'\n\n'Little me? Surely not.' Emily does not do innocence well.\n\n'Em, thanks for all this but please go now.'\n\n'OK, I'll go, but at least take pictures, I want to see what happens.'\n\nI shoved her out of the door and I could still hear her outside, pleading for me to take pictures.\n\nI sorted out the clothes and came up with a few alternatives: a couple of dresses, a few skirts, tops and blouses that were presentable and not too showy or revealing. I gathered them together in my bedroom and covered up the mirrors. I didn't want him to see anything before I was finished. I had a couple of wigs that would be OK for tonight, but if this went ahead I would have to sort out a better wig for Tim.\n\nI sat down with a glass of wine to help settle the nerves I was feeling about the idea and started to wonder why I was doing this. I wasn't absolutely sure that it would work. Who really knew how the girls would react to Tim? On one hand, I wanted to give it a try as if it could do anything to help build some bridges between the police and the community then it would be worthwhile. He would have to look good though, otherwise they would feel they weren't being taken seriously. On the other hand, I thought Tim was cute and I did think that he could look really pretty if I could get him to accept and embrace it.\n\nIt wouldn't be the clothes or the makeup or the wig that would make the difference, it would be his personality. He would have to be confident enough to make them think he was serious, not just playing them along.\n\nAh, well, I thought, we'll see what happens soon enough.\n\n4 Tina\n\nThe bell rang a little after 7 and Tim stood at the door, looking less than eager to be here. \n\n'Hi, Tim, come on in.'\n\nHe followed me into the flat and stood in the middle of the big open plan room and looked nervously around.\n\n'You don't know how many times I thought about going straight back home and how long I stood outside the door before knocking,' \n\nI smiled at him and said, 'You're here now and that's good. Fancy a drink before we get started?'\n\nI think he would have said yes to anything at that moment to delay what was about to happen.\n\n'Oh, I forgot, I brought this.' He handed me a bottle of white wine. 'I didn't know what you would like, I hope it's OK.'\n\n'Tim, it's great, let me get a couple of glasses.'\n\nWe sat and sipped the wine, which I hoped was going to relax him a little. I reached out and touched his hand, 'Don't worry, it's not going to be as bad as you think, you are going to look good. OK, first thing I want you to do is to shave again, as close as you can. I can see you don't have much growth, but I want you to be as smooth as possible. I've laid out a razor and some shaving foam in the bathroom.'\n\nHe nodded, that wasn't too difficult, he was thinking. \n\n'The second thing is that after you've shaved I need you to strip and put these on.' I handed him a pair of white cotton knickers, nothing too girly at this stage.\n\n'What?' He now looked really startled. \n\n'I have to see what I'm working with, Tim. Think of them as a pair of speedos if it helps.'\n\nHe held the knickers in his hand as if they were a live hand grenade. 'Do I have to? Can't we do it without going this far?'\n\n'Tim, I promised you I would do my best to make you look good. To do that I need you to get right into the spirit of this, it won't work unless you really commit to it.'\n\nHe looked like he was ready to run so I gently took his elbow and led him through to the bathroom. He seemed dazed and I suspect he may have had a drink before he arrived at my place. \n\n'When you're done there's a robe on the back of the door, just put that on and come back out.'\n\nHe nodded and I heard him exhale as the door closed. I had another glass of wine, put some soft jazz on and waited for him to reappear. About half an hour had gone past and I was at the point of knocking when I heard the door open. Tim was wearing the robe which was pink silk, very feminine and quite short. He was beetroot red and looking tense.\n\n'Very nice, you have great legs,' I said and handed him a glass of wine. His hands were shaking and I began to wonder if this was going to work. He did have good legs though, the short robe showed them off and they looked very smooth.\n\n'I shaved my legs too, I thought I might as well go the whole hog,' he said. \n\nWell, well, I thought, there is hope yet.\n\n'That's perfect, Tim, come over here and sit down and finish your drink before we go on.'\n\nI had to stifle a giggle as he sat down as the short robe rode up and revealed his legs. He didn't know whether to cross them or to keep his legs together. \n\n'Probably better if you keep your knees together when you're sitting in something short,' I said. 'Crossing your legs is on the advanced course.'\n\nHe looked startled and then saw I was smiling and he actually began to smile back. \n\n'Thank you, Philippa, you're being so nice about this. I don't think I could go through with it without your help.'\n\n'Tim, I want this to work too, so I'm more than happy to do this at your speed. Now bring your glass and come through to the bedroom.'\n\nHe grabbed his glass and followed me, now seeming to accept what would happen. I sat him down in front of my dressing table and said, 'OK, now I'm going to make you up, not too much, just enough for you to see what it looks like. I've covered over the mirror so you can't see until we've finished.'\n\nI slipped a makeup hair band over his head, \n\n'This just keeps the hair off your face while I'm applying the makeup.'\n\nI didn't bother with primer as the makeup wasn't going to have to last that long this evening. His beard wasn't too dark but I started with a heavy foundation working it in with a sponge and followed that up with concealer and extra emphasis on the beard area and the neck. I talked to him at every stage gently telling him what I was doing and why. He seemed to be in something of a trance at this stage, just nodding slightly as I told him what I was doing. \n\nI applied some bronzer to his forehead, cheeks and neck to give a little definition and then some pink blush, brushing up the cheekbones towards his ears. Working as quickly as I dared, I used nude eyeshadow to begin with on the lid and just below, followed by a light brown eyeshadow to complement his hazel eyes on the eyelid itself, working it a little beyond the eye as I wanted to make a kind of cat's eye effect. Using a darker shade I added a line just above and below the eyelashes and worked outwards to create the effect. I sat back to have a look and thought so far so good. I was still talking gently to Tim and he seemed to be taking it all in good stead so far. I thought I wouldn't use eyeliner this time, sticking a pencil close to his eyes might just disturb his mood. There wasn't much I could do with his eyebrows at this stage although they were quite light and thankfully not too bushy.\n\nI did want to do something with those wonderful eyelashes, so I curled them and applied mascara working it outwards and the effect was transforming his face. I knew his patience might be running short so I moved onto his lips using a lip pencil to make them look a little fuller and then finished off with a light pink colour lipstick applied with a brush.\n\nEven though I was going fast, I thought I had done a good job and Tim already looked very different from when he walked in. I had earlier decided not to try nail polish at this stage as it would take a bit more time than we had and I didn't want to stretch his patience. So, I slipped off the band and told him we were finished with the makeup and that I needed him to stand and take off the robe. I thought this might provoke some more resistance but to my surprise he stood and slipped off the robe and laid it on the bed. He turned to face me and I could see a look in his eyes, pleading with me not to laugh at him. \n\nI said, 'You've done fine so far, not too much more to do.' I thought he looked really sweet in the white cotton knickers which stretched nice and tight across his bum and with a bulge at the front. I wickedly thought of giving him a squeeze there, but thought better of it.\n\nInstead, I picked up and held out one of my bras. He looked down at it and then back to me 'Do I have to?'\n\n'Tim, it's all about belief, you need to believe in this if you're going to get away with it. It's something you need to feel comfortable with.'\n\nI gestured with me hand for him to take it and he held by his fingertips as if it would burn him. \n\n'Turn round and I'll put it on for you.' I took the bra back from him and as he turned away I slipped it around his chest. 'The best way to put this on is to put it on back to front and then when you've done it up, swing it round and put your arms through the straps.' \n\nI eased the bra up over his chest and then pulled the straps up and over his shoulders. He gave a little shiver as the bra straps tightened and started to tug at him. I stood behind him and slipped a pair of breast forms into the cups. He looked startled as the weight from the forms pulled him forwards and he looked down almost with wonder at his new chest. \n\n'Wow, I didn't realise they would be heavy.'\n\nI grinned, 'Welcome to my world.'\n\nI think he had given himself up to this completely and I began to think that he might also be enjoying all this despite his initial protests. My hands were on his shoulders so I just let them run down his sides and as my fingers gently flicked across his skin he gave a little shudder and I swear I could hear a little moan. I held my hands on his hips for a second and he moved slightly backwards towards me.\n\nShit, I thought, what have I done? \n\nI coughed and said 'OK, let's go the next stage, have you ever worn tights? Sorry, silly question.'\n\nTim blushed and said, 'Well, yes actually I have. I went on a school skiing holiday and my mother made me wear tights under my skiing gear for warmth.'\n\nI just couldn't stop myself laughing and he grinned shyly back. 'I know, I got a lot of ribbing for that, but I was warm.'\n\nI took a new pair of black tights from its packet and handed them to him. I had thought black would be a more forgiving colour for tonight. He sat on the side of the bed and expertly rolled them onto his legs and then pulled them up tight.\n\nI took a risk and said, 'Feel good with shaved legs, don't they?' He shot me a look, but I could tell he thought they did feel good.\n\nI hurried him on and picked up one of the skirts from where they lay. I had already thought that Em's clothes would fit him better than mine, so I choose a simple black pleated skirt and handed it to him. \n\n'Let's try this on for size and fit. Put your hand on my shoulder and step into it and I'll pull it up for you. he did so and I pulled the skirt up to his waist and zipped it up from the back. It didn't fit too badly, a little bit loose in the waist, but that could be fixed. I grabbed a safety pin and pulled it tight at the back and there it was. The skirt came down just above Tim's knee and it looked OK. I knelt down and straightened the hem and looked up to see Tim's eyes shining down at me. I smiled to myself because I knew that look and what it meant. It was how I must have looked the first time I was dressed all those years ago. He was enjoying this now.\n\nI knew I had seen a white, sleeveless top amongst Em's things and I though that would match with the skirt nicely. I found it and helped Tim to put it over his head, being careful not to get makeup on it. It hung loose over the waistband of the skirt, had a lovely scoop neck and fastened at the back. Having helped Tim to get it fastened, I thought about which shoes to try. I knew that mine would be too small for Tim, but I thought Em's might be closer to his size. \n\nI found a pair of black patent leather ballet pumps with bows that would look good with the skirt and top. Tim sat on the edge of the bed and I knelt at his feet and took his foot into my hands and eased it into the shoe. It just about fitted and would do for tonight. I did the same for the other foot and I get a definite thrill from brushing my hands along his calf as I fitted the shoes. Stop it, girl, that's not what we're here for, I said firmly to myself. \n\nThat left just the wig to complete the transformation. I occasionally had to change my appearance when working, so I had a brunette, shoulder length wig which would do the trick. I had combed it out earlier so all I had to do was to shake it out a little and it was ready to go. Tim's hair was cut short so I stood behind him and gently smoothed the wig onto his head. It wasn't the greatest of wigs to be honest, but I thought it would be sufficient for our purposes tonight. I came round in front, adjusted the fit, fluffed it out a bit with my hands and I thought it looked sweet on him.",
        "'Almost finished, Tim, then you can finally get a peek.'\n\n'I'm sure I can wait,' he looked up at me, 'what do you think Philippa?'\n\nTo be truthful as I was getting Tim ready I hadn't paid too much attention to how it all looked. I asked him to stand and look at me and as he did so with a very shy smile on his face I realised just how pretty he was. I knew I was no professional, but I thought I had done a good job with the way the makeup and the wig framed his face to minimise many of his masculine features. I could still see Tim in there but I was astounded at what a difference it had all made. Don't get me wrong, it had not made him into a model, but it had softened and feminised his features as well as emphasising his eyes and those eyelashes were to die for.\n\n'To be honest, Tim, I think you look terrific.'\n\nI bent forward and gave him a peck on the cheek. His eyes widened and I thought he was going to say something, but he stayed silent.\n\n'Oh, there's one more thing, I almost forgot.' I ran to my dressing table and picked up a pair of dangly clip on earrings which I fastened to each ear. He swung his head from side to side and could feel the earrings pulling on his ears as they moved.\n\n'Now, that's better. Are you ready Tim?'\n\nHe swallowed, looked at me with a scared look in his eyes and nodded. I walked with him across to where I had covered my full length mirror. I paused and said, 'Remember, I think you look terrific.'\n\nHe swallowed again and then, 'Let's do it, Philippa.'\n\nI whipped away the sheet covering the mirror and he saw himself for the first time. I expected some kind of response from him, but for a good few minutes he didn't show any reaction to what he was seeing. Oh my God, I thought he hates it, it hasn't worked. Then, slowly his hand came up and with his fingertips he gently touched the skin of his face, as if to check that it was actually his reflection in the mirror. He touched the wig and moved his head slightly so that the earrings moved.\n\nI felt as if I hadn't drawn breath since I took away the sheet and let out a big sigh.\n\n'Well, what do you think, Tim'\n\nHe turned to me as if noticing me for the first time.\n\n'Philippa, I can't believe it. When you took away the sheet I didn't recognise who was standing there. It took my breath away. I was prepared for a freak show, but you've done a fabulous job. I am still speechless.'\n\nI grinned, 'I wanted to do more, nails and stuff, but in the interest of time and your patience, I kept it simple.'\n\nHe was now turning from side to side, still looking at himself in the mirror. \n\nI could hear him saying, 'Oh my, oh my,' over and over to himself as he gazed at his reflection.\n\nI was thrilled with his reaction and about how he looked. By pure chance the black pleated skirt, the soft white blouse, black tights and shoes looked smart and suited his slightly angular frame. The skirt and blouse softened his shape and the skirt was short enough to show off some of what I thought were very good looking legs. \n\nTim was still in there but someone else was emerging in front of my eyes. It wasn't the clothes and makeup, there was another personality coming through from inside him. I could see his confidence growing as he watched himself in the mirror, as bit by bit, he was releasing something that maybe he never knew before was there. The dressing had been the catalyst for a reaction that was still going on; it had caused a dam to burst in his subconscious which was flooding his body with sensations he had never experienced before.\n\nI took him by the hand and said, 'Come on, let's have a drink and talk about this.'\n\nHe nodded and followed me through to the lounge and as he walked I could see he was experiencing the thrill of nylon rubbing against nylon and the tickle of the skirt against his legs.\n\nWe sat down on the sofa and he drank the first glass of wine like it was putting out a fire.\n\nI smiled, 'Steady, girl, we have lots to talk about.' \n\n'Philippa, you're a genius, I cannot believe what you have done. If I couldn't see it with my own eyes I would not have believed it.'\n\n'So, do you think you look good enough to go through with our plan.'\n\nHe waved his wine glass about, 'It may be the wine talking, but I feel great and you've convinced me that I don't look like a lorry driver in drag, but do you think I could be good enough to go out like this?'\n\nThe excitement was bursting out of him and I just had to smile.\n\n'What? Did I say something funny? Don't you think I could do it?'\n\n'No, nothing funny at all. I was just remembering you when you arrived, I thought you were going to run for the hills. Sweetie, you're more than presentable, you are pretty and cute and I think you would be able to go out and mingle with the others with no problem at all. In fact, with more work and practice I think you would be able to pass.'\n\nHe looked puzzled, 'Pass? Is there a test?'\n\nI laughed so much I nearly snorted my wine.\n\n'What did I say?' he looked crestfallen.\n\n'No, it's just the idea of having a test, that would be awesome. Passing in our community means that you're able to go out and be taken for a woman in everyday life. It's the Holy Grail of crossdressers, being able to pass as a woman.'\n\nHe was wide eyed at this, 'You seriously think I might be able to pass, then.'\n\n'Steady, sister, it's not that easy. It's not just the clothes and makeup, it's learning how to walk and talk and move and behave as a woman. It takes time and practice, lots and lots of practice, but, yes, I think given time and coaching and practice, I think you could pass.' He looked down at his hands and was obviously thinking about something.\n\nI refilled his glass and we clinked glasses. \n\nAn idea flashed into my head and before I had time to think about it, I said, 'Tim, this is Thursday, are you doing anything tomorrow and Saturday?'\n\nHe looked up and said, 'I am off for the next three days, why?'\n\n'Well, if you're up for it, we could do a crash course in crossdressing, actually more like a kind of immersion course. I mean, you would spend the whole time as a woman and I could coach you on how to walk and sit and become a bit more passable maybe. Then, on Saturday, we could go out to one of the TG friendly pubs I know and you could see how you get along.' I giggled, 'a kind of coming out party.'\n\nHe looked doubtful.\n\n'Tim... no, it's no good, I can't call you Tim while you're dressed like this. We have to do something about your name. You'll need a femme name for when you're dressed as a girl. Anything take your fancy?'\n\nHe shook his head and his earrings swung and he looked startled, as he had forgotten they were there.\n\n'Let's keep it simple, something that isn't too far from your name. I've got it. Tina, why not Tina?'\n\nHe smiled, 'Yes, I like Tina, I had a school friend called Tina. I liked her. Tina is fine, let's go with that.'\n\nI refilled our glasses, 'Hello Tina, I'm Philippa, I'm pleased to meet you.'\n\nHe smiled shyly and said, 'Hello Philippa, I'm Tina.'\n\nI leaned in for a kiss on the cheek as he did the same. Somehow we missed cheeks but ended up kissing each other on the lips. We giggled, drew back a fraction and then we were kissing for real, lips and teeth mashing against each other, tongues fighting between our lips. I felt his hands go round my back, instinctively my arms went around his neck and pulled him closer into the kiss. I felt his lipstick sliding against mine as the kiss went on and on. I nipped his tongue between my teeth and was rewarded with a moan from him. His hand moved and I felt him begin to massage and squeeze my breast through my t-shirt.\n\nI broke the kiss, drew back and pulled the t-shirt over my head. I put his hand back onto my breast and kissed him again. There was no time to wonder, or think about was happening; this was instinctive, primal desire pushing all thought from the mind. He pulled the cup of my bra down to free from my breast and he broke the kiss, his tongue finding my nipple and it became my turn to moan as I felt his mouth engulf the tip. His teeth nipped my nipple and then his tongue lapped the new rock hard nipple. I really moaned this time as he nipped it again and then moved across to the other side for the same treatment. \n\nI have always been sensitive there and Tim was driving me crazy as he licked and suckled on my nipples. I had to pull him up to give me some relief and we kissed again, slower and more gentle this time, taking our time to explore what each other liked. I tilted his head back and licked up his neck, then nipped his lip with my teeth, stretching it back and letting it go. I wondered how he felt, feeling his lipsticked lips sliding over someone else's lips for the first time. I dropped my hands to his legs and ran my fingers over his nylon clad legs and I felt him shiver as he felt that sensation for the first time also. \n\nMy hand stroked up and down his leg, pushing higher and higher each time as we continued to kiss. He groaned as my fingers found his cock, now hard but constrained by the tights and as I stroked it harder he began to move his hips, trying to rub it against my hand. What sensations he must be experiencing for the first time in his life, I thought. Surely nothing he has done before has prepared him for the incredible feelings he must be going through. \n\nHe had his hand back on my breasts by this time and the bra was making me uncomfortable, so I broke the kiss, took my hand from his cock, unhooked the bra and let it fall to the floor. His eyes were now wide and shining and when he smiled at me at me with his hazel eyes and those lashes I melted. \n\nI managed to straddle him so that my breasts were level with his mouth and I leant forward and placed the right nipple in his mouth. I pulled the back of his head onto my breasts and he buried his face in them. I was writhing now as he attacked my breasts and nipples with his mouth, teeth and tongue. I could stand it no longer, stood up, grabbed his hand and said, 'Bedroom, now!'\n\nI dragged him into the bedroom, stood by the bed and unzipped my skirt and dropped it to the floor, leaving me with just my knickers. I saw his eyes widen as he saw the red and purple bruises on my side and he said, 'Oh my God, I'm so sorry, I didn't realise, that must be so painful, we don't have to do anything if you don't want.'\n\nFor an answer I grabbed him, kissed him hard on the lips and muttered, 'I'll manage.'\n\nI pushed him back onto the bed and he ended sitting with his legs over the edge of the bed. I leant forward, kissed him once again and then slipped down to my knees in front of him. As I did so, a thought flashed through my mind. I was on my knees about to give a blowjob to a copper, a male copper, dressed in women's clothes. This must be wrong on so many levels. I thought about it for a millisecond and decided, 'Nah, nothing wrong with that.'\n\nI looked up into Tim's face and his eyes were wide open as he realised what I was going to do. Our eyes still locked together I slowly pushed my hands up his legs under his skirt and he tensed as he felt my fingers through the nylon tights he was wearing. I stroked my fingers back down to his knees and then back up again two or three times. He began to moan a little as I continued to tease him, my fingers riding a little higher up under his skirt every time until I finally touched his hard cock through the tights and his knickers. I knew that the constriction would be adding to the sensations he was feeling and I allowed my fingers to stroke and rub his cock as he began to move his hips to increase the feeling. \n\nI stood up and straddled him in the bed, grabbed his head and kissing him hard on the lips, I began to move my bum over his cock which I could feel through my knickers. He moaned from somewhere deep in his throat and as I moved his head down to my breasts, he took a nipple between his lips and began to suck until it was hard then nipped it between his teeth, and it was my turn to moan. I teased his cock some more with my bum and it slid between my cheeks and I could feel him getting harder and more excited. \n\nI slid back down from his lap onto to my knees and this time I ripped at the hem of the tights and tore a hole in the crotch. His cock was now constrained by his knickers and I slowly pulled them down at the front with my fingers until it sprung free. The head was already glistening and Tim jumped as I leant forward and blew gently across the head. I looked up to see his beautiful eyes with those gorgeous eyelashes widen even further as I licked the head and swirled my tongue around before sucking it between my lips. I knew he would be close to his climax so I tried to keep him on the edge as long as I could, licking and sucking the head and the shaft until I felt his cock thicken and he grunted and came into my mouth. I tried to swallow as much as I could but some splashed onto my lips. I stood up, straddled him and kissed him and could feel his cum sliding across lipstick covered lips.\n\nWe rolled onto the bed and kissed for what seemed like hours until he pulled back and looked at me.\n\n'Philippa,' he whispered, 'i want to pinch myself to make sure this has been real and not just a dream. I'm scared that I will wake up soon and that this will have been a fantasy.'\n\nI kissed him and said, 'No dream and no fantasy, this is all real, sweetie.'\n\nHe stroked my face with his finger tips and I drew one of his fingers into my mouth and sucked it. He shivered a little, closed his eyes and murmured, 'Please be there when I open my eyes again.'\n\nMy heart skipped and I wrapped my arms around him and drew him close to me. \n\n'I'm not going anywhere.' I whispered back to him. \n\nHe stroked my tummy with his fingertips and my insides fluttered as his fingers slid gradually lower and lower. \n\n'You know what's down there, don't you?' I asked, feeling stupid as soon as I said it.\n\n'Mmm, Yes I do and, you know what, lying here with you like this, it feels right and I'm not scared but a little nervous. This is all new to me.'\n\nWe kissed and I said, 'I don't want you to do anything you're not OK with. I understand if you don't want to do anything, it's OK.'\n\n'No, I want to, but you might have to be patient with me.'\n\nHis fingers traced their way lower until they met the top of my knickers. This slow march of his fingers down my tummy had got me excited and I could feel my cock swelling as he got closer and closer. but when he slipped his fingers under the waistband of my knickers, I gasped. He drew back and said, 'Sorry, did I do that wrong?'\n\n'No, no, you were fine, it was a surprise, please don't stop.' He kissed me as he pushed his fingers back under the waistband and I could feel him drawing closer to my cock. His fingers flicked the head and he drew them back an instant before pushing down again onto my cock. I must have stopped breathing at some point because I took a huge breath as he encircled me with his fingers. I could feel through his kissing he was nervous but he kept going, his fingers gently stroking the shaft.\n\n'It won't break,' I whispered. \n\nI wrapped my fingers around his and began to move them faster and harder up and down my shaft. I knew this would be very different for him, but I kept his fingers moving up and down and I began to move my hips so that my cock slid through his fingers. He broke our kiss and looked down to see my hand around his fingers as I got harder and harder. His eyes were wide as he watched me grow and get more excited. I felt my climax building deep my groin inside and then that irresistible feeling travelled up through my cock until I exploded into his hand. I grunted and pulsed a couple of times, before I slumped back. His fingers were covered in my cum and I took his hand and gently licked most of the cum from them. Tim still had not said a word and I wondered if this had just been too much for him. He brought his hand up to his lips and I was surprised when he pushed out his tongue and began to lick the remaining cum from his fingers.\n\nIt struck me that I was down to my knickers by now and that he was still almost fully clothed. I unbuttoned his blouse and slipped it off his shoulders and unzipped the skirt and he raised his hips to let me pull it off. His tights were now torn so I rolled them off as well. Tim was silent throughout this undressing and he seemed almost dazed by what had happened. I lay on the bed with him pulled the covers over us both and spooned up behind him with my arm over his waist. \n\nWe lay there for a few minutes in silence and then he said very quietly, 'Philippa, thank you.'\n\nI kissed his shoulder and interlocked his fingers with mine and said, 'You're welcome, Tina.' \n\nThe sun woke me up, pouring in through a gap in the curtains. I stretched and touched someone's foot. Half awake, I thought Em must have stayed over again. Then I remembered what had happened last night and my eyes snapped open.\n\nOh my God, I'm in bed with Tim, or is it Tina. The memories of last night flooded into my brain and I closed my eyes again. What have I done?\n\nI could hear his steady breathing behind me so I slowly turned over to look at him. He was still sleeping and his makeup was messed up and the wig slightly crooked but he looked so sweet as he lay there. I reached out and gently stroked his cheek with my fingers and he stirred, then opened his eyes. I prayed that he wouldn't freak out completely waking up next to me. I saw his eyes focus and then a huge grin spread over his face.\n\n'Morning gorgeous,' he said.\n\nI grinned back at him, leant forward and kissed him on the lips.\n\n'Mmm, that's nice,' he said, his grin getting even bigger. We kissed for a while, just enjoying the touch of each other's lips.\n\nI said, 'You haven't changed your mind from last night, then? Do you still want to go through with getting ready for Saturday night?'\n\nHe leant forward, gave me a kiss and said, 'No, I haven't changed my mind, I'm a little scared but I want to try.'\n\nI jumped up off the bed, 'That's great, let's get started. First, I need to show you how to clean that makeup off your face and then we can have breakfast and after that we'll get you dressed and then...'\n\n'Whoa, whoa,' he held up his hands. 'Can I have a coffee first, please. I can't think without a coffee.'\n\nI made us both a coffee and showed him how to clean off the remains of his makeup from the previous night. I was determined to make him do as much as possible these next two days, partly, I admit, because I wanted to see how far he would go down this path. I went out to fetch some breakfast from a cafe round the corner and when I returned I caught Tim looking through the the clothes that Emily had brought across.\n\n'See anything you like?' I said.\n\nHe laughed, 'I have two suits, one jacket, two pairs of trousers, oh, and a couple of pairs of jeans. I never realised there were so many different types of clothes for women.\n\n'That's what makes being a woman so great, you'll find out for yourself soon enough.'\n\nHe blushed but said nothing. It was over breakfast when I felt I needed to clear the air about last night\n\n'Tim, you haven't said anything about last night, I'm worried that you aren't OK with what we did. Are you? OK, I mean.'\n\nHe took a sip of his coffee, giving himself time to think about his answer. \n\n'If anyone had told me two days ago that within 48 hours I would be wearing makeup, women's clothes, touching a penis that's not my own, and sleeping with a transgender woman, I would have had them committed as mad. Yet, that's exactly what happened. I don't think I understand what's happened myself, so I'm not sure I can talk about it rationally right now. What I do know is that before I dressed in those clothes I expected to feel awkward, embarrassed, maybe even disgusted, if I'm honest. At first, yes, I felt embarrassed, especially in front of somebody that I was so attracted to. Instead, as you made me up and I put on the clothes, something changed inside me. I began to feel calmer, more relaxed, less stressed, gentler even. It was almost some kind of a release, something I had been waiting for without knowing it for years perhaps. I've never felt drawn to crossdressing and, I have to admit, my sex life has been pretty uneventful over the past few years, but when you put on the wig and I looked in the mirror, it felt so good. I still don't know how good I look, but it made me feel pretty and nice and happy, yes, happy. it was if I had stepped outside of Tim and stepped in somebody else's shoes, literally I guess.'",
        "He paused for a moment, clearing his throat as a light flush coloured his cheeks.\n\n'You were so nice to me, no-one I've ever known has been so caring and positive about the way I look. I couldn't have done this without you and then, when we kissed, I just lost it. It didn't somehow feel like a man then, I was scared but so excited too. I was kissing someone I had fancied from the moment I saw you in that hospital and where I swore I would find the bastards who put you there.'\n\nI took his hand, 'Baby...'\n\n'Please, Philippa, let me finish. So, when you kissed me I just felt like something gave way inside me, I couldn't stop myself and wouldn't have wanted to anyway. Yes, I was confused when you sucked my cock, but not so confused that I wanted you to ever stop. I had never felt so turned on and excited by anything before, you really took me to a whole new level of pleasure and when we lay on the bed I knew I had see if I could go one step further, I needed to see if this was just me reacting to what you were doing or whether I could do something I would never have dreamt of. Well, I did and the earth didn't open up and swallow me, and God didn't strike me down. I wanted to make you happy, Philippa, and I liked it. I liked all of it, and I want to do it again. I don't know whether I've answered your question, but if you want me to leave now, I will.'\n\nI took a moment before replying, and I saw apprehension in his eyes as I took his hand once more.\n\n'Oh Tim, why on earth would you think I want you to leave? That was the most beautiful thing I have ever heard, I don't want you to leave.'\n\nI reached out and hugged him, tears pricking the corners of my eyes. I felt his arms tentatively go around my back and then he was hugging me back. \n\n'Thank you, Philippa, I was praying you would say that.'\n\n'Did you really fancy me at the hospital? I must have looked bloody awful when you came in and did you know I was...' \n\n'TG? Yeah, I knew. The hospital reported it as a hate crime, remember?'\n\n'I must have stood there for about five minutes watching you before you woke up and you looked so helpless and beautiful while you slept. I think I fell for you then.'\n\nIt was my turn to blush scarlet at his words. 'Oh Tim, that's either very sweet or very spooky.'\n\nHe laughed, 'I prefer sweet.'\n\n'But you knew I was TG and yet you say you fell for me? I'm sorry for asking this, but are you gay?'\n\nHe paused and looked down, 'I didn't think I was, but now? I don't know. I've had girlfriends for sure and never fancied men. But when I saw you, I knew that I was attracted to you, it was as simple as that. Does that make me gay?'\n\n'I don't know either. Labels are for clothes in my book, not people. I've never worried about it and don't intend to start now.'\n\nI kissed him and said, 'What I do remember is being very jealous of your eyelashes, but I was probably concussed at the time. Are you sure you still want to go on with this plan? I mean if you have any doubts, please tell me now.'\n\n'No, more than ever I think I want to catch these two thugs for what they did to you and to stop them doing it again.'\n\nI breathed a sigh of relief. 'OK,' I said, 'but I think we need to get clear a few ground rules. Firstly, these next two days will be completely feminine, if this is going to work you will need to immerse yourself as a woman. It isn't really about the clothes or the makeup, it's about thinking and acting as a woman at all times. I know it's going to be awkward but the more you believe you are a woman, the closer you will get to looking and acting like one. You're going to be Tina, not Tim, for the next two days and nights. Secondly, you will do as I say at all times, nothing we do will go outside this apartment, so it will just be between the two of us, is that clear?'\n\nHe looked a bit apprehensive, but nodded, so I went on, 'Thirdly, If, by tomorrow afternoon, we both agree that it feels right, then we can go out to a friendly pub I know which has a TG evening as a dry run so you can get to meet some of the girls you want to talk to. Is that OK?'\n\nHe gulped once and said, 'OK, but you'll be with me, right?'\n\n'Oh yes, I'm not going to let my new girlfriend go out by herself.' \n\nThe first task was to teach Tim some makeup basics, not that I expected him to do it straightaway but I showed him the basics of a daytime makeup and with a lot of help and guidance and a couple of false starts, we got there. I was giggling a lot, which made Tim giggle too, so I thought he was enjoying this. he couldn't take his eyes off his reflection in the mirror, and he was fascinated by how much it had changed his face. \n\n'Can I put the wig on please,' he asked, 'I don't like looking like a bloke wearing makeup.' \n\nI helped him fit the wig and I could see the change in him immediately. The wig seemed to make him relax and the stiffness left his face and became softer right in front of me eyes. \n\nHe turned to me, 'Do you think I look pretty?'\n\nI smiled and came up behind him so we could see both our faces next to each other in the mirror. I gave him a kiss on the cheek and said, 'Yes, I do think you look pretty, you have the most beautiful eyes and lashes, and very kissable lips.'\n\nI leant in to kiss his lips and he moved away saying, 'Don't you dare, it will take me ages to do them again.'\n\nI pouted and pretended to be upset, but inside I was cheering, for he was really getting into this. For clothes I wanted to select something that was feminine but not too tarty. The mistake a lot of new crossdressers make is to look like they should be standing on the street corner. It may fulfil their inner fantasy, but it makes them stand out like a Goth at choir practice.\n\nI asked Tim if there was something he liked and he shyly picked up a navy and yellow floral print dress. \n\n'I quite like this,' he said. \n\n'Mmm, I approve, you have a good eye, Tina.' It had a round neck, short sleeves and a belt and I thought would suit Tina's straight up and down shape. It would also make the most of his legs, which I was beginning to think were his best feature, OK, second best feature, if you get my meaning. \n\nI threw Tim a pair of knickers which I had bought the previous day along with one of my bras and a fresh pair of tights. \n\n'Can you put those on yourself' I asked.\n\nThe knickers were again white but this time they were lacier than the ones he had worn yesterday. He looked at them, gulped and said, 'OK, I think so.' I thought the knickers and the tights would flatten him enough to wear the dress for today, so I said, as casually as I could, 'When you put the tights on, just push your cock back between your legs, it will help give you a nice flat front, no unsightly bulge. You can push your balls up too.'\n\nHe looked at me as if I had gone mad, 'What?'\n\nI repeated myself and he shook his head, 'I can't do that, it's impossible.'\n\n'I can assure you it's not, it's called tucking and yeah, it takes a bit of getting used to, but it's essential if you want to pass.' \n\nPushing my luck, I said, 'I can help you if you want.'\n\n'Nooo, let me see what I can do myself.' \n\nHe disappeared to the bathroom and was back about 30 minutes later, red faced, wearing the bra and with the tights over the knickers.\n\n'Well?' I asked.\n\n'I cannot believe what I have just done, it's so fucking uncomfortable. I was just about to give up and come back out and tell you it was all off, when somehow they popped up inside. It felt so weird, still does.'\n\nHe looked down and said, 'They do drop down again don't they?'\n\nI couldn't help laughing and got him flustered again.\n\n'Please don't laugh at me, Philippa, this is all so difficult.'\n\n'I'm sorry, babe, I promise I won't laugh any more.' I moved closer, gave him a big hug and a kiss, 'You're doing really well. Are you sure you haven't done this before?'\n\n'No and if you're not careful I won't be doing it again.'\n\nTime to shut up, Phil, I thought.\n\nI handed him the breast forms which he slipped into the bra and I smiled to myself this time, as he jiggled about to get them to fit properly. He was getting the hang of this very quickly. I held the dress as he stepped into it and zipped it up. It hung a bit awkwardly at first but when I pulled the little belt tight the skirt flared out and it looked good on him. Once the wig was on and adjusted I got him to look in the mirror and he straight away started to check out what it looked like from the side and even over his shoulder to see the view from the back. \n\n'Happy?'\n\nHe glanced at me, smiled and a little colour flushed his cheeks. 'Yes, I think so.'\n\nI told him to sit on the sofa and he just sat down and immediately scrunched up the skirt of the dress. \n\n'OK, first lesson, when you sit down in a skirt, you need to smooth it out under you before you sit on it otherwise you will crease it before you even start. And sit down gracefully, keeping your knees together, unless you want to flash your underwear at every man in the room.'\n\nHe blushed and looked a bit upset. 'Tina, don't get mad, you are doing this for the first time, I told you it takes practice.'\n\nI showed him once and then asked him to do it again. It was a lot better this time and after i got him to do it twice more it began to look more natural.\n\nShoes came next and I had found a pair of black ankle boots with a cuban heel I thought would do the trick. They had two inch heel though and when I pulled them out Tim immediately said no, he would never wear heels. \n\n'Heels? these aren't heels,' I said, 'look, just try them on see how you feel, we can go back to the others if you really want. I slid them onto his feet and luckily they did fit.\n\nI held his hand and he tried to stand and immediately wobbled. I held on to him and he took a couple of steps and although he was a little unsteady, he managed better. I told him to take shorter steps and that made things a lot easier. He kept going and managed to walk up and down the room a couple of times.\n\n'My God, it feels so different, but it's not as bad as I thought it would be.'\n\nWickedly I thought to myself, let him say that when I get him into a pair of five inch stilettos. \n\n'Tina, we're only going to be able to scratch the surface over the next two days, but there are some things that we can work on to get you ready for your coming out on Saturday.\n\nHe pulled a face, 'I wish you wouldn't keep saying coming out like that.'\n\nI tried to look innocent, failed badly and smirked instead.\n\n'Okay, okay, I promise.'\n\nI tried to remember when I started this journey and realised that I didn't have to unlearn anywhere near as much as Tim would have to. A lifetime of being male cannot be undone in a few hours, but there were some things that we could practice that would have change his mannerisms. I got him to walk slower with smaller steps than he usually would and to keep his elbows tucked in. This helped to reduce the more aggressive masculine stride he would usually adopt. I tried to get him to walk with one foot in front of the other and to sway his hips. After a few false starts, he began to move a little more easily than before. Tim said that he had done some ballroom dancing at school and so we tried a few limbering up exercises which also seemed to help. \n\nBy lunchtime, Tim's calves were beginning to ache and we took a break for some food. I suggested we go out to the local cafe, but he turned pale and refused outright. I made some sandwiches for us and while we were eating, I persuaded him to let me put nail varnish on his fingernails, only after swearing on my grandmother's grave that I would take it off later. I spent a lovely hour giving his nails and lovely burgundy colour and even with his short nails, it looked good. After they were done, Tim couldn't stop looking at them, but he outright refused to have his toenails done.\n\nThe rest of the afternoon was spent in more practice and it was obvious that Tim was getting more comfortable with what he was wearing and trying to follow what I was asking him to do. He was beginning, I thought, to move less stiffly and more gracefully than before. I got him to slow down his movements and to use his hands more when talking. I suspected Tim had just about reached the end of his tether by the late afternoon, so I called an end to practice and I brought through some white wine from the fridge and we both gratefully sank back onto the sofa. Tim now looked so much more comfortable in his dress and I thought he was learning fast. I just had to try to build on that confidence before Saturday night.\n\nTim asked me when it all started for me, so I told him my story from the beginning up to the present.\n\n'Philippa, I'm not sure what to say. You've had to put up with so much to get here. That would have taken so much courage and guts to do what you've done.'\n\nHe reached over and hugged me tight. \n\n'I don't know about courage,' I said, 'for me it was about wanting something so bad that you can't face living without it. It hurt me to think that I couldn't be who I wanted to be, who I needed to be really. It wasn't my choice, it was who I was already, I just had to get everybody else to see it. Some still don't, but that's their problem.'\n\nHe hugged me even tighter, and said, 'Someone once said it takes courage to grow up and become who you truly are. That's what you did.'\n\nWe drank a little more wine and I began to think about where to go tomorrow evening. There are a few more TG friendly pubs and clubs in London than there were, but it's not always easy to find a place for people from the community to get together without the intimidation you find in a straight place. There was a pub not too far from my apartment, The Cardinal Richelieu, which has a big party room where the landlord has a party every Saturday night which attracted a mixed crowd of crossdressers, Transgender girls, significant others and admirers. I knew Tim would be nervous, but I remembered it as a friendly place, where a first timer would be welcome. I called Emily from the kitchen, when Tim was using the toilet, to tell her what had happened between Tim and myself and what I had planned for Saturday at the Cardinal Richelieu. \n\n'Are you sure you know what you're doing?' she asked.\n\n'Think so, what do you mean?'\n\n'You're taking this very seriously.'\n\n'Catching these bastards is a serious matter, I want to put these arseholes away for a good long time.'\n\nShe paused, 'No, I mean you're taking this thing with Tim, or Tina, whoever, you're taking that very seriously.'\n\n'It's one and the same thing, isn't it?'\n\n'I hope so, Phil, I hope so. Just be careful, will you?'\n\n'Yes, Mum, I will do, and I won't be late home, I promise.'\n\nEmily laughed, called me a very rude word and rang off.\n\nTim still wouldn't go out anywhere dressed as he was, so I made a quick pasta for dinner and afterwards as we were sitting on the sofa with a drink, I confessed about the case involving Gareth Evans and the break in at the office together with the theft of the laptop and camera.\n\n'Bloody hell, Philippa, why didn't you tell me before?'\n\n'i didn't think it was relevant and I'm still not sure it is anyway.'\n\n'I'll run some checks when I'm back at the station, but is there anything else you want to tell me, young lady?'\n\nI bit my lip and peeked at him from behind my hair.\n\n'No, Ma'am, nothing else. Have I been naughty? Will I have to be punished?'\n\n'Oh yes, young lady, I think you will have to learn your lesson over my knee.'\n\n'Don't you dare,' I squealed, but he was quick and had pulled me over his lap before I could stop him as he pushed my skirt up and started to slap my bum. He gave me a couple of whacks over my knickers but then I felt him pull them down and started slapping my bare bum.\n\n'Oww, stop it you bastard, Tim, I'll get you for this, mark my words.'\n\nHe didn't stop and although he wasn't slapping me hard I could feel the sting as his hand hit my bare cheeks. I don't know exactly when it was the stings turned to warmth and I couldn't believe it but I began to feel turned on the whole scene. I could feel my cock getting harder as Tim continued to slap and I then I felt his cock start to grow and poke into me. I was moaning by this time and his slaps were getting weaker. I jumped up off his lap and pushed him back onto the sofa. I pulled my knickers down, threw them away and climbed onto the sofa so that I was pinning him down on his back. \n\nHe was laughing and I could feel his cock pushing up through his dress and against my bum. I grabbed his cock and squeezed.\n\n'Oww, not fair.' he squeaked and I said, 'I told you I would get you back, buster.'\n\nI gave his cock one last twist and he yelped again. I edged forwards up the sofa until my cock was bouncing around in front of his face. He stopped laughing and gave me a worried look.\n\n'Hah, not laughing now are we? Tables are turned I see.'\n\nI took hold of my cock and rubbed the head over his lips and around his mouth. He tried to keep his lips together but I held his nose and he had to open his mouth to breathe and I slipped my cock straight inside. he gagged a couple of times, but I stroked his head and said softly, 'Come on, just lick it, I did yours yesterday, it doesn't hurt. use your tongue.'\n\nI almost jumped when I felt his tongue begin to lick the head of my cock. I looked down and he was almost asking me was this right? I nodded, 'That's great, Tim. Just keep doing what you're doing. Wrap your tongue around it, go on, you're doing fine. Now, move your head back and then forward so the head comes out and then back in. That's great, Tim. Now a little bit deeper and then back out again.'\n\nHis eyes were fixed on me all the time I was talking to him. 'You're doing fine, i'm really enjoying this, keep going. Now, let it slide out of your mouth and use your tongue to lick it up and down, oh, that's brilliant, that feels great. Doesn't this make feel like a girl? Sucking a cock, that's really girly, isn't it?'\n\nHis arms were trapped underneath me by my legs so I reached down and pulled my cock back against my tummy.\n\n'Now lick your tongue up my cock, tim, that's right, from the bottom to the top, that feels so good. Ohhh, that feels so good, one more time, Tim. That's good, now wrap your lips around the tip and lick it with your tongue. That's so good, I love that, it feels so nice. Now take it right into your mouth and hold it there. That's right, keep using your tongue, but keep your teeth out of the way. That feels wonderful,Tim. Keep sucking and licking.'\n\nI could feel I was getting close to cumming and I used my hand to stroke my cock as tim sucked the head. \n\n'That's lovely, Tim. I can feel I'm going to cum soon, get ready, Tim.' His eyes widened and he shook his head. I smiled and pulled my cock out of his mouth just before I spurted cum all over his dress. \n\nHe spluttered and gagged a bit.\n\n'Told you I would get you back, babe. Don't get mad, I wasn't going to cum in your mouth. Not this time anyway.'\n\n'Shit, Philippa, I thought you were going to do it.'\n\nI laughed, 'Never on a first date.'\n\nI pulled him up from the sofa. 'Come on. let's get cleaned up and then I think it's bedtime.'\n\nI pulled him over to the bathroom and told him to slip off the dress so I could put it in the wash. I got him to clean off his makeup and then we both undressed and shared the shower, soaping and washing and kissing each other until the water began to run cold. We dried each other and I led Tim into the bedroom. \n\n'OK, remember it's all girl these two days, so you get to wear this beautiful nightdress. I handed him one of my favourite short nighties; pale blue silk, with lace at the hem and around the bodice, and a slit at one side. Tim looked at it suspiciously and I said, 'Go on, put it on. It won't bite you.'",
        "'What are you wearing?\n\nI picked up a pair of silk pyjamas and pulled on the trousers. \n\n'Why can't I wear them instead of this.' He pouted as he said it.\n\n'Because I said so and you agreed to do whatever I said, remember?'\n\nHe grumbled some more, but as I put on my pyjama top he pulled the nightie over his head and it fell beautifully to mid thigh on him. 'Wow, Tim that looks very pretty on you. I adjusted the straps and it did make him look very feminine. \n\nI think by this time at the end of a long day we were both tired. We kissed and cuddled in bed and it wasn't long before I could sense tim was asleep. I lay awake for a while, wondering if I was doing the right thing before I, too, fell asleep. \n\nI woke up slowly in the morning and as I lay there watching Tim sleeping, I had a brainwave. I slipped out of bed trying not to wake Tim and scrabbled around for my phone. I closed the door to the kitchen and made a phone call to an old friend. I woke Tim with a coffee, a kiss and a cuddle, which turned very quickly into a love making session. Tim's mouth quickly latched onto my breasts and his tongue licks had very soon got my nipples hard and the excitement spread right throughout my body. I wanted him so much at that moment and my hand found his already hard cock and I started to stroke up and down its length. His mouth was still working on my nipples when I felt his hand encircle my cock and I gasped in pleasure as he mirrored with his fingers what i was doing to him. As my excitement grew I wanted him to take me, I wanted that cock of his inside me, I wanted him to fuck me there and then. \n\nI didn't know how he would react but I was so horny by this time I had to get him to do it. I Rolled him onto his back and straddled him, my hands now rubbing his nipples as his hands reached up to cup my breasts and i could feel his cock pushing up into my crack. I looked down into his eyes and said, 'Tina will you fuck me? I want to feel you inside me. Fuck me now, please.'\n\n'Oh God, yes, yes, I want to, but you're going to have to show me how.'\n\nI leant over and grabbed a bottle of lube from the table and reached back behind me to smear it over his cock and then my hole. I raised myself up and looking him straight in the eyes, I used my hand to position his cock into my entrance and then let my weight push down onto him. I heard him grunt as I felt the head push its way past my ring and then he was inside me and I gasped as I took his whole length. His hands were still kneading my breasts as I began to slowly push up with my legs and then slide down onto his cock. I closed my eyes as the initial pain subsided and then pure pleasure took over. He began to push his hips up as I came back down and it felt like I was being impaled on a steel rod as his cock seemed to get harder and harder. I was moaning loudly now as it seemed to go and on for ever and then without warning I felt his cock swell and his cum erupted inside me. He grunted and kept pumping into me as his climax ripped through him. I felt him subside and i rolled off him and his cock slid out of me, leaving me feeling empty inside.\n\nI pulled myself up beside him and kissed him fiercely.\n\n'Oh my God, that was awesome.' I managed to gasp and rolled onto my back to catch my breath.\n\nI turned to look at Tim, who was staring up at the ceiling.\n\n'Are you OK?' I asked, getting a little worried.\n\nHe turned his face to me and said, 'I have never ever felt like that before. I felt that every nerve ending in my body fired at the same time. It was unbelievable. I loved it.'\n\nHe moved closer and kissed me, 'Philippa, I can't really explain or even understand I'm feeling but right now all I know is that you are the best thing that's ever happened to me.'\n\n'Aww, that's so sweet, Tina. Although I do have a few ideas up my sleeve that might beat that.'\n\nWe spent the day with more practice. Tim managed to do his makeup with only a little help from me and after we had chosen his outfit for the day - a shorter skirt than he had worn so far and a long sleeved black lace top, worn over a black bra - I decided to get him into some higher heels. When I showed him the strappy black sandals with a three inch heel, he said he couldn't possibly walk in them. I eventually wore him down and with a great deal of whining and complaining I got him to try them on. I think the smaller heels he wore the day before had made it easier to get into these. It again took a little practice but he managed to stay upright so long as he walked with shorter steps, which helped him get a more feminine sway to his hips. \n\nIt wasn't possible to do so much in two days but by the mid afternoon, I thought Tim was light years away from where he was a couple of days ago. In my opinion he would be OK for a first timer for the big night. It was about 3 o'clock when Tim asked for a break, he was complaining that his calves were killing him and he took off his shoes and rubbed his feet.\n\n'These heels are killing me.'\n\nI harrumphed and said, 'Wait until you're wearing 5 inch heels, then you can complain.'\n\nFor once he didn't blush at the suggestion. It was at that moment that the front door bell rang and I said, 'Tina, can you get that?'\n\n5 Sarah\n\nI think Tim had forgotten what he was wearing because he walked straight over to the door and opened it. \n\n'Hi, I'm Sarah, you must be Tina, I'm pleased to meet you, is Philippa there?'\n\nIt must have been at this moment that Tim remembered what he was wearing and he called out in a very quavery voice, 'Philippa.'\n\n'If that's Sarah, let her in will you?' \n\nSarah came through and I greeted her with a big hug. Sarah is one of my oldest friends and the T-girl who, way back when I started out on my journey, helped me sort myself out about what I wanted to do with my life. She got me on track and became the big sister I never had growing up, and we stayed best friends ever since. She is also gorgeous; tall, long legged, naturally blonde and one of the nicest people that has ever lived. Tim was gesturing behind Sarah obviously wanting to talk to me in the kitchen.\n\nInstead, I said, 'Tim, I would like you meet Sarah, my BFF, mentor and big sis. Sarah, this is Tim, no sorry, I mean Tina.'\n\nTim looked aghast and said, 'But you said it would only be us two.'\n\nSarah jumped in, 'Tina, Phil rang me this morning and explained what was going on and asked me to help. I agreed and she told me she wouldn't tell you about me as she knew you would never agree to meet me. Let me tell you a bit about myself and then if you still don't want me around, I'll understand completely and I'll leave. But first, can I get a cup of tea Phil, I'm parched.'\n\nI went off to make the tea and left Sarah and Tina sitting on the sofa to talk, but managed to listen through the crack in the kitchen door.\n\n'Tina,' Sarah began, 'I first met Phil maybe 15 years ago. She was a scrawny little thing who was so confused about her sexuality that she was in danger of going off the rails completely. We met at a party a mutual friend was having and we just began talking and hit it off. I had started my transition about three years before.'\n\n'You mean, you're a...' Tim stuttered.\n\n'Transsexual, yes I am.'\n\n'But, you're so beautiful.'\n\n'Thank you, Tina, but I was born a boy and I knew from a very early age that I was really a girl. I was absolutely certain I had been born in the wrong body, so I eventually began to transition and that's when I met Phil. She needed someone to guide her and that's where I came in. Her big sister is what she calls me. I gave her what advice and help I could and I don't think she has come out all bad, do you?'\n\nTim shook his head, 'No, no, she's great.'\n\n'I went on to transition completely, SRS and everything and became a professional makeup artist and consultant. I work mainly in the film and television industry and consult for some of the big cosmetic companies as well. Phil called me this morning and explained what you are doing, trying to catch these evil bastards and asked if I could help with your big night. She said that you were nervous about going out en femme for the first time and thought that if I could help you get ready for tonight you might be more relaxed.'\n\nTim smiled wistfully, 'I think relaxed is aiming a bit too high, I would settle for being not quite terrified.'\n\nI choose that moment to come back in with the tea, and poured us each a cup. It was enough of a distraction to allow Tim to make his mind up.\n\n'Well,' I said, 'do you think Sarah should stay?'\n\nHe looked me straight in the eye, 'Philippa, I promise I will get you back somehow for the trick you played on me,' he turned towards Sarah, 'but if Sarah would stay and help, I would be very grateful.'\n\nA big grin broke out on my face and Sarah laughed, 'You will never change will you, Phil? OK, Tina, show me what you are going to wear tonight and I will decide what I can do to match it.'\n\nWe had earlier chosen a dress for tonight. It was made of sheer fabric, embroidered with flowers and butterflies with tiny sequins, with cropped sleeves, over a belted black camisole slip and came to about four inches above Tim's knees. It was one of my favourite dresses and I was pleased when Tim liked it too.\n\nSarah nodded and said, 'Oh, yes, I can do something with this, for sure. Now, let's have a look at you, Tina.'\n\nShe sat him down at my dressing table and turned the light on. \n\n'Phil, you weren't joking about the eyelashes, they are wonderful and these cheekbones are lovely too. I can do something about the nose, and I'll draw attention away from the chin to those beautiful eyes. OK, let's get going. Go and have a shower, shave as close as you can and then moisturise all over.' I handed Tim the pink robe as he headed for the bathroom.\n\n'He really seems to be up for this. Maybe more than meets the eye?' she said over another cup of tea.\n\n'Maybe.' I replied. 'He certainly put up some resistance at first, but as we've gone on he has got more and more into it. I think he's enjoying it now.'\n\n'He certainly likes you, Phil. Haven't you noticed the way he looks at you with those big puppy eyes?'\n\nI couldn't keep eye contact and Sarah leapt onto it. 'Maybe you and he have already got it together?'\n\nI blushed and Sarah laughed, 'I can't say I blame you, babe. He seems really nice, just don't get hurt, OK?'\n\nTim chose that moment to emerge from the bathroom wrapped in the robe and looking like a scared rabbit. Sarah sat him down in front of her at the dressing table and leant down into her makeup box and the magic started. My job was to stay out of the way as Sarah worked and to keep her supplied with tea, which she drank in extraordinary quantities. She worked steadily, keeping up a running commentary to Tim as she did every stage of the transformation. \n\nAlthough I had seen her working many times before, it still fascinated me to watch her as she juggled sponges, brushes, powder, and mascara to methodically transform Tim's face in a way that I could never have done.\n\nI didn't interfere as Sarah knew exactly what to do, but jumped in when Tim protested at Sarah wanting to pluck his eyebrows. I managed to get him to agree to Sarah thinning them out without making them appear too feminine for work. He yelped like a baby when she started.\n\n'It's painful sometimes, being a girl.' I said.\n\nWe had covered up the mirror again so Tim couldn't see what Sarah was doing, but by now he had abandoned himself to her skills. I think she talked her clients into agreeing with her ideas without them really knowing why they had agreed. I could see the wizardry that Sarah was using on Tim as she built up the foundation and blusher almost as an artist would on a canvas, highlighting his cheekbones and taking attention away from his chin.\n\nSomehow, she managed to use shading to reduce the size of his nose and with a skill that I could never hope to match, she blended several different shades of eyeshadow and then eyeliner to extend and enlarge his eyes, finishing off with mascara on those lovely lashes. The whole effect was to draw you to Tim's eyes, which Sarah's makeup had made into mini works of art. Finally, Sarah used a pencil, together with pink lip liner, to help create a fuller, plumper look to his lips. \n\nSarah had finished his face and pulled out some false nails and quietly suggested to Tim that they would complete the look. He looked at me and I nodded, 'We can take them off easily before you go back to work, I agree with Sarah, they will look fantastic.'\n\nSarah said, 'You won't regret it, Tina, I promise.'\n\nI watched as Sara applied the false nails and I always marvel of the difference nails can make to your hands. They add elegance to your hands as they extend the line of each finger and the colour adds emphasis to your gestures. Tim seemed to be fascinated by what was happening and when Sarah had finished he was wiggling his fingers to and fro as he tried to get used to the sight and feel of them.\n\n'How do you cope with these every day?' He said to nobody in particular.\n\nSarah and I exchanged a glance and a little smile at the way he was responding to all this. I think she also realised that he was enjoying this rather more than maybe we had both expected. I was now sure that what we were doing had moved beyond a mere exercise and was allowing Tim to live out a side of him that had been buried deep in his psyche. \n\n'I have one more surprise for you, Tina,' said Sarah and she went to her bag and produced what looked like a magnificent wig. 'This wig was made for a certain movie star who I cannot name, but she wore it once for a scene and then it found it's way into my hands. It's real hair and just the right colour to match your colouring. I think it would be stunning with the makeup and the dress.' \n\nIt was shoulder length, ash blonde with some highlights, and when Sarah gently eased it onto Tim's head it fitted perfectly.\n\nSarah brushed it out a little and then stood back and declared herself satisfied with her work.\n\nTim said, 'Can I see it now?'\n\n'Not yet, sweetie,' I said, 'Let's get you fully dressed before we do the reveal.'\n\nI handed him a bra, a pair of knickers and a packet of tights. he took them from me, paused and said in a quiet voice, 'Could I try wearing stockings tonight? I just feel so lovely like this, I think they might be nice.'\n\nI turned to look at him and out of the corner of my eye, I saw Sarah trying to conceal a smile.\n\n'Er, OK, that's fine, I think I have some somewhere and a belt to wear with them. Let me go find them.'\n\nI remembered I had a bra and knickers with a matching suspender belt and I managed to turn up a pair of stockings too. I brought them back and handed them to Tim, but as he looked at the suspender belt with its straps and clips he said, 'Well, maybe not.'\n\n'Look, I know it looks complicated but if you want to wear it I can help you put it on.'\n\nHe looked doubtful and I saw his eyes flick towards Sarah.\n\n'Sarah,' I said, 'Can you go make us all a tea please?'\n\nShe realised what I was doing and nodded and headed off to the kitchen. \n\n'There's no need to be shy in front of Sarah.' I said. 'Let's get this done for you.' He removed the robe and stood there naked and I just couldn't resist giving his bum a squeeze. He jumped a mile and glared daggers at me. I gave him the knickers and he pulled them on followed by the bra. He was getting pretty good at that by now and pushed the breast forms in place. I moved behind him and looped the belt around his waist, fastening it at the back. I moved to his front and showed him the clips and how they opened and closed to grip the stocking tops. \n\nI said, 'It's easy when you get used to it but with those nails you might want some help.' \n\nI knelt in front of him and rolled the first stocking into a doughnut shape and holding onto my shoulder for support, he pointed his toes and I pulled the stocking up over his foot and then unrolled it up his leg. \n\nI heard him draw his breath in as he felt the sheer stocking slide over his leg and it took me back to the first time I did this myself, with exactly that same feeling of excitement and bliss. \n\nI stroked the top of his leg and I swear he quivered at the touch. I pulled down the first clip and quickly attached it to the stocking top and then did the same with the second. My head was at the same level as his crotch and I could see there was a bulge growing in his knickers so I leant forward and gave his cock a kiss through the material. \n\n'Philippa, please don't,' he squealed. \n\nI grinned up at him, took the second stocking and repeated the process. This time I gave his bulge a little rub and he moaned.\n\n'Isn't it nice being a girl?' I teased. 'Sarah, you can come in now.'\n\n'No,' he hissed, 'Not with me like this.'\n\nSarah walked back in and whistled, 'Wow, Tina, you look gorgeous. I love the lingerie.'\n\nTim looked as if he wished he was anywhere else at that moment.\n\n'Ok babe, let's get you into your dress, so you can see what you look like.' I said.\n\nBetween us, Sarah and I carefully manoeuvred the dress over Tim's head and I zipped it up at the side and fastened the belt. Tim sat on the sofa to put on the shoes and I was pleased to see him smooth the dress out as he sat down. He managed to stand up from the sofa by himself and I could see he was now much more comfortable in the shoes. Sarah took him by the hand and led Tim into the bedroom and over to the full length mirror which I had covered with a sheet. With me on one side and Sarah on the other, I said, 'Ready?'\n\nHe nodded and for the second time in 48 hours I let the sheet slip off the mirror in front of Tim. He gasped and I'm sure his knees almost gave way as he saw his reflection. His hands flew up to his face and his pink lips formed a perfect O in surprise. He turned his head from side to side, then looked at Sarah and then me. His mouth was moving but no sounds were emerging. \n\n'Do you like it?' asked Sarah anxiously\n\nTim looked at Sarah and finally managed to say something, ' Like it, I love it. Never in a million years would I think this is me in the mirror. I can't believe it.'\n\nSarah beamed broadly and I gave her a massive hug and a kiss.\n\n'Thanks Sarah, you have done a brilliant job, I owe you big time.' I whispered to her.\n\n'You're welcome, love. I might collect from you one day, unless,' and she nodded towards Tim, who was still gazing at his reflection in the mirror, 'that is, you're not already taken.'\n\nI giggled and gave her another kiss, 'I don't think it's that serious.'\n\nSarah glanced at her watch and I realised it was already half past six.\n\n'Shit,' said Sarah, 'I have to move this big arse of mine.'\n\nTim had finally broken away from the mirror and gave Sarah a hug.\n\n'Sarah, I can't say thank you enough. I really don't understand how you've done this. I feel fantastic.'\n\nSarah smiled, 'That's all the thanks I need, Tina. You're very welcome. I'm sorry, I can't come with you tonight, I've got a gig on the latest Bond film tonight and it's an all night shoot out at Docklands. I'm sure you will do great. You look fantastic and I'm sure Phil will look after you tonight. There's just one thing left for me to do.' Sarah bent down, picked up her phone and took a photo of Tim before he could move.\n\n'What was that for?' He sounded upset.\n\n'Don't worry Tina, I take a photo of all my jobs, I have to so I know what I've done for who. It's just for my records.' \n\nSarah gave Tim a careful hug and then embraced me. I whispered in her ear, 'Send me a copy of the photo please?' \n\nShe smiled, nodded and we said our goodbyes. \n\nI opened a bottle of Prosecco I had in the fridge and we had a glass to celebrate the makeover.\n\n'You know, I could have cheerfully arrested you and thrown you in the cells for that trick you played on me with Sarah. But, I admit she has done a fantastic job, I am overwhelmed by how I look.'",
        "'Well. if you do want to arrest me then I'm sure I can come up with some reason for you to put me in handcuffs.'\n\nHe laughed and said, 'Well there's no way I can carry handcuffs in this outfit.'\n\nThat reminded me that Tina would need a bag to carry tonight and I realised with a start that with all the attention on Tim's makeover, I needed to get ready to go out. I told him to relax but not to mess up his makeup and disappeared into my bedroom. It gave me a little time to think about my own feelings about Tim. I liked him for sure and I knew he liked me, but, was that enough? I had enjoyed the sex and, to be honest, I was also turned on by transforming him into Tina. I hadn't planned it that way from the start, but as Tim got more and more into being Tina, I wanted it to go further. Was I trying to to turn him? I don't know, but he wasn't putting up many objections any more to what was happening. I thought that tonight would tell how serious he was prepared to get.\n\nI wasn't going to be completely upstaged by Tina tonight, I had standards after all, so I did my makeup with a little extra care but I knew my hair would have to do with a brush through. I picked out a sexy little dress that I had bought a while ago and hadn't worn yet and when I walked back in the lounge Tim looked up and gave me a huge smile.\n\n'You look fantastic, Philippa. That dress suits you so well.'\n\n'Thanks, Tina, but I can guarantee all eyes will be on you tonight.'\n\nI called a mini cab and while we waited I sorted out a small bag for Tina and put the makeup repair kit that Sarah had made for us before she left. We had another quick glass of Prosecco and then the taxi arrived. I let Tina slide into the back seat first and she managed to keep her knees together and swing in as I had hurriedly taught her while we waited for the taxi to arrive.\n\n'Where to, girls?' the driver asked. 'The boys are going to get lucky tonight, I see.'\n\nWe both burst out laughing and the taxi driver looked puzzled. He dropped us outside the Cardinal Richelieu and I helped Tina get out of the taxi, an even more difficult task than getting in, wearing heels and a short skirt. I held Tina's hand as we stood outside the pub door and and I could feel him shaking. I held his hand even tighter and said, 'Remember how good you look, you will be fine. I won't be far away and don't forget these girls are just like you, they've all been through this, they want to be your friend.'\n\nI gave her a quick hug and we walked into the pub. There was a back room to the pub where the party was being held. I had been here many times over the years and I wondered if I still knew anybody. We pushed open the door and it was obvious that it was already well under way. There was a bar along one wall, a dance floor in the middle and tables and chairs along the other wall. At the far end a DJ was playing Britney Spears very loudly. There were groups of girls standing by the bar and a few were dancing with more sat at the tables. There were also a few guys, either friends or admirers spread out across the room as well. I felt Tim's hand find mine and I said to her, 'Let's go get a drink.'\n\n6 Holly and Lola\n\nWe got a lot of glances from the girls and I noticed Tim was getting his fair share of attention but he was keeping his eyes fixed on the floor. I reached the bar and got a bottle of white wine and glasses and was just about to make our way to a table when I heard, 'Philippa, you lovely girl, long time no see, where have you been?'\n\nI looked round and a girl broke away from a group and grabbed me in a huge bear hug.\n\n'Holly,' I said, 'You're squashing me, I can't breathe.'\n\nIt was no exaggeration, Holly was about 6ft 3inches tall and built on the, let's say, plus plus size of large. I had met Holly a long time ago and she always had a soft spot for me. She was a builder by trade and a TV by inclination and, as usual, she had squeezed her ample frame into an extremely tight mini dress and a Dolly Parton wig. Her makeup was never less than dramatic and with her tattoos she presented quite a sight. Larger than life was a phrase designed for Holly.\n\nI extricated myself from her grasp, gave her a kiss on both cheeks and she beamed. I could see Tim with his mouth open, watching us in amazement. \n\n'Holly, you haven't changed a bit. How are you?'\n\n'I'm bloody wonderful, as always, you know me.' Holly paused and looked at Tim, 'Who's this little beauty, then? I haven't seen you here before.'\n\n'Holly,' I said, 'This is Tina, it's her first time out, so please be gentle with her. Tina, this is Holly, a very old friend of mine. Contrary to appearances, she is a lovely girl.'\n\nTim was about to put his hand out to shake hands when Holly grabbed him and gave him a kiss on each cheek followed by one her trademark hugs. \n\n'By all that's holy, this can't be your first time Tina, you look bloody gorgeous. Come and meet some of the others, you'll fit right in I tell you.'\n\nBefore I could stop her she grabbed Tim by the hand and dragged him over to a group of girls. Tim gave me a desperate backwards look as he was pulled away but I smiled and waggled my fingers at him. I heard Holly say, 'Listen up you girls, this here is Tina. Lovely she is and it's her first time out, so be nice to her.' All I could hear after that was a lot of squeals and cheek kissing going on. I knew he would be OK with Holly in charge. \n\nI headed over to a table with my wine and I was about to sit down when I felt a hand caress my bum and I whipped around to tell whichever man it was to 'fuck off and keep your grubby hands to yourself' and instead found myself looking into the smiling face of a gorgeous black girl. \n\n'Gotcha.'\n\n'Lola, you nearly had this bottle wrapped around your ears. I should have guessed you wouldn't be far away if Holly was here.'\n\nLola was a beautiful black TG girl, as petite as Holly was statuesque and yet they were the firmest of friends. You could usually count on then being out together. They may have been unlikely pair but you couldn't ask for two better people to be in your corner if you were in trouble. I had seen them help out loads of girls who were having a bad time over the years, me included I have to say. I didn't know much about Lola, other than she worked as freelance journalist specialising in transgender issues. She was getting herself on television these days which was good news for the rest of us.\n\nI gave her a hug and we both sat down and I offered her some of the white wine and what would have been Tim's glass. I could see he already had a glass of something in his hand and he seemed to be enjoying himself as he was laughing at something one of the girls had just said.\n\n'How's it going Philippa? We haven't seen you here for a while'\n\n'Working my butt off, Lola. It's been hard since Alan died. Keeping everything going on your own is hard in my business. I need a partner really. How are you and Holly?'\n\n'We're good, you know us. She never changes does she?'\n\nWe both looked over at Holly's group where she had her arm around Tina's shoulder and was listening intently to something Tina was saying.'\n\n'Who's the new girl?'\n\n'That's Tina, it's her first time out and I thought she would like this place, it's always been good for me, after all.'\n\n'Good for all of us, Philippa. Where did you meet her, she looks very good for a first timer.'\n\n'Through work,' I said. Technically not a lie, of course.\n\nI broke off as I saw Holly pull Tim onto the dance floor and some of the others following. Tim shoot me a pleading look but I merely raised my glass to him.\n\n'Mmm,' said Lola, 'well I hope she isn't scared off by Holly.'\n\n'No chance,' I said, 'who doesn't love Holly?'\n\n'I heard you got beat up recently, is that right? Holly and me get to hear everything you know.'\n\n'Yeah, I spent a day in hospital. Someone jumped me outside my front door, smacked me on the back of my head and kicked my ribs in as a calling card.'\n\nLola sipped her wine, 'it's happening too much these days, Philippa. I know of at least two other girls ended up in hospital and there are a lot more attacks which don't get reported.'\n\n'I know, trust me. What do the other girls think?'\n\n'There's always been arseholes who don't like us, but these latest attacks are getting vicious, we need the police to take things seriously before someone gets killed.'\n\nI paused before speaking, 'Have you talked to the police?'\n\nLola snorted, 'They don't listen, just laugh at us.'\n\nI took a deep breath and said, 'There's one who will listen.'\n\n'Who,' said Lola.\n\nI nodded at Tim, 'Over there.'\n\nLola turned round, 'What do you mean? There's no police here.'\n\n'DC Tim Kent, ' I said, 'he's over there, dancing with Holly.'\n\nLola's mouth dropped open, 'Fuck me, you don't mean the foxy newbie?'\n\n'Tina, that's right, he wants to make a difference, wants to talk to us, find out what we know. He wants to do something about it.'\n\n'Shit a brick, Philippa. You can't be serious.'\n\n'Oh yes, very serious. Will you talk to him, her, I mean?'\n\n'Is she one of us, then?'\n\nI thought for a moment and decide to level with Lola, 'A few days ago, I would have said, no. Now, I'm convinced she is one of us.'\n\n'OK, if you say so Philippa, then I will and I guess Holly will too.'\n\nI stood up and went over to Holly and Tina and asked them to come join us at the table. Tim looked relieved to be getting off the dance floor and Holly kept hold of Tim's hand as they walked across the floor.\n\nI grabbed a couple more glasses and another bottle of wine and got back to the table just as Holly was introducing Tim to Lola.\n\n'Okaaay,' I said, pouring us all some wine, 'DC Tina Kent, your cover is blown.'\n\nTim's mouth fell open and Holly looked confused.\n\nLola said, 'Tina there is with the fuzz, Holly. She wants to talk to us about the attacks.'\n\nHolly said, 'Shit, is that true, Tina?'\n\nTim nodded, unable to speak.\n\nI jumped in, 'It was my idea, I suggested that the best way to get to talk to the community was to join us. Tina has been very enthusiastic about becoming one of us.'\n\nTim was now looking daggers at me.\n\nHolly whistled and said, 'What a great idea, Tina. What do you want to know? Lola and me will help any way we can.'\n\nLola laughed and then Tim started to grin and I said, 'I love it when a plan comes together.'\n\nHolly and Lola between them knew more about the community than anyone else and they told Tim as much as they could about the girls' fear of the attacks and their mistrust that the police would ever do anything about it. They also promised Tim they would keep their ears open and let him know if they heard anything more about the attackers. Tim said that one thing the girls must not to be on their own, try to pair up with someone as much as possible. Holly said she would spread the word. \n\n'Right, I'm ready for another dance,' said Holly, 'Come on Tina, get those dancing shoes on.'\n\n'Only if Philippa comes too,' said Tim, hands on hips and a real pout. Lola laughed and said, 'Oh yeah, she's one of us alright.'\n\nWe spent the rest of the evening dancing and drinking. Tim was introduced to a lot of the girls and she even had to fetch me to help ward off one of the admirers.\n\nBy the time we left the pub with Holly and Lola, both of them were a little bit drunk, but they promised they were going to stick together on their way home. We all kissed each other goodnight and with their laughter ringing in our ears, Tim and I headed off to find a taxi. Tim reached for my hand and we walked on to the end of the road hand in hand, chatting to each other. I felt Tim's hand tighten on mine and he tensed a little said, 'Keep walking just as you are, don't turn round, but I think we're being followed.'\n\nI felt my heart start to pound and I wanted to run away but Tim's hand held mine tight and that settled me down a little. Now, I could hear footsteps behind us and it sounded like more than one person was back there. We were about ten yards from the end of the road when the footsteps turned into running and I felt Tim turn to look behind us. \n\n'You fucking perverts! You're gonna get what you fucking deserve.' \n\nI turned round just in time to see a man cannon into Tim who staggered backwards but somehow managed to stay on his feet. I felt someone smash into my back so hard that I shot forwards and became pinned against the wall where my forehead bounced against the brickwork. The guy behind me grabbed my arms and I smelt the booze on his breath as he shoved up against me. \n\n'You filthy cocksucker, you're gonna get smashed.'\n\nI tried to brace myself for the blows to come and then, for some reason, my arms were free and I heard someone scream in pain behind me. I whipped around to see Emily twisting the arm of the man who had attacked me. He was a big guy but he was screaming like an animal as Emily twisted his arm to an impossible angle and there was a sickening crack as his arm broke. Emily just let him drop to the floor where he continued to scream.\n\n'Phil, are you OK?' \n\n'Yeah, yeah, I'm fine, can you help Tina.' I was shaken up for sure, but not hurt.\n\nWe both turned to look but at that moment Tim had the other smaller guy shoved up against the wall with his arm pushed up behind his back. \n\n'I think Tina's doing just fine,' Emily said, 'but I am going to teach you some moves if you plan to do much more of this.'\n\n'What are you doing here? I mean, I'm bloody glad to see you.'\n\nShe grinned, 'After what's happened recently, I just thought you might need some babysitting.'\n\nI gave her a huge hug and a kiss in gratitude just as Holly and Lola ran up, closely followed by a posse of girls from the pub. \n\n'Are you OK? We heard the screaming. We called the police.'\n\nI ran across to Tim who was still struggling with the other attacker. he turned to me, 'What happened to the other guy?'\n\n'He met Emily, that's why he's screaming.'\n\n'Remind me to thank her will you?'\n\nThe big man was now moaning and whimpering as he lay on the pavement holding his arm, and a couple of the girls from the pub gave him a sly kick. \n\nTwo police cars came round the corner, blue flashing lights and sirens announcing their arrival. They were greeted with a chattering gaggle of girls clustered around two men who were being restrained by what appeared to be two women. One of the men was lying on the ground, moaning and holding his arm, which was bent back at an alarming angle.\n\nEmily was standing with one foot on him and chatting cheerfully to a couple of the girls from the pub. The smaller of the two men was pushed up against the wall with his arm pulled right up behind his back by a girl wearing a wig that was comically askew. The blue lights from the police cars bouncing off the walls lent the whole scene a surreal look.\n\nFour policemen emerged from the cars and a Sergeant said, 'Aye, aye, what's going on here then?' Which would have been funny in any other situation. Tim was waving his police warrant card around which was proving difficult as the guy he was holding was still struggling to break free.\n\n'DC Kent,' he kept shouting as the noise level increased with the arrival of another police car with its siren full on.\n\n'These two are under arrest, can you call for an ambulance for the one over there.'\n\nThe Sergeant took Tim's warrant card and looked at it and Tim suspiciously.\n\n'I'm undercover, Sergeant, chasing these two for some time. They tried to assault me,' and waving his arm at me, 'this girl over there.'\n\n'Undercover, sir, really?' The sergeant looked Tim up and down. \n\n'Yes, Sergeant, can you get some cuffs on this one? I think the other one needs to go to hospital.'\n\n'And how did that happen, sir?' he asked with a raised eyebrow.\n\n'Fell over as we were chasing him, Sergeant. Whatever he says.'\n\nTim nodded at Em, who smiled and nodded back. Best to keep things simple. Two policemen had now got the smaller one in cuffs with two more keeping guard over the bigger one, and all were eyeing Tim with undisguised mirth. Tim's wig was hanging over his shoulder and his dress was ripped showing his stockings.\n\n'Sir,' the Sergeant said, 'You look as if you need to get yourself straightened up, before we get to the station.'\n\n'Oh, yes, thanks Sarge, give me a minute and I'll come with you to book these two.'\n\nTim walked over to me and said, 'Can you do anything?'\n\nI straightened his wig, but couldn't do anything with his dress, so I gave him my coat, which would keep him modest at least.\n\n'Will you be alright?' I asked, anxious about how he would get on at the station. \n\n'It'll be fine, I'll stick to the undercover story. It will soon get forgotten now we have these two to charge. I'll borrow some overalls from the station. When can I see you again?'\n\nI liked the sound of that.\n\n'How about as soon as you can get back from the station?'\n\nA smile spread across his face and he said, 'I would love that, will you wait up for me?'\n\nI nodded, I was desperate to give him a kiss, but not in front of all the police there. Tim turned to leave and at that moment Holly shouted and waved to him, 'Bye, Tina, see you back here soon.'\n\nSix pairs of eyes in police uniforms swivelled to look at Tim, who merely smiled and waved back to Holly. The police began taking statements from everyone and it was only then I noticed that Em had quietly disappeared. \n\nTim arrived back at about 3 in the morning, in best blue police overalls. We kissed and hugged each other in relief that neither of us had been hurt. He had managed to clean off most of the makeup, but was still wearing the nails with the wig and the clothes in a bag.\n\nI started to giggle.\n\n'What?'\n\nI couldn't stop giggling but managed to splutter, 'You in that wonky wig and the torn dress when the police arrived, it was the funniest thing I've ever seen.'\n\nHe chased me into the bedroom and we tumbled onto the bed together, laughing and gasping for breath. We undressed each other slowly amid lots of kissing with hands and fingers getting everywhere. We ended up naked in each other's arms and at long last fell asleep still holding each other.\n\nAfter the excitement of Saturday night, we woke late on Sunday morning and spent an hour or so just kissing, giggling and holding each other. We were like two love struck teenagers and I knew I had never felt so good as this with anyone before. Tim eventually had to get up to go into the station to write the report and finish the paperwork associated with last night's arrests. I did get the nails off before he went. As it was, I suspect he would also have a lot of questions to answer from his colleagues at the station.\n\nI drove over to my parents and told then the whole story, well, not the whole story. I left out certain details to spare my father's blushes. My mother wanted every detail though, and I confessed most of it when we alone in the kitchen. She was either roaring with laughter or holding her hand over in mouth in mock horror. When we emerged we were both grinning from ear to ear. Dad looked from me to Mum, sighed, and went back to reading the paper.\n\nTim arrived home later in the evening and we decided to get a takeaway rather than cook, but before the food arrived I had dragged Tim into the bedroom. We were both naked when the food arrived and I sent Tim out to answer it wearing my pink silk robe. I thought, we'll have to get him one of his own, although it did look damn good on him. \n\nTim put the food in the kitchen and came back into the bedroom. I grabbed him and pulled him onto the bed and landed on top of him. I pushed his arms up above his head and held them there as my lips sought out his and we kissed, each of us getting more excited as the kiss went on. I could feel his cock pushing into my groin and mine was doing the same to him. I rolled to the side and managed to get my hand around our cocks together and stroked my fingers up and down them both. The sensation of out hard, hot cocks sliding against each other was exhilarating. Tim began to breathe faster and as I could feel myself getting more and more excited I knew I wanted to be inside him.",
        "'Tim, I want to fuck you, will you let me?' \n\n'I thought you would never ask,' he said, his voice thick with desire, 'just be gentle please.'\n\n'I will. I promise, just do as I say and It'll be fine. Get on your hands and knees for me, babe.'\n\nHe turned over on the bed and as he was getting onto his hands and knees I grabbed the lube. I shuffled up until I was right behind him and I stroked his back with my hands, rubbing them up and down to try to calm him a little. I leant forward and rubbed my breasts on his back and reached underneath him to stroke his rigid cock. He moaned, a sound coming from deep in his throat and I thought he was ready.\n\n'Tell me stop at anytime and I will,' I whispered to him and he nodded.\n\n'Just try to relax, babe, I'll be gentle, going to put some lube in you.'\n\nMy cock was now achingly hard as I squeezed the lube onto my fingers and then around his hole and then I slid a finger gently inside him. Tim jumped as he felt the finger penetrate him and I stroked his back again. I started to move my finger slowly in and out of him and I heard him grunt as he adjusted to the sensation. I slid a finger in and out a few times and then added a second finger and he winced a little at first but then started to push back a little as my fingers moved in and out.\n\n'Not long now, babe.'\n\nI thought that was enough, quickly put lube around my cock and moved up tight behind him and I could feel him tense as I rubbed my cock around his hole a couple of times.\n\n'Push down babe, it's coming now.' \n\nI held my cock in my hand as I pushed it the head against his hole and drew it back again. He leant forward as he felt the tip and then rocked backwards as I drew back. I pushed again, a little harder this time and then pulled back. He moaned again and on the next stroke I pushed hard into his hole. I felt the resistance at first and then I was inside him.\n\nHe grunted as he felt the penetration and I started to rock back and fro, building up the rhythm slowly and then gathering pace. Tim was making small grunts as I moved in and out but he didn't ask me to stop so I kept going.\n\nI raised myself onto one leg which allowed me a deeper penetration and Tim started to push back against my thrusts. I managed to stand up completely so that I was plunging down into Tim from above. I could feel my climax building and I started to thrust harder and I could hear my balls slapping against him. I knew I was close and then that glorious moment happened as my cock swelled and I came inside Tim with a grunt and a gasp. I drove into him a couple more times and then pulled out of him, and we both fell forward onto the bed. I reached out and stroked his face and his eyes were wide and he was still panting. \n\n'How do you feel, babe?' \n\nHe paused for a few seconds before clearing his throat, 'It was so painful at first and then suddenly it wasn't but I don't know when that happened. It started to feel good and I didn't want you to stop and when you came I could feel it spurting into me. It was like nothing I've felt before. How was it for you?'\n\n'Mmm, better than average, I would say.'\n\nHis face dropped then saw me grinning and he laughed out loud before saying, 'Well, if we're going to start giving each other scores I would have taken notes.'\n\nHe kissed me and said, 'You do know I love you, don't you?'\n\nI stroked his face again and said, 'Don't play with me, Tim. Don't say things you don't mean.'\n\n'I mean it Philippa, I think from the first time in the hospital I knew it.'\n\nI looked into his eyes to see if I dared to believe him. I took a deep breath and said, 'I think it was the moment when you said 'please be there when I open my eyes again' that I fell in love with you. It was the probably the most moving thing that anyone has ever said to me. I love you too, Tim.'\n\nWe kissed and hugged each other and, yes, I did cry.\n\nLater on Monday morning I had my meeting with Eleanor Northcliffe to present the report on her husband. She remained perfectly quiet as I talked her through the report with details of the surveillance and the photographic and video evidence from the night in Barnes. As I finished she let out a huge sigh and thanked me for the work I had done. Other than the sigh she seemed to show no reaction to the story she had heard and I wondered if she already had some inkling of what he had been doing. She wrote out a cheque for the fees and also the bonus we had agreed. Eleanor handed it to me but before letting it go, said, 'I understand you have been assaulted recently, is that true?'\n\nI nodded, but I didn't know how she could have found out. \n\n'Was that anything to do with my husband?'\n\n'I honestly don't know, it may be connected or it may have been a random attack. The police aren't sure.'\n\nShe took the cheque back, tore it up and rewrote it, doubling the bonus and handed it back, saying, 'I know my husband and what he could be capable of. You have saved me much, much more than the value of this cheque and for that I thank you.'\n\n'Will you answer me one thing?' I asked as she prepared to leave. \n\n'If I can,' she said.\n\n'Why did you choose me for this job?'\n\nShe paused and then said, 'Honestly, you weren't my first choice. I went to several other agencies who seemed to be all male. They were either supremely condescending, unbelievably arrogant or so fawning I could have been sick. They did not impress me. You were the only female detective agency I could find. I felt I needed a woman's touch on this. You did not disappoint me.'\n\nShe had just paid me the biggest compliment she could have, but in a way she might not have known. \n\nLife returned to something like normal. I had a few jobs to catch up on, credit checks and a missing persons case which kept me busy. I shared the bonus with Emily and we celebrated one night at the Rutland. Sophie and Tim joined us and we ended up getting roaringly drunk. Sophie turned out to be very sweet and I thought she and Em made a lovely couple. My barman was there but seeing me with Tim, he kept his distance. It was a few days later that Tim called me from the Police Station.\n\n'Do you want the good news, or the even better news?'\n\n'Good news first, please, lover.'\n\nI could hear stifled laughter in the background.\n\n'I should have told you we're on the speakerphone.'\n\nOops.\n\n'Anyway, the good news is we've found your camera and laptop. They were in a pawn shop and got picked up in a routine sweep. The registration numbers tallied with yours.'\n\n'That's great, when can I get them back?'\n\n'Soon, but that's part of the even better news. The boys followed up on the guy who pawned them and it led back to a thug who works for..'\n\n'Gareth Evans!' I shouted. \n\n'Yep, that's right. We matched his prints to those in your office and with the video evidence from the pawnbrokers we had him wrapped up tight. When we pushed him about the assault on you he coughed up Evans pretty quickly in return for a more lenient sentence. This guy was working for Evans as a bodyguard and saw you in Barnes when you filmed Evans. He followed you back and Evans told him to steal your camera and laptop and to deal with you. Evans didn't have the sense to realise you would back the files up. So it was Evan's thug who assaulted you, not the pair we nicked at the pub. We picked up Evans a few hours ago. He says his wife is divorcing him, but I guess you know nothing about that?'\n\nI could tell Tim was grinning on the end of the phone. \n\nEpilogue\n\nTim and I dated for a while and soon decided we should make it permanent and he moved into my place a few months ago. Tim liked Tina so much he wanted to keep her around. We share clothes and makeup and he's become so proficient that, as I predicted, he can now pass easily. I'm jealous because, when we go out together, Tina is much prettier than I am. Tim doesn't know yet whether he wants to become Tina full time, but my money's on Tina. As a consequence of Tim wanting to spend more time as Tina he left the force, and I asked him to become a partner with me at TV Detectives. Business is booming and we have recruited Emily to work full time. \n\nWe go back to the Rutland a lot, but my barman is no longer there. No matter, I'm perfectly content with what I have now.\n\nEmily and Sophie became a real couple and moved in together. I have never seen Emily as happy as she is with Sophie and they are inseparable. Emily thinks Sophie is 'the one' and I hope she's right. Of course, that meant I was banned from yet another pub. \n\nI proposed to Tim in bed one lazy Sunday morning and he gleefully accepted. Tim and I celebrated that night with Em and Sophie and a couple of bottles of champagne. We are very happy and are planning a spring wedding, although whether it will be Tim or Tina who is there on the day has yet to be decided. Emily will be Tim's, or maybe Tina's, best man and Sarah will be my maid of honour with Sophie, Holly and Lola as bridesmaids. God knows what my dad will say, but Mum will cry her eyes out.\n\nWhatever else, It will be a very contemporary wedding indeed.\n\nThe End\n\nIf you are interested, The Rutland is a real pub on the river at Hammersmith and it is a lovely place to have a drink. The Cardinal Richelieu does not, as far as I know, exist."
    ],
    "authorname": "nikkiesilk",
    "tags": [
        "transvestite",
        "transgender",
        "crime",
        "lesbian",
        "bisexual",
        "crossdresser"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/watching-the-detectives-1"
}