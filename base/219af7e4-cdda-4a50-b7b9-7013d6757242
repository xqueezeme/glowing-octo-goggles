{
    "title": "Finding Himself in Her Ch. 04",
    "pages": [
        "I would like to thank CambriaRose for her swift editing. \n\n******\n\nJaime woke on Tuesday morning, disoriented and desperately needing to pee. He gently extricated himself from Kara's sleeping form and walked naked to the bathroom. As he walked, only half-awake, he felt a bit of weight on his chest and an ache in his ass. He looked down on himself and it took a few steps before he noticed his new breasts as they looked so natural on his- no her, slender chest. \n\nYesterday came crashing back at her; the doctor's visit, the sex shop, the salon, the dress and heels, the club, being noticed in a positive way and the feeling of belonging. As she continued walking she fell naturally into a feminine, swaying gait, and felt so naughty as she walked naked through her lover's house. Her smile broadened as she remembered the feeling of making love to Kara, first gently then roughly. Jaime ran her fingers over her new assets and ass, even in between her cheeks, while she sat on the toilet peeing. She was a bit sore but had a silly smile plastered on her face as she relived last night's events in her mind. She knew she wanted that feeling again so she cleaned herself out in hopeful preparation. \n\nShe finished on the toilet and stood naked in front of the mirror and really looked at herself. Because she didn't really recognize herself on one level, she could take in all her attributes almost objectively, like an outsider. What she saw was a pretty brunette with ruffled, wavy hair and big green eyes with a few mascara tear streaks underneath. A cute little button nose and plump pink lips. She had pale skin, slender shoulders, perky breasts that looked big on her small frame, big pink nipples, and a flat stomach and a narrow waist that flowed into wide hips and shapely legs. Her entire body was hairless and that made the only thing that should have been familiar look different, her half-stiff penis looked at the same time bigger and less manly without its hair.\n\nWhen she was a he, he had always seen someone unattractive, someone plain, someone weak in the mirror. But she, she saw how beautiful and wonderful she was. She felt at home in her tight little body, and little wasn't something bad anymore. Well, at least not when she was still big where it counted, she giggled and hefted her cock. She hadn't really known she was above average before, she hadn't really seen any stiff ones besides in what little straight porn she had seen, but according to Kara her thick eight inches more than measured up.\n\nShe was suddenly struck by how incredibly much she looked like her late mother. It was like looking at photos of her from her youth, as she was in Jamie's earliest memories. The thought brought tears to her eyes and steeled her resolve to stay a girl even more; it would be another way to carry on her memory. \n\nShe finished in the bathroom and headed back to the bedroom where Kara laid sleeping peacefully on her back. Kara shifted in her sleep and revealed a big, soft, brown breast, making Jaime catch her breath. That such an incredibly beautiful woman would be interested in her amazed her just as much as yesterday's transformation. Jaime couldn't help but run her fingers along Kara's face and down her neck as she committed every detail to memory. Kara stirred but didn't wake and Jaime felt her own excitement rise, so she decided to wake her brown skinned lover with her tongue. She looked over at the clock and noticed that it was only half past seven; she hoped that Kara hadn't planned on sleeping in.\n\nShe lifted the covers at the bottom of the bed and crawled up under them, slightly hindered by her own stiff cock. She carefully nudged Kara's legs apart and continued upwards until her nose touched the slightly moist folds of her beloved's bare pussy. The slender brunette ran her tongue gently over the folds, teased around the opening, fluttered over the clit and teased the inner lips apart. She was rewarded with the deliciousness of Kara's flowing juices and her gentle moans filtering through the covers. \n\nJaime worked her long tongue in circles around the opening, getting deeper and deeper until her tongue felt like was being milked by Kara's tunnel. Jaime worked her way up to the clit which was now peeking out from its hood and sucked it between her lips. She let her tongue flutter over it as she sucked with more and more intensity. Suddenly, hands grabbed her hair and held her hard against the now orgasmic pussy. Jaime lapped up all the delicious juices she could get as she listened to the sounds of Kara cumming.\n\nKara woke in a state of high arousal, first she thought it was a wet dream, and then she felt Jaime's long and agile tongue slithering over her clit and her hands resting on her thighs. Her arousal rose and rose and then, suddenly, she felt herself cumming and grabbed hold of Jaime's head as she climaxed. She held on hard and rode Jaime's face to prolong her orgasm, grinding her hips against his face as her pussy quivered. Jaime must have worked on her for a while because she was cumming really hard. \n\nAs she was coming down from her high Kara pulled Jaime's pretty face up towards her and tasted herself as they shared the first kiss of the morning. It was a strange thing to feel Jaime's thick cock throbbing against her lower belly while her smooth skin and perky, if fake, breasts rubbed against the rest of her. Their kiss was deep and languid and as Jaime ran one hand through her hair and the other along her flank, Kara slowly explored down the little brunette's back. She reached her target, a perfect bubble butt that easily overflowed her hands, and massaged and caressed the supple flesh. \n\nKara snaked one hand down to her own opening to lubricate her fingers before returning to Jaime's ass. Jaime moaned into her mouth as she rubbed her wet fingertips around her pucker and then broke their kiss to gasp as she pushed her index finger in deep. Jaime kissed along her jawline to her ear as she worked her ass open. When Kara pushed a second finger inside Jaime moaned into her ear and whispered, \"That feels so good! Can you please take me like you did last night?\"\n\nKara smiled and hugged her lithe lover tightly with one arm, the other still busy with Jaime's ass, and replied, \"Oh, you liked that did you? Do you want the medium one or the giant, sweetie?\"\n\nJaime blushed hotly but managed to whisper, \"Umm, the giant one, it felt so intense last night.\"\n\nKara giggled and said, \"I think we might have a little size queen on our hands! One giant strap-on fucking coming right up!\" \n\nKara laughed and after another quick kiss Jaime felt herself being rolled off Kara before she got out of the bed. She watched with anticipation as the tall, raven haired beauty donned the harness, attached the huge dildo, and climbed back in bed. The size of it scared her, she hadn't really seen it last night and now, in the morning light she really couldn't understand how something so big could fit inside her. Kara grabbed a bottle of lube from the nightstand and squeezed out a sizable dollop on the faux cock. As she rubbed it in Jaime became entranced by the glistening black silicone, she simply couldn't take her eyes off it!\n\nKara lubed her fingers and started working on expanding Jaime's sphincter as she asked, \"Do you want to try being on top this time?\"\n\n\"Yeah, that sounds like fuUUUN!\" Kara had deftly pushed three fingers to the last knuckle, making Jaime moan loudly. \n\nKara giggled at her reaction and started moving her fingers in and out, slowly building speed until she felt Jaime was sufficiently loose around her fingers, then she removed her fingers and with a smack to Jaime's ass she said, \"Giddy up, Cowgirl!\" and got down on her back in the middle of the bed, half sitting against the headboard.\n\nJaime straddled Kara at the waist and let her pucker ease back against the big head of the dildo. She closed her eyes, reached back and held the silicon column steady while pushing back with her body and pushing out and relaxing her ass. Suddenly the head popped through her opening and made her groan with pleasure and pain. She started nudging the big shaft deeper and deeper, taking it much more slowly than Kara had last night. \n\nThe pain and feeling of submission that came with it wasn't nearly as palpable, but the pleasure of being filled certainly was. Jaime let go of the dildo when it was halfway in and moved her hands up Kara's body. She raised herself until the flared head caught on the rim of her ass and then pushed slowly down again, taking about two thirds with a moan and a gasp. Jaime felt full to bursting and so much pleasure she thought she could cum from just one touch to her extremely engorged cock. She stopped and let her body adjust to the dildo and tried to calm down, she wanted this to last as long as possible. She felt Kara's hands trace along her arms and cup her face and slowly opened her eyes to look straight into Kara's as she slowly leaned down for a kiss. As they kissed, she started slowly rolling her hips, stirring her insides with the huge dildo until she found what she was looking for, that cluster of intense pleasure, her prostate.\n\nJaime rode the silicone cock faster and faster as they kissed and Kara's hands roamed her body. She felt them on her nipples, their caress along her spine, on her hips, encouraging her, and up her spine again until they tangled in her hair. It felt wonderful to have sex being on top like this but Jaime missed that sense of security and submission she had felt last night with Kara's bigger body over her. She wanted Kara's body to envelope her again, so she pulled on Kara's shoulder and leaned to the other side. Kara took the hint and without breaking the kiss, they rolled over.\n\nKara got up on her arms and placed Jaime's legs on her shoulders; she grabbed her hands in one of hers and held them over the brunette's head. As she started moving in and out again she smiled down at Jaime and said, \"God, you look so sexy! I love how those breasts jiggle with every thrust, I can't get over how real they look!\"\n\n\"Yeah, Fuu-uck, I love how they feel, it's like they are a part of me. It feels sooo good when you hit, mmMM-my prostate, it's like AAAH miniature, UHHN, orgasm each time!\" \n\nJaime continued to moan and gasp as Kara pounded her harder and harder. With each inward thrust she hit that special place and a small jet of precum shot onto her belly as a wave of pleasure ran through her body. Jaime was moaning uncontrollably as she said, \"UHHN, I, UHHN, never, UHHN, want, UHHN, this, UHHN, to, UHHN, end!\" \n\nBeing buried beneath Kara's stronger, taller body, her shoulders pinning Jaime's legs, her hand pinning hers, her long jet black hair surrounding them, it all made Jaime feel so powerless yet safe, vulnerable yet protected. Kara looked so incredibly beautiful above Jaime; her caramel skin glistening with perspiration, Jaime's own pale legs in stark contrast on her shoulders. Kara's big almond shaped hazel eyes locked on Jaime's face and a look of joy, lust, and concentration on her face as she increased the pace even more.\n\nKara felt her own orgasm building as the strap-on rubbed her clit on every inward thrust and her g-spot each time she pulled out. Just watching Jaime take her big fake cock was such a turn on that she would have been right on the edge anyway. Kara felt some added friction and knew that Jaime's ass was clenching before cumming so she moaned out, \"Cum for me sweetie, cum with meee!\"\n\nShe grabbed Jaime's cock and just as the first jet shot out, they screamed, \"I'm CUUUMMMING!\"\n\nJaime came like crazy from the combination of the giant silicone cock moving in and out of her ass and Kara's hand stroking her cock. That along with the visual of Kara throwing her hair back in ecstasy, her big brown tits bouncing as she plowed Jaime senseless, it all culminated in an orgasm that went on and on, making her toes curl, her legs shake and her back arch. She came for so long that the last jets of cum were almost clear, every last bit of sperm had escaped her balls.\n\nKara came really hard as well, but she tried to focus through her own orgasm and really hit Jaime's prostate to prolong her orgasm. Her arm started to shake from holding herself up, and just as her orgasm ended she collapsed on to Jaime in a messy heap, her strap-on buried to the hilt. \n\nShe kissed Jaime along the neck to her ear and whispered, \"Good morning, sweetie.\"\n\n******\n\nThey walked along the street hand in hand, heading towards the shops to get Jaime the beginnings of a feminine wardrobe. Jaime had wanted to wear her little black dress and her high heels again but Kara had made the point that it was evening wear. She also made the point that Jaime's feet would be destroyed if she walked around shopping in those four inch heels. Instead Jaime wore her old Converse sneakers, her tightest jeans, though they really weren't that tight, and one of Kara's tops. The top was a light pink tee with a bit of cleavage; it was made in a stretch material but hung a bit loosely on her smaller frame, especially over the chest. The top and her fake breasts left little doubt that Jaime was anything but a girl. \n\nHer secret was tucked away in her lacy green panties and this morning's draining orgasm should make sure no unfortunate bulges gave her secret away. The panties slid erotically against her ass and cock, and was a constant reminder to keep her mind on the fact that she should act like a woman, walk like a woman, talk like a woman. Jaime's auburn hair was loosely held by a tortoise clip and she had clip-on earrings dangling from her ears. Her makeup was subtle, just a bit of pink lip gloss, some mascara and eye shadow. As she walked she remembered to take shorter steps and place her feet straight in front of one another to give her hips that alluring feminine sway.\n\nJaime looked over at Kara, she was as beautiful as ever; dressed in a knee length maroon pencil skirt, knee high leather boots with a three inch heel and a white shirt that made her caramel skin stand out beautifully. Her hair hung loosely around her face which was as subtly made up as Jaime's own. \n\nKara was so happy as she walked hand in hand with Jaime that she almost skipped down the street. Not only did it turn out that Jaime's new form turned her on more than her hottest girlfriend and boyfriend combined, she felt more complete with Jaime than she ever had before. She knew this was moving extremely fast but it was so exciting and felt so right that she didn't want to slow down. Jaime was so sweet to her, she made her waffles from scratch after they showered together and she truly listened as they talked, she didn't just nod along. They had talked about Kara's work and her family and then moved on to discussing how Jaime wanted to proceed with their little experiment. They decided that Jaime should experience as much as possible of what it felt like to be a woman so Jaime could make an informed choice. They also decided that they really needed to know what Kara's best friend, Jaime's boss, would think about all of this. Kara called Melissa and invited her and her wife Maria to dinner the next day, saying she wanted them to meet her new girlfriend. \n\nJaime felt a bit nervous about meeting her new boss dressed as a woman; she would be the first person outside of Kara who really mattered in Jaime's life that would see him/her like this. As she was his new boss it could determine a great deal about her future, because she was becoming really attached to herself as a woman. Jaime didn't even know if she wanted to go back or if she could now that she knew what was on the other side. \n\nShe was pulled from her thoughts as Kara steered them into a big mall. Jaime was a bit amazed at the variety of all the people and stores. She saw the stores in a completely different light now, she had always seen shopping for clothes as a chore but now it felt exciting. She looked up at Kara with a big grin on her face and said, \"Wow, I want to go to all the stores! Where do we start?\" \n\nKara smiled back down on her and answered, \"Well, how about we start with the shoes and work our way up?\"\n\n\"Okay, which store should we go to? I see like five shoe stores from here!\"\n\n\"Well, a lot of girls are kind of shoe crazy, I really never got that obsessed myself. I think we should try the Ecco store first, they sell shoes that are made both for comfort and looks.\"\n\nJaime nodded and they made their way hand in hand through the throng to the store. Inside the store it was a much calmer atmosphere and as they browsed a mousy, polite saleswoman approached them and speedily fetched any shoes they asked for. Jaime liked the ones with a higher heel because she felt taller, more confident with them on. After a bit of trial and error she walked out of the store in a pair of woven leather wedge sandals, a pair of grey suede boots and her old Converse's in a bag. She had been a bit surprised by the price tag but decided that as her work would pay nicely she could afford to rack up a bit of credit. Kara had been right, the shoes were very comfortable, much better than the sexy stiletto sandals from last night, and the wider heel was easier to walk with. \n\nNext stop was Victoria's Secret. There was so much sexy lingerie that Jaime felt a twitch between her legs despite the incredibly draining orgasm earlier. Since they already knew Jaime's measurements and cup size, it was just a matter of picking out colors and models. They started with a few sports bras and some plainer undies, and then moved on to the nicer things. They picked out hiphuggers, cheekies, thongs and boyshorts, all lacy and in bright colors, mostly green. They picked out matching bras; pushups, demi-cups, some so lacy they did more to accentuate the nipples than cover them. \n\nKara picked out some sexy babydolls, Jaime picked out some stay-up stockings, one white pair, one tan pair, one dark pair and one pair that were more like grey, thin thigh-high socks. Jaime was so excited, she couldn't wait to try on all the different lingerie and see the hunger in Kara's eyes as she modeled them for her. \n\nJaime really wanted to start swimming laps again to keep her workout going, so she picked out a nice green bikini as well. Kara said she did Yoga three times a week and that she wanted Jaime to join her, so she picked out some yoga pants and a nice top as well.\n\nJaime put another dent in her credit card at the checkout and then they decided to stop at a caf\u00e9 before continuing shopping. Jaime got a hot chocolate and a Danish, and Kara got a cappuccino and a big chocolate muffin, she also picked up a style magazine while Jaime found a table. \n\nAfter she sat down and took the first sip of her coffee she opened the magazine and asked, \"So, cutie, what kind of style do you think you want?\"\n\n\"I don't know, I really like skirts and dresses and that would help with, umm, you know, hiding my secret. I really like the feeling I get by being all girly so I think I want to be really feminine.\" Jaime blushed at saying this, just a few days ago the thought would have been so foreign to him/her but now she knew that this was what she wanted.\n\n\"Great! I really like girly girls as well and I would love to dress you up all pretty. I would really like to see you in some tight jeans though; your butt would look spectacular in a good pair.\"\n\nJaime nodded and smiled but blushed a bit, she was still not used to getting compliments about her body. They looked over the magazine and pointed out things they liked and disliked, and to Jaime it felt so great and so girly to talk like this, it felt like she belonged. \n\n*****\n\nWhen Jaime exited the mall she looked very different. Gone were her ill-fitting jeans and top, ticked away in a bag on her arm. Instead she wore a thin green blouse that showed just a hint of cleavage, a brown suede jacket that ended at the waist, a pleated grey skirt that ended a few inches above the knee. She had a wide woven leather belt with a big brass buckle to tie it all together and the grey thigh high socks covering her sexy legs. She had on the woven leather wedges that went with the belt and a nice wooden necklace that went well with the jacket. Silver earrings dangled from slightly sore holes in her pretty ears. Jaime felt so incredibly pretty, last night she had felt really sexy for the first time but now for the first time she felt pretty and really at home in her body. ",
        "Kara walked home hand in hand with Jaime, holding most of the bags in her other hand. She looked down at Jaime and couldn't believe how pretty and understatedly sexy she was, and with hardly any help from her! After being a bit tentative at first Jaime started picking out everything herself and got really into it, and what was more, she was really good at it. Kara hardly needed to pick out anything, she just gave her opinion on which outfits she liked best, and mostly they agreed one hundred percent. \n\nThe only garment that Kara decided completely was the jeans. She had Jaime model several pairs for her, coming out of the dressing room to do her best model walk up to Kara and then back to the booth. On the fifth pair Kara couldn't help let out a low moan as Jaime walked away, that had to be the sexiest ass she had ever seen. Kara felt a twinge in her pussy and her panties got a little wet and she knew these were the ones. They were a boot cut pair of stone washed low rise jeans that did something incredible to Jaime's already spectacular ass. Kara's mind lingered on that sight as they walked to Jaime's apartment with her clothes. She could feel herself getting wetter and wetter as she thought of all she had done to that ass and all that she would do.\n\nKara unzipped her shoes and worked them off as Jaime kicked off her sandals and carried the bags to the bed. She sat down next to the bags and watched as Jaime almost reverently unpacked and folded her new pretty clothes. When Jaime reached up to hang a grey pencil skirt on a hanger in her closet Kara saw her top ride up and her sexy little back dimples come into view Kara couldn't take it anymore. \n\nShe sneaked up behind her little lover, placed her hands on her hips and pulled her in close as she planted a soft kiss on her neck, making Jaime moan so sexily. She continued kissing along her pale neck and up to her ears as her hands made their way up along her waist, up to her shoulders, and then to the collar of the jacket. Kara slipped the soft suede down Jaime's slender shoulders and kissed along the newly uncovered skin, making Jaime breathe faster and moan slightly. Kara started unbuttoning Jaime's blouse slowly as her lips and tongue played over her short lover's skin. Jaime got more and more excited in her arms, she started grinding her bubble butt against Kara's thighs and she got a lovely blush on her face and chest. \n\nWhen she finally reached the last button Kara got a wicked little smile on her face and as the green blouse was down to Jaime's elbows she used the garment as a makeshift rope. She bound Jaime's arms so that one hand was against the other elbow with the underarms parallel. She heard Jaime's surprised gasp and felt her shiver a bit so she hugged her close and whispered for her to relax. She unzipped the zipper on Jaime's hip and slid her skirt over her sexy butt. As Jaime stepped out of the puddled skirt Kara unbuttoned her own skirt but her shirt felt like much too much work so she left it on as she shimmied out of her panties. \n\nKara spun Jaime around and kissed her fiercely before pushing her to the bed. Without her hands to brace herself, she fell backwards with a shriek and burst out giggling as she bounced on the bed. Kara couldn't help but smile widely as well as she got on the bed on her knees. Just before she swung her leg over Jaime her smile turned mischievous and just a bit sinister. Her smile made Jaime's laugh catch in her throat just before her face was covered in hot, wet, warm darkness. \n\nJaime was enveloped by Kara's thick brown bottom and thighs, her mouth covered by her wet folds, her nose buried in her crack and the tip of her nose nestled against Kara's brown pucker. She eagerly started licking away, the sweet juices filling her mouth was like heaven, and although she had some trouble breathing she couldn't be happier. She felt so vulnerable like this, with her hands bound behind her back, and her every breath dependent on Kara. Those breaths were filled with the musky scent of Kara's asshole and her lovely juices. Yet at the same time she felt so safe in her dark little world of pleasure and submission. \n\nAs Jaime continued to eat her lover out she felt Kara's hands on her body, she felt them on her chest and then on her nipples. She felt Kara pinching and pulling so that the clamps in the breast forms did the same to her real nipples, making her gasp and moan into Kara's wetness. She badly wanted those breasts to be real, to feel every little thing Kara did to them. Jaime increased her attempts at making Kara cum, dipping her tongue as deep as possible in her wet hole, sucking hard on her inner lips, fluttering her tongue over her clit as she nursed on it. \n\nAs she got closer and closer to her first orgasm, Kara got down on her elbows and slowly unwrapped Jaime's girly cock from its lacy confines. She really loved cock and when she had girlfriends, although she loved the relationship part with them better she always missed a nice dick, and now she had a lover with the best of both worlds. She licked around the head before eagerly sucking it into her mouth, swirling Jaime's tasty precum on her tongue before swallowing. Before she could go down any further she felt Jaime do some amazing tongue acrobatics and her first orgasm overtook her. She moaned loudly but didn't pull her mouth off her petite lover's thick tool, instead letting her moans vibrate the sensitive head. \n\nAfter she calmed down a bit she started bobbing her head up and down as her fingers explored Jaime's hairless crotch, she really loved that newly waxed smoothness. Kara felt Jaime's tongue attack her clit again, bringing her to the edge in no time. Just as she was about to crest she felt Jaime swell a bit in her mouth and decided to deny her for a while. She pulled off her cock as she screamed out her orgasm, bucking her hips against Jaime's face. \n\nJust as she started to come down, she got up so she was sitting on Jaime's face and used it to propel her into a third, even stronger orgasm. She got off on the power she had over Jaime at that moment, her arms bound behind her and her pleasure and indeed her very life dependent completely on Kara. Over the next several minutes she went from one orgasm to the next, until she lost count at about ten. \n\nHer clit finally started feeling over-sensitive but she didn't want her pleasure to end. Jaime's long tongue and soft lips were truly addictive, so she scooted forward a bit instead. She reached back, spread her cheeks and planted her crack firmly on Jaime's mouth. As Jaime eagerly burrowed her tongue inside Kara noticed that the cock before her had lost some of its firmness so she reached down and started stroking it as her other hand played with the balls. She loved how Jaime looked beneath her; her perky lace encased tits, her flat stomach, her back arched by the arms behind her back, her panties around her upper thighs, just below her now very stiff cock and above her sexy grey thigh-highs. \n\nWhen she noticed that Jaime got close again, she stopped stroking and raked her nails against Jaime's upper thighs and lower stomach, the surprising pain stopping the impending orgasm. She heard Jaime groan beneath her and as she giggled in response, she felt Jaime's tongue redouble the efforts on her hungry ass. She used the pause to take off her shirt, the buttons were a real hassle. When she felt it was safe she started slowly stroking again, tickling on the underside just beneath the opening where she knew it would drive Jaime crazy as she massaged the smooth balls with her other hand. She felt it swell up in her hand and felt the balls starting to contract so she removed her hands and landed several spanks on Jaime's soft, white inner thighs. \n\nJaime could feel her testicles ache more and more as Kara denied her again and again, the pleasure turning almost torturous when her hands returned to her shaft and balls. Jaime somehow knew that if she got Kara to cum from her asslicking then she would let Jaime cum as well. Last time it had taken over twenty minutes of work, but then she hadn't been distracted by the incredible need she now felt, and she had no idea how long she had been licking and sucking. She lost track of everything but her pleasure and pain, her tongue and the debauched feeling she got from her predicament. \n\nAfter being denied for what felt like the hundredth time, she finally felt Kara's wet asshole start contracting around her tongue and then the most amazing feeling enveloped her. She felt Kara's mouth envelop her helmet as a wet finger pushed knuckle deep in her ass. She arched her back violently and screamed a silent scream as pulse after pulse of thick white cum filled her Love's expert mouth. She felt quivers running all through her body and felt her toes curl, her thighs spasm, her stomach contracting again and again, and her balls draw almost entirely up into her body. She felt Kara's finger massaging her prostate, prolonging and amplifying an already incredible orgasm until she almost blacked out. \n\nJaime watched in a haze as Kara got unsteadily off her, turned around so that they were face to face as she lay down next to her. Kara leaned in for a kiss and Jaime knew what was coming, she was tired and drained but eagerly opened her mouth to receive her gooey kiss. Jaime was still surprised that she enjoyed the taste and feel of herself so much as they slowly pushed the cum back and forth until it had mixed with so much spit that both their mouths were full before swallowing. \n\nThey continued languidly kissing as Kara reached behind her and untied the blouse from her arms. It wasn't until Jaime reached her arms around her caramel skinned lover that she realized how sore her shoulders were from their bondage. She whimpered a bit as she pulled Kara close and wrapped her leg over her wide hip and fell promptly asleep. \n\nKara smiled as she saw that Jaime fell asleep, in that respect she was still like a guy. Kara yawned a bit herself, that last orgasm had been a real doozy and multiples always took it out of her, so she decided a nap didn't seem like a bad idea at all. It was three pm so she set the alarm for four and pulled the covers over them before drifting off to sleep herself. \n\n******\n\nSonny and Cher started singing I Got You Babe on the radio, waking the sleeping lovers from their afternoon slumber. Jaime saw Kara smile as she looked deep into her bright green eyes and closed the few inches that separated them as her tall lover leaned in for a languid kiss. Their kiss was slow and loving, not to arouse their passion, but to affirm their love and affection. After a few minutes Kara broke the kiss and suggested that they needed to take another shower. The shower in Jaime's apartment was too small for the two of them so after a bit of discussion they decided that Jaime would go first and then start dinner while Kara showered. \n\nJaime slipped off her thigh highs, they felt so sexy sliding down her smooth legs, and showered quickly. She reapplied the concealer around the breast forms and put on some light makeup. She put on some pink boy short panties, a pair of white casual pants that stretched across her ass and a pretty baby blue top with reinforced cups so that she didn't need a bra. \n\nShe headed to the kitchen and took some chicken fillets from the fridge. She took out some goat cheese and some garlic, chopped and mixed them, and stuffed the fillets with the mixture. She was just about to slide the dish into the oven when there was a knock on the door. Jaime quickly washed her hands and went to open the door; she was too short to look through the peephole so she just opened the door. She opened her mouth to say hello but the words caught in her throat when she saw who it was. \n\nHer father raised his eyebrows in surprise and said, \"Hello. I'm sorry, I must have the wrong apartment, I was looking for my son...\" \n\nJaime watched as realization slowly dawned on her father's face and in a small voice said, \"Hi Dad.\" \n\nHer Dad's mouth opened and closed a few times like he was trying to speak but no words came out. Jaime reached out and held his hand and started leading him to the couch as she said, \"Come on Dad, sit down here, breathe.\" \n\nShe went back and closed the door before she joined her dad on the couch, she watched as the color returned to his face as she waited for him to be ready to talk. Her own thoughts were racing a mile a minute, fearing his reaction, thinking of Kara standing oblivious in the shower. She thought of how she would explain herself, of how strange this situation was and how she had almost laughed out loud in nervous laughter at the look on her father's face. \n\nJaime was pulled from her thoughts by her dad's huge, rough, calloused hand on her face and as she looked to him he smiled and said, \"You look so much like your mother when we met it's eerie. You look so pretty!\" \n\nJaime felt her eyes tear up as she threw her arms around his big bull neck and kissed his rough cheek before whispering, \"Thank you!\" as he hugged her back. After a little while Jaime sat back down. \n\nHer dad looked her over and said, \"Well, I shouldn't have been so surprised, I remember when you were little and insisted on wearing a cute little dress the whole summer before first grade.\" \n\nJaime opened her mouth in surprise and said, \"What? I don't remember that!\"\n\nHer dad smiled a sad smile and said, \"Well, I'm not surprised. Your mom, bless her heart, encouraged you and treated to you just like she would a girl and you were so happy, happier than I've ever seen you. Then it was time for school and you refused to wear boy clothes even though I tried to convince you otherwise, I was afraid you would be bullied. I don't know what happened that first week, only that you came home crying after the first day, and then every day after that. That Friday you came home with a black eye and several bruises. We tried to get you to tell us what had happened but you couldn't so we talked to the school, got you into a new class and on the Monday you came out of your room in regular clothes and it was like nothing had ever happened, but you were never that happy again.\" \n\nJaime felt tears run down her face as she remembered that painful time. \n\nSuddenly they heard the toilet flush and her Dad looked towards the bathroom door in surprise and asked, \"Do you have someone here?\" \n\nJust then the door opened and Kara walked out in nothing but her birthday suit and called out, \"Jaime is dinner goEEEEK!\" She spun around and ran back into the bathroom, her shapely behind bouncing as she retreated.\n\nJaime looked at her Dad's bug eyed and awed expression before getting over her own surprise. She got up from the couch and ran over to the bathroom and opened the door as little as possible as she squeezed inside. Kara was sitting on the closed toilet; she was blushing and held one hand over her heart as she breathed heavily. \n\nKara looked up at her and asked, \"Who the hell was that!?\" \n\n\"I'm so sorry! It's my Dad, he came over unannounced.\" \n\nKara was calming down, she looked Jaime over, saw the tear streaks and her red eyes, and asked, her voice full of concern, \"Wait, you answered the door for your Dad dressed like that? How did he take it?\" \n\n\"He was shocked but it went surprisingly well. I have to go out there, we were right in the middle...\" \n\n\"Okay, I'll wrap up in a towel and sneak into the bedroom to get dressed and then I'll leave you to it.\"\n\n\"No! Please stay, I want you to meet him, we'll eat dinner and talk.\"\n\n\"Alright, but it's going to be awkward, he just saw me naked for Christ's sake!\"\n\nJaime smiled and mouthed a 'thank you' as she squeezed out of the door and joined her father on the couch again. He smiled at her and asked with a look to the bathroom, \"So, I guess she's your girlfriend?\" \n\n\"Yeah, her name is Kara. When I was moving in on Saturday she offered to help and we just fell for each other. We spent the weekend together and then when I had to go to the doctor yesterday she came with and got me through it.\" \n\n\"I'm so sorry I wasn't there to help you!\" her dad said with a pained expression, he continued, \"I'm very happy that you found Kara and that she could help you, but I should have been there.\" \n\nThey both glanced over when they heard the bathroom door open again and Kara quickly dashed into the bedroom. Jaime placed a comforting hand on her dad's arm and answered, \"It's okay Dad, it went much better than I thought it would. But, they found something different with me at the doctor's office.\" She saw the look of concern and worry on father's face and quickly continued, \"It's nothing to worry about. Apparently I have this hormonal imbalance; at least since I was a pre-teen, and that's why I look the way I look and could never build any real muscles.\"\n\n\"Oh, this is my fault! I should have made you go to the doctor even though you were terrified. Your Mom and I discussed it when we noticed you didn't change much when you hit puberty. We just figured you were a late bloomer, and then she got sick and it slipped our minds. I'm so sorry.\" Regret and sorrow played over his face as he spoke.\n\n\"Please don't be!\" Jaime answered and continued, \"I feel so right like this, I wouldn't want it any other way! When Kara helped me look like a girl something clicked inside me, I felt like I was finally Me, you know?\"\n\n\"I'm glad that you are so happy, I always thought you would find this part of yourself again, I waited for it all through college but it never came. This condition scares me though, is it dangerous?\"\n\n\"According to the doctor it shouldn't be, but she wanted to run more tests to give me a full diagnosis.\"\n\nBefore her Dad could ask her more questions Kara cleared her throat to get their attention. She walked with her hand out towards them as she said, \"Hi, you must be Henri, Jaime has told me so much about you!\" \n\nHenri got up from the couch and shook Kara's proffered hand as he answered, \"Hello. Yes, I'm Henri, Jaime's Dad, and you must be Kara. Jaime hasn't told me much about you but I look forward to getting to know you better.\"\n\nKara looked him over as he talked, he was a mountain of a man, even taller than her, with broad shoulders and big muscles, she guessed he weighed well over two hundred pounds. She answered, \"I'm looking forward to getting to know you better as well. Jaime said you would be staying for dinner?\"\n\nJaime saw her Dad raise his eyebrows in question to her so she answered, \"I haven't asked yet, but you are more than welcome to stay, we're having chicken and quinoa.\"\n\n\"I would love to stay and get to know your lovely girlfriend better, and my daughter for that matter,\" Henri answered with a smile.\n\nJaime got a tear in the corner of her eye as she heard her Dad call her his daughter, she answered, \"She would like that very much as well. Come sit on the bar stools at the counter while I continue with dinner, it's going to take a while.\" \n\nThe dinner went smoothly, and to Jaime it felt like she was closer than ever to her Dad, the strain of Henri not being able to relate to his son was gone. After a second glass of wine he also confessed that he was relieved Jaime still liked girls, it was somehow easier to understand his new daughter being lesbian than his son being gay. Kara and Henri bonded easily as well and were soon talking and joking like old friends, they had after all both been jocks in school and were both technically minded. \n\nAt the end of the night they realized Henri was too inebriated and tired to drive. They decided that he would sleep in Jaime's bed while the new couple went over to Kara's apartment. Jaime was emotionally exhausted and after they changed into their nighties and brushed their teeth she asked Kara, \"I'm so tired, is it okay if we just go to sleep?\"",
        "\"Of course sweetie.\" Kara smiled and placed a gentle kiss on top of Jaime's head. She led them to bed and slipped under the covers with her lithe, pale brunette love held close. She kissed her on the tip of her nose and said, \"Goodnight, Sweetheart.\" \n\n\"Goodnight, Love.\" Jaime answered, closed her eyes and nuzzled her face into Kara's neck. She felt so safe and happy, she felt like a huge weight had been lifted from her shoulders after her father's acceptance. With the image of him touching her cheek and telling her how much she looks like her mother playing in her mind's eye she fell asleep.\n\n******"
    ],
    "authorname": "Mr_Owlow",
    "tags": [
        "femdom",
        "feminization",
        "anal",
        "interracial",
        "transformation",
        "pegging",
        "strap-on",
        "transsexual",
        "romance",
        "cunnilingus"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/finding-himself-in-her-ch-04"
}