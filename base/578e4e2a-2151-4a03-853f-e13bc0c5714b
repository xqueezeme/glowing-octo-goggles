{
    "title": "My Little Ventrue Pt. 08 Ch. 11",
    "pages": [
        "~~Antoinette~~\n\nShe felt it the moment she and Samantha stepped up to the comely home. Cold, in the bones, an unnatural sensation that pulsed through her being. Her Beast recognized it, and its instincts kicked in, growling and snarling at the invisible waves of murder and anger that radiated from the house. It did not like being so close to such an aura; Kindred were masters of controlling kine, but had no talents whatsoever that allowed them to manipulate creatures of ephemera, spirit or ghost.\n\nAntoinette had spent centuries learning to affect ephemera and the beings composed of it, largely in an effort to expand her control of everything. One more tool in her kit, to enact her goals on the world. But ephemera and ephemeral beings refused to be cooperative. Every scrap of knowledge she had discovered was uncovered through painful trial and error. The trouble with being a pioneer, was how little help there was to be found, even among colleagues.\n\nMuch of her knowledge pointed to the same conclusion: avoid entities made of this strange material. They were beyond the control of vampires, except through strange rituals and ornate symbols hundreds of years of experimentation barely lent meaning to. Tonight, she needed the help of such a frustrating entity, and she was not sure if it could be garnered.\n\nSamantha opened the door, and Antoinette smiled as she followed her in. Best to be pleasant and polite when dealing with ghosts.\n\n\"It's... it's not much, I know, but--\"\n\nAntoinette held up a hand. \"Come now Samantha, I am not so disconnected from reality that I do not understand the trials of a normal citizen. I know the price of eggs.\"\n\nThat, apparently, shocked Samantha, and she glanced at the likely empty fridge before blinking at her. \"You do?\"\n\n\"Of course. It pays to be economically aware of both the grand, and the petite.\"\n\n\"Oh. I... I'm kinda surprised. You're a billionaire.\" Smiling sheepishly, Samantha slid off her shoes on a mat beside the door, and stepped into her kitchen. Antoinette did the same. \"You don't have to--\"\n\n\"Neither do you. This is no longer your home.\"\n\n\"I... guess you're right.\"\n\n\"But it is your daughter's home.\" Antoinette set a hand on her childe's shoulder, offered her a reassuring nod, and a gentle kiss on the forehead. \"Now, by all means, show me the house that was once your home.\"\n\nSamantha beamed. Undoubtedly the woman delighted in the idea of showing her home to others, with inevitable joy over showing the rooms and bedrooms where Mary and Jack grew up.\n\nAnd show she did. Antoinette could see Samantha felt slightly uncomfortable walking through her old home wearing a suit and skirt, and doubly so with her sire at her back. But a moment later, she fell into what must have been a routine, something she perhaps once had before Jack disappeared from her life. Did she have a book club? Did other women visit, drink wine and share stories? Perhaps after James died, she looked for solace in friends. Perhaps, after Jack died, she found solace only in the arms of her daughter.\n\nThe daughter who had died, and come back to her. The daughter she could not let go of.\n\nSamantha showed her the kitchen, and the living room and its expensive couches. She showed her downstairs, the family room, with its large television and guest bedroom. She showed her the basement, and the 'movie' room James had built. Every minute, she spoke of memories, of her family, of the friends that once visited her and her husband. She spoke of the people who visited when James died, friendships rekindled. She spoke of the people who disappeared, when Jack died, people who could not be near her due to her broken state of mind.\n\nThey came to the bedrooms on the top floor, and Samantha sighed softly as she opened the door to Mary's bedroom. Cold. So terribly cold.\n\n\"If it wasn't for Mary,\" she continued, \"I'd... I don't know.\" With heavier sigh, she moved over to Mary's quaint little vanity desk, and stared into the mirror. \"Mary, are you there honey? It's Mom.\"\n\nNo answer, but the temperature in the room did lower. If Antoinette Blushed Life, her breath surely would have been visible in the air.\n\nSamantha traced her fingers along the desk, scooped up a bright blue bracelet, and smiled at it as she plucked it experimentally, its elastic nature gently snapping back against her. \"This is Antoinette, my... my sire. Sire and childe, the vampire thing. She's the one who saved me. Well, Jack saved me, really, and Antoinette turned me so I wouldn't die in... in that hospital bed.\" After several moments of painful silence, she sat on the edge of the colorful bed, and smiled up at Antoinette. A weak smile. \"And that's good! It'd probably be very awkward if Jack sired me.\"\n\n\"And painful,\" Antoinette whispered, \"for your son, I mean. It comes at no small sacrifice to create a childe.\" With a smile to match Samantha's, Antoinette sat down beside her on the edge of the bed. The very act earned a startled stare from the woman, as if Antoinette would not dare set her derriere on a simple woman's simple bed. Silly woman.\n\n\"It does?\"\n\n\"Oui. As you know, the Beast itches to escape at all times. It is nothing more than a hungry animal, and understands little of the Masquerade or the Danse Macabre. And... when a Kindred does something that is, perhaps, rather animal and mindless, from wanton slaughter, to spreading the disease of vampirism, the Beast grows stronger, while the humanity in a vampire grows weaker.\"\n\nSamantha stared at her all the more, like she had just admitted to murder. \"You... hurt yourself, to embrace me?\"\n\n\"Ben oui, and I am glad I did.\"\n\n\"But, you didn't even know me!\"\n\n\"But I knew Jack, young Kindred, and I knew him well. As did Julias, a man I...\" Antoinette sighed, reached out, and pat her young childe on the shoulder. Mentioning Julias was a mistake. Her poor childe instantly devolved into a pit of sadness and misery, and she looked down at the floor as guilt washed over her. \"Come now, Samantha. Do not blame yourself for Julias's death. Does Beatrice blame you?\"\n\n\"No... Sometimes she looks at me, and I can tell she's thinking about what it'd be like if Julias hadn't saved me. But she's never been angry with me.\"\n\n\"Perhaps you should talk with her about him?\"\n\n\"I... I don't think she'd like that.\"\n\n\"No, undoubtedly she would not. But rarely are the things we need the things we want, or would like.\" Sighing, Antoinette looked around at the room, a dead, young woman's room, and shook her head. \"And unlike many Kindred, you were embraced at an age where you know very well how true that is.\"\n\n\"Ha, do I? I feel pretty stupid compared to every vampire I've met.\"\n\nAntoinette stroked her childe's back a few times, a gentle touch to remind her that her sire was her friend, and not simply her boss. Hopefully the message sank in. \"And yet, there are many Kindred who are forever trapped in the minds they had when embraced. Appreciate the wisdom of your experiences, my childe, and--\"\n\nThe once cold room grew colder still, and Antoinette looked to the floor as bits of mist began to flow up through the hardwood. The lights flickered, flickered, and died. The unnatural chill built upon itself until Antoinette could almost feel an ache in her bones. She flexed and unflexed her fingers as the familiar waves of death and foreign emotion given raw form filled the room.\n\nA being of ephemera was manifesting itself.\n\n\"You,\" the darkness whispered, with all the broken rasp of a corpse, \"you're... a vampire, too.\"\n\n\"Oui.\" Antoinette considered standing, but did not. Samantha did not, and under the current circumstances, it was likely the better idea, to follow suit.\n\n\"Baby!\" Samantha smiled, so joyous it was blinding, and she waved a hand at the darkness around them. \"This is Antoinette, my sire. She's the one who turned me, so that I wouldn't die.\"\n\nThe blackness remained silent for a moment, and again, Antoinette followed Samantha's cue to remain silent as well. Ghosts were unpredictable. If Samantha had found a way to communicate with her daughter regularly, whatever approach she used was best mimicked.\n\n\"You saved Mom,\" the darkness said at last.\n\n\"Your brother and his sire saved your mother, young specter. I was merely chosen to be the one who would sire her, to spare your brother the burden.\"\n\n\"Burden...\" A quiet hiss of sadness. Antoinette could not help but imagine a lamenting serpent. \"Why're you here?\"\n\nAntoinette looked up toward the center of the room and its ceiling, as movement began to stir within the black. Limbs, a head, leaking mist that fell from a woman's body where legs should have been. A hint of leg was still visible, but there was no denying the bottom half of Mary's ghostly form was a classic rendition of a shade. It hurt to see. Whether Mary's specter was actually Mary's soul, or the pain of her death scarred the immaterial realm, a scar given form by ephemera, Antoinette did not know. But there was no denying the creature brought Samantha much joy and pain.\n\nNo mother should be forced to suffer the death of their only daughter twice. Once alone was too great an injury for most.\n\n\"I am here to meet you, Mary Terry. You are the daughter of my childe, after all.\"\n\n\"Are... are you taking good care of Mom?\"\n\nAntoinette looked to Samantha.\n\n\"She is, honey. She is. Very much.\"\n\nThe ghost, a silhouette against the obsidian, drifted closer to Antoinette. Empty eyes. Terrible, and tragic. How long had it been since Antoinette had come so close with ephemera given form and will that was not a spirit from the Shadow Realm? Many decades, and even then, not with such proximity. That specter had also died a sad, traumatic death, in an equally sad, traumatic circumstance. Such was the way of things, she supposed.\n\n\"That's good,\" the ghost said. \"Good. Good. Good. Good.\" With time, Mary came closer, until only several feet separated the hovering ghost from the two vampires. \"Are you here to tell me to leave?\"\n\n\"Non. Your presence in my city has attracted no attention. Your future will be something to discuss with your family, Mary. I will not intervene.\" A lie, but a white lie. \"Are you... stable, Mary? Many ghosts struggle to remain in the physical world. It takes a powerful feeling to keep a specter among the living, and unliving.\" And if a shade had the power and raw emotion to remain stable in the physical world, it was generally accompanied by being mentally unstable. One look at Mary's twitching facial expressions proved that.\n\nMary hissed, a loud, raspy sound, and the blackness around them shivered with frustration.\n\n\"I'm here. I'll protect Mom, and Jack. That's all that matters! I...\" Her empty eyes lowered, and she drifted down toward the floor. \"I don't want to be alone.\"\n\n\"Honey.\" Samantha got down on her knees on the floor with her daughter, and set her hands on her legs. No attempt to hug her child, though Antoinette could see the woman desperately wanted to. She had visited her child many times, then, since discovering her here, to learn to hold back that reflex.\n\nThe fact Mary loved her mother and brother was obviously a great part of why she did not cross over, or disperse. But that would never be enough to create a ghost in most circumstances. Events left scars on ephemera proportional to the emotional weight they carried. Her death carried plenty, to be sure, but not enough to create a ghost.\n\nJack had later explained to Antoinette that Mary was angry with him. Not long after Jack had been embraced, he had wiped her mind of a chance encounter. A powerful and difficult feat for a young Ventrue, but now that the nature of his curse was understood, to some degree at least, such a display of power made more sense. Regardless, Mary's memory was restored after death. Anger, mixed with love, a concoction that had decimated entire kingdoms in the past. And, according to Jack, Mary had been able to monitor and discern more about what had happened to her, after her death. More anger to fuel the pyre of her ephemeral rage.\n\nAnd then, there was fear. Perhaps in her first moments of awakening, a moment Antoinette knew was likely followed by dispersal for most spirits that failed to coalesce, Mary realized what had happened. She had realized she was dead, and was now a ghost. Fear of the beyond, of the unknown, perhaps drove her to seek shelter in the one place she could feel safe: home.\n\nThe Prince felt a touch guilty for analyzing, but the moment required it. Her research required it.\n\n\"Mary,\" she said in a soft voice. \"Your brother has saved your mother's life from the hunters, and destroyed them. They are dead. He is a powerful vampire with money and resources at his disposal, and he strives to create peace in this city. Your mother is alive, as alive as a vampire can be. She is my childe, and I will protect her, with limitless resources, and the strength of an elder vampire. They do not need your protection.\" She offered the watching ghost a small nod, and a gentle smile. \"How does that make you feel?\"\n\n\"I... I don't know. I'm happy! Happy, and I feel... lighter. But, but I can't leave! I can't. I can't I can't.\"\n\n\"You don't have to leave, baby. You can stay here, as long as you need.\" Samantha inched closer, and her knees touched the ghost. If the touch was unpleasant, she did not let it show.\n\n\"Mom, you have to be careful. That thing, the thing making the lines, it's still here. Other ghosts, they see it, and they're afraid.\"\n\n\"Lines?\" Antoinette said.\n\n\"Lines! Cuts, in the world! I can see through them, and sometimes things go through them. And... and the lines are making something. I don't want to go there. I don't!\"\n\nThe Prince raised a hand slowly. \"Mary, listen to me carefully.\"\n\n\"I don't want to go there! I--\"\n\n\"Mary!\" Antoinette cut through the specter's words with a shout of pure ice, a voice she did not want to use. But it silenced the ghost, and left her and her mother staring at her, shocked. Good. \"Mary, tell me, have you seen what has created these lines, these cuts in the world?\"\n\nShe shook her head, body trembling and vibrating. Even as she spoke, she began to fade away. \"It's dark where it comes from, Mom's sire. It's dark. Even the strange things that sometimes come through, the ones that can talk and have claws, it's not dark where they come from. Where this thing comes from, it's... it's dark. So... dark...\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\nSomeone was watching Maria's home.\n\nNatasha growled under her breath, and reached for her pistol. Still there, in its vest holster. She reached for her other pistol. Still there, opposite side, and armed with silver bullets. Knives? Still there, one silver, the other normal. A--normal? What metal were knives usually made of? Steel? She whipped out her phone and made a quick note to look up the answer later.\n\nShe wrapped herself in Face in the Crowd, and slowly approached the Grand Cathedral from a fair distance. A quick peek up at a nearby building through her binoculars showed an Uratha was watching the building, and a second peek revealed it was Noah. He was a pragmatic Uratha, and probably did the math already that Maria couldn't be trusted. Tash wouldn't be able to appeal to his empathy, like she could Matt and Art. If he saw Natasha going into the cathedral, he'd report it to Avery, and that'd lead to awkward conversations.\n\nSo, better he never knew.\n\nAs she grew closer to the huge building, she escalated her Obfuscate Discipline, wrapping herself in her best Cloak of Night. Training with Daniel had definitely upped the quality, and she felt pretty sure she could avoid a werewolf's senses, even when moving forward.\n\nShe shivered as a deadly memory jumped up from her past. Her, hiding in the darkness, from a group of monsters that turned out to be a bunch of werewolves. That'd been such a terrifying night, and in the end, they'd been able to catch her. Of course there'd been a bunch of them, and they'd been strong enough to rip through metal and concrete in the pursuit. This time there was only one, and she was much better now.\n\nShe hopped over the fence. Nothing stopping her from just walking through the front door, except she wouldn't be able to cloak a door opening. If Noah saw the door open but no one going in or out, he'd investigate. She didn't want that. This was going to be a private conversation, and she had to have a face-to-face for it.\n\nUnlike the Hisil, getting into the cathedral through a side entrance would be easy. She walked toward the back of the church, and--and found another werewolf! Caleb, the hothead. Ok, one werewolf keeping an eye on the cathedral, she could understand. Two? It wasn't like the pack was large and had the bodies to spare. Were they preparing to run into Maria's den now? No. Judging from how Noah and Caleb were patrolling at a distance, they were just keeping an eye on things.\n\nThat's how wolves did things. They hunted as a pack, but they also had scouts that would roam and stalk potential prey. They didn't just blitzkrieg the enemy like a bunch of Carthians. And that meant she had to be extra careful.\n\nClimbing the cathedral was super easy, compared to the Hisil's version. A hop up onto the slopped roof, and then in through one of the windows. She did her damnedest to keep every motion slow, and found a window darkened by one of the cathedral's towers to open. Unless someone was watching with night vision goggles, they wouldn't notice the window gently sliding open, and her slipping in.\n\nThe nave was empty. She knew some Kindred occasionally visited, like her childe Vivi. For kine turned Kindred who found their life over and a second life given to them in a corpse that sucked life out of others, soul searching was inevitable. Many who turned to Longinus's teachings were either religious before their embrace, or became religious, in some bid to find meaning in their second lives. She could never understand that way of thinking, but it worked for Damien, and even Vivi.\n\nNow she realized she'd been half hoping Vivi was here. They didn't talk anymore, but not for any drama reason. They just grew apart. It'd be fun to catch up with her, talk about her growing role in the Invictus, and her interest in the Lancea et Sanctum. But if the Uratha killed Maria, there'd be no revival of the Lancea et Sanctum. Damien probably wouldn't be able to do it alone.\n\nNatasha didn't care about the Lancea et Sanctum, not really. She cared about finding the truth. What Mekhet didn't?\n\nShe rubbed her arms as she walked down the isle, and stopped in front of the pulpit. A bible sat on its wood surface, and she smiled at it as she stepped around. It was hard to imagine Maria standing up and giving lectures to listening Kindred. It was hard to imagine Damien doing it too, but then, the first time Natasha had ever seen Damien, he'd been doing just that. She'd snuck into Tony's old lair, and found Damien helping out some Kindred with understanding their faith.\n\nShe smiled at the memory. A lifetime ago. And Damien had been so strangely suave and charismatic when talking about Longinus, that Tash now had a hard time thinking it was even the same person she knew now. He even had a girlfriend now. A very horny girlfriend. A very drunk, horny girlfriend.\n\nMaybe Fiona enjoyed playing up the stereotype? Fiery redhead from Scotland who loved to drink and fuck? She seemed like an airhead on the surface, but no one who lived in the paranormal world could stay like that for long. No, Fiona was smarter than she let on, and probably just had fun acting like the girl she could no longer be, since a nightmare monster came along and decided to share a body with her.\n\nTash shook her head, trying to dislodge the images of that night. Everyone topless! Which, now that she thought about it, wasn't really all that shocking, at least not in the amount of new skin. She'd seen the Prince naked, and Jack, and her boyfriends of course, and Jessy, and Eric, and Fiona; she'd caught Jessy fucking Eric one time in Bloodlust, with Fiona right there. Newcomers to her mental catalogue of people's breasts and chests: Elaine and Damien. Elaine looked like everyone knew she looked like, the tall, glamorous, busty blonde model look, with a hint of harshness in her eyes that reminded Tash of her old boss Viktor. Scary. And Damien would have fit perfectly on a Twilight poster.",
        "Matt and Art had teased her unendingly when they got her home, partly because they were drunk, and partly because they saw that Tash had found the situation highly arousing. She'd gotten a bit angry at them, and they apologized. As they fucked her. Damn boys!\n\nBut, seeing how comfortable everyone was with each other, had put Natasha into a certain mindset again. She was excited to make her next movie, something really naughty and dark. Maybe too dark? It was just a movie though, a fantasy, not real!\n\nShe stopped, blinked, and shook her head harder this time. Stop. Thinking. About. Sex. Ugh, Jessy's corruption was complete, so complete Natasha was thinking about sex while on a dangerous mission, and in a church!\n\nIt wasn't just that. What she was doing now could potentially put her at odds with the Uratha, and that meant she might lose Matthew and Arturo. She was thinking about them, because if she made a mistake, they could be out of her life. Bad, because she'd lose out on the best sex she'd ever had, and was getting frequently. Worse, she'd lose out on an amazing relationship with two amazing men, men who cared about her, men who... might love her.\n\nMaybe she should have invited them? It'd have been really mean to put them between her and their boss like that. Help her, make Avery angry. Pick Avery over her, and hurt her feelings. So she'd made the choice for them, which was kinda mean, too. But this was her choice, and she didn't want them put between a rock and a hard place.\n\nSighing, she stepped toward the organ in the back, and then around back where the curving wall held a door. Then she went down, and down, into Maria's den. The woman had spent decades carving herself out a long hall in the rock, and Natasha shivered as she looked at the beautiful stone. Tiny lights lit the way, but it didn't take long before she came to the first barrier of bars.\n\nBars wouldn't stop a determined Kindred or paranormal, but they would stop a kine, at least momentarily. A moment was all that was needed for a quartet of highly trained ghouls armed with sniper rifles, explosives, and flamethrowers to take down anyone trying to break their way in while Maria slept, and that included almost any paranormal who was up during the day. At night, Maria had only one ghoul, a disfigured, jolly man with a hunch back, who happily kept Maria company, and her den clean. At night, Maria felt more than comfortable defending herself against any threat.\n\nSo, being the brilliant mastermind Natasha was, she knocked on the bars. \"Hello?\"\n\nAfter a few long moments, Maria's ghoul sauntered up to the gate. It took him a while, being that he had to open the other gates in the way too, but he arrived eventually, and smiled at her.\n\n\"Natasha.\"\n\n\"Hello Matthias. How are you?\"\n\nThe man smiled again, mouth a little crooked and warped, and he dialed in a code on the wall panel. The bars raised, and he smiled wider.\n\n\"Good. Good.\" Nodding as if everything in the world was right, the man began the walk through the long tunnel back to Maria's den, and he did it quite slowly.\n\n\"Damien here?\"\n\n\"No. Only me and the master.\" After a small grunt of acknowledgment, he nodded to her again, and stopped following her. Apparently he'd noticed a bit of dirt on the floor, and since the man was never without his broom, he got to sweeping, leaving Natasha to go on without him.\n\nNatasha returned the man's smile, and gave him a small pat on the arm, his smaller arm. The touch surprised him, and he flinched away slightly, but when he realized what'd happened, he smiled at her again, and got back to sweeping. Far as Tash knew, Maria treated Matthias well, but the man's mind had never really settled into adulthood. He was damaged, and Tash knew to be gentle with him.\n\nShe moved on, and after passing a few more gates already opened, she came into Maria's den. A giant dome room, with huge paintings on the curved stone walls and ceiling, hanging curtains, and various desks covered in old tomes. There was a grand piano, and near it against the wall, a very Gothic casket, huge, the sort of casket a rich family would get their dead lord, three hundred years ago.\n\nMaria sat at the piano, playing some classical piece Natasha didn't recognize. Maria was a virtuoso, and could play anything anyone else could. She could play it blindfolded, given a few days to memorize the sheet music. When Natasha saw the movie Gattaca, there'd been a minor bit where the actors mentioned a pianist who had twelve fingers, and how there was music only he could play. Maria wouldn't need twelve fingers.\n\nShe wore her usual white dress, something a rich woman might wear by her lonesome, two hundred years ago. White mist leaked from the cracks in her ruined skin, and disappeared on the floor like dry ice fog, something that even seasoned Kindred tried to avoid having touch them. Nosferatu came with many sorts of mutations and deviations, from hidden, huge crocodile mouths and snake eyes like Beatrice, to Bob, a classic Nosferatu vampire from the movies, to Kindred like Maria, who looked like a corpse risen from a lake and possessed by a ghost or something. The mist was harmless though, and Natasha ignored it as she approached.\n\n\"Madam Turio,\" she said. \"I... H-How are you?\"\n\n\"Madam Vola.\" Her crackling, dry voice was soft, and Natasha almost didn't hear it over the music. The elder continued to play. \"I trust you are doing well?\"\n\n\"I am.\" She came closer, until she eventually stood beside her old boss, and the huge piano she played.\n\nMaria's eyes didn't meet Natasha's, and they didn't look to the sheet music in front of her either. They locked onto her fingers and didn't let go, as if she could see something in her ruined skin Natasha couldn't.\n\n\"Does your career in the Ordo Dracul blossom?\"\n\n\"Um, sorta? It's... it's d-definitely a weird covenant. The Prince is slow to show me secrets, but when she does, it's...\" Scary.\n\n\"Yes, I imagine your time with the dragons will be filled with strange things. Terrifying things. That is why you originally left them, is it not?\"\n\n\"I...\" Sighing, Natasha stepped in a little closer, and set her hands on the side of the piano. \"It was, and it still is. B-But, I've learned a lot since then, and I think I'm... I'm strong enough now, to deal with it.\" She smiled at Maria, and though Maria didn't lift her eyes, Tash knew her old boss saw it. \"You're part of the reason for that.\"\n\nMaria's playing faltered. Just a moment, a fraction of a second where Maria hit a note a little softer than she should have. That was more vulnerability than Maria ever let show.\n\n\"I made your life difficult, Natasha.\"\n\nHearing Maria drop the titles was enough to make Natasha's hand slip, and she almost fell. That wouldn't have been a fun way to have this important, and quickly turning emotional conversation with her old boss, with a split lip.\n\n\"Y-Yeah, you did. But, you also gave me responsibilities. A lot of p-people think I'm just a... weak little Mekhet. But you helped me become a Right Hand of the Invictus. Daniel may be my sire, b-but... I first learned how to take care of myself from you.\"\n\nMaria's playing didn't falter this time, but she did smile, a tiny thing that her broken lips struggled to make. \"Why have you come to my den?\"\n\n\"I... w-wanted to talk, about... stuff.\"\n\nWithout slowing her playing, Maria sighed and shrugged. \"I don't talk as much as I should, I suppose. Ever since Lucas disappeared, so long ago, I don't talk to anyone, save for Matthias.\"\n\n\"What about Damien?\"\n\nShe smiled at the mention of the young man, and shook her head. \"It is painful, to look at the man sometimes. He looks and behaves nothing like his sire, but I can sometimes see hints of Lucas in him. Sire to childe, I suppose.\"\n\n\"Have you, um, ever considered siring someone?\"\n\n\"No. I do not wish this Nosferatu curse on anyone.\" That was more compassion from Maria than Natasha expected. Maria was a cold, cruel, calculating woman, and to hear her openly admit to an act of empathy was alien to her ears. Maria noticed her notice, and she shook her head as she closed her eyes, still playing. \"Nosferatu are twisted, Vola. They rarely sire unless they are compelled by their scarred minds to do so. And what Kindred who do not kill themselves upon awakening and seeing their deformities, slowly grow to be as twisted as their sires. I would not inflict that madness on anyone, unless I had to.\"\n\nThat, was true. Nosferatu were generally the least counted of the blood clans, because of the reasons Maria said. They hated themselves. Only Nosferatu who were either psychotic, or twisted up with resentment, were willing to pass on their curse. Sometimes, it was easy to forget that not all Kindred could take a friendly stroll in public.\n\n\"M... Maria, I wanted to talk to you about--\"\n\n\"About whether the rumors about me are true. About whether I am actually delving into dark arts, and attempting to resurrect my lover Lucas.\"\n\nNatasha just stared at Maria, which must have looked amusing, because Maria looked at her, laughed a quiet, crackling sound, and looked back down at her fingers as she played.\n\n\"You know?\"\n\n\"Of course I know, young vampire. I do not need to be Mekhet to understand the value of information. I have more ghouls than Matthias, and many thralls. Not long ago, I was council member of the Invictus. I am now the only thing keeping the Second Estate alive in Dolareido, save Damien.\" At last, she stopped playing, and slowly closed the lid over the piano keys, before looking at Natasha with an amused, disappointed look. \"Surely you know better than to think I wouldn't know.\"\n\n\"I... I um... It's just that, it's...\"\n\n\"And I know that Avery has taken an interest.\"\n\nNatasha froze. \"You d-do?\"\n\n\"Of course. She watches me now, convinced I am up to no good.\" Sighing, Maria ran a finger through her long, black, ruined hair, and groaned with frustration. \"She lacks subtly. The fool woman is but a child compared to me, and knows nothing of Dolareido. Her first visit was short lived, and her second visit will be as well, if she continues to push me.\"\n\nThe details of Avery's first visit were sparse. Kindred didn't like sharing information if they didn't have to, and this was quickly turning into a situation where some more information about Avery, and Simon, and even Minerva, would be useful.\n\nAfter a few moments of silence, Natasha dug deep, found some courage hidden in a corner, and spoke up.\n\n\"Maria, w-what caused Avery, and Simon, to kill Minerva?\"\n\nThe elder looked down and away. \"You should ask Jacob.\"\n\n\"I can't! He'd... he'd never tell me.\" She'd gotten the man's attention once, and she'd prefer to not get it again.\n\n\"Yes, well, you should hear it from him, not me. And, poor Jacob, Avery still has not told him the details of it anyway.\"\n\n\"But this isn't about Jacob anymore. This is about... about you.\" She could say that, right? She promised Avery she wouldn't tell Maria about what the werewolves were doing, about digging up evidence in the Hisil against her. And she wouldn't. But Maria already knew about the rumors, so, it was ok to talk about related things, right?\n\nSelf deception, the worst kind of lies.\n\n\"I suppose it is about me, isn't it?\" She got up and walked toward a big wooden desk, with a huge, well worn leather chair behind it. On top of the desk was a laptop, but mostly it was covered in big old books. The tome of Longinus was obvious, not dusty at all, and she ran a finger along its cover as she settled in her seat. \"Rumors abound that I'm speaking with dark creatures in darker shadows, that I commune with demons or spirits, that I enact terrible rituals, bathe in the blood of virgins, and sew together the body parts of the dead, all in some desperate attempt to revive Lucas.\"\n\nThose were the rumors, but Tash didn't say it. Maria felt like talking, and years of having her as a boss taught Natasha to shut up when Maria spoke. She didn't do it often, and when she did, it paid to pay attention.\n\n\"I cannot blame people for thinking that,\" she continued. \"I can, however, blame them for thinking I am some heathen witch of the Circle, dancing naked around a sacrifice under the full moon.\"\n\nNatasha almost giggled, until she realized Maria wasn't joking.\n\n\"They... d-do that?\"\n\n\"That, and worse.\" Sighing, Maria slumped in her chair, abandoning her normally regal posture, and stared down at the books on her desk. \"I let the ants scurry and trade useless rumors. They cannot harm me.\"\n\n\"M-Maybe not, but the Uratha--\"\n\n\"Let the Uratha watch. They will find nothing.\" She groaned, raised a hand to her face, and half covered it in her fingers like she was clawing away the irritation in her mind. \"The damn dogs will find nothing here. Perhaps they would be better off chasing Beatrice? Kine disappear from the streets at an increasing rate, all by her hand. And yet it is I people assume tamper with ungodly forces to resurrect my love?\"\n\n\"Wait, what?\"\n\n\"The witch Beatrice, she steals kine off the streets, likely to be sacrificed in some horrible ritual. And what possible reason could a witch her age have to perform such disgusting acts?\"\n\nNatasha gulped and looked down. The spirits in the Hisil, the ones obsessed with flesh, they said nothing about Beatrice. What was going on?\n\n\"As for Minerva,\" Maria continued, \"she died because Simon was an impulsive idiot. Jacob and the Prince know more details than I, but Minerva was attempting to find ways to commune with spirits. That in and of itself is not something extreme that warrants murder, and yet, Simon and his pack killed her for it, or something related.\"\n\n\"The Uratha are d-devoted to defending the Gauntlet, and maintaining a balance.\"\n\n\"Indeed,\" Maria said. \"What could little Minerva have been up to, to earn their wrath? Doubtless whatever rituals she was performing to commune with the other side were endangering the balance those bloody dogs are so concerned with. And few knew how much Jacob and Minerva loved each other, and how much information they shared.\" Growling, she slammed a palm against the desk, and Natasha jumped as the impact sound echoed sharply in the large dome cavern of rock around them. \"Suspicion is pointed to me! And yet it is that blasted witch who has the tools to reach across the barrier, to ask the spirits for their aid. Doubtless Beatrice seeks to raise her dead lover, and I... I do not blame her. The idea has crossed my mind countless times, Natasha. To have that fool in my arms again? I have indeed contemplated the depths of depravity I'd be willing to sink to, to have that in my second life again, and I...\" She ground her teeth until Natasha could hear it, and the elder looked down at the table with defeat.\n\nInformation overload. Mental note! Learn more about whatever Beatrice was up to. If Julias's death had hurt her that badly, then doing something crazy, especially with Jacob and Black Blood's help, was entirely possible. Maybe the spirits had it wrong? Maybe Beatrice was contacting them, and telling them her name was Maria, to throw people off?\n\nAnd Minerva. Antoinette had only told her a little about Minerva, and Maria filled in the holes. Minerva was doing something to the Gauntlet, and the werewolves killed her for it. But what exactly?\n\n\"You're... n-not trying to resurrect Lucas.\"\n\n\"No, I am not. I have delved into Theban Sorcery before, and found it... well, the details of my exploring will remain my own. But I have touched its secrets, and have found mysteries hidden within the many tomes I managed to recover from Lucas's archives. Talk of resurrection was rare, and what few authors were willing to speak of it were obviously terrified.\" She motioned for Natasha to come closer. After a second's hesitation, she did, only after becoming painfully aware that she'd told no one she was coming here, and she'd snuck in. If Maria killed her for some sort of resurrection ritual, no one would know. Eep. \"Something is amiss in this city, Natasha. I am sure you're aware of it. Something sinister plots underneath us all. And now werewolves are at my door, as if guided.\"\n\nNatasha stared, dumbstruck, and did her best to not look like she knew exactly what Maria was talking about. \"You think you're... b-being framed?\"\n\n\"I have done terrible things in my centuries of life, Natasha Vola. In my younger days, I slaughtered an entire village once, when they discovered what I was. Rather than let them arm themselves with fire and force, I killed the group that discovered me, and killed the rest while they slept. Men, women, children.\" The elder's voice was cold, solid, and she met Natasha's shocked gaze as if her eyes bared her soul. Maybe they did. \"I have... I have done many things. But to violate the laws of God to such a degree? To rip a soul from the great beyond? We are already damned creatures, Natasha. Why would I dare invite such judgment from all the Almighty upon me?\"\n\nThat, was something Natasha hadn't considered. Maria Turio was a devout worshiper of God, and follower of the path of Longinus, even when she officially served as a leader in the Invictus Council of Dolareido. Everything pointed to Maria being the one doing something sinister in the city, the strange rumors, the talk of resurrection that came out of nowhere, the spirits in the Hisil that spoke of her and a ritual, everything. But Maria was the last person in the city who'd do something as unholy as using dark magic to resurrect someone.\n\n\"The T-Testament of Longinus, it doesn't... support resurrection, in some way?\" She'd read the book, but it was large and, just like the Christian bible, filled with vague references, contradictions, and passages that could be interpreted a million different ways. Studying it would have been an exercise in futility.\n\n\"It speaks of the unholy act of the embrace, of siring childer, and how vile -- and necessary -- such an act is. It speaks of the path Kindred must follow, of the work we must perform, if we ever wish to see the light of God. But true resurrection? To be raised from the dead, whole? The Testament of Longinus specifically says only one thing about it: that only God controls the fate of the dead.\" She shivered as she said it, and set a single hand on the book. \"Who am I to defy God's will? No. No, I would never do such a thing.\"\n\n\"Then the rumors...\"\n\n\"Perhaps started by some Carthian under Garry's influence? To stain my name and cause problems. Or perhaps started by whatever it is that lurks within the city. I do not know. But when I find out, little Vola, I am going to bestow a Nightmare upon them so fierce and horrendous, they will wish they had never been born.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\n\"Ladies, uh, I think Elaine and I were going to try out some kinda... ritual thing, right?\" He squirmed and wriggled, but the women burying him didn't move.\n\nAntoinette, Elaine, Ashley, and Julee all either sat on him or lay on him, and had done a damn good job of pinning him to the bed. He wasn't getting up without using vitae to do it, and that would definitely spoil the fun mood everyone was in. Ashley and Julee didn't normally get to enjoy a whole bout of sex from beginning to end without someone Kissing them, so they were in particularly cheerful moods.\n\n\"Are you suggesting we should stop?\" Elaine said, and she grinned down at him from where she sat on his stomach, her knees snug against his sides under his armpits. Naked, she gently eased her body back and forth along his abs, and a shiver ran through her as Antoinette, sat behind her, slid her fingertips up and down Elaine's stomach.\n\nElaine was tall, but Antoinette was damn tall, and she grinned over Elaine's shoulder down at Jack. She'd sat on his pelvis, with full intent on fucking him after Jack had made a mess on Elaine's breasts, at least until Jack interjected just now. Yeah, he was an idiot, but it was obvious that being around Elaine sorta broke Antoinette's normal control. Since her old friend's arrival, she'd fuck him all night every night with Elaine. Kinda like when friends get back together after having been apart for years, they sorta devolve back into how they were when they last hung out.",
        "Apparently, Antoinette and Elaine were total sex addicts when they got together.\n\nHe tried to lift his arm, but Ashley lay along it, pinning it, and she cuddled into it and him as she looked up to watch what Antoinette did to Elaine's body. Julee did the same for his other arm, and she sighed dreamily as she watched.\n\nAnd Jack couldn't help but watch too as his lover slid both her hands up to Elaine's cum-soaked breasts, and massaged. First slowly, in gentle, teasing motions that circled the woman's swollen nipples, before sinking her fingers into her friend's breasts until they almost disappeared in the softness. His white cum slipped out from between her fingers, only for Antoinette to spread it around in circular patterns, until her hands cupped the undersides of Elaine's breasts. Then, she squeezed, and drew her fingers forward, like she was milking Elaine, and his cum dripped off the blonde's hard nipples and onto Jack's abs.\n\n\"I... I'm afraid I have to insist. There's only so many hours in the night, and--\"\n\nAntoinette pressed her chest into Elaine's back, and her breasts were big enough Jack could see their contours squashed outward by the contact. Her left hand continued to massage the ever increasingly horny Elaine, while her right hand drifted down, and down, and down the tall blonde's flat stomach, before settling on her slit. And with an evil grin, Antoinette slipped her fingers into Elaine's body.\n\nAshley, Julee, and Jack all stared, hypnotized, as Antoinette fingered Elaine like playing an instrument she'd mastered. The shifting of her hand was obviously massaging Elaine's swollen clitoris, while her fingers curled and pressed against the woman's insides toward her front. And while she did that, Antoinette's left hand continued to play with the woman's breasts, with obvious focus on caressing the woman's nipples, like she might for herself.\n\nTwo minutes later, Elaine came, for what was probably the seventh time that night. A couple drops of her juices leaked out from between Antoinette's already drenched fingers, and onto Jack's stomach. As she came, Elaine leaned back, and turned her head enough so Antoinette could happily kiss and suckle the woman's naked neck.\n\nIt only got more hypnotic as Elaine, apparently not satisfied, took over breast-massaging duty. She cupped her breasts and caressed her nipples with gentle twists and full, heavy kneading motions, each causing Jack's cum to swirl around on her skin. It freed Antoinette to use both hands on the woman's pussy, and force in more fingers, and more, until Elaine groaned openly. With what must have been five fingers inside her, she pumped her hips toward Antoinette's hand, and smiled like an evil succubus down at Jack, as she again climaxed.\n\nAnd just like Antoinette, she had no trouble remaining in full control during orgasm. She set her wet hands on Jack's chest, leaned forward, and humped Antoinette's fingers as she came, all the while grinning down at him, her enormous, coated breasts bouncing lightly underneath her. She came again, and again, each earning some loud, pleased groans from the Ventrue, and each earning more trickling drops of her fluids.\n\nAfter five minutes of that madness, Antoinette finally stopped, and pushed Elaine off him. She wasn't gentle, and Elaine bounced on the bed a couple times, landing beside Julee.\n\n\"There, you harlot. Satisfied?\"\n\nElaine laughed, and climbed onto Julee. \"Not yet.\"\n\nJack rolled his eyes, but he couldn't help but turn his head to watch Elaine as she pressed her breasts down onto Julee, sank her fingers into the ghoul's smooth, tiny slit, and simultaneously sank her fangs into her neck. Julee came in seconds.\n\n\"Sometimes I wonder which of us is the Daeva.\" Rolling her eyes, Antoinette leaned forward, pressed her body down on Jack, and kissed him. \"I will be coming to this ritual.\"\n\n\"You will? You uh, normally let Daniel keep an eye on me during this sort of stuff.\" It was hard to focus on the conversation, with Elaine only inches away, facing toward him and Julee. Her breasts were squashed on Julee's, and jiggling as the woman pumped her hand up and down inside Julee's trembling body. The ghoul's hips and legs went up into the air, and splashing sounds filled the room as Elaine fingered the squeaking girl so hard, the bed shook. It was a huge bed.\n\n\"Oui, but I would not be a good ruler if I did not examine things for myself, once in a while. And Daniel is preoccupied.\"\n\nThe sheriff, preoccupied. He almost asked, but stopped himself. If she said preoccupied, it was probably a secret, and he was happier not learning anymore secrets these days.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"This is a very scary room,\" he said. \"And, it kinda looks like what I thought the inside of a mad mathematical genius's mind would look like.\" He pointed down at the symbols drawn, or etched, into the floor in some sort of version of the Fibonacci sequence, white lines cut into the black marble.\n\n\"Perhaps it was?\" Antoinette said, smiling at him. She sat at a large table, a very long thing covered in laptops and smart phones and tablets, and several chairs waited for people to sit in them. Only Antoinette and Elaine did though, both looking into their own laptop screens, while Jack stood in the center of the room, on the center of the strange design underneath him.\n\nIf this was what it felt like to be a specimen of some kind, trapped in a big glass jar while scientists poked and prodded, he officially now felt bad for the specimens, and Elaine and Antoinette hadn't even gotten to poking and prodding him yet.\n\n\"Um, I... I know you're both pretty high ranking members of the Ordo Dracul, right?\"\n\n\"Correct,\" Elaine said, eyes still on her laptop.\n\n\"And from what I know, dragons, they... do a lot of experiments, right?\"\n\n\"Correct,\" Antoinette said, mirroring Elaine's tone and posture. Creepy.\n\n\"You're not going to tie me up, cut me open, and examine my insides, are you?\"\n\nThe two women laughed, the sort of laugh a doctor might make when a patient makes a joke they'd heard a thousand times. A joke they might still find funny, but one they'd heard before. A professional, practiced laugh, and he suddenly felt less like a specimen, and more like he did during his first dentist visit as a kid. Fucking. Terrified.\n\n\"We will monitor the situation closely,\" the Prince said, with a voice far too similar to the aforementioned dentist. \"I do many experiments here, my love. But none of them are gruesome.\"\n\nElaine chuckled, and this time, she sounded less the professional dentist, and more like a crazy mad doctor, like Frankenstein in the movies. \"Dragons never share where they do their really gruesome experiments.\"\n\nHe groaned and hugged himself until he was almost crushing his suit jacket. He'd partly expected to be doing this naked, either because the ritual would require it, or because the two women would want to have some fun at his expense. Wearing a suit was comforting, and he was glad to have it, especially now.\n\nAntoinette tapped a few things on her laptop, and then a strange humming sound filled the room. Jack raised a brow as he looked at the two women, but neither of them indicated that something was wrong. The lights turned off, and Jack spun around in a panic, but again the two women showed no sign of movement in the hint of light that remained. The hum grew louder, and changed in pitch, apparently adjusting as the two ladies did something on their laptops.\n\nThen the chandelier over him turned on. His head snapped up, and he blinked several times as his eyes adjusted to the strange blue light. It wasn't a normal looking chandelier. It was huge, and it had giant crystals where you'd normally find light bulbs or candles. He'd noticed the crystals held strange blue flame when he'd come in, but he just figured it was ornamental or something. Antoinette did spend a lot of money on some crazy aesthetic stuff.\n\nIt definitely wasn't an ornament. The blue fires inside the crystals grew and grew, until the whole room was blue. The light danced, never perfectly solid, flickering and swaying the way fire does. Beautiful, but it was pretty unnerving to be directly under a huge chandelier that looked like it belonged in Hades.\n\n\"Um, is this the ritual?\"\n\n\"We are attempting to find the wavelength that the curse operates on, Jack,\" Elaine said, \"if it operates on one at all. Give us time.\"\n\n\"Wavelength?\"\n\nAntoinette nodded, stood up, and approached him with a tablet in hand, camera pointed at him. \"Yes. I cannot elaborate further my love, unless you wished to join the Ordo?\"\n\n\"Um, nah.\" He shook his head, and smiled up at Antoinette as she started to circle him, her eyes still on the tablet with it pointed at him. \"I don't think crazy experiments and stuff are really my thing.\"\n\n\"Oh?\"\n\nHe laughed. They'd had this conversation before, but it was fun to repeat it. \"Money, power, those things I get. Crazy experiments delving into... weird stuff? No thanks.\"\n\nElaine joined Antoinette, pointing her own tablet at him and tapping on various things on its screen. \"You would happily live your second life as a lawyer, I assume.\"\n\n\"Fuck yeah I would. Arguing for a living? Love it.\"\n\n\"Lawyers are quite attractive,\" Antoinette said. \"Though, I suspect much of that is due to the attractiveness some evil characters carry.\"\n\nElaine nodded, and swiped her finger across the tablet. \"A man with power, money, and intelligence? Quite attractive. Powerful and forceful? Deliriously so. Why, as a rich, successful lawyer, you could have four women in your bed at the snap of your fingers.\"\n\n\"Four?\" Antoinette said. \"How salacious.\"\n\n\"Hey! I've never... snapped my fingers.\" He frowned at the two evil women and put his hands in his pockets with defiance.\n\n\"Of course not,\" Elaine said, \"you are not a lawyer. Once you become a licensed attorney, finger snapping will come naturally. I--\" She froze, her eyes widened, and she stared at the screen like she was watching a horror movie.\n\n\"W-What? What're you looking at?\"\n\nAntoinette checked Elaine's tablet, and her eyes went wide as well. Welp, time to get super fucking paranoid.\n\n\"It is... as the Begotten describe,\" she said.\n\n\"You can see that?\"\n\n\"Hints of it, of... blackness, of tendrils that wrap you.\"\n\nHe groaned and rubbed his head. \"Sounds like the curse, yeah.\"\n\n\"And something else, my love. Hints of the past.\"\n\n\"The past?\"\n\nElaine glared at the screen, and she shivered. Which of course dialed Jack's worry up to eleven. The elders didn't get scared over anything, but the look on Elaine and Antoinette's face was pretty damn close.\n\n\"The Strix,\" Elaine said.\n\n\"The Strix? Those... owl things?\"\n\nHis great grandsire nodded. \"Striges, strange creatures of ephemera that haunt Kindred, and specifically Kindred. They stalk us, twist and manipulate, and cause strife of unparalleled insanity. Wherever the Strix are found, tragedy for Kindred follows.\"\n\n\"Fuuuuuck. You can see them?\"\n\nElaine lowered the tablet, and the look she gave him fucking hurt, like, she was a mom apologizing to their kid that Christmas was canceled. \"Two perch upon your shoulders.\"\n\nHe immediately tried dusting off his shoulders, like anyone would if they found a spider camping out there. \"Really? Like... actually, right now?\"\n\n\"Worry not,\" Antoinette said. \"We are looking at the scars of the past. Elaine, if you would?\"\n\nWith a heavy nod, the elder stepped into the circle beside him, and Antoinette pointed her tablet at her.\n\n\"Anything?\"\n\n\"Non. You are clean, old friend.\"\n\n\"Good. If those... things, were irremovable, I would...\" Sighing again, she looked down at Jack, and pat him on the shoulder. \"I suppose I knew, especially now that you have told me so much, great grandchilde. But I never thought it would be so...\"\n\n\"You two are really freaking me out. Can I see?\"\n\nAntoinette shook her head. \"Alas, I cannot record beings of ephemera, or the scars left upon it. The lens we use to gaze upon these living memories is custom, and the software of these devices cannot see what our eyes can.\"\n\nOf course.\n\n\"Sounds kinda like the Northern Lights,\" he said. \"I'd heard old cameras couldn't get them on film.\"\n\n\"Indeed,\" Antoinette said. \"I cannot share the secrets I know, but I am comfortable sharing that ephemera defies recording. Entities, such as spirits, or... ghosts, resist film, analog or digital. When they can be captured, they are blurs, or glowing eyes, rarely more.\"\n\n\"I guess that explains a lot. If people could actually take pictures of ghosts, then--\"\n\n\"Then the supernatural world would be known to all,\" Elaine said. \"The world of the paranormal resists discovery. The Beast knows how to hide us from lens and mirror. Werewolves can somehow twist the minds of those nearby, driving them mad with lunacy. Begotten are... beyond my understanding.\"\n\n\"For all we owe these gifts,\" Antoinette said, \"they are not perfect. Given time, humanity will discover us. They will find vampire and werewolf, monster and spirit, ghost and specter, and I will see to it that when they do, they do not fall upon us with weapons of the future.\"\n\nElaine smiled down at Jack and rolled her yes, before walking back over to her friend. \"Yes, I know of your delusions, Ann.\"\n\nAntoinette copied Elaine's eye roll, but didn't retort. \"I am sorry my love, that I could not find more. But this does give Elaine and I a starting point.\" She took both tablets back to the table, turned down the chandelier until it was only a soft glow of blue, and turned the regular lights back on.\n\n\"And,\" Elaine said, \"my ghouls have sent more information to us. There is talk of something I did, from well before I met Ann. Something I did involving the sacrifice of animals to quiet my insides.\"\n\n\"Insides?\"\n\n\"Insides. The journals were always vague, and the few that survived the centuries tell little. And many were... written by a woman driven mad by urges she could not understand.\"\n\nHe winced and looked down. Yeah, he knew those urges, back when the curse was locked up tight. It'd been slowly turning him into a psychopath, someone that reveled in murder and butchery, and it blinded him to using his brain. Who knew how long Elaine dealt with that before she found a way to remove it? Decades? A century?\n\nAnd that was a problem, that Elaine had experienced the curse when it was bound and locked up, but never when it was freed. She'd somehow purged it, but it'd still been trapped by the binding at the time. Would whatever Elaine managed to dig up even work for him?\n\n\"This... this new Jack,\" he said, \"in my head. Did he show up on your tablet thing?\"\n\nElaine sighed again, and walked over to the table to rejoin Antoinette. Both shook their heads.\n\n\"No, little Ventrue,\" the Prince said. \"This voice that speaks to you, if it... if he were a creature of ephemera, I feel confident my device would have been able to expose him. We found marks of the curse, and the scars of the striges, but that is all.\"\n\nGroaning, he walked up to them and stood by the table. \"Anything vampire-y ever show up on that thing? Like, ever try to see the Beast, or something?\"\n\nAntoinette managed a weak smile for him. \"I tell you this in good faith. Please do not share it, with anyone.\"\n\n\"Done.\"\n\n\"I have attempted to discover the Beast and the soul, but have found neither. I suspect they exist somewhere protected, beyond my reach. For now. My device can see when Kindred use various abilities, those that reach out beyond themselves, such as Majesty or Dominate. But no more.\"\n\n\"Powerful machine. I won't tell anyone about it, honest.\"\n\nThe Prince nodded. \"Very good. Of course, Natasha and Daniel know of it, and your mother has seen it as well, but I would still prefer you do not speak of it with them. Secrets can be slippery things.\"\n\nHe nodded, walked around, and kissed her. \"I get ya. Don't need to be a dragon to appreciate the value of a secret.\"\n\n\"Are you off?\"\n\n\"Yeah, gonna head back to my place. My... new place.\" A mansion. A big, empty mansion.\n\n\"Ah yes. That is an interesting problem to have, my love.\" She closed her laptop, turned off the tablets, and turned to face him, voice growing serious again. \"I would have recommended against creating ghouls or thralls, considering the curse. But then again, you have become an... infamous figure in Dolareido, and perhaps beyond. Acquiring ghouls and thralls is important, if you are to defend large, unwieldy assets, such as a mansion.\"\n\n\"Agreed,\" Elaine said. \"And now that we know we can at least see hints of the curse in Antoinette's device, or at least Jack's freed curse, perhaps we could examine anyone with whom he shares his blood?\"\n\nAntoinette nodded. \"Agreed.\"\n\n\"I... I guess you're right. The curse, or New Jack or whatever, is pretty damn self serving. I doubt any ghoul I create is going to want to betray it, and by extension me. If anything, they'd probably be more infatuated with me than the typical ghoul.\" Which brought its own share of scares. The last thing he wanted was a Misery situation.\n\n\"It is not all bad, my childe.\" Elaine put on the sweetest, most evil smile, and she leaned forward over the table toward him. \"Most Kindred's first ghoul is someone they find physically attractive.\"\n\nUh oh. He knew where this was gonna go.\n\n\"Ah, ben oui, you must look at the bright side.\" Antoinette turned to face him fully in her chair, and combed her hair over a shoulder as she grinned at him. \"If you do bring a ghoul into service, or two, or three, by all means, find ones you are attracted to. I would happily put on a show for them as they watched. Perhaps, with time and trust, they could even join us in bed?\"\n\nJack put up his hands and shook his head. \"Let's, uh, put that idea on hold for a moment then, k? Cause four women draining me dry is already a lot. Seven is--\"\n\n\"A delightful time,\" Elaine said. \"Imagine it, Jack. You, sitting back in your lover's arms, head between her breasts, watching as six women suckle and pleasure each other. Each time a woman was ready for you, just shy of orgasm, they would be placed on your shaft, and would cum immediately. Round and round it would go, women taking turns creating a glorious spectacle. Whoever was lucky enough to have you cum inside them would be rewarded with a Kiss.\"\n\nHe stared at his great grandsire, and the room went silent as everyone absorbed the utter absurdity that was Elaine's sex drive.\n\n\"You're crazy, you know that?\"\n\n\"Pfft. Your lover, the high and mighty Prince of Dolareido, has played such games before, and with larger numbers.\"\n\nJack gulped and looked down at Antoinette. \"Uh, you have?\"\n\n\"I have indeed, but with men, of course.\"\n\nHe shook his head in a desperate attempt to stop thinking about the images they were putting in his head, before a painful conversation jumped back up from memory. \"Ah shit, that reminds me. I made a really stupid deal with Jessy. She wants to... er, get to see... us, you know? Like she has with Natasha.\" Like the Prince and Elaine had with Natasha too, apparently.\n\n\"Ah, I see,\" the Prince said, and she leaned back in her chair as she smiled up at him. \"Does she seek a live performance?\"\n\n\"What? No! No... Well, I mean, she'd probably prefer that, but I think she'd be happy with a sex tape.\" Ugh, sex tape. The fuck was he, a useless fashion influencer making headlines for no damn good reason?\n\n\"Does she wish to join in?\" Elaine asked. \"She seemed interested, at Bloodlust. Eric seemed resistant, but I am sure I could persuade him.\"\n\nJack put up his hands like he was trying to stop an airplane from landing on his front lawn. \"No! Jesus. That'd be beyond awkward. That night at Bloodlust was weird enough.\"\n\nThe two women laughed. Would he be so shameless when he was five hundred years old? It was such a long time, it was hard to wrap his mind around it. Hell, neither could they, considering how many memories they'd lost to time.",
        "\"I'll... think about it, a ghoul I mean.\" He turned, took a few steps toward the door, and looked over his shoulder at Antoinette. \"You'd really be comfortable with another ghoul in the bed?\"\n\n\"If she were your ghoul? But of course. You are comfortable with two of mine, after all. I would be comfortable with one of yours.\" Her smile turned absolutely serpentine. \"Or two, or ten.\"\n\nHe gulped, waved, and left.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nHe fiddled with his necklace as he opened the door of the car, and stepped out onto his driveway, two things on his mind: the fact New Jack didn't show up in Antoinette's machine thing while other hints of the curse did, and an orgy. The first thought was very depressing. The second was very not. He smiled to himself as the car dropped him off in his mansion, and he entertained what Antoinette and Elaine had suggested.\n\n\"You're one dude, Jack, with one dick. One rather normal-sized dick, I might add. Five women, or more? Good fucking god.\" He laughed as he opened the door to the mansion, closed the big fancy door, and sat on the big fancy stairs. \"But it would be pretty nice to have some ghouls taking care of this place. Who, though? I shouldn't go picking up random kine as ghouls. I should... socialize, I guess. Hah, no wonder Mekhet rarely have ghouls, they suck at socializing even more than I do.\" He laughed again and rubbed his buzzed hair as he looked around.\n\nImages danced through his mind of women dressed in playboy bunny outfits, dusting and sweeping and doting on his every need. He didn't really have any needs beyond blood and someone to take care of the mansion, and an army of playboy bunnies would do that perfectly. And of course, whenever Antoinette came to visit, she'd insist they all get naked and watch the Prince fuck him. After one or two bouts between Jack and Antoinette, then the bunnies would jump in and--\n\nHe slapped himself in the face, hard, enough to hear the sound crack. \"Jessy. Blame Jessy. This is all her fault. I--\"\n\nKnock knock.\n\nGroaning, and happy as fuck he wasn't Blushing Life so he wasn't sporting a stiffy, he got up and opened the door.\n\n\"Beatrice, hey.\"\n\n\"Hey Jack. Can I come in?\"\n\n\"Yeah sure.\" He stepped back, let her in, and sat down at the stairs once again. She sat beside him, dressed in jeans and a black t-shirt. Black combat boots, too. \"How you doing? How's Mom?\"\n\n\"Heh, your mom? Why don't you ask her?\"\n\n\"I do, occasionally. But I can't really think straight, knowing she and Jacob are together. Really gets under my skin.\"\n\n\"You hate him?\"\n\n\"I... don't hate Jacob. But the man is--\"\n\n\"Unpredictable. Chaotic. Fucked up and weird.\"\n\n\"Ha, to say the least,\" he said. \"I was talking to him once, when Avery and Clara ran into us. Avery pleaded with the man to let the past go, and he uh... well Clara got in his face a bit, and he backhanded her. Hard. Would have put any human in the hospital.\"\n\n\"Yeap, that sounds like Jacob. He really fucking hates Avery. And I--\"\n\n\"Can't blame him?\"\n\nTriss sighed and lowered her gaze. \"Yeah. I know what it's like.\"\n\n\"Yeah, you do.\" He leaned forward and set his elbows on his knees. She did the same. \"The hunters are dead, except for three, and I've talked to those three. They seem nice.\"\n\nTriss snarled, but it faded quickly. \"Yeah, at least Brace does.\" After a moment, she started laughing. \"God, that moron was hiding behind fallen trees in that fight in S\u00e1ndor's dream, and it was like watching a cartoon character. Dude was panicky as fuck, but he just kept hiding and crawling and helping.\"\n\n\"He's a goofball.\"\n\n\"Ha, yeah.\"\n\nHe nodded. \"It's good we can think of him like that, you know? I know we... we were both pretty consumed with hatred, during that whole... during the worst time of our lives. And it's a good thing it didn't follow us to the point we can't even think straight, and see every human as a villain. See where I'm going with this?\"\n\n\"You think Jacob hating all the werewolves is fucked up and wrong.\"\n\n\"Yeah, I do.\"\n\n\"There's just one problem with that, Jack.\" She shrugged and let her head droop. \"Jacob's already told them he'd let up if they told him the one thing he wants to know.\"\n\n\"Yeah, that's true, isn't it? Whatever Minerva was doing, Avery thinks it's worth not letting Jacob know.\"\n\n\"And you trust her over Jacob?\"\n\n\"Honestly?\" He shrugged, head drooping like hers. \"I don't know. She's pretty headstrong, but she hasn't tried to do anything sneaky.\"\n\n\"Hasn't she? She's getting pretty close to Garry you know.\"\n\n\"Isn't Garry gay? And isn't Avery dating some random kine?\"\n\nShe laughed. \"Yeah, I didn't mean romantically, dumbass. I meant, Garry's talking to her, more frequently than you'd think necessary. Makes you wonder.\"\n\nUgh, more covenant bullshit. He got up and paced in front of Triss, and she leaned back and watched him; they'd done this dance before.\n\nSo, Garry and Avery were getting close, closer than Triss figured was just friendly. The Invictus had tried to get on Avery's good side, and had partly succeeded, but that effort had mostly stalled with the hunters gone. Avery insisted there were still problems in the city to be dealt with, remnants of the azlu, and other problems from the spirit side of things, mostly on the word of David. If Avery and Garry got really close and chummy, that could be a problem, since Garry continued to push against the Invictus.\n\n\"I don't suppose you could ask your old boss to fuck off?\" he said.\n\n\"Ha. You know he won't. And Garry and I were... I guess we were kinda friends, but he gave me orders, Jack. If I disagreed with him about something, he'd just shrug, hear me out, and if I couldn't convince him -- I rarely could -- he'd just tell me to do it anyway.\" After a heavy sigh, she shook her head and leaned back. \"So, yeah, your mom's doing well. Like, really well.\"\n\n\"Oh god, do I dare ask?\"\n\n\"Haha, probably not. But I don't mind telling you your mom has great tits.\"\n\nOh god. He clawed at his face with his fingers, a desperate and futile attempt to tear the images out.\n\n\"She hasn't--\"\n\n\"She hasn't fucked anyone besides Jacob, despite Jen and Othello's attempts.\" Her following grin had his eyes bleeding. \"But, you know, witches do a lot together.\"\n\n\"That's my mom!\"\n\n\"Oh come on, she told me what you told her. You literally told her to have an orgy!\"\n\nHe paced faster, each turn followed by his head snapping to the side to glare at Beatrice while he waved his arms in the air. \"Yeah but that was just a psychology trick! Mom's kinda... well, Mom's Mom. If I want to convince her of something, I hit her with an extreme example, so the normal stuff doesn't seem so crazy. I was hoping she'd just... I don't know, get comfortable using Majesty to seduce kine, and use them to let off a little steam.\"\n\n\"She's letting off a lot of steam, I can tell you that.\"\n\n\"Oh god.\"\n\n\"I mean, I knew you were a horny guy, Jack, I just didn't expect it to be hereditary.\"\n\n\"I'm not hearing this, I'm not hearing this.\"\n\n\"Dude, your mom's a total milf.\"\n\nGame over, man, game over. He pointed his finger at his temple, pulled the invisible trigger, and died standing up, which sent Triss into hysterics.\n\n\"End me.\"\n\n\"Ah come on, don't be like that. You think your mom's comfortable knowing her sire is fucking your brains out all the time? And not just her, but another vampire, and two ghouls?\"\n\nHe sighed and continued pacing, this time slowly, head drooping and arms limp. Zombie pacing.\n\n\"I guessss. And... and if those two had their way, it'd be more than just them.\"\n\nShe laughed. \"Really?\"\n\n\"Yeah. I need to get some thralls, to help manage this fucking mansion. I can do that with Dominate, but the only way to make sure a thrall is totally trustworthy is the Vinculum. Feeding my blood to someone is... risky. Who knows what'll happen with the curse. But the conversation went to ghouls from there, and...\"\n\n\"Ah.\" She laughed again, leaned back, and set her elbows on some of the stairs behind her. \"Isn't creating ghouls draining?\"\n\n\"Yeah. Takes effort to infuse enough vitae into vamp blood so it'll give a ghoul their powers. But I'm confident I could create... well, as many as I want, with this curse fueling me.\"\n\n\"Damn. That's a lot of tits.\"\n\n\"I--\"\n\n\"Don't lie to me, you little hornball. I know exactly where your mind went when the idea of owning a mansion with a bunch of servants came up.\" Grinning at him, she raised her hands up to the top of her head, and held up fingers, pretending to have bunny ears.\n\nHe rolled his eyes. \"I... Ok, yes, the idea had occurred to me.\"\n\n\"Hot. Julias and I\"--she winced with the name, but pulled through it quickly--\"had some fun with his thralls sometimes. Honestly, it was pretty awesome, having a bunch of kine walking around, naked, doing whatever we wanted, often to us at each other's request. I think it's pretty much par for the course any Kindred who gets power starts getting a bunch of kine fuck toys. I say do it.\"\n\n\"And the curse?\"\n\n\"Well, try one Vinculum bind and see what happens.\"\n\n\"You say that like there are people just lined up, willing to devote their life to a master. I don't want to force someone.\" He frowned at the air, but it faded as a bigger problem presented itself. \"I wouldn't even know where to begin on meeting potential thralls or ghouls. I don't hang with kine very... ever.\"\n\nShe shrugged at that, like it was the simplest thing to fix in the world. \"Ask Michael for tips. I know he's got a bunch of thralls and ghouls. Hell, ask Antoinette? Julias liked to hang out in clubs and stuff, talk to people, get to know them, and when he found someone he thought could use a hand in life, they became a thrall. Though he did pick up a lot of thralls through the Invictus when he got the mansion. He didn't blood bind them though, or at least not very often.\"\n\nYeah, Julias was a master of subtle uses of Dominate.\n\n\"He was good at that sort of stuff,\" he said. \"I'm not.\"\n\n\"That's why you should ask the Prince. She'll hook you up. I bet she's got a hundred kine she could easily recommend, either as bodyguards, cleaners for your new digs, or fuck toys.\"\n\nHe scratched his head and looked down. \"Yeah, I could. But ever since Elaine's shown up, she's been... acting like a horny, reckless teenager, honestly.\"\n\n\"You're shitting me.\"\n\n\"Nope. You know when you saw us leaving Bloodlust a few days back? Elaine and Jessy got into a bit of truth or dare, and ten minutes later, everyone at the table was topless.\"\n\nThat earned raised eyebrows from the Nos, and she leaned forward, suddenly intrigued. \"Everyone?\"\n\n\"Everyone. Damien, me, Eric, Matt and Art, and Jessy, Fiona, Elaine, Antoinette, and even Tash.\"\n\n\"Holy shit. I mean, it's not like I don't know what they all look like naked already, considering the shit they wear to balls, but still.\" She tapped a clawed on one of her crocodile teeth for a moment. \"Antoinette and Elaine would fuck you in the middle of Bloodlust with an audience, wouldn't they?\"\n\n\"Definitely.\"\n\n\"Can... Can I be there when that happens?\"\n\nOh god not this again.\n\n\"You and Jessy? Thought you girls were into big, strong guys and stuff?\"\n\nShe laughed and shrugged. \"I mean, sure. But Julias did a good job grooming you, Jack. You're fit as fuck, and I'd definitely enjoy seeing you squashed between a pair of giant tits.\"\n\nHe frowned at her. \"I'm not sure I want my mom hanging around you anymore. You are definitely a bad influence.\" He folded his arms across his chest with some emphasis. \"You are banned from seeing her.\"\n\nThey laughed. It was fun. It'd been a damn long time since they'd laughed like this, hard, loud, not since Julias was with them. God, it felt good.\n\nOnce the laughter died out, Triss shook her head. \"I'm not here to talk about sex and shit though.\"\n\n\"Eh? From how the conversation started, thought you just wanted to hang?\"\n\n\"I was just trying to get you relaxed before I dropped a shit bomb on you.\"\n\nHe threw up his hands, and groaned. \"Thanks, I guess. Shit bomb?\"\n\n\"I was... doing some stuff. Witchy stuff. I was talking to Black Blood, and he, uh... kinda mentioned something I thought you should know.\"\n\nUh oh. Triss doing witchy stuff didn't sit well with him, but who was he to judge? Blackmailing people and financially exploiting corporations was a nightly job for Jack, and that job could get pretty dirty. Maybe not as dirty as the sort of shit he figured a witch might do, but still. The thing in what she said that got under his skin, was the mention of Black Blood.\n\n\"That... thing, do I want to know what it said?\"\n\n\"He said.\"\n\n\"He?\"\n\nShe nodded. \"Black Blood identifies as he, at least... just, yeah, he. And yeah, you'll want to hear it.\"\n\n\"Something tells me I won't, but, fine, shoot.\"\n\n\"Black Blood mentioned that he'd seen things like... the curse before.\"\n\nJack froze. No more pacing. After a heavy gulp, he slowly looked at Triss and winced.\n\n\"You think he... can do something for me?\" Please say no, please say no.\n\n\"Yeah, I think he can.\"\n\nFuck.\n\n\"What else did he say?\"\n\n\"Not much. I asked, but he said if he was going to tell anyone more details, it'd be you. And...\"\n\n\"And Black Blood's a spirit. He won't tell me anything without making a deal.\" Again he threw up his hands before letting them fall, like weights were tied around his wrists. \"Elaine's been trying to help me, but all she has are ancient texts and stuff. Not exactly thorough documentation. Plus there's the whole issue that I'm the first person in our bloodline to break the binding placed on the curse. She didn't, Viktor didn't, and Julias didn't.\"\n\n\"What about Elaine's sire?\"\n\n\"Susanna, I have no idea. If she's alive, no one knows where she is. I'm happier keeping it that way.\" His great great grandsire was worse than Viktor. She was a fucking psychopath, someone who genuinely enjoyed killing, causing carnage, massacring kine, and worse. She was... everything the Strix would probably want a vampire to be, according to what he knew from the elders of Dolareido. Was the voice in Jack's head actually some sort of residual copy of Susanna?\n\n\"You ok?\"\n\n\"Yeah, yeah, just... yeah, thinking. Ok, I need to talk to Black Blood.\"\n\nSighing, Triss stood up and nodded. \"Figured you might say that. I can help, if you want.\"\n\n\"You can summon Black Blood?\"\n\n\"Yeah.\" It took her effort to keep her eyes on him, as if she wanted to look down and away. Guilt? Shame? He wasn't sure, but something about Black Blood made her uncomfortable.\n\n\"Actually,\" he said, \"I... I think I want to talk to Jacob too. Might as well get both at the same time.\"\n\n\"Jacob? This about your mom?\"\n\n\"No... well, partly. But it's about other things too. He can summon Black Blood, right?\"\n\n\"Sure, but... well, Jacob and Black Blood are a dangerous combination, Jack.\"\n\n\"Ha, think I don't know that? But I can handle it. Things are different this time.\"\n\n\"Different? How?\"\n\nHe looked down at his hands and slowly flexed and released his fingers. \"Because now, if Jacob tries something or crosses the line, I'll kill him. I know I can.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "slow",
        "violent",
        "paranormal romance",
        "werewolves",
        "vampires",
        "werewolf",
        "vampire"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-08-ch-11"
}