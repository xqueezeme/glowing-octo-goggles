{
    "title": "The Neapolitan Question",
    "pages": [
        "It takes a while for this story to unfold -- as for most of my stories - but I hope you enjoy reading it. Please leave a comment if you'd like to, as I really appreciate those of you who take the time to write them. \n\nAnyone in this story participating in sexual activities is most definitely over the age of 18.\n\n+++\n\n'Jane? Jane McInerney?'\n\n'Yes! Jane McInerney. How many other Janes am I friends with?'\n\nI sit back, too suddenly, almost tipping my chair over and curse, loudly.\n\n'Frankie, what on earth's wrong with you?'\n\n'Nothing. Nothing. I just nearly fell off my chair, that's all.'\n\n'You'll break your neck, young man, and so you will!' Ellie screeches down the phone at me in a painfully accurate impersonation of our mam; how she used to yell at me for tipping back on every chair I ever sat on.\n\n'Yeah, yeah,' I say, once I've stopped laughing. 'Anyway -- so -- Jane?'\n\nMy sister treats me to one of her excellent sighs, replete with the suffering of having a stupid younger brother like me.\n\n'Yes, Frankie. Concentrate, will you? Jane's going to be staying with us at the villa for the summer, and maybe even longer than that. She's been so ill this year and needs to get away from the gloom and chill of the Highlands if she's going to make a full recovery.'\n\n'Ill?'\n\n'Yes -- pneumonia. Twice in three months, and that on top of her asthma, you know?'\n\nNo. To be truthful, I didn't know. Didn't know she had asthma or that she's had pneumonia on top of it, whatever that means. To be completely truthful, my head's so busy with an invasion of long-dormant memories of Jane McInerney, I'm having difficulty taking in anything Ellie's saying to me down the phone. \n\nAnd she's still talking. Something about Jane's dad, and the school she works at, but I know I've lost the plot too completely to be able to make sense of what she's telling me, so I just let my mind wander, peering out of my office window at what passes for summer in London. Light grey cloud, light grey drizzle and light grey faces. I'm not doing it down, because I love living here, but the weather isn't London's best feature. Except for the days when it is. I suck at my lower lip. Now I'm the one not making sense here. \n\nI tip the chair back again and look up at the ceiling. \n\nJane McInerney. \n\nWow. \n\nWhen was the last time I saw her? Ellie's wedding, maybe? Even now, I can recall what she looked like on that day. She was wearing some kind of slim dress that fitted close to her waist and was sort of draped around her shoulders. I'm totally crap at describing clothes, but that dress was amazing. So good I nearly went blind just looking at her, overheated barely out of his teens, bloke that I was back then. It was green but the fabric sort of shimmered so that sometimes, in the sunlight of that baking hot afternoon, it looked like a rich blue almost purple colour. Probably the best thing was how it exposed the line of dark, perfectly round, moles that looped around her shoulders and down into her cleavage. \n\n'Frankie, knock, knock. Are you even listening to me?'\n\nI snap my head upright, sit up sharply.\n\n'Sorry, Ellie. I'm a bit distracted today.'\n\n'No fucking kidding. Anyway, I just wanted to forewarn you so you don't flip out when you get there.'\n\n'Oh?'\n\n'Yes, because she'll already be at the villa when you arrive, assuming you're still planning on flying in on Thursday?'\n\n'Uh, yeah.'\n\n'Right, good. And we'll be there the following Tuesday, as the kids are getting out of school at the end of the week.'\n\nDespite my fractured state of mind, I grin, thinking how much fun it's going to be to see them all again. Since Ellie and her partner Mike moved out to Singapore last year. We're a close family, what's left of us, and I've really missed seeing them and my nieces and nephews. I say as much and can almost feel Ellie's warm smile down the line.\n\n'Yeah, George is dying to show you how much better he is at swimming now,' she tells me.\n\nI'd spent hours coaxing my youngest nephew into the pool last summer, fighting his fears with as much energy as he had, sharing every setback and every success with him, day by day. My chest suddenly feels tight and hot, and again, it takes me a while to tune back in to what Ellie's saying.\n\n'... even though I'm sure Yvonne will have shown Jane what she needs to know about the house, you'll be ok to take her round and show her the village and things like that? Just for that first weekend, before we get there?'\n\n'Uh, sure, yeah.'\n\n'Ok, so you're fine about it?'\n\n'Fine?'\n\n'Franklin! What IS the matter with you?'\n\nI frown, almost as annoyed at myself as Ellie.\n\n'Yeah, fine.'\n\n'You sound like you're in need of a holiday as much as Jane.'\n\n'Maybe.'\n\nShe pauses. Just drawing breath, or was there something in the tone of my voice that caused my sister to stop?\n\n'Frank, is everything alright? I shouldn't be worrying about you too, should I? Two broken birds to look after this summer?'\n\n'Don't mind me, Ellie. I'm fine, really I am. Just not firing on all cylinders today, that's all. And, I might add, it's only just half past seven in the morning here?'\n\n'Except you're normally such an early bird. Or was it a bit of a big night last night?'\n\n'Nah, nothing like that.'\n\n'Not Cate again?'\n\n'No. Not Cate. That's all over. Really it is. Done. Finito.'\n\n'Hmm. Probably for the best, though?'\n\n'Definitely.'\n\nAnd that's it. I'm not going to say any more about it. Enough words have been used up on that subject to last me more than the rest of my lifetime. For two relatively intelligent people, we'd made a right mess of breaking up.\n\n'Well ok. I suppose we'll be seeing each other in less than a week anyway, so we can have a proper catch up then. I'd better go, or I'll be late. Love you, Frankie.'\n\n'Love you, Ellie. Can't wait to see you all.'\n\nAnd that's that. We cut the connection. \n\nI tip back again, finding the ceiling the most comfortable place to focus on while I attempt to sort through the fragments of what Ellie was trying to tell me. Jane. Jane McInerney. My sister's best friend from university. I frown. But a couple of years younger than Ellie. The year Ellie'd been meant to go to university, she'd deferred. It had caused havoc with mam, but what was the alternative? Mam had just been told her cancer had returned, and this time it wasn't leaving without her. Dad was in bits. And I was only eleven. It didn't matter how much mam had shouted and pleaded with Ellie, there was no moving her. She stayed home that year. Until mam died. That hadn't taken long. I'm not going to say it was mercifully quick, because cancer has no mercy whatsofuckingever.\n\nAnyway, by the time Ellie got to university she was a year older than a lot of the students in her cohort. And Jane was a year younger than them. One of those brainy kids who'd taken her exams earlier than most. Yeah, that's it. The details are suddenly flooding back now. Ellie bringing her to stay for the Easter holidays, and overnight, our house had felt alive again. Even dad had cheered up a bit. I was nearly thirteen by then, and I'd done a lot of growing up. Your mam dying does that. It was like a hot smack in the guts. It still is, some days.\n\nI'd been learning to cook for me and dad, and that's what I mostly remember of that first time Ellie brought Jane home. Us three, jostling each other in our tiny kitchen, cooking together. Jane's cool hands over mine, showing me how to mix and knead and roll pastry, her hair brushing and tickling my ears as she leaned over me. Ellie winking at me, able to see my cheeks turning red as Jane ran her fingers through mine to show me the right consistency for the dough, utterly innocent of the effect she was having on me. I was just a kid to her. \n\nBut, I repeat, I'd actually grown up a lot. Thinking about it now, I reckon it was only a matter of a few weeks before that Easter I'd discovered masturbation. I certainly got a lot more practice in while Jane was staying.\n\nI snort, loudly and press my eyes shut. What am I doing, a grown man, replaying my very first teenaged fantasies here at my desk? I squirm in the chair, tugging at my jeans, because -- am I embarrassed or exasperated to admit? -- I'm almost totally hard. A hard on? Just from thinking about Jane teaching me to make pastry? \n\nMaybe Ellie's right to be worried about me.\n\nAnd fuck it. I stare at my desk. This tender document isn't going to write itself, is it?\n\nI tap the laptop awake and stare at the densely packed financial tables, unable to process them. I press my palm over my cock, not sure if I'm willing it to relax, or tempting myself to stroke it to release, to clear my head. So to speak. \n\nStill undecided, I stand up and walk into the kitchen to put the kettle on. Times like this, I'm happy I mostly work from home.\n\nI wait for the water to boil, tapping my fingers on the cool granite countertop, wondering why Jane is coming to Mike and Ellie's villa on her own. I thought she'd have married some bluff, posh Scots bloke by now, maybe with kids. And a dog. The thought she might be married strangely flattens my mood, but at the same time, it makes me just as sad to think she might not have met someone by now. I shake my head and pull at my hair. \n\nThe kettle starts to whistle. I turn the gas off and pour water into my mug.\n\nAt least my cock has given up trying to remind me I'm a red-blooded male who's barely thirty but feels much older. A relief, I suppose. I switch my thoughts back to how I can persuade my client to re-draft his financials to make a more successful bid for the Northern Line extension project. Tedious, maybe. But safer ground than thinking about Jane.\n\n+++\n\nI jerk awake, a sharp crick in my neck and a dread I've made a socially embarrassing sort of noise, but I look at the passenger next to me, and there's no sign I've called out, or been snoring, or worse, so I try to relax. Impossible in an economy airline seat with my height. But I try. Until I remember what I'd been dreaming about just then. Jane in a bikini, in Mike and Ellie's pool. \n\nOh hell. I need to stop thinking like this. I've never even seen her in a bikini. It's totally dumb. Dumb, dumb, dumb as can be. That's me.\n\nI've been nervous enough about spending this weekend alone with Jane in the villa before Ellie's mob landed. Then Ellie called me last night to deliver the bad news they were going to be delayed because Frank (her eldest, and yes, poor little sod, named after me) has managed to break two bones in his leg by falling out of a tree in their garden, and needs an operation to repair the damage. \n\nOnce I'd found my stomach again after it'd plummeted at Ellie's tone of voice, and then again as she'd described how bad the break was and how much Frankie had tried not to cry as they waited for the ambulance; and once I'd dragged my brain away from my memory of the feel of him in my arms the day he was born (tiny and hot and light), I'd got even more nervous at the thought of me and Jane alone in the villa together. And not just for a few days, by the sound of it. \n\nWith her uncanny sixth sense, Ellie had told me in no uncertain terms I was not to delay my arrival, and she fully expected me to play good host for Jane until she could get there.\n\n'You need a holiday too, Frankie, you can't deny it. And you two always got along. I think it'll be fun for both of you to have each other there.'\n\n'Yeah, yeah, I hear you, I do.'\n\n'Really? I'm not suggesting you have to spend every hour of every day together. But sharing meals is always nicer than eating on your own, isn't it? That's all I mean.'\n\n'I know.' I'd opened my mouth, daring myself to ask if Jane is single or what. \n\nBut I hadn't. I'd gazed at the bird table outside my kitchen window instead, wondering what was going on with me. Maybe just a reaction to the break up with Cate, even if most of that pain was months ago now. As my mate Rob had reminded me just the night before, I hadn't exactly got back on the bike, though, had I? There's been no one since Cate. My right hand excepted.\n\nThe idea of getting back into the dating scene fills me with something close to dread. It all seems so pressurised. Full of misplaced hope and false expectations. And even though I think thirty is still young, finding a partner at my age seems as fun as finding Room 101. A slow torture of expensive nights out eating average food, of drinking in bars filled with fabricated character, and of treading that fine line between fantasies stoked by too much porn or too much Disney Princess romance.\n\nRob had looked at me like I'd lost my mind as I'd tried to explain it to him, brooding over my pint of Guinness. He clearly didn't feel the same as me. Or as old. Old in mind, not body. Cate had said something similar to me during one of our last counselling sessions. I think she'd meant it kindly. Hard to tell by that point. \n\nI shut my eyes, almost willing myself to drop off again. Instead, my ears pop. We must be starting our descent already. I rarely fall asleep on planes. But I'm knackered. Finishing up the tender and a couple of bits of work for other clients this week took some doing. Late nights and coffee, etcetera. I yawn and my ears pop again. Bright blue skies out of the window. I try to relax my shoulders. The view is spectacular as we come in to land over the Bay of Naples.\n\n+++\n\nThe villa isn't too far outside of the city. It's a ramshackle place, that belonged to Mike's grandparents. He's Italian, by way of north London. None of his sisters were interested in it, so it fell to Mike to keep it in good repair. Once he and Ellie married and had kids, they spent every summer holiday here. Longer, before Frankie had to go to school, and when Mike's work was more portable. Since I've been running my own business, I've joined them here most summers too. \n\nIt's only as I drive up to the front door I wonder with a stab of anxiety how long it will take them to get here following Frankie's surgery. I'm desperate to see them all and so wrapped up in my thoughts I'm taken by surprise as Jane calls out to me from the front steps.\n\n'Franklin!'\n\nI snap my head up to see her big smile and, before I can fret about how to greet her, she's kissing my cheeks and gripping my arms.\n\n'Janey!' I grin back at her, delighted by how pleased she seems to see me again. And at the same time, taking in how pale, how fragile, she looks.\n\n'No one calls me Janey except you,' she reprimands me, but gently enough.\n\nI grin more, until I give myself a mental shake, and break away from her to retrieve my bags from the car.\n\n'I'm so glad you're here,' Jane's saying. \n\nI'm opening my mouth to say the same about her, but she's already running on, telling me how she'd found it difficult to get to sleep on her own in the villa last night. So that's it. She's glad to see me just so she's not the only person here. I shrug, lock up the car (out of habit), and walk up the front steps.\n\n'... and I didn't even think to ask Ellie about which bedroom I should use, but thankfully, Yvonne had made that decision for me.'\n\nShe stops. Expecting a reply from me, by the look of her.\n\n'Uh, yes?'\n\n'And she's done the same for you. You're in the room next to me.'\n\nI trip over the carpet in the hall and curse, but Jane's letting out a quiet giggle, and instead of feeling foolish and irritated, I smile with her.\n\n'You think that's funny, do you?'\n\nShe stops giggling.\n\n'Sorry. I've probably been spending far too much time on my own recently. I've quite lost all my social skills, Frankie.'\n\nSomething in the way she says it takes the wind out of me. I look into her face. She looks back, her expression caught between amusement and contrition, her weight over on her left hip as though her body, too, is caught between two opposing forces. It's an odd moment.\n\nI nod.\n\n'I think I know what you mean, Janey,' and decide I don't need to take my bags upstairs right away. 'What's in the kitchen? Do we need to get food for a meal tonight?'\n\n'Err --,' she looks nonplussed at my change of direction. \n\nShakes her head at me, confused, but I'm already walking to the back of the house, to the kitchen, along the way feeling happier and happier to be here, the photographs of my family hanging on the walls, smiling and waving back at me.\n\n'You must be worried about little Frankie,' she says as we enter the sun-filled kitchen.\n\n'Yeah. Yeah, he must be nearly out of surgery by now. Ellie will call me once he's out, I'm sure,' I reply, opening the fridge and surveying the contents. 'I reckon there's enough here to make a decent dinner, don't you?'\n\nShe rounds the big table to stand next to me. We survey the fridge solemnly together.\n\n'I think so, yes. Although I'd be ok if it was just toast for dinner.'\n\n'Oh no, that is not happening, Janey. No, I'm pretty sure Ellie will kill me if I let you eat \"just toast\" for dinner.'\n\n'What do you mean?'\n\nI turn to look at her, a bit too aware of how close she's standing.\n\n'Well, she told me about how you've been ill and need --,'\n\n'Feeding up?' \n\n'Well -- no, she didn't say that, exactly.'\n\nIt's another strange moment. Awkward. And intense.\n\n'More that you need to, um, heal.'\n\n'Heal?'\n\nI wince, thinking I've hit a wrong note. And breathe more easily when I see Janey's eyes crinkle at the corners.\n\n'Your sister has four children of her own, and she still tries to mother me.'\n\n'That's Ellie alright.'\n\nWe share a smile.\n\n'How about a glass of wine while I put something together with what we've got here?' I gesture at the still open fridge.\n\n'Will that aid my healing, a glass of wine?'\n\nI turn around to look at her again, surprised at the humour in her voice. There's a bit of sparkle in her eyes. But, oh, how she does look fragile. Blue shadows under her eyes; skin that's almost translucent. And thin. We're not going to be settling for toast for dinner any time I'm here, I know that much. She needs good food in her. And lots of it. I'm going to make that my mission. It'll give me something to focus on, until Ellie and the kids get here.\n\n+++\n\nThat first night, we moved between more of those awkward moments and then flashes of humour and familiarity in each other's company. She reminded me of the last time we really saw each other. Not Ellie and Mike's wedding, but the party they threw after the birth of Frankie, a bare seven months later. I'd been viciously hungover from the night before, which is probably why I couldn't bring it to mind quite so readily. Janey remembered it all too clearly, especially the part where she found me puking my guts up outside on the drive and had gone into the house to get me a big glass of water. \n\nIt had been a nice enough evening, and I was pleased she a fair proportion of the food I'd put onto her plate. But I'd gone to bed feeling wired and hadn't managed much sleep.\n\n+++\n\nThe next day, we drove down to the local market and picked out fresh fruit and vegetables. She seemed better. More relaxed? Or just a bit more energy? We bought meat from the village butcher, and I went in search of a bottle of whiskey while Jane disappeared into the pharmacy. \n\nDriving through the countryside I began to think about how different she was to the Janey I remember. Quieter. Withdrawn, even. Just bare hints of the funny, impassioned girl I remember.\n\nShe fell asleep in the car on the way back, even though it wasn't a long journey at all. I stole glances at her as I drove. She was wearing a t-shirt that revealed more of her than the long-sleeved shirt she was in the day before and confirmed my suspicions about how much weight she seems to have lost. \n\nShe looked embarrassed when I woke her up, still in the car. I'd already unpacked the shopping and taken it into the kitchen. She disappeared upstairs. For a nap, I assumed. I was distracted with some work calls all that afternoon. And another call from Ellie, confirming everything was fine with Frankie, but the surgeon had said they'd have to wait a week or more before they'd know if he was ok to fly here.",
        "'Ells, can I ask you about Janey?' I ask.\n\n'Sure. What?' she replies, her interest piqued.\n\n'Uh, well, she just seems -- I dunno -- quieter than I remember? Is that just because she's been ill, or is there something else?'\n\nThere's a long pause before Ellie replies. I hold my phone out to check we're still connected.\n\n'Aside from her dad dying last year, which definitely took the wind out of her, I don't know what else there might be, Frankie. But --,'\n\nAnd there's another, longer, pause.\n\n'But,' she continues, finally, 'I do think she's lost her confidence over the last few years. I'm not sure why. Maybe a relationship went bad there, somewhere, but she's always been so private I don't really have anything to base that on. She's never confided anything like that to me.' \n\n'Mm. It's like she doesn't want to let me in, when I talk to her, you know?'\n\n'Ah, your irresistible charms proving resistible for once?' \n\n'That's not what I mean, Ellie, and you know it.' I say it more sharply than I mean to.\n\nAnother pause.\n\n'Huh. Well anyway, I can't imagine being surrounded by teenaged girls all day every day can do much for anyone's self-esteem, can you? Let alone being a live-in house mistress for them, or whatever the proper title is,' Ellie finishes.\n\nI snort. 'Sounds like my idea of hell, but I'm not a teacher, just a bloke with a healthy phobia of any girl between the ages of twelve and twenty.'\n\nWe laugh together, bridging the thousands of miles between us, and I feel my chest tighten up, as it always does when I'm reminded how much I love my sister.\n\n'Love you, Ells,' I say impulsively.\n\n'I know you do, Frank,' she replies, surprise in her voice.\n\n'I'm just grateful for how you treated me when we were growing up, you know?'\n\n'Oh God, Frankie, don't do this to me, please. I'm already bloody wrecked, with little Frankie's operation, and how upset George is about us not being able to fly today, so don't go giving me something else to cry my eyes out about, will you?'\n\n'Sorry Ellie, I didn't --'\n\n'Oh fuck off will you, Frank? Love you and goodbye,' she sing songs and I stare at my phone as she rings off.\n\nRight at that point, Jane appears in the kitchen, looking sleepy and cute. Cute. Another flash of tension shoots across my chest, which I try to dispel with some deeper breathing. \n\n'Is everything ok?' Jane asks anxiously.\n\n'Yes. Frankie's fine,' I reply, wondering why she's looking at me like that.\n\n'Oh. Ok. You just -- it's just that --,' she tips her head to one side, her hand hovering close by.\n\n'What?'\n\n'Nothing. No, nothing.'\n\n+++\n\nOn Sunday, I spend most of the day in the kitchen, alternating between cooking and working my way through a long, tedious report for another client of mine. Janey wanders in and out, but mostly seems to be sitting out on the terrace in the shade with a book. I wonder if she's also drowsing out there, she's sitting so still. By mid-afternoon I realise I've been leaning on my hands, watching her through the big kitchen windows for what might be more than fifteen minutes. It agitates me how quiet, how still, she is. I remember a woman full of life and laughter and sass. Teasing me, sharing jokes with Ellie, showing sweet kindness to dad when he was still alive.\n\nWhen I walk out onto the terrace I see her eyes are open, and she's gazing out over the garden.\n\n'Hi, you ok?'\n\nShe nods, not saying anything, heightening my anxiety about how quiet she is.\n\n'Want something to drink? I made some fresh lemonade?'\n\n'Really? Did you?'\n\n'I did, yeah. Want some of that?'\n\nI go back inside, fill two tumblers with the lemonade and add ice. Pinch a couple of leaves from the mint planted just outside the kitchen doors.\n\n'Want some mint in it too?'\n\nShe smiles, and I add the mint before handing her a tumbler.\n\n'This is wonderful, Frank. Sweet and sharp to just the right proportions.'\n\n'Thanks.'\n\nI drop into a chair next to her.\n\n'I hope you're hungry. I've made a mountain of food today.'\n\n'Oh gosh, you must think I'm utterly rude, letting you do all the cooking. I just -- I don't know what's got into me.'\n\n'You've been ill.'\n\n'Yes.' \n\nShe sighs. Nearly as impressively as Ellie.\n\n'I've just got no energy. I feel as if I'm seventy-five, not thirty-five. It's bloody depressing.'\n\n'It's a matter of time, isn't it? And good food, sunshine and a bit of exercise. Isn't that why you're going to be here all summer, and maybe longer? To just do that. Concentrate on that?'\n\nShe turns her head to look at me and breaks into one of her loveliest smiles.\n\n'You've always been a thoughtful man.'\n\nI watch her, delighted to see her smile like that, so it takes some time for her words to sink in.\n\n'Thoughtful?'\n\n'Mmhmm.'\n\nI twist my mouth. 'I don't think my ex would agree with you about that.'\n\n'Really? I can't imagine why not.'\n\nI stand up, thinking about the waste of words already expended on me and Cate, and am determined not to add to it.\n\n'Want to help chop up some salad?' I ask, impulsively holding my hand out for hers, jumping at her touch. I pull her up and divert the conversation away to other more frivolous things while we wash and dice vegetables.\n\n+++\n\nDinner is good. I watch Jane eat more than half of the food on her plate, but don't push her. Not until I bring out the rhubarb pie I've made and show it to her. The wide smile she gives me makes it all worthwhile.\n\n'Do you remember teaching me to make pastry?' I ask her, genuinely curious to know if she does.\n\n'Of course I do, Frankie. That was the first time I came to stay at your house.'\n\n'Yeah. That was the best time we'd had at home since mum died.'\n\n'I know.' She reaches her arm out, as if to touch me, but we're sitting too far away.\n\nI slide the knife into the pie to cut us both a slice.\n\n'I could see what a difficult time you were all having. But at the same time, you had so much love for each other. It was -- uplifting.'\n\n'Uplifting?'\n\nI stare at her, and know I've got the same look on my face as when she caught me at the end of yesterday's call with Ellie. \n\n'Yes. I can see it sounds strange to you. But I remember that feeling so well. You were kind to each other. And very loving. You have to understand my rather frigid Scots Presbyterian upbringing, Frank.'\n\nI forget to reply, mesmerised by the way her brown eyes are softening, lightening, almost. \n\n'Are you going to give me a slice, then, or was it just for show?'\n\nI flinch, sending a plate skittering over the table and onto the floor, where it smashes into two even halves. Janey's gracious enough to laugh as she picks the mess up and brings a clean plate to the table.\n\n'It's wonderful, Frank. And how lovely of you to make it.'\n\nNow it's my turn to just nod. Vocabulary, sentence structure -- all appear to have fled. I focus on what's on my plate, hardly tasting it, but glad to have something else to look at. Something safer than Janey's eyes. \n\nMy outer silence doesn't stop me from having some sharp words with myself on the inside. Along the lines of getting a grip and stop thinking like a teenager consumed by a massive crush on the woman sitting with me at this table. About the inappropriateness of it. She needs time to get better. Good food, fresh air and sunshine. Not some idiot mooning around after her. \n\nEspecially not an 'emotionally unavailable' idiot like me who is 'more turned on by spreadsheets than a woman's body'. And yes, I'm quoting from the counselling sessions with Cate again. I really need to stop doing that.\n\nThe splashing of more wine into my glass drags me out of my muddy thoughts and back to the table.\n\n'Let's sit next door, shall we?' Jane's asking, picking up her own glass and moving into the sitting room.\n\nThe furniture in here is almost as old as the house. Huge, baggy sofas covered in a dark red velvet, heavy wood side tables and a gracious gilt-framed mirror over the huge brick fireplace, stained by generations of open fires every winter. Jane switches on the standard lamp and drops into the nearest sofa, the yellow light pooling over her dark hair as she tucks her feet underneath her. \n\nShe looks even smaller like that. \n\nI sigh, sitting down on the sofa opposite.\n\n'Tell me, Franklin, how are you? Really?'\n\nWell, I hadn't expected that. I gulp at the wine. Unsurprisingly, Jane finds something cogent to say before I do.\n\n'It's just you've seemed a little bit preoccupied since you got here. But just tell me to shut up if I'm being too nosey, won't you?'\n\nFortunately, we're not sitting close enough for me to see her eyes that clearly from here, otherwise I'd be totally incapable of saying anything at all. I open my mouth, owing a reply of some sort, and to my surprise, find myself telling her something real instead of the usual brush-off.\n\n'I had a girlfriend -- Cate. We split up about six, seven months ago now. I can't seem to shake it off, if you know what I mean.'\n\nJane watches me from her sofa. After a few seconds, she leans forward.\n\n'Who chucked who?'\n\n'It wasn't like that.' \n\nI take a breath. Am I really going to tell her? I slide down the seat, pressing my feet flat into the floor as if that will stabilise me. \n\n'She miscarried. Last spring. We hadn't planned it, but as soon as we'd started getting used to the idea, seen the first scan and all that, she miscarried.'\n\nI'm bludgeoned by the memory of that morning. A bright, May morning last year, pink and white blossom petals scudding along the roads in huge clouds as we'd raced to A&E in an Uber, the driver babbling at us, wide-eyed, in Urdu and English, while Cate had cried and cried into my chest, shivering under her coat, still in her bloodstained pyjamas. The flat vowels of the doctor who'd told us we'd lost the baby and that it'd be easy for us to just 'try again for another' in a few months or so.\n\n'And it finished us. We couldn't grieve together. We just couldn't seem to do that.' I shrug, tipping my head onto the back of the sofa, blinking hard.\n\n'Oh Frankie. Oh Frank, I'm so sorry. I had no idea. How terrible for you.'\n\nI stare at the ceiling -- this one considerably more charmingly decorative than mine at home -- and chew at my bottom lip.\n\n'I thought Ellie might've told you?'\n\n'It was at pretty much the same time as my father died, so she probably thought I didn't need to hear about other people's heartache as well.'\n\nI blink harder.\n\n'But I wish she'd told me, Frank.'\n\nWe let the quiet fold around us. The shutters rattle. There must be a breeze tonight.\n\n'Did you get some help? Counselling or something like that?'\n\nI lift my head to look at her. She's moved, both of her feet back on the floor and leaning towards to me, elbows planted on her knees. I get an intimation of how she must be as a house mistress in that girls' school she works at, listening with such careful attention.\n\n'Yeah. We went to counselling together, but -- I think it was too broken by then. Neither of us had the heart to carry on. Or the bravery, or whatever it was that we lacked.'\n\nShe hesitates.\n\n'Surely it's not a question of what you lacked? Grief is unpredictable. And it must have been especially hard to grieve if the baby hadn't been --umm, expected.'\n\n'We lashed out at each other, instead of sharing how we felt with each other.' I clear my throat. 'Not that I think we were, you know, \"meant for each other\". I don't think either of us thought that way, but when we found out Cate was pregnant, I think we both decided to stick with it.'\n\n'It sounds terribly painful, Frank.'\n\n'Yeah.' I break away from her gaze; pick up my wine glass to drain it.\n\nShe seems to slump back into the sofa. She must be tired. This is the latest she's been up since I got here. I stand up and reach for her glass.\n\n'Come on, it's late and probably time you got to bed.'\n\nYes, now I'm closer to her, I can see she looks tired.\n\n'How about going for a walk tomorrow morning after breakfast?' I suggest and am happy she nods in agreement. \n\nI hear her climbing the stairs as I clean up in the kitchen, pouring myself a rather large measure of whiskey to stand in the kitchen windows and watch the squall outside gathering strength, flashes of sheet lightning flickering in the distance.\n\nI'd allowed myself to start imagining bringing the baby here, to this house, this summer, to meet his or her cousins. That's what's eating at me, now I'm here. The ghost of an alternative present. Me; Cate; our new baby the centre of attention. I finish off the whiskey, swilling it around my mouth, feeling the burn. Turn off all the lights, bolt the back door, and make my way as quietly as I can to my room. Lying in bed, it's the first time since arriving here I'm not having to deliberately think my way out of erotic fantasies about Jane.\n\n+++\n\n'Here you go. My patented, top secret, salad dressing. See what you think?'\n\nShe crinkles her nose at me, flashing a smile, then dips her head to help herself to the food we've laid out on the table for lunch.\n\nI dip my finger into the jug of dressing and lick at it.\n\n'Oh, now that is good. What is that taste? Almost lemony.'\n\nShe's beaming at me, her dark hair burning in the bright sunlight streaming in through the French windows behind her.\n\n'Did you hear the key words \"top secret\" just then?'\n\nI'm forced to laugh. 'I guess I didn't, no.'\n\nShe's getting to be more like the Janey I remember. Day by day, she's gaining in energy and humour and weight. The latter of these is a good thing. She no longer quite looks as though she could snap in half in a light breeze. Still a long way to go before I'm prepared to give her a clean bill of health, but it's a definite improvement. \n\nOur days mostly follow the same pattern. Breakfast, followed by a walk around the garden then down to the village and back. Reading or, in my case, some work, then one of us makes lunch to eat outside on the terrace. Janey takes a short nap, shorter now than when I first got here, after lunch. More reading, sometimes a dip in the pool (no bikini -- a sensible one-piece under a t-shirt -- I'm still not sure whether to be relieved or disappointed) and then a pleasant slide towards dinner. I've slotted work and a daily run around these fixed points. \n\n'What are you smiling about? It's not going to persuade me to give up the recipe, no matter how much of the charm you turn on,' she teases, biting into a cherry tomato, pressing her lips together to catch some of the juice.\n\nI get a little growl from the base of my spine and do my utmost to ignore it. Instead, I pretend I'm a grown-up, and reply in my most level voice.\n\n'I'm just happy to see how much you seem to be improving every day.'\n\n'Yes, I am feeling better, you know? As if someone's started reconnecting all my circuitry.'\n\nWe smile at each other. We sit closer these days. I'm not sure when that happened. I both like it and hate it. It means I have to remind myself more often to behave. To resist the temptation to stroke her wrists, to reach up and tuck her hair behind her ear. That sort of thing. \n\n'And what did Ellie say just now?'\n\nI glance at my phone on the table.\n\n'Another week, then the doctor will probably allow Frankie to fly.'\n\n'As we thought, then.'\n\n'Yes.'\n\n'Poor Ellie and the kids. They must be so disappointed.'\n\n'Now Frankie's obviously on the mend, yes, I think they are fed up being stuck in Singapore. But she thinks they'll definitely make it out here in time for his birthday next month, so that's something.' \n\n'And you're stuck with dull old me for another week at least. You must be going up the wall with boredom.'\n\n'No. Nothing could be further from the truth, Janey.'\n\nI chew at my lip, hoping she's not looking at me. I'm torn between wanting her all to myself and diluting the tension with my unruly mob of nieces and nephews running riot around us. I want them to get here before I make a complete idiot of myself with Janey. But I don't want them to come at all, to give us more time. \n\nTime for what? What do I think is going to happen?\n\n'Anyway, I was thinking we could visit Herculaneum one day soon? Reckon you're up to that?'\n\nShe's twisting her hair through her fingers but looks pleased at the suggestion.\n\n'Good, let's do that, then. It's years since I've been and I'm sure they've excavated more since then. I've always thought it's a more interesting site than Pompeii. Have you been?'\n\nI blether on, filling the air with words and ideas as far removed as possible from those that are really coursing through my mind. And body. I shift around on the chair trying for a more comfortable position without being obvious about it. We finish eating and she clears the plates.\n\n'Crossword?'\n\nThat's another thing we've included in our routine. Doing The Times crossword together. Well ok, it's not setting the world alight, but it's a nice way to spend time together. She's much, much brighter than me, but she's kind and only obviously outshines me when it's absolutely necessary (often).\n\n'Sure. After you come down from your nap?'\n\nShe nods. 'Ok. I might get in the pool later too. It's so much hotter today.'\n\nI incline my head to let her know I've heard her. And wait until she's left the kitchen before getting up from the table. Because the erection I've been trying to calm down through most of lunch is stubbornly resistant. Not helped by Jane's comment about the pool. I press against my cock, almost laughing with the frustration of it. It's as if I've reverted to that thirteen year old; helpless and hopeless in the presence of beautiful Janey. I break into a light sweat, fighting the same old fight with myself. Relief or stoic abstinence? Thing is, I'm not thirteen anymore. So the idea of wanking while Janey's upstairs feels totally ridiculous. Grown men don't do that. Do they?\n\nI'm so self-absorbed I don't hear Jane until she's in the kitchen, the sound of her scraping one of the chairs on the floor startling me so much I step backwards and bang into the fridge behind me.\n\n'Sorry, did I catch you unawares?'\n\n'You have no idea, Jane,' I murmur, low enough I'm not sure if she hears or not.\n\nShe holds up her book.\n\n'Forgot this,' she chirps and is off up the stairs before I reply.\n\n+++\n\nFortune smiles on me for once, today's crossword being one I find answers for more easily than normal, and it's a most helpful distraction from Jane in the pool. I still steal looks at her when I hope she won't notice, using the crossword as cover, pretending that's what's really holding my attention, or boasting to her about another solution I've found whenever I think she's caught my eye. But my diversion runs out of road eventually. The crossword is done, and Jane stands over me, dripping, checking I'm not exaggerating my claim to have finished it correctly.\n\n'Time for you to take a dip in the pool as your reward,' she smiles.\n\nOn another woman's lips, it'd sound coquettish or downright suggestive, but Janey's not like that. She's got some sort of innocent aura. Almost girlish. Not immature. But -- what am I saying? I'm losing my mind. The vibes I'm getting from her are plain confusing. One minute I think she's flirting; the next I realise she's doing nothing of the sort. My fault for wanting something that's just not there.\n\nI scratch at my hair, pull my t-shirt up over my head, dump it on the ground and dive into the pool. It's beautiful in the water. Just the right temperature. I float on my back, listening to Jane swim more slow laps. I ran a long way this morning so I've no desire to swim. \n\nThe sky is an almost perfect cornflower blue. Not a cloud to be seen.\n\nI think about George's fearful splashing around in this pool last summer. And roll over, face down, before hauling myself out. No more self-pity, I think to myself. No more. It's done. Cate and me are over. We didn't have a baby. It's done.",
        "'You ok, Frankie?'\n\n'Yeah. I'm going to shower then make a start on dinner,' I call back to her, already at the French doors.\n\n+++\n\nIn fact, we make dinner together. I open a bottle of red and we make a start on it earlier than usual. By the time we sit down to eat I think we're both a bit tipsy. But I open another bottle anyway. \n\nWe end up talking about the time I'd visited Ellie at university -- Edinburgh -- in their third year. Her and Jane had taken me out to some basement club where the drink was half price and the music was ear-splittingly loud. I was tall for my age and once they'd both flirted so outrageously with the bouncer to let me in without ID no-one at the bar cared enough to check, so we'd drank and danced until we were really rolling, it was light outside, and we'd walked home with the folk going to church. \n\nWe reminisce about the music and the price of a double Tequila Sunrise, although inside my head, I'm mostly recalling the feel of Janey's breathless heat as we'd danced together.\n\nSuddenly she's clicking her fingers in front of my face.\n\n'I've lost you again, Frank. Where do you go with that expression on your face?'\n\n'To a place where I'm gripping your hips as we dance and grind until the sweat is beading and pouring off us,' ...... is what I want to say. \n\nBut I don't. \n\nInstead I just smile.\n\nWe clear the table, not very conscientiously, and repair to the sitting room, me carrying the bottle. I drop down into my usual spot on the sofa opposite her. Lean over to pour more wine into Jane's glass. And notice her skirt has ridden up her thighs as she's tucked her feet underneath her. I close my eyes but the damage is done. I spend the next half-hour concentrating on ignoring the tempting inches of pale smooth skin -- although not so pale after this week in the Italian sunshine -- and forcing myself to look anywhere but there. \n\nIt's difficult. \n\nAlmost impossible. \n\nI'm in a better place once the light begins to leach out of the day and a comforting gloom lowers the visibility all round. I start to believe it's providing me with the cover to steal a few glances now and then, as she gives me an animated description of some of the pupils she's enjoyed -- or not -- teaching this year, her hands fluttering in front of her.\n\nI ask her what being a live-in house mistress entails. \n\n'Being responsible for the welfare of all the girls in my House. I have to make sure they get the best out of their time boarding with us -- personally as well as academically.'\n\n'And you live with them?' I fidget, jiggling my leg, intrigued by the world she's been revealing to me.\n\n'Yes. But I have a self-contained little flat of my own. I can even lock my door when I want to.'\n\nShe curls her lip, amused at my curiosity. \n\n'But do the girls go into it? Or do you see them in an office?'\n\nShe laughs, a burst of light that illuminates her face.\n\n'Both!'\n\nI watch her, happy she's looking so alive.\n\n'I have regular office hours when girls can meet me during the day and after lessons, and that's in my office. But I also do sometimes invite a girl or girls to meet me in my flat. Particularly if it's going to be difficult for them. Or very private. Sometimes it's not until I let them see something of my private self that a girl will open up to me.'\n\n'What about?'\n\n'Oh,' she shrugs, more energised than I've seen her all this time, 'it could be to do with what's happening at home. Some of the girls board with us because their home life is troubled; their parents are going through difficulties, or it's simply safer for them to be living with us.'\n\nShe sees the look on my face.\n\n'We have a lot of supported places at the school, for girls whose families wouldn't be able to afford the fees, and we also have a relationship with the local authorities for girls who need a safe environment to live and go to school in. It's not all posh girls with ponies and a bottomless personal allowance, you know.'\n\n'I didn't know.'\n\n'I can see that.'\n\nShe holds out her glass for more wine.\n\n'It doesn't sound like you get a lot of privacy for yourself, though? What about days off?' I ask while I'm sharing out the last of the red between Jane's glass and my own.\n\n'Well, no. You have to live the life, if you know what I mean.'\n\n'You must really love it, to do that.'\n\n'I do!' But her smile fades a bit. 'Well, that's to say, I have done. But looking back, I think I've been getting wearied by it these last two years or so. It used to fill me up with energy, but recently it's felt like the job has been depleting me instead.'\n\n'That must be -- disconcerting?'\n\n'Yes.' She slumps back into the depths of the sofa, rotating the wine glass in her hand.\n\n'Why do you think that's happened?'\n\n'Lots of things. Dad dying. Working long hours. Not taking enough time off during the school holidays.'\n\nShe hesitates; puts her glass down and pulls her hair up into her hands, twisting it into knots behind her. I haven't seen her do that before, and I sit up straighter to watch the way she's pulling and twisting at it, exposing her graceful neck to my hungry eyes. One glance at her and it's obvious she has no idea of the effect she's having on me.\n\n'But recently I've begun to think I'm not as good at the pastoral stuff as I thought.' She darts a look at me, sees I'm still listening, and seems to rush onwards. 'I've fallen out of step, somehow.' \n\nWe both take a big breath.\n\nI speak first.\n\n'What do you mean?'\n\nHer eyes dart around, between me and the paintings on the wall behind my head.\n\n'The girls -- they are so much more worldly than I am.'\n\n'Worldly?'\n\n'Yes. They're experiencing things I've never experienced, and sometimes I feel at such a loss as to how to help or advise them.'\n\n'But, Jane, no-one can experience everything. And isn't it the feature of all generations, to grow up in different times to each other? I can't imagine anything other than you're the best sort of adviser to those girls, because you're such a good listener.'\n\n'I think some of the girls see right through me. They think I'm a fraud, pretending to know what they're talking about; that I've done it all too.'\n\n'A fraud? Surely that's not right?'\n\n'Oh I'm sure it is. I can see it in their eyes. They don't believe I have any idea what they're talking about. What they're up to. I probably sound utterly ridiculous to you, but it's got to the stage where it's undermining my own confidence in what I can do for them.' \n\nHer words are spilling out at quite a rate now.\n\n'Good grief, Janey, what are we talking about here? Drugs? Sex trafficking? Chatroom grooming? What are these kids of yours up to? I had no idea the Highlands was such a hotbed of teenaged debauchery.'\n\n'Just sex. Yes, sometimes drugs, and worse, but I've got other people -- specialists -- I can turn to for that. It's the sex.'\n\n'The sex?' Now I'm the one leaning forwards, trying to read her face in the low light. 'What kind of sex is it, that you don't know enough about? How -- uh -- specialist are we talking?'\n\nShe's flushed. Probably with the wine and, more so, the subject matter. I chew at my bottom lip, remembering too late Ellie telling me even she has never had this sort of conversation with Jane.\n\n'Just the sex, Frank. The sex.' \n\n'I don't understand,' I stutter, but looking at the panic in her face, I think I do. Or I'm beginning to. \n\n'What do you mean, Janey? That it's been a while since --,'\n\n'No! It's not simply a matter of time, Frankie.'\n\n'Not of time?'\n\n'No,' she moans, and covers her face with both hands.\n\nI can't reach her from here, so without thinking, I stand up, take the couple of steps needed to close the distance between us, and reach down to touch her hands.\n\n'Oh God, I must be so much more bloody drunk than I thought,' she moans again, her voice muffled.\n\nI touch her hands again but they stay firmly over her face.\n\n'Jane? Janey? Are you saying what I think you are?'\n\nThe sight of her shrinking back into herself is more than I can bear, coming so quickly after all that gorgeous, excited animation of earlier, and there's nothing I want to do more than to bring that good energy back, to dispel whatever this despair is. I sit down next to her, and gently run my hand down her forearm, trying to encourage her to uncover her face. I need to know what's going on.\n\n'Jane? Talk to me. It's only me. And to be fair, you've pretty much already said it?'\n\nShe drops her hands then, and barely turns towards me, but it's an improvement.\n\n'That's a start.' I lean across her, retrieving her glass, and lift it up. 'Perhaps now you'll want the rest of this, to help you finish?'\n\nShe gives me the tiniest smile. 'Honestly? I'd rather run to the hills, but I fear that's not really possible, is it?'\n\nI shake my head. 'Not really,' I agree.\n\nShe takes a big gulp of wine, sighs, shakes her head, still avoiding my eyes.\n\n'Oh God, I can't believe I've told you. You, of all people.'\n\nI sit back a bit, to give her more space; stop it feeling as if I'm crowding her.\n\n'Janey, you know how slow I am on the uptake, so forgive me, but are you actually saying you've never had sex?'\n\nAt last, she turns her head to really look at me.\n\n'Yes, that's exactly what I'm saying.'\n\nI'm sure my eyebrows are as high as they can reach and my mouth is hanging open, despite how hard I'm trying to keep my expression as neutral as possible.\n\n'But, how? How, Janey? You're --,'\n\n'I'm what? Too old to be a virgin? Well, here I am. Exactly that. A bona fide, one hundred per cent, thirty-five year old virgin,' her voice getting higher with every syllable.\n\nThe sofa heaves as she pulls herself up, but before she's standing, I've grabbed her wrist. Too hard, but I'm damned if she's leaving before this is finished. \n\nWhatever this is.\n\n'No, Jane, don't walk out.'\n\n'I can't talk, Frank. I'm so embarrassed. And ridiculous. A silly old maid.'\n\n'Please sit down,' I tug at her wrist. 'And there's nothing old maid-ish about you, never mind whether you've fucked anyone or not.'\n\nWell, she's not the only one who's drunk too much tonight. \n\nI feel her shiver, and think I've lost her, but she surprises me by sitting down with a thump. I clear my throat, growing more aware with each second that I'm still holding her wrist in my hand.\n\n'I'm finding it difficult to believe, Jane. I mean, you've had boyfriends, haven't you?'\n\nShe rubs at her eyes.\n\n'Not since school. Not really.'\n\n'School?'\n\nShe nods.\n\n'Yes. I had quite a long relationship at school, actually. But then at university, somehow I just never seemed to -- I don't know how to explain it. I studied hard, but it wasn't only that. I just wasn't in the same groove as the other girls. Then my first teaching job was at an all-girls' school, followed by the job I have now, so, not exactly rich pickings in the way of men.'\n\n'I can imagine,' I murmur.\n\n'Now you know why I feel such an utter fraud when girls come to me for advice when they think they might be pregnant, or don't know if it's the right time for them to lose their virginity, and the myriad of other things they want me to help them with.'\n\n'I can imagine,' I repeat, sliding my eyes to look at her profile as she rubs at an imagined spot on her skirt, worrying at it with her fingertips.\n\n'I'll bet you can't,' she finally says, an edge to her voice.\n\n'Why can't I?'\n\nNow she's brave enough to look at me again, I see the shiny glint in her eye.\n\n'Because the last thing you are is a virgin, that's right isn't it? Ellie used to tell me about some of your exploits when you were younger.'\n\nI grimace.\n\n'It's true though, isn't it? You were never without a girl.'\n\nI tip my head, not knowing what to say.\n\n'Come on, I've told you mine, now it's your turn,' she challenges me, turning her wrist in my hand until she's gripping my fingers with hers.\n\n'What are you asking, exactly?'\n\n'How many women have you slept with?'\n\nI cough. 'It's not about that. It was never about that.'\n\n'You haven't been carving notches in the bedpost, then?'\n\n'No,' I laugh, 'no I have not.'\n\n'Then what was it about? Is it about? All the women?'\n\nWell, shit, if she hasn't reversed this conversation right back into me. Clever, remember? I suck air into my chest; cough again.\n\n'Janey --,'\n\n'Do you even know how many, Frankie?'\n\n'No. I haven't been counting.'\n\n'So --?'\n\n'So -- I really like women, what can I say? I like being with them.' I stop, not knowing how else to express it.\n\n'Open your eyes, Frankie, I want to see what you're really saying.'\n\nI open them, surprised they were closed at all, and just as surprised at how close Jane's face is to mine. She smiles a little bit.\n\n'I've always thought your eyes are the most expressive part of you.'\n\n'Really?' I don't know what to say at that, either.\n\n'Really.'\n\nI swallow. Given how close she is to me, it's only a matter of time before my body is going to betray how I'm really feeling here.\n\n'Maybe you can help me.'\n\n'What?'\n\n'Maybe you can help. I mean, you've slept with lots of women, what would one more be?'\n\nThat does it. It's a mere second or two of time for her words to be uttered, for me to hear them and to begin to understand precisely what she's said. Asked. What she's asked. Is that what she'd be? Just \"one more\"?\n\n'What?' I'm totally, wildly, wrong-footed by her. 'What? No, Jane --,' \n\nI realise my mistake as her whole body contracts away from me. \n\n'No, Jane, I don't mean -- didn't mean -- that.' I stop, defeated by the twists and knots we both seem to be in. Bite down hard on my lip.\n\nShe emits some kind of distressed sound, still tense under my touch.\n\n'You don't want to?'\n\n'Oh Janey.'\n\nNow I'm in a state of frantic despair.\n\n'Frankie?'\n\nI meet her eyes, but I can't see enough in this dark. I lean across her, startling her I think, and fumble with the light on the side table behind her, eventually succeeding in switching it on. Sitting back down; her eyes following my movements carefully.\n\n'Ok, that's better. I need to see you, too, if we're really going to have this conversation.'\n\nShe inhales quickly.\n\nAnd then gamely, bravely, sits up a little taller, and twists to face me some more.\n\n'Ok.'\n\n'Ok,' I nod. 'So, are we? Having this conversation, I mean?'\n\n'Yes,' she squeaks out.\n\nI can hardly think, my heartbeat is thumping so loudly in my ears. Is this really happening? I consider the wine we've drunk, but it's nowhere near enough to cause this kind of hallucination.\n\n'Right. So -- what --? You think we could, um --,'\n\n'Fuck?'\n\nOnce again, she's floored me. \n\nI feel the first twitch. Because the thing is, I rather like women with nice accents like Janey's wrapping them around a few dirty words now and then. She's looking at me. Intently.\n\n'You liked that?'\n\nA flush of heat begins its crawl outwards from the base of my spine.\n\n'You liked me using that word?' she repeats, the slightest of smiles curling around the corners of her mouth.\n\n'Looks like you really can see what I'm feeling,' I say, discomfited.\n\n'Mmm. Maybe.'\n\nI pull at both of her hands.\n\n'Look, Jane, sex isn't just something --,'\n\n'Oh, please, Franklin Priest, spare me. I've watched and read more health and sex education information than you've had hot dinners, I promise you. I know it's not to be taken lightly and all of that. But look, we know each other, I trust you to -- um -- be nice about it. But if you don't fancy it with me, or just don't fancy me, then say so, and we'll both down a large whiskey each and crawl to our beds to lick our respective wounds, ok?'\n\nIt's hard to keep up with how quickly she can change from abject embarrassment to feisty teasing like this. I grin.\n\n'Janey, I couldn't fancy you more if I tried. I've spent the last week torturing myself with long runs every morning, immersing myself in the most tedious technical specifications for an engineering client of mine, and practising hardcore mental arithmetic whenever you insisted on swimming in front of me, just to distract myself from how much I've wanted to scoop you up and drag you into my bed.'\n\nHer mouth and eyes are both wide with surprise. Or shock.\n\n'Ha-have you?'\n\n'Yes,' I exhale, the relief sudden and palpable, like a bad spirit leaving my body.\n\nI think the same is happening for her too, because she bows her head and lets out a quiet laugh.\n\n'You mean, we could've got to this point without me having to confess my embarrassing virgin state at all, or propositioning you so clumsily?'\n\nWhen she raises her head, she's smiling, her eyes softer.\n\n'Well, I don't know about that. I've always thought you're too far out of my league. I'd probably have dismissed any idea you were flirting with me because of it.'\n\n'Out of your league? You're out of your mind, Frank.'\n\nI shrug. 'Maybe I am.'\n\nWe sit there, both wondering what to do next. \n\nShe starts to rub at that non-existent mark on her skirt again. \n\nI lean over to her, pausing long enough to give her time to pull back. She doesn't, and I think my heart might be expanding too fast for my rib cage to contain it as I touch my lips to hers. \n\nI sense the flow of air between us as she pulls in a sharp breath of anticipation, and then just the warmth and wet of her mouth. Tasting of wine. And of Jane. \n\nI'm kissing Jane. \n\nOnly seventeen years from when I first wanted to. \n\nAfter a few seconds, she's kissing me too. Slowly. Maybe a bit self-consciously. I force myself to hold back until she's more comfortable. Can't stop the tremor when one of her hands slides around the back of my neck into my hair, though. She retreats, leaving me unbalanced.\n\n'You liked that too?' her clever eyes on mine. 'This?' as she runs her hand back across my neck and, more roughly now, into my hair. \n\nSame reaction. No one can accuse me of inconsistency. The intensity of her scrutiny leaves me nowhere to hide. I move closer to her.\n\n'What I was going to say before you interrupted -- about sex -- is it's not something to take too lightly, because it's when people are at their most honest. It's baring everything -- mind and soul, not just bodies.'\n\n'Are we doing a risk assessment or pre-emptive damage limitation Frank, or what?'\n\n'I'm just saying you might be disappointed.'\n\n'In the sex?'\n\n'That. Yes. Although I'd do my level best to make sure that wouldn't happen, Jane. But you might be disappointed in me.'\n\n'Because I'm out of your league? How so?'\n\n'You're exponentially brighter than me. I can't hold a candle to your intellect. I think you'd see me for the dull, unimaginative bloke I am, and that'd disappoint you, surely? For your first?'\n\nShe looks torn between smacking me and laughing at me. Except she meets my lips with great deliberation, pulling me down into a soft, sweet kiss, her tongue just tipping against my lower lip. I open for her, enjoying this taste of her, letting her explore me before sliding my tongue against hers, feeling the push and pull of breath through her nose. \n\nWhatever she's doing with her hand in my hair, it's almost as good as the kiss. I lift her a little, lie back on the sofa, almost flat, and pull her on top of me, my wine glass getting knocked over in the process and rolling around on the floor. It's a relief to lie down. For my back, but also for my cock which was getting uncomfortably trapped in my jeans. \n\nWe settle like this, and kiss some more. Running my hands across her back and hips and bum I reassure myself she's definitely put on some weight since I first set eyes on her. I restrain myself from going too fast and tearing at her clothes until they're in a messy jumble on the floor. \n\nIt crosses my mind I'm going to need to know a bit more about what experience Janey's had before we proceed much further.",
        "That gives me pause. Really? I'm going to have Janey in my bed? The surge of heat is almost too much, and I briefly have to resort to mental arithmetic to reassert some control. Over my emotions as much as my cock. I need to think about how to do this. I want it to be good for her. More than good. Wonderful. Loving. Worthy of waiting so long for. \n\nIn the meantime, I realise my hands have, despite my best intentions, made their own way underneath Janey's blouse, and I can feel the pattern of more moles speckling her hips and lower back. I blink. Reaching up to push her hair out of my face, she responds, sitting upright, causing me to wince a bit and shift my hips to force her into a less uncomfortable place for me.\n\n'Sorry,' she apologises.\n\nI press two fingers against her mouth. 'No apologising.'\n\nI shift her again, she's so light on me. 'I have a few more questions.'\n\n'Do you?'\n\n'Yes. I do.'\n\n'Such as?'\n\n'Uh -- just about how much experience you've had? How much is going to be new?'\n\nI feel uncomfortable asking, but I don't want to go into this blind. It's too important. Bless Janey, though, she ploughs into her answers, using the kind of straight talking I think must be from the sex education materials she uses with her students. Anyway, it amounts to heavy petting, wanking her high school boyfriend off on what seemed like a regular basis (promising, I can't help feeling, and inevitably my cock twitches with delight at the news), fingers inside but not so often. She didn't particularly enjoy it (less promising, I think, but at least now I'm forewarned). \n\n'Do you think --,' I begin, but she beats me to it.\n\n'Do I think I'm technically a virgin? Intact hymen and all that? I doubt it. Tampons and various medical exams etcetera.'\n\n'Right.'\n\nShe laughs. 'I'm not sure I've seen you look embarrassed like this, Frankie.'\n\n'Hmm.' I run the palm of my hand straight up her thigh until it's within a hair's breadth of her underwear, watching her eyes widening with anticipation. She drops forward, planting her hands either side of my head. It's a lovely sight, and I flick my fingers along the front of her knickers. Nice and hot.\n\n'And contraception, Janey?'\n\nThe air goes out of her, and a frown pulls at her eyebrows.\n\n'Umm, no, nothing. I --,' she stops.\n\n'Ok then. So we'll have to get something tomorrow.'\n\n'Tomorrow?'\n\n'Yes. Tomorrow.'\n\n'Oh.'\n\nHer face falls with disappointment. I use my arms to coax her back down onto my chest. She feels good there.\n\n'Kiss me some more, Jane, before we send ourselves off to bed. And get some sleep.'\n\n+++\n\nBreakfast the next morning is a nervy affair. We both skitter and slide around the kitchen and the conversation, not quite connecting with each other. It's only as we wash up, busying our hands, that I pluck up the courage to raise the subject of what happened last night.\n\n'Janey,' I begin (imaginatively), 'if you'd rather we forgot about last night, I --,'\n\nShe emits a nervy kind of sound.\n\n'Oh God, I've been sitting here absolutely torn between hoping you'd completely forgotten about it and yearning for the exact opposite.'\n\nShe spins the tumbler around and around, polishing it dry with the tea towel, head down so I can't see her face. But I think she's smiling.\n\n'And?'\n\nThe spinning stops.\n\n'On balance, I think I was hoping you'd remember every single word.'\n\nWithout thinking, I bend down and press a kiss to the top of her head.\n\n'Well, I do. But --,' I gently push the very dry, highly polished tumbler down onto the countertop to take her hands in mine, 'it'd be ok if you've changed your mind, Janey.'\n\n'Is that a kind way of saying you'd rather not?'\n\nI tighten my hold on her hands.\n\n'Nope. But I'm giving you an out. Do you want to take it?'\n\nNow she looks up at me, head to one side.\n\n'Nope.'\n\nWe smile. She stifles a giggle, bites down on her bottom lip, then spins away from me before I can react, denying me the chance to try out another longer but more sober kiss.\n\nI sigh.\n\n'How about going to Herculaneum today? It's going to be cooler today, whereas the forecast threatens hotter days and storms towards the end of the week --,'\n\n'Yes, good idea,' she interrupts me before I bore on too long about the weather.\n\nI sigh again. Good. I wasn't sure I could spend a day just hanging out with Janey, thinking about how we'd fulfil our agreement of last night. Our \"agreement\"? What am I thinking? To be brutally honest, I haven't been able to think about it in any productive sense at all. I'm nervous. I've got nothing in my experience to match it. Even though, as Janey's pointed out already, I've been lucky with women, I've never been in anything like this situation before. \n\n'Right then, let's get into the car. It's probably easier to drive to the station and take the train from there. We can stop on the way home to get some food,' (and condoms, I think to myself) 'for dinner tonight.'\n\nIt's agreed. We tidy the kitchen rather better than we managed last night and after packing bags, cleaning teeth and checking for bottles of sunscreen, we set off.\n\n+++\n\nWe wander through the site, filling our eyes with the beauty of Roman architecture. Jane's wearing a floppy hat to keep the unrelenting sun at bay which makes her look even more British against the Italian landscape. \n\nIt's distracting. \n\nShe's distracting. \n\nMore than a match for the beauty of this historic place. \n\nI watch her pick her way over the uneven cobbles, her long legs lean and delicate. She's wearing a big white shirt over dark shorts, her hair hanging in a straight line down her back, the contrast of it made even sharper in the bright light.\n\nWe're back to being jumpy with each other. I alternate between two torturous thoughts. The first -- that she's regretting the whole thing, now we're out in the harsh light of day, and doesn't know how to tell me. The second -- how she'll look and feel as I press myself inside her. Both thoughts cause my throat to close over.\n\nBut I'm still struggling with the prospect of it. Of going through with it. It feels all wrong to just get down to it straightaway. A lead-in; the flirting, the eye contact, the touching -- all of that's part of it, before any kissing; and the rest. I want that with Janey. Is that what she wants from me? Or is it just a contractual sort of thing for her? What had she said last night -- she'd thought I'd \"be nice about it\", and she trusted me. Not much in that to suggest anything beyond a simple fulfilment of the task.\n\nI'm theoretically examining the Casa del Salone Nero when she touches my hand to get my attention and points at a pair of brilliantly coloured butterflies eddying and flickering just to the left of us. We watch them dance around each other, their wings fluttering madly.\n\n'Look at all that energy,' she says, sounding as animated as the best bits of last night's conversation.\n\n'Do you know what they are?'\n\n'Oh Lord no! I'm strictly an indoor, library sort of girl, Frank. Economics, history, and literature only. I know lamentably little about the natural world.'\n\nShe's looking up at me, her brown eyes shimmering, almost amber in this light. Of course, I'm being an idiot. We simply need to take this one step at a time, like any other flirtation. Almost regardless of what was discussed last night, since if Janey wants to put a stop to it, that'll be the end of it, \"agreement\" or not.\n\n'What does go on inside that mind of yours?'\n\nI blink.\n\n'Sorry, Janey.'\n\nShe touches my hand.\n\n'Are you thirsty? Here, let's stand over there in the shade and get the water out?' \n\nI follow her, still pre-occupied. We lean up against some modern barriers and I pull the water bottles out, handing one to Jane. It spills as she unscrews the cap and she flicks the water off her fingers. She makes even that look graceful. We both drink deeply. It's a warm day, but, I remind myself, we also both drank quite a lot of wine last night. \n\n'Ok? Not too hot out here for you today?'\n\nShe looks up at me.\n\n'No, I'm fine for now.'\n\nI bend my neck, closing down the distance between us, seeing her eyes flare just as I touch her mouth with mine. As before, she seems to wait a few seconds before responding to me. It's a relief when she does; when she opens her mouth to let me in, her eyes sliding shut. I'm aware of her breathing; streams of air brushing against my face, her shoulders rising and falling. It's another sweet kiss. Good. I keep it gentle, resisting the urge to crush and squeeze her into my body.\n\nUntil she opens her eyes, glowing with heat. It surprises me, how much desire I think I can see there. I pull on her waist, urging her closer and even closer still, adjusting my stance so she can lean her weight against me. \n\nHer shirt may be long but it's loose. I slide my hands underneath it, finding the soft skin of her back, the tiny nubs of her dark moles arrayed around her smooth hips. I play out in my mind what it will be like to see them with my own eyes. Later. When I take her clothes off. My cock jumps at the thought. And again when Janey presses harder against me. I don't want to stop. Kissing Janey is wonderful.\n\nJust then, a grey-haired couple walk by, the bloke murmuring his admiration for our display of passion, not very quietly, to his partner. I don't suppose he thinks I understand enough Italian to know what he's said, but when he catches my eye, he flashes me a complicit grin. I lift away from Janey, my eyes back on hers, prolonging the intimacy of the moment while we re-set to more polite behaviour. I pull my hands away from her skin, smoothing the shirt back into place. And regret the retreat of her hands from my hips.\n\n'Umm,' she seems speechless.\n\n'Time for lunch?'\n\n'Yes, good idea,' her voice sounding a bit shaken.\n\nI reach for her hand, testing to see if I've done something she wasn't sure of, and am relieved that she squeezes mine.\n\n'Ok?'\n\n'Yes! Gosh, yes. But Frankie, you don't need to do -- I mean -- it's --,' and she grinds to a halt, almost comically unable to complete whatever it is she's trying to say.\n\n'Don't, Janey.'\n\n'Don't what?'\n\n'Look, I'm not doing this out of anything other than greedy self-interest.'\n\nThat's got her attention.\n\nI decide to take another risk; to bare more of myself. 'Because I want you.' I tug at her hand, pulling it towards me. \n\nShe exhales. \n\n'I'm not fabricating anything here, Jane. This is what I want; how I feel.'\n\nShe pretty much knocks the air out of me as she falls against me, throwing her arms around my back and making me feel as if I've saved her life. She's talking but I can't hear a word of it because her face is pressed against my t-shirt.\n\n'What? Jane, I can't hear a thing you're saying.'\n\nShe tips her head back. 'Sorry. I -- I -- but, what I mean to say is, I hope you aren't just feeling a sense of duty about it all? I'd hate that, really, and would rather stay an old maid if it's going to be just an embarrassing chore, really I would.'\n\n'It's not a chore. Not even close. Not for me.'\n\nShe studies me for a few seconds, then nods to herself.\n\nWe both stand up and straighten our clothes. I take her hand again as we walk down the path, but I'm thinking about what she's just said. Wondering what this means for her. No -- that's not accurate. What I mean to her. That's what's filling my thoughts.\n\n+++\n\nWe opt for an early dinner, walking down into the village where there's a choice of exactly one place to eat -- basically Paloma's front room and terrace overlooking the tiny central square. A modest fountain and a small tribe of mismatched dogs populate the square day and night. It's the sort of village no tourist would ever visit and all the better for it. Because Mike's family has been here for generations, we all get treated as locals. Sort of. \n\nPaloma makes a big fuss over seeing me, and inevitably we spend a good twenty minutes catching her up with the events of little Frankie's broken leg and consequent delay to the arrival of the whole family. She clucks at the news, pressing me for more and more details, all the while giving Jane warm but curious looks. Speculating who she is to me. I'd brought Cate here, briefly, last summer as we'd struggled through our grief. No doubt Paloma is bursting to know what's happened since then. I'm grateful she doesn't ask.\n\n'I didn't know your Italian was that good,' Jane comments as Paloma finally bustles away from us, shooing one of the smallest, scruffiest dogs off the terrace.\n\n'It isn't. I fake it and Paloma is good enough not to call me on it,' I pour some water into our glasses.\n\n'Hm. I think you're much brighter than you like to let on.'\n\nI study her profile as she takes a sip of water.\n\n'Aren't you?'\n\nI still say nothing. She perseveres.\n\n'Your work seems as though it requires a lot of specialist knowledge and judgement. Don't you advise people on how to win complicated engineering projects? Is that right?'\n\n'Yeah,' I shrug. 'But it's just stuff you can learn by rote.'\n\n'The technical stuff, I'm sure, but not the advisory aspects -- that takes intelligence.'\n\n'Nah, it's just common sense, Jane. It's not proper brainy work. Nothing like you. Ellie told me you're halfway to a doctorate?'\n\nNow it's Jane who shrugs.\n\n'I had to stop last year. Part of the whole existentially-challenged Year of Difficult Times, etcetera,' she wafts her hands around, trying to disperse the bad vibes. 'But I'm taking next year as a sabbatical from school to try to write it up and submit. And sort out a few other life issues along the way. I hope.'\n\n'Are you? Taking a sabbatical, I mean?'\n\n'Yes. A whole year. The school weren't too keen at first, but when I was ill the first time, it seemed to push them towards being more generous.'\n\n'Good. You're worth holding onto.'\n\nShe lets a small smile curl around her lips before taking another sip of water. 'Actually, Ellie keeps telling me to stay on here. To live here while I write it up.'\n\n'Does she? Seems like a great idea to me. Will you?'\n\nShe picks up her hair in one hand, twirls it around her fingers until it's gathered up in a knot at the base of her neck. I watch errant strands escape and float around in the warm air.\n\n'Maybe. It's certainly a tempting offer, especially since the alternative is my dad's draughty old bungalow in Elgin.'\n\n'I'll say!'\n\nShe smiles more widely. Again, I watch her as she sips at the water. I'd forgotten she was from Elgin. So far north. Growing up alone with a rather old-fashioned, authoritarian sort of father. I reach into my memory for information about her mother; draw a total, puzzling, blank.\n\n'But I don't know if I could get used to living in the villa here by myself, it seems so big and empty when there's just me there.'\n\n'Maybe you'd get used to it?'\n\nShe just smiles, rather enigmatically, and then Paloma's nephew arrives bearing plates of delicious food.\n\n+++\n\nWe walk back from the village, picking our way along the narrow lane as the sky begins to darken. Even though it's been a relaxed meal I feel more and more tense the closer we get to the villa. Who knew that being on as sure a promise as this could make me feel more, not less, anxious?\n\nShe yawns as we fumble our way into the kitchen, squinting as we switch on the lights, and I determine then that whatever happens tonight, it won't be the whole deal. She looks tired from the day walking around Herculaneum and probably needs a good night's sleep more than she needs anything else. And we have time. Ellie and the kids aren't getting here for almost another week.\n\nShe picks up the kettle and sets it onto the hob.\n\n'Anything? I'm going to have some mint tea.'\n\nI lean against the wall, watching her pulling a glass mug out of the cupboard for herself, and a tumbler for me, flapping my offers of help away and pouring a generous measure of whiskey for me. As the kettle starts to boil I open the doors to pick some fresh mint leaves and hand them to her, enjoying the little smile on her face.\n\nWe settle in the living room except tonight, I sit on the same sofa as her.\n\nWe both sip our respective drinks. \n\n'I've been thinking, Janey, about our -- um --,'\n\n'Agreement?'\n\nI smile at her look of mild amusement, taking the piss out of herself as much as me, I think.\n\n'Yes. That.'\n\n'And?'\n\n'That we can take a bit of time over it.'\n\nShe cocks her head, sipping from the mug.\n\n'Get to know each other a bit. It'll be better that way,' I add.\n\nShe's listening to me with that intent look on her face. Then wrinkles her nose.\n\n'Ok. That sounds nice, actually. Thoughtful.'\n\n'And I reckon we need to give the most adventurous of your teenagers a run for their money, don't you? Before everyone else arrives and cramps our style?'\n\nShe laughs, then. Puts her mug down and moves a little bit closer to me. I lift my arm to tempt her even closer, drawing her shoulders into my side, relieved she wants to do this. To cuddle, I mean. Just to touch. \n\nI sense her body gradually relaxing against mine. The closeness begins to relax me, too. I curl my fingers up and down her arm, enjoying the rise and fall of her ribcage next to me as the spell of another warm summer evening casts itself over us. We talk about Paloma's cooking, about the littlest of the dogs in the village pack; inconsequential things, the villa creaking and settling back into its foundations as the day comes to a slow close.\n\nShe shifts her position, drawing her legs up and edging nearer. I turn to look at her to find her face already turned to mine, her lovely eyes regarding me with a mix of curiosity, is it, and appraisal? Still a bit unsure, I bend my head and feel a surge of excitement as she tilts towards me, her lips already parted.\n\nA bit less tentative as we first touch, pressing more firmly against my mouth. \n\nFleetingly, I hope she doesn't mind the taste of whiskey; nearly laugh when I remind myself she's a Scot and it was probably added to her mother's milk. She tastes of mint tonight. I go a little more roughly this time, pulling and sucking at her lips and tongue; gratified when she responds with matching energy. Shocked at how quickly it drives my heartbeat higher. I shove my hands around her ribs and pull her onto me.\n\nShe eases back, surprised. Then presses her lips to mine again, settling into her new position on top of me. I've always loved these huge old sofas, and now I love them even more, as I stretch my legs out underneath her, with room to spare. I let her explore my mouth; letting her dictate the pace for a while, opening my eyes to watch her. \n\nAnd confirm that this really is Janey. \n\nKissing me. \n\nAnd starting to press her body down onto mine in small increments. Which is having its effect, inevitably. I grunt, lifting her just enough so I can use a hand to adjust myself.\n\n'Oh, um --,'\n\n'It's ok, Janey. Just needed to get more comfortable.'\n\n'Hm. I keep thinking I'm going to do something wrong, and make it really crap for you.'\n\n'Unlikely,' I try to reassure her.\n\n'But --,'\n\nI press her hips harder to me, tilting mine up, giving her not much room for doubt.\n\n'I'm not lying here thinking of Emily Blunt and England, Jane. I'm thinking of you. And feeling you. Can you feel the effect you're having on me?'\n\nShe looks momentarily winded, then as if she might giggle, and then something else. She snatches at her breath.\n\n'Frankie, God, I think I'm beginning to understand why all the girls like you, so I am.'\n\n'Mmm,' but I'm preoccupied with the feel of her bare skin as I push my hands underneath her shirt for the second time today. Moving rather more boldly, until I reach the clasps on her bra, where I rest for a minute or two, wriggling one finger underneath the strap.\n\nShe lies still, maybe making some decisions about what's next, because she begins to sit up, shifting her legs to either side of my hips to do so. I bite on the inside of my mouth to stifle a groan, not wanting to draw her attention from what she wants by distracting her with my desires. My pleasure can wait. ",
        "Except she's slipping her fingers into her blouse, picking at the buttons. Her hair is already looking ruffled, spilling out over her shoulders. I draw breath, enchanted at how delicately she opens the shirt out, revealing a white bra. Lacy, with a pale pink bow at the centre. A pretty bra. Stupidly, I'd wondered if she'd wear sensible underwear of the sort Miss Jean Brodie would have approved. \n\nBut no. Not at all.\n\nI reach out to push the shirt off her shoulders; she shivers as it falls from her arms and down to her waist.\n\n'Are you cold?'\n\n'No,' she shakes her head. 'Nervous.'\n\n'Don't be. Blokes love to look. I love to look,' I qualify.\n\nWith that, she reaches round to unclasp her bra.\n\n'Wait.' I cup one hand around her right breast, feeling the soft weight of it, running my palm over her nipple and back again, watching Janey's reactions. \n\nShe shivers again when I slide the bra off, one strap at a time, to reveal her breasts. They are fuller than I thought, with dark pink nipples that harden to my touch. She wriggles her torso and hips as I stroke and pinch them, one after the other, which feels amazing on my cock. \n\nIt's really tempting to lie here and let her do all the work but that'd be unfair. I pull myself up, silently thanking my psychopathic gym trainer for forcing me to do sit-ups until I'm almost puking. Use my hands to support Jane's back as I tip her enough for me to kiss her neck, down to her breasts and back. \n\nThe moles are almost black, and as lovely to touch as the ones around her hips. I kiss each one. The muscles in Jane's back seem to tighten as I flick my tongue across the biggest mole; the one that obsessed me the most at Ellie's wedding all those years ago, sitting on the inside of her right breast, lower than the others. \n\nI'm buried in the sensations of Jane's delicate skin, the scent of it, the feel of it on my cheek, exploring the edges of the mole with my tongue, when she sighs loudly and shifts her position on my lap. I raise my head.\n\nShe's smiling at me, which seems a good thing.\n\n'I didn't think these were sexy, as such?'\n\nShe runs a fingertip across the chain of smaller moles.\n\n'Mm, that may be just particular to me.'\n\n'Oh. I see.'\n\nHer mouth twitches. So I kiss it. She opens up straightaway; more confidently now. The soft pressure of her breasts against my chest feels nice and I realise she's gently rocking her hips over my crotch. I count this as another good sign. \n\nIt's been probably nearly four years since I've been in the position of exploring someone for the first time, and I've forgotten what a mix of excited anticipation and nervousness it is to read a woman's body for the first time. And Jane is quiet. Maybe because she's nervous or because that's what she's naturally like. Or both. Which makes it harder for me to read her. \n\nWe break away for air. I pull her close to me, stroking my palms flat down her back, feeling for the moles around her hips, circling them with my fingertips, before returning to her shoulders and tipping her backwards again, dipping to plant my mouth over her breast. She flinches, as if she wasn't expecting that, then holds herself very still. I lavish attention on both breasts, pushing at her nipples with my tongue. She starts when I trap them between my lips. But her hips seem still. \n\nI raise my head; sit back.\n\n'Not doing much for you?'\n\n'Oh. Um -- it's nice --,' she trails off, hesitantly.\n\n'That's ok. There's plenty more we can try out.'\n\n'Sorry.'\n\n'What have I said about apologies? None needed, Jane.'\n\n'Ok.' She gives a small shrug.\n\n'Some girls really love it and others say it's nice enough but not mind-blowing.'\n\n'And what does it do for you, Frankie?' she asks, her eyes on the hand I've got curved underneath her left breast, my thumb lazing over the nipple.\n\nI twist my hips up into her.\n\n'What can you feel, hm?'\n\nShe smiles a sweet smile. I think she's blushing. If she could look any more appealing, she's managing it now, the pink flush crawling down her throat and into her cleavage.\n\n'Wow, Janey, you are beautiful.'\n\nThe smile widens.\n\n'Do you really think so?'\n\n'I know so. I'm looking at you.'\n\nI have to snatch at air as her fingers drift across my stomach. It's the first time she's touched me, aside from the kissing, and it's sending hot volts of pleasure through my body and my cock jumps not once, but twice.\n\n'Oh!' she exclaims, rather loudly. 'Oh, you liked that!'\n\nShe moves her fingers again, and, of course, gets the same response. She tilts her hips, making tiny circles over my cock. I watch her trying it out, perhaps recovering old memories of her first boyfriend. \n\n'You keep fit, look at this,' she says, more quietly, lifting my t-shirt higher, brushing her hands over my stomach, making me tense and roll up. 'Ticklish?'\n\n'Uh, something like that,' is all I can mutter, my cock surely doing the communicating for me while I try to re-establish a regular, living heartbeat for myself. \n\nEven these smallest of touches feel like they're setting my lower back on fire. When she leans forward to kiss me, I grab her more abruptly than I meant to, causing her to cough a little bit, but she recovers quickly. We look at each other, close. I pull on her again. This kiss is better. Much less reserved. I splay both hands across the back of her hips, pulling her in and down to me, rocking my own underneath her, needing more friction. Our movements drag a low, quiet moan from her that fills my mouth for a fantastic moment.\n\nI relax my back and bring her with me to lie down flat again. She's definitely getting more relaxed with me now, her movements more trusting and fluid. I roll us as tightly as I can -- this sofa may be bigger than average but I don't want us to end up on the floor -- until she's beneath me. Levering up on one arm I look down into her face and brush her hair away from her eyes and mouth. \n\n'Take your shirt off,' she whispers. \n\nJust that, the quietness of it, sends another bolt of electricity through me. I wrestle it off and drop it somewhere, I don't care where, and smile at her when she tugs at me to lie on her. But I worry about putting my full weight on her and steer us both so I'm more to one side. Which means I can run my hand down her side and halfway across her belly, skimming along the top of her waistband. She's so slim I'm able to slide my fingers inside her shorts without undoing the fly. \n\nHer tongue jerks in my mouth when she feels my hand advancing. I pause; her eyes open wide. I move my hand deeper and feel a gush of air across my face as she breathes more rapidly. When I move it again, she tips her hips up, as if impatient for me to get there. \n\nI smile inside. \n\nGood. Now she's beginning to tell me what she wants.\n\nI push at her underwear until my fingers slip underneath the elastic, her hips rising and falling and rising again. I pull away from her mouth. Her eyes seem wider. And I'm surprised to find her hand fumbling with the button and zip of her own shorts. \n\nNo -- delighted. \n\nWe tug at them together until they're down her hips enough I can slide them off her long legs. They end up on the floor too. I trace the length of her leg, from the firmness of her calf muscles to the softness of her inner thigh, feeling the rash of goose bumps following my fingertips. Not until I'm satisfied I've appreciated the entire length of her legs do I turn my hand to slip between her thighs, which twitch open then close again, as if she's not sure. I wait for her to relax before working my hand upwards, towards the source of her heat.\n\n'Janey?'\n\nShe opens her eyes. They seem out of focus until I say her name a second time, pressing with a bit more intent up against her underwear. Now seems a good time to ask her some more questions.\n\n'Do you make yourself come, Janey? Do you know what you like?'\n\nShe nods, warily. Her sex education vocabulary beyond her now, by the look of it.\n\nI kiss her, grateful for her honesty. I'm busy sliding a couple of fingers under the edge of her lacy knickers, wanting to be patient about it, when she finds her voice.\n\n'Why?'\n\nI look back into her eyes.\n\n'It helps if you already know what you like and what you don't'\n\nShe nods.\n\n'I don't like fingers --,'\n\n'I know. I remember. It's ok, Jane. I'm not going to do anything you don't like. You just have to let me know if I do something that isn't great for you. Will you?'\n\nShe nods again, but her eyes flicker as I find her. Find her hot and pretty slick. Her mouth opens as she stutters through some short breaths.\n\n'Ok?'\n\nI watch the pink flush rise and fan out across her neck and down her chest. I'm beginning to work out what causes her to blush. Which is very pleasing because I want to make it happen over and over again. \n\nHer thighs open wider, the expression in her eyes moving out of focus as her eyelids drift closed. \n\nThe blue shadows are almost gone now. I kiss each eyelid. She doesn't open them, but she does smile. So I kiss her mouth too, getting sucked into a longer kiss as I stroke her, happy she's starting to roll herself against my fingers, her hips lifting and rotating. I keep my two fingers moving together, pushing against her flesh more firmly, feeling her responses in the way delicate tremors and pulses chase after my touch.\n\n'Janey, you feel wonderful.'\n\nA quiet noise escapes her. I drag my fingers up and out of her underwear before gripping the lace and tugging at it. She raises her hips without opening her eyes, letting me take them off. Dropping them to the floor, I move back to Jane, to kiss her, pushing her hair back from her face again. Her eyes drift open. She looks so beautiful, her pupils big and dark, her hair splayed out over the dark red velvet. \n\nWe break the kiss, but she's still got her eyes open. I dip my fingers between her legs, wanting to see her reaction in her eyes. Except this time, she makes another quiet noise as her breath whistles through her throat and raises her hips to me. And when I touch my fingers to her mouth, she parts her lips to let me push them inside, her tongue licking at them. She doesn't look surprised by her taste. \n\nReaching for her left hand I take it, holding onto it as I travel down her body, kissing some of her moles, a nipple, the dip of her hip, finally bringing it down to her neat, sweet pussy. She gasps when I touch her own fingertips to where she is swollen and slippery. \n\n'Touch yourself for me, Jane,' I whisper.\n\nAnother quiet noise escapes. I hold my breath, watching her index finger moving slowly around her clitoris, gradually widening then deepening the circles she's drawing on herself. It's a huge turn-on for me, watching a girl touch herself; the intimacy of it; the trust. I also want Jane to connect what she knows about her body and desires with what we're doing now. \n\nI lean in to kiss her where her finger is languorously tracing patterns, forcing a slightly louder noise from her which hitches and rattles in her throat as I run the flat of my tongue along her.\n\n'Wh-what are you doing?'\n\nI'm fairly sure this is a rhetorical question, as she surely knows what I'm doing. I lick her again, rolling her taste around my mouth and mind. Her hips follow me, rising up high. I do it again. And again. Listening to her breath stuttering out in shorter bursts now. Her finger retreats. I shut my eyes, wanting to concentrate. Until her fingers begin to stroke at the base of my neck then under and over my ear. I grunt, unable not to. She's remembered this is a good place for me. Any touching here is guaranteed to produce a rush of blood to my head. Both of them, I mean. I rest my cheek against one of her thighs, momentarily overtaken by my own feelings. \n\nShe sighs. \n\nI flatten my tongue, pressing it to her clit and rotate it in an imitation of the course her finger has taken. A sharp intake of breath, and she's pressing her thighs wider. Wider still when I touch her with my own fingers, circling them into her hot slickness, moving them around, hoping to make them indistinguishable from my tongue for Janey. Hoping I'm awakening every single nerve ending she has. I sink my tongue into her, pressing inside, finding her really tight. And really hot. And tasty. Stronger. Closer to her essence. \n\nI suck on my own finger for a second or two, getting it wet all the way down. I know she hasn't enjoyed this in the past, but I want to see how she reacts now she's as aroused as this. And I'm curious to feel her for myself. \n\nShe's definitely tight. I press my mouth to her, distracting her, working my finger deeper. She feels so alive inside. Fluttering and slickening at my intrusion; her thighs starting to tremble on either side of my face. Encouraging. Lovely. \n\nI use my other hand to stop her hips moving around too much, focused on bringing her to a resolution now. No teasing. Not yet, anyway. It doesn't take long, her legs tightening around me, her hands pulling on my hair, pushing herself at me. It's consuming me; that I've got my mouth full of Janey; that she's going to come for me. Because of me. \n\nThere's no better feeling. \n\nShe calls out, just once and softly, lifting her back high. Taut. Locked there until the release frees her, her every fibre seeming to flinch and jolt with it. I hold my tongue over her but the way she's clenching my finger inside her, I'm already imagining how she'll feel around my cock. I rest my face against her thigh while she comes down, grinding my crotch into the sofa, almost at the tipping point myself. \n\nHer hands lifting out of my hair brings me out of myself. \n\nI kneel up and over her, the look in her eyes filling me. Words look out of reach, so I kiss her gently and slide onto the sofa next to her, holding her, one arm across her stomach. After a while, she turns into me, tucking her head under my chin and a leg over mine. Her breath brushes down my chest, still a slight rattle to it. My cock throbs; impatient. But my throat tightens at how good it feels to have Janey so close, so warm and relaxed. Her breathing evens out; she's drifting off to sleep. I'm reluctant to move, wanting to make this moment last as long as possible; stroking her hair, running ribbons of it between my fingers. \n\nEventually I decide it's time to get her upstairs. I brush her arm, shake her a little bit, but there's almost no response, so I extricate myself from her, bend down and pick her up. She really is still much too light. I carry her upstairs, into her room, and lay her out on the bed. She turns herself to lie on her side. I watch, overcome with the desire to climb in beside her. But I don't know if she wants that. Her quietness has unnerved me. And now she's asleep there's no way I can know what she wants from me.\n\nI glide the sheet over her, lean down, kiss her cheek.\n\n'Night, Janey. Sleep tight.'\n\nDownstairs again, I pick up our wine glasses. Give our discarded clothing consideration, but decide to leave it on the floor; a way of reassuring me this really has happened, maybe? I drink some water. Still totally wired. Fill a glass for her, and take it upstairs, putting it on the table next to her bed. She hasn't moved.\n\n'God, you're beautiful,' I think to myself, before pulling the shutters over the windows and leaving the room.\n\nIn my own bedroom I yank down my jeans, kicking them off my feet, impatiently, still immersed in Janey's scent. Drunk with it. I squeeze my dick hard in my hand, almost coming just from the relief of the direct touch to my skin. It takes just a few strokes before it boils out of me -- simultaneously one of the best and one of the most frustrating orgasms I can remember. Best because my images of Janey are real this time, not figments of my inadequate imagination. Frustrating because I'm alone.\n\n+++\n\nI pull up in the driveway, panting; sweating hard. The sun's already hot even though it's barely half past seven in the morning. \n\nThe run was glorious, watching the sunlight strengthening, casting its brilliance across the deep greens and browns of the countryside. I've run for well over an hour, wishing Ellie was running next to me, wishing she was here to talk to. About Jane. I could really do with her insight. Several times in the course of the hour, I've considered and dismissed the idea of calling her. Phone conversations just can't deliver the subtleties of conversation I want. But can it wait until she's here? And what's going to happen when she does get here -- her, plus her houseful of very inquisitive, very bright kids?\n\nOnce I've stretched out a tight calf and caught my breath I wander round to the back, to the kitchen door I left unlocked earlier. The French windows are open too, now. Janey's standing at the hob, her back to me, wearing a pale dress, her hair long down her back, still kinked and damp from the shower. It takes me a while to work out she's waiting for the kettle to boil, she's standing there so still, apparently lost in thought.\n\nI clear my throat, warning her before stepping into the kitchen.\n\n'Oh! Franklin.'\n\nShe turns to me, her blush already blooming over her neck. I'm opening my mouth to speak when she gets there first.\n\n'I woke up alone. And when I came to find you, you weren't there. I assumed you'd gone out for a run, but I didn't --,'\n\nI wrap my arms around her, surprised at the strength of her embrace around my neck; pulling her up until her feet lift off the floor, and the frown on her face starts to fade.\n\n'I'm sorry Janey, I thought I'd get back here before you woke up.'\n\nHer brown eyes look like they're filled with slivers of bronze and gold; a trick of the sunlight, I think. She gives me a small smile, still unsure. I kiss her lightly, and feel the smile widen. Even more unexpectedly she lifts her legs to hook them around my waist.\n\n'Well, good morning, Janey,' I smile back at her, loving the feel of her body wrapped around mine. 'This is a nice welcome home.'\n\nHer blush deepens, but she doesn't move.\n\n'Are you ok?' I ask, trying not to sound like a doctor at the bedside, but unable to hide my anxiety.\n\n'Yes,' she smiles. Then frowns. 'I'm fine, Franklin. But what about you? You seem -- worried?'\n\nI lift and adjust her so I can hold her more comfortably. \n\n'You were pretty quiet last night and --,'\n\n'I'm very, very embarrassed I fell asleep like that. Hardly a gracious way to thank you. My father'd be turning in his grave if he knew how ill-mannered I've been.'\n\nI laugh. 'I don't think that's what would be making him spin, Jane.'\n\n'You're right enough,' she laughs back. 'But -- I'm sorry about falling asleep on you last night.'\n\n'S'ok. So long as you were, well -- uh -- ok with what happened,' I stutter, not believing how nervous I am.\n\nShe inclines her head.\n\n'You know, you are quite the surprise, Frankie.'\n\n'Oh?'\n\n'Mm. I thought that, you know, with your track record, you'd be a lot more blas\u00e9 and -- um, I don't know -- carefree about it than you are.'\n\nHer clever eyes have me in their grip. No escape, so I decide not to duck.\n\n'I said sex is more than just baring bodies, didn't I? It's much more intimate than that.'\n\n'Vulnerable, you mean?'\n\nShe may have said this gently, but the heat shears up my spine and burns up my breath. I can only blink. She drops her head to one side, considering me.\n\n'Because that's how you're looking, Frankie. Vulnerable.'\n\nI'm unaware of closing my eyes until they pop open at the contact of Jane's mouth on mine. Her kiss is strong and gentle at the same time. She leads and I let her. When she releases me, I set her down onto the floor. \n\n'I need a shower, Jane. I'm a stinking sweaty mess. We'll have some breakfast after that?'\n\nI give her a quick kiss and leave the kitchen, pulling my running shirt up over my head as I reach the stairs, trying to calm my beating heart. Not helped by the glimpse of our discarded clothes still languishing on the living room floor as I walk by.",
        "+++\n\nBy the time I get out of the shower, the house is filling with the smell of fresh bread, which gets more intense as I descend the stairs.\n\n'Janey, did you make bread?' I ask, as I turn the corner into the kitchen.\n\nShe swings round to see me, a big grin on her face, cheeks flushed from the oven.\n\n'I did. I thought it'd be nice to have for breakfast. Or lunch. Whatever suits.'\n\nWhile she busies herself, I watch her, thinking she looks the most energised I've seen her all this time. She looks great, actually. Proper colour in her. \n\nIt's already in the pit of my gut; the heat of anticipation and the chill of trepidation. I eye the kitchen table, thinking of what she'd look like laid out on it, until I give myself a good and sharp mental slap. When she turns back to me I'm praying my eyes aren't showing my thoughts as clearly as she saw them earlier.\n\n'Honestly, I don't know what you're thinking about when you look like that, Frankie. Now -- do you want some of this bread for breakfast, or what?'\n\nI grin. I like it that she's getting more like her old self.\n\n'Bread, yes please.'\n\nWe take up our usual places around one end of the big farmhouse table, handing each other salt, honey and marmalade (we're both British, after all) as appropriate for the eggs and bread Janey's made for us. At one point she pushes a sheet of paper across to me.\n\n'Look, I printed out the crossword. For later.'\n\n'You've been busy.'\n\n'Hm.' She smiles, looking down at her mug of tea. 'You know, I once saw a really good TV drama about the partnership between Margot Fonteyn and the much younger Rudolf Nureyev. There was always so much speculation about whether they ever had an affair or not. The ballet dancers, you know?' \n\nShe adds this presumably because she can see I don't have a clue who she's talking about. She hurries on. \n\n'Well, anyway, the dramatisation was rather good. And came down on the side of them having an affair. But there's this scene where Frederick Ashton, the choreographer, is watching Fonteyn perform a really difficult solo -- really nailing it -- and says something like, \"Look at that, he's fucked some life back into the old girl\". And I've puzzled over it ever since. It seemed such a contradiction to me.'\n\nI'm a bit lost with what's she's saying but adoring the way she's half covering her face up with one hand and blushing. \n\n'But I think I understand now. It makes you feel so alive.'\n\nShe looks at me.\n\n'What was the difference in their ages?' I ask, my question obviously left-field judging from the expression on Janey's face.\n\n'Ah, about twenty years I think. About that.' She gives a small laugh. Self-conscious. 'Sorry. I'm rambling.'\n\nI pull at her arm. 'Don't, Janey. I love seeing you like this. Don't hide it.' I pull at her again, and push my chair back, tugging at her to sit on my lap. \n\nI mean, why not? I might not get many more chances to spend time with her like this. Maybe it'll all be over once we've consummated the full agreement. So to speak. I shy away from the thought, fighting the inevitability that this is just a short, sweet interlude. \n\nShe stands up but still hesitates until I grab her waist and pull her down onto me. I reach up and tuck her hair away from her face.\n\n'You look lovely this morning, Janey.'\n\nShe squints at me.\n\n'Ellie always said you were born a charmer. Even at nursery school you'd be giving the chocolate from your lunch to all the girls, so she said.'\n\nI sit back, frustrated.\n\nMaybe she misreads me, because she adds; 'You look alright yourself,' and runs a hand around the back of my neck.\n\nHave I said how consistent I am? I fidget in the chair.\n\n'You really like this?' she asks, tormenting me with her fingers, running them through my hair and behind my ears. It couldn't feel any better. I'm most definitely rising to the occasion.\n\n'Every time,' I mutter, moving around again.\n\n'Mm. I can see why this could get a bit addictive.'\n\n'What?'\n\n'Doing this. Seeing the way if affects someone so much; just a simple touch.'\n\nI let myself meet her eyes, even though it feels like there might be danger there. She gives me a little smile.\n\n'Does it work like this for you every time? Really?'\n\n'It depends. I mean, if someone just randomly touches me -- then, no. Obviously not. But like this -- with someone I want to be with -- then, yes.'\n\n'Your eyes really change, you know.'\n\nI've heard this before, but I like having Janey so close, so I look interested.\n\n'They change colour. Become so much more green.'\n\n'An improvement on the usual mud colour then?'\n\n'Isn't that called hazel?'\n\n'I --,' and then halt, waylaid by the electric effect of her kisses on my throat. \n\nAnd the tickle of her hair as it falls against my neck. \n\nEverything, just everything. I love everything about the feel of her. \n\nAnd sit back in the chair, overtaken by the sheer goodness of the feel of her; the weight of her on me; the fluttering of her kisses on my skin. \n\nMy heart practically stalls when her hands slip under my shirt, grazing the skin just above my shorts. I grunt, fighting the urge to throw her over my shoulder and head upstairs right now. This patience is going to kill me.\n\n'Frankie, can I ask you something?'\n\nI breathe out. 'Mmm?'\n\nShe hesitates.\n\n'Out with it, Janey,' I laugh, biting it back as she sweeps a hand across my stomach again.\n\n'What would your fantasy be, if you could have anything? Anyone?'\n\nHer eyes are on high-beam again. Unavoidable. I'm trapped.\n\n'Come on, you surely know?'\n\nTime to leap in with both feet, then. 'This.'\n\n'Oh my, you are good. This is how you charm all those girls.'\n\nI shake my head, frowning. 'No.'\n\n'No?'\n\n'No. Jane you were my first fantasy, so this is pretty much it now.'\n\n'Are you joking?'\n\n'Nope.'\n\nShe squints at me, clearly not knowing if I'm having her on, or not. I bite at the inside of my mouth.\n\n'You aren't joking, are you?' She sits back as if wanting to get a wider perspective. 'Well, that's -- um -- I hadn't a clue.'\n\n'Of course not. I was just a kid to you. But as soon as I met you, that changed sort of overnight.'\n\n'What? Really?'\n\n'Really.'\n\nShe seems to shift back a few more inches on my lap, her face taking on a careful expression. I start to resign myself to this wonderful thing with Janey coming to an abrupt end. I've taken us outside of the boundaries of whatever she'd thought was happening between us. The silence yawns at me, while she appears to be taking stock and I'm left wondering what's going to happen next. The old kitchen clock whirs and the whine of a motorbike engine passes through the light morning air, on its way down the hill to the village. And still I wait, afraid to be the first to break the silence. To break the spell.\n\n'I think I've been very unfair to you, Frank, and I want to say sorry,' she says, finally, her eyes intensely serious. 'Because this means more to you than I thought. Am I right?'\n\nI feel fairly sure this is another rhetorical question, but she looks like she's expecting some sort of response, so I tip my head to one side, hoping that'll be sufficient. Waiting for the words that'll bring all this to a close.\n\n'Frankie. Open your eyes.'\n\nSaid so softly. I jerk my eyes open; her face just a hand's width from mine.\n\n'Frankie?'\n\nI feel raw. Shockingly so. I squirm uncomfortably under her gaze. Flinch again when she touches my cheek with a hand.\n\n'I thought you were just being sort of wonderful about it. So kind and thoughtful. And letting me believe I was the most alluring woman in the world. Just for this -- this --,' drawing a deep breath, 'for what I asked you to do. Whatever this is. Has been.'\n\nMy heart lurches painfully up and down as I try to follow what she's saying.\n\n'But it makes more sense now.'\n\n'What makes more sense?' I manage to blurt.\n\n'This.'\n\nAnd with that, she proceeds to give me one of those toe-curling, soul-stripping kisses that happen with just a select few. Maybe with just the one. Because that's what \"all those women\", to use Janey's phrase, have been about. Trying to find her. The one who can make me feel like this with just a kiss. Or a way of holding her hands over her face that makes my heart cringe with joy. Or eyes that give me nowhere to hide but seem to like what they see anyway. My skins crawls with the shock and the burn of it. \n\nThe recognition of it. \n\nOf her. \n\nJaney. \n\nBy the time we both need air, my hands are tight in her hair. I don't want to let go.\n\nShe drops her forehead to mine. Then raises it, a smile on her lips. And slips off my lap, reaching for my hand.\n\n'Why don't we see where this might take us, Frank?'\n\nI follow her lead, standing up, fervently hoping she's not planning on taking us anywhere public. But no, she pulls me out of the kitchen into the hall. Gives a sideways glance into the living room.\n\n'You know, I didn't want to tidy up in there, to reassure myself last night really did happen,' she giggles, flicking her hair over her shoulder.\n\nI've got her in my arms and halfway up the stairs before she's quite realised.\n\n'Bloody hell, Frank, you weren't having me on about dragging me to your bed, were you?' \n\n'Technically speaking, I think I'm carrying you, not dragging you.'\n\nBut I do take her to my bed. And fill my eyes with the sight of her laid out on it, hair streaking across the bright white pillows, stripes of light playing over her from the half-shuttered windows. She waits while I look; the first faint traces of that blush prettying up her neck and collarbones. \n\nI shuck my clothes off. All of them. Abandon them in a pile on the floor and crawl up the bed, kneeling over her. Watching her reactions. Seeing how she feels about being pinned underneath a naked man; one who's unmistakably very excited to be here. \n\nOne slow brush of her hand over my neck; my cock twitches and starts to leak.\n\n'So alive,' she murmurs, drifting her fingers along it.\n\nIt's as much as I can do to stay still, to let her explore me. To experience the almost unbearable lightness of her touch. The delicacy of her curiosity. Only when she finally wraps her hand around me, establishing a firmer grip, do I let myself groan. And open my mouth to accept the fingers she's pushing inside, sucking on them as she pulls harder on my cock with her other hand. \n\nWell, fuck, if this isn't one of the most erotic moments of my life. \n\nMy cock's leaking so much it's drooling onto her pale dress -- too close already. And when she presses her thumb to my head it's almost game over. I pull back sharply and sit on my heels, concentrating with everything I have to stop myself from coming.\n\nThe bed moves under me as Jane writhes out of her dress, pulling it over her head, arms outstretched. Then working at her bra. Dropping it over the side of the bed onto the floor. As she's hooking her thumbs into her knickers, I join in, pulling them down her legs. These are a pale blue; a darker blue ribbon at the waist. I dismiss them to the floor too.\n\n'Turn over.'\n\nJust the slightest of hesitations, but she rolls over onto her front. And now I see the spray of moles over her back and hips I've been obsessing about ever since touching them yesterday. I circle each one with my fingers, then my tongue; Janey lifting and quivering at my contact. When I look up, she's clutching at the sheet with one hand, fingers of the other spread out stiff and wide.\n\nI slide my hand between her legs. And lean in to kiss her shoulder, her neck, the side of her face; gliding my fingers through the slick heat of her, twisting and turning as she moves her legs wider. She gives a quiet moan.\n\n'That's it Janey, tell me what feels good for you,' I whisper into her ear, feeling her shudder play down the length of her back. \n\nShe tilts her hips up; another deep shudder as we touch, my cock grazing against her; her spine rolling and curving underneath me. Oh-so tempting. \n\nBut no, not for the first time. \n\nI press myself into her neck. A more urgent kiss. And a stroke around her waist, urging her to turn back to face me. She slides her legs together as she turns, reaching her arms around my back, pulling me down, pulling me into her kiss.\n\nHer lips look tender and reddened when I ease back. Her eyes follow me as I move off the bed; dig around in the clothes piled on a chair until I find what we might need, and then back towards her.\n\n'I didn't know if you'd --,'\n\n'One of the miracles of Catholic Italy. A vending machine on every street corner. Nearly,' I grin, putting them on the table by the bed. 'It doesn't have to be now, today, but I'm just putting them ..... within reach.'\n\nShe nods, returning my smile. But some nerves there, too. Yes. Got to remind myself to take it slowly. \n\nI slide myself down next to her.\n\n'At risk of repeating myself, I don't want to do anything you're unsure of, or don't like.' I run my thumb slowly over her mouth. 'But you have to tell me, ok?'\n\nShe nods. So quiet.\n\n'Say yes. Say you'll tell me, Janey?'\n\n'Yes!' she gives a small laugh.\n\n'You're so quiet, that's all.'\n\n'I don't think I'm going to be a screamer, Frankie.'\n\nHer belly ripples and shivers at my touch.\n\n'Not asking for that, Jane. Just -- to give me some, umm, direction from time to time?'\n\nShe snorts, then coughs. I tuck her tighter to me.\n\n'Direction? I don't know what I'm doing, Frank, you forget that.'\n\n'But you've read all those sex education manuals. They must have given you some ideas,' I can't resist teasing her, before diving in for some more of her kisses. \n\nAnd then, 'But I think you know what works for you, Janey. That's all I'm asking -- for you to show me when you're feeling good. That won't be too difficult will it?'\n\nShe shakes her head, then snorts again. Forces herself to say it aloud.\n\n'No. That won't be too difficult, Frank,' she repeats my words obediently, catching her lip.\n\nI have to laugh.\n\n'I think I'm going to enjoy corrupting you,' I mouth into the quivering skin of her throat.\n\n'Ha. A thirty five year old in need of corrupting. It's ridiculous,' she frets.\n\n'Shh Janey, don't worry about that. There's nothing ridiculous about this,' as I trace my way from her mouth to her moles, ribs, and breasts. 'This is beautiful.'\n\nAnd -- sometime later -- 'I think we're going to have a lot of fun getting you as corrupted as possible.'\n\nI crawl back to share some of her own taste with her. Definitely no surprises for her there. But with her eyes open this time, I can read better how she's feeling. Good. Not quite in bliss. But getting there, I think.\n\nI ease back, opening my mouth to ask, but instead she smiles, pre-empting me again. \n\n'I feel good, Frank. What you're doing makes me feel really good.'\n\nHer blush deepens. I grin a little to myself, loving how she finds it difficult to say it aloud, now she's getting beyond the theory and into the practical.\n\n'You don't have to use complete sentences,' I lower my lips to her ear. 'Single words. Incoherent noises. Heavy breathing. Any of those do the trick, Jane.'\n\nShe giggles, her breath catching when she feels my fingers slip between her legs. \n\nShe trembles around my touch. \n\nCurls into it, then presses against it, opening out, moving herself onto my hand. \n\nNot until she lurches and traps my hand and wrist between her thighs do I realise what's happening. I watch as she bites down on her lower lip, eyes squeezed tight, her back arching and twisting. Sharp gasps escaping, the pulse at the base of her neck racing. \n\n'Oh Janey,' I murmur, 'Janey.'\n\nI kiss her, letting her low moan fill me up; one of the sexiest sounds I think I've ever heard.\n\nHer eyes flick open.\n\n'That was sudden,' she says, still catching her breath.\n\nThen smiles. One of those gorgeous wide smiles that light up my world. I nearly groan at my own clich\u00e9, but it's true. It's what's been lighting up my world since I got here. For the whole nine days. Because I've been counting every one of them. The days. And the smiles. \n\n'What are you thinking?'\n\nI blink.\n\n'Tell me.' Again, with the high beam.\n\n'I love the way you smile like that,' I manage. 'It lights up -- uh -- everything.'\n\nAnd blink again when she runs a hand along the side of my face.\n\n'Such a dreamer, you are.'\n\n'Hm.' I move my hand up to her belly, liking how it makes her tremble. 'At least you're talking, this time.'\n\n'Don't make me apologise for that again,' she exclaims, her hand flitting in front of her face.\n\n'Yeah. Bit unfair of me.'\n\nAnd lower my mouth to her breast, unable to resist giving it a long lick. Her belly undulates under my hand. I look up at her. \n\n'More of your circuitry connecting up, Janey?'\n\nShe nods, then more surely as I apply greater concentration to my efforts, using my hand to lift more of her to my mouth. Definitely more of a reaction than yesterday. Her ribcage rises and falls, then arches upward. I lift my head. She's reaching out with one arm, as though searching for something. Then brings it down, pressing against my chest.\n\nI look. Raise my eyebrow.\n\n'Sure?'\n\nShe sighs. Nods.\n\n'I want to. I want you to -- fuck me, Frankie.'\n\nSaid so quietly and deliberately, it brings me out in an instant sweat.\n\nI press my mouth to hers, pushing into her. Almost losing it at her first touch, at her hand curving, warm, around my cock. My hips jolt into her. I think I feel her lips stretch into a smile against mine.\n\n'I love this,' she continues to surprise me with her breathy chat. 'Feeling how you're feeling - it's such a high.'\n\nI push my fingers into her mouth, watching her eyes widen at the intrusion.\n\n'Get them wet, Janey.'\n\nHer eyes widen more and as a sliver of light from the window drops across her face, I see how dilated her pupils are. Guess I'm not the only one who likes some instruction. I whisper more encouragement to her as I ease them free from her mouth and move down her body.\n\n'Trust me,' I whisper to her belly, sliding my fingers along her, along her slick centre. And deeper. 'Let me in, Jane.' \n\nInside. Tight. Her legs press wider. I look up.\n\n'Ok?'\n\nShe licks her lips. 'Good,' she mutters, and rotates her hips. \n\nI move back to kiss her throat; lick at her pulsing vein there. And push my finger deeper into her. She meets me with her hips. And a quiet moan. I shudder, my cock feeling like it might burst with the pleasure and the frustration of holding back. But I've got to be patient, she's still so tight. I push my thumb, lightly, to her clit. Her reaction is instant, fucking herself onto my fingers. I look down, the thrill of watching her so open, her thighs wide. I ease out, stiffen two fingers together and edge them into her centre. She groans, but before I've time to retreat, thinking it's too much, she's grabbing my hand to push me deeper.\n\n'Oh fuck.' \n\nI'm not sure I've ever seen anything more erotic.\n\nI look back at her face, my eyes maybe as big as hers are.\n\nWe kiss. Hard. Pressing against each other with urgency. The softness of her mouth. The hot, tight muscles clenching around my fingers, her hand working with mine to fuck them as deeply as they can go. Her hips rising high. My cock desperate for her.\n\nI pull away, fumbling around to find the condom that's somewhere between us. She watches while I push it down onto my cock and move myself between her legs. I dip my hips down, snatching at my breath when she takes hold of me and pushes us together, rolling herself around me. I guess she understands about lubrication from all of that sex education. \n\nIt's almost too much.\n\nWe're centred, her hand around me. I push, but there's too much resistance. I try again and groan, pressing my eyes shut.\n\n'I'm not going to hurt you, Janey.'\n\nI push a hand flat underneath her, lift her, and adjust my angle. There's a bit more give as I flex my hips again. A low, guttural sound from Janey. A look of pure concentration on her face. I flex again. Still too tight. I lean over her to kiss the underneath of her jaw. A light bite of her earlobe."
    ],
    "authorname": "Sara2000Z",
    "tags": [
        "old friends",
        "first time",
        "sex on the kitchen table",
        "herculaneum"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-neapolitan-question"
}