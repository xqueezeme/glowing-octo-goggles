{
    "title": "Lynn",
    "pages": [
        "I met Lynn ten years ago when I decided to join a transplant recipients support group. At the time, I felt the need to be with others who had gone through the same thing as I did in March of 1984. My remaining kidney had stopped functioning in November of 1983 and after four months of dialysis, my brother volunteered to give me one of his. I also felt that I had something to give, something to share with others who perhaps had yet to receive the gift of life and wanted more information. It was also a time when I had the urge to go out in public and promote organ and tissue donation and transplantation.\n\nWhen I called Life Connection of Ohio, our local organ procurement organization, they put me in touch with Walt, the president of the support group and a liver transplant recipient. He had a very soft, soothing voice over the phone and I immediately thought I was speaking to Fred Rogers when he welcomed me with open arms to their group.\n\nA few nights later, I scanned the cramped meeting room at Miami Valley Hospital in search of someone who might fit the description of the voice I heard, but instead a petite woman with strawberry blond hair, dancing blue eyes and a wide smile bounced up to me like a puppy wanting to play fetch.\n\n\"Hi, I'm Lynn,\" she said as she stuck her hand out to me. I took it and her grip was strong. \"I had a kidney-pancreas five years ago,\" she continued.\n\n\"I'm Tony,\" I replied as our handshake ended. \"Kidney, fourteen years,\" I added.\n\n\"Wow, fourteen years!\" she bubbled. \"That's great.\"\n\nMy first thought was that no one could be this perky, but that was the last time I underestimated Lynn. She was that way all the time and this was just the start.\n\n\"Come on,\" she said as she took my hand again, \"I'll introduce you everyone.\" And so, Lynn introduced me to various individuals in the room, most of whom already had a transplant, while there were others who were on the dreaded waiting list. This group was not confined to just transplant recipients or those waiting. Husbands, wives, children, and friends also populated the room. To my amazement, no one in the room had been a recipient longer than me. In fact, Lynn and Walt both said they knew of only two people in the area who had been a recipient longer than me.\n\nThe meeting was very interesting as plans for their annual picnic were being formulated. At the urging of Walt, and I suspected Lynn had something to do with it, I managed to make it through the obligatory self introduction to the group. \n\nAs the months went by and I got to know the group better, it became clear to me that although Walt was the president, Lynn was the force that kept everything together. Her hand and her stamp was on everything the group did, be it the group's picnic, health fairs, or speaking engagements. I found myself gently pulled into activities by her that I otherwise wouldn't have given a second thought in the past. It was just her way. One month I would be grilling hotdogs to sell in a shopping center parking lot, all the while telling people about my transplant and the need for organ donation. The next month I would be speaking to a group of nurses about my stay in the hospital and what they could do to help patients with renal failure or ones who had just received the gift of life.\n\nWhen Walt's term as president ended and he didn't wish to have another two year term, Lynn was everyone's choice for president and she insisted that I run for vice-president. Not expecting to win because I had not been with the group very long, I was pleasantly surprised when I did win.\n\nAfterward, she told me in private, \"We're going to do a lot of things and I'm going to need your help.\" I didn't know if it was a request or an order, but her infectious smile and determination was something I couldn't say no to. \n\nThere was always a plan, a creation in her mind that just had to come to fruition. Through sheer determination, spunk, and guts, Lynn set things in motion from day one. I've never been a witness to a more creative mind in my life. Her plans seemed to run on top of each other, spilling over and intertwining. Sometimes it seemed as if things would never get done, but they always found a way to do just that.\n\nAnd when a project came alive and jumped out at you upon its conclusion, Lynn would sit back with a smile on her face. \"See, I told you we could do it!\"\n\nIt was never about her. Everything she did, everything she created was about organ donation awareness and she never took credit for it, always deflecting attention to someone else or the group as a whole. Even if she thought of 95% of a project or event, she would say that it was John's idea or Dennis'. That was the beauty of her.\n\nI got to know her better little by little as we worked to make our group stronger and more known in the community. I got to know her husband, Jim, and her German Shepherd, \"Shep\". Naming her dog was the only thing I know of that wasn't very creative by her and I teased her about it from time to time.\n\nI began to recognize her inner strength even more when she began to have problems with her transplanted pancreas. It was never a big deal to her and she rarely talked about it. When it was decided that the pancreas had to be removed, Lynn took it in stride. \"I've been a diabetic my whole life,\" she explained to me, \"so going back on Insulin is no big deal.\" And so she did and didn't look back.\n\nAs the years went by, I admired her more and more for her tireless efforts for our group and the transplant community as a whole. Fatigue was a foreign word to her and she always felt that there was more to do and she was the person to do it. No matter what the project, I couldn't say no to her because I could see we were making a difference, something I wanted to do from the very start. She had drawn me into her world and held me gently so I couldn't leave.\n\nIt was in the spring of 2002 when she was diagnosed with bone cancer in her legs. She was very matter of fact about the whole thing and didn't wish to make a big deal out of it. \"I'll be cured, everything will work out,\" she'd say and she was so convincing that we took it for granted that she would beat it.\n\nRadiation treatments and chemo therapy followed for the next year as she went through the hair loss, pain, and nausea. I never heard a single complaint from her. Sometimes she would say she was tired or needed to take a nap, but that was it. Her hair loss brought out her wicked humor with, \"I'm glad I don't have to shave my legs anymore.\" or \"No bikini wax for me!\" She always found a way to make us feel better about her illness.\n\nHer right leg responded well to the treatments, but the same couldn't be said for her left. After countless surgeries and treatments, she decided she had messed around with it long enough. \"Cut it off so I can get back to normal,\" were her words. And so they cut it off below the knee. Within weeks after the surgery, she was back to her bubbly, vivacious self.\n\nHer first prosthesis was big and cumbersome, but that didn't stop Lynn from working 40 plus hours as a store manager. I visited her from time to time to see how she was getting along and I was always greeted with a smile and a hug. After a long battle with her insurance, she was fitted with a modern, lightweight prosthesis which gave her much better mobility. With slacks on, one could barely see a difference between her and a person with two legs. In warm weather, she always wore shorts and never hid her artificial leg from anyone and was more than pleased to talk to people about it. Every time she saw someone with a prosthesis, she made it a point to seek them out and talk to them.\n\nIn the beginning of this year, Lynn began to have pain in her right leg again. We all hoped and prayed that it was something else besides cancer. I mean, hadn't she beat it before? How dare it try to come back! But, it had returned and it was stronger than before. Disappointed, to say the least, Lynn met it head on and fought it as hard as she could. Radiation and chemo treatments once again ruled her life and through it all, she remained optimistic that she would defeat it once more.\n\nBy March, the cancer was spreading and amputation was discussed again. \"Oh well,\" she sighed in resignation, \"I guess I need to learn to walk all over again.\" Although her doctors wanted to amputate above her knee, she insisted they amputate below the knee so she could walk with two artificial legs easier. And so it was done.\n\nShe was in great spirits for the next few days as she discussed getting better, learning to walk again and new projects she wanted to start. However, bad news followed as new tests revealed that the cancer was in her knee and she needed another amputation above the knee. For the first time I had known her, I saw defeat in her eyes and it saddened me greatly.\n\nWe tried to buoy her confidence and pick her up as she had done so often to anyone who needed their spirits lifted. It appeared to help as a more confident Lynn left us to be wheeled into the operating room.\n\nThe next few days and weeks were difficult as Lynn struggled with her newest setback with strength and determination. Her diabetes became more and more difficult to manage, wildly fluctuating from time to time. Friends and relatives stopped by her home during the day as Jim worked so that she wouldn't be alone very often. One time, she slipped into a diabetic coma and had to be revived by a paramedic squad. Through it all, she remained upbeat and her sense of humor returned with a vengeance. She constantly poked fun at herself and would not let anyone see the pain she had.\n\nAs April ended, Lynn developed a fever and it was discovered that she had developed a blood infection, presumably from her latest surgery. And so, it was back into the hospital one last time.\n\nIt never occurred to me, never entered my mind that Lynn would ever be defeated by illness no matter how severe. Maybe I wouldn't allow myself to think the unthinkable. Things just didn't go right from the start and with each visit I could see her getting weaker. She never complained of the pain she must have had. Lynn would only say she was tired and needed to take a nap. That was the beauty of her. The infection wasn't getting better and the cancer was back, attacking her with a renewed voracity. We all tried to remain optimistic.....\n\nIt was still a horrible shock when I received the phone call. I was numb as I stumbled to a chair to sit. It just couldn't be. How could it be? The last time I saw her, she was joking about how she would be unbalanced when she tried to walk again because of the unevenness of her amputations. Her spirit was willing, but her body finally let her down. After my friend had hung up, I continued to sit and ponder Lynn and her life and what she meant to me. And that's when the tears began too flow.\n\nI don't remember too much about her funeral. Standing in line to talk to her husband, I saw Lynn in her casket dressed in a cream colored business suit. It didn't look like her, didn't look like the vivacious, spunky, strawberry blonde I had known for ten years. Another cruel trick of death, I guess.\n\nI hugged Jim and offered my condolences to him. He smiled and nodded. We both knew she was out of pain and it was okay now. I went to the casket and gazed at her one last time. I kept wanting her to wake up and tell me of another idea she had for a fundraiser or how she needed me to speak at a Rotary Club. But, I knew it was for the best that she was at peace and out of pain.\n\nI wish I could say I was strong enough not to cry during the service, but I would be lying. I wasn't alone. The only consolation was knowing Lynn would have been cussing me out for feeling sad instead of happy for her. I could see her in my mind walking around completely healthy and that was good. That helped.\n\nI still think about her from time to time and wish I had known her longer than ten years, but I can't complain. I was lucky to know her and she'll always have a special place in my heart and memories. You can cuss me out all you want, Lynn, because I still miss you."
    ],
    "authorname": "Tony155",
    "tags": [
        "cancer",
        "transplant",
        "support",
        "group"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lynn-2"
}