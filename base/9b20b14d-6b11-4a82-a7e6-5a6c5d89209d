{
    "title": "Vanessa and Veronica Ch. 09",
    "pages": [
        "Louise looked around the foyer of Patrick's house. She had never seen the like other than in magazines and on television, but this was real. It struck her for the first time that people really did live like some of the people on television. She looked at the immaculate floor and kicked her shoes off then looked at the walls that were covered with beautiful paintings that had to be replicates.\n\n\"Louise?\" Patrick called, \"You don't have to take your shoes off unless you want to.\"\n\n\"You live here?\" she asked seeming not to hear the statement about the shoes.\n\n\"Yes this is Kevyn's and my home and now yours for as long as you wish it to be.\" Patrick replied taking her bag from her. \"Come on, I'll show you where things are and introduce you to any staff that's still here.\"\n\nLouise looked over at Kevyn who seemed as surprised as she was but was doing a better job at hiding it. The sisters held hands as they followed Patrick through the house stopping any staff person that he saw. Finally, they were at the bottom of the stairs.\n\n\"Louise, your rooms are upstairs but you are free to go to any part of the house. If you need something and we don't have it just ask and it'll be taken care of.\"\n\nLouise could only nod as she looked around her still not believing that she would be living here at least for a while with Kevyn and Patrick. They followed Patrick up the stairs where he waited for them to catch up before going into a room.\n\n\"This is your bedroom.\" Patrick said setting her bag down. \"If you don't like how it's decorated, feel free to change anything that you don't like.\"\n\nLouise and Kevyn looked around the room that would have held Louise's bedroom at least five times. The walls were an eggshell white with white borders and had paintings on the wall. The king-sized bed was already turned back with chocolates on the pillow. \n\n\"There's plenty of closet and dresser space and as I said, make yourself at home.\" Patrick said as he walked through the room. \"The bathroom is here and it's fully stocked with towels and thing s like that.\"\n\n\"This is all so beautiful!\" Louise exclaimed as she took in the large tub complete with jets and the shower that looked as if it could hold six people without a problem.\n\n\"I'm glad that you like it.\" Patrick said with a smile, \"Are you alright for a few moments? I would like to show Kevyn our rooms.\"\n\n\"I'm fine.\" Louise replied as she continued to look around the room as if she was in a dream.\n\nPatrick took Kevyn's hand and led her from Louise's room to the stairs.\n\n\"Our rooms are downstairs in the basement if you want to call it that.\" Patrick said as they walked. \"Tomorrow I'll give a more thorough tour but there is a room that I want to show you.\"\n\nUp until this point Kevyn hadn't spoken. She like Louise knew that people lived like this but she had never seen it in person. She allowed Patrick to lead her into a room that looked like a small movie theater complete with a concession stand just like at a real movie theater.\n\n\"Remember those championship parties that you talked about having?\" he asked.\n\n\"Yes.\" Kevyn whispered.\n\n\"This is where they would happen, the screen goes up and there's a large screen television behind it.\"\n\n\"You lived here alone?\" Kevyn asked.\n\n\"I did until you and Louise.\" Patrick replied taking her into his arms, \"What's wrong?\" he asked when Kevyn didn't say anything.\n\n\"Nothing, I just... this is all new to me I guess.\" she replied.\n\n\"You're lying.\" Patrick said kissing her, \"tell me the truth.\"\n\nKevyn hesitated before speaking, \"I just don't want you thinking that I'm here because you have money.\"\n\n\"Kevyn, I know that.\" Patrick said.\n\n\"And Louise, she really likes you and she's not here because of your money either....\"\n\nPatrick interrupted her with a kiss, \"Stop worrying, I know that you love me and that even if I had no money that you would still be with me. As far as Louise goes, I like her too; she's as easy to read as you are. Now let's go to our rooms.\n\nHe led her from the theater to a set of stairs that led downstairs.\n\n\"Lights\" he said softly and the stairway was illuminated with the soft glow of the overhead lights. They made a right at the bottom of the stairs and walked until they reached an ornately decorated door. \n\n\"This is the entrance to our rooms.\" Patrick said as he opened the door. He took Kevyn's hand and pulled her inside. \"If there's anything that you don't like just say the word and it will be taken care of.\" he said as he watched her look around the room.\n\nThe room was even bigger than Louise's and had an office in addition to a small kitchenette. The bathroom was larger as well. The counter had all of the skin and hair care products that she used lined up in a row. \n\n\"Did I forget anything?\" Patrick asked.\n\n\"No.\" Kevyn whispered.\n\nPatrick put his arms around her from behind and nibbled at her neck, \"I can't wait to get you into that bed.....\"\n\nPatrick swore when his cell phone rang. He looked at the caller ID and saw that it was Ethan. With one arm around Kevyn, he listened as Ethan told him about Veronica's kidnapping. Kevyn turned in his arms, wrapped her arms around his waist, and waited.\n\nPatrick hung up and blew out a breath. He hadn't wanted Kevyn and Louise to meet their new family like this....\n\n\"Patrick what's happening?\" Kevyn asked.\n\n\"My niece Veronica has been kidnapped.\"\n\n\"Oh my god! Do you know by whom?\" she asked.\n\nPatrick hesitated, \"Yes... not his name but, Kevyn, it's the mate to one of the women that one of us raped.\"\n\n\"What? Why did he take Veronica?\" she asked confused.\n\n\"He wants us to suffer as he has....\"\n\n\"He's going to kill her?\" Kevyn asked shocked.\n\n\"Unless we find her first.\" Patrick replied, \"I'm sorry baby but I've got to get over there, you can stay here with Louise if you want....\"\n\n\"I'm going with you.\" Kevyn interrupted and I'm sure that Louise will want to as well.\"\n\nWhen Patrick started to protest, Kevyn interrupted him, \"What did you tell me about mates and being able to depend on each other?\"\n\n\"Kevyn, I'm sorry.\" Patrick said.\n\n\"It's alright now let's get Louise and go.\"\n\n******\n\nThirty minutes later Patrick, Kevyn and Louise were walking into Ethan's front door. Louise looked around once again amazed by the fact that people really lived as the Sinclaires obviously did. Kevyn paid the house no mind as she held Patrick's hand as he walked into the living roomy where a large group of people was congregated. The fact that they were all vampire didn't faze Kevyn but she did wonder what Louise's reaction would have been had she known.\n\nShe immediately noticed the anxious atmosphere in the room and saw that some of it was directed at a little girl sitting on a couch. Kevyn jumped when the girl jumped off the couch, took a running start and leapt up into Patrick's arms with a squeal of delight.\n\nA few minutes later, the introductions were over and Katrina told Ethan that Victoria thought that she could talk to the vampire that had Veronica. Patrick's reaction was the same as Ethan's and Katrina; he wanted Victoria nowhere near the vampire but he did wonder if it was possible to find out the name of the vampire.\n\nAfter making Victoria promise not to attempt to contact the vampire, Ethan and Katrina finally agreed to let her contact Veronica again. Several minutes later, she had the information.\n\n\"His name is Bradford Jefferson and the woman was his mate Rosie.\" Victoria said, \"And she said to tell papa that Uncle Patrick knew her.\"\n\nPatrick felt as if the floor just dropped from beneath him, the woman had been one of his victims and now her mate wanted vengeance. He sat in a couch pulling Kevyn down into his lap and hugged her, what needed to happen was clear, he needed to talk to the vampire. There was nothing that he could say or do that would change what happened but he had to try. He hugged Kevyn closer to him and asked Victoria to tell Veronica that he wanted to talk to Bradford; he had his answer in seconds, \"no\".\n\n\"Contact her again!\" Patrick insisted.\n\nVictoria tried and couldn't get through, \"she won't let me in.\" she said as she tried again.\n\nKevyn didn't know what to do for him other than offer any moral support that she could. She saw Louise talking to a handsome man in a corner and wondered who he was. Now wasn't the time to ask, Patrick and his family was hurting and Louise seemed to be comfortable with the man.\n\nKevyn gripped his hands in hers, \"tell me what to do to help.\" she said.\n\n\"You're doing it.\" Patrick replied as he returned the tight grip on her hands.\n\nThey all jumped when Victoria announced, \"I know where she is!\"\n\nAll eyes went to Victoria when she announced for the second time that she knew where Veronica was.\n\n\"Where?\" Rik asked urgently.\n\n\"It's far from here; I think that he used to live there.\" Victoria replied.\n\n\"How far?\" Ethan asked.\n\n\"Three hundred miles, maybe.\" Victoria replied.\n\nEthan, Patrick, Rik, Luc and Martin all got ready to vanish but Victoria stopped them, \"but you won't find them.\" she said dejectedly.\n\n\"Why not?\" Rik asked confused. \"You just said that you knew where she was.\"\n\nVictoria started to cry partly from exhaustion and partly because she couldn't be any more specific than she was. Jamie moved closer to her on the couch and toyed with a braid as he looked at Rik.\n\n\"I'm sorry that your mate is missing but she is exhausted, she has done the work of someone much older than she.\"\n\n\"I'm ok.\" Victoria said tiredly, \"I can try again.\"\n\n\"No you won't.\" Ethan said firmly. \"Just tell us what direction to go and we'll take it from here.\"\n\n\"But papa...\"\n\n\"No buts baby.\" Ethan said sitting on the other side of her and hugging her, \"Jamie is right, you're exhausted and you were absolutely phenomenal! But you need to rest now.\"\n\nVictoria finally gave up. She was beyond tired. She resigned herself to waiting and praying along with the others who would also be waiting.\n\nThey were about to vanish again when she stopped them.\n\n\"Wait!\" she called out.\n\n\"You have to take her and her.\" she said pointing at Kevyn and Louise who was still in the corner talking with Nathan Sinclaire.\n\n\"What?\" Patrick asked, \"No....\"\n\n\"You have to.\" Victoria insisted.\n\n\"Why?\" Patrick asked, \"Why do we need them?\"\n\n\"I.... I don't know.\" Victoria confessed. \"I only know that you do.\"\n\nEveryone looked at each other not sure of what to do. By this time Nathan realized that something was happening and that it somehow involved Louise and he didn't like it. He stood behind her not quite touching her but close enough that he could feel the heat radiating from her body.\n\n\"What's happening?\" he asked.\n\n\"You want to take a hu.... Woman along to rescue Veronica?\" he asked when he was brought up to speed.\n\n\"Want to? No.\" Patrick replied, \"I want both her and Kevyn to stay here where it's safe but Victoria says that they have to go with us.\"\n\nThe debate as to whether Louise and Kevyn should go went on for almost ten minutes before Kevyn spoke up.\n\n\"I'm going and that's all there is to it, I can't and won't speak for Louise but even though we don't know each other, we're family and if I can help in some way, then I will.\"\n\nLouise not wanting to be alone with people that she didn't know decided to go with Kevyn.\n\n\"Then I'm going too.\" Nathan said putting his hands on Louise's shoulders.\n\n\"Is there enough time to drive?\" Rik asked anxiously.\n\n\"Rik, \" Ethan said, \"You, me, Luc and Patrick will go ahead and see if we can find him, the rest of you get there as fast as you can.\"\n\nSeconds later, four of the rescue party was gone leaving Nathan and Martin his father to get Kevyn and Louise to the designated area.\n\nRemembering that Louise didn't know that her new family was vampire, the four of them vanished from the garage.\n\nLouise looked at the remaining group realizing that there was something very different about them. For one thing, they were all drop dead gorgeous and the woman who was supposed to be Patrick's mother looked not much older than her sons....\n\n\"Come on Louise, time to go.\" Kevyn said interrupting her musings.\n\n*******\n\nVeronica didn't flinch as Bradford approached her at what seemed to be a snail's pace. She didn't know if the intent was to rattle her or not but it wasn't working and she told him so.\n\n\"Are you trying to scare me?\" she asked, \"because if you are, it isn't working.\"\n\nBradford stopped in his tracks and eyed her for several long minutes before he began to move again.\n\n\"So brave.\" he murmured as he inched closer to her.\n\nVeronica watched his approach not sure of what he was going to do. The idea of telling him that she knew who raped Rosie crossed her mind but she discarded it. It would have done nothing except buy the others a little more time to find her and it wouldn't have been long before Bradford figured out that she had no plans to tell him anyway.\n\n\"Tell me what you were like before this.\" she said surprising him.\n\n\"An attempt to stall for time?\" he asked again pausing.\n\n\"Curiosity.\" she replied. \"I'm sure that you know that my sister and I are scientists and that we're trying to figure things out...\"\n\n\"You mean that you're trying to find a reason to exonerate your family for what they did.\" Bradford interrupted.\n\n\"I can see why you would think that.\" Veronica replied, \"And maybe you're right to some degree but as I've mentioned before, there are other families that teach the same thing, we're trying to help everyone.\"\n\n\"It's too late for that....\"\n\n\"For God's sake!\" Veronica exclaimed, \"Don't you think that I know that? Rosie isn't the only one who died because of what my family did and you aren't the only vampire without a mate because of it! If I could have been born earlier or if I had someway to go back in time to fix this and to save her and others I would! However, the reality of it is that I can't change what happened any more than you can.\n\nLook, I'm sorry and yes, I know that my apologies mean nothing to you but I have to tell you that what sympathy I have for you is wearing thin. I'm going to make my offer to you one more time, unchain me and if I escape you disappear and we never hear from you again and that includes sending anyone in your place.\"\n\n\"And I am just supposed to fall to my knees in thanks?\" Bradford asked amused.\n\n\"It's either that or you die.\" Veronica said nonchalantly, \"but consider this, what's going to happen if my family finds me dead chained to a chair? By the way... what kind of material is this?\"\n\nShe didn't give him a change to continue, \"As I was saying and correct me if I'm wrong but you're planning on a quick death aren't you? If you kill me like this, the chances of that happening are nil and it's not even my father who you really need to be afraid of.\" \n\n\"How quickly I die is of no consequence.\" Bradford replied with a small smile, \"and if it is a slow painful death it will only be an extension of the pain that I have felt for decades and then the centuries before I found Rosie and then lost her.\"\n\n\"A martyr? You want to be a martyr?\" Veronica asked. \"You want to go down in history as another victim of the Sinclaire's is that it?\"\n\n\"No!\"\n\n\"Really? Are you going to tell me that you don't have what you were planning to do documented somewhere?\" she asked. \"Are you going to tell me that you didn't give a copy or copies to someone to make public when this is over? \n\n\"For someone who is chained to a chair you are how should I say this...\"\n\n\"Mouthy?\" Veronica offered. \"Yes well, I've been told that but that doesn't address what we're going to do here does it? Do we have a deal?\"\n\nIf it weren't for the seriousness of the situation, he would have laughed. He had to admit that he liked the young woman that he had chained to the chair even if she was a Sinclaire. For the first time he wondered what it must have felt like for her and her sister to know what their family was, they were victims of a sort too.\n\nThat didn't change anything because they still ended up happy, well adjusted and with mates while he suffered in pain and loneliness. By rights, he should have ended his life when Rosie died but the desire to see the Sinclaires suffer overrode that desire, it just took awhile in coming.\n\nWas he a martyr? She had been right on one point; he did have his plans documented so that everyone would know what happened to him...\n\n\"Brad!\" Veronica called, \"what are we doing here?\"\n\nHe considered his options. He could just let her go and leave, kill her and then himself or do as she proposed which was the fair thing to do. That was another thing that she had been right about, it was about fairness, one life for another.\n\nVeronica saw the indecision in his eyes but didn't comment as she tried to work her hands out of the chains. As of yet she had made little progress but given enough time... if she could get him to let her go she could vanish.\n\nBradford looked at her and smiled, \"alright, I agree to your terms.\"\n\nVeronica stilled her hands, she really hadn't expected him to agree and she wanted to know why he was.\n\n\"It's as you say,\" he replied, \"I am a fair man.\"\n\n\"No,\" Veronica said, \"there's more to it than that. \"You don't think that I can get away, that's why you agreed. You wouldn't take the risk otherwise.\"\n\n\"I'm agreeing to your terms, what more do you want?\" he asked.\n\n\"Yes you are and really? The reasons don't matter although I have my suspicions. So let's do this shall we?\" Veronica said and waited.\n\n*******\n\nThe drive to where Ethan and the others were waiting seemed to take forever. Kevyn looked out into the darkness her mind on Patrick. She had to wonder to what lengths he would go in order to ease his sense of guilt, would he offer himself in Veronica's place? He would... she knew it, she could feel it, and she could almost hear his thoughts although they sounded fuzzy. She also knew that they had to hurry... she could hear the thoughts of someone else as well; Veronica was running out of time.\n\nShe didn't want to say anything, she knew that Martin understood that they needed to get to wherever they were going but she thought it, \"hurry, hurry, hurry....\"\n\n\"I'm going as fast as I can.\" Martin replied without thinking about the fact that she hadn't spoken aloud. The realization came about 10 minutes later.\n\n\"Kevyn, can you hear me?\" Martin thought to her.\n\nKevyn looked over at Martin shocked, \"how did I do that?\" she asked verbally.\n\n\"You must be a telepath and a strong one in order for you to hear me, have you tried it with Patrick?\"\n\n\"No, I didn't know that I could even do it with you.\" Kevyn replied. \"What does this mean?\"\n\n\"It means that I think that I understand why you needed to come with us.\" Martin replied, \"It also means that once this is over Patrick needs to teach you how to block out the thoughts of others.\"\n\n\"Do you think that I can talk to people that way too?\" she asked.\n\n\"Yes, I know you can, I heard you.\" Martin replied. \"Have you tried to hear Patrick?\"\n\n\"I can hear him but it's fuzzy, how can I do this?\" Kevyn asked.\n\n\"My guess is that it's a latent psychic gift, being Patrick's mate woke it.\" Martin replied.\n\n\"You think that I'll be able to talk to the vampire that has Veronica don't you?\" Kevyn asked telepathically.\n\n\"Yes but what I don't understand is why your sister had to come.\" Martin replied.\n\nKevyn didn't understand it anymore than Martin did and she worried for Louise's safety. She glanced in the back to see Louise looking out of the window and Nathan watching her. Taking a chance, Kevyn decided to see if she could read Nathan's thoughts. Immediately Nathan's gaze went from Louise to Kevyn's, there was no warmth in them as he spoke to her telepathically.\n\n\"I understand that you are new to all of this but what you are doing is nothing more than eaves dropping.\"",
        "\"Nathan...\" Martin started to say.\n\n\"No, he's right.\" Kevyn replied telepathically, \"I'm sorry, it's just that she's my sister and I wanted to know what you were thinking about her.\"\n\n\"All you had to do was ask.\" Nathan replied, \"Your apology is accepted but please don't do it again.\"\n\nLouise felt the tension in the car but attributed it to the situation at hand not once thinking that she was partially the cause.\n\n\"It's going to be alright.\" she said softly to no one in particular. It was a sentiment that she had used often with her mother when she sat up with her as she stroked her hand until she slept. Those five words seemed to calm her more than any anti anxiety medication that their mother always kept within her reach. And it had the same effect now, the tension in the car dissipated and Louise went back to looking out of the car window even though she couldn't see anything.\n\nKevyn closed her eyes and sent a thought to Patrick not knowing if he could hear her or not.\n\n\"Don't you dare do anything stupid!\"\n\n******\n\nPatrick, Rik, Luc and Ethan walked around the general area in which Victoria sent them. None of them could sense or hear anything out of the ordinary. Rik made several attempts to reach Veronica but failed each time. He wished that they had brought Victoria with them but knew that neither Ethan nor Katrina would have allowed it. It was enough that one of their daughters was in danger without risking another. Each of them headed in a different direction and stopped every few seconds to scan and then listen. An hour later, they still were no closer to finding Veronica than when they started.\n\nPatrick was almost overcome with guilt, He had a mate and she was safe but he had taken the mate of another. For a brief moment, he thought to offer himself to the vampire in exchange for Veronica. If he hadn't found Kevyn, he would have with no questions asked but fair or not, he found her and he wasn't about to leave her.\n\n\"Don't you dare do anything stupid!\" ricocheted in his head so suddenly that he jumped.\n\n\"Kev?\" he whispered.\n\n\"Yeah and I mean it, don't you even think about doing whatever it is that you're thinking about doing.\"\n\nUp until that point, Patrick wasn't sure of why Kevyn had to be there but now he understood. Of all of them other than Victoria, she would be the one that could talk to Bradford and more than likely sense him. He had the same question that everyone else had, where did Louise fit into the scheme of things? He hadn't wanted her to come, but when Nathan stepped up he felt better about it, Nathan would keep Louise safe.\n\nWhile they waited, Patrick told them why Kevyn had to come with them.\n\n\"What about her sister?\" Luc asked.\n\n\"I have no idea.\" Patrick confessed.\n\nAn hour later, Martin was parking the car not far from where Ethan stood waiting with the others. Kevyn was out of the car and halfway to Patrick before the others were out of the car.\n\n******\n\nBradford made his way to Veronica, reached out a hand and pointed a finger. The chains holding Veronica fell to the floor with a loud clang.\n\n\"You never did say what was in the chains.\" Veronica said as she stood, stretched and tried to vanish.\n\nBradford watched her amused, \"This room is warded, and you cannot leave here unless you go through that door. It is because of this room that your family won't be able to find you.\"\n\n\"That's why you agreed to my terms.\" Veronica said, \"so now what? You kill me?\"\n\n\"As regrettable as that is... yes.\" Bradford replied.\n\n\"You're sure that you have to do this?\" Veronica asked as she moved away from Bradford and toward the door.\n\nBradford already anticipating her plan moved with her but made no effort to touch her.\n\n\"Ronnie? Hang in there.\" Victoria said in her head, \"they're there but they need to find you.\"\n\nVeronica didn't acknowledge Victoria in anyway; she didn't want to tip Bradford off. She stopped moving and waited for him to make a move toward her.\n\n\"Just how old are you that you can compel another vampire to leave her place of safety?\" she asked as she formulated a plan on how best to fight him.\n\n\"I am well over a thousand years old.\" he replied, \"I can remember what the humans call the ice age and even beyond that.\"\n\nHe took a step toward her, smiling as she backed away. Veronica looked at Bradford and realized that he really was going to try to kill her. The time for talk was rapidly passing and she had to figure out how to kill a thousand plus year old vampire. She took a quick glance around the room looking for anything that she could use as a weapon. The only things were the chain and the chair on which she had been sitting. Of the two objects, only the chain would be of any use and that was if it would work on him.\n\n\"Veronica, use your brains!\" she admonished herself. There was no way that she could physically take him but maybe....\n\n\"So Brad, let's just say that I wanted to reconsider your offer.\"\n\nBradford stopped moving, \"I wouldn't believe you but let's just say that I accepted, why the change of heart?\"\n\n\"I'm a realist.\" Veronica replied, \"There's no way in hell that I could physically take you, I'd be dead in no time.\"\n\nBradford gave her a smile filled with regret and triumph as he moved so fast that Veronica almost didn't see him. She moved as fast as she could grabbing the coiled chain as she passed by. Before Bradford could touch her, she swung the chain and hit him on the side of the head. He let out a howl of pain as the chain connected and the blood began to flow from the cut made from the chain.\n\n******\n\nKevyn had just finished a very fast lesson on blocking unwanted interference when a stab of pain went through her head. She heard Bradford's howl of pain as it resonated through her head causing a pain that made her knees buckle. Patrick caught her as she dropped to her knees holding her head. She had just gotten a fix on him.\n\n\"He's hurt... I just heard him scream... she hit him with something.\"\n\n\"Which way?\" Rik asked anxiously watching his tone.\n\n\"That way.\" Kevyn said pointing east, \"there's a house about thirty miles that way.\"\n\n\"Are you alright?\" Patrick asked as he kissed her.\n\n\"Yes, no my head really hurts.\" Kevyn replied.\n\nPatrick kissed her forehead taking away the majority of the pain before helping her to the car.\n\n\"I'll see you there.\" he said as he helped her in.\n\n*******\n\nSeconds later, Ethan, Luc, Rik and Patrick stood at a spot thirty miles away from the last spot. They saw the house but it looked empty and Rik still couldn't reach Veronica. He knew that she still lived because Victoria was still able to reach her even though Veronica wasn't responding.\n\n\"Maybe there's another house.\" Luc offered.\n\n\"Maybe.\" Rik offered as he headed toward the house \"but I don't think so. My question is why can't we sense anything coming from the house?\" \n\nPatrick stopped Rik before he had gone too far, \"we need to wait for Kevyn...\"\n\n\"Would you wait?\" Rik asked.\n\nPatrick said no more, he would be doing exactly what Rik was doing, as would any of them.\n\n\"Just watch yourself,\" Patrick said, \"it concerns me that we can't sense either of them and he could have booby traps set.\"\n\nRik nodded and began to move slowly toward the house as he began to reach for Veronica in his mind.\n\nMartin and the others arrived a few minutes later; Patrick's first question was about Kevyn's headache.\n\n\"I'm fine, so this is the place.\" she mused as she looked around. \"He's in there.\" she murmured to herself.\n\n\"Veronica?\" Patrick asked.\n\n\"She's in there too and she's as mad as hell.\"\n\n\"That's good.\" Patrick replied.\n\n\"It won't help.\" Kevyn said taking Patrick's hand, \"no matter what you offer or say it won't change anything. He wants to die and it won't matter who he takes with him.\"\n\n\"Maybe I can talk him out of it....\"\n\n\"No, you can't\" Kevyn interrupted.\n\n\"What about Veronica? Will he kill her?\"\n\n******\n\nVeronica didn't give Bradford a chance to recover before she swung the chain again this time hitting him on the arm as he raised it to protect his head. He managed to grab the end of the chain wrapped it around his hand and pulled it hard. Veronica let go of the chain causing Bradford to fly backwards, her element of surprise was now gone. With nothing else to lose, she made a dash for the door and safety.\n\n\"Frightened now?\" he asked from behind her.\n\nShe stopped, turned around and faced him. The vampire who had shown regret at what he thought he had to do was gone. In his place was a very angry and homicidal vampire with which there could be no reasoning with but still she wasn't afraid of him.\n\n\"No, I'm not frightened.\" she replied as she edged toward the door. \"I'm simply trying to escape but I do have a question for you... I do get a last request don't I?\"\n\nBradford gave her a curt nod of permission to speak.\n\n\"Why didn't you kill me right away? I mean you compelled me to go with you so I wouldn't have resisted.\"\n\n\"I told you.\" he replied, \"I wanted to see Ethan Sinclaire afraid.\"\n\n\"Maybe that's part of it but I think it's because you want me to be afraid and I'm not. Even under compulsion you knew that I wasn't afraid and that intrigued you admit it, it still does.\"\n\n\"Be that as it may,\" Bradford replied, \"it changes nothing, the game ends now.\"\n\nVeronica kept her eyes on Bradford waiting for him to charge her, she didn't stand a snowball's chance in hell against him but she was going to go down fighting. \n\nTen seconds....\n\nTwenty seconds....\n\nAnd he hadn't moved, Veronica watched as the expression on his face went from determination to surprise. Taking the opportunity, she dove for the chain snatching it from his hand and wrapped it around his neck as she circled behind him and began to pull. \n\n******\n\nHolding on to Patrick's hand, Kevyn called Bradford's name several times until she felt a response. Even though she wasn't physically in the room, she felt his anger and the madness that possessed his mind.\n\n\"Don't kill her; she's done nothing to you.\" Kevyn murmured.\n\nLuc, Ethan, Nathan and Louise made their way to the house. Rik was already inside searching the seemingly empty house verbally and mentally calling Veronica's name. When the others got there, they took a portion of the house with Nathan holding Louise tightly against him.\n\n\"Geez, will you let go?\" she asked irritated but liking the feeling of safety.\n\nNathan released her only slightly making sure that she was away from any doorways.\n\n******\n\n\"Kev, can you tell where she is?\" Patrick asked.\n\n\"I don't know.... Wait a minute, the basement! There's a room down there...how do I know this?\"\n\n\"I don't know and we'll figure it out later.\" Patrick said as he called to Ethan and relayed the information.\n\nKevyn kept talking to Bradford hoping that she could keep him distracted enough to give Veronica a chance and the others more time to find her.\n\nSuddenly, she gasped and pain ripped through her head.\n\n\"Kev?\" Patrick called out just as she fainted.\n\n********\n\nVeronica continued to pull the chain as hard as she could but she was at a disadvantage because of the difference in their height, it wasn't until Bradford dropped to his knees that she was able to pull with everything that she had.\n\n\"You could have walked away!\" she said as she pulled, \"you could have taken Rosie and been gone!\" \n\nShe cried out when she felt the chain begin to cut through Bradford's neck. She was so intent on her task that she didn't hear the door open. She almost discounted the arms that she felt go around her and the voice whispering in her ear telling her to let the chain go. Instead, she pulled even harder; she wanted to destroy the vampire that threatened her and her family.\n\n\"Veronica, it is alright... let it go.\" Rik encouraged, \"we will finish it.\"\n\nSlowly the voice began to sink in and she let the chain slide from her hand watching as Bradford fell face first to the floor.\n\nEthan, Luc, Nathan and Louise were in the room seconds later.\n\n\"Veronica!\" Ethan called completely ignoring the barely alive vampire on the floor.\n\n\"Papa!\" Veronica called reverting to the childhood name that she hadn't used in ages. She broke away from Rik and flew into Ethan's arms. Close but not quite in tears, Veronica hugged Ethan, somehow for her to cry in this room with Bradford still in it meant weakness to her and after all, that she had been through with him she wasn't going to give him that satisfaction.\n\nThe only person in the room that paid any attention to Bradford was Louise. Perhaps it was because she wasn't aware of the history between the Sinclaires and Bradford that she felt compassion for him but she approached him. She could see that he was still alive but barely and she didn't think that anyone should die alone no matter what they did or didn't do.\n\nAs she started to move, Nathan grabbed her hand.\n\n\"What are you doing?\" he asked.\n\n\"He needs someone to sit with him.\" she replied as she pulled away.\n\n\"He doesn't deserve your concern.\" Nathan replied taking her hand again.\n\n\"Maybe he doesn't but I'm going to give it anyway now let me go.\" she said in a voice that surprised her.\n\n\"I'm coming with you.\" \n\n\"Fine.\" she replied and walked over to Bradford with Nathan close on her heels. When she reached him, she sat on the floor and looked into his face. She didn't see a face filled with rage or anger but a handsome face filled with pain and sorrow. Without saying anything, she smoothed Bradford's hair away from his face, took a rapidly cooling hand in hers, and began to stroke it murmuring, \"It's going to be alright now.\"\n\nAs Bradford lay on the floor dying, he wondered how it had gone so wrong so quickly. He should have killed the Sinclaire woman immediately but it was as she said, he had been intrigued by her courage. He was going to die, they would continue with their lives, and he and Rosie would be nothing more than a memory to them. \n\nHe felt surprise and then relief as someone; a woman sat next to him and smoothed his hair back away from his face as she murmured small comforts to him. The last thing he remembered before he died was the woman, a human woman he now realized, was holding his hand and telling him that \"it's going to be alright now.\" those words soothed him in a way that he didn't understand.... Then, it was over.\n\nNathan helped Louise up and led her away from the body before it began to turn to dust. When she tried to look back, he kept her moving forward. Now wasn't the time or the place to explain things to her but he did feel pride that she was his even though she didn't know it. Ethan and Luc searched the basement and found Rosie's corpse dressed in a blue dress with matching shoes.\n\n\"We'll send someone back and have her properly buried.\" Ethan said as he walked away.\n\nRik and Veronica followed by Nathan and Louise had already left the house and were on the way back to the car by the time Ethan and Luc left the house. \n\nRik picked Veronica up and carried her in spite of her protests that she was fine.\n\n\"I don't care if you are fine; I am going to care for you.\"\n\nShe finally gave up and laid her head on his shoulder, she was very tired.\n\nEthan took out his cell phone and called Katrina who anxiously answered on the first ring.\n\n\"We've got her and she's alright, yes, sweetheart she killed him. We'll be home soon, I love you too.\"\n\nEthan was proud of Veronica and the courage that she displayed, he felt sorrow that she had to take a life no matter how justified it was. He also had to wonder if there were others with the same agenda as Bradford's and how soon it would be before one or more of them came forward.\n\nFor the moment though, all of his girls were safe and that was very mattered.\n\n*******\n\nKevyn woke up sitting in Patrick's lap in the back seat of the car.\n\n\"What happened? Veronica? Is she alright?\"\n\n\"We got her thanks to you and Victoria.\" Patrick said, \"How's your head?\"\n\n\"Better, I've never fainted before, I feel kind of silly.\" Kevyn replied.\n\n\"Don't, you expended a lot of energy.\" Patrick told her, \"You fainted to protect yourself.\"\n\n\"You're sure that she's alright?\" Kevyn asked again.\n\n\"She's fine,\" Patrick assured her, \"You were phenomenal!\" he added, \"you just stepped up to help us without question.\"\n\n\"You mean like you did with my totally crazy family?\" she asked. \"Patrick your family is my family too and I will do whatever I can to help keep all of us safe so no thanks alright?\"\n\n******\n\nEveryone was waiting in the living room for the first group of rescuers to arrive. As soon as Veronica saw Victoria, she ran over to her, picked her up and kissed her face all over until Victoria was giggling.\n\n\"Thank you pumpkin!\" Veronica said repeatedly.\n\nEthan hugged and kissed Katrina assuring her that it was over and then hugged and kissed Vanessa before taking Victoria from Veronica's arms.\n\n\"I am so very proud of you!\" Ethan said hugging her tight. He didn't miss the look of approval that Jamie Donahue was giving Victoria and was grateful that their mating wouldn't happen for several more years, he needed to catch his breath from the events of the past few weeks.\n\nVanessa and Veronica hugged, it was then that Veronica began to let go. It wasn't about being afraid, it was about the fact that she, a physician killed someone, that he was going to kill her didn't matter. She had the feeling that it would be a long time before she reconciled the two parts of her. She also suspected that at some point, she would have to talk with someone about her time with Bradford but not now, it could wait.\n\n\"Come Veronica,\" Rik urged, \"you need to eat and rest.\"\n\n\"No, I want to meet Uncle Patrick's mate and to thank her and her sister.\"\n\n\"It will be another two or three hours before they get here, you can rest until then.\" Rik said and tried to lead her away.\n\n\"I'm fine and I'm waiting for them.\" she said firmly.\n\nThree hours later, the rest of the rescue party arrived tired, hungry and closer to sunrise than they liked. Louise didn't get what the big deal was but said nothing as they sped home. Once again, the thought occurred to her that there was something very odd about the Sinclaires. She made a mental note to ask Kevyn about it as soon as she could catch her alone. As soon as they were in the door, Veronica rushed to greet them. She didn't give Kevyn a chance to say anything as she threw her arms around her and hugged her.\n\n\"Thank you for everything that you did.\"\n\n\"You're welcome; I'm glad that you're alright.\" Kevyn said returning the hug.\n\nVeronica went to Louise next and hugged her too.\n\n\"I don't know what you did but I know that Bradford felt some measure of peace when he died. Thank you for coming with them to rescue me.\"\n\nLouise had reverted to her shy, quiet self and found herself embarrassed by all of the attention. \"You're welcome.\" she said not knowing what else to say.\n\n\"You're tired.\" Rik said from behind Veronica, \"let's rest and we can all talk later.\"\n\n*******\n\nOnce alone in their room, Rik crushed Veronica to him. While she was missing he made several promises to himself, she was never going anywhere alone again topped the list, the second thing was that he would never complain about her messiness again, he had been very close to never seeing her again and in the scheme of things how neat she was or wasn't just didn't matter anymore. He would gladly spend the rest of eternity picking up after her and not utter a single word of complaint.\n\nNow that things were calming down he could deal with his own sense of guilt. He should never have left her go to the kitchen alone but it was so close... Ethan's doubts had been misplaced, instead of Luc failing to protect his mate, it was he but it would never happen again.\n\n\"It wasn't your fault.\" Veronica said, \"it was only a matter of time before he got one of us and truth be told I'm glad that it was me as opposed to Victoria, Vanessa or mom but it's over and we can move on.\"",
        "Rik nodded, she was alright for now and so was he but at some point she would fall apart it was just a matter of time. He knew her well enough to know that she wouldn't talk before she was ready and he would be ready when she was.\n\n\"You're waiting for me to fall apart aren't you?\" she asked reading his mind. \"Stop worrying because it's not going to happen. I'm sorry that I had to kill him, I didn't want to but he gave me no choice.\"\n\n\"I know that...\"\n\n\"Hear me out.\" she interrupted, \"while we were waiting for the others to come back, I took the time to think about what happened. When I was with him in that room, the doctor part of me was in control; I tried to find out about him and even offered him a way out. When he came after me, the doctor part of me disappeared and Veronica the kidnap victim and the one who loves her family took over and she doesn't feel guilty about what she did. So no more worries and I want you to stop feeling guilty.\" she said as she began to unbutton his shirt.\n\n\"You need to rest.\" Rik said but made no move to stop her from undressing him.\n\n\"I need you more than I need rest, I've missed you.\" she replied.\n\n\"And I you but you really should...\"\n\n\"Be made love to.\" Veronica interrupted as she kissed his chest stopping to kiss each nipple as she wrapped her arms around his waist and stepped in close.\n\nRik tipped her face up to his and kissed her inhaling the scent of her, it came to him again just how close he had come to losing her. He deepened his kiss, pulled her even tighter against him, walked backwards to the bed, and sat when the back of his knees touched the side of the bed. \n\nVanessa straddled his lap and began to rub against Rik's hardness slowly at first and then building up speed. Suddenly they were both naked and touching each other wherever they could reach. Rik in a sudden move had Veronica beneath him. He looked deep into her eyes as he slid into her warm wetness and stilled, \"never again will I let anyone near you.\" he swore and then be began to slide in and out of her almost frantically. Veronica's movements were just as frantic and they reached climax quickly. The second time Rik refused to be pleasured in any way; he wanted to devote all of his attention to Veronica. He ran the bathtub for her, helped her in and slid in behind her.\n\nVeronica leaned back against his chest, closed her eyes and let the hot bubbling water soothe away the tension of the past hours. She only roused when Rik kissed her shoulder to wake her up, \"Come, it is time to put you to sleep.\" Putting her to sleep consisted of a massage with warmed lavender scented oil with special attention paid to all of her erogenous zones beginning with her nipples. He took his time teasing and pulling on them until Veronica whimpered for him to stop teasing her. He massaged her soft belly bypassing her mound even though she raised her hips as a hint as to where she wanted his hands to go next. Rik ignored her and rubbed her legs all the way down to her feet before making his way back up to her waiting mound. He inhaled deeply and then planted a soft kiss at the top of her slit smiling to himself when she jumped. He opened her lips with his fingers, took a swipe and then latched onto her clit sucking and licking until she came with a scream that started low in her throat. When it was over, Veronica turned on her side and was fast asleep in seconds not waking until early evening. Rik lay awake watching her sleep and wondered if she was dreaming of the past hours when she occasionally jerked her hands as if she was trying to free them.\n\n\"I am here.\" he soothed as he stroked her hands until they relaxed.\n\n*******\n\nEthan and Katrina sat up long after everyone else had gone to their rooms. Neither of them missed the way that Jamie had taken Victoria under his wing nor did the miss the way in which Victoria responded to him even though she didn't realize or understand it.\n\n\"He's going to have his hands full.\" Ethan remarked as he pulled Katrina into his arms.\n\n\"Somehow, I think he'll be able to handle her.\" Katrina replied, \"Do you suppose someone else will come for us?\" she asked changing the subject.\n\n\"It's possible.\" Ethan conceded, \"We hurt a lot of people but for the moment all is well, come on, time for bed.\"\n\nThe house was quiet as they made their way to their rooms at the far end of the house. For the first time since the fiasco with Bradford began, the house felt at peace. \n\n*******\n\nPatrick and Kevyn were the first ones in the kitchen and were in the process of preparing food for everyone when Louise walked in followed by Nathan. She gave Kevyn a shy smile as she said good morning and offered to help make the meal.\n\n\"You sit.\" Nathan said as he held out a chair for her, \"I'll help them, are you thirsty?\"\n\nKevyn looked at Louise and then at Nathan but said nothing. It would only embarrass Louise and besides, she was an adult and it was obvious that Nathan cared for her. The next to appear was Luc and Vanessa followed by Victoria who was looking a little lost.\n\n\"What's wrong pumpkin?\" Patrick asked.\n\n\"Nothing.\" she replied not understanding the reason for her mood.\n\nVanessa went to one of the kitchen counters and grabbed an envelope. \"Jamie left this for you.\"\n\nVictoria took the envelope already feeling better and quickly read the note before tucking it in her pocket. Patrick gave Vanessa a curious look and then understood when she winked at him. The last ones to show up were Rik and Veronica, which surprised no one. They went up to everyone, greeted and then hugged them whispering a heart-felt thanks in their ears.\n\nBoth Rik and Veronica gave Kevyn and Louise extra long hugs and welcomed them both to the family. Louise looked around the kitchen and began to wonder about them. Now that the dust had cleared, she had time she really looked at the people who were calling her family and then there was Nathan Sinclaire. No one, especially a man had ever paid so much attention to her and made her feel so safe. She and Kevyn needed to talk and soon.\n\nVeronica caught Vanessa's eye and met her in a corner.\n\n\"What do you think about pushing the wedding back a few weeks?\" Veronica asked, \"So much has happened and I think it would be nice to get to know Kevyn and Louise better.\"\n\n\"I agree and after the past few weeks, I want and need a breather.\" Vanessa said, \"how about a month?\"\n\n*********\n\nOne month later\n\nThings had settled down back to some semblance of normalcy. Rik, Veronica, Luc and Vanessa stayed with Ethan and Katrina, which made planning the wedding easier. Rik and Luc's parents and family arrived two weeks before and opted to stay at Rik and Luc's home.\n\n\"There are so many of us and we would be underfoot when it came time to decorating the house for the wedding.\" Raquel Rik and Luc's mother said. \"Are you sure? We have plenty of space.\" Katrina replied.\n\n\"I am certain.\" Raquel replied patting Katrina's arm.\n\n*******\n\nRik kept a watchful eye on Veronica never letting her out of his sight for long. It wasn't until she got tired of it that he backed off.\n\n\"I'm fine now will you stop worrying?\" she asked.\n\n\"Your sleep... it is disturbed.\" Rik replied and that was all he got out.\n\n\"I'm a restless sleeper but I'll make you a promise, if I feel like I'm having problems I'll tell you but you have got to stop hovering. Deal?\"\n\nSeeing that he really had no other choice, he agreed.\n\n*******\n\nThe evening of the wedding had arrived. The entire house was abuzz with activity and the aromas of food cooking filled the air. The rooms will filled with fresh flowers and soft music came from the sound system, the atmosphere was a happy one, even Caesar Ethan's head chef had a smile on his usually somber face.\n\nVictoria pranced around in her lilac colored dress with matching shoes. She felt like a grown up and she was looking forward to seeing Jamie who still insisted on calling her \"squirt\" she always fussed about it but in reality she liked the nickname. In less than two hours time she would have an entirely new family to get to know, already under their tutelage she was speaking French almost fluently and was learning Latin and whatever other languages any of them knew. \n\nShe ran over to the room where Vanessa and Veronica were getting ready for the wedding. Just as they did when they were children, they fixed each other's hair and applied each other's make up. Their white dresses were hanging side by side in the closet with the matching shoes on the floor. Victoria sat on a chair and watched with growing excitement, one day she would be getting ready for her own wedding and she hoped that she would be half as beautiful as her sisters were.\n\nThe entrance of Katrina and Raquel the mother of the groom interrupted her musings. Each woman gave Victoria a warm smile before turning her attention to the brides.\n\n\"So beautiful!\" Raquel exclaimed as she hugged and kissed each twin. \n\nKatrina couldn't help but agree with the assessment although she knew that she was biased. She dabbed at her eyes determined not to cry and mess up the makeup that she so rarely wore. As she helped Vanessa with her dress, she realized that she had kept her promise; her girls were safe, loved and happy.\n\n*********\n\nEthan and Henri the father of the grooms had their hands busy keeping the anxious grooms calm, especially Rik. Ever since the kidnapping, he grew anxious if Veronica was out of sight for more than five minutes. Ethan knew that Rik still felt guilty about that night and went through great pains to reassure him. He finally gave up deciding that it was something that Rik was going to have to work through with Veronica.\n\nWhile Henri kept the grooms company, Ethan walked around the grounds making sure that everything was ready. He also wanted a few minutes alone before he gave his girls away. As he walked, he thought about the past and how far they had come as a family and where they were headed. He would always regret the manner in which they were conceived but other than that, there was nothing that he would change. He caught sight of Mason sitting between Jamie and a very uncomfortable looking Toni who was due about any time. Next to them sat Martin, Rachel, their youngest son and then Nathan with his arm around Louise who looked uncertain as to how she should be reacting to the attention. He knew that Nathan had already talked with her but as far as he knew that's as far as it had gone. The fact that she was still here and hadn't gone running told him that it was only a matter of time before they mated.\n\nHe looked around to see who else had arrived. He smiled and waved at Eustace and Gretchen noticing the small bump of Gretchen's stomach. Patrick and Kevyn had just arrived and were making a beeline for the empty seats next to Louise. This, he realized was really happening, he was giving their babies away and in a few years they would be doing it again with Victoria. Lumps formed in his throat... their babies were no longer babies. He took a deep breath as a tear made its way down his cheek, in a few minutes he would be giving his and Katrina's babies away. \"But they're not babies.\" he murmured as he wiped away another tear. \n\nThe servers had just finished setting up the table when the music began. Ethan went back to check on Rik and Luc and was pleased to see that Rik had calmed down considerably.\n\n\"He talked with Veronica.\" Luc said slapping Rik on the back.\n\nTen minutes later, Ethan and Katrina were tearfully walking their daughters down the aisle, an hour later it was over and Ethan was dancing the first of the father/daughter dances with Vanessa while everyone watched. As he swung Vanessa in a circle, he saw Jamie dancing with Victoria. She was standing on his feet as he held her hands to keep her steady. Ethan smiled, Jamie would be good for Victoria and she would keep him on his toes. He was glad that it was Jamie as opposed a stranger. He wouldn't worry so much.\n\nEthan spun Vanessa around, kissed her cheek just as the song ended, and then took Veronica's hand as he handed Vanessa off to Luc. Something told him to enjoy the time of peace and happiness while it lasted, that somewhere another wronged mate or female would make an appearance. He pushed the knowledge out of his mind; it had no place in the present. Today was a day of celebration, a day of new beginnings; they would deal with it when and if it came. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "capture",
        "vanessa",
        "veronica",
        "victoria",
        "weddings"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/vanessa-and-veronica-ch-09"
}