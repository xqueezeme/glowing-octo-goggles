{
    "title": "A Favor Returned...",
    "pages": [
        "Author's Note: I've had quite a few requests to continue this story... so here is the sequel to Best Christmas Present Ever featuring the characters of Amy and Laurel and what happened after the conference... All characters and events are fictional. \n\nOf course this story includes sexually explicit material and is intended for adults, so if you are not at least 18 years of age or are offended by sexual material, well, you know the drill...for the rest of you, I hope you enjoy! \n\n***** \n\nA Favor Returned... \n\nA Sequel to Best Christmas Present Ever \n\n\"The person who receives the most favors is the one who knows how to return them.\" - Publilius Syrus \n\nAmy slowed her pace as she walked up to the wall of glass entrance and paused a moment with her hand on the door so she could down the last little bit of her protein shake. Swallowing with a grimace, she readjusted the shoulder strap on her bag and pulled the heavy glass door open of the main building of the company she worked for. She made a slight detour to toss the small cardboard container in a trashcan and then veered back to take the familiar left out of the lobby towards the company fitness center. \n\nShe fought back a yawn as she walked. After six months of dedication, it had become part of her normal routine to be up and about well before the sun in order to be into her work-out by 5:30am. It was a part of her day that she had grown to actually look forward to. That didn't mean she'd conquered the struggle with early morning fatigue. She was just used to it. \n\nHowever, today definitely felt different, but different in a good way. Amy wore a silly little grin as she stowed her bag in one of the lockers. For only the hundredth time that morning since waking up she reminded herself that today was the day - her best friend was coming back to work. She headed back out to the gym area with a little more enthusiasm than normal and stepped onto one of the treadmills. She set the controls and began her leisurely pace to warm up. She was in such a good mood that she couldn't help but smile. Laurel was finally coming back to work today! Yes! \n\nAmy was almost embarrassed by how much she had been missing her best friend. Her smile faltered for just an instant as those same thoughts of the tall auburn-haired woman also happened to remind her (again for like the hundredth time that morning) that they still needed to have a talk. Amy felt like it needed to be in private, face to face. It was something that was long overdue and she was a little nervous to finally 'talk-talk' about what had happened between them in California. \n\nYeah. California. The conference... \n\nIt was funny how memories worked. The more time that passed the more it seemed a person's brain had a tendency to give them a dreamlike quality. But there were some events that were so significant that your brain went out of its way to put them in their own special little mental box. That way when your mind started rummaging around and opened that box, those particular memories remained incredibly vivid. Amy's brain had made it a point to develop a very special box indeed for the incredible memories from that work conference, the one she and Laurel had attended a little less than two months ago. \n\nIt's not like she obsessed over that box or anything. She had eagerly come back to the normal routine of her life with her husband and kids. She honestly could not be happier...but every now and then she couldn't help but mentally peek inside that special box. The fact that every time she did meant that she found herself savoring those memories didn't mean that she wanted to relive them or anything like that. It had been a one-time thing and she had come to terms with the fact that they were just that now - memories. \n\nAmy had done a lot of soul searching about what had happened and came to the personal conclusion that she didn't regret it one bit. She really hoped Laurel felt the same way. Amy was actually thankful it happened because she honestly felt like she was a better person for it. That was evidenced by the fact that her relationship with her husband was stronger and healthier than it had ever been. But sometimes...just every now and then, she would sometimes wonder if she would ever feel quite the same way she had felt on that trip with Laurel. \n\nAt the time of their trip, Amy had no idea that it would be so memorable. She was completely unaware that Laurel had a secret agenda for their little business vacation. It seems that after some intimate conversations wherein Amy had confessed to a real hang-up about masturbation, her best friend had decided that she was going to help Amy get over her \"issues\" with self-love. Apparently this work conference getaway presented itself as the perfect opportunity to spend some time together without the usual distractions. Laurel's goals had been pretty straightforward: get Amy to loosen up and let go of her inhibitions while learning how to appreciate her own body. \n\nSeemed simple enough and everything had gone according to Laurel's plan. Things had started out rather innocently with lots of girl-talk and relaxing friend-time without the chaos of family demands and hectic schedules. It had really been nothing more than best friends having fun, flirting a little and just being silly...but that had escalated into some rather risqu\u00e9 exhibitionism in the back of the lecture hall on the second day of the conference. Looking back, it seemed funny how quickly the ante kept being raised between the two women. What started out as a challenge to go braless turned into outright flashing, but overall, it had still been fun and felt pretty harmless. \n\nThen the two of them eventually ended up back in their hotel room for an incredibly intimate masturbation session...which had also been part of Laurel's secret plan. It had also been amazing. Having Laurel there beside her, guiding and encouraging Amy while she was touching herself had made the whole experience so much easier. All that mental baggage Amy had been carrying around about touching her own body just sort of went away in that hotel room. It had been a healing experience for Amy. Laurel had been so supportive and loving that Amy actually had an orgasm by her own hand for the very first time. Well, there might have been some assistance from her friend. Just a little bit. \n\nFor Amy that afternoon had been a revelation. For the first time in her life she was able to completely forget about all the junk she was told about masturbation when she was growing up. She was able to really understand the meaning behind Laurel's compliments and encouraging words. It had just finally clicked and Amy could not have been more indebted to her friend. The gratitude she felt for Laurel helping her work through and get past such a very personal issue was something she couldn't possibly express in words. Amy felt truly beautiful and sexy like she never had before and she also felt closer to Laurel than she had ever felt to another woman... \n\nIt had been life changing. \n\nBut then something else just sort of happened as they tended to do in those types of situations. Basically in the heat of the moment and kind of on a whim, Laurel had ended up going down on Amy. It definitely wasn't something that had been planned...but it did introduce Amy to the most mind-blowing orgasm she'd ever experienced in her life. At the time Amy didn't have time to think and admittedly didn't want to - it was a one-of-a-kind moment that no one else in the world could have possibly comprehended but them. What they had shared had been special and beautiful. \n\nIn fact, Amy had just been about to return \"the favor\" - something that would have never even crossed her mind as a possibility just 48 hours ago - when they had been interrupted by an urgent phone call from the front desk. Neither of them had given their phones a second thought or bothered to take them off silent mode. They had missed quite a few messages. \n\nThe messages were not good. \n\nLaurel's youngest son had taken a spill off his bike and ended up severely breaking his arm. When Laurel's husband informed her that everything was going to be fine, but their boy was going to have to have surgery, Laurel immediately hung up and started getting dressed. Amy helped her pack and then began to pack her own suitcase as she already had it set in her mind that they were leaving. She would be there for her friend to help out in any way that she could - whatever Laurel needed. \n\nLaurel had stopped and smiled at her. She took Amy in a warm embrace, whispered \"thank you\" in Amy's ear, kissed her gently on the lips and then again on the forehead...and then totally surprised Amy by telling her no. Amy couldn't understand why Laurel wouldn't want her there until her friend had pointed out that she would have loved nothing more than to have Amy's help, but this was in fact a work conference on the company's dime. \n\nAmy's heart fell when she realized that Laurel was right. Their employer was picking up the tab for this trip, so Amy really didn't have a legitimate excuse to leave early. She sent a text to her supervisor just to be sure there wasn't a loophole or maybe a chance they might allow her to leave with Laurel, but no. Since the two women weren't related Amy had to stay and finish the conference. Either that or she would have to reimburse the company for the expenses. \n\nSo Amy stayed and Laurel left. As luxurious as the hotel had been with the beach within walking distance, the incredible spa that was available and not to mention the shopping - the last day of the conference had pretty much sucked. Amy hadn't felt like enjoying any of the hotel's amenities and she couldn't concentrate on any of the presentations. She was worried about her best friend and her son...and there was also a little part of her brain that couldn't stop thinking about what had happened the day before. \n\n\"What's up?\" Laurel greeted her through a yawn as she casually leaned on the front of the treadmill Amy was using. The auburn-haired woman looked around the gym as she took another long drink from her Starbucks cup and then turned her gaze back to Amy. \n\n\"What?\" Amy had been so lost in her own thoughts that she hadn't been paying attention to anything else going on around her. She couldn't believe her eyes. Laurel was actually here...at the gym...at 5:45am. \"Laurel?\" \n\n\"Bingo,\" Laurel tipped her chin. \"You are correct.\" \n\n\"What are you doing here?\" Amy sputtered. \n\n\"And good morning to you too, sunshine.\" \n\nAmy shook her head and killed the power switch on the treadmill. Finally coming to grips with the fact Laurel was actually here Amy jumped off the treadmill with a squeal of excitement and rushed around the piece of exercise equipment to grab her best friend in a big hug. \"You know that's not what I meant.\" \n\n\"I know,\" Laurel's flawless face broke into a broad smile and she hugged Amy back. \n\n\"I have to say I never thought I'd see you in here this early,\" Amy laughed and squeezed Laurel a little tighter. She closed her eyes and breathed in the faint traces of that familiar vanilla fragrance. \n\n\"Yeah, me either,\" Laurel replied as she enjoyed the embrace every bit as much as Amy. \n\n\"So what's the deal?\" Amy asked. She was absolutely overjoyed at seeing Laurel unexpectedly early, but knew she just had to give her friend a hard time. \"You have to be lost, right?\" \n\n\"Apparently,\" Laurel laughed and the two women finally let go of each other. Laurel took the time to drain the last swallow from her five dollar java. \"I guess I should have taken that right turn at Albuquerque.\" \n\n\"And she went old school,\" Amy grinned and glanced at the large clock on the wall. She needed to get a move on so she walked over to the nearby mats and began stretching. \"I have to say, seeing your smiling face sure is a nice way to start my day.\" \n\n\"Just don't get used to it,\" Laurel grumbled as she threw her coffee cup in the trash and pulled a water bottle out of her bag. \"This is like a one-time thing or whatever.\" \n\n\"Okay,\" Amy shrugged with a smile and moved on to her next stretch. \"I'm not complaining. I'll take what I can get... but seriously, is everything okay?\" \n\n\"Everything's fine. I just couldn't sleep through all the lovely coughing and sneezing at my house,\" Laurel shrugged and quickly explained that a nasty virus was starting to run the gamut at her house. Her husband had come down with it last night, so he was staying home today. \"Figured I might as well keep you company and pretend to exercise.\" \n\n\"I'm sorry your family isn't feeling well,\" Amy was finished warming up and moved over to the first exercise machine to work on her shoulders, \"but I'm glad you came. I've really missed you.\" \n\n\"Yeah, yeah, yeah,\" Laurel continued to pretend to be as grumpy as possible before admitting, \"I missed you too.\" \n\nAmy sat down on the little bench seat of the shoulder press machine and started on her first set. It seemed surreal that after looking forward to seeing her best friend back at work at some point today, Laurel was actually here. This was awesome! Amy was pushing the handles of the machine up for the third time when Laurel came around to stand beside her and talk. As Laurel continued to chat, she unzipped and then took her jacket off to reveal a sleek sports bra that of course matched the waistband design on her yoga pants. \n\nAmy focused on counting her reps as Laurel turned around and bent over to set her water bottle down. Amy happened to glance over and before she realized it she was ogling her friend's perfect ass. Amy forced her gaze away as Laurel stood up straight which proved extremely difficult to do considering how amazing her butt looked in those yoga pants. \n\nAmy shook her head. Why am I staring at my best friend's butt? \n\nLaurel continued chatting as Amy tried to focus on her reps. The redhead turned back around and proceeded to stretch her arms over her head, those lean, almost six-pack abs practically right in front of Amy's face. Amy literally closed her eyes as she finished up the last few reps of her set. She stood up and wiped her face on the little hand towel she carried around as Laurel took her turn on the shoulder machine. \n\nAmy purposely chose to dress in layers for her daily trip to the company gym: number one to downplay her chest so people didn't stare at her boobs while she trained and number two, as gross as it sounded, to promote as much sweat as she could. Amy wasn't there to look good - she was trying to get in better shape. Her best friend's gym attire was a completely different story. Not that Laurel did it on purpose or could help it - she was a stunningly beautiful woman and she could have worn a potato sack and turned heads. \n\nLaurel decided to actually participate in the entire workout to some degree and Amy was glad for the company. They chatted some between exercises, but Amy pushed to keep up her usual intense pace. Amy was a little annoyed with herself when she kept getting distracted by Laurel's physical presence. The auburn haired beauty complained that her legs were achy and sore from overdoing it in the yard over the weekend, so she would bend over and stretch every so often. Which shouldn't have been a big deal, but what threw Amy off-balance was when she caught herself looking at Laurel's ass again as she stretched...more than once. \n\nAmy would have wagered cash money that Laurel performing leg stretches in those skin-tight pants could have easily been sold on some porno pay-per-view website. Even more embarrassing was that towards the end of the work-out when Laurel had assumed some awkward yoga pose, Amy actually found herself staring directly at her friend's most intimate place. Even worse, she had stared long enough to see that at that current angle, the seam of the crotch of Laurel's pants was pulled tight enough to part the lips of her vagina quite clearly. \n\nAmy shook her head and wiped the sweat off of her face. She couldn't understand what was wrong with her brain this morning, gawking at Laurel like some teenage boy. She glanced at the large clock on the wall and saw that it was time to take a shower and get ready for work. She gathered up her gear and wiped down the mat she'd been using to warm down on as Laurel did the same. Amy trailed behind Laurel as they made their way to the women's locker room. She was racking her brain trying to figure out why she had been so distracted by Laurel when that little voice in her head pointed out the fact that she was doing it again. She came to the realization that she'd been watching the magnificent globes of Laurel's ass move up and down and back and forth as they walked towards the women's locker room. \n\nLaurel entered the locker room ahead of Amy and opened her locker. She was still just a little bit tired, but as much as she hated to admit it she actually felt pretty good after half-ass working out. The thought briefly crossed her mind that if she could manage to get up this early every morning - and that wasn't going to happen - then this wasn't the worst way she could start her day. She smiled to herself as she peeled off the yoga pants and dropped them into her bag. Tired or not, she was really glad she'd decided to pop in and visit Amy. \n\nOn the other side of the row of lockers Amy was lost in thought, questioning her motives once again. She simply had no explanation for why she'd been staring that way at her friend this morning. She shrugged and finally chalked it up to the fact that not only had she been really missing Laurel, but she had also been thinking about the work conference. She shook her head with a grin as she wrapped her favorite oversized towel around her body and tucked it in at the top. With images like that bouncing around in her head, it was no wonder she was having such provocative thoughts. Determined to get a grip, she slipped on her flip flops and grabbed her shower bucket. When Amy stepped around the end of the row of lockers towards the showers, she stopped short and froze. \n\nLaurel was standing in front of her locker fidgeting to get her sports bra off which happened to be the last stitch of clothing she had on. The fluorescent lights were on in the bathroom area, but the ones directly above the lockers were turned off so Laurel was backlit which provided a perfect profile silhouette of her spectacular ass and her perfect tear-drop shaped breasts. Amy just stood there and stared - what else could she do? Laurel happened to be standing directly between her and the shower area with no room to squeeze by her without coming into very close contact. \n\nLaurel finally got the Lycra bra untangled from her hair and turned towards Amy. \"Hey, I forgot to bring my shampoo and conditioner. Can I borrow some of yours?\" \n\n\"Huh?\" Amy snapped out of her daze and looked at the shower bucket in her hand. \"Yeah...sure, of course you can.\" \n\n\"Thanks,\" Laurel smiled, grabbed her body wash, threw her towel over her shoulder and turned to walk confidently to the shower stalls. \n\nAmy kept her head down as she entered the stall next to Laurel and turned on the water. The showers didn't have doors or curtains on them, so it had a very 'high school locker room' feel to it and not a lot of privacy. Amy adjusted the temperature, hung up her towel on the hook and stepped under the spray, sighing as the hot water flowed over her shoulders and neck. She turned around and ran her hands through her hair and then let them rest on the back of her neck as she leaned back further under the pulse of the hot water. She almost jumped out of her skin at the sound of a wolf whistle. \n\n\"Lookin' good,\" Laurel convincingly imitated a guy's voice as she leaned her head and shoulder around the corner in front of Amy's stall. They both laughed. \"Yo, can I get me some shampoo?\" ",
        "Amy had instinctively covered up with her arms when she was startled but relaxed and went back to wetting her hair after pointing in the direction of her bucket. \"Help yourself.\" \n\n\"Thanks, babe,\" she heard Laurel say over the sound of the shower. \n\nRather than simply taking the whole bottle with her, Laurel had taken a step into Amy's stall and stood there squeezing a large dollop of shampoo onto her palm. Laurel slightly turned her head and couldn't help but admire her voluptuous friend's full, rounded breasts. She hadn't seen those puppies since the work conference. Laurel smiled; she was amazed all over again at how truly impressive her friend's chest was when it wasn't being hidden behind a baggy sweatshirt. \n\nAmy stayed under the spray of hot water until her hair was saturated. She decided that she needed to stop being silly and playing mind-games with herself and just enjoy the fact that her best friend was back. Amy blinked her eyes against the drops of water and the building fog of steam from the hot water and could have sworn Laurel had been looking at her boobs. Just the thought of that gave her goose bumps and she felt the flesh of her areolas pucker as her nipples hardened. \n\nSmiling, Amy decided to ignore her stiffening little summits and stepped out from under the spray and held out her hand towards Laurel. \"Please?\" \n\n\"Absolutely,\" Laurel nodded and stepped closer. The soft overhead lighting was shining through the fog of steam and gave the showers an almost mystical feel as Laurel shook the bottle a couple of times causing her boobs to bounce and jiggle with the effort before letting it hover above Amy's open palm and squeezing. \"Say when.\" \n\nAmy looked down into her palm as the shampoo began to drizzle onto it. She didn't intentionally mean to look, but her eyes just automatically refocused through the steam along the same line of sight as her hand. The cute little heart-shaped landing strip of dark red hair above Laurel's sex was just right there in front of her. Amy willed herself to look away, but couldn't. She squinted a little and could just make out the lighter pink edges of Laurel's inner lips peeking out from her folds. \n\n\"Uh, Ames?\" \n\n\"What?\" Amy's head snapped up to look at Laurel's face. \n\n\"I know you have long hair, but seriously?\" \n\nAmy looked back down at the large pool of shampoo that was covering her entire palm and starting to spill over. She laughed. \"Yikes.\" \n\n\"You're such a goof,\" Laurel chuckled as she returned the shampoo bottle to Amy's bucket and went back to her own stall. \n\nAmy let some of the excess shampoo drip off of her hand and into the shower drain and began lathering up her hair with the rest of it. She closed her eyes as she massaged her scalp. Well, that was embarrassing; Amy cringed. She tried to shrug it off as she rinsed the shampoo out of her hair. She paused and moved her head out from under the spray when she thought she heard something. There it was again. She smiled. Laurel was softly singing. \n\nAmy quickly squeezed out some conditioner and worked it into her hair. While she let it work its magic on her unruly brunette mane, she grabbed her poofy shower sponge and lathered it up with body wash. Gently working the slightly scratchy sponge over her body, she kept her head out from under the spray so she could listen to Laurel's throaty voice. She closed her eyes and listened until she noticed that she was spending extra time washing her breasts, running the rough texture of the sponge back and forth across her erect nipples. Okay, enough already. Laurel was right - she was acting like a total goof. Finished, she rinsed the sponge and tossed it into her bucket and then let the water wash away the lather of soap suds that were clinging to her legs. \n\nShe closed her eyes and stepped back under the showerhead to rinse the conditioner out of her hair and before she could stop it, an image from the conference of Laurel leaning in to whisper in her ear in that bathroom stall popped into her head. She opened her eyes and blinked rapidly...what the heck? She shook her head and went to finish rinsing off. Closing her eyes against the spray of water, her mind went right back to that image and she vividly remembered when Laurel had leaned in closer and how it had felt when the woman's hard nipples were poking into her breasts. \n\nAmy shivered and stepped out from under the hot spray of the shower. She leaned against the cool, slick tile of the wall. Really? Amy chastised herself. That's all the self-control you have? Laurel was still humming and splashing in her own stall. Amy just stood and listened to her friend's melodic voice. It reminded her of how Laurel had hummed to her when she was standing behind her in the hotel room. Before Amy realized what she was doing she had taken a small step towards the opening of her stall. She paused and then took another step and stopped. And exactly what did she think she was doing? Going over to Laurel's shower stall to...do what? Talk? \n\nAmy didn't have a clue, but for some reason she took another tentative step and stopped. \n\n\"Morning,\" a voice from the other direction caused Amy to jump. \n\n\"Oops!\" Amy yelped and grabbed her towel off the hook to cover up and then caught herself. Trying to recover, she lamely went through the motions of drying off. \"Oh...uh, hey Karen.\" \n\n\"Did you get a good one in this morning?\" Karen asked as she turned on the shower on the other side of Amy's stall. \n\n\"I did,\" Amy called out as she ducked back into her stall and turned off the shower which resulted in getting her body wet again. She felt like a little kid who not only got caught with her hand in the cookie jar, but broke it as she went through the process of drying off all over again. \"How about you?\" \n\n\"Nah, I wasn't feeling the machines this morning,\" Karen explained, \"I just hit the elliptical and decided to do some yoga.\" \n\n\"That's good.\" Amy commented without really listening. \n\n\"Yeah,\" Karen went on with a laugh, \"figured I'd better get in here before you girls used all the hot water.\" \n\n\"Of course you did,\" Amy mumbled to herself as she bent over and starting putting the rest of her stuff back in her shower bucket. \n\nLaurel came around the corner from her shower stall towel drying her hair with one hand and carrying her little bottle of body wash with the other and asked, \"Of course I did what?\" \n\n\"What?\" Amy looked up from her bent over position and there was Laurel's glistening naked body standing directly in front of her. Amy's face was practically level with her friend's sex which was just inches in front of her. \n\n\"Of course I did - what?\" \n\n\"Of course...\" Amy replied slowly and then looked up, confused. \"What?\" \n\n\"Never mind,\" Laurel saw where Amy had been looking and smiled. She reached down and gave her mound a quick pat. Laurel winked at the stunned expression on Amy's face and couldn't help but chuckle as she sauntered towards the locker area and called out a good morning to Karen as she passed by. \n\nAmy stood up and took a deep breath with her eyes closed. She wrapped her towel around her body and grabbed her shower bucket. \n\nYou have got to get it together, she thought with a shake of her head. \n\n**** \n\nAmy stashed her purse in the bottom drawer of her desk, hit the power button on her computer and began the routine of getting situated for the day. She took a long pull from her refillable water bottle and then leaned back in her chair and sighed. She was so glad it was Friday. This had been one long and unusual week. \n\nOn the one hand she was ecstatic Laurel was finally back at work. Amy had quickly discovered that she didn't enjoy her job nearly as much without Laurel around. It was crazy how much she had really missed not being able to talk, email and eat lunch with her best friend every day. She was also really happy that everything going on with Laurel's family was finally getting back to \"normal\" or at least as normal as life could get when you have a family. \n\nOn the other hand, and Amy had to admit to being selfish here, she also couldn't help but be more than a little disappointed. She'd been secretly hoping that everything would just go back to the way it had been before the conference. She had emailed Laurel that first morning after she showed up at the gym and didn't get a response until more than two hours later. Apparently Laurel was really behind schedule on a major project she'd been working on before the conference and quote \"her boss was going ape-shit.\" Laurel promised to try and email when she could, but she was up to her eyeballs updating the new tables in their company's internal computer system. \n\nAmy knew that they both had to focus on work first, but that didn't mean she wasn't a little disheartened. Laurel's friendship meant so much to her and she'd been so looking forward to having Laurel back at work...and now that she was, Amy wasn't even able to talk to her friend very often much less get a chance to see her. Not only did Laurel not have time to email or chat, but she'd been working through her lunch all week in an effort to get caught up on her stupid project. It sucked, but Amy just had to keep reminding herself that it was only temporary. \n\nShe took a deep breath and went back to her spreadsheet. Her goal was to concentrate on finishing this billing report for the sales department so she could leave on time today. She had no desire to work over on a Friday. She was looking forward to relaxing this weekend. They didn't have any big plans other than the usual kids' sports practices on Saturday. It was going to feel so nice to try and catch up on some sleep...which made her think about the other issue that had been nagging at her in the back of her mind. \n\nShe took another deep breath and purposely tried not to think about the dreams. \n\nEver since Monday when Laurel had shown up at the company fitness center, Amy had been having the most erotic dreams which was a little unusual for her. She'd have the occasional sexy dream like she supposed most people did, but these were different. She knew they must be really intense dreams because she'd wake up very aroused every single time. The problem was that she could never quite remember what the dreams were about. She had a hunch that it probably wasn't a coincidence that they started when Laurel came back to work and suspected that maybe they involved Laurel to some extent, but she wasn't sure. As hard as she tried, she could not recall any details...or maybe subconsciously she just didn't want to. \n\nAmy's reflections were interrupted when her phone buzzed. She kind of hoped that it might be from Laurel, but she saw it was a text from her husband. She was immediately concerned since Steve rarely ever texted her during the work day. She opened the message. It simply read: last night = WOW!! and the rest of the screen was filled with little pictures of hearts and roses. \n\nAmy smiled and couldn't help but blush as thoughts of last night with Steve began to replay in her mind. \n\nShe'd been having another one of those dreams and woke up in the middle of the night with the gusset of her panties soaking wet. She knew she was going to have to do something about it and instead of slipping off to the bathroom to take care of it herself, she turned over and began running her fingernails up and down her husband's muscular arm. Her hands had wandered down to his thigh and she freed him from his boxer briefs. Lying there in the dark as horny as she was, it seemed to make sense that she should take hold of her husband's growing member and stroke it a little. So she did...and ended up with a handful of perfectly hard cock. \n\nAmy scooted down and gave the head of Steve's cock a little kiss. Normally, she didn't mind giving Steve oral, but she felt it was more of an obligation rather than something she truly enjoyed. Last night had been different. Steve had felt really good in her mouth. She had slowly taken more and more of him until she had to fight her gag reflex. Amy was already soaking wet and the act of deep-throating her husband while he was still at least half asleep really had her going. \n\nSteve may not have been fully awake from her efforts, but his cock certainly was and Amy wasn't going to let that go to waste. She quickly slipped off her panties and proceeded to climb on top of him. Trying not to put too much of her weight on him, she sat straight up on her knees and began to rock her hips in a deliberately slow rhythm. Steve's cock sliding in and out of her was exactly what she needed. Amy was pretty sure her husband had probably thought he'd been having some kind of epic sex dream himself until his sleepy eyes finally opened and focused on the vision of his buxom wife groping her breast with one hand and furiously rubbing her clit with the other as she rode him to a quick but very nice orgasm. \n\nWhen the last of her pleasure had subsided and to Steve's very pleasant surprise, Amy had hopped right back off, crawled between his legs and finished him with her mouth. Sucking on his cock after he had been inside of her was something she'd never done in all the years they'd been married. Amy was pretty sure Steve had never cum quite that much before and shocked him again by swallowing every drop - something else she'd never done before. With a smile Amy had whispered \"love you, go back to sleep\" and then rolled over and slept the rest of the night without any more dreams. \n\nAmy quickly typed out a reply to her husband, but paused right before hitting the send button. \n\nShe knew she had to continue to make the effort to be more sexy and confident. Her thoughts went back to the work conference. Laurel's constant insistence that Amy not only claim but outright own her sexiness echoed in the back of her mind. What was it that Laurel had said? \"It's the little things that make a woman feel sexy.\" She pursed her lips and then got up and quickly walked to the restroom. When she returned to her cubicle, she had a hard time not giggling to herself as she tried to imagine the look on her husband's face when he opened that text. She just hoped he was alone or at least not sitting near his boss. \n\nLater that afternoon, her cell buzzed again and she automatically picked it up without looking at it. She held it casually off to the side as she finished inputting the last few numbers into the column of her spreadsheet. She glanced down at the little screen as she double-clicked the save function and her face lit up when she saw the caller ID. It was a text from Laurel. \n\nL: Hey Ames. Really sorry this week has been so busy. \n\nA: That's okay, not your fault. \n\nL: Got anything planned tonight? \n\nA: Don't think so. I can check with Steve. What's up? \n\nL: How about a girl's night at my house? \n\nAmy's smile got even bigger until her cheeks started to ache. An evening hanging out with Laurel sounded like the perfect way to start the weekend and just put this crazy week behind her. \n\nA: Sounds great. I'll make a quick call and text you back to confirm. \n\nL: Perfect. Talk to you in a bit. \n\n**** \n\nThe doorbell rang and Laurel wiped her hands on a dishtowel as she scurried towards the front door, her thick socks slipping comically on the hardwood floors. She did a Risky Business-worthy slide to a stop and opened the door without even checking the peephole. Laurel smiled as Amy posed in the doorway holding up a bottle of their favorite wine. \n\n\"Hot damn, there she is!\" \n\n\"Yes, yes, it is I,\" Amy cheesed it up by batting her eyes. \n\n\"I'm so glad you could make it tonight,\" Laurel gushed and stepped aside so Amy could enter. \"I cannot tell you the last time I watched a chick-flick with like, another chick.\" \n\nAmy laughed. With a husband and three sons Laurel lived in a house full of testosterone. Even the dog was a male. \"Well, I'm here to bring all the chick you can handle.\" \n\nIt was Laurel's turn to laugh as she took possession of the wine and lead the way into the kitchen. \"We've got snacks, munchies, sweets and extra-large wine glasses.\" \n\n\"Now that's my idea of a movie night,\" Amy smiled as she took off her jacket. Looking at Laurel's outfit of fuzzy socks, leggings and a baggy sweatshirt, Amy had second thoughts about her choice of skinny jeans and a V-neck sweater. She should have gone for comfort and dressed more casual. \n\n\"You didn't have to get dressed up,\" Laurel seemed to read her mind as she turned around with two full glasses of wine in her hands. \"But you look really cute.\" \n\n\"Thanks,\" Amy smiled as she took one of the glasses. \"I was just thinking I should have just worn my pj's.\" \n\n\"You should have,\" Laurel smiled back. \"We could've had a sleepover!\" \n\n\"Now that would have been fun.\" \n\n\"Mmmhmm,\" Laurel agreed through a large sip of wine. \n\nAmy followed her lead and took her own swallow of wine. \n\n\"What should we eat first?\" Laurel's eyes got big and she let out an evil little laugh as she waved a hand towards the spread on the island. \"Pick whatever you want...because we're going to eat all of it!\" \n\n\"You're joking, right?\" Amy was looking in wonder at all of the food. \n\n\"I never joke about junk food.\" \n\nAmy glanced at Laurel's serious expression and then her gaze went back to the island. There were various kinds of cheese and crackers, a mountain of hot wings piled on a plate, some kind of gooey cheese dip in the middle of a platter of tortilla chips, a huge tub of buttered popcorn, a pan of brownies, a plate of home-made chocolate chip cookies and four bowls of various kinds of candy. \n\nAmy just stood there not knowing what to say. \n\n\"You know I'm kidding,\" Laurel chuckled into her glass of wine before taking another sip. \"Eat whatever you want. Sick or not, I have no doubt hubs and the boys will demolish any leftovers.\" \n\nAmy helped herself to a few pieces of popcorn while Laurel dipped a tortilla chip into the cheese dip and crunched it. Laurel was anxious to make sure Amy enjoyed herself. This was the first time her friend had come to her home socially to just hang out. Of course Amy had stopped by numerous times when dropping off the kids or meals during her youngest son's surgery ordeal, but this was different. This was girl's night. \n\n\"Speaking of which,\" Amy tried one of the chips loaded with cheese dip. \"How's everybody feeling?\" \n\n\"Horrible,\" Laurel shrugged. \"The doctor said it's just a really bad cold, so no antibiotics.\" \n\n\"Well, at least it's not the flu.\" \n\n\"Exactly, but don't worry,\" Laurel reassured her. \"I cleaned every surface down here with Clorox wipes right before you came over. Twice.\" \n\nAmy smiled and then sympathized. \"Still, sometimes those 'weather the storm' illnesses are the worst.\" \n\n\"And men are such babies when their sick anyways,\" Laurel laughed. \"But I've got all four of them dosed with nighttime cold medicine and cough syrup, so they're going to be down for the night.\" \n\n\"Well, I hope they feel better soon,\" Amy offered. \n\n\"Yeah, for my sake,\" Laurel joked and bit into a hot wing. \n\n\"I'm sorry you had such a rough first week back,\" Amy commented and considered having a wing too. \"I know it sucked to come back to such a busy crap storm.\" \n\n\"Meh,\" Laurel waved it off. \"Not the first time it's happened and it certainly won't be the last. That's IT, baby.\" \n\nAmy laughed and drank some more wine. It felt really nice to just relax. It felt even better to be able to see that dazzling smile in person and to look into those sparkling green eyes that crinkled at the corners when Laurel laughed. Amy had really, really missed spending time with her best friend. Now if she could only figure out a way to bring up what she thought they really needed to talk about. \n\n\"So...\" Laurel looked thoughtful as she beat Amy to the punch with her usual straight to the point attitude. \"Tell me how things have been since having our little fun at the conference, Ames. All bullshit aside.\" ",
        "\"You know...,\" Amy could feel her cheeks warm with her usual blush which caused them both to laugh. After composing themselves, the brunette continued. \"I've actually thought a lot about it.\" \n\n\"You ain't the only one,\" Laurel flashed her that devilish smile with a wink and fanned herself with one of the paper plates which caused them both to crack up again. Laurel finally cleared her throat and took another drink. \"Sorry, please continue.\" \n\n\"Well, to be honest,\" Amy began and paused, searching for the right words. She actually felt much more comfortable talking about sex than she ever had before. Then again, maybe it was the wine. \"I've actually felt great. In fact I'm really glad you brought it up...things have just been so good with Steve, and I...I don't know...I just feel really good.\" \n\n\"Yeah,\" Laurel began chuckling again, \"but do you feel good?\" \n\n\"Shut up,\" Amy laughed with her. \"I just don't know how else to describe it.\" \n\n\"Seriously,\" Laurel reached across the island and squeezed her hand. \"Are you okay with what all that happened?\" \n\n\"I am,\" Amy nodded and squeezed her hand back. \"I really am.\" \n\n\"So we're good? You're not weirded out being around me or anything?\" \n\n\"Of course not,\" Amy scoffed. \"I'm totally fine with it. Are you?\" \n\n\"Girl, I was fine with it before, during and after,\" Laurel cracked and they both laughed. Laurel poured them some more wine. \n\n\"I'm really glad you feel that way,\" Amy nodded as she spoke and accepted the refill. \"I obviously can't speak for you, but I'm in a much better place than I have been in a long time. I mean, seriously, I think that whole experience was just what I needed.\" \n\n\"And you think it helped?\" Laurel raised both eyebrows. \n\nAmy enthusiastically nodded with a huge smile on her face. \n\n\"On the home front?\" Laurel asked and wiggled her eyebrows. \"On your own front?\" \n\n\"And all the fronts in between,\" Amy quipped and they both started up with the giggles again. \n\n\"I am so happy to hear that,\" Laurel smiled and ate some popcorn. \n\n\"I guess I never did get a chance to say thank you,\" Amy swallowed and squeezed Laurel's hand again, \"for everything.\" \n\n\"Now don't get all mushy on me,\" Laurel laughed with a wink. She let go of Amy's hand and stepped over to the fridge for another bottle of wine. She turned back towards the island and suddenly leaned over to plant a warm kiss on Amy's cheek. \"But you're welcome and you know I'd do anything for you.\" \n\n\"Thanks,\" Amy smiled back and her cheek almost felt like it was burning where Laurel's lips had touched it. \"I hope you know that goes for me too.\" \n\n\"Cool,\" Laurel smiled and held up her glass. Amy bumped her wine glass against Laurel's with a soft clink and they both said \"Cheers\" at the same time and began laughing again. They chatted and munched for a few more minutes before making small plates of various snacks and goodies. With their glasses freshly refilled, the two women carried their plates into the family room. There was a huge L shaped couch and a couple of recliners that faced a large screen TV sitting on top of a cabinet. \n\n\"I've heard this is really good,\" Laurel announced after setting her food and wine on the coffee table. She loaded the DVD into the player. \"But kinda scary in a thrillery way.\" \n\n\"Yikes,\" Amy replied as she stood there with her food and wine trying to figure out where to sit. \n\n\"Oh, no you don't,\" Laurel shook her head with a grin as she walked past Amy and plopped down on the couch. \"You're sitting right next to me so we can cuddle under the blankets during the scary parts.\" \n\n\"Thank goodness,\" Amy laughed and made her way around the coffee table to sit down on the couch. \n\nThey squirmed around and took turns holding each other's glasses and plates as they adjusted the throw over their laps. Finally settled in and comfortable sitting side by side on the big couch, Laurel pressed a button on the science fiction looking universal remote and the movie started. She then aimed the remote at the lights, pushed a different button and the room went dark so that it felt like they were sitting in a movie theater. \n\nThey continued eating their snacks and giggling while the previews played. Laurel adjusted the volume so it wasn't too loud and by the time the movie actually started both women had abandoned their plates on the coffee table and finished off their third large glass of wine respectively. They wiggled around some more to get situated and ended up with their thighs touching under the throw as they focused on the big screen. Amy was so happy that everything just seemed to be normal between them. \n\nThe couch was very plush and comfortable and after about fifteen minutes, Laurel drew her legs up on the opposite side of Amy to get more comfortable. She adjusted the blanket and ended up in a leaning position so she gradually relaxed and let her head slouch over until it was resting against Amy's shoulder. Amy smiled and leaned her head over to gently touch it against Laurel's before turning her attention back to the TV. \n\nThe movie was just starting to get interesting when Laurel hit the pause button to get them refills of wine and also brought one of the bowls of candy back with her. While she was gone, Amy had taken off her pullover sweater to be more comfortable in just her t-shirt. Laurel smiled as Amy popped a few M&amp;Ms in her mouth and sat back down. Laurel waited for her guest to get comfy before going right back to her same position with her feet up and leaning her head on Amy's shoulder. \n\nThis lasted for another ten minutes before Amy's arm started to go numb so she gently eased it out from between them and put it up to stretch along the back of the couch. Laurel had moved her head off of Amy's shoulder and out of the way without taking her eyes off the TV screen. Once Amy had changed positions Laurel wiggled closer to her best friend and without a second's hesitation laid her head back down, only this time it was resting against Amy's breast. Laurel was focused on the movie so she didn't see the big smile on Amy's face. \n\nAfter sitting in this new position for a few minutes and watching the movie, Laurel ever so slightly picked her head up and then set it back down. Another minute passed and she did it again...and then she did it again. Amy didn't mind the cherished contact one bit, but couldn't pass up the opportunity to give Laurel a hard time. \n\n\"Can you pause it, please?\" Amy asked and threw off her half of the thin blanket and gave Laurel a chance to move before starting the process of getting up from the deep couch. \n\n\"Sure,\" Laurel sat up as well. \"What's wrong?\" \n\n\"You,\" Amy chuckled as she stood up, \"you wiggle-worm.\" \n\n\"Me?\" Laurel looked up innocently. \"Well, you didn't have to get up, I would have moved.\" \n\n\"Actually I did have to get up,\" Amy smiled and crossed her legs. \"I need to pee really bad.\" \n\n\"Ah,\" Laurel laughed and stood up as well. \"Down the hall on the right.\" \n\n\"Thanks,\" Amy nodded and started towards the facilities. \n\n\"And I wouldn't have been a wiggle-worm if your bra hadn't been stabbing me in the head!\" Laurel called after her. \n\n\"Sorry,\" Amy replied over her shoulder. \"But some of us need an underwire, thank you very much!\" \n\nNext it was Laurel's turn to use the bathroom. She came back to the family room with a bundle under her arm and made it a point to sit upright next to Amy on the couch with a full space between them. Amy just sat and watched her from under the blanket that she had pulled up to her neck as Laurel picked up the remote. Laurel started to spread out the extra blanket she had brought back with her, presumably so they wouldn't have to share anymore. She looked at Amy and gave her a little 'hmph'. \n\n\"What do you think you're doing\" Amy asked. \n\n\"Trying to watch a movie,\" Laurel replied coolly and playfully gave another 'hmph' for good measure. \n\nAmy brought her hand out from under the blanket and held up her bra. The blanket had fallen down to her lap and Laurel could clearly see that yes, the curvaceous brunette had most definitely taken her bra off. Amy tossed her bra on a nearby cushion and put her arm back up along the back of the couch. \"Now quit being a brat and get over here.\" \n\nLaurel pursed her lips and then with a grin scrambled over to snuggle with her best friend. They went through the process of wiggling and adjusting all over again until they were situated with Laurel leaning against Amy, her head resting against a large breast and the blanket snugly around them. Laurel hit the play button on the remote and they resumed watching the movie. \n\n\"This is so much more comfortable,\" Laurel sighed as she squeezed in a little closer to Amy, very aware of the weight and volume of the boob she was resting her head on. \"Are you okay?\" \n\n\"I'm fine,\" Amy whispered. \n\nLaurel reached up and ever so softly poked a finger at Amy's erect nipple. \"You aren't cold?\" \n\n\"No,\" Amy replied hoarsely and then cleared her throat. \"I'm good.\" \n\n\"Am I making you uncomfortable?\" \n\n\"Not at all,\" Amy replied and brought her arm down off the back of the couch to give Laurel a little hug around her shoulders. \n\n\"Okay.\" \n\nThey quieted down and let their attention go back to the DVD. Amy hadn't been able to really follow the plot too closely with the distraction of Laurel's head lying on her breast, so she wasn't too sure what was going on. She admitted she was a little lost to Laurel who offered to go to the menu and go back a few scenes. Amy shrugged and told her it was her decision so that's what Laurel did. It really didn't matter to Amy. She was thoroughly enjoying being in Laurel's company and was also secretly thrilled with the modest physical contact. \n\nThe brunette wasn't comfortable putting her arm in the same position on the back of the couch, so she settled for laying it along Laurel's back with her hand coming to rest on Laurel's hip. She turned her attention back to the movie as the last few wiggles were worked out of their systems. As the movie progressed, they both seemed to relax even further. In the process of letting the muscles of her arm relax, Amy's hand kind of went limp until eventually she realized it had slipped down a bit. Out of the corner of her eye she could see that her hand wasn't touching Laurel's hip anymore. She was loosely palming the outside of Laurel's butt cheek. \n\nAmy slowly moved her hand back up to Laurel's hip, hoping her friend hadn't noticed. Laurel didn't say anything. Amy subtly adjusted her position and watched the movie. A few minutes later as she began to relax again, gravity came in to play and Amy was aware that without trying to her hand slowly slipped down to ever so gently stroke the outside of her friend's shapely butt. She wasn't really sure why she did it, but she let her hand rest on Laurel's ass for a few moments before moving it again. \n\nShe mentally chastised herself. What the heck did she think she was doing? Laurel was probably being polite by not saying anything, but how long was that going to last? She brought her hand up to absently mindedly stroke Laurel's arm a few times and then tried to find a somewhere else to put it. Laurel reached up and took Amy's hand and pulled it back down and hugged it to her waist. Amy had to stretch for her arm to reach that far which ended up pulling her even closer to Laurel and firmly pressing her boob into the red-head's face. \n\nLaurel picked her head up to adjust to this movement which put the side of her face even lower on Amy's breast...which was very close to Amy's nipple. Amy froze and waited for Laurel to move, but she didn't. She struggled to concentrate on the movie. She was more than cognizant of just how close Laurel's face was to her nipple as she tried to maintain this improvised hug. Amy failed to be able to hold that stretched position for too long, so she adjusted her body again and ended right back up in the same position with her hand loosely resting on Laurel's hip. \n\nShe took a deep breath and slowly let it out. \n\nThe longer they sat there, the more Amy could almost feel Laurel's breath on her now erect nipple through the thin t-shirt material. She tried to keep her hand on Laurel's hip, but her arm grew tired and once more gravity caused her hand to slide only this time Laurel had shifted her legs just as it happened. Amy was now sitting there with Laurel's head on her boob while she blatantly cupped one of Laurel's butt cheeks. Amy very subtly squeezed her thighs together and just knew that her panties were starting to get wet. \n\nAmy was just about to move her hand away when Laurel slightly shifted her legs again and Amy could swear it felt like Laurel pushed her butt backwards as if she were pressing it into Amy's hand. Well, this was getting Interesting. Amy decided to change tactics and moved her arm so that her hand was gently rubbing Laurel's back and upper arm. Maybe if she kept her arm busy it wouldn't grow so tired and she could stop playing with Laurel's ass...not that she didn't want to play with Laurel's ass. \n\nWhy do I keep going there? Amy asked herself as she brought her hand up to rub Laurel's arm. She felt her fingertips brush against the side of Laurel's breast as she did. Amy cringed as she brought her hand back down and without realizing what she was doing, it came to rest on Laurel's hip again while she collected her thoughts. She wasn't even sure if gravity had anything to do with it this time as her hand slid slowly down to cup Laurel's butt cheek again. \n\nThere. There it was again - she definitely felt Laurel push back against her hand that time. Amy considered her options and if she should just stop. The only problem was that it felt good. Really good. I'm just being affectionate, Amy reasoned with herself. Her hand came back up to rub Laurel's arm and she purposely brushed her fingers along the outside of Laurel's breast again. She then deliberately ran her hand down to the outside of Laurel's thigh and then back up to her hip and then down to gently cup her friend's ass. \n\nShe waited a few moments to see if Laurel would respond in any way...nothing, no reaction. So she repeated the process in the same order, gently rubbing her hand up and down Laurel's body. Up to rub her arm, over so her fingers would brush against the outside of Laurel's breast, then slowly down to the outside of her friend's thigh until her hand ended up back where it started with a handful of Laurel's ass. Once again, Amy paused for a few moments and then did it again. \n\nShe kept this up for a while, stopping every so often to let her arm rest. After a few more circuits of running her hand up and down Laurel's body, Amy became just a little bolder and practically let her whole hand caress up and over the outside of Laurel's breast. On the other end of her little massage routine when she rubbed her way back down to Laurel's hip and eventually her ass, Amy firmly grabbed it and gave it a nice squeeze. Laurel didn't say a word, just let out this little contented sigh. \n\nSo Amy continued to let her hands wander over her best friend's body. Pretty soon the inevitable happened and both women started to become aroused. They hadn't spoken a word to each other and didn't notice that the DVD had ended. Their breathing had grown heavier as Amy continued to rub and massage Laurel's body. In return, Laurel began to move her head slightly as her body responded to being touched. That evolved into softly rubbing her face back and forth against Amy's tit. \n\nAs Laurel's body shifted, the movement of Amy's hand was causing the red-head's sweatshirt to work its way up higher and higher until her lower back and side were exposed. Amy stopped for a moment when she felt the bare skin of Laurel's lower back, savoring the feel of the warm flesh against her palm. She gently ran her fingertips back and forth a few times until she felt goose bumps. Encouraged by this, Amy skipped the thigh-rubbing as her hand moved straight down to firmly cup and squeeze Laurel's ass. \n\n\"That feels really good,\" Laurel's whisper sounded almost like a purr as she stretched a little, rubbing her face even harder against Amy's breast until her nose grazed the hardened nipple. \n\nThe sound of Amy's moan of excitement was lost as the sudden blare of a ringtone erupted. \n\n\"I'll get it,\" Laurel gasped breathlessly and stretched forward to grab the ringing cellphone off of the coffee table and handed it to Amy. Laurel swiveled around and put her feet on the floor and disentangled herself from the throw as Amy answered. She said hello and then listened, asked a few questions and then listened some more. \n\n\"I think Steve might be getting sick, too,\" Amy whispered in explanation to Laurel as she covered the speaker of her phone. She scooted up to sit on the edge of the couch and replied back into her phone, \"Okay, hon, I'll be home in about twenty minutes.\" \n\nLaurel pursed her lips in sympathy as she stood up and quickly pulled her shirt down. \"I really hope he doesn't have the same thing Jeff and the boys have.\" \n\n\"From what he said, it sounds like he might.\" \n\n\"Oh, no,\" Laurel scrunched up her face in sympathy. \n\n\"I hate to leave early,\" Amy apologized and grabbed her sweater, \"but he sounds kind of pitiful.\" \n\n\"Oh, no worries,\" Laurel waved it off with a good natured smile. \"We'll finish the movie some other night.\" \n\n\"Promise?\" Amy asked hopefully as they walked together down the hall towards the front door. \n\n\"Absolutely,\" Laurel reassured her and put her arm around Amy's shoulders. \"I have to know how that stupid thing ends.\" \n\n\"I know, me too,\" Amy agreed. They gave each other a hug and then Amy opened the front door. \"Thanks for having me over.\" \n\n\"Girl, please,\" Laurel smacked her lips and smiled. \"Thanks for coming over and keeping me company.\" \n\n\"No problem, I really enjoyed it,\" Amy nodded and took one step out on to the porch and hesitated for a second as if to say something else. Instead she looked back at Laurel standing in the doorway and smiled. \"Well...good night.\" \n\n\"Night, Ames.\" Laurel replied with a little wave and watched her friend leave. She remained in the doorway and continued to watch as Amy got in her car and drove away before closing the door. \n\n**** \n\nAmy kicked the sheet and blanket off with a sigh and rolled over once more to try and find a comfortable spot where Steve's Nyquil induced snoring wasn't rattling her teeth. She tried to close her eyes and just relax, but then her husband started coughing again. She flipped her pillow over and punched it a few times as if that might help her fall asleep. Her eyes stared at the ceiling of their bedroom as she struggled to stop all of the thoughts that were racing through her mind...especially one thought in particular. \n\nShe kept coming back to the same basic idea over and over again, considering her options and the possibilities of carrying the idea out...but then she would dismiss it altogether. She sighed as her brain started the whole debate over again. It was silly to think it could actually happen anyways. But could it? Amy lay there for a few more minutes before finally giving up and quietly slipping out of bed. She checked on the kids who were sleeping soundly and then silently trudged down the steps and headed towards the kitchen. \n\nAmy should've known sleeping was a lost cause in her current condition. On the drive home from Laurel's house she could not stop thinking about the warm feel of Laurel's skin or the way her best friend's ass had felt so perfect in the palm of her hand. How could she not think about tonight without letting her mind peek in that special box of memories of what had happened at the work conference? All of those thoughts had driven her crazy with lust. \n",
        "By the time she had pulled in her driveway, her pussy was leaking so bad that it had caused a visible wet spot on the crotch of her jeans. Amy had gone upstairs and checked to make sure the kids were okay and down for the night. Then she had gone straight into the master bathroom and stripped down with every intention of finding some sexual relief in the arms of her husband, sick or not. Unfortunately, Steve was already out like a light. Through his mumbles and garbled speech, Amy had finally understood that he'd taken some night time cold medicine and was done for the night. \n\nSo after tucking him in and then giving the kids a quick kiss and tucking them in again, Amy had reluctantly crawled into bed and tried to just forget about the ache between her legs and go to sleep. Yeah, that wasn't going to happen as her thoughts kept returning to Laurel. Tonight had been so - what? Unexpected? Exciting? Yeah, all of those, but it had more than anything it had been a lot of fun. Their friendship usually was...and it was definitely unique. She wasn't too sure anyone else could even understand how she and Laurel felt about each other and what they had - Amy wasn't even sure she understood it herself. \n\nDid it really matter if she understood it? No, it didn't. She just knew that she was a better person for knowing Laurel and for that, she was very thankful they'd grown so close. \n\nAmy opened the door to the freezer with a sigh. \n\nFriday night - okay, technically it was Saturday morning since the clock on the microwave read 1:27am - and here she was digging through the freezer looking for frozen yogurt. Amy stood there with the freezer door open in one of Steve's old t-shirts and a pair of panties with her dark hair pulled back into a ponytail, scanning each shelf. The cold air blowing around her actually felt kind of good, but it was also waking her up even more. She looked down at her nipples that were standing out proudly. It wasn't doing much to cool that down either, she observed with a smirk. \n\nShe finally spotted her sweet treasure, grabbed it and shut the freezer door with her knee as she pried the lid off. Grabbing a spoon out of the silverware drawer, she stopped and looked thoughtfully at her laptop sitting on the island. She bit her lip and finally nodded in a silent decision as she grabbed it and then tiptoed through the family room and on to the back of their house to the sunroom. She quietly shut the french doors for some privacy and then sat down on the couch and put her laptop on the coffee table and flipped it open. \n\nShe dug her spoon into the small tub and savored a big bite of the frozen treat as the screen came to life. She logged on and quickly checked her email...nothing new or of interest. She logged out and then logged into the social media site that she liked...again, nothing new or exciting. She minimized that browser and sat there looking at the wallpaper background. She hit a few keys and opened a new browser window for in-private browsing. She pursed her lips thoughtfully and had just started typing in the words \"red head\" in the search bar when the messenger application popped up on her screen with a new message. She stared at it and then hesitantly clicked the okay button to open it. \n\nLaurel: Hey you! \n\nShe was startled for a moment by the little chime and the text window that opened. Her face lit up when she saw the user ID. \n\nAmy: Hey yourself! \n\nL: What are you still doing up??? \n\nA: Couldn't sleep. \n\nL: Me neither. Decided eating ice cream and playing online was more fun than tossing and turning. ; ) \n\nAmy dipped her spoon into the small container with a giggle and then quickly typed her reply. \n\nA: Me too! \n\nL: LMAO. Nice! \n\nA: Between the goodies at your house and my late night snack, my cheat day is turning into a cheat weekend, LOL. \n\nL: Cheat day, schmeat day - enjoy the heck out of that junk food, woman! \n\nAmy read the response and nodded her head in agreement as she took another bite of her frozen yogurt. \n\nA: Trust me I am. What kind? \n\nL: Rocky Road with whipped cream and bananas. You? \n\nA: Chunky Monkey...the frozen yogurt kind so not as bad. \n\nAmy took one more bite and then set the container aside as she looked at the little indicator that said Laurel was typing. She glanced up at her darkened house, the only source of illumination being the glow of her laptop. She looked back down when she heard the soft ping of a new message. \n\nL: So what exactly are you doing? Online that is, LOL. \n\nA: Chatting with you. : P \n\nL: And before that? \n\nA: Nothing. I just logged on when you messaged me. \n\nL: Uh-huh, sure. \n\nLaurel was sitting in her husband's home office that was off to the side of their finished basement with her laptop propped up on the arm of the love seat she was comfortably lounging on. It had a door that locked and was the only place in her house where she could get any real privacy. The redhead had unknowingly found herself in the same boat as her best friend. She had also not stopped thinking about their movie night, so she'd gotten out of bed with the intention of eating some ice cream, watching some porn and getting herself off. She suspected that Amy was every bit as horny as she was after their little playfulness earlier that night and mentally bet herself that she could get the curvy brunette to admit to it, too. \n\nLaurel scraped the bottom of her ice cream bowl and then licked the spoon clean. Glancing down she scoffed out loud as she read Amy's response that popped up in the little window. \n\nA: Why, whatever could you mean? \n\nL: HAHAHA - I call bullshit. I know you were going to watch some porn! \n\nAmy felt her cheeks grow hot at being called out. \n\nA: No I wasn't. \n\nLaurel had just started typing a smart-ass response when another message from Amy popped up. \n\nA: Well...maybe. \n\nLaurel grinned as she backspaced and then retyped her reply. \n\nL: LMAO, I was too!! \n\nA: LOL ; ) \n\nAmy watched as the indicator showed Laurel was typing. She realized she was sitting forward and biting on her thumbnail in anticipation. \n\nL: What's got you so hot and bothered that you need to watch porn in the middle of the night? Hmmmm? \n\nAmy typed a response and then read it to herself. She deleted and started retyping when another message from Laurel appeared. \n\nL: I mean I know why I'm doing it. Just curious if it's for the same reason. \n\nA: Oh? And what reason would that be? \n\nAmy watched the indicator show that Laurel was typing. \n\nL: Uh, that would be movie night. \n\nAmy's face turned crimson there in the dark but she couldn't help but smile. Surprise, surprise - Laurel being honest and just putting it out there wasn't a big shock. \n\nA: You mean our movie night? Like just a little while ago? \n\nL: Yep. It made me really horny. \n\nA: It did? \n\nL: Hell yeah! That's why I was about to look at some porn and...you know, LOL \n\nAmy wasn't sure what to type. She looked around again at her dark surroundings. This felt so intimate and naughty; she knew she was well on her way to ruining another pair of panties. Something about the anonymity of messaging and knowing that she could choose her words carefully before they were out there was making her feel so much bolder right now. More than that, the fact that it was Laurel reading those words gave her a thrill. \n\nL: Uh, hello? You fall asleep on me? \n\nA: LOL - not even close. Just figuring out what to type. \n\nL: Don't think - just type. Now answer my question. \n\nA: Okay. Our movie night made me feel the same way. Steve is sick...so here I am. \n\nL: HA! We're both doing the same thing for the same reason! I knew it, LMAO. \n\nA: Yep, you're right. LOL \n\nL: Suh-weet! \n\nAmy felt a little silly giggling and smiling all by herself there in the dark. She glanced down as the little indicator showed Laurel was typing. \n\nL: I say we have some fun. You game? \n\nAmy took her time to type up a rather flirty, witty response. She smiled to herself as her finger hovered above the enter key. She hesitated. Too much? She deleted the message and retyped her reply. \n\nA: Sure. \n\nAmy waited for Laurel's reply when her messenger app lit up with another pop up window. It was an invitation to accept Laurel's video chat request. Amy took a deep breath and then clicked on the accept button and suddenly Laurel's image filled the screen of her laptop. \n\n\"Hello again,\" Laurel smiled and gave a little wave. \n\nAmy quickly jabbed at the volume button and glanced up at the french doors that closed off the sunroom from the rest of her house. She waited and watched for a moment through the glass at the dark house beyond. She finally turned her attention back to her screen. She smiled and waved back. \"Hiya.\" \n\n\"What were you looking for?\" \n\n\"Nothing,\" Amy explained. \"I forgot to turn down my volume, so just wanted to make sure I didn't wake anybody up.\" \n\n\"Gotcha.\" \n\n\"Did you enjoy your ice cream?\" \n\n\"I practically licked the bowl clean,\" Laurel smiled and propped her head up on her arm. \"You?\" \n\n\"Did I ever,\" Amy made a silly face and licked her lips in an exaggerated motion that made Laurel giggle. \n\n\"Guess what you forgot?\" Laurel asked with a smirk. \n\n\"What?\" \n\nLaurel's hand appeared on the screen and dangling from her fingertips was Amy's bra. This caused them both to smile. And then they started to giggle but kept covering their mouths to keep quiet. Laurel started to twirl the large brassiere around on her finger, but one of the oversized cups hit her in the face and she dropped it which caused them both to laugh even harder while at the same time shushing each other. \n\n\"I'm going to need that back,\" Amy finally managed to whisper after the last of her giggles died out. \n\n\"No way,\" Laurel scowled. \"I'm keeping it.\" \n\n\"I doubt it will fit you.\" \n\n\"No?\" Laurel looked at the camera on her laptop for a moment. She watched Amy's face on her screen as she grabbed the hem of her nightshirt and pulled it all the way up to her neck to reveal her bare breasts. Laurel knew that her large nipples were hard and sticking out. She held her shirt in place with her chin as she picked up Amy's bra and held the oversized garment against her chest. \"You don't think it will?\" \n\n\"No,\" Amy managed with a gulp, \"definitely too big.\" \n\n\"Awww,\" Laurel pretended to pout as she looked down. \"But it's so pretty.\" \n\n\"Thanks.\" \n\n\"So if I have your bra here...\" Laurel looked up and let the bra fall away while she remained holding her t-shirt up exposing her boobs to the screen. \"What are you wearing there?\" \n\n\"Nothing,\" Amy managed a grin. The two women just sat there until Amy noticed the expectant look on Laurel's face and took the hint. Her hands were shaking a little as she pulled up her shirt in imitation of Laurel. She shrugged her shoulders causing her large breasts to bounce slightly. \"I'm commando.\" \n\n\"Ha!\" Laurel laughed and stood up displaying her naked lower body to the camera for a moment before sitting back down with her shirt still pulled up. \"Me too!\" \n\nAmy giggled at the brief flash of Laurel's shaved sex. She followed suit in their impromptu game of show and tell and stood up to reveal her skimpy boy short panties and then sat back down. \"Well, I guess I'm not totally commando.\" \n\n\"Mmmm, those panties are cute,\" Laurel smiled at Amy's ridiculously curvy body, \"but you should really try total commando, Ames.\" \n\n\"I should?\" \n\n\"Oh, yeah,\" Laurel nodded confidently and then got tired of holding her nightshirt up and shucked it off as she talked. \"It feels really good to just be naked.\" \n\nAmy stared at Laurel's body. Her friend looked really sexy sitting there in front of her laptop. Amy finally slipped her t-shirt over her head and then licked her lips. She took a couple of deep breaths to calm herself and then stood up and hooked her thumbs in the waistband of her panties. She took another deep breath and then slid them down in front of the camera revealing her shaved pussy with the small landing strip of short, dark hair. \"Like this?\" \n\n\"Just like that,\" Laurel whispered with a smile as she stared at the image of her friend's beautiful mound on her screen. \"You shaved!\" \n\n\"I did,\" Amy nodded and ran her fingers over the small patch of pubic hair. \"What do you think?\" \n\n\"You look fan-fucking-tastic!\" Laurel whispered enthusiastically. \n\n\"Thanks,\" Amy sat back down and smiled at the screen. \"It does feel good.\" \n\n\"I know, right?\" Laurel giggled. \"Have you noticed a difference?\" \n\n\"I have,\" Amy nodded and knew she was blushing. \"I'm more sensitive down there.\" \n\n\"Exactly,\" Laurel agreed with a chuckle. They grew silent for a few moments, but continued smiling and looking at each other. Laurel reached up with both hands to lightly pinch the tips of her breasts as she broke the silence. \"Can I ask you a question?\" \n\n\"Sure,\" Amy lowered her voice as she intently watched her friend's fingers begin to pull and pinch on those large, swollen nipples. \n\n\"Earlier tonight,\" Laurel continued. \"Was that planned or did it just kind of happen?\" \n\n\"Ummmm,\" Amy hesitated. \"Was what planned?\" \n\n\"You know,\" Laurel pursed her lips, deciding on how to label it. \"The cuddling. Was it planned?\" \n\n\"Definitely wasn't planned,\" Amy shook her head. \"I guess it just kind of happened.\" \n\nLaurel nodded her head. She cupped both of her breasts and squeezed them together before asking pointedly, \"Were you glad it happened?\" \n\n\"I guess...I mean...\" Amy's eyes were glued to her friend's hands and decided to just be honest. \"I'm very glad it happened.\" \n\nLaurel's smile grew bigger at Amy's answer as she continued to play with her breasts. \n\n\"Were you glad it happened, Laurel?\" Amy returned the question and hesitantly placed her hand on top one of her breasts like Laurel was doing. \n\n\"Oh, yeah,\" Laurel nodded enthusiastically and Amy wasn't sure if she was answering the question or giving her approval of Amy joining in. \"It was a lot of fun.\" \n\n\"It was fun,\" Amy agreed, \"wasn't it?\" \n\n\"Uh-huh. It was very relaxing too,\" Laurel grinned as she stretched and stuck out her chest right in front of the laptop camera. \"Made me feel special.\" \n\nAmy's screen was suddenly filled with a beautiful pair of breasts with large, erect nipples. \"Really?\" \n\n\"Are you kidding?\" Laurel finished stretching and resumed a normal posture. \"I haven't had that much attention paid to my ass in months.\" \n\n\"I couldn't help myself,\" Amy giggled and blushed. \"It's a really nice ass.\" \n\nLaurel swiveled around on the love seat and got up on her knees with her back to the camera so Amy could see the utterly perfect ass in question. \"You really think so?\" \n\n\"Definitely.\" \n\nLaurel swiveled back around with a huge smile on her face. \"Thanks!\" \n\n\"My pleasure,\" Amy wiggled her eyebrows and they both started giggling again. \n\n\"The only problem with all that cuddling,\" Laurel lowered her voice as the giggles faded and she leaned conspiratorially towards her screen, \"is it also got me really excited.\" \n\n\"It did?\" Amy whispered as she leaned forward as well. \n\n\"Mmmm, did it ever,\" Laurel whispered back in almost a moan. \"Ames?\" \n\n\"Yes?\" \n\n\"Can I ask you something?\" \n\n\"Sure.\" \n\n\"When you were cuddling with me and rubbing my ass,\" Laurel's voice was so low and seductive, \"did it make you wet?\" \n\n\"Yes,\" Amy whispered quietly and then licked her lips as she stared into the eyes of the image of Laurel on her screen. \"It made me very wet.\" \n\n\"Love it,\" Laurel cooed and bit her lip seductively. \"That is such a turn on... I'm actually starting to get wet again right now.\" \n\nAmy hesitated and then nodded in agreement and whispered, \"Me too.\" \n\n\"Can I ask you to do something for me?\" Laurel looked into Amy's eyes with a little half smile on her face. \n\n\"Depends,\" Amy returned the look, \"on what you want me to do.\" \n\n\"Well,\" Laurel whispered in a matter of fact tone, \"I'm about to rub my pussy and get myself off.\" \n\nAmy raised her eyebrows but didn't say anything. \n\n\"So instead of looking at some random porn site,\" Laurel continued to explain, \"I was wondering if I could just look at you.\" \n\n\"You want to look at me?\" \n\n\"Who wouldn't?\" Laurel asked with a huge grin. \"You're so much sexier than some bullshit sex video.\" \n\n\"Okay,\" Amy tried to suppress her smile at what was such an odd, but really flattering compliment. \"I guess that would be alright.\" \n\n\"Oh, hell yeah!\" Laurel declared and then leaned back on the loveseat and adjusted her computer to the new position. \"Will you play with your breasts for me?\" \n\nAmy watched as Laurel began running her hands up and down her taut stomach before one of them moved up to settle on her breast and the other moved down to begin lightly stroking the outer lips of her womanhood. It was almost hypnotic to watch. Amy remembered the request and put her hands under her large breasts and lifted them towards the screen. \n\n\"Your tits are amazing,\" Laurel commented and moved her fingers over to start running them up and down her inner lips. \"Ames?\" \n\n\"Yes?\" Amy whispered as she squeezed her breasts together and then slid her fingers up to start rubbing them across her nipples. \n\n\"Can you lick your nipple for me?\" Laurel's voice had grown softer as she continued to touch herself. \n\n\"Okay,\" Amy shrugged shyly. She hadn't ever tried to do that before, but figured she'd give it a shot for Laurel. She looked down and firmly cupped her right breast and pushed the massive globe up. Amy was a little surprised at just how close she could actually get her nipple to her face. She ducked her chin and stuck out her tongue and gave the pencil eraser sized nub a firm lick. \n\n\"Fuck that's hot,\" Laurel hissed and her fingertips began making tiny circles around her already swollen clit while she pinched her nipple with her other hand. \"Ames?\" \n\nAmy had just been about to lick her nipple for a third time while she kept her eyes on the image of Laurel rubbing her pussy. She paused and replied, \"Yes?\" \n\n\"Suck it for me,\" Laurel was starting to pant as she increased the tempo of her rubbing. \"Please?\" \n\nAmy smiled. She liked pleasing Laurel, but she also liked the fact Laurel was looking at her while she played with her pussy. Not to mention the fact that licking her own nipple felt really, really good. \"Okay.\" \n\nAmy leaned her head forward a little further and pushed up, moving her boob towards her open mouth until she captured her swollen nipple between her lips. She closed her eyes and sucked. When she felt her nipple grow bigger in her mouth, she knew for an absolute fact this was not the last time she'd be doing this. She suckled even harder for a moment and then opened her mouth so that Laurel could watch as she swirled her tongue around it a few times. \"Do you like that?\" \n\nAmy looked up at her screen in anticipation of Laurel's response and glimpsed a brief frozen image of Laurel just starting to sit up and then the little messenger application on her screen went blank. \"What the heck?\" \n\nLaurel sat all the way up when the image of Amy froze and then disappeared to be replaced by the disconnection notice on her screen. \"Are you fucking kidding me?!?\" \n\nShe tried to reestablish the connection. Nothing. Laurel frantically let her IT skills kick in as she rapidly checked her pc functions and her connectivity. She figured out pretty quickly that the problem was on Amy's side. Her friend's internet service could have gone down, the battery on her laptop could have died, she could have lost power or who knows, maybe her laptop crashed. Whatever happened, there was nothing Laurel could do about it. \n\n\"Seriously?\" Laurel asked the universe and fell back with a groan of frustration. She was just starting to get close as she watched Amy suck on one of her large breasts. Laurel thought it might have been one of the sexiest things she'd ever seen. With a heavy sigh, she sat up and laid her head down on the arm of the loveseat and stared at her screen. She could have just watched some regular old porn and finished herself off, but decided she'd rather wait to see if Amy was able to reconnect. ",
        "Three hours later Laurel woke up to find herself still naked and still leaning against the arm of the loveseat in her basement. She was freezing, frustrated, her neck was stiff and she felt utterly exhausted. She closed her laptop and threw her t-shirt on over her head as she sleepily staggered her way back upstairs. At least the spare bedroom had soft pillows and a warm blanket. \n\n**** \n\nBy Saturday afternoon Amy's husband was feeling the worst of this super-cold and both of her kids had started to come down with the same symptoms. This meant both women ended up having to spend the remainder of their weekends playing nursemaid to their respective families. They managed to trade a few texts back and forth on Sunday, but neither of them really had the time to talk. Nothing else was mentioned about movie night or their late night video chat session. \n\nBefore either of them was ready for it, Monday morning reared its ugly head. Laurel had sent Amy a quick text Sunday night to report that her clan was finally starting to feel just a little bit better. That being the case, Amy had sort of half-hoped that Laurel might make another appearance at the gym this morning, but no such luck. Amy tried not to be disappointed as she continued onward and upward. As part of her efforts to improve her level of fitness, she had started making it a point of taking the three flights of stairs to her floor rather than the elevator at least twice a week. \n\nAmy increased her pace for the last five steps as the landing of her floor in the finance building was finally in sight. The sway and bounce of her large breasts increased with each step up and wasn't exactly uncomfortable, just a constant reminder that she didn't have the extra support of her sports bras. As she reached the top and came to a stop and her boobs did as well a split second later, a small grin passed across her face. She wondered what embarrassing, smart-ass comment Laurel would have made if she had been there to witness that little spectacle. \n\nShe continued to stand on the stairwell landing for a few more moments to catch her breath since she was just a little winded. Amy pushed it a little harder than usual this morning, thinking that maybe the additional aerobic activity would help her forget about her growing sexual frustration. Ever since she'd returned from the work conference, her sex life had improved dramatically. She'd grown accustomed to having several orgasms a week, but with her husband and kids sick, she hadn't had time to even think about seeing to her own needs. \n\nThe erotic dreams were only making that need worse and all of that flirting with Laurel had...Flirting? She wasn't even sure how to classify it. Incidents? Close calls? Whatever they were, they just added fuel to this particular fire. It didn't help that she still hadn't been able to let go of the mental debate that had been plaguing her. Should she pursue it or not? If anything, her current situation was making it even harder and Amy knew better than to try to make such an important decision when she was so outright horny. \n\nAfter a few calming breaths Amy collected herself and opened the stairwell door to her department. She greeted her co-workers and nodded good morning to her supervisor on the way to her cubicle. She went through her usual morning routine of putting her things away and booting up her computer. She checked her outlook calendar to make sure she didn't have anything planned for today other than her usual workload and then took the time to check Laurel's schedule. Maybe her friend would be able to slip out and eat lunch with her. \n\nUgh. Laurel's whole day was blocked out with her project and some meeting. That sucked. Amy couldn't wait until things settled down and they could just go back to their normal routine. She grabbed the stack of invoices from her inbox tray on the corner of her desk and clicked on her little desktop icon to open up the billing software application. Other than a quick restroom break, Amy focused on entering the previous day's billing and before she knew it her whole morning had slipped by. She was just about to save the last of her data when the little icon popped up on her toolbar indicating she had an email. \n\nThe sender was Laurel. \n\nShe could feel her cheeks tighten with a smile as she saved her spreadsheet and quickly toggled screens to her email. She opened the message and saw that it was a formal meeting invitation. \n\nWait...what? \n\nShe was hoping it was going to be a quick note with a lunch invitation. It wasn't. There wasn't even any witty comment or funny meme or anything like that. The email was nothing but a standard, formal meeting invitation. Amy looked at the details. The meeting was for that afternoon at 1pm in the conference room that Amy was pretty sure was actually located on the first floor of this building. She thought back and wasn't sure if she had ever even been in that conference room in the past 12 years. Maybe during her new hire orientation? She vaguely remembered getting stuck in there for a day filling out paperwork and watching videos. \n\nShe looked at the meeting request again. It just struck her as really odd. It listed Laurel as the host of the meeting. Why would Laurel schedule a meeting? Who schedules a meeting for right after lunch? Most people were busy trying to get back to their offices. It meant cutting her lunch short by at least five minutes...and why in that conference room of all places? If she remembered correctly, it was kind of a dark place with no windows and was stuck way back at the end of a hallway, almost as an afterthought. She couldn't even remember anyone ever using that conference room for an actual meeting...wait. Wasn't there that one time like four or five years ago when she heard a rumor that HR had used it to fire her old boss? \n\nAmy's stomach dropped and felt like it did whenever she was forced to ride a roller coaster. She hated roller coasters. She was fairly confident that she might literally throw up if HR showed up to this meeting. Was she in trouble? But why would she be in trouble? She hadn't done anything wrong. She never did anything wrong. Unless...what if someone from the conference had called in a complaint about how they had acted? Sitting in the back of the room, giggling and texting...and then that afternoon on the second day they had both gone braless. \n\nAmy closed her eyes. They had sort of flashed each other. Had someone seen them? Was that what this was about? No, that didn't make sense - if they were in that kind of trouble, HR would have taken action way before now. They wouldn't have waited over a month...would they? And why would she be in trouble if Laurel had scheduled the meeting? There had to be some reason why her friend was keeping the meeting formal...but what? If she had something to tell her, wouldn't Laurel have just texted her? \n\nAmy was trying really hard not to be worried which was so much easier said than done. None of this was making sense. She pulled out her phone and sent Laurel a quick text and noticed the time on her phone. Lunch was fifteen minutes away. Maybe Laurel would be able to at least get away to the cafeteria and have the chance to explain what the heck this meeting was about. \n\nAmy stared at her phone. \n\nNo reply...nothing. \n\nShe sat and tapped her fingers nervously on her thigh as she continued to stare at her phone...still no reply. She put her headset on and then reached over and punched in Laurel's extension. Pick up, she whispered to herself. She got Laurel's voicemail and left a message asking for Laurel to give her a quick call. Five minutes later she tried Laurel's extension one more time and continued to wait until it was one minute past noon. \n\nStill nothing...no return text and no return call. What to do? \n\nStop being silly, that's what, she admonished her inner voice. I'm not going to sit her and worry myself to death over something I can't control. She knew Laurel would never do anything to get her in trouble or hurt her. So...enough. She came to the mental decision that she was not going to stress out over this. She'd just have to put on her big girl panties and wait until the meeting to find out what was up. With a small sigh Amy reached into her bag, pulled out a Tupperware container and decided she might as well just eat her salad at her desk. \n\nShe finished her lunch earlier than she had wanted to - not that it was a big salad anyway - and tried to use up the rest of her time by concentrating on the Lee Child paperback she'd picked up at the airport, but never finished. The story was very interesting and Amy had a huge literary crush on the Jack Reacher character, but she wasn't having much luck keeping her mind occupied. She managed to actually read a few pages here and there while keeping one eye on the clock. Finally it was 12:50. She clicked the out-of-office feature on both her email and extension, decided to leave her purse locked up in her desk, but grabbed her phone and headed downstairs. She definitely didn't want to be late, but she also hoped that if she showed up a few minutes early maybe she would have the opportunity to talk to Laurel in private and find out what the heck was going on. \n\nAmy took the elevator instead of the stairs this time. Exiting the elevator on the ground floor, she went around the corner to the far hallway. Her low heels clicked and clacked as she walked to the very end of the long corridor and finally came to the door of the conference room. She tried the handle, but it was locked. She looked up and down the hallway and finally took a seat on the one and only cheap, plastic chair that was against the wall and waited. She crossed her legs and smoothed her skirt as she watched the far end of the hallway for Laurel. \n\nAs hard as she tried not to be, she still felt apprehensive and her body betrayed her when she saw that she was wiggling her foot nervously without even realizing it. She uncrossed her legs and took a deep, settling breath. It was 12:58pm and Laurel still hadn't shown up yet. Amy continued to focus on catching that first glimpse of the silhouette of her friend to appear at the far end of the corridor rather than let her imagination get the best of her. She glanced down at her phone and saw that it was exactly one minute until the meeting was scheduled to start. \n\nAmy literally jumped when the doorknob latch made a loud clicking sound and the door unexpectedly swung open. Laurel was standing there with her hand on the doorknob and a grin on her face looking at Amy. \n\n\"Hey, you.\" \n\n\"Oh,\" Amy quickly regained her composure. \"Wait, you were in there the whole time? What's going - \" \n\nLaurel put her finger to her lips and motioned with her head that Amy should come in. Amy's eyebrows narrowed into a questioning look as she soundlessly mouthed the words \"are you okay?\" Laurel had a sly grin on her face and motioned with her head again. Amy slowly stood up and walked into the conference room. She noticed the lighting seemed muted as she heard the door shut behind her. She quickly turned around to face Laurel. No one else was in the room...so far anyways. It was just the two of them. \n\nAmy clasped her hands nervously in front of her. \"What's going on?\" \n\n\"Nothing,\" Laurel shook her head with a smile and held out her arms indicating she wanted a hug. Amy just stood there looking at her with a confused look on her face. Tire of waiting, Laurel took two steps forward and pulled Amy into an embrace. \"Sorry for all the theatrics,\" \n\nAmy was caught off guard for a moment and then finally wrapped her arms around her friend and returned the hug. \"So this was...you just needed a break?\" \n\n\"Exactly,\" Laurel said quietly into her ear, \"I really miss our lunches and our emails and...I guess I just needed an Amy fix.\" \n\n\"Well,\" Amy laughed with a shaky voice, \"you scared the crap out of me.\" \n\n\"That definitely wasn't my intention,\" Laurel soothed as she finally relented and let go of the hug. \"My boss is driving me nuts over this project. I just had to get out of there for a little while.\" \n\n\"But...why the meeting invitation?\" She followed Laurel's lead and took a seat in of one of the surprisingly comfortable, large leather chairs that surrounded the long conference table. Amy sat in the chair at the head of the table by the door and Laurel grabbed the chair immediately to her left. \n\n\"I had to make this seem like an official meeting with a time and a place and all that or my boss would have had a cow,\" Laurel explained as she leaned back in her chair. \n\n\"Okay, but why this conference room?\" Amy asked as she looked around the dimly lit room. \"I mean we could have gone to lunch or something.\" \n\n\"That would have been too obvious,\" Laurel shrugged. \"He never would have signed off on a lunch meeting, so I booked this room, sent you the invite and informed my boss this was a meeting I couldn't miss.\" \n\n\"Wow,\" Amy shook her head in amazement at Laurel's boldness. \"I have to admit - you got skills, sister.\" \n\n\"Oh, you know I do,\" Laurel grinned and reached out to hold Amy's hand. \"Besides, we wouldn't have had any privacy.\" \n\n\"Yeah, I guess that makes sense,\" Amy agreed although it didn't make sense. Whatever, Amy was getting to spend time with one of her favorite people, so she didn't really care. \n\n\"I really had fun Friday night,\" Laurel smiled and her thumb stroked the back of Amy's hand affectionately. \"We should do it again. Make it a regular thing.\" \n\n\"Sounds good to me,\" Amy smiled back and felt her cheeks grow warm. \n\n\"Me too,\" Laurel winked and let go of Amy's hand and stood up. She smoothed out her skirt before reaching up and unbuttoning the top button of her blouse. \n\n\"Ummmm...are you hot or something?\" \n\n\"You know, I kind of am.\" \n\n\"It is a little warm in here.\" \n\n\"You got that right,\" Laurel replied, that smoky voice of hers sounding a little deeper than it had a moment ago and another button came undone. \"But probably not in the way you meant it.\" \n\nLaurel took a few casual steps towards the door as if to check something and then walked back to the table and unbuttoned another button of her blouse. Amy caught a flash of the royal blue satin material of Laurel's bra. \n\n\"Uh, why are you unbuttoning your shirt?\" \n\n\"Getting more comfortable,\" Laurel replied simply. She undid one more button so that top part of the cups of her bra and the swell of her lightly freckled cleavage were clearly visible. \n\n\"And why are you getting more comfortable, exactly?\" Amy understood that she probably should have been concerned, but found it hard to concentrate when faced with glimpses of Laurel's bra covered breasts. \n\n\"Because,\" Laurel said simply as she leaned back in her chair and pulled the hem of her skirt up a little. She let her fingers dance across her throat and then down her neck. She adjusted her shirt by pulling it further open to fully display her cleavage. Her eyes had been looking into Amy's the entire time. \"I think we have some unfinished business.\" \n\n\"Laurel,\" Amy was feeling nervous all over again, but for a very different reason. \"What are you doing?\" \n\n\"We were supposed to get off together, remember?\" Laurel's dark auburn locks had fallen forward a little so that her eyes were in shadow. \"I think you owe me one.\" \n\n\"So, you decided...to what?\" \n\nLaurel didn't say a word as she looked at Amy with her eyebrows raised. She ran the tips of her fingers back and forth along the tops of her breasts. \n\n\"Here? Right now?\" \n\n\"Yes...right here,\" Laurel flashed a wicked grin. \"Right now.\" \n\n\"Seriously?\" \n\n\"Uh, damn right seriously,\" Laurel countered as the seductive expression subtly changed into a sincere almost pleading look. \"I haven't had one moment of 'me-time' in over a week. After Friday night...well let's just say I'm beyond horny. I desperately need some relief, Ames.\" \n\n\"But...\" Amy still wasn't quite getting the why. \"We're at work...and...it's the middle of the day.\" \n\n\"Exactly,\" Laurel giggled and winked at her again. \n\n\"Laurel, we shouldn't,\" Amy reasoned. \"What if someone comes in -\" \n\n\"The door is locked,\" Laurel's voice dropped to a seductive whisper. \n\n\"Fine, but what if someone hears us?\" \n\n\"Like who? Why do you think I picked this conference room?\" \n\n\"What about...\" Amy's voice trailed off. She knew she was right to try and be reasonable about why they just simply could not do what Laurel was suggesting... but then again she also couldn't deny that the butterflies in her stomach had shifted into full acrobat mode. \n\n\"What about what?\" \n\n\"What,\" Amy started and then hesitated. \"What if I'm not ready?\" \n\n\"For what?\" \n\nAmy didn't respond right away. She just looked down and shrugged before finally whispering, \"To give you...you know. Your turn.\" \n\n\"Oh...oooohhhh,\" the realization hit and Laurel's sultry voice became reassuring. \"Relax, Ames, we're not going there or anything like that.\" \n\n\"We're not?\" \n\n\"No, silly girl. We're just going to play a little. Have some fun.\" \n\n\"We are?\" \n\n\"Of course...and you know I'm not stupid. That's why we're leaving our clothes on.\" \n\n\"Okay...\" Amy began and then stopped. She closed her eyes for a moment and took a deep breath before opening them again and looking straight at Laurel. \"What...\" \n\n\"Ames,\" Laurel sat up at what she perceived as her friend's continued hesitation and leaned towards her. \"I just...I guess I just need this right now, okay?\" \n\n\"Okay.\" \n\n\"Seriously, I think-\" Laurel started but then caught herself. \"Wait - did you just say okay?\" \n\nAmy nodded. \n\n\"Like, okay in agreement okay?\" \n\n\"I did,\" Amy looked up. \"And what I started to say was...what do you want me to do?\" \n\nLaurel paused with a little half-smile tugging at the corners of her mouth as her eyes searched Amy's face. \"Yeah?\" \n\nAmy nodded with more confidence than she really felt. \"Yeah.\" \n\n\"Oh, hell yeah!\" Laurel giggled as she sat back in her chair triumphantly. \"That's my girl.\" \n\nAmy bit her lip and beamed. \n\n\"Why don't you stand up?\" \n\n\"Wait, why do I have to stand up?\" Amy teased. \n\n\"Because I said so,\" Laurel scolded playfully and pulled the hem of her skirt up further so that the crotch of her matching royal blue panties were showing. \"Do you still trust me?\" \n\n\"Of course I do,\" Amy replied immediately with a grin. \n\n\"Then stand up for me,\" Laurel commanded. \n\n\"Fine, you win,\" Amy sighed dramatically but couldn't help but giggle with a mixture of embarrassment and excitement. She stood up with a flourish and put her hands on her hips. \"What now, mistress?\" \n\n\"Ooo, I kinda like that,\" Laurel teased back. She wiggled her shapely butt to get more comfortable and leaned her chair back a little further. \"Why don't you take off your sweater?\" \n\nAmy slipped off her cardigan and neatly folded it. She stepped forward and placed it on the conference table. She turned back to face Laurel who had a hungry look in her eyes as she stared. Amy nervously straightened her blouse. It was a light blue, a simple button-down with three quarter sleeves. \n\n\"Have I told you how sexy you are lately?\" Laurel commented. \n\n\"Thanks,\" Amy smiled. She surprised Laurel by reaching up and unbuttoning the top button of her blouse. She paused and cocked an eyebrow at Laurel. \"Was this what you had in mind?\" \n\n\"Yes, please,\" Laurel nodded as her hands continued to roam. \"Keep going.\" \n\nAmy turned her back to her best friend and quickly unbuttoned the next three buttons so that her shirt gaped open to reveal her white bra. It was new and although it had all of the typical underwire, full-figured support that a large busted woman required it was also very girly and sexy with the top half of the cups a see through lace. \n\nAmy pulled her shirt open even wider and then slowly turned back around to give Laurel a full view. ",
        "\"Wow,\" Laurel's mouth dropped open as she moved one of her hands down to cup her panty covered mound. \"You are so fucking hot.\" \n\nAmy desperately wanted to be sexy for Laurel, to give her friend what she needed right now. She swallowed hard at the feeling of her heart pounding in her chest and fought back the self-conscious nerves that were making her knees shake a little. She took a step forward and brought her hands up to gently caress along the outside of her large breasts. She knew how much Laurel seemed to like her boobs. Even though her hands were trembling slightly, she had to admit that if felt really good to have those green eyes watching her every move. \n\n\"Is this okay?\" Amy asked innocently as she used her fingers to slowly caress up and down the outer contours of her bra-covered breasts. She moved her hands down to cup each of the massive globes and lift them up, squeezing them together. She paused to pinch her nipples through the material and then continued to lightly massage her tits. \n\nLaurel didn't even blink as she nodded her head. \n\n\"Are you getting wet for me, Laurel?\" \n\n\"Uh-huh,\" Laurel nodded again and slipped her hand inside the front of her panties. \"I'm very wet.\" \n\n\"Mmmm, that is so sexy,\" Amy whispered. And it was true. A computer image was one thing, but the real life vision of her stunningly beautiful friend sprawled out in that huge chair with her shirt open and skirt hiked up touching herself was breathtakingly erotic. \n\n\"Join me, Ames,\" Laurel whispered urgently as she continued to stroke and pet her pussy. \"Sit across from me.\" \n\n\"Okay,\" Amy nodded and then hesitated with a little smile. She reached up under the sides of her skirt and then with a wiggle of her hips slipped her panties down and let them fall to the floor. She stepped out of them and then sat down in the chair and swiveled it so that she was facing Laurel with their knees almost touching. \n\nAmy rocked back and forth a few times as she worked on pulling up the hem of her skirt. The cold leather of the chair gave her a little thrill when her bare bottom touched it and her nipples somehow became even harder. She tried to mimic how Laurel had done it at the conference as she stared into her friend's eyes and then slowly let her legs fall open. \n\n\"Oh, fuck,\" Laurel actually moaned as she stared brazenly at Amy's exposed pussy. \n\nAmy nodded and then boldly reached down and ran a finger down along her outer lips feeling the smooth, bare skin. Amy watched Laurel's face morph into a serious scowl of arousal as she slowly ran that same finger back up her slit, parting her inner lips to dip it into her center, coating it nicely with her nectar. Laurel wasn't even aware that she unconsciously licked her lips as Amy brought that finger up to her mouth and gave it long, leisurely taste. \n\n\"Bitch,\" Laurel teased with a smile. \"You are such a copycat.\" \n\n\"Hey,\" Amy laughed and gave her finger one final lick. She brought her hands back to her tits so she could rub and pinch her nipples through her bra while Laurel watched. \"I learned from the best.\" \n\n\"You are so turning me on right now,\" Laurel groaned and started rubbing herself in earnest. \"Touch yourself again for me.\" \n\n\"I can do that,\" Amy smiled and scooted a little further down in her chair to get comfortable. Her hands traveled down until they were rubbing the tops of her thighs. Her right hand moved to begin softly stroking her swollen inner lips while her left hand started making tiny circles around her now engorged clit. \"Like this?\" \n\n\"Mmmhmmm,\" Laurel nodded and brought her other hand down to focus all of her attention on her aching sex. Laurel rubbed her clit harder and faster as she sank the middle finger of her other hand deep inside of herself. \"Just like that.\" \n\n\"Laurel?\" Amy's large breasts were starting to heave up and down as her breathing grew heavier. Her arousal was increasing by the second as she watched Laurel pleasure herself and she felt the first twinges of an orgasm start to build. \n\n\"Yeah?\" Laurel panted in reply over the increasingly louder squelching sounds of her fingers going in and out of her wet folds. She could not take her eyes off the large swells of Amy's tits as they jiggled and moved within the confines of the bra. \n\n\"This feels really good.\" \n\n\"Mmm-hmmm.\" \n\n\"I mean doing this here,\" Amy almost moaned, \"with you...together.\" \n\n\"It does feel good,\" Laurel agreed. Hearing Amy's voice while she touched herself was just what Laurel wanted right now. \"Really fucking good.\" \n\n\"Laurel?\" \n\n\"Yes?\" \n\n\"Are you going to cum for me?\" \n\n\"Uh-huh.\" Laurel gasped. That question coming out of her friend's mouth pushed her closer to the edge. \"Are you?\" \n\n\"I'm getting there,\" Amy managed before moaning quietly as she kept her eyes glued to the beautiful woman sitting across from her. \"We...we should cum together.\" \n\n\"Okay,\" Laurel sucked her breath in sharply through flared nostrils and replied. \"I'm really close, Ames.\" \n\n\"Uh-huh,\" Amy was arching her back slightly, \"me too.\" \n\n\"So close,\" Laurel suddenly sat up. She tried not to lose the rhythm of rubbing and fingering her pussy as she used her hips to scoot her chair even closer. She sat back again, both of her legs now in direct contact with Amy's. \"Almost there.\" \n\n\"Yes,\" Amy whispered as that familiar wave of sensations was just about to crash down over her. The electric charge of feeling Laurel's knees and thighs make intimate contact with her own was the last little push she needed. \"Do it, Laurel, cum with me. I'm...I'mgonnacum, I'mgonnacum.\" \n\n\"Fuck yeah,\" Laurel hissed. \"Don't...don't stop...\" and the rest of Laurel's words were lost in a low moan that was almost a growl as her release hit her. Laurel felt her pussy contract around her fingers as the muscles of her legs tightened and then she felt herself gush all over her hand. She hadn't cum this hard in weeks. \n\nThe two women continued rubbing and fingering their pussies, their eyes never leaving each other as the spasms of their respective orgasms coursed through their bodies. It seemed to go on for quite some time as they continued to move together, their knees and legs rubbing together as they tried to make it last as long as possible. They lost track of time until the last few ripples and twitches of pleasure slowly faded and they collapsed back into their chairs at virtually the same time. They continued to watch each other for another minute, chests heaving in and out, completely spent. \n\n\"That,\" Laurel's voice was hoarse when she finally broke the silence, pausing to blow a lock of hair out of her eyes, \"was fucking awesome.\" \n\n\"Agreed,\" Amy panted. \"Completely freaking awesome.\" \n\n\"I just love it when you talk dirty,\" Laurel quipped which made them both laugh. They settled into another comfortable silence, enjoying the afterglow of their mutual bliss. \n\n\"I swear if I don't get moving I'm going to fall asleep in this chair,\" Laurel announced glancing at her watch and with a groan finally managed to sit up. \n\n\"Do we have to?\" \n\n\"Don't make me come over there, young lady,\" Laurel playfully warned as she stood up and began pulling down and straightening out her skirt. \n\n\"Might be glad you did,\" Amy uncharacteristically teased with a smile. She was still slouched in her chair with her shirt open and her skirt hiked up. She winked at Laurel and reached up and cupped both of her large breasts and gave them a squeeze. \n\n\"Hot damn, I've actually corrupted her,\" Laurel laughed as she watched Amy cup and caress those magnificent breasts through her bra. As her eyes drank in the vision of her incredibly sexy friend, thoughts of what she might do if she actually did go over there flashed through Laurel's mind. She shook her head. They had to get back to work and reminded Amy of that. \n\n\"I guess you're right,\" Amy sighed and stood up as well. She continued to watch Laurel fix her clothes out of the corner of her eye as she reassembled her own outfit. She smiled to herself. This had been fun and exciting, but the most amazing part was it had finally helped Amy make that decision she'd been struggling with. She looked up as she was fastening the last button on her blouse when Laurel starting laughing quietly. \n\n\"What?\" \n\n\"I can't believe you thought I'd just expect you to do that.\" \n\n\"Do what?\" \n\n\"Lick my pussy,\" Laurel continued chuckling as she just bluntly put that out there. \"I mean I think it's sweet, but like I told you at the conference that was just something I needed to do for you.\" \n\n\"Okay.\" \n\n\"It was a favor...no strings attached.\" \n\n\"I know,\" Amy repeated with a smile and nodded her understanding. \n\nLaurel had no idea that their little session today had done a lot more for Amy than she realized. She had been agonizing over a decision for days, but now her mind was made up once and for all. No expectations, no strings attached. Amy was determined that the first chance she got, she had every intention of returning that special favor. Yep, it was decided. Amy was absolutely going to lick her best friend's pussy until she had an orgasm. \n\n\"Come here,\" Laurel smiled and drew Amy into another affectionate hug. \"Thank you.\" \n\n\"You're welcome,\" Amy giggled. \"And thank you.\" \n\n\"Seriously, I can't even tell you how much I needed that and I really appreciate you for being such a good sport.\" \n\n\"Trust me, it was my pleasure,\" Amy quipped and they both giggled while still embracing. \"Besides, you were there for me when I needed you.\" \n\n\"I know, but this was a little unusual and I know it made you uncom -\" \n\n\"Shush now,\" Amy interrupted her and pulled her friend in closer, pressing her breasts tightly against Laurel's. She wanted to make sure Laurel could feel her that her nipples were still rock hard. \"Best friends do favors for each other, right?\" \n\n\"Right,\" Laurel agreed and pulled back slightly to look Amy in the eye so she could thank her again. Amy surprised her by suddenly leaning in and up and pressing her soft lips to Laurel's mouth before she could speak. The kiss was tender and sweet. \n\n\"Then not another word,\" Amy whispered after breaking the kiss. \"You know I'm there for you, too...for anything.\" \n\n\"Thanks,\" Laurel whispered back. \"Love you, best friend.\" \n\n\"Love you too, best friend,\" Amy smiled. \n\n**** \n\nThe past week had been challenging. Everyone in Amy's family had ended up coming down with the super-cold except her. Taking care of all her husband and kids and getting them back to full health had really kept her hopping, but added on top of that was the fact that work had gotten really busy as well. To say Amy had been a little too preoccupied to be able to think clearly about her plans for returning the favor to Laurel was an understatement. \n\nAmy sat at her desk and took a deep breath and let it out as a big sigh. Yeah...\"the favor.\" She may not have had as much time as she would have liked to think about the logistics of her special time with Laurel, but that didn't mean she hadn't thought about it. She had...a lot. Amy tried not to dwell on it, but how could she not? Besides trying to come up with the right time and right place for something like this to happen, she couldn't help worrying about her cunnilingus skills - or basically her utter lack of them. \n\nWould she even be able to please Laurel? After everything Laurel had done to help her and how incredible she had made Amy feel, the last thing she wanted to do was disappoint her friend. Amy was starting to question whether or not she was making too big of a deal out of wanting to return that special 'favor.' Was she simply building it up too much in her mind? After all, what had happened at the work conference was starting to feel more and more like a once in a lifetime opportunity that might not ever happen again. \n\nNo, Amy chastised herself. This was a big deal, but it was also a good thing and it was going to happen. She just had to stop doubting herself and letting that doubt sabotage her plans. She had to look at the positives and how things were actually starting to smooth out - Laurel's family was finally healthy and her own family was almost over this stupid cold thing. In fact, Laurel had just told Amy yesterday that she was very close to finishing her project. So, Amy thought, enough with the gloom and doom. \n\nStill...she had to come up with just the right setting and opportunity to return that favor. So that's basically what it came down to - setting and opportunity, the where and the when. Amy continued to think about it as she finished up with the report she'd been working on and out of habit tabbed over to check her email. \n\nShe sat and stared at the email from her boss. The more she looked at it, the more she realized that it could work. Yeah, it could definitely work. She reread it again and looked at the details. It was perfect. She just had to make sure both of their husbands were okay with watching the kids for an evening. Amy opened the email and RSVP'd and clicked the little box that indicated a guest. \n\nShe pulled out her phone and quickly started texting. \n\n**** \n\nLaurel was at her own desk in the IT department focusing on updating the code for one of the tables within their company's internal system when her cell phone rattled on the desk next to her. She glanced at it and saw the caller ID was Amy. She picked it up and read the text. \n\nA: Hey, you busy? \n\nL: A little...still plugging away on my project. Only have one more table to update then I'm done! \n\nA: Awesome. I have a favor to ask. \n\nL: Sure. What's up? \n\nA: There's this fancy dinner thing for my department I told my boss I'd go to. Will you be my plus one this Friday night? \n\nL: Um, maybe? I have to check with Jeff. \n\nA: Already did. He thinks you deserve a night off, so he's got dinner and the boys, no problem. \n\nLaurel's brow furrowed. Okay, was that a little aggressive or was she just tired from a long day? Laurel finally smiled. No, Laurel shook her head, she was definitely tired. Amy was just being her sweet self and trying to be helpful. \n\nL: Okay, well thanks. I guess I'm your plus one then. \n\nA: Perfect! It's kind of a fancy thing, black tie and whatnot, so we have to dress it up, girl. \n\nL: Well, alright then. I'll be your arm candy and I won't even burp at the table. \n\nAmy smiled as she read Laurel's response. She felt so much more confident that she was actually going to be able to pull this off...and now she also felt more nervous than ever. This was really happening! \n\n**** \n\nRight after lunch on Friday, Laurel leaned back in her chair with a euphoric feeling of accomplishment. She had finally done it. The company's internal system was fully updated with the new codes. She'd run the tests and every table within the system was fully functional. Wow, how stressful had that been? Laurel typed out a quick confirmation email for her boss who she knew would follow up behind her and retest everything himself, which was fine. This had been a really important project, so he should do his due diligence...but she knew her work was rock solid. \n\nLaurel also knew she was toast for the rest of the day. She had some minor things to keep her busy until 5 o'clock, but nothing too important or stressful. She picked up her phone and looked at the text Amy had sent earlier with the details for the dinner thing she'd invited her to. It was in one of the banquet rooms at the finest hotel in the city, so Amy hadn't been kidding when she said it was going to be a fancy. \n\nLaurel was actually really looking forward to tonight. Things had been so stressful and crazy, it was going to feel absolutely wonderful to get all dressed up and get her drink on with her best friend. Amy had explained that it was some function or dinner or whatever with some suppliers that the finance department hosted every year and invited the entire department to attend. Usually only a couple of people besides Amy's boss ever went to these things, but she thought it would be nice to get out and eat some crazy good food and drink it up at the company's expense and Laurel was all for that. \n\nAmy had also let her know that she had some errands and things to do after work so she would meet her in the lobby of the hotel at 7pm. Laurel looked at the clock on her pc. She wondered if her boss would mind letting her get out of here a few minutes early today. \n\n**** \n\nLaurel stood in the lobby of the hotel in her strapless chiffon cocktail dress looking around for Amy. Laurel ran a hand over the layers of fabric that made up the skirt of her dress that was emerald green to match her eyes and wondered what was keeping her best friend. She had just been about to approach the front desk and ask where the designated banquet room was when a bellhop (did they even call them bellhop's anymore?) politely cleared his throat and handed her a folded piece of high quality stationary. \n\nLaurel was confused but started to open her clutch when the bellhop gave her a small smile and told her the gratuity had already been taken care of. Laurel nodded and flashed him a polite smile. \"Okay, thank you.\" \n\nThe note was handwritten and was from Amy. Sorry for running late. I need your help with something. Come up to suite 701. XOXO, Ames. \n\nLaurel stood there and reread the note a couple of times. This was a little odd, but she figured Amy might be having some type of dress emergency or something and had ducked upstairs until help arrived. Laurel glanced around the lobby and wondered if they took attendance at something like this or would anyone even pay attention if she and Amy came in late. Probably not. It didn't matter. Amy needed her so Laurel got on the elevator and pushed the button for the seventh floor. \n\nShe stepped out into the hallway and followed the little brass placards that indicated 701 was in this direction and made her way to the door of the suite. She knocked quietly on the door and heard a muffled feminine voice say something to the effect of come in. Laurel opened the door and stood in the doorway for a moment. The entrance of the suite led to what she guessed was some kind of sitting room that was kind of dark, but was sort of glowing. She quickly realized that none of the light fixtures or other sources of illumination were switched on, but the room was softly lit by several strategically placed candles. \n\nOkay, this was definitely different. Laurel thought she could detect just the slightest hint of...what was that scent? Cinnamon? Some mixture of spices? She couldn't really tell, but whatever the flavor, it was subtle and smelled wonderful. The figure of a woman appeared in the open doorway to the next room, immediately drawing Laurel's gaze. With the soft glow of the candlelight providing a dramatic effect, this woman's silhouette had an incredible voluptuousness to it. A smirk played across Laurel's mouth. She would know those pin-up worthy curves anywhere. \n\nAmy took a step forward into the room. Her long dark hair was carefully piled on top of her head with a few loose curls hanging down to frame her face. Her white sleeveless cocktail dress was gathered at the waist and flowed into a loose skirt that stopped just above her knees. Laurel's gaze immediately took in the fitted top with the scoop neck that really accentuated her friend's large bust and tantalizingly showed off her ridiculously deep cleavage. She looked amazing. Amy was holding two glasses of bubbling champagne and smiled as she stepped forward and silently offered one of the glasses to Laurel. The redhead accepted and they tapped crystal flutes gently together in a toast before taking a long drink. \n\n\"Ames,\" Laurel lowered her voice slightly when she finally spoke. \"What's this all about? I thought you needed help or something?\" \n\n\"Well, more along the lines of something,\" Amy admitted with a half-shrug and smiled. She took a deep breath and slowly blew it out. \"I've been doing a lot of thinking. I've thought a lot about our friendship and what you mean to me. I guess it's kind of strange since we haven't known each other for all that long, but I can't imagine what my life would be like if you weren't a part of it.\" ",
        "Amy paused to take another deep breath. Laurel reached out her hand and offered it to Amy who immediately took hold of it and held it tightly. She smiled again and whispered, \"Thanks.\" \n\nLaurel smiled back at her encouragingly. She knew that whatever Amy had to say was important to her from the earnest look in her friend's eyes. \n\n\"You're always there for me,\" Amy continued. \"You've listened to me rant, you've kept my secrets and you let me cry on your shoulder. You're one of the most patient people I've ever met. And you know just what it is I'm trying to say even when I can't seem to find the right words. Most of all, you make me laugh, even if it's at myself sometimes, and I don't know...you just make doing this thing we call life a lot of fun. Laurel, you are by far the best and truest friend I've ever had.\" \n\nThe redhead was a little caught off guard at the sincerity of Amy's heartfelt words. \n\n\"And I just wanted you to know that you always put me at ease even when I sometimes don't feel that way in my own skin. For the first time in my life, I have a best friend that I know loves me for who I am,\" Amy went on. \"I hope you know that I love you too.\" \n\nLaurel bit her lip slightly when tears threatened at the corners of her eyes. She didn't really trust her voice not to break so she simply nodded. \n\n\"Sorry, I wasn't going to ramble and here I am rambling...I just wanted you to know that I consider myself lucky to be able to call you my best friend...and I don't ever want to do anything to jeopardize or change that,\" Amy paused for a moment and brought Laurel's hand up to her lips and gave it an affectionate kiss. \n\nShe then looked deep into Laurel's eyes and a mischievous grin grew on her face. \"But we do share a rather unique bond. And I'm okay with this \"special\" friendship that we have. I mean, I really am. Are you?\" \n\n\"Yes,\" Laurel nodded, \"of course I am.\" \n\n\"And as one of the bestest, smartest people I know once said to me,\" Amy replied with a wink. \"I love you...but I'm not falling in love with you. This is not an affair or a hook-up or whatever - just an expression of our own, unique friendship. So, if this,\" and Amy gestured all around her, \"is somehow going to hurt that friendship...or change the chemistry we have...I need to know.\" \n\n\"Ames,\" Laurel had gone from choked up to really confused. \"I don't understand. What are you talking about?\" \n\n\"Well,\" Amy whispered and closed the distance between them until her ample chest was pressed up against Laurel's. She took both champagne glasses and leaned over to set them on the little side table. Amy resumed her close-up position to Laurel and then leaned in even closer until their lips were almost touching. \"Remember when you asked me for a favor? At the conference?\" \n\n\"Yes,\" Laurel answered cautiously and furrowed her eyebrows. \"I remember.\" \n\n\"You do?\" Amy asked playfully right before she pressed her lips softly against Laurel's. \n\nThis wasn't their first kiss, but it also wasn't something either woman was accustomed to. Laurel breathed in the understated, sweet scent of Amy's perfume and her eyes automatically closed. She was amazed all over again at how incredibly soft and luscious Amy's lips felt against her own. When she felt the touch of Amy's tongue slide along her bottom lip, tentatively asking for permission to enter, Laurel surrendered and opened her mouth. The kiss quickly became much more heated and intimate. \n\nAmy delicately placed her hand on the side of Laurel's neck and Laurel responded by sliding one arm around Amy's shoulder and the other around her waist. Amy's other hand came to rest on Laurel's hip. Both women tilted their heads slightly to the side as their mouths opened wider. They pressed their bodies closer together as they playfully explored each other's mouths with their tongues. They finally broke apart to come up for air as each woman elicited a heavy exhale of excitement. \n\n\"Oookay,\" Laurel cleared her throat as she opened her eyes and looked into Amy's. \"That was, um...wow.\" \n\nAmy moved back in close to nip at Laurel's lower lip softly. She smiled and then whispered. \"Was that a good wow?\" \n\n\"That was definitely a good wow,\" Laurel murmured and didn't resist when her best friend moved in to kiss her again. They started the process of lightly kissing each other's lips all over again, but that rapidly became a cautious journey of exploring each other's mouths with their tongues. It didn't take long for the kiss to deepen again as the heat began to build, but then Amy pulled back. She gave Laurel another quick peck on her lips and with a sly grin took a step back. \n\n\"Now about that favor,\" Amy said quietly as she reached up and pulled the strap of her dress off her shoulder. She repeated the process with the other strap and then slid the top half of her dress down to her waist. She was wearing a white long-line style bra top with lace trim that looked absolutely incredible holding up her large breasts. She slid the dress down over her hips and let it drop to the floor revealing the matching set of sheer lace panties. \n\nLaurel tried to swallow and reached over for her glass of champagne in an attempt to remedy the sudden dryness of her mouth. She had seen her best friend in her undergarments and for that matter naked and in some fairly intimate situations...but Amy had never looked this seductively beautiful in all the time Laurel had known her. It wasn't simply the soft lighting or the lingerie...it had more to do with the complete confidence Amy was showing. She was sexy, she knew it and it came across as overwhelmingly attractive. Laurel was blown away by how much she wanted this woman. How much she needed her right now. \n\n\"I actually don't quite remember,\" Amy playfully announced as she laid her hand on Laurel's upper arm and proceeded to trail her fingers up along Laurel's shoulder as she continued to walk a circle and ended up behind her friend. Laurel felt a tug and then a pull at the zipper on her dress and then Amy was helping slide it down and off. Laurel didn't resist and let the dress fall to the floor the same as Amy's had done. While Amy was still standing behind her she gently kissed Laurel's neck and then whispered, \"If I owe you the favor or if you owe me.\" \n\n\"Um,\" Laurel closed her eyes when she felt goosebumps rise on her skin from the tickle of Amy's breath. Amy traced a fingertip down Laurel's neck and the redhead could feel her nipples harden beneath the green satin and lace bra. \"I don't...I mean...you don't owe me anything.\" \n\nAmy walked back around in front of her best friend and patiently smiled. \"If you think we should stop now, just say the word.\" \n\n\"No!\" Laurel said a little too quickly and a little too loudly and then caught herself. \"No, that wasn't what I meant. I just don't want you to feel obligated -\" \n\n\"Laurel,\" Amy interrupted. \"I'm here because I want to be here...with you. I want this. Do you?\" \n\nLaurel nodded and Amy nodded back in confirmation as she stepped closer placing her fingertips ever so delicately along the side of her friend's face. Amy leaned in to touch their lips together yet again and their mouths seemed to just meld together perfectly. Amy pulled back slightly and then leaned forward and softly kissed Laurel on the cheek. She began trailing light kisses down to Laurel's chin and continued kissing all along Laurel's jaw until her mouth was just below the woman's ear. \n\nPausing for a moment, Amy whispered, \"I want you to cum in my mouth.\" \n\nLaurel literally gasped at those words as Amy maneuvered back a little for enough room. She slowly sank to her knees while looking up at her friend with that same sexy smile pulling at the corners of her mouth. Laurel let out a small groan as she watched Amy lean forward and tenderly kiss her on the stomach right above her navel. She watched in awe as Amy began kissing her way down to the top of her panties. As completely and utterly amazing as this was to watch, Laurel also knew that she wanted this to be perfect. \"Ames?\" \n\nAmy stopped just before she was going to plant a kiss on the crotch of Laurel's green satin panties and looked up. \"Yes?\" \n\n\"Could we maybe move this onto the bed?\" Laurel asked. \"I mean, if that's okay?\" \n\n\"Okay,\" Amy nodded and then added. \"If that's what you want.\" \n\n\"I do,\" Laurel nodded back. \"I think it would be more comfortable.\" \n\n\"Actually, that would be great,\" Amy smiled and then held out a hand and let Laurel help her stand up. \"My knees were starting to hurt.\" \n\nAs Amy regained her feet and faced Laurel, the two women reverted back to the goofy fun that defined their relationship when Laurel began giggling at Amy's comment. Amy smiled and then started giggling as well and they fell into each other's arms in an easy embrace. Laurel stepped away and grabbed Amy's hand and started leading her down a hallway. \n\n\"Uh, Laurel?' \n\nLaurel stopped short, fearing that maybe Amy had changed her mind. \"Yes?\" \n\n\"The bedroom is the other way,\" Amy grinned and hooked a thumb over her shoulder towards the opposite hallway off the sitting room. \n\n\"Seriously?\" Laurel laughed. \"Just how big is this friggin suite?\" They continued to giggle and laugh as Laurel reversed direction and finally lead Amy to the sleeping quarters and a very comfortable looking king sized bed. \n\nStopping at the side of the bed, they stood looking at each other, trying to be serious...But as confident as the curvy brunette was trying to be, Amy was still nervous and couldn't stop the giggles that erupted from her throat. She took Laurel into her arms again and kissed her. They looked at each other and giggled and smiled at the next steps their relationship seemed to be taking. The laughter and giggles began to subside as their hug got closer and they became aware of just how well the soft curves of their bodies fit together. Their lips found each other's again and they begin to kiss and run their hands up and down each other's backs. \n\nThe kiss deepened until they were making out passionately and Laurel reached up to fill her hand with one of Amy's ample breasts while Amy reached around to cup Laurel's panty clad ass with both of her hands. Laurel was groping and caressing Amy's large boob and running her thumb back and forth across her friend's nipple while Amy busied herself squeezing and massaging the cheeks of Laurel's ass until both women were gasping with pleasure. They intentionally fell sideways onto the bed and resumed making out as their hands continued to explore. \n\nAmy playfully pushed Laurel on to her back and forced her hands under and behind the ginger so she could unsnap Laurel's bra. Amy pulled it off and flung it across the room as Laurel arched her back and stretched at the feeling of being unencumbered by the garment. Amy began to kiss along Laurel's neck and then on down to her collarbone. Laurel purred a small groan of encouragement as Amy continued kissing lower until she gradually came closer and closer to one of Laurel's large, erect nipples. Amy feathered soft kisses all around Laurel's soft breast, getting as close to her friend's left nipple as she possibly could without actually touching it. \n\nLaurel could feel Amy's warm breath washing across her hardened nub and her green eyes watched intently as her friend's mouth kissed nearer and nearer to her nipple. The hand Amy wasn't supporting her weight on floated up the curve of Laurel's ribcage and covered her friend's other breast as she continued to kiss and lick. Amy's hand began to knead it gently as her lips closed around the thick nipple of the opposite tit. She began to swirl her tongue over the swollen bud and felt it harden and extend even further as she alternated sucking and flicking it with her tongue. Laurel was starting to breathe heavy at the incredible feeling of Amy's mouth on her boob and then gasped when she felt her friend's teeth. Amy started pinching Laurel's other large nipple between her finger and thumb as she continued sucking and nibbling. She increased the pressure of both until Laurel moaned out loud. \n\n\"Take this off,\" Laurel interrupted her with an urgent whisper and tugged gently on the strap of Amy's bustier-like lingerie top. \"I need to feel you against me.\" \n\nAmy reluctantly stopped adoring Laurel's breasts and sat up. She slowly unhooked the front clasps on the long-line style bra and pushed the straps off her shoulders. She paused dramatically before letting it slip completely off. Sitting up fully on her knees, towering above Laurel, Amy reached her arms over her head to unpin her hair, proudly displaying her large bust for Laurel. Amy loved that look of hunger in her friend's eyes and slowly brought her hands down to cup her full, round breasts with a demure little smile. She continued to pose and tease as she pushed her boobs together and then gave each of her nipples a little pinch. Amy then carefully lowered herself down until her huge chest was pressed firmly against the cushioning of Laurel's naked breasts. The pillowy warmth of their skin touching, their hardened nipples poking into each other's soft, sensitive breast tissue as they slowly moved against each other was an indescribably delicious feeling. \n\nAmy craned her neck forward to give Laurel a peck on the lips. \"Is this what you had in mind?\" \n\nLaurel nodded. Amy grinned and gave Laurel another kiss on the lips before she got up on her hands and knees. She crawled forward until her heavy, round breasts were hanging pendulously over Laurel's face. She cupped her right breast and brought the erect tip to Laurel's slightly parted lips. \"Or was it this?\" \n\n\"Fuck yes!\" Laurel hissed and opened her mouth to attack the hard peak that was literally resting against her bottom lip. \n\nAmy gasped as Laurel sucked as much of her boob into her mouth as she could fit. Her breasts felt so full and warm and Laurel was doing something to her nipple with her tongue that felt almost magical. Amy knew her pussy was already soaking wet and when Laurel's hand reached up to take hold of her other boob and began pulling and tugging on her nipple, she had a feeling it wouldn't take much more to bring her to her first orgasm of the night. As lovely as that sounded, Amy had to take back control. This was about Laurel's pleasure more than her own...at least right now anyways. \n\nAmy finally gathered up enough of her wits to pull away and sat back on her calves. Laurel groaned in frustration and tried to sit up and follow her, but Amy was ready and put both hands on Laurel's shoulders and pushed the woman back, following her down to the bed. Amy had used her momentum to pin her friend on her back. Victorious, she smiled down into Laurel's face. \"I'm in control here, bub.\" \n\n\"Is that right?\" \n\n\"Yep,\" Amy nodded and lowered down to kiss her friend again. Their lips touched softly and then the two friends automatically opened their mouths and it became another deep, lingering kiss. When they finally pulled apart, both women were breathless. \"Whew...um...so yeah, don't forget it.\" \n\n\"If that's your idea of being in control,\" Laurel sighed. \"I surrender.\" \n\n\"Surrender accepted,\" Amy murmured as she kissed her way back down to spend some more time on Laurel's breasts. \"Now hush, I'm trying to concentrate.\" \n\n\"Mmmmm, uh-huh, you should do that,\" Laurel gasped as her nipple slipped past Amy's lips and she felt the warm, moist pressure of her best friend sucking on her tit. She stroked Amy's hair as the brunette continued running her tongue over the sensitive tip and whispered. \"Yes...just like that.\" \n\nLaurel felt cool air on her breast as Amy released the nipple from her mouth and started slowly kissing her way down her friend's stomach. Amy lingered for a few moments. She was relishing the sensation of her lips touching the flat, toned skin of Laurel's abdominals, but she was also stalling, trying to work up the last minute courage to go further south. She kissed a bit lower and ran her tongue along the waistband of Laurel's panties. \n\n\"Take your time,\" Laurel said softly as if reading her mind. \"Just do what feels good to you.\" \n\nAmy nodded. She took a deep breath and then with a grin, got up off the bed. She leaned over and kissed Laurel on the cheek, then on her neck and then right in the valley between the woman's breasts before grasping the sides of Laurel's panties. Amy slid them down and off in one quick motion and then stood back for a moment, admiring the absolute beauty of her friend's naked body. Laurel looked so incredibly sexy. What was I so nervous about? Amy thought. I want to kiss and ravish every inch of this alabaster skinned goddess. \n\nRather than resuming her position on the bed, Amy knelt down on the floor and pulled on Laurel's leg until the redhead changed positions and scooted her butt towards the edge of the bed directly in front of Amy. Amy pulled her just a little closer and then cocked her head, judging the new positioning and nodded. That ought to do it - the perfect my-pussy-is-about-to-be-licked-by-Amy position. \n\n\"Is this really necessary?\" Laurel raised her eyebrows. \"What was the whole point of coming to the bed?\" \n\n\"Zip it,\" Amy warned with a sly smile as she sat up higher on her knees and leaned over to kiss Laurel on the stomach. She looked up at her friend through her veil of loose hair. \"I'm not exactly built for lying on my stomach for any length of time.\" \n\n\"Ah,\" Laurel understood and nodded. She closed her eyes as Amy's kisses traveled lower. \n\nAmy paused one more time to reach over and grab one of the pillows off the bed. She got up for a second to plop it down on the carpeted floor under her knees. There that was better, now she was ready. She resumed kissing all around Laurel's lower stomach and hips and then worked her way down a little further. Laurel spread her legs a little wider as Amy sat back on her haunches and planted a kiss on Laurel's well-groomed landing strip. Amy nuzzled the soft, close-cropped pubic hair on Laurel's mons that was trimmed into the shape of a heart with her nose and savored Laurel's musky scent. Amy closed her eyes as she leaned forward a little and kissed Laurel directly on her swollen labia which resulted in a deep sigh from her friend. \n\nAmy experimented by giving Laurel's swollen outer lips a gentle, tentative lick and followed that up with another. This wasn't nearly as intimidating or scary as she thought it was going to be. It was actually really exciting. She gently placed her hands on the inside of Laurel's thighs for support and opened her mouth wider and dragged the flat of her tongue up the center of Laurel's slickness, parting the inner lips in the process and fully tasting her friend's wetness. Amy stopped for just a second. Wow. She actually really liked the way Laurel tasted. So she did it again with a little more enthusiasm which brought about a louder, longer kind of half-sigh and half-moan. \n\n\"Mmmm,\" Laurel purred. \"That feels really good, Ames.\" \n\nEncouraged, Amy continued to alternate kisses, licks and nibbles all around the sides and outer lips of Laurel's pussy as she explored the smooth folds and softness of her skin. She moved a little towards Laurel's center and did the same with her friend's inner lips, teasing them apart with her tongue as she continued her exploration, listening for Laurel's sighs and moans to know what felt good and what felt even better as she explored with her lips and tongue. Amy worked her mouth into position and then stuck her tongue out and gently pushed it as far as she could get it into Laurel's opening. \n\n\"Oh, fuck,\" Laurel breathed loudly and arched her back as her hands reached down to loosely grasp Amy's brunette curls. \n\nAmy withdrew her tongue and gave Laurel's pussy another long, slow lick from bottom to top. Laurel shifted her hips a little, pushing her body towards Amy. Amy watched Laurel's scowl as she gave the woman's pussy another slow lick and then lowered her head slightly to push her tongue back into the velvet depths of her center, trying to draw out as much of the nectar as she could get. ",
        "Laurel had taken her hands out of Amy's hair to prop herself up on her elbows. Amy was well aware that Laurel was captivated by her every move. She had guessed correctly that the visual of her best friend licking her pussy was almost as good as the actual act to the redhead. With her mouth covering Laurel's entire pussy and her tongue lapping deeply at Laurel's center, Amy made it a point to widen her blue eyes and look directly into the deep green eyes that were watching her so intently. This earned Amy another one of Laurel's throaty moans of pleasure which only increased Amy's own level of arousal. \n\nAmy stopped licking and lapping and sucking for a moment and Laurel groaned a quiet protest. She sat up just a little straighter and brought one of her large breasts up so she could lick her own nipple while Laurel watched. Amy used both hands to really push her boob up higher and put her nipple between her lips. Laurel gasped in excitement and began thrusting her hips forward. \n\n\"That is so fucking hot,\" Laurel groaned as she watched the brunette suck on her own tit. \n\nAmy smiled and then whispered seductively. \"You like that, baby?\" \n\n\"Yesss!\" Laurel moaned again, but more so in acknowledgement of the just learned fact that she absolutely loved it when Amy called her baby. She watched as Amy reached down and dipped one of the tips of her fingers into Laurel's pussy and then rubbed it all around her nipple. Amy gave her a sly little smile before lifting that large, beautiful breast back up and sucking Laurel's juice off of it. Laurel didn't even dare blink as she watched in awe. \n\nAmy had a thought as she watched Laurel's hips involuntarily buck up and down with need and how the muscles of Laurel's thighs were rhythmically moving her body forward just a fraction at a time, pushing her sex closer to Amy. Amy took her nipple from her mouth and leaned forward to rub the roundness of her large boob against the wet folds of Laurel's pussy. \"Does this feel good?\" \n\n\"Fuck!\" Laurel cried out. \"Do it again, Ames. Please...do that again!\" \n\nAmy shifted her position slightly to get a better angle and leaned in again to start rubbing her big breast up and down against the slickness of Laurel's sex. Laurel's moans were becoming louder and she propped herself back up on her elbows so she could watch. \n\n\"That feels so fucking good, don't stop.\" \n\nAmy pushed forward and kept rubbing her large tit up and down against Laurel's pussy. Laurel moaned louder and her hips had begun to pump and grind against Amy's breast. Amy finally got a feel for the rhythm of Laurel's movement and was able to time her motions. She felt her hardened nipple glide over the wet, swollen nub of Laurel's clit which caused the redhead to shiver and moan louder. Amy concentrated her movements into rubbing the hard tip of her breast against Laurel's clit over and over and Laurel started to gasp and arch her back as her legs started quivering. \n\n\"Don't...don't...stop,\" Laurel managed to breathe before the moan in her throat caught and her body suddenly convulsed. \n\n\"Uh-huh,\" Amy whispered encouragement. \"Cum for me, baby.\" \n\nAs soon as Amy spoke those words Laurel fell onto her back and brought her hands up to her breasts to begin pinching and pulling on her nipples. Her body convulsed again and it felt like every one of her muscles contracted at the same time for a brief moment before a feeling of total and utter bliss washed over her from head to toe. It felt like she had slid into a warm pool of liquid pleasure as wave after wave of that bliss pulsed over her entire body. The pulsating waves kept going as Amy continued to rub and Laurel rode her seemingly endless orgasm out, her hips pumping and grinding her pussy against Amy's boob. Gradually Laurel's movements slowed and she released a low, quivering moan that quickly turned into a series of whimpers as her body finally started to come back down to earth. \n\nOnce she was sure Laurel was finished, Amy gave Laurel's pussy a final soft kiss and then got off of her knees and climbed up onto the bed beside her best friend. She was on her side facing Laurel with her head propped up on her arm. Laurel managed to crack one eye open and they shared a smile. She looked at Amy's shiny mouth and chin and glanced down at Amy's chest that was covered in the same shiny glaze and giggled. \n\n\"You're a mess.\" \n\n\"A hot mess,\" Amy agreed and leaned over to kiss Laurel gently on the mouth, letting her friend get a little taste of the sweet juices that were all over her face. \"So...was it a good one? Did I do okay?\" \n\n\"Are you kidding me?\" Laurel closed her eyes as if savoring the feeling all over again. \"That was, I don't know if a word like incredible really describes it...it was definitely top five all-time - hell, top three for that matter. I mean, it was just fucking perfect, Ames.\" \n\n\"Really?\" Amy whispered excitedly as a huge grin spread across her face. \"Even though it wasn't like traditional or whatever?\" \n\n\"I'm pretty sure there aren't like any rules or anything,\" Laurel reassured her. \n\n\"You know what I mean.\" \n\nLaurel leaned over and looked intently into Amy's eyes. \"And I meant what I said - that was incredible...and epic and...thank you.\" Laurel leaned a little further forward and brought her lips to Amy's and kissed her tenderly. \"Seriously, loved it and love you. Now own it, Ames.\" \n\n\"Okay, then,\" Amy giggled. Laurel lay back down to cuddle some more. Amy giggled again. \n\n\"What?\" \n\n\"Nothing,\" Amy replied through her giggling. She laid there trying to stifle her laughter and while looking at the ceiling and announced loudly. \"Just doing what you told me to do. Owning it. I owned that pussy.\" \n\n\"That's not exactly what I meant,\" Laurel chuckled. \n\n\"Guess what?\" \n\n\"I'm not going -\" \n\n\"Guess what?\" \n\nLaurel sighed and finally replied, \"What?\" \n\n\"I owned that pussy!\" \n\n\"I take it back,\" Laurel chuckled as she couldn't help but start to laugh herself as well. \n\n\"Uh-uh, too late for that,\" Amy continued giggling as she sat up and leaned over to speak directly to Laurel's sex. \"Hey pussy, did you hear the latest? I owned you!\" \n\n\"I think I have seriously corrupted you,\" Laurel laughed and held out her arms until Amy lay back down and turned onto her side and cuddled into them. They continued to giggle and whisper until their lips touched. Suddenly all of their energy was put into kissing. \n\n\"Wow,\" Laurel exclaimed when they finally pulled apart. \"I don't think I'll ever get tired of that.\" \n\nAmy giggled and then kissed Laurel again for good measure. \"Me neither.\" \n\n\"So,\" Laurel smiled. \"I guess you're definitely okay with this special friendship of ours? \n\n\"Yep, definitely. You?\" \n\n\"Completely,\" Laurel nodded. \"The only question I have is what do we do now since we're all even on favors and whatnot?\" \n\n\"Well,\" Amy smiled and blushed. \"Um, there is this one more favor that I was going to maybe ask you about.\" \n\n\"Really?\" Laurel raised her eyebrows, intrigued. \"And what favor would that be?\" \n\nAmy bit her lip in hesitation, but then rolled over and jumped out of the bed and disappeared down the hall. Laurel had watched the naked, curvy body of her friend bounce out of the room and once more marveled at just how extraordinarily sexy Amy was. Laurel felt the first tingle of heat start low in her belly and knew that she was getting wet again. She hoped Amy was up for another round. \n\nAmy came back into the room holding something behind her back which afforded Laurel an opportunity to admire those astonishingly big, round breasts as they jiggled and bounced with each step. Amy crawled back on the bed and placed a gift bag in front of Laurel. \n\n\"What is it?\" \n\n\"Just open it,\" Amy instructed. She watched as Laurel dug through the tissue paper. \n\nLaurel had just the slightest inkling that it might have been a toy of some kind since Amy didn't have any experience in that arena. She finally got through the jungle of tissue paper and pulled the sides of the gift bag open wide as she looked inside. Her eyes flashed up to Amy's and a grin spread across her face. \"Seriously? This is the favor?\" \n\nAmy blushed, but nodded enthusiastically. \"Totally serious.\" \n\nLaurel laughed. \"I really have corrupted you.\" \n\n\"Probably,\" Amy laughed too. \"But what are friends for, right?\" \n\nLaurel pulled the realistic looking dildo out of the bag and held it up. It was a very nice sized penis, about 8 inches long and thick and was the complete package so to speak with a set of balls at the base and it even had fabricated veins running up and down the shaft. It was soft and spongy and felt just like a real cock, the only thing making it obviously artificial being the bright pink color. Laurel examined the dildo and noticed Amy was nervously looking from the fake cock to Laurel's face and back again. \n\n\"There's more,\" Amy said quietly. \n\n\"There is?\" Laurel smiled and reached back into the gift bag. She felt something on the bottom and pulled it out. Laurel held up the sturdy looking leather harness which looked almost like a pair of leather bikini panties with some additional straps. The dildo wasn't just a dildo, but could also be turned into a strap-on...and not just any strap-on, but one that was apparently made for some serious fucking judging by the sturdiness of the harness. \n\nLaurel pursed her lips thoughtfully. \"So...what favor are you asking for exactly?\" \n\n\"Did I get the wrong thing?\" Amy raised her eyebrows in sudden confusion. \"I mean, I thought it was for...you know.\" \n\n\"Oh, it is,\" Laurel laughed and leaned closer to Amy. She took the fake cock and ran it along the top of Amy's thigh as she lowered her voice, \"but were you thinking of giving or receiving?\" \n\n\"Well,\" Amy's eyes shone with excitement as she grinned. \"I was sort of hoping...\" \n\n***** \n\nNote: Depending on what you (the readers) want, I think there's still a lot more to explore with these two...such as what happens next, Laurel's backstory - and well, you get the point. I encourage you to leave comments and don't forget to vote. Thanks! - FUN"
    ],
    "authorname": "loverofFUN",
    "tags": [
        "big breasts",
        "best friends",
        "pussy licking"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-favor-returned"
}