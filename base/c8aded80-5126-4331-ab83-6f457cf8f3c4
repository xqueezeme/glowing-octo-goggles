{
    "title": "Victoria's Secrets",
    "pages": [
        "All characters are aged 21+\n\nThis is my entry for the 2021 St. Valentine's Day contest.\n\nIt is a slow burn love story and I hope you enjoy it as much as I do. \n\nIf you do like it please read my others.\n\nI am happy to receive comments and PMs. CONSTRUCTIVE criticism is always welcomed.\n\n~~~***~~~\n\n\"Alex!\" A husky female voice called his name out from the crowd.\n\nAlex perked up and searched for the owner of the unrecognisable voice. Being a little short of six-foot-tall allowed him to look over the heads of the throngs of people crammed between the advertising stands. Despite being late Saturday afternoon, 'The London Ski and Snowboard show' was still busy with visitors. \n\n\"Alex!\" The low husky voice sounded close, then a warm hand landed on his arm. The hand belonged to a beautiful slim brochure wielding saleswoman in front of him. She was about six inches shorter than him, with blond shoulder-length straight hair. Her bright white silk blouse embroidered with the logo 'Snow Adventures.' The blouse was of a higher quality than the other polo shirt wearing salespeople in the show. Maintaining her hold on his arm, he saw excitement on her face, showing she was pleased to see him.\n\n\"Oh. Hi.\" Alex tried to read her name tag without seeming to stare at her tight blouse. He searched her face to find clues as to her identity, which drew a barrel of blanks. How on earth could anyone forget someone as pretty as this?\n\nThe pressure to respond weighed on him, causing him to blurt out in panic, \"I'm sorry, but how do you know me?\" There wasn't anything he could hang a straw of recognition on. Vicky saw the slight furrow on his brow. \n\n\"Haha. Vicky Parks, don't you remember? We were at Bristol Grammar School sixth Form together. We went on loads of trips together.\" She spoke with confidence, standing straight with her shoulders back. Her eyes confirmed she must know him and it looked as if she wanted to say more but didn't or couldn't? \n\n\"I'm sorry. Jeez, that was six years ago!\" Alex's mouth was drying faster than a desert. His mind raced to recognise this beauty in front of him, \"I'm sorry this is embarrassing.\" \n\n\"You're 22 years old. Your Dad is Brian, your mum is Sophie and sister Tanya.\"\n\n\"Ah! Haha. Right on all accounts.\" She must have known Alex reasonably well, as she was right about his age and his family's names. Alex's throat dried further as his face flushed with embarrassment. The stranger's face and posture were showing she was now getting frustrated with his blank looks.\n\nShe stepped in close and said in a soft husky voice, \"Alex, I'm desperate. It's been a long day. Having worked through lunch, the boss is happy for me to go. See those 4 creeps at the tall brochure display rack on the stand behind? They've been drinking and keep returning to the stand, harassing me and the other girls. Being on my own, I don't want to leave with those creeps around. Can you at least pretend to remember me for two minutes and take me for a coffee?\" \n\nBehind her was a stand displaying the same 'Snow Adventures' logo as on Vicky's blouse. Ignoring the three other staff members, there was a group of four men that would be familiar in any bar. They were pretending to scan the brochures whilst leering and making sexist gestures at the remaining saleswomen.\n\nVicky looked perplexed. Fidgeting as she waited for an answer whilst biting her lower lip. This all played into Alex's old-fashioned ideals of helping a damsel in distress. Also, any woman who is willing to acknowledge his existence deserved to be recognised, so he nodded in agreement.\n\n\"Vicky, I didn't recognise you, wow you have changed.\" Alex acted out his fantasy role of being a knight in shining armour. \n\nShe relaxed and drew him out of the thronging crowds back to her sales stand. They did a polite hug with European cheek to cheek kisses. Her sweet delicate perfume drifted to embrace Alex through the hot, dry, and sweaty show hall, like a pleasant breeze. Her cheeks were soft and cool on his and her face relaxed with a wide grin as she mouthed 'Thanks'.\n\nVicky spoke to the sole male on the stand who wore a crisp white shirt with logo and nametag. \n\n\"Dave, is that ok to knock off now? This is Alex, an old sixth form friend who promised to take me out tonight,\" She asked, although her voice was a pitch higher and contained less of its huskiness. \n\nIt did the trick as the four creeps slouched off, disgruntled. \n\n\"Hi, Alex,\" Dave said as he came over and shook his hand.\n\n\"Thanks, Vicky. Yes, that is okay, you've been a great asset today. I'm sorry about those guys. Have a splendid night out tonight and we'll still see you tomorrow. Don't forget the weekend after next, in Birmingham?\"\n\n\"Thanks, Dave, I've enjoyed it. No worries, I'll see you tomorrow and in Birmingham.\"\n\nVicky ducked behind the desk on the display stand, retrieving her silvery black puffer ski coat and purse. When she changed out of her high heels to some flatter shoes, she gave Alex and Dave a display of her curvaceous, peachy arse, as it fought to escape her black knee-length pencil skirt.\n\nVicky returned to Alex and said, \"Come on, I need that coffee and there is a caf\u00e9 just around the corner.\"\n\nAs they walked away, her arm slipped around Alex's waist, as if it were the most natural thing to do. He reciprocated to discover her slim build with nice hips. She walked with confidence, her hips swaying under his hand.\n\nThe cafe was almost empty, because no one wanted coffee this late in the afternoon. Vicky steered them towards one of the small vintage gondola style cabins for couples. The more confined cabins had tiny tables, ensuring they would be sitting close together.\n\nVicky slipped her coat off and reversed into one of the gondola booth seats, sitting down first then bringing her knees in. It was as if she felt Alex's gaze and looked up to catch him admiring her knees when her pencil skirt rose to expose them. His cheeks burned at being caught red-handed, but she smiled as if she enjoyed the attention.\n\nAlex's chivalrous side asked, \"What would you like to drink?\" Hoping it would also act as an apology for not recognising her.\n\n\"A skinny Latte and any pastries if they have any, thanks? After working through lunch, I'm famished.\" Her voice returned to a lower, feminine, husky tone.\n\nUp at the kiosk, Alex ordered drinks and brought a selection from the few pastries left. Vicky was watching him intently and as soon as his eyes met hers she glanced away, blushing. 'Touch\u00e9.' He thought. \n\nShe was toying with the salt cellar, rotating it on its bottom edge. Reminding Alex of someone he couldn't place. Their drinks and the plate of pastries barely squeezed on the tiny table. Alex squeezed his backpack, full of show information and brochures, with his coat behind his chair. Vicky giggled, watching him squeeze into his seat with none of her grace.\n\n\"Thanks.\" Vicky smiled as she added sugar to her coffee.\n\nStrangely, she sugared her coffee the same familiar way as Alex, which shocked him. Gathering three sachets at one end, shaking them twice, tear the tops off and pour all three onto the froth at once. Then push the floating sugar through the froth with the back of her spoon to stir. To then finally suck the froth off her spoon. \n\nWhilst waiting for her coffee to cool, Vicky devoured the first pain-aux-chocolate. The way she licked her lips after each bite caught Alex's interest. After her last bite, her luscious wet tongue searched out the last flakes of pastry and a smear of chocolate on her lips. She raised a dainty fingernail to her lips, to clear the chocolate from the one corner. Her neutral nail polish highlighted her moist red lips. She then sucked her finger clean, savouring the last of her pastry. It was the most seductive gesture he had ever seen. \n\nHer pastry finished, Alex's eyes zoomed out hoping for any clues in her face, but her green eyes gave nothing away. She grew a delicate smile under her button nose, creating cute dimples. It gave her an attractive elfish look to her soft face, which to Alex seemed to lack a few freckles. None of these details provided him with a solution.\n\n\"Can the pretty maiden save her knight in shining armour any further embarrassment and explain how we know each other?\" Alex's heart thumped in his chest in anticipation.\n\n\"Alex, you have always been this pretty maiden's knight in shining armour.\" She smiled, relishing his discomfort.\n\n\"That doesn't answer my question.\" Now, Alex was frustrated, \"Even I would remember someone as pretty as you.\"\n\n\"Haha, I'm in a secret disguise. First, let's see if you can work it out. We both went on the History trip to Italy, the ski trip to Austria, the Alpine trek, and I used to watch you play rugby as often as possible.\"\n\nAlex's mind raced, but no blond-haired Vicky came to mind. What was her secret disguise? She beamed her wonderful smile again, showing she would not make this game easy. Her small, rounded, button nose hinted at a memory in the mists of time, yet still out of his grasp. Panicking inside now, something from earlier that may expose another clue popped into his mind. \n\n\"Um, your voice did rise in pitch when you talked to your boss?\"\n\n\"Oh, so you noticed? Haha, although I hoped you would recognise my voice.\"\n\n\"You give me too much credit as a bloke and because your secret disguise is too good,\" Alex hoped that the pity card would save him.\n\nShe laughed out loud, \"Maybe I am giving you too much credit.\"\n\nAlex's memory banks ached under the strain. However, her mannerisms and banter reminded him of someone long forgotten. A silhouette of a face was building in his head and a name was on the tip of his tongue. His brain frustrated him by holding onto the remaining vital information. Her name 'Parks' rang a bell, but how popular a name was it? Vicky read his frustration on his face. it's no wonder why he hated quizzes.\n\n\"Give up?\" She asked. \n\nAlex nodded, hoping his lack of recognition wasn't an insult to her. Shrinking back, he waited for her forthcoming disclosure to slap him with further embarrassment. \n\n\"Last big clue, you, my brother and I were best friends.\" \n\nShe smiled knowingly and sat back with an intense look about her. It was as if she were waiting for Schrodinger's box to open with Alex inside! \n\nAlex searched the jigsaw puzzle of his memories and only one-piece fitted that clue, although it left other pieces unconnected.\n\n\"Rich? But he didn't have a sister, only a twin brother Mike ... Oh!\" Now all the jigsaw pieces fell together as at last Alex's brain linked his memories to the clues and Vicky. Her elfin features, the button nose, dimples, green eyes, the salt cellar habit and the sugar, all were Mike! ... Mike Parks!\n\nBecause Mike and Rich were fraternal twins, they were like chalk and cheese but were closer than any other siblings Alex knew. Their opposite personalities were complimentary as they would bounce jokes, banter, and ideas off each other. They were better than any comedy duo. For the two years of the sixth form, Alex and the twins were inseparable, like the three musketeers. Although Alex was always more drawn to Mike and they spent more time together.\n\nVicky looked at Alex with eyebrows raised, tense whilst still waiting for him to comment. \n\nStill digesting this, confusion ran through him. A part of him welcomed Vicky, knowing that she could once again fill the void of companionship that had remained empty for four years. Another was shocked to find his closest friend had changed gender, more so that he was attracted to him ... No, her!\n\nNothing in life had prepared Alex for this, not knowing what to do or say... Does he run, shake her hand, kiss her or hug her? Regardless of etiquette, the gondola booth would make nothing easy. In the end, he panicked.\n\n\"Shit, Mike ... Sorry, Vicky, you're a woman?\"\n\n\"Oh, you noticed? Although I prefer Trans-woman or even T-girl\" Her hackles rose, ready to defend herself.\n\n\"Sorry, I'm shocked ... I don't know what to say?\" Alex's mind raced to contemplate the myriad of options this brought. But first, his overriding priority was to re-connect with his lost friend.\n\n\"What? You're a poof, queer, gay?\" Vicky spat back angrily. Her fists clenched and her teeth ground together, then she swung around her knees as if she were going to leave.\n\nAlex panicked 'How was he supposed to react?' \n\n\"Whoa, whoa, hold your horses there, Tonto. I've never judged you, regardless of how much you talked about makeup with the girls, avoided sports or how camp you spoke. After four years it's a shock, that's all. What did you expect when you shouted my name out?\"\n\n\"Haha,\" Vicky faltered, with his mix of joviality and defence. Pausing to think... \"Okay, Kemosabe. Not knowing what your reaction would be, I jumped the gun there a bit. Being a Trans-woman gets you a lot of judgmental opinions.\" \n\nHer anger dissipated. \"I shouted as soon as I saw you without thinking. It's so exciting to see you after all these years. It was only when we first spoke that I realised you could help.\"\n\n\"I'm glad you shouted, Vicky. I've missed you since the sixth form.\"\n\nThankfully Vicky pulled her knees back in and relaxed a little. \n\n\"You've changed so much, Vicky. Your secret disguise is just too good.\"\n\n\"You think?\" She burst out laughing as she waved her open-palmed hands down her bust, as if displaying her new shape as a product. \n\nNow the penny dropped with Alex. Her body shape, whilst attractive, highlighted how little he knew and he pondered on the extent of transition Vicky may have undertaken. Knowing surgery, drugs and prosthetics could all be accessed to achieve whatever level of gender transitioning anyone would desire.\n\nVicky continued, \"I've missed you too. Accidentally calling partners Alex doesn't help any relationship!\"\n\n\"Haha, not good! You'd disappeared off the face of the earth. Because I saw you every day, I didn't need your contact details, then it was too late.\"\n\nVicky paused as if rebooting, her disappointment perked into interest. Sitting up, she flicked her hair back for the first time as if it would help her hear. \n\n\"There is so much to talk about, but first what about you? Are you here with a girlfriend?\" \n\nThis surprised Alex as it is not the first question anyone ever asks. \n\n\"Haha. I came with dad and his ski buddies and we got separated. No girlfriends either. Both girls I've liked only wanted to remain friends.\" \n\n\"You are joking? You were so much fun to be around. They don't know what they are missing, especially seeing how tall and handsome you are?\" \n\nThey both blushed and broke eye contact. Alex was not used to beautiful women giving him compliments.\n\n\"What about your sister, Tanya? She must have younger friends more about your age?\" \n\nVicky slouched back into her seat as if readying herself to receive bad news.\n\n\"Haha, now you are joking. All her friends are even older than she is. Who would want to go out with their youngest friend's younger brother? Especially after hearing my sister's opinions of me?\"\n\n\"Oh! Not good.\"\n\n\"I don't have any friends so I socialise a lot with mum, dad and their friends, so it doesn't bring me into contact with single people my age. So I model and game a lot on the internet ... Jeez, this all sounds quite sad.\" Alex scratched his chin, trying to hide his embarrassment.\n\n\"Oh my God, you still game?\" \n\n\"Well Yeah.\"\n\n\"So just a hermit in hiding?\"\n\n\"Thanks... I meet a lot of women skiing, but they're often shallow. Unless you throw yourself at them, buy them drinks and fawn all over them, they aren't interested. To be honest, I don't want to buy my way into a relationship.\"\n\nVicky looked pleased rather than disappointed with Alex's lack of a relationship. \n\n\"Have you moved out or do you still live with your mum & dad?\"\n\n\"Oh, Jeez. Yes, I still live with mum and dad.\" Alex admitted, blushing further.\n\n\"So you've not moved at all?\" Vicky didn't realise that this was just rubbing Alex's nose in it.\n\n\"Nope. It sounds depressing compared to you moving to London.\"\n\nVicky opened her mouth briefly as if she wanted to press this point further then changing her mind closed it. \n\nWhilst Alex's comments made him realise how unsociable he was. Vicky had listened to every word he spoke. She was interested in him and what he had to say. Now he yearned to fill the void in his lost friendship with her.\n\n\"Enough about my wild and exciting social life. Tell me more about you and how great I'm as your knight in shining armour.\" Alex's request caused her to perk up and lean forward again as if she were about to divulge a secret.\n\n\"Oh, Alex, so much has happened. The teasing and bullying in the 6th form was unbearable if it wasn't for you being my hero at every low point. The worst was on the last day when you saved me from those three pricks on a day that should have been memorable for other reasons.\"\n\nThe memory returned to Alex of catching 3 teammates roughing up Mike in the upper 6th form toilets. This was no fun rousting, at best bullying and worst molesting. For the first time, red mist dropped over his eyes and he waded in with fists flying to protect Mike. Like any good cowboy film bar fight, they both walked out untouched.\n\n\"Jeez, I forgot about that.\" Alex gasped.\n\n\"I planned to move to London after summer, to live with dad. To then come out later that year. It was to be my new life as a trans-woman. So I thought it had to be a clean break, leaving everything behind, including you. In hindsight, your support and friendship would have been a godsend. Now today of all days you appear.\"\n\n\"Today?\" Alex Panicked again, 'Oh shit,' was it her Birthday? \n\nVicky reached her hand across the tiny table to hold Alex's, bridging their old lost friendship. Her hand felt soft in his.\n\n\"Valentine's Day. You are still such a dumb arse.\" She looked at him laughing, shaking her head as her eyebrows rose again.\n\n\"It's just another sad day, living at home with my parents.\" Alex chuckled.\n\n\"Do you still receive those mystery valentines' cards?\" Vicky asked leaning closer to Alex with her voice betrayed that this was more than just a passing interest. \n\n\"Haha, yeah every year,\" Alex replied, squirming as she was now rubbing his nose in his sad empty life.\n\n\"Have you worked out who they are from?\"\n\n\"Nah, that first year in the lower 6th was a prank. As they were signed 'V', Veronica and Vanessa were chief suspects for a couple of days, but neither admitted nor gave anything away. It was quite a relief it wasn't them as they were rude about it. You even tried to help.\" It had hurt at the time, but Alex shrugged his shoulders, trying to show a lack of interest.\n\n\"Do you still receive them?\"\n\n\"Yeah, the same writing, the same red envelope, same size, so I bin them.\"\n\nVicky looked gutted, as if the discovery of the secret Valentine would have been front-page news.\n\n\"Why?\"\n\n\"If it was that important, they would have made contact by now. So it can't be life or death. It's Virgil from rugby, carrying a prank too far. He was always like that, I'm glad I bloodied his nose in the toilets defending you.\"\n\nVicky briefly looked in despair and then composed herself.\n\n\"You suggested I'd been your knight more than once?\" Alex almost begged, as there was something egotistical about having an attractive woman revealing secrets and appreciating you.\n\n\"Haha, okay, hopefully this will work!\" Vicky coyly answered.\n\n\"The Alpine trek trip was when you came to my rescue the first time. On our first high mountain trek, even with safety ropes, it terrified me. Everyone else was rushing ahead, leaving us behind. You stayed behind, holding me, talking me through each step forward despite my fears.\"\n\n\"Vicky, they were all scared. We were on that high, narrow walkway, above a sheer drop into the valley below, and the guide rails were rusty. That was why they all rushed ahead.\"",
        "\"Being held in your big powerful arms gave me confidence, as it was something I always dreamed about. Every day you were always close by, with your helping, steadying hands.\"\n\nVicky's hand that held Alex's quivered, before gripping him harder. Her other hand was tense, resting on the table. Was she still holding something back? Then Vicky's one comment hit home.\n\n\"Hang on, you dreamed about me holding you in my arms?\" \n\nVicky tensed again, going on the defensive, ready to open Schrodinger's second box, whispering, \"Yes.\"\n\n\"But you were Mike then?\"\n\nAlex's mind was racing with the implications. The gondola booth had him trapped again. Not knowing what to do or say, whether to be angry, or relieved, or pleased to be appreciated? It was an exciting thought of having Vicky dreaming about having of his arms around her.\n\n\"Yes. Before you say anything hear me out first, please?\" She maintained her hold of his hand, looking him in the eye.\n\nHer voice remained calm, \"I've always felt I was a woman, trapped in a man's body and living his life, not mine. When you knew me, I was I trying out a feminine persona. I was popular with the girls, but not the boys, who teased, and bullied me. Except for you, treating me just as you would any another mate, liking me for who I was.\" \n\nShe looked away, sipping her drink again. Or trying to hide from a painful memory?\n\n\"Earlier the previous year I realised I fancied other boys and then on the history trip I got a crush on you.\"\n\n\"Whaat? I had no idea. I loved those trips.\" Alex's shock cup was overflowing.\n\n\"Shush, hear me out.\" She would not be interrupted now that she had started.\n\n\"Your humour always got to me and in Venice you made me laugh so much. I always enjoyed being with you as we used to have so much fun. There we were in spring, in the sun, in the most romantic city, hence the crush.\"\n\n\"That was before the trekking trip though?\" All these revelations were leaving Alex a little punch drunk.\n\n\"Shush. Yes. Up in the Alps, in all that wonderful scenery, whenever you held me safe in your powerful arms I dared myself to turn and kiss you, but my bravery couldn't quite reach that far. On all those trips I tried to get Rich to take our photo or take selfies cutting him out of the picture, so we would look like we were a couple.\" \n\nVicky paused as she produced her phone and flicked through screens then handed it to Alex. \n\n\"This one is my favourite. I loved those baggy shorts you wore as your legs were so muscular from playing rugby.\"\n\nThe phone screen showed the two of them sat on marble steps in St Mark's square in Venice. Quite an innocent photo of the two of them laughing, enjoying the evening sun. \n\nThere was more to this photo than that, causing Alex to do a double-take, looking up at Vicky, then back to Mike from six years ago. Rather than recognising Mike's features in Vicky, he saw a young Vicky with a short ginger-haired makeover in Mike. His loins stirred, looking at the younger Vicky, sending a shock through him.\n\nIn the photo, Mike was leaning back with his one arm behind Alex. So it looked as if his arm was wrapped around him. Making them look like any innocent couple on a romantic holiday. Alex tried to hide his thoughts away in denial.\n\n\"Ahem, I remember it being so much fun we nearly laughed ourselves hoarse. We caught you admiring a yellow dress in a shop window for ages whilst Rich and I got the ice creams in.\"\n\n\"I had such a crush on you. Seeing that yellow dress in that designer shop window, I wanted to buy it, change into it and be your girlfriend for the night. Longing to hold your hand and eat ice cream whilst laughing at your jokes.\" She looked at Alex with a hunger in her eyes that raised his blood pressure.\n\nAlex flicked through Vicky's album and all the photos contained them as a couple and each time he saw a younger Vicky sat alongside him. He passed Vicky back her phone as he was getting a hard on. Was it from looking at an old classmate or a younger version of the beautiful woman in front of him?\n\n\"Don't you like the photo?\" Vicky questioned sitting back, pouting, and looking hurt.\n\n\"No. It's a great photo of happy times, I remember Rich taking it. All those trips were great.\"\n\n\"Do you mind knowing you were my first crush?\"\n\nHoly shit, his hard-on returned with a vengeance. Alex grabbed a pastry to give him time to think of the implications. Remembering how earlier he enjoyed seeing her knees, the same knees as in the photo. Panicking, under pressure to answer, his honesty got in the way.\n\n\"No, it's kind of nice to know. I never thought I could be anyone's crush. Haha, those shorts of yours were way too tight. Some lads laughed about your cheeks popping out when you bent over, although they wouldn't laugh at you now.\"\n\n\"You liked the look of my cheeks?\" Vicky laughed, knowing it made Alex uncomfortable.\n\n\"Aha, tut-tut. I have to admit that earlier I noticed your cheeks in that skirt.\"\n\nShe laughed, although Alex was lying. He remembered that in Venice he followed Mike, waiting for his cheeks to pop out. Alex questioned his motives whilst trekking. Had he been following Mike for the same reason, or was it fortuitous that he was behind him to help? Did he have a crush on Mike at the same time? Or was he being protective of his surrogate brother or an effeminate close friend? \n\nSo many thoughts bounced around his head, trying to reconcile his growing desire for Vicky and their history as close friends. Alex's hard-on wouldn't go away as it was behaving like both a subconscious lie detector and desire-meter.\n\n\"So do you recognise my voice now?\" She asked as if she had opened enough boxes of revelations. \n\n\"Well, it has been four years since we last spoke. In my defence, it is a little different now.\"\n\n\"A voice coach every other month helps me sound more feminine. Which do you prefer?\" \n\nOnce again honesty broke through, \"Your husky voice does sound quite sexy.\" \n\n\"Sexy? That is nice to know.\" She beamed.\n\n\"So Vicky, no confessions about our ski trip to Austria?\" One part of Alex wanted a negative response, and the other hoped for a show-stopping finale.\n\nVicky laughed, \"They grouped me with some girls in a lesson and we saw your group, race down the piste. You were all in tight, sexy lycra race suits and helmets, taking jumps and speeding faster than race cars.\"\n\nShe sipped her coffee and continued, \"You were at the back of the speeding group, with the best physique, jumping every bump higher than all the rest. We were all impressed, and you were all we could talk about for the rest of the trip. The girls in my group soon realised I was as smitten with you as they all were.\"\n\n\"That's not fair, you were still Mike then and none of those girls ever spoke to me.\" \n\n\"Oh, that isn't the half of it. Do you remember the 'build your own pizza night'? It took all the girls' guile and tricks to ensure we were paired together. It became my imaginary first date with you.\"\n\n\"Is that why the girls kept shuffling up the bench, squashing us together?\"\n\n\"Haha, yes, they couldn't stop laughing at your discomfort, but I loved it.\"\n\n\"Well, for a secret date night, I enjoyed it, it was fun, and you were always brilliant company.\"\n\nAlex's serendipitous meeting with this beautiful woman was too good not to continue further beyond this cafe. The exhibition halls were much quieter now, and they had talked for ages. He realised she would soon need to finish her day. Leaving him to go home and eat or to meet friends and then she would be gone again.\n\nShe admitted she used to hold a torch for Alex, which still seemed to burn bright. His desire for her had grown beyond plain attraction. A desire that could have been a seed planted further back than he could reconcile. Never had anyone shown him such affection, nor had he ever felt the same in return. Alex felt compelled for their day to continue beyond this cafe and to become something more tangible before he lost it all.\n\n\"Vicky, as it is St. Valentine's Day, can I buy you dinner?\" How could she refuse Alex after her admission? Now his palms were sweaty, and his anticipation caused him to fidget.\n\n\"Haha, I'd love to, but this late in the day every table will be booked.\" Her voice betrayed her disappointment whilst Alex felt devastated.\n\n\"You did tell your boss I'd promised to take you out? Unless you've other plans for tonight?\" Alex Prayed she would be free and whether begging would work as a last resort?\n\n\"No, no plans of my own. I was just going to eat in and have an early night. What if I got a takeout delivered to my apartment for us both?\" Her face beamed and her posture rose. \n\nVicky's solution was better than he could have hoped, \"We could go for drinks at a local wine bar and order a takeout delivery in order to eat at my place. It is far easier to reserve seating at the table in my lounge.\"\n\nAlex's heart jumped for joy with this lifeline. His heart raced as his mind searched for multiple options to the future evening's events. None of which helped his scrunched up bulging crotch package.\n\n\"Now that sounds like a grand plan 'B'. I'll let Dad know.\" \n\n\"What were your plans with your dad?\" She looked anxious, as if their plan could fail at the next hurdle, not if Alex could help it.\n\n\"We're staying at one of his ski buddy's apartment behind Paddington. There are a few of them getting together today and have booked a huge take out delivery, so it won't be a problem if I drop out. We have a 10 am train home booked in the morning.\"\n\n\"My apartment is only two tube stations from Paddington.\" Vicky's face lit up like a lighthouse.\n\nAlex pulled out his phone to text his dad to find out where he was. His mind now changed up a gear. Was there a chance of him crashing at Vicky's? The excitement caused him to struggle with typing.\n\nAlex's attraction to Vicky had gone beyond friendship to a carnal desire for this beautiful trans-woman. This desire overrode any existing male programming, not having a bias either way as to whatever delights Vicky held for him. His curiosity to know the extent of her transition could avoid any future embarrassment. \n\nHe realised that a blunt approach put at risk any opportunity to go further. He hoped that their previous friendship trumped any resistance. Before he knew it, his mouth gambled.\n\n\"So er, Vicky, the 64 million dollar question, is little Mike still down there?\" nodding down to her crotch hidden under the table. \n\nVicky reeled back in her seat, gasping in shock, \"You haven't changed, have you? It was always something I loved about you, no frills, bells or whistles, just open and blunt.\" Alex relaxed as she smiled forgiveness with one corner of her mouth and shook her head in mock disgust.\n\n\"Would it matter if he was?\" \n\nAlex's honesty broke through again, \"Well, no, it doesn't matter. He isn't a meal deal breaker, but if we were to take this further later I wondered whether to expect him?\" \n\nVicky's face changed to a poker face, \"You think we may take things further later?\" \n\nAlex couldn't tell if she pleased with the prospect? Was he reading her right?\n\n\"I hope so. But this is all new to me.\" The enormity of Alex's admission caused his face to glow, and his heart thumped in his chest. Alex could not tell if that was the answer Vicky wished as well. \n\n\"It's complex. If it was anyone else asking, I wouldn't answer. But yes, little Mike is still down there.\"\n\nAlex was now comfortable in the knowledge of being forewarned. Although like when a friend tells you about a new hidden tattoo, he now had a desire wash over him to see it and her body. Wondering what would look like? If he touched it, would it excite her as much as when he touched himself? \n\nVicky continued before he could think on it further. \n\n\"Before you ask your next obvious mastermind question, I'll answer it. Working whilst staying at my dads allowed me to save up and buy these,\" She nodded down to her chest. She sounded relieved to be telling Alex her innermost secrets.\n\n\"So those aren't falsies?\" Alex blurted speaking before thinking. \n\n\"Haha, you are still a boy at heart. No ... Well, silicone implants. It has allowed me to live like Vicky more than anything else. Now I'm complete, more true to myself than at any other time in my life. They are my favourite part of me. What do you think?\"\n\n\"Oh jeez, you're asking just to embarrass me?\"\n\n\"Yes, and I'm enjoying the payback. But you haven't answered my question?\"\n\n\"I like the way they are trying to burst out of your blouse!\" Alex blurted out, trying to avoid the question. He blushed profusely at being put on the spot, although it allowed him the chance to glance back at her blouse to double-check.\n\n\"Good, as that was the look I was going for...\" Vicky mocked, breathing deeply in to exaggerate her chest.\n\n\"They're perfect, not too big nor too small, they suit you. To be honest, you are stunning all over\" Alex shocked himself with his admission.\n\nVicky's cheeks blushed deep red and gasped, \"I like you saying pleasant things. Can you practice more?\" She giggled.\n\n\"So what happened to your ginger hair?\"\n\n\"Oh! I'm just having a blond makeover. As I needed cheering up. Which do you prefer, ginger or blond?\"\n\n\"Now you're just fishing for compliments.\"\n\n\"Yes, it's a girl's prerogative.\"\n\n\"They are both so different. I only ever knew you with short, curly, ginger hair. So it isn't a fair comparison.\"\n\n\"Do you like it?\"\n\n\"I love it, especially the subtle electric purple highlights, although it is the backbone of your secret disguise.\" \n\n\"I'm glad you like it. Not everyone notices the highlights.\" She squeezed his hand tighter.\n\n\"Although as secret disguises go, it counts as cheating, though.\"\n\n\"Haha. Don't worry, I can always return to ginger in the future.\" \n\nAlex realised another clue hidden by her secret disguise, \"You used to have freckles on your cheeks and nose?\"\n\n\"Haha, you noticed?\" She subconsciously rubbed the bridge of her nose with a finger.\n\n\"Er, yeah.\" He gulped, hoping that freckles couldn't be removed, so he wouldn't look an idiot.\n\n\"They don't fit in with my current blond moment and being winter it doesn't take much makeup to blend them out.\" She looked pleased to receive another compliment.\n\nAlex's phone received a text and buzzed, \"Dad's in the ski jump bar. Do you know where that is?\" \n\n\"Yes, it's outside the entrance.\" They released hands, and Alex extracted himself from the confines of the vintage gondola.\n\n\"Come on then Vicky, let's put plan 'B' into motion.\" Helping her out of her seat, he was disappointed to watch her knees disappear. He helped her with her coat and slipped on his coat and backpack. \n\nOnce again they wrapped their arms around each other, although this time it wasn't an act to convince some creeps. The crowds had gone, allowing them to saunter out through the main entrance to the bar.\n\nAs they walked in towards Alex's dad and his friends, eight heads turned and eight pairs of eyes widened to dinner plates and his dad's jaw hit the floor. You could see they all wanted to be the one to ask the obvious question.\n\n\"Hi Alex, Brian never said you were with a friend?\" Mandy, one of his dad's ski buddies, asked first.\n\n\"Hi everyone, this is Vicky. We were at sixth form together. She was working on one of the stands.\"\n\nEveryone introduced themselves, and Alex's dad got his jaw off the floor. His dad's male friends gave Alex the usual nods and winks of approval, boosting his ego at having the best eye-candy in the busy bar.\n\n\"I promised to take her out tonight. So if you don't mind, I'll give the meal tonight a miss. Although is it still okay for me to crash at yours tonight, Keith?\" Alex asked his host for the night.\n\n\"Hey, who am I to get between you and a beautiful girl? I'll text you our apartment address and warn security.\" Keith replied.\n\n\"You realise it is Valentines and every table in London is booked? If all else fails, you can join us, Vicky. I'm sure we can stretch to another mouth to feed with the takeout.\" Kat, Keith's wife added.\n\nVicky chimed in, \"No, it is okay thanks I've been able to book us in at somewhere local to me. I'm 2 tube stops from Paddington, so it isn't far.\" She exuded confidence as she was back in saleswoman mode.\n\nVicky got sucked into a conversation with dad's female ski buddies, all keen to learn some gossip about them. Alex's dad sidled over and whispered, \"Look, if you get lucky, meet me at Paddington before our 10 am train.\"\n\n\"Yes, no worries, Dad.\"\n\nVicky returned to Alex and asked, \"They've invited us to stay for a drink but I'm tired as it has been a long day on my feet. If you want to stay, then I'm okay for a drink.\" Alex could see her tired eyes with her long day catching up with her and if they stayed Alex knew it would be more than just one drink.\n\n\"It's okay, no worries, we can go.\" Alex released Vicky of her concerns.\n\n\"Alex, it's been a long day of sipping water and after that bucket of coffee I need the loo, I'll see you in a minute.\" She pecked a kiss on his cheek and walked across the bar to the toilets.\n\nAs soon as Vicky was out of hearing, Adrian, the self-appointed joker of the group piped up \"Alex, hard decision isn't it? Gents or the Ladies for a lady-boy?\"\n\nHe held a hand up, wiggling his little finger. Thankfully, the others had drifted out of earshot to the bar, engaged in a long joke as they brought the next round of drinks. Alex's blood boiled with memories of the sixth form, walking over to tower over him, his blood rising with his fists clenching.\n\n\"Is that supposed to be funny, Ade? So I bring a friend and you jump to conclusions? Why?\" It angered Alex that a respected friend of his dad could be so ignorant. Adrian blushed profusely, stepping back, never having experienced Alex's aggressive stance before.\n\nBefore things deteriorated, Mandy, who had overheard, stepped between them to tear into Adrian in Vicky's defence. Alex knew she worked in social services and was a politically correct, strong-willed woman. Her voice was quiet while admonishing Adrian as he shrank back further, apologetic. \n\n\"Alex, sorry, mate. I only meant it as a joke, and it wasn't funny. She is stunning, and it's great to see you happy. I hope you don't mind?\" He apologised sheepishly and turned to join the others at the bar.\n\n\"It's okay, thanks.\" Alex's blood now simmered down from boiling.\n\nMandy turned and gave Alex a polite motherly hug, \"Sorry, I hope you don't mind me fighting your battle? Ignore Adrian, it was just a bigoted joke. You both look happy. She looks gorgeous. Don't worry, I won't say anything.\" Revealing to Alex that she had realised Vicky's secret!\n\n\"Thanks, Mandy, it's a long story, please don't tell Dad? Thanks.\"\n\n\"No, mum's the word.\"\n\nVicky appeared from the toilets and Alex wasn't the only person in the bar to enjoy her athletic profile as she returned with a confident stride.\n\n\"Alex, what would you and Vicky like to drink?\" His dad called from the bar with his new round of drinks already building up at the bar.\n\n\"Sorry, Dad, we need to make a move. It's been a long day for Vicky. Her feet are killing her from being in heels all day. Plus, the table is an early booking. Whatever you decide for the next ski trip, I'm happy to go with.\"\n\nEveryone said their goodbyes, the couple turned to leave. It felt natural for both their arms to drop back around their waists again, with Vicky's hips swaying as she walked. Eight pairs of eyes burned into their backs as they left. Alex heard his dad gasp and cough in a spasm, having let his drink go down the wrong way. \n\nVicky guided them to the nearest tube station, \"Thanks, it would have been nice to have stayed for a drink, but I'm famished. It has been a long day on my feet.\" \n\nThe short ride on the tube allowed Alex to soak up Vicky's scent as she leant on his shoulder. They soon arrived and headed on up the escalators. Emerging above ground, Alex's phone announced two texts as it received a signal. ",
        "Keith had sent him his address. The second was from Mandy, confirming that Adrian's bigoted joke was just coincidental, so their secret was safe. Closing her text, she wished Alex happiness and warned him to tread lightly.\n\n\"Blimey, do I need a passport?\" Alex laughed, realising they were in an affluent area. In front of them were high-end modern apartment blocks, not the aged tower block apartments Alex expected.\n\n\"Hardy har, har. Dad owns several, they aren't cheap and whilst I get daughters discount it still is pushing my budget. I love this more cosmopolitan area, not having to fear for my safety over previous areas I have rented in.\"\n\nHer apartment whilst still a single bedroom was large. The kitchen, dining and lounge areas were open plan. An island separating the kitchen to the dining area with them both opening out to a large lounge filled by an 'L' shaped leather sofa and large TV. Large sliding doors opened out from the lounge onto a large balcony with a table and chairs.\n\n\"You can't be paying for this by working weekends on travel show stands?\" Alex asked in awe.\n\n\"No, I worked for Dave as a temp when I first moved to London. Helping him out now and then when he needs extra help as it pays for extras and holidays. I have a permanent job working for a large accountancy firm. They paid for me to take my bookkeeping exams on a part-time college basis. They kept me on so that pays for all this. Although I don't have anyone to share it with.\" \n\nShe smiled at Alex as she finished her sentence. Even he caught her drift.\n\n\"Alex, if you don't mind I need to shower and change? There is a kettle, tea, coffee and everything in the cupboards so help yourself. Here is the remote for the TV. \n\nAre you okay chilling?\" Alex slumped onto the sofa, glad to take the weight off his feet.\n\n\"Hey, it's been a whirlwind of a day for me too. Knock your socks of girl; would you like a drink?\"\n\n\"No, it's okay.\" She laughed, reaching into the fridge and filled a glass with water. \n\n\"I'm glad you haven't changed.\" \n\nAs she past, she kissed Alex on the top of his head and dragged her hand over his shoulders as she disappeared into her bedroom.\n\nSearching through the TV channels, Alex found a film. It took him longer to find the tea bags and mugs than for the kettle to boil. Returning to the sofa, he searched through his backpack containing the day's brochures to flick through. \n\nHe heard music from the bedroom, and then the door open with a patter of bare feet crossed the tiled hall into the bathroom. Hearing the shower, he drifted into a daydream of various scenarios containing Vicky showering, all with little Mike present.\n\n\"Alex?\"\n\n\"Oh, sorry.\" \n\nVicky stood behind the sofa in a white thick bathrobe, with her hair tied up above her head, exposing her dainty ears. Each ear bore a pair of small studs glistening in contrast to her skin.\n\n\"Can you hear that rain outside? I don't want to go out in that. Do you mind?\" She looked anxious with her tell tale lip bite. \n\nListening, Alex could hear the rain lashing on the balcony windows. It wasn't a sound to encourage anyone out of a warm apartment that contained a beautiful woman.\n\n\"No, that's fine. We can still have our valentine night here, no problem. Plan 'C' it is then.\" Alex was pleased as he wouldn't have to risk sharing her attention with anyone else.\n\nVicky's face lit up, and she bobbed on her toes in delight, \"That is a relief, I'll get dressed and we can order in.\" She spun around and swept into her bedroom out of sight.\n\nAfter just one ad break of the film, Vicky's soft low voice sang out, \"What do you think?\" Turning to look at her, Alex slipped off her leather sofa onto the floor in shock.\n\nThere she stood, barefoot in the same simple cotton summer bright yellow dress that Alex & Rich caught her admiring in Venice. She was stunning in her dress as it laid bare most of her athletic body and slim sculpted legs that disappeared up into her dress. Despite not being tanned, the bright yellow colour made her look like a beach-ready model in a fashion magazine.\n\nIt fitted her with perfection, the top half hung from thin shoulder straps, showing as much cleavage as her chest would allow. The waistband gripped her narrow waist above the pleated skirt that hung just above her knees. Perfect for summer, but not so much for a cold rainy day in London.\n\nHer makeup was softer with light delicate eyebrows. He was no longer intimidated, as the saleswoman had gone, with her sophisticated fa\u00e7ade, but not her beauty. Now she was more 'the girl next door'. Her beauty shone out as a beacon of everything Alex had ever dreamed of in a woman. She looked more at ease. His desire for this woman now gripped him, wanting to hold her and go beyond friendship.\n\n\"The yellow dress?\" Alex asked, still in shock.\n\n\"Yes, you like it? After my boobs and a new bra, it was my next clothing purchase and I love it.\"\n\nAlex stood up, and they held hands at arms' length so he could admire her. She glowed with pride. \n\n\"I love it too.\"\n\n\"I dearly wanted to wear this dress for you tonight but not out in that rain.\" \n\nShe spun around so the pleated skirt billowed out and her bodice bobbed, revealing she was braless. This started Alex throbbing again. She seemed to hold back despite looking as if she was about to hug him. \n\n\"WOW. That is a great Valentine's date dress.\" \n\n\"Thanks. I have some cheese, biscuits, dips and something other than wine to drink. We can order a delivery for later?\"\n\n\"Plan 'C' sounds better and better by the minute.\"\n\nShe went on to search her kitchen cupboards and fridge, placing packages on the island worktop as she went. Alex enjoyed watching her move. She was like a ballerina with the dress flowing with her. Seeing so much of her naked flesh, he wanted to strip off her clothes and ravage her. \n\n\"Oooo look what I found?\" Vicky emerged from her large double fridge with a large bottle of champagne.\n\n\"It was a Christmas gift from work, but I've not had the occasion to drink it. Can you open it, please?\"\n\nShe passed Alex the bottle and a tea towel. She needed to celebrate something, so he didn't want to admit that he wasn't a fan of champagne. Sliding the balcony door ajar, he fired the champagne cork out into the rain. \n\nVicky held two glass flutes, ready for Alex to fill. Taking a glass each, they chinked a toast. \n\n\"To us and our second date?\" Vicky asked, stepping up close with Alex catching her perfume again.\n\n\"To us and our first Valentine date?\" He replied, and she beamed back. \n\nThey hooked their drinking arms together and sipped their drinks. Once their glasses lowered, Vicky ran her tongue around her deliciously wet lips. Alex's heart leapt at the erotic gesture. She leant forward and pecked a kiss on his lips, tasting like summer. He wanted to sample more but was disappointed to find her raised glass between them as a symbolic barrier.\n\n\"To us,\" Vicky said, smiling, her eyes beaming as she took a second sip, She looked like a million dollars. She flicked her hair to one side revealing her neck smoothly arching to join her shoulders before plunging to her cleavage.\n\n\"Shall we have some music? I have a rock playlist I think you will like.\" Vicky sidestepped away from Alex. Why was she avoiding the inevitable second kiss?\n\nVicky scrolled through TV screens to reach a list of music playlists. The selector bar landed on 'Rock Music A' but there was no B. \n\n\"A for Alex?\" He asked and saw her blush again.\n\n\"Mmhmm. Blunt as ever.\"\n\nAlex took that as a 'yes'. A slight chill had fallen between them after their kiss. Alex pondered whether he needed to up his game or whether she was waiting for him to validate or acknowledge something? Having never played these types of emotional games before, all these mixed messages confused him.\n\nAC/DC Thunderstruck started, and she adjusted the volume. She returned to the kitchen island, busying herself gathering nibbles onto plates with some dips. Two small coffee tables appeared from nowhere and placed by the sofa. She dimmed the lights and appeared with small LED candle lights and placed them around the lounge area.\n\nSoon they were sitting beside each other, eating nibbles, glasses in hand. Vicky was sitting cross-legged with her phone in front of her between her legs and scrolled through screens.\n\n\"Right, what would you like to eat here at the cafe chez Vicky?\"\n\n\"Your night out, my treat, you decide.\" Alex hoped he could lighten the mood and lose this chill that seemed to have come between them.\n\n\"You are too much the gentleman, you know what I want?\"\n\n\"Fish and chips?\" Although it was easy to guess what she wanted, now Alex knew her version of their history.\n\n\"Pizza, as this time you know we are on a date.\"\n\n\"At least there are no girlfriends to squeeze us together this time.\"\n\n\"Do you think we need other girls to squeeze us?\"\n\n\"No, not this time ... We will need ice cream to eat with your yellow dress.\"\n\n\"I have some Ben and Jerry's in the fridge, I assume you will still eat chocolate chip?\"\n\n\"Haha. As it is you, yes.\"\n\n\"Back to pizza, what do you fancy?\"\n\n\"I think she is sitting on the sofa.\" \n\nShe smiled back, tutting and shaking her head.\n\n\"So long as it doesn't have anchovies or hot spicy stuff, I'm okay. I can always pick the olives out.\" Alex knew this was a pet hate of Vicky's as her mother is Italian.\n\n\"You heathen, olives make the pizza. Cheesy crust? Now you are going to ask for Ham, Cheese and pineapple toppings. You Neanderthal!\" She grinned, giving Alex a playful shove, remembering his whinging in Venice.\n\n\"I've ordered three small ones to share with various toppings. So you can sample real pizza as this is my date.\" \n\nShe clicked through some screens on her phone.\n\n\"I ordered the Pizzas, they will be about 45 minutes.\"\n\n\"Hang on, this was to be my treat? Now I still owe you for dinner.\"\n\n\"Sorry, as I have an account with them, it was easier.\"\n\nThe chill between them seemed to have lifted, so Alex asked Vicky about her work. \n\n\"They've been brilliant. Without them, I couldn't have afforded college, even part-time. At college, I joined support groups and made some great friends in the LGBTQ+ community.\"\n\nShe detailed her role. It was plain she was with a good professional employer. She fitted in well with the other staff and the company was encouraging her to go further and to build towards a degree in accountancy.\n\nShe asked Alex about his work. Before long her eyes glazed over and he realised he was droning on. Boring her about widgets, wonkels, spurs and gears. Not of interest to anyone outside of engineering. They soon finished the nibbles with the bottle of Champagne.\n\nThe rock ballad by Berlin 'Take My Breath Away' from the film 'Top Gun' came on and Vicky perked up asked, \"Do you mind dancing with your date?\" \n\nFor Alex, this was a no brainer, \"Hell yes.\"\n\nThere was more than enough space for them to dance as a couple. Alex felt as awkward as a loose bag of spanners, whilst she was more like a music video extra. They twisted and twirled at arm's length around the stone tiled floor. Every touch of her body ran excitement through Alex. Despite his poor attempt at dancing, he felt it was quite romantic.\n\nThen the music changed to Whitesnake 'Here I Go Again'.\n\nNow it was Alex's turn for a confession, \"The lyrics suit me, as I've always been lonely no matter whom I was with, 'here I go again on my own',\" When he realised how depressing his melancholy sounded it was too late.\n\nVicky squeezed closer and whispered, \"But not tonight.\" \n\nAlex nuzzling into her so he could drink in the fresh scent of her hair. He ran his hands up & down her back, to rest on her slim waist. Dancing together closely, with her body brushing across him, was an excellent aphrodisiac feeding his desire for her. \n\nThe first bars of The Foo Fighters 'My Hero' came on.\n\n\"Oh Alex,\" Vicky squealed, perking back up, beaming with excitement, looking as if she loves the song as much as he did. They started dancing with clumsy push, pull twists whilst singing along. Alex even twirled her around under his one hand whilst holding hers above her head. \n\n\"Come on, Alex, loosen up, use those hips,\" She teased. \"Dance like nobody's watching.\"\n\nThen on cue, she stepped back clear of Alex, pointing both forefingers at him to sing the chorus.\n\nThere goes my hero.\n\nWatch him as he goes.\n\nThere goes my hero. \n\nHe's ordinary.\n\nShe beamed at him with passion behind every word. It left him shocked with the realisation that this was what he meant to her? Could he meet her expectations high on this pedestal? Was he at fault not realising her secrets?\n\nAs guitar breaks came she rocked out, head-banging to flick her hair, better than any hair product advert. Her loose boobs bounced around, desperate to escape her tight dress.\n\nAt each chorus, she re-enacted her sing-along, each time an extra tear or two would run down her face. By the last chorus, tears were streaming down her face. Even Alex's eyes filled with tears, watching this beautiful woman's passion for an ordinary guy like him.\n\nAs soon as the last chorus ended, she leapt at him, wrapping her arms around his neck. He clasped her waist, and they danced around to the last chords of the song with her sobbing.\n\n\"Alex, you were my first crush and after our pizza date, I was smitten. On that last day of the sixth form was when I fell in love with you.\"\n\nThis knocked Alex for six. Having only ever heard relatives say the 'L' word to him before. Today was proving he was someone very special to her. Her reappearance in his life made him realise maybe they were more than just close friends before. A lustful desire for her was now gripping Alex.\n\nThey continued twirling around together, dancing as the music changed to something slower. Vicky faced Alex, looking a little bedraggled with puffy wet green eyes after dancing and crying. \n\nAlex yearned to taste her again. Not wanting to let this moment pass, he lowered his head to hers until their lips met. Immediately Vicky's tongue broke through to search deep into his mouth. She ran her hands up the back of his head to hold him, prolonging their kiss.\n\nAfter a while, she released him, looking up at him. Her eyes glistening and her dimples betrayed her joy as they both soaked in the moment. Longing and loneliness were displayed in her eyes as they pulled Alex in to swim in them.\n\nThey returned to dancing, although now closer, neither being afraid to kiss and run hands over each other. Her lovely peach bum was an irresistible draw for his hands, but it was Vicky who was grinding into Alex whilst he felt a second bulge brushing against him.\n\n\"Oh, Alex, this is one hell of a valentine's date.\"\n\n\"My best second date ever.\" \n\n\"Our date isn't over yet,\" Vicky declared.\n\nThey returned to the sofa, although this time Vicky sat on Alex's lap. She ground her bum on his bulge to get comfy. Pulling a clean handkerchief out of his pocket, Alex wiped her tear-streaked cheeks and eyes. Alex enjoyed being intimate with her, as she giggled acceptance. \n\n\"Oh my god, I must look a mess, it was all too much after all these years. Finally, I was brave enough to kiss and tell.\" She nibbled and curled her lips whilst playing her fingers on Alex's chest.\n\n\"You mean that four-lettered word?\"\n\n\"Yes. I'm glad you've matured not changed.\" Vicky faltered, then changed tack.\n\n\"I hope you don't mind me making 'Hero' our song? Whenever depressed, I would play it whilst looking at our photos.\"\n\n\"I'm glad that you've told me. No one has ever been so passionate over me.\"\n\nThen Alex realised a mistake, a missed opportunity, showing his naivety in social engagements. He got his phone, unlocked it, and went to contacts, setting up a new one, 'Vicky Parks' and handed her his phone.\n\n\"Set in your details, then ring your number. We should have swapped phone numbers on the last day of the sixth form.\" Vicky let out a joyful high-pitched squeal, typing into his phone at an almost professional speed.\n\nShe pressed the call button, causing her phone on the kitchen island to buzz moments later. She passed Alex his phone back and grabbed hers to then frantically type a caller ID.\n\n\"Ok, so that has righted one wrong.\"\n\nFor Alex, it was an enormous relief that after the confessions throughout the day and their kiss, that everything now seemed an unspoken done deal. Wanting to ensure something beyond tonight, his mind raced, seeking solutions.\n\n\"I've been thinking,\" Alex stated as the answer came to him.\n\n\"You be careful thinking, I've heard some of your previous ideas.\"\n\n\"Well, Bristol is only a 2-hour train ride away. On Fridays I finish work at 2 pm so could easily be here from 5 pm onwards and we would have the entire weekend together. The bonus is next weekend we will be able to get a table both nights and we can do this in style?\"\n\n\"Whaaat. You promise?\" She squealed sitting up, perking up, with her face radiating an enormous smile displaying those deep dimples in her cheeks.\n\n\"Yes, I'm having a wonderful time with a beautiful woman, why wouldn't I want to repeat it?\"\n\n\"It's almost too good to be true. Spending the weekend together would be beyond my wildest dreams.\" She was jubilant. \n\n\"Also, if you go to Birmingham for that travel show, we can book a hotel and have the Saturday night together.\"\n\nVicky' squealed again and tightly hugged Alex.\n\n\"You promise?\"\n\n\"Haha yes, I promise, next weekend & Birmingham.\"\n\n\"You're not just saying that to get in my knickers?\" She sat up laughing. \n\n\"Well, so long as they aren't those big baggy passion killing 'Y' fronts we used to wear!\" \n\n\"Yuk, you'd better not be still wearing those?\"\n\n\"Nope. Only the best supermarket boxers for me!\" \n\nVicky used his handkerchief to dry her eyes again, half laughing, and half sobbing with a wide grin. \n\nBefore Alex could stop himself, his thoughts tumbled out, \"Your eyes are a wonderful shade of green ... I could get lost in them.\"\n\nShe squealed, \"You noticed?\" As she returned to blubbing.\n\n\"No, no more crying. Sorry, I didn't mean to say pleasant things about you!\" Alex laughed as she continued to dab his hanky across her eyes again, laughing back.\n\n\"Okay, I'll stop crying, but don't you dare stop saying pleasant things about me,\" As she gave Alex a playful thump.\n\nThey cuddled on the sofa some more and then Vicky got up, clearing the mess from their nibbles away. She looked like a 1950s dutiful wife bouncing around. With her bare feet pattering on the tiles, and her dress fluttering. \n\nAlex hunted for cutlery and placemats and set the table for two. Vicky was placing various shaped bottles on her island countertop. \n\n\"What poison do you fancy? My ex left some Jagermeister and Jack Daniels. They aren't to my tastes although I have some various flavoured Gins, Aperol, Oh and some Prosecco?\" Vicky offered.\n\n\"I'll have a Lemmy Please, although I'd prefer cider or beer.\"\n\n\"What on earth is a 'Lemmy'?\" She laughed, expecting one of his corny jokes.\n\n\"Lemmy Kilmister, the singer of Motorhead? He died a while back and was famous for drinking JD & Coke, hence having a 'Lemmy'.\" She laughed, shaking her head. She was used to hearing oddball stuff from him.\n\nVicky mixed a pair of drinks and then led Alex back to the lounge, sipping their drinks to dance to the slower middle of the road ballad now playing.\n\nBy the third drink, they returned to the sofa, cuddling, chatting and playing footsie. Both of them were enjoying each other's company as the drink caught up with them.\n\nBefore they knew it, the door intercom buzzed, Alex dashed over and pressed the big green speak button.\n\n\"Pizza for Miss Vicky Parks.\"\n\n\"Ok mate, I'll be there in 2 minutes.\"\n\n\"Here's the key card, it's all paid for.\" Vicky passed him the key card whilst stealing a kiss.",
        "As usual with lifts, they seem to take an age when you want to be somewhere fast. The delivery guy was not happy by the time Alex arrived in reception. Vicky proved she knew his drink requirements as accompanying the three pizza boxes were two cans of cider.\n\n\"Pizza's here, Vicky,\" Alex called upon his return, placing the boxes on the table. Vicky appeared from the bathroom looking refreshed. Her eyebrows were fainter, her cheeks were slightly paler, and her puffy panda look was gone from her eyes. Soft freckles were now visible topping her cheeks and the bridge of her nose adding to her elfin look.\n\n\"No make-up, I hope you don't mind?\"\n\n\"No, you're still gorgeous.\" Alex laughed as she poked her delicious tongue out in fun.\n\n\"You do not know how many times I longed to hear you say something like that?\"\n\n\"I'll try to make a habit of it. We need to tuck in before it gets cold.\"\n\n\"Haha, please!\"\n\nVicky produced a pizza slicer and pulled a bottle of white Italian wine from the fridge, with a glass for his cider. They sat down at the table, now with some LED candles on it, and started a pizza fest.\n\n\"You are just the best Vicky and you get better and better. Best of all, you remembered my cider.\"\n\nAs Alex reached for a slice, Vicky playfully slapped his hand, laughing. She fed him portions of pizza to sample and they restarted the olive banter. Alex found it always looked corny when you see partners feeding their other halves in restaurants or films. Tonight however he found it romantic with Vicky passing him portions to taste. \n\nAgain Vicky made eating food erotic and sensuous, smiling between every bite of her white teeth and lick of her lips. A few times she ensured topping smeared Alex's face. So she could wipe it away with a licked thumb, lick it off her with her tongue, or a kiss it, as she giggled. Soon there three empty boxes on the table and they were full.\n\n\"That was the best first Valentine's meal I've ever had Vicky, even if most of it missed my mouth.\"\n\n\"You wouldn't keep still! I agree with the best second date ever. Haha. So how many Valentine Day cards did you receive today?\" Vicky asked, looking more interested than she sounded.\n\nShrugging nonchalantly, Alex answered, \"None, as we left home long before the post was due.\"\n\nVicky looked disappointed and pensive as she put the empty pizza boxes into her recycling bin and cleared the table. She returned with two bowls of chocolate chip ice cream, spoons and toppings. \n\nThey both tucked in with Alex, relieved Vicky wasn't feeding him this time.\n\nWhilst eating her ice cream, deep in thought, Vicky burst into a fit of giggles. \n\n\"So Alex, having passed the first three rounds of your application to 'take things further later' are you ready for your interview for the fourth round?\"\n\nAlex laughed as this was the Vicky he had missed, \"Which three rounds were those?\"\n\n\"Well, your chivalry squeezed you through the cafe round one. Your charm and history won you round two, allowing you to dine with me. Your admission that you are a sad, lonely gamer, who still lives with his mum and dad won you round three, allowing you entry to my apartment.\"\n\n\"Haha, hang on, you're only supposed to say nice things to your hero,\" Alex pretended to protest.\n\n\"Your previous relationship with me, has allowed you an easy ride through rounds one to three. However, I won't be as lenient for round four.\"\n\n\"Easy ride?\" \n\n\"All day I, as your prize has thrown herself at you. Telling you her secrets, desires, and past love for you. What are your favourite attributes of her that attracted you to her?\" She bathed in Alex's discomfort, watching him fidget.\n\n\"Whaaat?\"\n\n\"I'm serious, answer the question. No phoning a friend.\"\n\nAlex's mind raced once more, listing off items as they popped into his head. \n\n\"Er well. Her humour is still great, with that giggling, lovely laugh. I've always liked her smile with those dimples, coupled with her nose and freckles all underneath her green eyes. Her legs, knees and cheeks whether hidden or popping out of shorts.\"\n\n\"Although she has changed in the four years, I've missed her. She has two lovely new assets and is athletic with great skin tone. She has great dress sense, looking like a million dollars. I find her voice sexy and the way her tongue licks her lips, and she tastes of summer.\"\n\n\"I love the way she moves like a ballerina and dances like a music video extra. I love her passion and ability to cry happy tears. Best of all, I've found my long lost wonderful friend who has now grown into a beautiful, confident trans-woman.\"\n\nVicky burst out a laugh, embarrassed, \"Haha, acceptable...\" She reached across the table to hold Alex's hands.\n\nVicky's face changed, looking perplexed and serious. Alex wondered if her jocular role play was a way of keeping doubt or anger at bay.\n\nVicky continued, \"Based on the previous question, can the contestant explain why he wouldn't take advantage of his prize? Especially after she has thrown herself at him all day ... Is she just an easy, freely available lay, or available for easy pity sex? ... Or is he just trans curious? ... And will she find him gone in the morning?\"\n\nAlex reeled in shock, realising that this was the real reason for this charade. Even without knowing her recent past, he could understand her point. Initially, he didn't know what to say to convince her.\n\n\"Vicky, you are special to me. You are far more than the sum of all your wonderful attributes. I'm in no rush so we can go at your speed. We don't have to have sex as I've been a virgin for as long as I can remember. So it won't hurt me to wait some more ... If you're unsure or have doubts, I can sleep on the sofa tonight or we can dial it back and I can crash at Keith's.\"\n\nBefore Alex could continue Vicky screamed, gripping Alex's hands tightly, \"NOoo, not after what you have just said. Don't you dare go. Now I want you to stay with me.\" She curled her lips in on her closed mouth, with her request. \n\nVicky pausing after her outburst giggled and relaxed. \"Alex, after careful consideration, the panel is willing to let you through round four. Only because you're playing the 'remain a virgin' joker card.\" \n\n\"Phew, that is a relief. At least I've done something right today!\"\n\n\"Haha. I'll grant you that. Just that one thing, mind you!\" she giggled.\n\n\"Er, so what do I win for passing round four?\"\n\n\"Winning round four is for my knight going to stay here with me tonight,\" Vicky confirmed.\n\n\"I thought that was a given after you used the four-lettered 'L' word earlier.\"\n\n\"You never asked?\"\n\n\"Vicky, I am having the most wonderful date tonight with you. Even after winning round four, would it be too presumptuous to ask if I can stay the night?\" Alex asked sarcastically.\n\n\"Yes, of course!\" She laughed whilst squealing.\n\nThey remained seated, holding hands. They both remained in a pregnant pause as Vicky seemed to reboot, deep in thought. Alex's mind swam around, trying to understand everything that had been said and promised. Looking forward to 'taking things further later' but with the caveat of his no sex joker card. After a while, she looked at him with a tear in her eye. Her hand reached up to stroke his cheek and grasped his other hand at her waist.\n\n\"Alex?\"\n\n\"Yes.\"\n\n\"On our first date on that pizza night, the girls dared me to satisfy a fantasy, but I couldn't. Sarah-Jane threatened to and let me watch. Thankfully, we stopped her. As this is our second date and I've lamented missing my fantasy for six years to, do you mind?\"\n\n\"It's your date, so be my guest. Well, so long at is nothing nasty with ice cream or slapping me around a bit?\"\n\n\"Haha, I have felt like that at times today.\"\n\n\"What, smearing me with ice cream?\"\n\n\"Haha. No. Slapping you!\" \n\nAlex loved to hear Vicky's old relaxed personality returning. Hoping her fragility was dropping deeper into the background.\n\nVicky pushed back her chair and kneeled on the floor. The table is a small, high end, steel legged, glass-topped table, not a large Austrian timber dining table. Allowing Alex to look down through the glass to see her struggle as she crept under the table and fought passed the central legs. \n\n\"I can push my chair back, to make it easier?\" Her target was obvious now, reflecting her desire to take their relationship up a notch, so proving she was more at ease or was she drunk?\n\n\"No. This is my fantasy. It's under the table or nothing.\"\n\nShe pushed his knees apart and wedged herself into the space between the glass top steel supports, steel legs and his legs. Once again Alex was struggling with a curled up hard on growing as his blood pressure rose anticipating her target.\n\nHer hands teased his crotch, then little Alex's head with her fingernail through his jeans as she witnessed more growth. Her hands unbuckled his belt, pulled his zip down and opened his jeans in one swift movement.\n\nHer left hand came up and slipped down inside his boxers, and her soft fingers sought to unwrap his curled up manhood. Excitement ran through Alex as her fingers teased the end around and tried to pull it clear of its confines. Being seated, his ruffled up jeans foiled her plan. The zip was still too high, trapping little Alex half exposed above his boxers.\n\n\"Do you want me to pull my jeans down?\" He suggested, seeing her dilemma.\n\n\"NO, It's my fantasy,\" she arched her back and glared up through the glass top at him, giving him a perfect view down her bare shoulders to her cleavage. This made his shaft stiffen and worsen her task.\n\nShe tried without success to unruffled his jean crotch by pulling at his jeans. Whilst he stifled a laugh.\n\n\"Don't laugh, I'm trying to be romantic. It's still my fantasy!\" She exclaimed with another glare.\n\nAlex put his hands under him onto the chair seat and pushed down to take the weight off his jeans.\n\nShe yanked at his jeans and this time they slid down.\n\n\"Thank you for helping me with my fantasy,\" Alex sarcastically mimicked her.\n\n\"You be careful. Soon you will be in my mouth and I have all my teeth!\" She warned with an admission of her task. The anticipation caused him to quiver with excitement.\n\n\"NO, no teeth. Sowwy wovely,\" Alex joked and squealed in a comical voice, laughing. Vicky glared again whilst fighting back a laugh, which made her look even sexier than before.\n\n\"Don't make me laugh either, you're spoiling my fantasy. This is supposed to be erotic,\" she couldn't stifle a fit of giggles causing her shoulders to shudder.\n\n\"Sowwy,\" Alex whispered, to hear her tut and cough to clear her giggling.\n\nHer hand reached for his now freed manhood and it was easy for her to wrap her wet, soft lips over his tip.\n\n\"Holy Fuck...\" Her lips slipped his foreskin back to expose his naked tip like an expert.\n\n\"MMMmmmm, ooo ahhh.\" \n\nHer tongue tickled and licked the ultra-sensitive exposed skin tip, sending tingles down his shaft that masturbating can't provide. She plunged her head down until little Alex was submerged to the hilt, causing Alex to gasp in surprise. \n\nLifting her head a little too far, Vicky hit the underside of the glass table with a bump.\n\n\"Mmmphhh.\"\n\nBefore Alex could stifle it, a laugh escaped his mouth.\n\n\"Now if I'd pulled my chair back that wouldn't have happened, would it? You've only yourself to blame!\"\n\n\"Mmmmmmph oo ee arful,\" came the reply, as teeth pressed onto Alex's shaft.\n\n\"Sorry, sorry, I'm sorry, you're in charge, and it's your fantasy after all.\" Alex rubbed the top of her head with a hand, hoping it didn't hurt too much.\n\nNo amount of porn watching could have prepared Alex for how wonderful this was. As she bobbed up and down sucking on him. She didn't hit her head on the table again. Her tongue toyed with him whenever room allowed. Then that familiar ache of release in his balls built up.\n\nAlex ran his hands along her arms and shoulders, up to run them through her hair and back to her hands on his thighs. Unsure of the etiquette in these situations would be or what Vicky would prefer, Alex warned, \"I'm going to cum ... mmm ... mmm.\" \n\nRather than stop, she redoubled her efforts, sucking harder and bobbing faster than ever. Soon the tingle went from Alex's balls to his shaft and beyond. \"Yeees, Viiickeeeee,\" he erupted into her as a wave of ecstasy ran over him. He could hear her swallowing. He ran his hands through her hair, then up and down her naked shoulders.\n\n\"Mmmmmm,\" she pulled her head back, allowing Alex to slip out of her mouth. She looked up at him through the glass, smiling, \"Would that have worked on our first date?\" Her hand tucked little Alex back into his boxers.\n\n\"Fucking A plus, plus, girl.\" Although Alex didn't know how he would have reacted six years ago with a blow job from Mike.\n\nVicky tried to shuffle out of the confines of her table, then looked annoyed back up at Alex through the glass tabletop.\n\n\"Alex, can you pull your chair back? I think I'm stuck.\"\n\nAlex pulled his chair back to give her room, stifling another laugh.\n\nVicky could now shuffle forward and looked up at him with a shy look, \"Um. I would like to sit on your lap, but earlier I released little Mike from his hiding place and he is making his presence known. Do you mind?\"\n\n\"Haha. No, bring him up as I knew he is there, so I may as well get to know him.\" \n\nVicky giggled, raising her hands to cover the mock shock on her face. Her eyes and dimples showed her relief and excitement at his answer. She struggled at first to extract herself from under the low glass table. Gripping her upper arms, Alex helped lift her as she rose. As he saw the bulge in a pleat of her dress, he breathed a sigh of relief as it wasn't a 10-inch monster. The gentleman in him fought the desire to lift her dress and see her hidden treasures.\n\nShe straddled Alex's legs to sit on his lap with little Mike pressed into his belly. Vicky gave a little bum wiggle to entice his shaft to re-energise pressing up into her panties from underneath. Her body was soft beneath her dress as he held her slim waist. \n\n\"Are you ok with this?\" She asked nodding down at her bulge pressing into him.\n\n\"Yes, I'm okay. He is part of you and that is all that matters.\" \n\nTo prove his point, Alex slipped his hand under her skirt to find a warm little Mike. Never having touched another cock before, he couldn't have realised that to touch the most intimate part of her wonderful body would be so exciting. Vicky sucked in air to hold her breath at his gentle touch with her eyelids fluttering.\n\nAlex was enjoying discovering his old friend and her sexuality. He pondered on their relationship. Would he have liked her more if she had a vagina? She would have still been the same beautiful Vicky with the same personality and the same shared memories. He didn't think so.\n\nThroughout today, their friendship continued to blossom into something so much more as a result of her being a transgendered woman.\n\nAlex wondered if that made him gay, bi, queer or true to himself? Thinking hard on this, he concluded it didn't matter or bother him. She cares about him and made him happy; He found her unbelievably attractive, and he cared about her, which for him trumped all.\n\n\"You look deep in thought,\" Vicky smiled and was about to kiss Alex when she held back and opened her mouth to show him her empty mouth, \"Don't worry, I swallowed.\" \n\nOnce more Alex found her lips tasted sweet and as their tongues searched each other out he caught a salty taste. Sliding his free hand up her, he teased her nipple through the dress. Under her dress, his hand was still causing Vicky to involuntarily suck in her breath and squirm in reaction to his manipulations.\n\nVicky warned, \"Er, you're going to have to stop unless you want a stain on your jeans and jumper. Would you like to continue this in the bedroom?\" Alex released little Mike, he then tried to fill the void in his palm by holding onto her waist.\n\n\"Please!\" Never having heard such an invitation before, Alex could have cartwheeled there.\n\n\"Okay, bedroom it is then?\" \n\nVicky paused, \"... Yes, bedroom.\" She acknowledged.\n\nShe emptied her wine glass quickly for some Dutch courage, to stand quietly whilst biting her bottom lip. Her dress now sported a horizontal rod that hung a pleat like a flag from her, drawing Alex's eyes and desire like a magnet to see and hold her hidden delights.\n\nThey quickly cleared the table, and she led him by the hand into the large carpeted bedroom and dimmed the lights. It was decorated in light plain colours that are all the rage in house selling TV programs. There was a large double bed against one wall, with more cushions on it than a home and ware department store. There was also a large white dressing table with its top full of makeup bottles, tubes and brushes. Long curtains ran along one wall, hiding windows that must overlook the balcony outside.\n\nVicky slipped her hands to Alex's sagging open jeans waist and pushed the waistband down, gathering his boxers on her way. He stepped out of his jeans and she brushed his socks off. She came up and did the same with his jumper and T-shirt. It was her turn to stand back and admire him.\n\n\"Mmm, better than I hoped. Very nice, you must still train?\" She giggled teasingly, admiring his sporty, toned physique.\n\n\"Aw thanks, best mate,\" Alex replied. \"Come on, my turn?\"\n\nShe turned around and pointed to the zip at the back of her yellow dress. He unzipped it and slipped the shoulder straps off her, allowing the dress to drop to the floor like a leaf in autumn. Her slim athletic body was now naked except for a tiny pair of black lace panties that rode high on her waist, accentuating a peachy pair of cheeks. \n\nAlex stroked her cheeks with his fingers causing her to giggle and he couldn't resist a playful slap and squeeze. He slid his hands up her torso, tucking his hands around to reach her naked mounds as he cuddled her. \n\n\"Mmmmm, that's nice,\" She approved.\n\nAlex's hands suited her perfectly, with pert button hard nipples for him to tweak. She wiggled her bum cheeks to tease him. Her body felt like cool, soft marble as their bodies brushed and pressed against each other. Alex's body tingled and excitement ran through him like static electricity, enjoying his first naked experience.\n\n\"Mmmm. Are you ready for me to turn around and see me in all my glory?\"\n\n\"Please?\" Alex released her and stepped back, surprising himself with the levels of his growing excitement in anticipation.\n\nShe rotated with a little apprehension on her face, not making eye contact. Her freckles cascaded off her shoulders to fade above her boobs that were a perfect match to her toned upper body, with small button hard nipples. Standing up out of her tiny lace panties was her hard shaft that was nicely proportional to her size and waist. Other than the hair on her head, she was hairless, making her penis look feminine. \n\nIt shocked Alex to find how attracted he was to her erect shaft and family jewels cupped in her panties. Something he could not have foreseen him doing yesterday. An image flashed across his mind and a desire to take it into his mouth and pleasure Vicky in return for earlier.\n\n\"I think it was worth waiting those six years as you've become a wonderful swan, a very fine swan indeed.\" Alex mimicked the words of the Hans Christian Andersen story.\n\n\"I'm a swan? I'm a swan.\" Vicky burst out laughing and to underline her comment she waggled her hips, causing her shaft to waggle and her tits to sway. Alex laughed with joy. She was more stunning naked than when clothed.\n\nShe pulled Alex into a tight hug. His body was still bathing in the experience of having her soft naked body touch and squish against him. He enjoyed the tripod created by her boobs resting on his chest and her sword on the base of his.\n\n\"Are you ready for bed?\"\n\n\"Oh, yes.\" She slid under the duvet. ",
        "As he had played the virgin Joker card, Alex ignored his lustful desires to leap onto her and have his wicked way with her. He wanted to honour her trust in him. She lay down propped up on a few cushions, only her head peeking over the duvet, with a little tent halfway down. \n\n\"I can either join you and we can sleep ... or ... you can shout if you want me to stop.\" \n\nVicky looked puzzled, not sure where this was going, but she didn't confirm either way. After her table fantasy, Alex knew what compromise would return the pleasure and satisfy his playing of the joker before he left in the morning.\n\nAlex rolled the duvet off her small, dainty, soft feet and started massaging each foot. Her toenails were an erotic blood-red colour rather than the neutral varnish on her fingernails. He kissed her toes, sucking on them, taking his time and kissing each foot. \n\n\"Mmmm, no tickling,\" she giggled.\n\nAlex worked his way under the duvet, kissing slowly up her calves, spreading her thighs to let her know his target. Whilst kissing her legs, he also massaged his hands up and down the backs of each one. She surprised him by flicking the duvet clear off her. This gave him a full view along her length, with little Mike standing to attention between him and her huge grin. Her legs twitched with each kiss and the tip of her shaft acted like an excite-meter reacting to every twitch or squirm of her pleasure. \n\nAlex had to ignore his own excite-meter as he's had his turn. As he worked his way up her, she gave little moans of pleasure, which he interpreted as acceptance and continued. He reached his goal and teased her by licking the creases inside her thighs, then her balls. Before he knew it, he'd sucked her soft balls into his mouth, trying not to squash the precious cargo inside.\n\n\"Ooooo!\"\n\nAlex looked up at her, looking down at him. She nodded, pleading with her eyes. He popped her balls out of his mouth, licking his tongue from the base of her balls up to teasing her naked tip. \n\n\"Oooo please Alex, please.\" Her voice reflected the pleading of her eyes.\n\nAlex wrapped his lips around her naked tip and crown, causing her to shiver. He looked up through her boobs to see her face lit up with her eyelids fluttered and her hips twist. Her hands stroked his head. Knowing now what Vicky was experiencing as he held her in his mouth, he wanted to repay her in spades.\n\n\"MMmmm, don't stop,\" She whispered.\n\nIt wasn't as easy as it looked on porn videos for Alex to take her entire length in his mouth. Despite her not looking that big. He soon found enough saliva to bob up and down on her. Sucking her in as deep as he dared to avoid his sick trigger. He guessed how to notch this up further. Reaching up to her soft mounds, he caressed them, teasing her button hard nipples.\n\n\"Mmmm.\"\n\nSliding his right hand down, he squeezed it under her cheek to find her rear entrance. He gently teased around her winking muscle with a finger.\n\n\"Oooooh, yeeeees, I would never have expected this in a million years ... Mmmm\" \n\nAlex got a little over-enthusiastic and pushed a little too hard with his finger.\n\n\"Ooh, stop! Lube will help if you are going that far. Over on the dressing table, there is a bottle.\"\n\nAlex glanced over to her dresser, \"You are joking, right? It's like a chemical plant over there.\" \n\nVicky laughed and pushed passed him, jumping off the bed and grabbed a mug sized hand pump bottle. She then ran to the door and turned the dimmed lights up a little brighter.\n\n\"If you are going to do this, I want to see you blow me.\" She grinned, anticipating the pleasure to come.\n\nHer little wet soldier bobbed with her boobs as she skipped back to the bed with feminine grace. Handing him the bottle, she settled back into her original position. Propping a cushion under the small of her back gave him clear access to her back door. With a big blob of lube on his middle finger, he reached for her winking eye.\n\n\"MMmmm. Nice and slow or I won't last long,\" Vicky warned.\n\nAlex's finger teased the lube around her entrance as he settled back down between her legs. He started licking her naked shaft tip that now tasted a little salty. A pop welcomed little Mike back into his mouth. Once again engulfing his head and started sucking. He applied a little pressure to her rear and his finger slipped inside her.\n\n\"Oooo MMmmm nice ... Mmmm.\"\n\nAlex eased his finger further as he dropped his mouth as deep as he could onto her. He kept his finger and mouth cycling in unison. With practice, he found he could go deeper with his mouth and engulf her whole. After a few cycles, Vicky was arching her back and raising her hips in reaction to his endeavours.\n\n\"Mmmm, faster.\" Vicky pleaded. \n\nHe upped his tempo, glancing up at her to see her mouth open and her eyes looking down at him.\n\n\"I'm going to cum, I'm ... oh ... oh... yes ...\" \n\nAlex thought Vicky meant it as a warning. However, he wouldn't leave her short-changed and wanting, so he continued to finish her pleasure.\n\nHe felt a slightly salty taste, so he plunged once more. Her eyes grew to the size of dinner plates. She arched her back and omitting a wild scream. A huge geyser of salty fluid pulsed into his mouth. It surprised him to enjoy being forced to swallow her seed as he gagged. Further bursts followed for him to swallow again and again as she seemed to cum in pints. He kept her in his mouth to make sure she was finished and deflating.\n\n\"Oh Alex, that was fucking marvellous, but don't swallow it all come and kiss me,\" Vicky gasped.\n\nHe moved upwards, letting her now deflating shaft slip and flop out of his lips. They kissed, allowing her cum to pass between their tongues. She was still tense from her orgasm, running her hands up and down his body and his down hers. Her nipples dug into him, so he slipped down to suck and nibble on each one, causing Vicky to emit little squeals of delight. \n\nVicky rolled Alex over onto his back and lay on top of him. Her hips lay on his with their swords next to each other. He enjoyed having Vicky's tripod of limp sword and boobs on him. She curled up with her head on his chest, stroking his body and arms with her fingertips. He cupped her bum cheek in his one hand and massaged her shoulders and back with the other.\n\nAs Alex felt her back chill, he pulled the duvet over them both. Vicky wriggled and snuggled on him in the warmth. Before they knew it, they both plummeted into deep drink induced slumbers. \n\nAll too soon a soft alarm rang from Vicky's phone playing music.\n\n\"Morning.\"\n\n\"Mmmm hi gorgeous.\"\n\nVicky rotated under the duvet to face Alex, their limbs intertwining. Having never slept naked with anyone before, her soft skin sent ripples of delight around him. He felt comfortable with the now-familiar tripod of her body against Him. He tried to find any excuse to cause her skin to brush against his, squirming and snuggling as they pecked kisses on each other.\n\n\"I was more tired or drunk last night than I realised. It felt that all I did was blink, then the alarm was going off. Thanks for understanding last night. You don't mind, do you?\" Vicky asked, although her voice quivered with nerves.\n\n\"No, there is no rush. We can always shag like rabbits next weekend to make up for it.\" Alex laughed, bringing up an old joke. \n\n\"You can shag rabbits if you like, but it will get you arrested,\" Vicky laughed back. \"I would like us to leave the apartment at least once or go see some sights though.\"\n\n\"No worries, whatever you decide. It can be a post Valentine's weekend for you to take advantage of me and ravage me in the evenings,\" He laughed.\n\n\"You are just a wonderful friend ... boyfriend ... or lover?\" Vicky fished. \n\n\"I would love to be both your friend and lover,\" Alex responded. \n\nVicky squealed and cuddled in close, pecking him with kisses. He avoided the temptation to initiate a sexual advance with them both growing unintentionally. But later she will be off for a day's work, whereas all he had to do was sit on a train.\n\n\"I want to enjoy you being in my bed a little longer, so I'll shower soon\" Vicky said snuggling deeper into Alex.\n\n\"I'm enjoying being in your bed.\"\n\n\"I never thought I would ever hear you say that.\"\n\n\"You shower when you are ready.\"\n\n\"I'm glad I didn't dream yesterday. Now I have your number. I will pester you until next Friday.\"\n\n\"You pester away and we can always talk online in the evenings.\" Alex thought it is far better than gaming.\n\n\"Next week will drag until I see you again,\" Vicky responded sadly.\n\n\"Yeah, I'm already looking forward to next weekend.\" He wasn't lying, wondering how empty next week will be without her.\n\n\"Me too.\"\n\nSoon Vicky got up, \"Sorry we need to get moving, or we will have to rush.\" \n\nHe peeled away to let Vicky slide out of the bed and enjoyed watching her rear profile pad across the room heading for the shower. Seeing her half limp member waggling as she walked was as exciting as seeing her boobs. \n\nOnce he heard the door close on the bathroom, he lay there remembering her body, smelling her scent, still lingering on the duvet and pillow. Enjoying stroking himself, then getting up before he got too excited. He pottered around, making cups of tea in his boxers.\n\n\"The showers' free.\" Vicky's voice came as she dived into her bedroom. Alex grabbed a pair of clean boxers from his backpack and dashed in. Emerging later, he found Vicky in the kitchen in a white bathrobe and a towel wrapped around her head.\n\n\"Haha. Very sexy boxers. What do you fancy for breakfast?\" She asked.\n\n\"Haha, thanks. The cook?\"\n\n\"Haha, very droll.\"\n\n\"I'll eat whatever you having.\"\n\n\"I was going to just do scrambled egg on toast with some bacon, as it will be a long day for me.\"\n\n\"Perfect,\" Alex answered. He pulled on a clean T-shirt out of his backpack and his jeans, as his stomach rumbled.\n\nHe sorted out a second round of tea, darting around Vicky whilst she cooked and then laid the table. Soon they were both sat eating. He watched her tongue search out her lips again and pondered on how she seemed so much more at ease this morning.\n\n\"No tomato sauce?\" Vicky teased.\n\n\"I wasn't expecting there to be any here in the metropolis.\" Although he was too hungry to care.\n\n\"No text from your mum about your Valentine?\"\n\n\"Nope.\"\n\n\"I can't believe you aren't bothered.\" She said in disbelief, not teasing but frustrated.\n\nAlex shrugged, \"It's been six years, it can't be life or death or they would have got in touch, they obviously have my address.\"\n\n\"Some mystery lover could be distraught waiting for your call and come to her rescue?\"\n\n\"Nah, it's Virgil stringing a joke out.\"\n\n\"Oh! You're impossible.\" Her voice had gone up an octave, throwing her hands up in the air in disbelief.\n\nAlex's mind span in confusion for the reason for her display, then he remembered her interest yesterday. Whether he still lived at home and whether he had received this years ... Reality hit him like a sledgehammer. In shock, he pointed at her.\n\n\"V ... V ... for Victoria or Vicky?\" Alex gasped in shock, seeing her look at him questioningly, \"My mystery Valentine's Day cards, all with a red lipstick kiss and a 'V' as the signature?\"\n\nVicky, smugly pleased at his outburst, slowly nodded, confirming her as the originator of the cards.\n\n\"After the ski trip to Austria, I've sent you a Valentine's Day card every year.\" She looked relieved her secret was finally out.\n\n\"That was six years ago. Oh My God, that means you sent the first card whilst you were still Mike?\" \n\nShe almost whispered, \"I told you I had a crush on you. After our first date with the pizza's, I had to send one. I couldn't sign a card as being from Mike, though. I loved the name Victoria, but now prefer Vicky. So came up with the lipstick kiss and 'V' idea. With my mum being a friend of yours, it was easy to find out your address and post it.\"\n\nThis time Alex wasn't trapped in a cafe gondola. Leaping out of his chair, he dashed to her and pulled her up, hugging her tightly. They kissed passionately, both of them relieved for him to have finally found his mystery Valentine. They stood there laughing and teasing each other about this last secret.\n\nSoon they both had to get a move on. Alex cleared the plates and tidied up. Afterwards, he found the bedroom door open and couldn't resist watching. Vicky was sitting at her dressing table in her bathrobe with her arms flying around if she was directing an orchestra. Her hairdryer caused her hair to billow and blow around like a 70s rock video.\n\nSeeing Alex in the mirror, she enjoyed his attention, wearing that elfin smile of hers. Standing up, she dropped her bathrobe on the bed to reveal her wearing a nice matching white plain bra and passion killer pants. She slipped on a delicate silk plain camisole that seemed to flutter down over her shoulders. Even dressing she was erotic.\n\n\"Little Mike tucked away?\"\n\n\"Yes. But this helps also,\" Vicky reached down and produced what looked like thickly padded white cycle shorts. She struggled to step into them and pulling them up as they were so elasticated. Once up, the padding on the shorts helped sculpt her waist and cheeks.\n\n\"Isn't that cheating?\" \n\n\"No. It's a way of giving me more feminine hips, which helps when wearing pencil and business skirts.\"\n\n\"Wow, your figure is gorgeous with or without them,\" Alex remembered last night's vision of seeing her naked. She beamed and in replied by giving him an enticing waggle of her hips. \n\nAll too soon they were walking down to the tube station together to stand in the concourse.\n\n\"This is my platform,\" Vicky pointed at one set of ticket barriers, \"And that is yours,\" pointed at a separate set of barriers.\n\nThe pair enjoyed their last a prolonged hug and Alex whispered in her ear, \"Yesterday was just the best Valentine's Day ever. I'm so glad you shouted out to me and I will miss you all next week.\"\n\n\"Ditto my knight and lover. I will pester you and the week will drag. Hopefully, Friday will come soon enough.\" She glowed and her voice exaggerated the 'L' word.\n\nThey chuckled and kissed. Alex watched her disappear down the tunnel.\n\nOnce in Paddington, he saw dad sat on a bench waving, so went over and sat with him.\n\n\"Hey, so you stayed the night?\"\n\n\"Yeah.\"\n\n\"Good night?\"\n\n\"Yes.\"\n\n\"You're not going to tell me anything then?\"\n\n\"Nope. Except I'm returning on Friday.\"\n\n\"Haha, you know your mother will want details?\"\n\n\"Yeah. But not now.\"\n\nOnce their platform displayed on departures, they trudged off to the train. Vicky \n\nfound enough time to send Alex 3 texts during the journey.\n\nOnce back at home, Alex saw the 6th red card addressed to him propped up in the hallway window. He grabbed it and ran up to his bedroom. Opening it, he found it was identical to all the others. Deciding he'll keep this one, giving it pride of place on his bedside table."
    ],
    "authorname": "Nellymcboatface",
    "tags": [
        "anal play",
        "blowjob",
        "first time",
        "oral",
        "romance",
        "transgender"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/victorias-secrets"
}