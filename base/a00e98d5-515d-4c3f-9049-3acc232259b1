{
    "title": "Brain Development Enterprises Ch. 10",
    "pages": [
        "I was doing up my tie, the steam from my shower still clouding the edges of the mirror. I heard the door to the master bedroom open but didn't glance around. \n\n\"Kenz?\" I called. I cursed softly as my fingers fumbled the tie again. \"Damn it.\" Barbara had always helped me out with this. I'm a grown man, and I could get it done by myself, but it was always a nice little ritual \u2014 Barbara would finish my tie, give me a peck on the cheek, and tell me how handsome I looked. \n\nOf course, I'd never looked as handsome as I did tonight. \n\nIt was Friday, the night of Aaron Burns's big company party, and I felt like I'd been prepping for weeks. With McKenzie's help, I'd chosen a new haircut, something crisp and dapper. I'd continued working out and my jawline was coming in sharper. My old suits had all been slightly too big, so I'd bought one special for the occasion. It tapered down my sides and gave me a look of masculine elegance, but I was still big enough to have an appearance of burly muscle. \n\n\"Yeah, Daddy?\" My stepdaughter breezed into the bathroom behind me and I stared, fingers frozen on my tie. \n\nUsually, in her tight shorts and cut-off tops, McKenzie looked stunningly hot. But this evening she looked simply beautiful. The 18-year-old had gone shopping yesterday with several of her friends and returned home with several paper bags from brands I didn't recognize. She'd kept them hidden until tonight. \n\nHer slim figure was draped in a lilac cloth. It fell down her sides and legs in an elegantly sensual curve. And it was open at the broad curve with a neckline that narrowed and dipped between her breasts. She exuded a magnetic aura that came from a mature charm, without trying too hard to disguise her luxurious figure. \n\n\"Woah...\" I blinked several times, then raised my eyebrows and pursed my lips in a confident smirk. \"You clean up nice, angel.\" \n\nHer eyes flashed teasingly but I thought I could see a slight blush as she bit her lip. Then, she stepped forward and brushed my hands away from the tie. Her hazel eyes glanced up into my darker ones and she smirked back. \"You've got to let me fix this,\" she joked. \n\nI breathed out a short sigh and nodded, lifting my chin. \"Alright,\" I agreed, pleased and a little surprised. \n\nMcKenzie deftly tugged free my unfinished knot and began to manipulate the strips of silk. \n\n\"I didn't know you could do ties,\" I commented. \n\nMy stepdaughter leaned up without slowing and kissed me on the chin. \"I learned just for you,\" she said. \"I spent 45 minutes earlier practicing.\" \n\nI felt a glow of pleasure radiate in my chest, pushing away at the cold anxiety that tried to nestle there. \"Thanks,\" I said simply, not sure how else to acknowledge such a gesture. \n\nThe brunette teenager pulled firmly at the silk tie, straightened it, and then tugged my chin down so my face was near hers. She pecked me on the lips, then laughed softly and said, \"You're welcome.\" \n\nThen, she turned around and I realized that her dress was even more alluring from behind. \n\n\"Will you zip me up now, Daddy?\" she teased, flashing a quick, sparkling white grin over her shoulder. \n\nA band of cloth rode across the backs of her shoulders and had an undone zipper at the nape of her neck. Then, the cloth curved away, leaving bare the smooth skin of her back all the way to the base of her spine. Just a few inches above the taut hemisphere of her ass, the dress zipped up a bit more. \n\nI paused for a second, eyes tracing down miles of tanned skin. \"Yes,\" I agreed. \n\nMcKenzie shifted back closer to me and my hands instinctively fell to her hips. Then they brushed around and drifted over the bouncy globes of her ass. I squeezed gently and my stepdaughter blew out a soft huff of laughter. I tugged up the zipper, keeping it clear of her body. I reached up and did the second zip, then leaned forward to kiss her gently on the side of the neck. \n\nBut my mind had fallen back, remembering how many times I'd zipped up Barbara's dress before a fancy party or a date night. I turned away from McKenzie, toward the door into the bedroom. I might be looking good as hell. My own date might be a smoking-hot, 10-out-of-10, barely-legal knockout. And I might be able to channel insane, Alpha Male abilities to make me socially unstoppable. \n\nBut I was worried. \n\nEvery day since my conversation with Oliver King, Mr. Silver Fox, I'd been struck again by the realization that Aaron Burns had used BDE products to steal my wife away from me. It was an incredible, unbelievable and unfortunate coincidence. \n\nBarbara had been won over by his BDE charm just like McKenzie had been won over by mine. It was hard for me to imagine that Barbara wasn't with him right now. And it was equally hard to imagine Aaron bringing someone other than her to his event tonight. Now, even if I showed up, I didn't know if I could get her back. It was strange how unsettling and troublesome the feeling became. \n\nI rubbed my hand across my face, ran my nails down my jawline thoughtfully. I suppose that I had just been so certain, deep down, that if I really wanted to do it I could go out and get Barbara back. But now I wasn't sure. Would I be able to out-Alpha Aaron Burns? Would out-Alpha'ing him even be enough? I had no idea what to expect. No idea what it might take. \n\nEven McKenzie's gorgeous dress could only distract me for a couple brief moments from the doubt that was gnawing away at my confident attitude. \n\nI sat on the edge of the bed and shot a look over at the clock. \n\nOnly 6:30. Another hour and a half before we should be arriving. \n\nThe bathroom door swung open and McKenzie glided out in her lilac dress. She drifted slowly across to the bed and sat down next to me. One of her small hands reached across and her slim fingers drifted across my forearm. \n\n\"What's wrong?\" she asked, giving me an encouraging smile. \"Everything is going to go so well! By the end of the night, Mom will be back and things will be how they should be.\" \n\n\"Kenz...\" I laced my fingers, pressed my palms together and then released them. I let my hands drift apart. \"You know how I have these... abilities? These strange, unique traits that started popping up?\" \n\nMy stepdaughter shrugged, her features forming a 'so what?' expression. \"Right,\" she said. \"That's why I first started noticing you.\" \n\nI nodded. \"Yeah. Well,\" I paused again, then scowled. \"Aaron Burns can do the same things.\" \n\nThe teenager hesitated for a moment, considering what that meant. \"Huh,\" she said. \"Well...\" She shifted, her hands curling together in her lap. \"Is that what happened to Mom? Do you think?\" \n\n\"Yes.\" \n\nShe paused a moment more. \"I still believe in you, Dad,\" she said. \n\nI blew out a soft sigh. \"Thanks, angel.\" Then I added, \"I just don't know what's the best thing to do.\" \n\nMcKenzie nodded, then brushed a fallen strand of hair from her eyes. She paused for a few seconds before glancing up at me. \"Even if Mom doesn't come back...\" Her lips twisted in a half-frown. \n\nI reached out and put my arm around her back, my hand curving easily around her hip and gently landing on her thigh. She didn't have much wiggle room in her dress, but she leaned up against me. \n\nHer slight weight was reassuring. \n\nMy stepdaughter turned under my arm and raised her face. Her hands pressed to my chest and her expression was earnest. \"This is really nice, isn't it?\" she said. \"What we have?\" \n\nI nodded, slowly. \"It's nice,\" I agreed. \"More than nice, angel.\" \n\n\"And...\" McKenzie hesitated. \"We don't really need anything else. Or anyone else... Just to be happy.\" \n\nI furrowed my brows. \"I suppose not...\" I agreed. \"But that doesn't mean we shouldn't try for them, right?\" \n\nThe teenager nodded, brunette cascade swaying. \"So what do you think you'll have to do?\" \n\nI bit my lip pensively. I had planned that tonight would be the night I won my wife back, once and for all. But now I had to deal with the fact that Aaron Burns had the same BDE talents that I did. And also that Oliver King, a.k.a. Mr. Silver Fox, would be in attendance at the event. What if my wife's lover had more experience than I did and knew exactly how to out-Alpha me? What if the presence of Mr. King, the original BDE-user, somehow disrupted my own magnetic, commanding aura? Another frightening thought struck me: What if I arrive with McKenzie and Aaron Burns somehow takes her away from me, too? I felt like a juggler with too many balls in the air. \n\n\"I have to take a shot at winning your mom back,\" I told my stepdaughter firmly. I paused, then added thoughtfully, \"If someone were to try and win you over, so that you left me, what would you do?\" \n\n\"I wouldn't,\" McKenzie responded quickly, flashing a smile up at me. \"I lo\u2014 Well, I mean... I don't want to be with anyone else.\" She stumbled for a moment. But I was busy considering the issues ahead, too busy to notice. \n\n\"I mean,\" I clarified. \"What would they have to do to succeed?\" \n\nThe 18-year-old screwed up her face thoughtfully. I tried not to get distracted by how cute the expression looked. \n\n\"Aaron Burns has been using his new talents for longer than I have,\" I continued, thinking out loud. \"He probably has more experience than me, and since he's spent more time on it, he may have unlocked more of his potential.\" I don't think McKenzie knew exactly what I was talking about, but she nodded along. \n\n\"So if he's 'stronger' than you,\" she used air quotes around the word 'stronger,' \"then your only choice is the most classic method. David and Goliath. You've got to be cleverer. How can you do that?\" \n\nI spread my hands uncertainly. \"I have to...\" I shrugged. \"Outdo him, I suppose. Show your mom that I'm worth coming back to. And do it without confronting him directly, without making it a contest of will.\" \n\nMcKenzie nodded. \"So you just have to figure out that and you're golden.\" \n\nI blew out a sigh, leaned over and gently kissed her on the temple. \"Thank you, angel,\" I muttered. \"I'm glad I have you here. I'm glad you're coming with me tonight.\" \n\nThe teenager bit her lip, shrugging. \"Sure, Dad,\" she said. She lifted my hand from her leg and gently kissed my knuckles. Her lips were soft. \n\nI felt the tension leaving me. I didn't have much of a plan, but what I had was better than nothing. \n\nI sighed more of the stress out of my chest and felt McKenzie's hair brush across my forearm as she lifted her head. My stepdaughter turned and reached up, her hand stroking gently across my cheek. Her lashes fluttered. Then she was kissing me again, this time on the mouth. \n\nI leaned into it, my lips parting and my tongue dancing with hers. She murmured softly, a contented purr, and my hand stroked up her bare back. Her skin was soft and warm under my palm and I pressed her closer to me, my fingers spread. I could feel the curve of her spine when she twisted and gripped my lapels, her shoulders bunching as the kiss became more urgent. \n\nI groaned, feeling heat rise in my belly. It burned up through my chest, the nervous tension contorting into a fierce blaze of arousal. Between my thighs, my cock stirred to life and my fingers flexed against McKenzie's back. \n\nShe pulled back a second later, breathless. Her hair fell around her face. Her eyes were bright and feverish as they met mine. \"Before we go...\" She looked uncertain. \n\n\"What is it?\" I asked calmly, quirking a smile for her. \n\nHer voice was hesitant. \"Will I still be your number one?\" \n\nI blinked. \"What do you mean?\" \n\n\"Your number one girl.\" McKenzie said it with a stumbling, coltish hesitation. \n\nI hadn't even thought about that. It had never occurred to me to wonder whether McKenzie might be jealous. Barbara was my wife, so of course I wanted to win her back. For weeks, though, I had been showing my stepdaughter that she was the one I wanted. Emotions, to be fair, are really confusing. But even though the question was unexpected, I responded smoothly. Thank god for my BDE confidence training. \"Of course, angel.\" \n\nIt's moral to be honest. But sometimes, it's important to tell people what they want to hear. \n\nThe hesitation seemed to burn away. McKenzie's blush reached high up her cheeks as a darker color beneath her tan. Her eyes sparked and she licked her lips as she glanced down at mine. \"Good.\" McKenzie's voice was low and syrupy. \"Because I want to be the first in line to serve you...\" \n\nI realized, then, that my stepdaughter's pupils were dilated wide and her sparkling eyes were glazing over. I wasn't sure why, but she looked as if she'd just inhaled a deep scent of my cologne. \"Kenz?\" I asked. \n\n\"Yes, Daddy?\" the teenager answered. Her voice was just as seductive as before. \n\nI felt myself growing hard against the tight suit pants. I'd better remember not to get turned on at the party, because I could already tell the bulge was obvious. \n\nThe curvy brunette slid down onto the floor between my knees, her hands running gently down my inner thighs. \n\n\"What're you doing?\" \n\nShe glanced up with wide, adoring eyes. I couldn't help but feel my need and arousal get turned up a notch, even as I wondered what McKenzie was up to. \n\n\"You just did up your makeup and everything,\" I added. \n\nMcKenzie just kissed the inside of one of my knees gently and then wriggled the dress up her hips. The material bunched at the top of her thighs and gave her the freedom to kneel with spread legs. Her hands traced up my slacks and clinked my belt free with three deft twitches of motion. Her fingers slid under the fabric of my boxer briefs and her nails brushed across my skin as she pulled them down. My slacks, too, were around my knees. \n\nMy cock throbbed and swayed, hard and red with lust. I swallowed, started to say something, then broke it off in a low sigh as my 18-year-old stepdaughter lowered her mouth and wrapped her lips around the mushroom head. I groaned again as she slowly bobbed down, taking several more inches smoothly into her throat. \n\nI realized that I was arguing to stop one of the hottest women I'd ever seen from blowing my cock like it was an art form. \n\nInstead, I glanced down into McKenzie's face. \"What brought this on?\" I asked. Then I groaned, my eyes rolling back for a second and my fingers curling against the edge of the mattress. \n\n\"I don't want to think...\" the teenager murmured, her tongue flickering as she moved her lips along the length of my shaft. \"Just obey...\" \n\n\"You don't want to think?\" I asked slowly, gently shuddering. \n\nMcKenzie's fingers gently fondled my balls. \"Don't want to think...\" she agreed. Her lips slid over the engorged head of my manhood. \"Mmm...\" she moaned. \n\nI tried to enjoy her soft, pillowy lips on my cock and at the same time wonder why she had suddenly started blowing me. Not that I was complaining, but McKenzie was acting like I'd just hypnotized her using my inner Alpha voice. Like I'd done to Adrianna and Allison. \n\nOnly I hadn't. \n\nI felt my ass clenching as the tip of my cock passed into my stepdaughter's throat and I gave up trying to riddle through her behavior. If there was something going on, I could uncover it later. \n\nMy jaw tightened and my hand drifted up McKenzie's shoulder and into her hair, pulling it back from her face. Her expression was rapt and excited, her eyes bright with lust and her hot mouth enthusiastic. Her light eyes bored into my darker ones with gratitude for letting her pleasure my body with hers. \n\nMcKenzie was bobbing up and down again, slowly, one hand stroking my shaft and the other playing with my balls. Her entire focus was on my pleasure, but still she moaned and writhed her hips like there was a vibrator pressed to her clit. I felt my fingers clutch tighter in her hair. \n\nMy teeth bared in a gasp as a shock of bliss coursed through me. She had swallowed around my shaft and it felt like a dozen small hands were massaging my cock at once. I pulled her head down onto my length and she swallowed again reflexively. I groaned and then began to thrust in time with her movements. \n\nAny worry and anxiety in my mind I channeled into my hips, controlled but swift. It was like my gorgeous stepdaughter was sucking my stresses away between my legs. I felt the tension curl up through my feet and calves, the rising wave of hot pleasure. \n\nThe lithe brunette shifted, the lilac dress twisting and shimmering on her body. She looked like either a fashion icon or an incredibly expensive escort. I couldn't decide which idea was hotter. Her cheeks hollowed and I felt my balls tightening. My cock throbbed and pulsed, then I reigned myself in. \n\n\"Mmmm...\" McKenzie sighed happily, her lips never leaving my shaft. \n\nI let her take control for a moment, groaning as the warm, twisting ecstasy wound through my body. Her mouth went up and down on my cock and her tongue bathed my length devotedly. The teenager alternated between pushing me deep into her throat and then taking just the head between her lips, flicking her tongue around and around. \n\nI finally grunted, my toes curling. \"I'm gonna cum,\" I groaned. \n\n\"Mhmm...\" McKenzie's eyes were still wide and glazed, even as they blinked up excitedly into mine. Her pink lips were wet and soft. I realized, looking into her hot, smoky gaze, that she was close to orgasm herself. \n\nThe thought that she was getting off just from sucking my cock was the final wrench that twisted me over the edge. I tumbled into pleasure, my body coursing with it. McKenzie's lips sealed around my shaft and she gulped down strand after strand of my hot, sticky spunk. I could feel her throat closing around the tip of my length with each swallow, begging me for more. \n\nShe began to moan louder, the sounds vibrating around my prick and spurring my own pleasure even further. The teenager was climaxing from the taste of my seed. My head fell forward and my eyes squeezed closed for an instant before I heard the soft pop of McKenzie's mouth releasing my steel hard length. My eyelids blinked up and I saw the sculpted features of my stepdaughter, a contented smile on her face as she leaned against my knee. \n\nHer eyelids were closed and dark bronze with makeup. Her lashes were dark and long and fluttering slightly as she tensed again and sighed with aftershocks. Her light purple dress was bunched around her hips and I could see the sheen of wetness between her thighs. She panted gently, the curves of her perky tits rising and falling beneath the taut fabric. \n\nShe was stunning. \n\nI thought, for an instant, that even if I didn't win Barbara over from Aaron Burns, I might be happy just like this. But then I remembered. \n\nI am a Man. I am an Alpha Male. I do not accept failure. I will win. I deserve to win. \n\nI didn't accept failure. I deserved to win, and I would. \n\nI ran my fingers through McKenzie's hair gently. \"Thank you, lover,\" I murmured softly. \"I feel a lot more relaxed now.\" I paused. \"I think I know what to do...\" \n\nMy stepdaughter rubbed her cheek gently against my thigh and blinked her eyes open. Her gaze was sharper now, aware, like whatever had gotten into her head and turned her into a horny blowjob machine had dissipated. She bit her lip and smiled up at me cheerfully. Her hand traced down the thick muscle of my quadriceps. \"Mmm, Daddy,\" she murmured. \"I can already tell.\" She seemed no longer worried about the pending return of her mother and the future pecking order, just as I was no longer worried about getting Barbara back. I knew it would happen. How could I doubt myself? \n\nI bent at the waist, took McKenzie's hand and pulled her up to her feet so she stood in front of me. I gently tugged down her dress so it fell to her shins. She winked at me cheekily but didn't say anything until I stood and pulled my slacks up, redoing the buckle. I realized that I'd flipped my tie over my shoulder at some point and I tugged it back down. ",
        "\"Silly,\" McKenzie muttered. She bit her lip and straightened the tie. \n\nI checked the clock and nodded to her. \"We have time.\" I said, then sat back down on the edge of the bed and glanced at her. \"Just enough time to clean up and go over the plan.\" \n\nMcKenzie nodded. \"The plan,\" she said, somewhat dubiously. \n\nI smiled. \"Well, what I've been able to come up with...\" \n\n* * * \n\nIt was impossible to miss the other couple. Well, if I could consider them a couple without a twist of unpleasant tension in my gut. Aaron Burns and my wife, Barbara, standing side by side, greeting the arrivals along with two other couples. \n\nSince the company was Brown, Burns and Keohane, I assumed the first and the last names were the other men \u2014 a shaggy-haired man just a tad overweight and a shorter guy who looked like a frat boy who'd aged 20 years, badly. It was evident that work colleagues were used to seeing Aaron and Barbara this close together. Saying hello, one of the women leaned in to kiss each of them on the cheek. \n\n\"Steady, John,\" McKenzie warned, her warm expression wavering as she pressed gently on my forearm. \n\nI took a breath. \"I'm good,\" I affirmed. \"Remember your role?\" \n\nShe nodded. \n\nArm in arm, we walked toward them. \n\nAaron Burns and the other heads of the company were impossible to avoid. All of us guests were funneled to the double doors of the ballroom-style hall where the party was taking place. At the entrance, the three couples held court and greeted their employees. We merged with the line of incoming guests, other men in suits and women in slinky cocktail dresses. I hadn't spent enough time around Barbara's company to know any of them, and none of them acknowledged me or McKenzie. \n\nThe greeting committee was occupied with each individual and couple as they entered, so it wasn't until McKenzie and I were right at the front of the line that Barbara and Aaron noticed us. \n\n\"John!\" Barbara's reaction wasn't what I expected. I would not have been surprised by anger or shock. But, at most, my wife seemed only mildly surprised to see me. \"And McKenzie,\" she turned to her daughter with a smile curving across her full, red lips. \n\nMy wife was leaning against Aaron Burns's side, with a familiar arm behind his back and curving around his hip. Her spectacular body was sheathed in a light blue cocktail dress. It clung to her breasts and hips, falling in several folds that looked simple but were probably a wonder of modern fashion. The dress looked so perfect for her that I could only imagine it was outrageously expensive. Was I imagining it, or did her eyes look a little glazed, unfocused? Was her voice more monotone? \n\n\"Hey, Barbara,\" I answered. I hadn't anticipated how strong my reaction would be to seeing her. I could feel my body responding, my heartbeat quickening and a heat flushing my neck and face. I could smell her perfume, sweet and inviting, hovering in the air around her like an aura of seduction. But I could also smell something else, a sharper scent. It wasn't entirely unpleasant but had an edge like vinegar. Everything, the sensations and the situation, hit me at once in a jumble. I wasn't ready for it, and I was probably going to say more, something unplanned and unhelpful, but luckily I was interrupted. \n\n\"John.\" Aaron Burns's hand slid into mine before I could react. Then, he was pressing my palm warmly and clasping his other hand around it. \"So pleased you could make it,\" the charming salesman told me, the perfect gentleman. \"And...\" he raised his eyebrows, glancing at McKenzie. \"With such a stunning... date?\" \n\nMcKenzie gripped my forearm a little harder. \n\nAaron Burns knew my family well enough to know McKenzie. I wasn't sure what he was playing at \u2014 Trying to put me off balance by asking if I'm here on a date with my stepdaughter? \u2014 but I knew that if I was going to beat this man I had to be smart. \n\nWhat do you say in that situation? When you're talking to the man who stole your wife. I wasn't sure. But my only advantage, I thought, is that he doesn't know that I have the same tricks he does. So I just laughed gently.  \n\n\"No, no,\" I explained. \"Just here to spend time with my stepdaughter and maybe run into Barbara.\" I tried to come off as unthreatening, like I'd accepted the fact that Aaron Burns had taken my wife. Like I wasn't resisting the urge to try and win back my woman right then and there. I tried, in other words, to push down every Alpha instinct that was rising in my body. Every instinct that told me I wanted to assert dominance over Aaron Burns, every word and facial expression and twitch that wanted to convey my inner strength. \n\nBut I had to ignore them. I had to play the beta male, the beaten man who just accepted his lot. \n\n\"Ah, of course,\" Aaron Burns nodded, his tone smooth. He gestured vaguely to the side. \"I don't think you've met before, so let me introduce my business partners. Teddy Brown and Jude Keohane.\" \n\nAt the wave of his hand, the other two men stepped forward. Maybe my personal transformation had made me more attuned to these things, but it was obvious to me that Brown and Keohane were under Aaron's Alpha thrall. Their body language was more submissive, and I could tell that they were both eager for Aaron's approval. Usually social situations like this make people nervous, almost subconsciously uncomfortable, but either Brown and Keohane had no idea that I was actually Barbara's husband or they did and were completely immune to societal conditioning. \n\nThe overweight man muttered, \"Teddy,\" and shook my hand briefly. His hair was speckling with silver at the temples. It might have looked distinguished but his face was too round and jowled. \n\nThe other man looked a little more energetic, and he smiled as he pumped my hand up and down several times. \"Jude Keohane,\" he said, his grip firm. \"Happy to meet you. You know Aaron and Barbara, do you?\" \n\nHearing it that way, Aaron and Barbara, was another sucker punch to the gut. But I just had to bear it. \"Actually,\" I said, giving what I hoped was a sheepish smile and not a sick grimace. \"Barbara is my\u2014\" \n\n\"I'm sorry,\" Aaron interrupted, patting me on the shoulder in a friendly way. \"But we've got to keep you moving. More guests to greet, and all.\" He gave me a handsome smile that looked welcoming on his lean features. \"But hopefully we bump into each other later.\" \n\nNo one else seemed bothered by the fact that Aaron had interrupted and rerouted the interaction. Jude Keohane and Teddy Brown melted into the background as Aaron once again took center stage, Jude not even seeming to notice how easily his business partner interrupted and moved him around like a chess piece. \n\nMcKenzie was holding my forearm in a tight grip while we walked on, her fingers digging into the fabric as we skirted around the edge of the hall looking for a table or place to stand. There were a bunch of round, white-clothed tables scattered across the floor and along the walls were taller, smaller tables for the cocktails we hadn't yet retrieved. In three of the four corners I could see bartenders in shirtsleeves behind tall wooden bars. Arriving guests were heading straight for the booze, so men and women in evening attire were stacked two or three deep around the drinks station. \n\nMy stepdaughter still hadn't spoken, but once we were several paces beyond the doors her hands relaxed around my arm. She blew out a sigh. \n\n\"So? What did you think?\" I asked, leaning down a little so my normal speaking voice could be heard over the background chatter of dozens of conversations. From a safe distance, I took a minute to look Aaron up and down. He was taller than average, and fit, two qualities that were clearly accentuated by his tailored grey suit. His hair was dark, like mine, and also cropped relatively short, but unlike mine his facial hair was sculpted into a brief beard that clung to his cheeks. It gave his jaw a rough, manly look. \n\nI glanced back as dark-haired teenager shook her head and glanced up into my face. Her expression was concerned, her pink lips parted. \"Wow...\" she managed to mutter, then blinked several more times. \n\nI raised my eyebrows. McKenzie's first part to play in my, admittedly not-so-elaborate, plan was to try and gauge Aaron Burns's relative levels of Alpha-ness. If it was possible, I had hoped that she might be able to sense the invisible strength of his personality and dominance. Like how they use canines to detect drugs. \"What does that mean?\" I said. \n\nMcKenzie wet her lips nervously. \"He's...\" she trailed off and I could tell she was resisting the urge to glance back over her shoulder. She swallowed and then said, \"Like a magnet. I can feel this pull toward him. Stronger than anything else in the room.\" \n\n\"Even me?\" I asked. \n\nMy stepdaughter looked uncomfortable. \"Well...\" she muttered. \"Yeah...\" She glanced up into my face helplessly. \"I don't want to want someone other than you,\" she tried to explain. \"It's just like my body and brain are fighting me, making me\u2014\" \n\nI held up a hand to interrupt her before she got too upset. \"It's okay, angel,\" I told her, nodding. \"I expected this.\" I wasn't sure exactly how much longer Aaron had been using his BDE products than me. But given how much progress I'd made in a few weeks, even if the other man had only had a month or two to get a head start... I was in trouble. \n\nMcKenzie nodded, brushing her chestnut hair back behind one ear. She took a step closer, her fingers playing with my lapel. \"You're the only one I really want,\" she said. Her voice was low, and her fingers pulled at the jacket emphatically. I sensed that she was trying to say more than that, but I didn't have the time or focus right now to read into that kind of subtext. \n\n\"Thank you, darling,\" I murmured. I leaned forward and kissed her forehead gently. \n\nHer eyes drifted closed and I could see some of the tension leaving her slim frame. \"What next, then?\" she asked, seeming calmer. \n\nI took a breath, glanced around, and picked out a standing table by the wall. There was a man standing there alone, leaning on his elbow and making a phone call. I gestured with my chin. \"I'll be over at that table,\" I turned McKenzie in my hands so she could see. \n\nThe teenager nodded and leaned back against my chest. Her shoulders slumped a little as she blew out a breath. \n\n\"And you,\" I kissed the top of her head, \"go and get us some drinks.\" \n\nMcKenzie turned back around and looked up at me with wide-eyed innocence. \"But Daddy,\" she murmured, soft enough that only I could hear. Her voice had lost all of the upset from before. \"I'm not 21.\" \n\nI rolled my eyes and smirked. \"You're saying you didn't bring your fake?\" \n\nMcKenzie's hazel eyes sparkled and she bit her lip as she smiled. \"Fine, you caught me.\" \n\nI shook my head. \"Get going,\" I chuckled, and McKenzie winked at me before turning and sashaying away. I was lucky no one knew that she was my stepdaughter, because I watched the sexy sway of her hips in that purple dress for a good half dozen seconds before blinking several times and taking back control of my brain. \n\nI centered myself before I started moving toward the tall, round cocktail table. I sauntered up slowly, eyeing the man who stood there. He didn't seem to notice me when I approached, and it was only when I grew closer that I realized he was talking in another language. \n\n\"\u2014 et je crois que tu ferra tr\u00e8s bien si...\" \n\nI paused a moment, uncertain, then I squared my shoulders. I had no reason to be nervous. I was an Alpha Male. I took charge of situations. \"Mr. King,\" I said, reaching out and touching the other man lightly on the shoulder. \"I didn't know you spoke French.\" \n\nMr. Silver Fox turned his head slowly, evidently still listening to the voice on the line. His eyes sparked and his eyebrows rose as he saw me. There was none of the momentary hesitation you usually experience when you bump into an acquaintance. Instead, a welcoming smile rose on his lips. He held up one finger for me to wait, then spoke rapidly into the phone. \"Pardon moi. Je dois continuer demain...\" He waited a second and I heard a muted voice respond. Then he said. \"Oui, merci. Au revoir.\" \n\nOliver King lowered the phone and tapped the touch screen, ending the call. Then, it was like a ray of sun struck his face because all of a sudden he was beaming at me with a broad smile and his arms were opening in a gesture of friendship. \n\n\"John!\" he said, his voice low enough not to startle anyone around us but loud enough to convey his excitement. \"I'm so pleased to bump into you.\" His arms wrapped around my torso while I was still trying to puzzle through the etiquette of hugging a virtual stranger at a party where I had been invited by accident. \n\nI went with it, and hugged him back. \"Mr. King,\" I said, my voice muffled by the shoulder of his jacket. I pulled back and asked. \"You speak French?\" \n\n\"Oh, yes,\" he said, widening his eyes and grinning. \"When you've unlocked this much mental potential? Things like learning languages become easy and fun. No, it's true!\" he added, when he saw my look of skepticism. \"And once I started learning languages I was able to unlock entirely new markets for the company. That was my French business partner. I'm doing my recordings for the French market and he's helping me perfect the product.\" The older man clapped me on the shoulder and kept his hand there, looking me up and down like how an uncle might admire his favorite nephew after several years apart. \"You're looking good,\" he said. \"You must be working out a lot.\" \n\nI couldn't help but feel a glow of warmth at his words. I shrugged, felt a little flush of pride, and then, \"You know. I do what I can.\" \n\nMr. Silver Fox squeezed my shoulder and nodded. \"Excellent,\" he said. And then, raising his eyebrows and releasing me, \"Forgive me. In my excitement, I forgot that I had never expected I would see you here.\" He laughed softly. \"Were you already coming to this event and forgot to mention it to me on our call?\" He winked. \"Or did you sneak an invite just to come and meet me?\" \n\nMy brain flew back to the evening, earlier this week, when the head of Brain Development Enterprises had dropped the bomb that Aaron Burns was using BDE products. I had barely said anything else to the man before hanging up our call. I wasn't surprised that I had neglected to mention I would be coming to the same party. \n\nI realized that the other man was watching me closely. It didn't feel like an interrogatory look, though. More like the expression of concern you might give a friend dealing with tough news. \"I'm afraid my joke may have had the wrong effect,\" he said. \"Is everything going alright, John?\" \n\nMy jaw tightened as I thought of Barbara and Aaron. I nodded, then shrugged helplessly. I cleared my throat, and finally spoke. \"Well, Mr. King...\" I started talking. I hadn't intended to say this much. I couldn't have said why I was laying out my situation for a virtual stranger. But I felt like I could trust him. I knew I could trust him. \n\nMr. Silver Fox had an easy way about him. He was a good listener, and knew just how to nod and grimace and murmur acknowledgements at all the right moment. \n\nI was finishing my story when I saw the other man's attentive gaze dart away from me for the first time. His expression opened up in astonishment as he looked over my shoulder, then closed up again so quickly that I could almost have missed it. \n\n\"So that's why I'm here tonight,\" I concluded, shrugging. I felt the nudge of a hip against mine, and I glanced around. McKenzie had arrived, a tall glass in each hand with ice and several sprigs of something green. \"Why we're here tonight,\" I corrected. \n\nOliver King blinked as he looked at my stepdaughter and I felt something. It was almost like a seismic shift beneath my feet, the movement of a force that was all around me but I hadn't seen before. His eyes were focused on McKenzie and there was a light behind them, a strange weight to his concentration. The man's invisible aura of power was refocusing, altering its flow to head in the 18-year-old's direction. I could tell that on a deep, primal level he was thinking that she was attractive and that he wanted her and that he was thinking of taking her. In that moment, if Mr. Silver Fox had told me he was going to fuck my stepdaughter I don't think I would have had the ability to protest. \n\nThen, the CEO shook his head slightly and the tension in his face eased. The strange, shifting sensation settled and I felt like my feet were underneath me again. I looked at him with something close to awe. \n\nIs that what happens when you take BDE to the next level? Your shifts in emotion become like a physical force that you have to keep in check? Is that what's in store for me? My thoughts raced, and I wasn't sure whether to be excited or terrified. \n\nI glanced sideways at McKenzie, realizing that she must have felt it too. Her hazel eyes were wide, and they watched Mr. King with a powerful intensity. I could practically hear the speed of her heart bounding in her chest and hear the panting of her breath between parted lips. \n\n\"Angel,\" I murmured gently. \n\nMy stepdaughter jerked her head away suddenly, like she was breaking free of an invisible restraint, and averted her eyes from the man. She glanced up at me instead, her expression uncertain. \"John?\" she asked. \n\nI nodded. \"It's okay, Kenz,\" I said quietly. \"This is Mr. Oliver King. He's the founder of BDE.\" I took one of the drinks from her hand. I sipped it, just to give my body something normal to do. \n\nMmm... Mojito. \n\nI wasn't used to feeling all these strange social forces pushing and pulling and flowing all around me. But I couldn't help but be aware, now, of the silent aura that radiated outward from the BDE CEO. It was in the way people stood around him, like anyone within a dozen yards could turn and give Oliver King their full attention in an instant if he asked for it. And there was a subtle tension in their bodies, like they were waiting for someone to pull their puppet strings or tell them what to do. \n\nMcKenzie nodded slowly, several strands of chestnut hair falling across her face. \"It's nice to meet you, Mr. King,\" she said demurely. \n\nThe other man inclined his head, slowly. \"It's my pleasure,\" he said, and he pulled off the difficult feat of making those words sound gallant instead of contrived. \n\n\"I was just telling Mr. King about why we're here tonight,\" I commented to my stepdaughter. \n\nMcKenzie gave me a surprised look. I could imagine her thinking, Why would you share that information with a stranger? \n\nBut it was obvious to me that Mr. King was a trustworthy source of insight and a potential ally. After all. Everything I have... it's all thanks to BDE. I trust BDE. \n\nThe other man nodded again to McKenzie, and now his expression hinted at something grave. \"I'm afraid one of my clients has used his new talents to break apart your family. I'm sorry.\" \n\nMcKenzie shrugged. I wasn't used to her being so shy, but she glanced from me to Mr. King before saying, \"Well, I guess your products have pros and cons. Just like anything.\" \n\nThe CEO nodded and said, \"So I can see.\" \n\nI wasn't sure quite what he meant, but he switched his glance from my stepdaughter to me and he rested his hand a final time on my arm. \"It seems like you have enough things to think about and deal with at the moment,\" with his free hand he reached into his jacket and tugged out a simple white business card. \"But when things quiet down, I'd love if you looked me up.\" His eyes sharpened slightly. \"I think we could do great work together.\" \n\nI nodded distractedly and accepted the slip of paper. \"I'll do that,\" I answered, but I really couldn't focus on this right now. Even in the captivating aura of Mr. King's presence, my brain kept falling back to the same worry. Where is Barbara? I needed to find my wife so I could convince her to leave Aaron. ",
        "Mr. King inclined his head to McKenzie and then slipped away into the crowd. They parted for him without glancing his way, subconsciously reacting to the subtle power of his presence. \n\nI watched him go, then looked over at my stepdaughter. \n\nThe beautiful teen was watching him as well, but with a tense expression on her face. \n\n\"What is it?\" I asked. \"Did you feel...?\" I hesitated, not sure how to ask. \"Like you wanted to go with him? Or something else?\" \n\nBut McKenzie shook her head. Her eyes turned back to me. \"I just don't know about him,\" she said. \"Something seems wrong.\" Then she shrugged, casting off the thought. \"Not for us to think about now,\" she continued. \"We have to talk to Mom and get her to leave with us, right? That's our objective.\" \n\nI blew out a sigh and then tugged at my cuffs. My eyes turned toward the entrance, where the last arriving visitors were being greeted by the trio of couples. Barbara was practically glued to Aaron's side, and I knew that if I was going to have any chance at getting my wife back we would have to separate them. My inner Alpha obviously wasn't developed enough to take on Aaron directly, so it was just like McKenzie had said. \n\nDavid and Goliath. I needed to be clever. \n\nThere was a slow, half minute of silence as I stared and stared and thought. Then, I rubbed thoughtfully along my chin with the back of my hand. The last pair to enter the party were just now walking toward the bar. The company heads and their dates were chatting briefly with one another. Now they were scattering into the crowd. \n\nBarbara leaned up and murmured something in Aaron Burns's ear. \n\nThe dapper man smirked, nodded, and gestured to a table nearby where several people were already sitting. Then he turned and headed for the bar. Barbara continued forward and slid down into a chair, looking like a piece of art sitting in the midst of the crowd. \n\n\"McKenzie...\" I said, only now looking over at her. \"I need you to do something for me. And it won't be easy. Especially after what you told me earlier.\" My dark eyes flickered back, beyond Barbara, to where Aaron was sidling around and between small groups of people on his way to get drinks. \n\nMy stepdaughter's eyes widened and she looked up into my face with a look that was both hopeful and a little anxious. \"I'm sure I can do it,\" she said firmly. \"For you.\" \n\nI took a deep breath. Then, I nodded. \"I need you to seduce Aaron Burns.\" \n\n* * * \n\nMy plan had revolved around gauging the strength of Aaron's abilities, figuring out a way to get Barbara back, and then making sure that my wife's boss never had the chance to steal her away again. Only now I knew that Aaron Burns was far stronger than I was, Barbara seemed completely devoted to him and I was never going to win her back if I went up against him head on. I had to give Barbara something, something that would convince her that being with me and McKenzie was simply the better option than being with Aaron. \n\nI just didn't know what that thing was. \n\nThat didn't stop me, though. My inner, more confident, self was taking over, walking me calmly past and through the intervening people. I was on a mission. Somewhere out in the crowd, I knew, McKenzie was on a mission as well. She was heading for the bar, where she would bump into Aaron Burns and distract him long enough for me to win back Barbara. \n\nI hadn't even stopped to wonder if Aaron might be tempted by another woman when he was here with Barbara. He had intentionally seduced another man's wife. He wasn't the type to resist McKenzie if she turned her charm his way. I just hoped he wouldn't suspect anything. \n\nI wondered, for a second, about how devoted to me McKenzie had become. It wasn't just the sexual infatuation that had been between us at the beginning. There was something deeper, and I knew both of us could feel it even though neither of us had vocalized it yet. I had to hope that, whatever it was, that something was more powerful than Aaron's BDE Alpha charms. Otherwise I was going to lose my stepdaughter just like I'd lost my wife. \n\nI came toward Barbara's table from the side, just at the edge of the blonde woman's field of vision, and she didn't realize that someone was approaching until I pulled out the chair beside her and sat down swiftly. \n\n\"Hey, Barb,\" I said conversationally. \"We didn't really get to talk earlier, I was hoping we could catch up.\" \n\nThe look she turned my way actually surprised me. When she'd left our house on Monday night, my wife had been distraught, angry and maybe even a little scared. Now she looked utterly serene, with wide, open eyes and an easy smile that drifted easily across her full, red lips. It was as if she was bumping into an old acquaintance, instead of the husband she had deserted. \n\n\"John,\" she said. \"Hello again.\" \n\nWhat has Aaron done to you? I wondered. McKenzie had never gotten like this with me. She might have become super suggestible after inhaling my scent, or when I used my commanding tone. But she'd never seemed oblivious and out of it afterwards. \n\nI almost reached out, took my wife by the hand, squeezed her fingers, tried to reason with her. But luckily my weaker emotions were overruled by the righteous frustration that my inner Alpha pushed to the forefront. That wouldn't work. The only thing that would work was using my new strength in a unique way. \n\n\"Hello again,\" I said smoothly. \"It's good to see you. I've thought about you a lot since Monday.\" \n\nBarbara's calm expression twitched for a moment and a slight furrow dug its way between her carefully shaped eyebrows. \"Hmm...\" she said. \"Monday.\" \n\nReally? Her tone made it sound like she could barely remember it. \"Monday,\" I agreed. \"When you ran out on me and Kenz?\" Something was wrong. Aaron had done something to my wife. I leaned forward, but didn't extend my arm or touch her hand like part of me wanted to. \"We've missed you. I want you back. Both of us do.\" I tried to reach down into my core and pull up my power, infuse my tone with gravity and persuasion. I felt a little tremor of resonance behind my words, my abilities starting to warm up. \n\nBarbara glanced away thoughtfully, her hand rising and her fingers running through her wave of golden hair. \"I left for a reason,\" she said. She couldn't look at me. \n\n\"Was that reason you and me?\" I pressed, my voice rising. \"Or was it because couldn't handle me and Kenz? Or was it your boss?\" I hadn't meant to go there, hadn't intended to bring up Aaron. That could only end poorly. \n\nThe three other people sitting at our table glanced around, askance. One was a woman dressed in a grey suit jacket and slacks, with a white blouse under the jacket that clung to her lean body. On her left was a bearded man with round glasses and a mop of dark hair, leaning forward energetically on an elbow like he was mid-sentence. On the other side sat a portly man whose sport coat was thrown over the back of his chair while his bright red suspenders curved over his expansive torso. I'm not sure where he got his tie, but it was pale blue and sewn with little cacti and sombreros. \n\n\"Ignore us.\" I didn't think about it, but I felt the rush of strength that charged my command with extra force. The trio blinked blankly at us for several seconds. Then, as one, the woman and Se\u00f1or Suspenders turned to the bearded man, who launched right back into the story he'd been telling. \n\nI blew out a sigh and turned to my wife. She was continuing as well. \n\n\"I love Aaron,\" Barbara said. Her tone sounded hollow after my rich, compelling command, but the words still managed to spear straight into my chest. \"That's why I left.\" \n\nMy wife loves another man. The thought tried to rattle around my head and tear me up, but I couldn't let it. She just thinks she does, I forced myself to reason. She loves me, she married me, and we were on a great trajectory before Aaron took her away. And before she found out about you and her daughter, another part of my mind commented snidely. But I ignored it. \n\nI swallowed. Time for me to try and get my wife back. \"You don't love Aaron,\" I started, figuring I might as well begin with the most obvious tack. Just in case it worked. My voice was low and thrumming with energy, my chest warm as I felt the fire of command flaring to life. \n\nBarbara's blue eyes flashed for a second and her tongue darted out to wet her lips. She looked frustrated, like she was struggling with a difficult mental calculation. \"No, I do,\" she said firmly after a second. \"I love Aaron, and he's been good to me...\" She trailed off, as if she was trying to remember something. \"You're the ones who were bad.\" \n\nWell... I hadn't really expected it to work, but it was certainly disheartening that this was my starting place. I glanced around, trying to see through the press toward the bar. How much time did I have to work on Barbara? How long could McKenzie keep Aaron burns distracted? But I couldn't see anything. It was all dark jackets and tight dresses and flashes of light on bare skin and bright watches. \n\nI turned back toward Barbara and leaned in even closer. I was staring into those blue eyes now, deep into them, looking for any part of her that I could hook and pull out. Any part of the woman who had fallen in love with me. \n\nThe blue orbs were noncommittally attentive. She didn't seem aware of the fact that I was acting in a way not particularly suitable for a company dinner. My chair was right up next to hers. My voice was low and commanding and my body was practically vibrating with the pent up desire to just pick her up and whisk her away. But I couldn't. \n\nThat was the core of it, I realized. I could use my voice to command Barbara, and my wife would probably listen to at least some of my instructions. This close, I could smell her perfume, could feel the parts of me that wanted to just take her right here and now and damn the consequences. But I didn't just want an obedient toy. I didn't just want my wife's body. I wanted my wife, her body and her mind and her affection. And I could only\u2014 \n\nFocus, I ordered myself. Time was wasting. Come up with a new line of attack. Maybe by reminding my wife of our shared history, reminding her what she was missing. That might be enough. \n\nI shifted in my seat. \"Do you remember when we met, Barb?\" I asked gently. \"People say blind dates are dangerous but ours went so well. And you said I was the only man who didn't get all stressed out when you told him you had a daughter.\" To be honest I had already been so nervous to be out with such a gorgeous woman that I hadn't had the emotional energy to be stressed. But that didn't matter. It was a positive, shared memory. \n\nThe beautiful blonde smiled and ran a few fingers down the side of her dress thoughtfully, playing with the fabric. \"You're right,\" she said. \n\nI tried to ignore the taut strings of arousal that were tugging at my baser desires as I watched her, my eyes flicking from her cleavage to the swell of her tits to the curve of her hip. \n\n\"But do you think a nice first date makes up for you fucking my daughter?\" \n\nHer tone was so calm that it took me a second to realize the directness of her words. I blinked and my gaze whipped back up into hers. Her eyes were watching me casually. Not hostile or angry. Almost curious. \n\nThe internal struggle in my mind between lust and logic was worsened by the addition of guilt to the fray. You cheated on your wife, a small, reproachful part of me agreed. You don't deserve to keep her. You weren't man enough. All it took was a real man to show up and she was gone. Luckily, I had a defense system against that kind of self-doubt. \n\nI almost got distracted by the battle bubbling on the edge of my consciousness. Mr. Silver Fox's words from the BDE recording rose up quietly. \n\nI am a Man. I am the Man. I deserve what I want. I deserve who I want. I deserve whatever I want. \n\nBut I was running out of time. \"No...\" I said slowly, pursing my lips. \"I don't think it does make up for it.\" Maybe I could take a new angle. \n\nBarbara watched me, her hand slowly brushing up and down the shiny blue dress. \n\n\"I don't think they have anything to do with each other,\" I continued. I tried to pick my words carefully. \"I think that what you feel for me and what I feel for you have nothing to do with anyone else.\" It felt like a safe thing to say, and Barbara paused her movements \"Think about how you used to feel about me. Just remember that for a second...\" \n\nThe woman's eyes drifted away from mine, growing a little hazy. Then, after a moment, she glanced back into my face. She raised her eyebrows. \n\nI saw that Barbara was waiting for me to continue, and noticed abruptly that she hadn't spoken in a dozen seconds. I felt the warmth and slight vibration in my chest and throat. Oh... I might not have been commanding her, but I suddenly realized that I had been funneling a small amount of power into my words, a heat and conviction. It had twirled up into her mind and ensnared her attention. \n\n\"Those feelings are still there,\" I told her. \"The interest and the attraction and the love. And all you have to do to get them back is let go of your anger at me and come home.\" \n\nI had her right up until the end. I could tell. Her eyebrows were furrowed and she bit lightly at her lower lip. Her eyelashes fluttered lower as she looked inwards. And then she shook her head abruptly, blue orbs flashing open. \"I won't leave Aaron,\" she said. Her voice was low and smooth, hard. \"I love him.\" \n\nI couldn't help but grimace at her words, my fingers curling and uncurling on my thigh. I thought my wife's voice sounded just the tiniest bit monotone and brainwashed when she said she loved her boss. But I was probably just imagining it. Hearing what I wanted to hear. \n\nI clenched my jaw and started to open my mouth. I didn't know how much time I had left, and I had no better plan of what to say next, but I knew I had to try. \n\n\"Hello, John.\" \n\nI recognized the voice that cut through the noise all around us. \n\nI forced myself not to whip around. Instead I paused, then turned my head slowly around to set my gaze on Aaron Burns. \n\nThe man was standing behind my left shoulder, towards the bar, with a cocktail in one hand and the other resting gently on McKenzie's hip. His arm was wrapped casually behind her back and my stepdaughter was leaning her head down against his shoulder. \n\nShe looked perfectly comfortable there next to him, like a cat who's found a new favorite perch for napping or lounging in the sun. I swallowed and couldn't let my creeping doubts catch hold. She's just doing what I asked, I thought. She's being a distraction. \n\nBut I couldn't let it go. The sight of McKenzie there with Aaron Burns was even worse than the thought of Barbara with the man. The way his fingers were touching her side where I did. The way his lust and alpha male dominance oozed off of him and was probably making her all hot and wet and thoughtless. So I ignored my wife's boss and focused on my stepdaughter. \n\n\"Hey, Kenz,\" I said, a little smile touching the corners of my eyes. I tried to silently ask if she was alright. \n\n\"Hey, Daddy...\" My girl's voice was breathy. It reached inside and freed the desire and arousal that I'd been holding back. I felt the aching, throbbing lust grow between my legs. She didn't sound alright. She sounded horny. \n\n\"You doing okay with this snake?\" I raised my eyebrows and jerked my chin at our host. \n\nA bashful smile crept across the teenager's mouth. She bit her lip and then glanced up at Aaron, lifting her head from his shoulder. \"Oh... Definitely more than okay...\" It was hard for me to read her features at an angle, but her eyes seemed wide and glazed, her face settling into a serene expression. \n\nWhat if it's not an act? It was impossible for the thought not to flash across my brain. What if all his extra BDE training had turned Aaron Burns into the kind of man I just couldn't go up against? The kind who would chuckle at my efforts and steal my stepdaughter to go along with my wife. \n\nI abruptly imagined what life would be like for me without McKenzie. The growing heat and desire ebbed. I could see myself waking up in an empty room, with the cool sheets and unused pillows. Doing workouts without her encouragement or her occasional drill-sergeant-style motivation. Going to work and coming home and not having someone to see when I got back. It was a bleak story, and I knew that whatever was left of my casual expression slipped away from my face. \n\nMy eyes twitched from my stepdaughter's face to my enemy's. \n\n\"Aaron,\" I said. My voice was even, but I knew my expression wasn't nearly the confident smirk I wanted. \"Have you been trying to steal my date?\" It was supposed to be a joke and it came out flat. But I knew that the first sign of weakness would be the other man's signal to finish me off, to send me home in shame. Huh, I thought. I guess the only benefit of our mutual Alpha instincts was that if I trusted Aaron to follow those instincts then I could probably predict how he would act. \n\nThe other man gave me his most confident smirk, almost spitefully. \"Oh,\" he bent his face toward the teenager's with a casual charm. \"Of course I'm trying to steal her, John.\" He hesitated an instant before his lips reached McKenzie's upturned cheek for a quick, flirty peck. \"She's an absolute delight.\" \n\nAs he hesitated McKenzie turned her head. Then, she lifted her lips and her mouth pressed to his. Aaron blinked once in surprise and then grinned into the kiss. His hands slid up her back and rested on her shoulders, pulling her in closer. Her fingers tugged at the edges of his grey jacket. \n\nWait\u2014 My brain couldn't believe what my eyes were seeing. My heart dropped through the floor, whatever arousal I'd felt draining away completely. \n\nMy stepdaughter was frantically making out with Aaron Burns, his hands now tangling in her dark hair. Around them, partiers continued to walk and talk and drink. More evidence of Aaron Burns's incredible abilities. I'm not sure how, but the man had trained his people not to notice socially unacceptable behaviors. One man in a dark jacket and a yellow polo shirt actually sidestepped around Aaron, briefly laying a steadying hand on his boss's shoulder before he continued. \n\nI swallowed and sank back in my chair. For the first time, my confident persona lost control and the rest of my mind took the wheel. But it didn't matter. I shrugged, just to myself, and I knew that I was the most slumped, defeated-looking image of failure. I had tried to win back what I'd thought was mine. I'd been beaten. And not only that, but I'd lost something even more important. \n\nMcKenzie was his. Aaron Burns had won. \n\nI glanced down at my wife, and saw that Barbara was also watching the pair intently. There was a small frown on her face, like she was seeing something inappropriate but she didn't care enough to stop it. \n\nWith a soft murmur, McKenzie pulled back. Her eyes were flashing and I could see her perky breasts rising and falling as her breath panted in her chest. She was staring with wide-eyed wonder into Aaron's face, her dark hair tumbling around her cheeks and shoulders. Her face had darkened with a blush, and I wondered how she felt, at that moment. \n\nHad she completely forgotten me? Was there any sliver of her still trying to resist the man's thrall? Was there even any thought at all? Or was there only the primal desire to be with Aaron Burns, the ultimate alpha leader? \n\nThen, abruptly, a scent struck my senses and I wrinkled my nose. It was the same smell I'd noticed earlier, a heady, musky aroma with a cutting edge like vinegar. ",
        "Oh crap... My eyes locked on Aaron. \n\nIt was his post-BDE scent, but it was so different from my own. I'd thought that my natural musk had a powerful effect, but now I realized that Aaron's had been strong enough to ensnare even me. Until I actively noticed it, I'd been following Aaron's whims instead of mine. I had just been sitting and watching, weak and passive, as my women were taken. And I realized, as my will and righteous anger rushed back, that I'd been doing everything wrong since the beginning. It took my seeing McKenzie with another man, and doing nothing to stop it, for me to understand what I had to do. For me to understand what was necessary. \n\nI straightened in my chair. \n\nI couldn't beat Aaron Burns by being Aaron Burns \u2014 the man who would take things just because he wanted them, who would flaunt his influence and throw around his new power like a toy. In other words, I couldn't beat Aaron by being just how BDE had trained both of us to be. I could predict his moves because I knew how he thought, but I could already see I would never out-alpha a man who was two months deeper into his development. \n\nI pushed myself to my feet. \n\nI would have to beat Aaron by being me \u2014 the man who was a little less dominant and a little more honest, who would be thoughtful and strategic and use his strength to target his enemy's blind spots. Because the most Alpha thing I could do, I realized, was the one thing I hadn't been doing. It was to no longer need to try and prove what I was worth. It was to no longer need anyone else's affirmation or presence. It was to not need other people, even if I wanted them around. Because truly, I didn't need Barbara. I had McKenzie. I had Adrianna. And even if all of them were gone tomorrow then I would still have myself. At the end of the day, my own self-sufficiency and independence was the most powerful trait I could have. \n\n\"Barbara. Listen to me.\" \n\nI said my wife's name quietly and calmly, with a new type of assurance. My suit pressed against my muscles as I moved, and it felt like armor around my torso. My confidence began to flow back, and it felt bulletproof. Even without much effort, my voice rumbled with force, and both Aaron and McKenzie turned to look my way. Aaron's expression was almost laughably surprised, but I ignored them both, focusing on the words I had to speak. \n\n\"Yes, John?\" The blonde's voice was smooth and calm, but I could see that there was more attention in her eyes now as she looked up at me. Like those sparkling blue orbs were seeing me truly for the first time in the evening. \n\n\"I can't chase after you anymore.\" \n\nHer eyes glanced away in discomfort before refastening on my face. \n\nI shrugged and spread my hands. \"I can't need you that badly. It's not good for either of us. And I especially can't chase you when I already have exactly what I want right in front of me.\" I tried to shoot McKenzie a look but her hazel eyes didn't meet mine. I couldn't worry about that. \"Barbara,\" and I met my wife's gaze. \"Make your own decision. If you can. If you're truly happy with... with someone else,\" I managed not to look at Aaron Burns when I said it. \"Then I will go my own way and not bother you on yours. But if you want to come back...\" and now I did look slowly over into her boss's face. \"No one will be able to stop you.\" \n\nAaron Burns had much more direct fuel than I did for his persuasive abilities. But he was straightforward. He only knew to take and take, because that's what BDE had taught him. And he was surprised. Because up until this moment he'd underestimated me. This was the only arrow in my quiver. The only glimmer of a way out that I could possibly see. \n\nWhat if the even more powerful tactic was to let go? What if I could flex my dominance by releasing my need for control and showing that I would succeed whatever happened? That's confidence, right? That's dominance? I hoped it was. Because I knew that at this point Barbara and McKenzie would end up with whoever won our invisible duel of wills. \n\nIt was a far more primal contest than I'd realized. We weren't just two men with a woman between us. We were two budding chieftains struggling for control of our tiny kingdoms. And the one who lost would be kicked to the curb, alone and broken. \n\nBarbara's face was conflicted as I looked down at her and she looked up at me. Her hands in her lap were rigid with tension and her lips were pressed together in a thoughtful curve. She wet her lips, started to say something, glanced at Aaron Burns, and then let her mouth fall shut. \n\nShe shook her head, blonde hair swaying. \"I won't leave Aaron,\" she said, and her face was set in an expression I recognized. It was Barbara's 'I've made my decision' face. \n\nI swallowed. And there it was. My final gambit. Defeated. \n\nI could have pressed the issue. I could have gone for it all and used whatever means I had to try and convince her to return. But that wasn't the point. \n\nI had said I would respect her decision. And a Man honors his word. It's what makes him strong. \n\nBut I still felt dull and empty. Everything I'd gone through tonight. Dealing with Aaron's smug attitude. Seeing how the other man had used his unlocked talents to transform Barbara from a dynamic woman into dull-minded plaything. Watching my wife's lover make out with my date. All of it. It was all for nothing. \n\n\"I wasn't aware you were a player,\" Aaron Burns said, and I looked up again. His tone was almost musing, and his lean face twisted into what I could only describe as a hungry expression while his eyes roamed across my face. \"But in our game, we play for keeps.\" \n\nI felt my heart seize up but I forced myself to breathe easy. \"Kenz?\" I said gently. \"I think we did all we can. It's time to leave.\" I didn't want to go. I didn't want to leave my wife behind. And I didn't want to deal with the possibility that I might have lost McKenzie as well. But there was nothing more for me to do here. I just had to get out while Aaron Burns was still on his back foot. \n\nMy stepdaughter brushed back dark hair from her light brown eyes and her gaze slowly turned my way. She seemed to hesitate a second, then the teenager shook her head slightly. Her eyes cleared and her full lips turned up into a lovely smile. \n\n\"Of course, Dad,\" she said, and she shrugged free of Aaron's arm. \n\nIt was almost worth losing Barbara to see the expression of shocked dismay on Aaron Burns's face as McKenzie walked the four steps to my side and leaned casually against my shoulder. \n\n\"But...\" the man spluttered. \"You... I...\" It was as if he couldn't compute the idea that he had been played, that a woman might be able to resist his charms. \n\nMcKenzie tossed her head, dark hair tumbling. She fixed him with a teasing smirk, but said nothing. \n\nI ignored the soaring relief in my chest and made sure it didn't show on my face. Ignoring Aaron now, I turned myself one last time to my wife. She looked up at me with those blue eyes but I couldn't let myself fall into them. \"I may not need you Barbara,\" I told her simply. \"But I do want you. McKenzie and I... we'll be at home if you want to come back to us.\" \n\nThen I turned and walked away with my stepdaughter in tow. \n\nBehind us, Aaron and Barbara watched us go. I could feel their eyes digging holes into my back. Aaron's eyes were lasers that wanted to cut me down where I stood. But I imagined that Barbara's gaze was almost wistful. \n\n* * * \n\n\"Did I do well, Dad?\" McKenzie's voice was anxious as we slid into the Tesla. She glanced over at me as I hit the ignition and the vehicle vibrated to life. \n\nI didn't glance over as I responded. \"Honestly?\" I said. \"You scared the hell out of me, angel.\" I let out a soft huff of a nervous laugh and I forced myself not to think about what we were leaving behind as I pulled out of the parking spot. We slid forward between rows of cars. \n\nIn my peripheral vision, McKenzie ducked her head. \"Sorry,\" she said, grimacing. \"I had to sell it.\" \n\nI blew out a breath. \"You definitely sold it.\" I tried to keep the tension out of my voice. There was a momentary lull. Then, my curiosity rose and I glanced over. \"Was it hard?\" \n\nMcKenzie shrugged. \"Was what hard?\" \n\nI gestured with one hand, keeping the other lightly on the wheel. \"You know...\" I wasn't sure how to vocalize all of the concepts and theories and strange realities that were whirling through my mind. \"Resisting him? Was he...\" I paused again. \"Especially persuasive?\" \n\n\"Ah.\" McKenzie hesitated a moment, and then nodded briskly. \"It was hard. As soon as he started talking to me at the bar it was pretty much impossible to ignore him. Like I said before. It was as if he was this magnet and I was just being drawn closer and closer. My thoughts started to go slow, kind of like when you speak in that certain way with me or Adrianna. And I just wanted to be close to him and listen to what he was saying.\" \n\n\"How did you break through it?\" I asked, surprised. \n\nMy stepdaughter was blushing cutely when I glanced over. \"I thought of you,\" she said. \"Of how nice it feels when you hold me. Or when you lie with your head in my lap. Or how awesome it feels when we make...\" she trailed off. \"When we... have sex.\" \n\nThere was another pause, and then the teenager leaned across the center console to kiss me on the shoulder. \"You know I'm not ever going to leave you, right?\" she asked softly. She didn't lean away, and there was something in her voice that made me realize it was more than just a profession of loyalty. \n\nMcKenzie was trying to tell me something else. \n\nI raised my eyebrows and glanced down into her face. My stepdaughter's eyes were wide and her face was strained. \"I trust you,\" I told her. \n\nShe nodded and rested her forehead on my shoulder. We pulled out onto the road. It would be about 20 minutes or so to drive back home. I wondered how it would feel to arrive, to step back through my front door knowing that my wife would never be here again. To know that my family was broken, and that it was my fault because I wasn't strong enough. \n\nThen I realized McKenzie had been silent, resting against my side, for five or six minutes while I'd been wrapped in my thoughts. I shrugged my shoulder to get her attention. \n\nShe lifted up her face and pulled back into her seat, dropping her head against the headrest. \n\n\"What is it?\" I asked after a moment. \"There's something you wanted to say.\" I tried to sound gentle, but I was on edge. \n\nMcKenzie shrugged, looking out the window as dark shapes blurred past. There was nothing to see out there, but I knew she was thinking. \n\nI waited patiently, then after another few minutes I leaned forward to speak. That was when she said it. \n\n\"I love you.\" \n\nThu-thump. Thu-thump. \n\nI could suddenly hear my heart beating very loud in my chest, and I focused all of my concentration on keeping the Tesla driving straight. McKenzie was looking over at me and I wasn't looking back, not because I didn't know what she was saying but because I realized the gravity of it. And I knew, also, that out of all the things I could say in this moment there were only a few right things to say. \n\n\"I love you too, darling,\" I told her lightly, eyes on the road. I was playing for time, but my stepdaughter shook her head. \n\n\"You know what I mean,\" she insisted. \"Not just as a father figure or a provider. More than that. I love you...\" It was obvious she was struggling, not quite sure how to say it and fighting the discomfort of revealing so much. \"As a man... As a lover...\" \n\nI was almost surprised at how vulnerable my stepdaughter looked. She was watching me closely, her expression strained as she lay all of her cards down on the table. There was no going back from this declaration, because once they're out on the air you can't take those three little words back. \n\n\"As a partner...\" McKenzie murmured. \n\nI realized, as she looked pleadingly at me from the passenger side, that McKenzie had been feeling this way for more than a short time. Our past few weeks together had been like an accelerated deep dive into a romantic relationship. We lived together and slept together, we talked about our problems and we had been through emotional drama. It was like, by accident, we'd jammed months or years as a couple into an incredibly brief span. \n\nI could only suspect, later, that being in love with me was why McKenzie had been able to resist Aaron Burns. Why she'd been worried about sharing me with Barbara. But in the moment I was too busy thinking about a different epiphany. I knew there must be reasons I shouldn't feel this way, but I couldn't fool myself. By now, the fact that McKenzie was my stepdaughter barely flicked across my consciousness. I was in love with this girl, too. Everything that I'd wanted, I had with her. \n\nI was silent as we pulled off the main street and back into the suburbs. We had a couple more turns, and then we would be home. We were still driving between dark houses and trees, but there was moonlight and the street was empty and calm. The Tesla made almost no noise as we slid along, close to the ground. \n\nMcKenzie wanted me to talk. She wanted me to answer. She didn't expect me to deny her declaration, but there's always that little fear in the corners of your mind that tells you the other person doesn't feel the same way. Only she didn't say anything. She just watched me with wide eyes as I kept my own eyes ahead and maneuvered us up into the driveway. \n\nI parked the car and started to get out. \n\nMcKenzie reached out and grabbed my cuff as I moved, tugging me to a halt. When I looked over she scowled worriedly. \"Come on, John...\" she said, her voice rising and filled with tension. \"Just say something.\" \n\nNow I couldn't keep the grin from jumping from one side of my face to the other. I rolled my eyes and the energy of my inner Alpha Male flared. \"Of course I love you, Kenz.\" It felt so easy to say, sinfully easy. The words rolled from my tongue without hesitation. I don't know how many times I'd said them before, but they meant something different this time. This time they meant that I wasn't just her stepfather. I was her Man. \n\nMy stepdaughter scowled harder and her fingers curled into a loose fist. She punched me in the arm. \"Jerk,\" she muttered. Blowing out a little huff of air, she slid from the car and out the other side, starting to circle in front of the hood. \n\nGrin still plastered to my face, I chuckled and extracted myself from the car, hurrying to get in front of the teen. \"Hey, McKenzie...\" I said, holding up my hands to stop her. \n\n\"What?\" she pouted, narrowing her eyes at me and folding her arms. She was just a few feet away now, so even in the dark I could see the twinkle in her eye, the smile that she was trying to keep off of her lips. \n\n\"I love you, too.\" It was the second time I'd said it that way, and McKenzie couldn't help herself. \n\nThe smile broke out across her lips and then she was springing forward and throwing her arms around my neck and kissing me. We were stumbling and heading for the steps and the porch. Then up the stairs we went and the car went dark in the driveway as I fumbled in my pocket for the front door key. \n\nAnd then we were inside. \n\n* * * \n\nMy jacket hit the floor of the entry. My hands were on McKenzie's back and side and hips and her lips were hot and searing into my own. Her breath touched at my face and throat when she gasped. I felt the desire rising inside of me, through my body, lighting like newspaper at the touch of a match. I had never been more turned on. I'd never been more into anyone than I was into my 18-year-old stepdaughter at that moment. \n\nShe pulled back long enough to reach up and tug at the knot of my tie with deft fingers, biting her lip and glancing up into my face with smoky eyes. Her dark hair fell across her forehead and tumbled over her shoulders and the soft purple of the dress. \n\nI moved closer again, my hands cupping her cheeks. My tie slithered around my neck and then fell into a pile at our feet. \n\nWe went up the stairs, McKenzie's dress bunching at her hips as her long, athletic legs wrapped around my waist. Her mouth was on my lips and cheeks and jaw as I cleared the last step and moved down the corridor into the master bedroom. Her hands clutched at my broad back as I strode to the bed and knelt on one knee, lowering the teenager to the mattress. There was only the light coming in from the moon and the streetlights outside, so the sheets were a shining background to the darkness of her silhouette. \n\n\"McKenzie,\" I said, kneeling over her. I felt the throbbing, pulsing desire that filled me, the heat that painted lines where her fingers had brushed across my body. \n\n\"Yes?\" Her voice was husky and low and her fingers were on the front of my shirt, pulling at the buttons. \n\n\"I think we can make this work.\" It was the final brick, the last domino that tumbled down, the last puzzle piece clicking into place. \n\n\"We will.\" \n\nThere was a confidence to her tone that made my heart rise, just like my pulsing manhood was rising in my slacks. I felt the familiar, uncomfortable, pressure of being restrained, and my hands left the bed. They went to my belt and then they were stripping it off and tossing it away. \n\n\"McKenzie,\" I ordered, undoing my slacks. \"Take off that dress for me.\" I didn't need to use my primal charisma to supercharge my words. My stepdaughter was already wriggling in a thoroughly distracting way, contorting to unzip her dress and get it off her stunning body. \n\n\"Yes, Daddy,\" she murmured, and there was a flash of that enticing smile that drove me wild. \n\nI growled, lust roaring up into my chest. I shoved my pants and boxer briefs down and away and off, kicking them aside. My length sprang free, straight and hard as a steel beam. I felt the tightening energy in my body, the growing tension in the air that made it hard to breath. \n\nBefore me, the teenager was kicking the dress away, leaving her naked in only a pair of lacy lilac panties and a matching bra. The fabric of her lingerie looked so delicate and inviting I couldn't help myself. \n\n\"Wow...\" I muttered, my hands tracing up her thighs. \n\nMy stepdaughter shivered and moaned at my touch, her hips writhing. Her eyes never left mine. I pinned her to the bed with my dark gaze, my mouth playful but my expression controlled. I grabbed one tanned leg and tugged her toward me, my stepdaughter grinning up at me as she slid closer down the bed. Then, I smirked, and with a grunt I grabbed her other ankle and flipped her onto her stomach. \n\nMcKenzie's hair flew through the air and tumbled across her back, the mattress bouncing her body and making her perky teen ass jiggle invitingly. She gasped at my sudden movement, and then purred as she realized my intent. \n\nMy hands were on her hips, pulling her back onto her hands and knees, one hand moving across the globe of her ass, squeezing the taut flesh. I felt my pulse race with arousal and my cock trembled between my legs as I held myself in check. \n\n\"Are you ready, angel?\" My voice was now a low rumble, deep and full and strong. \n\n\"Please, Daddy...\" she murmured. \n\n\"Good.\" My fingers hooked in the waistband of her panties and pulled them down her legs. I gently guided them free of her feet and then caressed up her calf, settling into my position behind her. My body was aching for her, wanting more, but I let the tension build higher and higher. It was palpable. McKenzie's inner thighs were wet with her juices and my cock was throbbing, the head beginning to drip with precum. \"So am I.\" \n\nMy hips moved forward and I slowly slid inside of her, my girth spreading McKenzie open around me. She was as hot and tight as I remembered, but something about this time felt different and unique. ",
        "My stepdaughter's tight body trembled with pleasure and she mewled out a soft cry of bliss, her head dropping forward and her back arching to offer her ass up toward me. \"Please, Daddy...\" I heard her muffled request. \"More.\" \n\nI pulled back and thrust again, just a little faster. Her inner tunnel was wet and wanton, hot as an oven around my shaft. I could feel every shock of pleasure run through the 18-year-old's body as she tensed around my length. And then again, just a little faster. She groaned and pushed back against me, fingers tightening into fists in the sheets. \n\nAnd then the dam broke. I was moving faster and faster, one hand gripping McKenzie's hip and the other reaching forward to fumble with the clasp of her bra. My cock powered into my stepdaughter's dripping snatch and I could feel her body respond with shudders of ecstasy. Her every moan sent a spike of arousal through my body. When my balls began to tighten, the idea of filling her lithe young body with my hot, sticky seed made my manhood pulse. \n\nMcKenzie's bra came undone and she was shrugging free of it, one hand brushing hair away from her face. She glanced back at me as our bodies came together over and over, eyes wide with bliss and lips parted in a moan. I could see the heat in her light eyes, the fiery desire that rose higher and higher and became all consuming. \n\nI shifted my position and then pulled back, sliding free from the teen's body with a hot, smooth sensation. As fast as we had just been moving, now it felt like we were moving through honey. The electric tension between us never waned as McKenzie slowly twisted, staring into my eyes unblinkingly, and lay down on her back, spreading her legs wide open for me. \n\nMy hands gently rested on her knees and then my fingers brushed up her thighs. \n\nShe sucked in a quick breath as I trailed lightly, teasingly, across her pussy and over her clit. But I moved on too quickly for her to get more than a taste of pleasure. My hands spread across her stomach and then slid down to the bed on either side as I lowered myself over her. I felt my shaft throb with lust as I moved slowly closer. \n\nMcKenzie's tits were perky spheres on her chest, her nipples high and hard at the peaks. I took one between my lips and flicked my tongue, sucking gently. \n\nAnother sharp gasp of pleasure followed by a moan. \n\nI eased between her outer folds and paused, the tip of my length just ready to slip inside of her. I was laying over McKenzie's body now, her knees up by my hips and her lips by my ear as I gently kissed her neck. \n\n\"I want you, Daddy...\" \n\nHer words snapped the tension. \n\nI pushed myself up onto my hands and my hips moved forward, my cock thrusting inside of McKenzie's body and making her arch her back at the sudden pleasure. \n\nShe gasped and a soft cry escaped on a breath. \"Yesss...\" she murmured breathlessly. \"Yesss...\" \n\nI moved. Faster. My rhythm driving. I felt the heat between us, the crackling lightning as her body fell over the edge. \n\nMcKenzie's body clenched around me as I split her in half. Her long legs tightened against my hips, her heels locked in the small of my back. She cried out and her head fell back into the pillows. Her hazel eyes widened and then squeezed shut. And I could feel the pleasure clenching, pulsing, tightening and releasing her muscles and core. \n\nHer pussy was volcanic around my throbbing rod and I barely slowed as she came all over me. I leaned down and kissed her throat, breathing in her scent and letting her breathe my scent in return. I felt her stiffen slightly and then heard her murmur a soft sigh of bliss as my musk worked its way into her body and mind. \n\nMy balls were heavy and my pulse roared in my ears. I felt like I was ready to explode and I just wanted to hold off a few more seconds. My cock was sheathed in the fantastic heat and comfort of her body, plumming her deepest depths and massaging her innermost walls. \n\nI didn't want this moment to end. \n\nAnd that was when it ended. \n\nI was buried to the hilt inside her perfect, fuckable body and I just felt myself fall over the edge. My body was too high on the emotions of the moment and I had no more self-control. My cock spasmed and my core clenched, and then I felt the electric bliss radiate out into my body. \n\nI heard myself breathing quickly and then every part of me was straining with pleasure. From my toes to my fingers, every fiber twisted and relaxed and then another wave crashed atop me. And another and another. And by the time McKenzie and I were done we were sprawled together atop the mattress in a heap. \n\nI lay back in the sheets but didn't close my eyes. I couldn't close my eyes. I was still too wired, my body and brain alive with energy but focused on a single thought. \n\nI was in love. It was a strange thing to be focused on. I don't know if I should have been focused on it. But love was just as crazy and wonderful a drug as I remembered. And I was already hooked again. \n\nMy eyes roamed over McKenzie's figure, her fit curves and her smooth, tanned skin. The moonlight played over her legs and part of her hip, filtered by the shutters, and gave her zebra stripes of shadow on a long, athletic leg. \n\n\"Do I pass inspection?\" The teenager's voice was low and relaxed, satisfied. \n\nI glanced over into the lovely face beside mine and was struck by what I realized. \n\nMy wife was gone. But I would go on without her. I couldn't get back what I'd lost before I changed my life. But that was the only time I would have to learn the fundamental rule: \n\nBe a Man. A Man wins. A Man conquers. A Man controls his world. \n\n\"You do, angel,\" I murmured, smiling lazily. \n\nBut those plans for conquering and controlling the world would have to wait until morning. Maybe then I would be able to focus on all the problems still left to handle. Aaron Burns and Barbara were still together, and I couldn't imagine the other man being pleased about losing McKenzie. Mr. Silver Fox's card was burning a hole in my jacket pocket, and the mysterious founder of BDE had said he wanted to work together. \n\nMy gaze roamed over my stepdaughter's nude body, her full, bouncy tits and her smooth legs dappled with moonlight. But most important, I had one fantastic, sexy, barely-legal woman in my bed and another busty babe just a text away. And we had plenty of time to enjoy each other before any of those other issues needed to be dealt with. \n\nThere was time for everything. And tonight would be the start of it all. \n\nTHE END \n\n(for now...) \n\n* * * \n\nANNOUNCEMENTS: Thank you so much for reading the first ten chapters of Brain Development Enterprises. Chapter 10 marks the end of the first arc of BDE, and I'll be taking a break from this story to work on other projects. \n\nI have two other series currently in the works. One is a \"JC Beleren spin\" on a mind control erotica classic and the other is a fantasy mystery that will soon be appearing in the 'Sci-Fi &amp; Fantasy' category here on Literotica. \n\nComment down below if you want more information! \n\nIf you haven't already, please rate this story. I'm working hard to try and land a story or two in the Mind Control Hall of Fame, so every 5-stars is really appreciated! \n\nIf you want to read more of my works, you can follow me here on Literotica. Lastly, I couldn't do this without the help of a few generous readers, so a special shoutout to all of them. You know who you are. \n\nLots of love, and I'll see you soon for my next publication!! \n\nJC"
    ],
    "authorname": "JCBeleren",
    "tags": [
        "blowjob",
        "brainwashing",
        "female submissive",
        "hypnosis",
        "incest",
        "loving wives",
        "male dominant",
        "mind control",
        "mind control romance"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/brain-development-enterprises-ch-10"
}