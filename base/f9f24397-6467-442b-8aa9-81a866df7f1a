{
    "title": "What The Cat Dragged In Ch. 32",
    "pages": [
        "32. You're a Good Man, Victor Creed\n\nCreed guided the SUV down the tree-lined two-lane highway with his left hand. His right rested in his lap and twitched whenever the sound of the engine told him that he needed to shift. He'd given up on trying to get completely used to automatic transmission. He glanced over at the frail. She was flipping through the stack of homemade flashcards in her lap, trying to look like she was studying. He knew she wasn't. She was going through the cards too damn fast and her eyes were darting from the cards to the passing scenery. Every so often she shifted in the comfortable seat. The closer they got to the Cavinder, the more often she shifted. \n\nCreed smiled a little. \"Gotta take a piss, frail?\"\n\n\"What?\" She seemed surprised to hear his voice. A soft blush colored her cheeks. \"No. Why?\"\n\nHe grinned at her, one fang poked at his lower lip. \"'Cause you ain't sat still for more than thirty seconds in the last hour.\" \n\nHer blush bloomed prettily and she laughed. \"I have.\"\n\nHe chuckled. \"Like hell.\"\n\n\"Well, maybe I've been fidgeting a little.\" She put a black elastic hair band around the cards and dropped them in her purse. \"I guess I'm excited about seeing Granna and Grandpa.\" She turned toward him and stroked his right hand. \"I know you're not.\" \n\nThe delicate touch sent a warm vibration of pleasure directly to his cock. He bit back a growl, gripped her fingers and shrugged. \"Your grandfather ain't so bad. 'Sides, we'll be at opposite ends of the place.\"\n\nCuriosity drew her eyebrows together. \"That'll make it easier?\"\n\n\"Well yeah. Least I won't be thinking about your grandmother standing around with a glass pressed to the goddamn wall every time I want to fuck you.\"\n\nShe laughed and stroked the back of his hand with her thumb. \"I didn't think that would bother you.\" \n\n\"Wouldn't bother me if she was in the same goddamn room. Figure she's an old lady though, she'll wanna sleep sometime and she'll be a pain in the ass if she doesn't get her eight hours.\" She smirked. \"That's all you ever think about isn't it?\"\n\nA little smile tugged at the corners of his lips. \"When you touch me like that, yes.\" She blushed and tried to pull her hand away. He held on tighter. \"Didn't say I didn't like it.\"\n\n\"You're driving.\"\n\n\"So? I can multitask.\" He nipped the inside of her wrist.\n\n\"Or,\" She teased his palm with one fingertip. \"We could wait until we get there and actually be comfortable. We're only half an hour away, right?\"\n\nFucking frail, she knew just how to touch him and he loved every goddamn minute of it. He grinned and stepped on the gas. \"Fifteen minutes.\"\n\n*~*~*~*~*~*\n\nKelly was sure that there was something about being in an unfamiliar place that made Victor even more randy than usual. It probably had something to do with showing ownership or establishing territory or something like that. If she were honest, she couldn't care less why, she just enjoyed it. \n\nShe kept her eyes on their entwined fingers and tried to ignore the speed at which the springtime scenery was slipping past. His hand dwarfed hers. The way his claws teased over her skin sent familiar shivers down her spine and an insistent, heavy warmth began to develop in her lower tummy. Much as she wanted to see her grandparents, she hoped that they were late.\n\nWhen Victor turned into the Cavinder parking lot, Kelly's hopes for a few moments alone with him disappeared. Her grandfather was taking a bag out of the back of a blue rental car. A purer kind of excitement surged in her chest and her heart started to beat faster. Victor parked next to him.\n\nKelly looked at him. \"Sorry. I was hoping-\"\n\n\"Go on.\" She started to pull away, but he gripped her hand tighter. A little grin quirked the corner of his mouth. \"I'll just fuck you 'til you scream later.\" He let her go.\n\n\"Promise?\" She grinned at him and got out of the vehicle before he could answer. \"Perfect timing.\" She said to her grandfather.\n\n\"Kelly!\" Her grandfather dropped the bag on the ground and wrapped his arms around her and lifted her off her feet. \"God it's good to see you.\"\n\nKelly laughed. \"It's good to see you too, now put me down!\" \n\n\"Your wish is my command.\" He set her on her feet again. \n\n\"Where's Granna? Is she already inside?\" \n\nHe gripped her hands and lowered his eyes. Then he looked up at her again. \"Kelly, your grandmother thinks that Cody could wake up any minute. I've tried to tell her that isn't exactly true and so have the doctors, but you know how she is once she gets something in her head.\"\n\nKelly was certain that all the air was suddenly gone. \"She's not here?\" She pulled her hands away.\n\n\"It was a last-minute decision.\" He reached for her again.\n\nShe stepped back. \"I talked to her last night. She said she was packing.\" Her head was spinning. Anger, disbelief and hurt twined together in a ragged knot.\n\n\"Kelly-\" \n\nShe shook her head, started toward the building and then turned back. \"He doesn't even know her! Cody hasn't seen either one of you since he was a baby. He might as well wake up next to a stranger. That's what it'll feel like to him.\" The anger was working its way out of the tangle.\n\n\"I tried to tell her that!\" The pain in his voice made it brittle. The sound cracked, so did Kelly's anger.\n\nShe took a deep breath and with it came clarity. \n\n\"She doesn't want to see me.\" \n\n\"That isn't it.\" He tried to sound convincing and failed.\n\nVictor walked between them, carrying their bags. He took her arm on the way by. \"C'mon, frail. 'F you two are gonna hash this out I need a drink.\" She looked over her shoulder. Her grandfather was following.\n\n*~*~*~*~*~*~*\n\nCreed sat the frail in a comfortable chair in the small bar. She told him she didn't want anything. He got her a strawberry lemonade. She forced a smile and took a sip just to please him. \n\nHe went back to the desk to check in. The female clerk had a decidedly feline scent, but her golden eyes were the only giveaway that she was anything other than human. He ignored her and turned to study a wooden rack of scenic postcards.\n\n\"Two guests Mr. Demmer?\"\n\n\"Ah, no. Just one.\"\n\nThe girl tapped the keys.\n\n\"Can't control your own mate.\" Creed's voice was low and dangerous.\n\n\"What would you have done? Hogtied her and threw her in the trunk of the car?\" The old man's eyes were on a large map of the trail system around the inn.\n\n\"That's only for special occasions.\" He listened while the clerk asked Joe to sign the register. The pen scratched against the paper and Joe slide the register back across the desk. The clerk handed Joe a key and told him how to get to his room. He tossed a credit card in front of the clerk. \"Creed. Two people in the suite at other end of place from him.\"\n\nShe took the card and tapped a few keys.\n\n\"That's my granddaughter you're talking about and I don't find that funny.\" His voice was tight.\n\n\"No, it ain't very fucking funny. That girl wouldn't ask for water if she was on fire. That's how she is. She takes whatever shit comes at her and she lives with it.\" The clerk handed him the register and the pen. Creed's bold signature covered three lines. \"She ain't gonna say shit, but for some reason that judgmental old woman is important to her. You think about that before you say anything to her.\" He looked at the clerk. \"Key?\"\n\nShe slid two keys with brass fobs across the desk with a professional smile. \"One for you, one for the lady. Take the stairs to the third floor. If you turn to the right it's the door marked Tamarack. If you prefer an elevator-\"\n\n\"No. Got someone to take the bags up?\"\n\n\"Of course.\" Another practiced smile.\n\n\"Good. We'll be in the bar.\" He walked into the quiet, dark paneled room and handed a key to the frail. He ordered a beer and sat at the bar. His instinct was to protect her from it all. That wouldn't do her a damn bit of good though. She was just starting to get her confidence back, if he hovered now it would fuck all that up. He took a long swallow of the beer and watched out of the corner of his eye as the old man stumbled through some kind of half-assed reassurance.\n\nHe watched Kelly go silent. For a long moment he thought that would be it. That she would just accept whatever he said. She turned to look the old man in the eye. \"She's going to have to figure out a way to deal with me. Cody is my brother and awake or asleep I intend to be in his life. She can either keep running away, or she can figure out how to be civil.\"\n\nCreed was sure he caught a flicker of a smile on the old man's face. Creed's grin was broad as he turned back to his beer.\n\n*~*~*~*~*~*\n\nKelly relaxed back into Victor's chest. The jets were off in the Jacuzzi tub. The lights were dim in the blue and white bathroom. The anger from earlier had been driven out by afterglow and hot water. It wasn't gone, but dwelling on it wasn't going to do anybody any good and it wasn't going to change anything.\n\nHis hand drifted over her stomach. \"Wanna have something sent up for dinner?\"\n\nShe smiled and laced her fingers with his. \"We have a reservation downstairs.\"\n\n\"So? You think they're gonna throw us out if we cancel?\"\n\n\"No, but I think grandpa would be hurt if we just don't show.\"\n\n\"You could call him.\" His hand moved up and cupped a breast.\n\nHer nipple hardened against his palm. \"I could, but after what happened earlier he'll think I'm still upset.\"\n\n\"You are.\" He tugged lightly on her nipple. \n\nShe turned a little, but the denial wouldn't come out. She settled back into him again. \"Okay, so I am. It's not really about him though. He's just the one who's stuck in the middle. I am sorry I got so upset outside though.\"\n\n\"I'm glad you did.\"\n\nA short laugh. \"You like to watch me make a scene?\"\n\nHe massaged her lower tummy with his knuckles. \"You don't have to take shit just because somebody wants to dish it out. Just 'cause that someone is family don't make a bit of difference.\"\n\nA smile curled the corner of her lips. One hand stroked his thigh under the water. \"Maybe.\"\n\nA soft purr. \"No fucking maybes about it.\"\n\n\"Anyway, at this point I'm too relaxed to be anything but pleasant.\"\n\nHe chuckled. \"Telling me I gotta keep you tired all week to keep you calm?\"\n\nShe looked at him and smirked. \"I have to study sometime and I have to be kind of awake for the two midterms. That's why we're here in the first place.\"\n\n\"Tangent squared theta plus one is equal to?\"\n\n\"Secant squared theta, but-\"\n\n\"But nothin'. You're ready.\" \n\nHe kissed her before she had a chance to protest. Once his tongue was wrapped around hers, she forgot what she was going to say.\n\n*~*~*~*~*~*\n\nKelly smoothed her hair back in a matte silver barrette and pulled a fitted charcoal gray tweed blazer on over the cream turtleneck. Victor was sitting by the fireplace doing his best not to pay attention to her getting ready.\n\n\"You gonna fuss all fucking morning?\" There was a growl under the comment, but Kelly knew him well enough to know that it wasn't really directed at her.\n\n\"We have plenty of time.\" She smoothed on some berry colored lipstick. \n\nHe looked over at her. \"You ain't gonna change what they think of me, frail.\" His voice was softer.\n\n\"I'm trying to change what they think of me.\" Kelly stepped into the low black heels.\n\n\"You? They probably got a room ready for you.\" She sorted through her purse, making sure she had everything. \"That's the point.\"\n\nHis eyebrows drew together. \"What the fuck are you talking about?\"\n\nKelly met his eyes. \"The last time I went through those gates I was wrapped up in your coat, covered in blood and bruises and mostly dead. Now, every time anybody talks to me on the phone or sees me on Skype they look at me like I'm this broken thing. Something that won't heal without their help, whether I want it or not.\"\n\nAnger stiffened his muscles. \"And if you weren't broken, you'd run a fucking mile from me.\"\n\nShe sat next to him on the stone fireplace surround and waited for him to look down at her. \"That isn't true. You know it isn't true.\"\n\nHe looked away. \"You know what I do-\"\n\n\"And I know what you did for me. You could have left me in the woods where you found me. You could have let me walk out the next day, or done something awful thing to me afterward. You could have given me up for dead when we were ambushed. After that, when you found me you took me to people you can't stand because you knew that I'd have a chance to recover there.\" She stopped, letting her words sink in. He looked at her out of the corner of his eye. Kelly took his hand. \"You put up with my nightmares and my insecurities. You believe that I can be more than a broken thing and you made me believe it. Whatever else you are Victor Creed, you also have the capacity to be a very good man.\" He looked at her curiously and a long silence stretched between them. \"Say that again. The last part.\"\n\nShe held his eyes. \"I said that you can be a very good man.\"\n\nHe was silent, his eyes on her fingers entwined with his. He brought it to his mouth, scenting her skin. His eyes were closed, lost in the connection, his body leaning into hers. Kelly was sure that she could see a tremor in his hand. She gripped it tighter and leaned forward to let her head against his. His other hand cradled the back of her head. She wrapped her other hand around his. Kelly was certain that she could stay in that moment forever.\n\nA knock on the door registered on the edge of her consciousness. She brushed it aside. When it came again, she couldn't ignore it.\n\n\"Grandpa.\" Her voice was a whisper. She didn't move.\n\nHe bumped his forehead against hers. Kelly brushed her lips over his. \"I have to let him in.\" Her voice was still a whisper. She moved to get up, but he shook his head.\n\n\"No. I'll go.\" He got up, but didn't let go until the distance meant that he couldn't hold on anymore.\n\n*~*~*~*~*~*\n\nVictor stared at the closed gates. A growl rose in his chest.\n\n\"They know we're coming.\" Joe leaned forward from the back seat. \"Is there a bell or something?\"\n\n\"No there ain't a fucking bell. The old man knows damn well we're here.\" Creed gripped the wheel. He watched the frail take her phone out of her bag. \"Who're you calling?\"\n\n\"Hank. I don't want him to think we just didn't show.\"\n\n\"He knows exactly what's goin' on. Put it away.\" Creed pulled out his own phone. \"I'm gonna call the old man.\"\n\nCreed could feel his anger rising as he waited for the supercilious bastard to answer. Motherfucker was keeping him waiting on purpose. \n\n\"Charles Xavier.\" The voice was cool and smug.\n\nCreed didn't bother to bite back the snarl. \"And this is the fucking tooth fairy. You gonna open the goddamn gate?\"\n\n\"Good morning to you too.\"\n\nCreed rolled his eyes. \"Good morning Milord. I hope you've had a most pleasant night's repose and a satisfactory breakfast. Pleasant civilities out of the way now? Might we be admitted to your stunning presence?\"\n\n\"Mr. Demmer and Kelly are expected. You are not.\" There was practiced disinterest in the voice.\n\n\"Seems like I remember telling you that when the frail was on your grounds, I would be too.\"\n\n\"When Kelly was testing, yes. I don't recall saying that you were welcome anytime.\"\n\n\"I don't figure I'm ever welcome. I do know you're itching to talk to Joe and see the frail again though. That means you put up with me bein' around for a few hours. I'm sure you can have any patch of carpet I happen to stand on roped off and disinfected.\"\n\n\"Perhaps I could speak to Mr. Demmer.\"\n\n\"Whatever.\" He shoved the phone at Joe. The frail looked on curiously.\n\nThe old man took it. \"Professor Xavier.\" He was silent, listening. \n\nCreed could see the other man's jaw start to tighten. When he spoke again, his voice was calm and even with a strong undertone of pissed off. \n\n\"I'll put it like this Professor, I'm not entirely convinced that your doctor can help my grandson. I know he helped Kelly, but even she says that was a fluke. Frankly I don't know if I'm willing to gamble with the little bit of ground he is gaining for a maybe. I'm willing to listen, but I'm not going to beg and I'm not going to leave Victor sitting out here like he's a second class citizen.\" The old man was silent for a moment, then he handed the phone back to Creed.\n\n\"Well?\" Creed said\n\n\"I'll arrange an escort for you.\"\n\nCreed ended the call and waited. The gate slid open. He drove slowly down the lane to the mansion. The runt was standing on the stairs looking like he'd rather be anyplace else. The ape stood behind him, the old man was on the other side.\n\nThe frail got out and the runt managed a little smile. Creed hung back and fought the surge of jealousy that lengthened his claws. He watched the frail smile and give warm greetings and make introductions. He could see what she meant about how they looked at her. He could tell that she saw it too, but she ignored it. A little smile touched his lips. She smiled and walked toward him.\n\n\"I don't think this will take any more than an hour or so.\"\n\nJimmy and the ape were staring at them. The professor was chatting with Joe, but his eyes were on the frail. Creed didn't give a shit. \"I'm sure Jimmy's got instructions to keep me as far away from the mansion as possible. Call me when you're done.\"\n\nShe nodded and stood on her toes. He leaned down and kissed her. Kelly looked up at him and laughed. \n\n\"What?\"\n\n\"You have a little of my lipstick.\" She reached up and wiped her thumb over his lower lip. He grinned. \"Like it better when you don't wear any.\" He nodded in the direction of the steps. \n\n\"Go on.\"\n\nShe clasped his hand and walked toward the ape and her grandfather. Jimmy walked over next to him. Creed didn't take his eyes off the frail until she was through the door. He took a deep breath. \"C'mon Runt. Can't leave me lingering too long among the righteous and worthy. God knows what they'll catch.\" He started toward one of the wooded paths.\n\n*~*~*~*~*~*\n\nKelly and her grandfather sat on one side of Hank's desk. He sat on the other side with Professor. She got the distinct impression that the battle lines had been drawn. On the way to the office, there had been pleasantries and small talk. Now a thick silence filled the room. Her grandfather was the first to speak.\n\n\"Did you get my grandson's medical records, Dr. McCoy?\"\n\n\"I did, thank you. His injuries were quite extensive.\"\n\n\"Stan's a vicious bastard, but Cody's a strong kid.\" Her grandfather said.\n\n\"Strong will seems to run in the family.\" Professor Xavier said. \"Speaking of which, I wonder if we might have a talk about Kelly.\"\n\nKelly opened her mouth to speak, but her grandfather grabbed her hand. He smiled. \"I know that Kelly is safe, happy, healthy and getting good grades. Is there something more?\"\n\n\"How much do you know about Sabertooth?\" The professor asked.\n\n\"Victor.\" Kelly corrected firmly. Her eyes were locked on the professor's.\n\nHe nodded. \"How much do you know about Victor Creed?\"\n\nHer grandfather's smile never wavered. \"You can't tell how much I know?\"\n\n\"Your mind is quite closed and has been since you've been on my grounds.\"\n\nHer grandfather's eyes sharpened. \"As closed as my military records were?\"\n\n\"You investigated my grandfather?\" Kelly was angry, but not surprised.\n\n\"I have a responsibility to my students, Kelly.\" The professor said.\n\n\"You have a built in excuse for snooping you mean.\" Kelly's anger throbbed through her temples.\n\n\"What do you make of the fact that you didn't get anywhere?\" Her grandfather asked.\n\nThe professor took a deep breath and studied her grandfather for a long moment. \"I'm not entirely sure. With my connections and clearances I should have access to almost everything. Perhaps your connections are better than mine.\"\n\nHer grandfather chuckled. \"I doubt that. The government doesn't like to be reminded of what I did for my country and it certainly doesn't like anyone else finding out about it.\" He crossed his legs. \"I also have a good friend who keeps me informed if anyone should get too nosy for their own good.\"",
        "\"And you think that gives you a kind of inside understanding of Victor.\" The professor said, placing unnatural emphasis on the name.\n\n\"No. I think the fact that I worked with him gives me a pretty damn good insight into Victor.\" A ripple of surprise went through the room. Kelly suppressed a little smile.\n\nHank took off his glasses. \"Are you saying that-\"\n\n\"I did all the same things that he does. I saw what he did to his targets with my own eyes, so if you're about to read me a list of everything he's done you can save your breath. When I knew him before, he was a cold bastard who didn't have an ounce of feeling for anyone or anything. Frankly, I didn't think he was capable of it.\"\n\n\"Then you know why I'm so concerned.\" The professor said.\n\nHer grandfather nodded. \"A year ago I would've agreed with you.\"\n\nHank looked curious. \"What changed your mind?\"\n\n\"Before Victor brought Kelly to see us, he met me alone at a bar.\" He looked at Kelly. \"I'm not sure if he told you.\"\n\nShe smiled. \"Not until after. I didn't even know he'd found you.\"\n\n\"You didn't tell him about your grandparents?\" Hank asked.\n\n\"Of course I did. And I told him that I hadn't seen them since my mother married Stan. He encouraged me to try and find them. I wasn't having any luck, so I guess Victor took over.\" Kelly said.\n\nThe professor's eyes narrowed. \n\nHer grandfather went on. \"When I met him in that bar, I thought he wanted money to give Kelly back unharmed.\" Joe shook his head. \"You should have seen the look on his face when I made that suggestion. It was almost like I tried to feed him something disgusting.\"\n\n\"I'm certain that look was well practiced.\" The professor said.\n\nHer grandfather shook his head. \"This was different. When he talked about Kelly, it was the first time I'd ever seen anything in his eyes other than malice and indifference. I had almost convinced myself that I didn't see it, but then Kelly called. He brought her to see us. Put up with visiting and small talk. Would the Victor Creed you knew do that for anyone?\"\n\n\"Sabretooth isn't able to fully control the animal side of himself.\" The professor said. \"He might try for a time, but he doesn't have the ability to do so for more than a short time.\"\n\nKelly couldn't take anymore. \"So you treat him like an animal and you're surprised when he acts like one.\"\n\nThe professor's placid expression didn't change. \"I'm not sure I know what you-\"\n\nShe gripped the arms of the chair to keep from shaking. \"You know exactly what I mean. Either that or you shouldn't be allowed within ten miles of impressionable children.\"\n\nAnger simmered in his eyes, but never touched any of his other features. \"You blame me for his choices.\"\n\nKelly's gaze never wavered. \"I think the fact that you won't even use his name speaks volumes.\" \n\nKelly took a deep breath and leaned forward a little. \"You call him Sabretooth, you tell him that he's an animal, a killer who doesn't understand decency or empathy because those are human feelings and he isn't human. Well I have a newsflash for you. I don't think I've ever met Sabretooth. The man who nursed me through nightmares and trauma, who I've eaten with and laughed with and slept with, is Victor Creed.\" She smiled a little. \"He's short tempered and ill-mannered and most of the time he has no idea how to be comforting when I need it, but he tries. I can't think of anything more human than that. So I'm not going to listen to any more lectures. I'm not going to pretend to ignore any more thinly-veiled inferences and I'm not going to go out of my way to prove to you that I don't need to be rescued. I'm Victor's mate. That isn't going to change. Accept it or don't, but move on.\" She sat back in the chair.\n\nSilence filled the room like noxious smoke. Her grandfather smiled a little. \"Can we talk about my grandson now?\"\n\nThe professor opened his mouth to say something, but Hank cut him off. \"Yes, we certainly can.\"\n\n*~*~*~*~*~*\n\nCreed followed Jimmy's scent through the thickest part of springtime woods. The frail's words had been ringing in his head, distracting him from the silent run. She'd said he could be a good man. Him. After all she knew and everything she'd been told. And what the fuck was that supposed to mean anyway? That if he tried hard enough, he could look at the world and see pink hearts and roses everyplace? That he would suddenly want to stop drinking and swearing and all the other shit that got him dirty looks from polite people? \n\nHe stopped. Jimmy was waiting on the other side of the rise. Whatever the fuck she'd meant by it, the frail believed he could do it. Believed he could figure out how to do it in his own way. Maybe he could. He just knew that hearing her say it had taken his breath away and those words hadn't stopped echoing in his head since. He went over the rise and settled onto a rock above Jimmy.\n\n\"Took you long enough.\" Jimmy said.\n\nCreed shrugged. \"Didn't see you making much of an effort.\"\n\n\"Nobody told me I was going to be entertaining you this morning.\" Jimmy turned his head away.\n\n\"Think this was my idea of a good time?\" He lay on his back. The bright blue sky through the network of nearly bare, silhouetted branches reminded him of stained glass.\n\n\"Told Chuck he should let you in.\" \n\nCreed didn't turn his head. \"Bullshit.\"\n\n\"What the fuck ever.\" Creed glanced at him. Jimmy was staring off into the trees. The runt was a damn good liar, but even he had his tells. Creed wasn't seeing any of them. \"Son of a bitch, you did.\" His eyebrows drew together. \"Why?\"\n\nJimmy shrugged. His eyes were still on the trees. \"You know Kelly chats with Cassie every night.\"\n\n\"Yeah. They do homework and shit.\" Creed looked up at the sky again.\n\n\"And every night somebody just happens to stop by to see how she is. Sometimes me, sometimes Ro, whoever can make up an excuse that doesn't sound too much like an excuse.\"\n\n\"She told me.\" Creed smiled a little. \"Saw through it right from the start. So?\"\n\n\"So every time I saw her she looked better. Chuck tried to tell me that it was just her healing factor keeping her looking healthy. I knew that was bullshit. I know happy and comfortable when I see it.\"\n\nCreed clenched his fist until his claws were pressed almost deep enough to draw blood. \"The old bastard's never going to see it that way.\" \n\n\"Ain't like I'm in his good graces at the moment anyway.\"\n\nDespite the direction of the wind, Creed caught the barest tang of anger from Jimmy's scent. \n\n\"What'd you do, chew up his favorite pair of slippers?\"\n\nJimmy halfway laughed. \"No. I slept with Marie.\"\n\nCreed shrugged a little. \"So?\"\n\nJimmy looked at him. \"She's got control of her skin.\"\n\n\"I repeat; so? You fucked her. Do you have to turn in your balls when you sign up?\"\n\nJimmy looked out into the trees again. \"He went through about ten different ways that it was immoral, tried to make it sound illegal and when none of that worked, he started in on her fear of losing control of her mutation in a bad moment.\"\n\n\"Bastard's the master of the low blow. That scare her off?\"\n\nJimmy gave a short laugh. \"Would it have scared Kelly off?\" \n\nCreed chuckled. \"The girl watched me get half my head shot off and kept on fighting. Some old bastard in a wheelchair ain't gonna make her blink.\"\n\n\"We got out of that office and Marie started packing. Managed to talk her out of it for the moment.\"\n\nCreed looked down the runt. \"Why the fuck would you do that?\"\n\nHe took a deep breath. \"Because...\" He went silent for a long moment. \"She has to understand before we go.\" Jimmy glanced up at Victor. \"How did you explain to Kelly what you meant when you said she was your mate?\"\n\nCreed shrugged. \"I didn't need to explain it really. I told her she was my mate and that it was permanent. The rest she just got. Intuition or some shit like that.\" He closed his eyes and listened to the wind chase through the trees.\n\n\"If she doesn't just get it?\" \n\nCreed looked down at the other man. His eyes narrowed. \"Ninety nine percent of the words you've spoken to me in the last few decades have revolved around the phrases 'I'm gonna kill you' and 'fuck off'. Now you wanna sit here and have a goddamn \"Beaches\" moment?\"\n\n\"And here I was thinking you were slightly less of an ass than I remembered.\"\n\nCreed looked down at the runt. \"How the fuck should I know what to do if she doesn't get it? Half the time I got no goddamn clue how to talk to my frail. What makes you think I have a hope in hell of knowing how to talk to yours?\"\n\nJimmy looked at him, a little smirk twitched the corner of his mouth. \"Fuck off.\"\n\nCreed grinned. \"I'm gonna kill ya, Runt.\"\n\nCreed looked up at the sky again. \"Then tell her. Don't ask. Don't explain. I guess if it's right, she'll get it. If not, call Dr. Phil, 'cause I got nothing.\" The cell phone on his hip started to vibrate. He checked the incoming text. \n\n\"Frail's ready to go.\" He got up and headed back toward the mansion. Jimmy ran next to him.\n\n*~*~*~*~*~*\n\nThe noxious tension that had infected the room left Kelly emotionally drained and with a throbbing headache. She could see the concern in Victor's eyes, but he didn't say anything. He just 'accidentally' stroked the back of her hand every chance he got. Her grandfather seemed to be almost as tired and the ride back to the Cavinder was mostly silent. As soon as they were inside, Victor led them into the dining room to a quiet table in the corner. Victor waited until the food was on the table before he said anything about the meeting. \n\nHe sliced through the first thick steak. \"What'd his holiness have to say?\"\n\n\"From what anybody can tell, Cody's a fair candidate for the treatment.\" Her grandfather said.\n\n\"That ape made it sound like there wasn't any such thing when he was describing it to me.\" Victor said.\n\n\"I don't know that there is.\" Kelly took a sip of her lemonade. \"I know Hank spent a lot of time showing pictures of my genes before and after the treatment and describing what it does and what it doesn't do. Then he showed us Cody's genes and said that they were partially active, though not as much as mine had been before the treatment. He said the fact that Cody's healing factor was partially active already meant that he would have a slim chance, if he gets it.\"\n\n\"What do you mean, if?\" Victor took a long swallow of the beer.\n\nShe looked up at her grandfather. \"Apparently it's not as easy as easy as just giving it to him.\" Kelly said.\n\nVictor looked at her. \"Why not? I told the ape to give it to you and you were getting it ten minutes later.\"\n\nHer grandfather shook his head. \"The school's clinic is private and designated as a research facility because treating high-level mutants isn't always so straight forward.\" \n\nCreed snorted. \"So that means McCoy can turn anybody into a lab rat. Beautiful.\"\n\n\"He did follow the ethical guidelines.\" Her grandfather said.\n\n\"I suppose it also helps that I was already officially dead at the time.\" Kelly took a bite of her salad.\n\n\"Couldn't've fucking hurt.\" Victor started on his second steak. \"So what kinda hoops you gotta jump through to get the kid treated?\" Her grandfather took a deep breath. \"Good way to put it. The geneticist at Cody's hospital knows Dr. McCoy. That's how we got the specialized genetic profiles done so fast. We have to get Cody's doctor to recommend the treatment, then the hospital has boards and reviews that govern any experimental treatment. They tend to be extremely conservative because they're trying to protect the hospital from liability.\"\n\nVictor shook his head. \"Fucking bureaucracy. What do you do now?\"\n\n\"Hank's contacting Cody's doctor with specifics of the formula and the facts of my case without using my name. \" Kelly toyed with the last few bits of lettuce.\n\n\"Dr. Ackerly has an open mind about treating coma patients. Hopefully, it won't take too much convincing and we can move on with the rest of it.\" Her grandfather sipped his coffee. \"It's going to take me awhile to convince Anna that this is the best way to go anyway.\"\n\nKelly set her fork down. \"I'm sure that she'll get used to having another one in the family.\" Her grandfather took her hand. \"That's not what I meant.\"\n\nShe smiled and gripped his hand. \"I know, but Granna isn't sure if I'm human or mutant or something else entirely and you know as well as I do that she prefers it when people fit into neat little boxes. Cody doesn't need to wake up and deal with her issues. He'll have enough of his own.\"\n\nThe waitress came over to the table. \"Would anyone like any dessert this afternoon?\"\n\nKelly shook her head. \"No thanks-\"\n\n\"Yes.\" Victor pointed at Kelly. \"Bring the frail a slice of the chocolate cake.\"\n\nThe woman nodded and walked away. \n\nKelly shook her head. \"Victor-\"\n\n\"Leaves in a bowl ain't fucking lunch.\" He smiled a little. \"'Sides, you love chocolate.\"\n\nKelly knew better than to argue. Besides, Victor had beer, she had chocolate. She smiled a little. \n\n\"I'll take it upstairs then. It can be a study snack.\"\n\n*~*~*~*~*~*~*\n\nCreed watched the frail carry the cake upstairs. She looked fucking exhausted. He itched to get up and go with her, but he had shit to take care of first. As soon as she was out of the dining room, he looked at the old man. \"Beer?\"\n\n\"Sounds good.\"\n\nCreed signaled the waitress, then looked back at the old man. \"She's fucking exhausted.\" Joe snorted. \"I'm not surprised. She told the professor where to go and what to do when he got there. After that, he sat there with this look on his face like butter wouldn't melt in his mouth and the whole time the son of a bitch is glaring daggers at her and making sneaky little comments whenever he could.\"\n\nCreed's eyes narrowed. \"What'd she do?\"\n\nJoe smiled a little. \"She didn't take the bait.\" He took a deep breath, his smile faded. \"She shouldn't be that strong at her age.\"\n\nThe waitress brought the beer and took the plates away. Creed took a long swallow. \"Nope. Can't help but be impressed though.\"\n\nJoe nodded and took a sip of the beer. \n\nCreed turned the beer bottle slowly on the table in front of him and studied how the light played off the brown glass. He was pissed off at Xavier, but the bastard would still be there tomorrow. The question floating around in his head meant more to him at that moment. Didn't mean he knew how to ask the fucking thing or even if Joe was the one to ask. He didn't have a hell of a lot of options though.\n\nHe turned his head and studied the still life at the other end of the room. \"How'd you get out?\" Joe was quiet for a long moment. \"I'm not sure what you-\"\n\nCreed looked at him. \"Bullshit. You know exactly what I mean.\"\n\nJoe took a sip of beer. \"Lost your taste?\"\n\nA deep growl rose from Creed's chest. \"You better watch your fucking mouth old man.\"\n\n\"Calm down.\" Joe didn't flinch. His voice was calm. His eyes were hard and unwavering. \"Losing your taste is different from losing your balls. I have no doubt you could and would turn the next three people to walk into this room into hamburger and laugh while you were doing it if that was part of the contract, but I don't think the idea of it gets you off anymore? Am I close?\"\n\nCreed's eyes narrowed. \"I'm feral and I'm a predator. Predatory ferals need to hunt. It's my fucking nature.\" He looked away. \n\n\"Not exactly the same.\" Joe took a swallow of the beer.\n\nHis shoulders twitched in a little shrug. \"Guess not. It ain't about whether or not I can do a fucking job. I can. I just...\" He took a deep breath. \"The frail knows. She knows that when I leave I ain't going to a fucking insurance convention in Cedar Rapids.\"\n\nJoe smiled a little. \"You love her.\"\n\nCreed shook his head. \"I don't know what that means.\"\n\n\"Maybe you can't define it, but you feel it.\"\n\nCreed growled again. \"How the fuck do you know what I feel?\"\n\nJoe stared at him. \"You look at her when she's just sitting there and she takes your breath away. When she hurts, you feel like there's a knife taking a slow trip through your sternum. Being without her is something you don't even want to imagine. Seeing her smile at you makes you warm and just seeing her makes you smile too. When she sleeps, you watch her. You lean in close and breathe the same air she breathes. There's nothing you wouldn't do for her. You've proved that in spades. You'll protect her from everyone, including yourself. Unless I miss my guess entirely, you haven't even looked at another woman since you found her. When you're with her you can be yourself, even when you're not being your best self.\" He leaned in a little closer. \"How am I doing?\"\n\nCreed stared at Joe for a long moment, his mind was spinning. His eyebrows drew together. \"Love ain't hearts and ponies and shit like that?\"\n\nJoe chuckled. \"Not in the real world.\"\n\nHe thought about that for a long moment. \"Every time I leave, I figure she's gonna sit home and think about what I'm doing and she won't be there when I get back. Why should she be? I'm an old son of a bitch with claws and fangs and more baggage than the fucking Titanic.\" He drained the rest of the beer.\n\n\"She loves you too.\" Joe said. \n\nCreed shook his head. \"The government's never gonna let me go anyway. I don't know why I'm bothering.\"\n\n\"Because working for the goddamn government is like making a deal with the devil. She gets that.\" Joe said. \"If she isn't sure, I'll explain.\"\n\n\"So what the fuck am I supposed to do about the rest? I can't stay home all the time, that'll just drive us both nine kinds of crazy.\" Joe shook his head. \"You don't have to. Kelly told me about the security system you built at the apartment where you've been staying.\" Suspicion narrowed Creed's eyes. \"How much did she tell you?\"\n\n\"Enough to know you covered all your bases and then some.\" Joe pulled a card out of his wallet. \"This is a friend of mine. He still does government work from time to time, but mostly runs a company that builds high end systems all over the country for paranoid millionaires. He's looking for a few new private contractors.\"\n\nCreed took the card. \"You want me to sit in a fucking cubicle from nine to five?\"\n\nHe shook his head. \"Think I'd even make the suggestion if that's the kind of job it was? It's just an option.\"\n\nCreed nodded and tucked the card into his shirt pocket. He would call and he would give it a shot. He might fuck it up, but at least he'd fuck it up honest.\n\n*~*~*~*~*~*\n\nThe first thing Kelly did when she got back to the room was to change into one of Victor's shirts. She got her books and stretched out in the middle of the king sized bed. In between turning pages and reworking the practice exercises she nibbled on the chocolate cake. Victor came back just as she was starting to rub her eyes.\n\nVictor's gaze swept over her and he gave the kind of fang-baring grin that made her pulse race and a heavy heat start to pool in her tummy. \"Wearing anything under that, frail?\"\n\nShe sat up and primly pulled the hem of the shirt down around her knees. A smile teased at her lips. \"None of your business.\"\n\n\"None of my business? Really?\" He walked to the edge of the bed and then started to crawl toward her. The same grin still on his face. \"You're in my room. On my bed.\" \n\nKelly backed away. He pushed her books out of the way and kept advancing. \"I sleep here too. And technically, you're on my side of the bed.\" Kelly's smile was wider.\n\n\"You wanna talk about technicalities? You're wearing my shirt.\" He moved over her and grabbed her wrist. Kelly found herself on her stomach with her hand in the small of her back before she could think. There was no force behind his touch. \n\nKelly lifted her hips, but otherwise she stayed still. He put his mouth next to her ear. \"And you're my mate. Guess it is my fucking business after all. Ain't it frail?\" The rough edge of his tongue traced the shell of her ear.",
        "Kelly moaned softly. \"Maybe.\"\n\n\"Maybe?\" He arched against her, rubbing his hardness against the back of her thigh. A low growl vibrated through his chest. \"You sure that's your answer, frail?\"\n\n\"Y-yes.\" She reached back with her other hand and stroked him through the denim.\n\n\"Yes?\" He nipped the back of her neck lightly. \n\n\"Yes that's your answer or yes it is my business?\" He bit a little harder. \"Gotta be specific frail.\"\n\n\"It is your business.\" Her words were a soft moan. \n\n\"That's what I thought. Stay put.\" He knelt next to her and traced the tips of his claws from her knees up to her hip, carrying the shirt with it and revealing her bare bottom. Kelly shivered. Victor chuckled. \"Think I smell something else that belongs to me. Don't I frail?\"\n\nKelly felt the heat of a blush rise to her cheeks. She nodded. \n\n\"Out loud, frail.\" He lifted the shirt higher and Kelly pulled her arms out of it.\n\nNeed buzzed inside her head. \"Yes. You smell something else that belongs to you.\" \n\nThe tip of a single claw traced down the middle of her back and down the cleft of her bottom. Kelly shivered and moaned. He traced little designs over her trembling flesh. Kelly closed her eyes and opened her legs wider. \"So get on your knees, face in the pillow and show me what else is mine.\"\n\nKelly was lost in the delicate sensation of the razor sharp claw on her skin. The words were insignificant, but eventually the pleasure fog cleared long enough for her to process what he said. Kelly moved to the edge of the bed and shifted onto her knees and opened her legs so that she was presented for him. \n\nHis knuckle made a single rough trip between her lower lips. Kelly moaned. Victor lifted his finger to his nose and inhaled deeply. He grinned and stroked her bottom. \"Yeah, that's mine. Wait there like a good girl.\"\n\nKelly turned her head. He started to unbutton his shirt. The itch to touch him was too much. She started to get up but he grabbed the back of her neck and pushed her back down. \"Didn't tell you to move, did I frail?\"\n\n\"No.\"\n\n\"Now you don't get to watch.\" His claws tickled close to her center and moved out of her sight-line. \n\nKelly could hear him undressing, but no matter how she turned she couldn't see him. Between the exposure and the sounds of his clothing shifting and moving made her ache for him even more. She moved her hips and moaned softly.\n\nAnother soft tickle. \"Head in the pillow frail and don't move.\"\n\nKelly put her face in the pillow and gripped handfuls of the burgundy comforter, waiting for him to enter her, or to touch her or to lick or anything. When nothing happened, she started to relax. It seemed like forever that she knelt there waiting. Needing. Heart racing. She was starting to believe that he wasn't going to touch her. It made the waiting worse. She moved back, spreading her legs wider.\n\n\"Please.\" Kelly moaned softly.\n\n\"Please?\" The tips of his claws traced her pouting lower lips. \"Sounds like you need somethin' frail.\"\n\nHer eyes were closed. She was breathing faster. \"I do.\"\n\n\"Gonna tell me what you want?\" Both of his hands started moving over her bottom and the backs of her thighs.\n\nGoosebumps raised on her flesh. \"You know what I want.\"\n\n\"Course I do.\" His knuckle traced just inside her lips. \"Wanna hear you say it.\"\n\n\"Need to feel you inside me. Please.\" Kelly's voice was a soft whimper.\n\nHe pushed his knuckle against her opening. \"So polite. And such a nice little pussy you're offering.\"\n\nBefore Kelly could think, his claws bit into her hips and he plunged into her hard and fast. Kelly screamed into the pillow. Even after all this time, it still hurt when he took her so fast. She was just as sure that she needed it to. He put his hand on the back of her neck and held her still as he drove into her. Kelly clawed at the bed and moved with him. She let herself fall into all the sensations of rapidly building pleasure and shockingly sharp release. She screamed into the pillow again as the dam burst and she let herself be carried away on the tide. His rhythm didn't change, but his claws bit into her hips and shoulders. She felt them pierce her skin, but by that time the stinging sensation of her skin breaking was just another aspect of the wave that was sweeping her along. \n\nSomewhere off in the distance she heard a deep roar of release. That wasn't important either. The tide of her release was just beginning to slacken, but it was still drifting with it. She treasured those times when he could be gentle, but ferocious encounters like this were still what she dreamed about. Kelly smiled into the pillow and let the fluid pleasure carry her.\n\nJust when the world was beginning to come back, Kelly felt Victor shifting her body back into bed. Her back was against his chest. His hands wandered over her breasts and down over her stomach to her thigh and then back up. She could hear a purr rumbling through his chest. He pinched her nipple and chuckled.\n\n\"Think you're purring more than I am.\" His voice was a soft rumble next to her ear.\n\nKelly smiled. \"You make studying fun.\"\n\nVictor laughed. \"Gonna be trying to do your proofs and you'll be thinking about fucking.\" He stroked her stomach with his thumb.\n\n\"Like I don't already.\" She stroked the backs of his claws and laced her fingers with his. A comfortable silence grew between them and Kelly started to doze. \n\n\"Where do you wanna live, frail?\" His voice was a soft rumble.\n\nShe didn't open her eyes. \"Here.\"\n\nA soft chuckle. \"Hotel'd love that.\"\n\nShe smiled. \"Not what I meant.\"\n\nHe kissed the side of her neck. \"What's your second choice?\"\n\nShe stroked his arm lightly. She thought for a long moment. \"You've never asked me before.\"\n\nHe turned her to face him. His eyes held hers. \"We're done running frail. Probably gonna have to deal with more shit eventually but I'll be goddamned if I'm gonna make you live on the run because of maybe. You name the place. 'F I don't already own something decent we'll find something.\"\n\nShe kissed him. Her lips lingering on his for a long moment. \"Don't take this the wrong way. Not Chicago.\"\n\nHe turned over on her back. Kelly snuggled against his side. \"Still hate it there, huh?\" \n\n\"It's not that I hate it. The city itself is interesting and since you fixed the lights, the apartment is gorgeous. I know it's safe.\" She turned her face away from him. \"This is going to sound stupid to you, but I hate that I can't smell the outside.\"\n\n\"It don't sound stupid. That's one of the things I hate about Chicago too. Maine's got plenty of space and open air.\" He stroked her arm lightly.\n\n\"It does. The house is huge though, and how much did we actually use? There were rooms I would never have set foot in if I weren't cleaning them. Besides, I want to be closer to the hospital where Cody is.\"\n\n\"So Buffalo. You take your tests tomorrow. Sunday we'll head back to Chicago and get our stuff and head out. Probably stay someplace close to the hospital until we know what's gonna happen with the kid.\" He stroked her back softly. For a long moment they were both silent. \"You know I'm going to build a system for the place before we move in.\"\n\nKelly laughed. \"I would be surprised if you didn't.\" She relaxed against him. \"It's going to be hard living in the same city as Granna and Grandpa and not tell them where we are.\"\n\nHis claws teased through her hair. \"Don't have to. Told you, we're done running.\"\n\n*~*~*~*~*~*\n\n\"So what color?\" Cassie asked.\n\n\"I don't know.\" Kelly sorted through the purple plastic basket of nail polish colors. \"I don't usually paint my toenails.\"\n\nCassie laughed. \"So? What about this one?\" She held up a nearly new bottle.\n\nKelly shook her head. \"I don't think pink glitter is exactly my thing.\" She kept searching and found a dark red. \"This is more like it.\"\n\nCassie rolled her eyes. \"Please, my mom bought that one for me when I was in my cousin's wedding.\" She pulled out a black with an undertone of cherry.\n\nKelly shook her head. \"Victor has a car that color. Looks great on the car, but I'm not sure about my toes.\" She found a bottle of red glittery polish. The color was called 'Ruby Slippers'. She smiled. \"This one.\"\n\nCassie smiled a little and started to paint the big toenail on Kelly's right foot. \"So is it true?\" \n\nKelly looked at her. \"Is what true?\"\n\nThe brush paused mid-stroke. \"Oh come on!\"\n\nKelly laughed. \"What? I don't know. All I know is all night you've had this look on your face like you've been itching to ask a question and now that you have I have no idea what you mean.\"\n\nShe smirked. \"You told off Professor Xavier.\"\n\n\"I didn't tell him off.\" She looked at Cassie. \n\n\"How would you have heard about that anyway?\"\n\n\"Place is full of psychics, remember? Word tends to travel.\"\n\n\"I didn't tell him off.\" Kelly said.\n\n\"That's not what I heard.\" Cassie's voice had a sing-song quality.\n\nKelly laughed. \"I only told him that I was done defending myself and Victor. If you ask me it was long overdue.\"\n\n\"Nobody tells him to back off,\" Cassie said. Kelly shrugged. \"He's overbearing, smug, manipulative and running his own agenda. I don't appreciate being used.\"\n\nCassie stared at her. \"He's one of the good guys.\"\n\n\"The impression I get is that he's on his own side.\" She smiled a little. \"Reminds me of Victor in that way. Victor's just more obvious about it.\"\n\nCassie watched her. \"Do you see everyone that way?\"\n\nKelly shrugged a little. \"I've developed a different perspective I guess .\" She looked down at her toes. \"It looked different in the bottle.\"\n\nA smile teased at Cassie's lips. \"It needs a second coat. When do you guys leave?\"\n\n\"Sunday. Feel like going to a movie or shopping or something tomorrow?\"\n\nCassie focused on Kelly's toes. \"I'll see if I can.\"\n\nKelly took a deep breath and willed herself to be calm. \"If the warden won't let you out, see if I can come over here.\"\n\n\"Victor won't mind?\"\n\nShe smiled a little. \"I don't know if I would say it that way. He won't admit it, but I think he likes having the chance to argue with his brother.\"\n\n*~*~*~*~*~*\n\nIt had taken two weeks to find a decent furnished apartment close to the hospital and a week to make a few basic security modifications. It was a perfectly dull two bedroom on the eighth floor of an equally uninspired high rise six blocks from the hospital. It was a little too modern for his tastes, but the frail looked more comfortable than she did in Chicago. That made it bearable.\n\nThe day after she'd unpacked, he'd taken her to the hospital and they'd been turned away. Not on the list, that wrinkled old bitch of a nurse had said. They'd come home and she'd spent a good two hours trying not to cry before she locked herself in the bathroom and gave in. It had taken Joe a lot of talking and explaining and convincing to get him and Kelly of the kid's list of approved visitors. In Creed's opinion, it was a bunch of bullshit. Anybody with a little bit of ingenuity and determination could get into a hospital. Those two weeks of waiting had been torture for the frail. At least now the wait was over. \n\nCreed pulled on the charcoal gray jacket. \"Frail! You gonna be all fucking morning?\"\n\nShe emerged from the bedroom wearing black jeans and a gray and black argyle sweater. She smiled at him. \"They're not going to be able to resist you.\"\n\nHe snorted and fastened the heavy gold watch around his wrist. \"Client's a paranoid asshole and I'm about to offer him a tin foil hat with more bells and whistles than he's ever seen. He's probably gonna wanna suck my cock before lunchtime.\" He checked the files in his briefcase and then closed it. \n\nKelly smirked. \"Trying to tell me I have competition?\"\n\nHe grinned. \"I'm a 'Systems Designer' now. Gotta keep my options open.\"\n\nShe smoothed his lapels. \"Does that mean I get to keep my options open too?\"\n\nHis eyebrows drew together. \"Fuck no!\" \n\n\"Good.\" She laughed and stood on her toes to kiss him. \"I already have the best option.\"\n\nFucking frail. She was a smiling, sweet-scented distraction and he loved every minute of it. Creed pulled her closer and deepened the kiss. \"You know you make me hard when you say shit like that. Got half a mind to call Conlon and tell him to hold off for an hour.\"\n\nShe smiled and kissed his lower lip. \"You have an appointment to get to. You know Grandpa would take me to the hospital though.\"\n\nCreed shook his head. \"Just 'cause I decide to get out don't mean the past is gonna leave me alone. If I'm not with you, Conlon is.\" She looked like she was about to say something, but a knock at the door broke the moment. He grabbed his coat and handed her jacket to her. \n\n*~*~*~*~*~*~*\n\nKelly stood in the pediatric intensive care unit of Women's and Children's Hospital of Buffalo. She could see Cody's bed and her grandmother through the glass wall. Granna smiled at her. Kelly managed to smile back. She could barely see Cody through the side rails on the bed, but she followed all the tubes and monitor leads with her eyes until she found the small, pale form at their center. \n\nShe shook her head. \"I thought he was breathing on his own.\" Kelly's arms were crossed across her stomach, trying to hold back the tremor that was threatening to consume her. Her grandfather stroked her back.\n\n\"He is. The tube is there to protect his airway and give us access should we need to provide more support.\" Dr. Ackerly was a small round man with a full white beard. It made him look like a garden gnome. His manner was equally kind. \"We're monitoring his heart rate, the oxygen levels in his blood and his blood pressure. That's the monitor facing the window. There are IVs for medications and hydration, and we're giving him liquid nutrition through a tube in his nose. It all looks dramatic, but we're mostly offering support. Doing the things for Cody that he can't do for himself just now and making sure that he's holding his own.\"\n\nThere was a bag of yellow urine hanging on the side of the bed, but the doctor hadn't mentioned it. Kelly watched the barely perceptible rise and fall of his chest under the sheets. She tried to remember something, anything from the time when she was unconscious at Xavier's, but nothing came back to her. She shook her head. \"He doesn't know that any of us are here, does he?\"\n\nHe gestured to a small collection of chairs. Kelly sat. The doctor sat on one side of her, her grandfather on the other. It was Dr. Ackerly that spoke. \"I don't have a good answer for that. Coma is still a mystery in many ways. Some people who wake report that they remember everything that visitors said to them. Some feel as though they only closed their eyes for a moment. The days or weeks spent in the coma are simply missing.\"\n\n\"Did grandpa tell you that I was seriously injured and in a coma for a week several months ago?\"\n\n\"Not in so many words, but the information about the epigenetic treatment and the story of your recovery from death seemed linked. I wondered if the patient in the case study and his granddaughter might be the same person.\"\n\nShe smiled a little. \"It was me. I don't remember anything about the time when I was unconscious. Victor told me that I remembered a few things at the beginning, but it was all gone in a day or two.\" She looked down at her hands. \n\n\"Even if Cody does hear me, he thinks I'm dead. If I upset him it could make him worse.\"\n\nHer grandfather shook his head. \"We've told him that was a mistake.\" \n\nKelly took a deep breath. \"I didn't expect him to look so...so small and so sick. I don't know what to say to him.\"\n\n\"You don't have to say anything special.\" Dr. Akerly said. \"You don't have to say anything at all if you don't want to. Just hold his hand for a few minutes. Maybe when you come back again you'll find something to say.\" The kindness in his eyes infused his smile.\n\nKelly nodded and looked at her grandfather. \"Do you think Granna would give me a few minutes alone with him?\"\n\n\"We'll go get some coffee.\" He patted her hand. Kelly and Dr. Akerly waited by the door. Kelly hugged her grandmother on the way past. The relationship was still tentative, but it wasn't quite as strained as it had been. Even when her grandparents had stepped onto the elevator, she stayed still. \"Take your time.\" The doctor said. She walked into the pale, chilly room. For a long moment she just stared at Cody. He seemed even smaller than she remembered. His eyes were closed, his skin was nearly as pale as the sheets he was laying on. She grasped his hand and brushed a long lock of sandy hair off of his forehead.\n\n\"Cody, it's Kelly.\" Her mouth went dry, but she swallowed hard and went on. \"I know they told you I was dead. It was just a mistake.\" She took a deep breath and sat down on the edge of her grandmother's chair. \"There's so much that's happened, and this whole time I've missed you so much it hurt.\" She blinked the tears back. \"If Granna and Grandpa haven't told you, you're safe. Not just for now, forever. Stan's gone and he's not going to come back, I promise you.\" She kissed his hand. \"You're going to get better, Cody, and when you do I'll be here.\"\n\n*~*~*~*~*~*\n\nThree months. Three motherfucking months. That's how long it took to jump through all the fucking hoops, dot all the i's cross all the t's , fill out all the forms in triplicate, lose them, then fill them all out again. \n\nFucking bureaucratic bullshit.\n\nIn that time, the frail went to the hospital almost every day. Most of the time he worked from home designing custom systems based on what the client wanted and on those days, he went with her. \n\nSome days she talked to the kid. Some days she read him the 'Harry Potter' books. Sometimes she just held his hand while she talked with her grandparents. \n\nThere was never any sign of change. Days when he was meeting with clients, Conlon took her. \n\nHe took her back to Xavier's for her finals. She aced them just like he knew she would. While the other kids when to dances and practiced how to walk across a stage to get their diplomas, she packed and they headed back to the Buffalo. All the way back, she looked like another weight had been lifted off her shoulders.\n\nIn that three month period, the government had called him once. He'd fulfilled the mission to the letter and in the moment when his claws had torn into that sad bastard's belly he'd felt a familiar rush of excitement that reached through his pounding heart to his groin. After, when the blood was getting sticky and the body was starting to cool at his feet, the thought of the frail looking at him made him feel like he'd been rolling around in shit. He stayed away an extra day, just to try and get rid of that feeling. The frail didn't say anything about it when he got back. She just kissed him and told him she had missed him.\n\nThe new job wasn't ideal, but he didn't need a cooling off period before he could let the frail look at him again. Maybe that feeling wouldn't last. Maybe he'd end up missing the blood and the screaming and the stink of human fear. He doubted it, but then he never thought he would ever want out either. \n\nHe looked over at the frail. She was curled up and dozing in one of the uncomfortable visitor's chairs in the kid's hospital room. She hadn't wanted the kid to be alone when he got the treatment. Her grandparents took the day shift. She volunteered to take nights. That fucking bitch of a nurse started babbling about rules. Ackerly stepped in before Creed had to. Whether or not he was partially reformed, she was still his frail and he would be damned if anybody was going to hurt her. \n\nTwo nights in those godawful hospital chairs were testing his fucking resolve. He leaned back in the recliner and stroked the frail's arm. She looked over her shoulder. \n\n\"C'mere.\" He smiled a little.\n\nShe got up and settled against his chest. He wrapped the blanket around her shoulders. She kissed him lightly. \"You should go home.\" Her voice was a soft murmur.",
        "\"Leave you here alone all night? Not on your fucking life.\" He kissed her temple. He felt her slip into a deeper sleep. He smiled and turned his eyes back to the kid. \n\nHe watched the monitors, watched his breathing and listened to time tick away. Sometimes the frail shifted against him. Sometimes she sighed or arched closer. Holding her made the waiting easier. He could have sat there for hours, as long as she was there too. \n\nNurses came in and out and did whatever the fuck they did. At six-thirty in the morning, the dimmed corridor lights came up. The frail shifted but she didn't wake. Joe and Anna would be there by nine, but he'd let the frail sleep as long as he could. He closed his eyes and let himself start to drift off to the rhythm of monitors and people passing on whispering steps in the hall.\n\nSomething on the edge of that soft monotony pulled at his consciousness. He couldn't say what it was at first, just something that didn't quite fit. \n\nMaybe a little sigh. Maybe something that sounded like the squeak of plastic. Probably the frail, or one of the nurses. They were the only things moving in the room. \n\nIt was an insistent little sound. Scent told him that none of the nurses were in the room. The frail was quiet against him. He opened his eyes and saw the kid staring back at him and fucking around with the breathing tube.\n\n\"Shit!\" He sat up. The frail mumbled something. He never took his eyes off the kid. \"Frail, he's awake.\"\n\nShe looked at him and then realization dawned in her eyes. She looked at Cody. \"Get the nurse.\" She was off his lap in a shot. Creed watched her take his hand. \"Just a second sweetie, we'll get someone to take the tube out.\"\n\n*~*~*~*~*~*\n\nCreed stood out in the hall and watched the frail and her grandparents. They were all smiles, but the kid didn't wake up as easy as the frail had. He hadn't said a word in the hour he'd been awake. He hadn't moved much either, but when he did, his limbs shook. The frail sat on the bed with him and he curled up against her side like a child younger than his years. After all the kid had been through, Creed supposed he deserved a little comfort.\n\nThe frail was glowing with joy and strength and she was his. Just looking at her made him proud. \n\nCourse the others were a part of the frail. Maybe that meant they were his in a different way. Something about the idea appealed to him. Creed smiled a little. The frail looked over at him and motioned him to come in.\n\nNine months ago he'd gone looking for a shred or two of his humanity. He hadn't had a fucking clue how to go about it and after he found the frail he stopped thinking about it. It all seemed to happen without so much as a pang of uncertainty or a moments' effort. He didn't care whether or not it would last. It had lasted this long, there was no reason to think it wouldn't go on. He was going to damn well enjoy it. \n\nHe walked into the room to meet his mate's brother.\n\n*~*~*~*~*~*\n\nThis is the end of 'What the Cat Dragged In'. I want to thank all of you for reading and taking this journey with me. I can only hope that you enjoyed reading this story as much as I enjoyed writing for you."
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "human",
        "sex from behind",
        "love"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-32"
}