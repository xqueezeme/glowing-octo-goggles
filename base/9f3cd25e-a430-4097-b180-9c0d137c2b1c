{
    "title": "Fatal Alignment Ch. 02",
    "pages": [
        "Hi friends! Sorry for the long note, I have a lot to say before I start. After much deliberation, I have decided to carry on with this story. I know many of you are not fans of The Seeker and, consequently, this one, but I want to write it. I feel like I need to, to tackle some of my regrets about some of the evil things Venlen did in the last story. Like I said, if I ever try to re-write The Seeker, I would change some things, but it was my first, and I made some mistakes, so for now I'm sticking by them. I also left some loose ends, and I'd like to tie those up. I hate it when stories end without wrapping everything up. \n\nI also have gotten a lot of feedback about how I should abandon this and focus on Poison Ivy, however, it just doesn't work like that. I agree, that story is most definitely my favorite, and as such, it takes A LOT of time and effort to write. Not that this one doesn't, but when I've got a plot in my head, I want to write it down, and I refuse to force myself to write parts that don't come easy. So sometimes, I want to write this, and sometimes, I want to write Poison Ivy. \n\nIn short... For those of you who aren't fans... Suck it up, buttercup, and find another story. :) Even though I love you all, and continue to read all your feedback, even the mean or negative. I also had a comment about the use of religious terms in the last chapter. You're absolutely right, and I'm going to go back and change that. Thanks for pointing it out. Nobody has said anything yet, but you might notice that all three of my female characters are virgins. Yeah, yeah. I know. It's getting old. I'd like to think that all three are very different characters, besides having that (and their foul language) in common. All I can do is tell you, change is coming in the next one. \n\nFor those of you who did enjoy the last chapter, I should warn you that this one is going to move slow, and it's probably going to be a few chapters of not-so-smutty plot. So you can probably skip this one if that's what you're looking for. Otherwise, I hope you enjoy!\n\nIf this chapter had a soundtrack, it would be:\n\nBeautiful Girl by Junge Junge, Kyle Pearce, Beautiful Girl -EP\n\nIn My Dreams, by Tonight Alive, Underworld\n\nInnocent by Fuel, The Best of Fuel\n\nThe Madness by Art of Anarchy, The Madness\n\n...............................................\n\n\"Not like that. Like this.\" Amlen leans down and adjusts her grip on the hilt of the short sword she's spent all afternoon practicing with. He straightens, towering over her, and nods for her to try again. She faces the makeshift dummy they had mounted to a wooden pole in the back of the garden. Mimicking the moves Amlen had just demonstrated, she lands an awkward blow across the hay sack dummy's leg. Adrika growls in frustration. \"What am I doing wrong?\" she huffs, dropping the sword to her side and pushing stray strands of hair away from her sweaty forehead. \n\n\"You're thinking too hard,\" Amlen tells her, placing a patient hand on her shoulder. \"You don't become an expert overnight, little warrior. This will take practice. Look.\" He draws his own short sword from its place at his side, although his weapon is about as tall as Adrika. With the deadly speed and strength she knows makes her uncle Amlen one of the scariest men to ever walk this planet, he brings his arm up and then back down, slicing the dummy clean in half. The pieces fly from the wooden pole and lay lifeless at their feet. Amlen looks down and frowns at the felled burlap foe. \n\nAdrika giggles. \n\nAmlen grunts unhappily and turns his gaze back to her. \"Your weapon is an extension of yourself, Ri. Imagine stretching your fingers all the way through the steel of the sword. Intention is just as important as technique. When you fight, you fight to kill. Never leave an enemy alive. There is no place for mercy in war, and you can be sure your enemy will not give you the same courtesy.\" \n\nAdrika frowns and looks at the ground. \"What if I don't want to kill?\" Without warning, an image that has been haunting her for weeks flashes through her head. Her father's hands, covered with blood, clutching the silver leaf pendant at his throat. \"What if I never want to kill, no matter what?\" \n\nAmlen hooks a finger under her chin and brings her face up to his. \"Things won't always be this way for you, Adrika. You are too special to live an easy life. A day will come when you will have to choose between dying and killing. And when that day comes, you will remember what I tell you now, yes? Your heart is pure, but it is also that of a fighter. You can be kind and ruthless at the same time. But you must never, ever, confuse compassion for weakness.\" His eyebrows draw down in a thoughtful grimace. \"You are so much like your mother. You both are many, many things.\" He smiles sadly, and it is an emotion she has never seen on his face before. \"But weak has never been one of them.\" \n\nHe releases her chin and steps away, the sad look from just a moment ago disappearing behind his usual intimidating scowl. \"Now, let's go build another enemy for you, little warrior.\" \n\nAdrika's eyes snapped open, the memory-dream fresh in her mind. She could almost hear Amlen's deep, baritone voice reminding her to be strong and patient. Look for weaknesses. Wait for the right time to strike.\n\nShe sat up, groaning slightly at the pain in her side and scowling down at the thin, uncomfortable bedroll that was undoubtably the cause of her discomfort. The kind of chill that can only belong to an autumn dawn hung sharply in the air around the clearing. Looking at her surroundings, she watched the last of the dying embers release a gasping breath of smoke to trail up into the dusky, grey sky. Two figures were laid out nearby, much closer to the warmth than she had been. She climbed to her feet, re-thinking her decision to stay so tucked into the shadows, the stiffness of her joints admonishing her for sleeping so far away from the flames.\n\nStepping lightly, she crept closer to where the two men slept, careful not to make a sound. She scowled down at Blue, remembering the inexplicable burst of hate she'd felt from him the previous night when he had almost pulled her hair out of her scalp. Jerk. Moving past him, she stood over Killian's sleeping form, the steady rise and fall of his chest reminding her of the waves that crashed upon the Eastern shore. Her father had taken her there once, to a small sea-side fishing village, so she would know what the ocean smelled like.\n\nHer eyes danced over the unconscious giant, taking in some of the features she had missed at first. His light hair was streaked with splashes of a deep golden color, like the sun just before dusk. At rest, without the glower or glares he normally leveled at her, he looked... Well, he looked peaceful. The silvery skin of the raised scar that ran the length of his cheekbone stood out in stark contrast with his olive complexion. His features were meant for a happier face, his full, sensuous lips made for smiling instead of scowling. She wondered at what kind of a life had turned him into the man who had stolen her Green and had nearly drowned her. Who kept friends like Bastard Blue over there.\n\nA breeze swept through the small clearing, and she hugged her arms to herself, shivering. Her eyes trailed down Killian's body, noting how the muscles of his broad chest strained against his tight black tunic whenever he breathed in. An inky black tendril curled up in a strange pattern from below the shirt's low neckline, staining his skin, and she wondered what the rest of the strange marking looked like, and what it was for. Heat rose to her cheeks when she looked further down at his leather riding pants, remembering the feel of something long and hard pressed up against her when he had almost kissed her last night. And what the hell was that all about? What was he --\n\nHer thoughts cut off as she caught sight of the little sheath laying on the ground at his side, the hilt of her mother's dagger unmistakable in the soft morning light. She smirked, remembering Amlen's words. He was a fool for keeping it. It was the one weapon she was the most familiar with, the most skilled with. She stepped closer, watching his face for signs that he was awake. She crouched down silently by his side and reached for the dagger.\n\nSuddenly, his hand shot out and grabbed her, yanking her down onto him. In a flash, she had the blade pressed to his throat. She brought her knee down into his chest, her other foot on the ground beside the arm that gripped her wrist, just above the bracelet. Her breath stilled as she glared down at him, the easy, relaxed look on his face doing nothing to slow the pounding pulse in her ears.\n\nSilently, Killian tapped a finger against the silver band, a small smile lifting the corners of his mouth, the threat clear. For a long moment, they just looked at each other, Adrika now unsure about her course of action. She hadn't planned on killing him, not yet anyway. Amlen's words echoed loudly in her head. When you fight, you fight to kill. Never leave an enemy alive. Killian was her enemy, and she knew his plans for her were malicious and cruel. The decision to follow through with the threat written on her blade should have been an easy one. And yet, a hesitation that had nothing to do with his unspoken warning and unsettling calm stilled her hand and left them both in limbo.\n\nShe heard a rustling sound behind her, and without turning her gaze away, she knew that Blue was awake. \"Stand down, Eoin,\" Killian warned, his eyes never leaving hers. His voice was oddly soft, as if she was a wild animal he was trying not to spook. The noise behind her continued. Blue was ignoring the order, and any second now, she would lose her chance. Her blade pressed harder against his neck, her chest heaving with the adrenaline coursing through her veins.\n\n\"I said stand. The fuck. Down.\" His tone was no longer soft but low and threatening. Her eyes darted to the side, trying to see where Blue... Eoin... was. Killian's grip on her wrist tightened. \"Look at me,\" he said, his voice back to the gentle, don't-spook-the-wild-animal tone. She looked back down at him, wanting to wipe away the sheen of sweat coating her brow.\n\n\"You can't do it, can you, little monster?\" he said, his voice just above a whisper. She snarled and dug her knee harder into his chest, the press of the blade breaking skin. \"Shut up,\" she hissed.\n\nHis hand shot out and grabbed her wrist above where she gripped the hilt. \"Do it then.\" He pressed the dagger harder into his own skin, his hold on her wrist bruising. \"DO IT!\" he roared, leaning into her. Her balance faltered, and if it wasn't for him holding her arms steady, she would have been thrown off. Her vision blurred as she watched blood well up around the little blade, her hand shaking uncontrollably. He was holding all the pressure to his own neck now.\n\nThis was all wrong. She was just going to grab the dagger and go, run away while they lay sleeping by the fire. He could have killed her ten times over by now, but he hadn't. Whatever he was doing with her, he didn't want her dead. And she wasn't sure she could kill someone, not when she wasn't fighting for her life. Not in cold blood.\n\nNot like this.\n\n\"Stop,\" she whispered, her fingers going limp, dropping their hold on the blade. Something dangerous flashed through his eyes, and he flipped his body over onto hers, pinning her to the ground beneath him. Her stomach clenched when she felt his hard erection press into her thigh. He pulled her arms above her head and transferred her wrists to one hand, reaching down with the other to brush the wild tangle of hair from her face and tuck it behind her ear. His fingers trailed along her jaw, pausing to brush against her lips. Her breath caught as he leaned in closer and rocked his hips into her. Her eyes dropped to his mouth, both of them breathless and still.\n\nWhat the fuck was happening? \n\n\"Stop,\" she whispered again, not even entirely sure if that was what she really wanted. He blinked and moved his head away, shaking it slightly like he was just realizing where he was. He sat up, dragging her with him, pausing to collect the forgotten blade at her side. \"You should have taken the chance, Princess,\" he snarled, pulling her to her feet.\n\n\"It's the last one you'll ever get.\"\n\n......................................................\n\nLeaving the dagger for her had been a fucking mistake.\n\nFirst of all, it put her in unnecessary danger. Eoin had been about ready to pounce on her when he woke up and saw what was happening, and he had no doubt about what would have happened to her if Eoin hadn't finally listened to him and stopped. By the end of this, she would be beyond saving anyway. But that wasn't how he wanted it to happen. There was a plan in place, and Eoin should have known better.\n\nSecond of all, it had fucked with his head. He clenched his jaw, thinking about how close he'd come to losing control. He'd wanted her to realize how helpless she was, how trying to fight him was an endeavor she would regret. He'd wanted to test her limits. Instead, he'd tested his own. The way she'd been looking down at him... Her wide, dark eyes full of fear and uncertainty while her breath came in shuddering little gasps, like she was freezing. The way her hands shook while she held that fucking kitchen knife of a blade to his neck. Fuck. And despite all that, she'd refused to back down until he'd taken her to the very edge.\n\nIt had driven him crazy, but it wasn't until she was pinned under him, when something else stared back at him from behind her midnight eyes, that he'd truly lost his mind. She'd wanted him. Despite the fear, or maybe because of it, she'd been aroused, and he knew if he had dipped his hand between her thighs, she would have been wet.\n\nHe could have ignored her half-hearted plea to stop. He could have taken her, and maybe it was a mistake not to. Maybe he'd be able to think straight once he'd fucked her out of his system.\n\n\"We should go,\" Eoin said, his voice bringing him out of his thoughts. \"Venlen will have his dogs out hunting for us by now, and the cloaking spell won't work for much longer.\" He spat on the ground in front of him, a sneer of disgust lifting a corner of his lips. \"I didn't appreciate that little stunt you pulled back there, Kill. I don't know where the fuck your head is at, and it's making me nervous.\"\n\n\"Watch it,\" Killian growled. He was well aware of the fact that the little monster was burrowing herself under his skin. He didn't need a fucking lecture from his Second. Eoin just shook his head and scoffed, concentrating on securing their packs onto the Mortolf's back.\n\n\"Can we cut a portal through the Redlands, or do we need to go through them?\"\n\nEoin considered this for a moment. \"A portal would be easier. We'd have to stop somewhere for provisions if we tried to go through. But it'd be risky. It would drain both of us, and probably her too,\" he said, gesturing over his shoulder to where Adrika rolled up her bedroll, casting wary looks their way. \"He would know when the portal opened and where, and we'd still have another few days of riding on the other side of it.\"\n\nKillian grunted. \"We can't stop in a village. It would draw too much attention.\"\n\n\"Not necessarily.\" Eoin yanked hard on the leather strap, their gear now tied down and ready to go. \"If you can keep the girl under control, we could probably slip in and out with different faces.\" He shrugged, turning to face Killian. \"Your call.\"\n\nKillian looked past his Second to where Adrika now sat quietly with her back to the same pine he had pushed her up against the previous night. Her attention was fixed on the Miridyan bracelet as she fidgeted with her hands in her lap. Her billowy shirt and baggy pants were filthy and torn from her little stunt in the lake. Her hair was a wild mess of tangles and curls, the braid she had tried to weave it all into this morning doing very little to tame it down. Her comfort on the journey back to Karmora hadn't exactly been on his list of priorities, but she could certainly use a bath and a change of clothes. Maybe a hairbrush. And what kind of food did she like? She seemed to enjoy the stew Eoin had cooked last night, but maybe she'd like some fruit or bread to eat when they had to ride through the night.\n\nHe ran a frustrated hand through his hair, disgusted with himself for entertaining thoughts of making this trip more enjoyable for her. What the fuck did he care what kind of food she liked, or if her hair turned into a fucking rat's nest and fell off? It shouldn't matter.\n\nBut it does, a coy voice whispered. He shook it away, reminding himself of what Venlen had done, how their bodies were marked and disfigured by the time he'd found them.\n\n\"Get up, Princess,\" he barked, willing the familiar anger back into his veins. \"We're leaving.\"\n\nAdrika got to her feet and walked over, and even the way she moved slayed him. \"Why do you call me that?\" she asked, her head tilted up, so her midnight eyes could search his face.\n\n\"Did I capture the wrong girl?\" he taunted. \"Did I mistake a village whore for King Venlen's daughter?\" He spat out the name and title of his greatest enemy like a morsel of rotting fruit.\n\nShe scrunched her face up, little lines creasing her forehead as she frowned. She looked confused and angry. \"King Venlen?\" she scoffed. \"It's an outdated title. Commander Amlen and the Council of Leaders are in charge now, they have been since I was a little girl. My father is a Defender and a trusted advisor. He rejected that title long ago. And I am no more a princess than my mother a queen. I've never even been to the castle, or the city!\"\n\nKillian snarled down at her. \"Stop playing coy, little monster. Don't act like you didn't just threaten me yesterday with your beloved, powerful daddy. You know who I am,\" he mimicked her high voice. \"You know who my father is. He will come for me.\" \n\n\"My father is a Defender!\" she said, her voice rising in indignation. \"He protects the villages from people like you, and he will come for me, just as he would come for any other Prevarian the Mad King Jax sent his dog of a son after! He's not the King, and I'm not a fucking Princess, so stop calling me that!\"\n\nHe'd had enough. Grabbing her shoulders, he walked her backwards until she was pushed against the Mortolf's side. She winced as he pressed her into its spindly fur. \"You're right. I do know who you are, Seeker. Your loyalty to your piece of shit sire is admirable, considering the blood on his hands.\" She flinched at that, but he continued, shaking her once, his grip on her upper arms bruising. \"Tell me, Seeker. Do you dream about the memories you see while you traipse around in his head? Do you see their faces at night? Their blood? Their pain?\"\n\nHer eyes widened as he spoke, her guilt apparent in her stricken expression.\n\n\"Spare me the act, Princess,\" he snarled. \"You and your father deserve everything you have coming to you and more.\" He shoved himself away from her and stalked off, past Eoin, past the fucking pine, his rage palpable and refreshing. It cleared his head of everything else. How could he have forgotten what she was, what evil acts she dutifully ignored so long as Venlen provided her comfort and an easy, privileged life? So she'd proven herself to be more complex, more enigmatic than he had expected. It didn't change the fact that she was a spoiled brat and the rotten fucking apple of her father's eye.",
        "And for that, she would pay.\n\n...................................\n\nKillian hadn't spoken a word to her in two days.\n\nAfter his perplexing tirade back in the clearing that morning, she'd stood, stunned and overwhelmed, as the horror of his words sunk in. She remembered her vision, the image of her father's hands covered in blood, and how unsettled she had been. How terrified of what it might mean. She hadn't thought of it in years, had, in fact, pushed it far from her mind. Instead of looking deeper, she'd struggled to forget it.\n\nShe'd been taught to respect the private thoughts of those around her. Aside from the random thoughts and memories that invaded her mind from time to time, she only practiced that part of her abilities on her mother, and only with her permission. She knew her father was a dangerous man, that people were afraid of him. She knew that part of his job as a Defender was to kill those who dared threaten the safety and peace of Prevarian villages. But her father was a good man.\n\nSo why didn't she doubt the truth of Killian's words? Why hadn't she jumped to his defense?\n\nWhen he came back, he had collected himself and was once again calm but glower-y. He'd grabbed her waist without saying a word to her and hoisted her up onto the saddle of the creature, the Mortolf, and had climbed on behind her.\n\nShe'd tried twice to make a run for it, both times in the middle of the night when she was sure the two men had been sleeping. Both times, she'd only gotten just beyond the camp when her limbs had simply failed her, and she'd slumped to the ground, paralyzed, until Eoin had come to drag her back to her bedroll. Literally, dragged. By her limp arms. She guessed she should count herself lucky that that was all he'd done. She saw the way he watched her, how his ice blue eyes were overflowing with hate and anger.\n\nShe refused to stop trying to run. She kept thinking back to Killian's last words to her before he'd stormed off. You deserve everything that's coming to you and more. What exactly did they have planned for her? She remembered the long, ugly scars she had spotted that had covered her mother's back. Her sad smiles when she asked the wrong questions or said the wrong thing. For all her lessons about forgiveness and balance, her mother hadn't wanted her to fear death. Because her mother knew there were worse things than dying.\n\nAdrika suspected that, if she didn't find a way to escape, she was going to find out what some of those things were. And soon.\n\nWhen the time came, would the bracelet protect them? Would it be enough?\n\nThey kept riding after darkness had fallen, which was unusual. When Adrika saw the lights of a village up in the distance, her heart leapt. People! She shifted excitedly in her seat. Maybe someone would see them on the trail. Maybe she could call out to them before Killian silenced her. She could tell them who she was, tell them she'd been kidnapped. They would go to her father. He would know where she had been, and maybe he would find her before it was too late.\n\nKillian's arm snaked around her waist, stilling her jumpy movements. Except for helping her on and off the Mortolf and tethering her to the saddle, it was the first time he had touched her since his outburst. He pulled her back until she hit his chest, his breath hot on her neck as he leaned in to speak threateningly into her ear.\n\n\"We're stopping to get supplies before we cross the Redlands. You will not be recognized. You will not run, or speak, or act out in any way. If you do, innocent people will die. Do you want that?\"\n\nAdrika swallowed hard and shook her head. Did he even realize what a hypocrite he was? Punishing her because her father had done the same thing he had just threatened to do?\n\n\"Good girl. Now behave, or I will drag you back out here and leave you tied to a tree instead of allowing you to sleep in a bed tonight.\"\n\nAsshole. \n\n\"What was that, Princess? Say it a little louder.\"\n\nOops. Had she said that aloud? \"Nothing,\" she mumbled. His arm around her tightened, and she felt his chest shake with silent laughter.\n\nTormenting her seemed to put him in a better mood. They had left the two Mortolfs just outside of the village, and she watched them stalk away into the night, wondering if they would shed blood tonight. Keeping an arm slung over her shoulder, tucking her tight against his side, Killian played the part of the doting husband to her docile, meek wife, mocking her with double entendres as they perused the night market, purchasing supplies.\n\nYes, she is lovely, isn't she? I captured her heart back in Mulvane, and here we are. \n\nHow did we meet? Her father and I go way back. \n\nI'm a lucky man. She's stuck with me until kingdom come. \n\nEach ridiculous little comment made her wince, meant to drive home the point that she was completely under his thumb. That even here, in the middle of a crowded market, she couldn't escape him and whatever terrible fate awaited.\n\nAfter they picked up a few essential supplies, some dried meat and extra rope and new bedrolls, he'd let her pick out some fruit and cheeses, even some bread. He'd selected some soaps and hair oils, sniffing each of them until he apparently found one he wanted her to smell like. She took the bag when he handed it off to her. Lavender. And he'd bought a hairbrush and some leather ties without her noticing.\n\nHe ushered her into a shop filled with clothes, shoes and hats, Blue opting to stay outside and watch for trouble. He chose some warmer clothes for her, riding leathers, and a sturdy pair of shoes, surprising her when he gave the shopkeeper her measurements accurately. She promised she would have them delivered to the inn before morning for some extra coin.\n\nAt first, the lack of reaction she received from her torn and dirty clothes, disheveled hair, and dirt covered skin surprised her. Similarly, no one noticed that the two men who dragged her from booth to booth were armed to the teeth and looked menacing and dangerous. Then Killian's words came back to her. No one will recognize you. They had to be using the Green somehow, altering how people saw them. She wondered what the villagers were seeing, and how Killian was pulling it off. Or was it Blue?\n\nBy the time they checked into a room at the inn, she was exhausted and weary of Killian's derisive antics. She looked around the modest space with tired eyes, noticing the clawfoot tub that was already filled with steaming water. The sight made her want to cry. Given the way he had treated her tonight, would he even let her bathe?\n\nHe answered that question when the door closed behind them and he tossed her a long-sleeve white tunic and the bag of items he had purchased. \"Go wash,\" he told her. \"You smell like a wet dog.\" Blue chuckled at that, and she cursed them both under her breath as she walked into the bathroom and shut the door.\n\nShe slipped into the warm water, moaning at how it caressed her skin and soothed her aching muscles. She drew her knees up and dipped her head beneath the surface, wishing she could stay there, warm and cocooned against sound and reality.\n\nHer clothes were piled in a smelly heap when she stepped out of the tub, smelling like lavender and clean of several days-worth of dirt and dust. She brushed her long black hair, weaving the leather ties into a loose braid, and pulled on the tunic he had thrown her. It came down to her knees and she had to fold the arms over several times before her hands were free, but at least she was covered, and clean.\n\nShe was actually feeling good, until she realized that she'd have to go back out into that room with the grumpy men who carried some personal vendetta against her. Or her father. Which she was apparently responsible for. Her hand frozen on the knob, she pressed her forehead to the door and closed her eyes, pretending for just a few seconds that she was someone else, somewhere else. Anywhere else. That Seeker blood didn't flow through her veins. That she didn't have to carry the burden of knowing what might lie ahead.\n\nAs if sensing her thoughts, Killian chose that moment to pound on the door, making her yelp and jump back. \"Time's up, Princess.\" She growled. She preferred it when he called her little monster, although she could do without the little part. She might be smaller than most, her mother's Seeker blood denying her the height of the Fae, but 'little' implied helpless and weak, of which she was neither. She'd still rather be a monster than a princess.\n\nNobody fucks with monsters.\n\n....................................\n\nShe was hiding in there.\n\nHe knew she wasn't trying to escape out the window, and not just because they were three stories up. Any other night, and he was sure the height wouldn't deter her from trying. But he'd watched her drag herself into the washroom, her shoulders slumped and her head hanging, hating himself a little for it. She was dejected and exhausted. He'd been a complete asshole to her tonight, telling himself he was making up for it by buying her things she would need during the weeks of travel ahead instead of taking her through the Redlands with nothing but the clothes on her back and whatever food he decided to feed her.\n\nHe was still desperately trying to hold onto his anger. This whole thing would have been so much easier if he could just hate her like he had before he'd taken her. Before he'd known her. But with every little thing he did to cause her pain, he'd watched her shrink into herself more and more, and it pissed him off that he found no satisfaction in it.\n\nHe was almost relieved when she'd tried to run away the past few nights. She was still fighting. It had been a hard day, but she wouldn't break so easily. She was tough, his little monster. Tougher even than she gave herself credit for.\n\nDeciding she'd been left alone for long enough, he pounded on the washroom door. \"Time's up, Princess.\" He heard her yelp and fall back and couldn't suppress a little chuckle. He moved back to one of the two beds in the room where they had laid out their new supplies and were working on packing them all away. They would leave at dawn, but she would get a few hours of sleep in a comfortable bed, at least.\n\nIt took a moment for him to realize that Eoin had stopped working and was staring a little slack jawed at something behind him. He turned, and almost dropped the dried meat he had been stuffing into one of the saddle bags.\n\nFuck me. \n\nAdrika stood in the bathroom doorway, looking like some kind of sacrificial virgin. His tunic was comically too big for her tiny frame, but the fabric was thin, and he could see all her curves and peaks from the light framing her through the open door. Her long, jet black hair hung in a loose braid over her shoulder, and all the dirt and filth was gone from her face.\n\nHe'd forgotten how fucking beautiful she was. She'd been beautiful before, wild hair and smudged face and all, but like this, all clean and soft and innocent, she was stunning. She looked nervously between the two beds as she fidgeted and wrung her hands. Finally, she looked up, and they locked eyes.\n\nFuck. Me. \n\nHe cleared his throat and looked away, turning to drop the pack back on the bed. Eoin was gawking, and he fought the urge to slam his friend up against a wall and gouge his eyes out for looking at her like that. \"Eoin,\" he growled, drawing the other man's attention away. \"Finish the packs.\" He spun back around to face the little monster. \"You.\" He pointed to her, then to the empty bed. \"Go to sleep.\"\n\nHe waited until she had climbed up on the mattress, burrowing herself deep under the covers, before stalking into the washroom and slamming the door.\n\nHe was so fucking fucked.\n\n...............................\n\nThe door to the washroom slammed shut, and she could hear him stomp around before the sounds of a splash told her he was bathing.\n\nShe was obviously delirious from exhaustion and stress. For a second there, when she had stepped into the room, and they had locked eyes, she'd thought...\n\nBut it didn't matter, because whatever it was she thought she had seen, or the little electrical current she thought she had felt between them, she'd been mistaken. And even if she hadn't been, it didn't change anything. She was still his captive. He was still a huge jerk, both literally and metaphorically. And they were still enemies.\n\n\"I know you're still awake.\"\n\nAdrika jumped, Blue's voice close to her ear startling her out of her little burrow. She looked over her shoulder to see his tall figure hovering over her, an arm braced on the headboard as he leaned over the bed. Feeling vulnerable where she was, she threw the covers off and sat up, folding her legs beneath her. \"Can I do something for you, Eoin?\" she asked sweetly. His gaze drifted down to where the tunic hung low across her chest, and she folded her arms to cover herself.\n\nHe smirked. \"I wonder. Did your mom ever tell you the story of how she met your dad?\" Adrika frowned, not answering. In fact, her mother hadn't ever told her that story, and it was something she had asked about several times. Her father loved her mother like crazy, that much was apparent. But sometimes, her mother would look at him strangely. Almost like she was afraid or upset. It was subtle, and it didn't happen very often, but she had always wondered about the reasons behind those looks.\n\n\"No,\" Blue smiled maliciously. \"I didn't think so. Would you like to hear it?\"\n\nShe pressed her lips together. She did very much want to hear it, but not from him. \n\n\"You know,\" he continued, his voice low and quiet. \"You and she have a lot in common. Take your current predicament.\" He sat down on the edge of the bed, and she scooted further away. She didn't like the way he was looking at her right now, not that he ever looked at her very pleasantly. But now, he looked like he was enjoying himself. Like he was excited about what he was telling her. He held up his hands, palms facing her. \"Easy, now. We're just talking, right?\"\n\nYeah, right. Just talking. She pulled her knees up to her chest, careful to keep herself covered.\n\n\"As I was saying. Did you know your mother was in almost the same exact situation you're in right now, at your exact age? No? Well, she was. Of course, there are some important differences. For example, we're not planning on forcing a bond on you. Although, I wouldn't rule it out just yet. Who knows what could happen after we get you back?\"\n\nShe cocked her head to the side, her curiosity getting the better of her. A bond? \n\nHe was silent for a minute, looking at her with a disturbing intensity, searching her face like he was looking for something. Then he laughed quietly, and the sound filled her with dread. \"You don't know,\" he whispered. \"The only Seeker virgin left in existence doesn't know what kind of danger she's in.\" He tsked. \"You should have fucked your farm boy when you had the chance, Princess.\"\n\nShe glared at him and scooted back some more, wanting to be as far away from him as possible.\n\n\"Should I keep going? I think I was telling you how your father raped your mother, all so he could have access to her special Seeker powers. That is, after he forced her out of hiding by killing off her Fae friends. One, by, one.\"\n\nShe stopped breathing. He couldn't have just said what she thought he'd said. He was lying. He had to be lying. He was just trying to mess with her head.\n\nBut you've seen it. You saw them, by the fire. Pressed up against the tree. The memory that wasn't your own. \n\nShe shook her head, silencing that insidious voice. Eoin put his knee on the bed and started crawling towards her. She scooted back again, further out of his reach, but he kept talking, his words dragging her limbs down like an anchor until it hurt to move.\n\n\"Don't believe me? I'd tell you to look in my head, but we took care of that, didn't we? See, that was where your father went wrong. He should have put a leash on her from the very start. He could have done it. But he was cocky. Thought he could handle the mind-fucks if she tried. And he could. But she had the ability to fight back. I wonder, Princess. If your father had just cut her off from her powers right away, do you think she would have opened her legs for him willingly? I think so. I mean, fuck, look at you. We had you for two days, and you were ready to let Kill fuck you, weren't you?\"\n\nHer back hit the wall. There was nowhere else to go. Tears streamed down her face as she shook her head, denying everything. Denying it all. He reached her and crowded her against the wall, caging her in with an arm on either side of her head.\n\n\"But Laiyla was strong, wasn't she? She could have survived all that. I don't think she truly broke until your father handed her off to his brother when he tired of her. Now that, that's what really did it. All those pretty scars on her back. All from Venlen's big brother.\"\n\nA strangled sound escaped her. \"Stop,\" she whispered. \"Please, stop.\"\n\n\"Stop what, Princess?\" He leaned closer, and she turned her head away. His hand clamped around her jaw and forced it back. \"Stop. What?\"\n\n\"Eoin.\"\n\nThere was a death threat in the way Killian said his name. Eoin pushed off the wall, giving her one last smirk before leaving her on the bed alone. She was shaking violently. Killian's eyes followed him until he came to stop face to face with the bigger man. His fist shot out, and Eoin staggered back, clutching his nose as blood coated his lower face.\n\n\"FUCK! Fuck you, Kill! How long have we waited for this? How long has Eva been rotting in a fucking grave, while this bitch walks around and --\"\n\nKillian's hand wrapped around Eoin's throat. He spun Eoin around and slammed his body against the wall. Adrika jumped at the crack of his skull. Frozen, she watched as Killian's hand constricted, as Eoin's eyes bulged and lips turned blue. Killian leaned in, so close that his nose almost touched his friend's.\n\n\"I should kill you.\" His voice was deadly calm, and she shook harder, her teeth chattering together. They stood like that, in limbo, for an impossibly long moment.\n\n\"Killian.\" Somehow, she managed to keep the tremor from her voice. Killian's head twitched toward her almost imperceptibly. What was she doing? She should want to see Eoin die. All the same, she let out a shaky breath when she saw his grip loosen, when she heard Blue inhale sharply.\n\n\"Get out.\" He stepped to the side, and Eoin rushed by, casting an accusing glare her way as he ran out the door. Killian's shoulders slumped, and he slowly turned around to face her, his lavender eyes revealing nothing of what was going on inside his head.\n\n\"It's true, isn't it? It's --\" She swallowed hard, forcing back a sob. \"It's all true?\" She didn't know if it was a question, but when he said nothing, just stood there, staring at her, she closed her eyes and leaned her head back against the wall.\n\n\"I'm tired of your threats. Whatever you're going to do... Just do it.\"\n\nAnd then she came apart.\n\n..............................................\n\nHe clenched and unclenched his fists, watching her body shake with long, racking sobs. He should have just fucking killed him. It would have been easier than standing here, seeing his little monster crushed and broken.\n\nHow is this any worse than what you'll do to her? \n\nHe shivered, not wanting to answer that question right now. He wanted to gather her up into his arms and comfort her. He wanted to wipe away her tears and kiss her swollen lips. He wanted to tell her everything would be okay, even though he could guaran-fucking-tee things would never be okay for her again. She'd been doomed from the start. Her own father had sealed her fate.",
        "It pissed him off, how much he wanted to change that. Because he shouldn't. He should be enjoying this. Fuck, he should have joined in with Eoin when he walked out and found him leaning over her trembling form, tearing her world apart in a few minutes of cruelly chosen words. They were just fucking words! Eoin hadn't even needed to touch her! And he should be relishing her breakdown, not plotting his Second's slow and painful death.\n\nHe needed to leave. Let her get it out of her system. Let her cry herself to sleep in a warm bed, possibly the last one she'd ever lay in, at least willingly.\n\nHe started walking, meaning to leave the room. His feet, entirely of their own accord, stopped at the side of the bed, and before he could reconsider, he'd climbed in and dragged her away from the wall, tucking her into his side and rubbing slow, soothing circles across her back.\n\nEventually, her tears dried up, and her shaking subsided. She was quiet for a long time, and he thought she had fallen asleep when her voice, muffled against his chest, told him otherwise. He cradled the back of her head, gently tugging her away from his side. \"What was that?\"\n\n\"I said, you were right.\" She swallowed. \"I don't do that. Look at people's thoughts. I can, but I won't. But sometimes I see things without trying.\"\n\nHe was silent, waiting for her to continue.\n\n\"A long time ago, I saw something I tried so hard to forget. It was only for a second, only one image. I saw blood. Lots of blood, coating his hands red.\"\n\nHe stiffened.\n\n\"I didn't understand it. I was young, and it frightened me, and I turned my back on it. I never questioned it.\" She took a long, shuddering breath. \"All this time...\" Her words ended on a whisper.\n\nRegret. What a complete mind-fuck. He doubted she could do worse if he took the bracelet off.\n\nYou could call it off. Take her home. Keep her for yourself. It's not too late. \n\nWithout realizing he was doing it, he pulled her closer and started running a hand down her silky hair. He pressed his lips to her brow, and then tucked her head under his chin.\n\nWhat was he doing?\n\nJust for tonight, he wouldn't ignore the voice. In the morning, he'd remind himself of all the reasons why it still had to be done. Why Venlen still had to be punished, even if Adrika was innocent.\n\nBut tonight, he'd just hold her. And pretend it wasn't too late. "
    ],
    "authorname": "ReckingBall",
    "tags": [
        "fantasy",
        "magic",
        "reluctance"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/fatal-alignment-ch-02"
}