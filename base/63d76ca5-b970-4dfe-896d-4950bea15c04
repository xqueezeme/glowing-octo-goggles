{
    "title": "Could You Be Mine? Pt. 02",
    "pages": [
        "This is (as the title indicates) part two of \"Could You Be Mine,\" but from RJ's perspective. The story picks up right before the end of part one. It took me a while to get here -- I wanted to share RJ's voice but she wasn't the easiest character to translate into words and I felt quite determined to get it as right as possible. Thank you all for your patience as I muddled through. I hope you enjoy it.\n\nA big shout out to Ripley for taking the time to help whip this into shape.\n\nMany thanks again for all your comments and feedback. It's always good to hear from you!\n\nChapter 1: If Not For You\n\n\"Last batch,\" Sonya Martin pointed to another stack of papers with 'Sign Here' post-its sticking out all over the place.\n\nI sighed and started dutifully signing all the signature boxes closing the sale of my house in San Francisco. I'd flown in to SFO from Hong Kong the night before, my latest stop in a multi-leg business trip that took me all over East Asia. Sonya was my friend and my lawyer; this was the first time we'd met up in person since I relocated to New York earlier on in the year.  We were mixing business with pleasure -- finish the paperwork for the sale and get caught up.\n\n\"I still can't believe you moved,\" she mused, \"You said your dad ended up being okay, right?\"\n\nMy only reason for moving home to New York was to be closer to my father again. I'd called him on New Year's Day and he sounded odd, like he was confused or something; it didn't take long for a lot of worst case scenarios to pop up in my head.\n\nDad had insisted he was fine, but my mind was made up. I left San Francisco not long afterwards and entrusted Sonya with the sale of my house, which she -- of course -- executed with excellence.\n\nI nodded, \"He was so irate about my decision that he went and got a comprehensive physical to prove me wrong. Which he did: the doctor told him he was fitter than most people half his age. I managed to save some face when Mona asked me to step in as the Finance Director at her firm.\"\n\nSonya laughed, \"I am so bummed I missed witnessing this. It must have been legendary. Two non-verbal Kans, fuming at each other. LEH-GEN-DARY.\"\n\n\"He still waves his test results in front of me every chance he gets,\" I grumbled. I finished signing the stack of papers and dropped the pen onto the desk.\n\n\"Your dad could probably still kick your ass in a 5k-run,\" Sonya restacked the documents and slid them into a folder, \"You got a good deal on the house, Rowan.\"\n\nI handed her the pen back, \"All thanks to you. You did all the work!\"\n\n\"You should pay me more,\" she glared at me mockingly, \"I don't usually do real estate.\"\n\n\"You're right,\" I admitted, \"too bad you keep billing me at ridiculously low rates and not cashing checks I write that would put you back at market prices...\"\n\nI met Sonya when my father and I were working on our bio-tech start up years ago. She'd been working at a large law firm and was starting a solo practice when we hired her as our external counsel. She and I hit it off -- she's the closest I've ever had to a best friend.\n\nSonya looked at me seriously, \"You guys gave me my start. I quit West and Mason to do my own thing and you guys took the risk of going with me instead of with the big guys. I won't ever forget that.\"\n\n\"Your billable rate was better for our bank account, and you were smarter than any of the so-called 'big guys' we spoke with. No brainer,\" I smiled as I watched her blush. Her aversion to compliments was well-known.\n\n\"I really miss you guys,\" Sonya said, \"First your dad moved back to New York, then you...\"\n\n\"Dad likes being in a city where he doesn't need to drive. And he did his post-doc at Hudson U, so he has a definite affinity for the Big Apple.\"\n\n\"It's where he met your mom, right?\"\n\nI nodded, \"I think the campus reminds him of her. It's a little sad. But beautiful in a way. I kind of get it now.\" My mother died shortly after I was born. My dad's told me about her on and off, but we've never talked specifically about her death. I've never asked; I figured he would tell me if (and when) he wanted to. It didn't really bother me because I had no real memories of my mother; she was more a concept to me than a person whose death I experienced as a loss.\n\n\"Wait, what?\" Sonya sat up, \"What do you mean 'beautiful'? You 'get it'? Are you high?\"\n\nThis was awkward. Sonya was one of the few people in my life who'd heard me talk about my parents. I'd always played the sarcastic narrator, adding in more than a healthy dollop of cynicism as part of my attempt to fill in the blanks without sliding into maudlin melodrama over my mother's death.\n\n\"No. I just see it differently now,\" I hadn't told Sonya about Ellie yet, but I sensed that her finely honed sense of deductive curiosity was kicking into high gear.\n\n\"Say more,\" the hard-core lawyer face was setting in.\n\nI shrugged, \"My perspective's shifted.\"\n\n\"Did something... or someone shift it?\" The last word of the sentence came out in an unnaturally high soprano note.\n\nMy head started nodding before I even decided to spill the beans.\n\n\"Intriguing.\" She gazed at me. This was how Sonya and I got close as friends -- she never pushed, but somehow, with a mere look, she would make it easy for me to willingly share things with her.\n\n\"I know,\" I crossed my legs and leaned back into the chair.  Might as well get comfortable.  I'm trying to get my head around it myself. But yes. I've met someone.\"\n\n\"And not in the way you usually meet people and un-meet them after a couple of months?\"\n\n\"Definitely not... Ellie... I mean, Lauren, is not like other women I've dated...\"\n\nSonya tilted her head, \"Because you can't keep her name straight?\"\n\nI laughed, \"No -- I know her name. It's Lauren. But I call her Ellie.\"\n\nShe waved her hands, \"Start from the beginning... \"\n\n\"I met her on my first day at Mona's firm,\" I began.\n\n\"Winchester and Brown, the investment bank, I know,\" Sonya interjected, \"Skip forward to the good bit.\"\n\nThere was no singular 'good bit' that I could pick out. Just like sliding out a favorite book from a crowded bookshelf, the memory of the first time I saw Ellie edged its way forward with a friendly weight and feel. I'd done a clumsy triple-take when I walked past her cubicle that morning. I was captivated immediately. She'd been completely focused on her work and unaware that I'd passed by. I couldn't tear my eyes away. I found a vantage spot a little outside of her peripheral vision and stared. She was, in a word, luminous. I was surprised there hadn't been others like me, lurking in corners to gawk at her. My attraction basically snowballed from there: She happened to be leading the first meeting on my calendar that morning, and it was all I could do to remain professional.\n\nFor the three months Ellie consulted at Win-B, my head and my heart ran circles around each other as my feelings for her grew. It was a strange phenomenon: The more time I spent with her, the more I wanted to be with her; the more uninterested she seemed, the more keenly I felt my need for her. Some capricious sprite had attached an invisible string between my heart and Ellie's and I was pining for her; I could have been Viola yearning for Orsino, or KD Lang crooning \"Constant Craving.\" I finally -- painfully -- understood what Lang meant when she said the song was about 'divine dissatisfaction.' For three months, I'd been deliciously oppressed by my unrequited feelings.\n\n\"The good bit?\" I realized my mind was wandering, \"It was pretty much all good. She was consulting for Mona on a Finance project. And I basically lost track of time the first time I saw her... and every time after that.\" I felt a little embarrassed confessing this -- I'd hinted at some of this to Mona, but this kind of detail was more unfiltered than usual. On the one hand, it felt good to say all this out loud to someone. On the other hand, it felt like I was letting go of a precious secret that I'd been hoarding all for myself.\n\n\"Do I sense some hesitance? Is there a 'but' in there somewhere?\"\n\n\"She's never been with a woman before,\" I grimaced a little.\n\n\"Oh!\" Sonya scratched her head, \"But you guys are totally into each other and talking enough for her to help you see your parents' relationship differently...\"\n\n\"Pretty much,\" I admitted.\n\n\"Aaannnnd how much are you guys talking?\"\n\nWe talked as much as different time zones allowed while I've been away but I guess I hadn't thought about it until Sonya asked, \"We've been talking every day... I think. Yeah, pretty much every day.\"\n\nMy friend's eyes bulged, \"You hate talking on the phone! What kind of sorcery brought about this change?\"\n\n\"I don't know, but it feels good,\" I grinned. Sorcery was a good word for it. Every time Ellie spoke, every time she moved, time slowed for me and I felt myself drawn into the tractor beam of her bewitching countenance. She had me wrapped around her finger and I loved it. I missed her so much.\n\n\"So why the two names?\"\n\n\"Oh. Uh, I introduced myself as RJ so she responded by introducing herself as 'LE' - for Lauren Elizabeth. I was too slow to catch the joke and misheard it as 'Ellie.' She corrected me, with this... this smile that she has. I don't know, I guess you had to be there...\"\n\n\"I kind of wish I'd been there. Do you have a photo?\"\n\nI had many. Some were tame, and some were not, but I didn't want to share. Straight or not, Ellie had been a willing collaborator in ensuring that our hormones were relentlessly revving in anticipation of our inevitable reunion. \"No -- but you can look her up, she has her own website for work: Lauren Calder Consulting.\"\n\nSonya wiggled her fingers in anticipation and turned to her computer. Her keyboard clacked as she searched for the website.\n\n\"Holy shit, Rowan, she's a fricking bombshell!\" Sonya's eyes were locked on her monitor, \"And look at all the amazing shit she's done. She did projects for Lowell and Jacobs... and for the Melville Foundation... and the Mackenzie Trust! Wow!\"\n\nI swelled with pride, \"I know, she's awesome.\"\n\n\"Awwwww, look at you!\" Sonya grinned, \"You're beaming. That's so cute!\"\n\nI flipped her off.\n\n\"So...\" Sonya leaned forward on her desk, \"Have you done the deed?\"\n\n\"NO!\" I felt blood rush to my face, \"No. Not yet. UGH! None of your business... Oh fine, we've uh, kissed and stuff.\"\n\n\"And was it good...?\"\n\n\nI nodded. The memory of the way her hands cradled my face as she kissed me zipped through me like a shot of adrenaline.\n\n\"Was she freaked out over kissing a girl? Is that why you haven't gone further?\"\n\nI shook my head from side to side. If anything, Ellie had been more brazen than me, \"Mona made me promise to take it slow,\" I explained.\n\nSonya nodded thoughtfully, \"Slow is good -- mostly because you need more time than most to figure this commitment stuff out.\"\n\n\"No, I don't.\"\n\n\"Come on, RJ, you could've gotten hitched to any one of the women who threw themselves at you, but you didn't because you never let it get that far!\"\n\n\"Untrue!\"  I'd experienced no throwing of any kind.\n\n\"Uh, I hate to break it to you, but you were one of the most eligible butches this side of the Golden Gate Bridge. I mean, I'm straight and even I picked up the vibes that came your way when we went out.\"\n\n\"That did not happen...\"\n\nSonya raised an eyebrow, \"RJ, it did happen. I can't believe you need a heterosexual to point this out to you. You have the brains and the looks -- RJ! Stop rolling your eyes -- you have a swagger. It turns heads. In a good way. Certainly seems to have worked for Lauren... and she's straight!\"\n\n\"I don't swagger... and Ellie's obviously not a hundred percent straight...\"\n\n\"Whatever. My point was -- you haven't been in a relationship that's lasted longer than a couple months. And it's not because you haven't had the opportunity. It's because you've had an aversion to the idea. So if you're serious about Lauren, you need to get up to speed on the five steps...\"\n\n\"Five steps?\"\n\n\"Step one: Round the bases. You know, fooling around and doing the nasty. Step two: Exchange keys--\"\n\n\"She already gave me her keys.\"\n\n\"Wow, she's skipping ahead, that's good I suppose,\" Sonya rubbed her nose distractedly, \"She gave you the keys to her place?\"\n\n\"Yup,\" I nodded. It'd felt like a spur of the moment thing, she kind of shoved them in my hand before I left, but maybe she wanted me to take something of hers on my trip. I've carried those keys around almost obsessively on my trip. \"What are steps three, four, and five?\"\n\n\"Meet the parents, moving in, proposal,\" Sonya counted off.\n\nPROPOSAL?!! My mind immediately jumped to Ellie and me exchanging rings. It was thrilling. I paused for a second, because I realized what I just wished for.\n\n\"Ohhhhh -- RJ, did I freak you out?\" Sonya's voice drifted up again.\n\n\"Nope,\" I shook my head emphatically, \"I was thinking about what that would be like... uh, moving in with her and getting married... and how amazing it'd be if it happened.\"\n\nSonya face contorted as if I had taken a crap on her desk. She shook her head and held up her hands, \"Hold the phone. Shut the front door. Back up the truck...\"\n\nI started chuckling, \"Five steps, Sonya, like you said...\" I knew I was being cavalier, but I couldn't help but have a little fun.\n\n\"Rowan,\" Sonya said this slowly, \"The five steps were a generalization. You know this stuff doesn't follow some linear path, right?\"\n\n\"Nope! I know nothing!\" I flung my arms up happily, \"I have NO idea what I am doing. I do know that I like her. A LOT. And I know she likes me too. A LOT.\"\n\nThe look of incredulity returned, \"Don't take this wrong way, RJ, but... I mean, clearly you're into this woman. And you say she's into you. But you don't need to jump immediately to marriage, you know? Maybe try to get some practice for basic long-term dating stuff first?\"\n\nI took a deep breath, \"Look, I know this seems crazy. As I said, I am trying to make sense of it myself, but it's real. Ellie and me -- whatever it is between us -- it's more real than anything I thought would be possible. Ellie's amazing. She's... amazing. I didn't know I could feel like this.\"\n\nSonya made a retching noise and stood up, \"Okay. Ew. Dial back the queso-factor, Rowan. I'm not sure what to do with this cheese-o-rama version of you. Promise me one thing?\"\n\n\"Sure,\" I stood up and stretched. Simply talking about Ellie was shooting endorphins up and down my body.\n\n\"When you actually realize you're in a relationship and you freak out -- CALL ME before doing anything stupid.\"\n\n\"I'm not going to freak out.\" I knew this with absolute certainty. My submission to Ellie's hold on me was so complete I almost didn't care I was adrift in unfamiliar waters: I'd never fallen for someone quite so irrevocably before, and no one has ever managed to maintain such a consistent grip on my attention.\n\n\"CALL. ME.\" She headed to the door of her office, \"Promise!\"\n\n\"Okay! Okay!\" I held up hand up in resignation, \"Where are you going?\"\n\n\"I'm going to Aki Sushi. I need to process everything you just told me with copious amounts of sake and raw fish.\"\n\n\"Liquid lunch, counselor?\"\n\n\"Yes indeed. I'm happy for you, RJ, really, but you basically nuked my brain.\"\n\nI laughed, \"Fair enough. I'll buy.\"\n\n\"That makes it even better! Come on... lunch... sake... then we talk some more.\"\n\nSonya stopped by her assistant's desk on our way out, \"My best friend's in town for twenty-four hours. I'm taking the rest of the day off.\"\n\nIt was a good thing that Sonya was a favored regular at Aki Sushi, because we grazed our way through the menu and Eiko, our server, kept us fully lubricated with some top-notch rice wine. Four hours later, she helpfully informed us that sake does not induce hangovers, so we should be, in her words, \"A-okay.\"\n\n\"You got me all drunk,\" I complained as we wobbled out of the restaurant.\n\n\"Sleep it off on the plane tonight,\" Sonya's heels clicked on the pavement as she walked next to me. I didn't understand how she was able to walk in those things with that much sake in her bloodstream.\n\n\"You got me all drunk!\" I said again.\n\nSonya waved a hand dismissively, \"It's not like you had plans to operate heavy machinery. Come on! Let's grab a car to my place... What???\"\n\nI had stopped mid-step, \"I was going to run some errands.\" My 'errands' involved a store a couple blocks from where we were standing.\n\n\"Errands? Like laundry?\"\n\nI tried not to look too sheepish as I replied, \"No, I was uh, going to stop by... um... I was going to buy some things.\"\n\nSonya was whirring through her Sherlock-like cogitation process. The sake wasn't slowing her down any. \"Buying... as in... buying sexy things for you and Lauren???!!!\"\n\n\"Shhhhhhh!\"\n\nShe clapped her hands and squealed, \"OH. MY. GOD. Come on. Let's go! I wanna go shopping with you!\"\n\nMy friend's drunken enthusiasm for the task more than wiped out any awkwardness I felt. I thought I was going to pop in and out of the aptly named Lube and Lust, but Sonya insisted I consider all the options in all the possible contexts and permutations. Unsurprisingly, I spent much more money than I thought I would. Sonya did too because her new boyfriend Ryan was apparently very creative in bed. The store clerk couldn't have been less impressed with our purchases, but we were still fairly red-faced about it as we were rung up. Needless to say, we moved with alacrity between the store and Sonya's apartment once the payments had been made.\n\nWe spent a good amount of time sterilizing everything we bought as Sonya was adamant that we got the toys 'vroom-vroom ready' (her words, not mine). With the x-rated goods in my suitcase, Sonya and I headed to the airport and held our breaths as I checked in my luggage. I wondered if some unsuspecting security agents would suddenly find themselves elbow deep in Lube and Lust inventory. Luckily, my suitcase headed to the plane's cargo hold without scrutiny.\n\n\"Have a good flight. I wish you luck in satisfying your carnal biological urges,\" Sonya's mouth twitched as she gave me a hug good-bye.\n\n\"I wish you luck in introducing Ryan to all the shit you got, you sex maniac!\"\n\n\"Takes one to know one,\" Sonya's eyes flashed with mischief as she gave me one last hug.\n\nThe thing about the red-eye that I usually disliked was that it was always a little too short for a good night's sleep. The good thing about the red-eye I was on was that it was an even shorter flight than usual and we were going to land early. I slept on and off, but I was too hyped up about being home again.\n\nI squinted when the overhead lights came on and rubbed my eyes. My neighbor scowled, threw his blanket over his head and muttered, \"I hate the red-eye.\"\n\nI took a quick bathroom break and grabbed a coffee on my way back to my seat. I tried to remember how Ellie took her coffee. Just milk and no sugar, I was pretty sure.\n\nI side-stepped back into my seat and took a sip of liquid caffeine.\n\n\"Ugh!\" The unpleasant clash of coffee and toothpaste on my taste buds jerked me into full wakefulness.\n\nI lifted the window shade a tad, and early morning daylight streamed through. Getting closer now, I thought as I allowed my mind to drift back to the beautiful woman who'd been monopolizing my thoughts. Case in point, I was thinking about her so much that I barely registered the plane landing. I must have trudged out with my fellow passengers, because I managed to get my luggage and find my way to the taxi line, but I honestly couldn't remember any of it; I was thinking about how it would feel when I finally got to kiss her again.\n\nI dialed her number the moment I climbed into the back of a cab.\n\n\"Hi!\"  Holy shit, she could say 'hi' to me like that for the rest of my life and I'd die happy.",
        "\"Ellie...\" We'd talked almost every day while I was gone, but it didn't make me miss her voice any less.\n\n\"How was the flight?\"\n\n\"Too short for a full night's sleep, but it got me here. I can't wait to see you.\"\n\nEllie chuckled, \"Same. When will you be done with work today?\"\n\nI groaned, the dread of my day at the office loomed up, \"Two meetings in the morning, one with Mona at eleven... and then two others after lunch, I think.\"\n\n\"Hurry up with all of that so you can come ravish me.\"\n\nI sucked in a breath, \"Jesus, Ellie!\"\n\n\"That's what you get for bolting off to Asia for weeks on end. My dreams are starting to censor themselves they're getting so extreme. Last night, I dreamed you took me while I was sprawled over the hood of a car...which is odd, because neither one of us has a car. But it was fucking hot.\"\n\nAbsence makes the heart grow hornier. I scrunched my eyes shut, \"Ellie Calder, you... are... killing me,\" I said quietly into my phone.\n\n\"Is that so?\" Ellie husked, \"Imagine how you'll feel when I finally get you into bed...\"\n\n\"Uh...\"\n\nShe chuckled again before dropping her voice by half an octave, \"I have all sorts of plans for us tonight. So hurry up.\"\n\nWith only self-interest in mind, I texted my dad to postpone our dinner plans.\n\n{RJ} Move dinner to tmrw?\n\n{Dad} Sure. Why?\n\n{RJ} Seeing Ellie tonight.\n\n{Dad} Good. Bring her tomorrow?\n\nI paused for a nano-second. I'd off-handedly mentioned Ellie to my father a couple times before and I wondered if a dinner together would be premature. He apparently didn't think so.\n\n{RJ} Ok.\n\nDad texted me back a thumbs-up, and not for the first time, I wondered who taught him how to use emoticons. His facility with his new smartphone has improved exponentially in recent memory, and I was certainly not complaining. I used to wait impatiently as the never-ending \"Dad is typing\" notification sat unchanging on my screen, only to have a measly three-word sentence arrive at the end of the wait. But that mystery would have to wait for another day... I had my \"boss\" to deal with.\n\nMona raised an inquisitive eyebrow when I walked into work. She looked me up and down, \"Welcome back to Win-B! Not too shabby for someone who stepped off a flight an hour ago.\"\n\nI shrugged, \"Took a shower in the gym downstairs. What are you grinning at?\"\n\nShe followed me into my office, \"Nothing. I'm surprised you're here...\"\n\n\"I took the red-eye and the Management Committee meeting is in...\" I looked at my watch, \"...fifteen minutes, and I'm back to back until my meeting with you! What did you think I was going to do?\"\n\nHer grin split wide open, \"Oh, I don't know, go running into the arms of one Lauren Calder?\"\n\nI tried to wave her off, \"Oh... WILL. YOU. STOP. SMILING like that??!!!\"\n\nMona let out a loud laugh, \"It's too easy! I've never seen you like this. Sonya called me, by the way, told me you've gone cuckoo-for-cocoa-puffs for that woman. I had to agree: Every time we had a check-in call while you were gone, you always found a way to mention Lauren somehow...\"\n\nI didn't know I did that! \"I did?!\"\n\nMona laughed again, \"Yes, RJ. You did. Which is why I thought there was a chance you'd play hooky today.\"\n\nI lasered her with a look, \"Are you giving me the okay to play hooky?\"\n\nMona shook her head, \"Not on the day of a Management Committee meeting. Although I did suggest to Denise that she should schedule everything before two p.m. for you today. What you do with that arrangement is up to you...\"\n\nI stared at her. That was when she winked at me, patted me on the shoulder and walked out, chuckling to herself.\n\nMona started laughing at me again later in the day when we met to talk budgets. Let's just say I was having a hard time focusing. She was about to zing me with something snarky when Denise, my assistant, knocked on the door, \"Mona, Lauren Calder's on RJ's line but asked to be transferred to you.\"\n\nMy heart started pounding. Ellie's calling Mona?\n\n\"Sure, patch her through,\" Mona nodded her thanks to Denise.\n\nWe both stared at the polycom on her desk, waiting for it to ring.\n\nMona picked up the call the moment the speakerphone trilled. She looked like a Cheshire cat that had suddenly discovered a particularly plump mouse under her paw, \"Hi Lauren!\"\n\n\"Hey Mona!\" Ellie replied.\n\n\"Everything okay?\"\n\n\"Yes,\" Ellie sounded totally professional, \"May I speak to RJ for a sec?\"\n\n\"Of course!\" Mona picked up the handset of the phone on her desk and handed it to me.\n\n\"Hi, Ellie,\" I saw Mona watching me closely.\n\n\"Am I off speaker?\" Ellie asked.\n\nI looked over at the polycom; its lights were off, \"Uh, yes, you are. You okay?\"\n\n\"Mm-hmmm. I have three things for you. You ready?\"\n\n\"Yes.\" Where's she going with this?\n\n\"First: Do you still have my apartment keys?\"\n\n\"Yes, why--\"\n\n\"Good. The second thing is, the doctor says I am officially boot-free; I just got home from seeing her.\"\n\nEllie had hurt her ankle pretty badly before I left (one of the reasons more amorous activities were postponed), and I was happy to hear that the boot was off and she was on the mend, \"Hey! That's great, what's--\"\n\n\"And the third thing is, I'm ready to have sex now.\"\n\nHer words echoed in my head for god knows how long, accompanied by enticing images that stunned me into silence.\n\n\"RJ? You still there?\" I could hear her smiling as she asked that.\n\n\"Uh, yes am,\" I blurted out. When I saw Mona lean back in her chair and cross her arms, I cleared my throat and tried again, \"I mean, yes, I am.\"\n\n\"Well?\" Ellie's voice was gentle, seductive.\n\nI rubbed my eyes and tried not to look at Mona, who was enjoying this way too much, \"Uh, I agree with what you said, I get what you mean.\"\n\n\"So you'll come over now?\"\n\nFuck it. I'm done with work today. \"You bet.\"\n\n\"Bye RJ...\"\n\nI held the phone to my ear long after Ellie hung up.\n\n\"Everything okay, RJ?\" Mona asked slyly.\n\nI handed the phone back to her, and grinned, \"Yep. I'm going to move some meetings around in my calendar.\"\n\n\"Eating out for lunch?\" Mona crossed her arms again.\n\nI picked up my stuff, the innuendo of her question wasn't lost on me, \"Yes... and probably for dinner, too.\"\n\n\"No need to brag,\" Mona teased.\n\nI feigned indignation, \"Not bragging... simply stating the facts, ma'am!\"\n\n\"RJ, do you know what you're doing?\" Without warning, Mona's tone turned steely.\n\n\"No, not really... But I know how I feel,\" I stared at the carpet tiles, \"Ellie is different.\"\n\n\"She's straight, you mean?\"\n\nI shook my head firmly, \"No. It's not that--\"\n\n\"Because I can understand the thrill of the chase and all that... especially the idea of seducing a straight woman to fall into bed with you... \"\n\nI bristled at what she was implying, \"It's not like that, Mona.\"\n\n\"What's it like, RJ?\"\n\n\"It's... it's,\" I looked around the room, trying to find the words, \"It's like everything works when it comes to her. All five steps.\"\n\nMona sat up and stared at me, \"What do you mean, five steps?\"\n\n\"Sonya told me there were five steps for long-term relationships... love, co-habitation, marriage. Don't you know this? You've been married for like, forever!\"\n\n\"I don't understand the words coming out of your mouth,\" Mona said slowly.\n\n\"I'm saying I'm in love with her.\" There, I said it out loud. It felt good to say it.\n\nMona's jaw dropped and her eyebrows flew up, \"Already?! Is it mutual?\"\n\nMona always knew how to cut to the chase. My eyes returned to the carpet tiles for a while before looking back up at her, \"I don't know. I think so. I hope so.\"\n\nMona shook her head, \"I guess you can teach an old dog new tricks...\"\n\n\"Very funny, Mona,\" I looked at my watch. Ellie's waiting.\n\n\"I get the hint. Fine. Go. Say 'hi' to Lauren for me,\" she waved me away.\n\nI trotted back to my office, grabbed my suitcase, and asked Denise to reschedule the rest of my meetings as I headed out.\n\nDid that phone call from Ellie really happen? I'd never been summoned to a woman's bed quite like that before. I liked it. A lot.\n\nA short cab ride later, I made my way into her apartment. I headed straight to her room, where I found her, fully nude, waiting for me. I liked that a lot, too.\n\n\"Hi,\" she said beguilingly as she reclined on her bed and opened her legs. There's that 'hi' again. More importantly, my eyes were swallowing whole the sight of the beautiful woman in front of me.\n\nI think I momentarily acquired teleportation powers because one second, I was by her bedroom door, and the next, I was on top of her. I couldn't quite believe it was happening. I almost didn't know where to touch or kiss her first, so I started from the top and worked my way down. For the first time in a long while, I felt a pang of anxiety. I wanted to make her feel good, I wanted her to like being with me.\n\nEllie helped me brush any apprehension aside. The moment her mouth engaged with mine, my brain shifted happily into pure wish fulfillment mode and went along for the ride. Maybe it was because we'd been forced to wait, but every little thing was heightened for me. For us. Wherever I touched her, I felt her touching me back (not in the prosaic sense of our skin touching, but in the science-fiction-y mind meld sense of nerve-endings embracing). It was a revelatory feedback loop that was nothing like I'd experienced before.\n\nI kept thinking I was dreaming the whole damned thing, and yet it was real. Ellie was beautiful, arousing, and an incredibly passionate lover. I'd never been able to articulate my 'type' before and now I knew why -- because even my wildest fantasies I wouldn't have been able to conjure up the person in bed with me: a miraculous alchemy of brains, sinew and flesh; busty, leggy, intellectual and athletic, all rolled into one.\n\nWe fell asleep hours later, our arms and legs all tangled up and our bodies pressed together. I told her that I loved her, over and over again as we drifted off to sleep.\n\n<p align=\"center\">\nIf not for you \nBabe, I'd lay awake all night\nWait for the mornin' light\nTo shine in through\nBut it would not be new\nIf not for you\nIf Not For You, Bob Dylan</p>\n\n\nChapter 2: Lay Lady Lay\n\nIn the semi-darkness of the new morning, I looked over at Ellie and knew that something else was different -- I had no desire to leave the warmth of the woman next to me. In the past, I'd always felt a certain distance after spending the night with someone. Sex had always been physical connections that were more than satisfactory, and I honestly thought I didn't need anything more. Last night proved me wrong. The feeling was hard to put into words (something that was happening a lot lately).\n\nI ran my fingers down the midline of her nose and lightly brushed her lips. My heart felt like it was buckling under the magnitude of her presence. I loved her, I knew that and had told her so. I just didn't know what was supposed to come next. I retracted my hand, suddenly unsure.\n\nShe opened her eyes, \"You're still here.\"\n\nFirst, I loved her voice in the morning: it had a low rumble to it that I hadn't expected. Second, I hated that she thought I might not have stayed.\n\n\"Yes.\" It was all I could get my mouth to say; my brain stalled when she smiled. Oh, so this is what comes next... realizing that I am completely at her mercy...\n\nShe studied me for a moment, \"Honey, are you freaking out?\"\n\nI opened my mouth but my voice froze. She called me 'honey,' it was sublime and made me immediately crave hearing it again. The fact that she could tell I was feeling uncertain was terrifying and comforting all at the same time. For lack of any other thing to do, I went with honesty and nodded my head.\n\nShe tucked some hair behind her ear. I tried not to get too distracted by the now-exposed skin of her neck. She shifted her weight onto her elbow so her face was level with mine. I tried not to stare at the way her breasts moved. It proved very difficult to do -- they were mesmerizing.\n\nHer eyebrows lifted as her eyes caught my lustful glance, \"You can look at those later. I have a couple yes/no questions. Ready?\"\n\nI nodded. Yep. Completely at her mercy.\n\n\"Do you regret what happened last night?\"\n\n\"No.\"\n\n\"Me neither. Do you want to keep having sex with me?\"\n\nHow does she manage to say exactly the thing that makes my clit pulse? \"Yes.\"\n\n\"Me too. Do you still love me?\" Her fingers traced a path down the side of my cheek.\n\n\"Yes.\" Yes. Definitely. Definitely.\n\nShe leaned in and kissed me, \"Good. I still love you, too.\"\n\n\"I don't really know what I'm supposed to do next,\" I murmur against her lips.\n\nShe tilted her head back and smiled, \"Then we'll figure it out together. I have no idea what I'm supposed to do next either. This is my first time waking up with a woman in my bed.\"\n\n\"So how come you're not freaking out?\"\n\nEllie rolled on top of me, \"Because I'm enjoying this far too much.\"\n\n\"Is it really that simple?\" Her breasts felt perfect all mashed up against mine.\n\n\"No, but again, I'm enjoying this far too much to want to do anything else.\"\n\nGood point. I rolled back on top and answered her with a kiss.\n\n\"What time,\" Ellie said between kisses, \"are you going into work today?\"\n\n\"Hm?\" I didn't want to stop kissing her.\n\n\"Work,\" she said again as she nuzzled my neck, \"What time?\"\n\nMy brain reluctantly engaged her question, \"Hm...\" I felt the breath from her nose on my earlobe as her teeth nicked it gently.\n\n\"The usual eight a.m.?\" Ellie's warm voice caressed my ear. -pulse- She just did it again...\n\nI closed my eyes and moaned. Her tongue had darted out and zapped my skin. -pulse- Holy shit, is this what morning-after foreplay is like?\n\nShe chuckled, \"RJ, breathe. Are you freaking out again?\"\n\nHell, no. As an answer, I trailed my fingers down her neck, through the deep valley between her breasts, over her stomach, and finally rested them on the warm cleft of her sex. Ellie sighed and shifted under me. My fingers sank into her opening and pressed gently against her clit. My eyes lingered on that sight as my fingers began a slow loop of a caress and I heard Ellie sigh again.\n\nI looked up and saw that her seductive smile was back.\n\n\"I like waking up with you,\" she whispered, her hips slowly moving against my fingers.\n\nI nodded my head, \"Me too.\" I leaned in and kissed her, my fingers tipping back and forth over her clit.\n\nThe ragged breath she let out spurred me to skip the formalities and feast on her arousal. She tasted perfect. Ellie moaned, deep and low. She placed her hand on my forearm and pushed it lower, \"Inside...\"\n\nI obeyed. She writhed, and moaned, and shuddered, and throbbed. I loved hearing the sounds she made.\n\n\"Holy shit, holy shit,\" she panted, \"RJ... yes! Yes!\"\n\nMoments later, I felt her whole body release as she came.\n\nI crawled up and she wrapped herself around me, \"Hmmm,\" she sighed, \"I said it last night and I'll say it again: this gay sex business is a keeper.\"\n\nI laughed. I felt her drop her hand lower and gasped when her fingers began a masterful assault on my clit.\n\n\"Ffff-uuuuuck...\" I breathed out.\n\n\"You like this?\" Ellie breathed into my ear, \"Does this feel good?\"\n\nWhatever novice hesitation she may have had last night was gone and she was playing me like a pro. I held her tighter and tried to remember to breathe.\n\n\"Seems like you like it,\" Ellie's fingers were strumming me hard, \"Do you like it?\"\n\n\"Yesssssssssssssssss,\" I said, the effects of her voice and her touch slaying me with an intensity I could barely absorb.\n\nWhen I finally opened my eyes, her eyes were roaming all over me, part curious, part hungry, \"I didn't know I could do that!\"\n\nI smiled, \"I think you did that multiple times last night.\"\n\nEllie bit her bottom lip and shook her head, \"No, last night I was trying to figure stuff out.\"\n\n\"So you think you've figured me out?\" I squinted my eyes at her.\n\nShe shook her head, her blonde tresses dancing, \"No, I meant I'm only beginning to understand what I can do to this delicious body of yours. It's a particularly pleasurable experience, making a stoic handsome woman like you melt under my fingers...\"\n\n-pulse- I felt myself blush, \"You like that I'm...'handsome'?\"\n\n\"I like sooo much more than that about you... but I'm starting to appreciate the uniquely enticing virtues of being with you: you're so very handsome, strong, chivalrous, sexy, but all woman. It's pressing all the right buttons for me. It's kind of the best of both worlds...\"\n\n-pulse- \"This is all yours. All five foot ten of me.\"\n\n\"Lucky, lucky me,\" she closed her eyes as I kissed her.\n\nAny motivation I could have mustered to leave her bed faded with every flick of her tongue against mine. All I wanted to do was keep kissing her. Naturally, when my phone started buzzing somewhere underneath our pile of clothes and bedding, I suddenly developed a deep and un-ambivalent distaste for modern technology.\n\n\"Ignore it,\" I mumbled against her lips.\n\nShe tilted her head towards the clock on her bookshelf, \"Might be the London office...\"\n\nI capitalized on the opportunity and started kissing the underside of her jaw. My phone buzzed again.\n\n\"RJ,\" there was a slight warning tone in Ellie's voice, \"it might be important...\"\n\nAs if to agree with her statement, my phone buzzed one more time.\n\n\"You should get it, honey,\" Ellie breathed out slowly as I squeezed her breast.\n\n\"Goddammit!\" I leaned over and half-heartedly searched for my phone, \"Nope, sorry, can't find it.\" I grinned as I settled back on top of her, \"It's five in the morning. It can wait.\"\n\nShe grinned back. She tilted her hips up.\n\nHow is this goddess in bed with me? I pressed against her. It made her moan. I pressed in once more. I had to hear her moan again. It was highly intoxicating.\n\n\"RJ...\" Ellie panted. I flung the sheets off of us and used my knee to nudge her leg to the side. Ellie's pupils shifted as her leg submitted to my bidding. It was all the invitation my tongue needed to descend to its favorite place on earth.\n\n\"RJ...\" Ellie said again. I began to thoroughly worship her sex. I wanted to pamper every nerve ending until she couldn't speak any more.\n\nI'd like to think I succeeded. Ellie panted, and sighed, and moaned, and gripped my hair... and whimpered. Oh, that whimper completely undid me. It was insistent. It was so, so sexy. And I was the lucky, lucky, soul that got to make that sound come out of her.\n\nBy the time the red digits of her clock tipped to seven, we were spent. She was holding me and stroking my hair, whispering my name.\n\nI used to be an avowed non-cuddler. It always felt smothering. But yet there I was, absolutely blissed out lying in Ellie's arms.\n\n\"What are you thinking about?\" Ellie asked quietly.\n\nI didn't really know how to reply. Everything I could say sounded so trite.\n\n\"RJ?\" She squeezed me tight.\n\nMy stomach flipped happily.\n\n\"I'm thinking...\" I turned to face her, \"...that I want you to meet my dad. Do you, um, want to have dinner with him... and me tonight?\" Another first. I'd never invited anyone to meet him before.\n\nEllie didn't immediately answer and looked at me, her eyes shifting back and forth between mine.\n\nOh shit. I said something wrong. \"You don't have to, obviously. I mean, no pressure at all.\" I buried my face in her neck, not wanting to look at her, \"I don't know how to do this relationship stuff. Is there, like, a grace period or something before step three?\"\n\nEllie leaned back and looked at me blankly, \"Step three?\"\n\n\"Uh, when you ask someone to meet your parents...Sonya says there are five steps...\"",
        "Ellie laughed, \"You dork!\" She placed a hand on my cheek, \"I loved that you invited me. I hesitated because you looked like a deer in headlights after you asked. Do you want to maybe check with your dad first?\"\n\n\"Already did. He's all in.\"\n\n\"Well, in that case, I am, too!\" Ellie wrapped her arms and legs around me, \"Seven pm?\"\n\nI nodded. I felt so happy I could burst.\n\n\"It's really too bad you have to go to work today,\" Ellie nipped my ear.\n\nIt's really too bad I have to go to work, period. I sighed, \"I don't want to go. I want to stay with you...\"\n\nEllie's eyes widened, \"Can you stay?\"\n\nI had a sudden realization that it would be very, very, very easy for me to become Mona's worst employee ever. \"Let me check,\" I dug around the sheets again, and finally found my phone, hiding in the pocket of my pants.\n\nI scrolled through my calendar and to my disappointment, there were a number of meetings that I couldn't miss -- not to mention the two that I had postponed from yesterday. I hung my head in resignation. Ellie ruffled my hair, \"Go shower, I'll get some breakfast together.\"\n\n\"Don't wanna,\" I flopped back on the bed.\n\n\"Come on, RJ, focus,\" Ellie prodded me, \"The sooner you go to work, the sooner you'll be done.\"\n\n\"Fine,\" I surrendered to her logic. I dug into my suitcase for my travel kit and stomped into her bathroom.\n\nWhen I finished showering and brushing my teeth, she'd tidied the room a bit and was pulling her hair up into a ponytail. She'd thrown on a t-shirt and some running shorts. She looked perfect.\n\n\"How is it that you can look that good at seven thirty in the morning?\"\n\nShe kissed me on the cheek, \"Oh, you can keep talking like that for as long as you'd like.\"\n\nI pulled a fresh shirt out of my suitcase and threw it on the bed.\n\n\"Hm, you dragging your suitcase around has its benefits!\" Ellie looked on as I finished drying off my hair.\n\nI tossed my towel into her laundry hamper, \"Enjoying the view?\"\n\nTruth be told, I'd never enjoyed being someone's 'view' quite this much.\n\n\"Wild horses couldn't drag me away,\" Ellie's eyes were roaming all over my body, \"So, so yummy.\"\n\nShe let out a groan of complaint with each layer of clothing that I put on.\n\n\"Wouldn't be good form to stroll into the office naked,\" I reasoned, \"Mona wouldn't approve... Ugh, she's going to be impossible today.\"\n\nEllie shrugged, \"She's probably really happy for you, RJ. Let her have some fun. Why don't you leave your suitcase here -- swing by after work and we can leave for dinner together? Dinner's at you dad's place, yes?\"\n\nIs it really this easy? Being with someone like this? I nodded and gave her a kiss, \"Good thinking, Ellie.\"\n\nThat kiss begged for another kiss, which begged for a longer kiss, which begged for a deeper kiss.\n\n\"You're...\" kiss \"going...\" kiss \"to be late,\" Ellie panted as her tongue snaked around mine.\n\nI didn't care. I reached up under her shirt and palmed her breast.\n\nShe grabbed my wrist and pulled away, \"RJ...\" her eyes were lidded with arousal.\n\nI went for her breast again and she tightened her grip on my wrist, \"Seriously RJ, you do that and I'm going to have to wrap my thighs around your face.\"\n\nI had no idea how I managed to get to work or get through any of my meetings that day. Ellie kept sending me texts that left me in a daze. I was right about one thing: Mona was all over me like a pig on shit. She asked about my night with Ellie (I gave her nothing), she asked why I kept checking my phone (I lied and said I wasn't), she asked if I was sexting (I acted like I was horrified at the suggestion), she asked if my dad knew about Ellie (I answered in the affirmative).\n\nBetween Ellie's interruptions and Mona's constant interrogation, I slogged through my inbox, met with various people on forgettable topics, and made a good dent in reviewing the immense stack of reports on my desk. Thankfully, time passed as it always did, and I felt no compunction shutting down my computer and leaving a little earlier than usual. Just as the screen powered down, I sensed someone hovering outside my office.\n\n\"Going so soon?\" Mona leaned against the frame of my office door. I nodded as I pulled my suit jacket off the back of my chair.\n\n\"I don't think I've ever been this productive before,\" I smiled, \"I sent you the final budget-to-actuals for all the teams year to date, and Peter has them too. The bonus accruals are looking good. Oliver did a good job pulling it together.\"\n\n\"What's the hurry?\" Mona smirked.\n\n\"Ellie's coming to dinner with my dad tonight,\" I put my jacket on, \"I'm going to go by her place to pick her up now.\"\n\nMona inclined her head and spoke very slowly, \"You... taking Lauren to meet your dad... really?\"\n\nI nodded slowly, \"Yes, really.\"\n\nMona whistled quietly.\n\n\"What?\" I started to feel defensive.\n\n\"Nothing bad, RJ,\" Mona shook her head, \"I have one thing to say and I need you to hear it, okay?\"\n\n\"Okay,\" I leaned against my desk.\n\nMona let out a slow breath, \"I've known you for years, and one of the things that I've had to adjust to is your ability to go from hot to cold without warning. I mean, we're friends, so it doesn't feel as jarring when you pull one of your radio-silence acts. I guess I'm simply asking you to be aware of that. You and Lauren have been orbiting around each other for months now. She doesn't know what it's like when you lose interest.\"\n\n\"I'm NOT going to lose interest in her!\" I crossed my arms.\n\n\"Ok, RJ. I'm happy for you, I really am. Just... be careful. With yourself. And with Lauren.\"\n\nShe and I looked at each other; I knew she meant well, \"I promise,\" I finally said. She gave me a quick hug and I headed out. I texted Ellie that I was on my way, and she had the door open when I arrived at her place. She jumped onto me, arms and legs squeezing tight.\n\n\"I've missed you,\" she exhaled deeply.\n\n\"I've missed you too,\" I happily kissed her back when her lips found mine.\n\n\"Woah! How about you guys NOT mounting each other in public?\" Ian strolled into the entryway with a smile on his face. Ian was Ellie's best friend and roommate.\n\nI carried her in and kicked the door shut, \"Hey Ian!\"\n\nHe chuckled, \"Welcome back, RJ.\"\n\n\"It's good to be back,\" I squeezed Ellie tight, \"Ellie, we should get going.\"\n\nShe lowered her legs, \"I'll get your suitcase, sweetie, one sec.\" She trotted off into her room.\n\nIan tilted his head, \"She's mad about you.\"\n\n\"Good,\" I grinned (I was grinning a lot these days), \"I'm crazy about her, too.\"\n\nIan nodded, \"Don't fuck it up.\" His friendly gaze sharpened. Oh come on, another lecture?\n\nI smiled and nodded, \"I won't.\"\n\nHe didn't smile, \"I mean it.\"\n\n\"Ready, RJ?\" Ellie returned before I could respond to Ian.\n\n\"Yeah,\" I said. I looked back at Ian, who was still holding me in his stare. I nodded earnestly at him, hoping he would understand. He nodded back, \"Have fun you guys.\"\n\nI was turning over Ian's words in my head as we grabbed a cab to my place. Ellie laced her fingers between mine, \"What's up, RJ?\"\n\nI scrunched up my face, \"Nervous.\"\n\n\"About me meeting your dad?\"\n\n\"No,\" I shook my head, \"Surprisingly, no. I'm... I'm nervous about fucking this up. I don't want to fuck it up, but I really don't know what I'm doing. People keep reminding me of that. And it's true.\" Am I even making sense?\n\n\"Honey, stop thinking about it like it's an instruction manual. What do you think this is supposed to be?\" Ellie stroked the back of my hand.\n\nI scrunched up my face again, \"I don't know. Two people in love... being together? I guess?\"\n\n\"And what does 'being together' mean to you?\"\n\n\"Uh, two people who want to be together doing things together.\"\n\n\"Completely unromantic, but incredibly on point. I think we're doing perfectly fine so far,\" she gave me a peck on the cheek.\n\n\"So why are people making such a big deal out of it? I'm tired of the disapproving lectures.\"\n\n\"You've been saying you don't like stuff like this, are you surprised people are surprised?\"\n\nI grunted in frustration, \"Doesn't mean I don't like it now.\"\n\n\"I know that, RJ,\" Ellie smiled, \"I know what it feels like when you kiss me. But they don't.\"\n\n\"I am NOT kissing Mona. Or Ian. Or Sonya.\"\n\nEllie laughed, \"You'd better not. Come on, let's go.\" She gave my hand a kiss as the cab slowed to a stop outside my building.\n\nWe stepped out of the taxi, and the cabbie unceremoniously threw my suitcase onto the sidewalk before he sped off. I went to grab it and when I looked back up, Ellie was smoothing down her shirt. Her back was arched a little, and I stood here, unable to tear my eyes away, knowing what lay beneath the layers of clothing.\n\nShe glanced over and blushed, \"I love it when you look at me like that.\"\n\n\"Hm?\" I was still in a fog.\n\n\"When you look at me like that, it feels like your eyes are making my clothes fall off.\"\n\nI felt myself redden; she wasn't far from the truth, \"I like looking at you like that,\" I took her hand, \"You knock me out.\"\n\nShe flashed me a smile. I cleared my throat, a little embarrassed about how stupidly into her I was, \"Come on, let's go in.\"\n\nJoey, our doorman, flung open the door when he saw us approach, \"RJ! Welcome back!\"\n\nI saw his eyes flick down quickly to our interlocked hands and back up again.\n\n\"Joey, this is Lauren Calder. Ellie, this is Joey.\"\n\n\"Nice to meet you,\" Ellie shook his hand.\n\n\"Uh, Joey, can you please get a card key for her?\"\n\nJoey nodded emphatically, \"You got it, RJ.\"\n\n\"Thanks,\" I turned and guided Ellie towards the elevators.\n\n\"What's the card key for?\"\n\nI took a deep breath. I hadn't really thought it through, I realized, but it was too late to dodge the truth now, \"It's for the top part of this building.\" I took out my wallet and waved it in front of the reader on the elevator's control panel. A door popped open and I punched the button for the seventh floor.\n\nEllie's eyes quickly took stock of the control panel. There were buttons for the first five floors on the panel, and if you didn't know the hidden panel existed, it would look like the building only had five floors. The hidden panel contained another four buttons.\n\n\"You own this building,\" Ellie stated as she quickly worked out the logic.\n\nI nodded, \"We bought it when we sold Dad's little biotech. Retro-fitted a couple things. Now we rent out the apartments on the first five floors, and we have the other floors of the building. Meeting space on six, I'm on seven, Dad's got eight, and the roof deck's on nine.\"\n\nEllie nodded, \"Mmm-hm...\" She muttered something under her breath as the elevator opened on the seventh floor.\n\n\"Sorry?\" I held the door open for her and she stepped through.\n\n\"I said,\" Ellie exhaled, \"'My girlfriend is fucking loaded.'\"\n\nI laughed, but stopped when I saw her face, \"Wait, Ellie, are you freaking out?\"\n\n\"A little,\" she nodded. Her eyebrows furrowed, \"You probably don't have to work another day in your life, do you?\"\n\nI shrugged, \"I like working. But my salary isn't my only income.\" I pushed open the front door. We stepped in and Ellie looked around. My heart was pounding in my chest, I didn't want to have my bank account be the thing that made this thing break.\n\n\"I don't want this to be weird between us,\" she took my hand, \"It's going to take some getting used to, though.\"\n\n\"Okay,\" my heart rate decreased slightly, \"I don't want it to be weird, either.\"\n\nEllie took a deep breath, \"So we promise to talk about stuff, okay? Everything on the table. No assumptions about money stuff, ever.\"\n\n\"I promise,\" I nodded. My phone buzzed. It was a text from my dad, saying dinner was almost ready. \"We better head up.\"\n\nI took her hand and led her to interior staircase that connected the sixth floor through to the roof deck. The first thing that hit me when I opened the door to my father's apartment was the rich smell of Chinese home cooking. Ellie looked at me, \"If this is what dinner at your house is like every night, sign me up.\"\n\nI chuckled, \"No, I think Dad's pulling out all the stops. No complaints from me, either.\"\n\n\"Anything else I need to know?\"\n\nI made a face, \"I don't think so. He doesn't talk much, so don't take it personally.\"\n\n\"Like father, like daughter?\" Ellie gave my hand a squeeze.\n\nI shrugged, \"I'm a regular Chatty-Cathy compared to him. Come on in.\"\n\nWe walked into the kitchen and my father handed me a spatula, \"Finish this up, Rowan,\" he wiped his hands on a dish towel and extended a hand to Ellie.\n\nI found myself unable to object, so I dutifully turned to the wok, which was sizzling festively on the stove. I kept Ellie in my sightline. My father gave her hand a firm shake, \"William Kan. So nice of you to join us for dinner!\"\n\nShockingly, my dad kept talking: He asked Ellie about herself, told her about himself, and even gave her a mini-cultural tour of the food he'd made. If I hadn't had searing hot oil inches from my skin, I would have thought I was hallucinating.\n\nBut the pop of the oil and the smell of the pea shoots were real enough. I plated the greens and carried it over to the table. For the next hour and a bit, I was completely sidelined in the Dad and Ellie show. They chatted like long-lost friends. I found out things I didn't even know I could find out.\n\n\"You know,\" Dad mused as he offered Ellie more wine, \"we debated whether to go with Lauren or Rowan for this one.\" He pointed the bottle towards me.\n\nI lowered my chopsticks, \"You never told me that!\"\n\nMy father waved a hand, \"It never came up. Anyway. Rhiannon, Rowan's mom, made the final call. Prescient, I think. Otherwise, there'd be two Laurens at the table!\"\n\n\"Why did it come down to those two names?\" Ellie took a sip of wine.\n\n\"We wanted to find an English name that was a good transliteration of Rowan's Chinese name, which we gave her first. It was important to Rhia... and to me, that it would happen in that order.\"\n\nMy mouth was catching flies. This was as much as my father had talked about my mother in my memory. Unsurprisingly, Ellie handled it beautifully. She said just enough to acknowledge her sympathy for my mother's death but helped steer the conversation into easier territory. I felt like someone was playing emotional pinball in my head. When Ellie excused herself to go to the bathroom at the end of the meal, my father and I retreated to our customary silence.\n\n\"Dad?\" I twisted the stem of my wine glass.\n\nHe grunted.\n\n\"I liked that you told Ellie about mom.\"\n\nHe put down his wine glass gently, \"I liked it too. She's very special.\"\n\n\"Who? Mom?\"\n\n\"Yes, but that's not what I meant,\" Dad leaned forward, \"I meant Lauren. I like her a lot. And you! You're smitten. Every time you look at her, you look like a lost puppy.\"\n\nHe leaned over and squeezed my shoulder, \"I'm happy to see it.\"\n\nI took a breath, \"I liked hearing about mom, too...\" I glanced at him quickly, trying to gauge his reaction.\n\nHe squeezed my shoulder again, and let it out a long breath, \"I guess I didn't know how to go about doing it without making both of us sad. But we seem to have survived it!\"\n\nI nodded. The number of massive shifts going on was almost too much to process.\n\nThe two of us sat in silence for a little longer before my father got up and started moving stuff back into the kitchen. I did the same. When Ellie came back, the three of us finished cleaning up. It was like we'd done it this way forever. It felt new, and familiar, and scary, and just-like-home. After saying good night to my dad, we headed back downstairs, and my brain was on the verge of imploding.\n\n\"Hey,\" Ellie nudged me with her shoulder.\n\n\"Hey back,\" I nudged her in return.\n\n\"You okay?\"\n\nI collapsed onto my couch, \"Yes... well, no... that was a lot. A LOT.\" I felt tears were starting to betray me so I shut my eyes. I wanted to run. I hated crying in front of people.\n\n\"Oh, honey,\" Ellie's voice was warm. It was oddly reassuring.\n\nI thumbed away a wayward tear and looked up at her, \"I hate crying.\"\n\nA tissue magically appeared. I looked around, trying to find a tissue box, but saw none.\n\n\"I nabbed some when I went to the bathroom. You looked like your emotions were going eight rounds with the great Ali and not having an easy time of it. I figured they may come in handy.\"\n\nI could only look up at her in wonder. I smiled weakly. I was still mortified that I was losing my composure.\n\n\"I know what a big deal this was. I'm not surprised you're feeling raw.\" Ellie sat down next to me.\n\nI leaned my head on her shoulder, \"It's scary how you know all this.\"\n\nShe kissed me on my head, \"RJ, you may put on this sphinx-like demeanor -- and it works very well for you -- but one only needs to pay attention... and I very much like paying attention to you... to see  you and your big heart sitting right under the surface.\"\n\nOh.\n\n\"I like that you invited me to dinner. I liked meeting your dad. But mostly,\" Ellie leaned forward, \"I liked knowing that we have the rest of the evening to ourselves.\"\n\nI sniffed, \"I feel like an emotional wreck. Not exactly attractive.\" I wouldn't have faulted Ellie if she was looking for the nearest exit...\n\n\nShe straddled my thighs and cradled my face in her hands, \"I want to get to know you. And I want you to get to know me... I'm fairly confident the attraction factor isn't going away any time soon, even if you are a little weepy...\"\n\nI blinked a little, trying to put together the words she was saying in my head. She was making total sense, of course, I'd never talked with a lover about navigating a relationship. It felt jarring and strangely soothing, all at the same time.\n\nI tilted my head, \"So... you aren't changing your mind about us?\"\n\nA slight smile teased the corner of her mouth as she shook her head, \"No-o-o-o.\"\n\n\"Even though I am probably coming across as a little effed up?\"\n\n\"Listen, if you want effed up, come home with me for an extended-Calder family dinner. I'm usually curled up in a fetal position by hour two.\"\n\n\"What do you mean?\" It was hard for me to imagine Ellie in that much distress.\n\n\"My aunt and my father share DNA, but that's about it. I don't know why they still insist of getting together for the holidays. If you want to know my aunt's view on anything, all you have to do is take the total opposite of what my dad thinks. Family dinners usually descend into an icy silence before the turkey is even served.\"\n\n\"Okay...\" I wasn't quite seeing where she was going with this.\n\n\"So,\" she rested her forehead against mine for a beat before leaning back, \"how about we assume we each have some emotional wreckage not in plain view and go from there?\"\n\nOh. I let out a slow breath, \"Okay. I can do that.\"\n\n\"Good,\" she smiled, \"Now, I'm not saying I'm an expert at relationships, but I am saying I want to make this work with you -- if you want to make it work with me.\"\n\nAnd in that moment, I realized -- with some wonder -- that she was asking for a commitment that I was one hundred percent ready to sign up for, \"I do...\"\n\n\"Good,\" she said again before sitting up and looking at me quite seriously, \"RJ, you know we can slow this down, right? If you're feeling like this is too much...\"\n\nAbsolutely not. This may be different and destabilizing, but it was definitely not too much, \"No, no, this is good. This is good.\"\n\nThere was a beat, and then she pressed her hips, ever so gently, into me. \"How about this? Is this good?\"\n\nEllie was very close... very warm... and very distracting. I was particularly distracted by the open neck of her button-down shirt; the fabric had bent open and I followed the slope of her flesh downwards...\n\nShe leaned in and whispered in my ear, \"I think maybe you should show me your bedroom, RJ. You're undressing me with your eyes again...\"",
        "<p align=\"center\">\nLay, lady, lay,\nLay across my big brass bed\nLay, lady, lay,\nLay across my big brass bed\nWhatever colors you have in your mind\nI'll show them to you and you'll see them shine\nLay Lady Lay, Bob Dylan</p>\n\n\nChapter 3: You're Gonna Make Me Lonesome When You Go\n\n{Sonya} Happy Sunday!\n\nI groaned. I was sprawled out on Ellie's bed as she finished packing for a consulting gig in Chicago. She had a repeat client there who needed help prepping for their year-end audit every October.\n\n\"Who was that?\" Ellie grabbed two shirts from the closet and started folding them.\n\n\"Sonya,\" I muttered as I tapped back a response.\n\n{RJ} Not happy. Ellie leaving for CHI. I'll call you later.\n\n{Sonya} Boooooo. Xoxo.\n\nI threw my phone onto the bed and crossed my arms. \"Who closes their year in the third quarter?\" I grumbled as I watched her throw the last of her things into the suitcase.\n\n\"Plenty of people. And you're flying out this weekend, so it'll only be five days.\"\n\n\"That's five days too many.\"\n\n\"I'm going to call you every day and I promise you, I'll make it worth your while,\" she lifted her shirt so I could see her bra-encased breasts.\n\nThat's just not fair... I want more! \"You can make it worth my while now, if you'd come over here,\" I sat up and hooked a finger into the waistband of her pants as she walked by and tugged her onto the bed.\n\n\"RJ!\" She yelled as she fell into my arms. I went straight for her breasts.\n\nEllie laughed and then squealed when I pinched one of her nipples through her shirt, \"You LUNATIC! Stop it! Honey, I have to finish packing, otherwise I'm going to be late.\"\n\nShe was right, of course. I'd been successfully sabotaging her departure for about an hour now. I reluctantly released her. She leaned in and gave my forehead a kiss, \"You're adorable... and no one regrets it more than me that we can't roll around in bed some more.\"\n\n\"So stay! Don't go to Chicago. Come back to Win-B, there's plenty to do,\" I'd pitched this to her multiple times now. It was starting to sound pathetic.\n\n\"RJ, working there over the summer was hard enough when I was crushing out on you. It would be even more awkward now. And it would look like you hired me because we're together.\"\n\n\"Spouses work together all the time!\"\n\nThat stopped her in her tracks. Stopped me, too. I hadn't quite realized what I'd said.\n\n\"Spouses? Like married people?\" She had a hint of a smile on her face.\n\nYes! Step Five! Of course! \"Why not?\" Once more, I surprised myself by how clearly I felt about it.\n\n\"RJ, this is two months old. Don't say something you'll regret.\"\n\n\"We've known each other for almost five. Wait, are you saying you don't want to ma--\"\n\nEllie put a finger on my lips, \"No. I'm not saying that. I'm saying, THINK about it. And thinking about it in the ten minutes before I head to JFK is not the right time. Because when I say 'yes,' I want it to be crystal clear what we're both signing up for. Agreed?\"\n\nI stared at her and nodded, my mind whirring. She'd say yes!\n\nShe gave me a kiss on my lips, \"Lunatic,\" she muttered as she shifted over to the bedside table. She pulled open the drawer and tapped her index finger on her chin. She took out two of her favorite toys and slipped them into a bag before shoving it into her suitcase. I was going to enjoy thinking about her using them.\n\n\"Can you bring Thelma and Louise this weekend? They're at your place.\"\n\n\"Yes ma'am!\" I grinned. Thelma and Louise were two strap-ons that we've put to very good use. Ellie was proving to be a delightfully adventurous partner in bed, with our burgeoning collection of toys as evidence, but Thelma and Louise would always receive top billing from us.\n\nEllie zipped up her suitcase. \"Okay,\" she stated simply, \"I'd better get going.\"\n\nFrustratingly, the street was crawling with vacant taxis and Ellie hailed one almost immediately. One deliciously sloppy kiss later, she was gone.\n\nI stood on the street and watched her cab merge into uptown traffic. I called Sonya; I didn't like how much I was already feeling Ellie's absence.\n\n\"Rowan,\" Sonya was eating something crunchy.\n\nI sighed, \"She just left for the airport.\"\n\n\"Go to the gym and sweat it out,\" suggested Sonya, \"Go hone those abs.\"\n\nThat was the last thing I wanted to do, \"I think I prefer to go home and zone out.\"\n\n\"Going home and watching endless Wimbledon Finals videos won't help you feel better. Come on RJ, you used to really like your space. Take some space and go do something the old RJ would like to do.\"\n\n\"I don't want space!\"\n\n\"Are you guys still spending every night together?\"\n\nSonya was right. Ellie and I have been spending every night together, either at my place or hers. We've also been having dinner with my dad every Sunday night. Before the Chicago job, she was on a month-long consulting contract at a small non-profit with an office that was close to Win-B. We'd actually been doing our morning commute together. It was the easiest... and most profound... change I'd ever made in my day-to-day life. We were just... together.\n\n\"Not tonight...\"\n\n\"Wow RJ, if you miss her this much after five minutes apart, you'd better marry her!\"\n\nI made a face even though I knew she couldn't see me, \"I thought you said I needed to take it slow because I was bad at this stuff.\"\n\n\"Look, as a lawyer, I have an obligation to respect doubt in every argument I engage with. But that's all Doubt gets until I have proof one way or another. Same with you -- without precedent and without corroborating evidence, it's not far-fetched to respect doubt in your ability to stay in a relationship. But guess what? Everything you've told me about you and Ellie indicates growing reason to dismiss that doubt.\"\n\n\"I'm not a legal case, Sonya,\" I was being unfair, but I didn't like Ellie going away and my emotions were going sideways.\n\n\"I was only trying to tell you I think you guys are good together, geez!\"\n\n\"Except she's about to board a flight to Chicago. For a long time.\"\n\n\"Absence sharpens love, according to Thomas Fuller.\"\n\n\"Ouch,\" I deadpanned.\n\n\"So go for the grand gesture, send her some flowers at her hotel or something...\"\n\n\"Meh, that's so predictable...\" I started walking home.\n\n\"Get on the next flight and surprise her at the hotel?\"\n\n\"Can't, I promised to have dinner with Dad tonight. He's doing a keynote at Hudson U tomorrow and he wants to go over the speech with me.\"\n\n\"Oh! That reminds me -- I sent him some stuff on FZP-54. Patent expiring next year; can you make sure he reads through it?\"\n\n\"Will do. Thanks for listening to me gripe.\"\n\n\"No problem... sorry your wife is headed to Chicago.\"\n\nMy wife...!\n\nThe moment I hung up with Sonya, I called Liz, Mona's wife.\n\n\"Hello?\" Liz picked up. I heard her kids screaming in the background.\n\n\"Hi Liz, it's RJ.\"\n\n\"Oh, hey RJ, Mona's getting Milo ready for a birthday party,\" Liz snorted in disgust, \"You know, one of those stupid parties where they get your kid all hopped up on sugar and cake and return him right before dinner. I'll go get her.\"\n\n\"Uh, actually, I wanted to talk to you.\"\n\n\"Oh! Sure. Shoot.\"\n\n\"Where did you go to get Mona's engagement ring?\"\n\nWhen she didn't answer, I looked at my phone screen to make sure the call hadn't dropped.\n\n\"Liz?\"\n\n\"Yeah. Sorry. RJ, did you say, 'engagement ring'?\"\n\nI rolled my eyes, \"Yes.\"\n\n\"I thought you did. Um, I went to Greg Quinton at Quinton's Diamonds. It was a while ago, but he should remember me. He'll take care of you.\"\n\n\"Awesome! Thanks, Liz.\"\n\n\"Uh, RJ -- is there anything else you'd like to tell me?\"\n\n\"Nope!\" I grinned, \"Thanks Liz!\"\n\nOnce I confirmed that Quinton's was open, I called Ian. \"Mr. Bishop,\" I said when he picked up, \"I need your help.\"\n\nIan and Greg proved to be very capable counselors in my quest. Ian had this incredulous look on his face the entire time, as Greg brought out option after option.\n\nIan very quickly dismissed the larger diamonds, \"Lauren likes jewelry, but she'd never go for those.\"\n\n\"What about that one?\" I pointed to a square cut diamond in the middle of the tray.\n\nIan stared at it for a while, and then nodded.\n\nGreg smiled in approval and offered to show us some settings. Fifteen minutes later, we were done. Greg went into the back office to set up the order.\n\nIan turned to me, \"So when are you going to pop the question?\"\n\nI shook my head, \"I don't know yet, but I want to have it ready.\"\n\nHe nodded thoughtfully, \"She's going to love it.\"\n\n\"You think she'd say yes?\" I knew I sounded about as needy as the question itself.\n\nIan nodded and chuckled, \"Lauren marrying a woman. I would never have guessed it in a million years.\"\n\nI laughed along, \"I am holding a receipt for an engagement ring. I wouldn't have guessed that in a million years either.\"\n\nI kept staring at the receipt long after I left the store; I couldn't wait to pick it up when it was ready. Ian promised to keep the ring a secret, but I had a hard time keeping a lid on my latest purchase. Every time Ellie and I spoke on the phone, I would catch myself wanting to tell her. We talked every night, and the steady exchange of texts and emails escalated in raunchiness as the week went on.\n\nBy the time Friday rolled around, the following text pinged on my phone: {Ellie} Which would you rather: Sex in a bathroom at O'Hare or sex inthe back of a cab?\n\nI grinned and typed back, {RJ} Those are not mutually exclusive...\n\n\"What are you grinning at?\"\n\nI looked up as Mona sauntered in. She caught sight of my suitcase in the corner, \"Chicago?\"\n\n\"Flight's at seven. I need to get going,\" my phone pinged again and I smiled when I saw Ellie's reply.\n\n{Ellie} Is that a promise?\n\n\"Is the ring in the suitcase?\" Mona, Sonya, and Liz have been buzzing around the topic like bees on speed.\n\n\"No, it's not ready yet -- I'm meeting her family this weekend. One thing at a time.\"\n\n\"Makes sense. Hey -- you know that Lauren's friend said yes to catering my birthday at your place next Friday, right?\"\n\nI closed out some files on my computer, \"Yep. Ian told me. He's going to pop by the space over the weekend to scope out the kitchen.\"\n\nThe meeting space on the sixth floor of our building was something Dad needed for his pharma consulting work. With all the R&D stuff he worked on with those companies, it was good to have a large but private space in which to host people. Mona's birthday was at the end of the month, and Liz was throwing her a party. It was easy enough for me to offer them the space to use.\n\n\"Will Lauren be back in time for the party?\"\n\n\"No -- her client's taking her out to dinner Friday night, so she comes back the next morning, why?\"\n\n\"That's too bad -- it'd be good to see her.\"\n\n\"We can come over to your place when she's back,\" I suggested, as I slipped my phone charger into my suitcase.\n\n\"Good idea. Safe travels,\" Mona winked at me, \"See you Monday.\"\n\nMonday was the farthest thing from my mind as I made my way to Chicago. Ellie was waiting for me at the arrivals hall at O'Hare and we wanted each other so badly we stumbled into the nearest bathroom and locked ourselves in a stall. Her eyes were wide and slightly wild as I pushed her against the wall. Our first kiss was quiet... but deep and full. I cupped her breast with one hand, while the other one lifted her skirt and snaked upwards. My fingers pulled her underwear aside and were inside her without hesitation. I felt her grab the back of my shirt as she hitched up a leg; she gripped me harder as I started thrusting, my fingers pressing against her clit before sliding inside, just the way she liked it. It didn't take long until she gripped me hard as she came. She rested her head against the tiled wall of the stall, her chest rising and falling rapidly. \"Hmmmm,\" she exhaled.\n\nI slid out of her and tasted my fingers, \"Delicious.\"\n\n\"You,\" she reached for my belt, \"I need you.\"\n\nI watched as she unbuckled my belt and undid my pants. Her hand reached in and her fingers started rubbing. The jolts running through me were furious sparks of pleasure. I leaned forward and buried my face in her neck, \"Ellie... Ellie...\" I moaned as her fingers decimated me. We stayed like that for a while, her hand cupping my sex, and me breathing long and hard against her flesh.\n\nI couldn't tell if people had come in and out of the bathroom while we were in there, and I didn't really care.\n\n\"Hotel sex?\" Ellie said quietly in my ear.\n\nI nodded.\n\nWe giggled like teenagers as we cleaned ourselves up and headed towards the exit. We made out in the back of the car all the way to the hotel. I'd never been a fan of public displays of affection, but I couldn't help myself.\n\n\"Have a good night, ladies,\" the driver said as we stepped out. I gave him a generous tip and a five-star rating for indulging our antics. Ellie assured me it was unnecessary as he probably enjoyed the view enough to let us ride for free.\n\nWe checked in, made our way up to the room and Ellie pushed me onto the bed, \"We have brunch with my family tomorrow at ten thirty. So we've got to work up an appetite...\"\n\nI watched eagerly as she stripped. I followed suit. She leapt on me and it was paradise.\n\n\"Okay handsome, let's make up for lost time... I need you to fuck me senseless.\"\n\nYou don't have to ask me twice.\n\nThelma, Louise, and all the secrets we'd discovered about each other's erogenous zones were played and replayed in a leg-numbing loop of lovemaking well into the early hours of the morning.\n\nWe had more sex when we woke up. We were recovering from our most recent go of sixty-nining when Ellie mumbled something into my thigh.\n\n\"Hmm?\"\n\nShe shifted off me and turned around, \"Time to go...\"\n\nI leaned in and licked her nipple. \"Oh!\" Ellie sunk her fingers in my hair. I pinched her other nipple and entered her. \"Oh!\" she said again. And again. And again.\n\n\"I love making you come,\" I said, when she came down from her orgasm.\n\n\"Lunatic,\" she whispered.\n\n\"If you're saying I'm crazy about you,\" I kissed her, \"Then you'd be one hundred percent correct.\"\n\nWe arrived, late and slightly embarrassed, for brunch at her parents' house. Ellie's family didn't seem to mind. They were all so warm and welcoming it wasn't hard to immediately feel accepted as a part of the family. Her father, Jonathan, was a gregarious man who gave me a huge bear hug when I arrived; \"Call me Jon,\" he boomed. Ellie got her baby blues from him. Everything else she inherited from Celia, her mother, who was taking some croissants out of the oven when we walked into the kitchen.\n\n\"Jon, I took these out for you -- you forgot to set the timer again,\" Celia set the tray on the counter and took a sniff, \"Hmmmm, these smell delicious. I knew I married you for a reason!\"\n\nJon blushed at the compliment and it endeared him to me even more.\n\nCelia gestured to the croissants, \"Come and get 'em. RJ -- it's so nice to finally meet you!\"\n\nI couldn't believe how un-phased the entire family was about me and Ellie being together. Of course, things have changed a lot over the past several years, but it was still notable.\n\n\"We basically half-adopted Ian when his family had trouble with him being gay,\" Ellie explained, \"It would be insanity if my parents felt anything other than acceptance in terms of us being together.\"\n\nI loved spending time with the Calders and being in Ellie's childhood home.\n\n\"You must come for Thanksgiving,\" Celia, said. I think she liked that I was eating their food as if I'd been starving for days before. Which, in all honesty, was kind of true -- I'd been somewhat unsettled with Ellie's absence and more than a little nervous about this trip -- food had not been particularly appealing... and as Ellie anticipated, we'd worked up quite an appetite overnight.\n\n\"Aunt Kay would have an absolute cow, it'd be like watching a slasher movie going on in her head!\" Josh's eyes were glinting with mischief.\n\nEllie gave her older brother punch in the shoulder, \"Josh, come on!\"\n\n\"Can't you totally see it?\" Josh warmed to his theme, \"Bring Ian. You guys can be the rainbow warriors. It'll blow her mind.\" He made an explosion noise and started laughing again.\n\n\"Kay won't be coming this year,\" Jon Calder said, \"She has other plans. RJ, you're more than welcomed to come. Your father, too, if he'd like to join us.\"\n\n\"Wow, thanks for the invitation. I'll talk about it with him.\" I was stunned by their generosity, and also by the possibility of a Thanksgiving where it wasn't just my father and me. It wasn't that I didn't like Thanksgivings with my dad, it was more the fact that a big family get-together didn't even seem possible six months ago.\n\n\"I really like the idea of spending holidays with you,\" I leaned my head on Ellie's shoulder as we made our way back to the hotel after saying goodbye to the Calders.\n\n\"Me too,\" Ellie put her hand on my thigh, \"Do you think your dad would want to come?\"\n\nI pulled out my phone and shot him a text. He responded fairly quickly, and urged me to go to Thanksgiving with the Calders, but he himself demurred.\n\n{RJ} ??? I don't want to have Thanksgiving without you!\n\n{Dad} Go. I made other plans that came through recently.\n\n\"Huh,\" I frowned, \"Dad's made other plans for turkey day.\"\n\nI stared at his text, confused, \"We always spend Thanksgiving together.\"\n\n\"Maybe he has a hot date!\" Ellie wiggled her eyebrows at me.\n\n\"Unlikely... but I'll ask him,\" I tapped out a snarky rejoinder.\n\n{RJ} Hot date?\n\n {Dad} Aren't you supposed to be on a hot date yourself? Stop neglecting your girlfriend.\n\nI showed Ellie his reply. She whistled, \"He answered a question with a question. RJ, I think your dad's met someone!\"\n\nIt took a couple seconds for that idea to sink in... and when it did, it all made sense.\n\n\"Sneaky ninja!\" I shook my head incredulously, \"That's why he's all text-savvy all of a sudden. His new girlfriend's been the one getting him emoji-ed up! I can't believe he's been dating her in secret! Holy shit, they were probably together on New Year's Day! When I called him and he sounded weird. He wasn't going senile. He was... he was probably...\"\n\nI looked at Ellie. She nodded as she laughed, \"Yeah, probably.\"\n\n\"I can't believe he didn't tell me!\"\n\n\"Easy there, hotshot...\" Ellie squeezed my thigh, \"Slow it down. He'll tell you when he's ready... it's gotta be a big deal for him, you know?\"\n\nIt's a big fricking deal for me, too!\n\n\"Come on,\" Ellie tilted her head and pushed open the car door, \"I'll help you take your mind off it.\"\n\nOh! I scrambled out of the car and almost forgot to thank the driver. Ellie started to walk into the hotel lobby and her body was detonating mini-pheromone bombs with every step. I caught up with her at the elevators and pulled her into a tight embrace, \"You need to WARN me before you strut around like that. It makes it really difficult for me not do something completely inappropriate.\"\n\nShe chuckled, \"Whatever do you mean, RJ?\"\n\nThe elevator doors opened, and we tumbled in, \"I mean, Lauren Elizabeth Calder, when you walk around like that, it makes me want to pick you up, caveman-like, and take you to bed.\"\n\nShe turned to me with a sexy grin and casually draped her arms over my shoulders, \"If you ever show up in nothing but a loin cloth, I'd open my legs for you -- I wouldn't care where we were or who we're with.\"\n\n-pulse- Holy shit I love this woman. I think I made a sound that was a mix of a cough and a sputter. It was a miracle that we didn't give hotel security an eyeful in that elevator; when we got to the eleventh floor, Ellie's eyes were a stormy blue... and all I could think was I can't believe this is real... and where does one procure a loincloth in Chicago? We had barely crossed the threshold of the room before she slammed me against the wall and clamped her lips over mine. Holy shit I love this woman.",
        "Ellie's kissing skills were off-the-charts amazing: Wet, but not sloppy... aggressive, but not pushy... It wouldn't be hard to contemplate an entire day of non-stop making out. But I was still digging out of my week's worth of deprivation from Ellie's touch, and more urgently, the idea of throwing her over my shoulder was far too enticing to ignore.\n\nShe squealed with delight as I picked her up. I grabbed Thelma from my duffle bag and started unbuckling my belt. Thelma was our red strap-on, so named because it was, well, a redhead, and also because the first time I fucked Ellie with it, she kept shouting, \"Keep going!\" It only stood to reason that Thelma's blue counterpart would be dubbed Louise.\n\nEllie gasped with approval as I threw her on the bed, stripped and stepped into the harness. I joined her on the bed and ran my hand up her skirt.\n\n\"Looking for something?\" She smiled wickedly.\n\nI paused. \"Underwear,\" I muttered, stating the obvious.\n\n\"Underwear... ah, yes,\" she wiggled her eyebrows, \"That would be a consideration... if I were wearing any.\"\n\n-pulse- My heart skipped several beats and I coasted my hand from the side of her hips to the crest of her mound. She opened her legs and pressed into my palm, \"Come on, RJ, what are you waiting for?\"\n\nI didn't bother taking any of her clothes off. I pushed in and started with a slow, but deep rhythm. I didn't want to give her what I knew she wanted -- not yet. I wanted to scrape the cock against every nerve ending she had inside. Ellie made slow, soft moans in response.\n\n\"Oh god, you feel so good RJ... harder, please, harder.\"\n\nNot yet.\n\n\"RJ...\" her plea became more urgent, \"More... harder...\"\n\nI pulled out and paused for a second. Our eyes met.\n\n\"Please, RJ...\"\n\nI plunged in. Hard.\n\n\"OH!\" She shouted.\n\nI did it again. I did it multiple more times. And it felt so good.\n\nAs Ellie started to tense, I rolled us over so she was on top. She loved riding me, and I loved her riding me. And a fully-clothed Ellie riding me into a massive orgasm was pretty mind-blowing to watch. I reached for her clit with both of my thumbs and rolled it between them. She started shaking with pleasure and I flicked my thumbs faster. God, I loved making this woman come.\n\n\"Holy shit holy shit holy shit holy shit...\" she squeaked. She doubled down on her thrusts downward, and I lost awareness of my limbs as she took me with her.\n\nAnd then she collapsed on top of me, blonde hair flying, shirt all mussed up, her skirt a parachute of heat and sex that billowed around our bodies.\n\n\"Hmmm...\" she whispered in my ear, \"I love you so much.\"\n\n\"I love you, too,\" I stroked her hair off her face, \"I feel so lucky.\"\n\nEllie kissed me, \"You haven't tried my cooking. It's awful. You may yet change your tune.\"\n\nI laughed, \"Ian already warned me. But if I must live off dry toast and water for the rest of my life in order to be with you, it would be fine with me.\"\n\n\"Such chivalry,\" Ellie clicked her tongue, \"I suppose I'll need to reward you somehow...\"\n\nMy breaths shortened in anticipation of her touch. She discarded my harness with great efficiency, and when her tongue descended on my clit, I realized -- with a thrill that was equal parts joy and terror -- that I was done for... because there would be no coming back from the emptiness I would feel without her by my side...\n\nHer tongue swept up those thoughts and chased them away with masterful swirls of seduction. I willingly let myself get lost in her love for me.\n\n<p align=\"center\">\nI've seen love go by my door\nIt's never been this close before\nNever been so easy or so slow\nI've been shooting in the dark too long\nWhen somethin's not right it's wrong\nYou're gonna make me lonesome when you go.\nYou're Gonna Make Me Lonesome When You Go, Bob Dylan</p>\n\n\nChapter 4: Idiot Wind\n\n\"Sorry!\" I strode into my office.\n\nLiz got up and gave me a hug, \"I just got here myself.\"\n\nI reached into my messenger bag and fished out a card key, \"Here you go - gives you access to the elevator and to the sixth-floor entryway. Ian already has one, and I told the doorman that you'd give him the guest list later this afternoon.\"\n\n\"Awesome,\" Liz took the card key, \"You'll be there, right?\"\n\n\"Yep,\" I nodded, \"Wouldn't miss it for the world.\"\n\nLiz gave me a quick kiss on the cheek, \"Thanks, RJ, I better run.\"\n\n\"See you tonight,\" I gave her a quick salute.\n\nLiz stopped short at the door and turned around, \"Oh. Um, Alice will be stopping by at the party tonight.\"\n\nI raised an eyebrow, \"Alice... as in Alice Ray?\"\n\nLiz nodded.\n\nAlice and I had an on-again, off-again friend-with-benefits arrangement that ended several years ago. It had been mutually convenient, and it served its purpose during its time. But when Alice moved to Paris for work, she met someone there and we eventually lost touch.\n\n\"What's she doing in New York? I thought she was in France?\"\n\n\"I think she's moving back to the States.\"\n\n\"Hm. It'd be nice to see her, I guess.\"\n\nLiz crossed her arms, \"Nice? You guys were so hot and heavy we all thought she was the one!\"\n\n\"She wasn't,\" I said emphatically, \"Neither one of us was looking for a commitment.\"\n\nAlice and I had been birds of a feather. There was attraction, sure, but there had never been any interest in anything other than really good sex when we happened to be in the same city. We never talked about any relationship stuff. Alice worked for a global hotel conglomerate, and even though she was based in San Francisco, jetted off to various projects around the world at a pretty regular clip... hence the on-again, off-again component.\n\n\"Well, she's coming by. She's very interested to know what you've been up to.\"\n\nI frowned, \"Why? We haven't been in touch for years!\"\n\n\"She said she wants to pick up where you guys left off... but I told her it was probably not in the cards.\"\n\n\"Yeah, definitely not gonna happen,\" I shook my head.\n\nLiz gave a quiet whistle, \"RJ -- don't take this the wrong way, but why not Alice or any of the others? I mean, Lauren's great -- Mona and I both love her to death... but it's not like you were dating losers before.\"\n\nI felt irritated, having to continually explain myself to my friends, \"I wish you guys would stop treating this like I had a lobotomy or something. I didn't like dating. Period. I didn't think I'd fall in love. Maybe it's because I wasn't ready, maybe it's because of any number of other things. Who cares? Doesn't mean I can't change my mind, right?\"\n\n\"Of course not,\" Liz's tone was gentler, \"But RJ, you went from one hundred percent commitment-phobic to getting an engagement ring! You can see why we are all a little confused, right? We're trying to understand...\"\n\n\"I guess you'll all have to wait and see if I fuck this up, won't you?\" I snapped.\n\nLiz waved a hand, \"Oh come on, RJ! Don't be so touchy. No one needs you to prove anything to anyone! Sheesh! I thought I'd tell you about Alice so you wouldn't be caught off guard when she shows up at the party.\"\n\nThat was just the beginning of my terrible mood. I was getting sick of people looking incredulous when I talked about Ellie. It didn't help when Ellie called me from her client's office in Chicago to tell me someone spilled water all over her stuff and essentially drowned her phone and laptop.\n\n\"Mom said there's a guy she knows who can revive dead phones. So I'll give it a go, thank god everything's backed up. Dad has a spare, so I'll swap the SIM out later tonight when I go over to their place. The laptop will have to wait.\"\n\n\"That sucks,\" I grumbled. I didn't like not being able to get in touch with her.\n\n\"RJ, what's up? You're not really getting all cranky over my dead phone, right?\"\n\nI rolled my eyes, \"I hate people.\"\n\nShe sighed sympathetically, \"More misanthropic than usual?\"\n\n\"I miss you. And people all think I suck at this.\"\n\n\"What do you mean?\"\n\nI clicked the cap of my pen on and off, \"Mona reminded me that it's been almost three months that you and I have been together. Apparently, I am about to phase into the freak-out zone and come to the realization that I actually still hate relationships.\"\n\n\"She said that?\"\n\n\"No,\" I mumbled, \"But I know that's what she was thinking. Liz said something similar. It's beyond irritating.\"\n\n\"I say let them think whatever they want. Seriously -- it doesn't matter. I know you love me, and I love you.\"\n\n\"Come back tonight,\" I knew I was whining.\n\n\"RJ, we've made it work for four weeks, we can hang on for one more night.\"\n\nI heard my inbox notification sound, \"Okay,\" I said as I looked at my screen. My heart jumped. It was an email from Greg Quinton saying Ellie's ring was ready. My mood shifted immediately.\n\n\"RJ?\"\n\n\"Yeah!\" I grinned, \"Okay. I got it. Ellie, I have to go.\"\n\n\"You okay?\"\n\n\"Yeah, sorry, there's an email I need to deal with. I'm good. Really.\"\n\n\"Okay. Don't mope around so much. Have fun at Mona's party tonight! I love you.\"\n\n\"I love you too. Let me know once you have a cell phone again, ok?\"\n\nEllie hung up and I practically ran out of the office to Quinton's.\n\nI gripped the small velvet box in both my hands all the way home. Greg did a great job and I couldn't wait to show Ellie.\n\nI set the box on my bedside table, but I couldn't leave it alone. I opened it, closed it, opened it again. I thought about the hundred different ways I could ask her and about the hundred different ways she could respond. When Joey called from downstairs to say that the guests were starting to arrive, I realized I'd completely forgotten to get ready.\n\n\"Jesus!\" I stepped out of my work clothes and was about to change when my phone rang. Ellie!\n\n\"Hey!\" I glanced over at the ring box.\n\n\"Hi babe,\" Ellie said, \"Dad can't find his spare phone. He's turning the house upside down, but I have a feeling mom tossed it and forgot to tell him.\"\n\n\"I'll have to be okay with waiting to see you tomorrow, then.\"\n\n\"Flight's at 6:10, so I'll be at your place by 11:00 latest... Hey, aren't you supposed to be at Mona's thing?\"\n\n\"I lost track of time. I was about to change when you called.\"\n\n\"Are you naked?\"\n\n-pulse- \"I'm in my underwear.\"\n\n\"Sounds delicious. It's making me wiggly. I'm sitting in my parents' kitchen, so no funny business.\"\n\nI chuckled, \"I wish you were here.\"\n\n\"Me too. Now go get dressed and play host. I'll call you after my dinner.\"\n\n\"Okay. I love you.\"\n\nI dropped my phone onto the bed and got dressed. There were about a dozen people at the party already when I arrived. Mona was surrounded by four or five of them, champagne flute in hand. Liz was fussing around, and Ian was clanging away in the kitchen.\n\nI went over and wished Mona a happy birthday. \"RJ! Thank you so much for letting us do this here -- it's amazing!\"\n\n\"No sweat,\" I smiled. I saw a couple friends from work and spent some time with them before we all sat down to dinner. Ian outdid himself. Dish after dish of Mona's favorites were consumed by everyone. I understood why Ellie never had to make an effort in the kitchen. If your best friend could cook like this, you'd never need to!\n\nWhen our stomachs were full and happy, Liz stood up and gestured for silence, \"Hey everyone, thank you for coming. Mona was worried that no one wanted to help her celebrate, so I'm so grateful you all took my bribe money and made an appearance tonight.\"\n\n\"HEY!\" Mona threw a napkin at Liz in mock protest.\n\n\"Before anything else, let's give a big standing ovation to Ian Bishop, who fed us so well I don't think we'll ever need to eat again!\"\n\nPeople banged on the table and roared their approval. Ian waved proudly from the kitchen, but quickly ducked back in.\n\n\"Except of course, we will have to eat again, because it's time for cake!\"\n\nIan re-emerged with a three layer cake of some sort on a tray, \"RJ - can you get the lights?\" He asked.\n\n\"Sure!\" I leapt up and trotted over to the control panel by the stairs. I dimmed the lights as Liz lit a couple of enormous sparklers.\n\n\"Hang on, hang on, hey Alex,\" Liz yelled, \"Can you take a video?\"\n\nAlex nodded and fished out her phone, \"Alright. Go!\"\n\nThe entire room started belting out \"Happy birthday\" as Ian placed the cake in front of Mona.\n\n\"Hey sexy...\" a voice said behind me. I felt arms wrap around my waist. Some part of me thought -- hoped -- that it was Ellie, somehow finding a way back to New York to surprise me.\n\nI turned around, a grin on my face. The grin disappeared quickly when I saw that it wasn't Ellie, but Alice.\n\n\"Oh, hi Alice,\" I tried to be polite, but she felt like such a long-ago part of my life that I really wasn't interested in getting caught up with her.\n\n\"LIGHTS, RJ!!!\" Someone yelled.\n\nThankful for the interruption, I turned back and flicked the lights on as Mona got up to make a speech, \"Guys... it is SO amazing to have you all here...\"\n\n\"So -- here alone tonight?\" Alice pulled me back towards her. I stumbled a little with surprise and she had me in a half hug before I even realized what was going on.\n\n\"Hmmm...\" she whispered in my ear, \"I forgot how good you feel against me...\"\n\nI tried to nudge her out of the way, but she tightened her grip. I looked into her eyes as earnestly as I could, \"Alice, STOP. This isn't...\"\n\n\"Isn't what?\" She winked, \"Come on RJ, you were always up for some fun.\"\n\nNope. She's not going to go there. She was not going to make a scene in front of Mona's birthday party. I grabbed her wrist and led her upstairs.\n\nI opened the door to my apartment and dropped her arm, \"Alice, I don't know what you expected, showing up here tonight, but--\"\n\nAlice let out a chuckle, \"'No expectations,' isn't that what we always said? Have fun, and no talking about what comes next?\"\n\nShe pulled me into the bedroom, \"Come on RJ, it's just sex. And we do it so well together.\"\n\nI extracted my hand. \"No, Alice. Seriously.\"\n\nShe tilted her head, she looked confused.\n\n\"It's different now,\" I explained, \"I'm with someone.\" I glanced over at the bedside table, my new habit of checking to make sure the ring was still there.\n\nAlice followed my sightline and saw the small black box. Her eyes widened. \"You...?\"\n\n\"Yes.\"\n\n\"Happily ever after?\"\n\n\"If she says 'yes,'\" I smiled. I felt suddenly shy, confessing this to Alice. She and I had always scoffed at romance, scoffed at love. We had been well-matched. But that was before Ellie.\n\nAlice flicked her hair back and took a step closer to me.\n\n\"So love isn't over-rated after all?\"\n\n\"No, not with her.\"\n\nAlice was still for a moment, looking at me, like, really looking at me. I held her gaze. She stood on tip toes and kissed me on the cheek. I felt her give my neck a slight nuzzle with her nose before she stepped back, \"Okay, Rowan Kan. I can respect that. I wish you'd told me this was a possibility. I would've pushed for it harder.\"\n\nOh.\n\nAlice smiled, ran her hand up my arm and squeezed, \"Hmmm, still working out, huh?\"\n\nI shrugged.\n\n\"Oh, RJ,\" she sighed, \"It was good to see you.\" And with that, she left.\n\nAlice's words bounced around in my head for a little while. I had no idea she felt that way.\n\nI went into my kitchen and grabbed a beer. I wondered if Ellie forgot to call me after her dinner. I desperately wanted to hear her voice, but it was way too late to call her parents' house.\n\nI pulled out my phone and scrolled through the history of my texts with Ellie. When I finished reading them, I fished out another beer from the fridge and looked through my album of photos. Ellie had sent me a selfie the other morning of her in bed right after she woke up. I ran my eyes over every pixel. Tomorrow couldn't come soon enough.\n\nI held the cold bottle to my forehead. My phone buzzed. Ellie!\n\n\"Hey honey,\" her voice grabbed my heart and squeezed.\n\n\"Hi!\" I leaned over the counter, \"I was just thinking about you.\"\n\n\"Anything good?\"\n\n\"It's always good. I miss hearing your voice.\"\n\n\"Hmmmmm... how was the party?\"\n\nI looked at the clock, \"Probably wrapping up, I think. I'm hiding in my apartment.\"\n\n\"Why are you being anti-social?\"\n\nI pushed off the counter and headed into my room, \"I don't function well without you. It'd be so much better if you were here.\"\n\n\"I'll be wrapped around you this time tomorrow night.\"\n\nI flopped onto my bed, \"I'm going to go to sleep until you come back.\"\n\n\"Are you in bed now?\"\n\n\"Mmm-hm,\" I closed my eyes, \"And you're not here.\"\n\n\"I like that you miss me.\"\n\n\"How was dinner?\"\n\n\"Unremarkable. But I got some quality time with my parents afterwards. I'm sorry I didn't call earlier.\"\n\n\"What are you doing right now?\"\n\n\"Listening to my dad snore. I'm so glad we had hotels room to stay in all those times you visited. The walls here are paper thin.\"\n\nI chuckled.\n\n\"Want to know what I'm wearing?\" I heard Ellie shifting around in her bed. -pulse-\n\n\"What?\"\n\n\"Your b-school t-shirt. It still smells like you.\"\n\n\"I was wondering where that went! Did I leave it at the hotel?\"\n\n\"Nope, I stole it from your suitcase. I've been rolling around in it quite a bit.\" -pulse-\n\n\"Klepto!\" I was about to say something about idle hands when my call waiting beeped. Huh. It's Ian.\n\n\"Hey Ellie, Ian is calling me -- I should get it, in case it's about the party.\"\n\nEllie groaned in frustration, \"Ok. Fine.\"\n\n\"I know. Sorry. I love you. See you tomorrow.\"\n\n\"I can't wait.\"\n\nI switched over to Ian's inbound, \"Hey dude!\"\n\n\"Don't call me 'dude' you ASShole!\" Ian barked into the phone. Huh?\n\n\"What?\"\n\n\"I thought she meant something to you, you lying sack of shit!\"\n\n\"Ian, I have literally zero idea what you are talking about.\"\n\n\"Yeah? How about you come down here and I'll tell you to your face what I'm talking about?\"\n\nOkaaayyyyy. I went to the door leading to the downstairs meeting space and opened it. Ian was at the bottom of the stairs and he looked positively homicidal.\n\n\"Where is she?\" He crossed his arms as I trotted down the steps. Liz and Mona were cleaning up the table. Everyone else was gone.\n\n\"Ellie? She's not here, she's not coming back until tomorrow.\" I paused when I realized he wasn't talking about Ellie.\n\n\"Not Lauren, ASSHOLE,\" he glared at me. I'm getting sick of being called an asshole.\n\n\"You mean Alice?\" I said this as calmly as possible.\n\n\"If by Alice you mean the Scarlett Johansson look-alike you brought up there just now, then yes. Where is she?\"\n\n\"We talked for two minutes, and then she left,\" I said simply.\n\nIan narrowed his eyes and looked me up and down, \"You were up there for much longer than two minutes, RJ!\"\n\nYeah. I was about to get some good loving over the phone when you interrupted.\n\n\"Nothing happened, Ian. I don't particularly appreciate you jumping to conclusions.\"\n\nIan jabbed a finger at my face, \"The lipstick on your face and on your shirt collar says I'm not jumping to any conclusions, ASSHOLE.\"\n\nThat's it. I'm done. \"Stop calling me an asshole. You have NO idea what you are talking about.\"\n\nIan shook his head, \"Actually, I do know what I'm talking about, RJ, I ALWAYS knew I'd have to pick up the pieces. She's going to come home and I am going to have to help her get over you.\"\n\n\"Thanks for that vote of confidence, Ian, but I think she and I are going to be totally fine. Nothing happened. You're getting the wrong idea.\"\n\n\"What's going on?\" Liz strolled up, \"Ian, come have a drink. You deserve it.\"\n\n\"Not in the mood,\" Ian snapped.\n\n\"Seriously, guys, what's going on?\"\n\n\"Nothing.\" I raised my hands, \"Ian's got the wrong end of the stick.\"\n\n\"YOU took a supermodel up to your apartment and come back out with lipstick all over you and I AM THE ONE WITH THE WRONG END OF THE STICK?\" Ian roared.",
        "Liz looked shocked, \"You took Alice up to your apartment? What did you do, RJ?\"\n\nMona joined us, looking at each of the three of us in turn.\n\n\"NOTHING!\" I yelled, \"Will you all stop being so hysterical and please, leave me the hell alone? Nothing happened with Alice, okay? Jesus. Do you all have such a low opinion of me that you found it necessary to come prosecute the issue right now? At this time of night?\"\n\nIan fished out his phone, \"RJ, Alex texted me the video. I promise you, this conversation is VERY necessary.\"\n\n\"What video?\"\n\nIan hit 'play' and the video started... first, of Ian bringing out the cake, and then people singing.\n\n\"Video of Mona's cake,\" I looked up, \"So what?\"\n\nIan pointed to the far left side of the video, his voice dripping with venom, \"So there's you and Alice getting all frisky by the stairs.\"\n\nI looked a little closer. Fuck. From the angle of the camera, me struggling to get out of Alice's hug looked like something else altogether. It didn't help that I then took her upstairs. Fuck.\n\n\"Guys, it wasn't what it looks like. Nothing happened. Talk to Alice. I promise you nothing happened.\"\n\n\"What d'you have lipstick all over your face, then?\" Ian hissed.\n\n\"She made a pass, I told her 'no,' she gave me a kiss goodnight, and she left.\"\n\nLiz and Mona were looking at me with something that was a mix of disbelief and pity. It made me feel worse.\n\n\"RJ, you are either incredibly stupid or incredibly unlucky,\" Mona frowned.\n\n\"Given the video, I'd say I was stupid AND unlucky,\" I mumbled, \"I shouldn't have brought her upstairs. I didn't want to make a scene during the cake thing.\"\n\nIan made a sarcastic sniff, \"Like I'm going to buy that. Once a player, always a player.\"\n\n\"Ian, I swear to god I didn't do anything with Alice.\"\n\n\"Then call Lauren right now and tell her,\" Ian challenged.\n\n\"I can't. Her phone died. She's staying at her parents' tonight. I'm not going to wake up the whole household to tell her something about nothing. She knows I won't do something like that.\"\n\nIan scoffed. He was starting to really piss me off.\n\nLiz held up her hands before I could say anything, \"Come on guys, let's all take a breath, okay? RJ, I think Ian is right. Go talk to Lauren. Ian, I've known RJ for a long time, and she doesn't lie. She may have played the field, but if she says nothing happened, I believe her.\"\n\nJesus. Thank you, Liz. I gave Liz a grateful look. Ian was still skeptical, but he seemed to back down from homicidal rage to a quiet, seething rage, \"If you don't tell Lauren, I will. She needs to know.\"\n\nI hated threats and I hated ultimatums. Naturally, I reacted badly. \"Tell her whatever you want Ian, I don't give a shit.\"\n\n\"RJ!\" Liz gasped.\n\nIan stared at me for half a second before pointing his finger into my chest, \"You. Are. An asshole.\"\n\nI swatted his hand off my chest, \"I am REALLY getting sick of you throwing that at me, Ian!\"\n\nLiz stepped between us, \"WHOA! Okay guys! Take a breath, both of you.\"\n\nIan and I were each taking massive gulps of air at this point, so oxygenation of the brain was the least of our problems.\n\nLiz led Ian back to the kitchen and I heard them talking quietly. I picked up a knife and started stabbing at some leftover cake on the table.\n\n\"RJ, the cake is not your enemy,\" Mona gently removed the knife from my hand, \"Ian's cooling down over there, and you need to go upstairs and call Lauren.\"\n\n\"NO.\" I'm not going to be told what to do like a kid who forgot her homework.\n\n\"RJ...?\" Mona's voice rose, \"Even if nothing happened, it's better for her to hear it from you first. Believe me. Call her.\"\n\n\"Why? People already think I cheated anyway. So what's the point? They're going to think that whether or not I say anything. So fuck 'em. I don't care.\" I headed to the stairs and took them two at a time.\n\n\"RJ!\"\n\nI turned and sighed, \"What?\"\n\n\"You do care. You'll regret it.\"\n\n\"No. I'll be fine. I won't regret anything.\"\n\nMona ran up the steps and grabbed my arm, \"RJ, I know you hate being told what to do, but trust me on this one, okay? I believe you. But you need to call Lauren and clear it up with her before she sees that video.\"\n\nI felt tears stinging the corner of my eyes, \"If Ellie sees the video and thinks I would do that to her, then it'd be over anyway. It'd mean she never trusted me in the first place. So FUCK. IT.\"\n\n\"RJ...\" Mona frowned at me.\n\n\"I'll be fine,\" I turned and walked the rest of the way to my apartment. I crawled into bed and laid in the dark for god knows how long.\n\nI woke to someone knocking loudly on my front door. I rubbed my eyes and moved my jaw around as I opened the door.\n\n\"Ro--\" my father stopped mid-word, \"Uh, rough night?\"\n\nI shrugged, \"I sleep in my clothes all the time. What's up?\"\n\nHe handed me a flashdrive, \"Here's my mark-up of the docs from Sonya. Can you take a look and see if you agree?\"\n\nI nodded, \"What's with the suitcase?\"\n\n\"I'm going to Miami, remember? Conference.\"\n\nI nodded again, \"Right. Yeah. I thought your flight was at 2:30? Why are you leaving so early?\"\n\n\nMy father straightened his back and held up his phone, \"It's almost noon, Rowan.\"\n\nNOON?! I ran back into my bedroom and grabbed my phone. Nothing from Ellie. Nothing from anyone, except a text of the video from Alex, and what was probably a spam voicemail from a number I didn't recognize. FUCK.\n\nI checked the status of Ellie's flight and it showed an arrival time of 9:27am. She should be here by now and she isn't. Something wrenched my heart with a vice-like grip. She's not coming. She's gone.\n\n\"Rowan?\"\n\nI looked up to see my dad with a worried look on his face.\n\n\"I'm fine,\" I smiled as best I could, \"Hey, dad, want some company at the conference?\"\n\nMy father didn't say anything for a couple of beats, \"Isn't Lauren coming home today?\"\n\nI shook my head and tried to keep my voice steady, \"No, something came up. Miami sounds good to me right now. Let me throw some stuff in a bag.\"\n\nI packed a small suitcase, changed, and brushed my teeth. I unplugged my phone from its charger and was about to put it in my pocket when I changed my mind. Fuck the phone. If Ellie's not calling me, I don't want to hear from anyone else. I tossed it onto my bed and headed out, \"Ok, dad, let's go.\"\n\nHe gave me a long, hard stare, \"Don't run away from her, Rowan.\"\n\nI'm not the one who's running. \"I'm not, dad, I promise.\"\n\nDad and I rode in silence to the airport. I wondered what Ellie was doing. Probably listening to everything Ian has to tell her about last night. I reflexively jammed a fist into my thigh. My father glanced over, \"Do you want to talk about it?\"\n\n\"No,\" I leaned back and closed my eyes.\n\nMy father asked me three more times if I wanted to talk about it. Once when we bought my ticket, the second time as we were about to board, and once more when we headed to the hotel. I said 'no' each time. I didn't bother going up to my room after checking in. I headed to the beach and sat there, staring at the ocean, feeling stupid, and lonely, and wishing Ellie were next to me because she was the only one I wanted to talk to.\n\n<p align=\"center\">\nPeople see me all the time\nAnd they just can't remember how to act\nTheir minds are filled with big ideas\nImages and distorted facts\nEven you, yesterday\nYou had to ask me where it was at\nI couldn't believe after all these years\nYou didn't know me better than that. \nIdiot Wind , Bob Dylan</p>\n\n\nChapter 5: Make You Feel My Love\n\nThe temperature dropped fairly quickly once the sun set. I dragged myself into the hotel and headed to the restaurant.\n\n\"I might as well eat,\" I said to no one in particular.\n\n\"Ms. Kan?\"\n\n\"Hmm?\" I turned towards the voice. It was the maitre-d.\n\n\"Your father said you might join him for dinner. He, uh, showed me a photo of you so that's how I recognized you.\"\n\n\"Oh,\" I nodded, \"Sure. Thanks.\"\n\n\"Come with me. You are just in time, they were seated not long ago.\"\n\n'They'?? Who else was there?\n\nIt wasn't Ellie with my dad though. My stomach twisted painfully, and I kicked myself for hoping for something so improbable. I almost didn't fully process who was at the table with dad.\n\n\"Jayne Widmer,\" the woman rose and offered her hand, \"I'm so happy to meet you.\"\n\n\"RJ,\" I said as I shook her hand. My father's face was impassive but very, very red.\n\nI sat down and looked between the two of them.\n\n\"Uh, Rowan,\" my father began, \"Jayne and I... uh...\"\n\nI took a sip of water, \"Jayne and you...?\"\n\nShe put her hand on his.\n\nI raised my eyebrows. Ellie was right! He met someone! I felt immediately sad, because I realized I couldn't tell Ellie that she'd hit the nail on the head.\n\nDad cleared his throat, \"Jayne and I are, uh... seeing each other.\"\n\nI put on the biggest smile I could, \"Dad, that's great! That's really, really great. I'm so happy for you both.\"\n\nThe look of relief on his face was priceless.\n\nI turned to Jayne, \"Are you the person I have to thank for bringing my father into this century and teaching him how to text without taking a year to type each letter?\"\n\nShe blushed and nodded, \"He's a very quick study.\"\n\nI was about to say something about being the happy beneficiary of her tutelage when the maitre-d appeared over my shoulder, \"Uh, Ms. Kan, there's a call for you at the front desk.\"\n\nI looked up at him, then at my father and Jayne. My dad had a beatific smile on his face, \"Go ahead, Rowan.\"\n\n\"Sorry,\" I apologized to Jayne, \"Excuse me, I'll be right back.\"\n\nI felt the static electricity build up in my body as I walked across the plush carpet of the restaurant and into the lobby. I got a little zap as the concierge handed me the phone.\n\n\"Hello?\" I said. The concierge turned his back and moved off to other tasks.\n\n\"You're a hard woman to track down...\" ELLIE! Ellie, Ellie, Ellie!\n\n\"Ellie?!!\" I gripped the marble surface of the concierge desk.\n\n\"You didn't get my voicemail about the change in my flight home, did you?\"\n\n\"Voicemail?\" I thought it was spam!\n\n\"Yes. I borrowed someone's phone to tell you I got bumped off the six o'clock. It seems like I missed some down-home lesbian drama while I was gone...\"\n\n\"What?\"\n\n\"My six o'clock flight was overbooked, so I had to take the nine o'clock flight. Imagine my surprise when I got to your place to find out from Joey that you'd left for Miami!\"\n\n\"Oh. I, uh, didn't recognize the number from the voicemail, so I thought it was spam. When you didn't show up, I thought you didn't want to see me anymore, so I left.\"\n\n\"Hmmm, yes, I see where it all went sideways. Well, I headed home, slightly confused, only to find a collection of people in my apartment who all started talking at once when I walked in.\"\n\n\"It's not true. Whatever they told you, it's not true.\"\n\n\"Oh?\"\n\n\"Ian probably told you I cheated on you with my ex, right?\"\n\n\"He did think that, yes.\" Ellie was sounding way too calm for this conversation.\n\n\"But I didn't... cheat on you, that is.\"\n\n\"I know you didn't. Alice told me you were unexpectedly impervious to her charms.\"\n\n\"Alice?\"\n\n\"Yes. Although from the look of your shirt, I can understand why Ian thought what he did. He says sorry, by the way.\"\n\n\"My shirt?\" Ellie found me! She found the shirt?! She met Alice?! What the hell was going on???\n\n\"Mmm-hmm, I'm sitting on your bed, and the shirt with Alice's lipstick on it is looking rather wilted and pathetic.\"\n\n\"My bed?\" I couldn't get my brain to engage. My upside-down world seemed to have turned right side up again, but everything had been tossed around. How did Ellie even know where to find me?\n\n\"Hm, yes. Look, honey, I'd love to talk some more, but you have a flight to catch, so I think it would be best if you got yourself to the airport and we can catch each other up on everything when you get home.\"\n\n\"Home?\"\n\n\"RJ, focus. There's a 9:30 flight that you can catch if you start moving right about now.\"\n\nRIGHT. \"Okay. Hey, Ellie?\"\n\n\"Flight's at 9:30, RJ.\"\n\n\"How did you find me?\"\n\n\"Joey put me in touch with your dad. Now go. I'll be waiting.\"\n\nI ran back to the restaurant and excused myself -- for good. My father looked relieved that he would have his evening alone with Jayne again. Jayne gave me a warm hug, \"I'm so glad we met, brief as it was.\"\n\nI hugged her back, \"Me too.\"\n\nI'd never been happier to pay all the surcharges needed for a plane ride home. The flight was agonizingly long and was exacerbated by the fact that none of my fellow passengers seemed to be in any hurry at all. I was having trouble getting my head around the events of the past twenty-four hours. I felt totally angry at Ian, but I kind of understood where he was coming from. I felt angry at Alice and at myself, for being so thoughtless... I couldn't fathom the idea of Ellie and Alice meeting. I wondered who else was at Ellie's apartment when she got home. I thought about the ring I got for Ellie. I had no trouble getting my head around that. I was going to ask her to marry me. I desperately hoped she would say 'yes'.\n\nWhen the plane neared the arrival gate, I undid my seatbelt and trotted up the aisle even before the seatbelt sign was off. The flight attendant was about to direct me back to my seat when the captain turned off seatbelt sign and the cabin door swung open. I ran through the nearly empty airport terminal, with the same thought running through my head: Ellie Calder... please marry me... I'm an idiot, but please marry me.\n\nI offered the cab driver double fare if he could get me back into Manhattan in less than forty minutes. Luckily, I got a man who was up for the challenge. I told him he should try being a stunt driver when we squealed to a stop.\n\n\"I hope you're not too late, I did my best,\" he said as he took the cash I handed him.\n\nLamar, the nightshift doorman, had the elevator waiting as I sprinted through the front entrance. He gave me an encouraging smile as the doors closed and the elevator ascended. Joey must have filled him in.\n\nI threw open my apartment door, \"Ellie?\"\n\n\"In here,\" she said from my study. Her voice sounded shaky. Oh no. Did I fuck something else up?\n\n\"Hey...\" I walked in to see her sitting at my desk. She was holding my phone, which had a photo of us as the homescreen. She was crying.\n\n\"Ellie, I am so sorry,\" I didn't know what to do. I froze. I made her cry. \"I'm so sor--\"\n\nShe held up her hand, \"It's okay.\" Was it really okay?\n\nNeither one of us said anything. It felt like we forgot how to talk to each other. I started to panic.  She didn't sound mad on the phone... or sad... or anything... what changed? Or maybe she was mad on the phone? And sad?\n\nI started babbling, \"I should never have brought Alice up to the apartment. It was a dumb move. I just wanted to get away from the party. I screwed it up. I wasn't thinking properly. Not because I wasn't thinking of you, but because... to me, the concept of anything happening with anyone else was... is... so absurd... I didn't think about how it would look. And I didn't mention it when you called because it wasn't even a thing in my mind. I guess I should have told you...\"\n\nI couldn't bear to look at her, I felt so stupid. I don't deserve her. Everyone knows it.\n\n\"RJ...\" Ellie got up and placed her palm against my cheek. I squeezed my eyes shut. The tenderness of her touch was unbearable.\n\n\"I'm so sorry,\" I mutter. It sounded impotent. How can such an insignificant string of words possibly make everything okay again?\n\nI felt tears leaking out of my eyes. I kept them shut. Then I felt her lips on mine and I stiffened. Wait, she's kissing me...\n\nIt felt like a dream. I didn't want to wake up if it was. My arms felt like they were pinned to my side and my mouth wouldn't work. If she's kissing me, then it must be okay, right?\n\nShe put her hands on my chest. \"RJ,\" Ellie's voice trembled, \"Kiss me back... please...\"\n\nOh... She kissed me again. I ran my tongue along her bottom lip and her mouth parted. My arms finally figured out how to move again and I wrapped my arms around her. She's here. With me. \n\n\"I thought I fucked it up,\" I said between kisses, \"I thought I'd pushed you away. I thought I'd lost you. And now I've made you cry.\"\n\nShe grabbed my arms and looked me in the eyes, \"You were doing fine until you pressed the 'eject' button and went to Miami...\"\n\nI must have looked as confused as I felt, because she shook her head, \"RJ, you didn't even give us a chance to talk about what happened! You decided to leave!\"\n\n\"I got mad at Ian. I got mad at everyone. I told him that I didn't care about him telling you I cheated. And when you didn't show up, I figured he told you, and you believed him, and it was over.\"\n\n\"Ian is a six-foot-two drama queen who is - bless his heart - very protective of his friends. But RJ, let me ask you this: If someone told you that I went running off with an ex-boyfriend, would you take that as gospel? Or would you want to talk to me first?\"\n\nSonya would call this a 'teaching moment'. I felt like the biggest bonehead that ever lived. \"Talk to you first, even though I'd be really freaked...\" I mumbled.\n\n\"Why?\"\n\n\"Because it wouldn't track.\"\n\n\"Why?\"\n\n\"Because you love me...and you wouldn't do that to me,\" I rubbed my eyes, \"I'm an idiot. I'm sorry.\"\n\nEllie's arms were around me again. She pressed her head against my chest, \"Yes you are, but you're my idiot. Let's agree to talk about everything from now on. I know you love me. I love you too. No more disappearing acts.\"\n\n\"Definitely, definitely not. I promise. And we need to get back-up phones. Both of us.\"\n\nEllie chuckled, \"That, too. I should have sent a text, I guess, instead of calling you from a random number.\"\n\n\"I can't believe we almost broke up,\" I shifted uncomfortably. Ellie shook her head from side to side.\n\n\"What?\" I asked, a little defensively.\n\n\"We did NOT almost break up, you dork!\" Ellie grabbed my shirt and led me to the couch in the living room, \"In the most clinical sense, what happened was: An ex-girlfriend made a pass at you. You declined. Everyone freaked out and jumped to all the wrong conclusions.\"\n\n\"Yes! They did!\" I dropped down next to her. I felt vindicated.\n\n\"You did, too! You thought I would think the worst of you. And you assumed it was over.\"\n\n\"I didn't want it to be over though.\"\n\n\"I know. All's well that ends well. But let's not do this again, okay?\"\n\n\"Okay.\"\n\n\"Good,\" Ellie gave me another kiss.\n\n\"So that's it?\" I asked in wonder, \"We're okay?\"\n\n\"You love me?\"\n\n\"Yes. So much.\" I thought about the ring in the box by my bed. I'm asking her tonight...\n\n\"I love you too. I must say though, it was a little intimidating meeting your ex. She was gorgeous and charming and really one of the nicest people I've met... even Ian came around on her.\"\n\nI wanted to hear more about that, but I was too focused on Ellie. \"No one comes close to you,\" I nuzzled her neck, \"Not even close.\"\n\nEllie looked at me for a beat and smiled, \"I'm going to go to the bathroom,\" she gave my arm a squeeze, \"Be right back.\" She walked into my bedroom and I heard the bathroom door shut.\n\nPerfect. I went straight to my bedside table and... FUCK. The ring box was gone. Did I move it? Where the fuck is it? I opened the drawer, hoping I'd hidden it in there and forgotten. Nope. Nothing there. I looked under the bed. Nothing. I ran outside and checked my suitcase. Nothing.\n\nI went and checked my bedroom again. No ring. Shit.\n\nI heard the bathroom door open. Fuck it, I'll go buy her another one. I stared at my bedside table, trying to figure out where it had gone.",
        "\"RJ?\" I heard her flick the bathroom light off behind me.\n\n\"Hmm?\" I walked right up to the bedside table and peeked behind it.\n\n\"Looking for something?\"\n\n\"Yeah, it's no big deal, I'll look for it in the morning,\" I turned around and a million brain cells spontaneously went super nova.\n\nEllie was leaning against the wall, totally naked, with her arms crossed.\n\n\"Are you sure it's no big deal?\" She arched an eyebrow, \"You seem pretty stressed about it...\"\n\n\"I lost something... um... kinda important, but it's okay, I can--\" I couldn't talk anymore, Ellie had shifted her arms, which pushed her breasts up enticingly.\n\n\"How important?\"\n\nI hung my head, \"It's something that I got for you. I thought it was here, but I, uh...\"\n\n\"It's not like you to be so careless,\" she frowned, \"Maybe you should've kept a better eye on it.\"\n\nHang on a second.  \"Ellie?\" I walked towards her. The corner of her mouth was twitching upwards.\n\n\"Yes, RJ?\"\n\n\"You know what I was looking for, don't you?\" I stretched out an arm and planted it against the wall, right next to her head.\n\nShe shrugged, \"Was it maybe...\"\n\nShe uncrossed her arms and stroked her chin with her left hand. The glint of something very familiar came off her ring finger, \"...this?\"\n\n\"Ellie Calder, you THIEF!\" Oh my god, I love this woman and I love how she keeps me off balance\n.\n\nShe laughed, \"Technically, you got this for me, so I didn't steal it. That's why I was crying by the way, when you walked in. I couldn't quite believe it when I saw it... it took my breath away, I mean, not just the ring -- which is beautiful -- but what it signified.\"\n\n\"Technically, this means you accept my intended proposal of marriage,\" I pressed her up against the wall. Her sharp intake of breath pretty much killed me it was so sexy.\n\nOur faces were a hair's breadth apart.\n\n\"Will you marry me?\" I whispered.\n\n\"Yes,\" Ellie breathed out, \"A million times, yes.\"\n\nMy heart did a cartwheel, \"Are you sure?\"\n\n\"Yes, RJ...\"\n\n\"Because it's only been a couple months...\"\n\n\"I would have said 'yes' the first week we met.\"\n\nThose words, and the look that came with it, were enough to stop a herd of stampeding elephants. I love her, I love her, I love her.\n\nI gave her a deep, long kiss, \"I forgot something...\"\n\nEllie's eyes were a stormy, smoky, blue, \"It can wait...\"\n\n\"When one proposes, one is supposed to... kneel...\" I slowly got down on my knees, kissing her body as I went. Her breasts, her nipples, her stomach. The tremors of her limbs and the sighs that she made were exquisite reminders of what I thought I'd lost. \n\nMoments later, my mouth reached its destination; my nose was buried in her scent. My tongue sought out her clit. Ellie leaned back against the wall and opened her legs. \"Oh god yes, RJ, just like that,\" she panted.\n\nMy tongue circled, and licked, and circled, and licked. I felt her fingers gripping my hair. I closed my lips around her clit and applied pressure. Ellie moaned, in that deep, low way that I loved. My mouth expanded its area of coverage and I made love to her sex. I felt Ellie's legs buckle a little and I knew she was close. I drove my fingers into her and she cried out.\n\nI held her as she came and carried her to our bed. I brushed her hair off her face and kissed her. Her eyes stayed closed for a while, but she was smiling. My hands coasted up and down her body.\n\n\"Hmmmmm, honey, the things you do with that mouth of yours...\" Ellie took one of my hands and laced her fingers with mine.\n\n\"I'm so glad you like it.\"\n\n\"Will you still do that to me when we're old and creaky?\"\n\nI licked her earlobe and nicked it with my teeth, \"The tongue is a muscle, just like any other. I have no intention of letting it atrophy.\"\n\n\"Lucky me...\" her eyes opened at last and she smiled again.\n\nWe lay there, breathing each other in. Ellie slowly undressed me and reached between my legs.  She raised an eyebrow, \"RJ, you're so wet... hmmmm...\"\n\n\"It's pretty much a permanent state of being when it comes to you.\"\n\n\"Lucky me...\" Ellie said in my ear before she shifted lower.\n\n\"Ellie,\" I was mesmerized by the way her hair trailed a path over my skin as she moved, \"Ellie...\"\n\n\"Mmm?\"\n\n\"I need you to fuck me,\" I said. I wanted her to completely possess me. I wanted her to claim me as hers. And it was something Ellie has come to do very, very well.\n\nEllie ran a warm, hard tongue up my slit, \"It'd be my pleasure.\"\n\nI could hear my pulse accelerate. My entire pelvic area was humming in anticipation of my lover's touch. I watched Ellie ready herself. She hovered over me, her nose inches from mine, \"Ready, handsome?\"\n\nI nodded. She gave me a kiss and her breasts and nipples scorched two grooves of sexiness against my skin. I widened my legs as I felt the head of the cock against my opening.\n\n\"Who do you belong to?\" Ellie held her position.\n\n\"You...\" I growled as she thrust into me. My skin cells exploded with celebration.\n\n\"I didn't hear you...\" Ellie's tongue lashed against my breasts.\n\n\"You!\" I panted, \"I belong to you. Always.\" I almost couldn't get the last word out because Ellie was giving me the deepest, hardest fucking I'd ever experienced. I couldn't really remember, but it was possible that my feet didn't touch the bed until I came. It was the sweetest yet most savage sex I'd ever had with anyone. In truth, no one came close to the way Ellie topped me. I loved it.\n\n\"Good answer,\" Ellie whispered in my ear as I recovered, \"Because I don't want anybody else.\"\n\nHours later, Ellie and I moved through our Sunday morning enveloped in the sheer delight of our reunion. I loved seeing the ring on her finger, and I couldn't believe I almost derailed the whole thing.\n\n\"You know,\" Ellie observed as she leaned back into me on the couch, \"I think maybe the whole melodrama with Alice was actually a good thing.\"\n\nI wrapped my arms around her, \"I sincerely doubt it.\" Ellie and I couldn't stop touching one another. I didn't think I could crave intimacy with her any more than I already did, but crave it I did. My forearm buzzed with happiness as she grazed her fingers up and down my skin.\n\n\"No, listen,\" she rested her head against my shoulder, \"You've been saying how everyone's been betting on you freaking out and dumping me right? But look what happened! Your super-model ex came onto you and you said 'no.' How much more proof do people need that you're not going anywhere?\"\n\n\"I guess so. I still can't believe she showed up at your apartment!\"\n\n\"She felt terrible -- because she hit on you and it was all caught on tape and made people jump to all the wrong conclusions. It wasn't an easy thing she did, talking to me about it... I think she has feelings for you.\"\n\nI shook my head, \"I had no clue she felt that way. I definitely don't... won't...\"\n\n\"I know, honey,\" Ellie kissed me under my jaw.\n\n\"I'm kind of glad she was the one who told everyone nothing happened.\"\n\n\"It helped, big time. We should thank your dad, too... he helped,\" Ellie gave me a kiss.\n\n\"I think he was happy to get rid of me... He was in Miami with his girlfriend. You were right, by the way!\"\n\n\"WHAT? Really? Was she nice?\"\n\n\"She seemed nice. I met her for all of two minutes. I should let Dad know that everything worked out, actually...\" I didn't want to move off the couch, though.\n\n\"I owe Ian an update, come to think of it,\" Ellie got up to retrieve her cell phone from across the room, \"Holy shit!\"\n\n\"What?\"\n\n\"I think we have a bunch of very curious people wanting to know what happened... I kind of miss not having a phone,\" she showed me her notification screen.\n\nI raised my eyebrows, \"Eighteen messages?!!! Jesus.\"\n\n\"They're mostly from Ian. Here, wait,\" Ellie got on the couch and snuggled back into my arms, \"How about we try and kill about a dozen birds with one stone? Smile.\"\n\nShe took a photo of us and started typing.\n\n\"Spilling the beans?\" I wrapped my arms and legs around her.\n\n\"Yup. Agree?\"\n\n\"Agree. Ship it!\"\n\nMoments later, Ellie's photo of us was blasted out with a simple note: Happiest of Sundays\u2026 because she asked\u2026 and because I said 'yes'.\n\n<p align=\"center\">\nI could make you happy, make your dreams come true\nThere's nothing that I wouldn't do\nGo to the ends of the earth for you\nTo make you feel my love.\nMake You Feel My Love, Bob Dylan</p>"
    ],
    "authorname": "careythomas",
    "tags": [
        "lesbian",
        "lesbian romance",
        "lesbian sex",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/could-you-be-mine-pt-02"
}