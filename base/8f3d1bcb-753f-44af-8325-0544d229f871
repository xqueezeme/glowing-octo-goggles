{
    "title": "My Cousin, My Escort",
    "pages": [
        "=====<br >My cousin, my escort<br ><br >This following is a work of fiction but represents a fantasy I've had for years. It is not a fast read and is character and dialogue driven. If you're looking for a quick piece to breeze through, this might not be for you but if you stick around and get to the action (roughly halfway through), I think it's worth it. Thanks for reading and please let me know what you think below. Special thanks to my editor RandyD1369 for his work on this story. It was beyond helpful. \n\n \n\n=====\n\nIt's amazing what little details a person notices when they're trying to think of something, anything, to take their mind off of a stressful situation.\n\nAs Tony sat in an unfamiliar bed roughly an hour away from his home, his brain scanned the room around him looking to find something to focus on besides the lump in his throat, his elevated heart rate and the thoughts about why he was there.\n\nHe could hear the low hum of a muted television to his left. A half hour or so ago, he was watching a replay of a fairly boring episode of Modern Family and trying, unsuccessfully, not to stare at the clock on his cell phone.\n\nTo his right, there was a hint of an orange or yellowish light coming through his hotel room's blinds. It looked like the headlights of a passing car.\n\n\"Was that her? Is she here?,\" he wondered to himself as he got out of bed and looked through the blinds. \"No. It's not her. Not yet.\"\n\n \n\nEven though Tony knew this was a tourist hotel, and assumed it would be busy on a week night, he looked around at the cars driving in and out of the parking lot around him and couldn't help but wonder if perhaps this hotel was TOO busy.\n\nMaybe he made a mistake booking it? What if someone he knew saw him check in?\n\nThe questions swirled through his mind as the minutes passed. He was nervous, and with good reason.\n\nAfter 38 years of leading what some would call a \"boring\" life----one where a person goes to college, meets their partner, gets a job, gets married and buys a house----Tony was about to do something he never thought he'd have the courage to do: He was going to pay for sex.\n\nFor over a decade, he's had this particular fantasy and, in just under 20 minutes, he was set to experience it for the first time.\n\nWhenever he pictured this moment, he assumed he'd be excited. He thought he'd find it erotic. But now that it's here, all he can think about is finding a way not to throw up.\n\n=====\n\nThree hours earlier, in a room far warmer and more welcoming than Tony's, Cassie stood in her kitchen and had only one thing on her mind: Text notifications can be a real pain in the ass.\n\nStanding in her kitchen wearing nothing more than a t-shirt and a pair of black leggings, Cassie had just finished washing the last of her dishes from dinner the night before when she heard the familiar buzz of her phone going off.\n\nShe was always conflicted when the sound came.\n\nOn the one hand, that little black box on the counter that she feels chained to at times makes it possible for her to live in this house. If she doesn't answer a potential inquiry fairly quickly, someone else might and when you're working in the sex industry, the only thing more frustrating than being on the clock all day is being on the clock all day and having nothing to show for it.\n\nThis lead was promising. This might actually happen.\n\nFinally.\n\nThumbing her password into her phone, Cassie jumped over to her email and saw the reply she was waiting for.\n\nIt was him. It was Roger.\n\nRoger? What a stupid name.\n\nWell, okay. It's not THAT stupid a name but it's a stupid name for someone to make up as an alias and there's just about no chance the person she's been communicating with for the last week is actually named Roger.\n\nNot that she has some moral high ground to stand on, of course. As far as \"Roger\" knows, her name is Alyssa. Yeah, it's not terribly creative but in an industry where everyone is named Candy, Fantasia or Destiny, it's easier to be subtle than creative when picking out an alias.\n\nCassie had run through her screening process dozens of times now and you can just tell when someone is using a fake name. But this guy sounded sweet.\n\nRight from his first email, a bashful inquiry asking for more information on her booking process, she could sense \"Roger\" was her ideal client. He was well spoken, patient while he waited for her to reply and his requests were about as mundane as you can get in the sex-for-money trade. It's a far cry from what she's used to, she thought as they communicated back and forth.\n\nMaybe that's why she let him get away with the made up name. Maybe that's why she didn't press him to send her references from other escorts or a photocopy of his ID with a link to his Facebook profile and LinkedIn page.\n\n\"You're making a mistake.\" she said to herself, more than once.\n\nIf Cassie had followed any of the regular steps of her process, she might have avoided the awkward situation she'd find herself in later tonight. But this guy seemed genuine and, hell, if things went sideways she could just knee him in the balls and take off.\n\nOverconfidence was her second mistake.\n\nHer third was taking his money.\n\nWhen Roger was hesitant to give her his ID, Cassie told him she wouldn't continue their conversation without a 50% deposit. It was sent moments later. He hesitated to give her too much information but had no trouble sending her half the money up front?\n\n\"Yeah,\" she thought. \"He's definitely married.\"\n\nAnd that's how she got here. The phone chimed just as Cassie thought it would. He'd just sent the rest of the payment.\n\nA cop wouldn't do that. Someone who might be a risk to your safety wouldn't leave that kind of paper trail, even if it was just electronically. Hell, anyone who knew anything about the sex-for-money business would know paying in advance is just asking to get burned. Clearly, this guy hadn't done this before.\n\nPaying for her services meant there was no turning back for Roger, or whatever his name was. All Cassie had to do was show up.\n\nThey could proceed. She was willing to take the chance.\n\nAs Cassie looked over at the outfit Roger has requested she wear, she couldn't help but think this would be a good night. Sometimes it's important to build trust with a new client. It's how to create regulars and regulars are a lifeline for girls in the sex trade.\n\nSo what if he was married? Her job is to please her clients, not play marriage counselor.\n\nIf she knew who she was talking to on the other end of those emails, she might have played things differently.\n\nThen again? Maybe not.\n\n=====<br >\n\nTony looked down at his clock again. Barely five minutes had passed since the last time he checked.\n\nHe closed his eyes and let the feel of the room overtake him. The hum of a busy parking lot was both comforting and concerning but it was the smell that really stood out.\n\nEven though he knew from the minute he walked into this hotel that his room was clean but it almost felt ... too clean. Like it was too sanitized. Like someone came in and wiped down every inch of the room with Lysol and took any sense of personality with it.\n\nThose were Tony's thoughts as the clock ticked closer to 8 p.m. He looked at his hands and could see beads of sweat forming on his palms. He was nervous.\n\nTony was trying, and failing, to do whatever he could to stop from focusing on why he was in this room.\n\nTony was a married man, happily married in fact. And he's not proud of what he's doing here but, honestly, it's for the best. Spiritually. Mentally. Physically.\n\nKayla would understand.\n\nTony's wife knew he would end up doing this one day -- he'd been open about this fantasy for most of their marriage -- and while their relationship might not be as physically satisfying as he wanted it to be, it's otherwise absolutely perfect. He loved her. She loved him. But he needed something different.\n\nWhen you'd been together with someone for close to two decades, that's just the way it was. You could still love each other and be there for each other but, physically, you couldn't expect the excitement to still be there the same way it used to. And if you hadn't lost your need for sex, but your partner had, it's impossible to bury that thought forever.\n\nHe's not cheating.\n\nNo, really. He's not.\n\nHis wife knew this would happen.\n\nThere aren't a lot of people who would understand the deal Tony made with Kayla on their last wedding anniversary but it was completely on brand for their relationship. Permission to hire an escort? What kind of wife would allow that? It was practically unheard of in their small Florida town.\n\nBut she did. And bless her heart for it. Kayla understood that what her husband was asking for was strictly a physical release. It's really no different than jerking off to porn or using a Fleshlight. In fact, the only rules she put in place were that no one else could know about it and they'd never speak to each other about it.\n\nKayla's mindset was simple. When the man of your dreams, the one you've built a life with, asked you for something important to him, and explained why he needed it, there's really no reason to say no. Not when you have that level of trust. Not when he's spent his entire adult life giving you everything you wanted and more.\n\nKayla knew Tony wasn't going to leave her for an escort he slept with once or twice. So, while she didn't want to think about it, she didn't mind saying yes when he asked for that pass almost eight months ago.\n\nHe still hadn't used it though. Until tonight.\n\nMaybe he was scared. Maybe he was nervous. For whatever reason, even WITH his wife's blessing, Tony couldn't help but think this whole thing felt wrong.\n\nWrong.\n\nIt felt wrong.\n\nAnd \"feeling wrong\" is exactly what led to him contacting Cassie for the first time.\n\n=====<br ><br >At 38 years old, Tony was the definition of a simple guy. He worked 9-5. He spent time on the weekends with his wife and his friends and complained on Reddit when the writers of his favorite TV shows botched the ending. He's the quintessential mature, responsible man ... who also happened to love porn. A lot.\n\nEver since Tony was a teenager, he'd watched porn almost every day. Sure, that's not surprising. A lot of men do. But what started as a fun way to spend a few minutes forgetting about the tasks and world around him quickly turned into a hobby. There's not a day when he wasn't at least scrolling through videos on his favorite tube sites to see what's new, even if he didn't always masturbate to them.\n\nTony loved amateur videos more than overly-produced ones but, really, his interests tended to fall into videos that had a story or could at least be plausible.\n\nThat's where he got his fetish for sex workers. It's a popular genre. A guy hires an escort, pays her an undisclosed amount of money, gets what he wants and they leave.\n\nIt's a simple concept on the surface but deep down? It's wrong. Or, at least, the stigma around paying for sex and sexual exploration as a whole makes it \"feel wrong.\" That's also what makes it exciting.\n\nWhen done properly, escort porn takes the time to develop the relationship between the guy and girl before the sex starts and it makes the inevitable action between the sheets much more rewarding. You can't just get right down to the sex. If you did, why would you bother creating a storyline in the first place? Why wouldn't you just get your actors to smile, look at the camera and start fucking?\n\nEscort porn is different. It takes the time to slowly build the erotic excitement that makes that sweet release feel special. That's why he's here, in the middle of a nondescript hotel room with a raging erection, waiting for the first escort he's ever had the guts to contact for a real-life appointment.\n\nIt was bound to happen. You don't fantasize about something for as long as he has thought about this without eventually giving in.\n\nAnd fantasizing was what he's been doing nonstop since Alyssa agreed to meet him.\n\n=====\n\nIt all started with an ad.\n\nBored one day and looking to find something exciting to jerk off to while his wife was at the grocery store, Tony checked out the local board on a website where men from his area gathered to talk about sex workers.\n\nFrom time to time, he went on this site to fill his fantasies and let his mind wonder. Most of what's on there is bullshit and he knows it but readers could usually figure out what's real and what's not and they almost always provided links to real escort ads, which are a great resource when you want to roleplay in your head and imagine hiring someone for sex.\n\nInevitably, Tony would read a description of one of the local girls, check out her ad and spend the next 10 minutes or so fantasizing how he would contact them, what he would say and how their entire sexual encounter would go.\n\nMost of the ads were crap. Blurred out photos with piss-poor writing and obvious scams were all too abundant on the mainstream escort sites. But every now and again, if he was willing to sift through the garbage, he could find something worth thinking about.\n\nTony knew the minute he saw Alyssa's ad that something was different. Instead of cheesy non-specific titles like \"Sweet girl wants to make you feel great,\" Alyssa's ad was poignant and direct and oozed a certain type of sexual confidence that Tony couldn't get enough of. Right from the title of the ad (\"This is so much more than sex,\") he was intrigued.\n\n\"You're not buying sex. You're buying an experience \u2014\n\nAre you bored? Lonely? In a sexless marriage? Missing that spark that only comes from a new experience in an otherwise boring life? Hi. I'm Alyssa.\n\n \n\nI'm a real, independent, brunette 35-year-old and I don't have time for games. You know what you want and why you're looking at my ad. I know how to make it worth your time and your money.\n\n \n\nIf you're looking for a quick and easy fuck, I'm not the person for you. But if you want the type of experience you'll still be thinking about in 20 years, I'm worth. every. penny.\"\n\nIf there was ever an ad written specifically for Tony, this was it. And if the ad didn't catch his attention, the photos sure did.\n\nAlyssa's profile had a handful of clearly well thought out photos on display and, unlike every other ad he'd seen on this site, they weren't taken with a shitty cell phone in front of a mirror.\n\nNo, these were more than selfies meant to show tits and ass. These were art. The first three showed Alyssa wearing high-end lingerie, a black and white top that showed her curves. The next two were a little more risque and shot from behind her, showing one of the sexiest asses Tony had ever seen. There were two topless photos, where she hid her nipples from view in an implied-nude and the last few were full body, head to toe shots of her wearing dark lingerie, fish net stockings and sexy high heels.\n\nThe only thing missing was her face but, if you'd seen enough of these ads, you'd know it's pretty common for girls to hide their faces to protect their identity from those looking to out them, harass them, or ruin their private lives.\n\nThe moment Tony saw Alyssa's photos, he had a raging hard on that demanded attention. It wasn't just the way this girl wrote her ad that struck him, it was the overall presentation from top to literal bottom.\n\nThis was clearly a girl who knew what she was doing. He did not.\n\nIt took Tony nearly seven hours, and two jerk off sessions in the bathroom, to work up the courage to actually send Alyssa an email through her own personal escort site linked in the ad. He chickened out at least four times, but once he sent that first message, he knew immediately he was in trouble if she responded.\n\nShe did.\n\nAnd he was.\n\n=====<br ><br >That first email came to Cassie the way they always do. In the middle of the night, while she was sleeping. Guys love sending these initial inquiries at ungodly late times.\n\nIt makes sense. You're up late, winding down from work and ready to go to sleep so your brain turns to sex. Maybe you slog through another boring missionary-only, lights off session with your partner. Or maybe you jerk off alone.\n\nEither way, it's prime time for reaching out to a sex worker for your unfulfilled fantasy and while Cassie knew \"Roger's\" inquiry was probably a waste of time like the other nine she got that day, it's always worth responding to see where things go.\n\nThe key was to keep it simple, short and sweet. Never get specific about sex acts in an email, never tie sex acts to money. Set up a couple of obstacles to trip up your time-wasters or law enforcement officers looking to set up a sting.\n\nIt was a time tested system Cassie worked out from weeks of research on a sex worker Reddit board and DMs to real-life escorts who appeared friendly on Twitter. For a bunch of strangers selling their bodies, the sex worker community can be oddly reassuring at times and it helped her immensely when she was just started out.\n\nCassie's first reply to Tony fit all her criteria. It took 30 seconds to send and she immediately put it out of mind. It wasn't until he answered that email, paid half her rate up front and they actually set up a time to meet that this felt real.\n\nThat was a week ago. Tonight's the night they agreed to get together and Cassie was ready to make quick work of her latest client. The faster you get them off, the faster you can go home. With a body like hers, that was never much of a challenge. It wasn't always that way.\n\nCassie grew up as the youngest of three sisters and never felt particularly great about her appearance. For the first 16 years of her life, she looked like a stereotypical awkward teenage tomboy. She wore baseball caps, baggy t-shirts and ragged jeans and could not have cared less about her appearance.\n\nIt wasn't until she caught a late growth spurt and suddenly had bigger tits and a shapelier ass than either of her siblings that things really changed, both physically and mentally. In a span of one summer, she went from being invisible to the opposite sex to the girl everyone of both sexes snuck a peek at when they thought she wasn't looking.\n\nAnd the boys? The same ones who used to be mean and make fun of her for her flat chest and awkward clothes were the ones suddenly tripping over themselves to have a chance at her.\n\nCassie's attitude didn't change too much internally as she grew up but she wasn't stupid. She was always the same girl at her core but she knew her appearance was an advantage and she used it as such. In college, she always wore lower cut shirts when she was out with friends and she NEVER paid for a drink.\n\nIn fact, college was the first time she was ever asked if she'd trade sex for money.\n\nHis name was Greg. He was an ex-boyfriend but not someone you'd ever take seriously. Months after they broke up, Cassie ran into him on a night out at the local Irish dive bar. It's a night she won't forget and she still occasionally laughed about it when it popped in her mind.\n\n\"Hey Cass, I miss you,\" Greg slurred. \"Let's hook up tonight. Come on. I just wanna have fun.\"\n\n\"You're drunk,\" she replied, waiving him away. \"Go home.\"\n\n\"Come on,\" he insisted. \"I miss you. Let's have fun. I'll, like, give you some money or whatever.\"\n\n\"I'm not a whore, asshole,\" Cassie said, taking a drag from a half-smoked cigarette. \"If you want a hooker, go online and get one.\"\n\nCassie never fucked Greg again but she thought about his offer for longer than she'd ever admit.\n\nWhy not? She liked sex. She liked making money. And, hell, it was 2014. Sex work isn't even that frowned upon anymore. Chances are, if you asked enough people, you'll find someone who had sold nudes or stripped before. If they haven't and they're under 30, they've probably taken the photos and sent them to someone for free anyway. Why not make some cash while you're doing it?",
        "That thought lingered like a seed buried deep in her brain for a few years. Eventually, it grew into posting nude photos on Reddit to see what the reaction would be. Then selling custom nudes to her followers. Then, finally, getting propositioned offline again.\n\nIt wasn't until 2017 that Cassie took money for real-life sex work and her first experience was about as boring as it gets. The guy was named Ed. He was a coworker at her day job in an auto insurance company and, while drunk one night, he offered her $300 to fuck. She turned him down. He wasn't that attractive and she wasn't interested.\n\nBut when he offered her $200 just to get topless and let him jerk off in front of her? Who could say no to such easy money?\n\nHe lasted five minutes. She didn't actually have to do anything.\n\nImmediately, she was hooked.\n\nThe more Cassie thought about becoming an escort, the more it excited her. Sure, sex with random people you meet on Tinder or in a bar is fun but sex with a complete stranger? When it's also kind of against the law? There's something hot about that.\n\nIt took Cassie until she was 31 before she thought about seriously doing it. It took her another 10 months to put up her first ad but, once she did, there was no turning back. On her best nights, she got paid to sit and listen to guys complain about their lives. On her worst, she had to fuck some unattractive mid-level white collar douchebag who could only last, maybe, ten minutes.\n\nThat was three years ago. And though she doesn't take a lot of clients, Cassie's built a steady customer base and only advertises occasionally when the need arises. She still has her insurance job but it's mostly to keep appearances for her friends and family. The sex work was the real money-maker and, if she played her cards right, it would be the reason she'd retire decades before she would have otherwise.\n\nSex work is also how she started talking to Roger and tonight, she was going to meet him and they were going to have sex. It was going to be quick. It was going to be easy. And she was going to be $1,200 richer. Or ... that's what she told herself as she headed out the door to his hotel room.\n\n=====\n\nThe red glow of the hotel alarm clock read 7:59 p.m. Tony knew his date would be there momentarily. That still didn't prepare him for when the knock actually came.\n\n* knock knock *\n\n \n\n\"Oh God,\" he thought. \"Here we go.\"\n\nTony had played this scenario out in his head a million times and he knew how he wanted to approach it but, it was still so different now that this was real life.\n\nIn porn, this is the moment where the viewer knows things are about to go down. The confident man opens the door, the escort comes in, they talk details and then the sex begins.\n\nIn real life, it's so much more nerve-racking.\n\nTony looked at the clock one last time, took a deep breath and made his way into the bathroom right before the knock came. The way the room was laid out, it was the best way for him to make his first impression.\n\nTony had booked a nice little suite on the ground floor of a pretty busy hotel on International Drive, a popular spot for tourists going to and coming from Disney, which was 10 or so minutes down the road.\n\nHe chose the spot for its quick access to the interstate, because it was popular enough that people coming in and out at all hours wouldn't seem odd and because he knew his wife hated tourists in her state enough that she'd NEVER accidentally discover him there. If you live in Florida, the last thing you want to do is deal with the zombie-like herds who come to the state, stuff their fat asses and triple chins into the same three chain restaurants and leave proclaiming it the best vacation spot in the world.\n\nThe suite was surprisingly bigger than he expected for the price and was organized in an 'L' shape with a kitchen area and a full-size fridge greeting visitors as they first walked in.\n\nTony used the fridge to store a few Gatorades for himself, a six pack of Coke, a couple of bottles of water and a bottle of champagne in case Alyssa was thirsty. He tried to cover all his bases with the beverages.\n\nThe room also had two tall chairs, a full working kitchen with oven and a sink and a beautiful marble counter. On the left of the kitchen was a bathroom, which had a small, enclosed shower, a large mirror over the sink and a full-size mirror on the wall.\n\nIt was the perfect suite for the tourist clients who usually booked it and, inside, there was a small living room space with a dark brown couch, a beige chair that was deceptively comfortable, a small wooden table to rest snacks on and two end tables with white lamps on them.\n\nThe living room led right into an open-area bedroom, which came equipped with a King size bed and a couple more end tables and lamps but was otherwise about as basic as could be expected.\n\nTony chose this room intentionally as it had everything he needed to play out the fantasy he'd had in his mind most of his adult life. He mentally envisioned this hundreds of times.\n\nThe plan was to leave the door slightly ajar, hear his companion knock, tell her to let herself in and seconds later stroll out of the bathroom casually to seem as confident as possible. He wanted to look like someone who had done this before and not a nervous rookie.\n\nNow that this moment was here, however, he was anything but confident.\n\nHe heard her knock. His heart beat increased. <br ><br >\"Come in,\" he said from the bathroom, grabbing a paper towel to wipe the sweat from his head one last time.\n\nThe door slowly opened and Tony took a look in the mirror over the sink one last time. He took a deep breath, gave himself a mini pep talk and prepared to walk out. Then he heard her first words. She was here. For real.\n\n\"Hello?,\" Cassie said to an empty room. \"It's Alyssa. I'm looking for Roger?\"\n\nTony walked toward the bathroom door and headed to the voice that called out his made-up name. The moment he saw her for the first time, he couldn't help himself. Without thinking and before he could even process what he was witnessing, the words fell out of his mouth.\n\n\"Oh fuck.\"\n\n=====<br ><br >Five minutes earlier, Cassie had arrived to the hotel.\n\nAs she entered the parking lot, she went through her usual checklist in her head. It was a simple ritual but one that ensured her protection and allowed her to get into what she called her \"hooker mentality.\"\n\nIt's an important mindset, especially for someone like Cassie who likes to keep her personal and professional lives separate. By only getting in \"hooker mentality\" when she was getting ready to meet a client, Cassie was able to treat that part of her life like a character she was playing. It made it much easier to distinguish between the person who went to work every day and seemed to be your average American business woman as opposed to the person who sucked dick and fucked for cash.\n\nCassie drove past the room Roger said he was in twice, scanned around for anything that seemed suspicious and circled back to the front of the hotel to park. No cameras. No suspicious vehicles. So far so good.\n\nCassie chose the closest spot next to the exit when she parked her car. The good news was, a spot like this made her feel much safer in case she had to make a run for it and return for the car later. The bad news was it made the walk to her clients' room longer and left her more time to think and get nervous. Even in her third year doing this, butterflies were inevitable.\n\nA few minutes before she arrived to the hotel, Cassie sent a text to her friend Jenny to let her know exactly where she would be if something happened, roughly how long they'd be and when to expect an \"all safe\" text later that night with a codeword only the two of them knew. That last part might have been a bit much but, hey, it's better to be safe than sorry.\n\nCassie had only ever been late with that \"all safe\" text once and that was because she lost track of time after a particularly great session with a client who paid her $3,000 just to eat her pussy. Too bad every client couldn't be like that.\n\nStill, it's not the kind of mistake to make often. Not when you're meeting strangers in private hotel rooms and doing your best to keep it under the radar from the people in your day-to-day life.\n\nCassie was meticulous in her planning of these sessions and that's why she only had a handful that weren't great.\n\nIt started with her appearance. She arrived at every client booking wearing run-down mom jeans and a loose-fitting t-shirt. Her hair was never overly done. Her makeup was simple but effective. It was much easier to blend in that way and she could fit whatever sexy lingerie she needed to wear and any hair and makeup products for last minute or needier clients in the travel-sized luggage case that she always had by her side for these types of dates\n\nIt's especially easy to blend in at a place like the hotel Roger chose, one that serves tons of tourists who don't know anyone else or pay attention to much beyond their own vacations and itineraries.\n\nIt helped, of course, that most of Cassie's clients weren't looking for the stereotypical \"escort,\" that people might see on TV. The ones wearing cliche high heeled shoes that would make walking more than ten feet impossible. The ones who have their tits out the minute they get ready to meet a client. The ones whose appearance practically screams \"pay me to fuck.\"\n\nIf Cassie were escorting in Vegas, which she ruled out pretty early on in her career, she might have approached the job differently. Maybe she'd look more like the stereotype.\n\nServing clients in tourist-friendly Orlando, though, was much easier than Vegas and it allowed her to stay close to home. That was important. She didn't to live too far away and have to alter her day-to-day life with friends and family. But she wanted to be far enough away that the risk of running into someone she knew was pretty low.\n\nOrlando offered the perfect balance. After all, if you live in Florida, the last thing you want to deal with are the vacationing tourists who ruin everything.\n\nCassie did live the escort lifestyle in other ways. She had all the sexy clothes expected from a woman in her position and more sex toys than she ever thought she'd own but most of that stuff stays tucked away in boxes in her closet unless needed for a client.\n\nThe clients rarely asked for them but when they did? She'd happily oblige ... but not until she got to their room and dressed up in the bathroom on site. Safety was always the top priority and keeping her appearance mundane until it was time to get to work kept her off the radar of those who might object to seeing a paid sex worker on their property.\n\nRoger's request for her outfit played right into her comfort zone. He wanted to see her in all black, with black stockings on and a garter belt. He also asked her to bring a sexy black bra and thong and she had that all in her bag. What's more, he wanted her to wear normal clothes on top of that and start their session by stripping for him before giving him a lap dance.\n\nIt was about as basic a request as you can get in this line of work, Cassie thought, and given her experience with those types of customers, they usually popped seconds into the session so she figured it wouldn't be a particularly long night. Still, she DVR'd her favorite show that night just in case things went the full hour she had been paid for.\n\nCassie hadn't seen a photo of Roger prior to her visit but she expected him to be like the majority of her clients. Slightly chubby, balding, mid 40s and completely awful at pleasing a woman who wasn't getting paid.\n\nShe checked her face in the rear view mirror of her car one last time before leaving. Her eyebrows looked great, there was nothing in her teeth and she was ready to go.\n\nIt took her a few moments to reach Roger's hotel room and, when she did, she noticed the door was slightly ajar, with the slide-lock that provided extra security propped in between the door and the hinge to allow guests to come in at ease.\n\nStill, she knocked. It was the professional thing to do.\n\n\"Come in\" she heard a voice say.\n\nCassie opened the door and saw a pretty nice, but empty, hotel room.\n\n\"Hello?,\" she said to an empty room. \"It's Alyssa. I'm looking for Roger?\"\n\nShe saw the bathroom door to her left was open and knew her soon-to-be client was about to come out. The moment she saw him, she couldn't help herself. In an instant, her \"hooker mentality\" was shattered, her mouth was opened and the words poured out.\n\n\"Oh shit.\"\n\n=====<br ><br >Two profanities. Uttered a split second apart. From two people who both knew why they were in this hotel room but couldn't work up the courage to talk about it.\n\nIt had only been about 30 seconds since Tony walked out of an empty bathroom and ran into his cousin Cassie but those seconds felt like years.\n\nNeither knew what to say next. What could they say? They were both busted. Their secrets that they had spent so much time and effort to keep, gone.\n\nTony spoke first. Not because he wanted to but because he had to.\n\n\"What the fuck?\" he asked.\n\nSilence.\n\n\"What, what, what are you ... why are you ... huh?\" he stumbled out.\n\nCassie wanted to cry. She didn't even hear Tony's words.\n\nIt's not that she thought she was too smart to get outed as an escort. That was part of the job. But she didn't expect it to be a member of her own God damn family who caught her in the act.\n\nHe must have known it was her. He must have been able to tell from the ad. Or the email address. Or the something. Anything. It didn't make sense. She was so careful. She made sure to get his name and his referen...\n\nFuck.\n\nIn an instant, Cassie thought back to all the moments she defied her usual screening process in the lead up to this encounter. How could she be so stupid.? Worse, what the hell was she supposed to say now? She was busted. One hundred percent.\n\n\"What are you doing here?\" Tony asked again, this time more sternly.\n\nWait.\n\nThat's it.\n\nCassie finally figured it out.\n\n\"Hold on. YOU? YOU ordered an escort?\" she couldn't stop herself from asking that question in a way that sounded like she was shaming him. In reality, that wasn't her intent but she didn't know that. She was scared and just trying to make sense of this entire situation.\n\n\"YOU'RE an escort?\" Tony asked back.\n\nNeither spoke for what, again, seemed like forever.\n\n\"I've got to ...\" Cassie stuttered. \"I've got to get out of here.\"\n\nBefore Tony could process what just happened, Cassie turned around and bolted out of the room. It took the sound of the door bouncing hard off the hinge to shake Tony from his frozen state.\n\nHe didn't say a word. He walked over to the couch in his room and sat down on it, awe-struck at the sheer stupidity required to order your own fucking cousin as an escort.\n\nIf he wasn't so scared about what would happen next, he would have found this whole scenario hilarious. In reality, it was pretty funny. But not right now.\n\nRight now he wanted to throw up.<br ><br >=====<br ><br >The moment Cassie finally processed what she was going through, she knew she had to get the hell out of this hotel room.\n\nGrabbing the luggage case she placed on the floor when she walked in, she turned away from her cousin, grabbed the handle of his hotel room door and flew out of that room. She could hear the door bounce on her way out. Cassie bolted for her car. She walked faster and with more purpose than ever before. She. Can. Not. Have this discussion. Not with him. Not with family.\n\nHe wouldn't understand why she was doing what she was doing. It's one thing to idolize the classic Hollywood hooker stereotype that everyone who does sex work is damaged or looking for love but that's really not her. She does it because she wants to and when you're trading sex for money, there are people who get it and people who don't. No way would HE get it.\n\nSpeaking of ... what in the fuck was he even doing there? Tony was a normal guy and in a happy marriage. Was he really cheating on Kayla? He's the LAST person she would've expected that from.\n\n\"I've got to get home,\" she thought.\n\nCassie made it all the way to her car, tossed her luggage back into her trunk and turned the key into her ignition before she realized she couldn't go anywhere. She was stuck.\n\n\"Shit.\"\n\nShe might have wanted to leave. Every bit of her instinct was that she needed to leave. But she couldn't. She couldn't leave it like that.\n\nShe sat in her driver's side seat with the ignition turned on and the seatbelt warning beeping for at least five minutes before she knew what she needed to do.\n\nShe got out of the car.\n\n=====<br >\n\nWhat do you do when your family finds out you tried to pick up an escort?\n\nTony sat on the dark brown couch in his hotel room wondering that and trying to play out how that talk would go with his mother, sister, brother and inevitably his wife.\n\nNow, his wife wasn't likely to be upset because they did have an understanding but the entire point of their agreement was to not have it come up in their day-to-day lives. Trying to hire your cousin to have sex with you for money was the exact opposite of that.\n\n\"How was I supposed to know?\" he thought.\n\nThinking back, there really was no way he would've known it was Cassie in those ads. For one thing -- and, yes, he knew this is a stupid thing to say -- she wasn't using her real name.\n\nFor another, none of her photos had shown her face.\n\nFrankly, he'd never thought of his cousin in a sexual way before. How was he supposed to know that's what she did for work? He wasn't all that close to her, really. Sure, they saw each other at family gatherings and would chat for a bit but she's the LAST person he would picture doing sex work.\n\nOh God.\n\nShe's a hooker.\n\nShe's a fucking hooker.\n\nTony tried to wrap his head around the decisions that had led to this moment but it was Cassie's that concerned him the most. How long had she been doing this? Did she really sleep with strangers for cash? How could she do that to herself? That's so disgusting and shameful.\n\nThe irony that Tony hired her for the very thing he wanted to mentally shame her for wasn't lost on him.\n\n\"You know what?\" he thought. \"Who the hell am I to judge?'\n\nCassie might have a million reasons she does what she does but exactly zero of them were Tony's business.\n\nAfter all, if she really cared what he thought of her chosen field, she would have told him about it long before she walked into his hotel room. And judging by the quick way she stormed off, it was clear she wasn't interested in having that discussion now.\n\nWould they ever talk about? It's hard to tell. That's just not something easy to bring up in conversation. Maybe in a few years they'll be able to laugh and joke about it but, even then, that sounded delusional.\n\nWhat was more likely, he thought, was that this would make every family gathering they were both at incredibly awkward for the rest of their lives. No way would she want to bring it up, he thought. And it's not like he'd be eager to do so either.\n\nIt took a little while but the fear Tony felt in the immediate moments of walking in on Cassie eventually faded. In its place came a rush of embarrassment and he felt like an idiot.\n\n\"Only a dumbass would try to hire his cousin to be his escort.\" he thought, cupping his forehead in his hands and rubbing his temple.\n\nAnd he'd already paid her. In advance. Say goodbye to that money.\n\nWhat a stupid decision. What a dumb night. Fuck this.\n\nIt took a few minutes for Tony to get over his stupidity but when he finally accepted he'd have to cut his losses, he felt ready to get off the couch and pack his stuff for an unexpected early checkout.\n\nThe moment he got up, though, he heard the one sound in the world he really wasn't prepared for.",
        "It was a knock at his door. <br ><br >=====<br ><br >\"What the fuck am I doing? What the fuck am I doing?\"\n\nCassie must have asked herself that question ten times as she walked back to her cousin's hotel room. She didn't have her luggage this time and any and all of the confidence she walked in with the first time was long gone.\n\nShe really should have left. She can feel the weight of that decision now more clearly than ever before. But something kept stopping her. She had to fix this. It was too risky not to.\n\nShe didn't know exactly what to expect but she had hoped her cousin would answer and they could talk about this like adults. Yes, it was going to be awkward but she had spent too long building this life to let it be ruined by a 20-second misunderstanding.\n\nShe knocked again.<br ><br >=====<br ><br >Tony froze the moment he heard the sound at the door. In the back of his mind, he knew who it was but he held out hope that maybe it was housekeeping coming to clean the room.\n\n\"At eight o'clock at night?\" he asked himself silently. \"Are you stupid?\"\n\nNope. He knew Cassie was on the other side of that door and, if he opened it, things were about to get weird. She knocked again.\n\n\"Come on, open up,\" she said.\n\nTony opened the door a crack, looked outside and saw his cousin standing on the other side of it. Just as he feared. She looked flustered but that didn't change the fact that she was quite literally the last person in the world he wanted to talk to right now.\n\n\"Can I come in?\" she asked.\n\n\"I guess,\" he replied.\n\n\"Look,\" she said. \"I don't want to have this talk any more than you do. Trust me.\"\n\nTony let her in against his better judgement and hoped whatever she had to say would be quick and to the point so he could get out of here and forget this whole thing had ever happened.\n\nHe walked over the fridge and grabbed a bottle of the Gatorade he had bought earlier that afternoon, back when he was looking forward to being in a hotel room with the knockout he saw in the ad. Before he knew who that body belonged to.\n\n\"Okay,\" she said. \"I know this is weird. I know. I'm sorry for leaving like that but, I ... I really don't know what to say.\"\n\n\"Yeah,\" he replied. \"Me either.\"\n\n\"So we've got to talk to about this. Obviously.\"\n\n\"Yep,\" he said, dejected.\n\n\"I wasn't expecting to see you here,\" she said. \"And I know you didn't expect me.\"\n\n<br >\"That's an understatement.\"\n\n\"But here we are,\" Cassie said, thinking hard about what she was going to say next. \"We're adults. And we're family. And I don't think this needs to be a big deal. You found out what I do to make money. I found out you cheat on your wife with escorts.\"\n\n\"Hey, fuck you,\" Tony responded, pissed off for the first time. \"Don't try to blame me for this shit and act like I did something wrong here.\"\n\n\"And I did?\" Cassie said.\n\n\"Well, you're the one selling pussy.\"\n\n\"You know what, fuck you too asshole,\" Cassie said, fuming. She considered leaving yet again.\n\nThe two of them let the silence hang in the air. They'd both crossed a line and this conversation wasn't going where either of them wanted it to.\n\nCassie and Tony both needed to leave this room without making the other person an enemy. If word of this got out, it would be bad for both of them, especially if it got around to other family members. Cassie had no desire to explain her career choices to her mother or sisters and Tony had even less desire to try to talk to anyone about his sex life with his wife.\n\nYet there's exactly where he took the conversation next.\n\n\"I'm not cheating on anyone.\" he said.\n\n\"Oh bullshit,\" Cassie said. \"You think I don't remember our emails? Is this the point where you convince me you were hiring me to tell me how wrong being an escort is?\"\n\n\"I never said that,\" he replied. \"All I'm saying is I'm not cheating on anyone. Kayla knows I'm here.\"\n\n\"She WHAT?!?!?!\" Cassie said, shocked.\n\n\"She knows I'm here,\" Tony said.\n\n\"I don't buy it,\"\n\n\"No, seriously. She does,\" Tony said. \"We have an arrangement. It's not like a, I mean I guess it kind of is but it's not ... anyway, I've never done this before but I'm not cheating. I've always wanted to hire an escort and she ... well, she kind of said I could.\"\n\n\"YOU TOLD YOUR WIFE ABOUT ME?\" Cassie was practically screaming at this point.\n\n\"Obviously not, dipshit,\" Tony replied, growing more annoyed with every word. \"I didn't know it was going to be YOU who showed up. I hired an escort three towns over from my house, away from where I know ANYONE and YOU showed up? What are you even doing here? Does your mom know what you're doing?\"\n\n\"It's none of her business and it's none of your business,\" Cassie said.\n\n\"Like hell it's not,\" Tony replied. \"It might not have been my business ten minutes ago but it damn well is now.\"\n\n\"No, it's not,\" Cassie said, matter of factly. \"And, frankly, I'm only back here to tell you to mind your fucking business and keep this to yourself.\"\n\n\"Or what?\" he said.\n\n\"Or I'll kick your ass,\" Cassie said. She didn't want to but the comment broke her mood and she laughed. She knew there was no chance she could physically intimidate her cousin. He easily had 120 pounds on her and she's not exactly the ass-kicking type.\n\n\"Honestly, I'd like to see you try,\" Tony said, happy for the little hint of a lighthearted break from the tone they've had thus far. \"I've already paid you so I guess I may as well get something for my money.\"\n\n\"I mean, obviously I'm going to give you your money back,\" Cassie said. \"I'm not a bitch.\"\n\n\"Yeah, I know,\" he replied.\n\nAnother awkward moment of silence. Tony stared at his phone, unsure of what he was looking for but knowing it beat the hell out of looking his cousin in the eye right now.\n\n\"So what now?\" he said, breaking the quiet.\n\n\"What do you mean?\" she said.\n\n\"Well, this isn't how I envisioned tonight going,\" Tony said. \"And, honestly, I think I want to cut my losses and get out of here.\"\n\n\"Okay,\" Cassie said. \"That's fine with me.\"\n\n\"Cool,\"\n\n\"You're not going to tell anyone about this, right?\" she asked.\n\n\"Tell them what exactly?\" Tony wondered. \"That I spent ten years working up the courage to hire an escort and the first time I do, I get my freaking cousin?\"\n\nCassie didn't see it coming but that line broke her. She couldn't help herself. She started to laugh uncontrollably, right in Tony's face. Her laughter, coupled with the ridiculousness of the situation he found himself in, made him break too.\n\n\"Yeah, that sucks, dude,\" Cassie eked out. \"That's ... well, that's .... that's something.\"\n\nIt took Cassie a few moments to recompose herself but she felt a lot better about things and was relieved at how this conversation had turned out compared to how it started. As awkward as running into a family member was in this situation, at least with Tony she knew she could joke about it. They weren't really \"close\" as cousins but they had a decent enough relationship that they could find the silliness in this.\n\n\"I, uhh, I just need to know you're not going to tell anyone about this, okay?\" she asked. \"It's really important.\"\n\n\"How long have you been doing this?\" Tony asked.\n\n\"Why?\"<br ><br >\"I just ... I have to know,\" he said. \"How have you kept this secret?\"\n\n\"Luck, I guess,\" she said. \"I never thought I'd run into something like this. I've been so careful. I guess I fucked up. I should have made you send me your ID or a reference or something. If I knew it was you, I would have never shown up.\"\n\n\"Thanks,\" Tony replied. \"That does wonders for my confidence.\"\n\n\"Come on,\" Cassie said. \"You know what I mean.\"\n\n\"Nah, I get it,\" Tony said. \"Your secret is safe with me. As long as you don't tell anyone it was me you ran into.\"\n\n\"Ahh damn,\" she replied. \"I was just getting ready to tweet about this and tag you. Can you imagine how many likes I'd get if I let everyone know I almost got paid to fuck my cousin?\"\n\n\"I mean, technically you did get paid,\" Tony said, laughing.\n\n\"You know what I mean, jerk,\" she said.\n\n\"Yeah, yeah, fine,\" Tony said. \"We both take this secret to our graves.\"\n\n\"Good,\" Cassie said, breathing a sigh of relief.\n\n=====<br >\n\nCassie and Tony spent the next 20 minutes unsure of what to do next. On the one hand, they both wanted so badly to leave this room. On the other, they didn't want to be the one to make the first move to exit.\n\nSo they did what any pair of cousins would do. They talked. A lot.\n\nFor 20 minutes, they each tried to make things as easygoing as possible and, if you happened to walk in on them, you'd think they were just catching up and casually hanging out.\n\nTony told Cassie all about his work and the projects he's been doing around the house. Cassie told Tony all about her friends and the random Zumba class she started taking once a week.\n\nIt's hard to describe how relaxed this all felt, Tony thought. It's almost like this misunderstanding was a good thing and might even bring them closer together.\n\n\"So I have a question,\" Cassie said. Tony knew immediately based on tone alone that those comfortable feelings were about to go out the window.\n\n\"Shoot,\" he said.\n\n\"Why am I here?\" she asked.\n\n\"Come on now,\" he said. \"You know why.\"\n\n\"No, no,\" she said. \"I'm not asking why am I here in the literal sense of why did you call me. I'm asking why you hired an escort. Sorry. Attempted to hire an escort.\"\n\n\"You wouldn't understand,\" he said.\n\n\"Try me,\" she replied.\n\nTony spent a good 30 seconds trying to figure out how to phrase his next statement but it still came out more awkward than he intended. Talking sex with any family member, let alone one you just found out is a sexual professional, is not easy.\n\n\"I wanted to try it,\" he said. \"It's a fantasy of mine. Has been for years.\"\n\n\"Okay but why an escort?\" Cassie said. \"You said Kayla is okay with it, which I still can't believe. Why not just jump on Tinder or something and find someone else to get your rocks off with?\"\n\n\"The sex isn't really the point,\" he said. \"I can't really explain it and I definitely don't want to explain it to you. This is really fucking weird.\"\n\n\"Listen, I don't know what you think I do when I'm working with clients but half my job is listening,\" she said. \"Try me.\"\n\n\"I like the fantasy,\" he said. \"I love Kayla. You know that. There's no one I'd rather spend my life with but sometimes ... sometimes I just have needs she can't fill.\"\n\n\"Ahh,\" Cassie said, nodding.\n\n\"She's amazing but she's my wife,\" he explained. \"And when you marry someone and you're with them for years, the sex just ... \"\n\nHe really didn't want to say this part.\n\n\"The sex just isn't as exciting as it used to be,\" he finished.\n\nCassie let that statement hang in the air for a moment.\n\n\"It's not that we don't have sex,\" he said. \"We still do. But it's not very often and, when it does happen, it doesn't have that same feeling that it used to.\"\n\n\"Okay,\" she said, letting him finish.\n\n\"I just wanted to feel that again,\" he said. \"That feeling of doing something new. God, I sound like a douche. I figured I'd hire someone for that. A professional. Plus, it's always been a fantasy of mine to meet someone new, give them money, fuck like an animal and say goodbye to them. No strings attached.\"\n\n\"Ahh,\" she said. \"Now I get it. But why me? You definitely saw my photos. You mean you didn't know?\"\n\n\"Didn't know you were fucking hot?\" Tony said, immediately regretting his phrasing. \"Sorry. That's weird.\"\n\n\"Yeah it is.\"\n\nA few moments passed.\n\n\"So why are you here? Why are you an escort?\" Tony asked.\n\n\"I already told you that's none of your business,\" she said, chuckling as she spoke so she didn't make things tense again.\n\n\"Come on,\" he pleaded. \"You asked me a question. I'm asking you one. I thought we were having a heart to heart. What are you doing here?\"\n\n\"What do you mean?\" Cassie asked.\n\n\"I mean,\" Tony said, preparing to emphasize every word. \"What. Are. YOU. doing HERE.\"\n\n\"Do you really need to ask that?\" Cassie sighed. \"Fine. I'll bite. But only because you were nice and answered my question first. After I leave this room we're never talking about this again.\"\n\n\"Deal,\" Tony said. <br ><br >\"I'm here because I'm an escort,\" she said. \"And I'm an escort because I like being an escort.\"\n\n\"Seriously?\" he asked.\n\n\"Yeah,\" she said. \"I've been doing it for like three years. It's crazy good money, it's a lot of fun and most times I'm not running into people I know.\"\n\nThat line got a laugh out of Tony. Cassie decided to let her guard down a little bit.\n\n\"Okay so, like, this isn't anyone's business but my own but I really like doing this,\" she said. \"I like getting paid to make people happy and I like having a job I know helps me help people.\"\n\n\"You sound like a social worker,\" Tony joked.\n\n\"Fuck you,\" Cassie said, laughing. \"Yeah. Make fun of the escort. How original. I'm not trying to be Julia Roberts or whatever. I'm not ridiculous. I know what this is and why I'm doing it. I get paid to have sex for a living and it might not be 'normal' or whatever but I help people.\"\n\n\"Uh huh,\" Tony said.\n\n\"Seriously,\" she said. \"I have clients I've seen for YEARS who treat me incredibly well and tell me every time I see them that I'm the only thing they look forward to.\"\n\nAs Cassie spoke, Tony couldn't help but notice she really sounded convincing. She was either an incredible actress or she really did believe these things about sex work.\n\n\"It's not just about the sex,\" she said. \"It's about making a connection. It's about being able to be vulnerable with someone. It's about having fun.\"\n\n\"By fucking,\" Tony said.\n\n\"Well, yeah,\" Cassie replied.\n\n\"If you love your job so much, why do you charge for it?\" Tony asked, genuinely interested in where Cassie would take the next answer.\n\n\"I'm REALLY good at my job,\" she said. \"Why shouldn't I get paid?\"\n\nCassie and Tony looked at each other and both laughed. What a perfect way to end an odd evening.\n\n\"Anyway, I've uh, I've got to get going,\" Cassie said, texting her friend Jenny that she was headed home.\n\n\"Alright,\" Tony said. \"I guess I should get out of here too.\"\n\n\"Look, I'm sorry,\" Cassie said. \"I know this didn't turn out the way you planned.\"\n\n\"It's fine,\" he said. \"It kind of is what it is.\"\n\n\"So I can keep the money then?\" Cassie said, with a smile on her face.\n\n\"Nope,\" Tony said. \"I'm gonna need that cash back so I can buy as much alcohol as it takes to forget all about this.\"\n\n\"Fair enough,\" Cassie said. \"I'll Paypal you when I get home.\"\n\n\"Cool,\" Tony said, making his way back over to the bed to watch some TV while he waited for the coast to clear and make his way out of the hotel. \"I guess I'll see ya later.\"\n\n\"Yeah,\" Cassie said, grabbing the door. \"I guess so.\"\n\n=====<br ><br >Cassie walked out of Tony's hotel for the second time and, somehow, felt worse than before.\n\nEven though the conversation went great, and she wasn't mad anymore, she couldn't shake the feeling that something was wrong. She was sad for him. What a shitty way to ruin a clients' fantasy.\n\n\"He's not a client, idiot,\" she scolded herself. \"He's your fucking cousin!\"\n\nBut what was she supposed to do? She wasn't going to sleep with him and the few escort friends she had, all had their own booking processes. There's no way she could call one of them to fuck her cousin -- what a strange statement by the way-- and she definitely couldn't do so without raising red flags and making them think she was trying to set them up.\n\nAnd, even if she wasn't, who tries to get their FAMILY MEMBERS laid?\n\nCassie got back to her car and looked inside to make sure her luggage was still where she left it, a habit she picked up from living in shitty neighborhoods most of her life and never quite trusting those around her. It was. She felt relieved.\n\n\"I'm in my car,\" she texted Jenny.\n\n\"How was it?\" Jenny asked.\n\n\"It was a dud,\" Cassie said. \"Nothing special.\"\n\n\"Bummer,\" Jenny said. \"Let me know when you get home. And if you want to hang out this weekend, I'm free Saturday.\"\n\nWith that, Cassie ended the conversation and got ready to drive home. For the second time in the last 40 minutes, she had her key in the ignition. She started her car, carefully backed out of her spot and made her way to the exit. As she waited for the car in front of her to turn left out of the parking lot, she looked down on her phone one last time.\n\nThen she had a thought that changed everything.\n\n=====<br ><br >The third knock nearly startled Tony out of his shoes. Literally.\n\nAs he stood close to the hotel room door getting ready to head out, the sound jolted him out of the mental prison he'd locked himself into since Cassie left the room minutes earlier.\n\n\"Shit,\" he thought. \"What now?\"\n\nResigned, he opened the door to see his cousin standing there with her luggage in tow again.\n\n\"Okay, so this is weird but hear me out,\" Cassie said, barging right back into the room without waiting for an invitation.\n\n\"Sure, come on in,\" Tony joked sarcastically. \"Make yourself at home. It's not like I was about to leave or anything.\"\n\n\"Don't make this more awkward than it needs to be,\" Cassie said.\n\n\"Make what awkward?\" he asked.\n\n\"This.\" Cassie said.\n\nWith that, Cassie dragged her suitcase up onto the hotel bed.\n\n\"I don't feel right leaving the way I did and I don't think you do either,\" she said.\n\n\"Umm...\" Tony stuttered, unsure where this was going.\n\nCassie pulled her phone from her pocket, typed in her password and opened up the email that set all of tonight's events in motion.\n\n\"Hey Alyssa,\" she read. \"I saw your ad online and wanted to reach out to book an appointment with you.\"\n\nTony didn't need to listen. He knew what the words in that email said before they were spoken.\n\n\"Stop,\" he pleaded.\n\n\"Just listen for a minute,\" she replied, returning to the email. \"I'm looking for someone to fulfill a specific fantasy of mine and I think your the girl-- by the way, you used the wrong form of that word here.\"\n\n\"Are you really trying to teach me grammar right now?\"\n\n\"I'm just saying.\" Cassie continued. \"I think 'your' the girl. I like your attitude and love the way you look in your photos. You're so sexy.\"\n\nTony couldn't help but blush from embarrassment knowing he called his cousin sexy. Whether that was his intent or not didn't matter. He said it and he said it based on the photos she posted. Family member or not, he liked her body and admitted it.\n\n\"My fantasy is super simple,\" she continued. \"I want to hire you to come to my hotel room, get dressed super sexy in all black, strip for me, give me a lap dance and see what happens from there.\"\n\nTony was mortified.\n\nThank God he didn't get into specifics of the sex acts he really wanted. They weren't weird or anything but hearing his cousin talk about how he wanted her to blow him and let him fuck her for an hour would have been too much to take.\n\n\"I'm STD clear, super discreet, yada yada yada,\" Cassie read, trailing off before she could finish the email. \"You know the rest.\"\n\n\"Yeah, I do,\" he said.\n\n\"Okay,\" she replied.\n\n\"Okay what?\" Tony asked.\n\n\"Well, let's talk about it for a second,\" she said. <br ><br >\"Can we really not?\" Tony pleaded, already beyond embarrassed and just looking for a way to get out of this room without crawling out of his skin.\n\n\"No, no,\" she said. \"I just want to talk.\"\n\n\"About what?\"\n\n\"A striptease? A lap dance?\" she asked.\n\n\"Yeah?\" Tony asked, still unsure what she was getting at.\n\n\"I mean ...\" Cassie paused. Was she really about to say what she came into this room to say? \"I can do that.\"\n\n=====<br ><br >The words hung in the air like moisture on a humid day.\n\n\"What?\" Tony asked.\n\nCassie didn't know what to say next and almost immediately regretted those last four words when they slipped from her mouth. But there was no turning back now. She said what she said. The only thing left to do was to see where things went next.",
        "\"I can do that,\" she said. \"I can give you a striptease and a lap dance.\"\n\n\"You want to strip for me?\" Tony said, his brain still not processing this as real. \"Me? Your cousin?\"\n\n\"Shit,\" Cassie said, defeated. \"Fuck, fuck, fuck. Just forget it. I don't know-\"\n\n\"Don't know what?\"\n\n\"I don't know why I said that,\" she said, feeling her face turn bright red. \"I just, I was in my car and I was getting ready to leave and I felt bad.\"\n\n\"You felt bad?\"\n\n\"I felt bad,\" she continued. \"Just, look, this isn't what either of us wanted but I wasn't kidding earlier. I like doing this and I like making people feel good. I don't like ... I don't like this.\"\n\n\"Well neither do I,\" Tony said. \"This is pretty much the most embarrassing moment of my life.\"\n\nHis words stung her more than he realized.\n\n\"Yeah, me too,\" she said.\n\nGreat. Another uncomfortable silence.\n\nTony spoke first.\n\n\"What do you mean you'll strip for me?\"\n\nThe thought was almost too taboo to even entertain.\n\n\"I mean, if that's what you want,\" Cassie said, more unsure of herself than she'd ever been in a sexual situation before, at least since she awkwardly lost her virginity. \"If that's what you want, I'll do that. It's just a striptease. It doesn't mean anything.\"\n\nTony couldn't believe this. Of all the ways he thought tonight was going to go, this was most certainly not how he pictured it.\n\n\"If it will make you feel better, I'll strip for you,\" she said once more. \"It's not like I have anything you haven't seen before. They're just tits and ass.\"\n\nTits and ass.\n\nThe words sent an unsolicited jolt of electricity through Tony's pants.\n\n\"I won't look at you and you can pretend I'm someone else,\" she said. \"I just, I know I ruined this for you and I know you're the type of person who will never live this down in your head. So if a little striptease makes you feel better, what harm can it really do? Who cares? It's not going to be anymore awkward than this night has already been anyway, so whatever.\"\n\nTony thought about it. In a way, she was right. This night couldn't get more awkward and he already admitted to liking her body when he didn't know it was her he was referencing, so what harm could it cause? It's not like this wasn't already beyond awkward. He may as well get something for his money.\n\nHe really took a moment to look her over, head to toe. Cassie could feel his eyes scanning her and wondered what he was thinking.\n\nThe thought of giving her cousin a striptease and a lap dance was one she came to pretty quickly in her car but now that she's back in this room and it was becoming a very real life possibility, she felt nerves like she'd never felt before.\n\n\"What am I doing?\" She wondered to herself. \"Am I for real right now?\"\n\nThe moment she noticed Tony's eyes scanning her body, she watched them fall rapidly to the floor. He was still embarrassed.\n\nShe had an idea.\n\n\"Okay. I get it,\" she said. \"This is weird, right?\"\n\n\"Yeah.\" he said.\n\n\"Alright,\" she said. \"So don't think of me as your cousin. I'm just Alyssa. I'm the girl you hired to do a job and I'm here to do that job.\"\n\n\"What?\" he replied. \"We can't have sex!\"\n\n\"No!,\" she said, confused. \"That's not what I meant.\"\n\n\"Okay.\"\n\n\"I'm here to do a job and that job is to strip for you,\" she said. \"Let's forget we're related. Forget it's awkward. Let's just do it, have some fun and then we'll go our separate ways.\"\n\nThe thought excited Tony. He couldn't pretend it didn't. Moments earlier, he had to look away from his cousin as he felt the familiar feeling of blood rushing to his dick while picturing her naked.\n\n\"You could have just said you want to keep the money,\" Tony joked.\n\n\"Shut up,\" Cassie countered. \"Do you want me to do this or not?\"\n\n\"It depends,\" he said. \"Are you really going to wear the outfit I asked for and really go all out or just going to plop your titties out of that 90s soccer mom outfit? I've got to be honest. You don't exactly look like an escort right now.\"\n\n\"Hey, asshole,\" she chuckled. \"You're lucky I'm even willing to show you anything.\"\n\n\"Okay,\"\n\n\"Yes, I'll put the full outfit on,\" she said. \"But if I'm doing this, I'm keeping the money.\"\n\n\"You can keep half,\" Tony countered.\n\n\"What?\" she replied.\n\n\"You're only doing half what I paid for and, honestly, your rate is a little ridiculous anyway,\" Tony said, half serious.\n\n\"Fine,\" she said, matter of factly. \"Half for me, half for you. And don't knock my rates. Trust me, I'm worth every single penny. Do we have a deal?\"\n\nTony thought about it for a second. If his cousin kept half the money he'd already paid her, that would be $600. So, essentially, he was paying $300 for a striptease and $300 for a lap dance. Expensive, sure. But he'd already spent the money anyway and a few minutes ago, he thought he lost it all anyway.\n\n\"Okay,\" he said. \"Deal.\"\n\nAnd, with that, Cassie and Tony had come to their first of many taboo arrangements.\n\n=====\n\nWhat exactly are you supposed to do while you wait for your cousin to get dressed up so she can give you a striptease and a lap dance? Tony mused.\n\nAdmittedly, that's not a question most people would have to ask, he thought.\n\nStill, it's the exact scenario Tony found himself in, roughly 45 minutes into what was originally supposed to be his one-hour session with an escort named Alyssa. In an alternate universe somewhere right now, he's fucking a woman he's not related to and getting ready to cum. In this one, though, he was sitting awkwardly on his hotel couch still not 100 percent convinced his cousin Cassie was being serious.\n\nIf this was a joke, it's one of the cruelest he'd ever seen.\n\nAt that same moment, Cassie wasn't exactly sure how serious she was either.\n\nTucked in the same bathroom where Tony psyched himself up before answering the door earlier, Cassie looked at herself and couldn't believe what she was (probably) about to do.\n\nThank God for mirrors, she thought. Cassie hadn't been shy about her appearance in a while but everyone had self doubts now and then and this was certainly a time ripe for insecurity to creep in.\n\nShe knew she looked good. Enough men turned their heads and snuck peeks at her on a daily basis that it would be impossible to deny. But it's one thing for horny guys to want to fuck you, it's another to convince yourself you're attractive. That's where the mirror came in. It was always Cassie's source of confidence when her younger tomboyish self tried to take over her head space and cast doubts in her mind.\n\nFully dressed in the lingerie Tony asked for, she looked like a porn star. A hot one. And even with the extra layer of clothes she put over said lingerie, to make the striptease more exciting, she knew she was a knockout. There's a reason she can charge $1,200 for an hour of her time and men like her cousin were willing to pay it.\n\nHe paid for this. What a weird thought.\n\nCassie took a long look at herself and worked up the nerve to proceed.\n\nShe tried to picture what it was about her body that made even her cousin -- her own cousin -- want to fuck her. At 5' 6'' Cassie was slightly taller than most of the girl she knew. She proudly rocked her 38-24-36 frame, knowing they were measurements most women would kill for.\n\nTonight, she was closer to five-nine, counting her red, double-strapped shoes. And the best part was, once she tossed on that top layer of clothing, nothing about her appearance immediately screamed hooker. Not at first.\n\nShe was wearing tight, acid-washed jeans with small, pre-cut holes on the thighs. At the right angle, her sexy stockings underneath could almost be made out. Tony had asked specifically for the stockings and garter belt.\n\n\"God, that's so weird,'' she thought, remembering who she was getting dressed up for.\n\nCassie loved the way she looked in these jeans. They really compressed her ass in place and gave it that stereotypical 'onion booty' shape. Her upper body didn't look bad either as she had an orange top on over a beautiful but bold black bra underneath. Looking at her objectively, you could tell she had large breasts but that wasn't shown with excessive cleavage. She loved the reveal too much to give that big a hint.\n\nTony was going to lose his mind when she took off this shirt and he saw her bra, she thought. And when she took that off? Hell, he might just cum.\n\n\"Wait,\" she thought, catching herself. \"What the fuck am I thinking?\"\n\nAlone in this bathroom, it was easy for Cassie to get into her \"hooker mentality,\" but it was hard to stay too long given the circumstances of this particular client.\n\nThis striptease wasn't meant to be sexual, she kept reassuring herself. It's a simple matter of biology. Tony was a guy. He wanted what all guys want.\n\n\"He wants tits and ass,\" she thought. \"I'll show him tits and ass. Nothing more to think about. That's it. That's all.\"\n\nNo matter how many times Cassie told herself this wasn't a big deal, deep down she knew differently. There were just so many variables she couldn't predict. It's MUCH different when the client is someone you know. And a family member? There's no playbook that tells you how to handle that when you become an escort.\n\nSure, she'd stripped for clients before. It's a common enough fantasy for guys who like to be teased or know they're going to blow their load almost immediately.\n\nAnd lap dances? Who hasn't jokingly given a friend a lap dance for the fun of it? Maybe that's what this will be. Fun.\n\nStill, the question kept creeping into her mind as she checked one last time to make sure she didn't have any lipstick on her teeth and brushed away the little flyaway strands of hair around her bangs that always gave her trouble when she was nervous and sweaty. It was hard not to sweat when she thought about what could happen next.\n\nWhat if he likes it and wants to go further? What if he tries to touch her? If she's giving him a lap dance, surely she's going to feel his dick? What if he gets hard?\n\nCassie's brain was slammed with these thoughts. One after another after another. She looked at herself in the mirror one final time and shut her brain off.\n\n\"It's fine,\" she thought to herself. \"You've got this. You're in control. You're the professional, he's just a client. This will be over in ten minutes and then you'll go home. Ten minutes, $600. Ten minutes and then you go home, get drunk and pretend it never happened.\"\n\nIf only it were that easy.\n\n=====<br ><br >It's impossible to accurately guess how many times Tony pictured the exact scenario that was about to unfold. Sitting on his hotel couch, in the room he specifically chose because it had a couch like this and had easy, unobstructed access right to the bed, he always wanted his first time with an escort to start with a striptease and a lap dance.\n\nThere's just something fun and exciting about the way the anticipation builds watching a woman peal off piece after piece of clothing. And the lap dance? Whew. To be that close to what you want and have to restrain yourself is a rush like no other. A good lap dance intoxicates you. A great one shuts your brain off and turns you into nothing more than a walking, talking, blood engorged penis that needs to be released.\n\nBut no matter how many times Tony role-played the upcoming scene in his brain, and no matter how many times he pictured various nondescript women doing it for him, he had never forseen a family member staring back at him. This time he would.\n\n\"What am I doing?\" he wondered. \"I can't do this. I've got to get the fuck out of here.\"\n\nThose thoughts were gone the instant Cassie walked out of the bathroom.\n\nThe first thing he noticed was her shirt. In any other context, he would have never paid it a second glance but, this moment, it's the only place his eyes wanted to be.\n\nCassie was wearing an orange top that hugged her curves tightly and really showed off her shape. He imagined what she would look like underneath, specifically how she might look in the bra he asked her to wear. Why a black bra? Well, that was simple. He'd always loved the contrast of dark clothing on a fair complexion. Something about it made it pop visually and gave him an extra little dose of adrenaline.\n\nIt's such a sexy thought. One he specifically sought out more times than he could count. Black lingerie is, thankfully, super common in porn.\n\nAs he pictured his cousin in that black bra, his mind turned to what was underneath it for the first time. He never intended to but he'd be lying if he said he hadn't thought of Cassie naked before tonight. He's a red blooded man and he's known her long enough to see the way she transformed when she hit puberty. You couldn't stop those thoughts from popping in every now and again, especially not when you're a horn-dog teenager.\n\nSave for the occasional glance at stray cleavage at a family function or holiday party, though, Tony never intentionally allowed his mind to wonder onto dirty thoughts of his cousin for too long and he was always quick to focus on something else. He just didn't think of family like that. Until tonight.\n\n\"How do I look?\" Cassie asked, the answer far more important to her self confidence than either of them knew.\n\n\"You look amazing,\" he said.\n\n\"Thanks.\"\n\nCassie made her way out of the bathroom with deliberate steps but it felt unreal, like she was watching someone else play a first-person video game of her life in that moment. She must have made similar walks like this hundreds of times and, sure, there were always butterflies but it was never this bad before.\n\n\"I love that top,\" Tony said.\n\n\"Me too,\" she said. \"I've had it for a little while now. It's super cute.\"\n\nNeither Cassie nor Tony knew what to do next. Neither wanted to be the one to advance this little game to the next phase.\n\nTony once again broke the silence. Not because he wanted to but because it was too painful not to.\n\n\"So ...\" he said. \"Are you, like, okay with this?\"\n\n\"Yeah,\" Cassie said. \"It's no big deal.\"\n\n\"Okay.\"\n\n\"Okay,\" Cassie said, taking a deep breath. She reached and unlocked her phone again. On the counter next to it was a bluetooth speaker she had pulled out of her luggage case a few minutes ago and brought with her for this exact moment. It was a clear cube and changed colors as you listened to music on it. You could also put it on a stationary color. She chose black because it seemed fitting given her cousin's outfit request.\n\n\"What kind of music do you want to listen to?,\" she asked, opening up her Spotify account.\n\n\"Uhh,\" Tony stammered. \"I'm okay with whatever.\"\n\n\"Alright.\"\n\nCassie immediately searched for and played the theme song for the kids show Paw Patrol. It was a joke meant to lighten the mood and it did just that.\n\n\"Are you serious right now?\" Tony laughed, jokingly falling over on the couch. \"OK. Let me be more specific. NOT THAT.\"\n\nCassie laughed, shut off the silly kids show theme song and knew exactly what she needed to search for.\n\nShe was a big fan of Spotify. It never disappointed her and it wouldn't tonight. For a music app with unlimited tracks and artists available, it was ironic that the biggest feature she loved was something the creators likely never put much thought into: Community-created custom playlists for just about any mood.\n\nWhether she was working out and needed some high intensity rock music to elevate her heart rate or wanted some relaxing and soothing background noise while she wound down and read a book before bed, she could always find the exact music she was looking for by hitting the search bar.\n\nTonight was a bit different and a situation she'd never been in before but the app proved itself worth the ten bucks a month she paid once again.\n\nCassie typed in \"Strip Club music\" and found a ton of options but it was the first playlist that popped up, which was aptly titled \"Strip Club Playlist\" that caught her eye.\n\nA mix of 80s hair metal like \"Cherry Pie\" by Warrant, \"Here I go Again\" by Whitesnake and \"Girls, Girls, Girls\" by M\u00f6tley Cr\u00fce, the playlist took classic strip club songs and combined them with the more recent rock and pop hits you'd actually hear if you went into a club today. She knew this because strip clubs were one of her favorite places to go with her girl friends and a great place to get ideas for sexy outfits for the photos she paid to have taken for her ads.\n\nThe playlist was the perfect mix of music for this occasion and, she knew, it would get her into the right mindset.\n\nAs she thumbed through the selections looking to find a good starting point -- which was crucial, she learned, because you have to set a strong tone right from the beginning when you're giving a lap dance -- Tony asked a simple question that Cassie had been dreading.\n\n\"So, uh, how do we do this?\" he said.\n\nImmediately, she was nervous again.\n\n\"Alright, ground rules,\" she said. \"Let's try not to make this awkward.\"\n\nEasier said than done.\n\nEven though Tony was on the couch in front of her and she was a good five or so feet away, she was already closer to him in an intimate setting than she ever planned on being. While she was in the bathroom, she told Tony to move the small wooden table that was in front of the couch and there was now nothing between the two of them but a couple of feet of space and uncomfortable, unspoken thoughts.\n\n\"Err, more awkward,\" she corrected herself, steadying her voice so that what she said next sounded completely unemotional.\n\n\"So, I'm going to strip down to my lingerie first. I'll do that from over here. You can watch me, you can stare but absolutely nothing more than that. If you feel things tightening up 'down there,' you can make adjustments but don't be weird about it. What you do when I leave is your business, not mine and I don't want to think about it.\"\n\nCassie took a deep breath. Already these rules were helping her feel more in control and doing wonders for her confidence.\n\n\"When I'm down to my lingerie, I'll dance for you for a little while and try to keep it sexy,\" she said. \"When I'm ready ... and ONLY when I'm ready, I'll give you your lap dance.\"\n\nTony nervously nodded. Fuck. She might really do this.\n\n\"Nothing funny,\" she warned. \"If you make this weirder than it already is, I'm leaving. You can talk, you can ask questions, I won't punish you for that. I get it. It's strange. But don't get pushy. Don't make me feel weird, okay?\"\n\nTony took a breath and nodded.\n\n\"And no touching,\" she said. \"Absolutely no touching. If I'm OK with you touching after we've started, I'll tell you. If you're not sure if you should, don't. If you think you should, ask first. But I don't want to ruin this and I don't want it to get uncomfortable. Let's just do the tease and the dance and call it a night. Are we clear?\"\n\n\"Definitely,\" Tony said. \"I have one question though.\"\n\n\"Okay?\"\n\n\"Are you ...\" Tony really didn't want to complete this next sentence but he had to know the answer. He had to. \"It's totally cool if you're not going to but are you ... are you planning to ... will you ... how much are you, uh, going to show?\"\n\nCassie sighed. It was a perfectly reasonable question and one with an answer she didn't want to verbalize.\n\n\"That depends on how this goes,\" she said. \"I really can't say. I don't know. I don't want to think about that right now. I want to make this fun for you and maybe I'll show a good amount but I'm not going to do anything I don't want to do. Let's just see how this goes. Okay?\"\n\n\"Okay.\"\n\n\"Good,\" she said, scrolling through the playlist one final time and picking out four songs she wanted to play in a specific order. \"Let's get started.\"\n\n=====<br >\n\nTony was never as nervous in his entire life than he was in this moment right here, right now. His heart was racing. His palms were sweating so badly he had to wipe them on his seat. If Cassie looked at him right now, it would be impossible to see an adult man staring back at her. He looked like a nervous virgin getting ready to kiss a girl for the first time.",
        "\"Can we wait a second?\" Tony said.\n\n\"Why?\"\n\n\"I just need a second to breathe,\" he replied, taking a deep breath.\n\n\"Let me know when you're ready,\" she said.\n\nTony closed his eyes and took short, rapid, deep breaths. It took about 20 seconds before he was in the head space for what was about to happen and, even then, he didn't quite believe it.\n\n\"Hang on,\" Cassie said.\n\nShe walked through the hotel room quickly, making sure the blinds were all shut and no one could see in. It's bad enough she's about to do this. She didn't want an audience. An audience of more than one anyway.\n\nOn her walk, Cassie made sure to shut all the lights in the kitchen and bathroom. She couldn't control the way this room looked and couldn't shut off all the lights to make it \"feel\" like a strip club but this was close enough for a couple of songs.\n\n\"You good?\" she asked Tony one last time.\n\n\"Yeah.\" he said. From where Tony was sitting, he could see his cousin with her back to him. She looked nervous. He couldn't blame her. He was nervous, too.\n\n\"Alright,\" Cassie said, turning away from Tony and facing the bedroom. She took a breath, said 'fuck it' in her head and pressed play on the first of the four songs. \"Here we go.\"\n\nThe moment the music began, he could feel the tone in the room change completely.\n\nRight from the initial drum beats, Tony knew what song was going to kick this off: Britney Spears' \"I'm a Slave 4 U.\" An odd choice, to be sure, but one that certainly fit the strip club atmosphere he hoped they'd be able to create.\n\nThe song started with Britney talking in a sultry voice and for those first few moments, the beat was steady but clearly building.\n\nAs Britney spoke softly for those first 16 seconds, Cassie did nothing. She stood perfectly still but nodded her head song along with the rhythm. Tony could tell she was working up the courage to start.\n\nThen the lyrics kicked in. As soon they began, Cassie started to move. Her movement was simple at first. Just a slight adjustment of her hips and a sway from side to side. She still hadn't turned around. She didn't feel ready to. Internally, this was the easiest part. She could pretend she was alone and dancing for fun. Cassie loved this song and was psyching herself up a second at a time.\n\nThe tempo picked up a little and, so too, did her swaying.\n\nNow came the second verse and, with it, Cassie felt comfortable enough to let her feet move with the lyrics. She bucked her hips back and forward, in a rocking motion, picturing herself riding on top of her last boyfriend. It was a bit more suggestive than she thought she'd be this early.\n\n\"I'm a slave for you,\"\n\nThe moment that first chorus started, she raised her arms in the air and slowly, seductively, took her left hand and guided it down from her right wrist to her upper shoulder. She bucked back gently as she did, moving her body like a wave from her pelvis to her chest. The rhythm was easy to maintain and flowed perfectly with the song.\n\nIt was already the hottest thing Tony had ever seen from a strip tease, no doubt because of who it was that was teasing him.\n\nAs the next verse began, Cassie slowly backed closer to her cousin. This was the longest part of the song lyric wise and she wanted to time this just right. She had started this dance a few feet away and the distance was comfortable. Now, one step at a time, she was removing the space between them and the uncomfortableness that came with it. As she did, she rubbed her hands over her head and lightly fussed with her hair.\n\nShe was getting closer to the next chorus and knew exactly what she wanted to do when it hit.\n\nCassie was three feet away. Then two. She stopped, waiting for the song title yet again. Swaying with the beat.\n\n \n\n\"I'm a slave for you\" \n\n \n\nFor the second time, Cassie timed her signature move of this song with those words. This time, she kept her left hand extended in the air and rubbed her right palm from her left wrist to upper shoulder. Every movement was purposeful.\n\nThe minute she touched that shoulder, she was ready. There were still 30 seconds or so left in this track and she intended to use every single one of them. She turned her face to the right and locked eyes with her cousin for the first time.\n\nHe'd never forget the look on her face. Nor she, his.\n\n\"Get it get it, get it get it (oh) // Get it get it, get it get it (oh) // Get it get it, get it get it (oh)\"\n\nShe bit her upper lip. He adjusted in his seat. She knew she had him. He was putty in her hands and she was in complete control.\n\nAs the song faded toward its conclusion and the last chorus started, Cassie stopped dead in her tracks and began to walk away from her cousin. One step at a time. She could feel his eyes locked on her ass.\n\nThe song ended. Tony couldn't believe what he just saw. She hadn't taken a single piece of clothing off and he was already sporting the hardest erection he'd had in years.\n\nHe was hard. For his cousin.\n\nFuck.\n\n=====<br ><br >The second song started in an eerily similar way to the first. Cassie was back in her initial position and the first thing Tony heard was the thumping of hard-hit drums and someone shredding a guitar.\n\nHe didn't recognize the song at first and for the opening 30 seconds, Cassie mirrored her moves in the Britney song, letting her head bob to the beat and her hips sway from side to side. She added a head-banging move and tossed her hair from left to right as the drum sped up. She could have been an 80s music star. She looked it.\n\nAfter 30 seconds of a steady beat, Cassie kicked off both of her shoes as the leader singer wailed \"OOOHHHHH.\" He followed it up with \"OOOH YEAHHHHH.\" She wasn't wearing socks and Tony didn't even notice the shoes were unbuckled when she'd started this striptease but now she was barefoot. It was the first hint of skin she had shown so far.\n\nTony knew this song as it played but he still couldn't he place it.\n\nCassie was feeling the music too. She'd never struck him as a rock music fan but it was hard not to tap your feet to the beat of this track. It took 44 seconds for the lyrics to start but it may as well have been an hour. Tony's eyes were transfixed and time was irrelevant.\n\n\"Jump back, what's that sound // Here she comes, full blast and top down\"\n\nThese lyrics sucked but Tony didn't care. The beat was awesome and though he had a vague idea of what it was, he gave up trying to place it. He wanted to stay focused.\n\nCassie'd always had a guilty love of this Van Halen track. It was a huge hit a couple years before she was born but, as a kid, she ALWAYS rocked out when it came on. Even in college, it held a special spot on her iPod.\n\nHer familiarity with it and the positive memories it always brought her made what she knew she had to do next a little easier. This is the song where everything was going to get a little more serious.\n\nAs the first verse wound down, she moved backwards again, inching closer to her cousin. She didn't know if she had the courage for this next move but she was going to try.\n\n\"Don't you know she's coming home with me? // You'll lose her in the turn.\"\n\nShe was now two feet away. It was the closest she'd been so far.\n\n\"I'll get her!\"\n\nThis was it. It was now or never.\n\nThe moment she heard the all-too-familiar cry of \"Panama!,\", Cassie sat on Tony's thigh. It was their first contact and it sent a shockwave of electricity through his dick AND her pussy. She did NOT expect that and almost moaned out loud.\n\n\"What the fuck was THAT?\" she thought, nearly jumping up but catching herself so she didn't ruin the moment.\n\nTony caught his breath before it escaped. Holy shit. In the back of his mind, he remembered she said she would touch him eventually but in the four minutes or so this had been going on, he'd forgotten about it completely and it caught him off guard.\n\nWith every utterance of \"Panama,\" Cassie rubbed her body on top of Tony's thigh. She could feel the heat rising from his chest and he could feel the heat of her ass on his leg.\n\nCassie was still fully clothed and her jeans were a bit rough on Tony's thigh but he didn't care. Not one bit. Cassie grinded on him for less than 15 seconds in all but it felt like an eternity for both of them.\n\nIt was hot. It was dirty. It was exciting.\n\nAs the second verse began, Cassie stood up and moved forward three feet. Tony hated to see her go but it would be worth it for whatever was next.\n\nKeeping her hips moving from side to side, Cassie once again lifted her left arm up, moved her right hand down it from the wrist to shoulder and looked back at her cousin. This time, his look of shock was gone. It was replaced by a look she'd seen plenty of times. Pure lust.\n\n\"Thank God,\" she thought. \"He's actually into this.\"\n\nShe had him where she wanted him and not a moment too soon. It was time to start taking her clothes off and that look was crucial to building her confidence.\n\nShe looked Tony right in the eyes and licked her lips. Here we go.\n\nAs Van Halen tore through the second verse, Cassie unbuckled the belt of her jeans and, in one swift motion, pulled it out of the loops with her right hand. She swung it around in a small circle. She then moved the long end of the belt into her left hand as the guitar riffed and held her arms out, extended, with her face staring forward. She shook her ass left and right to the beat.\n\nAs soon as the next chorus started, she bent over completely, sticking her jean-covered ass forward and looked up at her cousin through her open legs. She could see him adjust his pants over what looked like the outline of an erection and it made her heart beat a little faster.\n\nThe song was slowly winding down and right on cue. She needed to act quickly for what she had planned next.\n\nAs the music of a steady guitar solo pushed her forward, she grabbed her shirt and the sides of her hips and playfully teased taking it off. In one slow motion, she lifted it up and over her head. She looked back at Tony again and smiled.\n\nAt the sound of a motorcycle revving up, Cassie unbuttoned her pants. She shimmied them off a tiny bit and the top of her panty line because visible for the first time. Tony felt the lump in his throat and the lump in his jeans both move at the same time.\n\nTaking her thumbs and placing them in the loops of her jeans on both sides, Cassie eased her jeans down as slowly as possible.\n\n\"She's blinding, I'm flying// Right behind the rear-view mirror now\"\n\nFor the first time, Tony could see the black garter and stockings he'd asked her to wear. It was so much hotter than he had envisioned and the photos he saw in her ad did no justice to her ass in person. As she let the jeans fall to her ankles, Cassie could feel a wave of heat escape and a chill blow past her legs.\n\nThere were still roughly 30 seconds left in the song and one more chorus. She had timed it perfectly and, once again, as the chorus kicked in, she had something special planned.\n\nThis time it was a simple move but one both she and Tony were looking forward to.\n\nShe turned to face him for the first time.\n\nThey locked eyes. There was no pretense left. They were actually doing this. She was stripping for HIM.\n\nAs Van Halen belted out \"Panama\" for the last time, Cassie stood face to face with her cousin and walked quickly over to him. His eyes scanned her body from top to bottom and she could tell he was blown away by the way she looked in full lingerie and the bra she still had on.\n\n\"Jesus Christ,\" he uttered.\n\nIt was music to her ears and she grinned.\n\nCassie knew the second song was almost over and she finished it simply, keeping her eyes on her cousin, moving her hands through her hair once again and taking two steps back.\n\nIt was the furthest she'd be from him for the rest of the set.\n\n=====<br ><br >Two songs down. Two songs left to go. <br ><br >Cassie didn't know how far she was really willing to take this yet but she was getting bolder with every verse of the playlist.\n\nTony, meanwhile, was beginning to understand why she felt she was worth $1,200 an hour. He'd never seen her this way but she exuded a sexy confidence that you can't put a price tag on. At this moment, right now, she was fulfilling his escort fantasy beyond his wildest dreams. It's a shame she was his cousin. He REALLY wanted to fuck her.\n\n\"Shit man,\" he thought. \"That's so wrong.\"\n\nWas it though? She's clearly a professional. It's what she does.\n\n\"No,\" he scolded himself. \"Don't go there.\"\n\nSo far, Cassie had kept this entire thing playful but sexy. She had two songs left but, deep down, she wasn't sure how she was going to handle this next one.\n\nRocking out to 80s Van Halen music is one thing. But her next track was a slow rap song with a smooth vibe and what she had planned was so much more intimate than standing a few feet away wearing lingerie.\n\nThis would really test her.\n\n=====<br ><br >Cassie started the next song with her back turned to her cousin. It wouldn't last. It wasn't meant to.\n\nThe song started with what sounded like a synthesizer and it was a beat Tony knew but didn't quite recognize. As the lyrics began, he realized why. He'd heard the rock version of this song before and knew it was a cover of something but never heard the original rap version. This had to be it.\n\n\"I say he so sweet make her wanna' lick the rapper\"\n\n \n\nYep. He was right. Those weird lyrics were indisputable.\n\nCassie chose \"Lollipop\" by Lil Wayne. An odd choice given the song before it and probably the first time anyone has transitioned from Van Halen to Lil Wayne but Tony didn't mind. She could honestly keep this up with that kids song from earlier and it wouldn't stop his erection in the slightest.\n\nCassie was back in teasing mode. She swayed as Lil Wayne grunted and the beat changed ever so slowly. She didn't need to look back to know her cousin's eyes were burning holes through her. She loved it and could feel herself getting warm between her legs.\n\nShe kept this up through the initial lines of the song, if they could be called that. It wasn't a traditionally structured song. It didn't matter. Confidently, standing two feet away from Tony, she bent all the way over. He was staring right at her panty-covered pussy and needed every bit of his willpower not to bury his face in that sweet sight.\n\nCassie stood up, moving her upper body in a wave motion again, dashing her hips forward and back.\n\n\"Shawty wanna' hump, you know I'd like to touch ya lovely lady lumps.\"<br >\n\nTony had no idea what those lyrics meant and didn't care. The beat was pure strip club magic and created an atmosphere he was obsessed with. For the first time, he didn't care that Cassie was his cousin. He was going to let his brain wander and go wherever it wanted to. He could feel his cock straining to be set free.\n\nWhat came next wouldn't make it softer.\n\nCassie took a deep breath and slowly walked backwards, between Tony's legs until she felt the bottom of the couch hit her ankles. It was time.\n\n\"Lil' mama had a swag like mine // She even wear her hair down her back like mine,\"\n\nCassie shut her brain off the moment the first real verse started and slowly, painstakingly, sat on her cousin's lap.\n\nFor a moment, Tony thought he was about to cum. Everything he wanted was right in front of him. His cousin, who he shouldn't be doing this with, was sitting on his lap and grinding on his dick.\n\nCassie could feel her cousin's rock hard cock pressed against her butt and was so glad she was facing away from him because the thought made her open her mouth shocked. She knew he liked it from his intent stare but this was more than confirmation. This was a rock. hard. dick.\n\nThere was no pretending anymore. Cassie turned her cousin on. And he was turning her on. Whatever they were doing, no matter how right or wrong it was, they were both enjoying this. A lot.\n\nAs she sat on Tony's lap, Cassie mimicked her grinding moves from earlier. Tony couldn't see her face but he didn't care. He threw his head back and enjoyed the feeling of her ass rocking back on him. Tony was still fully dressed and there may have been a couple of layers of clothing between them but there was no denying this: His cousin was grinding on his dick.\n\nRight around the time Tony wondered how much of this he could take, Lil Wayne moved to the first chorus of the song. The grinding lasted less than 30 seconds but, fuck if it didn't feel ten times that long.\n\nTony was thankful Cassie got up as the chorus started. His head was spinning and he didn't know what to do or what to say. He wouldn't get a chance to recover.\n\nCassie turned to face him again. She locked eyes with him again and bit her tongue as she moved her hands through her hair. The second chorus was seconds away and she was aching to proceed as she moved closer.\n\n\"Shawty wanna' thug, bottles in the club\" the song continued as Cassie lifted her left leg and put it past Tony's right hip and onto the couch. She did the same with her right leg and slowly lowered herself on top of him.\n\n\"Fuck!\" he thought.\n\nCassie looked right into his eyes and sat on his lap. Tony didn't know where to look. For a little over 25 seconds, she rode him slowly and sensually. Tony didn't want her to stop but she did.\n\nThis was a striptease and she sure was leaning heavy on the tease part.\n\nAs the next verse started, Cassie stood up again. She could feel the reluctance in Tony's eyes but she needed to him to pace himself. She hadn't even taken off her bra or panties yet.\n\n\"Holy fuck,\" she thought. \"Am I really going to go that far?\"\n\n \n\nA simple look at her lust-stricken cousin told her the answer, even if she wasn't ready for it.\n\n \n\nOver the course of the next verse, Cassie let her hands roam over her body much more freely but stood a foot away, letting Tony soak the image into his brain. She cupped her tits suggestively and bent forward, giving him an eye-full of her cleavage. There was no way he'd be able to resist jerking off when she left. The thought was so naughty, she could feel her nipples harden a bit.\n\nThe song was halfway over and she had him exactly where she wanted him. She could ease off the gas pedal a little bit and she did, moving to casual dance moves and swaying from side to side, never losing her cousin's gaze.\n\nIn reality, she was gearing up for what she knew would be a hot finish to the song.\n\nAfter a minute or so of dancing from a distance, Cassie heard the words she was waiting for.\n\n\"C-Call me, s-so I can make it juicy for ya\"\n\nShe moved forward. Once again, she placed her legs outside of Tony's and sat on his lap.\n\nHe was in heaven.\n\nShe didn't grind initially, instead staying still and moving her hands through her hair again. Tony loved that move. Once she started moving her hips back and forth, though, it's all he wanted to experience.\n\nTony felt Cassie press her body down hard on his dick. She was giving him a slow, purposeful grind. There was no denying this. They were dry humping and he loved every second of it.\n\nAll he wanted to do was squeeze her ass. Or touch her tits. He couldn't decide. But he remembered her rules and didn't want to fuck anything up.\n\nArching his back up just a little, Tony repositioned himself so he could sit up a little straighter and leaned into his cousin's ear. The feeling of his lips so close to her gave Cassie goosebumps.\n\n\"Can I ... Can I touch?\"\n\nIt was the most taboo question Cassie ever heard, yet it sounded so innocent.\n\n\"Okay,\" she said.\n\nTony didn't want to overplay his hand. Not yet anyway. He decided to play this slow and reached behind Cassie, cupping her ass. The feeling sent a wave through her and, for the first time, she could feel herself getting wet. It briefly snapped her back to reality and she stood up.",
        "\"Shit,\" Tony said, figuring he messed up.\n\nCassie turned around and lowered herself back down, facing away from Tony as the song finished. For the final 20 or so seconds, Tony slowly thrust himself against his cousin's ass, pulling her closer and matching her rhythm. He couldn't believe she was letting him do this. It was almost like she was as into it as he was.\n\nIt was hotter than almost any sex he'd ever had.\n\nThe song came to an end and not a moment too soon as Tony would have absolutely cum if he kept up that pace much longer. His body was aching for release but it was still wrong. She's still his cousin. He can't shoot a load to his cousin.\n\nRight?\n\n=====<br >\n\n\"Jesus,\" Tony said as the third song ended. \"You're killing me with this. That was so fucking hot.\"\n\nSomething about the way Tony said those words excited Cassie. She'd never thought of him sexually before but she was starting to.\n\nStill, it was important not for her not to get too aroused. She didn't want to do anything she'd regret later.\n\n\"You ain't seen nothing yet,\" she said, laughing.\n\nAs the fourth and final song began, Cassie felt an equal amount of nervous anticipation and dread. She was having way more fun than she thought she would but it was coming to an end very soon.\n\nRight?\n\n=====\n\nFor the last song, Cassie wanted something faster and more club-like. It would help her set the tempo for what she had in mind and was so fast paced, she wouldn't have time to second guess herself. After all, it was important to end on a high note and she knew exactly what that meant, even if Tony was clueless about what was happening next.\n\nIt took Tony two seconds to figure out what song she chose next. It would have been hard not to since it literally begins with Pitbull introducing himself as \"Mr. Worldwide\" and bringing in T-Pain.\n\nCassie selected \"Hey Baby (Drop it to the Floor),\" a song Tony hadn't heard in a while but an ear-worm that sticks with listeners once they do. Not that he'd need any help to remember this experience.\n\nCassie started the song, walking a few steps away from her cousin and for good reason. She needed a little bit of space for this next part.\n\nWith her back to Tony once again, Cassie ran her arms all over her body and took a deep breath. This was it.\n\n\"Hey baby girl what you doin' tonight // I wanna see what you got in store,\" T-Pain blared. \n\nEverything Cassie was doing now was by choice but it was hard to feel like she had any control. She let the music move her and, right now, the music moved her hands behind her back and toward the clasp of her bra.\n\n\"Oh my God,\" Tony thought to himself. \"Is she gonna ...\"\n\nShe did. She unhooked her bra.\n\nWith nervous anticipation, Cassie looked back one last time and smiled at her cousin. She kept her back to him as she took her bra off and threw it over her head.\n\nCassie lifted her hands in the air and Tony knew on the other side, she was completely topless. He would have given anything to see her like that. He didn't have to wait long.\n\nAs Cassie slowly backed up toward him, hips first, she covered her breasts with her hands and, as the chorus kicked in, she turned around. <br ><br >\"Ooh baby baby, la la la la\"\n\nTony's eyes were begging her to move her hands. Cassie waited a few seconds and gave in, lifting her her hands back to her hair.\n\nShe was topless. In front of her cousin.\n\nHe could see her bare tits.\n\nAnd, fuck. What a pair of tits.\n\nTony's eyes nearly popped out when Cassie lifted her hands and whatever part of the brain is responsible for turning what you see into concrete thoughts had stopped working for him. He couldn't stop looking and he could feel his dick throb.\n\nHer tits were perfect. Absolutely perfect.\n\nCassie had no visible tan lines, in part due to the beautiful Florida sun and the topless sunbathing she did at least twice a week. She had a pair of large C cup tits and they were bell shaped. Her areolas were well defined, circular and positioned perfectly on her breasts. And her nipples? Right now they were rock hard.\n\nTony loved his wife. Very much. But this was another level of sexual attraction. He couldn't remember a sexier pair of tits.\n\n\"God damn,\" he said audibly.\n\nCassie laughed.\n\nAs the first chorus ended, Cassie refocused. It was almost time for the grand finale of this whole experience. She lowered herself on his lap once again, facing him with her bare breasts out, inches away from his face. Tony reached out to touch but she playfully slapped his hands away.\n\nAs the first Pitbull verse began, Cassie stood up again. She sat on the ground this time, much to Tony's surprise, and opened her legs, giving him an unobstructed view of her still panty-covered pussy. It wouldn't be covered for much longer.\n\nAs the words spilled forward, Cassie pushed the envelope a little more, moving her hands between her legs and raising her eyebrows at her cousin. She teasingly touched the top of her mound and moved her hands under her panties, touching her pussy.\n\nShe could feel her wetness. She was aching to be touched but knew she couldn't do anything about it. Not now. She needed to focus.\n\nCassie spun around, stomach first on the ground, and lifted herself up like she was doing a push-up, sticking her ass directly in front of Tony's face. She was maybe four inches away from his face and he could smell her body. She smelled like lavender and hormones. For the first time, he wondered if she was aroused or just a really good actress. In her line of work, it could be either.\n\nCassie stood up straight and bent over to touch her toes. As the second chorus started, she slipped her thumbs in the side of her panties the way she did her jeans earlier. Slowly, she lowered them. In an instant, they were gone.\n\nBefore Tony could even think about what he just saw, she lowered herself on his lap once again, facing away, and grinding his dick harder than she had so far as the chorus kicked in.\n\n\"Ooh baby baby, la la la la la la la\"\n\nTony was in visual overload. He didn't know what to focus on as he watched his now nearly naked cousin grind herself on his cock. She still had the garter and stockings on but, for all intents and purposes, she was fully nude and he was fully hard.\n\n\"Fuck it,\" he thought.\n\nTony let his hands roam free on her ass and found no resistance stopping him this time.\n\nCassie arched backwards and leaned against Tony's chest. In an instant, she felt his hands reach around and cup her tits.\n\n\"Holy shit,\" he thought, cupping and kneading his cousin's perfect breasts, occasionally flicking her hard nipples and trying not to cum. \"These are amazing.\"\n\nShe ground her ass into his dick even harder, working her cheeks along the path of his shaft from top to bottom. She could feel her body squeezing and stroking his cock and felt his balls tighten up. If this was a normal client, she would keep doing this until right before they came. She'd stop, pull out their dick and bury it deep in her pussy. But this was her cousin. She couldn't do that.\n\nShe wanted to. But she couldn't.\n\nCassie let Tony's hands feel her up for a few seconds but this wasn't how she wanted to end things. She stood up, turned around instantly and found herself face to face with him. She could feel his dick twitch beneath her. This was it. Big finish.\n\nAs Pitbull launched into the third verse, Cassie let go of all inhibitions. She took her hands and ran them through Tony's hair. She moved her lips slowly past his, came back around and bit his bottom lip ever so slightly. Each move was driving him crazier than the last.\n\nShe could feel his legs twitching as he thrust into her, his body yearning to feel the tight grip of her pussy lips wrap themselves around his cock, only to be denied by his layer of underwear and jeans. It was all that was stopping the full length of his shaft from plunging deep inside her and they both knew it. They both wanted it.\n\n\"You like that?\" she asked.\n\nHe couldn't answer. Not coherently anyway. A caveman-like grunt would have to suffice.\n\nCassie pressed on anyway.\n\n\"You like that?\" she asked again. \"Tell me you like it.\"\n\n\"I love it,\" Tony replied. Cassie leaned her head forward. Her lips were right next to his ears.\n\n\"Hmmmmmmmm,\" Cassie moaned every so slightly. It was enough to make Tony gasp.\n\n\"Come on,\" she whispered seductively. \"Let me feel your dick.\"\n\n\"Fucccccck,\" Tony groaned.\n\nTony picked up the pace and was pushing himself hard into Cassie. She could feel every inch of it now, the muscle memory between her thighs painting an exact image of what it looked like, how long it was, the thick head at the top.\n\nShe wanted more. She needed more.\n\nWith one swift move, Cassie took her hands and guided them down to her aching lower lips. She rubbed the outside of her pussy and moaned as she did it but that's not what the trip was meant for. This time, she went lower and didn't stop until she felt her cousin's pants, felt the throbbing member yearning to be free from inside.\n\nShe touched the top of Tony's dick and could feel its head. She moved her fingers around the sides and started to slowly, meticulously massage the shaft underneath. Her hands felt like heaven.\n\n\"Hmmmmm,\" she moaned in his ears again. \"That's a nice, fat cock you've got for me. I bet you want to take it out and shove it down my pretty little throat until I gag. I want it too. I want to gag on your dick.\"\n\n\"Oh yeah?\" Tony groaned. \"I bet you do. You want to be my little slut?\"\n\n\"I'm no one's slut,\" she said. \"Especially not yours. You couldn't handle it. If I took your dick out right now, you'd bust before I even touched it. What makes you think you could handle it? I'm going to make you cum without even taking it out of your fucking pants.\"\n\n\"Uhhhh,\"\n\n\"That's right,\" Cassie said, her hands picking up their pace. \"You think I'm the slut? No. You're my slut. And you're going to do what I say. You want me? You want me to suck that fat cock? You want to cum in my mouth?\"\n\n\"So bad,\" he said.\n\n\"Too bad,\" she said. \"That's not what's going to happen. I decide what we're going to do. You cum when I tell you to. And trust me, if you think this lap dance is hot, you couldn't handle me sucking your dick, milking every drop of cum out of it and down my throat. And this pussy? Please. You think you could handle it? You want to fuck me? \"\n\n\"I do.\" he replied.\n\n\"Then tell me you want it.\" she said. \"Tell me you want this pussy.\"\n\n\"Ughhhhhh,\" Tony groaned. He was close. \"I want your pussy so bad.\"\n\n\"Close your eyes,\" she instructed. \"Now!\"\n\nTony obeyed. He was in no position to object. In that moment, Cassie had complete and total control over every cell of his body and she could make him do whatever she wanted.\n\nTony was screaming in his mind. He wanted so badly to watch what she was doing but he couldn't. She told him not to.\n\nBut he could still feel her, feel the full weight of her body on top of his, at least for a moment until she started to slink down between his legs. He had no idea what she had planned and didn't care. She could do whatever she wanted to him. He was hers.\n\nSeconds after he closed his eyes, Tony could feel his cousin's warm breath on the top of his pants and his senses exploded. It was so much hotter because he COULDN'T see what she was doing. He wanted to. So badly.\n\nEven though her touch was just through the cloth of his pants, Tony immediately thought the sensation was going to make him cum. He could feel her tongue tracing lines on his rigid cock and felt the shape of her mouth as it touched the head of his dick.\n\nCassie loved teasing him and used his momentary blindness to shove two fingers in her pussy when he wasn't looking. She moaned and felt her mouth water as she pressed her lips against his cock. Now was not the time for her to please herself, she thought, we're almost done.\n\nCassie pulled herself away and, as she did, Tony opened up his eyes again just in time to watch her sit back up on his lap.\n\nThe song was starting to wrap up. Was she really going to do this?\n\nShe was.\n\nAs the last chorus kicked in, Cassie leaned back, bit her cousin's ear and started grinding fiercely.\n\nHe didn't know what to say. He didn't need to speak.\n\n\"Come on,\" she said. \"Come on. I know you want to.\"\n\n\"Want to what?\" he muttered, dazed and overwhelmed by the feelings in his head and his pants. Tony struggled to hold on as Cassie bucked back and forth. He could see her glistening pussy rubbing against him and he didn't know how much more of this he could take.\n\n\"I know you to want to cum,\" she said. \"Do it. I want to feel you cum.\"\n\nHoly. Shit.\n\n\"Are you sure?\" he asked.\n\n\"Just do it,\" she said. \"Let go. Uhhhhhhh. Feel me. Uhhhhh. Feel my ass riding your dick. Feel my pussy rubbing against you. Cum for me.\"\n\nTony didn't need any more encouragement and was sick of having no control. He lifted Cassie up with his right hand, spun her onto the couch and got on top of her. Now he was the one grinding into her and, pants or no pants, he could feel her wetness on the head of his erection.\n\n\"Yeah,\" she said. \"Take it. Take it. Fucking do it. Come on. Come on. Cum for me.\"\n\nTony was close. He was so close.\n\n\"Picture it,\" she said. \"Picture it. Picture your hard dick filling me up. Picture burying it deep in my cunt. Let me hear your balls slapping against me. I want you to feel me. Right now. Feel my pussy. Feel how hot it is for you. I want it. I need it.\"\n\nTony reached down and traced his fingers along the underside of her slit. She was steaming and trembling. And moist. She was soaked.\n\n\"You're wet?\" he said, almost surprised.\n\n\"Yeah, I'm wet.\" she said. \"I want you inside of me but you're never gonna get it. This is as close as you get so you better enjoy it because the song is almost over. You want to cum? You want that release? You better do it right now. Shut the fuck up and cum for me. NOW.\"\n\nCassie swung her body around Tony and was back on top of him. She was back in control. This time, it was in the cowgirl position and as she ground her pussy harder and harder, she could feel it. It was about to happen.\n\n\"Give me that cum,\" she moaned. \"Fucking give me it to me right now.\"\n\n\"Fuck, fuck, fuck,\" Tony groaned. \"Fuck. Tell me. Tell me to cum.\"\n\nShe wasted no time.\n\n\"Come on cuz,\" she said, leaning hard into the taboo and blurring all the lines of the reality they had tried to forget momentarily. \"Come for me. Shoot your hot load all over me. Let me feel it. Let me feel it. Cum all over me.\"\n\n\"UGHHHH,\" he responded. \"Fuck, fuck, fuck. I'm .... I'm .... Uhhh ...... I'm cumming. I'm cumming.\"\n\nEven with the clothes between them, Cassie could feel that first spurt come roaring out of his cock. Then the second. Then a third. What she wouldn't give to have it hitting the back of her throat. She loved the taste of cum and she wanted her cousin's so badly in that moment.\n\nBut she wouldn't get it. Not now.\n\nTheir time was over. <br >\n\nBut what a time it was.\n\nWith a smile on her face, Cassie let her body collapse on top of Tony's and slowed the rhythm of her thrusts. As the song came to a close, she whispered one last time in his ear.\n\n\"Hmmmmm,\" she said. \"That was fucking hot.\"\n\n=====\n\nCassie loved this part of being an escort. She loved the minutes right after a client shoots his load and the world goes quiet.\n\nAs she lay on top of her cousin and felt his upward thrusts slowly subside, she closed her eyes and let the quiet wash over her.\n\nShe had enjoyed herself so much more than she thought she would and things went wildly past the point she initially intended but she loved every second of it.\n\nSo did he.\n\nShe could still feel his hands on her ass. She could still feel his touch and though he may have cum, she was still slick and yearned to be filled. Cassie knew she was going to have to pull her car over somewhere private after she left here and shove one of the vibrators nestled into her luggage case deep into her pussy until she exploded. There's no way she could drive like this.\n\nAs the two of them caught their breath, the only sound in their hotel room was that of the cars passing outside. The quiet almost made their situation feel normal.\n\nCassie waited for a few moments and reveled in the aftermath of a job well done, letting her cousin get his final touches in -- he apparently loved feeling up her tits -- before rolling over to his side and sitting on the floor near the couch they were on.\n\nAs far as stripteases and lap dances go, it was the hottest one she'd ever given and she was shocked at how much sexual chemistry the two of them actually had. It was one of the more passionate experiences she'd had as an escort and it was with her cousin of all people.\n\nIf he were anyone else, they'd be fucking right now. Whether or not she was paid to be here. Lord knows she wanted it.\n\nCassie took a look at Tony's face. She could tell he did too.\n\n\"Jesus Christ,\" he said, his breathing slowly returning to normal. \"That was incredible.\"\n\nCassie laughed. She didn't want to move. She didn't want this moment to end.\n\n\"I'm glad you liked it,\" she said, smiling.\n\nCassie waited a few more minutes to regain her composure. When Tony wasn't looking, she guided her fingers back to her pussy to see if she was still wet. She was. Just as she thought.\n\nBut it would have to wait. Now wasn't the time.\n\nCassie reached to her right and grabbed the underwear she had taken off a few minutes earlier. She stretched her legs and felt a satisfying pop. That couch was rough on her ankles and it felt good to stretch out the knots.\n\nPulling her panties up and over her stockings, Cassie shimmied her butt up high enough to get them on all the way without standing up. She was still topless, though, and Tony's eyes wouldn't leave her tits. He knew he probably wouldn't see them again and wanted to burn them into his memory.\n\n\"Liked it?\" he asked. \"I loved it. It was one of the hottest things ever. Did you have fun?\"\n\nCassie blushed at his words.\n\n\"This stays between us right?\" she asked sheepishly.\n\n\"Of course.\"\n\n\"Yeah. I liked it too,\" she said, lowering her voice so no one heard her admit something so taboo.\n\nTony wasn't sure what to say. On the one hand, he knew she was into it when she rode him. He could see her pussy glistening and, escort or no escort, no one can fake it that well. On the other, it's still his cousin and that had to mean something. Right?\n\nAfter what they just did, did right or wrong even matter?\n\n\"Was it everything you hoped it would be?\" she asked.\n\n\"Mostly.\" he said.\n\n\"Mostly?\" she wondered, slightly surprised.\n\n\"Yeah, mostly.\" he repeated. \"That was the hottest lap dance of my fucking life. But, Jesus Christ what I wouldn't give to keep going.\"\n\nSo he wanted it too and wasn't ashamed to admit it. Interesting.\n\nFor a moment, Cassie entertained the thought. It wouldn't be that difficult to keep going. She wanted to feel him again. To taste him. She wanted to take everything he had to give and make it an experience he never forgot.\n\nThough, she likely already had.\n\nAll she had to do was say yes and they'd be right back where they left off. She pictured him lifting her up and throwing her back on the couch, burying his face in her pussy and eating her out until she couldn't take it anymore. She fantasized about him face fucking her until she gasped for air. She could see herself with her head buried in the cushions, her ass in the air and her cousin plowing into her from behind.\n\nShe wanted all of those things. She wanted them so badly. Her inner monologue was no help.\n\n\"Why not?\" she wondered to herself. \"We've already done this much. Would it really be that big a deal?\"\n\nTry as she might, though, she couldn't shut off that small but important part of her brain that said it was wrong."
    ],
    "authorname": "Thongluver69",
    "tags": [
        "blowjob",
        "cousins",
        "escort",
        "family",
        "incest",
        "prostitution",
        "reluctance",
        "sex",
        "stripping",
        "taboo"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/my-cousin-my-escort"
}