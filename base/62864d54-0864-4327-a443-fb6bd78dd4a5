{
    "title": "Getting Even Pt. 04",
    "pages": [
        "GETTING EVEN Part 4\n\n\"I had to look at pictures of him fucking your girlfriend. Would you be willing to help me? I want to show him pictures of you and me fucking.\" said Brynn.\n\nI'm not sure what the correct response to that particular question might be.\n\n- \"You're... serious?\"\n\nBrynn's eyes narrowed. \"I don't joke about sex and revenge.\" she said. Deadly serious. Then her expression softened. \"Oh - I see. You're worried about my feelings - like I might regret it afterwards? That's sweet. But don't worry, Ben. I was faithful to that asshole for almost a year - and for what? To find out that he had zero respect for me. No... payback is going to be sweet. And in addition to getting even, I can have some quality recreational sex? That's a win-win, in my book - and I don't mean that everybody wins - I mean, I win twice.\"\n\nOkay. Brynn was no shrinking violet. She was serious.\n\nFrom my perspective... why not? It had nothing to do with Anita anymore. It wasn't going to hurt Marco. Yes, I thought of Kira - but it wasn't going to hurt her, either. Brynn had it right: revenge on Duncan fucking Cockburn, and (if she was right) quality recreational sex. What did I have to lose?\n\n- \"I'd be happy to help.\" I said.\n\n- \"Is tonight too soon?\" she asked, with a big grin.\n\nI was going to have get a card for Millie. A card, and flowers.\n\nSomehow, I managed to stay patient through dinner. You don't gulp a $225 dinner (although I did put away those oysters pretty quickly - I figured I might need all the help I could get).\n\nAnticipation is highly underrated. This incredibly sexy woman was going to take me home after dinner, so that we could fuck each other's brains out, and make a sex video. There was no need to impress her, or to seduce her. It was going to happen, and that was incredibly exciting.\n\nShe took me back to her apartment (pretty high-end, if you ask me). She poured drinks for both of us - which we really didn't need.\n\nThen she took me into her lair. Okay, her bedroom. Huge bed. Enormous vanity mirror. Makeup table big enough to play ping pong on. It was a boudoir.\n\nBrynn set up her phone on the vanity. Then she produced another phone, which she placed on her night table.\n\n- \"Wait - you're not going to send him a video, are you?\" I had a sudden vision of our video going viral.\n\n- \"Relax.\" said Brynn. \"I'm not sending him anything. I'm going to sit by his hospital bedside, and show it to him. I want to watch his face as he sees it. I'm going to enjoy every bit of his reaction.\"\n\nThis girl was even more vindictive than Anita. I have to admit, the idea of screwing over Duncan fucking Cockburn had sold me on this project. But as I watched Brynn set up her phones, and adjust the light, I realized that I might enjoy this venture purely for its own merits.\n\nShe sat down on the end of her bed, and began undoing parts of her red and black top. Lord, have mercy. She had absolutely exquisite breasts. They spread gracefully to either side, but they were shaped like Hershey's kisses, pointed upwards. She had puffy areolae and nipples, which also pointed upwards.\n\nIt was like an invitation to slide your hand underneath her breast, to cup it, and gently lift it up, just a little.\n\nBrynn smiled. She knew that she had me mesmerized. She stood up, and turned sideways as she continued to peel off her top. She wasn't wearing a bra, and she seemed to be enjoying gradually revealing herself to me.\n\n32C - that's my best guess - with the most enticing up-tilt I'd ever seen.\n\n- \"How long can you last?\" she asked. \"Or maybe I should rephrase the question. If you come now, can you get it up again?\"\n\n- \"I don't think it'll be a problem.\" I said.\n\nBrynn undid my pants, and reached into my underwear to take hold of my cock.\n\n- \"Mmm...\" she said. \"This will work.\" She proceeded to give me a hand job. It was great, but she seemed to realize that it wasn't going make me come quickly.\n\n\"Don't worry.\" she said. \"I'll edit this part out.\" Brynn dropped to her knees, and took me into her mouth. It was exciting - I won't deny that. She just wasn't particularly skillful, or especially enthusiastic. She seemed to expect me to come immediately.\n\nIt took a bit longer than that. Finally, I warned her that I was close, whereupon Brynn took me out of her mouth, and jerked me off, so that I sprayed a load over her bedroom floor.\n\n- \"Holy shit.\" she said. \"You always come this much?\"\n\nShe got a towel from her bathroom, wiped up most of my ejaculate, and then asked me to pull up my pants again.\n\n\"How long before you're ready to go again?\" she asked.\n\nI could only grin at her. She was standing there topless, and the view was incredible.\n\n- \"Oh my God...\" Brynn was watching my cock. \"Okay - pull your pants back up. Pretend we just came into the bedroom.\"\n\nBrynn dressed again, then immediately stripped down to her skirt - slowly peeling her panties down her legs. Then she sat back down on the edge of her bed, as if to ask 'What are you going to do about it?'\n\nThe invitation couldn't have been clearer.\n\nI walked towards the bed, and went down on my knees in front of her. I was tall enough that I could reach those magnificent breasts with my lips as well as my hands. It was a feast fit for a king, but she hadn't brought me over here just to pay homage to her tits.\n\nI trailed kisses down her firm stomach, and gently spread her legs a little more so that I could eat her pussy.\n\n- \"Oh - see that, Duncan?\" she called out, addressing her phone. \"Some men don't have to be forced to do this. Oh - and he's good, baby. I might have to reward him. Oh - damn - I might just have to let him fuck me for this.\"\n\nBrynn pushed me back a bit. She stood up, and removed the last of her clothing. Then she began to strip me of me mine, with a running commentary aimed at her phone.\n\n\"Oh, look - toned, and firm. I think this qualifies as a four pack, Duncan - which would be four more than you've got.\" Then Bryn lowered my underwear. \"Wow! Would you look at that? He's huge! He makes you look pretty small, Duncan.\"\n\nThen she whispered to me: \"Doggy style, please - just like he did to your girlfriend. And when I ask you a question - just say no, okay?\"\n\nBrynn climbed up on the bed, on her hands and knees, facing one phone, so that the second could catch her from the side, in profile.\n\n- \"Oh, Duncan - he's going to stick that massive cock in me... wait - do you have a condom, Ben?\" She actually turned her head back, and winked at me.\n\nI ad-libbed a bit. \"Fuck, no!\" I lined up my erection, and rubbed the swollen head of my cock up and down her pussy lips.\n\n- \"Oh my God!\" said Brynn. \"He's going to fuck me bareback, Duncan. Just like you always wanted to do - but I never let you, because I didn't know where you'd been sticking your pathetic little pecker. Oh, well: there's a first time for everything, right?\"\n\n\"Fuck me, Ben.\" she said.\n\nI knew that it was all about revenge against her cheating dick of a boyfriend - my b\u00eate noire, too - but when I pushed my cock inside her, I remembered that it was also meant to be recreational sex.\n\n- \"Oh, damn!\" shouted Brynn. \"He's so fucking big! Duncan - I had no idea what I was missing!\"\n\nShe kept up the colour commentary for several minutes, as I got my rhythm established, and began sawing in and out of her. She'd been right to have me take the edge off; with my first orgasm out of the way (and a couple of drinks down the hatch), I felt like I could go forever.\n\nBrynn stopped talking. She reached under us, and began frigging herself as I steadily plowed her furrow.\n\n- \"Aww... fuck.\" she muttered. I wasn't sure that Duncan fucking Cockburn could hear that.\n\n- \"What'd you say, Brynn?\" I demanded, loudly.\n\n- \"Aww... aahh!\" She came surprisingly hard.\n\nI sped up my tempo. Brynn had lost it, a bit: she was leaning forward, supporting her weight on her forearms while I put it to her harder and harder. The last few strokes were hammer blows - I was slamming my cock into her.\n\n- \"Aaahh!\" she cried out.\"\n\n- \"Fuck!\" I pulled out, and spewed my load all over her back.\n\nBrynn needed a few moments to regain her composure.\n\n- \"Holy shit...\" she murmured.\n\n- \"You okay?\"\n\n- \"Yeah... it's just... I've got some ideas for some more videos we can make.\"\n\n***\n\nBrynn called me three days later, to invite me to dinner.\n\n- \"My treat.\" she said.\n\n- \"You don't have to -\"\n\n- \"I'm paying.\" she insisted. \"You can pick up the cheque next time.\"\n\nNext time?\n\nShe surprised me by having us meet at a Polish-Ukrainian place. We ordered schnitzels and beer, while Brynn quivered with barely suppressed excitement. She could barely wait to tell me her story.\n\n- \"I showed him the video.\" she said, the moment the waiter had left with our order.\n\n- \"You did?\"\n\n- \"I sat on the edge of his hospital bed. Ben - it was incredible. I mean - not in a sexual way. Well... maybe it was. But it was fantastic. I felt so... powerful.\"\n\n- \"Was he... angry?\"\n\n- \"Oh, he was steaming. Embarrassed, too, because he got a stiffy almost right away. But he had to take charge, you know - he told me that my reaction was 'understandable', and that we would be okay once I'd 'got this out of my system'.\"\n\n- \"Really?\"\n\n- \"I know, right? That's why we have to make more videos.\"\n\nI managed not to choke on my beer. \"We do?\"\n\n- \"Oh hell yes. I want to do everything with you that I would never let him do.\" Brynn wasn't kidding. She was all about the revenge - and the sex, too. \"I want to suck your cock - and then swallow it all.\"\n\nSchnitzel and beer may not be the greatest of aphrodisiacs, but I didn't need any extra help after that little declaration of intent. Brynn took me back to her place, and let me watch as she changed into a silky little peignoir.\n\nMaybe I wasn't as drunk as the first time - hard liquor affects me more than beer. Or maybe I just wasn't as fixated on Brynn's remarkable breasts. She insisted on stripping me again for her video, with similar commentary. Then she sat me on the edge of her bed, and proceeded to do a little dance - as much for the phones as for me - before finally doffing the silky lingerie. She kept on the delicate panties and her high heels, but she was otherwise naked.\n\n- \"I'm gonna suck his cock, Duncan.\" she said. Brynn knelt before me, and wrapped her hand around my shaft. \"Fuck. It's too nice not to. Big, and thick - not like your little pea-shooter.\"\n\nI have to admit, she knew what she was doing. She licked my cock from top to bottom, purely for the visual effect. She slurped around the head, liberally coating me with her saliva. Then she dipped her head, and took one of my balls in her mouth, while continuing to stroke my cock.\n\nIt was pretty awesome - though it would have been even better if she hadn't stopped repeatedly to talk to the phones, telling Duncan exactly what she was doing, and how much she was enjoying it. At some points, I felt like a third wheel.\n\nWithout asking permission, I reached down and fondled one of her dangling breasts. She groaned around a mouthful of cock. I took that as permission, and began caressing and gently squeezing her incredible tit.\n\nI certainly enjoyed it, but it seemed to work for Brynn, too. She picked up the pace, and the intensity. She even tried to deep-throat me. That wasn't a great success. She had a tough time of it, and I'm not a big fan of gagging noises.\n\n- \"You don't have to do that.\" I whispered. \"I'm close as it is.\"\n\n- \"Put your hand on top of my head.\" she whispered back. The she said - quite loud - \"Oh my God, Duncan! He's going to come in my mouth!\"\n\nI did.\n\nBrynn didn't swallow right away. Instead, she went close to the camera, and opened her mouth, showing Duncan a mouthful of my semen. Only then did she swallow noisily.\n\n\"I don't believe it!\" she said. \"It actually tastes good!\" Brynn licked her lips for effect. Then she smiled at the phone, before turning it off.\n\n\"How was it?\" she asked.\n\n- \"Amazing.\" I said. \"But I think you know that.\"\n\n- \"I actually enjoyed it, you know.\"\n\n- \"Would you like me to return the favour?\" I asked her.\n\n- \"You mean, like, another video?\"\n\n- \"If you want. But I was thinking more of going down on you... just because.\"\n\nGod bless her, she actually thought about it for a moment. It wasn't really necessary for her revenge, but she was just horny enough that the idea had some appeal.\n\n- \"We can try it.\" she said. \"It might make a good future video.\"\n\nI ate her to orgasm, and beyond. That was when she informed me that she needed more time to plan further episodes.\n\n\"I need to try to remember every little kink he had - every single fantasy or desire he told me about. Well, I could also just throw in some things that I know would piss him off - and that I would enjoy. But... we don't have to record everything... like, now, for instance?\"\n\n***\n\nAnita had a hard time understanding the word 'No'. She called, and texted me. After 30 or so contacts, I finally answered one.\n\n- \"No, Anita. Nothing more to say. No hope. No. Done.\"\n\nI had to resort to blocking her.\n\nThat led to her calling me at work. Even worse, she called Marco, asking to speak to me. I could see the hurt in his eyes. There was no way I could tell him everything, but I tried to explain that I'd never been intimate with her, and never would. Marco tried to understand - but he couldn't quite get that haunted look out of his eyes.\n\n***\n\nDuncan fucking Cockburn was one kinky little bastard. Brynn had gone back to the hospital to see him, and to show him the video of her sucking my dick and swallowing my semen. That seemed to have triggered more of her memories: she'd come up with a list of things she wanted to do with me - and it was a surprisingly long list.\n\n- \"In a pool? Brynn, it's almost November.\"\n\n- \"I know. I'm working on that.\"\n\nWe knocked two items off her list that evening: fucking in the shower, and coming on her face. The shower video was really poor quality (too much steam), but it turned both of us on, for some reason. Brynn was no fan of facials, but she submitted to one (and smiled, afterwards) so that she could show DFC the recording.\n\nTwo days later, we fucked in the backseat of her car (she wouldn't even consider it in mine), and then I took us out into the countryside, so that she could blow me while I drove down a (mostly) deserted dirt road. One guy in a pickup passed us, going the opposite way; he slowed down as we went by. Brynn was incredibly turned on when she thought that he might have seen what we were doing.\n\nDiscovering that she had a little exhibitionist streak led to a couple of additions to Brynn's list. We fucked in a (very nice, very clean) washroom at the ROM (Royal Ontario Museum), and then outside in her friend's backyard, while the neighbours were having a party on their deck.\n\nBrynn called to tell me that she'd solved the swimming pool problem.\n\n- \"Bring a bathing suit, sweetie. You won't be wearing it for long, though.\"\n\n- \"Seriously, Brynn? It's frigging freezing outside.\"\n\n- \"Heated indoor pool.\" she said.\n\n- \"Whoa. How did you swing that?\"\n\n- \"Our mutual friend Millie came through for us. All she asked was that she be allowed to watch the video afterwards.\"\n\n- \"And you said yes?\"\n\n- \"You know I did. Are you okay with that, Ben?\"\n\nSex with Brynn. Millie watching. Maybe I was a kinky bastard, too.\n\nShe definitely came prepared: a tripod for one of her phones, and a second tripod for an honest to goodness video camera. Brynn wore an incredibly revealing bikini - but that was only for salacious poses in front of her cameras. Then she stripped it off, and sat by the edge of the pool.\n\nBrynn was wearing reflecting sunglasses, and she hadn't missed an appointment at the tanning salon. Have I mentioned her absolutely amazing breasts?\n\n- \"Can I have a copy of this video?\" I asked.\n\n- \"Really?\"\n\n- \"You look incredible.\"\n\nShe was pleased to hear that. I couldn't wait any longer. I kissed and fondled her by the edge of the pool, and then went down on her. She didn't seem to mind, and graciously conceded an orgasm. Then she slipped into the pool.\n\nIt's considerably more difficult to fuck in a pool than you might think. First off, chlorinated water is not a lubricant. Second, it's way more complicated if you're trying to make a video of the experience.\n\nI trapped her against the edge of the pool, and managed to penetrate her from behind. Her ass was delightful from this position, and we created a minor tsunami in the water. But Brynn protested that we weren't going to get anything on video.\n\nShe wanted to try it in the center of the pool. She lay across a transparent air mattress, and presented her prominent backside.\n\nUnfortunately, I'm not seven feet tall. Brynn's ass insisted on floating, level with the mattress. Even on my tiptoes, I couldn't get more than an inch or two inside her. It may have looked good, for the cameras - but it wasn't doing much for either of us.\n\nBrynn started laughing first, and I couldn't help joining in.\n\nShe gave up first, and climbed aboard the air mattress.\n\n- \"How about this?\" she asked. She was belly down, with a good two-handed grip on the top of the flotation device.\n\nIt was just too tempting. I swung aboard, and tried to get my cock into position. Naturally enough, the mattress tilted, and we both ended up underwater.\n\nShe had a good sense of humour - and a great sense of the ridiculous. Brynn came out of the water laughing. Wet hair, reflecting sunglasses, superb tits... I laughed, too. Then I grabbed her, and dragged her out of the pool.\n\nI threw down our towels, and manhandled Brynn into position atop them. Then I drove into her, and began trying my best to make our pool deck fuck a memorable one.\n\nI might be wrong, but I think that Brynn came the moment I entered her.\n\n***\n\nEvery three or four days, Brynn would call me, and we'd cross off one of the items on her list. It was like a booty call, but with a strict agenda - and cameras. And sometimes, lingerie.\n\nOne Thursday night, it was up against the wall. She was completely naked, except for a pair of heels. Brynn wanted me to take her from behind, while she leaned against her bedroom wall.\n\n- \"Don't be afraid to push me a bit.\" she said. \"Here.\" She placed both hands behind her back. \"Grab my arms, and smush me against the wall.\"\n\n- \"You're the director.\"\n\nI'm not even remotely into bondage, or pain or humiliation, but Brynn seemed to be really turned on.\n\nAfterwards, she took out her list, and crossed another item off with a marker. I realized then that I'd almost completely forgotten about Duncan fucking Cockburn.\n\nI mean, he was still the main reason for what we were doing, in the sense that every one of our sessions included her telling me how DFC had reacted to the video of our last encounter.\n\nIt was also about recreational sex - that was still true. Virtually every time we got together, we'd knock out a video, rest and talk - and then have sex without a script. To be honest, I think that I preferred those moments to some of the contortions and poses she put me through.\n\nI couldn't complain about the following week's agenda.\n\n- \"Ben, this is my friend Poppy.\"\n\nDear God in heaven.\n\nPoppy was a little shorter than Brynn, blonde, and stacked. She also had the most intriguing smile - it was halfway between cute and lascivious.\n\n- \"Hi, Ben.\" she said, fluttering her eyelashes at me. If she was a waitress, I thought, she must make a fortune in tips.\n\n- \"Poppy is an exotic dancer.\" said Brynn. \"Duncan took me to the club where she works. His idea of a date.\" She rolled her eyes. \"He wanted me to watch her give him a lap dance, but I was much more interested in watching her dance alone. Isn't she gorgeous?\"",
        "- \"You have excellent taste.\" I said.\n\n- \"He's cute.\" said Poppy, with a slightly exaggerated little-girl voice.\n\n- \"Duncan pestered me about a three-way.\" said Brynn. \"All the time. So I thought we could give him one.\"\n\nYou know, it was probably the first time I'd ever felt charitably inclined towards Duncan fucking Cockburn. In hindsight, I probably should've thanked him for sending Brynn my way, too - but that only occurred to me later.\n\nAt that moment, I was more interested in the immediate. Brynn passed me one of her phones, and asked me to film her and Poppy as they removed their clothes. Well, it was mostly Brynn stripping Poppy; Duncan's ex seemed to have a thing for the buxom blonde, and especially her plump D-cup tits.\n\nShe caressed them, hefted them in her hands, and pulled on Poppy's nipples. Poor Poppy had to take off her own panties, because Brynn had forgotten about them. The blonde smiled at me again.\n\n- \"Shouldn't we get your friend undressed, too?\" she asked.\n\n- \"Eh? Oh - yeah. Course. Ben, pass me that phone. Poppy? You mind going the honours?\"\n\nPoppy didn't mind. She had skills. Somehow, she managed to brush her boobs against my arm three times while unbuttoning my shirt. She also grinned as she undid my pants, because her roving hands discovered that I was already hard as a rock.\n\nBrynn took charge again. A three-way kiss was a bit silly, if you ask me. Messy, too. But having two naked women sandwiching me was an unforgettable experience - especially when Poppy began stroking my rod while Brynn fondled my balls.\n\nI was put in charge of one of the phones again, so that I could film the two beauties as they sank to their knees, and began kissing and licking my dick. Then they took turns taking me in their mouth. Poppy was very considerate: whenever it was Brynn's turn to suck on me, the blonde would caress my balls, or squeeze my ass.\n\nThen Brynn set us up so that she and Poppy were facing each other, still kneeling, with my swollen erection trapped between four wonderful breasts. As you might imagine, I didn't last long after that - the sight alone put me over the edge. I spewed a thick load over both women's tits, and their faces. Poppy actually held onto my ass so that I wouldn't fall over.\n\n- \"Keep filming, stud.\" said Brynn.\n\nWith that, she led Poppy over to her bed. They lay down, with Brynn behind, spooning. But her hands immediately went to Poppy's meaty jugs.\n\nI was there, and I filmed it. If you ask me, Poppy wasn't bisexual. She let Brynn play with her boobs, and turned her head so that Brynn could kiss her. There was some tongue action, and some spit exchanged. That was it, though, from Poppy.\n\nBrynn was absolutely obsessed with Poppy's breasts. She squeezed them, stroked them, and even crawled halfway over the dancer to suck on her nipples.\n\nShe also reached down to stroke Poppy's pussy. But that was as far as she went. I can't tell you for sure if Brynn was actually bi-curious. She was aroused; that was for sure. But there was no scissoring, no oral.\n\nIn my position as production assistant, I made an executive decision: I put the phone down. Then I pulled Brynn's legs away, just enough to give me room to operate as I went down on her. She lasted less than a minute.\n\nI wanted a little taste of Poppy, too, and she didn't mind at all.\n\nBrynn re-asserted control after that. She had Poppy lie beside her on the bed, knees pulled back and legs spread. She wanted me to fuck her, and then move to Poppy - and then back.\n\nSeven strokes. Switch. Seven strokes. Switch. Then Brynn decided that I could be more energetic in doggy position, so she and Poppy knelt on the bed, and presented me their asses.\n\nI acquitted myself reasonably well, if you ask me. I lost count of the strokes, and came inside Brynn.\n\n***\n\nThe next time Brynn called me over, she seemed a little down.\n\n- \"We finished the list.\" she said.\n\n- \"Okay. That's good, isn't it?\"\n\n- \"I don't know. I tried to think of some other things that would really get to Duncan. I just couldn't.\"\n\n- \"You sound disappointed.\"\n\n- \"I am.\" she said. \"I like you, Ben. You're a nice guy, just like Millie said. And the sex has been great. I mean, I haven't been with anyone else since we started this - didn't even want to. You know?\"\n\n- \"Except Poppy.\"\n\nShe smiled. \"Yeah, I could do that again.\"\n\n- \"But...?\" She was trying to let me down easy, so I gave her the opening.\n\n- \"Yeah. Too much Duncan, I think. It was fun to stick it to him. In a way, I'd love to start all over, you know? But... I can't picture you and me together, after this. Can you?\"\n\n- \"I understand.\" I said. \"Different lifestyles. Different social circles.\"\n\nBrynn shook her head. \"No, it's not that. Well... maybe long-term, I guess. No - the problem for me is that every time I'm with you, I think of Duncan. Before, after - sometimes during. And... I don't want to think of him anymore.\"\n\nShe was right. It had always been about revenge and recreational sex, mixed together. But now she'd had enough revenge. So had I, to tell the truth. I wouldn't have said no to more recreational sex, but for Brynn the two things were now inextricably linked. She couldn't have sex with me without thinking of Duncan.\n\nUgh. I could understand how she felt. Truth be told, I'd known from day one that my relationship with Brynn (if you want to call it a relationship) had an expiry date. It had already lasted a lot longer than I'd expected.\n\nShe was really pleased that I took it so well.\n\n- \"You know,\" she said, \"I wouldn't mind thinking about Duncan one more time.\"\n\n***\n\nIt wasn't that hard to move on. I just went back to being me, and thinking about the same things that I'd been thinking about the whole time with Brynn had been calling me: namely, the question of what to do with my life.\n\nThen Christmas rolled around. I could've gone home for the holidays - that would've been a reasonably good idea. Instead, I stayed in the big city for one simple reason.\n\nKira.\n\nWe'd continued our email exchanges, though the frequency of phone calls had declined. I knew her plans for the holidays, in great detail: flight home on the 23rd, Christmas Eve and Christmas Day (a Saturday) with her parents and siblings. Boxing Day with the aunts, uncles and cousins, and the 27th for grannies, in-laws, and so on, with travel all over the GTA (Greater Toronto Area). It was a hectic schedule, and I didn't want to interfere.\n\nBut she'd agreed to come see me on the 28th.\n\nKira no longer had a place of her own in the city, so it only made sense for me to host. Neutral ground might have felt safer - but for Christmas? We hadn't seen each other for almost four months, which was longer than the time we'd spent together.\n\nThat's why I made it perfectly clear that she was coming over for dinner, which might include a few drinks. I promised to send her home in a taxi. I did everything but spell it out: this was not a booty call, not a romantic evening, or a planned seduction. I had no expectation of reunion sex.\n\nI really just wanted to talk to Kira. I had to talk to Kira.\n\nOkay, I made sure put to fresh sheets on my bed, and fresh towels in the bathroom. And I may have picked up the brand of coffee she preferred. But a conversation was first and foremost on my agenda.\n\nYou don't believe me? Funny - neither did Kira. When I picked her up at her parent's place, she came out with a sizeable backpack. It may not have been a suitcase, but it was too big to be a purse.\n\nThen she was right there, and I took her in my arms. We hugged, and then kissed, and then hugged some more.\n\n- \"You smell fantastic.\" I said into her ear. \"You look fantastic.\"\n\nShe did, too. Her hair was a little longer, and a little more lustrous. Her cheeks were already red - well, it was a balmy 12 degrees below. The look suited her. That was when I realized it: Anita had the summer tan, and could rock a bathing suit - but Kira was a winter rose, fresh and clean and rosy-cheeked.\n\n- \"I missed you.\" she said.\n\n- \"So did I.\"\n\nI got her into the car before we both froze to death, and put her pack on the back seat. The damn thing was surprisingly heavy. She saw me looking at it.\n\n- \"Your present.\" she said. \"And... a few other things.\"\n\n- \"Such as?\"\n\n- \"A bottle of wine. Pajamas. A toothbrush.\"\n\n- \"You don't have to stay overnight, Kira. I'm happy to get you a taxi.\"\n\n- \"I don't have to do anything I don't want to. Aren't you the one who told me that in the first place?\"\n\n- \"You never forget anything I say.\"\n\n- \"No.\" she said. \"But you're pretty good at remembering what I say, too.\"\n\n- \"I hope so.\"\n\nKira took a deep breath. \"You wanted to tell me something.\"\n\n- \"I want to tell you everything.\" I said.\n\n- \"I'm listening.\"\n\nI put the car in gear, and headed for my place. Then I took a deep breath of my own, and described my first meeting with Millie. I told her just about everything I could remember. But then I progressed rapidly to the backyard party where I'd first met Kira - and Anita.\n\n- \"My first instinct was to ask Anita out.\" I admitted.\n\n- \"I understand.\" said Kira. \"That's what I thought would happen.\"\n\nIt was difficult, but I told her about buying the Marlies tickets, only to find out that Anita had fucked Luke.\n\n- \"What? That's crazy.\"\n\n- \"You didn't know?\"\n\n- \"No. That's... why would she do that?\"\n\n- \"I'd hooked up with Millie. She wanted to get even.\"\n\nKira looked confused. \"I don't get it.\"\n\n- That's her philosophy of relationships: everything has to be exactly even.\"\n\n- \"I still don't get it. But... lucky break for me, I guess.\"\n\n- \"Kira - asking you to that hockey game might have been my second choice - but I never regretted it. Not in the least. It was a lucky break for me. I enjoyed all of my time with you.\"\n\n- \"I know.\" I'd never faked a single moment with Kira. She could tell.\n\nI brought up the subject of Anita's cottage invitation. \"Why didn't you tell me that you'd bought tickets to a musical?\"\n\nKira made a strange face. Shyness? Remorse?\n\n\"I would have told her no, if I'd known that you had plans for us.\" I said.\n\n- \"Really?\" Kira didn't seem to believe me.\n\n- \"You did everything you could to make me happy. But you didn't give me the chance to do something for you. I would never have gone to Anita's cottage if I'd known that you'd bought tickets to a show.\"\n\n- \"Water under the bridge.\" she suggested.\n\n- \"No. I have to ask you this, Kira. In the future, please don't automatically put my interests before yours. Or at least tell me before you do, so that I can be part of the decision.\"\n\nShe thought about what I said. A little smile came over her face; she'd definitely heard two of the key words in the middle.\n\n\"I know we agreed that a long-distance relationship wasn't going to work.\" I said. \"But now I'm thinking that you agreed a little too quickly. That was for my benefit, wasn't it?\"\n\n- \"Long-distance can be incredibly difficult.\"\n\n- \"But you didn't know anyone in Winnipeg when you got there, did you?\"\n\n- \"I've met some people at work.\" said Kira.\n\n- \"I'm sure you have. Do you have a boyfriend?\" I would've bet money on the answer to that question, but I still had a small shiver of fear just before she answered.\n\n- \"No.\" she said. Then, a moment later: \"Do you?\"\n\n- \"What would I do with a boyfriend?\"\n\nKira faked a punch at my shoulder. She barely touched my jacket.\n\n- \"No, I'm not seeing anyone. But what I'm suggesting is... that a long-distance relationship might have been easier for you than for me. Is that you why you agreed that we shouldn't?\"\n\n- \"I just wanted you to be free to find someone new.\"\n\n- \"That's what I'm saying. You did it for me - not for you. Kira, have you been on any dates?\"\n\nShe had to think about it for a moment. \"Two.\"\n\n- \"Two? In nearly four months? Was that two with the same person, or two first dates?\"\n\n- \"Two first dates.\" she said, very softly.\n\nI let that sit there, for a moment, as I merged onto the Gardiner Expressway.\n\n\"What about you?\" Kira asked. Again, she spoke very softly.\n\n- \"Me?\" I knew what - or who - she was curious about. But I also wondered if my encounters with Brynn could be called 'dates'.\n\nKira took the plunge. \"What happened with Anita?\"\n\nI had to laugh. \"Millie didn't tell you?\"\n\n- \"Only that you aren't with her. I thought for sure that...\"\n\n- \"It's a long story - which I will tell you in full, once we're at my place. For now, though: how were the holidays with your folks?\"\n\n- \"Like I never left.\" she said. Kira had been run off her feet, serving and cleaning and helping out. She didn't say so, but I could read between the lines: far from treating her as the guest of honour, her family had casually relegated her to the position of do-everything pleaser.\n\nWe chatted about less consequential things until I pulled up in front of my place. It had started snowing lightly, turning a freezing cold evening into a very beautiful freezing cold evening.\n\nOnce inside, I served my guest a drink, and got to work getting dinner under way. Everything had been prepared beforehand, so it only took a few minutes to get the show on the road. By unspoken agreement, we postponed the Christmas presents. Kira was far more interested in what I had to say, anyway.\n\n- \"Anita and I were never going to get together, Kira. Not after her and Luke. I didn't know why she'd done it, but it wasn't something I could accept. I didn't worry about it so much, at the time, because you agreed to go out with me. I had no regrets about the way things worked out. I was incredibly happy with you.\"\n\nKira smiled. \"I was, too.\"\n\n- \"Best months of my life.\" I reminded her.\n\n- \"But then I left. And I was... I was sure that you and Anita would get together.\"\n\n- \"Why?\"\n\n- \"Why was I sure? Because you two had so much in common. Because she was crazy about you. You had to know that, Ben.\"\n\n- \"You mean because she had sex with my friend Luke two days after meeting me? Did you know she went after my friend Marco simply because I was dating you? I was with her friend, so she had to be with my friend. It was all about getting even, for Anita.\"\n\n- \"Really?\"\n\n- \"Sounds crazy, right? You know how she tried to come between us - at the cottage, especially. That was all about showing me that she was a better match for me than you were. Interesting, isn't it? She was all about getting even with boyfriends - but she didn't apply anywhere near the same standard to her girlfriends.\"\n\nKira could only agree. She'd been there.\n\n\"She dumped Marco the moment she found out that you were leaving. Broke his heart. Anita had no respect for Luke, for Marco - or for you. Kira - did you really think that I could go out with someone like that?\"\n\n- \"I... I didn't know all of that.\"\n\n- \"You knew that she was betraying your friendship. But you never said a word against her.\"\n\nKira didn't have an answer for that.\n\n\"Was it because you thought I might prefer her? That I might be happier with her?\"\n\nThat might have been a little too close to the truth. A small tear formed in the corner of Kira's eye.\n\nMy heart went to her again. Had it always been this way for her? Had she always been pushed to sacrifice her own hopes and desires so that she could please others?\n\n- \"You're so much better than her, Kira.\" I said. \"For me, there's no comparison. I only wish that I could have told you so more often - and that you could have believed me.\"\n\n- \"Thank you.\"\n\nI passed her a Kleenex - but I didn't wipe the tear from her eye, or take her in my arms. Honestly: I knew that if I did, we'd soon be kissing, and I'd be peeling her clothes off, and...\n\nYeah, I know. What the hell was wrong with me? I had to finish my story. It's that simple. She deserved to know everything, before deciding about me. So I checked on the progress of dinner, refilled our drinks, and told Kira the story of Millie's engagement party: Millie's condition when I found her, getting Anita to watch over her, Carla's crazy striptease and lap dance...\n\n- \"That's unbelievable.\"\n\n- \"I know. I was there, and I'm still not sure that it actually happened. But it set off a series of very strange events. Anita's disappearance. Discovering that Millie had been drugged. Anita's call to meet her at the hotel, so that we could see her fucking Duncan fucking Cockburn.\n\nKira was completely amazed - and revolted. \"That's... sick. She didn't even ask you about it - she just went straight to revenge.\"\n\n- \"No. Not revenge. In her head, Anita was just creating 'balance'.\"\n\n- \"But... how did she even find your worst enemy? And why is 'Duncan fucking Cockburn' your worst enemy?\" I wanted to laugh; Kira pronounced 'Duncan fucking Cockburn' exactly as I did, with the same curl of the lip and expression of disgust.\n\nMore history. I told Kira everything about DFC up to that point. In one sense, it was the story of my whole life. Then I came back to Millie. Rohypnol. Her fianc\u00e9, and the retribution they'd exacted... I also described my painful conversation with Anita, when she'd tried to convince me that she'd done all of those crazy things out of love for me.\n\n- \"She believed that we had to be 'even'. Luke cancelled out Millie. Marco was the same as you. And Duncan fucking Cockburn was okay, because he equalled Carla. She was unrepentant, Kira. The onus was on me to 'understand'. To 'accept'.\"\n\n- \"My God...\"\n\n- \"That's why Anita and me... never happened. We weren't going to, after Luke - not for me. But Anita, Millie - and, apparently, you - all thought there was still a good chance.\"\n\n- \"I didn't know any of that, Ben.\"\n\n- \"I know you didn't. But can you see why I wasn't about to put any of this in an email?\"\n\n- \"I can hardly believe it as it is.\"\n\n- \"Oh - there's more.\" I said. Just then, my kitchen timer went off.\n\nI served two plates. Kira couldn't stop herself: she insisted on helping, so I let her dress the Caesar salad. With glasses refilled, we sat down at my little table.\n\n- \"This is really good.\" said Kira.\n\n- \"Thank you.\"\n\nKira took a deep breath. \"No, thank you - for telling me the truth.\"\n\n- \"I'm not quite finished.\" I admitted. \"And I'm not exactly the hero of the next part.\"\n\nI reminded her that DFC had been hospitalized. I described my first meeting with Brynn, and her strange proposal.\n\n- \"Wow.\" said Kira.\n\n- \"Yeah. Umm...\"\n\nI told her everything. I didn't remember all of the items on Brynn's list, but I had no difficulty recalling the fact that we'd fucked more than a dozen times - and filmed them all.\n\n- \"Do you have feelings for her?\"\n\nI shook my head. \"At first, I felt bad for her because she'd had to put up with Duncan fucking Cockburn. But she really only wanted revenge - and recreational sex. We didn't have much of a future together - we'd both be thinking of him all the time. Plus, she was beginning to remind me of Anita.\"\n\n- \"That's too bad.\"\n\n- \"Not really. I knew when I got into it that I wasn't going to have a relationship with Brynn. All it did was make me think. Can I tell you what I've been thinking?\"\n\n- \"Of course.\"\n\n- \"First off, I discovered that sex with someone you like is much better than anonymous coupling. Millie was great - but that's only in hindsight, because she's a nice person. What happened with Carla... I don't remember that as anything other than embarrassing.\"\n\nI re-filled our glasses, even though they didn't really need it.\n\n\"Sex with Brynn was exciting. It was like cotton candy - and just as nutritious. I found myself wishing for a more solid relationship. Food for the soul, if you like.\"\n\nKira blushed a little more. She had to know where I was headed.",
        "\"I didn't tell you about Brynn, while it was happening. I wasn't sure that you'd appreciate it, but basically I just didn't know how to tell you where my head was.\"\n\nI pulled two printouts from the bookshelf behind me, and passed them to Kira.\n\n\"This is what I was thinking about.\" I said.\n\nKira quickly scanned the two sheets of paper. Then she looked up.\n\n- \"You applied for jobs in Winnipeg?\"\n\n- \"Yes.\" Right around Thanksgiving, when I'd learned that Kira wasn't going to be able to get home, I'd made the first of several applications. All of the nonsense with Anita, DFC, and Brynn had only accelerated the process. \"I made six applications. Got two interviews.\"\n\nOne of them would be a bit of a demotion, but there might be an opportunity to win a promotion fairly quickly. The second would effectively mean a jump in responsibility (and visibility) for about the same salary I was earning now (though I suspected that the money would stretch further in Manitoba).\n\n- \"Ben.\" said Kira. \"Do you know anyone in Winnipeg?\"\n\n- \"Other than you? No.\"\n\n- \"But you'd be willing to leave Toronto?\"\n\n- \"This isn't my home, Kira. Duncan fucking Cockburn pretty thoroughly poisoned the well for me at work. Anita spoiled my friendships with Marco and Luke. Millie is about the only friend I have left here - and we don't exactly move in the same social circles.\"\n\n- \"But you don't know anyone in Winnipeg. You don't know anything about Winnipeg.\"\n\n- \"Neither did you, when you went. Are you trying to talk me out of it?\"\n\nThat caught her at a loss. I believe that Kira wanted me to join her - but she also wanted what was best for me, and she couldn't be sure that those two things were one and the same.\n\n\"It's cold.\" I said. \"Some people call it Winterpeg. They have a hockey team, and a football team. There's a ballet, a theatre center, and a symphony orchestra. There are major festivals - some of which I have a feeling we would both enjoy.\"\n\n\"They have the longest skating rink in the world. Winnie the Pooh was named after Winnipeg. The mosquitoes are the size of small condors. There are French-speakers.\"\n\nKira was shaking her head in disbelief. \"You've been doing research?\"\n\n- \"A little.\" I admitted. \"Oh - and you live there.\"\n\n- \"I do.\" said Kira. She smiled, but she didn't meet my eye.\n\n- \"That's the whole deal, Kira. I was... I misbehaved, with Brynn. But I was good about Anita. She was never really on my radar after our first date. I was genuinely happy with you. I'd like to be happy with you again. It's really up to you - and not what you think would be best for me, but what would be best for you.\"\n\nIt was a lot for Kira to take in. I excused myself, and cleared the table of our used dishes. In the kitchen, I rinsed the plates and put them in the dishwasher. Then I got dessert out of the fridge, and brought it out.\n\n- \"Oh my God.\" said Kira. \"Key Lime pie? How did you know?\"\n\n- \"A little birdie might have whispered that it was your favourite.\"\n\n- \"Millie told you?\"\n\n- \"Well, you certainly didn't. I can't believe that we went out for months and you never told me. Shame on me for not asking, I guess.\"\n\nDessert was a success. I didn't know what else to offer her, at that point.\n\n- \"Coffee? More wine?\"\n\n- \"Coffee would be lovely.\" she said.\n\n- \"Won't that keep you up?\"\n\n- \"We still have to exchange gifts.\" she reminded me. \"And if I have to take a taxi home, I'd rather be awake for the ride.\"\n\n- \"Coffee it is.\"\n\nI'm capable, to a certain degree, of multi-tasking - the popular name for doing two or more things at once (usually a sure recipe for disaster). In this case, though, I was able to make coffee even as I wondered how Kira was reacting to all of my revelations.\n\n- \"Is it a good time to give you your gift?\" she asked, when I returned.\n\n- \"Ah - sure.\" I was a little more nervous about this part of our evening.\n\nKira handed me a fancy little decorated bag, with frilly tissue paper, ribbon and a bow. Inside all of the decorative stuff was a simple envelope. Inside the simple envelope was an airline ticket: an open date, return flight to Winnipeg.\n\nI looked at the darn thing in complete astonishment. My first reaction was to laugh out loud - which took Kira by surprise.\n\n- \"What's so funny?\" She was confused, but not insulted. My laughter was genuine - not mocking.\n\nKira understood a lot better when I handed her my Christmas gift bag (minus all of the tissue paper. She pulled out the envelope, and opened it, to find... an airline ticket, Winnipeg to Toronto, return. I'd thought that she might want to see her family outside of the holidays, and that maybe she'd want to spend time with me, too.\n\nShe just stared at me, utterly amazed.\n\n- \"You...?\"\n\nI could only nod. We'd bought each other the same gift.\n\nNow she looked me in the eye. \"Oh, Ben...\"\n\nThat was about as clear an invitation as I'd ever heard. A second later, I was next to her on my threadbare couch, taking her in my arms. Our first kiss was slow, and careful, but fraught with meaning. It was a confirmation, and a promise.\n\nThere was passion there, too, but if my heart was overflowing, so was my mind. I was still trying to absorb the possible implications of Kira's gift.\n\n- \"You changed your mind? About a long-distance relationship? Is that... is that what this means?\"\n\nKira blushed. \"It means that I wanted my friend to come and visit me.\" she said. \"But... yes, I was wondering if we could... discuss some possibilities.\"\n\n- \"Possibilities?\"\n\n- \"Well... I wouldn't want to prevent you from meeting someone else. But if you were able to come out for a short stay, I thought that we could treat it like... an escape holiday weekend.\"\n\nA friends with benefits holiday package, I thought. Yet she would leave me the freedom to meet someone new.\n\n- \"You're incredible.\" I said.\n\n- \"Am I?\"\n\n- \"Oh, yeah. But I don't think that would work. See, I might be moving to Winnipeg soon, to take up a new job. And if that happens... I don't think my girlfriend would appreciate me having friends with benefits.\"\n\n- \"Your girlfriend?\"\n\n- \"Unless you have a better offer - and you'd better not.\"\n\n- \"I can't imagine a better offer.\" she said.\n\nThere was no good answer to that, except to pick her up, and carry her to my bedroom.\n\n- \"No taxi.\" I said.\n\n- \"No.\" she agreed. \"I brought my pajamas.\"\n\n- \"You won't need them.\"\n\nShe was an armful, but not all that heavy. I laid her gently on my bed, and then lay down beside her. I kissed her, and kissed her again. I simply couldn't get enough of that intimate contact.\n\nKira was ready for more. She let me know by pressing her bosom against my chest, and by arching her back so that she could grind her lower body against mine.\n\nI had one more thing to do, but I decided that it could wait.\n\nIt was surprisingly difficult to coordinate the removal of clothing. I was trying to peel off her clothing while she tried to strip me. It was almost funny. But the urgency began to increase.\n\nI had so many well-laid plans for a skillful seduction (if all went well, as it so clearly had)... and I fumbled them all.\n\n- \"Wait.\" I got out. \"Wait... just a sec...\"\n\n- \"I'm still on the pill.\" said Kira. She must've thought that I was fumbling for a condom. She had to be surprised when I jumped out of bed and sprinted back to the living room, to retrieve my silly little gift bag.\n\nBecause there was something still in it. Yes, the plane ticket was my main gift, but I'd bought something else for Kira.\n\nI ran back to the bedroom, and sat on the edge of the bed. Kira had to be wondering if I'd lost my mind.\n\nWho knows? Maybe I had.\n\nI passed her the little box.\n\n- \"It's the second part of your Christmas gift.\" I said.\n\nKira looked especially confused, as I was holding out a small jewelry box.\n\n\"Just open it.\" I suggested. \"It will all make sense in a minute. Or two.\"\n\nIt was a ring. No, not an engagement ring.\n\n- \"It's beautiful.\" she whispered.\n\n- \"It's not.\" I said. \"It's just a Claddagh ring.\"\n\nIf you've never heard of them, they're an Irish tradition. The band is shaped like two hands, supporting a heart, with - sometimes - a crown over the heart.\n\nIt's a promise ring, of sorts. They're not spectacular, and they're not particularly expensive. Some people are ready to pay $300 for them (or even $500, if you can believe it). I'm pretty sure that you can pick them up in Ireland for $25 to $50. I got mine for $89.\n\nIt's not the greatest jewelry - but it can be very meaningful. I tried to explain it to Kira.\n\nAccording to tradition (or legend), the meaning changes, depending on how the woman chooses to wear it. If you put it on your right hand, with the point of the heart toward the fingertips, it means that you're single and might be looking for love. On the right hand with the point of the heart toward the wrist: the wearer is in a relationship; someone \"has captured their heart\".\n\nBut if it's on the left ring finger with the point of the heart toward the fingertips: she's engaged. Finally, when worn on the left ring finger with the point of the heart toward the wrist, it means the wearer is married. Obviously, this tradition is much older than Facebook.\n\n- \"I love it.\" said Kira. She carefully placed it on her right hand, with the point of the heart aimed at her wrist.\n\nMy promise had been made; my question was answered.\n\nWe sat there for a moment, just smiling at each other.\n\nKira reached for me first. I leaned forward, and we kissed again. There was no rush, now: we kissed for a long time, before finally removing the last of our clothes. Our love-making was equally unhurried.\n\nIt's amazing how wonderful it can be, with the right person.\n\n***\n\nEPILOGUE\n\nI quite liked Winnipeg. I'm biased, of course, because I got to go to bed with Kira every night, and wake up next to her every morning. We found a place to live together, and began to save money, building up our equity. Real estate here isn't cheap, but it it's nowhere near as ridiculous as in the Greater Toronto Area.\n\nKira was very successful at work. I was, too. I was offered a promotion (and a raise) which would have meant moving to Calgary. Kira and I talked it over, slept on it, and talked it over again.\n\nI turned it down. There are more important things than money.\n\nWe joined a curling club - don't knock it. Curling is a great social game (even more so than bowling), and you can still curl when you get older. Kira trusted me, and joined in. She hasn't regretted it yet.\n\nA little over a year after I'd moved to Winnipeg, I got a phone call from an old friend.\n\n- \"Hey cute stuff! It's your official guardian angel!\"\n\n- \"Uh...\"\n\n- \"Seriously? You don't recognize my voice?\"\n\n- \"Millie?\" We'd exchanged emails from time to time, but I hadn't spoken to her on the phone for ages.\n\n- \"There we go!\"\n\nTo make a long story short, Millie was going to be passing through Winnipeg - which is not a thing, by the way - and asked if she could see us.\n\n- \"Of course you can.\" I answered. \"Are you staying overnight? We can put you up. Nothing luxurious, but you know you're more than welcome...\"\n\n- \"That sounds great!\" she said. \"Except... I'm coming with a friend.\"\n\n- \"No problem. We have room for both of you.\" We did - Kira and I had a second bedroom, because we were thinking about filling it... with children. Our children.\n\n- \"Just so you know, Ben... my friend is someone you know, too. It's... well, it's Anita.\"\n\n- \"Oh.\"\n\nThat made all the difference. See, you can fly from Toronto to Vancouver. Unless you're driving across Canada (something I heartily recommend, whether you're young or old), there's not much reason to stop-over in Winnipeg. Do it once, if you're curious - and you should be. After that... the only reason to go through Winnipeg is if you're going to Winnipeg or somewhere else in Manitoba.\n\n\"Let me talk it over with Kira.\" I said.\n\n- \"I understand.\" said Millie. \"Just so you know, Ben: I still love you. I wouldn't be suggesting this if I didn't think it was a good idea.\"\n\n- \"I love you too, Millie.\" I said. \"You introduced me to Kira. But I still have to talk to her, first.\"\n\n- \"Understood. I'm not trying to mess up what you have. I miss both of you.\"\n\n- \"I'll get back to you ASAP, Millie.\" I promised.\n\nThere was no way that I was going to invite Millie and Anita to our house without discussing it with Kira - not after everything that had happened between the four of us.\n\n- \"They're not just passing through, are they?\" said Kira.\n\n- \"I don't think so.\"\n\n- \"It would be nice to see Millie.\"\n\n- \"And Anita?\"\n\nKira sighed. \"I guess she just needs some kind of closure.\"\n\n- \"Do you need closure?\" I asked.\n\n- \"No. I can forgive - I just won't forget. But it could be awkward if we ran into her in Toronto, if we went to visit my family, or something like that.\"\n\nI took Kira in my arms. \"Are you sure, babe?\"\n\n- \"Yeah. I think so. You?\"\n\n- \"I'd rather not turn Millie down if we don't have to. Worst-case scenario? It's only one night.\"\n\nI gave Millie the green light. On the day they arrived, I picked them up at the airport. Millie hadn't changed at all. I gave her a hug and a kiss.\n\nI wasn't so sure how to greet Anita, but she solved that issue by wrapping her arms around me and pressing her whole body against mine.\n\n- \"Oh, it's so good to see you again.\" she breathed into my ear. The embrace lasted a little bit too long; I started to disengage just before she released me.\n\nAnita had changed a little: her hair was longer, and the blonde streaks were gone. She still had a fantastic tan, that healthy glow and a bright smile. She was wearing a tight top that showed a little cleavage, and a ridiculously short skirt.\n\nThankfully, she let Millie and I talk a bit. I took them to the parking area and stowed their luggage in the car. Anita claimed the front seat.\n\nMillie gave the latest news, while I occasionally pointed out sights of interest. Anita, meanwhile, fiddled with the shoulder straps of her top, and adjusted her skirt. She laughed at anything I said that was even remotely funny, and occasionally reached over to touch my arm when she said something.\n\nI glanced in the rear-view mirror. Millie didn't look happy. Clearly, this wasn't what she'd been expecting.\n\nKira and I had decided to feed our guests at home - partly so that no one had to drive, and partly so that Anita couldn't surprise or embarrass us in public. If you've read my story, then you can understand why Kira and I were prepared for the worst-case scenario.\n\nMillie and Kira embraced like old friends - which they were. Kira submitted to a hug and a kiss on the cheek from Anita. My lover certainly didn't fail to notice the way Anita was dressed.\n\nMillie praised our little home - I knew very well that it would have fit into her mansion seven or eight times. But there was no pretense about her appreciation of the meal Kira had prepared.\n\n- \"Damn, girl! When did you become super-chef?\"\n\n- \"It's really good.\" said Anita. I was still trying to decide if that had been a subtle put-down disguised as a compliment, when Millie cleared her throat.\n\n- \"I'm sure you've known all along,\" she said, \"but we came to see you because Anita has some things she needs to say. Long overdue things to say.\"\n\nThat put Anita on the spot, but she was clearly well-prepared.\n\n- \"I... I wanted to apologise, Ben. For all of the things I put you through. It was... completely unnecessary - and it was all my fault. I did tremendous damage to our friendship... and I'm really sorry for that.\"\n\nI would have given her performance a C minus, at most. The pauses were artful, but they seemed just a tad too rehearsed. Damage to our friendship? We'd never really been friends. Acquaintances, yes. A step away from going out together, which might have led to a relationship - but never friends. The closest we`d come to friendship was when Anita was trying to break up my relationship with Kira.\n\nAnita's real (and former) friend was sitting just to her left, but she never even glanced in that direction. If there was anyone she had to apologize to, it was Kira. But there wasn't even a hint of remorse about what she'd done to destroy that friendship.\n\nAnita put her hands on the table, palms up. \"I wish I'd never done any of the things I did.\" she said. \"I don't know if you can forgive me... but if I had one wish, it would be that... that we could start over. A fresh start.\"\n\nMillie had the grace to look surprised - even a little embarrassed. This little performance obviously wasn't quite what she'd signed on for.\n\n- \"I'm not the one you should be apologizing to, Anita.\" I said. I spoke slowly, and enunciated every word.\n\nHer lip twitched. She looked to Millie, first - for moral support? Finally, she looked at Kira.\n\n- \"I've apologized to Millie, for... my bad choices. But I guess I should tell you how sorry I am, Kira, for all of the pain I caused.\"\n\nBrutal.\n\nMillie couldn't help herself; she was slowly shaking her head from side to side.\n\nSomehow we finished that meal. Kira had done the cooking; that left me on cleanup detail. I got up to start collecting the dishes. Anita immediately jumped up.\n\n- \"Let me help!\"\n\n- \"It's alright - I've got this.\" I said. Anita was obviously expecting to follow me to the kitchen, where she would have me alone. Kira was no fool - she saw it, too.\n\n- \"It's all under control.\" she said. \"Ben and I will do it.\" She gave Millie a choice of coffees and liqueurs, and then asked Anita her preference.\n\nKira and I loaded the dishwasher, got the dessert ready, and made four coffees. She didn't say a single word, and I wisely refrained from trying to comfort her. Like it says in the Bible: There is a time to speak, and a time to keep your mouth shut.\n\nThe rest of our evening was... interesting. Anita tried steering the conversation to books, or to sports - and Kira answered her almost every time. It seemed to surprise Anita that Kira was so well informed about the things that I liked.\n\nFinally, Millie suggested making an early night of it, as they had a plane to catch the next day. Kira agreed that that was a good idea.\n\n- \"Ben?\" said Anita. \"Could I... speak to you for a moment? In private?\"\n\n- \"I'm right here.\" I said. \"You can say whatever you want in front of Kira - you and I don't need to be private. I would just tell her right afterwards, anyway.\"\n\n- \"Ummm... just for a minute?\"\n\nCanadians are supposed to be very polite. Generally, we are - and then some asshole (tele-marketers and scammers, especially) tries to take advantage of that. I'd had enough of Anita's games.\n\n- \"If you want it to be private, maybe you could put it in an email. But just so you know - I'll still be showing it to Kira.\"\n\nThat cooled her jets pretty quickly. Millie practically dragged Anita off to the guest bedroom.\n\nKira and I did a last bit of cleanup, but not before the love of my life took me in her arms and kissed me.\n\n- \"I love you.\" she said.\n\n- \"And I you.\"\n\nIt had been a difficult day. Even when I'd considered all of the possible outcomes of having Millie and Anita in our home, I'd never anticipated something quite so ludicrous as Anita's fake apology.\n\n- \"I didn't think that she'd still be so delusional.\" I said to Kira.\n\n- \"You handled it pretty well.\"\n\n- \"So did you. I would have completely understood if you'd stabbed her with a steak knife.\"\n\n- \"I don't need to get even, Ben. I won - in every way possible. She's the one who has to come to terms with all of the ways she messed up.\"\n\nIn the early hours of the morning, Kira and I woke up at the same time. Someone was clattering about in our kitchen.",
        "Anita.\n\nShe was probably hoping that I was the lighter sleeper, and that I would come to investigate, so that she could have her 'private' moment.\n\n- \"I'll go.\" said Kira.\n\n- \"Let's go together.\" I suggested.\n\nWhen Kira and I entered the kitchen together, Anita realized that she wasn't going to get her way. Not this time.\n\nIn the morning, we prepared a solid breakfast for our guests. Millie looked like shit - she hadn't slept well. She asked if she could have a moment of my time.\n\n- \"I'm so sorry.\" she said. \"This is not what I was expecting.\"\n\n- \"I know, Millie. You're a good friend.\"\n\n- \"I'm sending her for counselling as soon as we get home.\"\n\n- \"That may not be a bad idea.\"\n\nMillie looked me in the eye. \"Are we okay? You and me?\"\n\n- \"Always.\" I said.\n\nKira drove our guests to the airport. It was a Saturday, so I stayed home and cleaned up. I also prepared a lunchtime snack for my partner.\n\nWhen she returned, Kira didn't look particularly angry.\n\n- \"All is well?\"\n\n- \"We cleared the air.\" she said.\n\n- \"You and Millie still okay?\"\n\n- \"Oh, yes. That was never in doubt.\"\n\n- \"And you and I?\"\n\nKira grinned. \"Is that a reference to 'Yes'? Should I put the album on?\"\n\nI had to laugh. \"Only if you want to make love before lunch.\"\n\n- \"Always.\" she said.\n\n*****\n\nTHE END"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "friends",
        "relationships",
        "dating",
        "crazy",
        "romance"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/getting-even-pt-04"
}