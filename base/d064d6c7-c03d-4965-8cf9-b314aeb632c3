{
    "title": "The Pirate King Ch. 09",
    "pages": [
        "This is part of an ongoing series - if you find yourself here without reading the previous chapters, you're probably going to want to go back and do that. Don't worry - we'll still be here when you get back :)\n\nAlternative title: What a dick. \n\nHi all. First all, no sex in this chapter. These next few bits are going to be the sailor's movements on land as he gets his crew, then his ship, and then makes his way back to the Captain. I'll be marking this section, which we can think of as a bit of an intermission, as  Islands . If you're not interested in seeing the sailor sans the Captain, skip these next few chapters and come back when you no longer see Islands in the description!\n\nThat being said, I think we're going to have fun running around and meeting some new characters. So, enjoy :) As always, comments and feedback welcome. Peace, stay safe, etc, much love. \n\n****\n\nHow many times had I made this swim? The ocean welcomed me like an old friend, lifting its currents around my body and tapping against my soul like laughter. I let it, my arms pulling the water past my sides as I moved towards the shore, trying to forget that every stroke took me further from the Captain, not letting myself really, truly believe that I was heading home. \n\nThe sandbar was more or less where I remembered it, and I planted my feet in the shifting grains and stood, giving my arms a chance to rest. I turned my body back to get one last glimpse of the ship.\n\nIt really was a thing of beauty. I could see why the Captain was attached. The white sails were handsome, pressed up against the sky, filled with a breeze that took the Captain away, away, away, and he was the handsome thing, and he was the sky and I was not pressed up against him as I should be, as I belonged, because he was leaving. Because I had told him to go. I closed my eyes against the sight, but the memory was still there and I tried to breathe.\n\nA force hit my leg and I jumped, my eyes snapping open. At the sight of my attacker, I found my breath again in the breeze and began to laugh. \n\n\"Syb!\" I scooped the child up out of the water. She squealed, clinging to my arm and managing to settle curled up on my shoulder, somehow. I grinned at the precociousness. \n\nI had thought this would be emotional, or maybe awkward. Three years is a long time to be away from your child. But it just felt - good. Right. \"Did you miss me, little one?\"\n\n\"Da, you got big!\" \n\nI laughed again, the noise squeezed out by her small arms and demanding eyes. \"You're the one who grew, my little seal pup! Look at you!\" I grabbed her off my body and tried to swing her around, but she just giggled and made her way back to my shoulders. \n\n\"And you put mountains on your back,\" she commented, patting my scars. \n\n\"You always told me I'd carry mountains when I died.\" Syb had told me many things. Syb would tell me many more things in the years to come. I was sure of it. That was one of the things she had told me. \n\n\"Yeah, Da. And now you're dead, and now you've got mountains.\" I smiled at the way she said it. Of course, she seemed to say. It always was with her, everything was just of course. The pain of my last three years, the shock of it, the twists of fate that had brought me to where I was, to being what I was.  Of course. \"When's the pretty man going to visit?\"\n\n\"Hm?\" The sudden topic change caught me by surprise, my attention on my footing as I slogged our bodies back to shore, trying to remember where the shallowest path was. It, like the sandbar, seemed to be more or less where I had left it. A lot was still the same, even after three years. \n\n\"The pretty man on the boat,\" my daughter was continuing. I made a wrong step that used to be right and almost dunked us. A lot had also changed. \n\n\"Ship, Syb,\" I corrected her. \n\nI knew she was pulling a face without having to see her, and I smiled. \"Ship, Da, when is he coming to visit?\"\n\nI turned my head to watch the ship leave the protection of the cove. \"I wanted him to come today, little one. You know it isn't safe.\"\n\nShe thought about that for a minute. \"It's important to keep him safe. I'll tell you when you can bring him.\"\n\nI nodded, used to taking orders from - I suppose she was eight now. Was taking orders from an eight year old stranger than taking them from a five year old? I supposed I would find out. \"Do you know when that will be?\" I asked wistfully, knowing full well that if she had known she would have told me.\n\n\"Uvu says I'm not to prophesize without good reason,\" she said primly. \n\nUvu. I couldn't believe she was still using that name for him. \"Uncle Val\" had been too hard for her to pronounce, and somehow 'Uvu' had come out of it; ah, well, she had a way of making things hers. Same name, I thought, water back up to my chest, tickling at her legs, and she laughed to feel the wetness. Same name, same house, same actions. I wonder how he will be different?\n\n\"But,\" she continued, and I paid careful attention, \"it won't be long. Before you marry him.\"\n\nI smiled, feeling warmth trickle up through my stomach, my head floating up after it to rest on a pleasant haze. So I would marry the Captain. \n\n\"But after the next time you do the sex.\"\n\nI tripped over nothing, surprise making me clumsy, and the infernal child laughed as we dunked into the ocean.\n\n***\n\nThe house looked different than I remembered. I stood on the shore, staring at the doorway and trying to decide what to do about it. \n\n\"Da, you need to go in,\" Syb said for the third time. \n\nI gave the place another hard look. \"Is it the roof?\"\n\n\"We haven't changed anything. Just burned the bits that were you, cuz you were dead and stuff. Come on, you need to come see Uvu.\"\n\nAh. That was it. My crest was gone from the walls; blankets that should have hung, embroidered with my name, were missing; the post where I had scratched a note was hacked from it's original position. \n\n\"Da- aaaaad.\" \n\nI sighed and stepped inside. There was nothing to do; my name had been taken from me by the sea. I should not have been surprised that this would be the physical reaction, that my existence, my past, would be scratched away, but that didn't make it any less strange. Any less unsettling. \n\nWhy should I feel unsettled? This was my home. I walked into the main chamber and cast my eyes on the interior. \n\nThe feeling of discomfort didn't go away. If anything it settled heavier on my stomach, turning into a thick lining that made me feel a little sick. I shook myself to try and dislodge it, causing Sybil to laugh. \n\n\"Syb,\" a voice called, and the voice made me freeze, sent warmth through my core that immediately began melting the discomfort that was trying to take up permanence in my body. Out, I thought. Out. I am home, this is family. \"I told you to be quiet - I'm trying to divine, here.\"\n\n\"Val,\" I called quietly, aware of how my voice sounded in this space, listening to it explore all the spaces that I used to fill. There was no response, and I started to get nervous again. Three years was a long time, so long, and there was nothing of me in the house, but Sybil had remembered me, Sybil had known my face...\n\nThen a man appeared in the doorway and I froze.\n\nVal looked the same, the same in so many ways. That skinny body that I'd heard others describe as lithe, the way he walked around so relaxed and easy hiding the sea behind jokes and smiles, because Val was of the sea, because he was the sun glinting off the waves, because he was the way the ocean captured moonlight and sent it back against your skin in new and sensual ways, and because we were brothers. I had seen this stupid boy grow up and he had all but raised me, protected me until I had protected him, until he had left for the land and made his own way and his own protection and this was Val, his bright flowing clothes popping out against his dark skin, somehow managing to have so much cloth and cover so little of his body, fashion he picked up from his years running the brothels, his arching brows and sparkling eyes always making him look like he was about to con you from your money and you would be happy to let him and I was happy because he was here, because I was home, because god I'd missed him so much. \n\nI almost moved forward, laughing, to take him in my arms like no time had passed but then I saw it. The same, and so different. His eyes still sparkled, yes, but I thought there might be more granite and less sun glinting from the water; and was that grey in his thick black braid? I watched him sag against doorway, his mouth parting, his eyes holding things I no longer recognized, and the lines on his face made a map that I had never traversed and I didn't even know what part of the world it was referencing, and wondered what I must look like to him. \n\nThree years, I thought. Three years is a long time. \n\nI resettled Sybil on my back and waited.\n\nSuddenly his body was moving - I remembered that, how he could be so languid and then so fast - and then his crossbow was in his hand. He held the bolt pointed at me, breathing hard. \n\n\"Val,\" I said quietly. Three years, I thought and I didn't know what emotion to put with it, and he was still doing the same old shit. I was not concerned for me so much - I'd had this crossbow pointed at me many, many times before - but Sybil was still on my back. The man before me stared me down, and I saw the crossbow shake. \"Brother.\"\n\nThe crossbow dropped dropped with his eyes, his gaze ripping away from mine to slam into some other place. As he moved his arm down, a bolt fired wildly, missing me by a hair. I raised a brow and followed its motion, watching it sink into the wall behind me, taking its place with near forty other bolts.\n\nI blinked at the wall, having somehow missed this addition to the decor on my first sweep of the house. \"You need to work on your aim, Val.\"\n\n\"You're dead,\" he whispered. I turned back to him and found him leaning on the crossbow, his shoulders bowed, his knees bent. Leaning in the doorway that I knew would lead me out to the balcony that overlooked the sea, overlooked the beach I had chosen to raise my daughter. The sand that was ground down by the seas that had been my comfort, my base, the only rock I had ever needed. He sunk down to the floor, the floor I had built, the wood I had cut and sanded and he pressed his face against his weapon.\n\n\"I'm home,\" I said, because I was, and because I didn't have anything else to say.\n\n\"You,\" he repeated, \"are dead.\"\n\nI shrugged. I didn't really have much more to add. He was right; I was dead, and I was home. These were facts. These things just were. \n\nBut facts were hard, sometimes. And I had lived this, and had watched it all unfold, but Val had lived a very different reality, a much different life. If facts were stars, he had been sitting in a different part of the world - the constellations that I thought were so clear had never even made it to his eyes. \"The sea mourned for you.\" His gaze still wasn't on me, it was on the floor, or maybe on the past. Maybe on stars that didn't line up like he'd always believed. \"I mourned for you.\" \n\nI shifted, uncomfortable. There was pain here, and it was too tangible. The same; so different; I had never seen my brother so raw before, his emotions so clear. He was a very careful person, always hiding what he truly thought behind a smile and the flutter of a scarf. But this? There was no hiding this, and I didn't know what to do, what to say in the face of it. \"I'm here now,\" I tried.\n\n\"Three fucking years, brother.\" Why wouldn't he look at me? \"Three years I thought you were dead.\"\n\n\"I am dead.\" His head snapped up to me. \n\n\"But...\"\n\nI let him think about it, watched his eyes search my face for clues and hoped that he would find the maps I had left there more informative than I had found his. \n\nSybil broke the silence, climbing down from my back and walking up to put her hands on Vals face. He tolerated it, not moving an inch. \"I told you Da would come back.\" \n\n\"I know, baby, I know. And I should have believed you, it's just.\" He gathered her in his arms. \"I couldn't. I couldn't let myself.\" He watched me from over Sybil's shoulder. \"How, brother? All of this, you standing before me. I watched the sea bury you.\"\n\nI shrugged. \"The sea.\" It was all the explanation Val should need. He should understand, better than anyone else. \n\nHe shook his head. \"Of course,\" he said, but he sounded bitter. \n\nI walked over to the wall filled with crossbow bolts, following the path the wild shot Val had made. \"Target practice?\"\n\nHe sighed, using the crossbow to stand. He patted Syb on the head and she wrapped her arms around his leg. \"Syb told me that I would shoot the wall. And so I did, because I didn't want to do it again. And then she laughed at me because I was going to have two bolts instead of one in my wall, and at that point it just seemed pointless to try and fight it so -\" he shrugged. \"Target practice.\"\n\nI smiled, letting my hand drift over the various fletchings. \"You know you can't preempt fate.\"\n\n\"I know.\" His scowl was everything I had missed in this world. To me, it was better than his smile because I knew that when he scowled, he meant it. Especially when I got him to scowl at me. \"But it's so damn tempting.\"\n\nI turned and let my smile pass towards him, but he moved away. \"I can't. It's too much, to have you here like this. You were dead, I thought you dead. Gods, you are dead. How are you not getting that? I buried you. I let you go, I tried so hard to let you go, to get to to stop haunting me. Do you not understand what you did to us? To me? I went out in a boat, every night, for a year, and cried for you.\"\n\nI was silent. There were no words for this.\n\n\"And now you're back, acting like nothing has happened, pretending everything is the same, but nothing is the same, brother, everything is changed, look at you covered in fucking scars and even your name is gone from my tongue - gah.\" He made a frustrated noise and spun away, moving out the doorway he had come through.\n\nSybil walked up to me. I crouched down and let her wrap her arms around my neck. It was incredibly unsettling to watch my brother act this way, to see him be so angry. I had seen him frustrated; I had seen him mad; I had even seen him livid before. But all those times, he had smiled a dangerous kind of smile and then destroyed what needed to be destroyed, and rebuilt what needed to be rebuilt, and my brother was not the kind of man who wore his emotions so clearly. To have pushed him to this...\n\nSyb sighed in my ear. \"I always knew you'd come back.\" \n\n\"I know.\" \n\nShe settled into my arms. \"Uvu will be okay, I promise.\"\n\nIt felt odd to receive encouragement from a child, but my life was odd, and this child was not like any other. I smiled and kissed her on the cheek. \"Thank you, little one.\" \n\nShe giggled and climbed over me to settle back on my back. When she was good and hooked I headed out to find my brother.\n\n\"You have a hundred names,\" he told me angrily.\n\n\"I did.\" I walked up beside him on the porch, staring out over the ocean, my eyes unable to stay away from the Captain, his ship. They had made good distance, but I could still see the sails on the horizon. \"I am not that man anymore.\"\n\n\"Then who are you? Are you my brother? Are you some shell, a ghost that has come back to take our names, add them to your new list?\"\n\nI raised a brow quietly. He of all people should know that tale wasn't true. \n\n\"Then what?\" \n\nI opened my mouth, but before I could respond Sybil spoke from where she sat, perched upon my scars.\n\n\"He is a ghost, Uvu. He's come back to get revenge.\"\n\n\"Revenge?\" Val scoffed. \"What revenge? Dead men are dead, they don't get revenge.\"\n\nI think he meant it as a joke, or sarcastically, but I had never been much for sarcasm so I simply responded, \"I will.\"\n\nVal scoffed again. \"Against who.\"\n\n\"Against the man who killed me.\"\n\nVal looked at me for a moment, silent and intense. I could see him working through my declaration. \"Tell me you're not going after the King.\"\n\nI raised a shoulder towards the sky ever so slightly.\n\n\"Shit,\" he said. \"Fuck. Drey will kill you.\"\n\n\"He already did.\" My eyes were on the receding sails. \n\n\"And so you're giving him a chance to do it again? Fuck, brother. That is the stupidest shit I have ever heard.\"\n\nI raised my shoulder to the sky again, watching the ship move into the sunlight. I watched as two of the sails were pulled down and imagined Natch running through the riggings, laughing, Finn nervously watching below; imagined Cookie in his kitchen, preparing lunch alone; imagined the Captain, luxurious and extraordinary and resplendent as he commanded his ship to safety.\n\nAway from me. \n\nI sighed. \n\n\"Do you even have a plan? Or were you going to just run in and go, hey, Drey, glad you're king now, got command of the entire fleet or whatever, who cares because you killed me so now I'm going to kill you? Gods, you're being a fucking idiot.\" \n\nI sighed, pulling my attention back to Val. \"It's going to be alright.\"\n\n\"Don't. Don't you do that to me.\" Val pulled back and turned to me, face twisted in anger. \"Don't come back and pretend that everything is okay, that you can still protect me. You never have been able to, you never will.\"\n\nI searched his face, confused. \"Val...\"\n\n\"No. I'm your older brother, I'm supposed to.\" He drew in a sharp breath. \"Drey,\" he said again, and I didn't like the way he said it. \n\n\"You couldn't have known,\" I tried, knowing what he was thinking, but he was already shaking his head.\n\n\"I should have gotten you out of there.\"\n\nI didn't like where this was headed, didn't like the weight he was pulling into his voice. \"You know you couldn't have.\"\n\n\"But I should have seen it. I could have told you.\"\n\nI reached out to him. \"Brother, there was nothing you could have done. We were blinded by false trust; he fooled us both.\"\n\nBut Val pulled away. \"I should have known, brother! I had the space, I wasn't so close to him, and I had the information, all my boys said the same things about him and I didn't, I wouldn't listen, and.\" He bit his lip, fighting to control his emotions. \"You can't go back there, you can't face him again.\"\n\nI frowned. \"Val, I have to.\"\n\n\"No.\" He said it with force, and I felt the sea in him reach out to me. \"You won't.\"\n\nI sighed. Val couldn't command me, and he knew it. I let him try for just a moment before reaching out and resting my hand on his shoulder. I wasn't sure what to expect and was glad to see him turn into the contact. \"I'm sorry,\" I said quietly. \"It isn't just about me anymore.\"\n\nAnd it wasn't. It might never have been, because there were so many men who could have had better lives under another King's command, who could have had lives at all, but I had never been a hero and I had never done things for others that wasn't also for myself, and so this had always been about me. But now it was also about the Captain. \n\nI would not suffer to see him live in hiding for the rest of his life. And he was not going to live in fear, not if he was going to live with me. He had nothing to fear when he was with me; had I not promised him that? If I needed to kill a King to make him feel safe - well, then, what was a King to me?\n\n\"You can't go,\" I heard Val say before me, and pulled my thoughts back to now. Back to here. \n\n\"Val,\" I said quietly, \"I have to.\"\n\nHe turned and looked out over the water. \"But I don't want you to.\"\n\nI frowned, looking at him closer. It was not like Val to voice such desires. He felt my gaze and cast a glance in my direction, and I blinked at the pain that it held. \n\n\"I just can't lose you again,\" he choked out, and I forgot that he was mad at me, forgot that things were different, this was my brother and he needed me and so I grabbed him and pulled him tight to my chest and the three of us were back together, my family reunited, and it felt so good to be home. ",
        "Val looked tiny in my arms, his small frame all but disappearing into my embrace. I could feel his breathing settling and let myself begin to believe that he would be alright, that this was going to be okay. I held him tight.\n\nSybil shifted on my back, her eight year old patience running out. I sighed and released my brother, checking his face for any signs of discomfort, but he just looked tired. \"You won't lose me,\" I told him, and he nodded. I wiped at his eyes and he batted my hands away, scowling, knowing I would find no tears there. We were men of the sea - we did not cry on land. \n\n\"We good?\" I asked quietly. \n\nHe wouldn't meet my eyes. \"I'm still pissed at you,\" he told me, and I smiled at the scowl on his face. \n\n\"I know,\" I said, and the smile in my voice only made him scowl more. \n\n\"How did you even get here,\" he muttered, pushing away from me. \"And don't you fucking say the sea.\"\n\nI looked him over with an eyebrow raised, then pointed out past his form to the ship that still graced the horizon. He whirled to find it, his thick braid nearly hitting me. \n\nAt the sight of the sails he rolled his eyes. \"Of course. That would have been you.\"\n\nI frowned. \"What's that supposed to mean?\"\n\n\"The ship.\" He made a vague gesture out towards the horizon that still managed to look graceful, even in his carelessness. Or perhaps because of his carelessness. \"I didn't recognize it, and for it to be here.\" He didn't finish, but I understood. This was not a place where people came without a reason. \"So I tried to find out some things about it, in the ways we have.\"\n\n\"Divining,\" I confirmed, remembering his words to Sybil when we'd first walked into his home. My home, I reminded myself. \n\nHe shrugged. \"Cass taught me some stuff. I guess I got pretty good.\" He gave me a look. \"Shit, Cass. Does she know you're.\" He made the same gesture that he had made at the ship towards me. \n\nDoes she know you're like this, I interpreted. I wondered if he meant dead, or come back from the dead, or maybe just differently dead than expected. I didn't have the words for it either, so I shrugged. \"I don't even know who knows I died,\" I admitted. \n\n\"Brother,\" Val said with a hint of his old brightness, gathered so primly that I - I! - was almost chastised, \"anyone who is anyone knows that you are dead.\"\n\nI looked at him, confused. \n\nHe rolled his eyes. \"The sea,\" he said by way of explanation, tone just on the side of mocking, and I raised my brow. I found that I did not love to be on this side of such an explanation. Val was moving forward, not giving me a chance to make any of the questions in my mind solid enough to voice. \"Brother, you should probably tell Cass. She was a mess.\" He gave me a look and continued, \"Plus, knowing you, you're itching for a lay after being dead for three years.\"\n\nI winced at the edge in his voice as well as the thought of bedding Cass again. She was a beautiful woman, it was true, but she held nothing to the sky. \n\n\"Uvu,\" Sybil said from my shoulders, and Val winced himself at having been caught speaking so crassly about my sex life in front of my daughter, and about her mother no less. I don't know why he was so concerned; Sybil knew everything anyway. \"Ma knows, or she will soon. Or she did.\" I heard her give a puff of annoyance behind me. \"Besides, Da's married.\"\n\nVal turned to me so fast his brightly colored shirt slipped from his shoulder. \n\n\"Timelines, Syb,\" I said gently. A curse of being omnipotent, perhaps; she often talked in a future time while the rest of us were stuck, confused, in the present. When she was a babe she'd had no concept of time at all, thanking me for dinner before breakfast and saying she was sorry for breaking her toy before I had even made it for her. I was honestly impressed that Val had managed to teach her past tense at all - it had been a serious struggle. \"But it's always happening,\" she used to say when we'd correct her about using present tense for past actions, and that had been something I hadn't really wanted to think about, so I'd just let it be. \n\n\"You're married,\" Val repeated. \n\n\"No,\" I said, my eyes unconsciously searching for the sails on the horizon. It was almost gone. \"Tell me about the ship.\"\n\n\"But you will be.\" \n\nI turned back to my shocked and, I saw now, slightly amused brother. \"That's what Syb says,\" I confirmed, and his delicate eyebrows shot up even further. \"Now, what were you saying about the ship.\"\n\n\"Do you know to who?\"\n\n\"No,\" I lied, because I wanted to move on, but I could feel Syb nodding behind me. I sighed as Val's mischievous grin started to spread across his face, and felt secretly relieved to see it. \n\n\"Spill.\"\n\nSecretly relieved, yes. But relieved enough to say things I was not ready to say? I stared quietly out towards the ship. I was the sea; I was strong and endless and filled with the quiet of the depths; I would not speak if I did not want to, no man could get information from my dark expanses -\n\n\"Oh my god, she was on that ship.\" \n\nI snapped my gaze to Val. \"No,\" I lied again.\n\n\"Bitch, you can't lie to me. I fucking raised you, I know you better than you know yourself, your future wife is on that ship and that's why you have it all protected, ooooh boy you have it bad.\" Val laughed while I scowled, internally struggling with how this was going to go down. I hadn't really thought about this, how I would tell Val about the Captain. \n\nBut something he had said had suddenly made it's way through my thoughts. \"Protected?\"\n\n\"Oh no, don't do that. You can't even pretend, little bro. Keeping me from learning anything through divining, clever, but in the end, fruitless.\"\n\nI had done nothing, and I was very lost, and the struggle inside of me was tripping over it's feet. Val laughed at my face. \n\n\"Come on, what's her name?\"\n\nThe impossibility of that statement and all the things it held left me a little speechless. But of course, Sybil had me covered. \"He's nameless.\" \n\nOf course, I thought a little grumpily. Those two words held so much information that I didn't want Val to know. In fact, all the information. Sybil patted me on the head while I winced, trying not to look at the way those words had ripped the smile right off of Val's face.\n\n\"Nameless?\" I shrugged and tried to turn away but Val grabbed me, pulling me to face him. \"Nameless, brother. Gods, are you. She's serious.\"\n\nI shrugged again. I didn't want to get into this. \n\nVal threw up his hands. \"You, brother, only you. Could you be any more mad? After all this, you go and find a nameless lover?\" \n\n\"It isn't - Val,\" I said, trying to get his attention. \"I'm not that man anymore, he wouldn't - Val.\" \n\nBut Val wasn't paying any attention. \"I mean, it's like you're looking for ways to get killed. Go back to see the man who has already successfully killed you, check. Take a lover who is destined to kill you, check. I mean, gods, what is it about this -\" Val froze, staring at me. \"Did you say he?\"\n\nI opened my mouth, then closed it again hopelessly. \"I'm nameless too, you know,\" I finally said, completely uselessly. \n\n\"Brother,\" Val said, coming closer, \"did you say he?\" \n\n\"I know your name,\" Sybil said. Val and I both froze. I felt chills run down my spine from where she sat. \n\n\"Little one,\" I said quietly, because these were things of power she held in her chest, and I had thought them dead. I could feel them, too close to me, and I could tell that Val could feel them too, familiar and strong and raring to take up the spaces that they had been removed from, to return to the homes from which they had been banished, and I wasn't sure that their vengeance wouldn't be swift, and I wasn't sure that it wouldn't be against me. \n\nBut Syb just sighed and said, \"Da, obviously,\" and I felt the chill creep from my back and I let out a breath I didn't realized I was holding. Before me, Val also relaxed, although less noticeably. \"But Ghost is a good name too, and he'll call you Sailor.\" \n\nI nodded, slowly, my eyes on Val. He was watching me carefully, and I couldn't read his eyes. \n\n\"And you call him the Captain,\" she continued, and I saw Val's eyebrows quirk, all his questions answered and a millions new ones born. I tried to look collected and cool, tried not to think of the grilling that was coming. \"And also.\" She shifted on my back. Oh, no, I thought. If she said what I thought she was going to, and to Val... He saw the panic on my face and those eyebrows went up further. \"You also call him sir?\"\n\nVal's lips opened in an 'oh' and his eyebrows shot through the roof.\n\n\"Val,\" I warned, but I could feel the heat creeping onto my face. \"It's not what it sounds like.\" \n\n\"But only in the bedroom, mostly,\" Syb kept going, and I groaned as Val began laughing and I put my head on my arms and hid my face from the sea, the sky, and my beautiful, infuriating family. \n\n***\n\nI stood on the porch, relishing the sunset that I had never thought I would see again. It was more beautiful here than anywhere else on the planet, for some reason; perhaps it was the cracks in the world that made it so. \n\nThe sun was pressing itself against the sea, asking for entry, knowing that when it did it would not be extinguished. This was trust. This was understanding. To lower yourself into your opposite and believe that you would come out the other side the same, or better.\n\nI couldn't help but believe that trust was where the beauty of the sunset came from, and the sunrise. The sun trusted the sea, and the sea opened herself up - the sky rejoiced. In the morning when the sun left, the sea knew it would return - and the sun rejoiced again, that the sea was willing to release such a gift. \n\nStill, I thought. To have the full day to watch what you could not touch, the sun so close and yet unreachable, that must be torture. Perhaps that was what made the colors so rhapsodic, the pure joy of their union after so much time apart. \n\nThen what of the mornings, of their partings? I shifted, resting my chin on my hand. Well, had not the Captain and I's parting been a thing of beauty? Had we not made it something wonderful even through all the pain?\n\n\"Brother,\" I heard, and turned to find Val making his way onto the balcony. He wore a colorful ornate shawl against the cold; it made him look beautiful. He handed me a cup of tea and I smiled in thanks. \"It seems,\" he said, returning my smile, \"that you are full of surprises.\"\n\n\"Did Syb say something?\" I asked, curious, but he shook his head, laughing. \n\n\"Oh, I'm sorry, is you not being dead but also dead, and engaged to be married, really willing to settle down at all, and with a man, brother, is that not surprise enough?\" He cast his eyes out over the sea and shook his head again. \"And your hair.\"\n\nI grimaced, running a hand through what little I had left. \"It was not my idea to cut it.\"\n\nHe laughed at that. \"I would imagine it wasn't.\" \n\nI shrugged, hearing the gentle jibe in his voice. Val had always wondered how someone so unconcerned with appearances could be so vain about one particular thing, but it had been important to me. \n\n\"Well,\" he said after a bit. \"I can still do something with that. It's fashionable in the city to keep it short on the sides and longer on the top, so you might actually blend in better than me.\"\n\nI smiled, looking down at the patterns on his shoulders. \"Thank you, Val.\"\n\nHe made a motion with his hand, waving away my thanks. \"Anything for family.\" Then that mischievous look was back. \"Or we could call it an engagement present. Need to keep you looking sharp for your boy, yeah?\"\n\nI groaned. \"Val...\"\n\n\"You know,\" he told me, spinning to face me, \"if I had known that all I would have had to do to turn you gay was to kill you, I would have done it ages ago.\" \n\n\"Don't lie,\" I returned, feeling my face grow in a smile, \"you want all the boys in the world to be yours, and yours alone.\" \n\nHe grinned wickedly at that. \"They are, my brother. You have the sea, and I have my boys.\"\n\n\"We both have the sea,\" I reminded him, but he just shrugged and turned back to look out over the rolling expanses. The sun was dipping beyond the sea's expanse; trust, I thought. Trust and understanding. \n\nI smiled, sipping the tea Val had brought me. It was heavy on the ginger; I had expected nothing less. \n\n\"So when do I get to meet this man who can tie down my brother.\"\n\nI looked down at my brother, wondering if he understood the double entendre of his words. He was smiling up at me, and his smile did not give me confidence. I narrowed my eyes, trying to find the motive behind his inquiry.\n\n\"Brother,\" he said again, those eyes sparking and I had been wrong when I had thought this was different than I had remembered, there was no granite here, it was all the glint of the sea and it was so dangerous, so very dangerous, \"it would be unwise to keep him from me.\"\n\nI thought about that. I had no intention to keep the Captain from Val; keep them from being in the same room alone together, maybe. Keep them from talking about me, definitely. But Val was smiling again, and it felt good to be back here like this, to have him by my side, but I was also suddenly very nervous about what Val had in mind for my Captain. \n\nHe could see my gears turning and crossed his arms. \"If you're trying to find a way out of this, don't. Anywhere you go, you know I'll find you.\"\n\n\"You didn't find me when I was dead,\" I said and immediately regretted it, watching his laughing body become hard and angry. \n\nHe turned away from me. \"I wasn't looking.\"\n\n\"You didn't know,\" I told him quietly, but he shouldered my words away. I let him have his moment, frustrated with myself at causing this change when we'd finally made things okay. \n\n\"Gods,\" he finally said after what felt like eternity. \"And just where were you, anyway?\"\n\nI was quiet for a moment. \"The mines,\" I admitted, watching him for a reaction.\n\nHis body stiffened further. I let him consider what he had to consider, imagine what he had to, picture what he would. Whatever he was conjuring up in his mind, it had been worse than that. I had no words to comfort him, no way of making this moment better. We both knew what went on in the mines; although, now, perhaps I knew a bit better than he. \n\n\"The whole time,\" he asked, or maybe stated. It was hard to tell with his voice the way it was.\n\nI answered him anyway, with words he would understand. \"I could not hear the sea.\" It had been a long time, waiting, my soul reaching and finding only dirt and dust and rock. Until one day, the sea had called. Until one day, I had to return. \n\nI knew he would know what I meant by this. I waited to see what he would say. \"Who put you there,\" he finally responded, his voice quiet and filled with the sea. \n\nDrey was not the answer he was looking for, and neither was the King. Besides, I had a more immediate being to blame. \"A man by the name of Yarrick.\" \n\nHis eyes flashed up to mine. \n\n\"You know him.\" It was not a question. Val ran the docks by way of running the brothels; if someone was dumping underaged boys, Val would know about it. \n\nHe turned back to the sea. \"It's good it was him,\" he said, and I felt the sea press against my chest in recognition of his anger. \"I've been looking for a reason to make him dead.\"\n\nI put a hand on his shoulder, drawing his eyes. \"I have promised his death to another.\" I hadn't, not in so many words, but I thought Sneg and Natch would want to be there to see it. \n\nVal took a moment to consider that, then shrugged. \"So long as he ends up dead.\" He sighed, and I heard the sea rushing out. \"What happened? You should not have been taken by a man so.\" He shook his head, and I could see the disgust clear on his face. \"The brother I knew would never have let it be.\" He looked at me, questions clear on his face. \n\n\"I was newly dead,\" I admitted. \"They found me in the sea, weak and newborn.\" Nameless. Alone. Angry and unsure where to put it that feeling in my new soul, so tender and easy to overwhelm, so delicate. Everything had hurt so badly in that time.\n\n\"Brother.\" I looked down to see Val looking at me, unsure how to continue. \"How did you come to be this way? I mean...\"\n\nHe trailed off, but I nodded. It is not an easy thing to ask a man how he died, and I understood that my brother needed this. I turned and pulled up my shirt to show him my scars, knowing that he would understand exactly what they would mean.\n\nThere was a long stretch of silence. Then Val said very quietly; \"Please put those away.\" I turned to find his face a case-study of control. This was more like the brother I knew. This was the man I had seen destroy entire families on his way to making sex work safer for his boys. Entire bloodlines. The man that I had once seen flay a harpy and take it's feathers to make a very, very fashionable cloak. This man, looking at me now, did not fill me with confidence that someone was not about to die. \"Drey did this to you?\"\n\nI hesitated. \"Val...\"\n\nVal turned away from me, turning his head to the sea. \"We should have known, brother.\"\n\nIt felt better that he was saying we, not I; but the blame of my death was on only one set of shoulders. \"We gave him a chance. We shouldn't feel guilt for that. His actions are his own.\"\n\nVal nodded, but it turned into a shrug. \"But we should have known.\"\n\nI sighed, leaning back on the rail. \"Perhaps.\" I thought for a moment. \"Also.\"\n\nVal's eyes were on me, fast and angry. \n\n\"Do you remember the flag we used, when we ghosted ships?\"\n\n\"Yeah,\" Val confirmed, slowly. \"What of it?\"\n\nI kept my eyes on the sea, tried to keep my voice light. \"Did you know that it is now the Pirate King's personal standard?\"\n\nThere was a moment of silence. \"That fucking bastard.\"\n\nI raised a brow in agreement. \n\n\"That isn't fucking his!\"\n\nI nodded.\n\n\"He didn't even have a say in the design, I designed that! That was my idea, I was the first one to use it, and he barely even liked it! And now he flies it like, like.\" Val stopped and tried to breathe through whatever he had gathered in his chest. Possibly an entire monsoon. I gave him a look. \n\n\"We are tied to that flag,\" he finally told me. I nodded as he continued, \"We have done action under that flag.\"\n\n\"I know,\" I told him softly.\n\nVal sighed, sharp and fast. \"What a dick.\" Then he turned to me, his braid twirling and his dark eyes flashing with things I never wanted to be on the wrong side of.\n\n\"Alright brother,\" he said, and his voice was bright and sharp. \"What's the plan?\"\n\n***\n\n\"You truly expect that just you, some strongman, and some kid that you met once -\"\n\n\"Sneg is solid,\" I said again, for what must have been the fourth or fifth time. Val was having trouble with the plan. The words ludicrous and ridiculous and utterly idiotic, gods, it's like all you want to do is die again had been uttered. I watched the sea and waited for him to blow out.\n\n\"Fine, let's say I accept this Sneg is solid. But you still have to find them! How the hell are you going to do that?\"\n\nI gave Val a pointed look. No one could hide from Val, not on land, and if they were on the water I would have known. He threw up his hands.\n\n\"Fine. Sure. Say I help you find this kid. But the strongman - I mean, really, one strongman? There's no one that good.\"\n\nI shrugged, a very slow motion that gave Val time to think about his words. \"I was thinking the Russian.\" \n\nThere was a moment of silence. \"The Russian?\"\n\n\"Hush,\" I said evenly. \"Sybil is sleeping.\"\n\n\"The Russian said the next time he saw you he'd separate your head from your spine and, gods, something poetic and terrifying.\"\n\nI shrugged again. Who remembers.\n\n\"The point is, the man hates you.\"",
        "\"I'm not that person anymore,\" I reminded him. \"I died. Now I'm the new me.\"\n\nVal looked at me as if I were talking nonsense. \"That only gets you so far.\"\n\nI turned my gaze back out to the sea, inky black in the face of the night sky. \"I'm betting on it getting me the Russian.\" I thought for a moment. \"Besides. Technically, he owes me.\"\n\n\"Technically.\" Val took a moment to press his shawl to his face. His breath alternately tented and blew out the cloth, and I watched it with some amusement. \"Okay,\" he finally said. \"Okay. Let's say you get the kid, from wherever the hell they are. Then you somehow, somehow, manage to convince the Russian that, rather than kill you, he should team up with you. That's your whole crew?\"\n\n\"Yes,\" I stated.\n\n\"Why?\"\n\nI had already explained this, but I took a breath and said it again. \"Because the Captain already has a crew, and I want him to have freedom when I find him to bring anyone he wants with without feeling like he's displacing my men.\"\n\n\"And he's not going to have feelings about the Russian being there?\"\n\nI shrugged. I'd figure that out when I got there. \"In the end, it doesn't matter. Three is a good number. You don't need more than that to handle a brigantine when they know what they're doing.\" There was only silence, and I looked over to Val's incredulous face. \"Val, you know that's true. We two have managed just fine, and while I admit that two children of the sea does not equal two land boys -\"\n\n\"I'm not debating your numbers,\" Val interrupted. \"I'm just. You're going to steal a brigantine?\"\n\n\"No,\" I said, and Val almost looked like he was going to relax, \"I am going to take whatever ship I so please because every ship belongs to me.\" I frowned, thinking. \"I was considering looking within the King's Navy.\" \n\nThere was no response. I looked over to find Val with his head down on the railing. \n\n\"Val?\" I prompted.\n\n\"I forgot,\" he stated, voice slightly muffled by cloth and flesh, \"how fucking infuriating being around you is.\" He lifted his head. \"Does it have to be a brigantine?\"\n\n\"They're the best,\" I said simply. \"But, if I see something better, I'll take that.\"\n\n\"That's something the old you would say.\"\n\nI shrugged. I wasn't not me, I was just dead.\n\n\"You can't both be not you and you at the same time. You can't rely on such a ridiculously paradoxical plan.\"\n\nI shrugged again. It was what it was. \n\nVal put his head back down. \"Goddamnit.\" I think I heard him say. I waited. The ocean rolled before us, eternal and safe.\n\nIn time, Val lifted his head. \"When do we leave?\"\n\n\"When can you locate the people I need?\"\n\nHe thought about that. \"Give me a week.\"\n\nI nodded. \"And Sybil?\"\n\n\"She'll stay here. There's a prophetess in the caverns, Syb loves her. They chat in future terms, or past. I don't know. The whole thing gives me a headache.\" He scowled and I smiled. \"She really missed you, you know.\"\n\nSybil wouldn't have missed me. Sybil didn't exist like we did, stuck in such a linear time line; she could visit me in the past, or the future, any time she wished. I heard the truth in his voice, that he had missed me, how hard this had been on him, and draped an arm over his shoulders. \"I know.\"\n\nI stayed like that for a long time, listening to the sea, my arm over my brother and my soul at rest, until exhaustion pressed against me so strong I couldn't ignore it and I made my way to bed.\n\n***\n\nOne week stretched out, longer and shorter than I wanted. Val divined. Sybil prophesized, although it was impossible to tell what about since we had no context for her words yet. I lazed about and did general housework, remembering what it felt to be a father, to be a home builder, to be at home. \n\nIt made me itch for the sea, and Sybil laughed to watch me. \n\nOne day Syb came up to me with a small tube and pressed it into my hands. \"What's this, Little One,\" I sighed, slightly frustrated at being interrupted at my work, mostly thankful.\n\n\"It's for Ma,\" she told me. \"You gotta give it to her when you see her.\"\n\nThat took a second to sink in. \"I'm going to see your mother?\" \n\nSyb nodded, her big brown eyes wide and serious. \n\n\"When?\"\n\nShe looked around. I could tell she was caught in the cracks today, stuck in a place where timelines didn't quite line up the way they did for the rest of us. \"Soon?\" she finally said, but I could tell she was guessing. \n\n\"Before or after I see the Captain next?\" I tried, but she just leaned in a gave me a hug. \n\n\"Bye, Da,\" she said quietly, then turned and made her way up the beach. I watched her go, frowning, then abandoned my task to find Val.\n\n\"No,\" he said as he heard me enter, his back hunched tight over his silver bowl. \"Be quiet.\"\n\nI sat and watched him with his fresh water and his little bowl. I had no need for such tools, such silly accessories. The entire ocean was my divining pool. \n\nSuddenly he slammed the bowl across the room, splashing water everywhere. I let the bowl settle before speaking. \"No luck?\"\n\n\"Idiocy,\" was all he said, laying down on his back. \n\nI sighed. It did not make me feel good that we didn't even know where to start. \"Do you have a general idea?\"\n\n\"Huh?\" \n\n\"Of the Russian. Or Sneg.\" I frowned at him, lying there. \"Do we know anything?\"\n\nA hand came up and waved generally. \"Sneg is in the mountains, I sent out a missive days ago.\"\n\n\"Oh.\"\n\n\"And the Russian?\" He made a noise with his lips. \"Do you know how much that man spends per night on sex and booze?\" \n\nI thought about that for a moment. \"So you know where he is?\"\n\n\"I know what he's drinking, and who he's fucking, and the name of his goddamn horse.\" \n\n\"Oh,\" I said again.\n\n\"He's on Hyrun,\" Val elaborated.\n\nThat seemed like good news. That was closer than the mountains, at least. \"Can you keep him there?\"\n\n\"Honey,\" Val said, \"with the boys I have on Hyrun, I could keep the goddamn King.\"\n\nI raised an eyebrow at that. \"So why are we still here?\"\n\nVal hesitated, then propped himself up on his elbow. \"Because of the King.\"\n\nI gave him a look.\n\n\"I don't want to move until I know where he is.\"\n\n\"He's in the North.\" \n\n\"And you know that?\"\n\nI paused. \"Yes,\" I admitted. \n\n\"It's infuriating, he has some sort of protection, and.\" Val stopped, my admission making it through his skull. \"You can track him?\"\n\n\"So long as he is on the sea.\" There was no one who could hide from me there. Not even the King. \n\nVal looked at me for a long time. I wondered what he was thinking, if he was frustrated by this, one more thing I could do that he could not, one more reason to leave the sea behind. I remembered his words when he'd turned towards the shore the first time. He had been so young then. We both had been.\n\n\"But the sea,\" I had plead, as if that had been everything I had needed to say, and he had laughed, and it had not been a good sound, and waved a hand, and it had not been in camaraderie. \n\n\"As if the sea needs me when it has you,\" had been his reply, and he had walked away and disappeared onto the land and it had been years before we had written to each other as friends again. \n\n\"Well, shit,\" I heard him say here, now, in the present, and I came back to now to see what he would say. \"Why didn't you say so earlier?\" He grabbed a bag and smiled at me. \"You ready to go?\"\n\nI nodded dumbly.\n\n\"To Hyrun, then. Let's go get you killed by a Russian.\""
    ],
    "authorname": "nakamook",
    "tags": [
        "plot",
        "plot heavy",
        "pirates",
        "supernatural",
        "gay"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-09"
}