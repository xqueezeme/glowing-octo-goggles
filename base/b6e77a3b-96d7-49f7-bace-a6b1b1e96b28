{
    "title": "Warrior Princess",
    "pages": [
        "I remember the moment I first saw him, in the Great Hall of Morden Castle - a tall, striking figure dressed in the black habit of the Benedictines, head slightly bowed, standing calmly before my father's throne. It was the way he held himself - straight backed, square shouldered - not a hint of nervousness, as the gossip of the court swirled around him.\n\n\"Too young to be a monk,\" they whispered.\n\n\"Must be a novice.\"\n\n\"How old is he?\"\n\n\"His hair is untonsured.\"\n\n\"From the Abbey at Chertsey, apparently.\"\n\n\"And he scared off a longship?\"\n\n\"I heard it was five.\"\n\nI sat to my father's left side, aloof and impassive as the spectacle was prepared. How I despised the court and its participants - the pompous loudmouths who jostled for position - the spineless snitches who'd do anything to get ahead. They were the reason the kingdom was so imperilled - long on talk, little on action - a council paralysed by indecision.\n\nThe prisoners were being brought in now - the long-haired Vikings, stripped of their armour, hands tied tightly behind their backs. There must have been forty or more, each one shoved roughly to his knees on the cold stone floor. The murmuring of the crowd was getting louder, eyes wide, fingers pointing, as the captives slumped wretched in defeat. This was a rare victory for the Kingdom of Surrey - unprecedented - few had seen the raiders humbled in this way. The castle jail would be full tonight.\n\nMy gaze rested again on the tall figure in the black habit. He looked a little older than me, but still in his early twenties. There was no denying he was attractive - his jet-black hair cascaded over his forehead in thick curls, half-concealing his deep blue eyes. \n\nThere was something mysterious about him - compelling even. My heart beat a fraction faster.\n\nThe young man glanced up, his eyes meeting mine for a split second. Hurriedly I looked away, my cheeks reddening - he'd caught me watching him. I cursed my self-consciousness - why on earth should I feel embarrassed? A royal princess could look at whomsoever she chose - especially one so humble as him. Why should he be any different?\n\nThe heavy oak doors at the far end of the hall clanged shut, rescuing me from my awkwardness. A hush descended as Sigweard, Thane of Chertsey, strode forwards, swaggering towards my father's throne. His son Sigbehrt followed behind, smirking at the courtiers on either side. I stared forwards disinterestedly, trying to avoid his eyes.\n\n\"Lord Sigweard, you bring us report?\" King Frithwald asked in a clear, authoritative tone.\n\n\"Your majesty,\" came the reply, his voice booming around the hall. \"I beg leave to present news of a great victory...\" The showman bowed low, pausing for dramatic effect. \"The capture of five Viking longships.\"\n\nA gasp went up from the obsequious courtiers as the thane swept his arm to indicate the captives.\n\n\"We bring the prisoners to receive your justice,\" he proclaimed. He gave another low, theatrical bow. Sigweard always revelled in the spotlight.\n\n\"Then tell how you accomplished this heroic feat,\" commanded the king.\n\n\"Your majesty,\" the thane continued, \"my men were patrolling the banks of the Great River, when we espied in midstream the longships in great distress. Two small boats had been set on fire and were drifting in the wind towards them.\n\n\"The crews were panicking. They tried to row away from the flames, but the longships foundered on the shoals and my men waded out to them easily. We arrested them all.\"\n\nAnother sweep of his arm to indicate the wretched Vikings.\n\n\"And the fireboats?\" my father asked, letting a note of excitement colour his voice. \"Who set them against the raiders?\"\n\n\"Your Majesty, that was me,\" said the tall young man, his voice bold and clear.\n\nAstonished gasps sounded around the court as all heads turned to the tall figure in the habit. Who would dare to speak uninvited before the king? A stern rebuke would surely follow - the novice might even be expelled from the court. The thane's brow knotted in frustration.\n\n\"Step forward. Tell us your name!\" King Frithwald commanded, ignoring the breach of protocol.\n\n\"I am Cedric,\" the young man began, \"novice of the Abbey of Chertsey, your majesty. My lord abbot sends his most loyal greeting.\"\n\nHe spoke calmly and clearly, completely oblivious to the stunned reaction of the court. Sigweard looked on, more than a little peeved, his thunder stolen by the newcomer.\n\n\"Then pray tell us, Cedric of Chertsey - how did you set these boats of fire on our foe?\"\n\n\"Your majesty, I was making my way across the town bridge, the night before last,\" Cedric began. \"I looked out across the Great River and saw a longship coming upstream. But the wind and the current were against it and the oarsmen were struggling.\"\n\n\"Your majesty...\" Sigweard interrupted, trying to regain my father's attention.\n\nMy father held up his hand to silence him. The thane shrank back, his face a picture of injured pride.\n\n\"Indeed,\" said the king thoughtfully, turning back to Cedric, \"there was a full moon that night and from Chertsey Bridge one can see a long way down the river.\"\n\nThere was a pause. The courtiers waited with bated breath.\n\n\"Pray, continue,\" nodded my father.\n\n\"I saw two rowing boats filled with rags - the type the local fishermen use. They were tied beneath the arches. I climbed down and set the rags aflame with the oil from my lamp,\" said Cedric. \"Then I cut the moorings and let the current take the boats towards the longship.\"\n\nMy eyes darted across to Sigbehrt. I'd expected him to be purple with envy as Cedric's tale of heroism unfolded. But no, he was looking up at the hammer-beam roof of the hall, that same smirk still written broad across his face. A man, only a few years his junior, was stealing the limelight - surely he was hating every moment?\n\n\"The oarsmen panicked,\" continued Cedric. \"And a gust of wind took hold of the longship and pushed it to the bank.\"\n\n\"And your men were waiting there?\" asked my father, turning away from the Benedictine and directing his question to Sigweard.\n\nA wave of relief passed across the thane's face. He was back in control.\n\n\"Yes, your majesty - a cohort of my finest men had been tracking the longships from Kingston. We were ready to confront the Vikings when they came ashore. They crumbled when they saw the strength of our force.\"\n\n\"And these are the prisoners from the longships?\"\n\n\"From the first longship, your majesty,\" Sigweard bowed low - an unnecessary gesture. \"We could not bring all five crews, for they number almost two hundred. The others languish in Chertsey Jail and await your pleasure.\"\n\nMy father placed his hand on his beard and stroked it thoughtfully, knotting his brow as he contemplated the accounts. He rose to his feet.\n\n\"Guards!\" he called. \"Take the prisoners to our dungeons!\"\n\nDozens of soldiers, dressed in the dark blue uniforms of the Surrey army, ran forwards and manhandled the unresisting Vikings away. The great oak doors slammed shut behind them and silence descended on the court.\n\nThe king turned to the young man in the black habit. \"Cedric of Chertsey, we thank you for your loyal service. You will stay in Morden Castle as our guest tonight and tomorrow you shall return to the abbey, with our thanks and a gift for the lord abbot.\"\n\nThe novice bowed.\n\n\"I thank you, your majesty,\" he said humbly. \"I live only to serve.\"\n\nMy eyes fixed on the young man. His words were clever, but the double meaning would not be lost on anyone - as a Benedictine, his allegiance was to a higher power.\n\n\"Step forward Sigweard, Thane of Chertsey,\" commanded my father.\n\nI watched as he reached for his ceremonial sword - a reward was coming, a new status would be conferred.\n\n\"My Lord Sigweard,\" declared the king. \"You have served me honourably for many years. For your loyalty, I elevate you to the Earldom of Guildown.\"\n\nLightly he tapped the new earl on each shoulder with the sword.\n\n\"Arise Sigweard, Earl of Guildown!\"\n\nAround me the courtiers burst into applause, cheering their approval. Dutifully I smiled, but inside a numbness gripped me - this was either a master strategy or a demonstration of abject weakness. Sigweard would now control the western half of the kingdom - it was only a matter of time before he set his sights on the rest.\n\nI looked across at Cedric as the cheers sounded around us. Our eyes met, but this time I held his gaze. His expression betrayed his concern - he shared my fears.\n\nMy father held his hand for silence and spoke again, \"Step forward Sigbehrt.\"\n\nMy heart sank - I knew what was coming.\n\n\"For your loyalty and service, I declare you Thane of Chertsey.\"\n\nAgain the applause thundered around the hall. I forced another smile onto my face, but the panic was rising in my chest. Sigbehrt now had a title of his own - and a powerful one at that. There'd be no stopping him - he'd made no secret of his intentions -undoubtedly he'd seek my hand.\n\nThe new earl and thane bowed low before the throne. My mother stood and together the king and queen made their way to the doors at the back of the dais.\n\nDutifully I followed behind, playing my part - Princess Elspeth - the younger daughter of King Frithwald of Surrey. I glanced back towards Cedric - I could have sworn he gave a gentle smile as he caught my eye for a third time.\n\nQuickly I turned my head away, looking down at the floor as I followed my parents through the entrance to the royal residence. What was I doing? What was I thinking? A princess could not marry a monk. But as my eyes had met with his, perhaps I'd felt something I'd never felt before.\n\nI took a deep breath as the door shut behind me, relieved to be hidden from public view. In the morning the novice would be back in Chertsey - I would never see him again. The next day I'd have forgotten all about him - or so I told myself.\n\n-\n\nThere was a feast that night. The Great Hall was full. Long tables were laid with sumptuous food. The wealthy and powerful were assembled. This was a celebration the kingdom could ill afford, but one it needed to have. A victory over the Vikings was all too rare.\n\nI tried very hard to enjoy myself on these occasions, but I hated each one more than the last. Sitting there demurely like a doll, the dry make up plastered on my face, black hair plaited and pinned in painfully tight curls - my job was to look pretty and listen in awe as the self-important bores debated politics, religion and the law.\n\nStill, the old men were better than the women - the gaggle of opinionated harpies who spent their time gossiping about my suitors. But even they were preferable to the young bachelors of the kingdom - they were the ones competing for my favour, jostling in position as they waited to dance with me. Their elder brothers had done the same for my sister - she'd loved every minute, revelling in the attention they gave. I'd always find an excuse to take the air or retire to my bedchamber, to get away from their clammy hands and stinking breath. But the time was coming when I could avoid them no longer.\n\nI looked to the other end of the table, expecting to see Cedric of Chertsey sitting quietly - a lonely figure, overwhelmed by the cacophony of the feasting. But no - there he was, talking animatedly to his neighbour, laughing and joking with the man next to him. I frowned - were my eyes deceiving me? Was that really my father's finance minister? The treasurer was the most boring man in the kingdom, jealously guarding the dwindling gold reserves from any spending he considered frivolous. He hated these occasions even more than I did - he'd sit morosely, ignoring those around him, watching suspiciously as each platter of food was brought in. But there he was - bantering with the novice as if he had not a care in the world. What had Cedric done to him?\n\nThe lower tables were being cleared away now, making space for the dancing to come. Up in the gallery, the minstrels were reorganising themselves, getting ready to change the pace. This was the part I'd been dreading the most.\n\nA hand grasped me by the shoulder, pinning me sharply, making sure I couldn't escape. I knew immediately who it was.\n\n\"My lady,\" crowed an oily voice, \"might I have the honour of the first dance?\"\n\nI looked up at him as he leaned over me. The new thane was drunk - his breath smelt even worse than usual.\n\n\"Lord Sigbehrt,\" I replied as disinterestedly as I could. \"I must congratulate you on your elevation.\"\n\nI turned to face him, but he kept his tight grip on me. There was that smirk again - even broader than before.\n\n\"His majesty is gracious to recognise my faithful service,\" he answered, his voice dripping with sycophancy.\n\n\"But my lord, 'tis reward for the greatest act of bravery,\" I persisted, unsure why I was trying to flatter him. \"So many Vikings taken on a single night!\"\n\nSigbehrt smiled again, preparing to launch into a boastful retelling of his role, but he stopped himself short.\n\n\"Were it not for the young Benedictine, the longships would have sailed through Chertsey Bridge and on to Wessex,\" he replied, indicating Cedric with a nod.\n\nI turned and looked across at the novice. There he was, listening intently as the usually tight-lipped treasurer poured gossip and indiscretions into his ear.\n\nSigbehrt prickled and gripped my shoulder more tightly.\n\n\"Now we shall dance,\" he demanded.\n\nI sighed inwardly. It was better to give him what he wanted - the first dance was always formal, with minimal contact with the partners. If I was civil to him, he'd be civil back. I could make an escape thereafter.\n\n\"The honour is mine,\" I replied, forcing a smile.\n\nAnd so we danced - or at least I tried to. Sigbehrt stepped on my feet twice in the first minute and several times after that. But he neither noticed nor cared. He was too busy making sure that everyone knew, that everyone saw - I was his prize that night.\n\nExcept I wasn't. The music ended, I feigned exhaustion and fled the Great Hall, leaving him jilted and shaking with rage. Not that it mattered - he'd be back in Chertsey the next day - with any luck I wouldn't see him for months.\n\nI pretended to withdraw to my bedchamber, but gave the ladies-in-waiting the slip and instead headed out into the cold night air. It was already dark outside. I lifted the hood of my cloak over my head, completing my transformation to anonymity - it was a disguise I used so often - no one would give me a second glance.\n\nPast the castle dungeon I crept, glancing down at the metal grating that let minimal air into the cells below. I imagined the prisoners, huddled together, listening to the sounds of celebration as they lay in their misery on the damp, earthen floor. Perhaps there'd be a noble or even a prince among their number - my father would extract a hefty ransom if there was. The rest would die - there was no doubt about it. They'd hang in towns across the realm - a warning to those who'd challenge King Frithwald.\n\nSlowly I climbed the steps to the castle walls. I loved gazing out from the ramparts, watching as the world retired for the night, wondering what it would be like to be free of the shackles of royal life. The moon was hidden and the lights of the town below me burned brightly. The streets were empty, the common folk were already asleep - just a handful of guardsmen keeping watch in the market square.\n\nSilently I crept behind the turret at the north-western corner of the battlements. The sounds of celebrating soldiers reached my ears. I frowned - they were not supposed to drink on duty. But what was the harm? The tide of war had run against us for so long - who would begrudge them this moment?\n\nWho was that - standing alone on the western wall, holding aloft a flaming torch, staring down into the forest beyond the river? That silhouette was unmistakeable! But what was he doing here?\n\nCautiously, I moved towards him, doing my best to hide the sound of my footsteps. He heard my approach and turned towards me. It took a second for him to recognise me in the flickering light, but then he bowed low.\n\n\"My lady,\" the young Benedictine mumbled deferentially. Perhaps he expected admonishment.\n\nI glanced over the battlements. Was that another light I saw at the edge of the forest? Rapidly it disappeared. Perhaps my eyes were playing tricks - doubtless a peasant securing his animals for the night.\n\n\"The hero of the kingdom!\" I replied wryly.\n\n\"I am no hero, my lady,\" Cedric said quietly - it was the sort of self-deprecating answer I'd expect of a novice.\n\n\"But you are!\" I insisted teasingly. \"You made the Vikings panic - you pushed them ashore when they were ill-prepared for a landing, right into the hands of our soldiers.\"\n\nHe shook his head. His expression was one of seriousness.\n\n\"I set two fire boats - the simple rowing boats the peasants use - barely big enough for two grown men. How could they panic two hundred raiders? Surrender five longships - for that?\" he asked incredulously.\n\nHis tone alarmed me, pouring cold water over the euphoria of victory. I'd been so caught up in the humbling of the Vikings and the likely consequences of Sigbehrt's promotion, that I'd never stopped to ask if the story made sense.\n\n\"Doubtless there were others, but without your actions, they could not have played their part.\" I was attempting to flatter him, more for my sake than his - but I could hear my words ringing hollow.\n\nCedric made as if to speak again but thought better of it.\n\n\"And now,\" I continued, \"there are forty prisoners here in our jail and eight score more at Chertsey. The Viking king will pay a heavy ransom for their lives.\"\n\nCedric frowned, hesitating for a moment.\n\n\"Your father is a skilled negotiator,\" he said slowly. \"If anyone can make peace with the raiders, it is he.\"\n\nI nodded. Surrey was poor and weak, but the cunning of my father's diplomacy had preserved the kingdom from attack by our neighbours several times.\n\n\"But the Vikings - they will not be satisfied,\" Cedric continued. \"Maybe they will leave their attacks on this kingdom for a few years, but they will turn their fight to others. Already they harry the coast of Sussex. Mercia will be next - they sense its weakness.\"\n\nI looked at him incredulously. Who was this novice monk who dared to predict the enemy's next move?\n\n\"And how do you presume to know the mind of the Vikings?\" I challenged.\n\n\"You hear much talk when you wait on the abbot's table,\" he replied.\n\nThat was probably true, I reasoned. Chertsey was in the far northwest of the kingdom, close to the borders of Mercia and Wessex, on one of the few bridges over the Great River. High-status travellers passed through the town every day and would seek a bed at the abbey. An attentive novice would learn much from their stories.\n\n\"The idle talk of common merchants and travellers is of no concern to a wise ruler,\" I countered dismissively. \"Mercia has little to fear. King Beohred is wise, he will see off the raiders. They will not trouble his lands.\"\n\nCedric let out a snort of derision and threw his head back in mirth.\n\n\"Beohred is a fool!\" he cried. \"What has he done these past three years? He should have been building forts, training men, repairing the stone walls of Londinium - but nothing - he has done nothing! His men lounge around in Lundenwick, watching as the raiders attack your father's lands. If the enemy turns north, they will be crushed.\"\n\n\"Hold your tongue novice!\" I snapped. \"You speak of things you do not know. King Beohred is my brother-in-law. He is a brave warrior, he will defend his people. Mercia has nothing to fear from the Vikings!\"\n\nCedric bowed his head. \"Forgive me, my lady,\" he said apologetically. \"I spoke in haste. Your father has made a good match for your sister.\"\n\nI stared at the novice in disbelief, dumbstruck by his confidence. The insult to my brother-in-law was verging on treason. I should shout for the guard, have him carted away for his slander.",
        "But in my heart, I knew he was right. Beohred was a fool. He'd picked a pointless fight with King Aethelwulf of Wessex and lost the prize Dukedom of Berkshire as a result. No one said that within these walls - but many thought it - actually everyone thought it. But dissenting voices were few and far between - no one dared criticise our Mercian allies.\n\nI furrowed my brow and stared intently at him.\n\n\"You would do well, Cedric of Chertsey, to keep such opinions to yourself,\" I muttered reproachfully.\n\nHe smiled back at me - a broad, disarming smile.\n\n\"Forgive me my lady,\" he said quietly. He bowed deferentially.\n\nThe two of us stood side-by-side looking out over the walls. Part of me demanded that I turn on my heel and stride away from, never to look back. Perhaps he was simply a fool - a na\u00efve novice repeating half-truths and gossip, not knowing when to shut his mouth. But maybe there was more to him - a voice I'd never heard before, with knowledge of the world beyond the castle walls. There was something compelling about him - everyone here was always so deferential, but Cedric was unfazed by the fact that I was a princess - he spoke as if I were any other eighteen-year-old woman - and that was refreshing. I waited, hoping to hear more.\n\n\"So if your sister has married the King of Mercia, will you marry a Prince of Wessex?\" he asked mischievously, breaking the silence.\n\nI stared coldly back at him. Was he trying to push me too far? Surely not another of my father's subjects speculating about my marriage prospects? Did the citizens of Surrey really talk of nothing else?\n\n\"Prince Aethelstan has been married these past five years, maybe more,\" I replied sternly. \"And his father has made him King of Kent. I will not marry him.\"\n\nHow could Cedric not know that?\n\n\"But Aethelwulf has another son, does he not? Prince Alfred - he is not yet married.\"\n\nNow it was my turn to laugh. I shook my head.\n\n\"No one has seen Alfred for a year, maybe two,\" I smiled. \"They say he is sickly - maybe mad. They say he is kept in Winchester - hidden from all eyes to spare his father's shame.\" I paused. \"Some even say that he is dead. No, I will not marry Alfred either.\"\n\nThe novice frowned.\n\n\"They say the prince is dead?\" he shook his head quietly. \"Perhaps he does not want to be found.\"\n\nThat was too much. I took a deep breath, preparing to admonish him for his presumption, to challenge him and then to storm away. But as I opened my mouth to object, there was a shout from behind me.\n\n\"My lady!\"\n\nI turned - it was my maidservant.\n\n\"My lady, I have been searching for your everywhere,\" she sounded agitated. \"Your mother is asking for you.\"\n\nI gritted my teeth.\n\n\"Send word to the queen - I will come,\" I replied, dismissing her with a wave of my hand.\n\nThe maidservant curtseyed and disappeared back along the castle wall.\n\nI looked up at the novice. It was time to say goodbye - and not a moment too soon. I would never see him again - good riddance.\n\n\"Farewell Cedric of Chertsey. I thank you for your service to my father and to this realm. May God protect you.\"\n\nHe held out his hand towards me, to stay my retreat.\n\n\"Stay watchful, my lady. I fear great danger this night,\" he said quietly.\n\n\"Danger?\" I mocked incredulously. \"In Morden Castle? Now you have gone too far - you would insult the king's protection?\"\n\n\"Forty Vikings languish in the dungeons - they are cold, they are hungry, they are angry - and they would have their revenge.\"\n\n\"You doubt the finest guardsmen in the kingdom?\" I demanded furiously.\n\n\"My lady,\" he replied, fixing me with a cold stare. \"The guards are drunk.\"\n\n-\n\n\"Where have you been?\" My mother jabbed an accusatory finger at me as I entered my bedchamber.\n\n\"Forgive me, your majesty,\" I curtsied deferentially. \"I was taking the night air.\"\n\n\"Your father was most displeased that you vanished without seeking his leave,\" she snapped.\n\nMy father would not have noticed, but there was no point arguing.\n\n\"Forgive me, dear mother - I felt faint after the dance,\" I replied weakly, resting my hand on my stomach.\n\nThat did the trick.\n\n\"Come Elspeth. Sit,\" the queen purred soothingly, attempting a smile and motioning to the seat in front of my dressing table. \"Let me brush your hair before you retire to bed.\"\n\nI sat, as bidden, and my mother began to remove the pins that held my long black tresses clear of my neck. I swallowed and braced myself for a lecture.\n\n\"Your father was very pleased to see the captives brought in,\" she began.\n\nWhere was this going, I wondered. It was probably best to humour her.\n\n\"I rejoice at the victory,\" I agreed. \"Father will claim a fair ransom for the Viking nobles.\"\n\nMy mother picked up the comb from my dressing table and began to run it through my hair, teasing the intertwined strands apart.\n\n\"He will send word to Winchester,\" she continued, \"to inform King Aethelwulf of his success...\"\n\nI pricked up my ears.\n\n\"King Aethelwulf of Wessex!\" I echoed quietly. \"Surely he will receive the news with interest.\"\n\nSo - my father had finally come to his senses and seen what everyone else had known for at least two years. Beohred was useless - the Mercians would not protect us from the Vikings - a new alliance was our only hope.\n\n\"...and he will propose your hand for Prince Alfred,\" my mother added as casually as she could.\n\nSubtlety was not her strong point.\n\n\"Alfred?!\" I yelped in horror, turning around sharply to face her. \"But Mother, everyone knows he is weak and sickly - Aethelwulf is too embarrassed to let the people see him. I cannot marry him - I will not!\"\n\nI glared defiantly at her, receiving a sharp slap as I did so.\n\n\"You will do your duty!\" she hissed, bringing her face close to mine. \"If you cared about this land and our people, you would obey without question!\" she snarled.\n\n\"My duty?\" I snapped. \"So you would condemn me to a miserable marriage like my sister? And for what? Every week the Vikings raid this land - and what has Beohred done to help us? Nothing! My brother-in-law lifts not a finger for his own people - let alone this kingdom. A Prince of Wessex will be the same - he will take my dowry and turn his back! No, I will not. I shall not marry Alfred!\"\n\nAnother slap delivered a stinging pain to my cheek.\n\n\"Then you will marry Sigbehrt instead!\" my mother snapped back.\n\n\"Sigbehrt?!!!!\"\n\n\"He is Thane of Chertsey and son of the most powerful earl in the kingdom,\" she growled. \"If we cannot look to other lands, we must bind the great Surrey families together!\"\n\n\"Sigbehrt?!!!!\" I repeated in disbelief.\n\n\"I saw you dancing with him, this evening,\" she answered - more softly now. She was trying to soothe me, trying to cajole me. \"I thought you were liking him more.\"\n\n\"Liking him?\" I hissed. \"I only danced to stop his pestering. I got away as soon as I could. He is nothing but a slimy toad.\"\n\n\"You would malign the son of the Earl of Guildown?\" my mother shrieked, pushing me forwards and raking the comb painfully over my scalp. \"A man your father honoured today for his most loyal service?\"\n\nI glared back at her. My father was weak and Sigweard was his greatest threat. He'd had no choice but to reward the schemer and his ambitious son - but he was only delaying the inevitable.\n\nI took a deep breath but bit my tongue - insulting the king would be a step too far.\n\n\"I will not marry Sigbehrt or Alfred or anyone else you choose for me!\" I shouted back, shaking with rage. \"I will marry a man I love.\"\n\nMy mother hurled the comb across the room and grabbed my jaw.\n\n\"You shall go to bed and think on your own selfishness,\" she growled. \"Tomorrow had better find you more obedient!\"\n\nShe stalked out of my bedchamber and slammed the door behind her.\n\nI flung myself on my bed and sobbed myself to sleep.\n\n-\n\nI woke with a start. A bright light was shining in my face. Loud shouts and heavy footsteps echoed down the stairwell outside.\n\n\"W-w-what is happening? Who is that?\" I cried out, confused and disorientated. I clutched at the sides of the bed as I attempted to haul myself upright.\n\nThe intruder's face loomed out of the darkness.\n\n\"It is I, Sigbehrt, Thane of Chertsey!\" he leered, bringing his face close to mine.\n\nHe reeked of alcohol. He was quite clearly drunk.\n\n\"H-h-how did you get in here?\" I asked in horror, struggling to push myself away from him.\n\n\"I bring you good news, my lady - my love,\" his words chilled me to the bone. I felt sick.\n\nHe placed the lamp on the table beside my bed, then lifted his hand to stroke my cheek.\n\nI shuddered.\n\n\"Please go away,\" I begged, \"or I will shout for the guards!\"\n\nSigbehrt threw back his head and laughed contemptuously.\n\n\"I bring you good news, my lady. For we shall be married!\" he said slowly. He brought his lips forwards to kiss me.\n\nI placed my hand on his chest and tried to shove him away, but I was too weak. He was leaning over me now, placing more weight on top of me, pinning my legs with his.\n\n\"Get off!\" I cried.\n\n\"We shall be married,\" he leered, his face hovering over mine.\n\n\"No - please Sigbehrt, you are drunk. Don't make me shout for the guards. You will be disgraced if they find you here.\"\n\nAnother leering laugh. He was fully on top of me now, forcing my shoulders down, crushing me with his body.\n\n\"We shall be married,\" he said for a third time.\n\n\"Sigbehrt, we will not be married,\" I replied firmly. I was thinking quickly - he was beginning to hurt me and provoking him further would only make him angry - what could I do to get him off me?\n\n\"I am betrothed to another,\" I blurted out, clutching at the first straw that came to mind.\n\n\"Betrothed to another?\" he snarled, pushing away a little from me in surprise. \"And who is the lucky man?\" His voice dripped with sarcasm.\n\n\"Prince Alfred of Wessex.\"\n\nSigbehrt leant back and a deep, mocking laugh. \"Prince Alfred of Wessex - the sickly Prince Alfred of Wessex!\" he guffawed.\n\nThat was my chance - I took a deep breath and let out a piercing scream, but instantly a heavy hand was clamped tightly over my mouth.\n\n\"Prince Alfred can neither walk nor talk, my lady - he cannot even fuck a whore!\" he cackled, bringing his face down close to mine again. \"His father hides him to spare his shame. No, no my lady - you will not marry him!\"\n\nHe threw back his head and laughed in contempt.\n\nI was beginning to struggle now, fearful of what Sigbehrt might do, I tried to wriggle from his grasp, but he was too strong and too heavy.\n\n\"No Princess Elspeth - there is much you do not know. For now your father is signing his kingdom over to mine. It is my family that will rule Surrey - we have the power now - your little cunt will seal the deal. I will be the one to take you!\"\n\nSuddenly, there was a shout from behind him.\n\n\"Get off her!\"\n\nA dark heavy object caught Sigbehrt on the side of the head and knocked him onto the floor. Suddenly free, I slipped over the side of the bed and cowered behind it.\n\nA new face appeared in the yellow lamplight.\n\n\"Princess Elspeth, it is I, Cedric of Chertsey!\"\n\n\"Cedric?!\" I gasped in surprise. The novice monk had come to rescue me?\n\n\"The castle is under attack. The Vikings are freed. They are killing the guards. We must get to the king. You must get dressed.\" The urgency in his voice shocked me to action.\n\nUnquestioningly, I ran to my closet. Hands shaking, I found my tunic and began to pull it over my head. I looked across at Cedric. He was kneeling over Sigbehrt, removing his sword and his dagger.\n\n\"Is he dead?\" I asked. I could hear the trembling in my voice.\n\n\"I think so,\" Cedric replied.\n\nMy rescuer sounded calm - that reassured me. I took some deep breaths. A second oil lamp was sitting by my dressing table - I lit it and handed it to him.\n\n\"How did you know he was here?\" I asked, pointing to Sigbehrt's body.\n\n\"We must get to the king,\" Cedric replied, ignoring my question. \"You are ready?\"\n\nI nodded. \"Yes.\"\n\nHe fastened Sigbehrt's sword around his waist and looked up.\n\n\"You have your bow and your arrows? You will need them. We will need to fight.\"\n\nI picked up my bow and slung a quiver of bolts over my shoulder.\n\nCedric picked up the lamp and made towards the door.\n\n\"No, this way,\" I said, pointing to the other side of the room. \"There is a secret stairway.\"\n\nI felt along the wooden panels that lined the walls and pressed lightly. The hidden door creaked open, revealing the stone steps behind.\n\nI pressed my finger to my lips and pointed upwards to the room above.\n\nCedric nodded and ducked his head, following me into the passageway. He turned and closed the secret door behind us.\n\nAn argument was raging in the bedchamber above us; furious voices were echoing down the spiral staircase as we climbed. I strained to listen - I felt a twinge of pride - my father was fighting back - this was not a weak, old man, begging for his life - this was a king standing up for his kingdom!\n\nCedric followed behind me, the yellow light from the oil lamps casting shadows on the rough-hewn stones. Tightly I gripped my bow in my hand - we would have the element of surprise - but it would not be ours for long.\n\n\"So you would have me sign away Southwark and Battersea?\" my father was shouting. \"The Vikings will not be satisfied - next spring they will be back - Croyden, Kingston, then Chertsey. In two years they will be laying siege to Guildown, Reygatte and Godhelming. You have been tricked Lord Sigweard - you have sold your soul - piece by piece they will take this land - until there is nothing left.\"\n\nThe earl gave a loud cackle. \"Your majesty,\" he crowed sarcastically. \"The Vikings will not deal with you - they see your weakness - they smell your fear! You are the failed king - the other Anglo-Saxon rulers will not help you - they laugh at you behind your back - even your son-in-law despises you!\"\n\nCedric and I had reached the top of the stairwell. There was a crack at the top of the door that the two of us could peek through. I pressed my nose against the wood and surveyed the scene.\n\n\"Sigweard is stalling for time - he thought there would be more with him,\" whispered Cedric in my ear.\n\nI nodded. My father was at his writing desk, dressed in his nightclothes, a scroll of parchment in front of him. Sigweard was leaning over him, sword drawn, furiously shouting into his ear. The main door to the room was open, but to my surprise there were only three soldiers - dressed in the dark blue livery of the Surrey army - doubtless men of Sigweard's personal retinue.\n\n\"The guards are nervous,\" I whispered to Cedric. \"Their treason rests uneasily on their minds.\"\n\nHe nodded.\n\n\"We should take them first,\" he replied quietly.\n\n\"Agreed,\" I responded. \"I can shoot the two by the door, you take the third.\"\n\nCedric gave a look of surprise, but nodded. I fitted an arrow to my bow.\n\n\"Ready?\" he asked. \"1... 2... 3...\"\n\nIn a flash we had burst through the secret door. My first bolt hit the furthest guard in the neck and he fell immediately to the ground. As quickly as I could, I let fly the second - it found its mark, and the screaming soldier fled out of the open door, clutching his eye. I turned around - the third man was lying dead at Cedric's feet.\n\n\"Lord Sigweard,\" said my father rising to his feet, an obvious satisfaction in his voice, \"how quickly the tables turn.\"\n\nThe king picked up the parchment from his writing desk and ripped it lengthwise in two. Sigweard stared at us dumbfounded - suddenly he was the one alone.\n\nOut of the corner of my eye I saw Cedric moving towards the main door, ready to block off the escape. Instinctively I drew another arrow and set it to my bow.\n\n\"Have you nothing to say?\" taunted my father, reaching for his sword. \"Where are your Viking comrades now, Lord Sigweard? Why do they not stand with you? Do they mock you behind your back?\"\n\nBut the traitor had not heard him. He was standing, white as a sheet, finger pointing to the weapon that Cedric brandished.\n\n\"My son's sword - that is my son's sword! What have you done with him? Where is he? He is dead? You have killed my son?\" His voice trembled with shock and rage.\n\nThere was a split-second pause. Sigweard charged, flying towards Cedric, his weapon raised. The traitor was quick, but my father was quicker. In a flash, the king leapt forwards, striking upward with the point of his blade and driving it into the the earl's flank.\n\nFor a moment it seemed as if he hovered, frozen in time, then with a final howl of anguish the traitor's lifeless body crashed to the ground in front of Cedric.\n\nSilence rang out across the bedchamber.\n\n\"Your majesty,\" said Cedric, bowing low, \"you have saved my life!\"\n\n\"And you, Cedric of Chertsey, have saved mine,\" replied the king.\n\nThe two men stood, looking at one another. A moment of respect passed between the two.\n\n\"Father, the Vikings control the castle,\" I said quickly. \"Your guards are dead or captured - we must leave, make good our escape - there is no time to lose!\"\n\nMy father was staring intensely at Cedric; it was as if he had not heard me.\n\n\"We will go north to Mercia,\" interrupted my mother, emerging from her hiding place behind the bed. \"King Beohred will offer us protection.\"\n\nI turned towards her - I had not even seen her.\n\nCedric shook his head.\n\n\"The Vikings are along the Great River, your majesty,\" he replied. \"By now they will have Southwark, maybe Kingston - certainly Chertsey. We cannot make it to Lundenwick - and if we do, there will be no sanctuary there.\"\n\nThe queen shot the Benedictine a look of distain and turned to me, rage welling up in her eyes.\n\n\"This is all your fault,\" she barked, jabbing an accusatory finger at me. \"If you had agreed to marry Alfred of Wessex, none of this would never have happened.\"\n\nI stared back at her - truly she had gone mad. But this was typical of her - when events ran out of her control, she would instantly turn to pin the blame.\n\n\"Hold your tongue woman!\" snapped Cedric, a look of utter contempt in his eyes. He turned back to my father. \"Your majesty - we must flee.\"\n\n\"How dare he speak to me like that,\" my mother shrieked. \"Will you stand for this?\" she demanded of my father. \"No Queen of Surrey will be treated in this way. Call the guards - have him arrested!\"\n\n\"We will go south,\" the king said firmly, ignoring his wife. \"We will go south to Bonham Castle. We shall take the Roman Road to the Misty River. We will destroy the bridge behind us - it will buy us the time to gather our forces.\"\n\n\"We will ride?\" Cedric asked quickly.\n\nMy father pointed to the secret door. \"There is a hidden passage, we will follow it to the river. The horses are stabled there.\"\n\nThere was shouting coming from the main stairwell - first one or two, but then five or more - Viking voices bellowing for Sigweard and Sigbehrt. Cedric turned and slammed the door shut.\n\n\"We should barricade it,\" I said to Cedric as my parents turned to dress. He nodded and together we dragged the furniture against the door - it would hold for long enough for us to make our escape.\n\nIn the dim light of three oil lamps, we made our way down the secret stairs, the sounds of Viking fury echoing around us. We passed the entrance to my bedchamber - the attackers were clearly inside, screaming and yelling as they ripped my room apart, trying to find my hiding place.\n\nI wanted to reach out to take Cedric's hand for reassurance, but I did not dare. I kept my head lowered, focused on one step at a time, letting the angry tongues fly over my head. Down we climbed, into the bowels of the earth, to the secret passageways beneath the castle courtyard. This was where my sister and I had played our childhood games of hide-and-seek - such innocent times, now so long ago.\n\nI'm not sure when it was decided that Cedric would accompany us to Bonham Castle. Perhaps it was always assumed that he would ride with us, from the moment the king decided to flee. There was nothing surprising about the sight of him mounted on a horse beside mine. His smile reassured me as we set off and clattered southwards along the old Roman Road. The ride would be long, but with Cedric beside me, I had nothing to fear.",
        "-\n\n\"You are well rested Elspeth?\" King Frithwald enquired when I attended him after breakfast the following morning.\n\n\"I am, Father,\" I lied. We had ridden hard through the night and by the time we had hailed the astonished guards of Bonham Castle, the sky was beginning to lighten. At best I'd had three hours' sleep.\n\n\"I am ready for the battle ahead,\" I said boldly. \"I shall fight by your side to the last!\"\n\nMy father smiled gently.\n\n\"My daughter, my beloved daughter,\" he began. \"I thank you for your service and your loyalty is greater than a hundred of my finest men - but...\" he paused, \"this fight is not for you.\"\n\n\"But Father,\" I protested, shaking my head. \"I cannot leave you - surely you can use me in your company of archers? I will not fail you!\"\n\nHe smiled.\n\n\"Elspeth,\" he said calmly, \"no man is more skilled with bow-and-arrow than you. And it pains me more than you can know that my army will be without you. But to you I have given the most important task of all - for it is you who will guard your mother and protect her until we are reunited once more.\"\n\n\"But Father...\"\n\n\"The two of you will follow the Bright Stream upriver,\" he continued, ignoring my objections. \"You will seek the place where the waters rise from the earth. A hermit lives there - by the spring. There you will remain until I send for you.\"\n\n\"Please Father...\" I begged.\n\nHe held up his hand to silence me.\n\n\"This is my command - a loyal soldier obeys without question.\"\n\n\"But when will I see you again?\" I whined.\n\n\"I will send for you within three weeks,\" he said. \"Of that you can be sure.\"\n\nI looked up at him, doubting his words, but his smile was warm and reassuring.\n\n\"Cedric will accompany you,\" he said quietly.\n\n\"He will?\" My shoulders felt a fraction lighter.\n\n\"He will stay with you for a time,\" the king continued. \"Then he will make his return to Chertsey.\"\n\n\"And if his abbey is destroyed by the Vikings?\" I asked.\n\n\"I have given him a letter of introduction to the Abbot of Hyde, so he may resume his training there.\"\n\nI nodded.\n\n\"There are few men in this world like him,\" my father said quietly. \"This morning I offered money, land and titles in abundance - but he declined them all. He wishes only to take his vows - I could not persuade him - he is set on his course.\"\n\n\"And is Cedric waiting for us now?\" I asked.\n\nMy father shook his head.\n\n\"I have given him leave to visit the church in the town,\" he replied. \"He will return in one hour and then you will be ready. I will say farewell before you leave.\"\n\n-\n\n\"Why is he here?\" My mother jabbed a finger at Cedric as the three of us prepared to depart. \"Where are the soldiers?\"\n\n\"My beloved wife,\" my father replied calmly, kissing her on each cheek. \"A cohort of my men will attract attention - the three of you together will pass unnoticed.\"\n\n\"There must be someone better,\" the queen hissed.\n\nI stared at my mother with contempt - without Cedric all three of us would most likely be dead.\n\n\"He will guide you,\" my father said simply.\n\n\"Can we not ride?\" the queen demanded, looking distinctly unimpressed.\n\n\"No, the way is narrow - you must go on foot.\"\n\nAnd so we set off, carrying a few clothes and some food, but little else. The small town of Bonham was deserted - already the inhabitants had fled, taking their families south into the sprawling, impenetrable forest of the Holmwood. An army could hide in there and never be found. It was the domain of the ancient peoples, who'd lived in these islands before the Romans - the ragged peasants who'd emerge from the trees on market day to sell their lumber and their charcoal. It was a place where honest men feared to tread - a forest best avoided.\n\nWe found the path beside the Bright Stream and followed it westwards. My mother grumbled for the first part of the journey - still insisting that we should have sought shelter in Mercia. Cedric simply ignored her, turning his back on her whenever we paused, leaving me with her unmeetable demands.\n\nThe queen fell silent as we continued. Beside us, the waters burbled cheerfully, taunting me with their merriment as the sheer magnitude of my family's predicament sank in. My father had been optimistic, confident that he would win the fight ahead; I wanted to believe, but I knew in my heart we would never see him again.\n\nDefeat to the invaders seemed inevitable - the north was lost, the battle for the south was at most weeks away - perhaps only days. My father would send out requests for urgent support from all the Anglo-Saxon kings - but how many would respond, send even a token force? Most would just shrug their shoulders and laugh - turn their backs and hope they were not next.\n\nAnd what of my mother and I? Would we live out our lives at the hermit's cottage, waiting for a message that would never arrive? Could we try to reach Mercia the long way round - head west to Basing then north to Oxford? Cedric would disappear in days - there would be no stopping him. Once he had gone who would be with us?\n\nI looked up at the novice, walking in front of me. He had discarded his Benedictine habit and was wearing an unremarkable peasant's tunic and trousers. The voluminous black fabric had hidden his figure, but the lighter linen revealed the breadth of his shoulders and the strength in his arms. I wondered if I could convince him to stay for longer - perhaps persuade him to abandon his calling - for the two of us to flee, far to the west, maybe set up a small holding - raise pigs, keep fowl, grow a little wheat or barley... I shook my head. No - my father would win his battle and then he would send for us - I had to believe.\n\nOur progress was slowing as the woodland closed in around us. The stream was narrowing and the way becoming steeper as we began to turn southwards, climbing the lower slopes of the Green Mountain. Increasingly we were forced into the water, so thick was the vegetation around us. Repeatedly Cedric slashed at the tangled undergrowth, using the sword he had taken from Sigbehrt to clear a path. Around us the air hung heavy - even the birds had stopped singing. It felt like the journey would never end.\n\nSuddenly the forest opened into a large clearing. There was a small stone cottage to one side and in front of us a large pool, from which the Bright Stream flowed.\n\n\"So this is it,\" Cedric said quietly. \"This will be your home for a time.\"\n\nA tall figure rose from the bank - a grey-haired old man with a long, straggly beard, dressed in dark, flowing robes. He came slowly towards us, carrying a tall wooden staff.\n\n\"Oh wise Hermit of Meriden,\" called Cedric, raising his hand in greeting. \"We seek refuge with you here.\"\n\nThe old man bowed but said nothing. We followed him towards the building, skirting the deep blue waters of the pool. The man opened the door and gestured us inside.\n\nThe cottage was modest - a single storey with only three rooms - a central area with simple benches, a low table and entrances to two bedrooms on each side. Silently the hermit indicated the room with two beds for my mother and I. He gave another low bow and was gone.\n\n\"So what now?\" I asked Cedric.\n\nThe young man frowned as if I had uttered the most idiotic question in the world.\n\n\"We eat.\"\n\n-\n\nI was grateful that my mother had decided to retire to bed. The hermit had disappeared without saying a word and was nowhere to be seen. Would he would return? I had no idea - perhaps at that moment he was betraying us.\n\nCedric was sitting beside the pool, staring out into the deep blue waters. I watched him for a few moments from the cottage door, wondering at the thoughts running through his mind. I took a deep breath, plucking up the courage to speak to him.\n\n\"Thank you,\" I said simply as I sat beside him.\n\n\"My lady,\" replied the Benedictine, his voice flat, almost sorrowful \"you have no need to thank me - it is an honour to serve the king and his family.\"\n\nI wanted to gently argue back, to persuade him to accept my gratitude - words poured through my head, but none came to my lips.\n\nAnd so the two of us sat, side-by-side, staring at the pool.\n\n\"They say the waters tell of the things to come,\" I said almost hopefully, desperate to break the silence of my despair.\n\nCedric gave a hollow laugh. \"Then they are wrong,\" he said simply. It was that same directness with which he'd spoken before.\n\n\"I have met so many who claim they see the future - but they are either deluded or they do it to swindle the foolish. The men who sound the wisest often know the least.\"\n\nI smiled softly to myself - I hardly knew the novice Benedictine, but already that reply seemed so typical of him. The previous evening I'd viewed his scepticism as perverse, even insulting, but now I knew he'd been right - what Cedric saw, few men could see - I had a lot to learn from him.\n\n\"Tell me what happened on Chertsey Bridge,\" I asked quietly.\n\n\"You know it already,\" he said, a little evasively, turning his head to look at me. \"I was returning from delivering a message for my lord abbot. I saw the Vikings approaching and when I looked over the side of the bridge, I saw two boats moored with old linen rags and barrels of pitch and oil. So I climbed down, struck a light and set the boats towards the longship.\"\n\nI nodded. That was the story he'd told before - I'd been thinking it over on the walk from Bonham Castle - there was more, I was certain.\n\n\"And were you on your own - or were there others with you?\"\n\n\"I was on my own,\" he said - a little too quickly, a little too emphatically. He turned his head sharply back to the pool.\n\nHe was lying, I knew it - but why? Because he wanted to claim sole credit? That seemed unlikely - that was just not his style. Because he wanted to protect others? That was possible. A few novices were where they should not have been - the rest had made it back to the abbey, but Cedric had been caught? But who was going to punish his fellow miscreants now? What was the point of keeping things secret?\n\nAn uneasy silence descended between us. Cedric could sense my suspicion. He stared silently over the deep blue water, as if waiting for my next move.\n\n\"Chertsey Bridge is locked at night, is it not?\" I said pointedly.\n\nHe smiled.\n\n\"Indeed, but the guards are lazy and it is easy to slip past them. Climbing the gate is not difficult.\"\n\n\"You have done it many times?\" I asked, perhaps a little disapprovingly.\n\nHe looked down, still avoiding my gaze, but said nothing.\n\n\"There is one thing I do not understand,\" I said slowly. \"Why did Sigweard bring you to Morden - to my father's castle?\"\n\nCedric took a deep breath.\n\n\"I am not sure,\" he said slowly. \"Sigbehrt and his men apprehended me on the bridge...\"\n\n\"Sigbehrt was already on the bridge?\" I interjected in surprise.\n\n\"I think he was,\" Cedric said slowly.\n\n\"Was he waiting for the longships?\"\n\nThe young man shrugged. \"He must have been.\"\n\n\"So what happened when he caught you?\"\n\n\"He was angry - very angry - his men dragged me off the bridge to his father.\"\n\n\"But Sigweard decided to bring you to Morden?\" I pressed.\n\n\"I think... I think...\" Cedric struggled for the right words. \"I think Sigweard realised I could be useful,\" he said slowly. \"The plan was always to take the Vikings to your father's castle, but what would have happened if the guards had managed to resist or something else went wrong? I was a useful scapegoat - I could be blamed. They would have made out that I was the one in league with the enemy - Sigweard and Sigbehrt would say I'd deceived them - I'd have been quick to hang, but they would have kept their heads at least.\"\n\nI nodded. Sigweard was a cunning schemer, but he was also an opportunist. The fireboats had done nothing to scare the longships ashore - they were always going to land anyway - it had all been planned in advance. Cedric's appearance had been a stroke of luck - or least that's what Sigweard had thought at the time - no one would suspect a novice monk of plotting with the invaders.\n\nBut the plan had gone wrong - very wrong. True, the Vikings were now in charge of Morden Castle, but Sigweard and Sigbehrt were dead and my father, mother and I had escaped. Cedric had ruined the traitors' scheme.\n\n\"But how did you know the prisoners had been released?\" I asked, still perplexed.\n\n\"Because someone tried to lock me in my room,\" he replied, turning to me and smiling for the first time.\n\n\"But you got out!\" I exclaimed.\n\n\"I stole a key,\" he said quietly.\n\n\"So you followed Sigbehrt to my bedchamber?\" I asked.\n\nCedric nodded.\n\n\"He was supposed to join his father in your parents' room. But he did not - he went to your bedchamber first. I followed him - a black Benedictine habit is good for hiding in the shadows.\"\n\n\"So you listened outside the door and you realised I needed help?\" I asked.\n\nCedric nodded.\n\n\"Yes, that's how it happened,\" he agreed - again, just a little too quickly.\n\nI stared out into the blue crystal waters of the spring. A soft mist was beginning to rise, enveloping the two of us in its mysterious embrace.\n\n\"What will you do, when all this is over?\" I asked.\n\n\"I would like to return to Chertsey,\" Cedric said thoughtfully, \"but your father has suggested I journey to Oxford, to study with the learned men. I am not sure. Tomorrow I will climb the Green Mountain - I will ask for guidance.\"\n\nI looked anxiously up at him. My father had not mentioned Oxford to me. But if he did decide to go, he might accompany my mother and me to Mercia.\n\n\"I will return, I promise,\" he added, placing a hand on my shoulder. \"You must stay here - the spring will protect you.\"\n\nI frowned. Minutes earlier he'd denied that the waters could tell the future, but now he was trying to persuade me that they could keep my mother and me safe. I shook my head. But I would do what he wanted - he obviously did not want to be followed.\n\nThe two of us sat side-by-side in silence as the light began to fade.\n\n\"I will wish you good night,\" I said, beginning to get up. \"I will see you in the morning.\"\n\n\"Good night,\" said Cedric.\n\nI walked the short distance to the cottage, but as I reached the doorway, I looked back over my shoulder.\n\nCedric had turned and was looking back at me, a soft smile on his face, his eyes shining brightly.\n\nHe waved and I disappeared inside.\n\n-\n\nThe next four days passed slowly - very slowly. Frankly they were torture. To say my mother was struggling with our situation was a gross understatement. She moaned, ranted and grumbled from dawn until dusk - nothing was ever right for her.\n\nTo my disappointment, I didn't see much of Cedric. He'd disappear each morning after breakfast to climb the steep slopes of the Green Mountain, returning in the evening, often late, always refusing the offer of food. For the most part he ignored my mother as she sat complaining - but sometimes he'd laugh, which infuriated her even further. Even I was surprised - shocked even - by the lack of respect he showed. But she was the queen of a peasant's cottage and nothing else.\n\nI was trying to find out more about Cedric, but he was always very guarded when I questioned him. I hadn't learned much, but I knew he'd been born in Wantage - a frontier town between Wessex and Mercia. He talked about his mother a little, but all he'd say about his father was that he'd fought in the war between the two kingdoms. I presumed that meant his father was dead - perhaps killed in battle at Mercian hands - maybe that explained his hatred of King Beohred.\n\nThe hermit was no company. He'd sit motionless, not saying a word, staring into the pool. Then, he'd disappear for a couple of hours, before reappearing as suddenly as he'd left. I knew not where he ate or slept, but his movements were so unpredictable, he was impossible to follow.\n\nI spent my days trying to escape the tedium. I'd improvised an archery target and was trying to practise making my own arrows, but the uncertainty of our future hovered over me like a dark cloud. The solitude was not helping. I dreamt of slipping away and back to Bonham Castle, joining my father's army in disguise as we faced the Viking hordes - but obediently I stayed put, prepared to defend my mother from an invisible enemy that might discover us at any moment.\n\nIt was late on the morning of the fifth day, when the hermit left. I'd been hunting for our midday meal and was walking slowly back up the hill towards the cottage, bow slung over my shoulder, clutching the two rabbits that I'd managed to bag.\n\nThe old man was outside, standing by the spring, fixing a saddlebag to a mule. I felt my stomach turn over - was he abandoning us? I stared in surprise - I'd never seen or heard a mule in the vicinity of the cottage - where had the animal come from?\n\n\"You are leaving?\" I asked, not expecting a response.\n\n\"Indeed, my lady,\" the hermit replied. \"I must return to my people - they have need of me now.\"\n\nI looked at him in astonishment, thinking perhaps I'd imagined his answer. After four full days of silence, had he finally spoken to me?\n\n\"W-when will you return?\" I ventured cautiously.\n\n\"I know not. Perhaps in weeks, maybe months...\" his voice trailed off as he turned back to finish securing the load.\n\nI walked past him to the pool and stared deep into its waters - hoping to see something, anything that might reassure me of the future. Soon Cedric would leave as well - I would be alone with the queen.\n\n\"You are safe here, my lady,\" the hermit said softly. \"The angels watch over you - the young man has made sure of that.\"\n\n\"Cedric has?\" I asked confused, turning to face him. Was the old man mad?\n\nThe hermit nodded and came and stood beside me.\n\n\"What do you see?\" I asked, nodding towards the crystal blue waters.\n\nHe extended his arm over the spring, as if conjuring forth a watery spirit.\n\n\"A mighty prince has come to this land,\" he said slowly. \"He will bring war and suffering and strife.\n\n\"A great betrayal is upon us; evil stalks this realm. Lives will be lost; dwellings will burn; much blood will be shed - the traitors have chosen their path.\"\n\nI looked up in alarm.\n\n\"I see a new king - I see him rule - he unites his people. Generations to come will speak in awe of him - they will call him 'Great' many centuries from now.\"\n\n\"And my father?\" I asked hoping desperately that the hermit had not seen a victorious Viking leader in the waters.\n\n\"He readies his army for war. He will fight for his kingdom.\"\n\n\"And will he vanquish his enemies?\"\n\n\"I am sorry, my lady,\" the hermit said slowly, shaking his head. \"The waters do not tell.\"\n\nI felt crushed - he was trying to soften the blow - King Frithwald's position was hopeless.\n\nHe turned away and walked back to the mule.\n\n\"And what of me?\" I asked meekly. Was there a life for me beyond the battle? Would I live out my days with my mother at the spring? \"What do you see of me?\"\n\nThe hermit turned to face me, eyes twinkling.\n\n\"You, my lady, will marry the man you love,\" he said without hesitation.\n\nHe returned my look of surprise with a reassuring smile.\n\n\"And Cedric?\" I asked quickly, immediately realising that I had betrayed my feelings for the novice.\n\nThe old man took a deep breath and stepped back to the pool. He closed his eyes and again held out his arm. He was silent for several moments.\n\n\"I am sorry, my lady,\" he said eventually. \"But Cedric - I see him not.\"\n\nThose words hit me will full force. They could only mean one thing - Cedric would die - and soon. Numbly I stared into the pool. My world was collapsing, I felt crushed.\n\nThe mule grunted as the hermit began to lead it away. I watched as they neared the edge of the clearing.\n\nThe old man turned to me one final time.\n\n\"Farewell my lady. I will see you again - but I know not where or when.\"\n\n-\n\nI slept fitfully that night, tossing and turning as the hermit's words echoed around my brain, repeating themselves over-and-over.",
        "\"I am sorry, my lady. But Cedric - I see him not.\"\n\nBy the time the meagre light of the grey dawn had begun to seep into my bedchamber, I had made up my mind. I would go to Cedric and wake him - tell him his life was in danger and that he should flee - persuade him to leave us and get as far from Surrey as he could. I'd press a gold coin into his palm, promise him my prayers - tell him we'd meet again when the war was over.\n\nI rose from my bed and crept to the front of the house, pushing aside the curtain which lay across the doorway to Cedric's room. For a moment or two, I stood still, watching the gentle rise and fall of his chest as he slumbered beneath the thin linen sheet, certain that this would be the last time I ever saw him.\n\nTentatively I took a step towards him - he looked so peaceful, so blissfully unaware of the fate that the hermit had foretold.\n\n\"Cedric, Cedric!\" I whispered.\n\nHe murmured a little and adjusted his position, but his eyes remained closed. My head was fighting my heart - I didn't want him to go - perhaps in another life we'd be together.\n\nI took a step closer and reached towards him. Tenderly I touched his forehead, stroking the dark curls clear of his eyes, hoping to gently rouse him.\n\nThere was a flash of gold before my eyes.\n\nI recoiled in surprise. Surely, I was mistaken? A trick of the light - nothing more.\n\nNervously I advanced my hand again and brushed my fingers across the top of his head. Horror flashed through me, shaking me clear of my sleep fog - for the tiniest length of the base of each hair was bright yellow. Cedric's hair was not black - he was blond!\n\nI recoiled abruptly, hastily backing away from the bed.\n\n\"I see him not.\"\n\nAgain the hermit's words echoed through my mind, but now their true meaning was clear. Cedric wasn't about to die - far from it. Cedric had never existed - that's what the old man had meant. The young man sleeping in front of me was an imposter, a swindler, a cheat. Cedric wasn't Cedric!\n\nBut who was he? What reason would he have to trick his way into my father's confidence?\n\nThe answer hit me in flash. Cedric was a Viking! How else would he have known about Sigweard's conspiracy? Why else would he have found a way into my bedchamber? Had he been intending to kill me, when he found that Sigbehrt had got there first?\n\nWas that why the hermit had gone? Cedric had been so unconcerned the previous night when I'd told him - perhaps he'd even bribed the old man to leave. Now my mother and I were his prisoners - would he extract a ransom from my father? Had that been his plan all along?\n\nI panicked. I had to get out, to get away from this place, to get help, get to safety. As I turned to run out of the room, I saw Sigbehrt's sword lying on top of his clothes. I reached down and picked it up - it was best to be armed - who knew what dangers lay between the spring and Bonham Castle.\n\nI crept back to my room and dressed quietly. For a second I hesitated, debating whether to wake my mother. But it was pointless - her protesting would wake Cedric and he would surely kill us both if he found us escaping.\n\nHeart in my mouth, I creaked open the front door of the cottage. Cautiously I looked around the clearing. The spring was deserted. I looked back one more time to check he was not following me - there was no one there.\n\nI took a deep breath and ran. Ran, as fast as my legs could take me, crashing through the undergrowth, following the stream downhill into the deepest part of the forest, retracing the route we'd followed less than a week before.\n\nBrambles and thorns tore at my clothes; I pushed myself harder, running faster and faster, leaping over tree trunks and boulders. Shouts were coming from behind me - was that Cedric following me? It sounded like more than one voice - calling my name, begging me to stop. Was there a whole cohort of with him, hiding out in the woods, watching our every move? Was that why he left us every day?\n\nThe woodland was beginning to thin out now, more light was reaching the ground. In a few moments I'd be able to see Bonham Castle. With a final surge of effort, I broke free of the trees and immediately tripped over a root, falling forwards, flat on my face.\n\nI pushed myself up on my hands. Standing in front of me, was a soldier - a corporal - dressed in the dark blue uniform of the Surrey army.\n\nA wave of relief washed over me.\n\n\"I am Princess Elspeth,\" I panted. \"Help me please. The monk in the cottage, he has the queen - he means to kill her!\" I pointed upstream towards the hermit's pool.\n\nFor a few moments, the officer stared at me in amazement, incredulous at the sight before him. A broad smile broke over his face.\n\n\"My lady, we have been searching for you. It will be our pleasure to escort you to your father.\" He bowed low.\n\n\"The monk!\" I pointed, still breathless. \"He has the queen! He has the queen!\"\n\nThe corporal reached into his pocket for a whistle, which he put to his lips and blew. Immediately a dozen men appeared from all around, half of whom he despatched in search of Cedric. He turned back to me.\n\n\"And now,\" he said with a bow, \"I shall take you to your father.\"\n\nPerhaps I should have spotted the warning signs earlier, but I was so relieved to have found a safe escort that I did not notice that we were turning south, away from Bonham, making our way along the narrow plain that squeezed between the Green Mountain and the dark, brooding forest of the Holmwood. It was only as we approached a small village, that I realised we were many miles from where we should have been.\n\n\"Where are we going?\" I asked alarmed. \"This is not Bonham!\"\n\n\"My lady,\" the lead guard replied. \"I am sorry to tell you - Bonham Castle has been sacked by the Vikings. Your father has set up camp here, this is Aclea.\"\n\n\"Aclea?\" I asked, confused. I knew of the village and the low, flat plain that surrounded it. It was hardly the best defensive site. \"Would he not choose the higher ground at Anstieburgh?\"\n\nThe guard laughed. \"He means to draw the Vikings south from Bonham. Aclea is where he will make his stand.\"\n\nWe had reached the row of timber buildings that lined the main street. It was now obvious that something was very wrong. The place was deserted - there were no signs of life anywhere. Army camps were full of activity - even I knew that - soldiers on patrol, blacksmiths hammering, horses being exercised - but there was nothing - no one at all. Aclea was a ghost village.\n\n\"Where are we going?\" I demanded, beginning to panic. \"Take me to the king!\"\n\n\"My lady,\" the guard replied, catching hold of my wrist \"your father is inspecting his troops. He will see you on his return.\"\n\n\"Get off me,\" I cried, trying to wrest myself free from his grasp. \"I order you to take me to the king!\"\n\nThe corporal laughed and gripped me more tightly, digging his fingers painfully into my flesh. His soldiers had their swords drawn now - they were packing close around me - there could be no escape. I cursed my hot-headed stupidity.\n\n\"Who are you? Where are you taking me?\" I demanded.\n\nWe turned a corner. A sentry was standing guard outside a low stone building with a thatched roof. He saw us approach and opened the thick oak door. Roughly the sword was stripped from my waist and I was shoved through the opening.\n\n\"Once we have your mother in irons and that troublesome Benedictine is dead, your father will pay a pretty penny for your lives!\" snarled the officer.\n\nHe turned and slammed the door behind him.\n\nI blinked. In the dim light, I could see the room was almost empty - just a single straw mattress on the bare earthen floor. The narrow window was barred with an iron grille. This was my prison.\n\nI sat down on the bed and wept.\n\n-\n\n\"Princess Elspeth, what a pleasant surprise! I must thank you for returning my sword - how kind of you!\"\n\nAn all-too-familiar silhouette filled the doorway.\n\n\"Sigbehrt?!\" I gasped in horror.\n\n\"How nice of you to come and visit us,\" he smirked. \"I do hope you are comfortable.\"\n\n\"You're alive?!\" My blood ran cold.\n\nThe Thane of Chertsey gave a short laugh as he stepped into the room. The side of his face was badly bruised and there was a bandage over his ear.\n\n\"I am sure you are pleased to see me, my lady,\" he crowed.\n\n\"Let me go! Let me go!\" I screamed, springing forwards towards the open door.\n\n\"Leaving so soon?\" he mocked, catching me easily by the waist and throwing me backwards onto the bed.\n\nI tried to claw at his face, but he held my wrists and forced me down against the mattress.\n\n\"Oh you can struggle, my lady. But there is no one here to save you - not even your little Benedictine!\"\n\n\"Cedric is twice the man you'll ever be!\" I yelled.\n\nSigbehrt gave a twisted chuckle.\n\n\"I should have run him through in Chertsey Jail when I had the chance. My father thought it sporting to bring him with us to Morden Castle. My father was weak - he paid the price - I will not make the same mistakes. My men will find the meddling monk. They will hunt him down. They will bring him to me. And you will watch me drain the lifeblood from his body!\"\n\nHe turned and spat onto the floor.\n\n\"It was such as shame we were so rudely interrupted,\" Sigbehrt continued. \"I was telling you that if you married me, your father's life would be spared.\"\n\n\"Never!\" I screamed. \"You have betrayed this kingdom to the Vikings. I will never marry you!\"\n\nSigbehrt clapped one hand over my mouth and began to slide the other up my leg, beneath my tunic.\n\n\"My lord!\" A shout came from the door.\n\nSigbehrt twisted round and glared at the intruder.\n\n\"Be gone - I am busy - I cannot be disturbed!\" he snarled.\n\n\"My lord, the Viking king requests your presence most urgently at Bonham Castle.\"\n\n\"The Viking king will wait.\"\n\n\"My lord, King Aethelstan of Kent has moved against us. He has captured Morden Castle. You must go to Bonham now!\"\n\nSigbehrt leapt from the bed with a roar of anger.\n\n\"I told them, I warned them they must prepare for an attack!\" he ranted, shaking a finger at the messenger. \"Those idiots - they think they are invincible - they know nothing of fighting on land.\"\n\nHe stalked towards the doorway.\n\n\"Bind her!\" he demanded, pointing to where I lay on the bed. \"See that no one gets in.\"\n\nHe turned back to the exit.\n\n\"And find that novice and kill him!\" he bellowed.\n\nI lay quietly in the darkness, unable to move. My arms were tied, my legs were bound, a greasy rag had been stuffed in my mouth. The rope around my wrists cut sharply into my skin and my head throbbed with pain.\n\nKing Aethelstan of Kent - was that my father's doing? Had he sent messengers to Canterburgh, asking for assistance? Or had the young king seized his moment - attacked the northern half of Surrey while my father desperately defended the south? If Aethelstan had attacked from the east, his father, Aethelwulf of Wessex would do likewise from the west - it was only a matter of time. And what of King Oslac of Sussex? Surely he would seize his chance? Together the three would beat the Vikings and divide my father's lands between them. It was inevitable - Surrey was finished.\n\nAnd yet in the darkest corner of my thoughts, a tiny flame of hope was flickering, driving the cold despair from my heart. For now I knew that Cedric was not dead - the novice monk still lived. Whoever he was, he was no friend of Sigbehrt - and that meant he was on my side. And more importantly - he had escaped!\n\n-\n\nI woke with a start. Shouts of \"Fire!\" were ringing through the village. Outside the prison door was chaos and confusion - thundering hooves, clashing steel - Aclea was under attack!\n\nThe jailhouse was filling with smoke - the thatch was on fire. I needed to get out quickly - it wouldn't be long before the roof collapsed. I struggled to free myself, but the ropes around my wrists were tight, I could not move.\n\nSuddenly there was an almighty crash. The door burst open. A tall figure dressed in black was coming towards me - a flaming torch in one hand, a dagger in the other.\n\nThis was it - my final moment - the intruder was going to kill me - I was going to die. I tried one more time to free myself, but already my lungs was filling with smoke. I choked, spluttered and slumped sideways onto the bed. Then there was blackness.\n\n-\n\nIt was the sound of a blacksmith's hammer that woke me - a distant tinking of metal-on-metal, ringing through my dreams, rousing me from slumber like a calling bell. I blinked my eyes open and looked around. I was in a tent - a large tent, with maybe a dozen or so beds - all empty, except mine. In the far corner, a woman, dressed in a nurse's uniform, was arranging a pile of blankets. Where on earth was I?\n\nI gripped the side of my bed and tried to sit up, but it was no use - I was too weak. Frustrated, I collapsed in a fit of coughing.\n\nThe nurse turned around and came towards me.\n\n\"Princess Elspeth!\" she exclaimed, relief etched over her face. She gave a deep curtsey. \"You have awakened!\"\n\nHer voice was soft and caring, her smile reassuring. Gently she brushed her hand over my forehead.\n\n\"W-where am I?\" I asked bewildered.\n\n\"You are safe,\" she replied softly, turning to pick up a bowl of water and a cloth. \"This is the Wessex camp.\"\n\n\"The Wessex camp?\" I sat bolt upright. What Wessex camp? Was I no longer in Surrey?\n\nShe nodded. \"Prince Alfred brought you here last night - he rescued you.\"\n\n\"Prince Alfred?\" I asked in disbelief. \"Prince Alfred? Alfred son of Aethelwulf? Alfred of Wessex?\"\n\n\"The very same,\" the nurse replied, smiling gently. She dipped the cloth into the bowl.\n\n\"But I thought he was... Isn't he...?\" my voice faded as she gently wiped my brow.\n\n\"He stayed with you for an hour last night and came again this morning hoping you would wake.\"\n\n\"Prince Alfred stayed with me last night and came again this morning?\" I echoed bewildered, pushing away the blanket.\n\n\"My lady - you must rest, you are confused,\" she said softly.\n\n\"But I must go to him,\" I replied, determined. \"I must go to the prince. I must thank him for his courage and his bravery!\" I swung my legs across the side of the bed to get up, but immediately broke into another fit of coughing.\n\nThe nurse placed a hand on my shoulder to restrain me.\n\n\"Hush my lady,\" she soothed. \"The prince has gone to meet with King Frithwald - he will be away for many hours - perhaps he will not return until nightfall. He will come to see you when he can.\"\n\n\"He is with my father?\" I asked, astonished.\n\nWas I truly awake - was I not dreaming?\n\nThe nurse nodded, \"King Frithwald is camped with his men at Anstieburgh - not five miles from here. The Wessex army will fight alongside his. The Vikings are our enemy too.\"\n\nI blinked in amazement.\n\n\"Wessex will fight alongside Surrey?\" I asked.\n\nThe nurse frowned.\n\n\"Do not trouble yourself with thoughts of war, my lady. For you must rest and regain your strength. The prince will call on you on his return.\"\n\nI lay back down and laid my head on the pillow. The nurse gently wiped my forehead dry with a second cloth.\n\n\"You have a bruise developing, my lady,\" she said softly. \"I will fetch some ointment.\"\n\nShe rose and turned to go.\n\n\"My mother, the queen,\" I asked. \"Is she safe?\"\n\n\"Indeed she is,\" came the reply. \"The prince has made certain of it.\"\n\n\"There was someone else,\" I said, \"a novice monk - he was with me when we were hiding - Cedric of Chertsey is his name. Do you know of him - did he escape?\"\n\nA smile broke out across the nurse's face.\n\n\"The prince said that you would ask of him,\" she answered with a twinkle in her eye. \"I am charged to tell you that he is not far from here, you will see him this evening.\"\n\n\"I will?\" My heart leapt.\n\n\"Indeed, my lady, but first you must rest. It will be many hours before the prince returns.\"\n\n-\n\nDarkness was falling as I slipped out of the hospital tent. Patiently I'd waited until the nurse's back was turned, then I'd made my escape. She had insisted that I wait, but I was determined to find Prince Alfred before he found me.\n\nAll through the afternoon I'd rehearsed my words of gratitude - I'd curtsey low before him, thank him profusely for rescuing me and for fighting alongside my father. I'd pledge to serve him in any way he wanted, ready to play my part, however small it might be.\n\nI'd done my best to make myself look presentable. The only clean clothing that the nurse could find for me was an ill-fitting archer's uniform, but she'd given me some make-up to cover my bruise and to colour my cheeks. All afternoon I'd sat in front of a polished bronze mirror, trying my best to prepare myself to meet the prince - but every few moments I cast a glance towards the entrance of the tent, hoping in vain to see Cedric striding towards me.\n\nI walked slowly through the Wessex camp, looking around nervously - it was enormous, or so it seemed. Row upon row of identical, dark green tents, stretching endlessly into the fading light. I'd expected the prince's tent to be easy to spot - to be the largest, the most prominent, but they were all identical. Anxiously I pulled at the archer's tunic - it was tight across my bust and hips and hung loose everywhere else. I was beginning to regret my decision to go looking for him - perhaps the nurse had been right - it would have been better to wait.\n\nIn the distance I could hear voices, there was a smell of cooking in the air - the soldiers would be gathering for their evening meal. Cautiously I walked towards the sounds, hoping perhaps I might see the prince eating with his men. I could scarcely ask for directions to his tent - my head would leave my shoulders the moment I did.\n\nA figure was approaching, a soldier, moving swiftly in my direction. He spotted me and raised his hand in greeting.\n\n\"My lady!\" he exclaimed, bowing low before me. \"It is a relief to see you well - we had not expected you to be on your feet so soon.\"\n\nI peered at the young man. He clearly recognised me, but I had not seen his face before.\n\n\"Prince Alfred, my lord?\" I ventured.\n\nThe young man gave an embarrassed laugh.\n\n\"My lady,\" he replied, \"I fear you are mistaken. I am Wilfred of Romsey. I have been proud to serve the prince loyally these past three years.\"\n\nI felt my cheeks reddening.\n\n\"Forgive me, noble knight of Romsey, for it is the prince I seek,\" I said shyly. \"Will you take me to him?\"\n\n\"My lady, the prince is resting,\" Wilfred replied, glancing over my shoulder. \"He has just returned from your father - you must go back to the infirmary - he will call upon you when he is ready.\"\n\nI turned. I could see a faint light shining under the canvas of the tent behind me.\n\n\"This is his?\" I asked, pointing towards the entrance and starting to walk towards it.\n\n\"No, my lady, you cannot,\" Wilfred protested, holding out an arm as if to restrain me. \"The prince is resting. He must not be disturbed.\"\n\nI pushed open the flap and stepped inside.\n\nSitting at a table, facing the entrance, was a young man with curly blond hair. He was busy writing with a quill, oblivious to my entry.\n\n\"My lord,\" I dropped into a respectful curtsey and lowered my gaze in humility.\n\n\"Forgive me, my lord,\" it was Wilfred entering the tent behind me. \"I will escort the princess to the infirmary. She may wait for you there.\"\n\nThe young man looked up. My jaw dropped in astonishment. Those deep blue eyes were unmistakeable, even in the gloom of the tent. It was - it was him!\n\n\"I thank you Wilfred,\" the young man said with a gentle smile. \"The princess and I will talk now. I bid you retire for your meal. I will send word when I need you.\"\n\nThe lieutenant bowed low and withdrew, leaving me alone with the prince.\n\n\"You are well rested, Elspeth?\" he asked, rising to his feet to greet me. \"I did not expect to see you up and out of bed so soon. I was about to call on you.\"",
        "\"Cedric?\" I gasped in shock.\n\nThe prince came forward and grasped my hands in his.\n\n\"Cedric?\" I repeated.\n\n\"I was Cedric,\" the young man began, \"or Cedric was me. But now it is time for you to know me truly - for I am Alfred, son of Aethelwulf, Prince of Wessex.\"\n\n\"Prince Alfred?\" I asked in amazement.\n\n\"The very same.\"\n\n\"But your hair?!\" I pointed to his blond locks.\n\n\"It was dyed,\" the prince explained, running a hand through his golden curls. \"They tell me the blacking has all gone,\" he peered closely at his fingers. \"But I am not convinced.\"\n\nHe smiled, but I felt numb and confused - even a little angry. How could I have fallen for his deception? And not just me - my father too?\n\n\"Will you sit with me?\" he asked, lightly taking my arm and guiding us to a pair of chairs at one side of the tent.\n\n\"I feel such a fool - why did I not realise?\" I said, half to myself, as I sat beside him.\n\nThoughts and emotions ran screaming through my brain.\n\n\"Believe me Elspeth - you are no fool - this past week has taught me that too well. You must allow me to explain.\"\n\n\"You mean this time you will tell me the truth about what happened on Chertsey Bridge?\" I asked pointedly.\n\nAlfred gave a nervous laugh - he looked a little uncomfortable.\n\n\"My father has watched Surrey for a long time,\" he began. \"When my brother gained the throne of Kent, we knew the Vikings would switch their attacks. And that would bring them closer to our lands.\"\n\nI nodded. King Aethelstan had won a great sea battle against the raiders - no longer could they plunder the coast of Kent; they had been forced to seek out other targets along the Great River - and that meant Surrey had become their focus.\n\n\"Your family has ruled wisely for many generations,\" Alfred continued. \"They have built alliances and kept the peace between Mercia and Wessex. Your sons and daughters have married well.\n\n\"The Vikings had a different game. They wanted only gold, and silver, and blood. Night after night they would raid these islands' shores - they would burn what they could not take. They were not to be reasoned with - no land or marriage would buy them off. They would rape and pillage then disappear.\"\n\n\"But now they crave conquest. They would settle here - they would steal the lands of our peoples. At first they tried with Kent, but my brother repelled them. Surrey was next - we were sure. If they gained a foothold, they would dig in, push ever deeper - Wessex, Sussex, Mercia - they could defeat each one in turn until these islands lie completely under their control.\"\n\n\"And your father sent you to Chertsey,\" I asked, \"to watch our kingdom?\"\n\n\"To learn the stories the ambassadors would not tell,\" Alfred replied. \"To hear the tales of heartache and loss from real men... Where else would you post your most trusted lieutenant, but at the town on the Great River where a longship would enter Wessex?\"\n\n\"Where else would you send your insubordinate, teenage son to learn a little humility?\" I snapped back, a little churlishly.\n\nAlfred smiled and stroked his chin between his forefinger and thumb. He looked a little embarrassed.\n\n\"You do me a disservice, my lady,\" he said quietly. \"In my youth I was never rebellious.\"\n\n\"I know you were not alone in Chertsey,\" I said accusingly. \"Was Wilfred with you?\"\n\n\"There were a dozen or so,\" the prince admitted. \"My father did not trust me on my own. They lodged in the town; I lived at the abbey.\"\n\n\"And on the bridge - the others got away, but you were captured?\"\n\n\"I sent them away before I lit the fireboats,\" he said with a sigh. \"I was too busy being the hero - I did not watch my back. Sigbehrt discovered me.\"\n\n\"And the rest that you told me is true?\" I gave him a piercing look.\n\n\"It is,\" he nodded.\n\n\"And when you heard Sigweard talk of you accompanying them to my father's castle?\" I prompted.\n\n\"It was a strange decision. But if they had left me in Chertsey Jail, my men would have rescued me easily - we had men on the inside in our pay. Of course, my father would have demanded I return to Wessex - had he found out,\" he chuckled.\n\n\"But you signalled to them to hold off and to shadow you to Morden Castle?\"\n\nAlfred nodded.\n\n\"We knew of Sigweard - we had our suspicions. Our spies had been following him for a long time - checking on who he was meeting, the messages he was sending.\"\n\nI looked at him in surprise.\n\n\"Our network runs deep - not just in Surrey,\" he said. \"But you must be careful of informants - sometimes they tell you what you want to hear and not how the land truly lies.\"\n\n\"And when did you realise they were in league with the Vikings? Sigweard and Sigbehrt, I mean.\"\n\nAlfred frowned, as if thinking hard.\n\n\"We did not know for sure - we thought they might be working for King Beohred - but he is too foolish to conceive such intrigue. Sigweard covered his tracks well - Sigbehrt was a little looser in his talk.\"\n\n\"So that night, when we spoke on the castle walls and you warned me - you did not know what would happen?\"\n\nAlfred shook his head.\n\n\"I did not know for certain until someone tried to lock me in my room that night. But long before that it did not feel right - the prisoners were too well treated by the Chertsey guards - they were fed better rations than the soldiers.\"\n\n\"And did you know that Sigbehrt was still alive when we left my bedchamber?\" I could hear the seriousness in voice.\n\nThe prince hesitated.\n\n\"My lord, do not lie to me,\" I warned.\n\n\"It is true - I knew he was alive,\" Alfred admitted. \"I thought he might reveal the conspiracy if he survived.\"\n\n\"Then why did you not tell me?\" I snapped, my anger rising. \"You could have revealed yourself as soon as we left Bonham Castle. You put my life in danger!\"\n\n\"I am sorry, Elspeth,\" he said, his voice now a little strained. \"But I wanted to... I wanted to know you more as Cedric. I knew that you would change if you found out who I truly was.\"\n\n\"Is this a game to you?\" I shouted, exploding with rage. \"You're playing your silly dress-up pantomime while my father fights for his kingdom! Laughing at my family while you put our lives in danger?!\"\n\n\"Elspeth, I do not mock you,\" he said sharply. \"This is a time of utmost seriousness - these islands are in grave peril. That is why my brother has marched west from Kent - he has recaptured Morden Castle - the Vikings cannot now escape towards the north. My father, King Aethelwulf, brings his army from Wessex. My family fights side-by-side with yours.\"\n\n\"My family?\" I spat. \"And what have you done with my mother?\" I demanded. \"Where is she?\"\n\nAlfred gave a wry smile.\n\n\"She is lodged in a swineherd's cottage in Abinger, with the worst cook in the Wessex army for company. No one will find her. The pigs smell, the beds are hard, the food is inedible - she complains all day - she could not be happier.\"\n\n\"So we are both your prisoners,\" I said flatly, shooting him a look of utmost contempt.\n\n\"Prisoners?\"\n\n\"You keep us from my father, so he will do your bidding?\"\n\n\"Elspeth - you are not my prisoner,\" Alfred forced a laugh.\n\n\"Then I demand you call your man and have him escort me to my father's camp!\" I barked.\n\n\"My lady, it is late. Would it not be better to go to your father in the morning?\" he protested.\n\n\"Call your man now!\" I commanded.\n\nAlfred said nothing, but rose and walked across to the table in the centre of the tent. He picked up a small bell, but before he rang it, he turned and looked back at me.\n\n\"Tell me Elspeth,\" he said slowly. \"What will your father do when you arrive at his camp?\"\n\nI felt my stomach turn over - I had a very clear idea of what my father would do.\n\n\"He will send you immediately to your mother. And that will hardly be a joyous reunion,\" Alfred smiled mischievously.\n\nHe was right - I was trapped. Remaining here was the lesser of two evils.\n\nI hesitated, unwilling to concede.\n\n\"So you wish me to stay here - to do what - to attend to the injured in the infirmary?\" I asked.\n\nAlfred turned round to face me fully, a look of surprise on his face.\n\n\"If that is your wish,\" he said slowly.\n\nHe paused.\n\n\"You see, I am a careless prince,\" he said quietly, raising his hand to his forehead. \"I could have sworn this morning that when I went to visit you, I was carrying a quiver of arrows and a bow. And now I cannot find them anywhere - I must have left them under your bed.\"\n\nHe gave me a meaningful look.\n\n\"Perhaps you found our archery range - on the west side of the camp? It is quietest early in the morning, while the men are at their breakfast. But maybe...\" Alfred's voice trailed off.\n\n\"You wish me to fight?\" I asked, amazed.\n\n\"Do you?\"\n\n-\n\nI slept fitfully that night, tossing and turning - furious at Alfred's deception and livid at my failure to see through his disguise. But no matter how hard I berated myself, I felt a grudging admiration for him - luck was always on his side.\n\nMy thoughts were still churning in my brain as the dawn light began to creep under the canvas. I stared at the bow and quiver of arrows which he had left for me. There was no point trying to sleep any longer and, if I really was to fight for my country, I would need to put in some practice.\n\nThere were a few soldiers moving around as I made my way stealthily to the archery range. I passed the fire in the centre of the camp, where the cooks were beginning to prepare breakfast. The range was at the west side, just as Alfred had described it - eight targets set side-by-side at the end of a long shooting alley. I set the quiver on the ground and stared down the painted circles - they seemed a very long way away. Doubts began to creep into my mind - I was very glad I was on my own - no one was watching me - I had visions of my arrows falling short.\n\nI took my stance, lining my shoulders up with one of the targets. I fitted a bolt and lifted the bow, taking aim. I took a deep breath and loosed the shaft. It flew forwards, unwaveringly straight and, to my surprise, it stuck fast at the base of the target.\n\nI fired another and another - each time my aim improving, until the final arrow buried itself in the very centre of the circle.\n\n\"So, they were right,\" said a voice behind me. \"You are the finest archer in Surrey.\"\n\nI spun round - it was the prince, leaning against the side wall of the range.\n\n\"My lord,\" I gave a low curtsey and lowered my eyes.\n\n\"Elspeth,\" he insisted, \"my name is Alfred. And no Princess of Surrey should ever bend her knee before me.\"\n\nHe looked beyond me to the target.\n\n\"Your aim is good,\" he said.\n\n\"The bow is strong, and the arrows are true,\" I replied, my cheeks reddening a little.\n\nI turned back and took aim again. The shaft flew straight and landed beside the others at the centre of the circle.\n\nI looked over my shoulder. Alfred looked impressed.\n\n\"Have you come to watch or are you going to shoot?\" I snapped.\n\nAlfred laughed.\n\n\"I fear I will embarrass myself against a great marksman such as yourself,\" he replied.\n\n\"I insist,\" I said, standing my ground and pointing to the mark next to mine.\n\nThe prince gave a gentle shake of his head, but lifted the bow from his shoulder and set an arrow against it. He held the string taut and loosed the bolt towards his target. It flew away from him and landed just outside the edge of the circle. He shook his head.\n\nI smiled in triumph as a wave of euphoria surged through me; but at the back of my mind, a voice was screaming. Wasn't it obvious? He had deliberately missed.\n\n\"I am not as skilled as you, Elspeth,\" he said feigning embarrassment. \"I could not practise in Chertsey.\"\n\n\"Have another go,\" I said, encouragingly. \"You have time now to improve your aim.\"\n\nAlfred shook his head.\n\n\"We must walk,\" he said quietly. \"I have something to show you. Will you come with me?\"\n\nI slung my bow over my shoulder and followed him out through the main camp gate. We walked down the hill a little way until the woodland opened out to let us view the panorama below.\n\nThe two of us sat down on a fallen tree trunk.\n\n\"That is where you were,\" Alfred said, pointing to a small group of burnt-out buildings at the edge of the plain below us.\n\n\"That is Aclea?\" I asked, surveying the ruins of the village.\n\n\"It was. There is not much left of it now.\"\n\n\"What happened to them all?\" I asked. \"The traitors, I mean.\"\n\n\"Most we killed,\" he replied, \"but a few escaped.\"\n\n\"And Sigbehrt?\"\n\nAlfred shook his head. \"He was not there.\"\n\n\"He left to join the Vikings at Bonham Castle,\" I replied. \"He may still be there.\"\n\n\"Or perhaps he has gone south.\" Alfred pointed to the far edge of the plain. \"In yonder forest the Earls of Lewes and Portslade are assembling an army. They mean to join with the Vikings against your father.\"\n\n\"Portslade?\" I asked. He was the most powerful of the Sussex earls and his harbour was the largest in the kingdom.\n\n\"Yes,\" Alfred nodded. \"He wants to trade with the Vikings, not to fight them.\"\n\n\"And Lewes? Surely he is no great supporter of this alliance?\"\n\nAlfred gave a wry smile. \"The Vikings have stolen his livestock. They have burnt his crops and raped his women. There are many on the Sussex side who hate the raiders - Lewes especially.\"\n\n\"So can you turn them? Persuade them to switch sides and fight with you.\"\n\nAlfred shook his head slowly.\n\n\"King Oslac of Sussex rides north,\" he replied. \"A group of Surrey traitors have attended his court; he has heard their treacherous scheme. He will lead his army into battle against us. Lewes will not turn against him. And Portslade is no friend of Wessex - he eyes our harbour at Portsmouth with jealously.\"\n\n\"What happens if they defeat my father?\" I asked slowly. \"I mean obviously the Viking raids on Sussex will stop, but who will take the Surrey throne?\"\n\nAlfred laughed.\n\n\"That is the question! Sigbehrt thinks it will be him - that he will rule as regent. He plans to make the kingdom independent once more - he thinks he can beat the Vikings and King Oslac each in turn.\"\n\n\"But he cannot,\" I said quietly.\n\n\"He thinks that Southwark, Kingston and Chertsey will be enough to satisfy the Vikings - but it will only whet their appetites.\"\n\n\"And if the King of Sussex sees the invaders moving south, he will be forced to strike again.\"\n\n\"King Oslac will take your father's throne himself - he will not give it to Sigbehrt. There will be no reward for the traitor.\"\n\n\"And Oslac,\" I asked slowly. \"Does he know you are here? Does he know that the Wessex army marches to join my father?\"\n\nAlfred gave an exaggerated shrug.\n\n\"If I know where he is, then he knows where I am,\" he answered. \"The spies are everywhere - most have a foot in both camps - they serve the ones who pay the most.\"\n\n\"So there will be a battle,\" I said quietly. \"Four armies will fight for the future of this land.\"\n\nHe nodded. \"Blood will be spilt, men will die, but perhaps in the long run, it will bring us peace.\"\n\n\"And your father's army? When will it arrive?\"\n\n\"This afternoon. They camped last night at Shalford. My father will not force the pace, but it is a march of four hours at most.\"\n\n\"And you wish me to join the company of archers?\" I asked, still staring out over the plain.\n\nAlfred took a deep breath.\n\n\"Our archers are young,\" he explained. \"They are hardly men - fourteen or fifteen years mostly. They have the strength for the bow and their eyesight is keen...\" he hesitated. \"But they have never fought before. Perhaps they lack a little courage.\"\n\nI turned to look at him. \"You wish me to mother them?\" I asked, feeling perhaps a little insulted.\n\nThe prince shook his head. \"I wish you to lead them. You will inspire them. You will inspire their confidence and give them faith that we will prevail.\"\n\n\"You wish me to lead them?\" I echoed quietly.\n\nHe nodded. \"I would not ask you if I felt you could not.\"\n\n\"Then I shall do what you ask, Alfred,\" I said simply.\n\n\"You must promise me one thing.\"\n\nI nodded.\n\n\"You must not leave your post - no matter what unfolds on the field of battle. You must stay at your position unless all is lost, in which case you must lead your men to safety.\"\n\n\"Then I shall,\" I replied boldly. \"I shall lead the archers of Wessex, to defend my father's kingdom!\"\n\n-\n\nWe were in our places by the time the dawn began to break, watching from the undergrowth as the first rays of the sun's light began to illuminate the plain and the burnt-out village below us. Beneath us, at the foot of the Green Mountain, Alfred waited with his half of the Wessex army - his ambush set. King Aethelwulf had gone north, with my father's forces, ready to attack the Vikings at Bonham, to raze the castle to the ground and to force the invaders to flee towards us.\n\nThis was the waiting - the worst part - I'd heard old warriors talk of it before - you'd be alert for hours on end, never knowing when the enemy would appear. I took a deep breath, trying to calm my thumping heartbeat - I had to be confident, to hide my fear - the young archers stretched along the hillside were looking to me.\n\nI raised my head to the horizon, peering into the far distance. The Sussex army was hiding there, waiting for the moment to surge north to join their new allies - the Viking aggressors and the Surrey traitors. But our trap was set - we were ready for them - where the Plain of Aclea narrows to squeeze between the brooding forest of the Holmwood and the steep slopes of the Green Mountain - that was where we watched and waited.\n\nThe two kings would be starting their attack now - it had to work - they had to drive the Vikings out of Bonham Castle. Aethelstan of Kent had blocked the way northwards - the invaders would have to flee towards us - we would pick them out with our arrows.\n\nI glanced at the young lad crouching next to me. His knuckles were white where he gripped his bow tightly.\n\n\"You are fearful?\" I asked cautiously.\n\nHe shook his head vigorously.\n\n\"No, my lady,\" he replied emphatically. \"I trust Prince Alfred - he will lead us to victory.\"\n\n\"He will,\" I smiled back - I trusted him too. \"He will!\"\n\nA shout sounded - over to my left, at the far end of the rows of archers. I looked up. Entering the plain at its northernmost point was a group of forty or fifty riders. They were too far away for me to see their faces, but I knew who they were - these were the Surrey traitors, the coterie of minor lords who'd thrown in their lot with Sigbehrt the night that Morden Castle fell.\n\nInstinctively I rose to my feet and fitted an arrow to my bow. Either side of me my company of archers stood also. This was the moment we had been waiting for - it was up to me to fire the first shot.\n\n\"Take aim!\" I called - a few seconds longer and they would be in range - our timing had to be perfect.\n\n\"Fire!\" I shouted.\n\nA shower of arrows flew as one towards the traitors. The horses panicked, taken by surprise, some throwing their riders as they broke their formation. We loosed another volley, then another, and another. Screams of confusion reached our ears.\n\nA long loud blast of a trumpet resounded around the hillside.\n\n\"Cease!\" I called, holding up my hand - although my company well knew what the order meant.\n\nNow, breaking cover beneath us was another group on horseback, the first detachment of Alfred's men charging towards the Surrey rebels. In a flash they were upon them, hacking away as the traitors wailed for mercy.\n\nOut of the corner of my eye, I saw three riders escape the confusion, heading south away from the ambush, fleeing towards the Sussex border. Instinctively I raised my bow and let fly a single bolt. It flew, straight and true, burying itself in the rump of the rearmost horse. The animal reared, sending its rider flying backwards with a cry of terror. I fitted a second arrow and aimed for the two remaining fugitives - but it was hopeless - they were too far away. I watched them flee southwards, gritting my teeth in frustration - without doubt they'd reach King Oslac.",
        "The dust was clearing around the main ambush. The Wessex detachment was returning to the shelter of the trees, bringing the captured horses back with them. Behind them the bodies of the Surrey rebels were strewn across the ground. I felt my stomach turn over as I picked out their shields - these were young men - no more than five years older than me. Most I'd grown up with - I knew them all from my father's court - I'd even danced with some. But Alfred's strike had been clinical - he had made them pay for their treachery.\n\nThere was another blast from the trumpet - a shorter one this time - a warning note to gain our attention. The kings' attack had worked - Viking men were streaming southwards, running in fear of their lives. I watched as the leaders reached the fallen Surrey traitors. They stopped, bewildered by the scene in front of them - that was our cue. Again we archers stood as one and fired volley after volley of arrows, scattering the invaders as more poured through the narrow pass onto the plain. They were pinned in place - ripe for the taking - Alfred's men would cut them down. I watched the Wessex warriors ride out from the cover beneath us, a euphoric confidence rising within me. Was this too easy?\n\nBut what was this, charging towards us, sending up a great dust cloud at the south of the plain? My stomach turned over - it was the Sussex Army - heading to engage us. My heart sank. This was what Alfred had been hoping to avoid - now he'd be fighting on two fronts - caught in the middle between his enemies.\n\nWith a crash the three armies came together. I saw Alfred's standard charging boldly towards the King of Sussex and with that, he was hidden from view by the dust.\n\nHour after hour the warriors clashed, spilling the blood of those who opposed them. Heart in my mouth, I watched each time Alfred rode out, anxiously awaiting his return as others took his place on the front line. A steady stream of casualties was ferried from the fighting, most limping, some stretchered, carried past our position and up to the infirmary. I wondered if I should go to help the nurses, but then I would see the prince riding back into battle and I was glued to my post once more.\n\nIt was noon when King Oslac made his final charge, thundering towards where Alfred and his men were in the thick of the battle. They were off their horses now, fighting sword-to-sword, man-to-man - this was going to be brutal. I couldn't watch - I buried my head in my hands and prayed.\n\nA cheer erupted from the archers either side of me. I looked up in disbelief. Alfred was returning from the battlefield, holding the flag of Sussex triumphantly in his hands. Behind him King Oslac was sprawled on his back, left for dead by his fleeing supporters.\n\nOvercome by relief and giddy with excitement, I ran downhill to where Alfred's army had gathered, ready to congratulate my prince. But as I reached the bottom, I saw him hand the Sussex standard to a page, leap onto a horse and charge off in pursuit of those retreating.\n\nImpulsively I grabbed the reigns of the nearest mount and leapt on top of it. A groom saw me and shouted for me to stop, but I ignored him. I wanted to be with Alfred, to be alongside him as the final victory was won - to prove to him and to my father that the Princess of Surrey was a worthy warrior.\n\nImpetuosly, I dug my heels into the horse's side and galloped across the battlefield. To my left, the Vikings were battling hard against the united army of the two kings; to my right, the Earls of Lewes and Portslade were leading the Sussex army in full retreat. But Alfred was ahead of me, chasing eastwards into the dark forest of the Holmwood.\n\nRashly, I pushed caution to the side and steered my horse into the trees. Above me the branches grew close, blotting out the light of the sun as the undergrowth became thicker and thicker. By now, I'd lost sight of the prince, riding was now impossible - any further and I would have to go on foot. I tethered the horse to a tree and set determinedly forwards, tripping over roots and dodging branches as I ran to follow my man.\n\nThe sky was appearing above me again as the trees gave way to a large circular clearing. For a moment I paused, staring closely at each of the tracks through the grass, wondering which Alfred had chosen.\n\nSuddenly, I felt a cold shadow on my back. An arm reached around my body from behind and the cold steel of a long-bladed dagger pressed tightly against my throat.\n\n\"Ah, my lady, how nice of you to join me! What a shame our last meeting was so abruptly curtailed.\"\n\nI knew that voice too well - Sigbehrt.\n\n\"Let go of me!\" I yelled, struggling against him. \"Alfred! Alfred!\"\n\n\"That's right - call for your prince - why not? Scream for your life! Bring him to me, so I can kill him!\" Sigbehrt cawed.\n\nI tried to wriggle free from his grasp, but it was hopeless. I closed my eyes in despair - this was my fault - I'd put Alfred's victory and my own life at risk - all because of my foolishness.\n\n\"Your fight is not with the princess,\" said a voice behind us. \"Let her go - I am the one you want.\"\n\nRoughly Sigbehrt spun round, dragging me with him. Alfred was standing there alone, sword in hand.\n\n\"The King of Sussex died an honourable death - a warrior's death,\" the prince taunted. \"And you, Sigbehrt, Thane of Chertsey, would cower behind a woman to protect your skin?\"\n\nMy captor was getting angry, but still he held me tightly.\n\n\"How dare you insult me, scum of Wessex!\" he spat.\n\nHe began to back us away towards the edge of the clearing.\n\n\"If you follow me, I will kill her!\"\n\n\"So you would take your chance in the forest?\" Alfred goaded. \"The brave men of the Holmwood would tear you limb from limb - surely you would not risk it?\"\n\n\"The brave men?\" Sigbehrt mocked. \"The brave men? The men of the Holmwood are not brave! They are slow and stupid. Their spears are no match for a warrior's armour and I will break their clubs with my sword. They fear me - I do not fear them!\"\n\nA smile broke across Alfred's face.\n\n\"They are braver men than you, Sigbehrt, Thane of Chertsey. Tell me - what were you doing when your father needed you - when he was holding a dagger to King Frithwald's throat?\"\n\nI felt Sigbehrt make the slightest hesitation.\n\n\"You were meant to be directing the Vikings,\" continued Alfred mockingly. \"You were meant to show them the way. How many men were you meant to bring? You were not there when your father forced the king to abdicate! Where were you Sigbehrt, Thane of Chertsey? Where were you when your father needed you?\"\n\nSigbehrt let out a growl of frustration, pressing the point of his dagger more firmly against my neck.\n\n\"You were in my lady's bedchamber,\" continued Alfred, a look of disgust across his face. \"You could not wait! You meant to rape her while your father sealed your marriage in the room above - such loyalty you showed him!\"\n\n\"What do you know of my father?\" demanded Sigbehrt.\n\nThe prince smiled.\n\n\"I know your father too well - I watched him for a year - watched his lust for power as it poisoned him, watched his greed as it ate him from inside. I saw his treachery at work, watched as he hatched his plan, betrayed this land to the Vikings. It was a brilliant scheme - there was only one flaw...\" Alfred pointed directly at Sigbehrt. \"You!\"\n\nSigbehrt twisted as if hit by an invisible blow; Alfred took a step towards us, sword raised.\n\n\"Your father did not trust you,\" the prince continued. \"He knew you would abandon him - that your carnal lusts would get the better of you. He needed something to fall back on, a scapegoat to blame, an easy neck to snap.\n\n\"He thought a Benedictine would be perfect - that's why he took Cedric - that's why he took him to Morden Castle.\n\n\"But Cedric was not the person you thought he was - Cedric was no novice,\" Alfred paused for effect. \"Cedric was me!\"\n\n\"You?\" snarled Sigbehrt in disbelief.\n\n\"I was the one who waited on the bridge, who sent the fireboats against the longship, who brought my men to Morden Castle to buy the loyal Surrey guards more time. I was the one who freed the princess and laid you out cold on her bedchamber floor. Yes - I was the one who rescued King Frithwald and the queen from your father's sword.\"\n\n\"You?\" gasped Sigbehrt again, his body beginning to shake.\n\n\"It is curious,\" said Alfred, a little flippantly. \"That was what your father said, just before I watched him die!\"\n\nSigbehrt roared with anger and flung me to the side. He ran forwards, charging at the prince with his sword raised.\n\nBut Alfred was ready for him. The two blades met with almighty clash, flashes of metal catching the sunlight as they fought, blow after blow. Easily the prince had the upper hand - younger, fitter, taller, he danced around Sigbehrt, taunting him all the while as his foe's face grew redder and redder.\n\nSigbehrt charged again, but Alfred sidestepped, watching as the thane tumbled forwards onto the ground, losing his weapon as he did so. Calmly the prince reached down and picked up his opponent's sword, waiting chivalrously for him to regain his feet.\n\nI saw Sigbehrt's eyes dart around, appraising the situation. The clearing was empty - just the three of us - Alfred, him and me.\n\nThen he ran, sprinting forwards at full pelt, disappearing into the trees. Alfred watched and shook his head, as if deciding he was not worth following. He turned and looked at me, concern in his eyes.\n\n\"You are hurt?\" he asked.\n\nI shook my head. I rushed forwards and embraced him.\n\nOver Alfred's shoulder I caught the flash of steel charging towards us - Sigbehrt - with a dagger raised high above his head.\n\n\"Look out!\" I screamed.\n\nAlfred spun round. His sword lifted high. Cleanly the blade sliced through Sigbehrt's neck as the traitor lunged forwards. There was a final gasp and the severed head fell to the ground. It rolled away from us across the grass, the face a twisted grimace of horrified surprise, the lifeless eyes staring out in permanent defeat.\n\nSilence thundered through the clearing.\n\n\"He is gone,\" said Alfred quietly. \"The treachery is ended.\"\n\nThere was a shout from the edge of the clearing, \"My lord, my lord, you are not harmed?\"\n\nThe two of us turned; Wilfred of Romsey was running towards us at full pelt, closely followed by two other soldiers, dressed in the scarlet livery of the Wessex army.\n\n\"We have another body,\" Alfred said calmly, pointing to Sigbehrt's corpse. \"We should keep the head - the people must know that the traitor is dead.\"\n\nThe three men set to work on the torso, stripping it of armour and weapons.\n\nAlfred turned back to me with a smile.\n\n\"And now,\" he said, \"I think it is time.\"\n\nHanging by his side was a hunting horn, secured to his belt with a strap of leather - I had seen it that morning as we prepared for battle, but had thought nothing of it. He raised it to his lips and blew a single, deep blast, that rung through the forest, shaking the trees around us.\n\nFor a long moment nothing happened - nothing moved. Silence hovered above the clearing.\n\nThen, as one, the trees began to sway, the branches began to rock and the rustle of the undergrowth grew louder and louder until, all around us, five hundred men stepped in unison into the light.\n\nAlfred took a step forward.\n\n\"Brave Men of the Holmwood,\" he cried, addressing those around him. \"The hour has come - the traitor is dead - will you join with King Frithwald and rid this realm of the Vikings?\"\n\nA cheer rang out - each man shaking his spear above his head in vigorous agreement.\n\n\"Then I call on you now - defend this land from those who would take it - bring peace to your children and grandchildren - fight to protect those you love!\"\n\nAnother roar of approval rang out.\n\nAlfred turned back to face us; Wilfred was looking up at him in confusion.\n\n\"My Lord, we do not need these men. The fight is won - the victory is ours!\" the lieutenant protested.\n\n\"Aye Wilfred,\" the prince replied. \"We do not need them to win the battle, but we will need them to win the peace!\"\n\nIn that moment I knew I loved him - saw in his deep blue eyes his wisdom, his compassion, his love for all the peoples of our islands.\n\nAnd all around the clearing, the battle cries of the Men of the Holmwood rang loud - their blood was up, they were ready for war - they would follow the prince anywhere!\n\nAlfred lifted the leather strap from around his neck and pressed the horn into Wilfred's reluctant hands.\n\n\"My lord, w-w-what are you doing?\" he protested.\n\n\"Take it Wilfred! You lead the charge; they will follow the sound. Attack the Vikings from the south!\"\n\n\"Yes my lord,\" Wilfred replied, giving a slight bow.\n\n\"I will circle to the north, to join my father and King Frithwald. Now go! Go!\" He pointed through the trees in the direction of the battlefield.\n\nWilfred put the horn to his lips. He blew a long blast and began to run.\n\nI stood with Alfred as the fighters surged forwards, the sound of their battle cries ringing in my ears. Warrior after warrior streamed past until the final one had disappeared.\n\nThen there was silence again.\n\nAlfred turned. I followed his gaze.\n\nStanding at the other end of the clearing was the hermit, dressed in his robes of grey, holding his wooden staff.\n\nThe prince raised his hand in solemn greeting. The old man smiled, gave a low bow and melted back into the forest.\n\n\"Did he know?\" I asked.\n\n\"Know what?\" Alfred asked, a little mischievously.\n\n\"Who you were? Who you are? Did he know you were a Prince of Wessex?\"\n\n\"He did,\" Alfred replied.\n\nI looked at him pointedly.\n\n\"He told me that a prince would come from a far-away land,\" I said quietly. \"He was right - he could see the future in that pool!\"\n\n\"It is very easy to predict the future, if it is already in the past,\" Alfred laughed. \"I am sorry to say it - but I told him who I was. I sent him back to his people, to ready them for the fight.\"\n\nOf course he had - Alfred had been in control all along - why could I think otherwise?\n\n\"He said you would be a great king,\" I said slowly.\n\nThe prince gave a derisive snort. \"My brother Aethelstan will succeed my father - he is the elder by five years. I will be never King of Wessex.\"\n\nI said no more. The hermit had made one other prophesy, but now was not the time to reveal it.\n\nAlfred glanced down for the final time at the headless torso of Sigbehrt.\n\n\"He will trouble this land no more,\" he said simply.\n\nThe two of us turned and walked steadily back through the woodland, to the place where I'd stabled my horse. Above us the sun was filtering through the branches and the birds had started to sing again. The traitors' curse was lifting - Mother Nature was blessing the kingdom once more.\n\nWe paused at the edge of the trees, half concealed by the foliage, watching as the rabble of Holmwood men hurtled towards the exhausted army of Vikings.\n\n\"They will tell great stories of this day,\" said Alfred quietly. \"Their children and grandchildren will hear how they fought for King Frithwald.\"\n\nIn the far distance a single rider was approaching us on horseback.\n\n\"It is Alaric of Dibden,\" said Alfred. \"You must go with him. He will take you to the infirmary. Many men will be injured - you must help where you can.\"\n\nI looked up at him anxiously. \"And you? Where will you go?\"\n\n\"I must go to my father. We must end it now.\"\n\n\"I will do as you ask,\" I replied reluctantly. I could scarcely bear to be parted from the prince.\n\nWe walked back to my horse and I prepared to untie its reins.\n\nI turned to face him, my heart full of regret - I had put him in danger - I had made him fight Sigbehrt for my life.\n\n\"Alfred,\" I began, \"I am sorry, I...\"\n\nBut the prince was too quick for me. Gently he placed a finger on my lips to silence me, then tenderly, so very tenderly he bent his head towards mine and kissed me. His strong arms closed around me and pulled me softly into his chest. I squeezed him closer, crushing him against me, feeling the firmness of his armour against the soft linen of my uniform. He cradled my face in his hands and again his lips met mine, our tongues gently caressing one another in our first declaration of love.\n\nPanting we broke apart, staring deep into each other's eyes. We could hear hooves approaching now. Frantically we kissed once more. Then in one smooth single motion, Alfred lifted me onto my horse and led it out of the trees.\n\nAlaric of Dibden stopped before us, awaiting his instructions.\n\nAlfred looked me straight in the eyes.\n\n\"Go with him!\" he said. \"Go!\"\n\n-\n\nI'd expected a scene of utter chaos when I reached the infirmary tent, but to my surprise the small team of nurses was well organised and was processing the casualties as quickly as they arrived. Most were only lightly injured - cuts and bruises, which I could help to bandage, but a few had more serious wounds that required the attention of those who knew what they were doing.\n\nBy late afternoon, there was little more I could do, and I was considering finding a quiet corner where I could rest my feet, when the messenger arrived.\n\n\"My lord Alfred of Wessex requests you attend him most urgently, my lady,\" explained the page.\n\nA flash of panic ran through me.\n\n\"Is he injured, has he fallen?\" I asked anxiously.\n\nThe young lad smiled.\n\n\"No, my lady. He wishes to thank you for your service.\"\n\nIntrigued I followed him back down the Green Mountain towards the battlefield, unsure what I would find when I got there. As we descended towards the plain, we could see the victors' armies, standing together in a big circle - almost a thousand men together. My father's standard was fluttering in the breeze alongside the flags of Wessex.\n\n\"You should join them, my lady,\" said the messenger, gesturing to the assembled company.\n\nThere was space enough between the lines of men to let me push through to the front of the formation - those either side of me gave way as they realised who I was.\n\nThe Kings of Surrey and Wessex were seated on thrones at one side of the circle. \n\nStanding next to them was one of the captains from the Wessex army. He was reading aloud from a list, calling his men one-by-one to receive honour and thanks from the two monarchs. Archers and foot soldiers were each given a coin, but those in higher ranks were receiving titles and land. Each commander took their turn, bringing forward those under their command who had distinguished themselves in battle, before kneeling in front of Aethelwulf and my father for their own reward.\n\nAlfred was called. I listened and watched as each of his men approached the kings in turn - many I recognised from the camp, but a few I did not. Alaric of Dibden was given a manor in Wiltshire and Wilfred of Romsey new lands in Berkshire.\n\n\"Your majesties,\" called the prince in a loud, clear voice. \"I present Princess Elspeth of Surrey.\"\n\nMy eyes widened in surprise as all around me the soldiers burst into applause. Alfred smiled and motioned me forwards. Bewildered I approached the thrones and prepared to kneel, but as I did so, King Aethelwulf rose from his feet and placed his hands on my upper arms.\n\n\"My lady,\" he said with a kindly smile, \"a Princess of Surrey should not kneel before a King of Wessex.\"\n\nA page stepped forward, carrying a scarlet cushion, edged with gold. There was something resting on it - a necklace. Delicately the king picked it up. I could see it clearly now, a gold chain with a square medallion - a red enamelled design, bearing the golden lion of Wessex.\n\n\"My lady, you are born to serve your father, but I thank you for your service to my people. Know that as you wear this pendant that you will always find friends in the House of Wessex.\"\n\nI lowered my head and the king placed the chain around my neck, fastening it behind me.\n\nThunderous applause rang out around me. I curtsied low and looked first to my father and then to Alfred. Both men were smiling back, faces beaming with pride - my heart leapt.",
        "I took a few steps to the side.\n\n\"And now,\" intoned King Aethelwulf, \"I call Alfred, Prince of Wessex.\"\n\nI watched the prince kneel before his father. There'd be an earldom or a dukedom for him - I was sure. Perhaps he'd be sent to Berkshire with Wilfred, to watch the border with Mercia.\n\nBut no, what was this? Aethelwulf was signalling again to the courtier. Two men were approaching, wearing the dark green colours of the Sussex army. I blinked - I knew exactly who they were - the Earls of Portslade and Lewes. What on earth were they doing here?\n\nThe page was coming forward again. A gasp went up from the men, for resting on the green cushion that he carried was a golden crown. My heart skipped a beat.\n\n\"Alfred of Wessex,\" intoned King Aethelwulf. \"You are called to the throne of Sussex. Are you willing to take the Oath?\"\n\nA deafening roar of approval sounded around the assembled companies. Alfred's reply was lost in the cheering.\n\nThe king held up his hand silence and asked the question again.\n\n\"Alfred of Wessex - are you willing to take the Oath?\"\n\n\"I am,\" the prince replied, still kneeling before his father.\n\n\"Do you solemnly promise and swear to govern the Peoples of Sussex according to their respective laws and customs?\"\n\n\"I solemnly promise,\" Alfred answered.\n\n\"Will you to your power cause Law and Justice, in Mercy, to be executed in all your judgements?\"\n\n\"I will.\"\n\nKing Aethelwulf turned and lifted the crown from the cushion.\n\n\"Then Alfred, Prince of Wessex - in the presence of these here assembled - I crown you King of Sussex!\"\n\nA second roar of approval sounded, even louder than the first. I shot the two Earls a glance - they were applauding too as Alfred rose to his feet. He looked across at me and I smiled back. He turned to acknowledge the support of his men, his golden crown glinting in the early evening sun.\n\nThe new king held up his hand for quiet.\n\n\"Your majesty,\" he said, addressing his father again, \"I am humbled by your charge. I pledge to serve my people justly and faithfully for as long as I live.\" He paused. \"But there is one thing I desire that you have no power to give.\"\n\nAethelwulf looked up sharply and furrowed his brow. Alfred turned and extended his arm towards me. I walked, no ran to his side, gleefully accepting his hand. I knew what was coming, my heart was pounding.\n\nAlfred turned to my father.\n\n\"King Frithwald of Surrey,\" he began, his voice betraying a hint of nervousness for the first time. \"Most humbly I request your permission to take your daughter, Princess Elspeth, as my wife.\"\n\nMy father broke out into the broadest smile.\n\n\"My daughter,\" he asked, turning to me, \"is it your will that you be married to this man?\"\n\n\"It is your majesty,\" I replied, giving a long, deep curtsey.\n\n\"Then I give you my blessing. Let the houses of Sussex and Surrey be joined!\"\n\nAlfred and I embraced as the cheers sounded around us.\n\n\"Thank you,\" he whispered in my ear.\n\n\"I love you!\" I whispered back.\n\n-\n\nThere was a feast that night - the largest I'd ever seen. A giant fire blazed in the centre of the camp and all around was music and dancing as the beer flowed freely.\n\nThere were many to meet - too many - all wanted to offer their congratulations to the new king and his future queen - to pledge their loyalty, to make an impression. There were the veteran comrades of Alfred's father, the nobles of Wessex - my fianc\u00e9's boyhood peers, now knights in their own right - and the men of the Sussex army, desperate for their new leader's approval. A few names I recognised, but most washed over my head in a jumbled torrent.\n\nI looked across to the other side of the fire, to where the archers were celebrating in the highest spirits. That morning they'd been but boys, fearful of the battle ahead. Now they were warriors - they'd return to their families as conquering heroes. I smiled to myself - they too had become the greatest of men.\n\n\"Go to them,\" I heard Alfred whisper in my ear. \"They are your army. Your must share your victory with them.\"\n\nHe planted a gentle kiss on the side of my head.\n\nThe archers fell silent, bowing low as I approached. I felt a tinge of regret - hours earlier I had been their elder sister - but now a chasm had opened between us that could never be bridged. They were nervous, wary even. But I felt them relax a little as I congratulated each one of them in turn, thanking them for their service, telling them how proud their parents would be.\n\nI turned away from the group and caught sight of Alfred talking to the two Sussex earls - laughing and joking as they sat either side of him.\n\n\"He puts people at their ease so quickly,\" said a voice. \"He gets it from his mother.\"\n\nI spun round. King Aethelwulf was standing behind me. Immediately I sank into a low curtsey.\n\n\"Your majesty,\" I murmured reverently, averting my gaze from his face.\n\n\"Elspeth,\" the king replied with a gentle laugh, \"you have no need to bend your knee before me!\"\n\n\"I must thank you for all that you have done for my country and my family,\" I babbled nervously.\n\nKing Aethelwulf smiled gently. \"I have done little,\" he replied. \"It is your fianc\u00e9 who rightly receives the thanks and praise.\"\n\nI blushed.\n\n\"Alfred has chosen well,\" he said. \"He cares for you deeply - I can see why. I am honoured to call you my daughter.\"\n\n\"You have honoured him greatly with a kingdom of his own,\" I answered, trying to deflect the king's attention away from myself.\n\nAethelwulf looked across the circle of revellers towards his son.\n\n\"It is indeed an honour...\" he said carefully, placing his hand on my shoulder, \"...but it is a great responsibility. The shores of Sussex are ill protected; the Vikings will seek their revenge. There are defences to build, armies to train... There is little time to celebrate. Alfred must get to work.\"\n\nHis voice trailed off as he saw the reaction in my face - in the heady exuberance of love and celebration, I'd not stopped to consider the challenges ahead.\n\n\"But the new king is ready,\" Athelwulf continued quickly. \"And he will not do it alone - he will have my support through it all.\"\n\n\"It is a great burden,\" I said quietly.\n\n\"It is a great responsibility,\" he replied. \"But Alfred is prepared for the task - I can teach him no more. For too long he has hidden in Chertsey, playing his spy games, sending secret messages to his brother. Now he must step into the light - now he must command like a king.\"\n\n\"You did not send him? To Chertsey, I mean?\"\n\nThe king rubbed his chin between his forefinger and thumb - I'd seen Alfred do the same - like father, like son.\n\n\"He wanted to live in a frontier town. He thought there'd be gossip and intrigue - he'd learn much of the world.\"\n\n\"Oh,\" I said, surprised. Alfred had led me to believe that the posting was his father's idea.\n\n\"The abbey was our compromise,\" Aetherwulf continued. \"I thought the monotony would bore him - that he'd be back in Winchester in a month - with his tail between his legs!\" He chuckled. \"Some hope! The next thing I heard, he'd killed the local thane, rescued the Surrey royal family and was demanding 800 soldiers be sent to Holmburgh Hill!\"\n\nI couldn't help but laugh.\n\n\"But you knew there would be a battle,\" I answered. \"You knew you'd have to face the Vikings soon,\" I said.\n\n\"I thought it would be south on our coast - not east,\" the king replied slowly. \"But I was wrong and my son was right.\" He paused. \"I am old - the younger generation is coming to the fore - perhaps I have been in this game too long.\"\n\nI looked up at him alarmed. I wanted to ask him what he meant, but he looked away.\n\n\"Ah - that is your father,\" he said pointing to King Frithwald at the far side of the fire. \"I must leave you to your men.\" He indicated the archers with a nod. \"I have much to discuss with him.\"\n\nI watched him retreat into the crowd, before turning back to seek out my prince. But my fianc\u00e9 had disappeared. I looked anxiously among the revellers at the far side of the fire - I was beginning to get a little worried. Portslade was missing too - had he dragged the prince into the woods and slit his throat?\n\nThere was a tap on my shoulder. I spun round. It was Alfred, holding a finger to his lips. Silently he took my hand and lead me away from the sounds and smells of the feasting.\n\nThe moon was rising as we stood hand-in-hand, looking down to the plain below. He drew me to him, encircling me with his arms, holding me close, letting me feel his body against mine. He placed a soft kiss on the side of my head. My heart pounded with excitement. I smiled back at him that gooey delight of the first flush of love.\n\n\"Will you sit with me awhile?\" he asked softly.\n\nSilently, we sat together on the fallen tree trunk, arms behind each other's backs. I rested my head against his shoulder and he kissed me lovingly on the side of my head.\n\n\"I am the happiest man in the world,\" he said quietly.\n\n\"And I am the happiest woman,\" I replied.\n\nThe brightest, widest smile lit up his face.\n\n\"You are sure?\" he asked.\n\n\"I have loved you since the moment I saw you,\" I said.\n\n\"You mean you loved Cedric?\" he teased.\n\n\"Cedric was nice,\" I admitted, \"but he was very serious. Alfred is much more fun!\"\n\nHe laughed and I kissed him on the cheek.\n\n\"Look yonder,\" said my fianc\u00e9, pointing to the horizon. \"That is our kingdom. Never have I set foot there, but tomorrow, I must ride into Chichester at the head of the Sussex army to take my place as king.\"\n\n\"And will I come with you?\" I asked eagerly.\n\nAlfred shook his head sadly. \"I am sorry Elspeth - you must go north with your father. You must be at his side when he enters his castle at Morden. I may not see you again before our wedding day - that will be many months away.\"\n\nThat hit me like dagger to my heart. I opened my mouth to protest, to insist that I would not be parted from him. But I knew he was right - there were customs to be followed, protocols to be observed, rules to be obeyed - the marriage of a king and princess from two royal houses was not straightforward - we too were bound by the ancient law.\n\nBut tonight was different. An idea was forming in my mind. I glanced around to check - was anyone watching? No, we were definitely on our own. No one was looking for us - they were too busy celebrating to worry where we were.\n\n\"Alfred,\" I asked cautiously, \"will you lie with me tonight? Will you let me know you as a lover before I know you as a king?\"\n\nHis eyes widened with surprise and a smile crept over his face.\n\n\"You want to?\" he asked, surprised.\n\nI nodded. \"Please Alfred - let me lie with you tonight!\"\n\nI kissed him tenderly on the cheek.\n\nHe brushed a stray strand of hair away from my face and looked deep into my eyes. Then, with a conspiratorial smile, he held a finger to his lips, stood and offered me his hand.\n\nStealthily we crept around the outside of the camp, slipping past the guards, skirting the summit of the Green Mountain. The trees around us closed in, casting deep shadows, concealing our flight as we began to descend again. Sure-footedly Alfred led the way northwards. Instinctively, I knew where he was taking me - back to the hermit's cottage, our place of sanctuary - this was the path he'd taken each night, when he returned to us as Cedric.\n\nWe reached the clearing by the cottage. A soft mist was rising from the magical pool - embracing us - as if Nature herself was blessing our union. Silently we stood, hand-in-hand, watching the moonlight dance as it played across the water.\n\nNow it was my turn to take the lead - to show my prince what I wanted. Cautiously, I pushed open the front door of the cottage, heart in my mouth - half expecting a troop of Vikings to be hiding there. But inside the building was dark and empty - as austere as the day I had fled.\n\nAlfred picked up an oil lamp from the table and struck a flint. The flame grew strong, casting a yellow light around us, picking out the bare stone fireplace, spreading a little warmth through the humble building.\n\nHe lit a second lamp and handed it to me. I took his hand and led the way, into the room where he'd slept each night. I remembered the last time I was here - how I'd brushed my fingers through Cedric's hair, seen that flash of gold, revealed the true man concealed beneath. Back then, I'd panicked - but now I understood. He was the one I'd love for the rest of my life - he was the one who'd been waiting for me.\n\nMethodically I began to undress him, unfastening his belt from his waist and freeing the hem of his tunic. Cautiously I pushed the fabric upwards, exposing the ridges of his chest beneath. His hands reached down to grasp the sides of the garment, lifting it up and over his head, tossing it to the side.\n\nMy jaw dropped. The most perfect man stood before me.\n\nFrom the blond curls of his hair to his fine-chiselled chest, his body glowed with a brilliant bronze lustre. Hesitantly I reached forwards, fearful the vision of beauty might vanish beneath my fingertips. Lightly I traced the outline of his muscles - feeling the firm coolness of his skin - in awe of his masculine form. He opened his arms and I stepped willing towards him, letting him fold me into his secure embrace. Gently I laid my head against him, listening to the steady rhythm of his heart as a tidal wave of love swept over me.\n\nBut what was that? Something hard and bone-like, digging against my belly as I squeezed myself against him. I'd removed his belt and sword hadn't I? In my confusion I pushed away a little - something was caught in the front of his trousers - a long shadow cast where the fabric was tented.\n\nRealisation dawned - I'd seen the stallions when they ran with the mares!\n\n\"Is that... Is that...?\" I asked, my eyes wide with excitement.\n\nA shy smile crept across Alfred's face.\n\n\"Yeah, it is,\" he nodded, a little embarrassed.\n\n\"Can I..?\" I whispered.\n\nI stared in fascination at the stretched material - the beast beneath was straining to escape.\n\n\"Can I touch? Can I feel?\" I asked, my nervousness catching in my throat.\n\nI didn't wait for a reply. Tentatively I reached downwards and rested my palm against his length. He was hard - exquisitely hard! And long - far longer than my hand. Above me, Alfred let out a strangled moan, his body twitching as I made contact.\n\n\"Is that good?\" I asked doubtfully, looking up at him for guidance.\n\nHe rested his hand over mine, moulding my palm more firmly around his length.\n\n\"Like that,\" he whispered.\n\nI closed my eyes, letting my fingers ripple around him as I contemplated his girth. He felt so big - would he really fit inside me? My confidence was deserting me - I had no idea what I was doing. I wanted to hold him, to stroke him, to make him feel good - but where should I even start? Should I undress him? Slip my hand inside his trousers? Or would that be pushing him too far?\n\nAnd what of me? The ladies-in-waiting would prepare a royal bride for her wedding night. She was supposed to wait beneath the sheets, her modesty hidden from her husband's eyes. I was clueless - I had no idea what to do. Should I be naked? Should I lie on my back? There was no one to ask - no one to guide me - only him.\n\nBut gentle Alfred saw my hesitation, saw the doubts that overwhelmed me, saw my confusion as I looked into his eyes. Lovingly he brushed a few stray strands of hair from my face and cradled my cheeks in his hands.\n\n\"Please,\" he said simply. \"I will take care of you. Let me undress you.\"\n\nTenderly he kissed me, lightly brushing his soft lips against my skin, letting his tongue caress my own, stirring my heart as it beat in time with his.\n\nDelicately his fingers unfastened the gold chain of my necklace, lifting the proud Wessex lion from my chest. He turned to set his father's gift behind him. Another tender kiss, his hands running down my sides, gathering the fabric in his hands.\n\nSlowly, very slowly, he inched the garment upwards, keeping his eyes fixed on mine. Uncommanded, my arms raised above my head as he lifted my tunic clear.\n\nThe moment I was free, I fell against him, anxiously hiding my body from his eyes. My breasts were still bound and I was still in trousers, but no man had seen me this naked before. I felt tense, I felt awkward - I clung to him for support.\n\nHe held me - letting me get used to the feel of his skin on mine. Gently he stroked my back with his fingers. I took a deep breath - this was what I'd wanted - this is what I did want - I had to trust myself, I had to trust my prince.\n\nI looked up into his deep blue eyes. He smiled reassuringly.\n\n\"I love you,\" he whispered, squeezing me tightly against him.\n\nThere it was again - his hardness against my belly - now bigger and firmer than before. Mischievous thoughts flitted through my mind, firing the heat within me - I wanted to see, I wanted to touch.\n\nAgain, I slid my hand towards the source of my fascination. My fingers closed around his length, more boldly this time - testing his weight through the fabric of his trousers. I smiled up at him, watched his eyes close as I squeezed him gently, heard his strangled gasp of pleasure as I tightened my grip.\n\nGentle kisses became frantic kisses - our tongues dancing in a vortex of passion as our bodies fought to become one. His hands scrabbled behind my back, untying the binding that held my breasts. I lifted my arms above my head as he began to pull, spinning away from him as he unwrapped me. With a cry of delight, I was finally free. I turned to face him.\n\nHis mouth fell open in awe.\n\n\"You are beautiful,\" he whispered, \"so beautiful.\"\n\nInstinctively I raised my hands to shield my nakedness.\n\n\"They are too small,\" I protested.\n\nAlfred shook his head.\n\n\"They are perfect - perfect!\" he replied.\n\nHe stepped towards me again. I braced myself - waiting for him to untie the fastenings of my trousers, to disrobe me, to strip me completely, to make me fully naked, to leave me vulnerable, standing in front of him. But he didn't. In one, swift movement he had lifted me upwards, sweeping me off my feet. I clung to him as he carried me, wrapping my legs around his waist as he crossed the floor. Gently he lowered my body to the bed and I felt my back sink into the mattress.\n\nA pang of self-consciousness shot through me as he pulled away from me. He was turning around, moving back to the other side of the room. Again I lifted my hands to cover my breasts, fearful I might have done something wrong. What was he doing? Was he leaving? Was I not good enough?\n\nI saw him pick up one of the lamps and place it on the small table next to the bed. I shivered - I wanted to hide in the darkness - I'd hoped he'd blow it out.\n\nI turned towards him as he lay down beside me, his body casting shadows over mine. The light from behind him streamed through his golden curls and his deep blue eyes shone with his love. My prince was an angel, descended to earth.\n\n\"You are so beautiful,\" he whispered.\n\nDemurely I looked away, my cheeks reddening.\n\nHe smiled and brushed a stray strand of hair from my face.\n\n\"Let me kiss you,\" he said quietly.\n\nHis lips met mine - gentle kisses this time, slow and tender. Instinctively I lifted my hands to cradle his face, holding him close as he moved his body over mine.\n\nBut what was this? He was slipping away from my grasp, moving down the bed, fettering my neck and collar bone with his kisses. He paused - eyes aflame as he beheld my naked breasts.\n\n\"So beautiful,\" he whispered again.\n\nHe bent his head and lightly blew across my nipples. A pulse of lighting flashed through me, shaking my body from tip to toe. Alfred gave an excited smile - he'd seen the effect he'd had on me.\n\nAgain, he dipped his head, this time planting a simple kiss on each breast. That felt so good - my body fizzed with excitement. Another sensation - his tongue this time - caressing each nipple - the gentle warmth of his mouth closing over each in turn as he worshipped me. A low moan sounded from deep inside my chest - the visceral call of a waking beast.",
        "Instinctively my hands went to the back of his head, guiding him on as I offered myself to him. Soft kisses he placed between my breasts - I arched my back, as he nuzzled their swell. His breath was so warm and gentle, his fingers so soft and caring. Every part of my body was tingling now - my skin on fire, my breath ragged, my heart pounding as I surrendered myself to his power.\n\nI moaned in protest as his mouth left my bosom - he was slipping lower, brushing his lips across the flatness of my stomach. Impulsively, fearlessly I lifted my hips and, in a flourish, he stripped me of my archer's trousers. There I'd done it - I was exposed before him - naked and unashamed as I lay proudly beneath him.\n\nAgain he kissed me, more passionately this time - I moaned and growled into his mouth as my fingers clawed at the skin of his back. But again he was slipping from me, down my body, heading inexorably towards the raging heat of my core. Surely he wasn't going to kiss me there? Was that allowed - wasn't that wrong? I felt a twinge of panic - should I push him away?\n\nI snaked my hand towards my sex, but as he settled between my legs, I hesitated. There was that disarming smile again - those bright, shining eyes, sparkling with love. He caught my hand and held it - reassuring me as he brushed his lips across the smooth flatness of my stomach. Then slowly, very slowly, he dipped his head and placed a soft kiss on the dark, downy hairs that covered my mons.\n\nThat felt good - there was nothing to be afraid of! Alfred's eyes shone in the lamplight - he could see I liked that! I smiled back at him.\n\nHe dipped his head again and blew gently across my lips. Sparks flew, my body jolted and a gasp of surprise forced itself from my throat. I buried my hands in his soft golden curls, pushing his head down - making him do it again.\n\nI felt him take my slender hips in his powerful hands, lifting me a little as he prepared to taste me - his eyes locked on mine. Softly he parted my lips and swept his tongue up upwards to the nub of my pleasure. My body shook, driving the breath from me with a shriek of unadulterated excitement. Again and again, he did the same, faster and faster, spreading my wetness as he lapped across the entrance to my channel. I closed my eyes and moaned in delerium, trying to capture his tongue and suck it inside me.\n\nHotter and hotter he stoked my fire, building the tension as he fanned the flames of my passion. I buried my hands in his curls, bucking my hips against him as he worked his magic. The heat inside me was rising - simmering, bubbling, boiling - driving my whimpers, my cries, my growls, as the whirlpool inside me prepared to blow.\n\nI threw back my head and screamed, clamping my legs around him as a wave of ecstasy exploded over me. A thousand earthquakes thundered through me as he catapulted me to the stars. Blindly I clung to him, shaking uncontrollably, fighting to breathe, as the waves of pleasure crashed over me.\n\nI opened my eyes.\n\nI was lying across Alfred's body, my dark hair a chaotic tangle across his shoulders, my breasts crushed tightly against his chest. Such a wonderful feeling - so soft, so safe, so secure in his arms.\n\n\"I love you,\" he whispered.\n\nLazily I ran my fingers through the little blond hairs on his chest, watching them shimmer as they caught the light. I traced the outline of his muscles, in awe of his power and strength. Now my eyes slipped lower, to where the fabric of his trousers was stretched so tightly. I stared - mesmerised - it was as if a caged animal was straining to escape. I wanted to see - I needed to see - that mysterious part of him that my body craved so much.\n\nSlowly I slid my hand towards it, hovering my hand teasingly until my fingers closed around his hardness. Alfred groaned; I smiled to myself, delighted that my hand could have such an effect on him.\n\nHesitantly I repositioned myself, straddling his muscular legs, so I could hook my fingers beneath his waistband. Anxiously I looked up at him, fearful that he might push me away and forbid me from uncovering my treasure. To my relief he nodded - letting me continue.\n\nHe lifted his hips for me as, hands shaking, I began to slide the material downwards. Awestruck, I watched as little-by-little his weapon appeared - first the fiery red, bulbous tip, next the long, broad sweep of his shaft, then the forest of blond curls at its base and finally the loose pouch of skin containing the most precious jewels of all. A magnificent sceptre for the greatest king.\n\nI stared, open mouthed, drinking in the sight of his manhood, astonished by its length and girth. So big, so hard - it looked quite terrifying - would it really fit inside me? A thousand thoughts ran through my mind - tumbling together in a heady vortex of lust.\n\nCautiously, I stepped from the bed, bending to down to free Alfred's legs from his trousers. I placed the garment on the chair, then turned to face him once more.\n\nHe lay before me, revealed in his full nakedness for the first time. He was perfection personified. From his muscular legs to the broad sweep of his shoulders - his body would make a demigod blush. His eyes sparkled, his hair glistened and his skin shone in the soft light of the lamp. No earthly being could compare to him.\n\nAnd there it was, straight and tall, unashamedly saluting me - the weapon that would slay my virginity - the crowning glory, enthralling me as I gazed down on him. My nipples tingled with excitement; my core ached for fulfilment.\n\nI saw him move his hand down his body. Lightly, he grasped his shaft between his thumb and forefinger. Slowly, he began to stroke himself - lazily moving up and down. I looked up at him - he was staring at me, eyes glazed over, entranced by my body as I stood before him. Uncommanded, my own hand began to move, seeking out the heat between my legs, stroking my lips with my fingertips, spreading the wetness of my sex, as I bewitched him with my spell.\n\nI knelt on the bed and settled between his legs, just as he had done for me. He let go of his weapon as I reached out to touch him for the first time. He was warm, he was smooth, but beneath the softness of the velvety skin, he was hard - so very hard! Hesitantly, I dipped my head and blew across the tip. His body shook with pleasure.\n\nI dipped my head to do it again, bending lower this time, but my hair tumbled forwards over my eyes, hiding the vision of beauty from me. Alfred reached out and brushed the dark strands away. He held his hand tenderly at the side of my face as we looked at each other. He gave a smile and a little nod of encouragement. Now I realised - he wanted to watch - I needed to put on a show!\n\nTentatively I ran my finger lightly along his shaft, feeling the ridges beneath my fingertips. I reached the base and then traced upwards again. Another soft moan emanated from Alfred's throat.\n\n\"Is that good?\" I asked nervously. \"Am I doing it right?\"\n\nAlfred nodded. \"It feels really good.\"\n\n\"Can you show me?\" I asked doubtfully. \"Show me how you do it?\"\n\nHis big hand closed over mine, adjusting my position so I gripped him like a spear. Together we began to work his weapon with long, slow strokes.\n\n\"Like this?\" I asked.\n\n\"Perfect,\" he smiled. He brushed his thumb against my cheek.\n\nI tightened my grip a little more and moved a fraction faster, watching my hand as I settled into a hypnotic rhythm. Each time I reached the top, the bright bulbous tip of his weapon would disappear and as I began the downward stroke, it would re-emerge, shining like a beacon in the dim light of the room.\n\nA hunger was taking hold of me, a compelling urge to know him more - to take that most glorious part of him inside and let it drive me to ecstasies never before experienced. I knew it in that moment - the vigour of his flesh to command my body - the strength of his steel to drive my inner heat - the power of his love to conquer my heart.\n\nI fell on his shaft, frantically fettering it with kisses, smothering it as I caressed it with my lips. At the back of my head, Alfred's grip was tightening, pressing my mouth against his arousal as he moaned and writhed beneath me. I began to tease him with my tongue - small, rapid movements - now growing longer, running his length from base to tip as I prepared to take him inside.\n\nAnother long sweep of my tongue and I reached the head. I glanced upwards - his eyes were closed - I knew what he was praying for. Emboldened, I pushed my neck forwards again and slipped my tongue around the end of his shaft. A deep bass moan reverberated through his ribcage and his body shook - delighted, I watched on with glee.\n\nOnce more to the base of his glorious cock, raking my tongue upwards, but this time as I reached the top, I nodded forwards, engulfing the scarlet head in one swift moment. Alfred let out a cry of pure pleasure. The bulbous tip slid deep, filling my mouth, forcing my jaw wide open as I tasted him for the first time.\n\nBoldly, I took him further, swirling my tongue around him, savouring his essence - that intoxicating nectar that fired my passion even more. Beneath me his hips twitched and jolted, pushing his rod deeper, letting me know how much I controlled him. I was beginning to choke now, coughing and retching, but still I forced him deeper. Saliva was pouring from my mouth, but I hardly noticed - all I cared for was his pleasure.\n\nWith a roar he reached down and pulled me upwards. Frantically his mouth sought mine, our tongues colliding as we bound ourselves to one another.\n\nIn a flash he was on top of me, settling between my legs, crushing his hardness against my belly. This was it, this was the moment, my time had come - now he'd make me his woman!\n\nInstinctively I raised my knees, opening myself for him. I watched his face as he positioned himself against me, watched as his deep blue eyes gazed down into mine.\n\n\"Please Alfred, please,\" I begged.\n\n\"You are ready?\" he asked.\n\nI nodded.\n\n\"Please I need you.\"\n\n\"It will hurt a little, but I will go slowly.\"\n\nI didn't care - all I wanted was him inside me.\n\nI kissed him firmly on the lips.\n\nTentatively he began to push forwards, slowly easing into my channel. I winced. That hurt - a sharp, stinging, pinching pain, as his head began to stretch me. I gritted my teeth - I was going to get through this - no matter what it took. I closed my eyes and took some deep breaths, fighting to stay in control. Above me, Alfred held so very still - comforting me with the lightest kisses on my cheeks and forehead, tenderly stroking my hair as my body adjusted to his.\n\n\"Does it hurt?\" he asked.\n\n\"A little,\" I replied.\n\nThe pain was written all over my face - he could see it; I could not lie to him. I took some more deep breaths as he held himself motionless above me.\n\n\"Can you push a little more?\" I asked hesitantly.\n\nGradually, so gradually he moved forwards, watching me closely, ready to stop in a heartbeat. It hurt, of course it hurt - my maidenhead was not giving up without a fight. But this was a battle it could never win - my pain had been conquered by love. All I wanted now was to give myself to him - to let him possess me - to let him own me. I lifted my legs a little more, calling him deeper still.\n\nNow he was all the way inside - filling me completely, making me whole. The walls of my channel gripped him tightly, testing his steel - he was so big, so hard - he felt so good! Euphoria erupted inside me - a wonderful completeness, a joining of our bodies and souls, banishing the discomfort from my mind.\n\nTenderly we kissed - for how long, I do not know, but Alfred would have held me for eternity. Little-by-little, the pain began to melt away, sinking beneath my love for him, as I gazed into his deep blue eyes.\n\nSlowly he began to withdraw, pulling his hips upwards as he eased his hardness from me. I pressed my forehead against his, curving my body upwards, as if trying to prevent him escaping.\n\nAgain, he held himself motionless above me, waiting for my signal to push forwards. Now it was me who was pulling him into me, sliding my hands down his back, gripping his buttocks as I demanded he fill me.\n\nSlowly, very slowly he began to press, pushing forward, invading my softness once more. My back arched, calling him deeper as I stretched around him. I threw back my head, gasping in pleasure, my eyes sightless as my fingers clawed at his skin.\n\nSuddenly he was all the way inside me, sheathed to the hilt, splitting me open as the two of us united. My muscles gripped every part of him, binding him to me, enslaving his flesh to my service. Nothing could persuade me to let him go.\n\nHe kissed me tenderly on the lips, but as he started to move away, I grabbed the back of his head and held him, pushing my tongue hungrily into his mouth. Surprised, he hesitated for split second, then responded vigorously, gripping my face between his hands, as we lost ourselves in a whirlpool of passion.\n\nWithdrawing again, pulling from me, lifting his hips as he slipped away. My core cried out in anguish, clutching in vain as he slid from me, desperate to hold him inside, aching to receive him again. A third push, a little smoother, a little quicker, all the way in once more.\n\n\"Yes!!!!!\" I moaned, delirious with pleasure, overwhelmed by the waves of passion as I gripped his full length once more.\n\nKisses, frantic kisses, endless kisses - on my cheeks, my forehead, my lips; Alfred's tenderness in that most masculine of acts. My mouth searched blindly, my tongue thrusting against his as I tightly held the back of his head. Moans and whimpers emanated from my chest, words were impossible - unfit to carry my emotions.\n\n\"Yes?\" he asked softly, \"you like that?\"\n\nI nodded.\n\n\"More, more,\" I begged.\n\nThere was a change in Alfred as he heard my first true moans of pleasure. He'd been tentative, hesitant in those first few strokes, but now he was settling, understanding what I needed - he was dominant, in charge and in control - his masculinity fully unsheathed. His thrusts became faster, harder, more powerful - driven onwards by the same urgent, primeval desire that commanded me. I flung my head backwards, surrendering myself to pleasure, pain banished to the farthest corners of the earth as the fire in my core burned ever brighter.\n\n\"Yuss,\" I hissed each time he hammered into me, squealing and moaning in equal measure.\n\nA white heat had taken hold of me - surging upwards, forging higher - sparks flashing through me as my inner furnace blazed. Alfred's thrusts had become a blur - a deafening, intoxicating rhythm, spinning waves of pleasure through my brain as he whipped my furious heartbeat ever faster. I flung my arms outwards, gripping the sides of the bed as I felt the tipping point approaching, thundering towards me like a raging bull.\n\nAlfred thrust forward one final time, a bellowing roar erupting from his chest as together we plunged headlong over the precipice. Tightly I clung to him, folding my body around him, burying my head against his as I screamed with pleasure. A blinding white light flashed around us, lifting us from the simple bed, launching us upwards as our souls became one.\n\n-\n\nI woke the following morning, nestled in the crook of Alfred's arm, as the soft light of morning was beginning to creep into the cottage. Outside the woodland was stirring - the world was waking - a new dawn of peace and freedom had arrived.\n\nI shifted slightly onto my side, watching Alfred as he slumbered beside me. My heart melted with love for him - he was so handsome, so brave, so strong. I brushed a stray golden curl from his face and kissed him tenderly on the cheek. The hermit was right - he would be a great king - his name would be known for generations to come.\n\nTogether we would serve our people and faithfully defend them from our enemies. Together we would honour our destiny - the warrior king and his warrior queen.\n\nBut all that was to come. For now, in those precious moments, we two were simply lovers, lying in a humble bed in a hermit's cottage, as around us the most joyous birdsong proclaimed the glory of a bright, new day.\n\n-\n\nTHE END\n\n--\n\nHistorical note\n\nFollowing the fall of the Roman Empire, much of England was settled by the Anglo-Saxons, a group of Germanic tribes who established a number of small kingdoms including Kent, Mercia, Sussex and Wessex. From the late 8th century, the British Isles came under attack from Scandinavian Vikings. Initially they came as raiders, plundering towns and monasteries, but later they began to settle.\n\nThe Battle of Aclea, between the West Saxons and the Vikings, took place in 851 AD. It was one of many battles fought between the two peoples, that would eventually lead to the establishment of the Danelaw in northern and eastern England in the late 9th century. By tradition, it is thought to have occurred near the modern village of Ockley in Surrey, although some suggest a location in north Hampshire.\n\nAlfred was the youngest of five sons of King Aethelwulf (four of his brothers ruled briefly before he became King of Wessex). His reign was marked by a series of battles against the Vikings and the consolidation of the southern Anglo-Saxon kingdoms under his control. He was responsible for building burhs (forts) along the Sussex coast, including at Chichester and Lewes, to defend against attack from the sea. Today Alfred is the only king that the English call \"The Great\", although most historians usually consider his grandson, Athelstan, to be the first true King of England.\n\nIt is not clear whether Surrey (or Suthrige as the Anglo-Saxons called it) was ever an independent kingdom in its own right, but it was certainly a realm with a high degree of autonomy. Totalling around 750 square miles (1950 sq. km), it included most of the area covered by today's county of Surrey and much of south London. The Anglo-Saxon territory appears to have come under the control of Mercia (to the north) and Wessex (to the west) at different times. In the mid-9th century, it was incorporated into the latter as a shire. The Kingdom of Sussex (to the south of Surrey) also submitted to Wessex at around the same time. The Kingdom of Kent was ruled by Alfred's oldest brother, Aethelstan, from 839 to 851, but he did not live to succeed his father as King of Wessex.\n\nWith the exception of Alfred, Aethelwulf and Aethelstan, all characters in this story are fictional. Most places mentioned are real, but I have tried to allude to their Anglo-Saxon names where possible. (Frithwald's castle at Morden is an invention and the actual capital of Surrey was most likely Kingston-upon-Thames, where 10th-century Anglo-Saxon kings were crowned.) The true timeline of the Battle of Aclea is unclear, in part because reliable sources are few and far between, and I have taken considerable liberties in adjusting the timings of events to fit the plot of the story.\n\n--\n\nAuthor's note\n\nThank you for reading this story, I hope you enjoyed it! Please do vote and leave feedback if you would like to. What did you think of the characters, the plot and the pacing? Was I successful in bringing the Anglo-Saxon world to life? I'd be particularly interested to hear your opinions if you didn't feel you were able to give me five stars - what could I have done better?\n\nDid you feel that Elspeth and Alfred were a credible couple? Did Sigweard and Sigbehrt work as villains? Was Cedric's true identity too obvious or did you feel that the reveal came too far out of the blue? Were the fight scenes well written, exciting or too predictable? And what about the sex scene at the end? Please let me know your thoughts.\n\nThank you for your constructive criticism. Please help me to improve my work so that I can write better stories for you!\n\nSpindleTop"
    ],
    "authorname": "SpindleTop",
    "tags": [
        "anglo-saxon",
        "viking",
        "army",
        "battle",
        "castle",
        "princess",
        "king",
        "queen",
        "virgin",
        "hermit"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/warrior-princess"
}