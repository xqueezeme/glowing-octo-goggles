{
    "title": "TT Spalding-Polly's Story",
    "pages": [
        "For those of you who follow and enjoy the TT Spalding-PI series, this is Polly's story. It is too closely aligned with Maggie's to separate them completely, but I tried. This is the Polly that you may have wondered about. She and Bruno are the tools that TT uses to close his cases. There is little humor in this but I began in this category and I continue. Enjoy.\n\nEdited by Angel Love who continues to encourage me. Thanks as always.\n\nTT Spalding-PI, The Bowers Company Case.\n\nPolly searches for a suspected embezzler.\n\nI had to admit, the past two weeks of work were just about the best I had ever had so you might wonder why I was trying so hard to finish early. The temperature here was a balmy 80 degrees and the sun was a golden ball in the clear blue skies. The location was the Island of Fiji and I was on a swimsuit shoot for a national magazine. I could have extended it for another week at least but last night I got a call from TT Spalding in New York. He wanted me to come home to help him on a case. So, I was cutting it tight to finish today so I could be on a plane tonight. \n\nWorking with these overdeveloped, undernourished, vapid women and men was just about to drive me mad. The only thing they knew how to do well was bitch. Bitch about the heat, the sun, the humidity, the time, the wind, the . . . , you get the point. But, my fee for this shoot was enough to make up for it. And the location? Fiji? Come on! Who wouldn't take a few bimbos and male gigolos for a week in Fiji? Actually I had taken one of the gigolos for a couple of nights, but that was another story.\n\nI maneuvered the tall, skinny blonde wearing two pieces of cloth that someone laughingly called a swimsuit, into the right position, checked the light and the exposure and shot the picture. This one would be a full pager, I was sure. She was beautiful, the swimsuit was almost nonexistent, and the location was to die for. How could it be any better? Not possible. \n\nI stood up, worked the kinks out of my back and shouted for all to hear, \"That's it people! We're done! Great job by all and thank you.\" \n\nThere was a loud shout of joy, hands clapping, words of praise and congratulations and then almost by magic, the beautiful people were gone. The only ones left were the guys I hired to take down the lights, the props, the backdrops, the coverings and the other paraphernalia that went into a photo shoot. My manager, Philippe, would take care of getting everything packed, loaded on the plane and then back to the states where my studio was located. Philippe was in his 50s but had the energy of a twenty-year-old. He and I had been together for more than five years now and I trusted him with my stuff. No greater trust has any woman for a man! (Corny, but I think I read something like that once.)\n\nI was booked on the next flight out and I was anxious to get back, since I got the call last night from TT Spalding, the PI that I often worked for. When he called, I went. Not so much for TT, but because he was Maggie's husband. For Maggie, I would jump into hell without a parachute and since she would do the same for TT, that cinched it for me. Those two were like my own father and mother, since I never knew my own. \n\nThe flight back was long but I was able to get a lot of sleep. I could sleep anywhere, a trick I learned a long time ago, when my career was less lucrative and very illegal. I needed to be sharp and quick, traits which were still good to have. Maybe a little about me would help.\n\nMy name is Pollyanna Gooding, a name given to me by a well meaning, but clueless social worker in rural Ohio. I was found wandering the streets, a seven year old, not knowing who I was or how I got there. Someone called the police, I was taken in, Social Services was called and my life in the system began. Since I had no idea who I was, someone began calling me a Pollyanna and the name stuck. The last name Gooding came sometime later but I don't know when or from whom. A lot of stuff happened, most bad, some good but I can't really remember much. I have been in therapy for several years but those early years are still buried so deep I may never get them back. My shrink says not to worry about it. I don't.\n\nI stayed in the system until I was sixteen when I decided to go out on my own. I split one night when everyone was asleep, took all I had to my name at the time and made tracks to the bus station. I had saved enough to get a bus out of town and I ended up in Jersey City in the great state of New Jersey. I lived on the streets, stealing food, sleeping in alleys or deserted houses, sometimes selling my body if I was desperate, and just staying alive. When I could, I haunted any cyber caf\u00e9 that would tolerate me and learned to use the computer. I had a couple of friends that taught me the fine art of hacking and for an exchange of favors, they taught me how to use the net to do anything I wanted. I survived that way for the next two years, doing as well as I could but staying independent, avoiding the pimps and the police. A miracle when I look back at it.\n\nMy life changed when I turned nineteen. I was living in a small deserted house a block away from a small strip mall. There was a photo shop in the mall that I loved to visit. I went in at first because I was cold but I became fascinated by the pictures on the wall behind the cash register. They were all black and white and were the most striking things I had ever seen. After being sent out several times when I was caught standing there staring, the woman who worked there asked me who I was and what I was doing there. I decided I would tell her a story just so she would let me stay, but when I did, she got this funny look on her face and stopped me.\n\n\"Listen young lady. I asked you a question and I expect an answer. And not this crap you're trying to sell. If you want more information about those pictures, and if you want to be able to come into my store and keep warm, you'll tell me the truth. Do you understand me?\"\n\nWell, hell yes. When she put it that way, I figured what the hell. All she could do was throw me out and that was no worse than I was already. So, I started in and before I knew it, I had told her the whole damn story. She listened without comment, stopped a few times to help customers but always came back. I saw that she really cared, made comments from time to time and seemed fascinated by my story. I blurted it all out to that lady and she listened to the whole thing. \n\nAfter I was done, the lady told me to stay as long as I liked but to be there when she closed the shop for the day. I agreed, figuring I might get a meal out of her and came back later at closing. She turned out the lights, locked the drawer and motioned me out the back way. She locked the doors, set the alarm and led me to a small car. She drove to a Denny's restaurant a block away and sure enough bought me dinner. As I ate, she introduced herself as Maggie Malone. \n\nMaggie told me that the shop was owned by Max Bower, a retired photographer. He was the one that had taken the pictures I was so fascinated by. She had mentioned me to him and he wanted to meet me. She told me that if I was really interested, Max would offer to teach me what he knew about Photography. I asked her why he would do this and she said he had no one to pass it on to so he was waiting for that one person who had the love and the desire that he shared. She thought it might be me. \n\nLiving on the streets had taught me that if it seemed too good to be true, it probably was. In this case, I figured what the hell. Maybe the old boy wanted to get in my pants like most of the old guys I had experience with, but then again, maybe he was real. What could I lose? My virginity? Hell, I sold that a long time ago for enough to buy a hot meal and a room for a night. I told Maggie to set it up. \n\nTo make a long story short, Max was the real deal. He was a sweet man, just over five foot and skinny as a rail. He didn't have a hair on his head and looked like he was about to keel over at any minute but appearances can be deceiving. Max had more energy than anyone I had ever met. And he did exactly what he said he would do. He taught me photography and I soaked it up like a sponge. I loved the cameras, the dark room, the stink of the chemicals, the frustration of taking shot after shot only to be disappointed. And the joy the day the shot turned out just as I planned. Max was with me for it all. When I was down, he lifted me up with a word or two. When I was full of myself, he took me down. But through it all, he taught me. And I learned.\n\nMax died two years after I met him and to my surprise, he left all of his equipment to me, the shop to Maggie and the loft where he lived to both of us. Maggie and I discussed it, decided to keep the shop since Maggie and I could run it, and decided to move into the loft apartment together. It was bigger than Maggie's apartment and I was still living in the deserted building. We sold most of Max's furniture since it was older than he was and moved Maggie's stuff into the loft. I was in seventh heaven, my first real apartment and a wonderful friend that didn't want anything from me but my friendship. And the studio! Life was perfect.\n\nOver the next two years, I got better and the shop did well. Maggie and I were getting along great and we had enough money to stay independent. I started to get some photography gigs and did pretty well. More and more, Maggie was running the shop by herself while I traveled, doing some magazine work and the occasional wedding for some celebrities. The money was good and I was getting a reputation. We were comfortable and life was even better.\n\nI was looking over some prints one evening when Maggie sat down beside me and tapped me on the shoulder to get my attention. I pushed the slides away and gave her my undivided attention. She asked me if I had noticed a gentleman that came into the shop regularly. His name was Spalding. First name, TT. I asked her what the hell TT stood for and she just shrugged. Said it didn't matter but did I remember him? I thought about it and I could just see a short, good-looking guy, about Maggie's age or a little older, very friendly. Yeah, that was him. I told her I could place the guy and asked why. \n\n\"He asked me out on a date. Today, when he came in. Just walked right up and asked me out on a date. To dinner. And a movie.\" \n\nMaggie seemed confused, but I didn't know why. I was surprised that more guys hadn't asked her out. She was a knockout. Beautiful, blonde, leggy and with a rack that could have earned me a lot of money in the day. But she was straight, not the type to hop into bed with a guy just because he asked. In the two years or so I had known her, I had never known her to go out on a date with a man. Not once. \n\n\"He seems nice, and he's cute so what's the deal? Did you say yes?\"\n\n\"No. I told him I had to think about it. I'm thinking about it. That's all. I think he's cute too. But that's not the issue.\"\n\n\"What is the issue? A guy asks you out, you say yes or no. That's all there is to it. Just yes, or no. He doesn't look like a perv, so no big deal.\" I was surprised when she shook her head at my words. \n\n\"It is a big deal. For me anyway. It's a very big deal.\" Maggie was actually shaking a little and her hands were cold when I gripped them.\n\n\"Talk to me Maggie. What's the deal? Why is this such a major issue with you? He seems like a nice guy so why not try it?\" I was worried now. This wasn't like the calm cool Maggie I had come to know. \"Talk to me Maggie.\"\n\nMaggie squeezed my hands before letting go. She took a deep breath and then told me her story. \"I was married before, to a man that beat me. He hit me so many times that I came to expect it. I believed for years that it was my fault before I finally understood. I got help and divorced him. I haven't been with a man since and I'm afraid. Afraid that it will happen again. It's been five years. Five years without being hit.\"\n\nGod, I felt like I had been slapped across the face. This beautiful woman, my friend, and one of the sweetest persons I had ever known, abused. I thought my life was bad. This was worse. If I came across someone who treated me bad, I split. I just took off. Maggie was married and I guess she felt trapped. Well, it was over now and I had to convince her that not all men were bad. Even I knew that and I had met all kinds.\n\n\"Maggie, listen to me. It's over now and you have to forget about him. He's gone, out of your life and he has no power over you anymore. This Spalding guy seems really nice, but it's only a date. You can walk away if he gives you any shit. You know that. And you have me. I'll kill him if he tries to hurt you.\" \n\nWell, I won't go any further except to say that's how Maggie met TT and that's how Maggie and I later came to be working for him. I owed Maggie big time and she adored TT so I adored TT. That's all there is to that. Maggie may tell you her story, but that's her choice. This is mine. \n\nAnyway, TT called me while I was working in Fiji and I told him I could be back give or take two days from then. He said that was fine and that he had a cool job for me. Could be I could make a cool $1,500 for a few week's work. Not a bad deal he said. I agreed, told him to wait for me and here we are on the plane headed for balmy Trenton, NJ. I was going to go to work for TT and maybe make a cool $1,500? I had just finished a gig, spending two wonderful, all expenses paid, sunny weeks on the beautiful island of Fiji earning $20,000 in the process. TT was offering me $1,500 for a couple of weeks as a drone in New York City? It was a deal I couldn't refuse. Not for the husband of Maggie Malone Spalding.\n\nAs promised, two days later I strolled into the offices of TT Spalding Investigations to find Maggie sitting at her desk, pounding the keys of her computer. She was as beautiful as ever and looked happy. My heart sang every time I saw that look, knowing what she had gone through before TT happened to her. Because of him, she had learned to trust again and accept all that life had to offer. I just stood there watching her until she noticed me.\n\n\"Polly! Welcome home! God it's good to see you again. It's been a while. How was Fiji? Is it as beautiful as everyone says?\" She rose and came round the desk to take me in a warm hug. I returned it with interest and pushed her back to look at her.\n\n\"You get more beautiful every time I see you. God, Maggie, I'm so jealous.\" I laughed and sat down on the corner of her desk. \"Fiji is more than I expected. It was gorgeous and I enjoyed every minute of it. Of course, being surrounded by the beautiful people helps.\"\n\n\"Ha! And how many of the beautiful man-people did you enjoy? I bet you had a little fun on the side?\"\n\n\"You know me too well Mom! But, just one this time. I was busy and then TT called so I cut it short, but he was a real winner! I may use him again. As a model, I mean.\" I laughed because she knew exactly what I meant. Maggie did know me too well. \n\n\"Good for you. You need to find a good man and think about settling down. But, if I know you, that's not going to happen for a while.\" She pushed the buzzer, letting TT know I was here. \"Go on in. He's waiting for you. Be nice now.\" \n\nI walked in to find TT at his desk, his feet up and his chair balanced precariously on two legs while he held his precious copy of Mickey Spillane's novel, The Snake, which I knew was one of his favorites. It was battered, dog eared and worn, but he still kept it. I think it was the first one he read. In his honor I had read a couple of the Mike Hammer series and actually enjoyed them. Not really my cup of tea, but worthwhile. Mostly because it made TT happy that I would take the time.\n\n\"Hey, Polly O! How you doing? Heard you were on vacation on some island in the South Pacific or some such. Do any sightseeing? You weren't actually working were you? Wouldn't want to take you away from shooting pretty pictures. At least unless you were making some real money, like I pay. Fifteen-hundred smackers, just to be your pretty self.\"\n\nI laughed, not ever letting him know what I really did for a living. As far as he knew, I was a photographer who did weddings and funerals for a couple of hundred a pop. Maggie wouldn't tell him and she wouldn't let me. She said he didn't need to know that I didn't need him to make a living. As long as I was cool with it, she wanted me to keep it that way. So, I did.\n\n\"What's the caper boss. What do I have to do this time?\" \n\nCaper, jargon right out of his precious Mike Hammer novels. I knew that was the way to his heart. He was always going to write the next Mike Hammer novel, just like a ghost writer as he put it. He plugged away at it, and it seemed like he had been doing it for the last several years. I wondered if he were serious about it or just in love with the idea of it. Well, it was not my place to decide. \n\nTT put his precious book in a drawer of his desk and gave me his full attention. It was time for business and in spite of appearances, TT was the best. If he couldn't handle a case, it couldn't be handled. Between TT, Bruno and I, we had solved more than a hundred cases between us. Not all were pretty and not all were easy but we completed them all, 100%. Bruno was the electronics, I was the picture taker and infiltrator and TT was the brains. Speaking of Bruno, I wondered if he were in on this. I enjoyed working with him but he and I were just friends. Never went any further, although I wouldn't have minded. \n\n\"OK, doll, here's the deal. I have a client, name of John Harris, who knows for a fact that someone in his office is ripping him off to the tune of four or five-grand a week. He has been trying for more than six months to catch the guy or gal but so far, nothing. He had the books audited but the shortage never shows up. Yet he knows it's there and someone is skimming.\"\n\n\"So how does he know it's just not coming in? Could be his business is not as good as he thinks and the money just isn't real. Happens.\"\n\n\"Let's just say he's convinced me that he's right. Trust me on that, OK? Take it as fact that the money is missing and going into someone's pocket. You are going in as a part time bookkeeper and your job is to find it. I don't know anyone better at that than you. How you got so smart about books and money laundering and embezzlement is beyond me but you produce so the job's yours. It's just you and me on this one. No need for Bruno's talents.\"\n\nHow I got so smart is another story and maybe some day . . . But for now, I would accept TT's word since he was never wrong about stuff like this. I got all the details, got the name of my contact inside the company and told him I would be on the job come Monday morning. I needed at least two weeks to find out what I could and then we could touch base. TT agreed, asked me if I needed any seed money to keep the bills paid until we collected on the job but I assured him I was OK for a while. Actually, I had enough to hold me for the rest of the year and it was only April but he didn't need to know that. Bless his heart for asking though. That was just like TT. \n\nI touched base with Maggie on the way out and made plans to go shopping with her as soon as this job was done. Maggie loved to shop and she loved to help me pick out my stuff. Said it kept her young to shop with me. If only Maggie knew that I wished I had her body and her looks. She just never recognized what God gave her. I should be so lucky!\n\nI spent the weekend working on the proofs from the past two weeks of shooting. They were pretty darn good if I did say so myself. The location had a lot to do with it, bringing out the best of the young gods in bathing suits and these particular youngsters were very beautiful. As I scanned the thumbs for the ones I wanted to enlarge, I noticed one particular young Turk and remembered a very special night when he acquainted me with the finer points of erotica. He had some moves that even I had not seen before, but he was also very pleased by what I was able to show him so it was a fair exchange. He actually expected me to call him when we got back, Silly boy. But after a few reflections about a particular time under the stars, maybe I would.",
        "I finished the work, made contact with Philippe and made sure the equipment was safely on the way. He assured me it would be home and in my studio by Monday afternoon. He wanted to know how the proofs came out and I told him we were golden. He laughed, said it was not a surprise to him and he would see me later. Good old Philippe, always dependable and good for my soul. \n\nMonday morning found me dressed in a simple skirt and blouse with my hair in a ponytail and wearing solid working shoes with matching socks. I looked like a part time bookkeeper and reported to my contact in HR. Within an hour, I was at a desk with a computer and the master access code that give me complete access to the corporate server. From there I could access any and all files and databases. This is what I did well. Give me a computer and I would locate the last dollar in any account in the world. Not bragging, but I could actually do it. I could have been wealthy by cyber stealing but that was against my own principles. Not cool.\n\nFor the next three days, I called up and examined every single transaction that Wallace Inc, the company I was working for, made. Their business was importing clothing from China and Taiwan. Most of it was designer label and was ordered by particular stores. Each account had its own label and designs. All on the up and up. Only the biggest clients could afford their stuff and they paid top dollar. That's where I started looking. By going back over the history of purchases and disbursements, I began to see a pattern. \n\nThe same pattern that Mr. Harris came to TT about. Historically, the imports and disbursements were slowly increasing, showing a nice growth rate. But, about two years ago, that growth rate slowed and by the end of the first year, had begun to level off. Yet all of the numbers indicated the growth rate should have increased. During the second year, growth was flat, even though imports and disbursements increased. Prices were steady so that was not a factor.\n\nNow that I was convinced that Mr. Harris and TT were correct, I began to examine the sales personnel and the inventory personnel. Somewhere in those files I expected to find the skunk. I only needed time. I spent my days working the computer, printing out files that I wanted to go over later and evenings were spent finishing up the layout for the magazine article I had completed. Things were going great and I was pleased. I expected to finish this little caper for TT by the end of the second week for sure. Then things took an unexpected turn.\n\nIt was Friday, the end of the first week and I was deep into an examination of the files of three people I had flagged for concern. I wanted to dig deeper into their files so I tapped the HR database and somehow came to the attention of the Head of Personnel. He was not on my watch list but he was also not privy to what I was doing there. So when he stumbled on to my search of his information files, he came to see me. \n\nI was deep into a search of one of the suspects when I became aware that someone was entering my little cubicle. I hit one of the function keys to bring up an innocuous screen that would hide what I was really doing. I glanced up and batted my eyes when I saw a good looking man about thirty-five or so standing there watching me. I recognized him as Carson Palmer, the Personnel Director and decided to give him the innocent act.\n\n\"Excuse me but what are you doing?\" \n\nHe seemed angry and I was even more convinced that innocence was the right way to play this. As I thought of an answer that would sound convincing, I had a sudden thought. How could a civilian, a personnel guy, catch me digging into some personnel files? No one who wasn't a pro in this area should be able to track me. I was damn good at what I did and I had never found another person who wasn't a computer pro who could track me. Ever! Something was rotten in Jersey!\n\n\"I'm sorry? I'm working on tracking some shipments from Taiwan that seem to be late. Did I do something wrong?\" \n\nI put a look of panic and fear on my face as I looked up directly into his eyes. Guile was one of my better acts. Innocence just dripping off me, I stood and put my hands together in front of me and started to look wildly around. I was really getting into this act. But more important, I suddenly decided I would find out more about our Head of Personnel!\n\n\"Were you trying to access some Personnel files? Someone from this computer station showed up as trying to access my files.\" \n\nHe was looking around my desk and actually picked up some papers I had laying there in case someone checked on my work. They were actual bills of lading that referenced some existing orders. He looked at them and tossed them aside, apparently convinced that it was some sort of glitch. \n\n\"No sir! I wouldn't have access to that kind of information. I only have limited access for this job sir. Please, you can ask Mrs. Evans. She gave me the access code.\" I kept the fear look but dropped the panic. \n\n\"I guess it was some sore of error in the system. You're not in trouble. I'm sorry to bother you.\" He was about to turn away when he looked at me again with a small smile.\n\n\"I haven't met you before. I'm Carson Palmer and I'm head of Personnel. Have you been here long?\" He was relaxed and smiling now. So, that little crisis was past.\n\nI gave him my cover name. \"I'm Susan Marks, and I just started Monday. It's just a two-week fill in position. I'm glad to meet you.\" \n\nI held out my hand which he took and then held far too long as he stared directly into my eyes. He had nice eyes, a deep green that had little flecks of gold in them. I could get used to looking at them, but I noticed the ring on his finger. Married! All the cute guys were either married or gay. Just my luck.\n\nCarson Palmer stayed a few minutes and made it clear that he was hitting on me, a fact that only reinforced my desire to get into his files. While I was not a prude and had done my fair share of kinky stuff, I had a thing about married men. They were taboo! I was going to make it a priority to check on this slime ball, but I was going to use a great deal of care. Since it was late in the day and I had been caught due to carelessness on my part, I decided to put it off till later. Just one last little thing to do and then I was on my way home to change into something a little more funky for a date with a guy from the stockroom that hit on me my second day here. He was cute, sexy as hell and could be fun. A job with benefits! \n\nStockroom guy turned out to be a winner, so after a really great weekend, I was back at work and hard at it on Monday. Carson was not in his office, a fact that I confirmed myself so I began to open some very personal files. His, of course. I had done a little homework over the weekend, accessing the Personnel files via a worm I installed last Friday just before I left. It allowed me to register as a valid user so I could log in and not be flagged by the little program Carson or someone else had installed. I pulled up the files, traced them through the system and found exactly what I was looking for. I started working in earnest then and continued through the day. By quitting time, I had what I needed.\n\nWhat I found was that the two disbursers were modifying orders from several of the largest buyers. The way it worked was that the actual order would be for 2000 pieces of some item. The bad guys would alter the posted order to show only 1000 pieces. All other system trackers would continue to make the real order come out right but the tracking would show that order to be 1000 instead of 2000. The difference in collected monies would be diverted into a separate account that was eventually used to transfer funds into an offshore account. It was quite complicated but it worked. Only three people had access to those accounts. You guessed who the third person was.\n\nI called in to work sick the next day and instead, called TT. I told him I had the information he wanted and made an appointment to see him and Molly later that day. TT was always ready when I called. Made me wonder if he didn't already have some way of knowing what I was doing. Spooky, but it wouldn't have surprised me. TT seemed to know everything. He was too much like his hero, Mike Hammer. Mike always knew things he shouldn't have known. \n\nI met with TT and Maggie that afternoon, all of us sitting in TT's office. Maggie had found another comfortable chair somewhere and the three of us were together, me with a Pepsi and Maggie with a cup of tea. TT was just leaning back, his hands crossed over his ample belly waiting. \"OK, Polly O, talk to us. What did you find? I bet it was more than one and I bet I have a good idea who was the ring leader. A guy named Palmer?\"\n\n\"How in the hell did you know that? He wasn't even one of my primary suspects. At least until he almost caught me going through his files. The creep even tried to hit on me, and he's married.\" I was floored! How could he have guessed? He wasn't human!\n\n\"It wasn't all that hard. I went through the files of everyone in his organization, pulled up some bank records and credit cards on the old computer and did some checking. I had this case for a few weeks before I called you, you know. I'm not totally inept! Give me a little credit. Anyway, there was something wrong with our Mister Palmer and I couldn't figure out what it was. But I knew he was dirty. That's where you came in. Maggie reminded me that no one is better at sniffing out dirt than you, Polly O. No one!\"\n\nI was slightly mollified but I was still stumped. I didn't see it when I went through the same records TT had. It just wasn't fair. He was really something else. No wonder Maggie loved the guy. He was superman and she was superwoman. They made a pair for sure.\n\nI went through the information I had gleaned from the files, the records I had dug up, and the deposits made into an offshore account for Carson Palmer and two others who were in the disbursement department. Seems they were hired personally by Mr. Palmer. No one would ever think to look at them for this. But Carson Palmer kept impeccable records and I had copies. TT was pleased with the stuff and he and Maggie began to ask questions. Maggie took notes while I went over everything. I gave her the numbers of the accounts and she promised to contact a source at the FBI. He could track those accounts and freeze them under some new part of the Homeland Security laws. It was a done deal.\n\n\"Great work Polly O. Maggie will cut your check today so you don't have to wait. I appreciate it but I know you have bills to pay just like I do. So, thanks for your time. We'll put this scum away and leave Mr. John Harris a happy man. Probably offer you a full time job with his company as a security expert. Hope you don't take it though. I like having you around.\" He glanced over at Maggie but she just smiled back at him. There was no lack of trust between those two. \n\nI walked out with Maggie who shut the door behind her and laughed as she hugged me. \"Thank you for that. He really believes he is helping you out. And he knows you love this business like he does. That's important to him, so it's important to me.\"\n\n\"For you, anything. You know that. And TT is too smart for his own good. You just keep an eye on him. He scares me sometimes.\" \n\nWe hugged again, made plans to meet in a week or so for some shopping and I left for my studio. I kept it even after Maggie sold the shop and moved in with TT. I live and work there still. Regardless of what stuff I acquired or how much I made, this was home to me. It was the first place I ever felt was mine; it was the place where I grew to know and love Maggie, my best friend in the whole world; and the place where Max taught me the skills that gave me my life and a reason to dream of something better. I had come there as a tough young girl, living on the streets, making my way by myself and beholden to no one. I had nothing of my own but my wits and my pride, Maggie and Max gave me hope, love and a life that has turned out to be pretty damn great. Max is gone now, but Maggie is still here and still my best friend. She and TT and Bruno are my family and I love them to death!\n\nMore to come. "
    ],
    "authorname": "thecelt",
    "tags": [
        "private eye",
        "private investigator"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/tt-spalding-pollys-story"
}