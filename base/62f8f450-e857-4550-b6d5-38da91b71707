{
    "title": "Taken by the Viking Ch. 14",
    "pages": [
        "Throughout the day, Jordan kept Trish close by his side, as he often did, but now she found the meetings he was attending much more interesting than she had before. Previously, she would try to understand what the conversation was focused on, but they often named people and places she was unfamiliar with, which made it hard to have any real understanding. Now, with Cora and Trace present, the discussion had much less to do with Earth and quite a bit more to do with the Moon and the Wolf's future plan's in general.\n\nAlthough she probably shouldn't think of the plan's as the Wolf's. She was just so used to thinking of him as the leader of everything on Earth, since he was the only one in the spotlight, but it was becoming more and more clear that those in charge on Earth used him as a kind of distraction. He wasn't just a figurehead, since he was powerful in his own right, but the choice to make his name known and surround him with mystery, intrigue, and interest seemed to be deliberate on the part of the Earthers. That or the Moon populace's interest in him had started on its own and the Earthers had taken advantage of it.\n\nTrish could believe either. \n\nNow she was listening to meetings about the aftermath of their successful thievery mission and things were beginning to become clearer. Cora, the Wolf, and a man named John had wanted to keep the shipment from reaching the Moon. The new memory drug had already been used on Alex and Bella, and the Wolf said it worked despite the antidote John's people had created for the previous memory drug. For some reason, John, Cora, and the Wolf wanted to eradicate the effects of the memory drug \n\nThey considered Benson and Mirabelle - the leaders of another faction on Earth which had created the memory drug in exchange for promises of new homes on the Moon along with wealth and power, to be traitors. As well as stupid for thinking the Moon would give them what they truly wanted. Wealth and power as well as a new home were easy to give, respect from the other citizens of the Moon was not. John in particular was vehement about them 'selling out' to the Moon, his vitriol about Mirabelle making Trish think some of his feelings might be personal. Trish had heard their names before, but she hadn't understood who they were or why they were important until today.\n\nShe'd been under the impression everyone on Earth hated the Moon, but apparently there was a faction who was willing to work with them. Trish was horrified as more information was shared by Cora and John. Apparently because Benson and Mirabelle had been promised prominent places on the Moon once they fulfilled their contract, they didn't care what happened to the Earth or their community. They'd decimated the environment around them, poisoning the water and the land in their area in order to achieve their goals, the new drug being the latest step in their selfish bid for leaving the Earth. John wanted the Wolf to stop selling food and clean water to Benson and Mirabelle's people. \n\n\"If they had to face the actual consequences of what they're doing, consequences that effected them immediately, they'd either have to start really thinking about what they're doing or they'd just kill themselves off,\" John said harshly, glaring through the vid screen at the Wolf.\n\n\"There are plenty of people working for Benson and Mirabelle who have no say in what's happening and who don't deserve to suffer for their actions,\" the Wolf said calmly, not even looking up as he examined a printout in front of him. On his right, Jordan was holding Trish on his lap, but keeping her on the opposite side of the Wolf, so she couldn't see what the Wolf was looking at without leaning forward and drawing attention to both herself and her nosiness. Neither of which she was keen to do. \"The two of them will be the last to feel any effects, it's the innocents who will die off first.\"\n\n\"Or they'll revolt and take out Benson and Mirabelle for us,\" John argued.\n\nIt was strange seeing this compassionate side to the Wolf. He was willing to kidnap and torment young men and women from the Moon for his own sexual pleasure, but he insisted on helping an entire populace of people he would never meet. Even more disconcerting when she realized part of John's reasoning included the accumulation of more power for those allied against Benson and Mirabelle. If the Wolf wasn't motivated by power, what was he motivated by?\n\nShe was beginning to believe he was far more complex than anyone had ever realized. It wasn't just his own people he treated well and cared for, he was also taking care of people who could be considered his enemies. \n\n\"They don't have much longer anyway,\" Cora said dismissively, waving her hand at the screen where John was scowling. \"I've had some of my people spreading the evidence of Benson and Mirabelle's agreement with the Moon, which include leaving the community but not with all the people who live there, leaving them behind in a district which can no longer produce food or water and where they're becoming sicker from the air itself. My reports say they're already on the verge of revolt; now that the drug is gone and the Moon is demanding a replacement shipment, Mirabelle and Benson are going to have to stay right where they are until they can provide it. And they're going to have to start answering some hard questions to their people about what the reward is, because all the damage they've done to their area makes it unlivable without outside resources. People are becoming panicked and angry. Removing their access to the food and water we sell them will only allow Benson and Mirabelle to stir up resentment against us, rather than where it currently, and rightly, is directed.\"\n\nJohn snorted. \"I think you're giving them far too much credit. They haven't figured out on their own that Benson and Mirabelle care for nothing but themselves, despite how obvious it is.\"\n\n\"Benson and Mirabelle are smarter than you give them credit for,\" the Wolf said calmly. \"Which is why we continue to supply their people, so they can't use that against us. If we need to, we'll send someone in to take care of the matter.\" His eyes flicked to Jordan, which made Trish tense up as a kind of worry suddenly rushed through her. Surely she was just worried for herself though, right? If something happened to Jordan, what would become of her? She couldn't possibly be worried about him for his own sake... could she? \"But we aren't at that point yet.\"\n\nRelief strummed through Trish as Jordan's fingers slid over her back muscles. He'd obviously noticed her sudden tension. His fingers pressed into her shoulders, kneading and pressing her closer to him. Trish felt her spine slump as she let her head drop into his shoulder, her breathing coming out on a small sigh as he massaged her. Across from her, next to Cora, Trace was now watching her and Jordan with some interest, and Trish felt her muscles tensing again. Jordan's fingers moved up to her neck and she closed her eyes, swallowing hard as she let him rub away her anxiousness. \n\nHe'd shown no signs of wanting to share her with any other men, no matter how interested Trace seemed to be. If she begged hard enough, was upset enough, she knew Jordan wouldn't do it. Unless she did something very, very bad? But she hadn't. Her pussy was still throbbing from the reward he'd given her after she'd stayed away from Alex and Bella this morning.\n\nThe meeting continued as Jordan rubbed her neck and shoulders, only occasionally contributing to the discussion in that deep rumble of his. He supported the Wolf completely in how to deal with Benson and Mirabelle's people, which seemed to surprise everyone except the Wolf. John even grumbled about how Jordan was getting soft, implying it was Trish's (although John called her 'that girl') fault. Jordan just shrugged and began to massage the back of Trish's scalp, his hand on her thigh beginning to caress her gently, leaving her to wonder if she really had changed him... and how?\n\nAlthough, if it was true, then she was glad. She didn't like the idea of innocents being condemned because they had careless and selfish leaders. She definitely didn't like the idea of a man who didn't care, which meant she didn't like John very much and so she was doubly relieved Jordan wasn't agreeing with the cold man. \n\n******\n\nThe Wolf was pleased at Jordan's reversal of opinion, he could tell. \n\nIt certainly made things easier for the Wolf, when his own right hand man agreed with him. Not that Jordan ever disobeyed orders, but it was still easier when they both agreed. \n\nJohn was correct, in part, that Trish was the cause of Jordan's change of heart. After all, Jordan had disagreed with the Wolf about this whole plan. He hadn't wanted to give the Moon a chance, he'd been with John on cutting them off from the Earth's resources and letting them slowly run out of air, food, and water. Even with the allies they had on Earth, the Moon wouldn't be able to sustain itself with just the resources from those districts. The Wolf, Cora, and several others had argued otherwise and John had been outvoted. If John had won, Trish could very well have been up on the Moon and, as an orphan and without connections to anyone powerful and wealthy, she would have certainly been among the first to do.\n\nSo yes, Jordan had changed his mind. Because there were people on the Moon other than the leeches. \n\nWith Trish snuggled into his body, curled almost trustingly in his lap, Jordan was very aware of everything he could have missed out on. He ran his fingers through her silken hair, enjoying her presence and the way she had relaxed on his lap, while still focusing on the discussion. Since they had the drug now, John and Cora agreed to send some of their top people to work with Dr. Montgomery on synthesizing the antidote. They were already using the previous antidote to try and stave off the effects.\n\nWhether or not any of it would work... time would tell. In the meantime, the Wolf would continue to hold Alex and Bella. At least, Jordan assumed. He didn't seem to have his fill of the pair yet. In fact, he didn't even show any signs of losing interest, despite his penchant for doing so. Normally it took quite a bit to keep the Wolf's focus for more than a matter of weeks... although, it often didn't take much more than that for the Wolf's captives to become devoted slaves to his sexual prowess.\n\nIf Jordan could figure out how the man did that, he might use it on Trish...\n\nExcept she might not be her, if that happened. So he wouldn't. Even when she was fighting him, resisting him, Jordan just wanted her. \n\nHe tightened his grip around her, ignoring the way Cora and Trace were now looking at him and Trish as the meeting wound up. They had both hinted at their interest in playing with Trish, but Jordan had shut them down. \n\nTrish was his.\n\n******\n\nBack in the main room following the meeting, Trish knelt on a cushion at Jordan's feet, relieved he didn't have her on his lap anymore. She figured he must have gotten tired of feeling her squirming against his erection... or maybe he was trying to indulge her sense of modesty. Maybe this was more reward for her; not being on display in front of everyone.\n\nHis hand never left the top of her head, occasionally stroking his fingers through her hair, keeping a connection between them which made her feel entirely too comfortable. Trish didn't try to move away though. After all, why fight such a little thing? Just because she was becoming used to it? Just because some part of her liked it? She would save her energy for the larger fights. That made sense, didn't it?\n\nThe doors at the end of the hall opened, and Alex and Bella were led in. Seeing them, Trish couldn't help but feel some guilt about keeping away from them by choice. They were all prisoners, shouldn't they be in this together? But she could remember what they couldn't. She knew why Bella had been punished. She was the one who had caused everything to go wrong last time.\n\nAnd now she also knew the tunnels weren't the escape she'd hoped. Especially not when Bella had behaved so recklessly once she'd been told about them. Telling her again would probably just be another mistake, but it didn't stop Trish from feeling both conflicted and guilty. \n\nEven more so, she was no longer sure if telling them was the correct thing to do. While she didn't understand exactly what the Wolf's plan was, he did seem to think that Alex, Bella, and the drug would be integral to it... and she wasn't sure his plan was all bad. Was he a kidnapping, raping, mind-fucking, sadist? Yes. On the other hand, he was also a good leader, he cared about saving innocents, and she was pretty sure his plan would help save others. \n\nEverything wasn't quite as black and white as she'd always thought. \n\nIt would be so much easier to just call him and Jordan the bad guys, but they weren't all bad. There were redeeming qualities to both of them. Heck, his own people regarded the Wolf as a hero and Jordan as someone to respect and emulate. Not that it was any comfort when Jordan was spanking her or the Wolf was torturing Alex and Bella but... \n\nTrish didn't even know what to think anymore. The people on the Moon weren't all bad either, although she thought those in charge might be worse than the Wolf... but did that excuse his depravities? She couldn't bring herself to answer that question affirmatively. But she couldn't wish him defeated either. Which was a scary thing to face, especially when she was looking directly into the eyes of his two current victims. \n\nThe soldiers escorting Alex and Bella led them over to the side of the dais, and Alex immediately pushed Bella behind him, on the cushions that were there. They were on the far side away from Trish, but she could see them cuddling and comforting each other. Alex was even stroking Bella's hair in the same way Jordan was stroking Trish's. Comparing the way Alex was with Bella to the way Jordan was with Trish made her stomach churn with conflict, so Trish moved her gaze away. That left her looking at Cora and Trace, whose attention kept turning to Bella and Alex, contemplating.\n\nThe room slowly filled up with the Wolf's soldiers and Jordan picked Trish up to settle her on his lap. He continued to play with her hair, one hand massaging her leg as he often did. She tensed, waiting for his hand to wander, but it didn't. In fact, his touch almost felt distracted.\n\nLifting her head slightly to see where he was looking, Trish caught sight of Marek and Laura. Laura was sitting next to Marek pouting, and Marek was looking at Jordan. They seemed to be having some kind of silent communication, and then Jordan nodded, which made Trish tense up. What had just passed between them?\n\n\"Don't worry, baby girl,\" Jordan murmured in her ear, his hand stroking her thigh soothingly. \"We're going to spend some time with Marek and Laura once we're dismissed, that's all. You'll enjoy it.\"\n\nA slow fizz of arousal spread through her, making Trish blush. Yes, she'd enjoyed watching and being watched by Marek and Laura. She didn't want to admit it though and she wasn't happy her body became aroused at just the thought of doing something similar again.\n\nFortunately she didn't have to answer, because the noise in the room suddenly died down as if there had been an invisible signal, and the Wolf stood up. He informed the gathered soldiers that the raid had been successful and the drug acquired, which meant they were one step closer to victory. Trish couldn't help but wonder if everyone knew what the plan was except her, Bella, and Alex, or if everyone else in the room just trusted the Wolf enough that if he said they were one step closer to victory than they automatically cheered. \n\nThe Wolf thanked Cora, Trace, and her soldiers for their hard work and help and promised they'd be well rewarded. Then he turned to Cora and asked what she'd like for a reward. Cora's eyes skipped over to Trish, but only for a moment as Jordan's arms tightened around Trish and she could practically feel his glare, before she looked down at Alex and Bella where they were seated on the other side of the dais. \n\n\"Did you have a particular choice in mind? asked the Wolf as Alex shifted slightly in front of Bella, obviously trying to protect her. \"I do believe Toy wants to play.\"\n\n\"Toy was quite a bit of fun,\" Cora started to say, just as Alex picked up a cushion and hurled it at the Wolf and Cora, obviously intending to provoke them into reacting, trying to protect Bella, whom Cora's attention had focused on.\n\nTrish felt the rumble of Jordan's chuckle. \"He's going to regret that.\"\n\nJordan's tone of voice invited her to join in his amusement, and Trish found herself almost smiling. Because Alex had just set himself up. Not that she thought he'd deserve whatever Cora did to him as punishment but... he had to have known what he was getting himself into, and the action had just been so very Alex. But she shouldn't be smiling about rape or erotic torture.\n\nAs Cora and the Wolf left with Alex, Trace headed down into the mass of celebrating men and women, and two women immediately converged on him. \n\nPicking Trish up off his lap, Jordan stood and turned towards the soldiers who were flanking Bella. The other woman knelt on the cushions, watching Alex leave with the Wolf and Cora with haunted eyes. \n\n\"Take her back to her room,\" Jordan directed the soldiers, taking Trish's hand. \"Give her some of the healing cream, she probably needs it.\"\n\nWhich only made Trish ache more as she wondered exactly what had been done to Bella... what punishment she'd endured. Bella looked relieved, but also ashamed and guilty, her head constantly turning as if trying to catch one final glimpse of Alex. \n\nThen Jordan was pulling Trish away, obviously already dismissing Bella in his mind. \"Come, little one. We have a date with Marek and Laura.\"\n\nAs she followed along behind him, Trish could feel the folds of her pussy beginning to slick in anticipation, rubbing together between her legs as she walked.\n\n******\n\n\"Thank you for joining us,\" Marek said in his deep voice, which sounded incredibly ominous and did nothing to soothe Trish's nerves - which desperately needed soothing. When she and Jordan had arrived at the apartment, Marek had opened the door for them and Trish had been shocked to see Laura bent over and tied down to some kind of frame that secured her wrists, ankles, and body, while lifting her ass high in the air. It was well padded, but Trish didn't think it could possibly be truly comfortable.\n\nEspecially since Laura had a gag in her mouth, clamps hanging from her nipples, and what looked like a clamp on her clit as well. Trish had been struck dumb as she'd taken in the erotic and disturbing sight. She'd had to press her thighs together at seeing her friend so blatantly displayed, her pussy glossy with arousal even when she was bent over, displayed, and had clamps squeezing all her sensitive bits. \n\nAlmost dazed, Trish had allowed herself to be led over to the couch where Jordan had pulled her onto his lap, his hand already sliding up her inner thigh towards her pussy. She'd squeaked and tried to grasp his wrist, only to have her nipple pinched harshly until she pulled her hands away from him and ceased trying to stop him. Which was when Marek had begun speaking.\n\n\"Laura's been very naughty,\" Marek said as he walked over to a table where an array of implements was laid out. He picked up a long, well-worn leather strap, about three inches wide, and folded it in half. \n\n\"Please,\" Trish whispered to Jordan, squirming on his lap even as his fingers began to stroke her folds. She twisted her upper body around to look at Jordan. \"Please, I don't want to watch.\"\n\nJordan's fingers slid through her slippery folds. \"I think that you do, baby girl. You might wish you didn't, but you're already turned on just from seeing your friend like this.\"",
        "Moving towards Laura, strap in hand, Marek stood so he was facing Trish and Jordan on the couch, giving him a perfect view of Trish's splayed legs, her skirt up around her hips, while Jordan's fingers delved into her pussy. He raised his eyebrow as he watched Jordan's fingers moving, making Trish flush even more with embarrassment, before Marek raised his gaze to hers.\n\n\"Don't feel too sorry for Laura,\" Marek said. \"There's a reason you and Jordan were invited to witness her punishment, other than my enjoyment of having such an attractive audience.\" He rested his hand on Laura's upturned ass, rubbing her skin as she let out a little, muffled moan. \"Laura has always been a bit of a gossip and it's something we've been working on, which she has agreed to accept punishment for. In this case, curiosity about your and Jordan's activities behind closed doors apparently became too much for her to resist and I overheard her speaking about our last encounter.\"\n\nA stab of betrayal pierced Trish. Not that Laura had ever said she wouldn't talk about Trish and Jordan's visit, but Trish had automatically considered it private. It hadn't even occurred to her that Laura might gossip about it.\n\nThe shame of being aroused by Laura's vulnerable and exposed position didn't go away, but Trish's guilt about seeing her friend like this certainly did. Gossip wasn't unforgivable, especially since Trish had never actually asked Laura to keep their time together in confidence... but she felt a strange sense of satisfaction at knowing there was going to be retribution for gossiping about it. Especially since Laura had apparently asked to be disciplined for gossip. Which also took Trish aback somewhat.\n\nShe couldn't imagine asking to be punished for anything.\n\nNot that she needed to. Jordan had laid down plenty of rules for her to follow. All she had to do was move around too much in the morning or try to pick out her own clothes in order to provoke a spanking. Of course, she didn't provoke them on purpose... did she? No. No, of course not. Even though her orgasms were often incredibly intense after being spanked or when he was rough with her, of course she didn't actually try to incite punishment. That would be... far too shameful.\n\nAs Marek continued to roughly rub Laura's bottom, as if warming her skin in preparation fro strapping her cheeks, Jordan re-positioned Trish on his lap, pulling her dress off as he did so. The appreciative look Marek skimmed over her body as Jordan pulled Trish back against him, her legs splayed on either side of his, her pussy and breasts on display, made Trish flush a deep red even as her arousal increased. She didn't understand why she was turned on with a small audience, when the larger one had nearly undone her, but she couldn't deny it either. She wished Jordan didn't like to show her off so much, although she appreciated he took more care with her modesty when they were in the Wolf's main room now; but she hated facing the part of herself which was aroused by a small, intimate audience.\n\nStill, she knew better than to try and fight Jordan on this, unless she wanted Marek and Laura witnessing her receiving a punishment as well. \n\nBoth hands slid up her body to cup her breasts, kneading them as his forefinger and thumb sought her nipples to pinch, as Marek stepped back from fondling Laura's ass and raised the strap.\n\n\"A count of ten,\" Marek told Laura, who let out a little moaning noise Trish could barely hear because of the gag. \"Hopefully after this you'll remember gossip isn't worth the consequences.\"\n\nTrish tensed, starting to close her eyes, but a vicious pinch of her nipples had them popping open again. \n\n\"Don't look away,\" Jordan murmured in her ear, just before Marek's arm fell.\n\nTHWAP! \n\nHer body jerked along with Laura's as the leather bit into Laura's ass. Trish felt her own bottom clenching in sympathy as Laura let out a muffled wail, her body bouncing slightly up and down despite her restraints. Squirming against Jordan's cock as it pressed between her cheeks, as if trying to push its way out of his pants, Trish couldn't take her eyes away from the bright red stripe across the center of Laura's ass, the way Laura's bottom clenched and jiggled, or the bright gloss of her pussy as she quivered from the blow.\n\nTHWAP!\n\nAnother jerk from both women, and Trish found she was panting heavily as Jordan continued to play with her breasts, pinching and tugging on her nipples, rolling them between his fingers as the rest of his hands massaged her soft mounds. Her thighs tried to tighten, to press together, as she stared at the matching parallel stripes across Laura's ass. With Jordan's legs between hers, slightly spread, there way no way for her to get the pressure on her pussy that she craved and Trish squirmed as her need grew.\n\nTHWAP!\n\nLaura's sharp, muffled cries were changing, now sounding much more tearful, although her bottom hadn't stopped doing its unhappy dance with every stroke that fell. Still, Trish couldn't stop staring at Laura's pussy, which was as wet and swollen as ever, despite the three strokes of the strap which had turned her entire ass a bright pink.\n\nTHWAP!\n\nThe fourth blow landed across already reddened areas, and Laura's reaction was much more intense than before. She jerked at her restraints, and Trish was sure she must be crying by now from the sound of her sobbing breaths. Laura's bottom squeezed and fell, the puckered star of her anus dancing as much as the rest of her ass.\n\nTHWAP!\n\nTrish let out a little cry herself as Jordan suddenly lifted her up and moved her to the side, pushing her onto her back as he climbed on top of her, pulling off his shirt and undoing the front of his pants. One of his hands pressed gently against her throat as he lined his cock up with her pussy, forcing her to turn towards Marek and Laura.\n\nThe other man was watching with glittering eyes, pausing to rub Laura's hot, red ass with rough movements, obviously taking a break just because he wanted to see Jordan sliding his cock into Trish's wet and ready pussy. Trish whimpered, but she didn't look away, not with Jordan's fingers wrapped gently but firmly around her throat, her body quivering underneath him as his cock began to slide into her wetness. \n\nIt felt far too good, her body heating under Marek's gaze as Jordan began to work himself into her pussy, stretching her hole and giving her exactly the stimulation she'd been craving. Holding Trish's gaze for just a moment longer, Marek gave her a wicked grin before stepping back and raising his arm again, his focus diverting back to Laura's punishment.\n\nTHWAP!\n\nJordan let out a guttural groan as he bottomed out in Trish's pussy, his groin rubbing against hers as she clenched around him and the ever-present plug in her ass. She felt so good... so full... she couldn't help but wonder if Laura was aware that her witnesses were now fucking as they watched her being punished. \n\nWould it turn her on more to know? \n\nOr was she too lost in the throbbing, burning pain of her strapping to even care? Her ass was a hot, bright red now, and it made Trish shudder with horrified sympathy, even as she was fascinated by the changing color and Laura's quivering movements. \n\nTHWAP!\n\nStill keeping one hand on Trish's throat, Jordan began to move, thrusting deep and hard into her, although his head was turned to watch Laura being whipped. Trish was shocked by the jealousy that rose up inside of her as Jordan fucked her, but watched another woman. \n\nTHWAP!\n\nHis cock was pushing in and out of Trish with grindingly slow, rough movements, taking his time with fucking her as he watched Laura's bright red bottom dance for them.\n\nWas he that entranced by the sight? Or was he thinking about doing something similar to Trish one day?\n\nAnd why did that thought make her pussy clench and throb even as she shuddered with horror?\n\nTHWAP!\n\nTrish's hands pressed against Jordan's chest, but not like she was trying to push him off... she didn't push at all. She just touched him.\n\nStartled blue eyes met hers as his head snapped back around in surprise, and Trish sucked in a breath, not knowing why she had just done that. Why she had just touched him. Her hands fell away, but it was too late. A wicked grin curved his face and when the last blow landed on Laura's ass, the hardest blow yet by the sound of her stifled scream, Jordan still didn't look away from Trish.\n\nTHWAP!\n\n\"I think our friends enjoyed watching you being punished,\" Marek said and Trish heard a slight scraping sound as he turned the apparatus Laura was restrained to. She looked over, thankful for a reason to look away from Jordan now, even though she'd practically invited his attention, to see Laura had been turned to face them. Her tear-streaked face was full of remorse as she met Trish's eyes... yet there was arousal in them too, especially as Jordan continued to grind into Trish on the couch, his thumb caressing her throat. \"Now I'm going to fuck this naughty ass, and you're not going to cum, are you?\"\n\nThe whining sound Laura made was like a wounded animal's as Marek stepped out of his pants behind her. Trish's pussy clenched as she watched him oil up his cock, looming over Laura's helpless body from behind. She could see the moment he began to shove into Laura's ass, because Laura's body bucked, her eyes practically bulging at the ungentle thrust. Laura strained, her tears beginning to flow again as Marek began fucking her ass hard, not giving her time to adjust the way Jordan always did with Trish.\n\nTrish squeaked in dismay and pleasure as Jordan began to fuck her harder as well. He looped one arm around her leg, keeping his other hand rubbing her throat, so as to spread her further open for his cock as he began to move harder and faster, as if spurred on by Marek's efforts. Now he was pounding into Trish, making her writhe on his cock as her need to cum spiraled, growing stronger, more insistent with every stoke of his dick in and out of her body. \n\nHe bent over her, driving her into the couch, and she could hear the hot wet sound of Marek's cock piercing Laura's ass, Laura's muffled sobs, and both men's groans of pleasure, melding with her own moans as her pussy began to quiver and throb. Jordan ground himself against her clit, and Trish's body tensed and released as she cried out with ecstasy. She spasmed around his cock as she came, her hands coming back up to cling to his shoulders as she writhed in heated rapture. \n\nHot liquid pulsed and another orgasm rolled through her at Jordan's hoarse cry, his cock throbbing as he came inside of her, filling her with his cum. Her nails dug into his shoulders as his fingers tightened slightly around her throat, which both scared her and somehow made the pleasure more intense. She felt almost lightheaded, her heart pounding, and yet her orgasm didn't stop, it just kept flowing through her as Jordan moved, her pussy milking him until he was drained. \n\nThe sounds of sex continued as Jordan came to rest on top of her, his lips feathering kisses around her hairline. Trish shivered underneath him, opening her eyes to see Marek still roughly fucking Laura's ass. Laura's expression was torn between pain and pleasure, and Trish recognized the wild look of a woman who was desperately trying not to orgasm - except that Trish and Bella were always trying not to out of shame, whereas Laura was striving not to in order to obey Marek. \n\nWhat would that be like?\n\nMarek groaned and shoved hard and deep into Laura, his head tipping back, muscles straining, and Laura shuddered, looking relieved. \n\nRelieved because her punishment was over? Or because she hadn't disobeyed Marek by orgasming?\n\nSoft bristles moved against Trish's fingertips as Jordan moved his lips over her temple, his cock softening inside of her. That was when she realized the bristles weren't moving - she was. She was stroking the patch of hair in the center of Jordan's chest. Her fingers stilled.\n\n\"Don't stop...\" he whispered, his voice almost pleading. His hand moved, covering hers and pressing her hand against his chest, but Trish couldn't make herself move.\n\nEmotions rose inside of her, conflicted and battering at her. As if sensing her turmoil and realizing he wasn't going to get what he wanted, Jordan sighed and lifted himself up and away, pulling Trish with him so she was straddling his lap. She twisted to look at Laura, who was letting out little panting moans as Marek removed the clamps from her nipples and clit, rubbing and sucking the small buds as he soothed her, telling her she'd taken her punishment like a good girl.\n\nJordan's hand rubbed against Trish's lower back as she watched, but he didn't try to regain her attention. \n\nThe look on Laura's face as Marek helped her up from the bench was one of adoration. No matter that her nipples were a darker red than her ass, no matter that she'd just taken a strapping and rough anal sex as a punishment, she was looking at him like he'd hung the stars in the sky. And Marek was looking at her in a way that Trish found disturbingly familiar - his expression was akin to one Jordan often wore when he was looking at Trish. \n\nScooping Laura's trembling form up in his arms, Marek spared Jordan and Trish a quick smile. \"I doubt Laura will be indulging in any more gossip about you from now on. I hope you found the punishment sufficient?\"\n\n\"Oh yes,\" Jordan said, his voice thick with satisfaction. \"Thank you for inviting us to watch.\" \n\nHis eyes slid over to the thing Laura had been strapped down to, and then to Trish, and she couldn't help but shiver again. She was sure he was imagining what she wold look like, bent over and restrained on such a piece of equipment.\n\nThe only problem was, she wasn't sure if she was shivering from fear or desire."
    ],
    "authorname": "Goldeniangel",
    "tags": [
        "bdsm",
        "anal",
        "exhibitionism",
        "voyeur",
        "spanking",
        "non-consent",
        "dark romance",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/taken-by-the-viking-ch-14"
}