{
    "title": "Within Pt. 03",
    "pages": [
        "Alasdair was in love.\n\nHe stood next to the bed and watched the steady rise and fall of Isabelle's chest. It was dark in the room though not quite full night, the sun had set and dark clouds rolled in deepening the darkness creeping over her. A sudden flash of lightening brightened the room momentarily. He smiled at the scene before him.\n\nShe had bathed before crawling onto the plush mattress, the damp strands of her hair clung to her bare shoulders in random places. He could smell the citrus scent of her shampoo over top her unique feminine perfume. \n\nThe spell twisted through him sharply, reminding him that no matter how much he wanted to let her rest he would have to wake her or suffer indescribable torment. He pushed back at the pain with all the strength his adoration of her gave him, determined to give her a few more moments of peace. He had no idea how many opportunities like this he'd have so he took a deep breath and shoved against the pain as it rose up again. \n\nIsabelle sighed softly, shifting under the covers. Alasdair pulled the blanket back and slid in next to her. She felt the mattress dip and turned to him with a sleepy murmur.\n\n\"Hello dream faerie.\" She snuggled close to him. \"Is it time?\"\n\n\"Time for what lass?\" He pulled her close and pressed his lips against her forehead.\n\n\"You know.\" She giggled.\n\nHe felt her start slightly when another flash of lightening illuminated the room followed closely by a crack of thunder. Her hand slid up his chest coming to a stop on the back of his neck.\n\n\"It looks like we'll be inside tonight.\"\n\n\"I'm okay with that,\" she said and pressed her lips against his skin. \"You're hurting aren't you?\"\n\n\"Yes lass.\" \n\nThe spell had started to overpower him as soon as she touched him. While his love for her had given him the strength to hold it at bay for a little while longer than he had been able to before, lately it had started to rebound faster and stronger than what he'd become used to over the years. \n\nIf she had noticed she didn't mention it. Instead she had accepted it without complaint the same way she had with all the demands of having an enchanted faerie.\n\nHe admired the depth of her compassion, her determination to give him some sort of freedom, and to improve the limitations of his existence.\n\nBefore his arrival that night he had reclined on the pallet in his prison that was now covered with big pillows she had shoved into his arms as he left her one morning a week prior.\n\n\"You can at least be comfortable.\" She'd said with a smile as he disappeared.\n\nNext to the pallet was a stack of books she'd given him along with something called a tablet. He still wasn't comfortable with that particular gift even though she'd very patiently shown him how to use it while explaining that there was no magic involved, just plain old human ingenuity. The books, however, were a welcome distraction once he'd gotten a good grasp of modern English.\n\n\"You don't have to wait.\" She caressed his jaw with her fingertips.\n\n\"You were sleeping lass. The first time I took you while you were sleeping was quite distressing.\"\n\n\"For both of us.\" She tilted her back to look at him. \"I'm not unwilling so you don't have to worry about that anymore.\" Her hand slid to his shoulder to pull him towards her as she rolled onto her back.\n\n\"Once is more than I'd ever want you to endure,\" he said softly.\n\nHe followed her, sliding between her thighs, smiling against her lips as she reached down to help his hardness find it's target. He pushed into her slowly savoring the sound of her breath catching and then her little moan as he worked himself all the way inside.\n\nThe spell released it's painful hold just as she took his full length. His breath escaped in a groan. He only had a few moments to enjoy the feeling of her under him before the need to spill himself into her rose up.\n\n\"Lass I\u2014\" He started. She lifted her head from the pillow to kiss him. He gave up yet again.\n\nHe swore she could sense it every time he was about to explain what had happened that night above the trees. She had been dodging his attempts for weeks. Between the demands of the spell and her distractions it had been frustratingly difficult to declare his feelings for her and describe just exactly what the blue light meant.\n\nHe had resolved to make one more attempt before giving up and waiting but she had cut him off with a kiss. Perhaps she knew what he wanted to tell her and just wasn't ready to hear his declaration.\n\nPerhaps she doesn't feel the same. He looked into her eyes when she pulled away slightly. Her smiled stalled before it reached her lips.\n\nThere's that look again. Her hands pulled him against her chest. Why does he look so sad?\n\nWithin moments her pondering was pushed to the back of her mind by the rhythm of their bodies moving together. When she looked again the sadness had vanished, replaced by a look of naked desire.\n\nThe pace of his hips faltered slightly, she moaned as he thrust hard. Her thighs tightened against him when he thrust deep and stayed there filling her with his seed. He breathed deeply with relief. The pain had receded for the moment and he could turn his focus back to her. He kissed her softly relishing the way she pulled him into her with her arms and legs.\n\n\"Better?\" She asked with a smile as he dropped onto the bed next to her a few minutes later.\n\n\"Stars yes.\" His eyes closed for a second. \"Lass\u2014\"\n\n\"Next time.\" She said quietly as she slid off the bed to walk to the en suite. \"It's not a competition and no, it doesn't diminish your manhood if I don't every single time.\" She stopped in the doorway and turned back to him. \"Besides, I don't think I would survive that many orgasms every night. I have no idea how you have the strength.\"\n\n\"Because I'm faerie.\" He smiled. She laughed and turned away.\n\n*******************************************\n\nEvery night since they'd had sex above the clearing she'd tried to keep the mood between them light. Yet, in spite of everything she'd fed or shown him, she still kept catching him looking at her with that heart wrenching look of loss in his eyes. He'd been doing a good job of hiding it away each time she caught him but it still lingered between them. \n\nShe didn't understand what was causing it and was too afraid to ask. After turning it over in her mind for what felt like a hundred times she decided it must have something to do with his mate. Maybe she reminded him of her in some way? Perhaps seeing her brought back the pain of her loss?\n\nRegardless of being shoved into a sexual relationship by the spell their connection was still young and fragile, she didn't feel right about prying into something so obviously painful. It was safer to ignore her curiosity and attempt to turn his mood around with other means.\n\nA few weeks after their night above the treetops she had an idea. \n\nShe had a nap after kissing him goodbye at sunrise and then got to work. The server at the diner in town gave her a funny look when she ordered fried chicken before ten in the morning but Isabelle didn't care. She was busy thinking about how Alasdair looked before he left her earlier. \n\nWhen she got home she packed blankets, tarps, pillows and a full cooler into the garden wagon. After a quick inventory she went to the guest room and pulled out more pillows and a fake fur blanket to add to the pile. The book was slid into a backpack along with some clothes to change into before she summoned him later.\n\nIt took several hours to pull the overloaded wagon through the trees, string up the tarps, lay out the blankets, find enough rocks to build a small fire pit and then gather wood. Starting the fire was accompanied by a string of curses Alasdair would have been shocked to hear come out of her pretty lips.\n\nWhen the orange flames finally sprang to life she wanted to jump up and do a little happy dance. The rest of her preparations went quickly. She went to the stream to wash up and change. It was still hours before sunset so she set an alarm on her phone and snuggled under the fake fur for a nap. \n\nHaving a faerie who could only escape his prison after sunset had been unbelievably disruptive to her sleep schedule. She had refused to listen to his suggestion of not opening the book each night. The responsibility of his freedom weighed too heavily for her conscious to allow her to sleep peacefully while he remained locked away. So sneaking naps anytime she could had become routine. \n\nThe alarm went off a few hours later, just as the sun was sinking below the horizon. She stayed under the blanket for a few minutes before throwing it back so she could stretch and then finish setting out the contents of the basket. \n\nThe fire had burned down to embers while she slept so she added some wood, blew on it gently, and breathed a little sigh of relief when the flames leaped up to consume the branches. \n\nShe went back to the wagon turned impromptu table and flipped the book open. It was a few seconds till he appeared next to the fire.\n\n\"Did you miss me lass?\" He asked with a smile.\n\nShe laughed at his expression when he looked at her standing at the edge of the pallet. \"A little bit.\"\n\n\"Isabelle.\" He looked around at what she'd done. \"Where did you take us? It looks a bower in my realm.\"\n\n\"It's the clearing you took me to.\"\n\nHe turned and saw the stream. \"You did this for me?\" She nodded.\n\n\"I thought once we, um you know.\" Her eyes glanced at his naked lower half. \"We could have some wine and watch the stars come out.\" \n\nA sheen of perspiration had already coated his brow. He could barely restrain himself from grabbing her and tossing her down onto the pallet. His hands shook with effort but he fought against the excruciating pain to be gentle as he slid the silky red nightgown from her and set it aside. \n\nShe went to her knees when he guided her forward, gasping as he pushed into her. His hands on her waist pulled her up to press her back against him. She looked up at him as he wrapped his arms around her. Neither of them said a word.\n\nHer heart sank as she got an up close view of that look in his eyes. She pressed his hands against her, trying to comfort him.\n\nAfter a few moments his lips curved with a hint of a smile and the look disappeared. He kissed her softly, delighting in her little purr as his hips moved slowly. She may not have been ready to accept his devotion but he could make her body sing with pleasure.\n\nHe almost laughed at the thought. Even after all the years he'd spent with them humans still confused him at times. \n\nHer little hands followed his as they moved over her front, cupping her full breasts, squeezing them in time with his thrusts, sliding them down to her thighs to pull her into his rhythm, easing between her thighs to circle the center of her arousal. Her hips pushed back harder, she slid a hand into his hair to pull his head closer, pressing her lips against his hard, mewling low in her throat as he pushed her closer and closer to her peak. \n\nIt only took a few minutes of steady deep rhythm before her hips bucked against him, she shuddered in his arms and cried out against his lips. He continued his pounding thrusts following her into ecstasy, tightening his arms around her as he released himself inside her. \n\nShe didn't pull away as he continued to hold her. She never did when he got that way, though she had noticed it had become more frequent in the last few weeks. It puzzled her but if it was something he needed she was happy to oblige. Besides she enjoyed being wrapped in his arms. \n\nHe smiled when he lifted his head. \"Thank you lass.\"\n\n\"What did I tell you about that?\" She frowned.\n\n\"You misunderstand.\" He squeezed her slightly. \"I meant for giving me a little piece of home.\"\n\n\"Oh, sorry. You're welcome.\" She rubbed his arm, smiling sheepishly. \"Why don't you pour the wine while I clean up?\"\n\nHe released her so she could get up and go to the stream. When she got back he waited till she had sat down and then handed her a glass of red wine. \n\n\"What did you decide on for dinner tonight?\"\n\n\"Fried chicken. I figured since this is kind of a picnic we should have something appropriate.\" She took a sip of wine, set the glass aside, and then leaned across his lap reaching for a container to show him. \"Are you hungry?\"\n\n\"A little. Perhaps we can eat in a few minutes?\"\n\nShe looked over her shoulder at him. \"That was quick.\"\n\n\"I'm sorry lass. I can feel it starting again.\" His gaze lingered on her butt that was almost right in his face. His fingers traced the curve of her hip. He took a breath, inhaling the feminine scent that was wholly Isabelle. \n\nShe sat back on her heels so she could look at him. Her hand settled on his chest. \"You don't have to apologize.\"\n\nIt had become an ongoing struggle between them. She wouldn't accept his apology for something he had no control over nor for his thanks once the pain had been relieved. It was another thing he didn't understand about humans and he forgot more often than he remembered to avoid saying either. So she kept reminding him. \n\nThe spell gave him enough time to let her lie back on the pallet and caress her curvy body before he was forced to penetrate her again. Her hands slid from his chest to just under his wings to pull him closer, her hips lifting to meet his thrusts. \n\nHe kept their pace slower than their initial coupling but it was still not the leisurely seduction he longed for. He ached for an opportunity to love her properly, bringing her to the edge of release again and again before letting her leap into ecstasy.\n\nHe pushed back at the need to spill himself in her and focused on how she arched under him. His lips caressed her neck as her head fell back and she cried out his name.\n\nThat pushed him past the point where he could restrain himself. His hand slid under her to pull her hips higher. He drove his shaft deep into her completely lost in the feeling of her body. \n\nAfterward they managed to get halfway through dinner before it started again. Plates were set aside so they could come together in a clash of passion. The apple pie that she'd brought for dessert suffered the same treatment when they attempted to eat that too.\n\nIt was a clear night so they were able to star gaze in between rolling around with each other on the makeshift bed. When they could relax she asked about his home realm and listened quietly as he explained a world much more colorful than the one they were in.\n\n\"Would your queen have the power to break the spell?\" She asked quietly.\n\n\"You would be rid of me?\"\n\nHer hand flattened over his heart. \"I would rather you were free than forced to live like this.\"\n\n\"So you haven't tired of me yet?\" He teased.\n\nShe lifted her head to look at him. \"I think you've learned whatever lesson that witch was trying to teach you.\" She caressed his skin. \"You deserve to be free.\"\n\n\"That's very kind of you to say but I don't know if she can break the enchantment or how I'd communicate with her to ask.\" He lied smoothly. \n\nThe last thing he wanted was a reason to leave her, even if it meant enduring the spell for the next fifty years. If he was freed the queen would call him home. He didn't want to leave her but he couldn't refuse a royal summons.\n\n\"I can help you track her down.\" She offered with a smile.\n\n\"You have special powers you haven't told me about?\"\n\n\"No, but I have the Internet and contacts through my job that may be able to help.\"\n\n\"I appreciate the thought but it's better to just leave it alone.\"\u2028\n\n\"But you could be free to fly where you'd like.\" She took a breath. \"To go home, to have a life.\"\n\n\"I had a life lass.\" He caught her fingers with his own. \"I squandered it. I let grief cloud my judgment and spent more time bedding maidens than making my way in the world. Look where it got got me.\"\n\n\"Is that how you ended up in the book? You slept with the wrong woman and got cursed?\"\n\nHe looked at her for a moment then gave her fingers a squeeze. \"It was her daughter.\"\n\n\"She expected more I take it?\"\n\n\"She had a right to since I \u2014.\" He stopped and closed his eyes. He was afraid she would pull away in disgust but she had a right to know after all the kindness she'd shown him. \"Since I impregnated her.\"\n\nShe didn't say anything for a moment. \"And you didn't live up to your obligation.\"\n\n\"No.\" His voice was soft and filled with regret. \"I'd moved on to another village with my lord. She was devastated. Alone and pregnant with a half breed child.\" He couldn't look at her. \"When the witch found me to lay her curse she told me what happened, what her daughter had done after I left. How she'd found her with the empty bottle of poison in her hand.\" Isabelle gasped softly. \"She wouldn't listen when I tried to explain that I hadn't known.\" His eyes opened and he looked up at the trees, to the stars fading beyond them. \"It didn't matter. She was right to punish me after the pain I'd caused that poor girl.\"\n\n\"But if you didn't know how could you just accept being locked away?\"\n\n\"I didn't, at first, but most of the summoners were either too frightened or just wouldn't listen to my pleas for help.\"\n\n\"I guess having a sexy faerie whose sole purpose is to fuck you senseless is a good enough reason for a person to be selfish.\" She sighed. \"Have you given up then?\"\n\n\"It's easier than being disappointed.\" He said softly. \"Sunrise will be upon us soon.\"\n\nShe smiled as he rolled her onto her back. \"One more round before you go back into your magic lamp?\"\n\n\"Magic lamp?\"\n\n\"I'll show you tomorrow night.\" Her hands slid into his hair to pull him close enough to kiss.\n\n*******************************************\n\nAfter he'd gone she laid there for a while, lost in memories of the previous night. She could easily see how a woman could want to keep him locked away for herself. Not only was he a beautiful mythical creature but an amazing lover. Her body still tingled from his touch. \n\nShe snuggled under the blankets reluctant to leave their little love nest. For the hundredth time since they'd met she wished she could fall asleep in his arms. Instead she had to settle for cuddling with the blanket that was still warm from his big body. \n\nShe looked up at the trees swaying in the morning breeze, listened to the leaves rattle against each other. Two weeks ago they floated in the air just above where she was laying surrounded by a blue light. Her lips turned down at the corners. She still hadn't been brave enough to ask him to explain his comment about his mate.\n\nIf she could be honest with herself she'd have to admit she was afraid that he wouldn't say he was in love with her too.\n\n**************************************************\n\nThe morning passed with her falling asleep under the swaying trees. When she woke in the early afternoon she packed everything up and took it back to the house. The wagon was left in the garage to be unpacked later. First she needed a shower and then breakfast. \n\nShe had several hours before she could open the book and see Alasdair. Evenings were getting longer as the summer days passed. Some nights it felt like sunset lingered so long it would never finish. \n\nIt was Sunday so she wasn't expected to be at the book store, it would just be Bernie today. She kept herself busy with chores until late afternoon. As she worked she thought about everything Alasdair had told her the previous night.\n\nIf she hadn't seen how kind he was she would have agreed that the witch had done the right thing. But she was sure that if the woman had given him a chance to explain, if her daughter hadn't felt so hopeless that she thought the only solution was to take her own life, he wouldn't have abandoned her. He was too honorable for that.\n\nShe finished wiping down the kitchen counter with a sigh. There had to be some way to contact the queen and ask if she could help free him. She pulled her phone out of her pocket and dialed.",
        "\"Isabelle.\" Bernie greeted her cheerfully.\n\n\"Hi Bernie. How's business today?\"\n\n\"Slow but it's Sunday so I wouldn't expect it to be anything but.\"\n\n\"So you wouldn't mind some company?\"\n\n\"Not at all.\" He paused. \"Is everything alright?\"\n\n\"I'm fine. I just wanted to look into something and it wouldn't hurt to have an expert's help.\"\n\n\"An expert in what?\" He laughed.\n\n\"Books.\"\n\n\"What are you looking for?\"\n\n\"Anything you've got on faeries.\"\n\n\"Why on earth would you want that?\"\n\n\"Something in that book you sold me piqued my interest.\"\n\n\"And you couldn't find what you need in John's office?\"\n\n\"I don't go in there.\" She said quietly. \n\n\"Oh.\" He murmured. \"Well I'll see what I can find for you.\"\n\n\"Perfect. I'll see you in a little while.\"\n\n***********************************\n\nThe little town was quiet as she drove down the main street and pulled into a stall in front of the book store. The bell above the door ran out cheerfully as she pushed the door in and slipped inside.\n\n\"I'm back here.\" Bernie called out in greeting. \n\nShe made her way through the maze of shelves to the back room. Bernie was there behind a stack of books searching for something on the computer. She reached around the mound of books to set down the coffee she'd picked up for him. \n\n\"Find anything interesting?\"\n\n\"I'm not sure what I'm looking for so I pulled out everything I could think of that might interest you.\"\n\n\"Thank you.\" She looked at the cover of the top book. \n\n\"Is there something in particular that you're looking for?\"\n\nShe ran her index finger along the spine of the book. \"I'm curious if there is a way to contact the faerie queen.\"\n\n\"There maybe a few incantations in a couple of these you can try.\" He looked up from the screen. \"Are you thinking of picking up where John left off?\"\n\nHer hand stopped and she took a breath. \"No, just curious.\"\n\n\"I'm sorry. I didn't mean\u2014\" \n\n\"It's okay. I know this is kind of out of the blue.\"\n\n\"It is a little odd yes.\" \n\n\"Do you remember which of these have incantations?\" She looked him with a hopeful smile.\n\n\"Let me have a quick look.\" He sorted through the pile quickly pulling out four and setting them aside. \n\n\"Do you know much about faeries?\"\n\n\"I've run across legends about them over the years but I've never studied them no. Why?\"\n\n\"I was just wondering if they're that different from us.\"\n\n\"I think I'd take anything in these books with a grain of salt. More than likely the authors used a lot of creative license.\" He smiled. \"And who would tell them they're wrong? It's not like faerie are real.\"\n\n\"You're right.\" She smiled. \"Do you mind if I take these out to the reading table? I don't want to take them home if they don't have what I need.\"\n\n\"Sure. I'll come help you search in a minute. I'm just going to send a quick email to an old friend.\"\n\nShe gathered up the books, took them out to the table at the front of the store and then slipped behind the counter to grab a stack of post it's and a pen. Bernie came out after a little while and sat across from her. The two of them sat in a companionable silence as they searched. \n\nAfter an hour she closed the last book with a little sigh. \"It's all pretty vague.\" She said quietly. \"You didn't happen to run across anything about a blue light they emit did you?\"\n\n\"Blue light?\" He eyed her thoughtfully and adjusted the reading glasses perched on the end of his nose. \"No, I didn't see anything about any kind of light. Why do you ask?\"\n\n\"Just something I read somewhere.\" She waved her hand.\n\n\"Let me go see if my friend got back to me.\" Bernie got up from the table and disappeared into the back room. She waited, looking at the books with a frown. At least she'd tried. She jumped slightly as the older man came back quickly. \"You're in luck my dear. An old friend from Cambridge had exactly what you're looking for.\" He was waving a sheet of paper as he spoke. \n\n\"He had an incantation?\"\n\n\"She did.\" He smiled and set the paper in front of her.\n\n\"That's fantastic!\" She looked down quickly and then back up at him. \"Tell her I said thank you.\"\n\n\"I already did.\" He laughed. \"You'll tell me if you're successful won't you?\" \n\nShe smiled. \"I'm not going to \u2014\"\n\n\"Oh please.\" He leaned closer. \"You can't tell me you came in here on a Sunday afternoon, intent on finding this if you're not going to try to make contact with the queen. Just promise me you'll tell me if it works.\"\n\n\"I promise.\" She looked down. \"I should go. It looks like I need to pick up a few things.\"\n\n\"I'll say a prayer for you.\" He winked as she stood. \"It would be amazing if they were actually real.\"\n\n\"Thanks Bernie.\" She threw her arms around him for a quick hug before hurrying out to her car.\n\n***************************************\n\nShe followed the instructions Bernie had printed off to the letter. At dusk a ring of nine candles was lit by the stream, their little flames danced merrily in the slight breeze. She stood back and whispered a little prayer, hoping that everything would go well and she could free Alasdair before the sun set that evening.\n\nHer eyes moved to the spot where they'd spent the night under the stars. It was likely that once he was free he'd be called back to his realm and they'd never see each other again. She hugged the book against her chest.\n\nWhat's one broken heart if it means he'll be free from all that pain? She thought. No this is the right thing to do.\n\nShe took a deep breath, hugged the book a little tighter and whispered the incantation.\n\nAt first nothing happened. Isabelle looked around with a disappointed sigh and almost bent down to blow out the candles, but after waiting a few more minutes the clearing began to get lighter. Shimmering images surrounded her sliding in and out of focus.  \n\nShe blinked rapidly and looked around. The clearing was filling with beautiful winged people. They regarded her with interest until a figure moved from the far side of the clearing on a path that led directly towards Isabelle. The people moved out of her way with bows and curtsies. \n\nIsabelle was so busy gaping at the scene before her she almost forgot to curtsy when the queen stopped in front of her. There was so much color it almost hurt her eyes. It was like someone had cranked up the saturation setting on the clearing and everyone in it. \n\n\"Who are you child and why did you call me forth?\" The queen's voice was like honey, golden and smooth, with a hint of music hidden in it.\n\nIsabelle looked up from the hem of the queen's sky blue dress. \"My name is Isabelle your majesty.\" She answered softly. \"I want to ask for your help.\"\n\n\"Come. Let us speak privately. You can explain what it is you think I can help you with.\" The queen waved her hand and two male faeries rushed from the edge of the crowd to set chairs behind Isabelle. She tried to look past the crowd to see where they had come from but there were too many people to see anything. The queen waited until Isabelle had started walking towards them before following. \n\nWhen they were seated the queen waved at the winged people gathered across from them. The crowd melted into the surrounding trees except two blond male faeries. They waited far enough away to respect the privacy the queen had commanded but close enough to come to her aid should Isabelle try to harm her.\n\n\"Ah that's better.\" The queen smoothed her gown and turned to Isabelle. \n\n\"Thank you.\"\n\n\"Your majesty.\" The queen prompted.\n\n\"Thank you your majesty.\"\n\nThe queen reached out to pat her arm. \"It's alright child. You needn't be afraid.\"\n\n\"I'm sorry your majesty. I've never met royalty before.\" She smiled shyly.\n\n\"And now you have.\" She smiled brightly. \"Now tell me what is this about? We don't have much time, the spell doesn't last long unfortunately.\"\n\n\"Well I have this book.\" She laid it in her lap, smoothing the cover lovingly. The queen leaned forward with interest. \"There's a faerie trapped in it.\" She looked up at the queen. \"I was hoping you could set him free.\"\n\n\"I'm sorry child. I haven't the power to do so.\"\n\nIsabelle was crestfallen. \"Is there any way to help him?\"\n\n\"Do you care for him?\" The queen reached out and put her hand on Isabelle's.\n\n\"Yes, your majesty.\" She whispered and looked down at the book. \"He has suffered so much.\" Her breath caught. \"I just want to help him.\"\n\nThe queen smiled. \"Perhaps you can.\"\n\nIsabelle looked up searching the queen's emerald colored eyes. \"I don't understand. I thought you said you didn't have the power to.\"\n\n\"I don't.\" She patted her hand. \"But you may.\" She reached into a pocket and pulled out an amulet with a long silver chain. \"I obtained this after we found out what happened to him.\" She took Isabelle's hand and pressed into her palm gently. \"None of us have been able to open it but I think you might be able to.\"\n\n\"Why me?\"\n\n\"Bernie told me you were asking about the blue light.\"\n\nIsabelle looked down with a blush. \"Wait. You know Bernie?\" She looked up with a frown.\n\n\"A tale for another time. Our time together is almost finished.\" The queen said and stood. Isabelle rose. The queen traced one delicate finger right above Isabelle's heart. \"I hope you are successful child. Not just for your sake or his. But for\u2014\" She waved her hand over Isabelle's belly, stopping for a moment. She smiled widely. \"Hers.\" \n\nIsabelle put her hand over the spot the queen had just waved over. \"Her?\"\n\n\"Congratulations.\" She cupped Isabelle's shoulder squeezing gently. \"When she is old enough she will be welcomed at court.\"\n\n\"Thank you your majesty.\" Isabelle whispered.\n\nThe queen turned to walk towards where the two blond faeries waited, the long waves of her silvery hair swaying slightly between her white wings as she moved. The faerie realm started to fade, blinking in and out of existence.\n\n\"Good luck child.\" The queen's voice floated back to Isabelle.\n\n***************************************\n\n\"Mother.\" The taller of the two faeries greeted her as she reached them. \"Who was that woman?\"\n\n\"That, my sons, was Isabelle. We put the book that holds Alasdair in her hands.\"\n\n\"Do you think she can break the spell?\" The other one asked softly.\n\nThe queen smiled. \"I think she has the best chance we've seen so far.\"\n\nThe taller faerie looked back to where the image of the lovely dark haired human holding the battered leather bound book against her chest was fading. \n\n\"Mother is she worth getting our hopes up again?\"\n\n\"Malin, how can you say that?\" The taller one asked.\n\n\"Because, how many times have we been disappointed in the past?\"\n\nThe queen's green eyes turned stormy as she leveled her gaze on Malin. \"Haelan is right. You will pray to the stars that woman can figure out how to break that spell and your brother is finally freed from his prison.\" The queen turned away with a swirl of silky fabric and left them."
    ],
    "authorname": "Justbecause1011",
    "tags": [
        "faerie",
        "love",
        "romance",
        "trapped",
        "nonhuman",
        "non-human"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/within-pt-03"
}