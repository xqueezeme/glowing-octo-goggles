{
    "title": "There and Back Again Ch. 055-056",
    "pages": [
        "Chapter Fifty-Five: Negotiations \n\nWhen I woke, I was lying on the floor. Not the ground, but a stone floor. I was confused -- where in the Void was I? \n\nI sat up cautiously, looking around. I was in a dusty corner of a large room. The walls were all stone, and there was only one tiny window that I could see from my vantage. All around me were broken tables, chairs with missing legs, and a variety of other rubbish I refused to think about too hard. I've apparently woken in a trash heap. Fabulous. I nudged something that might once have been a handkerchief away, before rolling over and slowly working my way to my feet. Once I was standing, I could see a little bit better; the half of the room nearest me was apparently a refuse pile, but the rest of the room housed bookshelves overflowing with enormous tomes, and tables all covered in open books, flasks, and other equipment that looked vaguely scientific. There were several doors, all closed. \n\nI knew where I was. I didn't know how it could have happened, but somehow I was in Soldier's Peak, in, or near, Avernus' laboratory. I didn't see any corpses or cages, but given that almost everything in Thedas was bigger than the game made it out to be, I assumed I was in a room that served as the library, and one of those doors led to where he'd been experimenting on his former 'brothers'. I was a bit afraid to open any of the doors, not wanting to accidentally wander in to the charnel house I knew was around somewhere. \n\nJust as I was pondering my options, one of the doors opened. A tall, deathly skinny, ghostly white-skinned bald man in robes came through, a stack of books in hand. The top book was open, and the man, Avernus I assumed, was studying something in it and muttering under his breath. He didn't appear to have noticed me at all, and I almost giggled; it was too clich\u00e9. He walked over to a table, shoved a bunch of stuff to the side with one arm, and deposited the stack of books in the newly cleared space. He turned around to exit via the same door he'd entered without even looking around. \n\nI finally cleared my throat, and he jumped as he turned back. His eyebrows, white bushy things, tried to crawl up his forehead in surprise, though to his credit, he didn't shriek. \n\n\"Who are you? How did you get here?\" \n\nHe turned towards a different door without waiting for an answer, and I felt his aura flare as he cast some sort of spell. It felt...greasy, was the only word I could come up with for it. Wynne's magic always felt warm, Morrigan's felt sort of wild, but this was like taking a bath in lard. \"My ward is intact, and the demons still survive. What are you, a demon who broke through? A fade spirit?\" \n\nHe turned back towards me, and I actually thought for a moment he might just hit me with a spell. The intensity in his eyes was frightening, and I could feel the magic gathering at his command, though I wasn't sure what spell he was working on. Afraid for my life, I reached out mentally and seized his mana, interrupting whatever he'd been about to do. He staggered and went down on one knee, his breath hissing out of him with a groan. I felt bad -- I'd no desire to hurt him -- but I wasn't about to be lit on fire, or become his next test subject either. \n\n\"I'm not a demon or a spirit.\" \n\nHe looked up at me, disdain battling with fear on his lined face. \"I can see that, templar.\" The title was spat at me like an epithet, and I sighed. \n\n\"I'm not a templar either, though I apparently have some of their abilities. Listen, I don't want to fight with you. Can we sit down like adults and talk for a minute? If I am convinced you won't immediately try to kill me, I'll give you your mana back.\" I walked over to one of the few intact chairs and sat down, gesturing to one opposite. \n\nHe struggled to his feet, face red in anger, but curiosity seemed to win, briefly. \"What do you mean, give it back? That's not possible.\" \n\nI sighed. \"Sit. I'll try to explain. But I assure you, it is possible.\" As a demonstration, I gave him back a tiny trickle of his mana. His eyes widened, and he slid into the chair, mouth open. \n\n\"Explain, then.\" \n\n\"Why don't we try to be pleasant about the whole thing? First things first. You're Avernus. You're a Grey Warden blood mage; you summoned the demons out there and lost control of them, and that was centuries ago. You tore the Veil and more keep coming through. And you experimented on the surviving Grey Wardens looking for ways to improve the Joining.\" \n\nHis eyes got even wider, if that was possible, and he glanced around, as though wondering who else might have heard. I almost laughed. \n\n\"I'm Sierra. I'm...well.\" I thought quickly. How to explain? \"I'm from a different world. As in, somewhere other than Thedas. I'm travelling with three of the last surviving Grey Wardens in Ferelden, but we got separated. I seem to be able to sort of...appear, places. And for some reason, I have templar powers. The Grey Wardens I travel with should be here in a few days to clean this place out. The Commander is looking forward to meeting you.\" \n\nHe stared at me for a while, and I let him think about things until it seemed he was ready to ask me questions. \n\n\"If you're not from Thedas, where are you from?\" \n\nI explained Earth in basic terms; no magic, technology, different cultures. I explained the game, though I avoided calling it such, and used that as a jumping board to explaining how I knew him and my multiple alternate universe theory. He was intrigued by the idea of other worlds, and I briefly wondered if I shouldn't have told him -- what if he managed to find another world? What if he made it to Earth? And then I laughed -- he would probably be powerless, and get hit by a car in the first five minutes. The Earth would survive. He could join me on the psych ward, if he survived. \n\nTo my disappointment, he had no idea how I could have travelled, though he postulated that perhaps I somehow could physically enter and cross the Fade. It didn't make sense to me -- my body was different in the different places -- but I had to agree that the Veil and the Fade were likely somehow involved. \n\nTo my surprise, he had a theory on my templar abilities. \n\n\"It makes sense, if you think about it.\" \n\nI was confused. He hadn't explained anything yet. \"It does?\" It was a bit surreal having the conversation, with Avernus of all people, but I was intensely curious. \n\n\"Well, of course. What traits make a good templar?\" \n\n\"I have absolutely no idea. And neither did the mage I asked. Wait, do you know?\" \n\nHe looked shocked, almost more so than he did at my presence. \"How is it possible that people don't know? It's entirely obvious.\" \n\n\"From what I gather, even the Chantry isn't sure why some people are better templars than others.\" \n\nHe snorted. \"That's hardly a surprise. What the Chantry knows would fit in a thimble. But how do the mages not know?\" \n\nHe muttered under his breath for a bit about lost knowledge, and I had to clear my throat again to get him back on task. \n\n\"Right. The trait that determines whether someone will be an effective templar is resistance to magic. Everyone is born with a different inherent resistance to it. Those with higher resistances are better templars. They used to selectively breed it into the royalty of the various countries across Thedas -- most of the Kings and Queens would make formidable templars. It also kept magic from manifesting in any possible heirs. If you grew up in a world without magic, I imagine you might have more magic resistance than has ever been seen here before. It makes sense you'd be an effective templar.\" \n\nIt was an interesting hypothesis, one we wouldn't be able to test without finding some way to bring someone else from Earth over, but it made for a fascinating possibility. It would also explain why Alistair, despite hating it, was such a prize for the Chantry -- his royal blood probably made him a damn good templar, even ignoring the political gain. When I wasn't so pissed off at him, I planned to tell him about it. \n\nHe asked me what I was capable of, so far, and I described the shielding and the accidental blast that had killed multiple darkspawn at Ostagar and again at Redcliffe. He made me show him the shield, and I discovered that I could even shield myself. He was fascinated, and immediately grabbed a book filled with mostly blank pages and began scribbling furiously in it with a quill. He growled at me when I tried to interrupt him, and I finally sat back to wait it out. \n\nWhen he was done, we sat and discussed things some more. Avernus had seemed to calm down, and I wasn't worried anymore that he would fireball me or something, so I carefully released my hold and gave him his mana back. His expression was wondrous, and I smiled at the childlike glee. \n\nIt was getting late, and he started to look haggard; I was guessing that staying alive this many centuries took a toll on his stamina, Grey Warden or not. He ushered me through a nearby door, warning me in no uncertain terms not to enter the door he'd come through -- it was his lab. I was in a small sitting room, furnished with a settee, a couch, and a few chairs. There was a huge fireplace, which he lit with the snap of a finger. He didn't have a spare bed in his area of the fortress, but the couch was dramatically more comfortable that the vinyl monstrosity I'd accidentally slept on in hospital, and was even a far sight better than sleeping on the ground, so I didn't mind. He found me a blanket, and an old (but miraculously clean) robe, and showed me how to use the enchanted faucet that could pour cold water into a basin. \n\nAnother nearby room held a fireplace and a few tables that looked to serve as a kitchen. He had a number of vegetables stored -- he told me he had a roof-top garden and promised to show me the following day. He told me he'd learned how to use preservations spells to keep the vegetables edible long after harvesting. There was a hook over the fire to hang a pot of water for heating. From what I could see, he was burning furniture, which made sense -- after this long, any firewood would have been long gone, but he'd have been able to scavenge wooden furniture from the rest of the keep. The trash heap I'd woken in started to make more sense -- he probably kept anything that would burn. And I was relieved to hear about the garden; I hadn't wanted to know what exactly he'd been eating for two hundred years, otherwise. He did complain about the lack of meat, but I figured I'd manage for the expected three days until my group arrived. \n\nHe excused himself to go to bed; restless, I went to the library and fished through until I found a book on Warden history. It worked -- I fell asleep quite quickly when I tried reading it while reclining on the couch. \n\nThe next morning, we shared a pot of vegetable soup, bland without any spices. I got the impression it was the same thing he ate every day. He then showed me the garden -- surprisingly meticulously well-kept with areas for vegetables and herbs, and even warm, thanks to some sort of magic ward -- and gave me a tour of the rest of the small area he'd made safe from the demons below. He didn't offer to take me into his lab, and I didn't ask. \n\nWe talked about Earth more, and about the crazy way I popped back and forth. I brought him up to date on what had happened with the Blight -- he knew from his dreams that one was happening, but didn't know it was happening in Ferelden -- and the civil war. He asked about what happened in the game, and the eventual outcome. He was interested in the Architect, unsurprisingly, and I briefly prayed that the two never met. I rather liked Avernus -- he was crusty and sarcastic, but still sort of funny -- but I didn't really trust him, and I was quite sure he wasn't totally sane. I didn't want to know what sort of mischief he could get up to with the Architect's crazy ideas to work with. \n\nHe left me to my own devices in the afternoon, and I spent some time reading his journals in more detail. Some of them described the gory minutia of each experiment, but some explained in more broad strokes what he was trying to accomplish. I stuck to those, and got a better idea of what he'd been working on with the Joining formula. He had been trying to improve the traits of the Warden after Joining, as I recalled from the game, but it talked a bit about how, and which traits seemed amenable to manipulation. I didn't understand most of the theory, but it was still an afternoon's interesting reading. \n\nSupper was quiet, and then he retired again, and I took up my history book again to try and fall asleep. It didn't work as well the second time; I was awake half the night, mind racing. \n\nThe next day I rewrote my list of 'weird things about Sierra' to see if he had any ideas. His only theory was on the templar abilities -- the how and why of everything else wasn't any more clear to him than it was to me. After a discussion of the times when I went back to Earth, he wondered if the timing of the leaving, as well as some of the discrepancies between the bodies was actually an unconscious choice on my part. I had to admit he was right -- I often did disappear from Thedas when upset, and I didn't get to come back until I was calm. \n\nHe peppered me with questions about the darkspawn ignoring me, none of which I could answer, to his frustration. I got the chance to ask him some questions about the Joining, and he answered quite candidly. Apparently he'd put off his Calling -- and prolonged his life -- through sheer determination and blood magic. It wasn't anything he could give to others, though he agreed that he could look into it and see if there was any way to prolong the lives of current and future Wardens. He didn't say he would, however; I hoped Tomas would have some sway with him. \n\nWe ended up in another discussion on the Joining -- about the number of recruits who died. He also thought he could decrease that, but wouldn't commit to actually working on it. The conversation on the infertility associated with being a Warden went similarly; he thought with enough research he could fix it, but again wouldn't agree to actually try. \n\nFinally irritated at his intransigence, I lost my temper a bit. \n\n\"Why the hell wouldn't you try? You claim to have done all...that,\" I pointed at the door to his inner sanctum, through which I'd still never gone, \"to help the Wardens, to improve the Joining -- wouldn't making sure more of them live through it be the best way to start changing the Joining formula? And perhaps if the negatives weren't so severe, it would be easier to recruit?\" \n\nHis expression was enigmatic. \"I have my own priorities, young lady. What makes you think that what you determine is important has any bearing on me?\" \n\n\"What I...it isn't what I determine that's important! Are you really so blind that you can't see the benefit to more Wardens surviving? What's the typical death rate, thirty percent? Higher? If you could ensure they'd survive, then you'd have half again as many Wardens. Even if every Warden was less effective than they are, it would be worth it. And the recruiting would be much easier if those Wardens could have families, and could possibly expect to live to old age. Some of them would die doing their duty, but perhaps not all. Wouldn't that be worth it?\" \n\n\"I can see it is important to you. Why? Are you wanting to Join? Or worried about someone who already has?\" \n\n\"My brother's a Warden. Of course it matters. And no, I don't want to Join, but don't you think there are those who would if it were more acceptable? And it would be more acceptable if it were safer, so fewer secrets.\" \n\n\"You're certainly passionate on the subject. I wonder if there's some way you could convince me to your point of view.\" \n\nI narrowed my eyes. He might have been acting all innocent, but the sparkle in his eye said he knew exactly how I could convince him. \n\n\"Alright, Avernus, what exactly is your price?\" \n\nHe looked like he was thinking about it, and I growled. He smirked and then finally told me. \"Well, two things, I think. The first, and I know you'll be shocked by this, is blood. Yours, to be specific. You have something that makes darkspawn unable to even see you. I want to know what it is, and if I can duplicate it. So I'd need some of your blood. I can bleed it slowly, and give you a potion to increase how fast you create more. It wouldn't really harm you.\" \n\nI considered. I'd given blood before for blood drives; I'd signed my organ donor card and the 'donate my body to science' cards, I didn't really have a concern about him experimenting on my blood, especially if it would help. \n\n\"What's the second thing?\" \n\nHis expression was a little more concerned. \"Well, more blood. From...after. I want you to give me your word that if I can guarantee those three things you asked for -- improved fertility, fewer initial deaths, and a delay to the Calling -- that you will undergo the Joining and allow me to take some of your blood after.\" \n\nI was in shock, to say the least. I had never considered becoming a Grey Warden. There would be some obvious benefits -- stamina, sensing the darkspawn -- but also some obvious down sides. I might lose whatever it was that made darkspawn ignore me, and that was even assuming I survived the Joining. \n\nI considered. It would probably be worth it, if the benefits were great enough. \"How long a delay in the Calling?\" \n\n\"Say, twenty years? Fifty years from the time of the Joining -- most men would have died of something else first.\" \n\n\"How many fewer deaths?\" \n\n\"I can't say for sure until I do it, but at least half as many. And I can commit to continuing to look for improvements, and adding them in to any subsequent formulas.\" \n\n\"And will any of it work on those who are already Wardens?\" \n\nHe seemed to think about it for a bit. \"Those who are newly Wardens, say within...five years of their Joining, probably. Both the infertility and the Calling, though I'll have to do some more research to confirm that. But for those who have been Wardens for many years, probably not. I can't reverse the taint. I can only slow it down.\" \n\nI tried to think, but my mind was racing. \"And no more killing Wardens -- or anyone else -- to do the research? You'd find ethical ways to figure it out?\" \n\nHis expression was sour, but he nodded. \"I suppose I can live with that. It's not like I have a fortress full of 'volunteers' anymore, anyway.\" \n\n\"Let me think about it. I can't...I need to think.\" \n\nHe nodded. \"Don't think for too long. I don't have that much time left, and it would be a shame to have to track you down if you were halfway across Ferelden when I figured it out.\" \n\nI nodded. \"I'll give you my answer today. Later.\" \n\n\"When do you think your friends will arrive?\" \n\nI counted days. \"The day after tomorrow. Give or take. Unless they get delayed, or Levi has trouble finding the right path or something.\" \n\n\"Who's Levi?\" \n\n\"The great-something grandson of your former Commander. She blackened their name, but he's made a living as a merchant. He knows the way through the tunnels leading to this place. Sort of.\" \n\nHe nodded. \"That will do. On that note, I'm going to get some work done.\" \n\nI asked him for spare parchment, and he supplied me with a quill and a notebook of sorts. I spent part of the day making lists of pros and cons, but in the end, it came down to this: if I wanted my brother to avoid his Calling, leaving me alone in Thedas, I had to do it. I just couldn't stand the thought of losing Aedan in his fifties to go into the Deep Roads on a suicide mission. No matter what else I thought of, nothing could get around that one fact. \n\nWhen Avernus came out for supper, I told him I'd go ahead. I also warned him that if he didn't keep up his end of the bargain to continue improving the Joining formula, I'd make sure Aedan or someone else would make him pay for it. ",
        "He wanted to get started taking blood right away, and I agreed. He gave me some sort of potion which he said would help my body replenish the blood he took; it tasted sort of like blood, and I was revolted, but considering I'd actually agreed to drink darkspawn blood, I figured I might as well get used to it. He then used a narrow blade to make a small cut in the crease of my elbow, which stung, putting my hand in a jar to allow the blood to collect there. He cast some sort of preservation spell on the jar itself, I assumed so the blood wouldn't clot or get contaminated. I shuddered at the feeling of the blood pouring down my skin, and started talking to distract myself from the sensation. \n\n\"How will you perform the Joining? Don't you need Archdemon blood? Or will it have to wait until this blight is over?\" \n\nHe gave me a funny look. \"You are aware this is a Grey Warden base?\" \n\nI nodded, confused. \n\n\"What makes you think there wouldn't be a supply of Archdemon blood here?\" \n\nChapter Fifty-Six: Throwing Punches \n\n\"What makes you think there wouldn't be a supply of Archdemon blood here?\" \n\nI stopped, mouth agape. In the game you had so few dialogue options, but it never even occurred to me that Avernus would have the supplies for the Joining. \n\nHe continued. \"Of course, it is downstairs somewhere. Hidden, obviously, but there are quite a few demons between it and us. We will have to wait until your friends can clear out the levels below.\" \n\nAt that I sputtered, \"You want to do it right away? Don't you need to do the research first, figure out how to improve the formula? I suppose it's selfish, but I'd like to use the improved one on myself. I'd rather not die in the Joining.\" \n\nHis smirk was...annoying. \"I have already done the research. I improved the failure rate of the formula long ago -- I don't know the numbers for certain, but I think the death rate should be less than ten percent. And the Calling will be easy -- the ritual I have been using to delay my own will easily translate. The fertility issue is new -- I'd never thought very hard about it -- but I'm sure a few days of reading and I will have it figured out.\" \n\n\"You bastard! You already had two out of three of my demands met?\" \n\nHis expression was still smug; I had the desire to punch him, and probably would have if I hadn't been leaking blood from my dominant arm. \"I am afraid so. I didn't think just the fertility issue would be enough for you to go through the Joining. But now you have given your word.\" \n\n\"How do you know I won't just call it off? You negotiated in bad faith, I'd say our contract is well and truly void.\" \n\nHe examined my face for a moment. \"You could, but you won't. You gave your word, and you won't break it. You are not like me.\" \n\nHe had me, and he knew it. I could have claimed the deal invalid, but the minute he compared me to himself... Damn you, Avernus. I hate you right now. \n\nI slumped in defeat and waited until the blood finished draining. I wondered how he managed to keep the blood flowing -- shouldn't such a small wound have healed by now? -- but then it occurred to me he had probably enchanted the dagger. Or coated it with something. Clotting would be very inconvenient for a blood mage if it happened at the wrong time. \n\nI started to feel a bit woozy, so Avernus cast a small healing spell and then helped me lie down. I fell almost instantly asleep, which was a nice change. \n\nThe following day I felt much better, so after another vile concoction he did it again. He swore the potion would ensure I'd recouped enough, and I didn't feel lightheaded anymore, so I went along with it. He spent the rest of the day researching fertility stuff, and I spent it reading his earlier journals, where he detailed reducing the death rate of the formula. Too bad I hadn't read them yesterday! \n\nI was both nervous and eager to see everyone. I wanted my armour back -- my jeans had started to feel weird, after so many months in Fereldan clothing and armour -- and I needed my brother. I wanted a hug, and I wasn't about to ask Avernus! I even wanted to see Alistair, though I had no idea how that was going to go. I'd thought long and hard about that, and come to no conclusions other than waiting to see what he did, first. \n\nAfter much thought, I decided not to tell anyone about my deal with Avernus. I knew Aedan would lose it and try to prevent me from taking the Joining, and might even kill Avernus. Tomas would try to talk me out of it though I didn't think he'd actually refuse a volunteer, and everyone else might find out Grey Warden secrets they weren't supposed to know during the course of the shouting matches. They wouldn't be able to change my mind, and it was drama I just didn't need. I warned Avernus to keep his mouth shut on the subject as well, and he agreed. \n\nWhen we met for supper, he told me he was having difficulty figuring out the fertility component to my demands. He said he just didn't know any fertility rituals, and had few books about them at the Keep. I immediately thought of Morrigan -- given her plan to conceive the child of a Grey Warden, if anyone knew anything about fertility rituals, it would likely be her. I mentioned I had an apostate friend who might be able to help, and he was quite pleased at the possibility. I realised I trusted Morrigan with my secret Joining plan -- she wouldn't judge, and wouldn't tattle. \n\nAt supper, when I complained about difficulty sleeping, Avernus offered me a sleeping draught of some sort. I accepted it, but stared at it suspiciously for a long time before finally deciding that he wouldn't poison me before my Joining. I drank it all in one foul swallow, curled up on my couch, and promptly feel into a deep, dreamless sleep. \n\nI felt well refreshed in the morning, not groggy at all; Avernus could have made a fortune on Earth with that sleeping medicine! I was impatient for everyone to arrive, and I went out onto the rooftop garden hoping to be able to see the party when they approached. My impatience was rewarded, because it wasn't an hour later when I saw a group of tiny figures moving out in the courtyard. I hoped Aedan had read my notes on the undead, but couldn't really see what was happening that far away. I tried shouting to attract attention, but the only thing I succeeded in doing was pissing off Avernus. \n\nHe grumbled as he walked out onto the roof. \"They can't hear you from there, traveller. You'd have a better chance of attracting the demons than your friends from this distance.\" \n\n\"Alright, let's go down and meet them.\" \n\n\"Are you mad? There are demons down there.\" \n\n\"Yeah, that you summoned! Open the damn ward, Avernus. We need to help them.\" \n\nHe looked at me like I had a third head. I had a brief, inappropriate internal discussion about extra heads being the unfortunate side effect of the sleeping draught before he interrupted my train of thought. \n\n\"There are what, eight of them? Ten? Well-armed, experienced in combat, yes?\" \n\nI did a quick head count. \"Twelve, I think, actually. Thirteen if you count Levi.\" \n\n\"And we are two. You are unarmed, unarmoured, and even if you had weapons, you have only been wielding them for a few months at the most. And I can't use my most effective spells -- any more blood magic down there, and I'll tear the veil so badly it will never close. We wait for them to come to us. They know I'm up here, yes? They will get here eventually.\" \n\nI sighed, frustrated. He was right, and that pissed me off; I wanted to get down there and see my brother. When I lost sight of the small group in the courtyard, I went in, deciding to wait immediately inside the warded door. I grabbed a book and dragged a chair over, sitting down to fret and pretend to read. \n\nThe day dragged on painfully, with Avernus locking himself back in the laboratory to do research, presumably on fertility, so I sat alone, then paced alone, then sat some more. We had supper, finally, by which time my nerves were shot. Avernus finally settled down nearby on a chair in the 'library', and I thought he was possibly being empathetic and trying to help, which was odd. Or maybe he's just curious, and as impatient as I am. \n\nIt was late, and dark out, when we heard sounds of fighting filtering through the wall between us and the Commander's Office where demon-Sophia waited. Once he thought she was dead, Avernus lowered the ward keeping them out. I stood anxiously, and finally the door slowly creaked open. \n\nAlistair entered first, with Sten and Shale on his heels, and then everyone else filed in behind. I'd thought the room was a good size, but it felt positively crowded with thirteen people, a golem, and a mabari. I laughed in relief when I saw my brother enter, brown hair sticking out from his helmet in clumps. \n\nWhen Alistair spotted me, he stopped with an oath, causing a chain reaction leading to Aedan walking face first into Sten's armoured shoulder. After a few choice curses, Aedan noticed me with a gasp. The whole group looked dumbfounded for a moment, but eventually smiles broke out. \n\nExcept for Alistair. He reached up and pulled his helmet off, dropping it without even looking at where it landed. He walked over to me, slowly, hands up in a placating gesture. He reached out to grab my hand, and I let him, though the urge to bolt was strong. He tried to meet my gaze, but I kept averting my eyes, and he eventually gave up. \n\nI could see Morrigan behind him, shooting me what I could have sworn was a sympathetic look; Aedan's eyes were dark and he looked about to murder Alistair. \n\nAlistair spoke, his voice low but loud enough for everyone to hear. \"I'm sorry, Sierra. We need to talk about what happened, but I don't think this is the time. I just wanted to apologise, first. Can we talk about this later?\" \n\nI glanced up at him once, noting a rather puffy, inflamed black eye, before looking away and stepping back. \n\n\"No.\" I pulled my hand out of his grasp, edging around the templar. I made it to the group behind him, and found myself welcomed into a space behind Morrigan and beside Aedan. My brother put his arm around me, and Morrigan reached back, allowing me to grip her hand. My eyes filled with tears that I tried to wipe away angrily before they could spill. \n\n\"No? Sierra...\" He looked at where I stood, confusion and hurt clear in his expression. \n\n\"No, Alistair. I'm not okay. You don't get to just...do that, and then say sorry and think that I would just forget it happened.\" \n\n\"I just want to fix things. Please? I need you.\" \n\n\"You should have thought about that when you asked me if I was a monster and then walked away.\" \n\nAedan's arm tightened, and I was grateful for the support, but also for his silence. For everyone's silence. I was suddenly, finally done with being feeble, with needing to be protected. And my little family were letting me fight my own battle. I felt Tomas' hand on my shoulder, but still no one else spoke. \n\n\"I spoke rashly. I should have...well, anything but that. I was upset, but that's no excuse.\" \n\n\"At least you're aware of that much.\" My tone was icy, and part of me cringed inside; his puppy dog eyes were sad and puzzled and hurt, and his bottom lip stuck out just slightly in a pout. He seemed almost dazed, and I wondered if he had expected me to just fall into his arms after an apology. It had been pretty clear to me that he had broken it off with me, and then he was surprised? When I had decided to wait and see what he would do, I had assumed he would either be angry still, or just avoid me. I had no idea how to react to this. \n\nI hardened my heart and turned away from him. I couldn't deal with him any more at the moment. \n\n\"We have bigger things to talk about right now. This is Avernus. Aedan, Alistair, and Tomas,\" I pointed to each man in turn, \"are the Grey Wardens. The rest of these people are their companions, and we can make formal introductions later.\" I turned to Aedan. \"I believe Avernus said that it wouldn't be safe to sleep without repairing the tear in the veil first, otherwise this place is going to fill back up again. I know you guys must be exhausted, but can we take care of the veil and then find somewhere to sleep? We can make a plan tomorrow.\" \n\nEveryone reluctantly agreed; fighting a keep full of demons and undead a second time didn't appeal to anyone, really. Aedan handed me a pack with my gear, and I snuck into the little room I'd been sleeping in to change into my leathers. Leli helped, but after an obvious look at the thin door between us and the main room, we didn't speak. It felt good to have my daggers on my hips again. \n\nWe trooped down the stairs, with me sandwiched between Aedan and either Leli, Wynne, or Morrigan the entire time, and Alistair following us at the back. The loudest sound was clanking footsteps from the warriors in their plate; no one spoke above a whisper, the entire atmosphere tense and uncomfortable. \n\nAvernus set up a ritual in a massive room with multiple scorched areas on the floor; he warned us that demons would try to stop him, and then when we all confirmed we were ready, he stepped into the first scorch mark and started chanting. \n\nDemons swarmed out from the ground, but they were met with ice and steel, and finished off quickly. I even got in a few lucky shots with my daggers, which Morrigan had spelled with ice; I froze and shattered a rage demon, and grinned at Aedan in triumph. His expression, unlike mine, was of abject terror; I sighed, ignored him, and got ready for the next wave. \n\nWhen Avernus paused in his chanting, I noted the scorch marks were gone from the floor under his feet; the stone was back to a normal grey. The first tear had been sealed. \n\nWe repeated the same process over and over, the demons having fewer areas to appear as each tear closed, and soon rage demons gave way to something else, which I assumed were ash wraiths. They looked like some odd combination between demons and undead like Revenants, but were somewhat translucent too. They were defeated as well, breaking apart into millions of swirling motes of dust or ash as they fell. Finally a desire demon made an appearance, and it was immediately surrounded by the warriors and Aedan; I didn't even get a chance to get close. I could feel its mana, though, and I drained it, making it a simple matter for the boys to finish it off. \n\nI hadn't really realised just how oppressive a feel the keep had had until it lifted. The last tear was repaired, and suddenly it felt like just a room instead of a den of pure evil. We all shared smiles, too exhausted for cheering. I fell into Aedan's arms, and he held me close. \n\n\"Avernus? Can you show us to somewhere we can all choose rooms close together?\" \n\nThe old mage nodded and led the way to a wing of the keep, on the third floor. There was a common area that at one point had probably held couches and chairs but was now conspicuously empty, with several doors leading from it. He indicated we could each take one room as we liked, and then excused himself to go back to his own room. Aedan grabbed a bedroll and a pack, handing them to me, then grabbed another one each for himself. He nodded at Zev, who nodded back; taking my hand, he ushered me and Prince into one of the rooms without another word, and shut the door behind us. Each room had some sort of magical lantern thing, which Avernus had explained; Aedan touched it, and it sputtered to life, exuding a weak yellow glow. We need to steal some of those when we leave. \n\nThe room we were in wasn't large; there would have been room for a double bed, a dresser, and a chest, but it had its own attached cubicle with a washstand, chamber pot, and large copper tub. There was no furniture -- when I saw Aedan's confused look, I told him about Avernus' scrap pile, and he laughed -- so after sweeping a thick layer of dust away with a dirty blanket, Aedan and I spread our bedrolls side by side in one corner, with space in the middle for Prince. \n\n\"You can go find Zev's room, if you want. I'll be fine here, honestly.\" \n\n\"Not a chance. I didn't wait up for you last time, and look what happened.\" He smiled but it didn't reach his eyes; clearly, he was feeling guilty for going to bed when Alistair and I broke up. I squeezed his hand, and he continued. \"Zev gets it; it's fine for tonight. We can figure things out tomorrow.\" \n\nI used the cubicle to change out of armour and put on my light linen sleepwear, while Aedan did the same in the bedroom. We lay down, one on either side of the mabari, who was already fast asleep. \n\n\"You want to talk about it?\" \n\nI shook my head. \"Not tonight. We're both exhausted. We can talk tomorrow. But I have to thank you for giving Alistair that nice shiner.\" I touched the area around my own eye. \n\nAedan chuckled. \"Don't thank me. Morrigan gave it to him.\" \n\n\"She did? I could see her zapping him with lightning or something, but a black eye?\" \n\n\"I'll tell you in the morning. The whole story's a bit amusing.\" \n\n\"I'll hold you to that.\" \n\nHe reached up and touched the lantern, and the room was immediately pitch black. I settled into my bedroll to sleep, but my hand encountered Aedan's when I stroked Prince's short fur; I grabbed it and squeezed, and then fell asleep holding it. \n\nI woke at one point from a dream where I relived Alistair walking away from me over and over. Aedan held me while I sobbed, with Prince nosing me and licking my fingers mournfully, and I finally fell asleep again on my brother's shoulder. In the morning, I woke early, and stayed in my bedroll for a while watching Aedan sleep. He looked so peaceful, I didn't have the heart to wake him. He woke on his own a few minutes later, smiling at me when his eyes opened. \n\n\"I missed you the last few days.\" \n\n\"I did too. I hate being back there. And then I was stuck here with just creepy Avernus for company. I haven't been in his lab yet, and I don't think I want to.\" \n\nHe grimaced. \"I suppose we will have to; we'll need to see what he did, in the name of the Grey Wardens. I'm not looking forward to it.\" \n\n\"So tell me what happened after I left?\" \n\nHe coloured. \"Sierra...I never dreamed that Alistair would...that he...I went to bed early, and I didn't know. After being such an idiot earlier, I should have waited up. I'm sorry.\" \n\n\"Nonsense. I asked Morrigan to tell you to go to sleep. And nothing you could have done would have changed what happened. Avernus thinks I subconsciously wish to go back, and he's probably right; after what happened with Alistair, I had a moment where I wished I'd never come to Thedas. It didn't last long, but apparently that was enough. So anyway, I came back to camp, and then?\" \n\n\"Well, we all heard you cry out, and I scrambled out of my tent just in time to see your armour hit the ground. Morrigan was there, and when Alistair came out of his tent, she turned on him. She shouted that it was his fault; honestly I've never seen her so angry. I thought she might kill him. He got nervous -- I think he thought she was going to light him on fire or something -- and at least he didn't smite her, but he stole her mana. She got even angrier, and just walked up to him and punched him right in the eye. He flopped down like a sack of flour, and then she told him that if he didn't tell us what he'd done, she would.\" \n\nI giggled at the mental image of Morrigan, stripped of mana, punching Alistair. \"Oh, I wish I'd seen that!\" \n\n\"Yeah, I laughed, until I realised that something big must have happened. He told us what he was worried about, what he'd accused you of...everyone was so angry, Wynne wouldn't even heal his black eye, and I thought Leliana might give him another one. Morrigan threw your necklace at him, and his face went all white, like he was going to be sick. ",
        "\"Everyone took turns shouting at him and telling him what an idiot he was. How obviously if you'd been after something, you could have gotten it from Cailan. That you saved his life, and tried to stay away from him. He was still angry at first, trying to defend himself. We gave him a chance, and when he heard himself trying to explain it, I think he figured out how stupid it was. Sten even challenged him to a duel, told him he was a coward and not worth associating with. Honestly, no one has spoken to him since. I figured if I said anything, I'd kill him.\" \n\nI sighed. \"He hurt me. Badly. I never dreamed he could think that of me. Not after everything.\" I had never gotten over the disbelief that Alistair would leave the PC if she recruited Loghain. I guess I hadn't wanted to believe it, really. \"You should have seen the look he gave me when he walked away; like I was some disgusting piece of filth. I don't think I'll ever get rid of that image. And then when I saw he'd made himself a little one-person tent...it's stupid, because I don't know where I thought I would be sleeping after a fight like that, but the blatant message that I wasn't wanted, that I didn't belong...\" I blinked away some tears. \"I've had a lot of bad things happen, in my life, but I'd never felt like that before. I'd never really hoped, before, I guess.\" \n\nI took a deep breath. \"I won't say I'm not heartbroken, and disappointed, and angry. I want to punch him, and I just might, later. I don't know if I'll ever forgive him. I felt sort of dirty, after what he said. Violated. But Aedan, he's your best friend, and your partner. You need him, and we all need to work with him. I can't say I won't be avoiding him, but you can't. You need to put it behind you.\" \n\n\"You're...amazingly rational about all this.\" \n\n\"I've had a week to cry and gnash my teeth and rip out my hair. Not that I won't end up crying again later, but it's pretty clear to me I have to somehow pretend it didn't happen. That none of it happened. He clearly didn't love me, anyway. I need to get over it.\" \n\n\"What makes you say that?\" \n\n\"Well, can you think of anything, any evidence that would convince you that I am capable of that sort of cold-hearted manipulation?\" \n\nHe thought about it, slowly shaking his head. \n\n\"Exactly. But he did. If he loved me, shouldn't he know I neither could, nor would do that? I'm not even a good enough actress to pull it off. There's a song about that on my phone, somewhere -- 'If you don't know me by now, you will never never never know me...' I think he loved the idea of me, of someone who loved him back. But it feels like it wasn't about me, in particular. And what pisses me off most is that I still love him, anyway. He's a good man, when he's not being insecure and stupid. It would have been so easy to just accept his apology...but I can't live like that, knowing he thought it was possible that I'm that sort of monster.\" \n\n\"I'm sorry, Sierra. I truly am. I wish he'd never had the chance to hurt you. When you cry, it makes me want to murder him. For what it's worth, I don't agree. I do think he loves you. I think he's phenomenally stupid, and I don't blame you for not wanting to stay with him, but he loves you. I'm sure of it.\" \n\n\"It doesn't matter. It's better this way.\" \n\n\"It is?\" \n\n\"This was never going to work out. I knew it before, and I tried to ignore it for a while. But he's the heir to the throne. He needs to marry a noblewoman and have babies. Carry on the Theirin line. I'd only be in the way, and we'd both be heartbroken later. A clean break is better.\" The tears threatened to spill again, and I wiped them away. \"This is better.\" \n\nHis expression said he wasn't so sure, but I knew."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-55-56"
}