{
    "title": "Falling Snow Ch. 06",
    "pages": [
        "There are moments in the night when the brain is neither wake nor asleep, when the mind wonders listlessly in a shallow sleep. It was here where Tom's brain drifted.\n\nIt had been a long day and he wanted nothing more than to slip into a deep, dreamless sleep. It was all he could think about as he and Aresta walked back to his apartment in a state of total exhaustion. He climbed the stairs to his second story apartment, his feet dragging on every step as he went. He opened the door, not bothering to close it behind him. His shoes were left in the hallway; his shirt by the kitchen. A trail of breadcrumbs towards his destination. He climbed into bed, intent on not being seen or heard from again for several hours. But as with so many things in life, when you want something the most it remains just out of reach.\n\nHe was too tired to sleep.\n\nA uniquely human problem, he mused. He imagined if animals could speak they would laugh at the notion of being too tired to sleep. Those big mammalian human brains overriding the needs of the body. So stupid. Yet here he was. His body had all but shut down from exhaustion but his mind remained adrift at sea, unwilling to let him drift beneath the waves and into the darkness of rest. He wasn't really even sure if he was awake or asleep, his thoughts roamed with no real direction.\n\nSheets rustled and Tom suddenly felt the soft weight of a woman's breasts press into his side. A feeling that he had grown to love but was still getting used to.\n\n\"Wake up baby warlock.\" A soft voice said to his right.\n\n\"Mmmmm, don't want too.\" Tom muttered\n\n\"It can be dangerous to drift in the 'In-between', baby warlock, you must wake up.\"\n\nSoft lips pressed onto his own. His face became flush as an inhuman pleasure spread through his body. \n\n\"We may have worked on hardening your body today, but your mind is still vulnerable.\" A pleasant warmth spread through his body as his mind began to awaken. \n\nThe kiss deepened. His semi-hard morning wood began to harden in earnest. Tom made a grunting sound, part pleasure and part annoyance at being woken up.\n\n\"You must wake up.\" Shyira whispered. \n\nShyira kissed his chin softly and then his neck more passionately. She sucked on his neck, no doubt leaving a hickey for his classmates to gawk at. She moved further down now, raining kisses down his chest, kisses that had begun to incorporate a lot more tongue. \n\nTom groaned in pleasure. He felt rather than saw when Shyira smiled. Her fangs brushed against his skin, sending shivers of pleasure down his spine\n\nShe latched onto one of his nipples with those perfect pouty lips of hers and sucked and lavished it with her devilish tongue. Her claws ran down his stomach and began to play with the elastic of his waistband. He was now fully hard. Shyira let go of his nipple with a pop of lost suction. She moved back up his body, the hard nubs of her nipples brushing against chest as she went.\n\n\"You must be more careful master.\" She kissed him on the lips again. \"The 'In-between' between sleep and wakefulness is the time when you are most vulnerable to mental attack.\" \n\nShe did something with her tongue that almost made him forget that she was talking. \"You mustn't stay there for long, not until we've had time to strengthen your mind.\"\n\nTom was hearing what she was saying but was finding it terribly uninteresting at the moment. There would be time for talking later. He kind of wanted her to do that thing with her tongue again. Maybe a bit lower this time. His cock would feel amazing if those puffy lips of hers were wrapped around it right about now. Her magic lesson could wait.\n\nHe went to move his arms. Intent on grabbing a fist full of snow white hair and moving her head until she was doing something more interesting with her lips. He was her master after all.\n\nTom's mind snapped fully awake as he finally opened his eyes.\n\n\"Shy...why are my hands tied up?\"\n\nShyira let out a girlish giggle. She flashed him a snowy smile filled with mischief. \"Why indeed?\"\n\n\"Shyira...\" He said, a note of warning in his voice.\n\nShyira's eyes only beamed brighter in response. It was at that moment that Tom finally noticed the other occupant of the bed. Aresta was down by his thighs, giving him a smirk that a cat might give a mouse. It was a look that was familiar to him, although something seemed off about her. There was some sort of strange dynamic going on between the two succubi. Aresta may have been looking at Tom but she was most definitely NOT looking at Shyira.\n\nThere was also the fact that Shyira's tail was wrapped tightly around Aresta's throat, holding her head down close to the sheets.\n\n\"Aresta here has been a very bad girl and I think she needs to be punished.\" Shyira kissed the purple bruise on his chin. The one left by Aresta's punch back in the rock quarry.\n\nAresta's eyes finally flickered to Shyira before returning to stare at Tom. He could have sworn he saw the briefest hint of nervousness in her expression.\n\n\"She's always been a stubborn little slut but I think it's past time that she's taught some manners. Don't you think?\" Shyira was as bubbly and girlish as ever, she was letting nothing betray her real emotions. \n\nShyira's clawed hand cut Tom's boxers off like they were made of tissue paper. She threw them to the floor like they were a nuisance. His cock sprung out into the cool air of the room. Goose bumps rose on his skin as he was finally naked inside his room.\n\nShyira smiled at him. She traced patterns on chest with one of her claws \"You look cold. We should do something about that, but first I think Aresta has something she wants to say to you.\"\n\nHer tail moved in a fluid, sensual motion as she moved Aresta head into a new position. For Aresta's part, she had to shift her position on the bed to avoid being strangled by Shyira's tail. Tom soon found her bent over his lower body, her feet on either side of his calves. Shyira had her head a mere inch from the head of his cock. He could feel the heat of her breath on his skin, causing his shaft to twitch with the stimulation.\n\n\"Now, say what you need to say to your master.\" Shyira said. Her voice had taken on an icy edge.\n\n\"I\u2014\" Aresta started.\n\n\"KISS,\" Shyira said with a hard edge to her voice, \"your Master's cock before speaking, SLUT.\"\n\nAresta licked her lips nervously, before pressing her lips to the head of his cock. Her eyes never left his. Tom let out a breath he didn't know he was holding. A shiver ran up his spine. After a moment, she lifted her lips from his flesh and began to speak. \"I'm sorry for striking you,\" she said rather formally, \"you are my one true master and I was out of line.\"\n\n\"Do you accept her apology Tom?\" Shyira asked. It didn't seem to be a casual question.\n\n\"Y-yes.\" Tom said.\n\n\"Good,\" she said before looking back to Aresta, \"now back your words up.\" Shyira said.\n\nAresta finally looked at Shyira in earnest, a question in her gaze. She began to move one of her hands towards Tom's engorged member, only for Shyira's tail to tighten around her throat. Aresta's hand froze in mid movement. \n\n\"Keep your hands where they are and suck,\" she paused a moment before adding, \"and if I find that you've taken one ounce of power from him, you'll spend the next thousand years inside an ice statue in my thrown room.\"\n\nAresta once again adverted her eyes from Shyira's frosty gaze. Her hand moved back to the sheets as her eyes settled on Tom. Her mouth lowered to the head of his cock. It was a painstakingly slow movement, at least to Tom's eyes. The first inch of his cock dipped into her warm, wet mouth as he struggled not to moan out load.\n\n\"She can do this every day for a millennia until you've forgiven her for her transgression against you, master.\"\n\nThat sounded great, Tom thought. His head rolled back. His hands strained against his bonds. With Shyira pressed against his side and Aresta straddling his legs, Tom couldn't move much more than that. Somehow the inability to move his body in response to what was happening to him only made the pleasure that much better.\n\nAresta had his entire shaft in her mouth now. Her lips were pressed against the base of his cock as she was trying her best to lick his balls. The act seemed to be stressing the laws of physics a bit for his liking, but he couldn't deny how great it felt. \n\n\"Every day for a millennia.\" Shyira whispered. \n\n\"Fuck.\" Tom said breathlessly.\n\n\"Although, I'd much rather show you what a REAL wake up call entails.\" Shyira whispered in his ear. She ran her tongue along his ear, biting and nibbling his earlobe.\n\nTom never considered himself to be a quick shot, but with two succubi working him over, he wasn't sure how much longer he would last. He could already feel the beginnings of an orgasm in his balls.\n\n\"Shall I show you?\" Shyira whispered.\n\n\"Y-yes.\"\n\n\"Enough\u2014.\" Shyira said abruptly.\n\nA choking sound followed, as Shyira's tail roughly pulled Aresta's head up. Tom's cock popped out of Aresta's mouth and was left swinging in the cool air of room.\n\n\"\u2014of the warm up then. Time for the main attraction.\"\n\nShyira replaced Aresta over Tom's lap. Her lips brushed the head of his cock in a quick, peck of a kiss, before his head slipped into the warm embrace of her hot mouth. \n\nShe smiled at him, her teeth pushing down ever so slightly on the head of his dick, before Shyira opened up her throat and took his entire length into the back of her throat.\n\nHe left out a silent gasp of pleasure as Shyira expertly worked over his dick. The two blowjobs couldn't have been any different. Where Aresta had aggressively jammed her mouth onto his cock, intent on taking every inch as quickly as possible; Shyira was lovingly working over his cock, her very throat muscles seemed to be responding to her will, contracting and moving to some inhuman rhythm.\n\nHe was in heaven. A comparison Shyira would have probably laughed at in her girlish way.\n\nHer eyes glittered with lust in the dark room as she looked at Tom. He wondered what she was thinking. Not an uncommon question for him. Shyira had an inhuman poker face he'd yet to figure out and Tom often felt himself wondering what exactly was going through that head of hers. \n\nShyira did something with her tongue that made his thoughts snap back into focus on the blowjob he was receiving. Tom wasn't sure he could last much longer if Shyira intended to continue where Aresta left off.\n\nHe needn't have worried. Her mouth soon released him back into the cool air of the room. \n\n\"That's about enough of that, I think.\" She said.\n\nShe moved to straddle his waist. \n\nOh fuck, he thought, as she lined up their sexes.\n\nShyira sank slowly down the length of his erection. Tom didn't think he could possibly last any longer. This orgasm was coming, he was seconds from erupting into Shyira's waiting pussy.\n\nJust what I need, he thought, to show two succubi what a quick shot I am.\n\nJust then, a deep chill began to spread into this skin. Starting at the tip of his cock, it moved to the base and then to his thighs. His skin wasn't numb, per se. It was more like the sensation of cold skin moving back into a warm room after being outside in the dead of winter. It spoke of prickling skin and nerve endings coming alive.\n\nShyira was staring at him, her eyes glowing an icy blue, reflecting off the white bone of her horns in the dim room. \"Look at me, baby warlock.\"\n\nHow could be not.\n\n\"I've been going easy on you. Fucking you like a mortal would. Fun, but I think it's time that I taught you something new.\"\n\n\"W-what?\" He started to speak. Goose bumps had broken out all along his cooling skin.\n\n\"Do not fear the cold.\" She said with more authority in her voice. \"It holds no sway over you.\"\n\nAnd Tom could feel it too. His whole body felt like he had just been plunged into a frozen lake in the dead of winter. Yet he felt no discomfort. It kind of reminded him of being in a hot tub out in the frigid winter air. He could appreciate the bite of the frigid air without it ever really touching him.\n\n\"Good.\" Shyira said. She reached up and cut his bonds with a single motion of her claws. \"Now put your hands on me.\"\n\nTom reach out and grabbed her milky thighs. She was sitting on her knees with only the head of his cock still inside of her. Tom half thrust, half pulled her down to meet their sexes together. Shyira ran her fingers through her snow-white hair, her clawed hands briefly grabbing onto her own horns, as if she was holding on for dear life. \n\n\"Good!\" She said in a throaty purr. \"Embrace the chill of my body and fuck me, Master.\"\n\nHer breath came out of her mouth in a mist of heated air and Tom suddenly realized that the room had grown much colder without him noticing. \n\nTom thrust again, Shyira moving to match his rhythm.\n\nA startled choking sound reminded him again of Aresta's presence. She had been watching them the whole time; Shyira's tail still wrapped tightly around her throat. She was jerked roughly up Tom's chest as Shyira moved her into position.\n\n\"Make yourself useful, slut. While I fuck my Master.\"\n\nAresta replaced Shyira's earlier position as she began to lavish his chest with her tongue and lips.\n\nShyira made sensual, animalist grunts as they fell into a rhythm. Tom held out longer than he thought he would. Although the strange sensation of animalist pleasure and the deep chill of his body was swiftly pushing him over the edge. \n\nHis orgasm rose again and this time Shyira let it take him. Just before he slipped over the edge, Shyira rough pushed Aresta out of the way, as she leaned over and locked her lips to his \n\nHis cum shot into his succubi as their lounges danced to an unheard tune. Tom could feel the gentle pull of energy leaving his body with every pump. His cries were muffled by her cold breath as his whole body seemed to be embraced in a deep snow bank of cold.\n\nDefinitely not a mortal woman, he thought as his orgasm subsided. He lay on the bed next Shyira. Their foggy breaths moved up in unison in the cold air of the room.\n\nTom's thoughts began to drift back to sleep as the post sex exhaustion set in. \n\nSleep, he thought. Shyira leaned over and kissed his lips, momentarily waking him from his slumber.\n\n\"Not yet Baby Warlock.\" She said with a suddenly girlish giggle and a dark expression.\n\n\"Stand up.\" She said.\n\nTom must have given her a look.\n\n\"Please.\" She said with a girlish pout on her beautiful lips.\n\nWith a grown, Tom stood up in the cool air. He shivered slightly in the cold.\n\nShyira smiled at him again. \"I know just what to do to warm you up.\"\n\nShe spread her legs, revealing the mess he had left between her thighs. Tom expected her to beckon him over for round two. Instead she used her tail to drag Aresta's head up against her pussy. It presented him with a perfect look at her bubble butt sticking up in the air in front of him.\n\n\"Mmmm, I do love a good pussy licking.\" Shyira grabbed two handfuls of bubblegum pink and red hair and mashed Aresta's face into her wet sex. \"Are you ready for your punishment slut?\"\n\nTom looked more than a little confused at this point. Had he just been kicked out of bed? \n\n\"Hold out your hand baby warlock.\"\n\nHe did as he was asked and was rewarded as a whip of pure white leather dropped into his palm out of nowhere, the faintest smell of brimstone in its wake. \n\n\"Lesson two,\" Shyira said, a malicious twinkle in her eye. \"How to discipline a disobedient Succubus.\"\n\nTom looked at the whip in his hand and then to Aresta's plump ass in front of him. He briefly felt the dull throb from his jaw before he gripped the handle of the whip.\n\nShyira only smiled as she watched his expression.\n\n****\n\nTom awoke warm in his bed many hours later. Light was streaming through the window. He had finally gotten the sleep he was looking for.\n\nTom could tell almost immediately that a restful body wasn't the reason he had woken up. There was a subtle shift in the apartment. Something intangible that his subconscious had decided was important enough to wake him up.\n\nHe looked to his right to find Aresta curled up on his side. Her horns nuzzled his chest. Her breath warm against his cool skin. She shifted position, causing the blanket to slide off of the side of her body. He could see her naked ass in the morning light. It was still red and bruised from the night before. A memento from the whipping he'd given.\n\nTom felt a little guilty as he watched her sleep. Yes, he was her master and yes, she did kind of deserve it for taking their training too far. At the same time though, he was deeply uncomfortable with his actions the night before. He wasn't into S&M or BDSM, or whatever they were calling it now. \n\nMore than anything he knew that he had enjoyed it. The feeling of power at having the whip in this hand. The feeling of satisfaction looking down on her plump ass as it turned steadily redder. The thrill he got from the sound of the whip crack and the lustful cries of pain that came out of Aresta as he put her into her place. The whole time, Shyira only stared at him, that mysterious smile on her face as she egged him on with her eyes. He was starting to think that Shyira might not always be the best influence on him.\n\nHe let out a short snort of amusement at his own line of thought. Imagine that, he thought, a succubus of the pit not being the best influence.\n\nThat strange feeling in the apartment returned to him again and he decided to investigate. He thought he heard voices in the living room. He scooped up a pair of boxers off the floor as he walked towards the door to his room.\n\nNo reason to flash anyone if he had company, he thought. He walked into the living room and looked at the sight that greeted him.\n\nShyira was seated on the edge of his kitchen counter, her legs crossed in front of her. She was wearing a white nightie that was as sheer as the winter's mist. Her snow white hair still had the freshly fucked look from the night before. She also wasn't smiling. She had a stern look on her face that brought out the predatory look of her blue eyes and made Tom's heart beat a little faster.\n\nYet, what caught his attention wasn't his mostly naked succubus or the alarmingly stern look on her face, but the creature in front of her.\n\nA great muscular mount of white fur knelt at Shyira's feet. Its head was bowed and staring at the floor, it's ape like arms supporting most of its weight. It wasn't looking at Shyira, not even at her feet. Which was quite the feat, considering that even bowed, its height came nearly to the top of his kitchen counter.\n\nIt's a fucking Yeti, he thought. Tom took a step back into the doorway of his room, not wanting to be seen by the pair. He seemed to have walked in on the middle of their conversation.\n\nThe creature gave off a series of deep raspy grunting sounds. Like the rustling of leaves in the wind. A deep and commanding voice, despite not being terribly loud.\n\nTom had no idea what the creature was saying, but Shyira appeared to understand him completely. She tilted her head ever so slightly to acknowledge a point.\n\n\"Be that as it may,\" Shyira said in a quiet commanding tone, \"I have needs and they will be met.\"\n\nThe creature replied in more of its raspy language. If Shyira didn't roll her eyes in response you would certainly be forgiven for thinking so.\n\n\"Yes, I am aware of the season.\" She said dismissively. \n\nThe creature started to speak again before being roughly cut off by Shyira.\n\nShyira narrowed her eyes slightly. \"Your bannermen are honorable warriors and I have no doubt they will relish the chance to serve their mistress.\"\n\nThe wall of fur in front of her dipped its massive head in response before beginning to respond in its raspy language. \n\n\"Enough.\" Shyira said, finality in her tone. Her eyes glowed faintly blue as her temper flared.",
        "If it was possible, the creature seemed to blow even more deeply in response to her tone, clearly worried that he had offended Shyira. Tom would be worried too if he was in his shoes. Shyira slid off the counter and stood in front of the creature. The size difference between the two would have been comical if he didn't know any better. \n\nShe could probably kill him with no thought at all, he thought.\n\n\"It is not the blood of your host that concerns me but their loyalty. I have needs in this town and they will be met.\"\n\nThe creature grunted in what Tom assumed to be a 'yes.' Shyira glanced in Tom's direction before turning her attention back to the creature.\n\n\"That's all for now.\"\n\nShe waved one clawed hand and with a flash the creature was gone. The smell of brimstone filled the air as he walked into the kitchen.\n\n\"Did you enjoy the show, baby warlock?\"\n\n\"You knew I was there the whole time, didn't you?\"\n\nShe smiled at him. \"Always.\"\n\n\"That thing was...\"\n\n\"Hughar, son of Grimm. Lord of the Frost men of The Snow Flurry Hills. Principle bannermen of,\" Shyira paused as she smiled at Tom, \"well, me.\"\n\nShyira has an army? He thought, that's terrifying. Shyira seemed to be gauging his reaction before continuing.\n\nShe looked thoughtful as she turned in the direction of the departed creature. \"Hughar is a loyal servant, but he still has much to learn of decorum.\" Turning back to Tom she said, \"Now his father on the other hand, that man would lick the snowflakes off of my boots it I ordered him too.\n\nGiven that Shyira had already tied him up once in the last 24 hours, he decided it was for the best if they got off the subject of boot licking, before Shyira got any ideas.\n\n\"And why would you need your ah,\" he paused a moment, \"bannerman here?\"\n\nShyira only looked at him, like a teacher looking expectedly at a favorite pupil. Tom met her gaze as he took a moment to think.\n\n\"There were men watching us as we left the greenhouse, weren't there?\" He asked. \"Aresta isn't as subtle as you. I caught her looking up the street.\"\n\nShyira seemed pleased by his question. She beamed at him and nodded, a truly radiant and sexy look on a freshly fucked succubus.\n\n\"Who were they?\" He asked.\n\nShe shrugged. \"The holy order of something or another. They seem to have a presence in this town.\"\n\n\"You don't even know their names?\"\n\n\"It doesn't matter. I've known a thousand such organizations in my time. They're warlocks, that's all I need to know. You can ask your little girlfriend if you really want to know.\"\n\nTom decided to ignore her last comment. He suddenly saw an opportunity to ask a question that had been on his mind for a while.\n\n\"And how much time would that be?\"\n\nShyira's eyes looked incredibly old as a slow smile crept onto her face.\n\n\"Quite a while, Master. I've watched the mountains rise from the sea foam, only to be whittled down to dust once more. I watched a man from Bethlehem crucified and witnessed the city of his executioners' burn, while a fat man fiddled. I've danced with kings in castles made of stone and stared into the wild abyss of the new world.\"\n\nTom stared at her wide eyed.\n\n\"Plus, I got to watch Babe Ruth hit the first home run at Yankee Stadium, which was pretty awesome.\"\n\nTom laughed, whatever tension in the room instantly evaporated by Shyira's girlish charm.\n\n\"You have a date tonight, I hear.\" She said matter-of-factly.\n\nTom snapped out of his train of thought as he rubbed the back of his neck, unwilling to meet Shyira's eye. He knew this topic would come up at some point today and he wasn't eager to have it. \"Yeah,\" he said, \"we're getting something to eat before walking through the carnival they're having on campus.\"\n\nShyira was looking intently at Tom again.\n\n\"Warlocks tend to complicate things, especially female warlocks who don't know their place.\"\n\nWhat the hell did that mean?\n\n\"Have fun,\" she continued, \"but don't allow your guard to drop.\"\n\n\"Right...well I'm going straight to my date from class, so I won't be seeing you until later.\"\n\n\"Well if she doesn't fuck you, come back here and I'll mend your swollen dick.\" She said with a girlish grin.\n\n\"It's supposed to be, 'mend your broken heart.\" He said as he walked towards the shower.\n\n\"That too.\" \n\nShyira watched him walk away.\n\n****\n\nTom's lesson plans remained a mystery to him as he moved through his classes for the day. \n\nThe sound of pencils scratching on paper filled his surroundings. His professors droned on, one interchangeable body in front of a podium after another. He probably needed to know some of this stuff, but despite his best efforts he couldn't bring himself to focus.\n\nHis thoughts were focused on his impending date with Sara. It was all he could think about. If he had been smart, he would have kept his mind occupied with something other than is impending date. His nerves were increasingly frayed as the day dragged on and he was trying not to let it show. There are few things worse for an introvert than to be allowed to have his mind wander. His thoughts moved from one possible bad outcome to another, until he had all but convinced himself that his date would end in disaster. \n\nIt's not that he'd never been on a date before, he had. Even the most socially awkward of guys manage to stumble into one every once in a while. But his dates had been few and far in between. The fact that his last one had been...a while ago, wasn't helping his nerves much.\n\nThis is ridiculous, he thought later in the day, I'm not that scared, awkward teenager anymore. I'm a warlock and a master of Succubi. A simple dinner should be a piece of cake.\n\nSoon enough, he found the last of his classes being dismissed for the day. He walked out of the lecture hall and into the late afternoon air. This is where he would normally turn left, towards the cheap, run down apartments South of campus where he lived. Instead, he turned right, towards the trendy bars and expensive condos that lined the river North of campus. His path took him through the center of campus. Everywhere he walked he saw activity. People moving around. Booths being erected. Party games being set up. By the time Sara and him were done with dinner, the campuses' yearly carnival would be in full swing.\n\nTom looked down at himself. Despite his nerves, he looked damn good or at least he thought so. He'd replaced his usual t-shirt with a button-down shirt. His tattered old Levi jeans had been replaced with a pair of new ones. The good ones, with the faded areas and expertly distressed knees. It'd taken him two weeks to gather up the courage to buy them for himself after he'd seen a popular guy in class wearing them. He'd even remembered to take off the stickers this time before going out in public.\n\nYeah, he looked good, he thought to himself as his confidence began to rekindle itself once again.\n\nWhat confidence he had dimmed upon reaching Sara's building. While Tom's apartment building was an old building, complete with broken elevator and peeling wallpaper; Sara's apartment building was a sleek modern place. All glass and steel and money. A real, honest to god doorman opened the door as he walked up.\n\nHe could have sworn he felt eyes following him as he walked across the lobby. The fact that he wasn't stopped on the way to the elevator, allowed him to regain a measure of his confidence in his appearance...and jean choice, back.\n\nUpon reaching the top floor he knocked on her front door. It opened a moment later to reveal Sara standing in the doorway, looking at him with an appraising eye.\n\nToo say that she cleaned up well would have been an understatement. She looked great. She wore a black sundress that stretched to mid-thigh, it glittered in the last rays of sunlight streaming through the window. A pair of modest heels showed off her firm calves. She'd managed to gain control of her unruly mop of brown hair and put it into a stylish hairdo that perfectly matched the light coat of makeup she'd applied to her face. \n\nShe was the perfect girl next door. Exactly the type of girl men fantasized about after they grew up a bit and gained control of their hormones. With that dress, Tom could almost picture her on the cover of some 1950's teen magazine. The nice, sweet, innocen- \n\n\"It took me fucking forever to get my hair to look like this.\"\n\n-well, he thought, maybe not the complete girl next door look.\n\n\"Hi.\" He said lamely.\n\nA thought struck him and his heart sank like a stone. He looked first at her, obviously, designer dress and then down to his own big-box-store bought clothes. I'm under dressed, he thought with sinking horror. \n\nFor Sara's part, she looked him up and down, her arms crossed in front of her in a judgmental way. She seemed to come to some sort of conclusion before smiling and making eye contact with Tom.\"\n\n\"So, where are we eating?\"\n\n\"Uh, you like BBQ? Big Joe's has the best in town.\"\n\nSara looked down at her elegant dress and back up at Tom, before a small amused smirk pushed up the corner of her mouth. \"Sure, I could go from some ribs.\"\n\nI'm an idiot, he thought as they walked out of her building, she's obviously dressed to go to a nice place. Should have picked the steakhouse.\n\nIt was a short walk through downtown. Before they knew it, they were both seated at a rustic BBQ joint situated right on the edge of the river. Complete with hay bales and expertly distressed tables. The place smelt of peanuts and wood smoke. Very authentic. A waitress in a cowboy hat and a pair of daisy duke shorts came up to give them menus. It was a nice touch that was only mildly ruined by the large neck tattoo and lip piercing she wore.\n\nTom was looking at his menu, while occasionally stealing glances at Sara looking at her own.\n\nSara didn't even bother looking up from her menu before answering the unspoken question between them. \"Don't you fucking dare try and order for me,\" she said with an amused look.\n\n\"I wasn't.\" Tom said defensively. Sara seemed to be even more amused by his reaction. \n\n\"Sure,\" she said rolling her eyes. Putting down her menu she looked at Tom. \"What's your deal anyway?\"\n\n\"M-my deal? What do you mean?\"\n\n\"I mean, magic is passed down in humans through blood lines. Father to son, Mother to daughter.\"\n\n\"So?\" Tom said.\n\nSara looked exasperated. \"So, new magic users are rare and it takes generations for them to become as powerful as you. I've looked through our records and there seems to be no record of a Thornton Family.\"\n\n\"It's not like my family is capable of magic or anything like that.\"\n\n\"That just isn't possible. Powerful magic users don't just appear nor do they go unnoticed for this long. We should have records on your family somewhere. Who exactly are you?\"\n\n\"Well I did just learn how to use magic recently.\"\n\nSara looked even more puzzled at his response. \"Impossible. No one manifests magic this late in life, it almost always comes with the onset of puberty.\"\n\nTom was just about to respond when the waitress arrived to take their order. True to her word, Sara ordered for herself and then proceeded to order for Tom as well, a smug look on her face through it all. The waitress left after taking their orders. Sara had just turned back to Tom, to continue their earlier conversation, when he heard a voice coming their way.\n\n\"Well, well, well. If it isn't miss Van Westler herself.\"\n\nA small group of well-dressed guys were approaching the table. Tom could see the polished brass buttons on their identical dark blue dress jackets. Their polished leather shoes clicked on the tile floor as they walked. Even the way they walked screamed trust fund brats. He watched a stone-faced expression pass over Sara's face.\n\nThe one speaking appeared to be the little group's leader. He stood just slightly ahead of the others. He was tall and blond and had the type of chiseled jaw found in fashion magazines...or maybe the Hitler youth, Tom thought. He instantly didn't like the guy.\n\n\"I didn't think I would find you slumming it in a place like this.\" He said cockily.\n\n\"Oh, fuck me,\" Sara said under her breath, \"not these idiots.\"\n\nMore loudly she said, \"Best ribs in town I hear.\"\n\n\"Sure, if you like eating with your hands like a savage and staining that pretty dress of yours.\"\n\nHe hungerly looked Sara up and down, like he was looking at something that belonged to him. It only served to make Tom dislike the man even more. Sara stared him down, fully aware of what he was doing.\n\n\"For the life of me I can't figure out why you're here then.\" Sara answered smoothly. \"God forbid you stained that pretty coat your daddy bought for you.\"\n\nHis smile slipped, ever so slightly at Sara's rebuke, before he regained his composure.\n\n\"Good thing I did or I would be here to see your pretty face. I must say you clean up well.\" He gave her another hungry look.\n\n\"Easy enough when there's someone worth cleaning up for.\" Tom felt the eyes of some of the group on him, although Mr. Hitler Youth was still ignoring him.\n\n\"Will I be seeing you at the party later? You could finally have the chance to grip my wand,\" he gave Sara a knowing smile, \"it's made out of a special hard wood from Europe.\"\n\nTom's eyes narrowed as the men in the group fought to suppress knowing grins.\n\n\"Knowing you it's probably too short and thin more my liking.\" Sara answered dismissively. \n\nHis friends were trying to hide smiles of a different type now. Tom could have sworn he heard one of them snicker.\n\nThe guy's smile turned forced as his eyes finally swept over Tom. He could practically feel the judgment in his look, right up to the point where his eyes swept back to Sara without a word being spoken.\n\nHe just fucking dismissed he, Tom thought, like I wasn't even fucking here.\n\n\"I see you're slumming it in more ways than one. Have you taken a liking to the local rift raft?\"\n\nSara picked up a small bread stick from the basket on the table. She held it in front of her, between her two pointer fingers.\n\n\"What can I say, sometimes a girl needs a bit more than her wand can offer her.\" Sara looked from the bread stick, straight down to his dress pant covered crotch. \"If you know what I mean?\"\n\nTom couldn't help but smile while forcing down a laugh.\n\nMr. Hitler Youth finally looked pissed. \"Well I expect I'll be seeing you tonight. I'm sure my father,\" he said, empathizing the word, \"would love to see you there.\"\n\nHis friends were practically laughing out loud as the big guy turned and left without further comment. His friends followed behind him.\n\n\"Who the hell was that guy?\"\n\nSara took a bite of the bread stick in her hand. \"You remember that guy I was supposed to marry? \n\nTom nodded.\n\n\"That's him, Christopher Wentworth Edwards IV. He's the dean's son and a royal pain in my ass.\" Sara shook her head in disgust. \"When I turned down my parents' arranged marriage, they sent me here. They thought that if I was forced to interact with him socially I would warm to him and be spreading my legs by the end of freshman year.\" Sara snorted. \"Fat chance of that happening.\n\nThere was a slight tingling in his nerves as he watched the group walk away. Something was nagging at him and Sara's comment only reinforced his suspension. \"They're warlocks?\"\n\nShe shrugged. \"When they want to be. They all have a wand shoved so far up their collective asses it's a miracle that they ever get any magic done.\"\n\nThat peaked his interest more, although come from Sara that last comment was still pretty rich, he thought. Tom stared more closely as the group as they walked towards the exit.\n\n\"I'm sorry but I'm going to have to skip the carnival.\" Sara shook her head in disgust. \"Now that I've run into them I have to make an appearance at this party. It will look like a slight against their family if I don't.\"\n\nHe tried to hide is disappointment. Dates not ending well were nothing new to him, but he thought this one was going pretty well. He hadn't spilled anything on his new clothes yet and Sara had yet to fake going to the bathroom so that she could jump out a window. All in all, he thought it was going well. The image of Chris Edwards and his smug fucking smile popped into his head and his disappointment turned to irritation. \n\nTom shrugged. \"I'll go with you,\" he said, a new determination in his voice.\n\nSara raised an eyebrow at that. \"That's a bad idea. A warlock from an unknown family showing up to one of these parties is just asking for trouble.\"\n\nTom may not have gotten to take Sara to the carnival but he wasn't about to let his date end now. \"Why not? It sounds like fun.\"\n\n\"OK,\" Sara said with a level look, \"but don't say I didn't warn you.\n\nThey left the restaurant after they were done eating and stood at the curb waiting for their ride. They could hear the beginnings of the school carnival in the distance as they waited for their ride to pick them up.\n\nThe sun sank over the horizon, they climbed into the car as it pulled up to the curb. The cab rolled smoothly onto the street. The lights of the carnival twinkled in the night, like false stars over a blackening sky. Sara and Tom moved away from the happy sounds of the carnival and towards a different kind of party.\n\n****\n\nI didn't get quite as far as I wanted to in this chapter. We were supposed to get all the way through the party before ending, but those scenes were going nowhere fast and I wanted to get this chapter out. We have one, maybe two chapters left in this little adventure. \n\nHope you all enjoyed it. I read all comments, both public and private, even if I'm not the best at responding. So, vote and let me know what you think. -NP"
    ],
    "authorname": "NightPorter",
    "tags": [
        "succubi",
        "demon",
        "succubus",
        "university",
        "bondage",
        "geek",
        "nerd",
        "warlock",
        "wizard",
        "dinner"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/falling-snow-ch-06"
}