{
    "title": "Slender Man Ch. 04",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 21 - So Close, So Far Away\n\nI grabbed my radio. \"Goodwright! Get a defibrillator over here, stat!\" I said on it. It seemed like an eternity but was just 30 seconds later that Goodwright was running up with the device, which most of our Police cruisers had in their trunks.\n\n\"Oh my God.\" Cindy was gasping as her friend lay prostrate on the ground. I could see she needed to be distracted.\n\n\"Stay with the girl.\" I told her. \"We've got this.\" And we did. Lieutenant Irwin was well trained in first aid, as was I. We ripped off Teresa's outer layer of armor and tore open her shirt.\n\n\"Second layer of armor.\" I said. I reached underneath Teresa and ripped open its velcro attachments on the back sides. Irwin had the defibrillator ready to go.\n\n\"Clear!\" he ordered. We moved back. Irwin applied the shock and Teresa's body jolted violently. He bent down and listened for a heartbeat.\n\n\"I've got a heartbeat.\" he said. He put his hand under Teresa's neck to give mouth-to-mouth resuscitation, but she gasped and sucked in air, then began breathing again.\n\n\"Let's get her to the Hospital.\" Irwin said.\n\n\"No, call an ambulance.\" I said. \"She's burned. Badly.\" Indeed, under the light of flashlights, we could see the red of her forearms and also her abdomen...\n\n* * * * * * * * * * * * * * * *\n\nThe ambulance arrived quickly, as did a large number of TCPD patrol cruisers and the Chief in his SUV (yes, he has one, but it's not as cool as mine). They put Teresa on the gurney and into the ambulance, then put the child in next to Teresa. I told Lt. Irwin to take Captain Ross to the Hospital. I knew she'd be no good to me while Teresa was in danger.\n\nThe area was surrounded, and Police Officers were going through the copse of trees in an organized line, very bright lights illuminating their way. Others were scrambling around the grounds and around the house like a bed of disturbed fire ants.\n\nTo no avail. Slender Man got away. He had defeated me, this round.\n\nA three-hour search in an ever-widening circle yielded no one. I did get a call in on the radio from Detective McGhillie. \"We have some tire tracks about 100 yards past the Point Hollow property line, right next to the River.\" \n\nThe River was not much more than a deep creek at that point; underground springs fed it as it meandered towards Town, including a spring near the Fire Department Range, which made it larger as it went through Town.\n\nI sent a Crime Lab team to get the impressions and photos of the tire tracks. Then I said to the Chief: \"I'll bet the bastard had some kind of breathing mask, and he just swam down the River to the car. I should've thought of that.\"\n\n\"I think your idea is right.\" said Chief Moynahan. \"But you didn't have enough people to catch him, and you did the right thing taking care of Captain Croyle. Oh, and you can go to the Hospital any time you like. We'll handle things here, Mr. Crowbar.\" \n\nBut it would be two more hours before I left. I did get one report from J.R. Barnes. \"He threw smoke, Commander.\" he said as he exhibited a burned out canister. \"Either dark purple or black. That's why it looked like he disappeared.\"\n\n* * * * * * * * * * * * * * * *\n\n\"The girl is going to be okay.\" said Cindy. \"Parents are in the nearest waiting room.\"\n\n\"Any word on Teresa?\" I asked.\n\n\"She's breathing okay, her heartbeat's fine now.\" said Cindy. \"Dr. Morgan said the burns suggested a high-amperage shock. Voltage alone isn't deadly; it's amperage that can kill you. He said Teresa got a bad enough shock to mess up her heartbeat, and the defibrillator restored it. He of course used fancy medical terms that I never learned while at University.\"\n\n\"And the burns?\"\n\n\"The ones on her abdomen are second degree burns.\" Cindy said. \"They'll heal up but she's going to be in some pain for a few days. Her arm burns may have come from trying to grab the perp's hands when he stuck the contacts against her sides.\"\n\n\"Okay, then.\" I said. \"How are you doing?\"\n\n\"I'm in shock, pun not intended.\" Cindy said. Then she raised her right hand with five fingers stretched out. \"That's five.\" she said.\n\n\"Purple Orders.\" I said, understanding. \"Yes.\" We both knew that while Teresa had earned a Purple Order for these wounds, the Board of Inquiry was going to have a heart attack (pun not intended) over her fifth such award. All jokes about desk duty aside, this could really get Teresa grounded.\n\n* * * * * * * * * * * * * * * *\n\n\"The girl is okay.\" said Dr. Morgan some minutes later when he came to see us in the waiting room. \"She was injected with sedatives like the other kids were.\"\n\n\"We're putting a guard on her.\" I said. \"She knows who picked her up from school, which is likely who our perp is. We'll need to interview her just as soon as she opens her eyes.\" Dr. Morgan nodded.\n\nAt 5:30am, Wednesday, March 15th, Teresa woke up and Cindy and I spoke to her. I said I was going to go back to the Station. Cindy stayed with Teresa, of course.\n\nPart 22 - Slender In Puzzle Pieces\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the redheaded MILF from in front of University Hospital at 7:00am, Wednesday, March 15th. The Ides of March. And the anniversary of the day I'd had to shoot and kill someone who was trying to assassinate me.\n\n\"Channel Two News has learned that Police Captain Teresa Croyle was seriously injured in an attempt to capture the Slender Man kidnapper last night!\" said Bettina. \"Little Rachel Kelly, who was kidnapped by this mysterious criminal, was recovered and is safe at University Hospital. Police intercepted the kidnapper at the Point Hollow property in the northwest corner of the County. The kidnapper had the little girl he'd abducted with him, and she had no injuries when she was recovered. However, the perp had some sort of shock device, and Captain Croyle was nearly electrocuted when she attempted to apprehend the criminal at the scene. She suffered second degree burns, but is expected to fully recover.\"\n\n\"This is the third kidnapping by the perpetrator known as 'Slender Man'.\" Bettina said. \"Police have no answer for why the first two children were left alone, and experts tell Channel Two News that it is likely this third kidnap victim was going to be left at Point Hollow... where a Slender Man sighting occurred just hours before.\"\n\nI said \"I would like to have a sighting of these so-called 'experts' Bettina and the Press keep referring to. I think these 'experts' are more mythical than Slender Man himself.\"\n\n* * * * * * * * * * * * * * * *\n\nChief Moynahan's formal Wednesday morning meeting began in the Main Conference Room. Of course Teresa and Cindy were not here. But Sheriff Allgood was, as were Jack Muscone and Martin Nash of the FBI.\n\n\"Where is Captain Ross?\" he asked pointedly as everyone took their seats.\n\n\"Getting Captain Croyle's statement, Sheriff.\" I replied. \"And she handling the scene at the Hospital. We need to talk to the little girl just as soon as she wakes up.\"\n\n\"Someone else can't take Captain Croyle's statement?\" asked Allgood, who was beginning to irritate me.\n\n\"I have a general rule,\" I said, \"that statements of Officers are taken by equivalent or higher ranking Officers unless it is just not physically possible. So if Captain Ross were not taking Captain Croyle's statement, it would be me personally doing so.\"\n\n\"Sheriff,\" asked the Chief, \"is there a particular reason Captain Ross needs to be here? I excused her myself.\"\n\n\"Let's continue with the meeting, then.\" said Sheriff Allgood.\n\n\"The floor is yours, Sheriff.\" said the Chief.\n\n\"Thank you.\" said Allgood. \"Everyone, I know you're working hard as hell on this Slender Man business, and you came really close to getting him last night. Having said that, 'close' is not close enough, right now. I can deal with two Council Members bothering me at all hours of the night, but when literally all ten are calling me, and often calling me several times, it's obviously something that they are hearing about from their constituents. I know, I know, you're not politicians and you're doing your jobs. But just be aware of the mood of the People... they're worried, scared even, and they need to know the Police Force is getting results.\"\n\n\"Officers are getting hurt trying to solve this case, Sheriff.\" said Della Harlow, underscoring how we really felt about the Sheriff's, and the Council's, political worries. Sheriff Allgood glared at her for a second.\n\n\"And that's another thing.\" said the Sheriff. \"I'm already taking flak for what will be Captain Croyle's fifth Purple Order. I know she's brave and she was trying to save that little girl, but the question has already been asked why a Captain is out there where she could be injured like that in the first place.\"\n\nNow I was mad. \"Are you suggesting, Sheriff,\" I said loudly, \"that Captains should sit in Headquarters while other Officers are out there putting their lives on the line? Are you suggesting Captain Croyle should push a string from behind and let others risk being electrocuted to save a little girl's life? Sheriff, are you suggesting that it would have been better if a Patrol Officer had been wounded instead of a Captain?\"\n\nAllgood was angry now. \"Of course I'm not suggesting that, Commander, and I resent the implication. What I am saying is that the Board of Inquiry for this incident will be asking these same questions, and of you directly, Commander.\"\n\n\"Sheriff,\" said the Chief, \"why don't we move forward with this mee-ting, so that our friends from the FBI don't get too bored. Agent Muscone, what do you have for us?\"\n\n\"I'm here mostly to keep other FBI Agents from being here and agitating some of you.\" said Muscone. \"I'm also here to offer the FBI's assistance in any way we can be of help to you.\"\n\n\"We should take the FBI up on that offer.\" said Sheriff Allgood, looking straight at me.\n\n\"Oh, without a doubt.\" I said. \"Especially when Slender Man tries to cross State Lines with his victim on his next attempt.\"\n\nChief Moynahan closed the meeting fairly quickly after that.\n\n* * * * * * * * * * * * * * * *\n\nCindy arrived back from the Hospital, and she, Muscone, and Nash came into my office with me. As we sat down, she said \"I'm sorry to say that Rachel woke up and has no memory of the day before. She barely remembers being taken to school, remembers nothing about the day, does not remember being picked up from school. Dr. Fredricson has ordered blood tests to see if any drugs that would affect Rachel's memory were injected into her.\"\n\n\"He's a sophisticated S.O.B. if he has stuff like that.\" said Jack Muscone.\n\n\"Dick Ferrell has stuff like that, and worse.\" I reminded Muscone, who misunderstood.\n\n\"Are... are you saying Ferrell is Slender Man?\" he asked, his voice full of shock.\n\n\"Oh hell no. Slender Man is showing more brains than Ferrell ever hoped to possess.\" I said. \n\nThen Jack peered at me and said \"Don, that comment about Slender Man's next attempt... you didn't just say that idly, did you?\"\n\n\"Touch\u00e9. I am happy to see that 400 years of training have not been lost upon you, Jack.\" I said with a grin. Then I got serious: \"You're right, I did not say that idly. Cindy and I worked it out at the Hospital last night. We think something... 'different'... will happen on the next attempt.\"\n\n\"And what's that?\" asked Jack.\u2028\n\n\"Three times Slender Man has abducted children, but they've been found soon after. There will be a fourth and last time... and if we do not act to stop him, that child will not be found again.\"\n\n\"So why don't you arrest the bozo now?\"\n\n\"We don't have any evidence that gives us probable cause for an arrest warrant just yet.\" I said. \"I'm seeing the pattern on the chessboard, but we have to wait for the perpetrator to make his next move, and then catch him in the act of doing it.\"\n\n\"So why can't we just go get a warrant to examine his tires?\" asked Martin Nash. \"You guys got some tire impressions at Point Hollow, didn't you?\"\n\n\"Sure, but what are we going to base the warrant upon?\" I asked. \"Hearsay? Innuendo? Coincidence?\"\n\n\"Building blocks of circumstantial evidence?\" asked Cindy. \"Paulina has done that before. Layer upon layer of things, and that was for full trials. This is just to get a warrant; we don't have to meet the same standard.\"\n\n\"But if the tire impressions don't match,\" I said, \"we've got less than nothing if we had to go to trial. And once we lose the element of surprise with this guy, there's no chance of putting him away.\"\n\n\"Why not?\" asked Nash. \"Because he won't do anything? Isn't that good, in reality?\"\n\n\"Maybe.\" I said. \"But what he'll do is make himself disappear, and then we'll never know when he's going to come back and strike to achieve his goal.\"\n\n\"Which is?\" asked Muscone.\n\n\"Taking custody---- well, that's the wrong word.\" I said. \"He wants to take possession of his child. Like I said in the meeting... he picked 'em up and put 'em down, i.e. kidnapped the kids and left them behind, three times. Setting up a pattern. But on the fourth attempt, he'll disappear with the child, and he hopes forever. I believe he hopes we'll be waiting for him to dump the next child in a field somewhere while he's getting as far away from the County and this State as he can before we realize it's different this time.\"\n\n\"Except the Iron Crowbar has figured him out before he's even tried his last attempt.\" Cindy said.\n\nI said \"I believe he's already worked out a whole new life for himself and his child somewhere else, and will disappear to that. And the bad thing is... he can disappear to that life anyway, then sneak back and take the child later, when we don't expect it at all. We can't watch for him forever, and the mom may not agree to go into Witness Protection.\"\n\n\"So what do we do now?\" asked Cindy.\n\n\"This is where I get a little bit stuck.\" I said. \"I am certainly not going to put a child in danger. But if we take the mother and child into some kind of protection, then he'll know we're onto him and he'll disappear. If he's gone to the Teacher, and I won't be surprised if he has, then he'll know every Police Officer that we could send to watch over the mother and child.\"\n\n\"What about Eddy and Callie?\" asked Cindy.\n\n\"They became known after we busted Jaime Silver.\" I said. \"The Teacher knew who Eddy was already, anyway.\"\n\nIt was then that I saw Cindy smile. An enigmatic smile born of a thought coming into her mind under that platinum blonde hair of hers. And I knew what she was thinking.\n\n\"Okay,\" I said, \"Jack, Martin, is there anything else? If not, I'll call you later today when I've decided what we can do about all this.\"\n\n\"We'll be at the Federal Building.\" said Jack, taking the hint well. \"We're following up on leads about Ferrell. Maybe we'll find him by the time you capture Slender Man...\"\n\n\"Won't hurt my feelings if you do.\" I said. \"You have dibs on him.\"\n\n* * * * * * * * * * * * * * * *\n\n\"No.\" I said, my eyes boring into Cindy's once we were alone. My bug-killer was on.\n\n\"Why not?\" Cindy asked. \"To this day no one but you and me have ever figured out who she is.\"\n\n\"The Widow Athena Jones is a figment of your overly fertile imagination, Captain.\" I said. \"And she shall remain so.\"\n\nCindy just looked at me, knowing that I knew that she was right.\n\nPart 22 - Slender in Golf\n\nHe watched the street from his perch in the empty house, looking for Police, for Detectives, for private investigators. The young black man with him, trained by the Teacher, was also watching.\n\nThey saw the two old ladies coming up the street, knocking on doors. Most times there was no answer, and a couple of times someone came to the door and they asked \"Do you know the Lord?\" as they attempted to hand off their Christian materials.\n\nThe young black man said the women were not known to him. He did not recognize Mrs. Williams of the Veasley Community Center, nor the older woman with the old shawl over her head.\n\nArriving at the house in question, they knocked and the door was opened unto them. Anyone watching would not have seen the note on the paper handed to the woman at the door along with the Christian materials, confirming what she'd been told on the telephone.\n\nOnce inside, the Widow Athena Jones began searching for bugs. She found two...\n\n* * * * * * * * * * * * * * * *\n\nAs the sun set on the Town to conclude this Wednesday, March 15th, I could feel the unease. I had authorized overtime for Day Shift officers to augment the patrols of the Evening Shift officers in the evening hours. But the call came from an unexpected place.\n\n\"Crowbar!\" yelled Chief Griswold into the phone. \"Get your ass to Mountain Valley Golf Course! I'm looking at that faceless bastard right now!\"\n\n* * * * * * * * * * * * * * * *\n\nNot just the Chief Emeritus, but Detective Roy McGhillie, whose father owned the Golf Course, Sergeant Rudistan and Sr. Patrolman Morton were at the golf course, and had seen Slender Man.\n\n\"He was in the woodline on the far side.\" said Rudistan. The golf course ran north and south, with houses on the east side and the mountain finger on the west side. The Cabin was one of the homes on the other side of that mountain finger. The woodline was the beginning of the forest that covered the east side of the mountain, which rose steeply from the valley floor.\n\n\"I got footage of him.\" said Rudistan.\n\n\"I got some, too, with my iPhone.\" said Chief Griswold. \"I gotta say, Crowbar... I've seen a lot of things in my life and career, but seeing that figure standing there, hands against his side, and what looked like tree branches coming out his back... that was damn spooky.\"\n\n\"At least he wasn't looking into one of your house windows, Chief.\" I said. \"So what happened?\"\n\n\"He disappeared.\" said McGhillie, and Morton and Rudistan nodded as McGhillie continued: \"He was there, then it was just black. It was getting dark, and that side of the course is very dark against the mountainside.\"\n\n\"All right.\" I said as I looked at the video, feeling chills running up and down my own spine. \"Get some people over here and sweep the area. Look for smoke canisters or smoke-blowing firecrackers; that's probably what he used to make himself disappear.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Okay,\" said Chief Moynahan when we got back to Headquarters, \"so it's Mountain Valley Golf Course. I'll have the Precinct Captains send people to watch the place, and patrol the Nextdoor County Highway.\"\n\n\"Don't bother, Chief.\" I said. \"We need to guard the State Line to the north and especially to the west. All bridges over the River, extra patrols up to Point Hollow.\"\n\n\"You think he's going to break with his pattern?\" the Chief asked.\n\n\"Yes.\" I said. \"I think this is the one.\"\n\nPart 22 - Slender v. Crowbar\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redhead from the front gate of the Mountain Valley Golf Course at 7:00am, Thursday, March 16th. \"The serial kidnapper known as 'Slender Man' has been sighted again!\"\n\nVideo of Slender Man at the golf course was shown. Bettina continued \"Police are not commenting on the possibility that missing children are left at places where Slender Man is seen beforehand, but they did confirm that they will be increasing patrols along Reservoir Road and in the eastern part of the County. In his first formal statement since the sightings and kidnappings began, Commander Donald Troy said that Slender Man had also been seen near the Cemetery, which would be getting extra attention as well.\"",
        "\"Giving a statement to the Press?\" Cindy said to me, her voice mocking. \"I just don't even know you any more, Commander.\" Everyone in MCD laughed.\n\n\"If the Press thought about it,\" I said, \"they'd know I was using them like the 'useful idiots' they are. But no more on that for now...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Nothing through the night, Commander.\" said Cindy, as she, Lt. Masters and I met in my office. \"Our people watching the mother and the child reported nothing. Also, there was nothing regarding your primary suspect. Our people watching him said he came home from work and stayed in his townhouse all night.\"\n\nI nodded. \"Well, if he follows the pattern he's set, then it won't be until this afternoon or this evening that he strikes. Do we still have people watching him?\"\n\n\"Yes sir, from an empty home across from his.\" said Lt. Masters. \"The guard at the gate during the evening is an off-duty TCPD Officer; he let us in without a fuss. Our guy approached the place as if he lives there.\"\n\nI nodded. I was going deeper and deeper into thought.\n\n\"Commander?\" I heard Cindy say. I looked up. I'd gone into a reverie for several minutes.\n\n\"I am missing something.\" I said flatly. I got up and began pacing, which I rarely do. \"I am overlooking something; something is getting past me, I just know it.\"\n\n\"Sir,\" said Cindy, \"we've got every base covered. We have a couple of layers of Patrol cruisers on the Hammondsville Road. We have people stationed at Point Hollow. We have people at Mountain Valley Golf Course and the Cemetery. And we have people on the inside, as you know.\" She was referring to the Widow Athena Jones and others from the 'Crowbar Irregulars' of the Veasley Community Center.\n\n\"I know.\" I said. \"That's not it. I've missed something...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Your primary suspect did not go to work today.\" said Detective Teddy Parker at 1:30pm. \"His car hasn't moved since he came home yesterday. We called the location where he's been working, and they said he'd called and said he would not be in today.\"\n\nI nodded. \"Do our guys watching him have infrared detectors?\" I asked.\n\n\"No sir.\" said Parker. \"Want me to get someone to take one to them? Via a 'pizza delivery'?\"\n\nI shook my head. \"No. I don't want anything to draw attention to them.\" I got out of my chair and began pacing, my lower back beginning to ache. What am I missing? I thought to myself over and over...\n\n* * * * * * * * * * * * * * * *\n\nThe sun was beginning to set. I was in my office with Cindy. MCD was quietly being transformed into a 'War Room' for tonight's missions. I used my personal cellphone to call my mother, a.k.a. 'the Widow Athena Jones'.\n\n\"No, she's doing fine.\" said my mother of the mother of the intended child victim. \"No, the child is at Rachel Kelly's house with Rachel and her mom... no, Rachel's mom picked her up...\"\n\n\"OH SHIT!\" I gasped out. \"MOM! Quickly! What car was Rachel's mother driving?... silver Toyota Camry... okay, Mom, you need to go over to the Kelly house, stat! No, right now! I gotta go, bye!\"\n\n\"Come on!\" I growled at Cindy as I tore out of my office.\n\n\"What is it?\" Cindy said as she ran after me down the hallway.\n\n\"I told you I overlooked something!\" I cried out. \"I hope we're not too late!\"\n\nI practically crashed through the Duty Desk as I ran up to it. \"Get on the radio!\" I gasped. \"Silver Toyota Camry! Nina Kelly! Don't let any silver Toyota Camry cross the State Line!\" The Duty Desk Sergeant quickly got on the radio and relayed the instructions.\n\nMeanwhile Cindy ran up with my outer armor and my trenchcoat. As I put the armor on in the hallway, I barked instructions to Teddy Parker. Then Cindy and I rushed to my SUV.\n\n* * * * * * * * * * * * * * * *\n\n\"An affair!\" I all but shouted. \"A fucking extramarital affair! THAT is what I overlooked!\"\n\n\"Ah.\" Cindy said. \"So Nina Kelly is involved with this sleazebag, and she's got the kids... hers and his.\"\n\n\"Yes.\" I said. My blue lightbar was burning, the flashing blue lights making things eerie from inside the Police SUV as we headed west towards the State Line. Cindy was on the phone with Jack Muscone...\n\n* * * * * * * * * * * * * * * *\n\n\"Uh oh,\" he said. \"Roadblock ahead. And we're a mile away from the State Line. I'll bet there's another one up ahead, too.\"\n\n\"No way they know.\" said Nina Kelly.\n\n\"Know what?\" asked one of the children in the backseat.\n\n\"Nothing, sweetie.\" he said. To Nina he said \"Let me out just up ahead. If you're stopped, I'll create a distraction while you go for the State Line. If we get separated, we'll rendezvous in Hammondsville...\"\n\n* * * * * * * * * * * * * * * *\n\n\"May I see your drivers' license, ma'am?\" asked Patrolman Barker at the checkpoint.\n\n\"Sure, but what is this about?\" asked Nina Kelly.\n\n\"We're searching for that escaped bank robber, Leonard Lotz.\" said the Officer. \"But I think those kids in your backseat are a little young to be robbing banks.\" He looked at the I.D., then gave it back. \"Have a nice evening, ma'am.\"\n\n\"Thank you.\" said Nina. She resumed driving west.\n\n\"Hey, Barker!\" called out Sergeant Abram. \"Listen to this!\" They listened as the radio called out to be on the lookout for a silver Toyota Camry.\n\n\"Hey, that was a Camry that just went through!\" said Barker. Abram practically lunged into the car to grab the radio mike.\n\n* * * * * * * * * * * * * * * *\n\nThe second checkpoint was almost within site of the bridge over the 'other' river that was the State Line. The officer held out his hand to stop the silver Camry. Nina Kelly looked ahead, seeing two Police SUVs at the entrance to the bridge, ready to block the road if need be.\n\n\"Can I see your drivers license, ma'am?\" asked Lieutenant Irwin. Mrs. Kelly noticed he was very tense, as was Sr. Patrolman Hicks, who was observing from the right rear of the vehicle.\n\n\"You guys just checked me back there.\" Nina Kelly said, letting some of her exasperation show.\n\n\"Yes ma'am.\" said Irwin. \"We appreciate your cooperation. It's a very serious situation.\" He glanced up to see a Police SUV flying up, and knew who that vehicle contained. As I pulled up behind the other vehicles, I signaled to Irwin.\n\n\"Ma'am, would you step out of the car, please?\" Irwin said in a commanding tone.\n\n\"Why?\" asked Nina Kelly.\n\n\"Please, ma'am.\" said Irwin.\n\n\"No.\" said Nina. \"I want a female Police Officer here before I get out of the car.\" She was well-versed in police stops, Irwin noted.\n\n\"You've got that now.\" said Captain Cindy Ross, coming up to Irwin. \"I'm Captain Cindy Ross, Chief of Detectives of the Town & County Police Force. Get out of the car, Mrs. Kelly. Now.\"\n\n\"Look!\" said Nina, pointing across the road. Everyone looked. About 150 feet away, in the farm field, was Slender Man!\n\n\"I've got him.\" I called out, motioning to other officers. \"If Mrs. Kelly thinks she is driving away, she has another 'think' coming. Place her under arrest!\"\n\nAs Cindy did so, I began walking towards Slender Man, my red crowbar in my hand. There were Officers lining the edge of the field, so that Slender Man could not run for the State Line.\n\n\"Don!\" I heard Cindy call out. \"Watch out! Don't let him shock you!\"\n\nI saw that Slender Man was standing erect, his arms and hands pressed tightly to his sides. I could feel something; it felt like an aura... around me.\n\n\"It's over, Larry!\" I called out as I approached him. \"I know you are Larry Lance, and that this has all been a ruse so you can kidnap your daughter Heather and take her out of State! But it's not going to happen, Larry! Put your hands in the air, slowly!\"\n\nSlender Man, a.k.a. Larry Lance, did not move. The sense of that electric aura got stronger. Of course, the Iron Crowbar did not stand by idly. The Iron Crowbar attacked!\n\nI rushed him, crowbar ready to swing, hearing Officers scream out for me to stop. I saw my prey extend his hands as I approached.\n\n*WHOOSH!* *BZZZZ!* *ZZZZT!*\n\n\"AAUUGGGHH!\"\n\nA blinding shower of sparks enveloped us. But the scream was not from me. It was Lance. I'd swung my crowbar and connected squarely with his abdomen, short-circuiting and all but exploding the electrical device he was wearing like I was wearing my bulletproof girdle.\n\n\"AAAUUUGHH! OH GOD! IT HURTS! IT HURTS!\" screamed Lance as he writhed in agony on the ground. I felt no mercy.\n\n\"Shoulda thought of that when you damn near electrocuted my Officer.\" I said as I forced his hands behind him and handcuffed him, then tore off the white mask covering his head.\n\nAs Officers rushed up, Sergeant Rudistan said \"How did you not get shocked, Commander?\"\n\n\"Wearing rubber gloves may not be playing according to the rules,\" I said, as I exhibited them on my hands, \"but I'm tired of playing games with this cat. Take him to the Hospital. Maintain a guard on him. He is under arrest.\" I also had on rubber soled boots, which helped prevent me from being a circuit for Lance's electrical device...\n\n* * * * * * * * * * * * * * * *\n\n\"Heather and Rachel were checked by your wife, then returned to the custody of their other parents.\" said Cindy. \"Nina is in I-1, and has demanded a lawyer. Larry is at University Hospital, and probably will be there at least overnight. His burns weren't as bad as Teresa's, but they're not insignificant. He's under guard, already ankle monitored, and there will be no Ned-like escapes for him. I have impressed upon Lt. Irwin my strongest desires that Larry Lance face a judge and of course get his fair trial.\"\n\n\"And speaking of Teresa,\" said Cindy, \"she'll be out of there in the morning as long as her white cell count stays low, i.e. no infections crop up. I'll personally make sure she goes home and rests.\"\n\n\"Belay there.\" I replied, using good old-fashioned Navy language. \"Todd's taking care of that, and I have impressed upon my young nephew my strongest desires that Teresa gets rest and heals up quickly, which will require resting in bed at home.\"\n\nCindy nodded, and I could see the relief on her face that things with Teresa would be okay.\n\n\"Okay,\" I said, \"who is interviewing Mrs. Kelly?\"\n\n\"Teddy Parker,\" Cindy replied. \"When her lawyer gets here.\"\n\n\"May I make a suggestion?\" said a voice. It was Paulina Patterson as she came into my office. \"May I suggest that you, Commander Troy, at least sit in with Detective Parker? No offense to him, but this one... could get tricky.\"\n\n\"Y'all sit down.\" I said, then went behind my desk and sat in the comfortable Command Chair. \"So, Paulina,\" I asked, \"what are the issues?\"\n\n\"We've got Larry dead to rights.\" Paulina said. \"Tire impressions near Point Hollow matched his car. You obliterated him near the State Line. But Nina Kelly is not so easy. The only thing we have on her is trying to take her child across the State Line without her husband's and the Court's permission, which violates the Divorce Decree. But even kidnapping is thin.\"\n\n\"I think we can fill in some gaps and create enough of a case to get a conspiracy charge.\" I said. \"Let's put her in a holding cell overnight. Ross, who do you want to do some interviews at StatePowerCorp in the morning?\"\n\n\"Parker and Warner.\" Cindy replied.\n\nPart 23 - Breakdown\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redheaded reporterette from in front of Police Headquarters at 7:00am, Friday, March 17th. Bettina was wearing a lovely green dress for St. Patrick's Day, I noted as she said \"Channel Two News has learned that the Town & County Police have made arrests in the 'Slender Man' kidnapping cases!\"\n\n\"Police have arrested Larry Lance, whose daughter Heather was a friend of the first kidnapping victim, Henrietta Claymore.\" continued Bettina. \"Police are not commenting on details of the case as they complete their investigation and turn their evidence over to the District Attorney's Office, but sources tell Channel Two News that Lance was apprehended by Commander Donald Troy, who used martial arts to avoid the electrical shock that injured Captain Teresa Croyle!\"\n\n\"Oh, that is going to piss off Captain Croyle.\" I said as we listened in MCD. Cindy nodded vigorously in agreement.\n\n\"At least she's giving you credit for taking Slender Man down.\" said Joanne Warner happily.\n\n\"True.\" I said, then added: \"Detective Warner, why are you here? You have interviews to do.\"\n\n\"They're going at 8:00am.\" Cindy said. \"I've already arranged with the management at StatePowerCorp for the interviews to occur with minimum interruption to their day.\"\n\n\"Oh, okay.\" I said. \"Good job.\"\n\n* * * * * * * * * * * * * * * *\n\n12:00 noon, Friday, March 17th. Captain Ross, Detective Parker, and myself went to the City Hall and to the meeting room of District Attorney Gil Krasney. Why the D.A.'s offices weren't in the Courthouse, I don't know. But that's the way it was in my beloved Town & County.\n\n\"We have a better case, anyway.\" I said. \"Parker here interviewed people at StatePowerCorp that saw Nina and Larry talking on many occasions, and in a very friendly manner that was beyond professional decorum.\"\n\n\"It'll show they knew each other.\" said Paulina. \"But the friendliness won't fly. It'll be considered speculation.\"\n\n\"Unless you spoon-feed it to the Grand Jury and then the trial jury.\" I said. \"We have her on the road to the State Line, with no turnoffs between her and the bridge out of the State... and crossing that bridge with her child and Larry's child? It's circumstantial, but strong.\"\n\n\"Yes, it is.\" said D.A. Krasney. \"And I have strong faith that ADA Patterson can get this through. But we need more, Commander. I'd like to get more.\"\n\n\"The kids said Larry was in the car and got out before the first checkpoint.\" I said.\n\n\"Any good lawyer is going to push that one back.\" said Paulina. \"Family members testifying against family members, they're children, yadda yadda yadda...\"\n\nI didn't agree with that, but I went on: \"What are you willing to offer Lance to throw her under the bus?\" I asked.\n\n\"That's what we asked you here to talk about.\" said Krasney. \"Lance wounded one of your Officers, and since you damn near electrocuted him in return, we'll trust a Jury to be able to make that connection. But how will Officers feel if Lance gets off lighter than he should via a deal?\"\n\n\"That's a point.\" said Cindy. \"We understand, sitting here in this office. But Captain Croyle's SpecOps and Precinct people have become very loyal to her. They won't like it.\"\n\n\"It'll depend on the terms of the deal.\" I said. \"So what's he looking at without any deals?\"\n\n\"That's just it, Commander.\" said Krasney. \"We're going to have a tough, tough time getting him on almost anything. We think we can spoon-feed a jury the 'assault on a police officer' charge. We can then put Lance at Point Hollow with Rachel Kelly present, so we'll have one kidnapping charge. As you pointed out, Heather and Rachel both said Larry was in the car with them and Nina Kelly, then got out near where you apprehended him, but that may not be admissible. It's all thin, and a jury may not see it as kidnapping actually happening. They didn't get out of State, which is good but means we can't charge them along those lines.\"\n\n\"And H.J. Lynch of Chase, Lynch & Berry went to the Hospital and is taking his case.\" Cindy said. \"He will fight like living hell to get his client off, especially on the charge of assaulting a police officer.\"\n\n\"So we need for him to confess, and for him to throw her under the bus.\" I said.\n\n\"I hope you're not thinking of doing anything extracurricular.\" Paulina said, peering at me. I looked up at her with the most innocent look I could put on my face.\n\n\"Who, moi?\" I asked with mock shock. \"No, of course I'm not going to do anything to him. I already whacked him with the crowbar while apprehending him, and that was legit. So... it is entirely possible Nina Kelly will walk?\"\n\n\"Very possible.\" said Krasney. \"And to be honest, I'd rather not try her than have a jury acquit her.\"\n\n* * * * * * * * * * * * * * * *\n\nAs Cindy and I walked back to Police Headquarters, I said \"Arrange for Corporal Kirkpatrick and Patrolman Hicks to be on guard duty for Larry Lance tonight.\"\n\n\"I'll have to give those orders in your name.\" Cindy replied. \"But I will do it. Just don't fuck anything up. I want him to go down for Teresa's sake, if nothing else.\"\n\n\"He will.\"\n\n* * * * * * * * * * * * * * * *\n\nAt 2:00pm, I went through the hoops of security to Larry Lance's room at University Hospital. He was awake and doing okay, though in some pain from his burns. Guarding him were Corporal Kirkpatrick and Patrolman Hicks... members of the 'Blood Order'.\n\n\"Well, Commander, you did a number on me.\" said Larry with some degree of humor in his voice when I came into his room. \"Come to finish the job?\"\n\n\"I'm not going to touch you.\" I said coldly. \"I'm here to let you know what's going to happen.\"\n\n\"I've taken the Fifth.\" said Larry. \"You shouldn't be here talking to me at all.\"\n\n\"I can assure you that this conversation is not only off the record... it will never have taken place.\" I said, my eyes boring into his. \"Mr. Lance, you are in deep, deep kimshee. You may not be aware that there are two types of people that prison inmates really hate. One type is traitors. Inmates are surprisingly patriotic prisoners. The other type... is child molesters.\"\n\n\"C'mon, I never hurt any of those kids, and I sure as hell didn't molest them.\" said Larry.\n\n\"True.\" I said. \"Verrrry true. But because of what you did to my Police Officer, because of her burns... the inmates are going to hear that you are a child molester, that you did rape those little kids. The inmates are going to hear that, I will personally make sure they hear that... and then they are going to take it out on you, Larry.\"\n\nLarry's face dissolved into the total fear that he had tried to inflict upon people as 'Slender Man'. He could see in my face that I was not kidding. At all.\n\n\"Remind me not to play poker with you, Commander.\" he said, trying gauge my seriousness.\n\n\"Oh, I'm easy to play poker against.\" I said, then bored into him. \"I never bluff. And I am not bluffing now. You are going to get ripped apart in prison, Larry. Unless you have a change of heart. Maybe your girlfriend, Nina Kelly, will walk... she'll be banging some hot stud every night, while you're getting your ass raped every night... child molester. Or... you tell what you know, you get that coveted 'keepaway' status... and she gets the prison sentence she deserves. You've already lost custody of your child, Larry. Maybe she should lose custody of hers, eh?\"\n\n\"Of course,\" I said, \"if she starts thinking she's going down, she's going to rat you out, and with a story that puts it all on you. She'll take a deal, maybe even full immunity from the D.A., and there you are, getting raped in jail every night while she's scot free and finding other men to satisfy her sexual appetite.\"\n\n\"So that's it.\" I said. \"You think about it, Larry.\" With that, I put on my Tilley hat, then turned for the door and exited. \n\nCorporal Kirkpatrick came over to Larry. \"We didn't hear a word of that.\" he said. \"And we don't appreciate one of our Officers getting hurt. The way we see it, we owe you one ourselves... big time. So... I'd take up the Commander's very generous offer, if I were you...\"\n\nPart 24 - Solution\n\n\"This is Amber Harris, KXTC Channel Two News at Six!\" said the lovely athletic blonde from behind the Channel Two newsdesk. \"The District Attorney's Office has announced that Larry Lance has confessed to being the 'Slender Man' kidnapper! As part of his confession, he has implicated Nina Kelly, with whom he had been having an extramarital affair, in a scheme to kidnap their children and disappear with them, starting a new life in anonymity far away from here.\"",
        "A tape of District Attorney Gil Krasney announcing the plea deal was being shown on TV. It just happened that Cindy and I were watching it with Teresa in her hospital room.\n\n\"Damn, he's getting off light.\" Teresa said.\n\n\"Not for what he did to you.\" Cindy said. \"He gets the full sentence for that, with no parole. But he gets eventual parole for the kidnappings, and he gets 'punk city' status.\" That meant Larry would be protected from the general prison population while doing time.\n\n\"And Nina Kelly is busted.\" I said. \"She and her legal beagle are scrambling to get her some sort of deal, anything they can get. But she's well and truly busted.\"\n\n\"So how did you solve the case, Commander?\" asked Teresa.\n\n\"That...\" I said, \"will be explained tomorrow at the victory party. Which you will be attending, Lord willin', the Creek don't rise, and you take it easy.\"\n\n* * * * * * * * * * * * * * * *\n\nSaturday, March 18th. We had the back room of The Steakhouse reserved. Present for the exceptionally delicious dinner were me, Laura, Todd and Teresa, Chief Griswold, Molly, Myron and Mary, Chief Moynahan, Joanne and Seth Warner, Theo Washington and his lovely wife Nareese, Teddy Parker and Janice Holloway, Wes 'Coldiron' Masters, Della Harlow sans husband, Paulina Patterson, Jack Muscone and Tanya Perlman, Martin Nash, Lindy Linares, Roy McGhillie and Becca Larrington...\n\n... and appearing as a couple at a function for the first time: Cindy Ross and Callie Carrington. Cindy looked as happy as I'd ever seen her as she introduced Callie to anyone that didn't know Callie already.\n\nMy mother and Chief Griswold's wife were keeping the kids and dogs at the Cabin. The Widow Athena Jones was once again a figment of our fertile imaginations.\n\nAs dinner concluded, and libations began being consumed more freely, the time came for spoon to meet glass:\n\n*DING!* *DING!* *DING!* *DING!* *DING!* *DING!* *DING!* \n\n\"Even the mighty, mythical Slender Man has fallen to the Iron Crowbar.\" Cindy said loudly. \"Let's hear how you did it, Commander!\" There was applause and acclaim.\n\n\"Okay.\" I said. \"This one was interesting, though the perps made it a bit easy for us---\"\n\n\"Easy?!\" Joanne Warner practically shouted. \n\n\"Oh, yes, of course.\" I said. \"They might just as well have sent us a letter of their intentions. It was really obvious how they were laying a pattern.\"\n\n\"Okay,\" I said after a pause of silence pregnant with disbelief. \"Let me tell it chronologically. We had the first sightings in farm fields, and also near River Valley subdivision, and at Police Headquarters. And that was interesting in light of events that have happened since. I remarked to Captain Ross that when I saw Slender Man in the window, I felt electricity go up my arms. Well, that may really have been the case if he had some kind of electrical device on him like the one he used to burn Cpt. Croyle.\" Everyone nodded.\n\n\"Then we had the first child missing, Henrietta Claymore.\" I said. \"She was ambushed from behind. She was then found in farm fields not far from where the Slender Man sighting was out there. Henrietta was not at home, though... she was at the home of a friend, Heather Lance.\" I said. \"Now this is important, and I should have seen it much sooner: how did Slender Man know she was there and not at her own home?\" I got some quizzical looks at that.\n\n\"So next,\" I said, moving along, \"we had Wesley Smith. Larry Lance knew Wesley's father, knew the parents had marital problems. So Wesley was the perfect next victim to establish the pattern Larry wanted established. Therefore, there was a Slender Man sighting at County High, and then Wesley was found nearby.\"\n\n\"What about the sighting at your Cabin, sir?\" asked Teddy Parker.\n\n\"I'll get to that in a minute.\" I replied. \"What I want to get at here is the establishment of the patterns. So after Wesley was found, we had the sighting at Point Hollow, one of my favorite places on the planet.\"\n\n\"That's sarcasm.\" said Cindy to everyone else.\n\n\"You better believe it.\" I said. \"That place spooks me. Anyway, Rachel Kelly was kidnapped, and guess where she was taken? Point Hollow. Unfortunately, we learned the hard way that Lance had an electrical device that could be used as a weapon, and Captain Croyle took the brunt of that in her bravery in attempting to rescue the child.\" There was applause for Teresa, which she endured stoically.\n\n\"At this time, I had a complete set of patterns to examine, though not the ones Larry Lance wanted me to see.\" I said. \"What he wanted me to see was that with Henrietta being close to Heather, we'd not look at Heather again. He also kidnapped Rachel so we'd think she was not going to be a target again. The children kidnapped were all kids of parents who were divorced or divorcing. Then he appeared at the McGhillie Golf Course in the hopes we'd concentrate our efforts to catch him over there on the East side, when he intended to go west and across the State Line.\"\n\n\"What I did see was that of the persons that came into the picture of all this, Larry Lance was the only person who either did or could have known the Claymores, Gerald Smith, and the Kellys... and therefore known that like him, they were divorcing or divorced. He had the knowledge to build that electrical device, which is quite an interesting little gadget. He knew the parents of the kids that were kidnapped would have alibis, but he himself never really had one. Last but not least, Larry is fairly tall. He used stilts to make himself look eight feet tall, but he was tall enough.\"\n\n\"So Larry Lance had motive, means, and opportunity.\" I said. \"What I totally missed was Nina Kelly's role in all this. It is abhorrent to me that she would allow the kidnapping of her own child, but that's what she did in the hopes of later taking her child away and preventing her ex-husband of having any custody of Rachel. I did not consider that, which was a failing on my part. \n\n\"Also, she and Larry knew each other, as she was the StatePowerCorp manager giving Larry contract work. I should've had people questioning the StatePowerCorp employees long before I did; if I had, I would've known she was having an affair with Larry, as everyone at StatePowerCorp pretty much knew it.\"\n\n\"But I missed that,\" I said, \"and I give Captain Ross great credit for persuading me to use 'extracurricular' assets to monitor Heather Lance, which ultimately paid off. Any questions?\"\n\n\"Can you once again spell out Larry's motive in this?\" asked Martin Nash.\n\n\"To take his daughter Heather out of State, and away from her mother Jen Lance.\" I said. \"He did not have custody of Heather and he hated that. He was not a bad dad, but the divorce from Jen was not amicable; she filed for the divorce, blindsiding him, and it tore up his life. He may have been dating Nina already, and she was equally as bitter about not having full custody of Rachel. Ergo, they hatched this plan. They hoped we'd be sitting at the golf course, waiting for Heather's return.\n\n\"At worst, they hoped, if we were watching his car, it was sitting there at his home... he'd sneaked out and made his way to Nina's house.\" I said. \"And it almost worked... we were watching for his car, not Nina's. She went to pick Heather up, and they were going to take her as well as Kelly out of State.\"\n\n\"What about the Slender Man sightings in your window and at the Cabin?\" asked Molly.\n\n\"Larry Lance swore up and down that he was not the one that did those sightings.\" I said. \"He said Nina helped him set up some of the other sightings with mannequins, but he refused to admit that he was responsible for whatever looked into my window at Police HQ, and left the note at the Cabin. Nina is not talking nor cooperating in any way, so if it was her, she's not saying.\"\n\n\"Wow.\" I heard Molly whisper in the quiet of the room.\n\n\"He's coming for you, Commander.\" Teresa said severely. \"Slender Man has you in his sights.\"\n\n\"Bring it on.\" I replied.\n\n\"Well, it just goes to show you,\" said Chief Griswold, his cheeks rosy and his speech beginning to slur, \"that even Slender Man is no match for the Iron Crowbar!\" There was much acclaim, and the party started back up...\n\nPart 25 - Epilogue\n\n'Fire Safety Day' at the Fire Range was a big hit with the elementary school children. They got to see Fire Trucks and Fire Engines up close. They got to see fires being put out with fire extinguishers. They were shocked when Your Iron Crowbar dipped his finger into the powder ejected by the fire extinguishers and tasted it... it's just baking soda and some inert preservatives, and not harmful. Still, Cindy told the kids that eating it was not good for them, and so not to try it at home. I then got a well-deserved verbal spankdown from the Green Crowbar for that 'demonstration' of Better Living Through Chemistry.\n\nA large metal paint bucket was filled with some liquid, probably kerosene, and was set on fire. It was then demonstrated how to put out the fire with a blanket or heavy coat. When the Fire Chief asked if any of the kids wanted to try it, Davie Marsdon literally ran out to give it a shot. He did well, too, and got the fire put out on the first attempt. His classmates cheered very loudly.\n\nThen came the pi\u00e8ce de r\u00e9sistance: they watched as a house was set on fire, and Firemen going inside and 'rescuing' several dummies, then the Fire Department putting out the house fire. Along the way, they were told about how to get out of a house that was on fire, feeling doors for heat, crawling on hands and knees, etc. Good stuff to know, I thought, as I remembered the fire at the Old Cabin.\n\nI had wondered why I was invited to attend; indeed, all but ordered to attend. And that became apparent just before the house burning: I was called up to stand by the Fire Chief. The Towson Brothers were there, also. And little Mikey Towson was in the front row of students.\n\n\"Kids, as you know,\" said the Fire Chief, \"your classmate Mike Towson is here because Commander Troy went and got him and brought him home to his dad! So the Fire Department would like to thank the Iron Crowbar with this gift. Mikey, would you come up and help us give the Iron Crowbar his gift?\"\n\nMikey ran up to us from the stands, a huge smile on his young face. He took the long box from his dad, and handed it to me, saying \"Thank you, Mr. Crowbar.\"\n\nI opened the box. Inside was a black lacquered plaque to hang on the wall, which had an engraved strip of metal saying \"To the Iron Crowbar from the TCFD\" and the date I'd brought Mikey home.\n\nThe plaque was a display to hold up the second part of the gift. It was a red crowbar. I took it out of the box, seeing the gleaming metallic red paint glistening in the sunlight. The crowbar had been painted with the exact same paint that the TCFD's fire vehicles were painted with.\n\nI held up the crowbar and shouted \"Iiiiiiiiiiii LIKE it!\" The Firemen all cheered. The kids cheered louder... much louder. Kids can really make noise, and they did so today.\n\nThe Fire Engine Red Crowbar would hang with the plaque above my whiteboards in my office, a reminder of taking advantage of a chance to take care of my people when I could do so...\n\n* * * * * * * * * * * * * * * *\n\nThe sun had set, and Cindy and I were going to our cars in the gated employees parking lot at Police Headquarters. When I got to my car, I got a shock.\n\n\"Cindy!\" I called out. She came running over. \"Look!\" I said. Taped to the driver door of my Police SUV was a piece of paper. It said \"Always follows. No eyes.\"\n\n\"One of the Slender Man eight pages.\" I said. I put on latex gloves and bagged the paper.\n\n\"I'll walk over to the Crime Lab with you, if you want to.\" Cindy said.\n\n\"Good idea. Let's do that.\"\n\nAs we walked across the parking lot to the Crime Lab Building, I happened to look towards the back fence, which meant I was looking west. The Fairgrounds were behind Police Headquarters. \"Cindy,\" I said, \"do you see a light over there?\"\n\n\"Yeah... wow...\" she said. The light was a flickering electric blue, brightening and ebbing. We hurried to the Crime Lab building, going in the back door. After turning over the paper in the evidence bag for analysis, we went out the front door, then began walking down the street, which ended at the Fairgrounds.\n\nWalking onto the Fairgrounds, which were lit only by streetlights from the east side, I peered around. As I got to a certain spot, I felt a strong aura, like a blanket of energy surrounding me.\n\n\"This is where I was almost shot.\" I said, feeling sure.\n\n\"Yep.\" said Cindy. \"There's the stub of the power hookup right behind you, which is where that temporary metal shed was.\"\n\nI looked around, feeling the aura even more. Then I looked west, towards the River and the abutment where Mrs. Veasley's funeral had been.\n\n\"Holy shit!\" I gasped. \"Do you see that?\" Standing on that concrete piling was Slender Man!\n\nHe was standing upright, in his suit and black tie, his head featureless and ghostly white, his arms and hands pressed to his sides. I felt the hair standing on my arms and the back of my neck.\n\n\"Yeah, I see it.\" Cindy said. \"And I'm feeling something... never felt this before...\" As I turned to look, Cindy collapsed to her knees to the ground.\n\n\"Cindy!\" I cried out, kneeling down to check on her. \"Are you okay?\"\n\n\"Yeah... yeah...\" Cindy said, trying to recover. \"I just felt... overwhelmed for a second there.\" She looked up. \"Where did he go?\"\n\nI looked up. There was no one standing on the concrete deck. It was dark; there were no more eerie lights.\n\nI took Cindy home to get checked out by Laura, but Cindy showed no further ill effects. She helped put Carole and Jim to bed. Meanwhile, Bowser was staying with me, as if he felt a need to protect and guard me. Even when Carole was put to bed, Bowser stayed with me, which was rare to the point of unheard-of.. I gave him a lot of love and skritchins, and felt better...\n\n... but I still felt foreboding in my soul.\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar",
        "slender man",
        "horror"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/slender-man-ch-04"
}