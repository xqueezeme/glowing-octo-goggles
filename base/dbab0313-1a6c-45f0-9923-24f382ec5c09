{
    "title": "Kelsey's World Ch. 07",
    "pages": [
        "\"Your mom tells me you'd like have a party,\" Bobby said. He was sitting at the breakfast table, sipping coffee with Kelsey, Kay and Sharron.\n\n\"What do you think, Daddy? Doesn't it sound fun?\" Kelsey asked.\n\n\"It does, but have you thought about it from all the different angles?\" he asked. \"Mixing your younger friends with older generations from the same, small community can be risky. We can invite all our friends, but some of them might not want to be involved.\"\n\nKelsey looked like she wasn't really sure what he meant.\n\n\"Take Olivia for example,\" Bobby said. \"She'd probably lose her job at the school if word got out about her swinging. Most of our other friends need to be careful too. We can certainly invite them, but it would be great if you could have a heart-to-heart with your young friends about it all. Discretion and privacy is very important as people get older and established with careers and families. I know you get it, but I'm not sure how much your friends have thought about it.\"\n\nSharron was listening intently, excited by the prospect of meeting some of the adult swingers, and fascinated by Bobby's businesslike way with it all. She'd thought maybe swinging was all just wild, teenage-like coming togethers, but there was obviously more to the lifestyle than that.\n\n\"Yeah, I'll definitely talk to them,\" Kelsey said. \"This is cool, Daddy, I'm glad you told me this. I'll only invite a few of my friends. Brie, Charity, Raymond...maybe Austin,\" Kelsey said, glancing at her mother. \"And Koop and Happy. I'll have to talk to them, too, but I'd really like for them to be a part of it.\n\n\"You really like this Koop guy, huh?\" Bobby said. \"I thought he was nice, too.\"\n\n\"He's awesome, Daddy. And Happy's super nice. His wife died a couple years ago, really sad, that memory disease thing.\n\n\"I didn't meet him when I was at the shop,\" Bobby said. \"How old is he?\"\n\n\"Mid-fifties I guess,\" Kelsey said. Her gaze shifted to Sharron. \"He's tall, probably six-three or six-four maybe. Nice and slim. He's got those great smile-lines next to his eyes...\"\n\n\"If you're trying to get me to come to your party you don't have to work that hard,\" Sharron said, looking a little embarrassed that she was so ready for something so wild.\n\n\"I was thinking you and Happy might make a nice couple,\" Kelsey said.\n\nSharron chuckled. \"Strip me and throw me into a house full of naked men. Doesn't sound like the best way to find a future husband.\"\n\n\"You'd be surprised, Honey,\" Kay said to her. \"When Bobby and I were younger we were involved in lots of parties with single people. Quite a few nice relationships were born on those nights.\"\n\n\"I won't be divorced for months and...why are we even talking about this?\" Sharron asked. \"Isn't recreational sex enough for a while?\"\n\n\"Sure it is, Honey,\" Kay said. \"A nice party will be a good next step for you. If you think about all the men as potential mates it'll just spoil it. Just walk down the stairs in something sexy and have fun.\"\n\nSharron got a sudden jolt of nerves. She hadn't thought about making an entrance at that kind of a party. Did Kay do that, she wondered? Float down the big staircase in flowing chiffon lingerie?\n\n\"Kelsey, don't be putting ideas in that man's head about Sharron,\" Kay said. \"If something's meant to be, it'll happen naturally.\"\n\n\"Yeah, I know, Mom,\" Kelsey said, wondering if Koop had said anything to Happy.\n\n\"Good. So, are we all on the same page then?\" Kay asked everybody. \"Sounds like we may have a summer soiree to get ready for.\"\n\n\"Yay!\" Kelsey said. \"Can we do it Friday? Raymond's leaving Sunday for his new job in Brooklyn.\"\n\n\"Kelsey! You want to do it that soon?\" Kay said. \"Well, if it's for Raymond, I guess we can make it happen.\"\n\n\"Oh my God!\" Kelsey smiled. \"It's gonna be the best night ever! Brie and Charity are just gonna flip when I tell them!\"\n\nSharron smiled at Kelsey's youthful enthusiasm, but she too was flipping a little inside as she thought about what Friday night would bring. Would she be passed from man to man, from woman to woman, all of them with nothing but pleasure on their minds? It sounded like heaven to her at the moment, but it was pretty far out there from who she used to be. She'd have to work on her frame of mind, and her confidence, to pull it off.\n\nBobby smiled at Kelsey, too. The mention of Brie and Charity was enough to send his mind to a happy place. Kelsey had forgotten to mention Trina, so Bobby didn't yet know the captain of his daughter's high school cheerleader squad would be there, looking even more stunning as a twenty-two year old than she did when she had all the fathers enthralled.\n\nAs Kay cleared some dishes from the table and walked to the sink she was fantasizing about the two new men, both of whom she'd be meeting for the first time on Friday. Koop with his tattoos, and all six-foot-four of Happy. She'd always loved big men, especially the slim, well-built ones who towered over her five-foot frame.\n\nYes, Friday would be interesting, for everybody. A new kind of party at Kay and Bobby's house. An intermingling of generations and an entry point for the inexperienced. Kelsey's enthusiasm was contagious.\n\n\u2014\n\nThe next few days were nearly mind-numbing for Sharron. Phone calls with the lawyer, an uncomfortable phone conversation with her husband, and nearly continual daydreams about what Friday night would be like. She wondered about nearly every couple she saw, if they were swingers, if they were sexually open, if they would be walking into the house on Friday and fucking her. It was a crazy, almost overwhelming feeling \u2014 would she survive the build-up, let alone the actual event?\n\nThe way Kay prepared fascinated her as well, cutting off sex with Bobby until the night of the party. \"It makes it all so much hotter if I haven't gotten any in a while,\" Kay had said. \"You two can still have fun. I won't mind.\"\n\nSharron could sense that Bobby liked to abstain beforehand too, so of course she followed their lead \u2014 the evenings leading up to the party were simple lying-around-naked-watching-movies affairs.\n\nKelsey had been busy too, getting her friends prepared as best she could. She'd talked to Raymond and Trina individually, about what to expect and about how important discretion was to the older participants. What happens in the house stays in the house, she told them. They seemed happy to oblige, not wanting anything to get out about them, either.\n\nBrie and Charity felt the same way. Charity in particular was relieved to hear everyone was wanting discretion. As loose as her morals had become lately, she still had a lot of Christian Midwesterner in her blood. Being in the middle of any kind of sex scandal would horrify her. \n\nKelsey's last stop was Koop's Crawlers. She drove over first thing in the morning and was glad to find the men alone, reinstalling an engine they'd rebuilt. It was hanging from a chainfall, being slowly lowered into position when she walked in.\n\n\"Hi you guys!\" she said. \"Holy shit, that's cool!\" She stood and watched as the silvery chain flashed through Happy's hands with a high-pitched metallic whir. The engine moved slowly downward. Koop was under it, guiding it onto the input shaft of the transmission.\n\n\"Hold it,\" he said. \"Give me another inch.\"\n\nHappy pulled the rattly chain slower and the engine slipped into place.\n\n\"Got it,\" Koop said. \"Is it on the mounts?\"\n\n\"Yup,\" Happy said. \"Lookin' good.\"\n\nKoop rolled out from under the Jeep on his creeper, sat up and wiped his hands on a rag.\n\n\"Hey Kel, how are ya?\" he said. It was his most casual greeting of Kelsey yet. She was pleased.\n\n\"I'm good, Koop,\" she smiled. \"I wanted to stop and invite you guys to a party. It's kinda short notice, but, Friday night at my house. It's gonna be super fun. Did Koop tell you about it, Happy?\"\n\n\"Oh. Yeah,\" Happy said, not quite sure how to respond. \n\n\"It sounds fun, right?\"\n\n\"Well...sure. Yeah.\"\n\n\"Good. It's at seven o'clock. You guys are busy, so I'll just leave the address on your desk, Koop. Can you guys do me one favor though?\"\n\n\"Sure,\" Koop said.\n\n\"My mom asked that everybody that comes be, like, really discrete about it. Is that cool with you guys? There's like people from businesses around town and stuff. Like you guys. We just wanna keep it all, like...what happens there stays there, you know what I mean?\"\n\n\"Oh, yeah,\" Koop said. \"Absolutely. I feel better hearing you say that, actually.\"\n\n\"So, you guys are in?\" Kelsey asked, smiling hopefully.\n\n\"Yeah, I uh...I guess I am,\" Koop said. He looked at Happy to see what he'd say.\n\n\"Shit. I guess. How am I gonna say no to you, Kelsey,\" Happy said. He looked as shy and vulnerable as Kelsey had ever seen him.\n\n\"Awesome!\" Kelsey said, smiling at him. \"Oh my God, I can't wait! Get lots of rest you guys, it's gonna be a long night.\"\n\nShe scribbled the address and drew a happy-face inside a heart on the back of a work order on Koop's desk, and disappeared down the road. The two men got back to work, not sure how they should talk about it to each other. They both decided to just let Friday roll around and let it happen.\n\nAfter Kelsey left the Jeep shop she met Sharron at work. Sharron was agonizing over what to wear to the party, and Kelsey wanted to help her pick something out.\n\n\"Anything good come in lately that you had your eye on?\" Kelsey asked.\n\n\"There's a dress, but it's like evening wear,\" Sharon said. \"That wouldn't be right, would it?\"\n\n\"Yeah! Me and Brie and Char and Trina all decided to wear dresses. We're goin' for the sophisticated thing,\" Kelsey said, smiling mischievously. \"And Mom said she'd go with whatever you decide, so you don't feel out of place.\"\n\n\"Well...let me show you,\" Sharron said. \"I've never had anything quite so...\"\n\n\"Oh my God!\" Kelsey said when Sharron took it off the rack. \"I love it! It's wicked sexy. Try it on for me.\"\n\n\"If anybody comes in, tell me, all right?\" Sharron glanced out at the parking lot to see if she had a few minutes, and dashed into the dressing room. She emerged a minute later after a quick change.\n\n\"Fuck yeah!\" Kelsey said. \"Take your bra off though. You don't need that.\"\n\n\"Well, I know, but, you get the idea, right?\" Sharron asked.\n\n\"Just take it off. We gotta see what it's gonna look like, right? I'll watch the window.\"\n\nSharron made the change, walking back out just as an older couple entered the store.\n\n\"Kelsey!\" she scolded quietly. \"Didn't you see them?\"\n\nThere was no one else working, so Sharron had no choice but to go back up to the cash register. She scurried to the front of the store in bare feet, trying to keep her tits from bouncing too much. The black dress wasn't much more than mini length, flaring out alluringly from the waist down. Above that was the real display, with halter-like segments rising to cover each breast, coming together at the neck for a choker-like effect. A large cut-out down the middle put profuse cleavage on display, all the way to the top of Sharron's belly. Her back was completely bare. The older gentleman took notice and couldn't seem to tear his eyes away from the beautiful display of femininity. Sharron smiled shyly, horrified that her hard nipples were adding to the jiggly tit show. Kelsey joined her at the front counter.\n\n\"See?\" Kelsey said quietly. \"It works. That guy wants to fuck you right now. Here's what you need \u2014 thigh high stockings, the lace top ones, so you can see the lacy part with that short dress, and sexy high heels. You'll look so hot you won't be able to walk Saturday morning after all the guys get through with you. I gotta go. See you, Honey.\"\n\n\"Kelsey!\" Sharron called after her, but the youngster was out the door. More customers came in. Sharron was stuck working the floor in the way-too-sexy dress for almost an hour. In a way it was good for her, forcing her to build confidence. It made her think differently about her customers, too. Some of the women looked at her like they were wondering what the hell she was doing, but a few looked at her with something else in their eyes. Appreciation. Intrigue. Maybe even a little closeted lust. Could they be as open about sex as Kelsey and Kay, she wondered? When a couple came in that was closer to her own age she pictured them as swingers, having friends over, swapping partners. They both seemed interested in her, openly checking out her body in the dress. By the time they left and the store was empty, she almost didn't want to take it off. She scurried back to the dressing room where her work clothes and her bra were scattered about. She left the door half open so she could keep an eye on the store. A beautiful, warm rush of adrenaline washed through her when she took off the dress and stood there for a few moments in nothing but her panties. The store was empty, but people were walking past the front window, looking in at the wares. Little did they know a mostly naked forty-seven year old woman was looking at them, a woman who was increasingly ready for a Friday night orgy.\n\n\u2014\n\n\"Hi Daddy,\" Charity said when she picked up her phone. She, too, was hit with an adrenaline rush, but it wasn't a beautiful one. It was fear, pure and simple. Brie's eyes showed it, too. It was Friday evening, and Brie had just zipped up the back of Charity's party dress, a hot little number in red that screamed \"Fuck me!\" from every angle.\n\n\"No, the job hasn't started yet,\" Charity said to her father. \"There's an orientation meeting in two weeks......Home? No, I can't, Daddy. I'm meeting people. It's a small community, Daddy. It's important for a new teacher to meet people and be a part of things, don't you think?......How's Mom and everybody?......Good......Yes, I'm reading them......This morning? Ezekiel 20:6......Yes, I'm going, every Sunday......Yes Daddy, I will. Give Mom my love......Bye Daddy.\"\n\n\"I had no idea you had such a sweet little voice,\" Brie kidded. \"You should use it on the men tonight. They'd love it.\"\n\n\"Shut up!\" Charity said, thoroughly shell-shocked after hearing her father's voice. \"Damn it, why did he have to call right now?\"\n\nBrie almost said something about fathers and premonitions, but she decided against it \u2014 Charity already looked plenty spooked.\n\n\"You know,\" Brie said, \"there's a lot of different ways to be a daughter. Look at Kelsey and her dad. The exact opposite of you and your dad, but it works, right? You're just exploring some of that, to see where you fit in. It's your life you know. It's not your dad's.\"\n\n\"I know,\" Charity said. She shook her head thinking about the timing of the call. \"I really need a drink. I know you said we shouldn't start too early, but...\"\n\n\"This is special circumstances,\" Brie said. \"Follow me.\"\n\nCharity followed the panty clad girl down the hall to the kitchen where they both downed a shot of Wild Turkey. Raymond knocked at the door as Trina was driving up the driveway.\n\n\"I'm way over-dressed,\" Trina said, smiling when she saw Brie, in nothing but panties, hugging Raymond.\n\nShe strutted up the walkway in full regalia \u2014 a slutty little dress with stockings and stiletto heels, smoky eye makeup and black-cherry lipstick, and a cute new haircut she'd gotten especially for the occasion. Raymond was slack-jawed. He'd never seen the gorgeous girl dressed for action before.\n\n\"That's hot, Trina,\" Brie said. \"Me likey.\" Her nipples puffed and hardened, giving away her arousal. \"I better get ready. Keep an eye on Charity, okay you guys? Don't let her drink 'till we get there.\"\n\nBrie's face was made-up and her hair was done, so it only took her a few minutes to dress. She pulled on her stockings, took off her everyday panties and strapped on a lacy black garter belt. A slinky little silver cocktail dress covered up her freshly shaved pussy and perfumed tits. It was backless to the crack of her ass and sexy as can be. She and Charity had found it on one of their recent shopping trips.\n\n\"God, you're fast!\" Trina said. \"Fuck, girl! That's hot.\"\n\nBrie twirled to give the full effect, spinning delicately on a high, stiletto heel. \"Think anybody'll wanna fuck me?\"\n\n\"If they don't, I will,\" Trina said.\n\nThe four of them piled in Raymond's car for the short drive to Kelsey's.\n\n\u2014\n\nKay and Bobby's older friends were the first to arrive for the evening's festivities. The men gathered around the bar Bobby had set up on the kitchen counter. Olivia, standing with some of the women in the living room, was having second thoughts about being there.\n\n\"Are we crazy?\" she said quietly. \"Turning our husbands loose with four hot twenty-two year old girls?\"\n\n\"I know. I'm kind of wishing we hadn't come,\" Jessica said. \"Well, maybe not that, but I've been going back and forth on it.\"\n\n\"We get some candy, too,\" Trinny said. \"Two young ones and two older guys that we've never even met. I can't be the only one who gets crazy horny thinking about that.\"\n\n\"I'm not saying it isn't exciting,\" Olivia said. \"I just hope the guys don't think this is going to be the new normal. I guess I'm just feeling old, compared to Kelsey and her friends.\" Olivia straightened herself up. Like Sharron, she'd been working on her posture for a few weeks, trying to eliminate the slightly stooped-over stance that reminded her of her mother.\n\n\"What's all the gossip about?\" Kay asked when she and Sharron joined the women.\n\n\"We were wondering if we're crazy. Who's idea was this party anyway?\"\n\n\"Kelsey's,\" Kay said. \"She wanted to intermingle things a bit, and bring in some new people.\"\n\n\"New single people. No offense, Sharron,\" Olivia said.\n\n\"No, that's all right. I get it,\" Sharron said.\n\n\"It's sort of a delicate balance, having an open marriage,\" Olivia said to her. Sharron nodded her understanding.\n\n\"I know that Bobby and I are more open than you guys, but, I think things should balance out nicely tonight,\" Kay said. She glanced out the window at a pickup truck pulling in the driveway. \"Our two mystery men have arrived. Are we ready for a wild good time?\" \n\nHer big, excited smile was contagious, but some of the women's smiles gave away their nerves. Sharron's was especially forced looking.\n\n\"Kelsey, your friends are here,\" Kay yelled.\n\nKelsey trotted out from the kitchen, right out the front door. Kay followed.\n\n\"Oh my God, I know that guy,\" Jessica said, watching the arrival from the window.\n\n\"Which one?\" Olivia asked.\n\n\"The tall one. He used to eat at the restaurant. He and a woman. They were really nice, I always used to like seeing them.\"\n\n\"Look at the tattoos on the other one!\" Trinny said. \"Oh yeah, those are good looking men.\"\n\nAustin drove in and parked his beat-up old car. After Kelsey introduced her mother to Koop and Happy, she ran over to greet him.\n\n\"Holy shit, look at him!\" Trinny said, keeping her distance from the window so she wouldn't be seen.\n\n\"Oh my gosh, that's Austin Lowe!\" Olivia said. \"Varsity soccer, drama club. Good Lord, he's maturing nicely, isn't he?\"\n\n\"Yum!\" Tinny said.\n\nSharron smiled as she thought about Austin on the beach. At last she felt like she had a leg up on her new, free-thinking women friends. \n\n\"Well, what do you think, girls?\" Trinny said. \"Let's get this party started.\"\n\nShe walked out the open door onto the front porch and the others followed, just as Kay was ushering the new arrivals up the steps.\n\n\"Oh, good,\" Kay said. \"Kelsey, why don't you make the introductions.\"\n\nRaymond's Toyota drove in. Kay left the nervous but buzzing crowd on the porch to greet the newcomers.\n\n\"Oh my gosh!\" she squealed when Brie, Charity and Trina got out of the car. \"You girls look amazing! Oh, I could just eat every one of you right here!\" Kay went right to Charity and put her arm around her, sensing that she might be the one who was most nervous. \"I love that dress, Honey,\" Kay said. \"Red's Bobby's favorite color you know.\"",
        "\"Really?\" Charity said quietly. She scanned the crowd on the porch, but didn't see him.\n\n\"My, that just fits you like a glove, doesn't it?\" Kay said, admiring Charity's young body. \"You'd think you had it custom made.\"\n\n\"As soon as she tried it on I knew she had to buy it,\" Brie said.\n\n\"Better not wear it to the PTA meetings dear,\" Kay said. \"You'll have the all the fathers in a tizzy.\"\n\nCharity smiled and took a deep breath. She felt alive in a way that was addicting. Since she'd moved to town, Kay had become an unexpected roll model, and her gentle, sincere praise went a long way toward calming Charity's nerves.\n\n\"And you!\" Kay said, turning to Trina and hugging her. \"I haven't seen you since graduation! My goodness you've become a beautiful woman!\"\n\n\"Hi you guys!\" Kelsey said as she bounded down the porch steps. She jumped into Raymond's arms, knocking him back into his car. After a quick kiss her feet were on the ground again. \"This is gonna be the best night ever! Come and meet everybody!\"\n\nBobby and the other men had joined the minglers on the porch when Kay escorted the youngsters up the steps. She had her arm around Charity again. Koop and Happy couldn't quite believe what they were in the middle of. They'd already been wowed by the other women in their sexy dresses, but when Kelsey introduced them to Brie, Charity and Trina it was almost too much to take in. \n\n\"I'm so glad you guys came,\" Kelsey said. She could tell Koop and Happy were overwhelmed. \"Come with me. We'll get drinks.\"\n\n\"The bar's in the kitchen everybody,\" Bobby said. \"I'm gonna give Rich a break tonight and mix the drinks, for a little while anyway. After that, help yourselves. Toss a few bucks in the tip jar if you'd like to kick in on the booze. Make yourselves at home. Every room in the house is available, don't be shy about that, and there's towels out by the pool for anybody who wants to get wet.\"\n\n\"I'll bet some of the women are already wet,\" Kay said, drawing restrained, nervous laughter from the crowd.\n\nKelsey took Koop and Happy by the hand and led them inside.\n\n\"Nice house,\" Happy said. \"I've gone by here a few times and never noticed it.\"\n\n\"Yeah, we like it private,\" Kelsey said. \"I saw you talking to Jess and Rich. Do you know them?\"\n\n\"My wife and I used to eat in their restaurant. It's a little awkward seeing them here.\"\n\nHappy didn't tell Kelsey that he had a crush on Jessica back in those days. He used to suggest the restaurant to his wife so he could watch Jess perform her hostess duties, walking around all evening in the tight black pants and form-fitted white satin shirt she always used to wear.\n\n\"I think awkward makes things hotter,\" Kelsey said. \"I happen to know she likes tall guys.\" Kelsey didn't know that. She was just trying to ease Happy's mind and get him revved-up a little.\n\n\"Koop, Happy, what can I get you guys?\" Bobby asked, taking his place at the bar.\n\n\"A couple whiskeys'll probably do us,\" Koop said.\n\n\"You got it,\" Bobby said. He poured two doubles from a fresh bottle of Jack Daniels. \"The Jeep's workin' out great. Kelsey just loves that thing.\"\n\n\"Good. Yeah, I like that one,\" Koop said. \"And those photos she did for the website are causing all kinds of action.\"\n\n\"Oh, great!\" Bobby said. He called out to the other room... \"Hey, Honey, did you hear that? Kelsey's photos are bringing Koop some business.\"\n\n\"Oh, good!\" Kay said, clicking into the room in her high heels. She'd lost her dress already, but still had her sexy bra and panties on.\n\n\"You guys met Kay, right?\" Bobby asked.\n\n\"We did, but I would have known you anyway,\" Koop said to Kay. \"I couldn't mistake you for anybody but Kelsey's mom. It's amazing how much you guys look alike.\"\n\n\"Not so much since she got her hair cut, though,\" Kay said. \"Think I should cut mine?\"\n\n\"I don't know,\" Koop said. \"I like it both ways.\"\n\nShe moved in close, turning her back to him. \"Here's what I like about havin' it long,\" she said. \"Gather it up in your hands, like two ponytails.\"\n\nKoop set his drink down and did what she asked. She pressed her ass against his crotch, arched her back, and moved her hips against him in a slow fucking motion. \"Pull 'em tight, Honey,\" she said, her voice soft and sexy. \"See? It's fuckin' hot like that.\"\n\nKoop blushed. His cock was growing and Kay's husband was watching them, just a few feet away. \"Yeah,\" he said. \"I'll have to agree with you.\" He let go of the long red tresses, picked up his glass and took a much needed drink.\n\n\"I'm beginning to feel why Kelsey likes you so much,\" Kay said, giving one last wiggle of her ass against Koop's hardening lump.\n\n\"Don't mind her,\" Bobby said as he mixed some more drinks. \"She likes to get these parties moving. Thinks anything else is wasting time.\"\n\n\"Well, we all sorta know what we're here for, right?\" Kay said. She winked at Koop and wiggled her panty clad ass out of the room.\n\n\"Daddy, turn on the outside speakers, will you?\" Kelsey asked. \n\n\"Sure, Honey,\" he said.\n\nShe was standing in the open french doors, stepping out of her dress. Koop had seen her in the altogether a couple of times, but it was a first for Happy. He took a slow sip of his drink. His brain was firing so fast the casual striptease seemed to be happening in slow motion. Kelsey straightened up with the dress in her hand. She had stockings and a garter belt on \u2014 a strappy black leather one with a dominatrix/bondage vibe. She'd decided not to wear a bra and panties. Happy was glad, although it would have been fun to watch her take those off too.\n\n\"You guys comin' out by the pool?\" she asked, smiling at Happy's approving gaze.\n\n\"Sure,\" he said. He would have followed her off the edge of a cliff. Koop too.\n\n\"You guys, these are my friends that built my Jeep,\" Kelsey said as she led them out.\n\n\"Oh, cool!\" Brie said.\n\nCharity avoided the small talk by heading into the kitchen. She wanted a drink, and she wanted some time with Bobby.\n\n\"Hi, Beautiful,\" he said. \"What can I get you?\"\n\n\"A manhattan,\" she said.\n\n\"Ah, nice! My favorite drink,\" Bobby said. \"Comin' right up.\"\n\nCharity watched silently, with a coy little smile on her face that Bobby loved.\n\n\"Tell me what you think of that,\" he said, holding back the ice cubes as he poured the amber liquid into a glass.\n\nCharity took a sip and smiled. It was a heart melting smile, and Bobby suddenly wanted to rip her dress off and take her right there on the counter. Stranger things had happened at the house, but he knew she'd been pretty shy up until recently, so he took things slow.\n\n\"I'm so glad you got that job at the school,\" he said. \"Have you talked to Olivia yet? She can help you get oriented.\"\n\n\"No, I haven't really. She seems nice, though.\"\n\n\"She's the best. Larry's a great guy too.\"\n\nCharity looked at them both out by the pool, where almost everybody had gravitated.\n\n\"He's handsome,\" she said. \"I wasn't sure what to expect.\"\n\n\"Of us old guys, you mean? Yeah, we're hangin' in there. When you get to be our age, time at the gym pays off.\"\n\n\"Olivia's sexy too,\" Charity said, still gazing outside. \"I hope I look that good when I'm her age.\"\n\n\"Based on what I'm seeing, I'm pretty sure you will.\"\n\nCharity blushed. A shy girl with a cute body had always been one of Bobby's turn-ons.\n\n\"I love the red lace,\" he said, looking down the front of Charity's little dress at the frilly edge of her bra.\n\n\"I wasn't sure if red on red would work,\" she said, looking down at herself. \"It's not too much?\"\n\n\"I'm guessing it's perfect.\"\n\nCharity decided the man she dreamt about so often shouldn't have to guess.\n\n\"Wanna unzip me?\" she asked. \n\nShe turned her back to him. Bobby lowered the delicate little zipper slowly, savoring every second of the moment. The dress slid down her young skin like gossamer. After stepping out of it she turned to him, blushing again.\n\n\"Good God you're beautiful,\" Bobby said.\n\n\"Brie thought the black stockings were good,\" she said, trying to hide her blush by looking down at them.\n\n\"You look stunning,\" Bobby said. \"I'd really like to kiss you right now.\"\n\nCharity looked up at him with the sexiest combination of innocence and lust he'd ever seen. He was a goner, and Charity was too. There was no turning back.\n\nBy the time their first kiss ended her bra was on the floor and Bobby's pants were open. She dropped slowly to a squat and took the tip of his cock on her tongue. Bobby almost came. It wasn't like him. He was usually a master of stamina, but something about Charity got to him, big time.\n\nThe blowjob was special. Charity had been working hard on her deep throat technique, but she'd never been able to take the bigger guys all the way. Bobby's big one slipped right in. It was like magic. Charity wanted to pull off and laugh, but she just left it in there, all big and hard and halfway to her lungs. Her eyes watered, not from the physicality as much as the emotion. It was all just so awesome, she wanted to cry. Bobby's deep groan when she took him deep again was music to her ears. She was in love with the man, plain and simple, and she wanted him deep inside every part of her.\n\nAfter the incredibly sensual blowjob, during which numerous people came and went with drinks, Bobby pulled her to her feet. He dropped to his knees, pulled down her panties and ate her as she leaned against the counter. \n\nHis tongue felt like heaven to Charity. His mouth seemed to engulf every bit of her sexuality. She squealed with delight when he lifted her like a feather up onto the counter to eat her some more.\n\n\"Can I fuck you, sweet girl?\" he breathed into her pussy. \"Can I fuck you?\"\n\n\"Yes. Fuck me,\" she sighed. \"Please fuck me.\"\n\nHe lifted her down like she weighed nothing, and turned her around. Her arms were extended out on the counter and she lay her head down between them, gifting Bobby her smooth, round ass, young and ready. He found the slippery spot with his fingers and guided his throbbing cock to it, pressing slowly into Charity's incredible tightness. She was as wet as a girl can be. Steady, rhythmic thrusts brought him home. Charity was instantly in a place of pure beauty and magic. The world went away as Bobby fucked her. She'd become part of her dream.\n\nHer first orgasm came quickly. She knew it would. She rode the unbelievable feeling with her eyes closed, letting every bit of it burn into her memory. Her thighs twitched and her breath stuttered. Bobby's big cock wrung every last electrical pulse out of her spasming nerves, and then slowed to start the whole process over again.\n\n\"Yeah, fuck me more!\" she hissed through clenched teeth. \"Don't fuckin' stop!\"\n\nIt was an insistent command, and Bobby was glad to oblige. As he fucked his new sweetheart he looked out at the burgeoning action by the pool. No one was fucking yet but things were taking shape. Kelsey was giving Happy a blowjob. Austin's pants were down and Olivia had his cock in her hand and her tongue down his throat. Kay was kissing Koop while she unfastened his pants. It was a beautiful scene and Bobby wanted to draw Charity into the action.\n\nHe reached for her arms, held them tight behind her and thrusted hard, slapping into her loudly.\n\n\"Yeeaahh!\" she grunted loud. \"Yeeaahh!\"\n\nHe put his arm under her waist and lifted her with his cock still inside, putting her down right in front of the floor-to-ceiling window next to the french doors. He placed her hands on the glass, took hold of her hips and resumed the hard, slapping fuck.\n\n\"Oh fffuuckk!\" she screamed, looking out at all the eyes watching her. \"Yeah!\" she yelled. \"Yeeeahhh!\" It was another big step in her discovery of her powerful exhibitionist tendencies. They always surprised her \u2014 at Brie's pool with the boys; at the beach; in the back of the Jeep the other day with Raymond. It was all new, and she was just figuring it out, but there, being fucked so powerfully by her dream man, in front of so many people, it was like a mainline shot of heroin. She came so violently it scared her. Or it would have if she'd had even a shred of sanity left. \n\n\"Yeah, Charity!\" Kelsey yelled as she watched. \"You're the hottest girl in the fuckin' world right now!\"\n\nCharity barely heard the words. She knew her name had been spoken, but that was about it. She was riding the most extraordinary, never-ending orgasm. When Bobby pulled out and gushed in the middle of it, her thighs were still twitching wildly, sending her legs into shaking spasms. He had to hold her up with one hand while he milked his red-hot cock with the other. His first two pulses went right over her head and hit the window. The rest went on Charity's back. Kelsey whooped and a smattering of applause drifted in through the open doors. The transformation was complete. The God-fearing Midwestern Pentecostal girl was gone. Long live the wild woman named Charity.\n\nThe first pair-offs and groupings were mostly complete by the time Charity wowed the gang with her off-the-charts orgasm. Jessica loved the ladies, as much or maybe even more than the men. Trina caught her eye as soon as the youngsters had piled out of Raymond's car. Out by the pool, she and her husband Rich zeroed in on the former cheerleader, deftly separating her from the herd. \n\n\"Would you like to join us upstairs for a little while?\" Jess asked her when the conversation turned to the sexual. If Trina hadn't found them both so alluring she would have suggested they stay amongst the action on the pool patio, but she'd fantasized about a threeway with an older couple and wasn't about to say no to her first opportunity at one. Jess and Trina went in the house hand-in-hand, followed by a happy looking Rich.\n\nBrie and Sharron were sticking together. Trinny had seduced Raymond away from them, so Albert and Larry were chatting them up, the four happily sipping drinks as the noises of an orgy slowly built all around them.\n\nSharron had trouble staying in the conversation, distracted by Bobby fucking Charity up against the window the way he did. She'd been with Bobby numerous times, and knew of his skill, but the pure intensity of Charity's orgasms left her breathless as she watched. \n\nBrie was amazed too, by the way her formerly shy roommate was letting herself go. Like Sharron, she was trying to watch and not be rude to Albert and Larry. The men understood.\n\n\"How do you know Charity?\" Albert asked the women.\n\n\"She was my college roommate,\" Brie said.\n\n\"Brie and Charity are teachers,\" Larry told Albert. \"They start at the elementary school in the fall.\"\n\n\"Thanks to Olivia,\" Brie said, glancing at her across the pool. Olivia's nice tits were out, and her mouth was full of Austin's big cock.\n\n\"She told me you two did it on your own,\" Larry said. \"The hiring committee knows you and your good record at school, and they liked Charity's Midwestern Christian values.\" It was right about then that Charity's screams had begun, with her sweaty hands against the glass and her wild eyes scanning the crowd.\n\n\"How about you, Sharron?\" Albert said. \"Bobby tells us you're starting over after a difficult marriage.\"\n\n\"Yes,\" she said, wondering what else Bobby had told them. \"Trying to reinvent myself I guess.\"\n\n\"If Trinny and I can be of any help, just let us know,\" Albert said.\n\n\"That goes for Olivia and me, too,\" Larry said.\n\n\"Thank you,\" Sharron said. \"I wish I'd met all of you nice people twenty or thirty years ago.\"\n\n\"God, she's makin' me horny,\" Brie said, just as Charity reached her thigh-twitching meltdown. \"Hold this for me?\" she asked Albert. She handed him her drink and slipped out of her dress, leaving her braless and pantyless, in nothing but the lacy garter belt and stockings. \"Thanks,\" she said, taking the drink back. It was a big move for her, something she'd been thinking about since walking out onto the pool patio. Doing it in such intimate proximity to two fully clothed men she'd just met made it seen even more important somehow, like she wasn't a beginner anymore. She'd graduated to the intermediate ranks in the sex-party world.\n\nBrie's casual disrobing flustered Sharron. She, too, had been running the strip-down through her mind, wondering where and when her sexy new dress would come off. Just casually taking it off in mid conversation with Albert and Larry wasn't one of the scenarios she'd thought about. She was braless too, after all, and as well as she'd held up, forty-seven-year-old tits just didn't compare to twenty-two-year-old ones. Hers were bigger than Brie's, though. Maybe that would compensate, she thought, as her mind spun a million thoughts. Waiting wouldn't make it any easier.\n\n\"I could use a little air, too,\" she said, wondering where the words had come from. She handed her drink to Larry and stepped out of her dress. \"Such a nice warm night,\" she said, draping the garment on the back of a nearby chair.\n\n\"It's a wonderful night,\" Larry said, his eyes sparkling as he took in Sharron's goosebumpy beauty. \"Would you ladies care to join us inside?\"\n\nSharron was comfortable with Brie. A fourway with her seemed like a good way to get things started. Safety in numbers with her friend from the beach. She took Larry's hand and led the way to the guestroom she was staying in. Brie and Albert followed.\n\nTrinny was fucking Raymond on a poolside lounge chair, not far from Koop and Happy. Kelsey and Kay were still working on the two men, switching off from time to time, slowly getting them naked. Koop and Happy were glad it was a slow process, and that a lot of the crowd had left. Darkness was falling too, which helped them ease into things. But once the clothes were off, there was no more easing in. The two redheads knew what they wanted and they took it, fucking Koop and Happy hard. After the initial round, with the men both comfortably on their backs, things revved up with some doggie style and some double-ended spit roasts. Kelsey and Kay were loud and wild and free. Koop and Happy loved every minute of it.\n\nBobby and Charity were in the pool, fucking slow and easy under the water as they kissed like new lovers. Charity was a goner for the man. She didn't know what she was going to do when the night was over, but for that moment at least she was lost in a loving high. Trinny and Raymond joined them in the pool, and Olivia and Austin splashed in as well.\n\nTrinny and Olivia swapped their boys, both of the women ending up sitting on the pool's edge, with young tongues lapping at their pussies. They both watched Bobby and Charity, sensing a connection that was deeper than usual. Trinny looked over at Kay, lost in bliss on Happy's big, fat cock. She wondered for a moment where Albert was. She'd seen him go with Brie, and decided to check in on him when she got a chance. Austin was just a heavenly looking young man, though, so she hoped it would be a while. She had a beautiful orgasm on his tongue and kissed him deeply, tasting her sweet juice in his mouth. She loved that, almost more than anything, especially when her taste was in the mouth of a boy like Austin.\n\n\"God, you young ones get hard so easy, don't you,\" she said. Austin's big cock was easy to see through the gin-clear water. \"Make me cum again you gorgeous boy.\" She stood up and walked to a lounge, watching over her shoulder as Austin's eyes followed her ass. He climbed the steps from the pool looking like a shiny Greek god, the god of big young cocks. Trinny, already on her hands and knees, trembled with anticipation as he neared. He placed one knee on the lounge and slid into her with a slippery wetness that took her breath away.\n\n\"Oh my God!\" she mumbled. Her upper body collapsed and the fucking was underway. No warm-up. Good solid fucking from the outset, with a cock that filled Trinny to the brim.\n\n\"Fuck yeah!\" she hissed, her eyes wild with big-cock fever. ",
        "Kay looked over her shoulder at Trinny when she heard her. Austin's hips were moving swiftly, his body smoothly muscled. His open mouthed smile and closed eyes gave away how much he was enjoying himself. Kay jotted down his name on her mental dance card. The night wouldn't end until she felt that young cock inside her.\n\nAs the night wore on swaps were made, groupings were gathered and friendships were solidified. Happy and Sharron did hook up, at one point even disappearing into the house for some alone time. Kelsey went snooping and found them, melted together in a steamy sixty-nine on the living room couch. Kelsey tiptoed in, unseen by Happy. Sharron smiled and shared his nice fat cock. Happy groaned when he felt four feminine hands and two soft mouths on him, one on his cock and one on his balls. \n\n\"Are you happy, Happy?\" Kelsey asked. He groaned again and smiled when he heard her sweet voice. Sharron dragged her wet pussy across his smile, and she smiled too.\n\nThe night had been a revelation to Sharon. Yes, she had been a part of group sex before, at the lake twice and at the house with Kelsey and her mom and dad, but the party that night was different. It was planned, and a broader cross section of people were there, all enjoying sex for the pure pleasure of it. The married couples were fascinating. Sharron watched how they interacted, hoping that someday she would find a man who had such love and confidence in her that he wouldn't mind seeing her with another man. It seemed like the ultimate form of love. A deep bond unlike any she'd seen before meeting Bobby and Kay. Seeing it in three other couples that night did her heart good. Bobby and Kay weren't freaks \u2014 that kind of relationship really was available, and really did work.\n\nAs she shared Happy's wet cock and balls with Kelsey, she let her mind drift to a relationship with him. Maybe Kelsey's intuition was right, maybe he was the one. Or maybe he'd think she was a skanky whore who let five men fuck her that night. Only time would tell, but she decided then and there that she was going to ask him out, after a few days had passed. \n\n\"Fuck me again, Baby,\" she said, her voice soft and sexy.\n\nHappy moaned into her pussy, giving the succulent thing one last swirl of his tongue. She climbed off of him and helped him to his feet, kissing some of the shiny off his face. She took Kelsey by the arm, but Kelsey knew what Sharron wanted. The youngster took the bottom of the sixty-nine, leaving room for Happy. Sharron took the top.\n\n\"Fuck me slow, Baby,\" she sighed as she climbed on, arching her ass up into the air. \"Make me cum.\"\n\nKelsey pulled the couch pillow under her head, getting comfortable, ready to help take Sharon high.\n\n\"Fuck,\" Happy said, when he got into position. \"What did I do to deserve this?\"\n\n\"You're a good man, Happy,\" Kelsey said from underneath. \"Good men deserve this.\"\n\nIf only life were really like that, Happy thought, and then his cock sunk into Sharron again, and Kelsey sucked his balls into her warm mouth. It was as real as real can be.\n\n\"Oh, fffuuckk!\" he grunted.\n\n\"Bend over me, Baby,\" Sharron said as she absorbed his slow thrusts. \"Hold my tits.\"\n\nHappy took the soft flesh in his big, rough hands, and floated off to heaven.\n\nCharity sampled some of the other men throughout the night. Rich, Albert and Larry all spent some quality time with her, mesmerized by her innocent charms, but she always returned to Bobby, letting him slip his cock into her tightness one more time, just in case it never happened again. Trinny mentioned it to Kay at one point, late in the night when they were both having a snack in the kitchen.\n\n\"Have you noticed Charity and Bobby?\" she asked. Both of them looked out through the open french doors. Charity was flat on her stomach on a lounge, with Bobby fucking her jockey style. His big cock was pumping squeals of delight from deep inside her. \"Remember Marlene, years ago?\" Trinny asked. \"She fell for Albert hard. It was messy for a while.\"\n\n\"Oh, I remember, Honey,\" Kay said. \"Yeah, I've been keeping an eye on him. That explosion in the kitchen at the beginning of the night wasn't like him at all. He usually eases into things after everybody else gets going. It's not like I don't go crazy right off the bat, but yeah, this feels a little different. I'll talk to them. Kelsey can talk to Charity, too. She's such a sweet girl. I hope this isn't too much for her.\"\n\n\"Well, let's not dwell on that,\" Trinny said. \"What do you think of Austin? Good God almighty, he's almost got me where Charity is. I could run off with him without too much effort.\"\n\n\"Yeah, he's something isn't he?\" Kay said. \"God he goes deep! I thought Bobby was big! And that face! I came about eight times.\"\n\n\"Me too,\" Trinny said. \"I hope this isn't a one time party, this mixing of ages. It's been kinda fantastic.\"\n\n\"I know, right?\" Kay said. \"I think our men had fun. I know Bobby did.\" The two women looked outside again. Bobby was glistening with sweat, still thrusting against the young, round ass under him. \"She's a Pentecostal. Reads the Bible and everything.\"\n\n\"No!\" Trinny said. \"Well that explains some of it. Getting matched up with Brie for a roommate was a life changer, huh?\"\n\n\"You can say that again,\" Kay said. They watched as Charity had yet another orgasm, all writhey and open-mouthed. Her eyes rolled back as they were wont to do. Bobby grunted and pulled out, trying to mark her again with his splurge, but he could only manage a dribble. \n\n\"They're gonna wear each other out pretty soon,\" Trinny said.\n\n\"Wanna bet?\" Kay smiled. \"Well, if he's gonna take advantage I might as well, too. Let's go find Koop and Austin.\"\n\n\"Ooo! There's a nice combo,\" Trinny said. \"I like the way you think, girl.\"\n\n\"I want Austin in my ass before the night's done,\" Kay said.\n\n\"Will he fit?\" Trinny asked, her eyes wide and disbelieving.\n\n\"Yup. I've had bigger in there.\"\n\n\"When!?\"\n\n\"Jamaica, and...a couple other times.\"\n\n\"Jesus, girl! You are somethin' else...\"\n\nKay giggled. She glanced out at Charity cuddling with her husband. Charity's eyes were closed, her head resting gently on Bobby's chest. It was fair enough, Kay thought, thinking back to all the men Bobby had let her fuck. She just hoped Charity didn't have too hard a time with things.\n\n\u2014 \u2014 \u2014 \u2014 \u2014\n\n\"Wow,\" Sharron said. She looked around at the trashed kitchen, and at the towels, clothing and empty drink glasses strewn all over the pool patio. It looked like much more of a mess in the morning light than it had the night before. \"We've got some work to do.\"\n\n\"There's lots of clean-up after these things,\" Kay said. \"As long as I'm walkin' funny I know it's worth it.\"\n\nSharron laughed. She was just thinking, on her walk down the stairs, that her pussy felt numb and tingly at the same time, and she was walking funny. She felt beautifully used, in a way she only used to dream of.\n\n\"So, how did that party compare to your others?\" Sharron asked.\n\n\"It was wonderful,\" Kay said, looking a bit dreamy-eyed as she thought back on it. \"Kelsey's friends really made it nice.\"\n\n\"I'll second that,\" Bobby said, groggily wandering in, smelling of sweat and sex. \"Coffee please.\"\n\n\"You, my sweet man, may have some trouble brewing,\" Kay said. She pulled his head down for a peck on the lips.\n\n\"Uh oh,\" he said. \"What did I do?\"\n\n\"A certain young lady is in love with you. Can't say I blame her.\"\n\nSharron blushed, wondering if Kay meant her. She thought she'd controlled her feelings toward Bobby pretty well, and wouldn't call the affection she felt for him love, although she could have easily let it slip that way if circumstances were different.\n\n\"Charity?\" Bobby said. \"What happened? What did she say?\"\n\n\"Nothing,\" Kay said. \"It was plain as day though. You've got it for her too, don't you?\"\n\n\"No more than usual. You know I love all my women,\" Bobby said, smiling a little.\n\n\"Yeah, this is different, and you know it,\" Kay said. She was smiling a little too, which Sharron was glad to see. \"You better not lead her on. And watch yourself \u2014 her father's one of those super religious ones. He might chop your head off of something.\"\n\n\"Maybe we should talk to her,\" Bobby said.\n\n\"No, no. Kelsey and I'll be gentle with her. She's such a sweet girl, I just don't want her to go off the rails. It's all so new to her, and you're just...you. Did you stop and think maybe you shouldn't have fucked her fifteen times? And that first time, in the kitchen...good lord, Bobby, what got into you?\"\n\n\"She really turned me on. You know how that is.\"\n\n\"I do. I just haven't seen you like that in a long time. It was fuckin' sexy though. Boy, did you two rev everybody up!\"\n\n\"That's usually your job,\" Bobby said, kissing Kay on the top of her head.\n\n\"Watchin' that explosion you'd think having two wives wasn't enough for you,\" Kay said. She winked at Sharron. \"You gonna help us clean up?\" she asked Bobby.\n\n\"Absolutely,\" he said. \"Can we eat first?\"\n\n\"Yup. And then we clean. And then you fuck us both in the pool, nice and slow. We're both a little sore.\"\n\n\"Aye aye, Capt'n,\" Bobby said, smiling at his two wives. \"Private Jonston, at your service.\"\n\n\"Wipe that grin of your face Private, and straighten that penis!\" Kay barked. All three of them broke up laughing. Once again, Sharron was amazed at the dynamic of a healthy swinger couple.\n\nThe smell of onions, mushrooms and fresh herbs on the stove drew Kelsey out of bed. The bathroom was empty so she took advantage, standing still in the hot shower for a few minutes before washing herself clean. She dried her hair with a towel and fingered it into place. The short haircut cut was a big hit, and Kelsey loved it. She smiled every time she looked in the mirror.\n\n\"Mornin' everybody,\" she said. She walked around the table, pausing to kiss everyone on the top of the head. \"I love each... and every...one of you.\" \n\n\"Morning, Honey,\" Kay said.\n\n\"Mornin', Sweetheart,\" Bobby smiled.\n\nSharron smiled too, her eyes giving away her happy thoughts. She thanked her lucky stars for the day she met Kelsey.\n\n\"That was the best party ever,\" Kelsey announced, pouring herself a big mug of coffee.\n\n\"None of us will argue with you, Honey,\" Kay said. She went to the stove and tipped a nice frittata out of the saut\u00e9 pan. \"We had a wonderful time. Your friends are all so nice. I think Koop and Happy enjoyed themselves, don't you?\"\n\nBobby chuckled. \"Do you honestly think there's a man alive who wouldn't have enjoyed himself last night?\"\n\n\"Well, I guess I mean they seemed comfortable. They fit in with everyone nicely.\"\n\n\"They fit in me pretty nicely,\" Sharron deadpanned. Everyone laughed.\n\n\"You surprised me a little,\" Kelsey said to Sharron. \"Going off with Brie and Larry and Albert like you did. Brie said you were amazing.\"\n\n\"She did?\" Sharron said, her eyes sparkling with delight. She thought back to how she'd disrobed so early on in the evening, next to Larry and Albert by the pool. It surprised her too. \"There's something in the air around here I think. You guys are inspiring.\"\n\n\"I saw you walk Happy and Koop out to their truck,\" Kelsey said, with a little mischief in her eyes.\n\n\"Are you gonna see them, in the next few days?\" Sharron asked.\n\n\"Yeah, I thought I'd drive out and see how they liked things. Later today maybe.\"\n\n\"You were right about Happy,\" Sharron said. \"I really like him. Thinking about something more feels funny though, now that he's seen me with other men.\"\n\n\"You saw him with other women, so you're even, right?\" Kay said.\n\n\"You're way too logical,\" Sharron said. \"The real world doesn't always work that way.\"\n\n\"I don't know. I think there was a connection made,\" Kay said. \"Think positive.\"\n\nKay served the clan hot frittata and fresh fruit. She refilled everyone's coffees and sat down.\n\n\"Kelsey, Honey, we need to feel out the Charity situation,\" she said.\n\n\"There's a situation?\"\n\n\"Your father.\"\n\n\"Ohhh...\" Kelsey said. \"You think......ohhh...\"\n\n\"These things happen occasionally,\" Kay said. \"I just don't want her to get her feelings hurt. She's so sweet, and new to everything. Your father didn't help matters. He's a bit smitten himself.\"\n\n\"Daddy? Were you a bad boy with your daughter's friend?\"\n\nBobby blushed a little. It was a rare sight and Kelsey loved it. \"Saying no to her wouldn't have been good for her either, would it?\" Bobby said, trying to work his way out of the corner he was in.\n\nKelsey smiled sweetly at her sexy father. She'd noticed that he always seemed to be busy at the party, most of the time with Charity. Kelsey was a little disappointed she couldn't get in on something with her dad, but he spent most of the night on the patio and she didn't want to be blatant about it.\n\n\"So what should we do, Mom?\" Kelsey asked.\n\n\"Just feel things out delicately. Make sure she knows the reality of the situation, before it gets too bad. Maybe it'll be fine and I'm overreacting, but I sure saw lots of signs. If you do talk to her, make sure she knows she's welcome here any time, and your father's not off limits or anything like that. They're welcome to enjoy each other, but it just needs to stay casual.\"\n\n\"Sure, Mom,\" Kelsey said. \"Maybe it's nothing, right? Stupid me, I thought Trina'd be the one Daddy'd be all over. Did you even get with her?\"\n\n\"Oh yeah. I wasn't missin' out on that,\" Bobby said. \"In the pool, with...Charity.\" Bobby blushed again. He was starting to realize he'd been swept up in the young girl's charms. \"I guess I fucked up last night. I'd be happy to talk to her.\"\n\n\"Maybe, but let's just see what happens,\" Kay said. \"Brie and Kelsey can feel things out.\"\n\nKelsey's phone buzzed on the table. She picked it up and read the text. \"It's Austin, thanking me for inviting him. He says \"Tell your Mom I said hi.\"\"\n\nKelsey smiled coyly. Bobby did too.\n\n\"Shall I have a talk with the boy?\" he said.\n\nIt was Kay's turn to blush. She was remembering how she'd ended the night, with Austin's huge young cock way up in her ass, tickling the whole inside of her. It had triggered an explosive orgasm that quite a few of the guests had witnessed.\n\n\"Kelsey, why don't you scoop up that boy?\" Kay said, avoiding Bobby's question. \"He's a special one.\"\n\n\"I know,\" Kelsey said. She'd been thinking the same thing lately.\n\nIt was a lovely breezy day for house cleaning. The washing machine handled load after load of bed sheets and towels. Kelsey and Sharron hung them out on the clothesline where they fluttered and snapped in the breeze. The girls put the kitchen back in order while Bobby put away the liquor bottles and picked up the patio.\n\n\"I caught some fish,\" he yelled, smiling as he held up Jessica's dripping dress and lingerie, retrieved from the bottom of the pool.\n\n\"What did she wear home?\" Sharron asked.\n\n\"Nothing,\" Kay smiled.\n\nKelsey left when the clean-up was done, to go see Raymond. He was leaving for Brooklyn the next day. Bobby splashed into the pool. It felt cool and delicious after the short night of sleep and the morning's housework. Sharron and Kay joined him. Sharron got things started, sucking his hard cock into her mouth as he sat on the pool's edge. Kay took over, and then Bobby slipped back into the water to fuck her, nice and slow.\n\n\"I love you, Honey,\" Kay sighed, as he filled her with hard slippery wetness, over and over.\n\nBobby smiled. \"I love you too.\""
    ],
    "authorname": "riverboy",
    "tags": [
        "orgy",
        "older man",
        "older woman",
        "younger man",
        "younger woman",
        "exhibitionist",
        "voyeur",
        "anal",
        "love",
        "swingers"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/kelseys-world-ch-07"
}