{
    "title": "The Club",
    "pages": [
        "Luka pushed open the doors of the bar and smiled at the man behind the bar as his boys followed behind him. The bartender and owner, Alonso, paled visibly as they piled in.\n\n\"Luka! I told you I will have it by the weekend!\"\n\n\"I am aware, Alonso. How many weeks have you been saying that? What is it, Stavo? Four? Five?\"\n\n\"Six now, Luka,\" Stavo smirked, leaning over the bar and twirling one of his ever present hand knives. \n\n\"Six! Six weeks you have been promising what you owe. Putting me off. It is well known I am not a man to be kept waiting, Alonso,\" Luka taunted, stopping to look at an obviously photoshopped picture of Alonso and Obama shaking hands. \"When you borrowed all of that money, I lent it in good faith! You swore on your mothers life you would pay it back in two weeks, it was a sure thing. And yet here we are. Come to find out your mother is ten years in the grave. What am I to make of that, Alonso?\"\n\n\"Luka, I promise you, I...\"\n\n\"I make several things of it. First, you are not very smart. Second, you never intended to pay me back. Third, you think I am a fool.\"\n\n\"No! Luka, I swear, it was a sure thing, it was!\"\n\n\"And yet here we are.\"\n\n\"Luka?\" Amelia called, coming out of the stock room. \"We are off four whole cases of vodka, two of the...\"\n\n\"Amelia! Not now, go back and finish inventory!\" Alonso yelled quickly, making her look up from her clipboard.\n\nShe looked at the dozen men in biker vests, all looking at her. One was tall and slender and he stood out ridiculously from the rest of them. For one, he was younger than most of them, for another, he was stunningly beautiful in a way that would make most girls trip over themselves just to get him to look their way. He was also the most pure native american she had ever seen. His long black hair flowing down his back like a silken waterfall, his dark eyes large and intense. Under his vest, he wore a native american chest piece made of bone. It didn't look odd on him at all, even with his jeans and cowboy boots.\n\n\"What is this then, Alonso?\" the tall man asked, cocking his head and stepping closer to her.\n\n\"No one! She is new, she knows nothing and she isn't one of my normal girls! She isn't a waitress or a Lay.\"\"\n\n\"No? She looks like a bit of sweet meat to me, Alonso,\" he smirked, backing her to the wall and leaning over her as he put a hand on the wall next to her head.\n\nShe stared up at him fearfully. He may be stunning, but he was a predator and he terrified her.\n\n\"She isn't! She isn't part of this! She is deaf! I will have your money with interest this weekend!\"\n\n\"She seems important to you, Alonso. Why do you care so much? What does she mean to you?\"\n\n\"Nothing! Nothing, she is just a girl who asked for a job, but she isn't like the others. She wants a real job.\"\n\n\"Maybe I need a little collateral. I think I will hold on to this little piece of ass for a few days. What do you think, boys? We came for a few fingers, but I will take this little... bookworm instead. Am I right, little Cherry? You a little number crunching bookworm? You have a name?\" he asked as he tilted her head side to side to look at her hearing aids.\n\n\"Amelia,\" she whispered, trembling. \"I... just want to go home. Today is my first day, I am just here to work and I...\"\n\n\"Hush now, little Cherry,\" he whispered, smirking.\n\n\"She doesn't know what that means! She isn't from around here!\" Alonso said quickly. \"Look, take what's in my register! Take what you want from the stockroom!\"\n\n\"Oh, we will,\" Stavo laughed, motioning to a few of the boys who took off to the back room. \n\n\"You have until Saturday, Alonso,\" Luka smiled, taking her arm and pulling her across the room. \"After that, I get to keep this little Cherry and two of your fingers. Stavo,\" he nodded, pulling the girl outside with him as three of his boys followed. He turned, looking down at her. \"You give me trouble, little Cherry, and I give you trouble, you understand?\"\n\nShe nodded, trembling. There were unshed tears in her huge doe eyes.\n\n\"You will ride with me, hold on, and don't move around, you understand?\"\n\nShe nodded again, looking at the bikes wide eyed. \"Please,\" she whispered. \"I'm afraid.\"\n\n\"I can see that,\" he grinned. \"It's fucking thrilling,\" he laughed. He got on his bike, then grabbed her arm and pulled her up and on behind him. \"Hold on!\" he yelled as he started it.\n\nShe squealed and gripped him, hiding her face in his back. \n\nHe laughed again as he took off, his boys behind him.\n\nShe clung to him and didn't move a muscle until he was pulling into the clubhouse. She finally moved her face from his back when he killed the engine. \n\nHe pulled her inside behind him and as he and the others walked in, several girls hurried to greet them, kissing and smiling and rubbing on all of them but the tall one.\n\n\"Luka!\" one of the girls smiled. \"You brought us a new friend?\"\n\n\"No, Val, not this one. Girl. See that blue chair there by that door? Go sit in it and don't get up, you hear me?\"\n\nShe nodded and he let her go.\n\n\"She's a fresh baby,\" Val smirked, watching her.\n\n\"She ain't here for that.\"\n\n\"She wouldn't make it a day. Look at her. She looks like a kindergarten teacher or something.\"\n\nLuka laughed and watched Amelia curl up in the blue chair and look around fearfully. \"Just make sure the other girls leave her alone!\"\n\nHe glanced at her again, hugging her knees and hiding her face. She was such a frightened little mouse.\n\nHe went to the bar as the more of his boys piled in with more alcohol and quickly forgot about the girl until late in the evening when more of the crew came in. Those who had day jobs outside of the club. \n\nHe sat at the end of the bar with Jay, one of the new patches, to give him a rundown on who he would be collecting from that night.\n\nAmelia watched Luka sit down not ten feet from her at the end of the bar and turned in the seat to watch him warily as he talked to the young man. A giant walked in the front doors, a huge man. As tall as Luka easily and twice as wide. He was much older and had long white hair with a ruddy complexion under his black bandana he wore like a skull cap. There were shouts and greetings and more than one of the girls who seemed to live in this place hurried to him as he laughed loudly and shouted hello's. He was the sort of man who commanded the attention of the whole room. He had her attention.\n\nHe started to the back and his eyes fell on her. He looked her over with an amused sort of smirk. \"Well, what have we here?\" he asked, leaning over her, a hand on each side of the chair.\n\nShe leaned away hard and turned away from him.\n\n\"Don't be shy now, little Cherry, let's have a look at the goods!\" he laughed, then ripped her v-neck sweater wide open down the front. She grasped at it, trying to shut it, but his hands were huge and strong as he pushed them aside and shoved her bra down to pull her breast out. She let out a whimper and tried to wriggle down to the floor, but he held her, chuckling as he pulled her other breast out. \"Very nice,\" he purred, massaging the one he had just pulled out. \n\n\"Please stop!\" she wailed.\n\nLuke spun to her, then jumped up, jerking Lee back. \"Lee! What the hell? Do you see where she is sitting?!?\"\n\n\"Course I see where she is sitting! What fucker here outranks me enough to care if I have a look and sample the goods?\"\n\n\"This fucker,\" Luka snarled.\n\nLee stook up straight, looking Luke in the eye. He stepped back, both his hands up. \"My bad, boss. Never occured to me a little Cherry like that might be yours. You've never...\"\n\n\"I don't care what I have never done before! You know that seat means she is reserved and that means hands off for ANYONE but the man who put her there! I don't care if it is Jay who put her there. That chair means hands off. This shouldn't be something I have to repeat to anyone, let alone you!\"\n\n\"Easy, Luka, the girl is fine. I didn't know and I didn't think anyone would mind if I had a look. This gonna be an issue?\"\n\n\"Only if you make it one, Lee. That Cherry is mine.\"\n\n\"Understood. What's on the fucking agenda tonight?\" he asked, his face red with fury he couldn't unleash. He would change the subject instead.\n\n\"Nothing. Jay is about to go on collections along with Apex and Juda. That's it tonight. No sit down till Friday.\"\n\n\"Then I'll be back tomorrow,\" Lee growled. \n\nHe turned and left and Luka looked Amelia over. She was huddled into the chair, facing the wall and hugging herself. \"Val!\" Luke yelled across the room. \n\n\"Yeah boss?\" she asked happily, coming over to him quickly.\n\n\"Take her back to my room. Find her a t-shirt or something. Girl. Go with Val. Stay in my room and don't touch my shit. Understood?\"\n\nShe nodded, shaking from head to toe as Val helped her up and led her to the back.\n\nLuka sat back down, his mood soured now. \"Go on, Jay. Go find Juda,\" he said, downing the rest of his beer. \n\n\"Were you serious, Luka? About me havin' an old lady I could bring in and no one could touch her?\"\n\n\"We ain't cave men, Jay. We have rules. You have a sweetie?\"\n\n\"I just wanted to know,\" he blushed, standing up. \"Thanks boss,\" he said genuinely, then hurried away.\n\nLuka considered getting one of the girls to come suck his cock before he went to bed, then decided against it. It would probably send that little Cherry into fits.\n\nHe said goodnight to a few of the boys, had another beer, then went back. The girl was curled up in an old chair in the corner that was only ever used to pile clean laundry on. The laundry was folded and sitting in a neat stack on his dresser. She was completely enveloped in his t-shirt, her knees tucked in, her arms pulled in. Her red curls had escaped the bun she'd had them trapped in and her face was hidden behind her hair.\n\n\"He hurt you?\" he asked her, pulling off his chest piece off and hanging it on a rack.\n\n\"Just scared me,\" she barely whispered.\n\nHe went to the window unit and cranked it all the way up, then kicked his boots off. \n\n\"I'm bout to go to bed. You are going to lay down and be still and be quiet. Sleep. Do NOT fucking wake me up, you understand?\"\n\n\"Yes,\" she whispered.\n\n\"Get in bed.\"\n\n\"I will sleep here...\"\n\n\"I told you to do something, you better god damn move!\"\n\nShe jumped up and scrambled up onto the bed as he shucked his pants. Her eyes widened in fear as he came to the bed with no clothes on. When he paused to smirk at her, she turned away quickly, her cheeks going red with shame.\n\nHe got into bed and she let out a terrified whine. \"Please don't!\"\n\n\"Don't what?\" he demanded, leaning on an elbow to face her, still amused.\n\n\"Don't... do anything.\"\n\n\"You assume I want to fuck you? I sleep like this every night. Take them pants off, you don't sleep in pants.\"\n\n\"I'm cold and...\"\n\n\"What did I just fucking tell you?\" he demanded.\n\nShe wriggled her pants off and dropped them over the edge of the bed, hiding herself under the t-shirt. \n\n\"Where you from, little Cherry?\"\n\n\"Here. Sort of.\"\n\n\"Sort of?\"\n\n\"I was born here, lived with my GiGi until I was about 12, then I went to live with my Aunt Ella up in Jasper. Just moved back here.\"\n\n\"How old are you?\"\n\n\"Eighteen?\"\n\n\"Tiny little thing. Why'd you come back to this shithole?\"\n\n\"It isn't! I... I loved growing up here. GiGi died when I was 16. She left me her little trailer. I came back as soon as I could after I graduated. As soon as I turned 18.\"\n\n\"Those hearing aids. You all the way deaf or mostly?\"\n\n\"Mostly.\"\n\n\"All your life, or...?\"\n\n\"Since I was three. I... had an ear infection. My dad was high and I wouldn't quit crying, had a high fever. He reasoned that boiling water would cure an ear infection.\"\n\n\"Jesus fuck,\" he breathed.\n\n\"Neighbor finally called the police when I wouldn't quit screaming. They found him passed out and me with my ears all burned. They called GiGi and I never saw him again.\"\n\n\"Your ma?\"\n\nShe shrugged and looked away, her face red.\n\n\"So you've been deaf since then?\"\n\n\"Not right away, I had about a 30% loss, then gradually it got worse and worse and worse. Now I am at about 90/75, favoring my right ear.\"\n\nHe reached over and turned her face slightly, then traced a finger over the edge of her ear softly and down to her jaw before turning her back to him. \"Why don't you come over here,\" he asked, patting the bed right next to him.\n\nShe shook her head. \"N-no thanks.\"\n\n\"I'll keep you warm. Show you why girls always want to come back to my bed.\"\n\n\"No! No thank you... please, I just want to go home!\"\n\n\"Easy, little Cherry. Calm down. Come over here a little closer,\" he whispered, pulling her against him. \"Better, yeah? You don't want to fuck, how about you suck my cock?\"\n\n\"No!\"\n\n\"No?\" he asked, leaning close and sliding a hand into her curls. \"What, you don't think I'm hot enough?\"\n\n\"It's nothing like that! I don't want to! I don't even know you and...\"\n\n\"And?\"\n\n\"I've never been with a man.\"\n\nHe laughed, biting her jaw gently. \"Sure you haven't, Cherry. All the chicks who come on here claim that. Some claim it the second and third times they come in.\"\n\n\"I'm not lying!\"\n\n\"Right. Come suck my cock, Cherry,\" he purred, his lips against her earlobe.\n\n\"No! I... I've never done that either.\"\n\n\"I'll teach you, come on.\"\n\n\"No!\"\n\n\"I don't like no, Cherry. Come on, I need a good fuck,\" he groaned, moving over her and shoving his knee between her legs to part them. \n\nShe cried out and broke down in tears. \"Please! Please don't! I'm saving myself!\"\n\n\"Right baby. Enough with that shit, I fucking hate liars.\"\n\n\"I'm not lying!\"\n\nHe moved back, anger dancing in his eyes as the hand in her hair made a fist. \"Then how about this, Cherry,\" he said angrily. \"I will fucking check. If you're not lying, I will turn over and leave you alone the rest of the night. If you ARE lying, you will lick my cock clean after I am done fucking you in the ass,\" he snarled, his hand moving down to jerk his shirt up out of the way.\n\nHe shoved her legs wider with his knee as he slid his fingers into her panties and pressed his head to hers as he watched her angrily, working his finger down and in as she trembled and cried.\n\nHe went still, then laughed low in his throat as he pulled his hand away. He moved back, still looking down at her, his eyes hooded. He slid his finger into his mouth and sucked on it, staring her in the eye as he did. After, he leaned down and kissed her on the lips.\n\nHe turned over with another chuckle and turned off the lamp, then moved his pillow to go to sleep.\n\nShe slipped her hearing aids off and set them on the shelf before curling up on the other side of the bed to sleep.\n\nHe woke her up in the morning, rolling her to face him as he smirked down at her. He grabbed her face and kissed her and she pulled back. He laughed and took hold of her hair, holding her in place as he kissed her again, forcing her mouth open as he moved closer and ground his hard cock into her leg.\n\nShe cried out and shook her head. \"Please! You promised!\" she wailed, struggling feebly away from him.\n\nHe bit her earlobe gently. \"That was yesterday. I said I would leave you alone and not fuck you last night. I made no promises about today,\" he laughed, then let her go as she struggled to reach her hearing aids.\n\nShe put them in hurriedly, tears in her eyes as he leaned on an elbow and held on to her thigh to keep her from getting up.\n\n\"I said that was only last night, little Cherry,\" he repeated. \"Today is a new day and a new deal. Get up. I have plans.\"\n\nShe sat up and looked him over fearfully. \"Why are you so horrible and mean? Why do you all do what you do? Doesn't it bother you that you are hurting people and stealing from them?\"\n\n\"Stealing?\" he laughed. \"Nah, Cherry, you have it wrong. We offer protection to businesses. We don't shake down, they come to us. We do favors for people, once again, they come to us. We offer loans and they come to us. They know what they are getting into when they sign the dotted line.\"\n\n\"But you hurt people! You kidnapped me!\"\n\n\"Eh, there you might actually have me. Never once have I ever run into someone who was truly an innocent, not like you. Always there was something. I never brought an innocent bystander in before. But look at you, Cherry, how could I resist? And the way Alonso was so protective of you. Didn't know he had that in him, he usually doesn't give a fuck about his girls.\"\n\n\"He told me his first daughter was born deaf before she died of leukemia,\" she answered softly.\n\n\"For what it's worth,\" he grinned. \"I don't plan on hurting you.\"\n\nHe pulled her down to the restroom, then told Gail, one of the live-ins to find her some clean clothes for after her shower. \n\nShe was returned to him, red faced, with a little sundress that had been pinned at the straps so it wouldn't hang on her so badly. It was still too big. \n\n\"Val!\" he yelled, bangin on her door. \n\n\"Yeah?\"\n\n\"Find my Cherry some clothes today! Make sure they fit her!\"\n\n\"On it!\" she yelled back.\n\nHe pulled her out to the clubhouse and stopped at the bar where one of the other girls was serving out breakfast. \n\n\"Hey boss!\" she said quickly, her eyes bright and dreamy as she looked up at him.\n\n\"Hey Molly, you are looking exceptionally cute this morning.\"\n\n\"Thank you!\" she breathed, leaning across the bar so he could see down her shirt. \n\nNot that there was anything at all left to the imagination, Amelia thought.\n\n\"Got your eye on one of my boys?\"\n\n\"Maybe!\" she blushed with a coy smile.\n\n\"He's a lucky bastard. Thanks for the eggs, babe. See you later. C'mon, Cherry.\"\n\nAs soon as he had her outside, she looked up at him. \"What's a Cherry?\"\n\nHe smirked. \"A girl who wasn't born into this, who doesn't know anything about us that we plan on busting wide open. Make her one of us or make her run.\"\n\n\"I thought I was a hostage,\" she said as he mounted his bike and pulled her on behind him. \n\n\"Yeah. Doesn't mean I'm not gonna bust your cherry,\" he laughed as he made the double entendre and started his bike. \n\nShe grabbed him tight and hid her face again and he grinned as he pulled away. \n\nFinally, about twenty minutes into the ride on the smooth highway, she moved enough to peek out. He reached his free hand back and put it on her bare thigh. He took her up on an old trail, all the way up to a high overlook, then parked his bike and killed it.\n\n\"Where are we?\" she asked.\n\n\"Wanted to show you something,\" he told her, grabbing her hand and pulling her out to the edge of the huge cliff.\n\nShe pulled back, afraid of letting him pull her closer.\n\n\"Come on,\" he coaxed, tugging.\n\n\"I will, let me go.\"\n\nHe laughed and let her hand go, going to the edge to look down.\n\nShe stood a moment, watching him and appreciating the view as the wind caught his hair and whipped it around him. He looked like something out of a music video, or a poster girls put on their walls. He was beautiful. \n\nShe moved closer and looked down into the canyon.\n\nHe sat down and patted the ground next to him. \"See all those old burned out trailers?\"\n\n\"Yeah?\"\n\n\"Decade ago they weren't all burnt out and meth labs like they are now. I lived down there. They were still shitty, broke down places, but me, my family, a group of us, we all lived down there. I hated it. We were piss poor, I had nothing at all. No toys, no school, no books, no TV, no nothing. Just an old man who was always drunk and a mom who was never home. Worked two jobs and still hardly brought home enough food to keep all of us from starving. All I had to do all day was run and climb. So I climbed. I climbed more and more every day until every day I would be sitting right here in this spot, looking down. I vowed at 13 that I would never stop climbing, I would climb my way out of that hellhole and never look back and I would climb until I was on top. I took off. Started running for the club. Errands, little things. Learned to fix bikes, learned everything. Per took me in like a son. Taught me everything. By fifteen, I was patched even though I couldn't ride legal. I kept climbing. I made council by 18. I kept climbing. VP by 22 and when Per had to stop riding, I took over. Youngest to ever lead a club at 24. Now we're sitting on more income than we've ever had before and I am still not done climbing.\"",
        "\"When is it enough?\"\n\n\"Enough?\" he laughed. \"It's never enough. I will never stop climbing.\"\n\n\"What's the point? When do you live? At some point you have to stop climbing and start building around you. You can never be happy until you learn to appreciate what you have already.\"\n\n\"Everyone out there is climbing, Cherry, everyone.\"\n\n\"Not everyone,\" she shrugged.\n\n\"Right,\" he laughed. \"You aren't?\"\n\n\"No. I was happy to just come back here and stay in GiGi's old trailer. Get a simple, easy part time job that paid the bills. I had everything I needed and I was happy until you walked in the door.\"\n\n\"Right,\" he snorted. \"Of course you were. Why wouldn't you be? Easy part time job, huh? Keeping Alonso's books?\"\n\n\"Yeah.\"\n\n\"Numbers and shit, that all comes easy to you?\"\n\n\"Yeah.\" \n\nHe nodded and looked out at the skyline.\n\n\"If you stop climbing,\" she said softly, \"you can start nurturing what you have. Build around you, build your life. At some point you will look back and realize you never lived. All you did was keep climbing. To what end?\"\n\nHe said nothing, just stared out at the horizon, considering.\n\nAfter several more minutes, he stood up and helped her up and rode her back to the clubhouse. \"Go in. Head back to my room till Val gets back. Stavo is inside, he'll make sure no one messes with you. Go.\"\n\nShe went in, looking back at him worriedly as she slipped in the door.\n\nHe took off as soon as she was inside. \n\nHe drove all the way back to Alonso's and went in, alone.\n\n\"I have till tomorrow!\" Alonso said quickly. \"I'm getting it!\"\n\n\"Shut up. The girl, the Cherry.\"\n\n\"Amelia?\"\n\n\"Where's her place?\"\n\n\"I... uhh... it's down in the Green Lanes trailer park, hold on. I will get the address,\" he said warily, going back to the office. He brought out her application. \"Number 3393.\"\n\nLuka nodded and looked Alonso over. \"What is she to you?\"\n\n\"No one, really, I knew her grandmother. I knew she had a shit time coming up. That's it. Is... is she ok?\"\n\n\"Not your concern until you pay me back. You have less than 24 hours, I'd be getting on that shit if I were you.\"\n\nLuka left and rode down to the trailer park and stopped outside of 3393. It was old and run down, but the outside was clean and there were plants in the homemade railing boxes on the porch. There was a welcome mat and he lifted it, looking for a key. There wasn't one. He tried the door and it opened, to his surprise. He ducked in and turned on the light, then looked around. It was a clean little place. There were more plants inside. The furniture looked antique, but in good shape. The books on the shelves looked well read and loved. Something she had read a dozen times each. There were pictures of family, pictures of her. There were other things that made him feel a little pang of guilt. An obviously hand made quilt on her bed, well preserved and taken care of. A homemade doll on a shelf, one of those teddy bears made from an old man's shirt. Memories in the form of simple souvenirs and nicknacks. A row of seashells on the windowsill. A few old toys on a bookshelf. Pretty and unusual rocks. Nothing big or fancy, just some little snippet that would evoke a good memory. \n\nHe turned another circle and felt another pang of sadness and guilt. She hadn't been lying about this either. She was happy. Her simple little life with her tiny little memories all held together by the home she had loved best. She was content with it and he could even feel that in the home. It was a place of quiet happiness. So simple and unassuming. That was all she needed.\n\nHe started to leave, then paused. He opened her closet and found a bag, then packed her a couple changes of clothes before heading back to the club. \n\nShe wasn't in his room when he got there, but Val immediately pointed down the hall. He found her in the laundry room, putting his clothes in the dryer. \n\n\"I told you to wait in my room.\"\n\nShe spun to him, alarmed. \"I... thought you would be gone longer. Your clothes... they needed washed and I wasn't busy.\"\n\n\"Come on,\" he said, jerking his head back down the hall. \n\nShe followed him to his room and looked up at him fearfully as he shut the door. He tossed the bag at her feet.\n\n\"You... went to my home?\" she asked, confused, as she picked up the bag and opened it.\n\n\"I knew you wouldn't like what Val picked for you,\" he shrugged. \"Have a seat, Cherry,\" he told her, motioning to the bed as he pulled off his vest and chest piece. \n\n\"Umm, thanks?\" she mumbled, still confused as she sat on the bed. \n\nHe moved over to her and threw himself on the bed, leaning on his elbow as he pulled her to lay down next to him. \"What would you think about keeping the books here?\" he asked her, sliding a curl off of her face.\n\n\"I thought I was going to get to go home tomorrow?!?\"\n\n\"We both know he won't have the money.\"\n\n\"But that's not my fault! You can't just...\"\n\n\"Hush. Table that for now. Answer me. What would you think of doing the books here?\"\n\n\"Like... as a job? You would pay me to come and...\"\n\n\"No, Cherry. No. Like, you'd be my old lady and work for the club.\"\n\n\"I don't understand? I... if you need me to look at your books, I will. I will do whatever you need.\"\n\n\"No big,\" he shrugged, \"not urgent, but it would free up Alan to do other shit. He was never really supposed to keep doing it, but no one ever stepped up. He's doing ok, but I would rather someone with a better head for numbers was doing it.\"\n\n\"Does this mean you are never letting me go?\" she asked, her eyes filling with tears.\n\nHe looked away irritably. \"Like I said. You'd be my old lady for all intents and purposes.\"\n\n\"What does that mean?\"\n\n\"Wife. Old lady. Whatever.\"\n\n\"Wife? To you? You can't just make me be a wife!\"\n\n\"Hush. Table that shit for later. Look at me. Keep your mouth shut, you hear me? Anyone asks, you don't know shit. You got it?\"\n\nShe nodded, trying to wipe away horrified tears.\n\n\"Change your clothes, that dress looks ridiculous.\"\n\nShe pulled clothes out of her bag. Old jeans and a faded old t-shirt or a faded old tank top. \"Did... you get these out of the dresser?\" she asked, confused.\n\n\"Yeah?\"\n\n\"Oh.\"\n\n\"That an issue?\"\n\n\"No, they probably still fit. All of my clothes are in the closet. These are from before I moved. GiGi kept a drawer with all of my old clothes.\"\n\nShe pulled on the old t-shirt and it was tight, so threadbare it was see through in some places. The jeans were snug, but not too tight to wear.\n\n\"You really haven't grown since you were 13?\" he asked, amused.\n\n\"Well... I wore my jeans loose back then, and... I have obviously grown since I wore this shirt last. Could... I wear one of yours again?\"\n\nHe laughed. \"No, no way. The Powerpuff girls are exactly where they need to be,\" he teased, his eyes shining as he looked at the distorted image of the old cartoon, bulging around her breasts. \"Those real?\" he asked, cupping her breast in his hand.\n\nShe jerked back. \"Yes! Don't do that!\"\n\n\"I'll do as I please,\" he grinned, moving closer and backing her to the bed. \"They just don't really... fit the rest of you. Such a tiny little thing and then... those.\"\n\n\"They're a small D, not something ridiculous.\"\n\n\"Mmm, maybe. Maybe it's just because of how small you are, it makes them seem bigger. Take off your top and your bra, show me.\"\n\n\"No!\"\n\nHe grinned and moved closer, bending and grabbing the hem of the shirt. \"Let it go,\" he warned as she hugged herself to keep it in place. \"This thing will shred easily and then you won't have a shirt to wear out front here in a while. Let it go, now.\"\n\nShe relaxed her arms, but was still tense as he pulled it off of her. He reached behind her and undid her bra, but she held that on too. \n\n\"Cherry, do you really want to piss me off? I think you might have an inkling as to why no one ever pisses me off. You want to see if you are the exception? Keep fucking trying me.\"\n\nShe let go and he pulled it off of her, then eased her down to lay on the bed as he closed the distance and put his mouth around her breast with an appreciative moan. She whimpered, then gasped, her back arching in shock.\n\n\"Mmmmm,\" he growled, drawing his teeth over her skin to close gently on her nipple. He moved to the other and she writhed under him, her hands on his shoulders as if to push him away.\n\nHis hand slid down to her jeans and undid them.\n\n\"No!\" she pleaded in a whisper.\n\nHe ignored her and stood, pulling her pants off in a fluid motion as he looked down at her. She scooted back on the bed and he caught her ankle quickly.\n\n\"Take them off,\" he commanded, pointing his chin at her underwear.\n\nShe shook her head, tears flowing freely now.\n\n\"Take them off, Cherry. I do it and I parade you out there in your skin for everyone to look at.\"\n\nShe broke down crying as he stepped back to watch. Her hands went to her panties as she hid her face, but she hesitated. \"Why are you doing this? You said you weren't a bad person, you didn't do bad things! This is wrong! It's illegal!\"\n\n\"Calm down, Cherry. Take'm off. I'm just lookin'.\"\n\nShe let out another sob as she slid them off, curling up to hide herself as she did.\n\n\"Nah, girl, none of that. I want to see all of you,\" he purred, pulling her legs apart as she tried to twist away. \"Mmm. Natural redhead, though I knew that. The landing strip is cute. That pussy is perfect, baby. Why don't you reach down there and touch yourself for me? Show me how you get off.\"\n\nShe shook her head emphatically and he chuckled. \n\n\"Come around here and I will teach you to suck my cock.\"\n\nShe shook her head again, still trying to twist away as he looked down at her, exposed and vulnerable.\n\n\"How about I just eat that pretty little pussy until you are begging me to fuck you?\" he asked lightly, sliding his hand down her leg to her inner thigh.\n\nShe shook her head again, breaking down into more sobs. \n\n\"Mmm, Cherry, you say no, but look at that little pussy. I can see you getting wet for me, you like me looking at you. You want me to fuck you?\"\n\n\"No!\"\n\n\"I'm going to let your legs go, but you will not move them, you understand? You will keep them right here, nice and wide for me. You close them, I will spank that little pussy until you are dripping for me.\"\n\nShe shook, but didn't move when he let her go. \n\nHe unbuttoned his jeans and slid them off, his hard cock springing free immediately.\n\nShe let out a terrified squeal as he stood, the monstrous thing jutting out at her. It was long and thick, uncircumcised and dark. He was smirking again as he watched her looking at it in horror. \"You imagining how that's going to feel the first time I split that little cunt open?\" he asked, climbing onto the bed over her.\n\n\"Please! Don't!\"\n\n\"Shhhh, Cherry. Hush. Be nice and still for me, no struggling, nothing is happening. Yet,\" he murmured, kissing her jaw gently. He kissed her neck and shoulder, then moved up and held her face as he kissed her lips. \"I want to taste you, Cherry. Say yes.\"\n\nShe shook her head, her eyes wild with fear.\n\n\"Let me lick you until you are screaming my name,\" he groaned, then traced his tongue along her jaw to her lips. He felt her shiver involuntarily and he saw goosebumps go up all over her skin. He kissed her again, then again and again until she was less stiff. He lingered, kissing her more thoroughly, more passionately, until she was squirming beneath him again, her hands gripping instead of pushing. He pulled his hand from her face and slid it down to her hip, gripping as he moaned into her mouth. She didn't struggle or tense, she was lost to him.\n\nHe moved his hand in, his fingers on her belly, but his thumb lower, finding it's mark quickly as she jerked and sucked in a breath. He gave her no time to object, following her to kiss her again as his thumb began working her, making her body contort as she let out a mewling noise into his mouth. When her hands clenched and her body jerked, he pulled back to look down at her, watch her face. \n\nHer eyes were shut and her lips parted slightly now that he wasn't kissing her. Her eyebrows worked, knitting and raising as she panted and squirmed and he thrilled in watching the battle on her face. \n\nHis lip curled as he eased down, moving lower and planting soft kisses along the way. When his mouth took over for his thumb, she let out a yelping hitch, but relaxed seconds later as she moaned and gripped the sheets in both hands. He grabbed her hips and pulled her up closer to his mouth, burying his face and sucking her clit up hard as he rubbed it with his tongue.\n\nHer scream was ecstasy and his cock throbbed hearing it. She was trembling, grasping and releasing the sheets frenetically and he knew she was close. He pulled his head back, sucking her clit, then releasing it and watching her tight little pussy snap back into place. \n\n\"Nnn.. no!\" she panted. \"I'm... I need... please!\"\n\n\"You want me to fuck you, Cherry?\" he asked, his voice low. \"Fill your aching cunt up? Make you scream for me? Come for me?\"\n\n\"I... please... I just...\" she stuttered half delirious. \n\nHe moved up over her, kissing her lips. \"Say yes, baby,\" he whispered.\n\n\"Yes?\"\n\n\"Mmmmm,\" he chuckled and grabbed her thigh and arm, swinging her around on the bed. He was on her in seconds, yanking her legs apart and pressing his cock to her slit before she had a moment to gather her thoughts. \"Scream for me,\" he whispered, lining himself up, then grabbing her thigh and thrusting in as hard as he could.\n\nShe screamed.\n\nHer frantic scream was full of shock and pain and fear as he held her down and watched her face. Her hands batted and swatted feebly as she struggled under him. He rammed in again and again, listening to her cries of confusion. \n\n\"Shhhh, baby,\" he coaxed. \"Calm down. Go back to how good it felt. How badly you needed this tight cunt filled. Focus on that feeling. The pain is fleeting, gone in moments. You want this cock, you want it filling you nice and full. You want me to come in you, don't you Cherry?\" he asked as she whimpered and pounded her tiny fist on his arm. \"Fill you so full of my cum that you'll be covered in it when I pull out. Say it baby. Beg me to fill you full.\"\n\nShe shook her head a single time, but her face was beginning to go back to it's battle. \n\n\"That's right, Cherry. Feels amazing, doesn't it? You love this fat cock. Beg me to cum in you baby.\"\n\nAmelia hardly heard his words as he filled her over and over again. It felt good despite the pain, just like he had said. She hated that he was right. She hated that she didn't want him to stop and she hadn't fought harder. That spot... she needed to move, to lift her hips just... there!\n\nShe moaned and heard him chuckle softly. \n\n\"Mmmm, my little Cherry,\" he whispered. \"Say it. Beg me to come in you.\"\n\n\"Please,\" she whispered. \"Please! I want to come! I want to feel you come! I... oh god! Please! Yes, there, don't stop! Faster! AaaaaaAAAAHHHH!\"\n\nHe growled as her cunt closed around his cock, his grin a grimace as he watched her face. Her body trembled, jerking and shaking as she came, screaming as her back arched.\n\nHe'd had no intention of coming yet, but he couldn't stop it as he final jerk tipped him over the edge and he filled her.\n\nAmelia gasped, her eyes going wide as his cock throbbed and then exploded, shooting hot cum deep inside of her. Her head dropped back as she exulted in the feeling of all of that hot fluid filling her, squirting, hitting her wall and spreading.\n\nLuka growled a victorious laugh as he pushed up and looked down at her with an almost vicious smirk. \"Mmm, my Little Cherry, that was perfect. You did beautifully. I can't wait to make you come again when we go to bed tonight.\"\n\nAmelia said nothing, just stared up at him wide eyed while she tried to catch her breath.\n\nHe let out another laugh as he pulled out and got up, entirely too energetic now in her mind. All she wanted was a long nap now. And a shower now that she could feel all of that cum sliding out of her. \n\nHe stepped back and looked down at her, his eyes shining. \"Spread for me Cherry, let me see that beautiful cream pie shot,\" he tried to persuade her. \"Don't be shy now, I fucking love watching,\" he begged, moving closer and easing her legs apart so he could watch. \"Mmm, that is fucking hot. The blood just makes it sexier. You are fucking mine, Cherry,\" he told her, his eyes half wild with the joy of that statement. \"All of you. I am going to fucking LOVE making you scream for me like that every fucking night. Come on babe,\" he smiled, holding her legs apart as she tried to close them. \"Let me enjoy this. That surrender was beautiful. You will never say no to me again,\" he told her as his lip curled again. \n\nHe wasn't rubbing it in or trying to scare her, he was on top of the world, she realized. Over the moon even. He was ecstatic that she was his and sure that this meant she would deny him nothing now. \n\nHe moved close to her again, bending over her and kissing her, still overjoyed. \"Tomorrow, Cherry, tomorrow I teach you to ride. Next week I get you a bike.\"\n\n\"Can't I just ride with you?\" she asked fearfully, not realizing until too late that it sounded like she was agreeing to be more to him than a hostage until morning.\n\n\"Oh, you will. Always, but you need to learn to ride and my bike is way too big for you. Mmmm, fuck!\" he yelled, still exuberant. \"It's past time for me to be out there, but I fucking want to stay right here and sit with your legs wrapped around me for the rest of the night!\"\n\nShe half laughed at how extra he was being. \n\nHe finally backed off with another growl and went to the sink. He tossed her a hand towel as he washed himself in the sink. When he turned, he grinned at her again. \"Fucking virgin,\" he teased, rolling his eyes ostentateously. He picked up the towel, waving it in her face. \"This is to wipe yourself off with, like this,\" he whispered, sliding it down between her legs to clean her off.\n\n\"Oh! That... hurts.\"\n\n\"Mmm, you're sensitive, sore. It'll pass. First time is a bitch, but from now on it'll just be good. Promise. You loved that though, I could tell. All that cum, letting me watch. Your face said it all, you loved watching me enjoy looking at it. It excited you. Admit it.\"\n\n\"I... there is so much I am feeling, I don't even know. I know I didn't really want to do that.\"\n\n\"You begged me, Cherry,\" he laughed, getting up and tossing the towel at the sink.\n\nShe blushed.\n\n\"Get up and get dressed,\" he grinned, turning his pants right side out. \"Remember what I said about playing dumb.\"\n\n\"Yeah,\" she answered softly, pulling her clothes on.\n\nHe pulled her out front and she tried to walk normally despite how sore she was. She started to sit in the blue chair, but he grinned at her and pulled her with him to the couches in the other corner where some men were already sitting.\n\nThe giant, Lee, saw them coming and stood up. \"Where've you been? Bout time you decide to grace us with your presence!\"\n\n\"I've been here, Lee. You needed something, all you had to do was send a honey back to get me. I'm a grown fucking man and I don't answer to anyone about my whereabouts, do I? How about you back yourself up and rethink how you just greeted me.\"\n\n\"I didn't mean anything by it, Luka, it was a figure of speech.\"\n\n\"Figure another way of speaking,\" Luka told him, sitting down and pulling Amelia up to sit in his lap.\n\nLee sat down, scowling. \"She suddenly an old lady now?\" he asked angrily.\n\n\"My love life your business now too?\"\n\n\"It's everyone's business. All our old lady's are everyone's business, you know that. How is that little Cherry going to benefit our club? She ain't. She's useless.\"\n\n\"First off, Lee, I don't have to ask fucking permission. It's not a god damn vote or an interview. I pick who I pick and that's the fucking end of it.\"",
        "\"She's a liability!\"\n\n\"Bullshit! And what does that matter to you anyway, part timer? When was the last time your old lady even showed up to Sunday dinner with the club?\"\n\n\"She has Lupus!\"\n\n\"So who is the fucking liability? Even before, twenty years ago, remind me what she did for the club? What? Nothing? Just because a lot of the old ladies now pitch in and do shit doesn't mean it's required.\"\n\n\"She aint cut out for this life is what I mean! She is a liability, look at her! Could she even hold a gun if it came to a firefight?\"\n\n\"Why would there be a firefight, Lee?\" Luka asked calmly. \"Unless someone went behind my back and is allowing trading in our borders again. Something I need to worry about, Lee? We gonna have fucking ATF coming around here again like they did when you had the bit in your teeth?\"\n\n\"You are weak, Luka, she proves it. She represents everything wrong with the club now! Letting soft Cherry's in, letting new patches bring in sweeties! No one should be allowed an old lady until they are 30, they way you all switch around so much!\"\n\n\"I think you need to stop talking,\" Luka said quietly. \"Let's get something straight. I do not answer to you, you answer to me. I have never claimed an old lady or even a sweetie in all the time you have known me. Ever. And I haven't said shit about this girl becoming my old lady. Have I boys? Have I even mentioned her name?\"\n\n\"No boss.\"\n\n\"Never saw her before last night.\"\n\n\"No Luka.\"\n\n\"There. Seems you are the only one who is under the impression that I am claiming an old lady. Why is that, Lee? Let's table that. As it happens, the Cherry isn't useless. There's a reason Alonso had her. She's good with books. She is going to take over our books, free up Alan for more important things.\"\n\n\"Alan is fine where he is!\" Lee raged.\n\n\"He didn't even want the job, you told him to do it until we found a replacement.\"\n\n\"And now he is taking care of it!\"\n\n\"All the same, she has a head for numbers. She will be taking over.\"\n\n\"No, that's a conflict of interest!\"\n\n\"And your son doing them isn't?\" Luka asked, leaning back and propping a foot up.\n\nAmelia could tell his calm and taunting manner was a slim facade. He was about to unleash.\n\n\"No, of course not! Alan is club first! Always was! This girl isn't club, she is you!\"\n\nLuka canted his head slightly, his eyes glittering with danger. \"We have a consensus here right now. All in favor of Alan stepping down from our books to attend to more important club business, say 'aye'.\"\n\nThere were 'aye's' all around except for Lee.\n\n\"This is bullshit! There are people missing and the sit down isn't scheduled for another half hour!\"\n\n\"We have consensus, Lee,\" Stavo told him. \"Even if everyone missing said nay, they'd be outnumbered.\"\n\n\"All in favor of Amelia here, who is actually qualified, taking over the books, say aye,\" Luka said, still half smirking at Lee in an 'I dare you' look.\n\nThere were aye's all around again except for Lee.\n\n\"We don't even know this girl! She could be anyone!\"\n\n\"I know who she is,\" Luka said quietly. \"Now let us untable the other matter. Why would you assume she was my old lady when yesterday this girl was an unknown to everyone? Stavo. Take Jay and Ben, go toss Lee's room. Have Apex find the wire in my room. Unless you would just like to tell me where it is? Be granted some leniency?\"\n\n\"You're out of your mind!\"\n\n\"As you will then,\" Luka shrugged, lounging back again as two men stepped up next to the couch on either side of Luka, their hands on guns at their belts. \n\nLee looked at them, turning red. \"I didn't mean any harm! It was just to see where the next drops would be first! You are trying to cut me out!\"\n\n\"Where is it?\" Luka demanded. \n\n\"On the high shelf in that skull thing.\"\n\nLuka nodded at Apex who went to find the wire. \n\n\"I am not cutting you out, Lee. I offer you as much work as you show up for which is less and less. You want the good jobs, but you don't show up for anything but your payday. You aren't club anymore, you are Lee.\"\n\n\"I've put my life into this club!\"\n\n\"Being here while the club was here isn't putting your life into it. PER put his life into it. He lived and breathed the club. For you it was something extra in your life. You left the club behind years ago.\"\n\nLee turned and picked up an ashtray, throwing it across the room. \"You weren't even a cumstain in your mothers panties when I was giving my life to this club!\" Lee raged. \"I have been here! I helped make this club what it is today!\"\n\n\"You got people put in jail! You got people killed and hurt! You made widows and orphans! That is no legacy, old man, that is a shame!\"\n\nLee started to close the distance, but the two men intercepted him. \n\n\"Here,\" Apex called, tossing the microphone to Lee. \"Why don't you go take a ride and cool off before the sit down, Lee.\"\n\nLee growled in rage and stormed out. \n\nAmelia looked up at Luka, her eyes huge. He gave her a smile and leaned in to kiss her head.\n\nShe stayed quiet as the men began talking to each other about business as usual. Who they were 'protecting', who they needed to collect on, who they needed to get their cut from.\n\nShe stayed silent as a mouse and listened to everything. \n\nShe was surprised when they all stood and Luka took her hand and led her to a large room in the back with a long table. There were chairs around the table, but also chairs back around the wall too so people besides the sitting council could sit in and listen or be heard. \n\nThe room filled fast and Amelia didn't understand why she was there. There were other women there, all of them either in the lap of a man, or standing with their arms around a man while he sat. \n\nThe meeting was called to order and Amelia stayed curled up and quiet, even after Lee came in late and took his seat with a glare at everyone. She listened to everything, taking it all in. \n\nWhen Apex brought up that Alan had been replaced as bookkeeper, there were a few murmurs. \n\n\"It isn't right,\" Lee said , standing. \"Alan has been doing it for years and he has been doing a good job. Why replace him just to make your new Cherry feel needed? She isn't club, she will never be club!\"\n\n\"It is done, Lee,\" Luka said quietly. \"I would like to address the other issue that was brought to light. The club needs to know what you have been allowing behind our backs. Not telling the rest of us. The deals you have making to sell here and transport and store here in our territory.\"\n\n\"You were reading too much into what I said!\"\n\n\"Was I? So you have not been having the prospects running any extra for you and your side dealings?\"\n\n\"Who told you that? Who said I was?\"\n\n\"It is a question, Lee. Have you?\"\n\n\"Is this some sort of witch hunt?\" Lee demanded. \"You're just trying to deflect! Make people forget that you brought some little Cherry into the club and after one fucking day she is running our books and your new old lady!\"\n\n\"Does anyone here take issue with who I am fucking?\" Luka asked.\n\nNo one spoke as Lee looked around the table, enraged. He shoved back and stormed out, cussing.\n\nLuka turned to Apex. \"I want everything on what he has been doing. Question all the prospects, look into who has been coming in and out. Call Ordecker and find out if he's heard anything. I want to know everything he has been letting in and out of here, you understand?\"\n\n\"Got it boss, it will be done.\"\n\nAmelia felt wary sitting there in his lap with his arm holding her. She could feel the tension in it. She sat listening for another forty five minutes until they ran out of things they needed to discuss. At the end of the night, Luka turned to Stavo. \"Lock the office down. Alan doesn't go in tomorrow. She is taking over the books as of now. Cherry, tomorrow is the day our boy usually comes in to do the books, but I am going to have you in there. How long will it take you to figure it out and get yourself up to speed?\"\n\n\"Not long. I really am good with numbers, accounting, patterns, that sort of thing.\"\n\n\"Good. The sooner the better. I don't want him to have an ammo to fire with at the next meeting. Come on. It's Friday night boys! Let's go celebrate!\"\n\nLuka pulled her out to the main room with the bar and pool tables. The corner lit up when someone flipped a switch and a stripper pole lit up. Luka sat back on one of the couches and pulled her up into his lap, making her straddle him as he gripped her ass with a smirk. She felt and heard others sitting around them and laughing, but she only stared up at him with wide eyes. \n\nDid he have to be so stunningly gorgeous? He pulled her in and kissed her gently, then hugged her to his chest. She pulled back, looking up at him. \"If I am about to do your books... you are going to have to tell me everything you do. You know that, right?\" she asked softly. \"Not just the mild things, but everything.\"\n\n\"Yeah, Cherry, I get it. I'll come in with you in the morning and make sure it's all clear. Ok? No more business.\" He pulled her in again to lay on his chest as he slid his hands up her shirt and ran his fingers over her bare back.\n\n\"So you really takin' on an old lady?\" a man asked.\n\n\"Why is everyone so surprised?\" Luka laughed.\n\n\"Because it's you!\" another man joked. \"You who won't look at a girl past getting your cock sucked. You've never focused on anything but the next job! And girls have fucking tried... a LOT!\"\n\n\"Somebody may have mentioned something to me about living in the moment as well as focusing on making the club better. Also... have you seen her?\" he asked lightly.\n\n\"Oh, she is hot, no doubt, but that has never phased you before!\"\n\n\"Cute enough, but not curvy enough for me.\"\n\n\"Cute face, she's too small. I like legs.\"\n\n\"She a natural redhead?\"\n\n\"She has no real fire in her, she's a mouse. I want a girl who gives as good as she gets!\"\n\n\"Oh no, I get the appeal,\" Stavo volunteered as the men all talked. \"She's helpless and small and so innocent. A real fucking little Cherry. There's something about that that makes a man want to bring her in and shelter her, make her feel safe, protect her. Show her how good shit can be. Am I right, boss?\"\n\nLuka only laughed as he bent low and kissed the top of her head.\n\nAmelia hugged him, then shifted and moved so she could see the people talking, put faces and maybe names to voices. She curled up on his lap, laying against him and playing with his hair as she watched all of the men talking and laughing. The girls too. \n\nShe began hearing more and more about what went on, what sorts of things the club had its fingers in. Why they needed a cop on their payroll. \n\nNear the end of the night, another group of men came in and she recognized the one called Jay. He had a woman on his arm.\n\n\"Jay!\" Luka yelled happily. \"Come over here asshole! Who the hell is this?\"\n\nAmelia looked up at the woman a little surprised. The woman was very obviously in transition and looked half terrified. So did Jay. \"This is Monica,\" he said softly, warily. \n\n\"This your old lady?\" Stavo asked, looking Monica over. \"Or sweetie?\"\n\n\"Uhh... sweetie for now.\"\n\n\"Pull up a chair, Jay,\" Luka called. \"Monica, step up to the bar there and get your boy a beer.\"\n\nMonica gave Jay an alarmed look, but he nodded as he sat down near Luka. \n\n\"So that's the one had you blushin' like a little girl,\" Luka laughed. \"Dunno, Jay. She might take you in a wrestling match. Any of the old timers give you shit, have them come see me. Make sure if you ain't here she stays back in your room if some of the old timers like Lee are here. Val will take care of her. Look at me. Stop lookin' scared. No one here give's a fuck who you are fucking and if they do, that's their problem and not yours,\" he said softy as Monica came back and handed Jay a beer. \"Monica, have a seat,\" Luka said almost warmly, gesturing to a chair back at a table like Jay had pulled up. \n\nShe brought it over and sat down, still looking a little terrified. \n\nAmelia held out her hand to her. \"Amy,\" she offered.\n\n\"Monica!\" she smiled back, taking her hand in both of hers and squeezing.\n\n\"What do you do, Monica?\" Amelia asked her.\n\n\"Oh! Well, I am between jobs at the moment. I used to work at the law firm here in town, but the past several months I have been sort of... you know. Waiting to find the right fit.\"\n\n\"Of course. How did you and Jay meet?\"\n\nJay sat up, his face going bright red, but Monica's back was to him. \n\n\"Oh, we met at Chaps and Straps! Such a wide eyed boy when he came in, he was so adorable! We talked and he came back again and again. He's been there for me through almost everything! He's such a sweet and caring boy! I just don't even know what I would do if he hadn't been there through the hardest parts!\"\n\n\"I imagine it's a hard thing to go through alone. I'm glad you found Jay and that he is so good for you. You two look cute together.\"\n\n\"Oh, thank you but I know you are teasing! Jay a whole head shorter than me and me a whole twenty years older!\"\n\n\"No, it works for you. Especially with the cute MDLB thing you two have going, it's really adorable. Truly.\"\n\n\"Oh...\" she said, surprised as she looked back at Jay who looked horrified. She leaned closer to Amelia. \"Is it obvious? What am I doing wrong that it's obvious?\"\n\n\"Oh, no, it's not. It's not obvious. I'm deaf, so I see more than other people,\" she whispered. \"I see the way he drops his eyes to you and the way... anyway. No one else would notice. Promise.\"\n\n\"You're sure? I don't want anyone to think he's... you know. Off.\"\n\n\"Not at all. It's a common dynamic.\"\n\n\"What are you two whispering about?\" Jay asked with a nervous laugh that sounded almost hysterical.\n\n\"Girl things,\" Amelia smiled. \"I like her. Thank you for bringing me someone to talk to.\"\n\n\"Uhh... sure,\" he shrugged, looking uncomfortable. \"Uhh... we weren't going to really stay, we were stopping in on our way somewhere.\"\n\nMonica turned to Amelia with a pleased smile. \"Dixie Dana and Billie the Kid are performing at Straps and Chaps! There's a drag show every Friday night! You should come sometime.\"\n\n\"I will see if I can get Luka to take me,\" Amelia replied with a smile. \"Though I'm not sure he would make it out of there alive.\"\n\nMonica looked at Luka and giggled. \"Oh no he would not! He'd be a changed man for sure!\"\n\nJay stood and put his chair back, then hovered near Monica.\n\n\"It was wonderful to meet you,\" Amelia said, getting up to hug her. \"I can't wait to see you again! Give me someone to talk to instead of sitting and listening to these men all talk shop.\"\n\nMonica hugged her back before standing, then towered over her in her 4 inch heels when she did stand. \"You are just precious, thank you Amy,\" she said with a lovely smile. \n\nJay took her hand and made an awkward goodbye as he left.\n\n\"That was a bit uncomfortable,\" one of the men said. \"I mean... he does know that's a dude, right? I mean, I don't care if that's what he wants, but he knows, right?\"\n\n\"She isn't a dude,\" Amelia said as Luka pulled her back into his lap. \"She was assigned male at birth, but she is a girl. She is just becoming in body who she has always been on the inside.\"\n\n\"So... is Jay gay?\" another man asked. \n\n\"Does it matter?\" Luka asked. \"He is what he is, all that matters is, he is club. Family. Leave his sex life out of it.\"\n\n\"I like Monica,\" Amelia said softly. \"She just wants to be accepted and loved and she has such a huge heart.\"\n\n\"As long as she takes care of our boy,\" Stavo shrugged. \"Layla! Another round!\"\n\nLuka took hold of Amelia's face and turned her to look up at him as he leaned close with a smirk. \"I am NOT taking you to a gay club, Cherry,\" he smirked. \"And we will speak later about some of the things you said.\"\n\n\"What things?\" she asked, a little frightened.\n\n\"Later,\" he whispered, kissing her forehead. \n\nShe wondered if she had done something wrong in being nice to Monica. Maybe that was for the men to decide, not her, but she just wanted her to feel less stressed and afraid. Jay too.\n\nShe stayed quiet after that, just offering smiles and nods when the other girls tried to talk to her. She didn't know how she was supposed to act towards other people here. What was acceptable to Luka and what wasn't.\n\nIt was late by the time Luke lifted her up in his arms and stood. \"I'm takin' this little Cherry to bed,\" he told the others. \"See if I can make her scream for me a few more times before sunrise.\"\n\nThere was laughter as Amelia blushed and hid her face. He carried her down the hall and took her to his room, setting her on the bed gently before going to his knees in front of her and holding her arms so she couldn't move. \n\n\"Now, tell me about what you said earlier,\" he commanded.\n\n\"What part?\" she asked, confused.\n\n\"The acronym. You both understood it. What were you saying to her?\"\n\n\"Oh! Oh... it's just... MDLB. Umm, Mommy dom little boy dynamic.\"\n\n\"So just kinky shit?\"\n\n\"Yeah.\"\n\n\"What do you know about that shit?\"\n\nShe turned red and looked away. \"I read a lot,\" she whispered.\n\n\"Yeah? What's the opposite of that one? FDLG?\"\n\n\"Huh? Oh... umm, DDLG. Daddy, not father.\"\n\n\"Daddy. Right. You needin' a daddy, Cherry?\" he asked, taking hold of her face and making her look at him. His eyes were dancing with a wild sort of need. \n\n\"No,\" she whispered. \"No, I...\"\n\n\"Shhh,\" he whispered, leaning in and kissing her. He stood up and pulled her up on the bed. \"On your knees, Cherry,\" he ordered, undoing his pants. He pulled his half hard cock out and took hold of her hair as she tried to lean away. \"Come here and suck my cock,\" he demanded, his eyes still lit with something that scared her.\n\n\"I don't want to...\"\n\n\"Did I ask what you wanted or did I tell you to do something? On your knees and start sucking!\" His words sounded harsh, but they weren't. It was some sort of roleplay, an act. He pulled her head close and pressed his cock to her lips. \"Open for me baby girl,\" he coaxed. \"Suck for Daddy. Show me how much you love me. Come on now, don't make daddy punish you.\"\n\n\"I'm not a little!\" she cringed, trying to pull away.\n\n\"Little?\"\n\n\"Someone who likes to pretend they are... a little kid. I'm not... that... or anything like that. Knowing what it is doesn't mean I like it!\"\n\n\"Mmmm,\" he chuckled. \"That's fine. You can still suck my cock, Cherry. Open your lips for me, let me show you.\"\n\nShe looked up at him, feeling her heart racing as she shook her head slightly and pressed her lips together. \n\n\"Don't be coy, Amy,\" he breathed, \"open those perfect little lips for me,\" he prodded, rubbing his cock over her lips. It was harder now, but the warm skin moved over her lips. She tried to move, but his grip tightened even more, hurting her and making it impossible for her to move at all.\n\n\"I don't like this!\" she whimpered through clenched teeth. \"You're hurting me!\"\n\n\"Shhh, Cherry, hush. I'm not hurting you, it's just a little rough play.\"\n\n\"I don't like it! I'm not playing!\"\n\nHis lip curled as he cocked his head. \"I'm not playing either. Open your fucking mouth.\"\n\nAmelia's eyes widened slightly at his tone. He may be toying with her, but he was very serious.\n\nShe parted her lips slightly, tears welling in her eyes.\n\n\"There's my good girl,\" he smirked, tapping his cock on her parted lips. \"Let me see that tongue. Slide it out here for me and lick my dick. All the way around, Cherry. Open your lips wider. There's my good girl. See how well you can listen for me when you want to? I want you to suck my cock. Spread your lips over the top, lick it, get it nice and sloppy wet for me, then suck it. I want you choking on it for me. Come on baby, open your lips for me. It's not hard, I will teach you. Open, Cherry. Open for me and do it nice so I don't have to hold you down and fuck your face.\"\n\n\"Stop!\" she cried, breaking down sobbing. \"Pleease!\"",
        "\"Shhhh,\" he whispered, laying her down with his grip on her hair. He leaned over her on the bed, his lips on her jaw as he nuzzled her ear. \"Shhh, baby, relax. Look at me. Look here at me Amelia,\" he said gently but sternly, turning her face to his as he eased his grip in her hair. \"You're fine. I'm feeling you out. You aren't a sub, I get it, calm down.\"\n\n\"I t-told you I wasn't like that! I don't...\"\n\n\"Shhhh, hush. Stop crying. Look at me. Amy... I don't fuck with girls. I know girls, I know how to get you off, make you scream for me, make your body mine. But I don't know how to read you beyond that. Never cared to try before.\"\n\nAmelia wiped her eyes, still shaking. \"Lesson one,\" she said almost angrily. \"Ask!\"\n\nHe laughed a full belly laugh and landed on the bed next to her, pulling her against him. \"Fuck. Ok, Cherry. Tell me. What do you like?\"\n\n\"What do you mean?\"\n\n\"I mean what do you like?!?\"\n\n\"I like peanut butter and chocolate,\" she shrugged, frustrated. \"Context.\"\n\n\"What do you like in a guy? How do you want him to be?\"\n\n\"I want him to be himself, I guess. I'm not into... anything. I am quiet and simple, Luka. I'm not like girls you have around here.\"\n\n\"No, I know. But, what do you like? You like having your hand held? You like...\"\n\n\"I like it when no one has to try,\" she said quickly. \"It just is and it's right. I guess. I don't really know what I like. I wasn't allowed to date. I was home schooled. My aunt was... super strict. All I wanted was to come back here and be happy where my life used to be happy. I don't need anything more. Luka... I liked the guy who took me up to the bluff and told me about how he grew up. He was real. I don't know what else you want from me. If you want honesty... I want to go home.\"\n\nHis smile slipped and the joy left his eyes.\n\n\"If you want to come and call on me, hang out, ask me on a date... that would be better for me than just being held here against my will. Not being allowed to leave. Luka... we have nothing in common, at all. I don't understand why you want me.\"\n\nHe scowled and got up, yanking his clothes off. \"Get ready for bed,\" he snapped. \"Same t-shirt as last night is fine.\"\n\nShe got up and changed quietly while he stood at the sink, holding the sides and looking down. She glanced at him more than once before she got into the bed and laid down.\n\nFinally, he turned and spun, coming to bed in a huff as he jerked the blankets up and turned the lamp off. After another long moment, he spoke. \"I don't know why I want you either. But I do and you are fucking mine. I don't ever want to hear about it again, do you understand?\"\n\n\"Yes,\" she whispered. \n\n\"And you will fucking learn how to suck my cock.\"\n\nShe didn't answer, curled up and stressed now.\n\n\"Your aunt. She still alive?\"\n\n\"Yeah?\"\n\n\"She hurt you?\"\n\n\"Not really. Just super strict. She had no kids. She took me from GiGi, said I wasn't being raised right. She basically locked me in the house until I turned 18. I could go in the backyard. It had an 8' privacy fence and her house was in a gated community. All older people, no kids. Once a month, three other older ladies came and they played cards. I home schooled online and read a lot. That's about it. I wasn't allowed TV or youtube or anything. She had someone come in and put filters on websites I could go to. I guess she didn't figure on me being able to read ebooks that she wouldn't have approved of. She didn't understand why the first thing I did when I turned 18 was pack up and walk out the front door.\"\n\n\"I could send a few of the boys to visit her.\"\n\n\"And what? Scare her? Hurt her? She wasn't cruel really, she just thought kids today were being ruined with the way things were.\"\n\n\"Still. Your voice holds pain when you speak of her.\"\n\n\"That won't leave just because you do something to her. It will always be there no matter what happens to her. I just want to move on. Go back to being happy.\"\n\n\"She was rich? Your aunt?\"\n\n\"Very.\"\n\n\"And her money had no happiness for her. That is why you focus on the little joys.\"\n\n\"Yes.\"\n\n\"I am not the same as her.\"\n\n\"No. You aren't. But you aren't fueled by money, either. That isn't what makes you keep climbing. You want to be better than the man above you. Always. You want to be that man, you want to be better. Luka... there will always be someone else a step above, no matter how high you climb. You know that, right? If you can't be happy until you are on top, you will never be happy. You have to stop looking up, stop looking at who is higher and look around you.\"\n\n\"So you say. You are too young to be so... stoic.\"\n\nShe said nothing, but she rolled to her side, closer to him and pressed her head to his arm. He put his arm around her and pulled her up to lay her head on his shoulder. \"Luka?\" she asked after a while.\n\n\"Mmm?\"\n\n\"Is that your real name? You don't look like a Luka.\"\n\nHe snorted a laugh. \"No. Per, he wasn't from here. When I first came around, he had trouble with my name and shortened it to Luka. Lukallawei.\"\n\n\"That's pretty.\"\n\n\"I don't think anyone in the club but maybe Alan knows my whole name.\"\n\n\"Because he keeps books?\"\n\n\"Mmm. Cherry?\"\n\n\"Amelia. Amy. Take your pick. Not Cherry or baby or any of those, please.\"\n\nHe laughed softly. \"Amy?\"\n\n\"Yes Luka?\"\n\n\"I am going to teach you to suck my cock.\"\n\nAmelia went still as he held her, wondering if he meant now. He didn't move, so she guessed he just meant at some point.\n\n\"Goodnight,\" he whispered, turning to his side to envelope her in his arms.\n\n\"Night,\" she answered, sitting enough to take her hearing aids off and set them on the shelf. He let her go enough to do that, then pulled her in close again.\n\nAmy was a little ashamed to admit she was disappointed that he hadn't taken her again. She had been excited at the thought of him making her scream for him again. She fell asleep feeling a little unwanted.\n\nWhen he woke her in the morning, he made up for it. He rolled her with a grin and kissed her, waking her up with a gasp as he pulled her underwear off almost roughly. She grabbed for a hearing aid as he angled her body as he kissed her, maneuvering her under him as he shoved her legs wide and reached down to circle his thumb over her clit until she was moaning into his mouth. \n\nHe pulled back less than an inch. \"You want my cock baby? You want me to fuck you? Say it! Beg me to fuck you. Beg me, Amy. I want to hear you beg for my cock.\"\n\nAmelia blinked up at him, her breath catching as he brought her closer.\n\n\"Beg me for my cock!\"\n\nShe nodded. \"Please? Please... I want you to... I want... oh! Oh god, I'm so close!\"\n\n\"Beg me to fuck you or I stop.\"\n\n\"Pleeease! Please fuck me!\"\n\n\"Louder! Scream it! Beg me!\"\n\n\"Fuck me please! Oh god oh god oh god!\" she cried as she came, the orgasm rocking her entire body as she shook and trembled with every wave.\n\nLuka didn't stop, he watched her and kept going, his cock throbbing with need as she gave herself over to him completely. Again. \n\nShe mewled as she came down, squirming as he kept going. He knew how hypersensitive she was now and he bit his lip, watching and waiting. Her head tossed as she gripped the sheets and wailed.\n\n\"Beg me,\" he whispered.\n\n\"Please, Luka? Please? Make love to me?\" she asked, her hand clutching at his arm.\n\nHer plea spoke to him in a very different way. \n\nHe moved over her, kissing her gently as he slowed his rapid rotation. He pulled her close, holding her against him as he pushed his hard cock into her slowly.\n\nShe moaned wantonly as her fingers searched for purchase on his chest. \n\n\"Yes! Yes, Luka! Oh, god! Please! It's... I... Oh, I need you!\"\n\nHis heart tried to jerk him right out of the moment as he paused. He looked down at her for a moment, then slowly started pushing into her again as he tried to suppress a smile. \"Say it again, baby,\" he whispered, threading his fingers through hers as he made love to her.\n\n\"I need you,\" she moaned. \"Luka, I need you! I have always needed you,\" she trailed off deliriously as he back arched up and she moaned again.\n\n\"Say you love me,\" he prompted, his heart hammering in his chest.\n\n\"Yes... oh please yes...I want to love... I need it, Luka, I need you! I need you to love me too, please!\"\n\n\"Say it Amy, say you love me,\" he groaned, moving faster.\n\n\"I love you! I love you Luka, please! Oh please, oh GOD!\" she wailed as he came, throbbing inside of her with a gasp.\n\nIt was the fastest he had ever come in his life. Even his first time.\n\nThree little words had done that. Words he hadn't even known he needed to hear.\n\nShe was still gripping him and panting and he pulled out of her and found her clit quickly with his fingertips as he quickly wiped his eyes, disguising the motion. Her head turned to him, her hand reaching to pull him into a kiss as he worked her and he kissed her passionately, need fueling him. Adoration fueling him. \n\nShe came again, whining into his mouth as he held her down as it coursed through her.\n\nWhen her body went languid, he pulled out of the kiss and looked down at her in wonder. \"Say it again,\" he demanded.\n\n\"Mmm?\" she asked sleepily,trying to cuddle into him as she closed her eyes.\n\nHe turned her face back to him and kissed her softly, then spoke, his lips still brushing hers. \"Say it again, Amy. Tell me you love me.\"\n\nShe went stiff and pulled back, looking up at him in surprise. \"I... said that?\"\n\n\"Mmm, say it again,\" he demanded.\n\n\"Luka...\" she whispered, blushing. \n\n\"No, Amy, no excuses, look at me and tell me.\"\n\n\"I want to,\" she told him. \"I want to love you. I love the way you make my body feel... I want to know you more and I want to love you, Luka... if you will let me. Know you. Do you want me to say this as some conquest? Yet another girl falling for the beautiful Luka?\"\n\n\"No girl has ever loved me,\" he half whispered, touching her face. \"They might like how I look, like that I can make them come, like that I am club. Not one has looked past those things. Look at me Amy. Are you being real?\"\n\n\"Yes... Luka... I want very much to really know you. To... justify the way I feel when I look at you. The way my heart aches with a physical need for your touch... your smile. I hate that I cannot make that feeling go away. I was terrified of you at first and hated you, no matter how beautiful you were... but... I cannot stop the way I feel every time I think of you now. The way I justify the bad things you do and have done in my mind so that it is ok to feel how I do about you. So say it. Make fun of me, the stupid little naive 'Cherry' that you have wrapped around your finger!\" she said angrily, hiding her face and her tears.\n\n\"Hush,\" he admonished, grabbing her hands and kissing away her tears. \"No, Amy. No. You think I would have claimed you as my old lady if I hadn't felt something for you the second I saw you? Taken you even though it's not how we do things? We aren't in the business of kidnapping. You are a special case. I wanted you. I want you. I am keeping you. Because I fucking feel for you. So don't be upset, little Cherry,\" he whispered. \"I am as fucked as you are.\"\n\nSomeone banged on the door. \"Boss! It's almost go time!\"\n\n\"Be right out!\" Luka yelled, getting up. \"Get dressed, Amy, be quick. I'm running late.\"\n\nShe jumped up and dressed quickly, leaving his shirt on so she didn't have to deal with the powerpuff debacle again. \n\nShe followed him out to the front, holding his hand in both of hers as he went out. \"Stavo, you are in charge. If he doesn't have it, you know what to do. Apex, back him up, keep an eye out in case he decides to try and be stupid. Jay, stay back, you aren't going on this run.\"\n\n\"Boss?\"\n\n\"I need you for something else. Stavo, keys? Thanks. All of you, stay together, stay tight, heads up. Something feels off today. Straight back here before you do the rest of your runs. Go. Jay, you're with me, come on,\" he demanded, pulling Amelia with him to a smaller office off the council hall. He unlocked the door with the keys and went in, pulling Amy in with him. \"Jay. Amy is keeping books now, not Alan. Alan tries to come in here? Make a scene? Be an asshole? Call me. Keep him off her. Lee too. Keep the door locked. You carry'n?\"\n\n\"Always boss.\"\n\n\"Good. Keep it handy. Keep the door locked and don't leave her in here alone. Amy, I will be back. You want anything?\"\n\n\"Coffee?\" she asked, sitting down at the desk with the piles of papers and stacks of folders. \n\n\"Cream? Sugar?\"\n\nShe shook her head. \"Black. I thought you were going to tell me about...\"\n\n\"I will, I'll be back. I need to interview a few prospects first and talk to a friend of the club in the PD. Jay, this is important. She is important. This is my old lady. Do NOT let anyone fuck with her. Understood?\"\n\n\"Yeah boss, got it. No one but you gets in here. They try, they die.\"\n\n\"Good. Call if you need me,\" he said quickly as he bent and kissed Amy on the head. She turned and smiled up at him, blushing and he grinned before he left. \n\nJay locked the door and sat down. \"So, this is tense, huh?\" he asked.\n\n\"Is it? It feels normal to me,\" she answered distractedly. \"Things have been nothing but tense for me since I laid eyes on Luka.\"\n\n\"Yeah, guess that's true. Hey. Thanks for last night. Monica... she was nervous and you made it nice for her.\"\n\n\"Sure.\"\n\n\"Did, uh... Luka say anything after we left?\"\n\n\"Just that club was club no matter what their orientation was. In so many words. Sorry, Jay, I need to figure this out.\"\n\n\"Sure, yeah, sorry. You from here? I don't remember seeing you in school.\"\n\n\"Yes and no, I moved but I am back. We wouldn't have gone to school together, you are older.\"\n\n\"I guess. You seem older than you are. I heard you were 18?\"\n\n\"Yes. Sorry, Jay, I really do need to focus. Maybe find a crossword puzzle or something?\"\n\n\"Sorry,\" he mumbled.\n\nAmelia focused on the work in front of her, sorting and trying to make heads or tails of what this 'Alan' had considered bookkeeping.\n\nOver an hour later, she had stacks arranged and had brought some order to the chaos. \n\nSomeone tried to open the door, then jerked on the knob.\n\n\"What the hell?\" a male voice asked. \n\nKeys could be heard jangling and several were tried. \n\n\"Val! Hey Val! You know why my door is locked? You have the keys? Where's everyone at?\"\n\n\"Don't know Alan, I was told if I saw you to tell you to have a seat out front and wait for them to get back.\"\n\n\"I need in my office!\"\n\n\"I don't have a key.\"\n\n\"Fuck it,\" he growled, then there was a thud on the door as if he was trying to bust in.\n\n\"You hit that door again and I blow a hole through it and your head,\" Jay called.\n\n\"Jay? What the hell you little fucker, let me in my office!\"\n\n\"Go sit out front like you were told.\"\n\n\"Let me in!\" Alan raged.\n\n\"I have carte blanche to shoot anyone who tries to get in that door. You want to try my loyalty to the club, Alan?\" Jay asked.\n\n\"Fine! I don't care, I just need some personal things I left in there!\"\n\n\"Later.\"\n\n\"No, now!\"\n\n\"Alan, I shit you not, I will shoot you!\"\n\n\"Alan!\" Val yelled. \"Put that god damn gun up!\"\n\nJay launched himself across the room and tackled Amelia out of her seat and rolled with her. He tucked her behind the desk, then positioned himself on the floor with a gun pointed at the door.\n\n\"Get your ass to the bar and let Lola make you some eggs. Quit being a damn drama queen! I tell Luka you drew on his new Old Lady and he will damn end you!\" Val yelled.\n\n\"Shut your fucking mouth, bitch,\" Alan growled. \"What old lady? Luka doesn't have an old lady.\"\n\n\"If you came round more than once a week, you'd know he does! She is in there right now. You better go sit your ass down, me and the girls already texted Luka. He finds out you went stupid crazy and pulled a gun in the club and you will lose more than your patch! Go sit down now or I tell him everything!\"\n\nThere was a growl of anger, then silence. \n\nFinally, Val spoke right outside the door. \"He's gone.\"\n\nJay got up and holstered his gun, then yanked his phone out and called Luka as he helped Amelia up. \"Luka? Alan is... oh, you did? Ok... Yeah, she's fine... I'll tell her.\"\n\nHe hung up and went and checked the door. He looked around the room, then moved Amelia and shoved the desk all the way to the wall, moving her seat as well so it wasn't directly in front of the door.\n\nHe looked around again, then let her sit down, moving his chair so it was next to the door. \"Luka said he's on his way. You ok?\"\n\n\"Yeah, I guess so,\" she answered quietly, her eyes still wide. \"You know. Tense.\"\n\nHe barked a shocked laugh. \"Yeah. Fuckin tense.\"\n\nThere was a soft knock at the door. \"Alan just texted Lee, I think he is on his way. I told Luka already. He is calling in the club. Sit tight,\" Val called softly.\n\n\"Fuuuuuuck,\" Jay breathed.\n\nAmelia ignored him as she sorted and went back to organizing and getting things in order.\n\nAfter another half an hour, shouting could be heard out front and Jay got up and started pacing. Amelia ignored that too as she punched away on the calculator.\n\nFinally, after another 45 minutes of shouting and more and more people, there was another knock.\n\n\"Jay, it's me,\" Luka called.\n\nJay unlocked the door quickly and looked at Luka questioningly as Luka came in with a cup of coffee from a convenience store. \"Sorry Cherry, it's cold,\" he said lightly. \n\nShe hardly heard him. \"I know why they are upset,\" she said, still in the zone. \"They have been skimming a lot of money. A lot. Small at first, you can see it back here a few years where the income wasn't matching up with the deposits and records. It was small. It keeps getting bigger and bigger, no one was noticing, they got real brave. Look at this. Last month alone they took almost 5 thousand off the top. How was no one noticing? Last year alone they took more than forty thousand. They were in line to take almost sixty this year.\"\n\n\"Jesus,\" Jay whispered as Luka stared at her in disbelief.\n\n\"You can prove that? With the ledgers?\" Luka asked.\n\n\"Yeah, That's just what I found in a couple hours, Luka. I really go through this and there is probably more. He was getting more creative. There are receipts here for things I am pretty sure are either made up or inflated. Who is going to go over receipts? No one. But if someone glanced at the totals, they would be close enough. Look at this one. A $4400 receipt from a pool cleaning company. I haven't seen a pool. This comes up on here a few times, and look, you can tell it was photocopied and the date was changed. I doubt it is just the son, he doesn't seem that bright, some of these are stupid rookie mistakes. They are probably both in on it.\"\n\nLuka stared at her in shock, then finally shook his head, his face turning red with rage. \"Jay. Tell Stavo and Apex to come here,\" he hissed.\n\nJay left at a run as Amelia sorted the stacks with the discrepancies and the ones that looked suspect. Seconds later, he returned with Stavo and Apex.\n\n\"Disarm both of them, hold them. Put them on the ground like dogs.\"\n\n\"Will do... uhh, boss,\" Stavo said, glancing at Amelia. \"Haven't had a chance to tell you. Alonso wasn't there. He left this on the bar. It's the deed. It's signed over to you. He's in the wind but gave you the bar so you wouldn't come after him.\"\n\n\"Fine. Do as I ask,\" Luka said angrily, flexing his fists as his chest heaved. \n\nAmelia looked up at him when they left. \"Luka?\" she asked softly.\n\n\"I'm fine, Amy,\" he said gently, though she heard the strain in his voice. \"Jay,\" he said, turning to the small young man. \"Escort her behind me. Anything happens, you get her back here and safe, you understand?\"\n\n\"Got it boss,\" he nodded.\n\nLuka left and a moment later, Jay led her out behind him, staying in front of her to the end of the hall. ",
        "Luka stepped out where Lee and Alan both had four men on them, pinning them to the ground.\n\nAmelia got her first look at Alan and he was Lee twice over again, but younger. \n\n\"Lee Foster. Alan Foster. I call you both to account. You have been stealing club funds for personal use for years. I am guessing since before Per was even gone. You have been not only allowing, but condoning and taking payment for letting outsiders in our borders to deal drugs, weapons and people. Fucking PEOPLE!\" Luka raged. \"You let people believe your actions were club sanctioned, tying OUR name to this shit.\"\n\n\"You are fucking weak, Luka!\" Lee yelled. \"Soft! You shouldn't be running this club, it could be so much more without you!\"\n\n\"It would be less! What you do, that isn't club, Lee. That is just... petty criminal bullshit. No one here needs to go to jail to prove shit. That's not what we are about. We make plenty of money doing what we do. Plenty. There was no reason to go back to the old ways, you are stuck in a time that is outdated. That's not club anymore. We aren't criminals like that. You know that. No drugs here, no guns here. And it should go without fucking saying that we don't deal in human fucking lives. I am calling a summit. Your fates will be decided. Be here tomorrow at noon for your trial. Be ready, Lee, a reckoning is coming. Do I need to send boys with you? Are you so far gone as to need a fucking escort? Take their vests, their guns. Let them go. You will both be back here at noon tomorrow for the trial. You know what happens if you don't show. Both of you. Go. Get out of my club.\"\n\nThe two huge men stood up and glared around the room. Both of them landed eyes on Amelia and glared daggers before they left.\n\nLuka turned back to her after they were gone. \"You ok, Cherry?\"\n\n\"Yeah. Thanks. Umm, thanks for leaving Jay with me. He saved me when Alan pulled a gun. Got me down and hidden behind the desk and safe. Moved the desk out of the line of fire in case something happened again. He made me feel safe.\"\n\nLuka half laughed. \"Is this you giving him a good review because you feel some sort of... something towards him? You don't have to. I know Jay and I picked him for a reason. He did his job like I knew he would. You don't need to talk him up, I know already.\"\n\nAmelia blushed, but nodded. \"Should I keep working on the...\"\n\n\"Later. Come in and sit down, you need to eat. I need to eat. Apex, I want a full report and give Amy that folder. She'll sort it.\"\n\nAmy sat with Luka at the bar as they ate, listening to all of the reports and what had happened. After, Luka let her go back to the office, but he went with her, talking on his phone and having people come in to give their reports. \n\nIn the evening, an older man came in and Luke stood up, grinning as he hugged the man. \n\n\"Luka, boy, good to see you,\" the man said with a fatherly smile.\n\n\"You too Sam. Sam, this is Amy, my old lady. Amy, Sam. He leads our southern hills chapter.\"\n\nAmy gave him a nod as he smiled at her.\n\n\"She's a knockout. Sorry to hear about your troubles, boy. There was a time I looked up to Lee. He got stuck in the past, couldn't move on. Adapt. They say you can't teach an old dog new tricks, but I am living proof you can,\" he smiled, his eyes shining. \"Guess this means no rager tonight?\"\n\nLuka laughed. \"Oh, hell no. No, we are party'n old man. How many you bring?\"\n\n\"Twenty two of us?\"\n\n\"Then I am calling in all the girls from my new titty bar!\" Luka laughed. \n\nHe pulled Amelia up and out, locking the door behind them before going out front to the packed main room. \n\nIn an hour, it was chaos. She had never been around so many wild and loud people, loud music, roughhousing and naked women. There were drugs out in the open, men and women doing lines of coke right out on the bar alongside shots. There were even people having sex right out in the open. It was over the top wild. \n\nFinally, she leaned in and had to yell to be heard, even right next to his ear. \"My head is killing me! Can I go lay down?\"\n\n\"Yeah babe!\" he laughed, picking her up and half tossing her in the air as he did. He was grinning, the joy in his eyes infectious as she laughed. He took her back to his room and shut the door, shoving her down to the bed and kissing her. \n\nShe turned, laughing. \"You're drunk!\"\n\n\"Yeah I am! Kiss me!\" he demanded, pulling her to kiss him again. \n\nShe kissed him a moment, then pulled away again. \"You can go out to your party and your friends, I don't want to keep you from them!\"\n\n\"No, it's fine. I want to be here. Kiss me!\" he laughed.\n\nHis door opened and Lee stepped in.\n\nLuka stood up quickly and pulled Amelia up, pushing her across the room towards the bathroom.\n\nLee lifted his hands. \"I came to talk. I talked to Alan. He told me what he did, I didn't know. Not about that. Yeah, I fucked up with the other things, but not stealing from club.\"\n\n\"We'll have this out tomorrow,\" Luka said with a scowl.\n\n\"I know, I'll be here. I wanted to come to you tonight. Talk to you man to man. You came into all of this late, Luka. You came in when Per was having second thoughts. You took that and ran with it. That wasn't how things were supposed to be, we were...\"\n\n\"We tried your way, Lee. Remember how it ended? Six of ours dead, five in prison. No. That was never the right way.\"\n\n\"We just have to be smarter about it!\" Lee said, stepping closer. \n\n\"I am not having this out with you again, Lee!\" Luka said angrily. \"You need to go.\"\n\nLuka turned his back, taking off his chest piece and when he did, Lee pulled a gun from the back of his waistband on his jeans.\n\nAmelia didn't hesitate as she shouted a warning while he was still drawing and darted in, ramming a knife-hand punch into his kidney. She grabbed the gun when he hunched and twisted, flipping and pulling the gun free as she rolled to her feet a few feet away. She ran forward and leaped to the bed, then vaulted off of it as she spun, landing the butt of the gun heavily across Lee's nose. He went to his knees, holding his nose and she spun behind him, putting the gun to the back of his head. \n\nLuka gaped at her and she let out a sigh. \"Well that was a god damn shit show!\" she yelled angrily, loudly. \n\nLuke stepped forward. \"Amy? Holy hell, did you just... save me?\"\n\nAmy stared hard at the back of Lee's head, her face red. \n\nThe music stopped out front and there was yelling, then moments later the door opened and police poured in. \n\nAmy stepped back and handed the gun off to one of them, then pulled her hearing aids off and handed them to another one. \"I got everything we needed,\" she told the man. She started to leave, but paused at the door and turned to Luka as he was being cuffed. \"I'm sorry,\" she said softly. \n\nThe officer she had given her things to followed her. \"Agent Winfield, Agent Blaine is out in the van waiting for you, he wants...\"\n\nLuka didn't hear more as they disappeared down the hall and he was shoved to the floor. His heart was crushed.\n\nThree long days later, he was sitting in a holding room he had been brought to. He had been in it several times already being questioned. \n\nThis time though, it was her that came in the door. He glared at her, anger swelling up red hot. \"Lying BITCH!\" he raged, tears welling.\n\nShe looked down and waved off the officer who started to step in. She sat down and set a folder on the table, but didn't look up as she sat quietly.\n\n\"Nothing to say, CHERRY?\" he demanded. \"How? How did you do it?\"\n\nShe finally looked up, her own eyes rimmed red, her nose red, as if she were holding back tears. She faked a professional smile. \"I did a profile on you Lukallawei Ambrose. Conformed to your ideal woman. Quiet, sheltered, in need of protection, broken, adoring, naive, unsure. I became all of those things and put myself in your path. You took the bait like I knew you would. I was supposed to be in longer, but it is what it is. We got what we went in for and that's what mattered.\"\n\n\"It was all a lie,\" he said angrily, shaking his head. \"All of it. How did you fucking fake being a virgin?\"\n\n\"Oh, I didn't fake that.\"\n\n\"You let your job make you...\"\n\n\"I made a personal choice. I could have stopped you any time I wanted. As you saw. So you know, I didn't... fake everything. Anyway. Not the point. You are aware of all the charges laid out, yes?\"\n\n\"Yeah. You're what, here to over me a deal? I flip on my crew and you lessen my time?\"\n\n\"No. No, not that. We have all of you dead to rights, we don't need a deal. While it was Lee and Alan who we were ultimately after, you and yours are still into a lot of illegal things. Including kidnapping, though I made a personal choice not to press charges. You are all looking at 15 to 30 years. A guilty plea will go a long way for most of them. I am going to personally vouch for Jay Santiago. Lessen his sentence.\"\n\n\"Not me?\" he asked derisively.\n\n\"Not you,\" she said softly, her hands going to the folder in front of her. \n\n\"How much was a lie?\" he demanded hoarsely. \"Obviously you're not deaf. That whole sob story?\"\n\n\"They were wires. My parents are alive and well in Memphis. It was a story concocted to appeal to your need to protect and to relate to you.\"\n\n\"The trailer?\"\n\n\"A staged setting.\"\n\n\"Fucking bitch,\" he said angrily, looking away as more tears welled up. \"How old are you?\"\n\n\"Twenty six. I am just small. My backstory was all a lie, I was undercover. But Luka... anything not a backstory? None of it was a lie. None of it. And I was serious about most the things I said to you. Not the point. Luka,\" she said, sitting up and flipping open the folder and arraying the things inside.\n\nHe looked down at the license and passport and other papers in confusion.\n\n\"Lukallawei Ambrose is getting into a transport vehicle as we speak. There will be an accident on the way to the facility where he is being processed. His body will be found among the wreckage and he will be laid to rest alongside his brothers from the club. Luke Hannover will be free to walk out of this building to start a new life. Away from here. Away from this city. Is there anything you do not understand about this? That you do not agree with?\"\n\n\"What about my boys?\"\n\n\"They will serve their time and get out, regardless of where you are and what you are doing. As far as they will know, you will have died. Luka... stop climbing. Start building. Say yes to this. It's your way out and you deserve a chance to try for happiness instead of... just fighting for the next rung.\"\n\n\"Did you mean what you said?\" he asked, looking at her challengingly.\n\nShe looked him in the eye. \"Every single word.\" His lip curled slightly and she stood, feeling sad. \"Have a good life, Luke Hannover. Find happiness. Build.\"\n\nShe left, feeling both relief and regret. It was her sixth time in a sting like this, she was good at her job. Never once had she become invested or pulled a single favor to do what she had just done until now. \n\nShe stopped at the front desk and gave the officer a nod. He picked up the bag of clothes, including Luka's chestpiece, and took it back to the room. \n\nShe left and went to the airport to fly back to headquarters. The debriefing took a while, especially since they hadn't gotten nearly as much as they had hoped. They had put in with the wrong crew, thinking they were running things, but it wasn't them. It was just Lee allowing it. Someone else was behind the human trafficking and gun running. \n\nThat was for them to figure out, her part was done and she wanted a break. She asked for time off to go home.\n\nNot that it was really a home. She had been in her apartment a little over a week, hadn't even unpacked completely when she was pulled for the assignment. She had rarely been at home at all in the years she had been going undercover. \n\nShe flew back to Memphis feeling tired and heartbroken. This had never been an issue before. They were usually scumbags and she was happy to put them behind bars. \n\nHe was different. His idealism, his joy. She had played her part too well. She had even convinced herself. She tried to tell herself that as she went to see her parents first, staying for a few days to be spoiled by her parents. Her mom made her favorite dinners and she sat and watched horrible fake reality TV about survivalists with her father. It was a nice, relaxing weekend. She sat in her old room, looking around at her memories and wondered. \n\nWas she climbing or was she building?\n\nShe thought of her apartment, a hollow shell, stacked boxes. She was never there. \n\nWhen the long weekend was over, she headed into the city to her apartment and went in, ready to tackle boxes. She was pleasantly surprised as she looked around and realized she had unpacked more than she remembered, The living room wasn't bad at all. Her bedroom and office were wrecks though and she knew she had her work cut out for her as she tossed her keys in the bowl and looked through the huge stack of mail. \n\nShe finally wandered back to her bedroom, considering a shower before she started, then froze as she looked around. \n\nThere were no boxes and everything was unpacked. Put away. Everything. She turned and went out to her office and it was set up as well. Not a box in sight. She spun and started for her phone to call the super and Luka was standing there. \n\nShe stood, frozen and staring as he stood off the wall and walked all the way to her until she was craning her neck. \n\nA million things went through her mind.\n\nIf he tried to hurt her, she would go for a crotch shot first.\n\nHe looked beautiful.\n\nShe wanted to kiss him.\n\nWhy was he here?\n\nWas he going to try and kill her for betraying him?\n\nWhy was her heart hammering so hard?\n\nCould she hurt him if he tried something?\n\n\"Building,\" he shrugged, looking around. \"Though... this seems pretty generic to me. Not really you at all.\"\n\n\"You don't really know me.\"\n\n\"I think I know you enough to know that this,\" he said motioning around her, \"isn't you. This is a version of Agent Winfield that you adopted like one of your personas. Abigail. Never did think Amelia suited you.\"\n\n\"It was your grandmother's name. A name you probably heard as a kid and associated with family. Love. She died before you were born.\"\n\nHe nodded. \"I think I remember that, now that you say it. You all thought of everything, didn't you? Abigail doesn't suit you either. Abby. No. Cherry. Cherry suits you,\" he said, reaching out and toying with a curl. \n\n\"Why are you here, Luka? Luke?\" \n\n\"Why do you think? I have an interview tomorrow. Fixing fucking bikes,\" he laughed. \"Me. I could build a bike from the ground up but I have to interview and test. It's all good though, isn't it? Building. I can do that.\"\n\n\"You know my work... it takes me away for months at a time?\"\n\n\"Not anymore, too dangerous. You're going to take a desk job or something and fucking build. With your husband. I told you, Cherry. You are mine. I meant it. Now come here and kiss me,\" he smirked, taking a knee and pulling her close. He tilted her face up and looked into her eyes a moment before kissing her softly. \"And I am about to teach you how to suck my cock.\"\n\n \n"
    ],
    "authorname": "gabthewriter",
    "tags": [
        "noncon",
        "nonconsent",
        "kidnapping",
        "romance",
        "bikers",
        "reluctance"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-club-174"
}