{
    "title": "'Twas The Night Before... Ch. 02",
    "pages": [
        "*** This story was awarded Best Lesbian Story in the 2020 Reader's Choice Awards. Thank you to all who voted. ***\n\nIf you haven't read Chapter One, you won't get this story at all. You'll be shaking your head with that confused look I usually get when I have to do long division, so don't do that to yourself. Go read Chapter One, then come back. It's short, and I'm a patient lil' author.\n\nThanks to my beta-reader ArmyGal33 and extra shout out to my editor, AwkwardMD. She makes me a better writer every time we go through this.\n\n~~ Arlington, Virginia, December ~~\n\n\"Is this okay, Mommy?\"\n\nCaitlyn knelt on a chair at the kitchen table, carefully stirring the contents of the bowl in front of her. Kathryn stepped from the stove to where her four-year-old was laboring with her wooden spoon. Kathryn had chopped up a bag of cranberries, an apple and an orange in her mini food processor, then dumped everything in a mixing bowl with a cup of sugar, which Caitlyn had pretty thoroughly mixed by that point. Kathryn patted her head and gave her a big smile.\n\n\"That's perfect, baby. Good job!\" Kathryn turned back to her apartment's little stove and said, \"Now we just need to mix in the Jell-O.\" She had all four of the tiny burners going, as well as the oven, which was roasting the world's tiniest turkey, and the kitchen was uncomfortably warm. In fact, it was the only turkey she could afford.\n\nShe picked up the smallest pot she owned off the stove and carefully walked it over to the table.\n\n\"You keep stirring while I pour this in, okay?\"\n\n\"Okay!\"\n\nKathryn slowly poured the steaming liquid raspberry Jell-O into the bowl as Caitlyn kept stirring the mixture carefully, but with the enthusiasm of a four-year old helping with a Very Important Job.\n\n\"Okay, now we need to put this in the freezer for thirty minutes, then it will be just like you like it, okay?\" she said, taking the bowl.\n\n\"What can I do next, Mommy?\"\n\nKathryn looked at her daughter and smiled again. Caitlyn was almost giddy with excitement at the thought of having a guest for their 'Christmas party'. She had flour all over her clothes from the biscuits she'd rather enthusiastically helped make.\n\n\"I think we're almost ready. Can you go change into your pretty Christmas dress for the party?\"\n\n\"Yay!\" she yelled, as she ran out of the kitchen to their shared bedroom.\n\nKathryn watched her go, rubbing her hand across her stomach. She was as nervous as Caitlyn was excited. Perhaps more so.\n\nHer daughter's excitement was grounded in the fact that other than a few playdates with kids from the daycare, they rarely had guests over to their apartment, much less for a meal. Much less for something like the fancy Christmas dinner that she'd been working on all morning.\n\nKathryn's nervousness was based on the fact today would be the first time she'd seen Megan since Christmas Day, and it was their first 'official' date. She and Megan had spent most of Christmas Day together. Megan had made love to her twice more after their morning wake-up session and Kathryn had reveled in the attention, in the feeling of being wanted, and in the sensuality that Megan had shown her. However, once Megan had gone home that night, the doubts about what they'd done together began to creep in.\n\nThe next day, she'd met her daughter's grandmother, Amanda, in the Target parking lot on Route 50, the usual rendezvous spot for her to pick Caitlyn up from a visit to grandma's. Steve, Caitlyn's dad, was along for the ride this time. As usual, he'd made some awkward conversation, not-so-subtly hinting that they should get together socially sometime soon.\n\nKathryn knew it only was because Amanda was pushing him to do so, and that his heart wasn't in it. She surely had no interest in getting together with him, but it reminded her that her fantasies about a happy family life as she'd raised Caitlyn by herself had centered around finding a handsome, gentle, caring man; one who would fall in love with Caitlyn as much as herself. A man who would make himself a part of their lives, and make them into a happy little family.\n\nOver the last four days, she'd caught herself thinking over and over, \"What are you doing, Kat? Having a woman over for a date? And with Caitlyn here?\"\n\nThe fact she was now thinking of herself as 'Kat' spoke volumes. No one had called her that since high school. She'd stopped using that name for herself in her mind years ago. After one day with Megan, though...\n\nThe cheerful, quirky bartender/paralegal/law student had immediately taken to calling her 'Kat', and now she was using the nickname for herself again.\n\nAlso, very present in her thoughts, was the very real awkwardness of being with a woman that she'd felt each time Megan had initiated more lovemaking. But there was no denying that Megan had made her feel things that none of her post-high school party boys had ever made her feel. She was a patient and thoughtful lover, focused on Kat's needs as much, if not more, than her own. and Kathryn couldn't deny, despite Megan not being a man, she had an undeniably powerful attraction to her. The amount of time she'd pictured Megan's naked body over the last few days was proof of that.\n\nShe'd wavered back and forth from excitement and cautious hope, to see how Megan would interact with her daughter, to nervous butterflies and the urge to text Megan to call the whole thing off. But now, it was too late, it was almost--\n\nHer thoughts were interrupted by the sour note of the buzzer of her apartment's ancient intercom.\n\nShoot, she thought, I'm so not ready for this.\n\nShe pressed the button by her front door, \"Yes?\"\n\n\"Hey Kat, it's me!\" Megan's voice sounded tinny through the intercom, but still carried the cheerful enthusiasm Kat had come to appreciate in the short time they'd spent together.\n\n\"Come on up,\" Kathryn said, then held the button to buzz open the building's security door. She looked down at herself with dismay. A day of putting together that little Christmas dinner had her in disarray, with stains and splotches all over her apron. No time to change. She took off her apron and hung it back on its hook in the kitchen next to the stove, then grabbed a dish towel and started furiously wiping at any remaining stains on her simple blouse and jeans. All too quickly there was a knock at the door.\n\nCaitlyn came flying out of their bedroom, resplendent in her green and white striped Christmas dress. \"I'll get it Mommy!\" she said, beating Kathryn to the door.\n\nKathryn stood behind her as her daughter unlocked and threw open the door.\n\nMegan stood there with a huge grin on her face. Kathryn slapped a hand over her mouth to keep from laughing. Megan was wearing jeans and a soft, green vee-neck sweater under her leather biker's jacket, and had a huge canvas bag hanging from one shoulder. She was also wearing the green stocking cap trimmed with white faux fur she'd been wearing at the Christmas village the first night they'd met, and her big, fake elf ears were poking rather obviously out of her black, shaggy hair. She looked down at Caitlyn and immediately squatted down on her haunches in front of her, the strap of the bag slipping off her shoulder.\n\n\"Hi Cait! It's so good to see you again!\" She said, using the high, squeaky elf voice she'd used at the Christmas village.\n\n\"Miss Elf!\" Caitlyn happily exclaimed, \"Are you our guest for the party?!\"\n\n\"I am! My name's Megan, remember? Your Mommy invited me, because she knew I needed your special help!\"\n\n\"My help?\" Caitlyn's eyes grew round.\n\n\"You might be the only one who can help me, Cait,\" Megan said seriously. \"I'm back from the North Pole on a mission. Santa sends me to watch over little boys and girls during the year for him while he's busy building toys, but my disguise magic is stuck.\"\n\n\"Disguise magic?\" Caitlyn was hanging on Megan's every word while Kathryn stood in rapt fascination.\n\nMegan ignored Kathryn and focused all her attention on the little girl in front of her. She turned her head, and pointed at one of her elf ears. \"My magic lets me hide that I'm an elf so I can more easily watch over kids. But it's stuck.\"\n\n\"Oh no! How do you unstuck?\"\n\nMegan smiled. \"It can only be unstuck by the goodest little girls. And I think you might be one of them. Can we try?\"\n\nKat had never heard Caitlyn giggle so fiercely. \"Okay! What do I do?\"\n\n\"I'm going to close my eyes, and when I count to three, you concentrate really hard, then gently boop my nose with your finger and say Zap! Okay?\"\n\nCaitlyn's eyes grew wider, as did her smile. \"Okay!\" she said, holding up a finger.\n\nMegan slid her hands up into her hair on either side of her head, and said \"I'm going to hold my ears, 'cause sometimes there's a big pop when my magic unsticks. Okay, ready?\"\n\n\"Ready!\"\n\n\"One... Two... Three!\" Megan squeezed her eyes shut and waited.\n\nCaitlyn reached out, gently pressed Megan's nose like it was an elevator button and said \"Zap!\"\n\nNothing happened.\n\nAfter a few seconds, Megan opened one eye, looking worried. Her voice grew even higher and squeakier. \"Oh no, it didn't work! I thought you were the goodest little girl, Cait, I thought for sure that... wait... wait... ah... Ah... Ahhh...\" Megan let out a loud, fake sneeze, \"Ah-choo!\" and threw her head forward. Her elf hat flew off to land on the floor and her shaggy hair flopped over her face, making her look like a raven-haired Muppet.\n\n\"Oh!\" Caitlyn exclaimed and took a step back.\n\nMegan tossed her head, clearing the hair back off her face, and Kathryn saw she'd neatly palmed her fake ears while her hair was obscuring them.\n\n\"Did it work?\" Megan said in her normal voice. \"My voice! It worked! You did it, Cait! You fixed my disguise magic! You are one of the goodest little girls! Do I look like a normal girl now?\"\n\n\"Yes!\" Caitlyn shouted, pointing at Megan's hair, \"Your ears are gone and you don't sound like an elf anymore! I did it!\"\n\n\"Oh, thank goodness! I knew I could count on you, Cait! Here, Santa gave me something to reward you in case you could fix my magic for me.\" She reached into her big shoulder bag, and pulled out a fluffy, pink stuffed unicorn. It seemed to double in size, uncompressing as it escaped the confines of the bag, until it was almost as big as Caitlyn.\n\nCaitlyn squealed in delight, grabbed the unicorn, and rubbed her face in the soft, plush fur before throwing her arms around Megan's neck.\n\n\"Thank you, thank you, I love her, thank you!\" she bubbled.\n\n\"Thank you, Cait. You fixed my magic for me. What are you going to name her?\"\n\n\"Megan! Her name is Megan Unicorn!\"\n\nMegan giggled, and stood back up. \"Wow, I'm honored, Cait! I hope Megan becomes one of your best friends.\n\n\"She will! I know she will! C'mon Megan Unicorn, let's go meet Miss Spot and Banana Bear!\" She ran away into the bedroom, tightly clutching her new stuffed friend.\n\nMegan stepped in from the hall and closed the apartment door behind her, finally turning her attention to Kathryn and grinning. \"Hey Kat, hope that was okay. I thought if she recognized me from the Santa village it might cause you some problems and that seemed like a good dodge.\" Her grin faded into a look of concern. \"Oh no. Did I mess up? Was that not okay?\"\n\nKathryn had a tear running down her cheek, but she was smiling too. \"Megan, that was... so sweet of you.\"\n\nMegan gave her a look of relief. \"You scared me there for a second. I mean, it wasn't a big deal. Anyone would do that for a kid, I hope.\" She bent over to retrieve her elf hat and stuck it in her bag along with the fake ears.\n\n\"No, not everyone would. That was really, really thoughtful. You sure got off on the right foot with her.\"\n\nMegan stepped closer to her. \"Well, Kitty-Kat, that's what I was hoping for.\" She leaned forward to kiss her, but Kat shied away, glancing at the bedroom. \"Whoops, right. Sorry...\" Megan said, not taking offense. \"How about a hug for now, is that cool?\"\n\n\"Yes, very cool,\" Kathryn said. Megan embraced her and Kat closed her eyes, taking in the scent of Megan's hair. She hadn't realized how much she'd missed that smell in the four days they'd been apart.\n\nMegan pulled away, then looked around, drawing in a deep breath through her nose. \"Wow, whatever you're cooking smells amazing! My mouth started watering the second Cait opened the door.\"\n\nKat smiled. \"Thanks. I hope you like it.\"\n\n\"I live off bar food and the food court at Georgetown most of the time. This will be my first home-cooked meal in ages. I promise I'm going to love it. I should warn you though, I'm a terrible cook. Whenever it's my turn to feed us, I'll probably just take us out somewhere.\"\n\n\"Really? But you do everything else so well! Bartender, paralegal, student, elf... Santa,\" Kathryn said, teasingly, as she took Megan's coat and hung it up in the closet.\n\n\"A girl has to have some weaknesses. Otherwise I'd be boring.\"\n\n\"That's true. Sometime we'll have to teach you how to make our homemade pizza crust.\"\n\n\"I guarantee you, no matter how easy the recipe, I could make a mess of it.\"\n\nKat led her into the kitchen, smiling as they heard Caitlyn introducing the new arrival to the rest of her stuffed menagerie. She checked the pots on each of the burners, turned the heat down a touch on the gravy, then leaned back against the counter and hugged her arms around herself.\n\n\"Listen,\" Kathryn started, peering towards the living room to make sure there were no little ears listening, \"I just want to... I think I...\"\n\nMegan said quietly, \"Kat, if you want to set expectations, you aren't going to hurt my feelings.\"\n\n\"What?\" Kat looked up surprised.\n\n\"I get it, this is just dinner. Granted this is maybe one of the most serious, important dates I've been on in my life. You've never dated a woman before. Also, I'm auditioning for your daughter, whether she knows it or not. But I just want to put your mind at ease a bit.\" She looked back towards the bedroom, then said, in a quiet voice, \"I know that most of our dates won't end up like Christmas did.\"\n\nKat blushed and said \"Listen, Megan I--\"\n\n\"It's fine. I know I'm young. I mean we're basically the same age, but you definitely come across as the mature, responsible one between the two of us. But... I can be patient.\" Megan continued, nodding her head back towards Caitlyn. \"I know there are logistical problems with that. I won't be spending the night with you most dates... or any date, for the foreseeable future. And I also know, Christmas day notwithstanding, you probably don't want to move that fast.\"\n\nKat looked down at her feet. \"No, I don't know that I can move fast.\" She looked back up at Megan. \"I'm sorry, I hope that after what happened on Christmas it's not too unfair to slow down now.\"\n\n\"Don't be sorry.\" Megan reached up and caressed Kat's cheek. \"I really like you. I'm not here because I want to jump your bones every time I see you. I mean, don't get me wrong, I do because you're smokin' hot.\" Kathryn blushed as Megan continued, \"I know this is all new to you, me being a girl and all, but I like you. I'm not sure why, I don't usually like someone as fast as I like you. I just want to see where this goes, okay? Don't worry, I'm not going to treat you like a booty call. Anyway, sorry about trying to kiss you at the door. Won't happen again until you want it to, okay?\"\n\nJust then, Caitlyn thumped into Megan from behind, wrapping her arms around her legs and almost throwing her off balance.\n\n\"Megan! Come see my room! Megan Unicorn has met all my other friends, but they want to meet you too!\"\n\n\"Caitlyn! We've talked about this. You may call her Miss Megan, okay?\" she said, admonishing her daughter.\n\n\"Sorry Mommy! Miss Megan, will you come see my room?\"\n\n\"Sure thing, Cait! Let's go,\" Megan said, taking her hand and winking at Kathryn, then following Caitlyn into the bedroom.\n\nThat went better than I thought it would, Kathryn thought, I didn't have to awkwardly sit through the evening and have that talk after I got Cait down. She just brought it up herself. She gave a heavy sigh of relief. Maybe this is going to be okay.\n\nKathryn turned back to the stove, checking everything, then removed the turkey breast from the oven and started slicing it. She filled three plates with turkey, stuffing, green beans and cranberry relish, added liberal helpings of gravy, and set the plates on the table along with a bowl of biscuits.\n\n\"Dinner's ready!\" she called out.\n\nSeconds later, Caitlyn dragged Megan back into the kitchen by the hand.\n\n\"You sit here, Miss Megan!\" Caitlyn said, pushing her into the chair next to the one with her booster seat. \"I made the cram-berries, you have to have lots of cram-berries!\"\n\nKathryn spent most of the meal watching Megan interacting with her daughter. She was impressed how she didn't talk down to her, didn't use baby talk, and listened attentively when Caitlyn spoke.\n\nAfter the meal and the pumpkin pie, Megan suggested to Caitlyn that she bring her favorite game to the table. They played Connect-Four while Kat got some of the dishes cleaned up, and then Caitlyn insisted they had to watch The Grinch Who Stole Christmas since it had been a Christmas dinner. Caitlyn had watched it at least once a day since Thanksgiving.\n\nCaitlyn asked if she could sit on Miss Megan's lap while they watched, and Kathryn found she was almost jealous of how much attention Megan was giving her daughter instead of her. When she realized that, all she could do was shake her head and smile.\n\nBy the end of the Grinch, there was a heavy look in her daughter's eyes signaling it was bedtime.\n\n\"Mommy, can Miss Megan read my story tonight?\" she asked, after brushing her teeth and putting on her PJ's.\n\n\"Honey, our guest has already done a lot for you tonight, and I don't think--\"\n\n\"I'd be happy to read you a story, Cait, if it's okay with Mommy?\" Megan said, from behind them. Kathryn turned to see Megan leaning against the door frame.\n\n\"Are you sure? You've done so much already.\"\n\n\"I'd love to! Story time is right up an elf's alley.\" She came over and sat on the edge of the bed. \"What story are we reading tonight?\"\n\n\"Dog Man!\" Cait exclaimed, happily.\n\n\"Just one chapter,\" Kat admonished. \"You can sleep in the bottom bed with me tonight, Cait. Scoot over against the wall and give Miss Megan some room.\" She stood and took Megan's place leaning against the door.\n\nMegan flopped down next to Caitlyn on the bottom bunk with an exaggerated sigh, and opened the chosen book to the page that was marked.\n\n\"Let's see now... here we go. 'Dog Man was trying to...' wait, this isn't right. Hang on.\" She reached up, crossed her eyes, pressed her nose, and said \"Zap!\" then continued reading the story in her high, squeaky elf voice.\n\nBy the end of the chapter, Caitlyn could barely keep her eyes open. Megan tucked Megan Unicorn under Caitlyn's little arm then pulled the blanket up over her. She stood up, giving Kathryn room to lean over and kiss her daughter on the forehead. Then they quietly closed the bedroom door and made their way to the couch.\n\nKat sat down, then was mildly startled when Megan sat next to her and threw her legs over Kathryn's lap as she leaned back against the arm of the sofa. It was unexpected, but also felt familiar. Comfortable. After a brief moment of uncertainty of what to do with her hands, she rested them lightly on Megan's legs.\n\n\"You're so good with kids. I wished you worked at my daycare. You're at least as good as every other woman there,\" Kathryn said.\n\n\"Well, I... whoops! Oh no!\" Megan said, still in her high, squeaky voice. \"My magic is stuck again. Help a girl out?\" she asked, gesturing to her nose.",
        "Kathryn obligingly reached out, pressed Megan's nose with her finger and said, \"Zap!\"\n\n\"That's better,\" Megan said in her normal voice. \"Whew, good thing you're a good girl too.\"\n\nKathryn giggled. \"So, how'd you get so good with kids? Not as a bartender, I assume.\"\n\n\"No, I have two older brothers and a sister. They're all like one year apart, then an eight-year gap, then me. I was the 'oops' baby. Each of them has a mess of kids, so I've had my whole life to practice being the cool aunt to a pack of rug-rats.\"\n\n\"So, being a Christmas elf comes naturally to you then.\"\n\n\"I guess so. One of the admins at my non-profit does it for extra holiday cash. Last year, they had someone call in sick and she begged me to come with her to fill in. It sounded like a hoot, so I gave it a whirl and ended up staying the entire season. The guy who runs the Christmas village started emailing me in August to come do it again this year.\"\n\n\"I'm really glad you came for dinner. Thanks for the elf thing, too. That'll save me a lot of questions from Caitlyn.\"\n\n\"She's a sweet kid,\" Megan said, reaching out and twisting a lock of Kathryn's hair around her finger. \"Just like her mom.\"\n\nKathryn blushed. \"So, this was a good first date. I think Cait likes you a lot.\"\n\nMegan looked down at Kathryn's hand on her knee with a little smile on her face, then back up. \"And how about you? How are you feeling?\"\n\n\"I... I feel... okay. Good, I mean. I think tonight went well and I think... I think I'd like to keep seeing you, if hanging out with a mom and her kid sounds like your idea of a good time.\"\n\nMegan looked up to meet her eyes. \"I'd like that a lot.\" She dropped the lock of hair she was twirling and gently traced her finger along the soft skin behind Kathryn's ear. Kathryn shivered at her touch, before Megan dropped her hand and looked over at the bedroom door. \"How about a movie?\"\n\nKathryn turned on Netflix and they browsed the selections until they agreed on Die Hard.\n\n\"I mean, it is the greatest Christmas movie ever made,\" Megan said, casting her vote.\n\nAfter the movie, Megan helped Kat finish cleaning up the rest of the dishes, while Kathryn packed up half the leftovers for Megan to take home.\n\n\"If you're going to date me, you're going to start eating better than bar food. I can't afford to eat out much, so I've gotten pretty good at cooking.\"\n\n\"That sounds like quite the perk. You've sold me, I'll date you,\" she said as she cut a tiny slice of the leftover pumpkin pie on the counter and ate it in two bites. She shrugged on her leather jacket, and smiled.\n\nKathryn laughed as she walked Megan to the door. \"I had a really good time. Thank you for coming tonight.\"\n\n\"Thank you for having me. And for trusting me to meet your little girl. Cait's special.\" She gave Kathryn a hug and turned to go.\n\nKathryn impulsively reached out and caught the sleeve of her jacket.\n\n\"Kat?\" Megan asked, looking into her eyes.\n\nKathryn glanced over at the closed bedroom door once more, then stepped out into the hall and kissed her. A soft, quick kiss. Then she leaned back, without stepping away.\n\n\"Yes,\" she breathed, \"I definitely want to see you again.\"\n\nMegan smiled, then leaned back in towards Kathryn, sliding her free hand up into Kathryn's curly, chestnut hair. Their lips touched again and Megan was in no hurry. Kathryn made a small sound of pleasure in her throat when Megan's tongue met her own. After an eternity Megan pulled back, leaving Kathryn leaning forward to try to prolong the contact.\n\nKathryn's eyes slowly opened and she looked at Megan.\n\n\"You taste like pumpkin pie,\" she said, smiling.\n\n\"Yeah? You taste like my Kitty-Kat.\" Megan said. She kissed her once more and said, \"If I don't go right now, I might make a move that wouldn't be welcome on the first date. See you again soon.\" She trailed Kathryn's hair through her fingers as she turned.\n\nKathryn watched Megan walk down the hallway without looking back. She listened as Megan's boots thumped down the stairs, only going back inside her apartment once she'd heard the security door to the building swing shut behind her... girlfriend?\n\nShe shut the door, locked the deadbolt and leaned back against the door. My girlfriend, she thought. I want to see her again. Go on more 'dates'... which means... we're dating. Which would make her... my girlfriend.\n\nShe felt a smile break out on her face.\n\n\"My girlfriend,\" she softly said aloud. The words sounded even better spoken than they had in her head.\n\nShe nearly skipped across the apartment to the tiny bathroom to get ready for bed.\n\n~~ Arlington, Virginia, February ~~\n\n\"I don't want to go, Mommy! I want to go on the trip with you and Miss Megs!\" Caitlyn whined.\n\n\"Baby, we've talked about this. Your Dad and Gramma need to see you sometimes too, okay? It's just tonight. We'll pick you up tomorrow afternoon,\" Kathryn said, as she pulled into the Target parking lot on Route 50.\n\n\"Both of you?\" Caitlyn asked.\n\n\"Both of us!\" Megan said, turning in the passenger seat to give Caitlyn a reassuring grin. \"We'll both be here and if Gramma gives a good report, I'll take us to The Lost Dog tomorrow for dinner, okay pumpkin?\"\n\nThe offer seemed to mollify Caitlyn. \"The Lost Dog?! Okay!\" Megan had quickly learned the pizza place was Caitlyn's favorite restaurant, although Kathryn rarely had the money to take them there.\n\n\"Oh look, honey, Gramma is already here.\"\n\nMegan turned at the barely-concealed tension in Kathryn's voice, as they pulled up next to a very expensive black BMW at the edge of the parking lot. She unbuckled her seat belt and reached for the door handle.\n\n\"What are you doing?\" Kathryn asked quietly.\n\nMegan paused and looked back at her. \"I was going to help Cait get her bag.\"\n\n\"But... um...\"\n\n\"Kat, I'm not going to sit in the car like a dirty secret. I just want to meet them.\"\n\n\"Okay, fine. Just... let me do the talking.\"\n\n\"Okay. C'mon Cait! I'll help you with your stuff.\"\n\nThey got out of the car as Amanda and Steve did the same.\n\n\"Hello Amanda, Steve.\" Kathryn said.\n\n\"Hey Kathryn,\" Caitlyn's dad said.\n\n\"You're late,\" said Amanda.\n\nKthryn looked at her watch. 10:03. She struggled not to roll her eyes.\n\n\"Sorry. Traffic. You know how Seven Corners gets.\" She gently nudged Caitlyn.\n\n\"Hi Daddy, hi Gramma,\" the girl offered.\n\n\"Hey little bug!\" Steve said, and swung her up off the ground into a hug as she squealed and laughed, then set her back down.\n\n\"Who is this?\" Amanda asked sharply, looking at Megan holding Caitlyn's bag.\n\n\"Well, if you'd have given me a second, I was--\"\n\n\"This is Miss Megs!\" Caitlyn interrupted as she ran to Megan, grabbed her hand and pulled her forward.\n\n\"This is my friend, Megan Winerock. Megan, this is Steve and Amanda Davis, Cait's dad and grandmother.\n\n\"Nice to meet you both,\" Megan said cheerfully, and held out her hand.\n\nSteve politely shook it, while Amanda did so somewhat reluctantly.\n\n\"Are you a nursing student as well?\" Amanda asked, doubt plain in her voice as she eyed Megan's leather jacket and motorcycle boots.\n\n\"Nope, I'm a bartender,\" Megan said. She paused for a brief moment as she watched Amanda's mouth start to turn down in a frown of disapproval, then added, \"I also just started my third year at Georgetown Law.\"\n\nAmanda bit down on what was clearly going to be a snarky comment, fumbled for words for a moment, then said, \"If only Kathryn would aim a little higher, like yourself.\"\n\nMegan started to retort, but saw the look in Kathryn's eyes and snapped her mouth shut.\n\n\"Kathryn, we'll see you here at three tomorrow. Please don't be late. Come along Caitlyn.\"\n\n\"What... a... bitch!\" Megan said when she and Kathryn were back in the car.\n\n\"Please let it slide. I just need to get through the next two years of school. I can't afford to antagonize her, so just let it go, okay?\"\n\n\"Don't worry, I won't fuck things up for you. Steve seemed... inoffensive.\"\n\n\"He can be. But he still lives with Amanda, he has a hard time holding down a job, but he doesn't have to. He just lives off his trust fund and Amanda's money. He drinks too much and yells a lot when he drinks. I've always been afraid of... well, nothing's ever happened and I keep my fingers crossed. I can always tell when he's been drinking when Cait's there, because she won't talk about her visit. When he manages to stay off the sauce, she usually has a pretty good time and tells me all about it.\"\n\nMegan thought about that for a while.\n\n\"'My friend Megan', huh?\" she said, finally.\n\nKat looked pained. \"Amanda is conservative as hell, Megs. I can't... I don't want to share my life with them, especially something that's going to cause me problems with Amanda.\"\n\n\"Okay... just...\" She sighed. \"Just pull through that Starbucks there, would you? I need caffeine after that and it's a long drive out I-66.\"\n\n\"Where are we going anyway?\" Kathryn asked, after they'd obtained lattes and were on the highway.\n\n\"That's for me to know, and you to find out,\" Megan said, sipping at her coffee with a mischievous grin. \"That's why they call it a surprise.\"\n\nMegan had spent the last six Sundays with Kathryn and Caitlyn, as well as any week nights that they both had off from work and school. Most times it was just dinner and a movie or kid's show, then reading at bedtime before Kathryn and Megan could steal a few moments alone. Often Megan would bring her law books and laptop and study alongside Kathryn in the tiny kitchen, while Caitlyn watched cartoons.\n\nWith Caitlyn visiting her dad and gramma overnight, however, Megan had insisted on planning something special for just the two of them. She'd called in a favor to get off from her bartending gig for the first Saturday night in months.\n\n\"Just keep heading West until I tell you,\" Megan said. \"I'm glad I brought my Bluetooth speaker. I can't believe your car doesn't have a USB connection.\" She pulled up a playlist on her phone and soon they were singing along with the music. Kathryn tapped the steering wheel with her fingers while Megan danced animatedly in her seat. The next hour passed quickly, until Megan exclaimed, \"Oh shit! That's it! Exit twenty-three! Get over!\"\n\nKat managed to change lanes as safely and gracefully as it is possible to do with a few hundred feet's notice, and made the exit, laughing at Megan's inattentiveness while Megan started paying more attention to the directions on her phone. Once off the interstate, and after six or seven miles of twisting, narrow country roads, she directed Kathryn to pull into the parking lot of a very old looking set of buildings whose sign identified it as the Ashby Inn, a cute looking bed and breakfast.\n\n\"Are we staying here? This looks adorable!\" Kathryn said, as she got out of the car and stretched.\n\n\"This is it. Pop the trunk, and I'll get our bags.\" Megan grabbed the two overnight bags and led Kathryn inside.\n\n\"Miss Winerock, welcome to the Ashby Inn. We have you in the Lafayette Room for one night?\" The friendly woman at the front desk gave them two keys, and explained the amenities to them. \"Your reservation at the restaurant is at seven, check out is at noon and if you need anything, don't hesitate to call the desk. There's a complimentary bottle of wine chilling in your room. You're in the school house building next door, on the second floor.\"\n\nThey made their way back outside the main inn and found their room, one of two suites on the top floor of what once was a two-hundred-year-old school house building. Megan opened the door and ushered Kathryn inside.\n\n\"Megan!\" Kathryn said breathlessly. \"This is beautiful! How can you afford this?\"\n\n\"Been saving my tips for just such an occasion,\" Megan said with a grin, as she closed the door behind them and dropped their bags.\n\nThe room was large, with beautiful antique furnishing, a king-sized brass bed, and a wood-burning fireplace. One entire wall was nothing but floor to ceiling windows that faced an expansive slope of grapevines leading up the mountain away from the inn.\n\n\"It's beautiful,\" Kathryn said again. \"But... just one bed. I wonder what the woman at the front desk must be thinking?\"\n\nMegan frowned. \"She'll think I'm here for a romantic weekend with my girlfriend. Is that a problem for you?\"\n\nThe look on Kathryn's face told Megan that she realized how far her foot had just gone into her mouth.\n\n\"Megs... I'm sorry. I didn't mean to... I just, I...\"\n\n\"It's okay, Kitty-Kat. I know we haven't been out much together outside of your apartment. But we're a couple, right?\"\n\n\"Yes. I mean, yes, we're a couple. I'm sorry if I have some trouble adjusting to this in public. I've just never...\"\n\n\"You've never let the world see how hot you can get for your Megs, is that it?\" Megan said, stepping closer and folding Kathryn up in her arms. \"This is the first time we've been alone since Christmas. Still think you're into me? It's been almost a couple of months since we've been... together.\"\n\nMegan leaned forward and kissed Kathryn's neck. She reached up and tangled her hand in Kathryn's hair, pulling her head back while she nibbled at her earlobe, then drew her tongue back down Kathryn's neck, while running her other hand over the swell of her behind.\n\n\"Yes,\" Kathryn moaned, exulting in Megan's attention.\n\n\"'Yes', what?\" Megan said, then nipped a little harder at the soft skin where her neck met her shoulder.\n\n\"Yes! Yes, I'm still into you!\" Kathryn said, her voice heavy with need.\n\nMegan brought her other hand up to cup Kathryn's cheek and kissed her deeply, then she broke the kiss and stepped back.\n\n\"Good. That'll give you something to look forward to for the rest of the day then.\" She smirked at Kathryn. \"C'mon, we gotta get moving. I have a vineyard tour scheduled for us in a half-hour.\"\n\n\"What?! Are you kidding me?!\" Kathryn exclaimed, her breathing heavy.\n\n\"Serious as a heart attack, Nurse Hayden!\"\n\n\"I'm not a nurse yet!\" Kathryn sputtered, at a loss for a comeback. \"I can't believe you walked me in here, got me all hot and bothered, and now you're going to make me tour some stupid vineyard!\"\n\n\"That's the plan!\" Megan was grinning ear to ear. \"Just so you can think about coming back to this big, brass bed all afternoon. Think about it all through the vineyard tour, and the wine tasting after that, then the romantic dinner I have a reservation for. And then, then, we can come back here and finish what I started.\" She kissed Kathryn one more time and pulled her towards the door.\n\n\"I can't believe you,\"\n\n\"Anticipation makes hunger sharper, Kitty-Kat.\"\n\nThe vineyard at Delaplane Cellars was beautiful, with rows of neatly trimmed grapevines stretching away from the tasting room and over the rolling hills in every direction. After walking through the vineyard's buildings with the charming tour guide, and learning the ins and outs of making wine, they had a lengthy tasting of the vineyard's offerings in the tasting room.\n\nMegan stayed close to Kathryn, not quite hanging on her but maintaining contact, rubbing shoulders with her as they stood at the tasting bar together, sampling wine. She softly rubbed Kathryn's lower back while they listened to the winemaker explain each variety's notes.\n\nAfterwards, they bought a bottle of a chardonnay they both liked to take home, then walked back towards Kathryn's car.\n\n\"Let go for a walk,\" Megan suggested. \"It's beautiful here.\"\n\n\"It's twenty degrees.\"\n\n\"So, it'll be a quick walk.\"\n\nThey left their bottle of wine in the car and Megan led Kathryn up the slope away from the tasting house, between rows of dormant grape vines. After a minute she reached out and took Kathryn's hand. Kathryn stiffened up and looked around, as if to see if anyone was watching them.\n\nMegan stopped and smiled a slightly sad smile. \"Kitty-Kat, I know it's going to take a while for you to get comfortable with letting people see we're girlfriends. but we're in the middle of a bunch of grapevines in the winter. We're the only ones crazy enough to be walking around. No one is going to see us.\"\n\nKathryn shook herself and gave Megan an apologetic smile of her own. \"Sorry Megan, I just...\"\n\n\"Just what?\"\n\nKathryn took a sudden interest in a solitary, dead grape leaf, tenaciously hanging on the vine next to them. She reached out and touched a finger to it, then watched it fall and float to the ground.\n\n\"My whole life I've thought of myself as straight. I mean, I grew up in Fairfax, not exactly a conservative place. My parents were pretty progressive. I've never had a problem with gay people, I just never... I never thought of myself that way, and I feel really self-conscious about it where people might see us. I want to get over it, I do, it's just going to take me a while, okay?\"\n\n\"Okay, Kat. As long as you know I've been comfortable with who I am for a long time and when I care about someone I like to show it. I'll do my best not to make you feel uncomfortable, but...\" She stepped closer to Kathryn and took both her hands in her own, \"sometimes I just want to touch my girlfriend.\"\n\nKathryn shivered, but it had nothing to do with the cold. She looked around the picturesque, empty hillside, then tilted her head forward and closed her eyes, her lips parted and inviting. Megan didn't hesitate, closing the remaining distance between them and shutting her own eyes as their lips met, their warm breath mingling and forming a cloud around their heads in the chilled air.\n\nKat made a soft \"Mmm\" sound in her throat, then released Megan's hands to slip hers under Megan's leather jacket and wrap them around her waist. Megan responded by cradling the back of Kathryn's head with a hand, pulling them tighter together. Kat wasn't sure how long they stood there, gently and insistently kissing, until she felt something wet and cold hit her cheek. She flinched and opened her eyes.\n\nShe and Megan looked around without letting go of each other. Fat, heavy snowflakes had started falling. The ambient noises of the wind rushing over the hillside started to die away as the snowfall quickly intensified and started to dampen the sounds of the world around them.\n\nKathryn looked back at Megan. There were dozens of snowflakes stuck in her dark hair, giving her the appearance of a winter fairy.\n\n\"The first time we made love was during a snowstorm,\" Kathryn said, with a shy smile.\n\nMegan giggled. \"Okay, so the snow gods have determined we finally need to get it on again tonight, but if you think we're only going to get together whenever it snows you'd better rethink that idea!\"\n\n\"Deal,\" Kathryn whispered, then leaned forward and kissed her girlfriend again.\n\nBack at the bed and breakfast, they arrived just in time for the dinner reservation Megan had made in the restaurant. The hostess seated them at a small table near the fireplace.\n\n\"This is so wonderful, I can't thank you enough for arranging this,\" Kathryn said after they'd ordered. \"I haven't been on a vacation or a trip like this in... well, ever, maybe.\"\n\n\"It's my pleasure as much as yours. I think we should make time for ourselves anytime we can, we're both so busy. I know you aren't a fan of Cait going to Amanda and Steve's house, but we should make sure and take advantage of the opportunity when it happens.\"\n\n\"You're right,\" Kathryn said. She looked around the room. None of the other diners were paying attention to anything but their own meals and conversations. She shyly reached across the table and took Megan's hand in her own. Megan raised her eyebrows, but grinned before taking a sip of her wine with her free hand.\n\nLater, while picking over their desserts, Kathryn said, \"Megan, where do you see us going?\" She was looking down at the table as she spoke.\n\nMegan's grin turned pensive. \"Are we having the talk now?\"",
        "\"No. I mean, yes. I'm not wanting to determine the rest of our lives right this second, I just want to know what your intentions are.\"\n\nMegan blinked. \"My intentions?\"\n\n\"I guess I mean, what do you want out of a relationship? Not this one specifically, just in general. Do you see yourself settling down with someone?\"\n\n\"Oh. Do you mean am I just looking for a girlfriend until it's time to move on to the next one? Do I believe in marriage or am I a serial dater?\"\n\nKathryn nodded.\n\n\"I want a family, Kat. I want someone to grow old with. Is that what you're asking?\"\n\n\"Yes. I know that Cait is growing pretty attached to you. I mean, so am I, but I just want to make sure we're not just having a fun time. If there's no chance we're moving towards something real, I just need to know. I can't afford to risk having her get hurt for just a good time.\"\n\n\"You don't want to risk Cait getting hurt or you getting hurt?\"\n\nKat set her chin and met Megan's eyes. \"Both.\"\n\n\"Look, I can't say I'm ready to marry you, or move in together or something like that. We've been dating for six weeks, and we've only spent the night together once. But I like you enough that I could see us getting to that place. And I like Cait enough that I can easily envision making you and her my family. She's a great kid, I couldn't hope to raise a better one myself. Honestly the thought of stepping into that role for Cait is pretty intimidating, given how good you are at it.\"\n\nKat looked down at the tablecloth, her eyes glistening.\n\n\"Kitty-Kat,\" Megan whispered, \"you're an amazing woman and you're becoming very special to me, okay? I'm not just here for a fling. If I have to slow down again and not make a move on you tonight to prove it, I will. Not happily, but I will.\"\n\nKathryn stared into Megan's eyes, until Megan started to squirm in her seat. Megan opened her mouth to speak again, but before she could say anything, Kathryn stopped their waitress as she was passing the table.\n\n\"Could we have our check please?\" she asked a little breathlessly.\n\nBack in their room, they kicked off their shoes and found the housekeeping staff had turned down the quilt on the bed and stacked dry logs in the fireplace, with crumpled up newspaper underneath, ready to be lit. Their complimentary bottle of wine was still in the ice bucket.\n\nMegan lit the fire, poured two glasses of wine, then turned out the bedside lamp, plunging the room into shadows. The warm yellow glow of the tiny fire was the only light at first until Kathryn's eyes adjusted and she could make out pale white light streaming in the windows. The snow storm had ended and a half moon was peeking through the clouds, causing the crystalline blanket that covered the hillside stretching away from the inn to glow a pale, unearthly white.\n\n\"Here's to us,\" Megan said, handing Kathryn her wine. They gently touched their glasses with a soft, musical chime, then sipped while looking at each other.\n\n\"I have to tell you, Megs, today was the most romantic thing anyone's ever done for me. I'm a little overwhelmed.\"\n\n\"Good, that's what I was shooting for. Let's see if I can step it up a little more.\" Megan set her wine down and opened her bag, taking out her speaker. She turned on her phone and selected a playlist then set the speaker on the mantle of the fireplace as a haunting female voice started singing. She took Kathryn's glass from her and set it down on a side table, then took her hand and wrapped her other arm around in the classic slow dancing embrace and started rocking back and forth in the dim moonlight streaming through the windows.\n\nI am very, very much in like with you...\n\nThey swayed together for a while, listening to the music. Kathryn pressed her forehead against Megan's.\n\n\"Who is this? I've never heard this song before,\" she whispered.\n\n\"Julia Fordham. My big sister turned me onto her when I was in my teenage angst-y phase.\" Julia continued to sing, emotion dripping from her voice.\n\nSometimes I think I should say I love you too.\n\nIf words are free, why can't I spare the best for you?\n\n'Cause you treat my skin like porcelain,\n\nRare and special porcelain.\n\nKathryn lifted her head and looked at Megan, whose eyes were glittering hungrily in the fire light.\n\n\"You don't have to slow down tonight,\" Kathryn whispered.\n\nMegan smiled and stopped swaying. She kissed Kathryn, then slowly used both hands to insistently lift up the hem of Kathryn's sweater and pull it over her head. Then she unfastened Kathryn's jeans and slid them down her legs, leaving her in just her underwear, self-consciously shifting her weight from one foot to the other. Megan pulled her own sweater over her head, and reached behind her to unhook her bra, dropping it to the floor.\n\nKathryn stared at her, taking a moment to admire her body. She lifted her hands and gently caressed Megan's breasts, eliciting a small hiss of pleasure as she ran her fingers over the hardening nipples there.\n\n\"Kitty-Kat,\" Megan breathed. She took Kathryn's hand and led her over to the wall of windows overlooking the snow-covered hill, and the long, low bench there.\n\n\"Megan!\" Kathryn squeaked, \"There's no curtains!\"\n\n\"If someone is brave enough to stand out on that hill in the snow with night vision binoculars to try and peep on us, then I don't care, they've earned it. I want to see you in the moonlight while I do this.\" She positioned Kathryn next to the bench and slid her panties down her legs, guided her to sit back on the plush bench cushion, then unfastened and slid her bra down her shoulders, leaving her naked.\n\nMegan knelt between Kat's legs. The next song came on the speaker, Kiss Me, by Sixpence None-The-Richer. Megan grinned.\n\n\"What an appropriate song,\" she murmured, then leaned forward and did just that, kissing Kathryn deeply, her hands resting on Kathryn's naked thighs. She moved to kiss her neck, down to her collarbone, her shoulder, then down the slope of her breasts, Kathryn lightly resting her hands on Megan's bare shoulders as Megan gently took a nipple into her mouth.\n\nKathryn sharply sucked in a breath. Any doubts that she wanted to repeat their experience of Christmas Day fled from her mind, as she put a hand to the back of Megan's head to hold her there. She felt warmth bloom between her own legs. Megan reached behind her and pulled one of the overstuffed pillows on the bench closer then pushed Kathryn to lean back against it.\n\nAs Kathryn looked down at her raven-haired lover, Megan slowly, excruciatingly slowly, worked her lips down Kathryn's stomach, pausing to nip at the sharp bump of her hip bone. She looked up and met Kathryn's eyes as she lowered her head and gently licked the skin where it was softest, between her leg and her lips, which were puffy with arousal.\n\n\"Oh my... oh my god,\" she moaned.\n\n\"Kitty-Kat,\" Megan whispered back, \"you're so beautiful.\" Then she traced up and down Kathryn's slit, gathering a few drops of wetness on the tip of her tongue. She raised her head up and showed Kathryn the glistening treasure, then ostentatiously pulled her tongue into her mouth and swallowed. Then she lowered her head again and her tongue firmly parted Kathryn's lips, finding her clitoris on the first stroke.\n\nKathryn cried out, and wrapped a hand in Megan's hair. Megan used her hands to raise Kathryn's legs so her bare feet rested on her shoulders, then started to lick her in earnest. She gently rubbed her fingers up and down Kathryn's lips, before ever so slowly sliding two of them into her lover.\n\n\"Oh my god!\" Kathryn whispered in an urgent tone. \"Oh my god! Oh my... oh...\" She froze, muscles tensing up, then her legs started violently shaking as she hyperventilated. Soft cries escaped her, no matter how hard she tried to muffle them. Finally, she slapped her hand over her mouth as she groaned loudly. Megan rose up on her knees and pulled Kathryn in for a kiss, still stroking her fingers into her.\n\nKathryn rested her forehead against Megan's, her chest heaving. \"Megs... Megs that was... that was...\"\n\n\"That was what, Kitty-Kat?\" Megan asked, smiling.\n\n\"That was so worth waiting for.\"\n\n\"Hell yeah, it was!\" Megan agreed with a giggle. \"But that's just the start. We've got all night, we can sleep tomorrow.\"\n\n\"Good, my turn now!\" Kathryn said, as she roughly pushed Megan to her back on the rug in front of the fireplace.\n\nKathryn was startled when she opened her eyes to bright sunlight streaming in the windows. Most mornings, she was up before the sun, getting her and Cait ready for the day, trying to cram in some extra studying, or doing the chores that never seemed to end.\n\nThen, as the memories of the previous night flooded back to her, she smiled and stretched like a cat rising from a nap in the sun. Megan had made love to her until the fire had died down to sullen red embers. On the floor, in the bed, against the wall. They'd finally fallen asleep in a tangle of naked limbs. She rolled over to see Megan, still asleep and still naked, lying next to her. The quilt had slipped down, exposing her breasts and her nipples were standing taut in the cool air of the room.\n\nShe grinned to herself and whispered, \"Early to bed, early to rise, makes a girl healthy, wealthy and horny.\" Then she leaned over and took one of Megan's nipples into her mouth, softly caressing the other breast with her fingertips.\n\nMegan stirred, then a soft moan escaped her lips. Her eyes opened.\n\n\"Holy shit, didn't you get enough last night? You're insatiable.\"\n\n\"I remember from Christmas that I really like morning sex with you. Plus, when do you think the next time we'll be able to do this will be?\"\n\n\"Both excellent points,\" Megan agreed and kissed her. After a minute she said, \"Let's try something a little less strenuous though. I think you may have pulled several of my muscles last night.\" She jumped out of bed, and Kathryn sat up to watch Megan's shapely behind as she bent over to rummage in her bag. With a huge grin, Megan turned back around and held up a rather formidable looking pink silicone vibrator.\n\nKathryn immediately looked dubious. \"Uh, Megs I don't know, I've never...\"\n\nMegan's eyes widened in disbelief. \"Don't tell me you don't have one of these?\" she asked.\n\n\"Uh, no. They make too much noise and I share a bedroom with Cait. I pretty much just take care of myself with my fingers. Usually the shower is the only opportunity I have for that.\"\n\n\"Damn, that's one of the saddest things I've ever heard. Let's fix that right now!\" She hopped back into bed and kissed Kathryn again, running her free hand over Kathryn's body. As soon as Kathryn started squirming from the attention, Megan clicked on the vibrator on its lowest setting and started tracing it over Kathryn's skin, up her ribs, across the underside of her breasts, over her nipples, making her shiver.\n\n\"That feels really nice!\" she said, with a surprised look on her face.\n\n\"And we haven't even gotten to the main attraction yet.\"\n\nShe pushed Kathryn to lean back against the pillows and lowered it to gently stroke the soft skin of her thighs. Kathryn's lips were already pink and puffy from the foreplay and when Megan touched the vibrator to her clitoris, she gasped.\n\n\"Oh my!\" She breathed. She spread her legs wider and started rocking her hips against the sensation. \"Megs... that's so good!\"\n\nMegan made a pleased sound in her throat, using her free hand to stroke Kathryn's thigh.\n\n\"We need two of these so I can use one on you at the same time,\" Kathryn said, her breathing getting faster.\n\n\"Why would we need two?\" Megan asked. \"It's nice to share your toys.\"\n\nShe slid her left leg under Kathryn's knee, then threw her right leg over Kathryn's other leg. She scooted closer until she could trap the vibrator between them, pinning it between their nether lips then pushed a button on the end of the toy, turning up the intensity.\n\nKathryn gasped louder. \"Oh my god!\" she moaned. Megan curled her top leg around Kathryn's back, using it to pull her tightly against the buzzing cylinder. Her own breathing sped up. She reached a hand out and seized the back of Kathryn's neck, holding her still.\n\n\"Look at me, Kat. Look into my eyes when you come. I want to see it.\"\n\nKathryn stared into her lover's eyes, grabbing Megan's knee and squeezing it almost painfully. She and Megan cried out at the same time, both of them struggling to hold their eyes open, to watch each other as they climaxed. Finally, after they had both shuddered through their orgasms, Megan flopped backward onto the bed, the vibrator falling between them and buzzing wildly now that it was no longer trapped.\n\nKathryn's chest was heaving. Finally, she said, \"I can't believe you thought that was going to be less strenuous.\"\n\nMegan burst out giggling, then sat up and turned off the vibrator. She leaned towards Kat to kiss her. \"Let's jump in the shower. The complimentary breakfast ends at ten and I'm starving!\"\n\nKathryn blinked. She hadn't thought about the simple pleasure of showering with a lover post-lovemaking in so long, it hadn't even occurred to her that it was something she and Megan might do this weekend.\n\nI really like this whole having a girlfriend thing, she thought to herself.\n\n~~ Arlington, Virginia, April ~~\n\n\"Shit!\" Kathryn exclaimed loudly at her laptop.\n\n\"What's wrong?\" Megan asked, looking up from the law review article she was writing on her own laptop.\n\nThey were sitting at Kathryn's kitchen table, Megan's law books spread out in front of her. The sound of a Bubble Puppies cartoon floated in from the living room.\n\n\"Mommy, you said a swear!\" Caitlyn said, running into the kitchen. Kathryn reached into her backpack with barely-concealed impatience to get a quarter for her daughter.\n\n\"You got me baby, sorry. Here you go,' Kathryn said. Caitlyn claimed her fine and ran back into the living room, giggling. The sound of the quarter being enthusiastically dunked into the swear jar followed.\n\n\"What happened?\" Megan asked again.\n\n\"I don't know what I'm going to do,\" Kathryn said. \"This is a disaster.\"\n\n\"What's the problem? Talk to me,\" Megan said, leaning over and rubbing Kathryn's arm.\n\n\"This organic chemistry class I need only has two sections and the daytime section filled up before I could register. All that's left is the night section. I don't know how this happened, registration just opened today! If I don't get into that class it could delay my graduation. I'd have to take an extra semester! Or take five classes in the fall semester and I don't know how I'd manage that!\" Kathryn felt her chest tightening, and tried to get herself under control.\n\n\"So, take the night section.\" Megan said, then picked up a french fry from the remains of their dinner and popped it in her mouth.\n\n\"I can't! It has class on Tuesday nights and a lab session on Thursday nights. There's no way I can manage that. Amanda has made it very clear they'd only watch Cait for me one weeknight a week.\"\n\nMegan looked thoughtful. \"Can they do Thursdays?\"\n\n\"Maybe, but then what?\"\n\n\"Hang on a second, let me check on something,\" said Megan. She pulled her phone out of her own backpack and made a call. \"Hey Andy, it's Megs. How'd you make out Friday night? No? I didn't make squat on Saturday either. Yeah, business sucks during intersession. Listen, question for you... would you mind switching your Wednesday nights for my Tuesdays for the summer? Yeah... it's a school thing. Really? Cool, thanks. I'll tell Rich when I'm in tomorrow and put it on the calendar. Okay, thanks man, I owe you a solid.\"\n\nShe put down her phone and smiled at Kathryn. \"Problem solved.\"\n\nKathryn stared at her. \"You... you're just gonna do this? You'd commit to an entire semester of babysitting, just like that?\"\n\nMegan laughed. \"It's not babysitting, Kat. It'd be more like getting in some one-on-one Cait-time that I'm sorely missing. Hey Cait! C'mere!\"\n\nCaitlyn walked into the kitchen, carrying Megan-Unicorn. \"Yes, Miss Megs?\"\n\n\"How would you like it if this summer, Tuesdays were Megs Nights, so Mommy can go to school?\"\n\n\"Megs Nights?\" Caitlyn asked.\n\n\"Sure! You and I can hang out by ourselves! We'll do all kinds of fun stuff. You can teach me to make your mom's pizza dough. Maybe we can go skating or see a movie or something. Anything you want.\"\n\n\"Yes! Mommy, can I? That sounds like so much fun!\"\n\n\"I... sure baby, you and Miss Megs can do Megs Nights together if you want to.\"\n\n\"Yay! I want to go to the zoo! And the park! And the playground! And make pizza! And--\" Caitlyn kept up a litany of things she wanted to do with Miss-Megs while Megan grinned at Kathryn.\n\n\"Seems like we're good to go Mommy. Go ahead and get registered for that class before the night section fills up too.\"\n\n\"Thank you,\" Kathryn whispered. while her daughter kept rattling off more and more elaborate plans for Megs Nights.\n\nLater came bath-time, teeth-time, and story-time, the last performed by Megan in her elf voice, as had become tradition anytime she was visiting. Kathryn and Megan retired to the couch, once Cait was asleep in the top bunk with Megan Unicorn.\n\n\"What do you want to watch tonight?\" Megan asked, throwing her legs over Kathryn's lap as was her habit. With the warm spring weather, she wasn't in her usual jeans and motorcycle boots, but instead was wearing a denim mini-skirt and canvas high tops.\n\n\"Let's just talk for a minute,\" Kathryn said, rubbing Megan's legs, as had become her own habit. The presence of the mini skirt made the exercise much more distracting. \"I just... I can't begin to thank you enough for helping me out with school like that. And the fact you just jumped in and did it with no hesitation, I--\"\n\n\"Hey, I'd bet you'd do the same for me in a heartbeat,\" Megan interrupted. \"I just don't have a kid I need help with.\"\n\n\"I would, but... I just need to say again, thank you.\"\n\n\"We're partners here, right? One for all and all for one?\" Megan stopped at the look on Kathryn's face. \"Uh oh, is that too heavy a word? Should I have stuck to girlfriends?\"\n\n\"No... no, I like that, it's just... that's a step up isn't it? Like more than just girlfriends?\" The look on Kathryn's face suggested the answer was very important to her.\n\n\"I mean... yes, it's a step up, but I'm okay with that. I've been wanting to talk to you about this for a while, but there hasn't seemed to be a good time...\"\n\n\"Talk about what?\"\n\n\"I think we're really good together. And I really love Cait, as much as I love you. My lease is up at the end of September, and I was wondering if maybe this summer we should look around for a two-bedroom place we could afford together.\"\n\nKathryn just stared at her, her mouth open.\n\n\"What? Kat, say something, or you're going to freak me out.\"\n\n\"You love me?\" Kathryn said, her voice cracking as her eyes filled with tears.\n\n\"Oh god, that was, like, the least romantic way for me to say that for the first time, wasn't it? I'm sorry, Kat, I really should've--\"\n\nShe was interrupted as Kathryn threw herself at Megan, mashing their lips together in a desperate kiss. Her arms circled her arms around Megan's neck. After a moment she broke the kiss with a gasp.\n\n\"Megan... I love you too!\" she said. \"You make me so happy! And I wanted to say that to you, but I was scared! And now you said it and you've set me free and I can say it! I love you! I love you, Megs!\"\n\nMegan was laughing, tears in her own eyes now. \"I guess I didn't screw up too bad after all!\" They kissed again, until Megan felt Kathryn's hand slide up under her skirt.\n\n\"Mmph, Kat!\" She hissed, breaking off their kiss and looking over her shoulder at the closed bedroom door. In the months since their trip to the Ashby Inn, they'd managed to find alone time every week or two when Caitlyn was with her father. Once or twice, they'd managed a lunch rendezvous while Caitlyn was in daycare and they both had an hour or two free. However, Kathryn had never shown any willingness to go beyond kissing when they were together after they'd put Caitlyn down for the night.",
        "\"I know, I know,\" Kathryn panted, \"we can't get naked and crazy. But she's been a good sleeper lately and that bed creaks super loud when she climbs down the ladder from the top bunk so we'll hear her coming if she wakes up, which she won't, because God doesn't hate me that much and I have to make my partner happy right now!\" As her fingertips slipped under the edge of Megan's underwear she leaned over to kiss her neck. \"You can be quiet, can't you?\"\n\n\"I... oh Jesus, Kitty-Kat, I can try, I... oh god!\" she said, as Kathryn worked her fingers into her. She looked over at the door again and spread her legs a little more, grateful that the couch was facing away from the door. She threw her head back on the armrest and closed her eyes. She grabbed Kathryn's wrist and held it tightly while Kathryn worked her fingers in and out, curling her fingertips inside Megan and stroking at her g-spot, a place she'd learned was guaranteed to make her come quickly.\n\nMegan's breathing rapidly sped up, but she kept her eyes closed, concentrating on remaining quiet. As she got closer to the edge, she opened her eyes to look at Kathryn with a look of ecstatic agony and whispered, \"Kitty-Kat!\" Then she rolled her head back again, stuck one of her knuckles in her mouth and bit it hard, muffling her whine down to a quiet, whimpering moan as her whole body shuddered. She clamped her thighs closed, trapping Kathryn's hand and forcing her to stop moving her fingers in and out. Slowly, ever so slowly, she relaxed, with the occasional jerk or spasm as she came down from her orgasm.\n\n\"God, that was nice. And unexpected. Do I get to do you too?\"\n\nKathryn giggled and said, \"Not tonight. A little fooling around is one thing but I'm not taking my jeans off here on the couch.\"\n\n\"Fine,\" Megan said, in a tone that indicated it was anything but fine, \"but you have to promise me one thing.\"\n\n\"What's that?\"\n\n\"This weekend you have to let me take you shopping for a miniskirt.\"\n\n~~ Washington, DC, July ~~\n\nThrough the luck of Megan's bar schedule and the daycare center where Kathryn worked being closed for the holiday, they had both had the day off for Independence Day. Megan had found an antique picnic basket at a thrift store near her bar, which she'd given to Kathryn as a Mother's Day present after helping Caitlyn make a card to go with it. Kathryn had spent the morning making snacks to stock the basket. Megan had concocted a delicious strawberry lemonade that Caitlyn had declared \"the best ever!\" to bring in a large thermos.\n\nAfter a half-hour of walking around, they'd managed to find a tiny patch of unoccupied grass in the sea of humanity around the reflecting pool between the Lincoln Memorial and the Washington Monument. They spent the afternoon lounging on a blanket, Megan in tiny shorts and a bikini top, her skin slowly turning golden.\n\n\"Ugh, I wish my skin would do that,\" Kathryn said, looking at her from under the brim of her giant sun hat. She had worn a loose-fitting, long-sleeved linen shirt over her tank top to go with her long, linen skirt. \"My skin is so pale. Putting me in the sun is like putting a fork in the microwave. Which reminds me,\"--she turned and yelled-- \"Caitlyn, come here!\" Caitlyn stopped running in circles with the kids she'd met around them, and came back to their blanket. \"Time for more sunscreen, baby,\" she told her daughter.\n\n\"Ugh, Mommy!\" Caitlyn complained, but sat down in front of Kathryn and let her smear more lotion on her exposed skin, impatiently bouncing up and down. When she was freshly coated, Kathryn let her go back to playing with her new friends.\n\nMegan stretched, then laid down on the blanket, resting her head in Kathryn's lap. Kathryn stiffened slightly and looked around.\n\n\"Still?\" Megan asked her, looking over the frames of her sunglasses.\n\n\"Sorry... sorry, it's just a reflex.\" She tried to relax, and stroked Megan's hair.\n\n\"Good. Now feed me a grape,\" Megan demanded.\n\nKathryn laughed and reached into the picnic basket. \"This is pretty nice,\" she said as she popped a plump, purple grape into Megan's mouth. She looked around at the crowds baking in the sun. Music came from public address speakers spread out all over the mall, broadcasting the program from the stage in front of the Capitol building. \"I haven't come down to the mall for the fireworks since I was just a little older than Cait. My parents hated the crowds, so we'd watch on TV or go to the local firework show in Fairfax.\"\n\nMegan finished chewing and swallowed. \"Watch it on TV? That's crazy! You can't celebrate your nation's independence on TV! You gotta feel the booms in your chest, and smell the gunpowder. That's real patriotism.\"\n\nKathryn snickered. \"It's awfully hot though. I wish we could go swimming.\"\n\n\"Maybe when we start looking at apartments we can try to find one with a swimming pool,\" Megan said.\n\n\"I'm quite sure any apartment with a pool will be out of my price range,\" Kathryn said. \"Just because we're going to combine resources doesn't mean I'm not going to be as frugal as ever. Maybe when we've both finished school, and have real jobs, and get rid of some of our student loans? Maybe?\"\n\n\"Don't worry babe. Another year or two, and we're both going to be in a better place. In fact, we should talk about whether we want to stay here or go somewhere else.\"\n\n\"What?\" Kathryn asked. \"What do you mean? Go where?\"\n\n\"Well, I kind of have it in my mind to keep working for my non-profit, just as a lawyer instead of a paralegal, once I finish law school. I really like the work we're doing, but I could make a lot more money doing something else. Lawyers are in demand everywhere. So are nurses. There's nothing holding us here if we want to move. We could go back to Chicago; my family is there. They're dying to meet you and Cait, you know.\"\n\nKathryn gulped. \"Sometime, maybe.\"\n\n\"Not maybe, babe. We're a couple, and you're going to meet them. And they're going to love you, and Cait. And you'll love them. They've never been anything but supportive of me, and my choice of partner will be no exception.\"\n\n\"Fine, but it's still meeting the parents of someone you've been dating for a while. Scary no matter the circumstances.\"\n\nMegan laughed. \"Fair point, but--ACK!\" Megan yelled as she suddenly was pelted with several streams of water. She and Kathryn looked up to find Caitlyn giggling madly along with a group of kids frantically pulling the triggers on the squirt guns that Caitlyn's new friends had brought. There were six or seven kids, all shooting at Megan as fast as they could, soaking her.\n\n\"Ooo, Cait, I am so going to get you!\" Megan jumped up with a grin and started chasing the squealing kids around the various blankets and folding chairs around them, fingers held out in front of her making threatening tickle motions. Caitlyn shrieked with laughter. Kathryn shook the water from her arms that she'd received as a bystander to the Megan massacre while she watched her girlfriend pursue the children.\n\nMegan is so good with Cait, she thought. I got so lucky. In my wildest dreams I'd never hoped to find a man who would be such a good parental figure for my daughter. Is this real? Is this the person I'm supposed to grow old with? Raise Cait with? I think she might be...\n\nAfter a moment or two lost in thought, Kathryn realized there had been a suspicious cessation of children's shrieks, and she looked up to see Megan crouched next to Caitlyn as they stealthily snuck around the group of adults on the next blanket over, huge grins on both their faces.\n\n\"Get her, Cait!\" Megan yelled, as soon as Kathryn spotted them, and she opened up with the squirt gun she'd borrowed from one of Caitlyn's compatriots. She and Caitlyn giggled madly as they pelted Kathryn with water.\n\nBOOM!\n\nThe enormous explosion overhead was quickly followed by another, then dozens, then hundreds more. Caitlyn shrieked in delight as she pressed her fingers in her ears, watching the fireworks while sitting on her Mommy's lap. Night had finally fallen, and the firework show was everything Kathryn remembered from her childhood. Patriotic music was coming from radios all around them that people had tuned to WAMU. The public radio station was broadcasting the U.S. Marine Corps band from the bandstand on the stage by the Capitol building, while the thundering explosions overhead shook the ground as they played.\n\nAs the firework show approached its climax, the Army added to the raucous noise, firing off cannons in time to the 1812 overture. When the show ended, people cheered furiously. In the silence left behind, the crowd of a half-million sounded almost puny by comparison.\n\nMegan packed up their picnic basket while Kathryn folded their blanket, and the trio started making their way through the press of the crowd to the Smithsonian Metro station. Parking in the District was out of the question on the Fourth, and they'd accepted that they'd have to put up with the crowds to wait for a subway train to take them back to Virginia.\n\nAs they slowly moved forward with the crowd through the turnstiles and down to the platform, Caitlyn reached the end of her endurance and started whining for Kathryn to pick her up.\n\n\"Baby, I can't carry you right now. I need you to walk, okay?\" Kathryn said. Being out in the sun all afternoon had taken more out of her than she'd thought, and she barely had the energy to shuffle forward in the line.\n\n\"Here Kat, take the basket. I can get her,\" Megan said, and scooped Caitlyn up, who promptly wrapped her arms and legs around Megan.\n\n\"Thanks Megs,\" Kathryn said as the next train pulled into the station.\n\nAfter they boarded the car, a pair of men offered their seats to them, which they gratefully accepted with nods of thanks. Caitlyn had her head on Megan's shoulder, arms still wrapped around her neck.\n\n\"She's sound asleep,\" Kathryn whispered to Megan over the clatter of the subway wheels as they sped under the Potomac River.\n\n\"We'll be home soon and get her in bed, easy-peasy,\" Megan said.\n\n\"Do you want to stay over?\" Kathryn asked. \"I know we're all exhausted. I'd hate for you to have to drive home from my place this late.\"\n\nMegan turned slightly to look at Kathryn. \"Really? I've never slept over when Caitlyn was home. Do you want me to sleep on the couch, or...?\"\n\nKathryn turned a little pinker than the sun had already made her. \"I think if we can get Cait up in her top bunk we can curl up together in the bottom bed. You can wear some of my PJs. Just no hanky-panky, okay?\"\n\n\"C'mon, give me a little credit. I'd love to stay over, thanks for the invite.\" Cait stirred on her shoulder and Megan said softly, \"Hear that Cait? Slumber party tonight.\"\n\nCaitlyn rubbed her cheek back and forth on Megan's shoulder, then sleepily said, \"Okay, Mommy.\"\n\nKathryn laughed. \"That's not Mommy baby, that's Miss Megs.\"\n\nCaitlyn sighed happily and said, \"'Kay, Mom-Megs.\" She wrapped her arms more tightly around Megan's neck and went back to sleep.\n\nMegan looked at Kathryn over the top of Cait's head with a huge grin. \"Did you hear that Mommy? It's Mom-Megs!\"\n\n~~ Tyson's Corner, Virginia, July ~~\n\n\"I loved that movie!\" Caitlyn exclaimed, as she skipped out of the latest Pixar film holding Megan's hand. The theater in the Tyson's Corner Mall has become a favorite destination for Tuesday's Megs Nights.\n\n\"I'm glad Pumpkin, I hoped you'd like it. Now, where should we eat?\"\n\n\"McDonalds!\" Caitlyn said.\n\n\"You always pick McDonald's. How about Chipotle?\"\n\n\"Their happy meal doesn't have a toy.\" Caitlyn said, very seriously.\n\n\"Okay, it's your choice. That's the rule on Megs Night. On Friday night I get to pick and we're going to go to the broccoli and spinach restaurant!\"\n\n\"Ewww, no!\" Caitlyn made a face while giggling.\n\nThey were soon seated in the food court, Caitlyn munching on French fries from her Happy Meal with one hand and with the toy in the other. In an unsurprising coincidence, the toy was of one of the main characters from tonight's movie.\n\n\"So, what was your favorite part of the movie?\" Megan asked. \"Was it when they kissed?\" she teased.\n\n\"Yuck, kissing's gross!\" Caitlyn giggled.\n\n\"I bet it was. I bet you liked it when they k-i-i-i-s-s-e-d!\"\n\n\"No, you like kissing!\"\n\n\"I do like kissing, in fact. You will too, someday.\"\n\n\"Ha! You like kissing! Mommy and Mom-Megs, sitting in a tree! K-I-S-S-I-N-G!\" Caitlyn chanted. Megan laughed and sipped her Coke. Caitlyn seemed delighted at herself and repeated the rhyme again.\n\n\"Hello, Caitlyn,\" Megan heard a voice say behind her. She turned to see Amanda, Caitlyn's grandmother standing there.\n\n\"Hi Gramma!\" Caitlyn said.\n\nMegan cleared her throat. \"Oh, hey, hi Amanda, how are--\"\n\n\"It's Mrs. Davis, Miss Winerock, if you please,\" she interrupted, her voice flinty.\n\nMegan bit down on a sharp retort. \"Of course, my apologies Mrs. Davis. How are--\"\n\nShe was interrupted again, this time by Caitlyn.\n\n\"She's not Miss Wimerot, Gramma, she's Mom-Megs!\"\n\n\"Is that so, Caitlyn?\" Amanda asked, her eyes never leaving Megan's.\n\n\"It's just a nickname,\" Megan offered weakly.\n\n\"Mommy and Mom-Megs, sitting in a tree! K-I-S-S-I-N-G!\" Caitlyn chanted again giggling.\n\n\"Caitlyn, stop!\" Megan turned and hissed at her.\n\n\"Caitlyn, tell your mother I said hello and that I'll be talking to her soon. Goodnight, Miss Winerock,\" Amanda said icily, then turned on her heel and stalked away.\n\nMegan looked down at the burger lying on the tray in front of her as her appetite vanished. \"Oh, shit,\" she breathed.\n\n\"You said a swear!\" Caitlyn said with delight.\n\nLater that night Kathryn was pacing nervously in her tiny living room. Megan had gotten Caitlyn home, through the usual bedtime routine, and had managed to get Caitlyn in bed and asleep before Kathryn had returned from her evening class, after which Megan filled her in on the encounter with Caitlyn's grandmother.\n\n\"Oh my god, oh my god, oh my god... This is a disaster!\" She said, nervously chewing on her thumbnail.\n\n\"Kat, it's going to be okay,\" Megan said, halfheartedly from where she tensely perched on the edge of the couch.\n\n\"How can you say that?!\" Kathryn hissed. \"If she stops helping with my tuition, I'll never finish school! I could be stuck working at the daycare for the rest of my life! With the student loans I've taken out to close the gap on our living expenses, I could end up on the street without that degree!\"\n\n\"Kat, I'll never let that happen. We were going to get a place together anyway at the end of summer, we can just--\"\n\n\"Just what Megan? Move in together? You'll finish law school and have a real career while I'm your kept woman? Your housewife?\"\n\n\"Kathryn, c'mon, that's not fair. I'd help you finish school if we have to, I wouldn't--\"\n\n\"I think you've 'helped' me enough tonight, Megan!\" Kathryn paused her pacing long enough to make air quotes, then resumed striding back and forth across the living room.\n\n\"Okay, I think you need to take a breath. Let's--\"\n\n\"Take a breath?! Don't tell me to fucking calm down!\" she said, her voice rising.\n\n\"Whoa, hey, I--\"\n\n\"Can you just go?\" Kathryn asked. \"I need to be alone, I have to figure out what I'm going to do. I have to think of contingency plans. I can't deal with us right now.\"\n\n\"Kat, this just happened, we have plenty of time to think this through together and--\"\n\nKathryn stopped pacing and held up her hand. \"Megan, stop. I'm asking you to go.\"\n\n\"Kat...\" Megan was at a loss for words. She'd had a slumber party stay-over with Kathryn and Caitlyn every Megs Nights since Independence Day, and had planned to stay again tonight.\n\n\"Just... just go Megan. Please.\"\n\nMegan stared at her for a long moment, then slowly stood up. \"Alright. I'll come by Friday for dinner like usual so we can talk more, okay?\"\n\n\"Fine,\" Kathryn said, hugging her arms around herself.\n\nMegan picked up her overnight bag from the floor next to the couch. She tried to kiss Kathryn goodbye, but Kathryn turned her head away.\n\n\"I'm really sorry, Kat,\" Megan said softly as she opened the door. \"It's going to be okay.\"\n\nKathryn said nothing. Megan nodded sadly, then pulled the door closed as she left.\n\n~~ Arlington, Virginia, August ~~\n\nMegan parked her Jeep on the street next to Kathryn's apartment building, grateful to find a space so close. Usually she had to drive around the block several times to find street parking.\n\nShe was nervous about how tonight would go. Kathryn had been virtually radio silent since Tuesday night. They usually exchanged dozens of texts during a normal day, but she'd gotten less than a handful of replies to her texts this week, most not more than a few words. She shifted the flowers that she'd picked up at Trader Joe's to her left hand so she could juggle the keycard Kathryn had given her out of her bag and swipe it at the door lock at the front of the building.\n\nThe door didn't open and the light on the security panel stayed red.\n\nShe tried a few more times, then figured that the magnetic strip had gotten screwed up, so she pressed the buzzer on the ancient intercom panel for Kathryn's apartment.\n\n\"Hello?\" came Kathryn's voice, tinny from the speaker.\n\n\"Hey, it's me. My card isn't working, can you buzz me in?\"\n\nThere was a pause, then the speaker came to life again. \"I'll be right down.\"\n\nMegan's heart sank into her stomach. There was no reason for Kathryn to come downstairs. She could have just pushed the button and opened the door. She waited uncomfortably until she heard the clatter of feet on the old wooden stairs and saw Kathryn through the glass of the security door. Kathryn pushed open the door but made no move to let Megan in.\n\n\"Hey Kat,\" Megan said, then waited, but Kathryn just looked at her. She had mascara tracks on her cheek, and had clearly been crying. \"Are you okay?\"\n\n\"No, I'm not okay.\"\n\n\"Can I come in so we can talk about it?\"\n\n\"She's trying to take Caitlyn away from me, Megan!\" she shouted.\n\n\"What?!\"\n\nKathryn held up a sheaf of papers and shook them at her. \"She's taking me to court to try and get custody of Caitlyn! She had Steve file a lawsuit to declare me unfit and take her away from me!\"\n\n\"That's ridiculous. They'll never be able to--\"\n\n\"It's not ridiculous, Megan! I'm a single mom, I barely have enough income to keep us in this apartment! I get food stamps, for Christ's sake! They could send her to the most expensive private school in Virginia and not bat an eye at the cost!\"\n\n\"We can fight this. We can--\"\n\n\"Do you really think it's going to help my cause to have my lover by my side in court?! How will that look?! How will that help me?!\"\n\n\"Kat, you need to get a lawyer, and--\"\n\n\"You don't get it!\" She stopped, closed her eyes and took a deep breath through her nose. When she opened her eyes, they were as cold as Megan had ever seen them. \"I need you out of my life right now. I can't deal with this and you at the same time.\"\n\n\"Deal with me? You need to... You need to deal with me? We're supposed to be partners. I want to support you, to help you.\"\n\n\"You've helped me enough. I can't do this right now. I have to go. Cait's upstairs by herself.\"\n\n\"But Kat--\" Megan said, desperately, but Kathryn stepped back and shut the door. Megan pressed her hand to the glass and watched Kathryn run back up the stairs. \"Kitty-Kat,\" she whispered.\n\n~~ Arlington County Courthouse, Arlington, Virginia, August ~~\n\nKathryn sat alone at the table in Courtroom H, with a pitiful little stack of papers in front of her. She'd spent the three weeks reading the lawsuit that Steve had served her with over and over, surfing the Internet, trying to research the best way to respond. She had no idea how this was going to go today. All she felt she could do was tell the judge her side of the story. She'd tried to assemble a financial plan, so she could show the judge how she might finish school without any help from Amanda should it come to that. It wasn't a plan so much as the very definition of wishful thinking.",
        "She looked up as Steve and Amanda walked in, accompanied by a man with a briefcase and a suit that probably cost more than her car was worth. Obviously, their lawyer. Steve wouldn't look at her as he took his seat at the opposite table. Amanda sat in the front row of the gallery, giving her an icy stare.\n\nKathryn shuffled through her papers for what must have been the tenth time, then checked her watch. Five minutes to go. She wanted to get this over with. She wanted it to not happen at all. She thought of Caitlyn, playing happily at the daycare without any clue of what was happening. She wondered if the judge ordered her taken away from her, how would it happen? Would she just have to hand her over to Steve that afternoon? Would she get a few days to say goodbye? She started to tear up.\n\nSomeone touched her arm. She jumped, and looked up to find a woman in her forties with a short, professional haircut and a business suit standing next to her table.\n\n\"Kathryn Hayden?\" the woman asked.\n\n\"Y-yes. Who are you?\" Kathryn pulled a tissue from her purse and quickly dabbed at her eyes.\n\nThe woman sat in the chair next to her, and set her briefcase on the table. \"I'm Mary Jane Stamford. You can call me MJ. This is going to be a little rushed, but we got stuck in traffic. I meant to be here a half-hour ago.\"\n\n\"What? What are you talking about?\"\n\nShe pulled a sheet of paper out of her briefcase and set it in front of Kathryn. \"I'm an attorney with Lampedo Women's Legal Services. I'm here to help you, if you'll let me. I just need you to sign this form authorizing me to represent you.\"\n\n\"But how...? Where did...? Wait... Lampedo?\" She turned in her seat to find Megan sitting in the back row of the gallery, the lone spectator besides Amanda. She was in a suit herself, but her hair was more mussed than normal and she had dark circles under her eyes. Her face was expressionless as she met Kathryn's gaze.\n\nKathryn turned back to the woman sitting next to her. \"You can just step in and do this? You don't know anything about my case.\"\n\n\"I know more than you think I--\" She paused and looked up as the bailiff entered the room. \"I'm sorry, we're out of time. Kathryn, I need you to trust me and sign this paper so I can help you. I won't let them take Caitlyn away from you.\" She held out a pen towards her.\n\nKathryn teared up again, then grabbed the pen and quickly scrawled her signature on the form just as the bailiff loudly intoned, \"All rise! The honorable Judge Oscar Hodges presiding.\"\n\nMJ took Kathryn's arm and gently pulled her to her feet as everyone else stood.\n\nThe judge took his seat and everyone sat, except for MJ and Steve's lawyer.\n\n\"Your honor, Wendell Pickety for the plaintiff.\"\n\n\"Mary Jane Stamford for the respondent, your honor.\"\n\n\"Objection, your honor. Respondent's counsel is not the counsel of record in this case,\" Mr. Pickety said.\n\nThe judge looked up, surprised. \"You're objecting to the presence of counsel, Mr. Pickety?\"\n\n\"Yes, your honor,\" Pickety said.\n\n\"O-o-o-kay. Miss Stamford?\"\n\n\"Your honor, I'm with Lampedo Women's Legal Services, with whom I'm sure you are familiar. My client has just signed the notice of my appearance as counsel of record, which the bailiff has just handed to your clerk. I apologize for the lateness of my notice. LWLS was just made aware of Miss Hayden's case last night. Mr. Pickety, here is a copy of the notice for your files.\" She handed a piece of paper across the aisle to Steve's lawyer. Kathryn was looking at MJ in shock. She was terribly confused at what was going on, but the apparent competence of this woman had taken at least some of the huge weight off her shoulders.\n\nThe judge looked over at his clerk, who gave the judge a thumbs up. \"Overruled, Mr. Pickety. Now, let's get to the issue at hand. We have before us a petition for a change of custody?\"\n\n\"Yes, your honor. The plaintiff is the biological father. He has not made claims previously, however the plaintiff has recently become concerned with the financial ability of Miss Hayden to care for the child, whereas the plaintiff has ample means available.\"\n\nWhile Mr. Pickety was speaking, MJ had started to pile up different stacks of papers from her briefcase on the table in front of her.\n\n\"Ms. Stamford, your response?\" The judge asked, then said, \"I'm sorry Ms. Stamford, I should have inquired. Do you need a continuance to familiarize yourself with the case, given you just started as counsel of record today?\"\n\n\"Thank you, your honor, but no, I am prepared to proceed.\"\n\nThe judge blinked in surprise, but nodded. \"Very well. You may proceed, Ms. Stamford.\"\n\n\"Your honor, the respondent appreciates the plaintiff's concern with the financial situation she is in. Everyone here naturally wants what's best for little Caitlyn which is why I am filing a counterclaim against the plaintiff for more than five years of unpaid child support.\" She lifted a folder of papers and held them out to the bailiff who took it to the judge, while she passed an identical folder to Mr. Pickety. He accepted it with a sour look on his face.\n\n\"What?!\" Amanda exclaimed, loudly, from her seat in the front row.\n\n\"Order,\" the judge said, mildly, taking the folder from his bailiff and opening it. \"Mr. Pickety, is it accurate that there has been no child support paid by the stipulated birth father for the entire life of the child?\"\n\n\"No, your honor, that is not accurate. The plaintiff has been assisting Miss Hayden for the past two years.\"\n\nThe judge frowned. \"I see. Do you have any formalized documentation of this arrangement?\"\n\n\"It's not a formalized arrangement per se, your honor. The family has been paying her tuition bill each semester. Miss Hayden has been giving the family a copy of her bill from the university at the beginning of each semester, then the family has given her a check made out to the school. This has amounted to a rather large sum. We can, of course, provide receipts.\"\n\nKathryn sank down in her seat. Things didn't seem to be going very well for her so far.\n\n\"Alright. Miss Stamford?\"\n\n\"Your honor, we will stipulate to the payments. At present time, Miss Hayden has received approximately thirty thousand dollars in tuition assistance from Mr. Davis' family.\"\n\n\"Okay, then I--\"\n\n\"Begging your pardon, your honor, I wasn't quite finished. The plaintiffs have been assisting with tuition, but additionally the respondent has to pay for books for her classes, which she is responsible for and can run into the hundreds of dollars per semester. In addition, she is providing housing, food and clothing for the child. She's been working in a daycare facility to provide income as well as a source of free child care while she attends school. None of the plaintiff's financial contributions have been to the direct benefit of the child. Accordingly, our counterclaim is asking for sixteen-hundred dollars a month in child support, a reasonable amount I think you'll agree. Since none has been paid for the entire life of the child, we are asking the court to award back payments for the sixty-seven months of Caitlyn's current age in the amount of one-hundred-seven-thousand, two-hundred dollars. However, we are generously willing to deduct the amount of tuition assistance granted to date by the family and settle for the balance of seventy-seven-thousand two-hundred dollars.\"\n\nKathryn's heart flew up into her throat and she stifled a surprised squeal.\n\n\"This is outrageous!\" Amanda snapped again from the gallery.\n\nThis time the judge rapped his gavel, as he barked, \"Order!\" with irritation in his voice. \"Mrs. Davis, I presume? You are not a party of record in these proceedings. If you can't keep your comments to yourself, I'll have you removed from the court.\"\n\n\"But she--\" Amanda started, but the words died in her throat as the judge fixed her with a steady glare. Mr. Pickety turned around to made a calming motion with his hand to Amanda, then turned back to the judge.\n\n\"Your honor, the plaintiff has additional concerns apart from the financial matters.\"\n\n\"And those are...?\"\n\n\"The plaintiff has recently been made aware that Miss Hayden has engaged in an inappropriate relationship with another woman. The plaintiffs feel that the child is in a harmful situation and request the child be removed to the custody of the plaintiffs.\"\n\n\"Inappropriate,\" the judge said. \"How so?\"\n\n\"Well... it's with another woman,\" Mr. Pickety said, gesturing vaguely, as if the point should be self-evident.\n\n\"Your honor, if I may?\" MJ said. At the judge's nod, she continued. \"There is nothing, nothing, inappropriate about the relationship between Miss Hayden and her girlfriend, Miss Megan Winerock. The couple are in a loving relationship, and have never been inappropriate with each other in the presence of the child, a fact that I'm sure both Miss Hayden and Miss Winerock would be happy to testify to under oath if you would so require. In fact, Miss Winerock is here to--\"\n\n\"They're homosexuals!\" Amanda barked out. \"My granddaughter shouldn't be around such perversity!\"\n\nThe judge slammed his gavel down, the sharp report stunning the courtroom. \"Bailiff, remove Mrs. Davis from the courtroom. And if she says one more word, don't take her out to the hallway, take her to a cell for contempt!\"\n\nAmanda stood and opened her mouth to protest. \"But--\"\n\n\"One... more... word!\" The judge said, staring her down.\n\nAmanda shrank from his stare. Mr. Pickety turned and murmured something to her. She glared at Kathryn, but then meekly turned and walked out as the bailiff took her arm.\n\nMJ filled the silence that had fallen over the courtroom \"Your honor, I would like to note how outrageous the bigotry on display here is! Obergefell v. Hodges made gay marriage the law of the land.\" MJ glanced down at a paper in front of her. \"Further, under Virginia state code sixty-three point two, dash twelve-hundred, a gay spouse has the absolute legal right to adopt and/or be a guardian to a partner's child should she so wish, a desire that Miss Winerock has expressed to me personally on several occasions.\" Kathryn stared up at MJ in shock, then turned back to look at Megan, who still had an unreadable expression on her face.\n\nMr. Pickety tried to rally. \"Your honor, Miss Winerock is also a bartender, which isn't the best example for a young--\"\n\n\"Your honor,\" MJ interjected, \"Miss Winerock is a paralegal at my firm, in addition to having a second job as a bartender, which is currently allowing her to put herself through Georgetown Law school. She's the most competent paralegal we have. She does better work than several of our lawyers, which is not a disparagement on them but a testament to her work ethic, intelligence and integrity. She is currently in the top ten percent of her class at Georgetown. The founder of our firm has personally expressed to me her fear that Miss Winerock might leave us when she passes the bar to make a literal pile of money at any firm that would be lucky enough to hire her away from us, as she is one of our most valuable employees.\"\n\n\"But--\" Pickety tried to interject, but MJ was on a roll.\n\n\"Additionally, your honor, while we had not planned to raise issues of character at this proceeding, since the plaintiff has seen fit to disparage my client's character and the character of Miss Winerock, we would like the court to take notice that the plaintiff is currently unemployed. Further,\" she lifted another stack of papers to hand to the bailiff, \"a search of Lexis-Nexus has shown the plaintiff has had three DUI arrests in the last four years, all of which have somehow managed to be taken care of in pretrial diversion programs. I'll note that it is practically unheard of for a three-time repeat offender to be put in a diversion program after a re-offense, much less after having re-offended twice and I should like to know how that particular privilege was accomplished.\"\n\nKathryn looked over at Steve in shock. She knew he drank a lot but had no idea that his drinking had gotten that out of control. Her head was spinning at all the turns that her case had taken in the short time since MJ had sat down next to her.\n\n\"Miss Hayden has been raising Caitlyn with primary custody, on her own, for five years, while managing a job, and while taking a full course load at her nursing school for the last two years. The plaintiff has only deigned to assist with her tuition, nothing else. Accordingly, we ask the court to find the petition to remove the child from her custody to be without merit, and that she retains sole legal custody, and further ask for judgement in favor of my client for unpaid child support.\"\n\nThe court fell silent for a moment. The judge looked thoughtfully at Kathryn, then said \"Mr. Pickety?\"\n\nMr. Pickety looked stunned by the verbal assault he'd just received. \"Your honor, uh... I, uh... I believe we've stated our case.\"\n\n\"Then I find the petition to change the custody arrangement to be without merit and dismiss it as such. As to the child support request, Mr. Pickety, I'll give you some time to read and respond to the respondent's counterclaim. We'll reconvene on... Barb, what's the next free spot on my docket?\"\n\nHis court clerk looked at her computer and said \"Tuesday, October Twenty-Fifth, Ten-Thirty A.M. your honor.\"\n\n\"Tuesday, October Twenty-Fifth it is. Briefs to be submitted to my clerk two weeks prior. We're done.\" He rapped his gavel and stood.\n\n\"All rise,\" the bailiff intoned as the judge left the courtroom.\n\nMr. Pickety quickly gathered his papers and strode out of the courtroom, his face red, while Steve slumped in his chair looking embarrassed.\n\nKathryn ignored them. She looked to the back of the courtroom and found that Megan had vanished. She turned back to MJ.\n\n\"How did you--\"\n\nMJ patted her arm. \"This is what my firm does, Kathryn. I'll help you from here on out. I don't think we'll be in court more than once or twice more, and I'm pretty confident we'll get you that money too.\"\n\n\"But I mean, how did you just show up and have all that ready? How did you know about Steve's DUI's? How did you have that big pile of papers ready for the child support request?\"\n\n\"Megan's been working on this for the last couple weeks, staying in the office after work almost every night until midnight, writing briefs, doing research. What I told the judge was no lie, she does better trial prep work as a three-L than most of the lawyers at our organization. She wouldn't tell me what she was working on, but then she brought the whole pile to me last night and called in all the favors I owed her for all the times she's saved my bacon with last minute research. She asked if I'd come in this morning and represent you, which I was happy to do. We spent most of last night reviewing your case together. This is what we do, after all.\"\n\nKathryn looked to the empty seat where Megan had been. \"She told you she wanted to be Caitlyn's mom?\" Not for the first time, she felt shame at how she'd cut off communication with Megan ever since she'd been served with the custody suit.\n\n\"You're almost all she talks about when her personal life comes up, you and Cait. You guys are lucky to have each other.\" She looked to the back of the courtroom. \"Where'd she go, anyway?\"\n\n\"I guess she had a thing,\" Kathryn whispered.\n\n\"Well, here's my card. Give me a call in the next week or two and let's set up a meeting for us to go over what we need to do for your next hearing. And seriously, don't worry too much. They're not going to take Cait away from you. We've already won that today. They might appeal, but it won't go anywhere. The next big thing is to get you that child support, okay?\"\n\n\"Okay... MJ, I just, I... I can't thank you enough.\"\n\n\"Thank Megan, she's the one who did all this.\" She pointed at the stack of papers she'd been shoveling back into her briefcase. \"I swear to god, I've never seen so much prep work done for one case. She wrote up four other counterclaims for possible arguments they might raise.\" She stood up. \"It was nice to meet you Kathryn. I'm sorry, but I have to run. I have another hearing upstairs.\"\n\n\"Nice to meet you too,\" Kathryn said, as MJ left. She continued to sit at the table, stunned.\n\nShe looked over and saw Steve still slouched in his chair, looking at her.\n\nKathryn looked away, then gathered her things. As she stood, Steve did as well.\n\n\"Hey, Kathryn,\" he said.\n\n\"Steve,\" she replied frostily, and started to walk out.\n\n\"Hey,\" he called after her. \"Listen, I'm not going to let mom fight you on the child support stuff. I, uh... I think I should apologize for this whole shit-show. It was all mom's doing. And this custody thing is over. I'll see to it.\"\n\nKathryn stopped walking and turned, disbelief on her face. \"Really?\"\n\n\"You're a better mom than I could ever be a dad. I know that from how awesome Cait is. I know I'm a fuckup.\" He shoved his hands in his pockets.\n\n\"Amanda will never pay that child support willingly,\" Kathryn said.\n\n\"She doesn't have to. I have my trust fund from dad's estate. I'll get you a check by next week if that's okay, and we can set up an automatic transfer to your bank every month. I can afford it. I'm... I'm sorry I haven't been there for you and Cait like I should. Just... just don't take away my visitation with her, please?\"\n\nKathryn blinked at him. \"I don't want her around Amanda anymore.\"\n\nSteve looked thoughtful. \"I know me saying this must seem out of left field. Pickety is mom's lawyer and I've always thought he was kind of a dick. I'm sorry he tried to trash you and... what's her name again? Megan?\"\n\n\"Yes, Megan.\"\n\n\"Does she make you happy?\" he asked.\n\nHer breath caught in her throat. She wasn't sure if Megan would ever speak to her again. \"She makes me very happy.\"\n\nHe looked sad. \"When Cait comes to visit, that's about the only thing in my life that makes me happy these days. Please don't take that away from me. I'll get my own place if that will make a difference.\"\n\nShe walked closer and put her hand on his arm. \"Steve, if you really mean all that, I don't want to take her dad away from her, but you should really get some help. With your drinking, I mean. I can't be worrying that you might drive drunk with her in the car sometime.\"\n\n\"I would never do that!\" he said, vehemently. \"Never, Kathryn.\"\n\nShe looked him in the eyes for a long moment. \"Then get some help for yourself, okay?\"\n\n\"Okay,\" he said, his voice rough. \"Tell Megan that I'm sorry that my lawyer is an asshole and tried to trash her like that in court. She's lucky to have someone like you. And I'm sorry that I was a fuck-up when we were together. When you needed me... you know, when you were pregnant... I'm sorry I ran out on you. Let me know if you need anything.\"\n\nShe looked around the courtroom, her head spinning. Absolutely nothing had gone the way she'd thought it would today, and it had all been for the better. All except... She looked back to where Megan had been sitting.\n\n\"Actually, you could do me a favor, if you're willing,\" she said, \"Could you take Caitlyn out to dinner tonight? She loves the Lost Dog Cafe.\"\n\n~~ Arlington, Virginia ~~\n\n\"Refill guys?\" Megan asked.\n\n\"You know it, Megs,\" Eddie said. John nodded in agreement and lifted his empty glass.\n\nMegan got two fresh glasses from the freezer and pulled two pints, setting them in front of her regulars. \"C'mon. Coasters, guys. How many times do I have to tell you?\" She went down the bar, refilling empty drinks as needed, then checked on the tables, taking a couple of food orders. It was busier than usual for Friday night. She was grateful for the distraction, and happy that Andy had asked her to cover his shift. The hurt was still raw, the look in Kat's eyes as she'd shut the door on her still fresh in her mind. She was fairly certain it was over between them, and not just because of what Kat might want.",
        "Still... She ached, remembering the look of joy and relief on Kathryn's face this morning in the courtroom. She'd wanted to talk to her afterwards, but once the judge had denied the custody petition, it turned out she hadn't been ready to face her.\n\nShe went into the tiny kitchen in the back. \"Hey Julio, hanging in there, mijo?\" she asked her cook.\n\n\"Busy night, hermana\" he said, sweating over the grill. \"Whatcha got?\"\n\nShe set her order slips in the clip above the food window. \"Table six, chicken nachos, fried cheese and two dozen wings, extra hot. Couple on the bar top, two bacon burgers, both medium with the works and fries.\"\n\n\"You're killing me, Megs,\" he said good-naturedly, as he set two cheesesteaks, the plates piled high with fries, in the window for her to take.\n\nShe went back out of the kitchen, delivering the sandwiches to one of the tables, then checked her customers along the bar top again. Everyone was okay on drinks, so she bent over the sink and started washing dirty glasses trying to catch up on her side work. She sensed someone approach the bar across from her.\n\n\"What can I get you?\" she asked, without looking up from the sink.\n\n\"A second chance,\" she heard a voice say.\n\nShe jerked her head up to find Kathryn standing across the bar from her, biting her lip, with a pensive look on her face.\n\n\"Kat,\" Megan said, stunned. \"What are you doing here?\"\n\n\"Megan, I'm so sorry. I need to... I have to apologize.\"\n\nMegan stared at her, her face turning hard as she remembered Kathryn's words to her.\n\n\"I was so scared. I thought I was going to lose Cait. I thought...\"\n\n\"Kat...\" Megan said, sighing and looking away. \"Maybe we should just cut our losses.\"\n\n\"No Megan, no, please...\" A tear ran down her cheek. \"I'm sorry, I was wrong to push you away.\"\n\nMegan leaned forward and kept her voice down, checking to see if any nearby customers were eavesdropping. \"Kat, you're clearly not ready to accept who you are yet. If you were, your first thought when this shit went down wouldn't have been to throw me away as if I was a liability to you. I wanted us to be a family. I wanted to fight for you. You just saw me as the lesbian that Amanda could use against you.\"\n\n\"You're right, I did. And I was wrong! I did because I was scared, but I've never been more wrong in my life. I wanted us to be a family too, I still want that! Please, give me another chance!\"\n\nMegan didn't say anything, she just leaned down and started washing glasses again.\n\n\"Why would you do all that work on my case and get MJ to come represent me if you didn't want to be with us?\" Kathryn asked.\n\n\"Because I love Caitlyn and I didn't want her to lose her mom!\" she said in a hard voice, \"The fact you'd even ask me that...\" She looked up and said, \"How do I know next time you get embarrassed that you're with a girl you won't ditch me again, huh?\"\n\n\"What do you need, Megan? How can I show you how much I want us to be together? How much you mean to me?\"\n\n\"Nothing comes immediately to mind,\" Megan said, folding her arms and looking away. \"Hang on, I have to help these guys.\"\n\nShe went down to the end of the bar where a couple had just sat down. They ordered a pitcher of beer. Megan pulled two glasses out of the freezer and set them on the bar then started filling a pitcher from the tap, her mind racing. What did I need from Kat? Was there anything that could fix--\n\n\"Hey!\"\n\nMegan jumped, almost dropping the pitcher, as Kathryn's shout rang out through the bar. She spun her head to see Kathryn standing on top of the bar, looking down at her.\n\n\"Everyone shut up!\" she yelled again. The crowded bar fell silent except for the music of the sound system. Dozens of pairs of eyes were on Kathryn as she stood over everyone. Julio came through the door from the kitchen and opened his mouth to yell at Kathryn, but Megan caught his eye and shook her head.\n\n\"Kat, what the hell?\" she hissed.\n\n\"I want everyone to hear this!\" She looked around the room as she pointed at Megan. \"See that woman there? I love her! I may have screwed up one of the best things that's ever come along in my life, but I just want you all to know, everyone here, that I love her! She's smart, she's beautiful, she's sexy, she's funny, and she loves my little girl like she was her own! She's as good a mom to my daughter as I am, and Cait thinks the world of her, and she asks me every day when her Mom-Megs is coming back and all I can tell her is that I hope it's soon!\" Tears had started running down her cheeks as she turned back to Megan. \"Megan, I love you, and I don't care who knows it. I want everyone to know it. As long as you know it too.\"\n\n\"Kat, I--Shit!\" she exclaimed, as the pitcher she'd been filling overflowed, covering her hand with beer foam. She shut off the tap, shaking her dripping hand off while she reached for a bar towel. She wiped her fingers as she walked towards Kathryn. \"I don't... I don't know what to say.\" She was acutely conscious that everyone in the room was looking at her.\n\n\"I don't care, Megs. You don't owe me anything. I just needed to say it. I needed you to hear it. I needed to tell you that I was wrong and I'm sorry. And that I love you.\"\n\nNobody in the bar moved. Megan looked up at Kathryn for what seemed like an eternity. Then she dropped the towel, put her foot on the edge of the ice bin, jumped up onto the bar and crushed Kathryn in an embrace as the bar exploded into hoots and cheers.\n\nKathryn, buried her face in Megan's hair and whispered in her ear, \"Megs... I still can't tell you if I'm one hundred percent heterosexual or homosexual or bisexual or what, but I know one thing for certain.\"\n\n\"What's that Kitty-Kat?\"\n\nKathryn pulled away just enough that she could look Megan in the eyes. \"I'm a hundred percent Megan-sexual.\"\n\nMegan laughed, and then kissed her.\n\n\"Hey, Megs!\" Eddie yelled at her as the crowd started to settle down.\n\n\"What?\" Megan turned her head toward him without letting go of Kathryn.\n\nHe pointed down at Megan's canvas high tops on the bar, trying to hold back a laugh. \"Use a coaster for Chrissake. How many times do we have to tell you?\"\n\n~~ Epilogue - Potomac, Virginia, May ~~\n\nThey couldn't have asked for nicer weather. It was a sunny and warm spring afternoon, with the lightest breeze blowing, the wind ruffling Megan's shaggy hair as it blew through the nature preserve that overlooked the Potomac River.\n\n\"I still can't believe how beautiful you look,\" Megan whispered, out of the corner of her mouth.\n\n\"Focus, Megs,\" Kathryn whispered back nervously.\n\nTheir officiant smiled at both of them before continuing to read from the small book she held.\n\n\"A family is a work of art, built by two artists working together with a common vision. Megan, Kathryn, you have brought the pieces of your work of art that is to be your family together, and today you are joining those pieces with the bonds of love.\"\n\nKathryn sniffed, and dabbed at her eye with the silk handkerchief she was holding in her free hand, clutching a small bouquet of red tulips in her other. Her long, white silk dress shone in the sun. Megan, resplendent in a matching dress and holding a matching bouquet, smiled at her. Caitlyn stood between them holding a single red tulip, in a pretty white lace dress of her own, complete with pink silk ribbons in her hair and gleaming white patent leather shoes.\n\n\"Do you, Kathryn Alice Hayden, take Megan Ren\u00e9e Winerock to be your wife, to love, cherish and support, so long as you both shall live?\" the officiant asked.\n\n\"I do,\" Kathryn said, the slightest quiver in her voice.\n\n\"And do you, Megan Ren\u00e9e Winerock, take Kathryn Alice Hayden to be your wife, to love, cherish and support, so long as you both shall live?\"\n\n\"You bet I do, Kitty-Kat!\" Megan said with enthusiasm, bringing a soft chorus of laughter from the crowd of friends and family looking on.\n\n\"And do you, Megan Ren\u00e9e Winerock, take Caitlyn Alice Hayden, to be your daughter, to love, cherish and support, as though born of your body, so long as you both shall live?\"\n\nMegan looked down at Caitlyn and they beamed at each other. \"I do, for the rest of my life Pumpkin.\" She'd signed the adoption papers earlier that morning with Steve's blessing.\n\n\"And do you, Caitlyn Alice Hayden, accept Megan Ren\u00e9e Winerock to be your mother, to love and cherish her always?\"\n\n\"She's my Mom-Megs!\" Caitlyn exclaimed, to more laughter.\n\n\"Then by the powers vested in me by the state of Virginia, I declare you lawful spouses, and family. Ladies and gentlemen, may I be the first to present, Mrs. Kathryn Hayden, Mrs. Megan Winerock and their daughter, Caitlyn Hayden!\"\n\nThe onlookers erupted into applause and cheers as Megan stepped forward to kiss Kathryn, then leaned over to scoop up Caitlyn in her arms so the three could share a hug.\n\n\"I'll love you always, Megs,\" Kathryn said, through tears.\n\n\"Back atcha, Kitty-Kat,\" Megan said, then leaned forward to kiss her bride again.\n\nCaitlyn giggled, then chanted, \"Mommy and Mom-Megs sitting in a tree! K-I-S-S-I-N-G!\"\n\nThe End\n\nHere endeth this story of Cait, Kat and Megs. Thank you for reading, friend. This might be my favorite thing I've ever written, and I hope you had half as much fun reading it as I did while writing it.\n\nIf you are hungering for more of Kat and Megs, and you haven't read my series Wheels In Motion, there's a lot of juicy flavor of these characters I've left for you there, so go check it out if you are hankering for another glimpse of their little family.\n\nKathryn and Caitlyn's cram-berry relish\n\n1 bag of cranberries\n\n1 large apple\n\n1 large orange\n\n1 cup of sugar\n\n1 small box of raspberry Jell-O\n\nQuarter and seed the apple and orange. Finely chop the apple, orange and cranberries in a food processor (with the peels!)\n\nThoroughly mix the sugar into the fruit in a large bowl. Cover and refrigerate overnight (Kat was running behind.)\n\nMix the Jell-O powder with one (1) cup of boiling water and stir until dissolved. Thoroughly mix liquid Jell-O into the fruit. Re-cover, and refrigerate 4-6 hours.\n\nEnjoy! Shout out to my grandma for the recipe!\n\nI have, of course, updated the Set List playlist with the songs from this story. You can find the link in the CONTACT tab of my Author page."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "christmas",
        "gay love story",
        "gay romance",
        "happily ever after",
        "holidays",
        "lesbian",
        "lesbian romance",
        "love story",
        "winter holidays 2019",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/twas-the-night-before-ch-02"
}