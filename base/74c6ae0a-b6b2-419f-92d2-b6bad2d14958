{
    "title": "The Cursed Tattoo Pt. 04",
    "pages": [
        "How Time Flies\n\nOver the next few weeks, a routine was formed. The girls came and went as they pleased but most nights there were several of them around at Ryan's place. Claudia came over only every other day and never spent the night. Annie convinced Claudia to smooth over Ryan's resignation. Claudia eventually even arranged a fairly nice golden handshake for him.\n\nRemy the tattoo artist was the first to move in. She got rid of her old apartment. Lizzy the clerk was soon to follow, and Annie from work eventually made the same choice. Most of their old stuff went to storage.\n\nEleftheria was making some progress in her research. She started sending Ryan out on \"missions.\" This usually meant going to the library and borrowing some books. She came with him the first few times but eventually he was allowed to go alone. Ryan always wore his gloves and took safety very seriously. If people asked, he told them he had burned his hands in the kitchen, not badly, but just enough to need the gloves for a day or two.\n\nEllie didn't spend all her time just standing in the corner, either. That's just how she was at home when she did the research, just standing there, completely still, like a mannequin stolen from a museum diorama. Otherwise, she would come and go at all hours. Everyone assumed she was spying on all of them.\n\nAt different points, Ryan and the girls all had their little freak-outs about how to face the fact that the supernatural was real. None of them dared challenge Eleftheria too much, however, and when asked, she would completely stonewall them, refusing to reveal anything more about her origin or the origin of the curse. Over time, the lesser beings had to just find a way to tolerate not knowing.\n\nThe girls had their reasons for keeping the curse a secret. Mainly, they dreaded losing the supply they were addicted to. Ryan, on the other hand, was quite happy with his new situation, so he didn't want to rock the boat too much, either. For now, most of Ellie's secrets would have to remain secret.\n\nAfter moving in, the girls still held on to their social lives. There was a steady rotation of who was around at Ryan's place and who was away. Ryan had a hunch the girls had created some kind of a schedule. None of them were totally comfortable with the idea of group sex, yet. Remy seemed the most eager but she was overselling it.\n\nOn a few special occasions, Ellie allowed Ryan to go out with the girls, but she would always come with them. These dates were by special request only and the girls had to beg long and hard for Ellie to let them go. Ryan got introduced to Annie's friends, and to Remy's. On Lizzy's birthday, Ryan and the girls even went out as a group.\n\nBy his own math, Ryan would have to magically fuck about two and a half girls per day. He could have easily done more, but all five of them were almost never around at the same time. The girls preferred individual encounters but evil Ryan took every chance he got to double down. Especially with Claudia. He loved to see her wake up in a pileup. None of them, of course, complained afterwards. They were always blissfully radiant, all of them.\n\nWhat follows are a few highlights from this age of development and change.\n\nEllie's Etiquette Lesson\n\nClaudia was lying on the bed, considering the paradox of her current sex life. Ryan was in the shower. He had taken her ass again, but Claudia was getting used to it. It was always joyous and lovely when it was happening. And then, the afterglow would carry her for a while. After that -- often when she was back home already -- she started to feel sore. But now, it was getting easier for her to take him. This time, she hadn't bothered fighting him so he had been somewhat civil with her.\n\nWhenever he touched her, and however he touched her, it always felt so good. He really could do whatever he wanted to her. Claudia sometimes considered giving in, acting like the other girls do. She knew Ryan was harder on her than them because she resisted him, but she wasn't ready to give in.\n\nRight now, though, she was high on contentment and satisfaction. In this blissful state, she dared to admit to herself that she could not fight forever. The curse was too strong, the happiness too much. If this went on forever, she knew she would eventually surrender. That time, though, was not here yet.\n\nRyan came out of the shower. He smiled at her. Claudia was lying on her side, her hip in a beautiful curve. She was happy to see him. There was nothing special about him. He wasn't fat, or skinny, or strong, not that old or young, he was just a man -- the cock was nice, though. Yet, in a small place, deep down in her soul, Claudia already wanted him again. Her body knew he was the source of her happiness.\n\nPhysically, Claudia was a slave already. It was her mind that wanted to fight. Not now, though. Now she was just happy. Her rebellion would continue later, once her head cleared. Right now, if he wanted to go for round two, she would flip around and wave her sorry ass at him like a cat in heat. The mere thought of it made her wet again. Luckily, it would take a day or two for her to get really desperate.\n\nRyan put on some clothes and left the room. Only after he was gone, did she get up. One more spurt of his cum oozed out of her puffy asshole. She had tasted some of it while he was in the shower. It was one of those things Claudia completely compartmentalized. She refused to think at all about how nasty it was, what she was doing. Right now, because of the happiness, she didn't mind.\n\nBut she still didn't want Ryan to ever see her doing something like that. It would give him too much power. Later, when her head would be clear, she would absolutely block herself from thinking about how much she loved licking that stuff up, even if it had been in her ass first.\n\nShe twirled her finger around her anus to gather up the cum drop. It felt like her ass wasn't even going to get sore this time. She smelled her gooey finger and then sucked it clean on her way to the shower. The magic cum was what she was here for, after all, so she had to savor every drop.\n\nAfter Claudia was done, she went to the living room, wrapped in her towel. Luckily for her, Ryan wasn't there anymore. Ellie must have sent him out. This meant Claudia could go into the girls' room and put on some fresh clothes. She didn't want Ryan to know she kept some of her clothes there, too. She didn't want him to think she was the same as the others.\n\nSpeaking of the others, all of them were present. Claudia didn't usually like to hang around too long, before or after. She would say hi, but head home. Before Claudia got to the door, however, Ellie started to speak.\n\n\"Hear me, ladies. I have gathered you all here because there is a matter I must bring to your attention.\"\n\nEveryone turned to look at her. She walked to the center of the room.\n\n\"Like I've already told you, I want this house to be a safe place for you all -- a second home, if you will -- or just home, for some of you. Therefore, I have decided there is a need for us to set up some rules of conduct for you.\"\n\n\"This doesn't really concern me, does it? I was just about to head out, so...\"\n\n\"Nonsense, Claudia Chandler. The reason we are doing this right now is especially so that you can join us. You ladies are all equals here. And this is a safe place for you. Therefore, I do not want to see any sneaking around, any staring and judging, or any gossip behind other's backs. I have devised for you something you might know as a 'group building exercise,' that will free you from your fears and doubts.\"\n\nThe ladies were curious, some dubious.\n\n\"We will begin by disrobing,\" Ellie said.\n\n\"Oh, come on, I just put on my clothes,\" Claudia said.\n\n\"You will all do this for your sisters here. This is for your common benefit, and there will be no dissidence.\"\n\nEleftheria looked around the room. Just as she had feared, the women were ununified. That is how the weak fall -- alone. Here, she needed to see unity and strength. Se flicked a clasp at the shoulder of her tunic and the whole garment fell to her feet. She stood proud and tall, her hand on her hip.\n\n\"Shame is undignified. Shame is how the meek are oppressed. Never be ashamed of anything. From now on, within these walls, shame will not be tolerated. Off with the clothes!\"\n\nRemy looked around the room. The other girls didn't know what to do. Remy had known Eleftheria was hot -- she had seen glimpses of her body under that flimsy dress -- but god damn was she hot. Not only perfect, but also so proud and confident. This was Remy's kind of party. She whipped off her own top and dropped her skirt, leaving her naked except for thigh high socks. She stretched and wiggled a bit. \"Well, come on ladies, I know for a fact you all have a lot to be proud of, so let's see it,\" she said.\n\nRemy walked over to Lizzy and grabbed them hem of her hoodie. Lizzy got the message and let Remy undress her. With a sigh, Lizzy took off her tee shirt, too. Her bra was soft and simple, but the cut was sexy. While she wiggled out of her black jeans, the other women got going, too.\n\nClaudia was wearing sports clothes, she looked like she was heading for the gym. It was easy for her to take it all off again. Doctor Melinda was wearing a red dress. Once she dropped it, she revealed a sexy set of cream-colored, lacy lingerie.\n\nAnnie was the last to go, but after some demanding stares from Ellie, she relented. She lifted her poncho-like casual wear sweater over her head and dropped her bottoms. Annie loved that casual wear. To her, it was sex-with-Ryan clothing.\n\nOnce everyone was naked, Ellie told them to gather in a circle around the coffee table. She gave everyone a good, long stare, from head to toe. \"Ladies. Look at each other. This is who, and what, you are. This is what human beings look like. There can be no shame in that.\"\n\nEveryone looked around, some more gingerly than others. Remy was having a blast.\n\nLizzy, for her own reasons, was genuinely curious to see everyone, too. She wasn't into it sexually, but she was fascinated by taboos. It was interesting to see people reacting to unusual situations. Melinda is blushing, and maybe not just from shame. Could she be a naughty girl, secretly?\n\nClaudia stood proud, unconsciously trying to match Ellie's poise. Annie was the shyest. She tried to cover herself with her arms but Ellie commanded her to stop it.\n\n\"Tell the group what you see,\" was Ellie's general command for everyone. There were some general compliments. Remy was the most vocal and the most explicit. The consensus was that everyone was very beautiful and no one had anything to be ashamed of. They took turns. Everyone had to compliment everyone. Lizzy liked Remy's tattoos, Annie her eyes. Remy in turn loved Annie's boobs. Claudia kept her compliments more abstract.\n\n\"Claudia, are you ashamed of your body?\" Ellie said.\n\n\"No! Of course not,\" Claudia said. Her butt did still feel funny, though, but that wasn't her fault.\n\n\"Are you ashamed of the other women's bodies?\"\n\n\"No, I am not.\"\n\n\"Then compliment them. Were are here to lose shame. If you are not ashamed of looking at their bodies, then compliment them on the physical features you find beautiful.\"\n\nClaudia got with the program. Remy was easy to compliment, she was so tall and thin. Lizzy had a very nice waist because of how round her hips were, for such a petite girl. Melinda's eyes were gorgeous, almost hypnotic. They were smoky, like Jessica Rabbit's. Claudia even complimented Eleftheria's hair, even though the others hadn't included her in this little game.\n\nFor Claudia, the hardest person to handle was actually Annie -- not because she was not beautiful, but because Claudia was her boss. Annie was taller than her and her boobs were bigger, but she still had a killer figure. Everyone loved her at the office. Claudia had always pretended she was above jealousy, but if she could, she would swap bodies with Annie. A month in the gym, and she'd have that lovely thing as tight and toned as her own body was now.\n\nClaudia ended up relenting. She had no reason to hate any of these women. Even if they didn't want to fight Ryan the way she did, they were still her peers in this. She would make the effort to get to know them. She ended up complimenting Annie's smile.\n\n\"Next task: turn to the person on your right and touch a part of their body, any part,\" Ellie said.\n\nBefore anyone had time to air their protests, Ellie lead by example. She put her hand on Melinda's breast and gave it a squeeze. The gesture was comical, and could not be described as sexual. Melinda looked down at the hand and then she looked Ellie in the eye. Eleftheria's gaze was like an immovable object.\n\n\"See. Flesh is just flesh. Living in small confinements, your life will be easier if you are not afraid of each other. Getting touched will not kill you. Sharing a kitchen or a bathroom will not kill you. You will not die of shame from sharing a bed, or indeed, sharing a man. Go on.\"\n\nTo Melinda's right was Annie. Melinda put a hand on her hip and smiled at her. Annie turned to Lizzy and held her hands with both of hers. Everyone thought the gesture adorable. There was a general \"aw.\"\n\nLizzy turned to Remy. She hesitated, but before Eleftheria could accost her for delaying, she ran her hand over Remy's stomach, and then felt her navel piercing. Remy was happy to oblige, gently leaning into the caress with a grin on her face.\n\nWhen it was her turn, Remy knew exactly what she wanted to do. She turned to Claudia and licked her nipple. Claudia was horrified and instinctively slapped Remy. Based on her grin, Remy liked it. Everyone else gasped in horror.\n\n\"Claudia! That is not how this exercise works. Apologize,\" Eleftheria accosted her.\n\nClaudia was actually sorry, she hadn't done it on purpose. She did feel like Remy was somehow an extension of Ryan, though. She was the most eager of the girls, always pretending to be a literal slave for him. Claudia felt that Remy needlessly raised the bar for the rest of them.\n\n\"No, I'm sorry,\" Remy said. \"I broke the spirit of the task. It's about making us comfortable around each other, right, and that didn't help. I'm sorry, Claudia.\"\n\n\"No!\" shouted Ellie, scaring everyone. \"That is the total opposite of what we are doing here. The point of this exercise is most certainly not to learn what the other person likes, and then kowtowing around them. The point of this exercise is to be yourself, and do what you want, and let the other person adapt to you! Again!\"\n\nRemy took a moment to process that. For some strange reason, it seemed to almost make sense. Not knowing what would happen, she did it again. She lowered her lips to Claudia's pert nipple and sucked it in, along with the tip of her boob.\n\nRemy had had her eyes on those puppies for a while and she would have loved to have a girlfriend with boobs like Claudia's. Remy could not believe they were not fake. She rolled her tongue around, sucking gently, and then let go. Remy lifted her eyes to Claudia's. Remy couldn't read her, not yet, she didn't know her well enough.\n\n\"Thank you for slapping me, Claudia. I really do like you, as a person,\" she said, and stepped back to her place in the circle.\n\nClaudia was flabbergasted. The wet caress had felt nice -- in a nonsexual way, but still. Not to say that her nipple hadn't hardened, a little bit. For some reason, she really struggled to find a reason to protest. She had the right to her own body. It was not okay for a stranger to just take advantage of her like that. She should be angry. She should want to defend her rights out of principle, even if she didn't mind the violation.\n\nTwo can play this game, she thought. It's Ellie's game, so let's see how she likes to play it.\n\n\"Your turn,\" Claudia said, and pushed two fingers into Eleftheria's pussy.\n\nEveryone gasped in horror. Claudia instantly regretted her stupidity and she was fully ready to be struck down by lightning, or something. Ellie was the kind of person who would absolutely not take kindly to someone trying to challenge her authority. Her pussy was not completely dry, though.\n\nInstead of smiting her, Ellie just looked at Claudia, without any reaction. Claudia pulled back and returned to her spot, trembling like a schoolgirl.\n\n\"Well done, Claudia. You have understood the purpose of the exercise. Now, we will repeat in the opposite direction.\"\n\nHere it comes, Claudia thought, and prepared herself for a corporal punishment of some kind. Instead, Ellie just grabbed her breast, the same way she had done to Melinda. It was like she was grabbing a wet fish.\n\nClaudia was still confused when she turned to Remy, wondering what she should do to her. Then, she suddenly understood everything. Remy was not an extension of Ryan. She didn't exist solely to torment Claudia. No, Remy was just a crazy punk chick who liked to suck on other people's tits. Whether she did it because she was into girls, or because she just got a kick out of teasing people, didn't matter. Remy was not the enemy. She was just a human being who had been thrown into an impossible situation, and she was trying to make sense of it the best she knew how.\n\nThis woman was not Claudia's enemy. In fact, she was one of the only four people in this whole fucking universe who was on her side. Not on Ryan's side, that asshole had his own fucking issues. These four women here were the only ones who could even begin to understand her. They were the only ones she could even dream of trying to confide in. No shrink in this city would listen to Claudia complain about mind control sex magic, and how much she hated to love her curse. This was it. And these girls were all heroes for dealing with this situation as well as they did. Suddenly, she loved them.\n\nTears were streaming down Claudia's cheeks. She was sobbing. Before anyone could say anything, she stepped toward Remy and gave her the longest, deepest, most sincere hug she had given anyone since she was a child.\n\nRemy flinched in surprise but let the other woman hug her. Soon, she was hugging her back. She didn't immediately understand what had happened.\n\n\"I love you. I'm sorry I slapped you. I love all of you,\" Claudia sobbed. Everything clicked for Remy, too, and she understood what Claudia meant. She started sobbing herself. The rest of the girls hustled over and everyone joined the group hug. Everyone kind of understood what was happening and the full realization of it would hit them all at some point. The hug lasted.\n\nThis was not the point at all. Humans. Who could figure them out? Well, at least they are not afraid to touch each other anymore, Eleftheria thought. \"Ladies, break it up. Enough touching. I have one more lesson for you.\" She waited for them to settle back to their places. The sobbing had already ended and the last part of the hug had been warm and friendly.\n\nEllie gave them a speech about efficiency. Everybody do your part of the chores, everybody help everyone else. Drink from each other's cups. If someone doesn't finish a sandwich, someone else can eat the rest. Use each other's toothbrushes. More than one person can fit in the shower at once. The toilet can still be used for most things even if someone is in the shower. Sleep in the same bed, sleep in a pile. No bashfulness, no self-importance, and most of all, no complaining.\n\nThe list seemed a bit extreme to some of the ladies but they could all feel in their hearts that they were already headed for something like that, anyway.\n\nTheir last exercise was to stand in a line, and everyone took their turn to get down and kiss all the other's feet. The point was supposedly to prove that they were all subservient to one another, and no one was above anyone else. Remy had to take her socks off, but the exercise went surprisingly well. The girls were already beginning to share a strong bond and their mood had shifted.",
        "Eleftheria herself, of course, did not take part in this particular exercise. It seemed almost impossible for someone like her to ever grovel in front of anyone.\n\nWhen Ryan got home from the library, all he saw was the women naked, including Ellie, and Lizzy kissing Annie's feet. No explanations were offered to him.\n\nClaudia was tremendously happy it had not been her Ryan saw on the ground. She would do it for the girls, but never for him, she vowed.\n\nA House Call for the Doctor\n\nMelinda's house was at a suburb cul-de-sac. On the outside it looked like all the others but inside it was warm and lovely. It had three bedrooms and a garage. One of the bedrooms was used as a guest room and an office. Green grass surrounded the house and there was a mail box at the end of the driveway.\n\nMelinda was flustered. She had had every intention of going over to Ryan's the previous night. Then there had been an emergency at work. That meant she had been late to the repair shop, to drop the car off for a service. That meant she had been late to pick up the rental, which meant she had been very late to pick up Hannah from soccer. Melinda hadn't checked her phone so she hadn't known Hannah had already gotten a ride from a friend. By the time Melinda had gotten home, she had needed a little cry and a few glasses of wine.\n\nBy then, it had been too late to go to Ryan because Melinda didn't want to stay the night. She liked Ryan just fine. She obviously loved the sex. She loved the girls there, too. But more than that, she loved her daughter Hannah. If it wasn't for her, Melinda would probably be living with Ryan already. For Hannah's sake, though, she had to keep up appearances and keep living her old life like nothing had changed. She couldn't just sneak out on Hannah in the middle of the night, not even for Ryan.\n\nMelinda was chopping carrots, preparing dinner. Today had been another bad day for her. She really hated it when she had to go an extra day without Ryan. Tonight, she would have to go, no matter what.\n\nMelinda had an awesome relationship with her daughter. Hannah had just started college but she still lived at home. This was an arrangement both of them were happy with. It had always been just the two of them, ever since Hannah's father had left. Us girls, together.\n\nAs Hannah had gotten older, they'd become more and more like best friends, and not just mother and daughter. Their relationship had been built on trust.\n\nThere was no way Melinda could ever tell her daughter that mommy was a magical sex slave in a harem now, and addicted to magical cum. This was the only big secret Melinda had ever kept from her, and it killed her to do so.\n\nFor the sake of appearances, Melinda had kept inviting Bob over, once in a while. Hence the dinner tonight. Both she and Hannah brought boyfriends around, so as not to hide anything from one another. Now, it was getting more difficult for Melinda. She had no time to go on real dates with her old boyfriend anymore. Melinda had wanted to cancel this whole dinner but she knew this was her last chance to have Bob come over. Bob knew something was up and he was coming this one last time, just as a favor.\n\nEvery carrot she grabbed reminded Melinda of Ryan's cock. She was so horny for that fucking thing she could scream. She would have Bob over, but just for an hour. Then she would tell Hannah she forgot something at the office and go see Ryan.\n\nMelinda knew Hannah had noticed her being more stressed lately. Up until now, she'd managed to convince her it was all work-related. Whenever she really needed to spend a night with Ryan, she told Hannah she was going on a work trip. Otherwise, she always tried to come home for the night.\n\n---\n\nHannah was in her room, lounging on her bed. She was watching a makeup tutorial but not really paying attention to it. She was worried about her mother who had been acting weird for weeks now. Mom seemed happy, and if anything, had even more energy than usual, but something was going on.\n\nJust now, when Hannah had helped her with the cooking, she'd been all hyperactive and jittery again, almost like she had been popping pills or something. She got like that sometimes, but Hannah knew she wouldn't do something as banal as drugs. But then again, there was all that sneaking around.\n\nIf mom has a new boyfriend, why would she try to hide him? Maybe it's a girlfriend. Hannah chuckled, trying to ease her own worry. But even then, there would be no real reason for her mother to try and hide it. What bothered Hannah even more than what mom might be up to, was that she wasn't talking about it. They always talked about everything. Absolutely everything.\n\nA car pulled into the driveway. Must be Bob, Hannah thought. She looked out the window. Instead, she saw two complete strangers.\n\nOne was an ordinary looking guy, maybe in his thirties. He was wearing jeans and a jacket. The woman he was with, though, looked like a cover girl from that sports magazine with the bikini issue. She was a blonde, and as tall as the guy. She looked fit, too, and not just pretty. She was wearing a dress with a floral pattern.\n\nHannah herself had inherited her good looks from her mother. She was a bit taller than mom, and a bit slimmer, but the family curves were there. Hannah wasn't sure yet if being hot did more harm than good, but at least she knew she was beautiful. She knew some other girls, even really pretty ones, who had terrible body issues.\n\nThis new woman, though, was on a whole different level. The couple outside argued about something. The guy tried to make a call on his phone. Then they walked to the door.\n\n---\n\nThe doorbell rang. Finally, Melinda thought. Bob wasn't usually late. He must be really angry with me. Better get this over with.\n\nMelinda opened the door, but instead of Bob, she saw Ryan. Her knees trembled and her pussy gushed. \"Ryan? What the f... what are you doing here? This is my home, you can't be here.\"\n\n\"I know, that's why I've been trying to call you all night. You weren't answering your phone.\"\n\n\"What? Wait there,\" Melinda said. She started looking for her phone. It was usually in her purse but wasn't there now.\n\nRyan stepped in.\n\n\"Mom, who's this?\" Hannah asked, from the stairs.\n\nEveryone turned to look. Ryan went pale.\n\nNot the absolute worst reaction possible, Melinda thought. \"Hi honey. This is Ryan and Ellie from... from work. Uh, but they don't work at the practice, they just work in the building. Bob was sick so I invited them, instead.\"\n\n\"Oh, okay,\" Hannah answered, not that convinced. She walked up to the guests.\n\nMelinda winced and made the tiniest high-pitched squeal as her daughter shook Ryan's hand.\n\n\"Hi, I'm Ryan, nice to meet you.\"\n\n\"Hi, I'm Hannah, nice to meet you, too. What's with the gloves?\"\n\n\"Oh, I just burned my hands a little bit, they'll be fine in a few days.\"\n\nShe moved on to Eleftheria. \"Hi, I'm Hannah.\"\n\n\"Ellie.\"\n\nAfter the awkward introductions, Melinda had to arrange one more seat around the table. She went to look for her phone again and finally found it under her bed. Turns out, she hadn't been entirely lying when she told Hannah she'd invited Ryan and Ellie for dinner. Melinda had accidentally sent her invitation to the wrong person.\n\nRyan had called her and messaged her many times, asking if she was sure. Later along the timeline, the messages turned more concerned because she hadn't answered. Melinda could only blame herself for the whole mix up.\n\nThe dinner itself was pure hell for Melinda. She was randy like an animal and Ryan was sitting right there.\n\n\"So, what do you guys do?\" Hannah asked.\n\nRyan froze.\n\n\"We are employed in the field of private security,\" Ellie said.\n\n\"Wow, that sounds exciting. So, how do you know my mom?\"\n\n\"Like she said, our offices are in the same building.\"\n\nMelinda was relieved to see that Ellie was actually a very good liar. Ellie carried the conversation with Hannah. Meanwhile, Melinda herself had to stoop low. Desperate times called for desperate measures. Her gut wrenched from shame as she wiggled her foot out of her shoe. She pushed it into Ryan's lap under the table.\n\nRyan got startled and looked up at her. She tried to signal him covertly, but the man was clueless to her desperation. Melinda pulled her foot back and ripped her stockings at the bottom of the foot. She tried to do it as stealthily as she could. She extended her foot again and gave Ryan an annoyed glower. Melinda wanted Ryan to slip her foot under his shirt.\n\nInstead, the idiot took out his cock.\n\nFor a few seconds, Melinda was horrified, but then she didn't care anymore. As the sole of her foot burrowed into his soft, naked scrotum, the energy started flowing. It was a temporary solution, but it was enough to make her want to cry from happiness. Ryan gave her too much at first, but after a few seconds, he managed to tone it down. Melinda arched her back in pleasure.\n\n\"Mom, are you okay?\" Hannah asked.\n\nMelinda turned her motion into a stretch and her moan into a yawn. \"Yes honey, I'm just suddenly very tired.\"\n\nMelinda could feel Ryan getting harder under her foot. She couldn't stop herself from wiggling her toes. There was a hard, horrible divide between what she wanted to do and what she knew she should do. She gave a long, serious consideration to dropping a fork on the floor so that she could crawl under the table and just suck that fucking cock. There would be no stopping her then, and her life would be ruined, forever. Even worse, Hannah's life would be ruined.\n\nMelinda had to find a way to hold it together. She was at a loss and wanted to escape, so she did. She slipped her foot back into her shoe and got up. \"I need to go check on how the dessert is coming along.\"\n\nMelinda went to the kitchen. She opened the freezer door, but only to cool herself off. The dessert would be fine. She heard footsteps from behind. It was him.\n\n\"Are you okay?\" he asked.\n\n\"Why did you follow me?\"\n\n\"It thought you wanted me do something. To, you know, help you.\"\n\n\"Not while my daughter is in the house, you idiot. You're not supposed to be here. You were never supposed to even know about Hannah. How do you even know where I live?\"\n\n\"Ellie knows. She knows everything about everybody. Look, I only came here because I was worried. I knew you wouldn't just randomly invite me for dinner. I came because you wouldn't answer your phone. We thought something was wrong.\"\n\nHe stepped to her and put his hands on her shoulders. The energy flowed again. Melinda gasped.\n\n\"No, we can't do this here, please Ryan,\" she said.\n\n\"Well, just come with us. We can leave now, right?\"\n\n\"No. I haven't told Hannah anything. I don't want her to know anything about any of this. It's bad enough that you are here, I can't leave with you. Finish your food fast and just go. I'll come later.\"\n\nThe energy erased all of Melinda's worries. She had to use logic to figure out what she should want. Her emotions were no longer her own. The only thing she wanted, deep in her heart, was for Ryan to use her, and fill her. She'd been sinking toward him as they spoke and her lips were almost kissing his now.\n\nHe pushed her down to her knees and she yielded. Melinda's breathing was heavy and she hugged his leg as she rubbed her face on the front of his jeans. Her panties were soaked now. She was ready for him to take her. To hell with her life and her family, her lust was all that mattered.\n\n\"Oh, hi Ryan. Is my mom not here?\"\n\n\"You just missed her. I'm not sure where she went. I think she might be in the bathroom, or something. I don't know.\"\n\n\"Okay,\" Hannah said, and went back into the dining room.\n\nRyan had not pushed Melinda to the floor to take her, just to hide her from her daughter who had walked into the room. Melinda's hijacked mind just turned this apparent act of heroism into one more reason to want him even more.\n\n\"We can't do this here. This is wrong. This will ruin everything,\" Melinda whispered, as she opened his jeans and started jerking him off with her hand.\n\n\"Look, I hear what you're saying, but I'm also getting some mixed messages here.\"\n\n\"Oh, Ryan, what are you doing?\" she said, and then started blowing him.\n\n\"Stop, you're right, we can't do this,\" he said, but did nothing to stop her, either. He ran his fingers trough her hair and started meeting her with gentle pushes of his own.\n\nRyan turned, forcefully, and dragged Melinda with him, even though his cock was still in her mouth. Melinda's back was now against the kitchen island. She pushed her hands down her cleavage and twisted her own nipples. The big cock stretched her throat but there was no revulsion. It was not a foreign object. It was a part of her and it belonged where it was. The pleasure radiated from her face and spread all over her body, like heat.\n\nThe cock pulled out and Melinda's body knew to breathe. She didn't have to worry about things like that. Bittersweet longing filled her, she missed it already. Then it was back. She tried to say thank you. She could feel other points of contact all over her head and shoulders. They were probably Ryan's hands, touching her. Suddenly, the energy haze thinned. Something was happening.\n\n\"Are you sure you didn't see her?\" Hannah said.\n\n\"Yup, maybe she went to borrow sugar from a neighbor, or something,\" Ryan said. Melinda could feel his cock all the way in again. She pushed her fingers into her pussy.\n\n\"I'm sure she will be right back. Dessert is next, right?\" Ryan said.\n\n\"Yeah. Whatever. Are you into sports, too?\" Hannah asked. Melinda could feel the cock pull back, so she followed it with her mouth.\n\n\"What?\" Ryan asked, as if distracted by something.\n\n\"Ellie said she's into martial arts,\" Hannah said.\n\n\"I'm more of a lover, not a fighter. Sorry, bad joke,\" Ryan said.\n\n\"No, I know what you mean. Mom is a real softy, too,\" Hannah laughed.\n\n\"Hey, why don't you hang out with Ellie for a while. I'll come tell you as soon as your mom is back.\"\n\n\"Okay.\"\n\nThere was a pause, and then the cock was back. All the way back. Melinda dedicated her whole existence to worshiping that most welcome of invaders.\n\nAfter what felt like a criminally short time, the service was over. Usually Melinda got to spend a lot more time with her cock. She recognized the signs -- the sharp, jagged final thrusts. Her ambrosia was coming. She let it slide down her throat. Luckily, the portion was still large even though it had been served in a hurry. She felt more of it land on her body. She felt the energy in it even through her skin.\n\n\"Melinda, are you okay? We are kind of in a hurry here.\"\n\nShe knew there was no hurry. She had all the time in the world now. She couldn't say anything because she didn't have control over her mouth, yet. It was munching on the cum on its own. Her tongue twirled around in her mouth and then it licked her lips. She could feel Ryan's hands on her face, caressing her. Or maybe he was just trying to hurry her up by scooping more cum into her mouth.\n\nMelinda opened her eyes and the first thing she saw was the cock, getting softer. She felt proud of herself.\n\n\"Melinda, can you hear me? You have to hurry. You went to get sugar from the neighbors, right?\" Ryan whispered.\n\n\"I get all my sugar from you, honey,\" she answered.\n\n\"Close enough,\" he said, and ran off.\n\n\"Okay, she's back, we should get our desserts soon,\" Melinda could hear him say, as he went into the other room.\n\nMelinda looked down at herself. She was a mess. Her boobs were out and there was still cum on them. She scooped it up and found some more on the wall she had been leaning on. She put her puppies back in, straightened her panties, and pulled her hem down. She found her shoes.\n\n\"Just one more moment,\" she said, as she ran past the dining room doorway, on her way to the bathroom. She fixed her hair and makeup there. Then she went to get the dessert from the fridge.\n\n\"Here we go, everyone! Sorry for the delay.\"\n\nFor the rest of the night, well after Ryan and Ellie were gone, Melinda was very happy. It was not until she was already in bed that she completely understood what she had done. Her high faded and she sobbed for a long time, hoping Hannah would never find out.\n\n---\n\nHannah couldn't sleep. She was sure her mom was on some kind of drugs now. Her new \"friends,\" Ellie and Ryan, were some kind of dealers. It was a shame because Ellie was so cool, but that Ryan guy was definitely a creep, and very obviously a drug dealer.\n\nRemy's Treasure Chest\n\nThe girls had grown so tolerant to the energy they could remember most of what happened during their sex sessions by now. Ryan could still knock them out and they would go limp and start drooling, but even then, the memory loss was limited. That meant that what they were looking at now was technically a familiar sight to most of them. Still, it felt different, looking at it with all the lights on.\n\nRemy's pussy was right there for everyone to see as her ass swayed in the air. The ladies felt jealous. Her crotch was gorgeous. None of them were especially gay, but Remy was just beautiful. Her pussy looked like a painting of an orchid. Seriously, you could frame it and put it in an art gallery. She was on all fours, as she often was, and her head was down to the floor, as it often was.\n\nSome of the other girls were sitting in the living room while Ryan was in the bedroom with Annie. They had started talking about how rarely they actually saw Ryan go at it with someone else, you know, as bystanders, not being under the influence themselves. How would it look?\n\nSomehow, Remy had ended up taking it as a dare. That's why she had crawled to the bedroom door, carefully cracked it, and was now leaning down, trying to peek in. As to why she was wearing no panties, who knows. Remy being Remy, it could be on purpose, by accident, or for pretty much any reason. The other girls could definitely tell, though, that Remy liked what she was seeing.\n\n---\n\nRyan was in the middle of doing Annie. He really enjoyed taking it slow with her. There was something relaxing about her presence. He would go as slow as he could, holding her arms down, and they would look each other in the eye. Time stood still and the passion maintained itself, right on the edge. He could read so much from her face. The minute variations in her expression were endless. For each small motion he made, he saw an instant reaction. They were both covered in a thin gleam of sweat.\n\nHe held a moderate tempo and she breathed to his rhythm. With every thrust, her chin lolled, and she let out a little whimper. Her head tilted back and she closed her eyes. Soon it would be time for a crescendo.\n\nRyan really had to pee, though.\n\nHe could have just used an energy spike to finish her off but that felt like cheating. They had their familiar patterns by now and it was not part of his thing with Annie to just spike her. He decided to stop completely, instead, and went to the bathroom. \"I'll be right back,\" was all he said.\n\nAnnie was left on the bed. She didn't have the strength to move or protest, but inside, she was quite annoyed. Or at least tried to be. As soon as the energy would fade, she would be angry, and as soon as Ryan got back on her, she would be happy again.\n\nThat was the most unfair thing about this whole curse thing. Ryan could literally get away with anything. No matter how rude or inconsiderate he was, as soon as he just laid his hands on her again, she was putty, body and soul. Then again, she had already had a dozen orgasms that night, so it wasn't like he owed her anything, in that sense. She just wanted him to be more refined, and less of a brute.\n\nRemy and Lizzy came into the bedroom. They were carrying a big wooden box, like a pirate's treasure chest. Annie was still spread open wide, on the bed. She was surprised and embarrassed, but not enough to close her legs. The etiquette lessons were sinking in. She flopped her head to the side to see what the other two were up to.",
        "With some giggling and excitement, they laid the chest at foot of the bed. Lizzy left the room. Remy took her shirt off. Annie could see she had brand new nipple piercings. Remy asked if Annie was having fun. Her only answer was a tired but happy groan.\n\nRemy laughed and bent down to give her a kiss on the clit. Annie was tender and the energy was still affecting her. The kiss shook her. It was as a surprise and a shock to her and she almost came. Ryan had left her so close to the edge she could cry.\n\nRemy was as surprised as Annie about the extreme reaction but Remy recovered from her shock much faster. She had thought Annie had been done but now she realized the poor girl had the blue balls something fierce. She slapped her gently, not on the pussy, but just on the mound. Annie's upper body started to shake.\n\nRemy slapped her three more times, barely even gracing her clit, and Annie came like an earthquake. While she was still whooping and convulsing, Remy slipped into the bathroom.\n\nRyan had had to wait a while to get things going in there. A rock hard erection is not good for having a wee. He splashed some cold water on his face and did a few stretches. Then he tried again.\n\nJust as he was about to get going, Annie started moaning in the other room. Maybe she's masturbating. Then the door opened and Remy stepped in. Ryan instantly noticed the new piercings. He stood there with his cock in his hand and watched Remy get down on her knees and open her mouth.\n\n\"What are you trying to imply there?\" he asked.\n\n\"Nothing, sir. You are my master and I am your slave. You can use me in any way you want,\" she said, and then opened her mouth again and wiggled her tongue. She licked her lips, moaned, and grabbed her breasts. Her tender nipples stung and she felt a mix of pain and pleasure.\n\nRyan decided to go for the real toilet, instead. After some pushing, he got going. Remy's antics had definitely made it harder for him again.\n\nShe crawled next to him. \"Can I hold it, please, sir?\" she asked, and reached for his cock. Ryan let go and let her guide his stream into the bowl. She slowly jerked him off, but her aim stayed true. Once he was done, she put his cock in her mouth and gave it a good suck.\n\n\"That was lovely, sir. Thank you, sir. Can I please come with you to the bathroom more often?\"\n\n\"I see you have some new piercings. Are those for me, too?\"\n\n\"Yes master, they are for my pain and for your pleasure, master.\"\n\n\"Okay, that's enough. I really do like them but I'm not going to hurt you.\"\n\n\"What do you think you're doing to me when you gag me with this monster, or shove it up my poor little butt? Or when you twist my nipples, pierced or not. What about when you spank me so hard it leaves a mark, master? It hurts so good and I love it.\"\n\n\"I'll mix pain and pleasure for you any day, but I'm not going to hurt you. I'll slap those titties of yours, but only once we are fucking. Why are you in here?\"\n\n\"I brought you a present. Not just the piercings, I've got other stuff as well.\"\n\nThis can't be good, Ryan thought. \"Okay, lets see it.\"\n\nRemy rose to her feet, flexing her lean body. She held Ryan's cock, as if holding his hand, and led him back into the bedroom.\n\nAnnie was sitting on the bed. She seemed to have recovered, a little bit. Remy led Ryan to the chest. She bent down to it, making a show of her legs and ass, and opened the chest. It was full of sex toys. Full to the brim.\n\nRyan could see the practical value in it. Remy started taking everything out and introducing each piece to Ryan. Annie finally got up from the bed, and joined Ryan by his side. Some of the stuff was ridiculous, stuff Ryan wouldn't use, but there were interesting things in there. too.\n\nThere were padded handcuffs, soft rope, dildos that could actually fit a woman -- Ryan didn't want to use anything bigger than his own cock anyway, he was petty like that -- butt plugs, and so on. There were also some clamps and ball gags and other BDSM things in there, like a paddle and a riding crop. Clever girl, Ryan thought, you bought the stuff you wanted along with things you knew I would want.\n\n\"Okay. If this is the game you want to play, let's see you do it,\" Ryan said. \"Get on your knees slave. Put your head to the floor. Good bitch. Now go lick Annie's feet.\"\n\nRemy did as she was told but Annie pulled her foot away. \"No, Ryan, don't do this. Don't be like that,\" Annie pleaded.\n\n\"It's not for me, it's for her. Remy gets off on being punished and humiliated, don't you whore? Tell her.\"\n\n\"It's true. Master is kind and gentle, but I want him to punish me so I annoy him on purpose. I'm a bad girl.\"\n\n\"Beg her to let you lick her feet,\" Ryan said, to Remy.\n\n\"Please mistress Ann Marie, let me be your slave, too. I'm beneath you. I deserve to lick your feet. Please let me do it or the Master will punish me.\"\n\nAnnie was red all over, but she extended her foot.\n\n\"Thank you, Mistress.\"\n\nRemy caressed and kissed the foot. She licked it up and down with wanton abandon. She kissed it like a lover's lips. She let her tongue slip between Annie's delicate toes.\n\nRyan took the crop. \"Slave, are you a nasty whore who deserves to be punished?\"\n\n\"Yes, Master.\"\n\nRyan spanked her with the crop. He had no idea how hard to go, but hopefully she would like it, anyway.\n\nAnnie was shocked. She tried hop away but Remy grabbed her foot and held on to it. Ryan followed Remy as she crawled after Annie and he kept spanking her with the crop while she chased Annie's foot.\n\n\"Thank you, Master,\" Remy kept saying, as the awkward trio hobbled around the bedroom.\n\nAnnie overcame her shock and got down to the floor. She started to kiss Remy, instead of letting her lick her foot. All of the girls were friends by now and Annie knew more about Remy's past than Ryan did. Annie kissed Remy with a newfound passion. This wasn't for Ryan's benefit at all, it was all for Remy.\n\nRyan was confused by the whole situation but Remy turned around and begged him to continue, so he did. He kept spanking her with the riding crop while the girls kissed. Both of them were sobbing now but whenever Ryan tried to stop Remy told him to keep going. Remy's tears were not tears of pain, but some sort of catharsis.\n\nRyan didn't dare go any harder, but kept going faster and faster. This is going to leave a nasty mark.\n\nHe dropped the crop. He didn't like the way it was so impersonal. If he was going to do this, he would do it himself. He pulled Remy into his lap and spanked her with his bare hand, but he did it harder than he ever had before. His hand really hurt. He used his other hand to pull her hair. Remy started to moan, shake, and shiver.\n\nEventually, she came from the spanking alone, and something released inside of her.\n\nRemy fell limp and started crying for real. It was a primal, guttural wale. Ryan let her roll off of him, and Annie held her like a mother holding a child. Ryan backed off, hating himself for what he had done. He saw Lizzy in the doorway.\n\n\"I swear I didn't...\"\n\n\"Shh, shh, it's okay,\" Lizzy said and came to him. She hugged him and told him he'd done nothing wrong. Eventually Remy recovered enough to get up. She came to Ryan.\n\n\"Thank you. I'm sorry, but also, thank you. Sometimes I just... I just need to...\"\n\n\"It's okay. Come here.\"\n\nThey hugged, and Remy held on to him tight. Ryan kissed her forehead. Annie and Lizzy joined the hug.\n\nAfter a while, they broke it off and went to the kitchen for some water.\n\nMelinda was there, waiting. She looked tense but she didn't say anything. When she saw the screaming red marks on Remy's ass she looked to the other girls, but behind Ryan's back. Lizzy showed Melinda the thumbs up, making Melinda sigh in relief.\n\nAfter a while, everyone was back to normal. They sat around the table and conversation resumed. Everyone laughed when Remy tried to sit. She wasn't quite ready for that yet. Instead, she stayed standing. She stood right next to Ryan, leaning into him, staying close and tight. He put an arm around her waist. Melinda served cookies.\n\nOnce everyone was done, Ryan asked them to come with him to the bedroom. The other girls were skeptical, but Remy was eager to go. Once everyone had gathered around, Ryan went to the toy box and rummaged around. He found what he was looking for, a chunky leather collar.\n\n\"Get on your knees, woman,\" he said, to Remy. Her eyes were bright and she was smiling as she did as she was told. Ryan slipped the collar around her neck and clasped it shut.\n\n\"Rise, slave.\"\n\nRemy jumped up, giggling and crying. This time they were definitely tears of joy. She gave everyone a big hug, the biggest one to Ryan.\n\n\"I'm never going to take this off, it's like a wedding ring, but better,\" she laughed.\n\n\"You're seriously going to go outside, wearing that?\" Ryan asked.\n\n\"I have purple hair and lots of tattoos. I can do whatever I want.\"\n\nThat seemed to make sense to everyone.\n\nLater on, they made some clear arrangements on how to keep \"this stuff\" and normal sex separate. Ryan still wanted to just fuck her, and she wanted it, too. Sometimes she just needed a little bit more, for reasons she didn't want to go into with Ryan. At least not yet.\n\nRyan was fine with this. He may be a clueless idiot, but somehow he knew Remy was now in a much happier place than she had been when they first met.\n\nRemy's treasure chest got to stay at the foot of the bed and most of the toys would eventually get used, one way or another.\n\nClaudia's Big Date\n\nOne evening, Ryan was on his PlayStation. Annie and Melinda were around, but they weren't that into gaming. Ryan couldn't sense any great sexual tension in the air, either. By now, the ladies knew how to ask for it when they needed some.\n\nRemy and Lizzy were out together. They'd become buddies. Lizzy was becoming a little mini Remy, but mostly in the good ways. Bars and Clubs weren't really Ryan's thing, although he'd gone with the girls a few times. Overall, he felt crowded spaces full of drunken idiots weren't worth the risk.\n\nRyan got a text message. That was rare. His social life beyond these walls was now almost zero, and he couldn't be happier.\n\nThe message was from Claudia. This can't be good, Ryan thought.\n\nClaudia: \"situation, need help with thing, come ASAP\"\n\nRyan: \"Hi Claudia, what up?\"\n\nClaudia: \"right now! DO NOT TELL anyone\"\n\nThere was also a link to an address.\n\nRyan: \"E won't let me go anywhere.\"\n\nClaudia: \"sacred duty to help me asshole, make excuse\"\n\nCuriosity won, and Ryan got his gloves on. \"Hey everyone, I just realized that I got one of the book references wrong, so I'll have to pop back to the library to check it again. I might get a burger, too, but shouldn't be too long.\"\n\nHe got out, and after some consideration, decided that he did not really care if Ellie followed him or not. Claudia invoking the divine-duty-thing was the reason he was going. If Claudia told Ellie Ryan had rejected her, there would be hell. Maybe even literal hell. One could never tell with mighty Eleftheria.\n\nThe address in the message led Ryan to a fancy restaurant. It was all luxurious and gold laden. The full height windows were there for maximum jealousy. It was probably fun to eat a five star meal while watching all the poors walk by in the rain. Ryan looked for Claudia inside.\n\n---\n\nClaudia realized her mistake very early on. It had been a while since her previous defeat to Ryan. She had waited too long again.\n\nShe was on a fancy date in a fancy restaurant, with fancy food, and a fancy bachelor. Everything should have been great and she was desperate to give the man a chance. He was tall and handsome, and rich. The man seemed interested in her and he was putting on a confident front. He might even be able to handle her. He was the perfect gentleman to rub into Ryan's idiot face. Unfortunately, what Claudia really wanted now was to rub her own face into Ryan's... Fuck she was horny. The bastard had won again and didn't even know it yet.\n\nShe was already texting Ryan under the table. Maybe that's why my date seems so happy. Maybe everyone in this restaurant can already see how hard my motor is going.\n\nAfter what seemed like forever, Claudia saw Ryan's annoying face in the window. Stop waving, you idiot, she thought. Luckily her date was looking at his food at that moment, so Claudia signaled Ryan to head for the bar. She excused herself and got up. The bar was on the other side of a wall, in the same direction as the restrooms.\n\nThe bartender was giving Ryan the stink eye, until Claudia sat next to him. She was ravishing. Her long, golden legs were smooth as silk, and her painted toes peeked out from the tips of her slinky black pumps, the kind with lots of straps. Her golden cocktail dress was tastefully revealing and scandalously expensive.\n\nShe wore a necklace and some earrings, and her dark hair was free of it's usual, tight bun. Claudia often wore glasses, but not this time. Ryan had never seen her wear this style of makeup before. She swung her hair over her shoulder as she sat down, making it flow down, directing all the attention to her chest.\n\n\"Hi Claudia. Are you on a date? How's it going?\"\n\n\"Shut up idiot. It's all gone to hell. You know why you're here.\"\n\n\"I'm starting to get some ideas.\"\n\n\"Shut up. I don't want to hear it. Juice me up, right now.\"\n\nRyan held her hand and Claudia stiffened. She swallowed a gasp. Then she relaxed and opened her eyes again. \"Oh, that is so much better. I would thank you if you weren't you.\"\n\nClaudia was surprisingly tolerant by now. This much would have had her squirting, back in the beginning. Being able to dish out the juice more freely made Ryan happy, he knew holding back too much could be potentially dangerous for him.\n\n\"You know this is not going to last,\" he said.\n\n\"Yes. I know.\"\n\n\"So, this is really what this is? Your big emergency? This is a booty call. You're not happy with how your date is going so you invited me here to... what?\"\n\n\"Fuck you, asshole.\"\n\n\"Whoa, fuck your asshole? Thank you, I'm honored.\"\n\n\"You are not going to do this to me, not here, not now. You need to help me with the issue that you have sworn to help me with, and then you can go. Have some dignity. We will go into the ladies' room and you get to do what you have to do, but that's all.\"\n\n\"Wow. I mean, all jokes aside, are really asking me to do this? Here?\"\n\n\"Yes. Yes I am. I'm inviting you to do it. I messaged you to come here. Is that what you want to hear?\"\n\nRyan was suspicious. He wouldn't put it past Claudia to set some kind of trap for him. He used the connection he had with her emotions, because of the energy flow, to try to get a better understanding of what was going on in that sharp mind of hers.\n\nAnd there it was. Ryan had felt this before. Claudia was drunk. \"You think you've had a few too many?\" he said.\n\n\"As if you care. Why the hell won't you just do it? This one time I'm actually asking you? Look! I'm all pretty and everything. You should be happy and honored that I'm offering myself to you.\"\n\nHope the bartender heard that one, Ryan thought. He started to pump up the power. \"Okay, so, what is it exactly you have in mind?\"\n\n\"I can feel you pushing me Ryan! What are you trying to do? You don't think it's a bit much if you just bend me over the bar and start pounding me right here, with that monster of yours?\" Claudia was clearly distracted by her own fantasies. She had to shake it off before she could continue. \"Please Ryan, don't do this to me. Just let me maintain a little bit of my dignity, this one time? I'm being nice here, can't you just meet me half way?\"\n\n\"Tell me what you want, and then ask for it nicely.\"\n\n\"You know what I need! I've already told you you can have me.\"\n\n\"So, tell me again, where did you want me to do it?\"\n\n\"We can go into the ladies' room, as long as we do it quickly and quietly.\"\n\n\"No, the other kind of where.\"\n\n\"Ha. Ha. Very funny, but I'm having none of that. You can put it where it properly belongs, in my actual, proper lady parts.\"\n\n\"Darling, all of your lady parts are proper. Don't try to be vague. Tell me what you want me to do to you. Describe it in detail. Use your dirty words.\"\n\n\"Take me to the ladies' room, and you can f... make love to me.\"\n\n\"It's a toilet. There's no love there, and why the ladies' room?\"\n\n\"The ladies' room is clean, you idiot.\"\n\n\"Okay, fair enough, but try again.\"\n\n\"Take me to the ladies' room and fuck me, please,\" Claudia said.\n\n\"That was really good. I didn't think you had it in you. But how about you suck me off, first?\"\n\n\"What? I'm not going to blow you in a public bathroom! It's not that clean.\"\n\n\"Your dress is not going to get dirty if it's that short, babe. Besides, if you're that worried, you can just take it off.\"\n\n\"I'm not worried about the dress.\"\n\nRyan took a moment, just to create a melodramatic pause. Then he made his offer. \"All holes, anything goes. Ask nicely, use your dirty words, and I'll do it.\" He pushed more energy, to add some weight to his words.\n\n\"What? Um... You bastard. I'm not going to let you fuck me in the ass without lube again. No way. I mean, you can just knock me out and do whatever you want anyway, so, please, stop these games.\"\n\n\"You know I have enough juices right here in my cock to lube you up real good, and like you said, I'm going to do it anyways, so why don't you just ask nicely, so we can get going here. You're barely holding it together anymore. The bartender knows what's up. Look at him.\"\n\nClaudia looked up. The bartender did seem suspicious of her. Claudia was already wet, red, and panting. Time to mark one more into the losses column, she thought.\n\nShe looked Ryan in the eye. \"Ryan, take me to the toilets, right now, and please fuck my face, and my dirty little cunt, and fuck my fucking asshole with that fucking monster of a cock of yours, and make me scream and cum, and give me that fucking load I need so badly. You put that load of yours so deep in me it'll last me for days. Please.\"\n\n\"Claudia, thank you. I'm honored you would think of me at a moment like this. I will gladly help you with your situation thing.\"\n\nThen they were off. The bartender had definitely heard Claudia that time.\n\n---\n\nClaudia was sitting on her ass on the floor of the toilet stall, legs spread. She had no idea whether it was the men's room or the ladies' room, and she couldn't care less. All she cared about was the hot cock in her throat. Right now, slobbering all over that cock was very important to her.\n\nThe shoulders of her dress were hanging loose and one of her breasts was out. One of her shoes was still on her foot but the other one had slid out from under the stall door. Ryan's thrusts were pushing her against the wall as he held on to her head. The slobber was all over her chest. All in all, this was not how Claudia had hoped her evening would go. Then again, maybe it was.\n\nThe situation she was currently in was surprisingly similar to something she had briefly fantasized about at home, while putting on her lipstick. The man in her fantasies was always Ryan. She'd tried to plaster someone else's face over his but the facade always crumbled. The cock was definitely always his, that big fucking thing. She didn't care about size, really, and with the mind control sex magic it mattered even less. Still, in some fucked up Stockholm-syndrome kind of way, she loved that specific cock. She loved it a lot more than she loved it's owner, that's for sure.\n\nHer pussy was gushing, dripping onto the floor. They had found a nice rhythm. Ryan remembered to let her breathe and she was already having little orgasms.\n\nThe duality of her mind continued to fascinate her. She truly hated losing to Ryan. Resisting him had become one of the cornerstones of her very being, in the past weeks. Then again, once the energy started flowing, she loved that, too. She knew idiot-Ryan and sex-god-Ryan were the same person but she didn't care. She loved letting the latter do whatever he wanted to her, and she never wanted it to stop. Oh, time to get up.",
        "Ryan had decided to change positions because Claudia's head had been making too much noise, banging against the side wall of the toilet stall. He dug his hand deeper into her hair and pulled her up. Her lips held on their favorite cock for as long as they could, and when they finally released him there was an audible plop sound.\n\nClaudia was gasping for air, her chest heaving. Her eyes were wild and her smile was delirious. She giggled like an airhead. Ryan leaned her over the toilet and moved directly to the second course -- the main dish for some, but Ryan's favorite would be the dessert, especially with Claudia.\n\nClaudia's tight and bouncy ass jiggled beautifully as Ryan rammed his cock into her wet pussy from behind. He pulled her shoulder straps down to her elbows and dug her tits completely out. Ryan still couldn't believe they were real. They were so firm and round, and surprisingly big. They were also nice and gooey right now from all the spit and slobber. He just had to twist and pull on them for a while.\n\nClaudia was loud. Someone was already knocking on the stall door but Ryan didn't care. His hands slid along Claudia's body and he grabbed her shoulders from below. This felt like a really good grip so he really went to town on her horny little pussy.\n\nIt would have been a hard position to hold, especially with Claudia's legs starting to give, but this was one of those situations were getting super strength from a magical curse turned out to be nice and useful. Claudia's tits were squished against Ryan's forearms and he was carrying most of her weight, in this awkward position. Her slimy nipples were sliding along his sweaty forearms and he bet Claudia was loving the sensation.\n\nRyan knew he was on a schedule, though. He could not take all day so he decided to move on. He let Claudia fall down onto the toilet. Her dress was still clinging on. Ryan had had great pussy access, but he would have to shift the dress a bit to get to his main prize.\n\nThe golden cocktail dress was very tight around Claudia's feminine hips. It looked very expensive, and who knows, it could even have been her favorite. Ryan just had to rip it. Claudia had begged him to let her maintain a little bit of dignity, however, so Ryan had to prove to her he was a gentleman at heart. He vowed leave her enough clothing to get home. Then again, a little bit of dignity was not a lot, was it? He would rip the dress, just not totally.\n\nWith a grunt of effort, he made the fabric give way. The rip was a little bit bigger than he had aimed for, but still less than a foot. The main thing was, he could now see her tight little rosebud waiting for him, inviting him in. Now it's a proper cock-tail dress, he thought.\n\nRyan spread the juices around, milking Claudia's pussy, and milking his own cock, pushing all of it into her ass with his fingers. He got to business in record time. It really felt like Claudia's body had adjusted to him, had learned to take him more easily.\n\nThe feeling was sublime. This was the first time Claudia had begged for him to fuck her ass, and this was definitely Ryan's first time in a five star public toilet -- not just for sex, but at all -- so there was much to celebrate. He let the special nature of the moment sink in.\n\nHe pushed her ass way up, so that she was almost doubled over. Her back was against the water tank and her head was pointing down toward the floor. Ryan went balls deep in one long, slow push. Claudia's grunting got deeper and more guttural. Ryan got up to speed as fast as he could, and the pleasure of it all was immense.\n\nWhile fucking her in the ass like this, in a place like this, it occurred Ryan that he liked Claudia. Having open sexual access to someone as classy as her -- to all his gorgeous women, in general -- was great, but he actually liked Claudia as a person now, too.\n\nThey could have never been friends in their earlier lives because he would have been too afraid of her. But now, with the added confidence he got from his magical sex powers, they could go toe to toe. She would dish it out at him, but now he had something to come back with. The sex was nice, too. She was an important part of his little harem, he decided. He wondered if she felt the same way.\n\nIt was time to go. Ryan reached down to cover Claudia's mouth. He knew she would scream her little face off whenever a really big one hit her.\n\nRyan also felt bad about ripping the dress a bit too far -- seven inches would have been enough -- so he decided to do her a little favor, as an apology. He came into her ass, hard, and let almost every drop sink deep down into her innards, and only squirted the last little bits on her face and her boobs. This took some willpower because of how deliciously they were framed for him in that strange position. He even wiped his cock on some toilet paper instead of on that nice dress of hers.\n\nOnce Ryan let go of her, Claudia's tired body slowly oozed down from it's uncomfortable pose. She ended up on her stomach, limply drawn over the toilet seat as if she was stretched across someone's lap, waiting to be spanked.\n\nRyan dressed up, not that he was that naked to begin with, and waited for Claudia to come back around. This would have taken forever without her new, improved tolerance, but now it took barely a minute for her to make her fist confused blinks. Then she smiled when she recognized him. It was kind of heartbreaking, the honesty of emotion in that first realization.\n\nRyan turned her around and sat her up on the toilet. When she was clear-headed enough to tell him she was okay, he gave her a little kiss and stepped out of the booth. Turns out, it actually was the ladies' room. There was also an angry waitress lady waiting for him there. As Ryan stepped past her, he gave the waitress five bucks to guard the door while Claudia was still recovering.\n\nInside the booth, Claudia took stock of the damage. Once again, she found herself unbelievably glad to be under a mind control curse that could render her temporarily immune to shame."
    ],
    "authorname": "FacetiousTales",
    "tags": [
        "anal sex",
        "harem",
        "magic",
        "male dominant",
        "public sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-cursed-tattoo-pt-04"
}