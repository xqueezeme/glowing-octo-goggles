{
    "title": "A Long Walk Home Ch. 16",
    "pages": [
        " Double posting week (fingers crossed it's up by Sunday LOL!!) It's Easter weekend here so thought I'd give you an Easter present :-)\n\nThanks mikothebaby for being such a star with editing these chapters xxx\n\nEnjoy! \n\n*\n\nDayton smacked his hand off the doorjamb, a muffled curse escaping his lips. His bedroom was empty and he knew without a doubt that Rayne hadn't come downstairs. He walked quickly to her room and looked in finding it empty as expected. She had run. He had seen it in her eyes but had hoped she would stay.\n\nUltimately the decision was hers and he knew that. She wasn't one to be caged by anyone. It didn't stop him wishing she had stayed so he could repay her for all she had done for him.\n\n\"She isn't used to relying on others.\" Freya's quiet words had his head turning to see her standing at the top of the stairs. She looked perfect as always having changed into a pair of jeans matched with a red summer top which showed off her pretty curves very appealingly. \n\nHis mouth was watering instantly. Not only did she look great but it was the most casual he'd ever seen her dress, almost as if she was slowly letting go of the rigid control she enforced upon herself.\n\n\"You can relate to that,\" he answered, leaning against the wall and crossing his arms. He wanted to kiss her luscious mouth so much but he wanted her to come to him first. So far he'd been initiating all their contact. He had to know if she wanted him as much as he did her.\n\n\"I've relied on Nors my entire life,\" she countered walking forward slowly as if she couldn't help herself. \"It is others I have an issue with.\"\n\nHis lips quirked. He loved her brutal honesty. She just opened her mouth and spoke, never stopping to think of just what she was revealing about herself. She reached him and stopped, her eyes glued to his, waiting for him to do something. When he didn't move she reached up carefully and captured a lock of silver hair. \n\nHe held himself still as she caressed his hair, then her eyes darkened and she let go, taking a step back. He moved then, sliding an arm around her waist to pull her against his body. \"What was that?\"\n\nShe evaded his gaze but he cupped her chin gently, bringing her eyes back to his. \"Talk to me, Freya.\"\n\nResistance flared in her eyes for a moment and then she frowned. \"You haven't taken me to your bed. You touch my body, kiss me whenever you want to, you show me you want me but you fail to follow through. Your actions are confusing. At first I thought you were bedding Rayne but you've told me that isn't so. It leaves me with only two options available. You still hold Faith too close to your heart or you don't really want me.\"\n\nIt was such a vulnerable admission coming from her that his heart twisted sharply in his chest. He teased his lips gently across hers. \"You forgot the third option, honey.\"\n\nShe pulled back frowning at his teasing tone as well as the endearment he used. A perfect eyebrow arched in his direction. \"Which is?\"\n\n\"I could be romancing you,\" he chuckled lightly, brushing his knuckles against her cheek. \"I may want to bend you over that banister right there and fuck the living daylights out of you but it's not what you need, Freya. You may think it is and I know we'd both enjoy it immensely, but then I'd only be proving to you that I'm just like every other man you've ever known. Out to enjoy your body and nothing else.\"\n\nHis earthy words certainly sparked her desire even as her confusion grew. \"Sex is natural. It's what males and females do. You are constantly being frustrated because you're not achieving your physical release.\"\n\nDayton did laugh then tightening his hold on her as she stiffened at his laughter. She sounded very altruistic but he was sure her own sexual frustration was driving her just as much as her concern for him was. \"I've survived five decades without real sex, honey. I think I can manage a few months more.\"\n\n\"Months!\" Freya all but squeaked the word out, her eyes flying to his to see if he was joking. He made her so hot she was about ready to scream to get him to take her and ease the burning ache he set inside her. He was laughing at her still and her anger kicked in.\n\n\"Perhaps I am not willing to wait months,\" she said darkly, moving out of his arms. \"There are plenty of other willing males who would not turn down a night in my bed.\" \n\nDayton's smile froze on his face though he managed to contain the growl which threatened to rumble out of his chest. His vampire was testing him, pushing at the boundaries he'd set. \n\n\"I have no doubt there are, honey,\" he drawled softly. \"But I'd have to kill every man who touched you. As long as you're willing to accept the consequences then feel free to indulge yourself.\"\n\nHer expression remained calmly neutral though her eyes narrowed slightly. \"Possessiveness, aggression, typical Were traits when dealing with mates. You contradict yourself with your behaviour, Dayton. Your mate is dead.\"\n\nShe was so keenly intelligent it was scary. He had no idea just how much she knew about pack and Were life. Now he had to judge just how much to let her know. Too much and she may take off as fast as Rayne just had. There was a fine line between easing her into his life and keeping secrets from her. She deserved the same honesty she gave him.\n\nDayton turned and walked to his room, holding the door open until she followed him and entered. He closed the door behind them and quickly straightened the bed. The reminder of Rayne being there would most probably be one she wouldn't be comfortable with. \n\nHe stretched out on the bed and patted the spot beside him. She came with more alacrity than he thought she would. \"You're right about my behaviour in one aspect and wrong in the other. I am not contradicting myself. It is uncommon but not unheard of for a Were to find a second mate. It has probably only happened a handful of times in the last three hundred years but some have found happiness after their loss.\"\n\nFreya blinked slowly, quickly sifting through the information he was giving her. She hadn't known it was possible for a Were to mate more than once. He said he wasn't contradictory in his behaviour at her taunt about finding another man, which could mean he was alluding to only one thing.\n\n\"You think I am your new mate.\" The words whispered out on a shocked gasp.\n\n\"Oh, I don't think, honey. I know.\" His eyes danced with amusement at her stunned expression. \n\nShe didn't know how to react to this. Her heart rate was kicking up a healthy beat because he was effectively telling her that he considered she belonged to him. No one had ever dared to try and claim her the way he was. It was both thrilling and irritating at the same time.\n\nShe knew her emotional attachment to Dayton was stronger than anything she'd ever felt for anyone before. His pain had made her weep, her own actions which had caused that pain breaking something deep inside her. This man before her pulled out her softer side, made her vulnerable to him. It was frightening how easy it was for him to touch her on such a primal level.\n\nHe would demand full surrender though. No matter that she was the stronger of the two, the oldest and the more lethal one. He would want her to submit to him and she knew she was incapable of doing so. \n\n\"I will not submit to you.\" There was no point hiding from the issue. She didn't want to hurt him by rejecting him but he had to know that she wouldn't come to heel at his command.\n\nDayton burst out laughing, doubling over and clutching at his stomach he was laughing so hard. Freya growled, her anger igniting instantly. The urge to hit him was strong but she didn't want to really hurt him. She pushed him hard until he fell off the bed and landed on the floor with a loud thump. She expected him to be angry with her but he remained on the floor laughing even harder.\n\nCuriously she looked over the side of the bed and then shrieked when he pulled her off and she landed on top of him. He rolled over immediately trapping her beneath him. He was still laughing and there were tears in his eyes.\n\n\"I'm sorry, Freya,\" he managed to get out between chuckles. \"Just the thought of your name and the word submit being in the same sentence is enough to make me die laughing. You wouldn't know how to submit if your life depended on it, honey. I don't know where you got the crazy idea that I would expect that of you.\"\n\nHer irritation evaporated and she stared up at him perplexed. \"Isn't that what mates do? One is more dominant than the other?\"\n\nHe leaned down and took her mouth. It was impossible not to. He wanted to stroke her all over so he could wipe the confusion from her exquisite face. She opened to him instantly inviting his tongue in to taste her sweetness. Dayton groaned and dived in eagerly, teasing her mouth erotically with his.\n\n\"No that's not what mates do,\" he whispered against her softness. \"Mates love and protect each other. They spend hours kissing and licking and stroking each others hot bodies and they make beautiful babies together. There might be times when one is more dominant than the other but only if the situation calls for it. Does Nors dominate Ashleigh?\"\n\nFreya frowned. The heat of his body pressing against hers was making her want to do things other than talking but she knew she had to have the answers to the questions inside of her too. She was about to answer yes to his question and then her frowned deepened.\n\n\"When Nors really wants something Ashleigh concedes to him,\" she answered slowly. \"And yet when she has a need, he will do anything to ensure it is taken care of.\"\n\n\"Sometimes Nors is the more dominant one and other times it is Ashleigh,\" Dayton smiled as he stroked her cheek gently. \"You view dominance as someone ordering the other person about and forcing them to bend to their will. Nors and Ash don't truly dominate each other, they compromise. He can force Ash to do what he wants but he knows he'll hurt her if he does. She knows there are times when he needs to be taking care of her so she lets him because it will hurt him if she doesn't. Mates don't want to hurt each other, Freya. It's the last thing they'd ever want to do.\"\n\nShe was quiet as she digested the information, applying it to what she knew of her family and seeing the truth in it. It was actually a very subtle dance Nors and Ashleigh performed in their relationship. They did it effortlessly and they found such joy in it. She stared up into Dayton's expectant face. He was waiting for her reaction.\n\nThis was what he wanted from her? For them to be bound together exclusively forever, dancing the same dance as all the other mated couples? Part of her yearned for what Nors and Ashleigh had. A larger part was frightened of it. She didn't think she had the capacity to bend in that kind of relationship.\n\nHer eyes connected to the streak of silver in his hair. Dayton had chosen a mate before and had suffered unbearably for that choice. Choosing her was another mistake. Surely he had to see that? Faith dying had almost destroyed him. What would she do to him when she let him down as she knew she would? It was what she specialised in; letting down the people she loved most in the world.\n\nAnd she did love this wolf so much. She was pulled to him like a moth to a flame. Every time she was apart from him she wondered what he was doing, who he was with, when she could be close to him again. So far she had managed to behave herself, control her more feral instincts despite the confusing emotions battling inside her. But that would end and she'd do something awful, hurt someone and he would hate her.\n\nFreya pushed at his chest, breathing a sigh of relief when he acceded to her silent command and stood up. He held a hand out to her and she accepted it rising gracefully as he tugged her up. \n\n\"You're making a mistake,\" she said quietly pulling her hand back. \"I would not make a good mate. I don't have the ability to compromise with anyone. I can't be like Nors. I would force my will on you because I am the stronger of us. I would damage your spirit.\"\n\nDayton wanted to curse out loud but he held it in. He could see the conflicted emotions in her eyes. She wanted what her brother had so much but she genuinely believed she was incapable of having it. It was too much for her too soon. \n\n\"I believe in you, Freya,\" he said gently. \"I know what you're capable of even if you don't believe it right now. You not only want this, your soul is crying out for it, for someone to love you unconditionally.\"\n\n\"You know what I've done,\" she hissed moving away from him to pace the room in agitation. \"You know what I am. How can you just wipe that out as if it doesn't exist?\"\n\nHe watched her carefully, hearing the plea she probably didn't even know was in her voice. She wanted forgiveness so badly, yet didn't believe she deserved it.\n\n\"Your past matters nothing to me, Freya. But I do want your present and your future to be with me.\" He caught her, halting her pacing until she was looking up at him with an angry scowl on her face, denial in every bone of her beautiful body.\n\n\"I want to annoy the hell out of you until you push me off the bed. I want to be at your side as you work through your emotions and learn the correct ones for any given situation. I want you in my bed so I can show you what real love feels like between a man and a woman who are not out for just their own sexual gratification but want to give their partner as much pleasure as they can. I want you, Freya Eriksson. Forever.\"\n\nShe yearned for what he spoke of, craved to give in and believe that she could have what he described. \"And when I fuck up?\" she ground out. \"When I disappoint you, hurt someone you care about, what then, Dayton? Will you still want me or will you curse me?\"\n\nHe framed her face gently in his hands and teased his lips over hers. \"Why didn't you hurt Rayne? You wanted to. She was a threat to you. Why didn't you act on that threat?\"\n\nFreya stood so still, her heart beating hard in her chest as Dayton's touch both soothed and excited her. He was a sneaky wolf, changing directions in their conversation to throw her off balance, using touch at the same time to focus her when she was becoming wild. She suddenly realised he'd been doing this since she'd returned to the compound with him. He'd been handling her the whole time and that sparked her anger again.\n\n\"Answer me, Freya,\" he whispered against her lips, his tongue licking slowly over her bottom lip tempting a moan from her. Anger warred with desire as she fought not to take his mouth in a hard, punishing kiss which would hopefully soothe some of the pent up frustration running through her body.\n\n\"Because she was your friend,\" she hissed out reluctantly. \"I would have caused you pain if I had acted on my instincts.\" The admission was ripped out of her.\n\n\"And mates don't inflict pain on each other,\" he whispered softly. \"You could never hurt someone I care about, Freya. I'm sure you will fuck up many times in other ways but I'll still be with you, I'll still catch you when you fall. I won't ever wash my hands of you and leave you alone. No matter what.\" \n\n\"Why?\" It was a confused plea, a need to understand why he was willing to fight so hard for her.\n\n\"Because you will do the same for me, honey,\" he groaned softly, his fingers burrowing in her hair. \"You already have by forcing me to confront my emotions over Faith. You broke through all my barriers and led me home to my family. You saved my life and cared for me even when I thought I hated you and wanted you dead. I fucked up spectacularly and you stood by me and picked up me. You didn't give up on me as I will never give up on you. We're meant to be together, Freya. We're mates.\"\n\nHe made it sound so easy, that all she had to do was reach out and take what he offered. She had hurt him when they were alone and he didn't fault her for it, instead he saw it as necessary to achieve a greater good. He attributed coming home to be her doing, a gift she had selflessly given him. She didn't believe that was true herself but he believed it and he took joy from it.\n\nThis wonderful man was offering her things she'd never dreamed she could ever have. And she wanted them so badly, she wanted him so badly. If she didn't then she wouldn't be staying in a wolf compound, afraid to leave him, to be alone again. He believed in her so completely.\n\n\"I'm scared I'll fail again,\" she finally admitted. \"Before it wouldn't have been so bad but now...Dayton, I'm so frightened of failing you.\"\n\nHe crushed her tightly to him, stroking her hair gently. She sounded so vulnerable and his protective instincts needed to make her feel safe. She'd had to take in a lot and it was overwhelming her. \"I'm not, Freya. You could never fail me. All you have to do is tell me when it becomes too much for you. I'll be there to hold you and keep you safe when you need a bit of extra strength. I'll always be there for you.\"\n\nFreya believed him. The conviction in his voice was total, his arms a protective cage around her. Her wolf would never leave her floundering in a sea of emotions that was so alien to her they caused her pain and confusion. He would drop everything to help her if she asked him to. \n\nShe didn't deserve him but he appeared determined not to let her go, so she clung onto him, surrendering to him completely because he touched her soul and made her believe in happy ever afters. \"Please, don't ever let me go.\" It was a plea from the very depth of her heart, her voice trembling.\n\n\"Never!\" he vowed his arms tightening even more. \"You're mine, Freya. No one will ever take you from me, not even you. We'll go slowly until you feel comfortable. There's no rush, honey. We have all the time in the world.\"\n\n*****\n\nFreya spent an hour playing with Liam in his room. She watched her nephew with a critical eye as he sat with a large jigsaw and painstakingly examined each shape before he tried to slot the pieces together. His little brow was furrowed in concentration, his eyes darting from piece to piece as he worked out the puzzle in his mind.\n\nThe emotions she felt for this tiny boy had often confused her. Today she could examine them without hiding from herself. She needed to because if what Dayton said was true then he wanted to have children and he was choosing her to be the mother of them.  \n\nShe had never understood the need to procreate, had detested the very thought of it until Liam had come along. Nors' son had been an exception because he belonged to her brother. She had added him to her family because he was blood. It had been a cold, logical decision at first but somewhere along the way her feelings had changed.\n\n\"It won't fit,\" Liam groaned, frustration creeping into his voice as he looked up at his aunt.\n\n\"Then it obviously doesn't belong there,\" she answered though her lips tugged in a little smile as he frowned at her response. On impulse she sat down on the floor beside him. \"Perhaps if you make piles of the same shapes it will be less confusing?\"\n\nShe showed him what she meant and soon they had the similar shaped pieces stacked in four separate piles. \"Now look at the puzzle. You can see that the next shape has to have two rounded sides to fit in. Which pile could that be?\"\n\nExcitement danced across his face. There was only one grouping that had that particular shape in it. He easily found the piece he needed and slotted it into place, grinning up at her when it fit perfectly. \"Thanks, Aunt Freya. You're the best aunt in the whole wide world.\"\n\nHis pleasure was absolute and she found herself smiling back at him, reaching out to touch his head gently. Warmth spread through her at his open love and honesty. It was so easy to make him happy and when Liam smiled she couldn't help smiling back at him. \"And you're the best nephew in the whole wide world,\" she breathed softly, her heart melting for this adorable little boy.",
        "He turned from the puzzle and crawled into her lap reaching up for a hug which she gave him with no hesitation. She cradled him gently and knew that if she could make him happy then she could make a child of her own happy too. She could be a mother and give Dayton what he desired most in the world, a complete family.\n\n\"I love you, Liam,\" she whispered, painfully aware that she'd never said the words to him before. It made her sad that she'd held them back from this beautiful little boy.\n\n\"Don't be sad, Aunt Freya. I know you love me. I can feel it in here.\" He pointed to his chest. Then he placed his hand on her chest and smiled shyly. \"You don't hurt here anymore. That makes me happy.\"\n\nShe swallowed hard and cuddled him closer, gently caressing his cheek. She knew about his abilities now, knew that this precious little thing had sensed her pain and tried to help her. It awed her as well as made her feel guilt that she had unconsciously subjected him to her negative emotions. She hadn't done it deliberately but he had still felt it.\n\n\"It makes me happy too, Liam,\" she whispered softly. \"You are such a special little boy. I am honoured to have you as my nephew.\"\n\nHe beamed up at her. \"I love you too,\" he smiled giving her another hug before he clambered back down to finish his jigsaw.\n\nFreya helped him, lying down beside him as he worked through the remaining pieces and laughed in delight when it was finally completed. Her eyes shone with love as he clapped his hands and did a little victory dance, so proud of himself. In that moment she knew that she could do this amazing thing. She could give Dayton the children he desired and she could love them just as much as she loved Liam. The thought made her heart thump wildly in her chest but it was excitement that rushed through her and she found herself laughing as her nephew taught her just how easy it was to love if she really wanted to. \n\nFreya went looking for Dayton. She felt like a child herself, full of hope and excitement. She wanted to tell him what she'd discovered about herself, wanted to see his eyes light up with happiness that she was letting down another barrier that held her emotions so rigidly in place.\n\nFollowing his scent, she found him outside talking with his sister beside her house. Other wolves stopped to glance in her direction but looked away almost instantly, as if they had determined she was not a threat. It gave her a sense of belonging to know the pack expected to see her among them.\n\nThat feeling paled into insignificance when Dayton's head turned suddenly and their eyes met. The warmth in his deep blue gaze was undeniable, his pleasure at seeing her written across his handsome face. The smile he gave her faltered minutely before he turned back to Cedar and said something to her.\n\nThe blonde wolf's pale blue eyes met Freya's for an instant and then she answered her brother in an equally low tone and headed back into her home. Dayton turned and strode across the compound towards her.\n\nFreya met him half way and immediately wrapped her arms around his neck and pulled his head down to hers. Her kiss was almost desperate in its need. It appeared to surprise him but he recovered quickly, wrapping one arm around her waist to drag her bodily against him while his other hand slid under her hair to grip the nape of her neck firmly.\n\nHe met her kiss with a hunger that matched hers. He didn't appear to care they were standing in the middle of the compound with people watching them. He took control of the kiss, his tongue hot and wild inside her mouth. She could feel the hard ridge of his erection pressing against her, the tension in his body as he literally devoured her mouth with his.\n\nIt was wild, frantic and so incredibly delicious she moaned into his mouth and tried to pull him closer. She wanted to growl her disappointment when he pulled his mouth from hers, firmly holding her back when she tried to protest. His eyes were almost black in colour, his jaw clenching hard as he looked down at her.\n\n\"Kiss me like that again, honey, and some of the more vulnerable members of the pack are going to get an education they most definitely are not ready to receive yet,\" he said hoarsely, his voice thick with need.\n\nHis words startled her and she glanced around to see a handful of teenagers watching them avidly. She growled loudly in their direction and the group of boys vanished in an instant. Dayton's loud laughter filled the morning air.\n\n\"Well I suppose that's one way to get rid of them,\" he chuckled lightly. \"We're usually a little gentler on them than that, might be something to remember for the future.\"\n\nFreya flushed and leaned her forehead against his chest. She'd fucked up again. \"I'm sorry.\"\n\n\"Hey.\" Gentle fingers tilted her chin up until she met his eyes. He was smiling at her, affection in his gaze. \"They'll dine out on that for at least a month. The sexiest female vampire ever growled at them. The simple fact you actually noticed them at all will give them kudos in the pack.\"\n\nThat made her frown, she had no idea what he meant by that.\n\n\"I'm reliably informed that our youngling males have had a long standing competition going to see which one of them could catch your eye first,\" Dayton laughed. \"Granted, they were probably hoping for something a little less aggressive but they'll take what they can get.\"\n\n\"They're idiots,\" she snorted, finally catching his meaning. \"They're children and wolves at that. Why would I even look at them?\"\n\n\"They're horny youths who see an unattainable beautiful woman in their midst. They can't help dreaming big. The fact you're unattainable is what makes you so alluring to them. You do know that you've been around this compound for years and probably haven't even spared a glance at the majority of the pack. You belong and yet you don't. You're an oddity, something to be curious about.\"\n\nFreya considered what he said. He was right, she solely concentrated on what happened within the Alpha's house because that was the only place she spent any time when at the compound. She ignored everyone else. It was surprising to find she was noticed by the others. She had just assumed they had ignored her as she had them.\n\n\"They're still idiots.\"\n\nDayton laughed again. \"They are that. I will be having a word with them about what's appropriate though they may still look until we're mated. I can't very well blame them for that because it is such a delicious view.\" He leaned down and kissed her again, only this time it was more tender; the heat of the first kiss nowhere in sight.\n\nHe broke away but kept a hold of her hand, tugging her towards the trees. She went willingly, anxious to get some breathing space from all the eyes she suddenly felt were now on her. Was everyone watching so they could see her fail?\n\n\"Why the sudden need to be with me?\" Dayton asked, stopping just into the trees and unbuttoning his shirt.\n\nFreya swallowed hard as he stripped it off easily, her heart kicking up a beat at the sheer perfection of his hard, muscled chest. She couldn't help herself, she licked her lips.\n\n\"I missed you.\" Her words trailed off as he unsnapped his jeans. She swallowed again. Her mouth was unaccountably dry at the moment.\n\n\"I like the sound of that. I missed you too, honey. I thought you were spending time with Liam though. That should have kept you occupied.\"\n\nHer eyes met his, the reluctance with which she looked away evident on her face. \"What are you doing?\"\n\nDayton's lips curled in a slow smile, his eyes glinting with laughter. \"I want to go for a run with you. I'd prefer to have clothes to change into when we get back. You haven't answered my question.\"\n\nShe groaned loudly. \"You're stripping naked in front of me and you want to have a conversation?\" She kept her eyes on his. If she watched him peel his jeans off she would probably go insane and pounce on him. \"And it wasn't a question, it was a statement.\"\n\n\"Semantics, vampire. Did something happen with Liam?\" He sat down and tugged his boots and socks off as he watched her carefully. He knew he was teasing her mercilessly. If she only knew just how much this was crippling him too. \n\nFrom the moment he'd scented her coming out of the Alpha's house he'd been hard and aching for her. Keeping his distance was driving him crazy but he wasn't going to rush her. Taming his vampire had to be done slowly and very carefully. He stood up again and pushed down his jeans. Like most wolves he didn't bother with underwear.\n\n\"I was thinking over your words about having babies, examining my interaction with him so I could decide if I had the capacity within me to be a mother,\" Freya choked out, her eyes following his movements, taking in the male beauty of his body. \n\nHeat engulfed her, warmth spreading downwards to pool between her thighs. He was beautiful, so strong and vital. His erection pulsed to the beat of his heart and she wanted to taste it, feel it in her mouth as she licked and sucked until he cried out with pleasure.\n\n\"Stop thinking naughty thoughts and tell me what conclusion you came to.\" Dayton's voice had dropped an octave, a husky note whispering through his words. It brought her eyes back to his and she could see he was struggling just as much as she was. It somehow made her feel less feral.\n\n\"I think I can do it, be a mother,\" she confessed, her cheeks suddenly burning hotly. \"If that is what you want.\"\n\nDayton almost choked but managed to contain himself. When he'd talked with her earlier he had worried he was moving too fast for her. Now she was standing there calmly telling him she wanted to have babies with him. Granted, she had a unique way of discussing parenthood but he wasn't complaining. Just the thought of his child growing inside her was enough to make his cock twitch hard.\n\n\"What about what you want, Freya?\" he asked gently moving towards her. He gathered her into his arms and tilted her head back so he could look into her eyes. \"Becoming parents is a joint decision. Both partners should want a child so it's conceived in love.\"\n\nShe tried to look away but his gaze was mesmerising. She realised she couldn't hear him breathing and knew her answer had to be so important to him if he was holding his breath. The heat of his body so close to hers was distracting and she had to bite back a moan as she felt his harness pressing into her. \n\n\"I would like to have children with you one day,\" she whispered. \"I want to be a family with you, to have what Nors and Ashleigh have.\"\n\nDayton's breath sighed out and he leaned down and kissed her gently. \"And I will gladly give them to you, Freya. Anything your heart desires I will give to you. All you have to do is tell me what you want and if it's in my power then it's yours.\"\n\nHe kissed her again, a little more lingeringly this time but nothing too passionate. If he gave into his desire he'd be taking this exquisite woman who made his blood boil with a crippling need. But that wasn't what he wanted for her right now. \n\nShe had made a big decision today. He was under no illusions of just how huge a leap it was for her to consider becoming a mother. That decision meant she was accepting him as her mate. The emotions she would be dealing with at the moment would most probably be overwhelming her. He wanted to show her how to relax and embrace those emotions.\n\n\"Run with me, Freya,\" he breathed against her lips. \"Feel the wind in your hair, the earth beneath your feet; the sheer joy of being free to race through the trees. Let the forest into your soul; embrace the sounds and textures all around you. Let your spirit fly.\"\n\nHe shifted into wolf form, growled softly at her once and took off into the trees. She stared after him and then she began to run, following his scent, staying behind him as she let him guide her through the forest. She listened to the bird song on the air, the rustle of creatures in the underbrush. The scent of the forest filled her and it smelled of Dayton. This was who he was, what he loved and had lost for so long.\n\nIt didn't escape her that the last person he'd probably run with like this had been his first mate. Inviting her to run with him was another way of opening his heart to her. He would be remembering Faith, remembering the consequences of that last run with her. He was offering every single piece of himself, trusting her to protect his heart. \n\nFreya knew she was going to accept everything he offered her. He was in her soul now, buried so deep in her heart that she would cease to exist the moment he did. She ran after her wolf and her heart soared as the freedom he offered her embraced her completely. \n\nA tinkling sound filled the morning air and she realised it was her laughter. Tears filled her eyes and joined with the laughter as she flew through the trees with her wolf as her guide. Finally she'd found a place to belong. Nothing and no one would ever force her to give up this feeling. She was keeping her wolf forever, secure in the knowledge that he would never let her go.\n\nDayton circled back towards the compound coming to stop on the wide flat rock where he'd talked to Ashleigh as few days before. He needed to spend some time with her, talk with her about David and her family. He knew it was what she needed and he needed it too. \n\nPart of him would always feel guilty about not being there when they died. There was probably nothing he would have been able to do to stop it happening but that didn't ease his guilt any. He owed Ashleigh for not being there for her when she needed him. He owed her for bringing Freya into his life. He would never be able to repay her for that.\n\nHe rumbled deep in his chest as the scent of cherry blossom assaulted his nostrils and his vampire leapt gracefully onto the rock beside him. Her multi-coloured hair was wild around her head, her eyes sparkling with life as she inhaled deeply and then dropped her gaze down to him.\n\nHe stayed in wolf form, curious to see her reaction. She appeared more accepting of wolves now and he wanted her to accept this part of him. He rumbled deeply again as she sat down and rubbed her face against his side. It was unexpected but pleasantly so. \n\nHe lay down and curled himself against her, his head resting in her lap. She smelled so good, so tantalising that he knew he'd have to stay wolf for a while so he could control his need for her. If he shifted anytime soon all his good intentions would be done for. \n\nHe ached for her. All her talk about having babies made him almost desperate to be with her. Their run had certainly worked wonders for his vampire. She was the most relaxed he had ever seen her but he was still painfully hard for her.\n\n\"Move,\" she sighed, pushing at his head until he growled his reluctance. She pushed at him again. \"Don't force me to show you just who is the stronger of us. It will only dent your fragile male ego.\"\n\nHe shifted to human form, rolling onto his back as he laughed at her idle threat. He knew she wouldn't do as she said. He was curious to know why she was so insistent he moved. He didn't think it was an aversion to his wolf. She had been comfortable enough with him lying against her.\n\nDayton's breath caught as she rose gracefully and slid off her top of in one smooth move. She was bare beneath it and the sun glinted off her skin, showcasing her utterly perfect breasts with their rosy pink tips. If he'd thought he'd been hard before he was wrong. His body pulsed at the incredible sight, his erection becoming so stiff it was painful.\n\n\"Freya,\" he managed to choke out but then his voice died as she kicked off her sandals and stripped her jeans and panties off just as smoothly. He really couldn't breathe then, his eyes fixated on her sleekly muscled thighs, the curve of her hips and that sweet juncture between her legs with a very fine layer of neatly trimmed brown hair. \n\nShe was a Goddess standing there in the sunshine, completely unashamed of her nakedness, her eyes a deep, smoky green that spoke of her arousal. He didn't need to see it in her eyes; her scent told him just how much she wanted him. He could only stare at her, afraid to move in case this was just a dream and he'd wake up to find himself alone in his bed.\n\nFreya watched his face carefully, her heart thumping wildly at the naked desire she saw there. She had seen that expression on many faces before but she hadn't seen it quite the way Dayton looked at her. He wanted her body there was no denying that, but beneath the lust was a look of such adoration that she knew his need was more than just carnal.\n\nShe had acted on impulse and she was glad she had. She wanted him and he was being so careful of her, sweetly protective as he denied himself his sexual pleasure. He was driving her insane. He strode around naked showing her his wonderful body and then he denied it to her. She would be denied no longer.\n\nSmiling she moved to his feet and slowly sank down to her knees. Her hands touched his ankles and he flinched slightly and let out a low groan but he held his position, waiting to see what she would do. Her smile widened and she slowly stroked her hands up his well muscled calves and along his inner thighs.\n\nThere was something so incredibly erotic about the way he lay there and let her discover the textures of his body, her hands moving closer to his long, thick cock which twitched in anticipation. She wanted to devour him with her mouth, instead she took her time and fisted him in her hand as his head dropped back and he let out a deep groan.\n\nSlowly she traced the length of him, gently moving her hand up and down as his hips rose involuntarily and his groans continued. The muscles in his thighs trembled and she delighted in the power she had over him even as she was awed at it. She gripped him tighter and stroked him more vigorously, increasing his pleasure and the sounds issuing from his throat. It was so heady, so exciting that she couldn't hold back any longer and bent her mouth to him.\n\nHe groaned harshly as she took him her mouth and began to suck on him. He tasted divine, his skin so soft around the hard steel of his shaft. His hands fisted in her hair and he pressed her head down even as his hips thrust up gently. She could feel him trying to be careful with her and it made her laugh softly as she took her mouth from him for a moment.\n\nFreya was a vampire and a very old one. She had learned the techniques of giving pleasure with her mouth long before he was ever born. She didn't need him to be careful, she needed him to be wild with need, to let go and forget everything but the bliss she was giving him. Her hot mouth once more took his cock but this time she gave into her own needs and slid him relentlessly inside her mouth.\n\nHis next groan was primal as she took his complete length, sliding him easily into her throat where she held him prisoner as his hips jerked wildly. She did it again and again, building the pressure until he lost all coherent thought and was driving wildly into her mouth. Pleasure hummed through her body as she sucked and swallowed, teased and licked until she felt him ready to release in her mouth.\n\nHe roared loudly, pulsing deeply as his seed raced from his body and filled her eager mouth as she swallowed all he had to give her. The sound of his ragged breathing filled the air as she licked leisurely, soothing him down from his erotic bliss. Then she crawled slowly up his body, her mouth trailing a lazy path over his taut abdomen until she reached his tight, hard nipples and nipped at them gently.\n\nDayton fisted his hands in her hair and pulled her mouth to his, taking her in a searing kiss. He couldn't believe what she'd just done to his body. The level of pleasure she'd given him had been mind blowing and yet he felt a moment's unease too. He had been totally out of control. He could have hurt her. He pulled his mouth from hers to stare into her extremely smug face and had to laugh. She looked so damned pleased with herself. ",
        "\"You enjoyed that,\" he laughed quietly, biting back a groan as she literally oozed over his body, her nipples teasing his chest deliciously.\n\n\"So did you,\" she laughed back, grinding her mouth against his as he rolled her over to lie cradled between her thighs. \n\nThe harsh, abrasiveness of the rock rubbed against his knees and he frowned, reluctantly pulling his mouth from hers. \"This isn't the most ideal place for this.\"\n\nShe threw her head back and laughed loudly, wrapping her long legs around him and pressing her wet heat against his rapidly expanding shaft. \"I'm a vampire, Dayton. I have more chance of breaking this rock than it has of me.\"\n\nHer valid point had him laughing softly as he ran his tongue slowly over her bottom lip. \"I keep forgetting that.\" He moved suddenly, wrapping his arms around her as he stood up and jumped from the rock. \"I take longer to heal that you do. I'd prefer a softer surface.\"\n\nShe kissed him hard, her fingers burrowing in his hair as her tongue teased his and made his knees feel weak. \"You're so fragile,\" she laughed softly, amusement dancing in her eyes as he let go of her. She landed agilely on the feet, her laughter increasing. \"Sensitive too.\"\n\nDayton was delighted at how playful she was, his lips tugging in a seductive smile. She was so beautiful, so open and relaxed. His heart swelled with the love he felt for her. \"Some parts of me are extremely sensitive,\" he chuckled lightly, kneeling down in a patch of thick moss and tugging at her hand. \n\nShe came to him instantly, sitting astride him and wrapping her arms around his neck. Dayton didn't think he'd ever seen anything more beautiful than his wild vampire flowing into his arms with no hesitation at all. Her trust in him was evident and it made his heart soar.\n\nFreya groaned as her body brushed his. He was hard again, pressing against her wet heat so intimately. One hand buried in his hair while the other traced his strong jaw softly. \"You have lots of stamina,\" she whispered rubbing against him sensually. \"I'm impressed.\"\n\n\"What man wouldn't while having you in his arms,\" he countered, his hand catching the nape of her neck and pulling her mouth to his for a deep searching kiss. \n\nHis tortured groan filled her mouth as she rose up and slowly lowered herself onto his body. It was so unexpected that he had to grip her hips hard to hold her still once she sheathed herself on him. If she moved now he would embarrass himself completely. \n\n\"Fuck, Freya! Haven't you heard of foreplay?\" The words were ground out harshly as he took deep breaths to try and calm his body which was aching to drive hard and deep inside her.\n\nHer own voice was a husky sigh as her lips kissed up to his ear and she nipped gently at his lobe. \"I thought I'd given you foreplay,\" she teased lightly, her warm breath sending shivers through his body.\n\nHe was laughing again, a breathy sound that told her just what she was doing to him. \"You know I meant for you, honey. There are so many things I wanted to do to your sexy body before we got to this point.\"\n\nHer answer was to raise her body slowly and then caress every thick inch of him deliciously as she sank back down onto him. \"You kept me waiting too long. I lack patience.\"\n\nDayton growled and gripped her hips tightly, unable to stop himself from sliding her back over his body just as slowly as she'd just done. \"I'll add that to the list of things I need to teach you,\" he groaned and then he was pressing her back against the moss, driving into her in long hard strokes as his head bent to suck a rosy nipple into his mouth.\n\nHis eyes glittered as he took his mate for the first time, savouring the feel of her slick wetness embracing his cock so tightly. He had been waiting so long for this moment without ever realising he had been. He'd been waiting so long for his Freya to come into his life and teach him the joy of being alive once more. \n\nHis heart thundered hard in his chest as he rocked into her again and a sweet moan escaped her lips. He would show his beautiful vampire what real love was, what tenderness felt like, how he intended to stroke and kiss every inch of her soft skin for eternity until she had no more doubts about whether she deserved to be loved.\n\nHis mouth was hot on hers, his tongue dipping inside to taste her leisurely as he rode slowly between her legs, drawing out each thrust to give her maximum pleasure. Her arms and legs twined tightly around him, her breathy cries the sweetest love song he'd ever heard. He wanted to stay like this with her forever, just the two of them sliding against each other's skin, their bodies joined in the erotic rhythm of love.\n\nFreya couldn't breathe. Dayton was doing such wonderful things to her body. His hands and lips left no inch of her skin untouched, pleasure flooding her wherever he caressed. The feel of him driving into her body was like nothing she'd ever experienced before. This was sex but it was more. He was worshipping her with every part of himself, showing her just how amazing sex could be when two people truly belonged together. It was so beautiful it was enough to bring tears to her eyes. \n\nShe didn't want it to end but her need was strong, both of them were. Her mouth watered at the memory of his taste and she wanted to taste him again. She knew if she did that she would effectively be mating with him. Ashleigh had once explained to her how sex was an integral part of mating for Weres. She had accepted that he was hers and knew that if she drank from him right now she would be joining with him forever.\n\nHis sweat slickened chest grazed her nipples and she shuddered at the touch, her tongue licking against his neck almost greedily. His thrusts into her body were becoming more urgent, harder and faster as they pushed her relentlessly towards her climax. \"I need to taste you.\"\n\nHe stilled just as he buried himself deep to the hilt inside her. His eyes met hers and his nostrils flared as he clenched his jaw hard. He looked so beautiful in his passion, his eyes glowing with emotion as they searched her face intently. \n\n\"You know what it will mean if you do this?\" he asked in a hoarse voice. He couldn't hide his desire to feel her bite.\n\n\"I need to bite you, Dayton. I've never needed anything so badly in my life.\" \n\nHer eyes told him just how desperate she was and he growled low in his chest. He needed to claim her too but they had to have a talk about that before he did so. The fact she was willing to claim him first set his heart racing and his cock became harder than he'd thought it possibly could. \"Then take me, honey. I'm yours forever.\"\n\nHe rocked back his hips and drove into her with a need so fierce it rang a tortured cry from his chest. She was pulling him down to her, her teeth nipping at his neck lightly before he felt her fangs pierce his skin and she began to shudder wildly beneath him.\n\nEcstasy raced through him at her bite, his movements becoming frantic as he took her hard and fast, pushing her over the edge ruthlessly as she took him with her in a burst of pleasure so intense he forgot how to breathe.\n\nFreya screamed her release, her head thrown back, her body arching into his as his knot began to form at the base of his cock. He pushed hard, forcing himself into her body, craving to be joined to her so she couldn't escape him. He seated his knot inside her tight body and pulsed deeply. He came in hard jerky movements, giving her his seed as he roared his pleasure into the air.\n\nThey shook together, their breathing harsh, the sounds of their ecstasy carrying on the morning breeze. Dayton finally collapsed against Freya, holding her tightly as he rolled to his side, their limbs entwined as they fought to regulate their heartbeats. \n\nFreya kissed the spot she had claimed him. There was no sign of her bite, but he shuddered as her tongue stroked the area telling her it would always be sensitive to her touch. He was hers now. She had completed her half of the mating ritual. Now it was just up to him to complete his.\n\n\"I love you,\" he whispered, stroking her hair gently. His voice was so full of emotion it made her heart flutter wildly in her chest.\n\n\"I love you too,\" she whispered back and it was the easiest thing in the world for her to say because it was her wolf she was declaring her feelings for. Her Dayton.\n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "love",
        "werewolves",
        "mating",
        "paranormal romance",
        "vampire bite"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-long-walk-home-ch-16"
}