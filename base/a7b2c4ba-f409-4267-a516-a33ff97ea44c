{
    "title": "Hidden Beauty",
    "pages": [
        "Disclaimers and what not: Well I've been tinkering with the plot of this story for months. Between work and family and a dozen other things keeping me away from the lap top, I became stuck with how I would be able to develop and incorporate the character of the superhero. Now that I'm finally finished, I hope you find it an enjoyable read.\n\nThank you to my beta reader for your support, your faith in me, and your input. It means a lot.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe guarded figure crouched on one knee at the edge of the rooftop. The city streets below were filled with the cacophony of sirens, automobile horns, taxi drivers yelling obscenities, and dozens of people coming to and fro. The figure watched silently, drinking in what little peace was available on this perch. Peace. Funny word. So many seek it, some will fight for it, and yet so little find it. Stern eyes narrowed on a suspicious character steadily following a woman carrying a white walking cane who had just gotten off the city bus.\n\nThe sight-impaired female sensed someone was behind her and had been since 34<sup>th</sup> and Garth Streets. She had one more block to go after crossing the park. That was the shortest way home. If only that meeting at work hadn't gone so late, she would've made it home before dark, but now her choices were to take the longer route around the park or cut through it like she normally did. She held her keys tightly in one hand with the point of each key sticking out from between her fingers like she was taught in self-defense class. The other hand gripped her walking cane firmly. Even the cane was something she learned she could use as a weapon, and she had every intention of doing so.\n\nThe sound of a twig snapping on the park grounds caught her attention. The pursuer was closer than she thought. \"Would you like some assistance across the park? There are a lot of suspicious people lurking about.\" She heard the gravelly masculine voice say just behind her. A wave of panic swept through her making her knuckles turn white on the keys. The glint of a knife was caught by eyes hiding in the shadows. Before she could answer, she felt a sudden wind brush past her face, and then heard the unknown pursuer cry out in pain. \"Aaaahh!\" A crack and a thump followed, and then silence except for the normal city noises. She couldn't help but stop, wondering what just happened. Turning around, she cocked her head, listening. Nothing.\n\n\"Gabrielle?\" The redhead spun back around when she heard her name called. She immediately felt the familiar person quickly approach. \"Oh my god, Gabby, what took you so long? I've been worried. It's two hours past your usual arrival at home.\" Her older sister came rushing up to her with a strong embrace. \"Honey, did something happen? Are you okay? Why are you just standing here?\"\n\n\"I'm fine.\" Gabrielle let out the breath she didn't realize she was holding. \"There was an unexpected meeting at the end of work. I should've called you, but I wasn't thinking.\"\n\n\"Well, let's go home. Dinner is ready. I'm so relieved you're alright.\"\n\n\"Lyra?\" the redhead started as she loosened the grips on her keys and cane. \"Is there anyone around us? Perhaps....lying on the ground?\"\n\nThe older woman looked around and then back at her sister. \"No. I don't see anyone. Why?\"\n\n\"I'll tell you about it when we get home. Come on. I'm starved.\"\n\nLyra chuckled. \"You always are.\"\n\n*****************\n\nKaden set the marker down and leaned back in the cushioned black leather office chair. She looked over the colorful scenes one more time. She smiled, liking how the superhero mysteriously took out the woman's attacker before he had a chance to strike. Yawning once again, she felt proud with how this next issue of Tempest was playing out so far. Tired eyes scanned the last frame before shutting off the desk lamp for the night. The latest issue of the comic superhero was already on the shelves, and she was fervently working on the continued storyline in order to stay ahead. The digital atomic clock on the wall vividly displayed 11:04pm in teal blue characters right next to the very first poster; and the newest poster of Tempest herself. Kaden yawned as she walked out of her office. Another late night, and she needed to be at work early to receive her new scheduled route. Bare feet padded into the kitchen. Opening the refrigerator, she grabbed the carton of goat milk and proceeded to chug the remainder of it. She fingered the Tempest magnet on the fridge door and smiled. It was surrounded by a plethora of other heroines and masked figures. Fifteen years had come and gone quickly for the masked crusader since she first hit the shelves of comic book shops across the nation. Kaden remembered she was only sixteen when she first started developing this character, and it took three years to finally get recognized. The major publishing companies, at the time, didn't think Tempest was sexy enough to appeal to teenage boys or male comic fans in general. It was so disappointing, but deep down she knew that's not who Tempest was for. Tempest was meant for all children who needed a superhero in their lives ---- who needed someone to believe in; and Tempest was meant for women of all ages who needed courage, strength, and the understanding to stand up for themselves. Since its publication, Kaden has forever been grateful to the small company that saw the potential Tempest had to reach so many that needed her.\n\n******************\n\nThe clock was about to strike 10am when the sign in the window flipped to \"OPEN.\" Jess unlocked the door and took a deep breath as she looked out the large store front windows. The place had been closed for a couple of weeks since her uncle's passing. Uncle Ted and Jessica had been close during her grade school years when she lived in this town, and while she was in college, but she had never thought her favorite uncle would bestow his business to her. It was a surprise when she received a copy of the Will along with a letter from the attorney.\n\nNow Jess owned the comic book shop, and she looked forward to this new avenue in her life. It was in this very storefront where she was first introduced to her favorite character. She walked down the right aisle and stopped in front of the rack displaying the superhero she grew to love. Picking up an issue, she couldn't resist the smile that formed on her lips as she remembered the number of times Uncle Ted brought her with him. \n\n\"Is it here? Is it, Uncle Teddy?\"\n\nThe big bear of a man chuckled. With a gleam in his sea green eyes, and a scratch of his scruffy brown beard, he pointed to the rack that held the new issue his niece had been waiting for.\n\nThirteen year old Jessica squealed with delight as she grabbed the magazine and held it to her chest. \"This is the best!\" She looked at the cover with glee. The character stood out wearing black leather pants tucked into black calf length Infinity Gore-Tex motorcycle touring boots. A matching black leather vest was zipped over a royal blue long sleeve shirt. A black leather gauntlet gloved hand rose high above the head of raven hair pulled back into a traditional chomage (Samurai topknot). The open hand drew down the lightning from the storm swirling in the sky, and then shot out that same bolt of lightning through the other hand at its intended target. Eyes that were never seen hid behind black and silver goggles with polycarbonate blue mirror lens. This was Tempest, her favorite hero amongst the very small handful she enjoyed.\n\n\"I will let you pick out three issues to take home. I just need your help first with cleaning out the storage room, okay?\" He said in a deep baritone voice.\n\n\"Sure thing! But please let me pick out the issues now. Please?!\"\n\nHe chuckled again. \"Alright Squirt, you go ahead.\"\n\n\"Thank you! Thank you! Thank you!\" Jessica sang, sprinting down the aisles to find the other two comic books that she already knew she had to have.\n\nJess smiled again as the memories floated by. As she placed the magazine back, she caught her reflection in the store front window. Absently her fingers brushed across the jagged scar along the left side of her face that ran from the temple to her jaw line. You have a different life now. Let go of the past. She thought to herself as she walked back to the main counter. She was glad Teddy had entrusted her with the treasure of his store, and she was determined to make him proud.\n\n******************\n\nThe dark brown UPS truck turned right on Walnut. Kaden briefly looked at the GPS program on her phone as it spouted out, \"Your destination is on your left.\" It was going to take her a couple of days to get used to this new route. She was so used to the south side of town and making frequent trips to J City that this downtown area seemed a little foreign to her. Even when she wasn't working, downtown visits were few and far in between. She spotted the quaint shop with its maroon and tan faux siding and the little balcony just above the main entrance. Kaden double parked the truck in the middle of the small street, and then looked over the delivery chart to check the recipient's name and the number of items to be delivered. Grabbing the two boxes, she hopped out, standing to her full height. The tall, solidly built raven haired driver pushed open the half paned glass door. The bell chimed announcing her presence.\n\nA young woman sitting behind the counter on a stool with her head buried in a comic book looked up. She pushed the plastic black framed glasses up the bridge of her nose. Sandra didn't realize she was staring at the UPS driver like an idiot until the heavy boxes were set down on the counter with a thump. The digital tablet and stylus were handed to her to sign. \"Sorry, I'll have to get Jess to sign.\" She awkwardly stumbled as she got off the stool and made her way through the partially open doorway behind her. \"Hey Jess, there's a really hot UPS person with a package for you,\" she whispered with a smirk.\n\nGreen eyes looked up from her paperwork. \"Is that all you think about?\" she asked with a chuckle.\n\n\"I can't help that I notice these things,\" Sandra responded as she returned to the counter.\n\nThe short blonde emerged behind her, fascinated with the tall stoic figure wearing dark sunglasses and patiently waiting. Wow, Sandra's right. \"Didn't mean to keep you waiting. I'll sign for the package.\"\n\n\"No problem.\" Wow, she's beautiful. Those brilliant green eyes could entrap anyone. The driver silently thought. \n\n*********************\n\nFor weeks Kaden made consistent deliveries to the comic shop, and each time, she didn't fail to have her sunglasses in place along with a barely noticeable smile. \"Hey,\" the quirky young Sandra softly stated from behind the counter. \"She's not here right now, though I had already expected her back.\" Sandra pushed her black framed glasses up her nose while looking at the clock on the wall. \"Do you mind waiting a few minutes, since she's got to sign?\" \n\nKaden looked at the time on her Android phone. \"Alright,\" she casually stated. She took the opportunity to look around the shop at the various comic figures, posters, t-shirts, and magazines. Suddenly the front door chimed. She peeked over the top shelf to find the short blonde in a suit skirt, carrying a small brown briefcase. An inky black eyebrow rose up Kaden's forehead at the sight of the skirt and heels. Damn she looks good. I wouldn't mind hiking that skirt up and sliding my hands.... What am I thinking? Cool your jets Kaden. She let out a silent sigh as she continued to watch. She couldn't stop the evident smile which spread from ear to ear, and she was grateful it was hidden behind the Star Wars jet fighter on the shelf. God she looks delicious. Okay, okay stop. She shook her head as if to clear it as she started down the side aisle.\n\n\"Grrr, that damn board makes me so mad sometimes.\" Jess grumbled.\n\n\"What happened this time?\" Sandra asked.\n\n\"They don't want to vote on the proposal to allow a couple of trained assistance dogs to come visit the kids to help boost morale and actually attempt to reach a few of them who have become so withdrawn and depressed.\" She slammed the case on the counter. \"Sometimes I feel like I waste my time there.\"\n\n\"You know you don't. Those kids love you. Your work is important to them.\"\n\n\"Thanks Sandra.\"\n\n\"By the way, UPS is here. I asked her to wait for you to return.\"\n\nExcited by seeing the mysterious driver again, Jess spun around to find Kaden waltzing up to them. \"I'm sorry you've been waiting. I hope it wasn't long.\" She took the tablet to sign. \"Thank you for sticking around,\" she commented with a warm smile. For a moment she thought she saw the corners of the tall woman's mouth turn up.\n\n\"No problem. It gave me something to look at.\" Kaden answered with a toothy grin, and then turned to walk out.\n\nAmber eyebrows furrowed. As the little bell on the door chimed, Jess repeated the comment, \"It gave me something to look at??\" Eyeing Sandra, she asked, \"What do you think was meant by that?\"\n\n\"I don't know. Maybe she found a comic that interested her.\" Sandra pushed up her glasses for the hundredth time today. \"She sure is hot though ---- in an enigmatic sort of way. You know, I never see her without those shades on her face.\"\n\n\"Yeah, that is interesting. Hmm.\"\n\n************************\n\nAt the end of the week, Kaden returned to the shop with another delivery. Checking the time on her phone, she was glad this was the final package for her shift. She was interested in returning to her writing after coming across an odd character earlier today that would make a great nemesis to her current story. It was just a few minutes before the shop closed, so she popped right in and was surprised Sandra wasn't behind the counter deep in another comic book. She took a peek down the aisle on her left and then on the right. There was no one in sight. Her keen hearing suddenly picked up the sound of sniffling. Quietly walking right up to the counter, she noticed the door to the back room was ajar. From the faint sounds, she could tell that someone was in there crying. Stepping behind the counter, she gently pushed the door further open to find Jess sitting at an old and very worn wooden desk with papers in one hand, and Kleenex in the other. Her face was red and eyes were swollen. \n\nSuddenly startled sea green eyes looked up. \"Oh my god, why didn't you announce yourself?\"\n\nSurprised, Kaden said, \"I'm sorry, I thought you heard the door chime. I didn't mean to intrude. I have a box for you.\" She raised the item in question.\n\nThe blonde blew her nose again and then got up to sign for it. \n\nKaden felt really bad for the shorter woman. Curiosity getting the better of her, she noticed that one of the papers that was put down had a military seal at the top of it. \"Is there something I can do for you?\" she asked in all sincerity. \"I mean, would you like someone to talk to? I've been told I'm a good listener.\" She ended with a toothy grin.\n\nIt's the second time Jess saw the tall woman actually have a facial expression. Captivated by the warmth of that smile, she hesitantly said, \"I....I don't want to seem rude, but we don't even know each other. I mean....you can't possibly want to hear my sob story.\"\n\nThe tall UPS driver leaned against the doorframe with arms folded across her chest. \"If I didn't want to hear it, then I wouldn't offer,\" she said softly. Kaden felt very drawn to the hurting woman, and couldn't understand why. She balled her hands into fists to stop herself from wrapping her arms around the strawberry-blonde in a protective and comforting embrace. \"Sometimes, talking to a stranger is the best thing because they don't already have a biased opinion on the matter. I really don't mind. You seem very upset, and I just want to help.\"\n\nJess stared at her and realized that perhaps the woman may be right. She also realized that she could really use a friend right now, and maybe this was the opportunity for it. \"Okay, well, what about you being on duty?\" She pointed to the brown uniform.\n\nWith another toothy grin, the tall woman said, \"I can meet you in one hour. Do you like sushi? We can go to Geisha House on Fifth.\"\n\n\"I actually love sushi. I know the place.\" She extended her hand for a shake. \"I'm Jess, as I'm sure you know from all the packages delivered.\"\n\n\"My name is Kaden.\" She gladly took the offered hand surprised at the tingling sensation that passed between them. \"One hour then.\"\n\n*****************\n\n\"I find it interesting that you're wearing shades while we're sitting here. In fact, you switched to a lighter pair than the ones I'm used to seeing, but still, you're wearing sunglasses indoors.\"\n\n\"I have a light sensitivity,\" Kaden casually commented, and then finished under her breath, \"It's an ocular condition.\" \n\nJess' eyebrows furrowed with curiosity. \"What's the condition?\"\n\nThe raven haired woman was surprised that what she muttered was heard. Uncomfortable with talking about it, she cleared her throat trying to think of something to change the topic.\n\n\"Would you please tell me?\" Jess softly questioned.\n\nKaden found she was unable to resist that cherubic face that looked at her so innocently. \"Uhh...it's called complete heterochromia iridis.\" She took a swig of the Ichiban beer, and then finished, \"Basically my eyes are scary.\" She then tenderly asked, \"So, would you like to share with me why you were crying earlier?\"\n\n\"Hold on,\" Jess abruptly interjected. \"You keep the glasses on because you claim your eyes are scary?! I'm sorry, but have you not seen my face? There's a huge scar that takes up this whole side, if you haven't noticed. What would you think if I kept my face hidden?\"\n\nKaden had not expected the fiery statement which came out of this woman. She smiled inwardly, but kept her outward deadpan expression. Maybe one day I'll show you and hopefully you won't run like others have. \"My eyes are still sensitive. It's better to have the shades on.\"\n\nJess shook her head in disbelief deciding to give up on the argument for the time being. As she dug into her rainbow roll, she couldn't but wonder what could possibly be so terrible about the woman's eyes that would be worse than the scar she's had to live with seeing these past couple of years. She wished she could see the eyes behind those damn frames, but it seemed that the stoic woman didn't want to discuss it right now. People's eyes always fascinated Jess. She believed that in one way they truly were the windows to the soul. There was so much she could tell from someone's eyes, and most often the people she was drawn to were the ones who had a warmth and depth to them. Jess pushed at a piece of sushi with the chopsticks. Not wanting to ruin a possibly good evening with a potential new friend, she tried to figure out how to avoid the topic of her crying earlier.\n\n\"Jessica?\" The blonde's head popped up as sea green eyes searched for the voice that called her name. A stocky older woman in her fifties stepped up to their table with an older man in tow. \"Jessica Reznick, it is you!\" The woman declared with a plastered smile. \"Look at how grown up you are. Harold, you remember Jessica --- who won that pageant in 98?\"\n\n\"Hello, Mrs. Druthers,\" Jess responded unexcitedly. \"It's been a long time.\" She noticed immediately that the woman's obvious stare was on her facial scar.\n\n\"Oh, when we had heard from your late uncle, God rest his soul, of what happened when you were in the military, why it just turned my stomach. Why you ever joined to begin with is beyond me. Oh what a shame those doctors didn't do more to restore that beautiful face you had. You were the sweetheart of the whole county...\"",
        "\"They did all they could, Mrs. Druthers,\" Jess firmly and coldly interrupted. \"And my face is fine compared to what it could have been.\"\n\nThe older woman was flabbergasted. \"Well...\"\n\n\"Come on Judith, we are interrupting their dinner,\" Harold piped in, and then mouthed 'I'm sorry' to Jess as he ushered his wife away. \"We'll catch up with you later Jessica. Maybe come visit you at the shop. You all have a good night.\"\n\nThe two women silently sat as the awkwardness of the past few moments lingered. Finally Kaden said, \"So... Jessica...\"\n\n\"Ugh, don't call me Jessica! Please.\" The blonde pleaded as an obvious sadness blanketed her features. \"I'm sorry I didn't have to respond that way.\" She sighed and closed her eyes.\n\n\"Okay....Jess, how...\"\n\nShe put her hand up for Kaden to stop. The waitress came to check on them, and Jess asked for another beer and then looked back at the raven haired woman. \"I'm just going to lay it out for you because this scar, the letter I received earlier, my crying, and Mrs. Druthers' comments all tie in together. And if I don't just get it out then I most likely won't at all.\"\n\n\"Okay.\"\n\nShe talked first about the very short years she was involved in beauty pageants as a teenager, and then her time in the army. \"I really didn't enjoy the two pageants I was in. So much pressure and stress, and for what? Just to be recognized as something of beauty?\" Jess took a couple of more bites of sushi before continuing. \"The army --- now that was enjoyable. Don't get me wrong, it was hard, especially at first but I stuck it out. I was determined.\"\n\nStubborn is more like it, but I kind of like that. Kaden thought inwardly.\n\n\"I spent five years serving. I taught Jujutsu. That form of martial art was something my father had enrolled me in at age nine. He always thought it was best for a girl to know how to defend herself. I excelled quickly and was grateful I could teach it in the military. When I wasn't demonstrating how to throw your opponent across the room, I worked as part of a team who tested the government's firewall and virus protection.\"\n\n\"So you were a government paid hacker,\" Kaden plainly stated.\n\nJess chuckled. \"Yeah I guess you could say that.\"\n\n\"So it was my third year in the military when I met Colin, who happened to be in my Jujutsu class. We became good friends and hit it off. It was nice.\" She pushed around the last piece of sushi. \n\nKaden noticed that the young blonde was getting lost in her thoughts, so she tried to bring her back. \"What was Colin like?\"\n\nJess smiled softly, holding back the tear that threatened to spill. \"He was very laid back. Just an ordinary kind of guy who had a passion for all kinds of music. I swore sometimes he would play music based on his moods, and he had such a vast collection of CDs. He was kind and patient, and had these beautiful hazel brown eyes.\"\n\n\"Is there anything else I can get you ladies this evening?\" the waitress chimed in.\n\n\"No, I think we're good,\" Kaden responded.\n\n\"I will leave this here whenever you're ready. There's no rush. Please enjoy your night.\"\n\nAs she walked off, Jess leaned forward and softly asked, \"Would it be okay with you if we take a walk and continue the conversation?\"\n\n\"That's fine.\"\n\n********************\n\n\"We dated for almost two years.\" The blonde resumed as they leisurely walked towards the park. \"He was going to ask me to marry him.\"\n\n\"How did you know?\"\n\nJess tucked a lock of strawberry blonde hair behind her ear. \"He told me in a letter after the accident.\" She sighed and stepped towards a bench to sit. When the taller woman joined her, she continued. \"We were at a party at our favorite bar and grill. Colin only ever drank beer, and if he happened to get drunk, he was normally a rather subdued type of drunk. Somehow his buddies thought it would be a good idea to have him drink whiskey sours, and I never understood why they did that.\" She looked off in the distance at nothing in particular as her mind replayed the scene. \"After three or four of them, Colin grew very quiet, but I could also see that he was somewhat agitated. We started playing pool and another drink had been pushed into his hand. Colin missed the shot on his turn because some tall stranger bumped into him. He threw down the pool cue and just started cussing up a storm. Him and the stranger exchanged threats and Colin's friends tried to diffuse the situation, but it was like he wasn't in his right mind. He suddenly shoved the other guy, who returned with a punch to Colin's jaw. A scuffle broke out that escalated quickly. I apparently had this idea that if I could just knock Colin out, then that would put an end to all of this and I'd apologize later. When I put my hand on his shoulder, swinging him around, it was too late when I saw the broken beer bottle in his hand. In surprise or just utter shock, I didn't expect him to come at me in a blind haze. The next thing I knew I woke up staring at the ceiling from the hospital bed.\" Jess ran a hand through her shaggy blonde locks, and let out a huge sigh before finishing. \n\n\"He was so ridden with guilt over what happened. He couldn't face me, and claimed it wasn't because I looked ugly. In a letter he explained how much he loved me and wanted to marry me and have children. But he kept beating himself up over the incident. He volunteered to be assigned anywhere there was danger. I found out from one of our mutual friends that Colin basically went off the deep end. It was like he sought after death, walking away from what we had. Well, later that year I received the notice of my uncle's passing. So I inherited the comic book shop and decided to just leave the military and everything else behind me.\" She wiped at her face as a few more tears spilled.\n\nKaden watched carefully, debating with herself whether she should embrace her new friend to comfort her or not.\n\n\"When you found me earlier in the office, I had received a certified letter from the military that Colin was killed in Afghanistan. They included a sealed letter that he apparently requested be delivered to me upon his death. In it, he spoke of love, more apologies, and guilt. He just couldn't forgive himself for disfiguring me. He said that he knew each time he would see the scar, it would be a reminder of the terrible wrong he had caused me.\" Her hand reached up to cover her mouth as she sobbed openly. All of the pain, heartache, and anger rushed out like a tidal wave. \n\nThis time Kaden didn't stop her arms from circling around Jess. She pulled the distraught woman against her chest, holding her tenderly. As night softly fell around them, she wondered how she could help. I guess just be her friend. At least it's a start.\n\n******************\n\nIt had been over a week since they last talked. After that one night that Jess opened herself up, neither of them thought to exchange phone numbers. Jess figured she would see the beautiful UPS driver when deliveries were made, but nothing came to the shop, even though she knew there were a couple of packages she had been expecting. As she worked through the shop's financial records, she wondered if Kaden would be interested in going out again. Jess couldn't help but find the woman absolutely intriguing and so comfortable to be around. \n\nOne late Wednesday afternoon, Jess was re-stacking the new edition of her all time favorite comic series, Tempest. It was one of the issues that had actually flown off the shelf quicker than she had expected this week since they put it out. She was glad to know sales were actually going very well in general for the store. \n\nThe front doorbell suddenly chimed, announcing someone coming in. She couldn't stop the smile which spread across her face when she saw the tall uniformed woman approach the counter with a small box. Sandra was just about to call for her, when she popped out at the end of the aisle. The women exchanged pleasant grins. \"Hey.\"\n\n\"Hey yourself,\" Kaden responded with a playful smirk.\n\n\"It's been awhile since we've seen you,\" Jess casually stated.\n\n\"Yeah, I was shocked there weren't any deliveries here until now.\" Kaden commented as she clicked the stylus on the tablet screen. \"How are you doing?\"\n\n\"I'm good. Just keeping myself busy.\"\n\nA moment of silence fell between them. Kaden didn't want to leave so quickly, but she wasn't sure of what else to say. Would she find it odd if I asked her out? \"Well, I better finish my....\"\n\n\"Actually would you be interested in getting some coffee or beer or whatever later?\" Jess quickly asked.\n\nA small barely noticeable grin graced the tall woman's face. \"Sure. Where should I meet you?\"\n\n\"How about Dressel's Tavern on Cherry Street?\"\n\n\"Nice place. They have my favorite beer on tap.\"\n\n\"Oh, and what would that be?\"\n\n\"St. Bernardius. It's a very smooth trippel.\"\n\n******************\n\nKaden displayed a very satisfied grin after taking a swig of her beer.\n\n\"So would you like to tell me about yourself? You pretty much know everything about me from my crying fit, and yet I barely know you. Are you married? Do you have a significant other? Do you have any pets? Do you live alone?\"\n\nKaden chuckled over the barrage of questions. With a mischievous grin, she said, \"No. No. No. Yes.\"\n\n\"What?\" Jess asked confused, and then she realized Kaden just answered the questions. \"Oh come on. You know what I mean.\"\n\nKaden laughed. \"Okay, okay. Never been married. The last steady girlfriend I had was in college, and after she graduated, she moved overseas to follow her passion for Renaissance architecture. I didn't want to leave the U.S at the time. Dated occasionally but nothing really panned out. I do live by myself. I don't have any pets. I love dogs, and have thought about adopting one, but I've been very busy.\"\n\nFor some unknown reason to Jess, she found the woman fascinating. There was so much she wanted to know, so many things she wanted to ask. Taking a gulp of beer, she continued, \"So umm, do you ever take the sunglasses off?\" She popped a tempura fried oyster in her mouth.\n\n\"Yes.\" Kaden answered as she also grabbed an oyster and dipped it into the tangy sauce. \"Usually when I'm home.\"\n\n\"Do you keep your environment mostly dark?\"\n\n\"Not dark-dark, per se, just very dimmed.\"\n\n\"Is it painful to be in bright light?\"\n\n\"Very bright sun, yes. Artificial lighting is not so bad for a couple of hours.\"\n\n\"Does it affect your vision?\"\n\n\"So far I have 20/20.\"\n\n\"Ugh, why does it feel like I'm pulling teeth with you?!\"\n\n\"Why do I feel like I'm in a dentist office?\" Kaden retorted. They both busted out laughing, which helped lighten the mood and made them more comfortable. \"I'm sorry, I'm not much of a conversationalist. I really don't mind answering questions; I'm just not very forthcoming with information. I guess I'm not one for talking about myself.\"\n\n\"It's alright. So you've worked at UPS since high school. That's some dedication. I take it you must like it.\"\n\n\"Yeah, it's fine. The hours and pay are good.\"\n\n\"Can I get you two anything else?\" the waitress asked as she passed by.\n\n\"Yes, another round of beer, and....\" Jess looked at her new friend and asked, \"Would you want to share a platter of the Bang-Bang shrimp with me?\"\n\n\"Sure.\"\n\nShe looked back at the waitress, \"And the shrimp platter.\"\n\n\"Of course, I'll be right back.\"\n\n\"Thanks,\" she said turning to Kaden. \"I love the sweet spicy sauce that comes with it. So do you work on the weekends?\" Jess inquired as she finished the last of her beer.\n\n\"Not usually, unless someone is gone on vacation.\"\n\nJess toyed with the idea in her mind of asking her new friend to join her at the upcoming convention. \"There's a Comic Con this weekend in S-city. I was going to browse through the new comics and make some purchases for the store. Since it's just a two hour drive, would you be interested in hanging out?\"\n\nKaden gulped. She knew she was busy this weekend. In fact, there was no way to get around what she had to do. \"I'm sorry. This weekend I already have plans. Going out of town to meet with a friend....\"\n\nThe waitress was on her way back with the requested appetizer when an inebriated customer in the next booth got up without paying attention. He knocked into the waitress, who lost her footing. The shrimp flew everywhere. Kaden's eyebrows shot up in realization of the waitress' body coming towards, so she leaned out of the way. Arms collided with back of the booth next to Kaden's head and the spicy sauce splattered on her face.\n\n\"Oh my god!\" Jess yelled. In horror she watched the raven haired woman try to wipe the mess off with the cloth napkin.\n\n\"Shit! It's in my eyes.\"\n\n\"Oh hell! Come on let's get you to the washroom.\" Jess got up, leading Kaden by the arm.\n\n\"I'm sorry, I'm sorry. Oh I'm so sorry.\" The waitress kept repeating as the two women went into the ladies room. \n\nThey got the sink turned on, and Kaden proceeded to quickly wash it all off. Trying to be helpful, Jess handed her a few sheets of paper towels. \"My god what a freak accident. Are you okay?\"\n\nKaden, still hunched over, dried her face, and then began drying the glasses she had also washed. \"It burns but I think I'll be fine.\" Not quite standing up yet, she proceeded to slip the frames on.\n\nJess halted her actions with a gentle hand. \"Please,\" she softly asked, \"may I see?\"\n\nWith a sigh, Kaden slowly stood to full height, looking directly in the mirror. Jess was dumbfounded by what she saw in the reflection. She took a step closer and hesitantly reached out a hand on Kaden's cheek to turn the face towards her. She was beyond captivated by the fascinating orbs. Aside from the area around the eyes being red and a little swollen from the hot, vinegary sauce, they were mesmerizing. The left eye was a very vibrant green with some flecks of brown and the right eye was the brightest blue she ever witnessed on a person. It reminded her of icy ocean waters in winter. She felt like she could get lost in them forever, and there was a part of her that really wanted to. \"They're absolutely amazing,\" she softly stated. Absently her fingertips moved ever so tenderly down the sculptured cheek and then trailed to the side of Kaden's neck. For a moment, Jess mentally swore that the color of the eyes darkened.\n\n\"Is she alright?\" Came the waitress' voice from the doorway. \"We are truly sorry for what happened. Your dinners and drinks are on the house.\"\n\nThe women nodded their thanks as the waitress left. After gazing into those eyes, Jess realized that she was falling for this statuesque goddess. If I tell her and she's not interested, am I going to lose her friendship?\n\n\"You know, I've had most people back away when they see my eyes,\" Kaden softly commented. Is it possible that she could be the one person who truly isn't scared? She is so beautiful. I just want to kiss her endlessly.\n\n\"Really?! That's insane. How could they want to distance themselves when I just want to drown in them?\" She absently moved closer, their bodies touching in different places, and then she realized what she had said out loud. Jesus, I think I just outed myself. Maybe she wasn't paying attention. She watched as the tall woman softly brushed the back of her fingers down the cheek that sported the scar. The gesture made Jess' stomach flutter.\n\nIt's now or never, so get on with it. Kaden thought. \"Jess,\" she cleared her throat trying to find the words, \"if you're interested, I would like to see more of you.\" She ran long fingers through her jet black locks. \"Umm, I mean more than....\"\n\nTwo teenagers walked into the restroom without paying any mind to the couple's somewhat intimate stance. Jess and Kaden backed away from one another. The strawberry blonde returned the sunglasses to her friend and asked, \"Would you like to walk for a little bit?\"\n\n\"Yeah, that'd be great.\"\n\n********************\n\nThe friends walked in silence for a while, each one at a loss for words. Damn, I wish we had not been interrupted. Kaden thought to herself.\n\nI wish she didn't have her hands stuffed in her jeans. It would be so nice to reach out and hold one. Jess thought as she sighed. I wish she had finished saying what she planned on back there. Maybe I should just say something. \"My answer is yes, I'm interested.\"\n\nKaden's eyebrows rose in surprise, but her heart was relieved. They stopped to face one another. Large hands gently reached out to grasp Jess' smaller ones in her own. \"So am I,\" she added with a warm smile. Something suddenly caught Kaden's eye from across the street. With an impish grin, she asked, \"Totally off topic.... Do you like Tekken?\"\n\nJess' eyebrows rose in confusion, she shot the taller woman a suspicious smirk. \"That is so outdated, but I actually do.\"\n\n\"You want to go toe to toe?\"\n\nHer nose scrunched as she chuckled. \"Is that a challenge?\"\n\nKaden nodded, pulling the younger woman to follow.\n\nBoth of them laughed as they attempted to best the other in a game from their childhood. Their characters fought for six levels before Jess threw her hands up in victory. \"Yes!! Ha! I gotcha!\"\n\n\"A minor slip. Perhaps I let you win,\" Kaden commented with a Cheshire grin.\n\n\"No way, I beat you. Fair and square.\" They laughed again as they looked to find what else they could play. In the back of the arcade, in an adjacent room, where it was less noisy, they found a Skeet Ball machine. Taking turns, they tested their skill for the highest points.\n\n\"So you're okay with being involved in a relationship again? I mean since...\" Kaden asked out of the blue causing Jess to miss her intended goal. The ball bounced and landed in the outer ring for only five points.\n\nShocked and confused, the shorter blonde looked at her momentarily speechless. \"Did you just throw that out to screw up my swing?\" she inquired sarcastically.\n\n\"No.\" Kaden normally never felt nervous but for some reason she was feeling it now. Maybe I shouldn't have asked such a forward question. I mean hell, she just got the letter of his death and continued love a week ago.\n\nJess wondered how best to answer. She just wasn't sure how much information to give or not give. Finally she decided she might as well be honest. \"When Colin and I parted ways, I still loved him for quite some time. It was a few months when I realized that I needed to move on with my life. In fact, he encouraged it. It was very hard because I still didn't do well with folks staring at me, and the whispers behind my back were worse than the stares.\" She ran a hand through her golden locks. \"A friend of mine at the time tried to encourage me so she took me out to a club because she knew I loved to dance. We were having a good time, and I did my best to ignore people's eyes on me. About halfway through the night this guy approached. He seemed nice. I was stunned by his approach that I didn't notice how he made an effort to stay on my right side. Anyways, at the end of the night, he asked if I'd be interested in coming over to his place. I figured what the hell, why not.\" She blew out a heavy sigh before continuing. \"Well I went to tell my friend, Sandra, I would be leaving, and as I returned, I heard him say to his buddies how he planned on bending me over cause he didn't want to have to look at my face. He didn't even realize I was behind him. When he turned around with a look of shock my knee made solid contact with his groin. I was very hurt by it all.\" She blinked back a couple of tears that threatened to spill. \"That was the end of that. So basically I've been willing to move on, but this,\" she pointed to the jagged scar, \"has made it difficult.\"\n\nKaden's heart went out to her. She automatically took her friend's hand, and giving it a squeeze, she proclaimed, \"I cannot understand how he could say something like that. He was definitely an ass.\" She sensed Jess was feeling vulnerable after relaying the story, so the tall woman willingly took off her shades with the hope of conveying that she empathized with Jess. I know what it's like to have people stare and back away. She silently thought as she gazed into the glossy sea green eyes. The knuckles of a free hand gently brushed Jess' cheek. \"Obviously he wasn't worth your time. You are absolutely beautiful.\" She slowly moved forward, closing the gap between them.",
        "Jess swore her heart was going to pound right out of her chest. The intensity of those different colored orbs made her body tremble. Silently she thought. Please kiss me. Please, please, please do it.\n\n\"Sorry folks, we're closing,\" announced the teenage employee as he entered the room. He quickly jumped back against the door frame when Kaden shot him a very aggravated look. \"Jesus!\" he declared as he stared in shock at her eyes. \"Ss...ssor...sorry but it's...eleven. We close at eleven.\" He stuttered and pulled himself out of the room.\n\nKaden shut her eyes tight in aggravation. Pinching the bridge of her nose, she released a slow and steady clenched sight. Goddamn it with the interruptions between us! Kaden inwardly yelled. \"Okay, so that's the kind of reaction I'm used to from people,\" she commented aloud.\n\nJess couldn't help the corners of her mouth turning up into a small smile because she knew those beautiful orbs gave her a very different reaction than what others saw. Tugging at her friend's shirt, she said, \"Come on.\"\n\n********************\n\n\"So where'd you park?\" Jess inquired as they made it back to the tavern.\n\n\"Right in front.\"\n\nThe strawberry blonde looked at the cars, wondering which one her tall friend would drive, but when she saw Kaden step up to the bike, her eyes grew wide. \"You drive a motorcycle?!\"\n\nKaden gave her a toothy grin. \"Yep. It's a 2010 DYNA Fat Boy Harley.\" She placed the jett black helmet on and swung her leg over the seat.\n\n\"That is so damn......\" she couldn't think to finish her sentence. They silently looked at one another, and she finally said, \"sexy.\"\n\nKaden smirked. \"Would you like to go for a ride?\" She watched a bright and excited smile grace Jess' face, and then it quickly grew somber.\n\n\"Oh I would love to....I really would.\" Jess wanted to kick herself. \"Damn it, I have an early morning board meeting at the hospital and I haven't finished working on my presentation for it.\" She sighed. \"I know that sounds so lame, but it's true. I have to be ready for this meeting and if I go with you, I know that we'll be up all night --- which I wouldn't mind, but this meeting is so important.\"\n\n\"It's okay. Another time then.\"\n\n********************\n\nThe weekend came quicker than expected, and Comic Con 2012 was bustling with people of all ages. The K-conference center was packed and noisy. The main room had been decorated to the gills with banners, posters, and life-sized cardboard cutouts of superheroes and villains alike. Merchant tables were well stocked with magazines, action-figures, and many other paraphernalia that any average diehard fan would want.\n\nJess hadn't been to one of these since she was eleven. It almost didn't look any different than when she was a kid except for new characters to fawn over, more people, and more memorabilia. She looked over the convention map in hand to find the one specific booth that she was excited about. That is where she wanted to go first before taking care of the business of perusing new comics to order for the shop. Down the center aisle, she passed by many of the booths of well known characters from childhood --- Superman, Batman, and Wonder Woman --- which she couldn't help smiling over. In her heart, Wonder Woman was always going to be her first heroine --- the first one she was introduced to, the first one that captured her excitement of females who kick ass. She had one very special issue that was signed by the Amazon Princess herself, the first time Uncle Teddy brought her here. Presently that issue was encased in a special picture box and sat on a shelf in her bedroom. Today, Jess hoped to have a different signature on the special edition issue she had tucked into her news bag this morning. \n\nShe passed the X-Men table and turned left. As per the map, the booth she needed should be half way down the aisle on her right. As she weaved her way through the throngs of people, she suddenly saw the line ahead. Adolescent boys and girls of various ages stood with their parent and/or guardian at the very table she sought. Jess' heart sank a little as she stepped to the back of the line. She didn't expect it to already be this long, but then again it took her a lot longer to get on the road this morning than she had anticipated. Looking at her cell phone for the time, she figured the wait wouldn't be so bad and she would still have enough hours to browse and get business done.\n\n*********************\n\nThe character known as Tempest had been signing magazines and other paraphernalia for hours. The clicks of cameras accompanied the meeting of each child, teenager, and adult. Grateful for the protection to her eyes from the polycarbonate blue mirror lens of the silver goggles, she smiled one more time for the camera. Well it actually wasn't a smile. Tempest had an infamous smirk that only turned up the corners of her mouth and was accompanied by a raised eyebrow. Hidden eyes suddenly caught the glimpse of a familiar individual standing in the line. A moment of panic crackled in the air. She wondered if the short strawberry blonde would figure it out. An opportunity had not come up to tell the young woman her little secret, but the fact was that she actually enjoyed generally having this secret for over a decade. She liked that her identity was kept out of the public.\n\n\"You're my greatest hero,\" a girl beamed as she approached the table.\n\nTempest looked down at the brown-eyed girl with the toothy smile. She crouched down to be on the same level as her, and said, \"Thank you sweetheart.\"\n\n\"My twin brother thinks you're awesome too but he's really shy.\"\n\nThe superhero nodded in his direction and said, \"Don't worry, it's okay to be shy.\"\n\n\"Will you sign our copies?\"\n\n\"Of course. What is your name?\"\n\n\"I'm Vicky, and he's Vic.\"\n\n\"How old are you two?\" Tempest asked.\n\n\"We are going to be twelve in October!\" the girl shouted exuberantly.\n\n\"It seems you're excited about that.\"\n\nThe girl nodded brightly. \"We might have a new baby brother by then. Mommy's getting big. Isn't that right Daddy?\" She grabbed her father's large hand, giving it a tug.\n\nHe chuckled, answering, \"Yes.\"\n\n\"Well, that is wonderful news,\" the superhero commented as she returned the comics to each of them.\n\n\"May.....I...touch your sword?\" the young soft voice of the other twin spoke.\n\nTempest gave him her signature look, and said, \"Only if it's okay with your father.\"\n\nThe older gentleman with the well-trimmed goatee clapped a proud hand on his son's shoulder, and nodded his approval to the heroine.\n\nShe slowly pulled out the sword from the scabbard attached to her back, allowing the sound of the schwing to be heard. Holding it flat on her palms, she extended it towards the twins. \n\nVic hesitantly reached out with complete awe that he could have this opportunity. He looked into her face with big brown eyes and said, \"It's just as awesome as you.\"\n\n********************\n\nThere were only two more people in front of Jess. She fidgeted with the front flap of her bag. Come on Jess, why are you feeling nervous? Cause you're only getting the signature of the author of your favorite comic series, and this person just happens to be dressed as the superhero! No big deal. Okay, it is a big deal. It shouldn't be, but it is. I know it's just a person---- an everyday normal person just like me who happened upon this great idea of a comic series and so became famous. It's okay. It's okay. You'll get through this. Just breathe. She looked at the character signing, and was taken back at how amazingly well the costume was worn. Wow, she looks incredible --- just like Tempest. I never knew someone could look so damn sexy in leather. God, is it hot in here? I feel like I'm sweating. Maybe it's just from there being so many people. I wish this author didn't keep her identity hidden. Fans have been wanting for years to see her, but even so, she is stunning in that costume. Oh my god, it's going to be my turn. She absently scratched an itch along her temple and was reminded of the jagged scar that went down to her jaw. Suddenly she became self-conscious and quickly tried to push it out of her mind. Jess knew it shouldn't matter, but she was prey to being human.\n\nTempest stood to her full height, and casually laid a gloved hand on the podium next to her that she was using for autographs. The short strawberry blonde was a beautiful sight to see. She was grateful that the goggles hid her eyes, and it seemed that Jess didn't recognize her at all. Part of her wanted her friend to know the secret, and the other part of her just wanted to keep it to herself. If I speak, it might register who I am. Hopefully I won't have to say anything. Wow, she looks delicious. I just want to pin her against a wall and seize her mouth. What am I thinking?! Oh boy, I'm in so much trouble. \n\nClearing her throat, Jess stepped forward, and asked, \"Would you sign...\" she nervously laughed at herself, \"I'm sure you've been hearing that all day.\" She handed over the issue and watched as the character began writing. It's now or never Jess. Grow some balls and ask before the opportunity flies out the window. She cleared her throat again, \"Um, I have an odd question, and I'm sure it's a shot in the dark, but I figured I would try anyway.\"\n\nTempest took note of the fidgeting and the cute way she nibbled her bottom lip in thought.\n\n\"Well, I volunteer at the Children's hospital, to help support those who suffer disfigurement from tragedy. I thought it would be so awesome if you would be willing to come out one afternoon and maybe hand out a few issues, that I would happily purchase of course, and maybe talk to some of the kids. So many of them really need a sense hope, you know, something to look forward to. There's a number of them who remain disfigured their whole lives, and it becomes so disheartening to face their peers, family, and just the world in general. I'm sure you're very busy, but I just thought that you could perhaps find a way in your schedule.... Oh hell, now I'm babbling. Sorry.\"\n\nTempest grinned, and nodded. She wrote something else on the comic book, and then handed it back to Jess. A little confused that the person didn't speak a word to her, the blonde looked at what was written. \n\nTo Jess \u2013 \n\nYou're a stunning woman whose beauty shines through touching everyone you meet. You have a way of bringing out the good in people. I will happily meet with the children per your request.\n\nTempest\n\nP.S. Have dinner with me. Meet me on 8 West just after 5pm and we'll talk more. You have my number.\n\nKJW\n\nAmber eyebrows furrowed confusedly. Excited, overjoyed, and frightened all at the same time, she didn't know what to think. The author wants to have dinner with me? Why? I'm stunning? Wait, I have her number?! Do I know her?? How? Wait a minute! I never gave her my name! She looked up at the stoic face, her mouth agape, and the questions still rolling through her head. Suddenly an image of Kaden in her uniform and sunglasses stepping up to the register flashed through her mind. Eyebrows shot up in surprise. \"K....?\" She absently began to utter and was immediately halted by a gentle yet firm finger at her lips. The scent of the leather drifted up her nose, and she found herself captivated by this mysterious woman. Gulping, Jess slowly nodded her understanding. When her lips were freed, she softly said, \"Thank you for your time.\"\n\n********************\n\nIt was 5:21pm and Jess found herself pacing in front of the eighth floor elevators. She didn't know where on 8 West she was supposed to be so she figured that near the elevators would be her best bet. I still can't believe Kaden is the author of Tempest ---- hell she is Tempest! Damn!! And oh my god she looked divine in that costume. She ran small fingers through her golden mop of hair, and sighed. \n\nThe familiar ding announced the arrival of the elevator car. Out of the now open doors stepped the tall raven haired character. With a slight smile, she took the hand of a surprised and nervous Jess, and led her down the hall. In front of her room, she turned around to face the shorter woman. \n\nJess didn't realize the door was at her back, even when the dark woman came forward leaning her hand against the wood. She felt an intense heat swirling between their close proximity, and it made her heart beat faster. Kaden's character was flirting, and she liked it. \n\nThere was something about the costume, perhaps the leather that brought out a bolder confidence and swagger for Kaden. She watched as the shorter woman's pulse jumped beneath the tender flesh. The succulent and smooth neck beckoned her. A part of her wanted to ravish the woman right here but not like this --- not as Tempest --- at least not yet. Hmm, I wonder if she's ever had fantasies about Tempest.  Reaching up with a free hand, she pulled the goggles down from her face, and eyes locked on to one another.\n\nJess' breath hitched as she saw the storm of emotions within those haunting orbs. \"The colors are darker,\" she commented softly. She laid a hand gently upon Kaden's cheek, and then tenderly brushed the fingers down the neck to the top of the royal blue shirt collar. The passion and desire in those eyes were clearly evident, and it made Jess' stomach clench. \n\nSomehow, Kaden managed to unlock the door with the key card, and pushed it open. She quickly grabbed Jess around the waist as the shorter woman lost her balance from leaning on the door. They both sort of stumbled inside. \"You okay?\" Kaden softly asked.\n\n\"Yeah, sorry,\" Jess responded as they each stepped back from the embrace.\n\n\"Have a seat, and I'll change so we can go to dinner.\"\n\nThe strawberry blonde surveyed the room briefly before sitting on the edge of one of the two queen beds. There were clothes and gear lying randomly on the one mattress which made it obvious that Jess was sleeping in the other one closer to the large bay window. She silently watched under hooded eyes as she tried to make it seem like she wasn't staring, but she couldn't help the fact that she truly did want to stare. First the gauntlet gloves came off, then the sword rung from out of its sheath on her back. Next the vest was peeled off. Jess held her breath as the shirt hit the floor. The play of muscles that flexed on the naked abdomen and arms made her core ignite. She was caught staring at that moment, and she quickly turned her head making like she had to clear her throat.\n\nKaden smiled. Hmm, I would say she likes what she sees. \"Would you like some water?\" she asked as she unbuckled the boots, kicked them off, and then proceeded to undo the black leather pants.\n\n\"Uh sure.\" Jess responded while gazing at the floor.\n\nThe raven haired beauty grabbed a bottle from the mini fridge and meandered over to her friend only wearing boxer shorts and a sport bra. She crouched down and tilted her head seeking the forest green eyes. \"I figured you were used to women in all manners of undress from your years in the army. Am I making you uncomfortable?\" she toyed.\n\nThe strawberry blonde didn't know how to respond. Eyes darted back and forth from one random object in the room to another as the thoughts fled through her head. \"I have seen women in the barracks. I just....\" Damn it, do I just tell her what she is doing to me? I want so badly to touch her. I want to see how many varying shades of colors can appear in those orbs. \n\n\"Jess?\" Kaden softly started as she gently lifted a chin to look into her eyes.\n\n\"I uhhh....it's that I....\"\n\n\"Hey K,\" began the voice of the older woman who just walked through the adjoining room's connecting door, \"are you interested...? Oh shit.\" The woman stood there flustered.\n\nWith a sigh, Kaden said, \"Jess this is my agent, Margaret. Margaret this is my friend Jess.\" Running a hand through raven locks, she asked with a heavy sigh, \"So what did you need?\" \n\n\"I'm sorry K; I didn't expect you'd have a guest. It's really not important. Uhh...see you tomorrow.\" The salt and peppered haired woman quickly excused herself.\n\nThe two friends hung their head in silence for a few seconds. \"I'm going to take a quick shower. You think about what kind of food you're in the mood for, and we'll take it from there. Sound good?\"\n\n\"Sure,\" Jess answered with the best smile she could muster.\n\n**************\n\nThe small authentic Mexican restaurant was one of Kaden's favorites. The food was beyond delicious and not too spicy. The eatery was situated far enough out of the way of tourists and Con fans, just at the edge of a Latino neighborhood.\n\n\"Thanks again for agreeing to have dinner with me. It beats ordering pizza and sitting in the hotel room, and it's really nice to see you.\" Kaden declared with a grin as she proceeded to take another swig of the dark cold brew.\n\nLeaning forward, she said in a low voice, \"I must say it was definitely a shock to finally find out who the author of Tempest is.\"\n\n\"Are you disappointed?\"\n\n\"Hell no,\" she said dipping a tortilla chip in the queso. \"I would say the opposite. I'm elated.\"\n\n\"Really.\"\n\n\"Oh yes,\" Jess answered in a sultry purr. \n\nThe waiter stopped to pick up their empty plates. \"Algos mas senoritas?\"\n\n\"Dos flan, por favor,\" Kaden requested.\n\nHe nodded and left with the dishes.\n\n\"You placed your order earlier in Spanish and now the dessert. Are you fluent?\" Jess asked.\n\n\"I guess you could say I'm fluent enough to get around. I grew up in a Latino neighborhood and so I picked up on it. Also took it in high school. How about you? Speak any languages?\"\n\n\"I'm fluent in Spanish. Took it in college, and again in the army.\" The strawberry blonde pushed a lock of hair behind her ear, and absently brushed the facial scar with the back of her fingers. It suddenly made her more conscious of it. She tried to push the negative rambling out of her mind. \"So, why do you work at UPS in addition to being an author?\" She then whispered, \"And why do you keep your identity hidden?\"\n\nKaden chuckled. \"I work because it gives me an opportunity to watch people and therefore gives me ideas for characters or scenes. I've been with UPS since high school. My father worked for them all of his life. So I was lucky to start out with a good rep through him. Only in the past few years did I switch to part-time so that I can do more writing and drawing.\" She dug into her dessert and watched how much Jess was enjoying her own. The small mews of delight coming from the blonde made her core twitch. Tearing her gaze away from the woman, she was grateful for the sunglasses she wore. \"I...stay out of the limelight because I don't like the attention. I don't need it, I don't crave it, and I don't want to be distracted from what is really important.\"\n\n\"And what is that?\"\n\nThe raven haired woman cocked her head in thought. \"No one has ever asked me, so it's hard to put into words.\" Kaden took another swig of beer. \"I guess hope....and self-confidence....and courage.\"\n\n\"So basically Tempest herself,\" Jess added. \"You're trying to reach children, teens, and whoever else with that message.\"\n\n\"Yeah, I guess I am.\" \n\n\"That's beautiful.\" They sat silent for a few minutes and the waiter brought Jess another large margarita.\n\nKaden decided to take the opportunity to be playful. \"Be careful there. They say tequila makes your clothes fall off.\"\n\n\"Maybe that's what I'm hoping for,\" Jess countered with a mischievous grin, and almost made the raven haired woman choke on her beer.\n\n***************\n\nThe two friends walked the neighborhood for a little while hoping to extend their time together. The surprising cooler night air suddenly made Jess shiver. She had not planned on still being in the city, so she didn't bring a different shirt but she was glad it turned out this way. She really enjoyed her friend's company and the humorous banter they seemed to easily fall into with one another. Lost in her musings, a sudden warmth softly enveloped her. Kaden draped the brown and tan flannel shirt she had been wearing, over Jess' shoulders. The shorter woman inhaled the sweet earthy shower soap scent that lingered on the material. \"Thank you,\" she said with a smile.",
        "Kaden equally returned the gesture and said, \"I noticed you were rubbing your arms.\" \n\nJess dreaded thinking of having to drive two hours tonight to get home. \"I'm going to have to leave once I retrieve my messenger bag from your room.\"\n\nThe tall woman looked at nothing in particular on the sidewalk as they continued walking. \"You're going to miss Tempest's performance tomorrow,\" she casually commented.\n\n\"What? I didn't read about that in the program. It only mentions a performance between the X-Men and the Batman villains.\"\n\n\"You're right, the program doesn't show it. It's an impromptu thing that was brought to my attention at the end of today which is why it took me longer to get upstairs. Tempest is teaming with Rogue and Robyn Hood to beat down Harley-Quinn and Poison Ivy. I guess they thought it would be fun to have the females show off.\"\n\n\"Ohh damn! I don't want to miss that. Tempest on stage with Robyn Hood --- yum!!\" Jess quickly cleared her throat when she realized how that sentence came out. \"How awesome to also be teaming with Rogue. I've always liked her. She's my only reason to read the X-Men,\" she proclaimed brightly. \"Oh, but it's too late to try to get a hotel room within miles tonight. I'm sure every place is booked because of this Con.\"\n\nThey stopped at the corner, waiting for the traffic light to change so they could cross. Kaden softly said, \"I have an extra bed, if you're interested.\"\n\nThe surprised short blonde turned to face her friend. \"I....I don't want to intrude.\"\n\nKaden was about to respond when she heard something in the distance. Joyous, festive fast paced music drifted to their ears. With a grin that lit up her face, Kaden took her friend's hand, and excitedly lead her towards the sounds.\n\nAround the corner and about a half block down, the revelry of a Latino street festival was in full swing. There were children of all ages running around, playing games, and eating sweets. Young and old adults laughed, danced and clapped their hands to the beat of the French horns and guitars. The street was colorfully decorated with banners and hanging lights. The two women made their way past the barricade that blocked off the street to traffic and joined in the activity.\n\nJess' love for dancing quickly came into play. It was one of her ways for relieving stress and feeling happier. She did not hesitate to join the throng that danced merrily.\n\nKaden's nose recognized the slightly sweet and savory scent of one of her favorite treats, so she turned around to locate the vendor selling them. Sitting down on one of the available plastic dining chairs to consume the delightful treasure, she happily watched the strawberry blonde dance with a young girl about seven years old. She was amazed at her Jess' way with children. It was as if she was a beacon of light for them. Within minutes a group of boys and girls clamored around her laughing and swinging to the music. \n\nA song later, Jess plopped herself down in the seat next to the raven haired beauty. \"Whew, they are going to wear me out,\" she commented with a chuckle.\n\n\"I'm glad you're having fun. I can see how much you love to do it.\" Kaden stated as she momentarily removed her sunglasses to rub tired eyes.\n\n\"Oh I definitely enjoy it,\" Jess answered with a joyful smile. Seeing Kaden about to put the glasses back on, she halted the action with a touch on the arm. \"Please,\" she softly pleaded, \"leave them off.\" Kaden quizzically looked at her with a raised eyebrow. \"Your eyes are so beautiful. I would really like to see them, if you're okay with it.\"\n\nGazing into Jess' sea green orbs, Kaden said, \"You are the one who is beautiful.\"\n\nThe young woman was touched, and a blush crept up her cheeks. \"Thank you.\"\n\n\"Would you like a bite?\" She questioned as she held up the churro. \"I know we already ate, but I can never resist these,\" she chuckled. \n\n\"I agree it is hard to say no to these. Thank you.\" She leaned forward and bit down on the fried pastry. Lips brushed the fingertips gently, leaving Kaden with an unquenchable desire. The blue and green of her eyes darkened. There it is. Jess thought. The colors alter with your emotions, and they are....perfect. \"Mmm, that is so good.\" \n\nThe musicians decided to take a break, and so the music switched to the DJ. From the speakers there poured out a beat that Jess knew she had to move to. Her body automatically responded to the sounds of the bass. She grabbed Kaden's hand and said, \"Dance with me.\"\n\nThe author couldn't say no to that gorgeous smile that followed the request. Soon the dance area grew crowded causing the two women to move closer to one another. Jess was having so much fun that she instinctively placed her hands on the taller woman's shirt and pulled her in. It felt like the most natural thing in the world. The move gave them the opportunity to slightly straddle one another's thigh as Kaden circled an arm tightly around Jess' waist. She felt Jess move against the thigh and the actions sent her head spinning. They soon lost themselves in one another's gaze and the music that surrounded them. \n\nJess felt compelled to gently caress Kaden's cheek. She wanted so much to kiss the sumptuous lips that called to her. As if her thoughts had been heard, she held her breath as she watched Kaden's mouth move closer to hers. Lips brushed ever so softly against one another, and it felt like her whole world melted. She craved more, but she didn't want them to become a spectacle here. \"Please take me back to the hotel,\" she declared against the warm lips.\n\n*******************\n\nIt was late when returned to the convention center. They held hands silently while they waited for the elevator in the lobby. Jess felt the warm soft yet strong hand encompass hers. The pad of the thumb gently stroked the back of her hand, making her feel lightheaded as she thought about where she those hands. God, does she even know how much I want her to touch me? Even this simple action makes my body come alive.  The sudden sound of a buzzing vacuum in the distance brought her out of her musings. Running on pure desire alone, Jess brought Kaden's hand to her mouth. With palm facing her, she brushed her lips and the tip of her nose against it. She felt the arm tense, making a devilish smirk break out on her face. Teeth then followed the trail of her lips, raking across the quivering flesh. \n\nWhat is she doing?! Kaden thought, as she gulped and her stomach clenched with desire from the blonde's ministrations. She's driving me insane. I can't think rationally. I just....I want....\n\nJess realized the elevator had arrived when her body was thrust inside and pushed up against the wall. Her body pinned between the wood paneling at her back and the strong sensuous being in front of her, she instinctively wrapped her legs around Kaden's waist. Teeth grazed the flesh of her neck, and then a hot tongue followed its path. Jess couldn't stop the passionate moan that escaped her lips. Hands tangled through inky black locks encouraging the tall beauty to explore her body further that was on fire.\n\nThe elevator doors opened, and Kaden forced herself to set the shorter woman down. They walked down the hall unable to look at one another out of fear they wouldn't successfully make it inside without distractions. Inside the room, the taller woman closed the curtains and turned on a side lamp. She watched as Jess slowly and gracefully approached. Hands slid up her arms to strong wide shoulders, and then took purchase within her hair. Lips met in a dance of seduction and dominance. When they broke to breathe again, Jess tugged on the raven tresses, moving Kaden back until legs bumped into the bed. \n\nKaden was then gently lowered to sit at the edge of the bed. She got the impression she was to just watch when Jess moved a couple of feet back to begin removing her clothes. As the articles began to fall and shoes were kicked off, their gaze never wavered from one another. Slipping out of jeans that pooled at her feet, she took a step to tenderly reach out and remove Kaden's sunglasses. The shade of the blue and green eyes turned darker as she noticed the woman gulp. \n\nNow in just her bra and panties, she moved forward, straddling one of Kaden's thighs and slowly lowered her body. Jess brushed off the hands that suddenly had reached out to touch her. Bracing herself with one hand firmly gripped at the back of Kaden's neck, she slowly gyrated her hips. As Kaden leaned forward to capture her lips, she halted the author's advance with a hand planted squarely on Kaden's chest. She nibbled her bottom lip when she saw something primal flash across the darkened orbs. She reached down between their bodies and undid the button and zipper of Kaden's jeans. Her hand then slipped beneath the material to cup the taller woman's sex. Leaning very close, only a hair's breath away from Kaden's lips, she whispered, \"Can you make me scream?\"\n\nKaden inhaled sharply. Her senses on high alert, she understood the strawberry-blonde's request. Her head spun from feeling Jess' center rubbing against her leg, the almost naked body in front of her, the hand at her throbbing core, and the sensuality that dripped from this woman. \n\nIn the blink of an eye Jess found herself pinned face-down to the mattress. A large firm hand, between her shoulder blades, held her in place while a free hand unclasped her bra. Her heart thumped rapidly with a mix of shock and trepidation. Blunt fingernails raked down her spine, her rear, and the back of her thighs making her body tremble with excitement. One set of digits threaded tightly through her blonde locks while the other gathered the material of her silk panties into an iron like fist. She felt the hot breath at her ear as her head was abruptly jerked back. \"Is this what you want?\" the deep voice softly growled. \"You want me to take you? To fuck you?\" Jess couldn't think as her body ignited from the surge of adrenaline. She tried to answer in the groan that came forth but her panties were pulled so tight against her pulsing clit, that it left her without rational thought as she could only feel at this moment. Her lips were seized in a conquering kiss, and then the silk material gave way as the panties were ripped from her body. Suddenly she was let go and left panting. There was a brief shuffle of noise behind her, and then her hips were pulled up and back forcing her upright on her knees. Once again fingernails left a trail of shivers and desires on her skin all the way from her thighs up to her chest. The bra was thrown across the room to land on the table near the window. One hand snaked its way down to damp amber curls. Long fingers slid through the wetness as the other hand's short nails grazed Jess' hardened nipples. She let out a yelp when teeth nipped her ear. \n\n\"You little minx. I'm going to take you for all you've got.\" Kaden declared in a heated whisper. Jess felt a hot tongue lick the edge of her ear as two fingers circled her clit. Her hips bucked involuntarily when the fingers penetrated deep inside of her. \n\n\"Oh god yes!\" Jess cried out. Fingers slowly pulled out and then back in as the heel of Kaden's hand rubbed against her clit. She felt the tall woman's naked breasts at her back. Erect nipples pressing into her flesh. Her rear end rubbed against the jeans-clad thighs adding to the sensations that surrounded her already. \"Please...\" Jess stated through gritted teeth.\n\n\"Please what?\" Kaden harshly asked.\n\n\"Fuck me. Make me yours,\" the strawberry blonde announced.\n\nThe fingers began to pump harder and faster, and Kaden's hips kept the rhythm with her lover. Jess was grateful for the strong arms which held her in place against Kaden's chest. She reached one hand behind to dig fingers into the back of Kaden's thigh. Her other hand extended up to take purchase in the raven locks when Kaden began to nip and lick the side of her neck. The impending release began to build, swirl, and radiate. Jess suddenly felt like she could not breathe. Hips bucked uncontrollably as she began to soar. An animalistic scream shot out of her mouth as the climax overtook her body with a force that wrung her out with pleasure and left her weak and feeling boneless. \n\nThe release left Kaden trembling once they collapsed onto the mattress gasping for air. She could not believe how much she enjoyed the raw primal nature that had been drawn out of her, and looked forward to it again in the future. She felt Jess turn around in her arms, and capture her lips in a passionate kiss. Tongues danced, caressed, and explored. Small hands unzipped her jeans and began to pull them down. Kaden grabbed the hands, drawing them together up over the blonde's head.\n\nJess attempted to free herself, but Kaden's grip on her wrists was firm. \"I want my turn,\" she huffed. \"I want to feel you --- taste you.\"\n\nKaden gazed at the body before her. The fingertips of her free hand ever so slowly glided up Jess' heated flesh from her abdomen to her neck. \"Oh you definitely will get your turn.\" She looked deeply into sea green eyes. \"But I'm not done with you yet,\" she whispered in her ear. \"I meant it when I said I'm going to take you for all you've got.\"\n\nJess' breath hitched. The statement and the fingers brought her to a new high. Her back arched when a finger brushed across an already erect nipple. A guttural groan spilled forth when the other nipple was consumed by a hot wet mouth. She struggled again with Kaden's grip on her wrists, wanting to grab and feel her lover. Suddenly the mouth was gone from her breast. She watched as the dark beauty pulled the black leather belt from out of the jeans' loops. Her hands were brought down behind her back. The belt was wrapped around her wrists and then looped once between them. It wasn't that tight, but it was secure enough to prevent her from slipping out. The different colored orbs stared at her face, seeking any indication that this wasn't a good idea. Even though she hadn't known Kaden very long, there was something in those eyes that made Jess open to do anything. She felt safe and cherished, and so she had no reason to protest. It was odd lying in a somewhat awkward position with her hands behind her, but it wasn't terribly uncomfortable.\n\nKaden got up to remove the rest of her clothing. She then crawled back onto the bed between the blonde's legs, kissing and licking her way up the torso to the breasts that she desired to resume suckling on. Her tongue swirled around one areola until she flicked the puckered nipple with the tip of her muscle. Lips then closed around the bud, and began to suckle it between her teeth.\n\nJess cried out in pleasure, her breathing became erratic once again. The same actions were administered to her second breast causing her to cry out again. She desperately wanted to grab a hold of Kaden. Her hips moved of their own accord, trying to press her center against her lover's abdomen, in response to the delicious sensations on her breasts. \n\nWhen Kaden felt she had gotten her temporary fill of the beautifully round mounds, she began to move her way back down. She nibbled the hips, thighs, and wet outer lips, taking her time to explore and pay attention to how Jess' body moved and reacted. Nuzzling the honey curls slowly, she inhaled the salacious sweet scent of her lover's arousal. Her stomach clenched momentarily as she drunk in the intoxicating scent. She believed the taste was going to be her undoing. Rolling the blonde onto her side to alleviate any pressure on her arms tied behind her, she hoisted Jess' one leg up to open her, and began one long slow lick on the length of her slit.\n\n\"Oh my god,\" Jess called out. She thought she was going to climax right there, but she held firm. Appreciative of Kaden holding her leg firmly in place, it was a little odd being splayed so open on her side. That delicious tongue began to work its way between her folds lapping at the wetness that seeped out. Her hips began to rock when her bundle of nerves responded to the swirling and circling of Kaden's tongue. As the tension began to build once again inside her, she called out, \"God yes....harder.\"\n\nKaden worked that nub over and over with the flat of her tongue as Jess desperately tried to grind herself on Kaden's face. She felt the legs suddenly tense, and an incoherent cry spilled out of her lover's mouth. Not wanting to give Jess a chance to come down from this climax, she suckled the erect little clit between her teeth and held on as she wiggled her head from side to side.\n\n\"Jesus Christ!!!\" Jess screamed along with a litany of other profanities and confessions. Kaden exploded with her lover. There was no stopping her body's response when she heard the blonde's pleas. Jess gasped for air. Trying to calm her racing heart, she didn't realize the belt had been removed until she found herself straddling Kaden's lap, and a set of hands were massaging her arms. She laid her head on a strong shoulder, enjoying the feel of the naked body in front of her.\n\nBasking in the warmth and energy that still consumed the room, a small smile played up on her lips at how incredible it felt to hold this woman. She drew tender and comforting circles upon Jess' back while leaning against the headboard and inhaled the smell of sex in the room. Soon she felt a pair of lips softly kiss her neck.\n\nJess couldn't speak. There was nothing she could say. This woman had taken her to heights she thought were only fabricated in stories. She wanted, no, she needed to touch her lover --- to make her feel at least half as wonderful as she did now. She kissed the hollow of Kaden's throat, moving across the clavicle, and felt the muscles quiver underneath. Her tongue emerged to flick at the flesh her lips just met, with just the right amount of pressure to cause the slightest but also satisfying moan to reach her ears. The blonde continued the titillating ministrations up the side of her neck, over the pulse point, and then just behind the ear. \"You are amazing,\" she gently whispered.\n\nKaden shivered, feeling that warm breath tickling her ear. Instinctively, she grasped Jess' hips, drawing her closer. Her lips were captured as fingers threaded through her raven locks. Deepening the kiss, they thoroughly explored the inside of one another's mouth. Tongues danced and fenced, vying for passionate control as they sought to find a balance where this time neither of them was overpowering the other.\n\nJess cupped the author's breasts, reveling in the feel and firmness as her thumbs stroked the nipples that stood at attention. She broke from the kiss, and bending down, sealed her lips around the taut, pebbled peak. Nibbling, sucking and rimming one, she then lavished equal attention to the other. A free hand automatically slid down, fingers brushing through short black curls. She felt the legs open, inviting her to continue. Awed at how slick the folds were, she purred, \"God you're so wet.\"\n\n\"That's what you do to me,\" Kaden softly responded. \"I've come twice since we started.\" Kaden brought a hand down between their bodies, tenderly cupping Jess' center. She brushed the tip of her nose along the shell of an ear and said, \"Come with me.\"\n\nJess bit her bottom lip in thought, pondering how wonderful it would be to climax together. Yes she was tender and rather sensitive after all of the intensity Kaden had administered earlier, but she also couldn't deny how amazing those digits felt inside. Nodding her consent, she kissed Kaden deeply as her own fingers slid into her lover. Recalling how wonderful Kaden made her feel, she was determined to show that she was an attentive and quick study.\n\nTheir hips rocked in unison against each other's hands. Kaden knew this release was going to happen very soon as Jess' muscles were already clamping down on her fingers. \"More,\" Kaden requested of her lover, and she groaned when a third finger was added. Jess took advantage of the heel of her hand rubbing against the sensitive button as Kaden bore down on her fingers.",
        "\"It feels so good to be inside you and to feel you at the same time in me,\" Jess confessed in a sultry purr. \n\nKaden nipped at the sensitive flesh just below Jess' earlobe. \"Harder,\" she begged as her hips moved faster. When Jess curled her fingers up, mirroring her lover's actions, Kaden called out, \"Yes, that's it!\", and had to consciously force herself to retain the gentle smooth movements of her own fingers. Their bodies swayed with the rhythm of their hands. \n\n\"Oh god, I'm going to come already,\" Jess softly announced.\n\n\"Almost there,\" Kaden responded. Her face scrunched with eyes tightly shut in concentration. She bore down hard one more time and they each moaned in response. The climax washed over them and they rode the waves as their bodies trembled against one another. Collapsing onto their sides, they somehow managed to get the covers over them as they gave themselves over to exhaustion. \n\n******************\n\nThe strawberry-blonde felt the warm smooth body beneath her first as she slowly became conscious of her surroundings. Sea green eyes opened to skin up close to her face. The natural light filtering past the partially open curtain made her wonder what time it was. Jess didn't exactly want to get up. She was very much enjoying the nakedness and the tranquility of just being entwined right here. I wonder if she is awake. A soon as the thought passed, she felt and almost heard Kaden move an arm to the night stand to grab something. Suddenly she caught the wonderful scent of fresh caffeine in the air. Jess calmly lifted her head to find a beautiful smile greeting her. \"Hey,\" she softly said, and was instantly caught in those mesmerizing blue-green orbs. \n\n\"Hey yourself,\" came the playful reply. Kaden took a drink of the hot liquid, and then offered the tall lidded cup to her lover.\n\nJess heartily drank a few swallows. \"My god that's good,\" she commented. \"Is that an almond latte?\"\n\n\"Yep, and there's a caramel one over here too,\" she gestured towards the night stand. \"I also got us a couple of breakfast bagel sandwiches. We can heat them up in the microwave if need be.\"\n\nJess felt the body shift beneath her, letting her fall between the raven haired woman's legs. The damp heat that touched her abdomen made her pulse quicken. She leaned down; nuzzling the soft skin and feeling the muscles slightly quiver beneath. \"You did all this without me stirring? I must say I'm surprised I didn't wake up. What time is it?\"\n\n\"A little after eight.\" Kaden enjoyed the sensation of those lips and nose, noticing as they worked their way on her breast closer to the nipple. She set the mug of caffeine down. \"I have to be downstairs at ten.\"\n\nThey looked into each other's eyes, and Jess knew what she wanted to do with their time. She brushed across the steadily hardening nipple. Large hands reached out to cup her face, pulling her gently up to meet a set of lips as hungry as her own. Tongues swirled in heated passion. Jess moved so they could have their thighs pressed against each other's center. They felt the other's wetness as hips slowly moved upon hard muscles. Jess braced herself on strong shoulders as she gyrated, her body erupting like an uncontrollable wildfire. Hearing the moans which spilled from Kaden's mouth and watching her back arch as she ground harder made Jess delirious with want. Thumbs grazed her nipples, and she threw her head back in a passionate cry. She maneuvered a hand down between their bodies. Fingers slid between Kaden's folds. She watched the blue-green orbs grow darker as they looked at one another again.\n\nKaden let out a groan as she bit her bottom lip. Long digits found their goal and penetrated the strawberry blonde deeply. They fell in sync to the slow undulating rhythm of their hips on each other's hands, allowing their bodies to ride the waves of their passion. Kaden pulled her lover down for an unbridled kiss. They moaned into each other's mouths as both sets of fingers began to thrust just a little faster. Kaden arched once again, and breaking from the kiss she cried out her release.\n\nJess threw her head back, bearing down on the hand one more time as she followed her lover over the edge. She then collapsed on top of her, and felt Kaden roll them onto their side. Arms encircled her in a warm and protective embrace as a leg draped over her hip. She buried her face in the crook of Kaden's neck, inhaling the subtle sweetness of her skin.\n\n********************\n\nJess sat on the bed with a towel wrapped around her body after having freshly showered, finishing her breakfast sandwich. With a giddy smile, she watched Kaden in a sport bra and pants, gather the other clothes she needed\n\n\"You sure are having a good time over there,\" Kaden commented as she checked herself in the full length mirror.\n\n\"I can't help it that I think you are so hot as Tempest and as yourself. It's like a two for one bonus for me.\" She popped the last of the sandwich in her mouth. \"Thank you so much for the caffeine and food. The sandwich was divine, mmm.\" She watched the tall super hero saunter towards her and crouch down next to the bed. The smoldering azure blue and forest green eyes made her shiver. In one swift move, she was pulled to the edge of the mattress, jump starting her heart rate. Her legs draped on either side of the raven haired woman. Tentatively, she reached out to brush a thumb over the succulent lips. The digit was suddenly caught between sharp teeth. Jess' breath hitched when the teeth grazed the palm of her hand, and then tenderly bit the flesh at the base of her thumb. She could no longer keep her breathing calm when the towel was yanked off her body. Nipples began to harden from the exposure to the cooler air and the lust-filled gaze upon her flesh. Leather gloved hands softly brushed down her body, leaving a trail of goose bumps. Thumbs played with her sensitive rosy buds, and then were pinched between fingers making her cry out in pleasure. A hot wanton mouth swallowed a pebbled point. Her back arched from the contact, wanting Kaden to take more. She moaned again when the other nipple was given the same attention. A hand then quickly reached up behind her neck, pulling her in for a bruising kiss. When she was released for some air, she felt herself gently pushed back onto the mattress as Kaden's mouth peppered languid kisses down her torso. \n\nTheir eyes locked one more time before Kaden became lost at her center. Kaden teasingly suckled on one lip and then the other. Quickly removing the gloves, she parted the fleshy fold and inhaled. A strong wide tongue slowly licked at the wetness she found. She pushed her tongue in as far as it would go, darting in and out and impulsively she moaned. Large hands held onto the hips that threatened to jerk clear off the bed. The firm, flat tongue moved up, lazily lapping the sensitive bud. \n\nJess' hips undulated, attempting to grind herself against Kaden's talented mouth. Moans spilled out of her throat as she gripped the sheets with one hand and Kaden's ebony hair with the other. Her passion climbed higher and higher until she fell over the precipice with a long strangled cry.\n\nKaden's shuddering response to her lover's release was more intense than she had expected. She laid her face against the honey curls, delighting in the ripples that surged between them. Feeling the shorter woman attempting to get up, Kaden moved, and stood to her full height. \n\nJess had made the decision of what she wanted --- what she needed. She sat up, grabbing hold of Kaden's waist and pulling her closer. Unzipping the pants, she pulled them down with the underwear down past Kaden's knees. She inhaled her lover's state of arousal, and nuzzled the short soft black curls. Legs parted slightly in invitation. Jess happily licked the wetness along the inner thighs. Fingers parted swollen lips and her tongue made contact with the slick pearl of her desire. She feasted on Kaden's clit, moaning at how good her lover tasted. \n\nA large hand took purchase at the back of her head, pulling her in, urging her to take more. Hips swayed against Jess' face in rhythm with the tongue. Kaden felt the hands planted firmly on her rear, preventing her from moving away --- as if she would want to. She looked down to find a pair of emerald green eyes smiling at her. The sight of Jess in such a position made her head swoon. She threw her head back when her clit was pulled in between a set of teeth. \"God yes!\" Kaden called out. \"Suck me harder. Make me come.\" Suddenly her body went rigid as the climax ripped through her, and she grasped Jess' shoulder to prevent from falling over.\n\nJess smiled against the firm warm abdomen as she felt the shudders course through her lover. \"God I don't think I can get enough of you,\" she commented softly. The strawberry blonde felt her body gently caressed with soft kisses. While they laid on the bed, she inhaled the familiar scent she adored of her lover that seemed to linger on Kaden's neck and chest. After some time amber eyebrows furrowed when the warm body and sweet scent vanished, but was soon replaced with something that smelled just like her lover. She snuggled into it and sighed contentedly as a blanket was pulled up over her body. Somewhere in the euphoric fog of her mind, she heard the whisper near her ear, \"My performance is at two o'clock.\" Her lips were lightly brushed with a tender kiss.\n\nKaden looked down at the sleeping form and smiled. She checked the time and wished she could climb back in bed behind her. My god she is delicious. I've got to have her like that more often. She finished re-doing her pants, checked her outfit and hair in the mirror, grabbed the goggles, and quietly left.\n\n********************\n\nSea green eyes fluttered open. Looking around, she found that she was alone. The flannel shirt clutched in her hands was the same one Kaden had worn last night. She brought it to her face and inhaled deeply, hugging it closely. The scent of Kaden's body invigorated her, and wrapped around her like a protective cloak. She couldn't think of how else to explain it, but she knew she loved it. Looking at the time, she remembered Kaden said the performance was at two. It was now a few minutes before noon. I have plenty of time to get some lunch. Searching the room for her clothing, she found them folded neatly with a red ribbon tying it all together. What the hell? She picked up the small card on top of her shirt. Thank you for using our laundry cleaning services. Your business is appreciated. She had my clothes cleaned? Well that was nice. At the bottom of the stack she found a short, eight by eleven, white cardboard box. Victoria's Secret was printed in pink lettering along on the top, and her name in black marker at the corner. Opening the package, she was surprised to find two new pairs of silk panties. One was a dark brick red and the other was hunter green. They were similar in style to the one that had been torn from her last night. She bit her bottom lip recalling the events and it made her nether region twitch. Mmm, last night and this morning were something else. I can't believe she has the strength to tear the material like that. God how exhilarating! Maybe I buy stock in Victoria's Secret. She laughed at herself. Absently, her fingertips brushed across the scar. Jess turned to look in the mirror. She traced the scarlet indentation from the temple to her mouth. It's like she doesn't see it. No, she does. She gave this side equal attention as she did the other. She just accepts it as part of who I am just like I accept her eyes. A joyous smile spread across her face. Giddy with delight, she donned the clothing and decided to reheat the latte that had been left for her.\n\n**********************\n\n\"Morning Sandra,\" Jess called out from behind the counter. \"How are you doing?\" she asked as she keyed open the register.\n\n\"Ugh, it's Monday. I guess I'm fine.\" The twenty year old plopped herself onto a stool. \"I've got a paper due tomorrow for my World Civilizations class, and I'm not finding enough material for the references.\"\n\n\"Did you check the library?\"\n\n\"Of course --- spent the weekend there and read through every book they had.\" She sighed and pushed her glasses up the bridge of her nose. \"Guess I'll find some articles on the net.\" She noticed how chipper her boss seemed, and so her eyebrows furrowed in thought. \"You seem to be in a particularly good mood. Did you get laid?\"\n\n\"Sandra?!?!\" Jess yelled in exasperation.\n\n\"What?! Someone's got to get laid around here, and it might as well be you. Besides, boys and girls don't pay attention to me.\"\n\n\"Well maybe you should expand your horizons from just the geeks and gamers.\"\n\n\"But I am a geek and gamer! It's what I like.\"\n\n\"Okay, I get it. Sorry, I don't know how to help you appeal to them.\"\n\n\"Ehh, it's alright. Maybe the right one just hasn't come along. So how was your weekend?\" She suddenly stopped, remembering where Jess said she would be over the weekend. Excitement crossed the young woman's features, and she blurted out, \"Wait, you went to that Con. How was it? Who'd you meet? Who did you sleep with?\"\n\n\"Sandra!\" Jess yelled with fists planted firmly at her hips.\n\n\"Yeah, yeah, just tell me.\"\n\nThe strawberry blonde couldn't stop smiling as she thought about it. I'll have to keep Kaden's identity as Tempest and author under wraps. \"Well the Con was awesome. I got to meet Tempest.\"\n\n\"No way!!\"\n\n\"Yep, and got her signature. Also got her to agree to come out to the Children's Hospital for a visit.\"\n\n\"That's so awesome! Was she nice about it? Or was she all hoyti-toyti like she's too good or feigns having any time?\"\n\n\"No, she was really nice. Not much of a talker though. I also went out to dinner with someone I met up with at the Con.\"\n\n\"Yes!! I knew it!! Tell me! Tell me about this date and then go back to how awesome the Con was.\"\n\nJess laughed at how excited her employee and comrade was.\n\n****************\n\nJess sighed as she watched the All-Stars Chopped Championship on the Food Network this evening. She had just polished off a toasted sandwich, not having realized how hungry she was until after getting home. In the activities of the day, she had forgotten to take time for lunch. Laying back against the couch her eyes began to slowly drift closed as her mind wandered to the past couple of days and a certain raven haired beauty.\n\nThe cell phone chimed and vibrated loudly against the coffee table, bringing Jess out of her light slumber. She momentarily had to re-orient herself as to where she was. Grabbing the mobile device, she looked at the screen. The time at the top showed it was 9:34pm. The bottom told her who was calling. She touched the screen to answer. \"Hey,\" she softly said.\n\n\"Hey yourself,\" Kaden responded in a sultry tone. \"Did I wake you?\"\n\n\"No. Well I mean, yeah....sort of. I dozed off watching TV.\" She ran her fingers through disheveled blonde locks. \"I didn't intend to sleep, but I guess my body had different plans.\"\n\n\"I should let you go then so you can rest.\"\n\n\"No! It's quite alright. I normally don't go to bed until midnight or so. Now that I've had this unexpected nap, I'll be awake longer. So what's up?\"\n\n\"Would you like to go for that ride?\" \n\nThe voice dripped with a seduction that made Jess' body shiver. She became giddy at the thought of being on the back of the Harley with the strong body in front of her. Smiling like a giddy teenager, she said, \"Yes.\"\n\n\"I will gladly pick you up if I may have your address.\"\n\n*******************\n\nWithin minutes Jess heard the roar of the Harley come to a stop out front. Checking her hair and light touch of make-up one more time in the mirror, she grabbed her brown leather bomber jacket, and headed out the door. Seeing the black clad figure on the bike made her heart thump louder. Black jeans, boots, and biker jacket all looked especially scrumptious on this woman. She watched as the full-face gloss black helmet was pulled off. Jess was captivated by that winning smile, and the blue-green eyes that came with it. \"Hey,\" she casually said as she stepped up to the bike and rider. An arm circled around her waist, pulling her close for an unbridled passionate kiss. Tongues dueled and danced, neither one wanting to submit just yet. When they broke apart for some much needed air, Jess said, \"Wow, can I expect that from now on?\" \n\nKaden slowly leaned forward with a smirk, and gently pressed her lips to Jess' supple ones again. Mouths slightly parted, heartily welcoming her tongue to explore and caress. The kiss was soft and tender, blossoming, and full of desire. When they finally parted, Kaden asked, \"Which one do you prefer?\"\n\n\"Both, of course,\" responded Jess with a beaming smile.\n\nRaven eyebrows wiggled mischievously. \"Grab the helmet and hop on.\"\n\nThey rode into the night, down winding roads just outside of town. Jess loved the feel of the roaring motor between her legs, and the solid body she held onto. Grateful that she wore her jacket, she also found that she could stick her hands inside Kaden's pockets to keep them warm.\n\nWhen the bike came to a halt inside a sand and gravel parking lot, and the kickstand was set in place, Jess prepared herself to hop off. Kaden quickly reached an arm behind, momentarily ceasing the blonde's actions. Helmets were taken off and gently placed on the ground. \"Lock your legs around me,\" Kaden softly instructed. In two short movements, Jess suddenly found herself spun around to now be in front of the raven haired beauty with the bottom end of the gas tank under her backside. She watched as Kaden unzipped each of their jackets. They slid their hands around each other's bodies where it was so much warmer, bringing them closer. Jess looked around at her surroundings, and asked, \"Is this the Katy Trail?\"\n\n\"Mmm hmm.\"\n\n\"It looks so different.\"\n\n\"It's more peaceful without all of the dog walkers, cyclists, and joggers.\" Kaden commented as she looked up into the star lit sky. \"It's also more beautiful.\"\n\nJess took the time to admire the brightness of the stars. \"I take it you come out here often?\"\n\n\"Yes, when I want to think.\" She leaned over, tenderly placing a kiss on the blonde's pulse point. \"Do you heart it?\" she whispered.\n\nJess closed her eyes to listen carefully. The sound was almost dull, yet steady. It reminded her of a washing machine. \"Water? The river is nearby.\"\n\n\"Yes, this time of the night is when one can hear it from here.\"\n\n\"This is a beautifully romantic spot,\" Jess added while she gently pressed her lips to the hollow of Kaden's throat. \n\nThe gesture re-ignited a fire that Kaden felt earlier as she recalled their weekend together. A hand reached up to caress Jess' cheeks, gently drawing her in for an amorous kiss that left the younger woman desiring more. Kaden felt nimble fingers undo the top three buttons on her gray henley shirt. Teeth grazed the newly exposed flesh, making the taller woman tremble. She captured Jess' lips again, probing her tongue deeper while she untucked the blonde's shirt from the pants to feel the heated flesh.\n\nJess moaned into her lover's mouth when her body was drawn tight against Kaden. A stirring developed quickly between her legs. She remembered how wonderful it felt to have the author touch her so intimately, and now she wanted to experience that again. Taking Kaden's hand in her own, she led it down between their bodies to firmly press against her sex. She moved against the hand as she worked at the button and zipper of Kaden's jeans.\n\nKaden knew Jess' desires mirrored her own. Her mouth moved down to bestow kisses along Jess' jaw line, and then continued down her neck. She undid the buttons of Jess' shirt, and unclasped the bra. Releasing the supple round breasts, she proceeded to devour one as her free hand now worked on the jeans.",
        "Jess threw her head back in rapture at the sensation of Kaden's hot wet mouth nipping and sucking her nipple. Kaden then reached inside the pants, and through the wet folds. \"God yes!\" Jess declared vehemently.\n\n\"Mmm,\" Kaden softly moaned against the smooth warm flesh of Jess' breast upon feeling her lover's wetness. \n\nThe blonde's heart beat rapidly vibrating against Kaden's face. \"Please,\" Jess announced through gritted teeth as she bore down on the hand between her legs, to push the fingers inside. She felt the taller woman slightly rise to allow Jess' fingers to penetrate her. Hips and hands moved in tandem to the rhythm of each other's bodies. Jess leaned back onto the gas tank as she held Kaden's head tightly to her bosom, her hand tightly gripping the raven locks. Fingers pumped inside one another --- coaxing and teasing. Clits ground against each other's palms, elevating the women in a frenzied climb of ecstasy. Lips were crushed in a bruising kiss as they drowned out the cries of their climax in each other's mouths. Without moving, they held one another, reveling in the waves of release coursing through them. Jess looked into the beautiful sky, silently whispering in her mind, I'm falling for you, and I don't know how to tell you.\n\nKaden carefully shifted, slowly extracting her hand from the confines of her lover's jeans. She slowly and lovingly brushed the tip of her nose across Jess' scarred cheek, and then followed it with a tender kiss on the lips. They silently straightened their clothing, dismounting the bike to stretch cramped legs. \"Take a little walk with me, and I'll show you the moonlit waters.\" Kaden offered.\n\n\"That sounds wonderful,\" Jess remarked with a beaming grin. They started down the graveled trail. Kaden wrapped an arm around the shorter woman's shoulder while Jess encircled a solid waist. Around the bend, the sound of the river water grew a little louder.\n\n\"Over here,\" Kaden softly said, taking the smaller hand within her own and leading Jess off the trail just past a few pine trees and bushes. \"Watch your step. It's harder to gauge where the rocks and tree roots are in the dark.\" \n\nThey reached a bench just a few feet away from a drop off, where they sat and gazed upon the shimmering river. It must have been a couple of hundred feet up, but it was so beautiful and peaceful. \"Oh it's gorgeous,\" Jess whispered, not wanting to disrupt the tranquility surrounding them.\n\n\"Just like you,\" Kaden whispered back. She leaned down, lightly kissing the lips before her.\n\nReflexively, Jess' hands cupped the dark haired woman's face, drawing her in for a kiss that spoke volumes. Tongues swirled in a passionate dance. Jess couldn't stop the moan that escaped her throat. She pulled Kaden against her body as fingers sought the heat of the tall woman's bare skin. She could feel the goose bumps beneath her sensitive fingertips and it excited her that she could cause this reaction. \n\nAs the kiss ended, Kaden moved down to nibble just below an earlobe and rake her teeth against the sensitive flesh of the blonde's neck. Jess threw her head back inviting her lover to explore further. Her stomach clenched as her desire grew once again. Suddenly as her excitement rose, she blurted, \"God I love you.\" Immediately realizing that she said it out loud, she abruptly pulled back, fingers covering her mouth in shock. \"I'm sorry. I...\"\n\nKaden gently took the hand at Jess' mouth, and tenderly kissed the palm. \"It's okay,\" she gently commented.\n\nJess felt foolish none the less. \"I just....I....shit,\" she sighed as she ran fingers through her shaggy locks. Emerald green eyes looked down at their interlocked hands, watching the thumb that gently caressed the back of her hand. She held her breath trying to muster up the courage to share her feelings and prayed that Kaden truly felt the same. \"I've been falling for you hard for a while now,\" she carefully whispered. \"There are so many things about you.....like your eyes. I love gazing into them. They tell me what's going on with you --- how you're feeling. I love how the color changes in them. I know it seems too soon....\" Her rambling was gently halted by a set of fingers on her lips.\n\n\"I've fallen in love with you too, since our first dinner conversation. I've just been too chicken shit to say so.\"\n\n\"Yeah?\" Jess asked with a mixture of surprise and relief.\n\nKaden nodded as she looked out onto the waters again. \"From the day I started making deliveries at the shop, I could feel something drawing me towards you. It was easy to hide it behind my sunglasses but I couldn't deny it, though I tried. At first I figured the pull was just because it had been a long time since I'd been intimate with someone, but then when I stumbled upon you in tears that day, I just wanted to hold you and do anything to make it so you didn't hurt anymore.\" She turned and their eyes locked in a fiery gaze. Neither of them realized they were moving towards one another until their lips met in a kiss that spoke of love and promises.\n\n\"Didn't you mention that you lived on this side of town?\"\n\n\"Mmm hmm,\" Kaden responded as she nibbled Jess' jaw line.\n\n\"Could we go to your place, then?\" Jess inquired as she slid her hands under the author's shirt and across her torso.\n\n\"Yes,\" Kaden answered, inhaling sharply. \"I'll need to make a quick stop first on the way.\"\n\n*************************\n\nJess pulled out a bottle of cranberry-apple juice from the large cooler at the gas station. Moving further along the aisle of the large glass door coolers, she found the carton of half and half Kaden asked her to grab for their morning coffee. She smiled at the thought of waking up to the tall beauty again. From the corner of her eye, she noticed a disheveled young man, fidgeting in front of the chips. One hand was in his jacket pocket, and it was obvious he didn't know what to do with the other hand that continued to pick up a bag of potato chips and then set it back down. Seems he couldn't decide on taking the bag or shoving his hand in his other pocket. Something doesn't feel right. She thought to herself as she walked up to the register.\n\nKaden stepped out of the restroom and proceeded down the short hall. With her tall stature, she was able to see Jess standing in line from above the food shelves. She saw a young man stand behind her lover, and suddenly the fine hairs on the back of her neck prickled. Not moving, she quickly took in the surroundings. The older gentleman wearing a suit finished purchasing his cigarettes and walked out. Jess was the next person in line. There was a shady looking character standing near the front door, pretending to be interested in the stack of newspapers there but he kept glancing over at the man behind Jess. Kaden quietly moved down the back aisle along the wall so she could circle around and not be in sight of the character by the door. Seeing the other man shift uneasily from foot to foot as he waited behind Jess made her very uneasy.\n\nJess knew something just wasn't right as she set down her items on the counter. The amount of nervousness emanating from the character behind her came out in waves. She took a deep silent breath as she prepared herself for what may happen. Suddenly an arm quickly came around her neck pulling her tightly against him. His other hand held a gun that he first pointed at the elderly male clerk and then at her head. \"Just give me all the cash from the drawer and safe,\" he demanded. \"Try to push the panic button and I'll blow your hand off.\" His breath smelled of cheap stale beer. Jess calculated how best to handle this situation without her or the clerk getting hurt.\n\nThe elderly employee desperately tried to get the money in a bag, but he kept fumbling out of fear.\n\n\"Hurry it up!\" the man shouted.\n\n\"You don't have to do this,\" Jess carefully said.\n\n\"Shut up.\"\n\n\"Why not just walk away while you still have the chance?\" she asked.\n\n\"Johnny come on! What is taking so long?\" the one by the door said. \"Someone just pulled up to a pump. Let's go already.\"\n\nJohnny looked at the clerk sternly. \"What about the safe money?\" he asked.\n\n\"I...I...can't get in it. I don't have the code.\"\n\nOut of the corner of her eye, Jess caught Kaden in the process of sneaking up behind the character by the door. She knew then what action to take.\n\n\"Oh yes you do,\" he answered. Suddenly a set of hands clasped over his holding the gun, jerking it towards the floor. Reflexively he pulled the trigger, shooting a hole into the counter. He didn't understand how he was hurled over a shoulder and landed on the floor to stare up at the ceiling lights, and then everything abruptly went black for him.\n\nKaden swung her leg, kneeing the other guy in the ribs before she gripped him by the hair and had his face meet the tiled floor, rendering him unconscious. She sprinted up to Jess. \"Are you alright?\"\n\n\"Yeah. You?\"\n\n\"Just peachy,\" she answered with lopsided grin. They both looked at the clerk, who was practically hyperventilating.\n\n\"Do you mind if I pay for this now?\" Jess inquired sarcastically towards the clerk as they all heard the sounds of sirens pulling up front.\n\n***********************\n\n\"Would you like something to drink?\" Kaden asked over her shoulder as she walked into her dimly lit kitchen. She placed their purchased items of juice and creamer in the fridge, and then grabbing a tall glass she poured water into it and returned to the living room. The shorter blonde was nowhere in sight. Briefly smirking, the tall woman kicked off her boots and silently padded down the short hall, past the open bathroom door, her study, and into the bedroom where she found Jess. The already naked blonde was in the process of pulling on the royal blue button shirt Kaden had tossed onto the cedar chest that morning. Blue-green eyes scaled her lover's tempting body from head to toe. \"That shirt isn't fresh. I had been wearing it since early yesterday.\"\n\n\"It smells like you. That's all that matters at this moment.\" Jess ran her hands through shaggy blonde locks, and stretched, giving her lover a wonderful view of tantalizing flesh in the open shirt.\n\nKaden set the glass down on the night stand. She wondered if Jess was shaken up by the incident at the gas station even though she proved to handle herself very well. She watched her lover close the space between them.\n\nSea green eyes silently conveyed a deep seated need. Deft fingers reached out, popping the button of the black jeans and lowering the zipper. \"Would you just hold me?\" She proceeded to hook her thumbs inside the waistband of the underwear and pushed both them and the pants down. \"I want --- I need to feel all of you on me.\"\n\n\"Sure,\" Kaden readily responded as she pulled her shirt up and over her head, tossing it to the floor. She watched Jess turn the comforter down and climb in. When the author was ready to join her, she noticed the silent invitation to settle herself between the blonde's legs. Kaden heartily accepted, sliding hands inside the open shirt and laying down. She could feel Jess' soft amber curls press against her abdomen. She looked into sea green eyes, feeling smaller fingers brush through her ebony black hair. \"What else can I do for you?\" she softly asked.\n\nJess returned a small smile. \"You're doing everything already.\" She caressed the high cheek bones, and brushed a thumb softly over the full lips. \"It was a little weird tonight --- having to use my years of training on someone after so long. I'll be fine --- I just need some time to process and to be near you.\"\n\n\"I'm right here, and I plan on staying here.\"\n\n\"Thank you,\" Jess responded, and then brought her lover in for a small kiss on the lips. They settled in to sleep with Kaden's head on her chest, and Jess' arms wrapped tightly around strong shoulders. A contented sigh left her lips as she brought one leg up over Kaden's hip to rest on the back of the taller woman's thigh. \n\n*******************\n\nThe wind blew, rustling the autumn leaves that swirled up and around. The lone figure crouched behind a bush silently watching between the branches and foliage the events unfold before her. \n\nThe side door of the black unmarked van opened. Individuals wearing ski masks lead their bound and blindfolded captives --- a man, woman, and two children ---- to the small unlit hunting cabin.\n\nTempest assessed there were only three kidnappers altogether including the driver. As the wind blew again, she reached out and began to gather it within herself. Without a sound she landed on top of the van. Using her projective hand, she shot out the force of air knocking down two of the kidnappers posted on either side of the family. In the blink of an eye, she rendered the two unconscious. Spinning around, she drove a side kick to the third kidnapper who came at her. As the family silently stood wondering what was happening, she began to untie the rope of who she thought was the father.\n\nSuddenly out of the cabin came several more men with firearms. The familiar sound of metal rang through the air as she unsheathed her sword in a flash. She pushed each of the hostages onto the ground for their safety. In a series of swings and arcs she deflected the array of bullets, and began to advance on them. Out of the corner of her eye, she caught a black shadow between the trees. Her sword plunged into two bodies. The fight ensued until.... Pfft! A tranquilizer dart sunk into her neck. Quickly yanking it out, it still wasn't fast enough as the venom started coursing through her. Her vision now blurred and her body becoming paralyzed, she helplessly watched a black shadowed figure fight off the remaining thugs before passing out.\n\nTempest awoke not understanding where she was. The dimly lit room spun. Momentarily closing her eyes, she realized all too soon that she could not move. Lifting her head was agonizing, but she could see that she wasn't restrained. She was merely lying on a bed in her clothes, minus her boots. From the doorway entered a figure dressed in a shinobi shozoko outfit commonly used by ninjas. Even in the dimness of the room, the emerald green eyes were a striking contrast to the black hooded cowl. She saw the figure hold up a pill and a glass of water. \"Who are you?\" her voice rasped.\n\n\"I hope a friend,\" the somewhat muffled voice responded.\n\nTempest distinguished it was a feminine voice. Surprised, she commented, \"So you are a Kunoichi ninja?\"\n\nThe figure nodded.\n\n \"Why am I here?\"\n\n\"I couldn't just leave you out there. The narcotic in your system is what paralyzed you. It should begin to dissipate and you'll be fine by tomorrow. This pill is to help flush it out of your system.\"\n\nTempest's eyes narrowed skeptically, and then she realized that her goggles had not been removed from her face. \"The family....\"\n\n\"Is safe and have been brought to the embassy. They are a royal family from Spain and were going to be ransomed, but they are fine.\"\n\n\"Do you know who I am?\"\n\n\"You are Tempest. I have watched you for months now. Seems you handle yourself rather well and so I never interfered. I have not pried into your identity, out of respect, just as you do not know me.\" The female ninja approached very closely, slid her arms under Tempest's shoulders and hoisted her up against the headboard in order to drink.\n\n'She is rather strong to be able to move me.' Tempest thought to herself.\n\nThe figure placed the pill in her mouth and then brought the glass of water to her lips.\n\n\"This requires me to trust you,\" Tempest commented before sipping the water.\n\n\"Yes it does. But if I wanted to kill you, why would I bring you to my sanctuary and nurse you back to health?\"\n\n\"Perhaps you intend to use torture.\"\n\n\"That is not my style.\" The figure silently left the room leaving Tempest to contemplate the situation at hand. She dozed off a couple of times from exhaustion as her body fought to heal.\n\nThe figure later returned to the bedroom to check on her charge. Now wearing cotton pajama bottoms and a t-shirt, she sat at the edge of the bed with the tenugui head piece still in place covering her face.\n\nThere was something about this woman that made Tempest feel comfortable --- like she's known her forever. In the silence, she knew each of them wanted to know who the other was. \"Who are you?\" she finally asked again.\n\nThe captivating green eyes stared at her, debating on what to do.\n\n\"I...I...am willing to show you,\" Tempest finally said in the hopes that the woman would also reveal herself.\n\n\"I have no name except my given,\" she responded as she slowly reached up and removed the head piece. Shaggy blonde locks fell about her shoulders and face as she bowed her head, still unsure. \"My face is scarred,\" she softly announced.\n\n\"Please,\" Tempest softly requested. Her heart stopped when she witnessed the youthful cherubic face turn up. A jagged scar ran down the left side from temple to jaw, but regardless, the face was beautiful.\n\n\"My name is Corinne Jennings, but I prefer CJ.\"\n\nTempest's mind raced ---- the face, the name --- she couldn't recall, but there was a familiarity. Somewhere she knew she should know this person. With a deep breath, she said, \"Go ahead, remove the goggles; and please release my hair.\" She felt the hands work on the raven locks first. The fingers were gentle and soothing as they brushed the strands once it was loosened. The eyewear was then carefully removed.\n\nCJ was captivated by the glowing eyes. As she peered deeper into them, she could see the stormy colors which actively swirled within the orbs. Shades of blue, gray and white moved like clouds in the sky. She couldn't help but smile as she finally got to see the infamous hero up close.\n\n\"My name is Wynter Goodknight. It's nice to meet you CJ. Thank you... for helping...\" Suddenly a flash of memory hit Tempest. {She was fighting off the gang of a very territorial drug lord who had taken to using rape on both men and women for their initiations. In the haze of a fight with a couple of loyal members, a young teenage girl with long strawberry blonde hair was spotted running. One of the men pulled away and roughly grabbed her by the hair, deciding to kill her on the spot so there wouldn't be witnesses. Tempest administered a roundhouse kick to the thug in front of her, knocking him unconscious. With sword in hand, she flipped into the air, landing next to the perpetrator with the girl. In one swift move, she sliced his throat, and his body fell to the floor. She looked at the girl crouching against the crates, holding her face. There was blood running down her hand and neck. Then the girl's eyes widened, \"Behind you,\" she screamed. Tempest turned with sword out, impaling the next thug. The sound of sirens suddenly burst into the area. She looked at the girl one more time, and asked, \"Are you okay?\" The young blonde nodded. \"Thank you for the heads up,\" Tempest said before she disappeared into the night.}\n\nThe stormy eyes looked at CJ with recognition. \"The warehouse in 2001....\"\n\n\"You saved me from becoming a victim to the human drug trafficking of Cortez.\" CJ finished.\n\n\"Your face was injured that day ---- eleven years ago.\"\n\n\"In my struggle to get free, he managed to get me with his knife before you stepped in.\"\n\n\"I wish I had been a second sooner,\" Tempest sadly commented, blaming herself for the young woman's scarring.\n\n\"I'm alive, and was granted the opportunity to find you now. I spent three years searching for you when I returned from my studies in Tokyo. I have watched you work these past few months and stayed in the shadows.\"",
        "\"Why?\" Tempest inquired.\n\n\"I wasn't needed. I waited silently until one day I would be needed. I owe you my life.\"\n\nTempest's eyes closed. She tried to shake off the groggy feeling. She hated not being able to move.\n\n\"Sleep for now,\" CJ cooed. \"I will be happy to talk some more when you are better.\" \n\n*********************\n\nA small hand reached out to find the space next to her empty. Sea green eyes slowly opened. Moonlight filtered through the darkened room from the partially open curtains. Getting up, she shed the shirt she had put on previously and silently padded into the next room searching for her lover. Two lamps were lit on either side of the artist's spacious drafting table. She could see the raven haired woman lean back in the leather office chair, tossing the capped marker into the rectangular plastic case next to her. \"Hey,\" Jess softly called out.\n\nKaden turned around, a bright smile gracing her features as her naked lover approached. \"Hey yourself,\" she responded.\n\n\"The bed was cold, so I got up wondering where you were,\" she commented standing next to her. Kaden reached up, taking her by the hips and pulled Jess onto her lap. The blonde snuggled within the warm embrace into Kaden's neck. \"Mmm, I love your scent, she commented as she bestowed tender kisses. \"You're working on your series. Did you get an inspiration?\"\n\n\"Yes,\" Kaden answered while nuzzling the strawberry-blonde locks. \"You were my inspiration.\" They exchanged a loving kiss that began to ignite. \n\nWhen they broke apart, Jess asked, \"May I see your work?\"\n\nKaden nodded. \"I hope you like it.\" She watched her lover glance through each of the sketches as her lips moved silently to the written words.\n\n\"Wow, Tempest is going to have a sidekick?\" she inquired softly, not really needing the question to be answered. Looking at the next few frames, green eyes widened. \"Umm...is she supposed to look like me?\"\n\n\"She is you,\" the woman firmly answered. Jess' amber eyebrows furrowed as she looked into the author's blue-green orbs. \"Does...it offend you?\" Kaden asked not understanding the look on her lover's face.\n\n\"No! I'm just......oh I can't think of the words.....hmm.\" She looked back at the new character. \"I'm flabbergasted and honored that you would want to do this.\"\n\n\"I didn't plan it --- it just happened,\" Kaden softly commented. \"My mind just didn't let me sleep for long. I kept recalling the way you handled yourself at the gas station. It was so ....so....I can't even begin to explain it. I never knew anyone could be so sexy in a fight. And so I just started drawing and piecing together a dialogue.\"\n\n\"Did you really just confess that I'm sexy in a fight?\" she inquired with a humorous grin, her eyes twinkling in the light.\n\n\"Hell yes.\"\n\nJess' grin widened. Nibbling her bottom lip in thought, she tenderly caressed a sculptured cheek. \"Hmm, why don't you show me just how hot this idea makes you?\" Her lips were suddenly captured in a searing kiss that left her head spinning. She did not realize she had been hoisted up and carried back to the bedroom until she was lightly tossed onto the mattress. Mesmerized at watching Kaden strip out of the boxers and t-shirt, she felt her skin flush with the anticipation.\n\nThe raven haired woman slowly crawled towards her inspiration, on hands and knees. Her gaze never wavered from Jess' eyes as she approached like a panther ready to devour its prey. Large hands parted her lover's thighs wide, bringing the knees up. Kaden kneeled up against the back of the blonde's thighs. Leaning over, she reached out to turn on the lamp on the night stand. \"I want to see all of you when I make you come,\" she whispered as she dipped down to brush the tip of her nose along Jess' sensitive neck. \n\nJess let out a small moan. Her hands began exploring the body that hovered above. Abruptly her wrists were swiftly halted by a strong hand which brought them together and above her head. The position left Jess completely open and vulnerable, and reminded her of their first night in the hotel. Nipples hardened as she let out a few shuddering nervous breaths. She made an attempt to free her hands but Kaden's grip was strong. \n\nKaden's free hand tenderly stroked the length of her body, making the skin prickle and the flesh tremble. \n\nJess then saw blue-green orbs darken right before her left nipple was seized. \"Oh god,\" she called out.\n\nThe large hand slid down her lover's muscular abs and through her wet folds. She felt Jess' hips push up seeking more of the touch. She moved across the chest to the neglected nipple and admonished it with the same treatment as the first. Teeth grazed across the flesh, nipping and suckling. The sounds Jess made fueled her passion to take her long and hard. \n\n\"Please,\" the short blonde pleaded.\n\n\"Please what,\" Kaden softly echoed against her skin. She felt the hips thrusting upward, desiring the fingers to bury themselves deeply.\n\n\"Fuck me,\" Jess answered struggling against her restrictions.\n\n\"As you wish,\" Kaden replied as three fingers dove into Jess' center.\n\n\"Yes!\"\n\nKaden let go of the wrists, shifted her body for better leverage, and began the long, smooth and firm thrusts. The pad of her thumb circled the bundle of nerves.\n\nJess pulled her down for a bruising kiss. Tongues dueled for dominance. Blunt nails scratched their way up Kaden's spine. Her hips kept rhythm with Kaden's hand. Within a few more thrusts, she broke from the kiss, screaming her release.\n\nThe raven haired woman didn't give her lover a chance to come from off her high as she worked her way down the body. She pushed her tongue through the wetness seeking the erect little nub. She felt the body below her shudder with delight. Her fingers resumed sliding in and out at the same pace as the flicking of her tongue. Jess' muscles began to contract around her digits, alerting her that she was near. When she suckled Jess' clit firmly between her teeth, it sent the young woman over the edge. She licked away every drop of Jess' passion while her fingers slowly moved, building the crescendo for another release.\n\nJess thought she would go mad from the onslaught on her senses. After another mind shattering release, she clawed at Kaden's shoulders in an effort to bring her lover up so that she can get a reprieve. She gasped for air, her heart raced and her body shuddered. \n\nKaden kissed her way up the succulent body that she enjoyed feasting on. Perching her head on a shoulder, she sighed contentedly. Eyes widened in surprise when Kaden suddenly found herself on her back. Wild emerald green eyes bore into her with a promise of unrelenting pleasure. Large hands slid up the thighs and over Jess' hips now straddling her waist. She continued the trek up to the heaving chest, hands splaying across the beautiful full breasts. Palms pressed against the pebbled nipples, and she watched the blonde arch into her.\n\nJess grabbed the hands that were sweetly torturing her again, and slammed them back onto the mattress. Holding them in place, she adamantly stated, \"My turn.\" She captured the lips that had turned up into a laughing smile. Their tongues swirled and caressed losing themselves in the cavern of one another's mouths. The taste of herself in her lover's mouth made the blonde let out an exquisite moan. Jess raked her fingernails up the inside of Kaden's arms and she could feel the hips press up into her, desiring more. Fingers lightly tugged and twisted hardening nipples. She pulled back from the kiss, knowing where she wanted to be. There was no denying that she needed to feel and taste her lover come in her mouth. The mere thought of it made her head swoon and her own wetness accumulate. Moving down the body, administering kisses and little licks, she settled between the open legs and inhaled. \"God I love your scent,\" she headily stated, thinking that she never wanted to smell anything else ever again.\n\nKaden smiled, looking down the length of her body, as she waited for the woman she loved to bring her to ecstasy. The wait wasn't long when she felt Jess' mouth nibble and tug on her engorged lips. Her eyes rolled back as a wet tongue emerged, licking her opening and then pushing the muscle deep inside.\n\nJess was in a euphoric haze with the hot wetness around her mouth and chin. She moaned at how good Kaden tasted. Not being able to contain herself any longer, she closed her lips around her goal. She suckled the slick pearl and moaned happily as Kaden's hips started to rock against her face.\n\n\"God yes,\" Kaden declared as she gripped the sheets within tight knuckles. The crescendo of her release climbed quickly and she soon crashed into the waves of her climax uttering her lover's name. Panting, she wasn't given a moment to come down when she felt fingers slip inside, filling her completely. Her hips rocked again, matching the rhythm of Jess' thrusts. The moment her sensitive bud was pulled between a set of teeth, her world became nothing but that expert tongue firmly flicking her pearl and those fingers pumping hard. Her head was buzzing. Intense heat emanated and radiated from every part of her body, and then she exploded, screaming incoherently.\n\nJess held still inside this beautiful amazing woman she adored, and laid her head on a thigh. She watched and felt the tremors rush through Kaden's body, and it made her grin from ear to ear. Long fingers tenderly brushed through her strawberry-blonde locks, as if silently asking her to come up. She reluctantly left her favorite place, gently removing her fingers. As she climbed up the firm body, she licked her fingers clean, enjoying every last bit. She looked down into the blue-green orbs with a huge grin.\n\n\"I love you,\" Kaden admonished with a smile.\n\n\"Mmm, I love you too,\" Jess responded, and then kissed her to show just how much.\n\n******************\n\nJess rubbed again at her tired eyes. She had spent the last two hours pouring over the last board meeting's agenda items. Somehow, after the board shot down her ideas to help boost the children's spirits, they suddenly had a change of heart claiming that additional funding was received and now she could follow through with her proposals. She had reviewed the meeting minutes to recall the various proposals that were discussed by her and Dr. Coulter. Up until now, the veteran doctor and his small band of fellows were the only ones who were behind Jess' ideas.\n\nSomething about this sudden change of heart with the board nagged at the back of her mind. She grabbed the funding file from the drawer and perused the list of donations made this month. Curiosity got the better of her, wanting to know how much was donated by what agency or non-profit organization. A few pages into the file, and she found it. An additional fifteen thousand had been donated by the Wolf Foundation. Wolf Foundation? Who are they? Jess silently questioned. Returning to the drawer, she located the file listing all of the hospital's donors. She didn't quite understand, but there was something that plagued the back of her mind. The young blonde thought perhaps knowing of the donor and what they stood for in regards to the hospital, that it might help her in future proposals for changes in how the children were cared for. After finding the foundation name listed and when they began donating, she retrieved the first year's folder. She almost dropped the file when she saw the name listed. K.J. Wolf. \"Oh my god,\" she whispered under her breath.\n\n\"Hey Jess, everything okay?\" the head nurse for pediatrics questioned when she walked into the office.\n\n\"Yeah, sure. I was just trying to find out a little more about who donated the extra money this month and why.\" She set the folders down on the desk that her and Cindy shared from time to time.\n\n\"Oh you mean the Wolf Foundation? Wasn't that wonderful of them?\" The older woman commented as she took a seat at the corner of the desk top. Sometimes I wish I could have met the infamous Kenneth James Wolf.\"\n\nSurprised sea green eyes looked at her. \"Kenneth James?\"\n\n\"Why yes, he started as a donor back in 98. Unfortunately he passed from a heart attack the year before I started here. When was that? Oh yes that was in 2004.\"\n\n\"So who took over afterwards?\" Jess nervously inquired, holding her breath at what the answer might be.\n\n\"His only daughter has been handling it ever since. She's very secretive though. I think only three of the board members have ever seen her. It's clever that she happens to have the same initials as her late father, so the checks and paperwork are just signed K.J. Wolf. Hmm, I wonder if anyone knows her first name.\"\n\nJess was excitedly shocked and giddy over this information. Placing all of the files back where they belonged, she wondered if Kaden would be upset if she now knew another secret of hers.\n\n\"Oh my goodness, where is my head?!\" Cindy declared. \"I originally came in here to tell you that there is someone here to see you. She's dressed in an odd costume, waiting in the lobby.\"\n\nJess smiled brightly, and with a quick, \"Thanks,\" she sprinted out.\n\n********************\n\nTongues danced lovingly without hurry as lips caressed one another. Hands slowly moved along dips and curves. As the kiss ended, a blonde crown snuggled against a warm naked chest. \"Mmm, I love you,\" Jess softly stated.\n\n\"I love you too.\"\n\n\"It was so wonderful to have Tempest visiting the kids today. How did you feel about it?\"\n\nKaden wrapped her arms around the younger woman, holding her closer. \"I had a great time. Wish I had thought about that years ago. I guess I thought being a donor was the best I could do.\" Long fingers gently caressed Jess' back causing a pleasant shiver. \"Thanks for showing me different.\"\n\nThe smaller woman propped herself up on one arm and peered into the beautiful blue-green orbs she adored. \"You're not mad that I found out about the Wolf Foundation, are you?\"\n\nKaden shook her head. \"As long as you're not mad that it didn't occur to me to say something before.\"\n\n\"You're amazing, you know that?\"\n\nKaden smiled and pulled the blonde down against her chest. \"Let's get some sleep. I feel my creativity brewing and I believe another development for Tempest may come out in my dreams.\"\n\n\"I can hardly wait to find out what it's going to be,\" Jess commented as she happily drifted off.\n\n**************\n\nThe dark figure easily hid within the shadows. Emerald green eyes carefully watched the small band of robbers in the dead end of the alley make a futile attempt at fighting off their attacker. A swift kick to the first one's leg resulted in the snap to his knee cap. An elbow between his eyes knocked him unconscious. The second and third pointed their guns ready to shoot. Bam! Bam! The gunfire went off just as Tempest crouched down. With her hand flat on the asphalt, she drew up the earth's energy. Kablam!! The wave of energy knocked them to the ground. Tempest looked around for the last one. She found him lying in a heap, a couple of hundred feet away, unconscious. Out of the corner of her eye, she spied the shadow. With a smirk, she called out, \"I know you're here.\"\n\n After a few moments the black garbed figure stepped out from a doorway. Brilliant emerald eyes shone from the tenugui which covered the face. Tempest shook her head. \"You don't need to follow me,\" she casually stated.\n\nThe deep forest green eyes silently looked over at the last robber and then back at Tempest. The tall superhero responded, \"I would have gotten to him. I don't need your help.\" The Kunoichi figure took a few steps towards the downed man, turned him over, and grasped the items still clutched in his hand. Holding the two pieces in an open palm, Tempest's breath hitched upon seeing them. \"That's the same style dart that I had been poisoned with weeks ago. \n\nThe shorter figure nodded. \"Seems an adversary is supplying these to criminals everywhere,\" she commented. \"Let me help, or I will continue to follow you and stay in the shadows.\"\n\nTempest chewed over the information. With a sigh, she jerked her head for the shorter woman to follow. They leapt onto the black Harley Davidson and right before they sped off, Tempest said, \"I'm not big into changes.\"\n\n\"You'll get used to it,\" came the reply.\n\nThe End"
    ],
    "authorname": "Alex the Cat",
    "tags": [
        "comic book",
        "superhero",
        "comiccon",
        "facial scar",
        "heterochromia"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hidden-beauty-1"
}