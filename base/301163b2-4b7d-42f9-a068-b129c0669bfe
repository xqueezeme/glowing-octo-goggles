{
    "title": "Sapphic Serenity Ch. 08",
    "pages": [
        "Disclaimer: All characters portrayed in sexual activity are eighteen years of age or older. This story was a request from a reader and dedicated to them. They know who they are and I hope you all enjoy it. Feedback is welcome, flames will be laughed at and deleted, I promise. \n\nChapter 8- When Y'Got It, Flaunt It! \n\nMorning rolled around and found mom and me on our bed, gasping and squirming heatedly against one another, groping each other's breasts as we ground our wet pussies together. I was straddling her, our legs scissored, while I looked down at her through heavily lidded eyes, my breath coming in husky pants. \n\n\"Gnnnnnn, Bron...\" mom moaned beneath me, her fingers gripping the soft flesh of my breasts strongly, the hurt a wicked delight. I knew she loved it too, my fingers kneading her gorgeous tits hard enough to leave red welts. \"You're so good, baby!\" \n\n\"Mommy,\" I murmured, grinding harder against her, feeling our throbbing clits brushing while our slippery lips mingled and slid around one another. \"You're gonna make me cum so hard!\" \n\nIt didn't take long, and we both went rigid, keening through our teeth so we didn't wake everyone on the hotel grounds with the full-throated shrieks we were desperate to release. We bucked and humped madly as I laid down, grappling onto one another and kissing savagely, with unreal abandon. I screamed into her mouth while her fingernails dug into my ass cheeks, pulling me against her harder. \n\nEven though I was already lying on top of her, I could feel my body wilt, almost collapse onto hers, both of us breathing heavily in what sounded like utter exhaustion. My cunt still felt like it was blossoming, thick, sticky and wet, melted to hers in an intimate kiss only women can share. I was aware of myself and of my mother. Nothing else really existed beyond that cocoon of unreal sexual pleasure. \n\n\"Holy shit, mom,\" I breathed, my vision still a cacophony of warm blackness and scintillating colours, somehow all at once. Her thunderous heartbeat matched my own. \"You trying to kill me?\" \n\nShe giggled tiredly. \"I promise you, baby, that if you need to die, I'll send you off like that, okay?\" \n\n\"I could look forward to that,\" I sighed, trying to feel my limbs beyond the tingling. No luck. \"Thank God we took the day off from the club so we could fuck.\" \n\nMom nodded and embraced me tiredly, exhaling, her warm, sweat-slick body still pressed to mine. \"True. The manager said the club doesn't open 'til 4, so if we wanted to go back and practice before that, we could. Work on a routine and such.\" \n\nI considered and nodded. \"Knowing us, shouldn't take more than an hour to figure it out. We sync really well together on instinct, so practice will make our routine amazing.\" \n\nI rolled off to the side and stretched, while mom sat up and did the same. In spite of how tired I was, my urge to grab and molest those magnificent tits when they jutted forward in front of her was almost overpowering. As it is, mom leaned down and kissed me deeply, initiating a makeout session that lasted a few minutes before we both exited the bed. \n\nWe both needed to pee, but were way beyond negotiating who went first- she simply sat on the toilet and I straddled her lap. We kissed lovingly while we both peed before getting in the shower to clean off our morning's perverted workout. There was still breakfast to be had, after all. \n\nI quite enjoyed the fare- I ate quite a bit of the homemade muesli, along with some scrambled eggs and crumpets. Orange juice and strong coffee to drink and I was feeling quite energized. Mom ate pretty much the same, also allowing herself some bacon, but given how much meat we'd eaten recently in those coronary burgers, she didn't have too much. \n\nOnce the hostess had stopped serving and ambled away to some other task, mom decided it was time for her to see if she could get in the son's pants. I'd done that very thing the day before, cornering him somewhere private and sucking his cock, ostensibly as a thank-you for his work at breakfast. Truth was, I thought he was somewhat hunky and I needed his dick in my mouth, so breakfast was a believable excuse. \n\nI watched with amusement as mom bided her time, smiling at the boy coyly, sometimes blushing and making sure she had his attention. I excused myself to \"powder my nose,\" but would be watching. I wasn't about to pass up an opportunity to watch mom blow this kid. \n\nFiguring she'd use the same, quiet and out-of-the-way area I had for the deed, I waited nearby, out of sight. Sure enough, not long after breakfast had been cleared away, I saw mom walking with the son, her arm threaded through his, talking and laughing. He seemed to be blushing somewhat, and if he didn't already know what she wanted, he was at least hoping for it. \n\nMom brought him to the obscured area and used a finger to press him back against the wall. She smiled slyly as she slowly knelt and began unbuckling his rather tight jeans. He was trembling slightly, as he had the day before, when mom fished his cock out and began servicing it, all the while complimenting him on how pretty it was and what a good job he'd done at breakfast. That was a lot of the trick to keeping men serviceable, make sure they felt accomplished and needed. Oldest rule in the playbook, but also the most important one. They won't try to perform for you if it's not worth their ego's while, something I completely understood. We all like to be complimented. \n\nI watched as mom kissed his member and slid her tongue up and down the rapidly swelling shaft, looking up at him as much as she could, and making humming noises to indicate her enjoyment. Her hand held his cock at the root of the shaft, caressing and gently squeezing it while she teased him with her tongue and mouth. \n\nI smiled as I watched her use the techniques she'd taught me when I was younger and coming into my sexual awakening with puberty- mom had raised me to be strong, smart and unafraid. My sexual choices were to be my own and she'd teach me how to be great at sex. She taught me how to masturbate, practicing with me. She used dildos to teach me how to make a boy crazy when I sucked a cock. She taught me how to kiss and use my pussy muscles to drive a boy wild with bliss when I fucked him. Now I witnessing her use those some oral techniques she had taught me years ago and it was enthralling. She no doubt knew I was watching. \n\nThe kid's head thunked back against the wall he was leaning on and he tried not to moan as mom swirled her tongue around the purple head of his dick before slowly sliding it between her lips and into her throat. She hummed quietly, vibrating her lips around his manhood to keep him distracted while she turned her head to look directly at me and winked. Good, she knew I was here and that thrilled me. \n\nI could see the boy's hips trembling and his hands start to grip into mom's hair, a feeling I distinctly remember from the day before when he'd done it to me. When you fuck a boy, you feel how his body reacts, so that if there's a next time, you can use those reactions to heighten both your pleasure. Mom now gently cradled and fondled his balls as she bobbed back and forth, gauging his sensitivity to having them played with. I already knew (and now wish I'd told her) that he seemed fine with it. He was no sub, like my pizza-delivery boy, but he wasn't above letting the woman take charge during oral. \n\nHis cock glistened with the wetness of mom's mouth as she slid her lips back and forth- I knew her tongue was at work inside her mouth, pressing and teasing and swirling around that hyper-sensitive skin, driving him wild. I hadn't asked him, but I didn't think he was a virgin, and yet I was reasonably certain he was also not that experienced. Granted, if he'd been raised here in this cottage-industry hotel, by devout parents, it wasn't unreasonable for his experience to be limited. \n\nOne thing, though, and that was mom was en route to making him cum even harder than I did the day before. That slut. \n\nHe wasn't lasting very long and mom wasn't trying to prolong it- she wanted his cum in her mouth and there was no particular guarantee that they wouldn't be accidentally discovered in any event. I could feel a tingle between my thighs and knew my thong panties were getting wet. Wish I'd thought of wearing a pad. \n\nHe stiffened up and made a sound somewhere between a whine and a moan before gripping her hair and bucking his hips against her face. Mom pumped his shaft with her hand while she sucked greedily, his cum rushing down her throat. It was a good thirty seconds before he slumped back against the wall, eyes closed and breathing heavily. Mom, meanwhile, lifted her shirt and sports bra, releasing her glorious tits, and used them to massage his drained and flagging member while he recovered. She crooked a finger and beckoned me over. I headed toward her, knowing the die was cast. \n\n\"So, big boy,\" she cooed as I approached, still rolling his cock between her breasts. \"Did you enjoy that as much as you enjoyed my daughter making you cum yesterday?\" \n\n\"Uhnn, yes...\" he said somewhat dreamily. \"It was really good.\" \n\nShe released his cock from between her boobs and shuffled aside slightly while I knelt in front of him and took his soft but still-swollen dick into my mouth. \"I'm glad. Would you like more?\" she asked, caressing his thigh. \n\n\"I... y-yes...\" he breathed, eyes still closed. \n\nShe now stood and cupped his cheek in her hand. \"You can look down now, lover.\" \n\nHis eyes fluttered open upon hearing his voice up at his head level while a mouth was still wrapped around his cock. Apparently he was too far gone a second earlier to wonder how she'd been asking questions with her mouth full. He looked down and his eyes went wide, seeing me smiling up at him as I boobed back and forth on him. I winked and gave him the 'V' sign while I continued. \n\n\"Good boy, not getting confused and panicking,\" mom said softly, heading off any apprehensions he might have had. \"Bron and I would love to fuck you at some point while we're staying here. Would you like that?\" \n\n\"Oh, shit, yes...\" he said emphatically. Mom smirked, obviously having guessed already at his reaction. \n\n\"You're okay with the two of us fucking you together?\" she whispered in his ear while drawing a fingernail down his chest. \"Wouldn't want to get you in trouble with mom and get you kicked out of your congregation.\" \n\n\"N-no, it's fine,\" he said somewhat unsteadily, but shaking his head at her conjecture. \"No one'll know, I promise. Holy shit...\" \n\n\"Mmmmm, good,\" mom purred while I stood up, lifting my shirt and exposing my breasts. I squashed one into hers, giving him an eyeful as we smirked at him. \"Keep it a real good secret and you'll love our stay here. Promise?\" \n\n\"Uh-huh...\" he said somewhat dumbly. \n\nMom and I smiled at one another and shared a quick kiss for his visual enjoyment before lowering our bras and shirts and then hiking up his pants. Giggling, we each ground our yoga-pant clad asses against him for a moment before telling him to wait two minutes while we made our exit. We threaded our way out of the tangle of low, red-sided buildings and made our way back to our cottage, holding one another's hands and squeezing with increasing amounts of pressure as we approached our private heaven. \n\n\"Holy shit, I got so turned on watching that.\" I whispered, trying not to press against her while we walked. \n\n\"I know,\" mom replied, her thumb stroking my hand in urgency. \"We need to get back and fuck or I'll be tearing your clothes off right here on the lawn and rape you where everyone can see.\" \n\n\"God, I want that,\" I murmured in a yearning tone. \"I want everyone to see us fuck like we're in heat. That sounds so good...\" \n\nOur pace picked up as we began to hurry to our cottage, desperation overtaking us. \n\n\"Please tell me you didn't lock the door.\" I almost panted. \n\n\"Nuh-uh,\" mom answered breathily. \"Didn't think we'd need to.\" \n\n\"Good!\" I said as I broke into a jog, the tingle between my legs almost an unbearable itch now, one that only mom could scratch, with her tongue, fingers and cunt. We scurried around the corner of our little rented abode, which faced out toward the edge of the property and a forest. There were no buildings in view and no people to be seen. We jammed our bodies together and were kissing feverishly as we groped for the door handle, unable to wait a split-second longer. The door gave way and we spilled into our cottage, already tearing one another's clothes off in desperation. I heard the door click shut, but probably would have been beyond doing anything about it if it stayed open, consumed as I was by rampant lust for my mother. \n\nWe were almost shredding one another's clothes as we tangled on the floor, kissing ferociously, biting one another's lips and swallowing tongues. My panties tore and mom's sports bra did too as we wrenched them off one another. Finally naked, we were rolling back and forth on the shag carpet, animalistic grunts and panting the sounds we made, desperate to fuck. \n\n\"Remember those lesbian vids we saw from the other night?\" mom almost rasped as she mauled my boobs. \n\n\"Which?\" I panted as I gripped her ass, eyes glazed with lust. \n\n\"Wrestling,\" she breathed, her expression flushed. \"Fuckfights.\" \n\n\"You wanna cunt-fight, slut?\" I hissed, the very notion sending a wicked thrill through me. \"I'll fuck you dead!\" \n\n\"Deeds, not words, whore!\" mom growled, suddenly rolling over on top of me. \"The rule is, no rules! First slut to cum loses and gets humiliated somehow.\" \n\n\"You're on!\" I grunted, beginning to wrestle with her, my mind ablaze with delight, both at the notion of the competition and also fucking my mother. Who would submit? One thing was for sure, I'd be doing my damndest to make sure it was her. \n\nShe'd said no rules, but we both knew there'd be some innate things we wouldn't do; I couldn't hurt my mom those ways and I doubt she could hurt her baby girl likewise. But biting, pinching and slapping one another's asses, cunts and tits would be fair play, I knew that much. I made a fast move and tried to pin her, angling for leverage, but mom squirmed away, trying to get behind me and take hold. She was quicker than I expected and her toned arms were around my waist, her torso leaning onto my back. \n\n\"Nnnnnffffffff, nice move, whore...\" I grunted as I squirmed and wrestled to free myself. I wriggled harder as I felt one of her hands grip my breast and squeeze, before giving the nipple a pinch and then tugging on it. I squealed and dropped, angling to one side and rolling over until she was on her back. She still had me in her hold, my body facing upwards as well. I groaned as her hand snaked down my body and found my cunt, already slick with excitement. I yelped as she slapped it twice before burying two fingers into my pliant, gooey womanhood. \n\n\"That's a hot and wet little box you've got there, slut!\" she panted as she thrust her fingers back and forth inside me, making me gasp and writhe, desperate to escape. \"Pity if someone were to break it!\" \n\n\"I'll break your cunt first!\" I growled, surging suddenly and managing to extricate her fingers from inside me. I twisted about and found myself facing down onto her, grappling to pin her arms. Mom gasped and cried out in pleasure as I leaned down and bit the swell of her breast, my teeth clamping onto it. \n\n\"Fuckfuckfuckfuck!\" she moaned, writhing beneath me. Her mouth was open as she stared at me lustily while I gripped her tit flesh between my teeth, almost tugging. I had her arms pinned and began to feel some hope. \n\nBut then her knee was between my legs, rubbing itself against my throbbing cunt and sending waves of pleasure that I both craved and dreaded rippling through me. I couldn't let her force me off my game, but she was devious, my mother, as I knew full well. I tried pressing my pussy down, to immobilize her legs and keep it from massaging me, but was only partly successful. If I pushed down too hard, I'd lose my leverage over her. \n\nIn spite of my grip on her tit with my teeth, mom squirmed and tried to roll, attempting to break my balance. She began slowly forcing her arms down along her body, dragging my hands with her and threatening my grip. Desperate, I quickly shifted my mouth from her breast skin to the nipple, grabbing it between my teeth and tugging. Mom seized up and keened in pleasure. I could almost feel the stinging delight myself, imagining how good it must have felt. \n\nThat lapse in my concentration undid me and mom reversed our positions, on me like a tigress. She bent one of my legs almost backward and I groaned as she snaked her body against me. She bit my breast and then gripped it tightly, making me squirm in desire. \n\n\"This'll take forever,\" she whispered in my ear as she nibbled it, making me shudder. \"How about scissoring our legs and then straight-up cunt fight, baby?\" \n\n\"Okay,\" I grunted. \"But tits and faces are still fair game too!\" \n\nMom and nodded and let me go. This was one of those moments where you could really see the competitive side in both of us. Since our last competition had apparently been drunken air hockey where mom was rewarded with a pool cue in the snatch, this would be a much better measure of our desire to dominate one another. We got ourselves into position, legs scissored and bodies close, almost close enough for our nipples to be touching. \n\n\"Same rules,\" she said. \"First one to cum loses.\" \n\nI nodded, my smouldering gaze never leaving hers as we began gyrating our hips together, pussies slithering wetly. We both shivered at the contact but kept going, determined to make the other one cum first, even if it was only by a fraction of a second. I could see the muscles in her toned core, rippling under her skin as she used pelvic isolations to move her cunt against mine. Looking down, I could see her netherlips splitting mine, then pulling away, strands of our wetness glistening between. \n\nThe sound. Oh, God, the sound of it... \n\nThe sound of anything in a wet pussy is truly wonderful. But two of them, kissing one another, sticky and warm, was unlike anything else on earth and it was intoxicating. We stared into one another's eyes, fucking steadily, trying to control the tempo. I tried to control my breathing and ignore the wet tingles that crept through my body from my pussy. \n\nMom smirked and reached over to grab my breast, squeezing it while supporting herself on one hand. I did likewise, supporting myself with the opposite hand. The squeeze gave way to the delicious sting of pinching one another's nipples, pulling them almost taut- the idea was to generate that heady mixture of pleasure and pain so many girls love, but not so much as to shock us out of the zone we sought to control and make the other surrender to. \n\n\"One day, baby,\" she breathed, giving my nipple a twist. \"A real sexfight... in our basement, on the exercise room floor... no holds barred, a fight for total domination.\" \n\n\"Gnnnn, yes,\" I moaned, loving the idea. Win or lose, to be locked in sexual combat with my mother sounded divine. \"I'd love that, mommy!\" \n\n\"But today, you're going to surrender,\" she continued, her smile a wicked one. \"Mommy is the queen of sex today.\" \n\n\"Don't think so!\" I replied hoarsely, redoubling my grinding efforts against her cunt. We gyrated our hips lustily, seeking to overwhelm one another with pleasure, make the other surrender to bliss. \"You're going down, whore!\" \n\nWe were starting to press and grind so hard that we had to let go of one another's tits, supporting ourselves on two hands. We had our asses raised off the floor while we shoved against each other, almost trying to grip one another with our hips and turn the other person on their side, a submissive position we'd seen in tribbing and sexfight videos. ",
        "We both refused to give, two sets of hips turning inward as we strained, trying to force the other around. I began roughly shoving with my hips, trying to sway her rhythmically into the submissive position I wanted, but mom imitated my motions. Maybe I imitated hers, it was hard to tell who started first, but soon, we were shoving our cunts at one another, bucking our hips together with increasing force. \n\nI bit my lip and mom clenched her teeth as our pussies smacked together, the motion no longer controlled and sensual but decisive and somewhat violent. There was the sting of the slap as the two sets of netherlips met, battering one another. Our battle had become a contest of who could take the most pussy pain. \n\n\"I don't care if I'm goddamn purple when this is over.\" I thought grimly as I slammed against my mother. \"I am breaking her cunt and making her submit!\" \n\nWe were both grunting and occasionally whimpering as the brutal contest continued- we both knew it hurt, but neither of us was going to quit first. The pain would pass, but the need to win, that would blaze brightly. \n\nI gasped and grunted as I steeled myself, feeling my hips impact mom's, my pussy cramming against hers with each thrust. Our rhythm was perfect now, it was simply a question of outlasting one another. Nothing else mattered. \n\nDesperate to make her quit, I almost hurled my hips forward like a freight train, determined to batter her into submission. Mom cried out and rammed her hips forward as well, apparently having the same idea at that exact moment. \n\nThere was a decidedly loud 'CLACK!' sound as our pubic bones met with jarring force. We both went completely still after the impact, eyes wide and unseeing. Slowly, I sank onto my back, groaning and reaching down to hold my cunt with both hands as pain washed over me. I could feel mom doing the same, letting out a sigh of despair and discomfort. \n\n\"Oh, Jesus,\" I warbled, the previous thrilling tingle in my womanhood replaced by a horrendous, aching throb. We'd slammed so hard, I'd be amazed if our pubic bones weren't looped through one another now. \"Gnnnnnn, fuuuuuuuuck...\" \n\n\"Might've... miscalculated that, baby,\" mom gasped, still holding herself. \"Uhhhhnnnn, your cunt nearly killed me...\" \n\n\"If getting kicked in the balls... is one tenth as bad as this,\" I breathed, trying to roll onto my side. \"Then I feel so terrible for boys and - gnnnnnnn - every time I've hoofed them there.\" \n\n\"I imagine it's even worse,\" mom said through clenched teeth. \"Nnnnnn, holygodfuckballs, I'll never be able to fuck again.\" \n\nSlowly, I dragged myself around to face down mom's body and sidled as close as I could. Lying beside her, I pulled her hips close and put my face between her legs, beginning to kiss her pussy, trying to make it feel better. I felt mom do the same to me. The pain remained, but we knew that we were trying to reduce it for one another. I kissed and caressed her with all the tenderness I could muster, all the while wincing as my cunt reminded me of the colossally moronic thing we'd just done. \n\nThe pain gave way to ache, and the ache to discomfort. We lay still, holding one another but just resting our war-weary bodies. Mom planted a gentle kiss on my clit and sighed. \"We're gonna end up doing that again, aren't we?\" \n\nI nodded, my eyes still closed. \"Not any time soon, hopefully, but... I need to know.\" \n\n\"I hope it's a long way off,\" she murmured. \"The only thing I can say definitively is it has, for now, completely killed my desire to fuck.\" \n\n\"Gnnnn,\" I replied. \"All we had to do was break our cunts on one another to kill the horny demons that drive us? Not fair, man...\" \n\n\"I wonder if ice packs would help,\" she said in a distant voice. \"Nothing for it...\" \n\nMom got to her hands and knees and crawled to the kitchenette, where she dragged herself up the fridge and rummaged inside the freezer. She finally returned to two packs of ice, wrapped in very thin towels, handing one to me. She then lay down beside me, looking at the ceiling and steeling herself for what came next. \n\nWe both groaned loudly as we pressed the ice packs to our poor, abused pussies. Mom gritted her teeth and squirmed in discomfort while I whimpered pitifully. \n\n\"Can't believe the answer is to freeze my snatch off,\" I mewled. \"Gnnnnnn, nearly as bad as the affliction! I don't know how long I can do this, mommy!\" \n\n\"Steady, baby,\" she said soothingly, her free hand squeezing mine. \"After this'll we go sit in the hot tub, let it all bleed away, okay?\" \n\n\"I'll try anything,\" I muttered, grumpy about how cold my pussy was. \"Remember that time I got cramps when I was thirteen and tried to solve the problem by putting that camphor and menthol balm on my hoo-hah?\" \n\nMom giggled, still lying on her back and looking at the ceiling. \"Do I ever. You cried for two days and there was nothing I could do for you. Even the doctor said to just wait it out and learn your lesson.\" \n\n\"Lot of help she was,\" I grumped, remember the incident with the utmost displeasure. \"She didn't have to smirk.\" \n\n\"Sometimes it's all you can do, when you can't save someone from themselves, baby,\" mom mused, removing her ice pack. \"Take yours off and let's see if gentle contact is soothing.\" \n\nI pulled my ice pack away and sidled closer to mom, until I felt her pussylips pressing to mine. The ache remained, but the contact was nice and put me at ease. We didn't squirm, we were just feeling one another and sharing the discomfort. \n\n\"Let's not forget the heavy-duty Tylenol, either.\" I suggested. \"No idea if it'll work on a busted cunt, but I'll try anything short of opioids at the moment.\" \n\nMom nodded. \"And as long as they don't make me too stupid to drive to the club. Hope we didn't bruise ourselves so badly that we're purple tomorrow night. That would be awkward.\" \n\n\"Not our brightest idea by a long shot,\" I sighed, slowly sitting up. I put out a hand and mom took it. I pulled her up into a sitting position and we cuddled close, hugging one another with our pussies still pressed together. \"I love you, you cunt-smashing trollop.\" \n\n\"I love you too, you cock-juggling thundercunt...\" mom giggled before pressing her lips to mine and kissing me deeply. Our tongues met and we began making out, in spite of the fact that we'd nearly shattered our womanhoods on one another. Breasts squashed and we caressed each other before finally getting up and hobbling daintily toward the door and out to the hot tub. We'd wrapped towels around ourselves until we were neck-deep in the churning, foaming water and finally relaxed, seeking relief from the discomfort we'd caused ourselves. \n\n\"God, what really weirds me out is that we know we're going to do that again,\" I sighed. \"What's wrong with us?\" \n\n\"Everything and nothing,\" mom replied, her eyes closed. \"We're just highly competitive sluts, that's all.\" \n\n\"One would think you'd be the only slut I wasn't competitive with, my own mother.\" I murmured. \"But maybe that's just as instinctual somehow. Competition for mating or something. I'm sure there's a daddy complex issue in there somewhere.\" \n\n\"Could be, but who cares?\" she said. \"We're enjoying our lives beyond a hundred percent right now, Bron. Our lives at this moment are close to perfection.\" \n\n\"Mmm, true,\" I agreed lazily, sinking lower into the water so my feet could embrace and caress hers. We were on opposite sides of the hot tub, not daring to do anything intimate in broad daylight, much as we may have wanted to. So our feet making out would have to do. \"Love me, mommy?\" \n\n\"Forever, baby.\" \n\nAside from a thoroughly broken cunt, life was pretty damn good right at that moment. \n\n*** \n\nThe jacuzzi and a brief rest had been exactly what we needed to energize ourselves for the afternoon's activity. I had to admit, the ice, followed by the water, and then some Tylenol, really did the trick in getting rid of the pain. We examined one another's pussies, concluding that we were not nearly as bruised as we dreaded we'd be; it was hardly noticeable, unless you were up really close. We chalked this up to good luck rather than good management, promising in the future to consider any activities a cunt-smashing contest might interfere with. \n\nWe were pulling into the parking lot behind the Lumberyard club, excited to start practicing our routine. There were a few other cars there, probably belonging to staff. We slipped in the back door and checked in at the office, letting the manager know we were here and wanted to use the stage. He nodded and just advised we'd be sharing it with a few girls. \n\nWe went back to use the amateur dressing room, but it was locked, so we thought we'd use the regular dressing room. Four of the girls from the night before greeted us, Tracy, Rica, Vera, and Kryssy. We told them that we'd come to practice our moves for the following night and they seemed excited to see what we had in mind. We'd gotten naked and were enjoying the catcalls from the ladies about our fabulous, natural figures. \n\nThen Diamond walked in. She was wearing a tank top and panties, towelling her bleach-blonde hair as if she'd just come from a shower. She stopped and stared at us, her face hardening and then warping into a glare. \n\n\"Can't believe they let you whores back,\" she snarled hatefully. \"Should fucking kick your asses!\" \n\n\"Oh, I see,\" mom said somewhat casually, turning to look at her and smirk. \"Is that how things are done around here?\" \n\n\"Diamond, let it go,\" Kryssy said, trying to head off what she thought would be an unpleasant encounter. \"They're just-\" \n\n\"Fuck you, Krys!\" hissed Diamond, stomping over to a makeup station where a gaudy little handbag covered in sequins lay. She fumbled in it and then turned, brandishing a pointy nail file in our general direction. \"Any more shit from these two and I'll gut them like-\" \n\nMom had apparently had enough, especially since this crazed dye-job was threatening her daughter. She moved in quickly and punched Diamond in the stomach. The girl wheezed violently, the wind driven from her and she almost doubled over. Mom took the hand that held the nail file and twisted it at the wrist, making Diamond suddenly keen in pain and drop the improvised weapon. She then was behind her and grabbing fistfuls of her hair, craning her head back. None of the other dancers moved, or even blinked, just watching impassively. \n\n\"It sounds to me like someone needs a serious attitude adjustment,\" mom growled in the blonde's ear while she whimpered in fear and pain, tears starting to form in her eyes. \"Sis, the backpack, please?\" \n\nI blinked for a second, wondering who she was referring to, then remembered that we were sisters as far as everyone in this place was concerned. \"Oh! Yeah!\" I said hastily, bringing over our backpack we'd brought our accoutrements in. Knowing what we'd brought, I suddenly realized what mom had in mind. In the two seconds it took me to cross the floor to her, I had a decision to make. It was either go along with her, or refuse and leave her to do this on her own. That made it pretty academic for me. \n\nMom was still gripping Diamond's hair, pulling on it and arching her body backward while groping her fake tits roughly through the flimsy tank-top she was wearing. She then ripped her panties right off, causing the girl to almost yelp in fright. Diamond struggled but wasn't strong enough to escape. She gasped when mom tore the tank-top off her, revealing her plastic tits. Still, the other dancers looked on coolly. \n\n\"Uh, why do you have those?\" Tracy asked as she watched me pull two strap-ons out of the backpack I was holding. One was a cherry red, the other a bright blue. \n\n\"Didn't know if fuck-shows were allowed,\" I answered, now glowering at Diamond as I stood in front of her. Mom had also pinned her arms and spread her legs to make sure she couldn't kick at me. Diamond struggled, but not very much, her eyes wide with shock. \"So we just brought 'em along in case.\" \n\n\"Not on this side of the county line, they're not.\" Kryssy said. \"Pity too, I'd love to see you two use them on one another.\" \n\n\"Well, looks like you ladies are going to get a show anyway,\" mom grunted, holding Diamond while she squirmed. \"Last chance to stop us from teaching this bitch a lesson.\" \n\nNo one said anything, still watching silently as I walked around behind mom and fixed the blue strap-on around her. Diamond shuddered in fear as she felt it press against her ass. I then returned to my position in front of her, my gaze never leaving hers as I fixed the red phallus to myself. Tears were running down her face. \n\n\"Not like you haven't had this coming, puta!\" Rica hissed disdainfully. \n\n\"No!\" Diamond protested, her voice coming in sobs. \"P-please, don't!\" \n\n\"Don't you think it's about time you got treated the way you treat everyone else?\" I said in a cold voice, now standing directly in front of her, letting her feel the latex of my fake cock press against her pussy. \"I'd say bite the pillow, because I'm going in dry, but there's no pillow, so...\" \n\n\"Please!\" she gasped as mom and I began settling between her legs, the thick knob of mom's cock against her puckered knot while I began dragging mine up and down her pussylips while scowling at her. \"Don't! Stop! I'm sorry! I'm sorry! I'll quit being a bitch! Please!\" \n\nMom and I both paused, the air heavy with tension. All we could hear was Diamond's ragged breath and her heart pounding in terror. \n\n\"Why should we believe you?\" mom asked quietly, pulling a little harder on Diamond's hair. \n\n\"Please,\" said the stripper, her cheeks red with tears and the rest of her skin pale with fright. \"I promise! I'll stay out of your way! Don't hurt me!\" \n\nMom relaxed her grip on the girl and I stepped away. Diamond was shaking as mom moved her forward slightly, between the two of us. Mom looked around at the corners of the ceiling. \n\n\"No cameras,\" Vera said simply. \"Illegal to do that in this state. No one saw shit here.\" \n\nThe other girls nodded. They seemed vaguely disappointed that Diamond wasn't going to get what they thought she clearly deserved. Mom joined me in standing in front of Diamond, looking at her sternly. \"So... learned your lesson? You're gonna play nice?\" \n\nThe stripper nodded miserably, holding herself. The softie in me wanted to feel bad for her, but this needed to end, now. If she started feeling spiteful, she could still hurt mom or myself in some sneaky way. \n\n\"I'm not convinced you're sorry, though,\" mom continued, her hands on her hips. \n\n\"I'm sorry...\" Diamond said in a tiny voice, looking at the floor. \n\n\"I'm thinking some gestures of contrition are in order,\" mom declared. \"Get down on your knees.\" \n\nDiamond looked up at her, eyes wide with concern. \n\n\"I'm not going to fuck you,\" mom stated. \"If you do as you're told. Get the fuck on your knees. Now.\" \n\nDiamond sunk to her knees, looking up at us. Mom motioned her forward. \"Kiss my dick and say you're sorry.\" \n\nAlmost like she was made of stone, Diamond crawled forward, until she was right in front of mom. She craned her neck, face red with humiliation as she began kissing at the blue latex cock mom was wearing, murmuring she was sorry. Mom stood over her, hands on her hips, her expression stern. \n\n\"Suck it.\" \n\nTrembling, Diamond pushed the head of the strap-on into her mouth and began bobbing back and forth feebly. She murmured she was sorry again. \n\nMom pulled the cock from the girl's mouth and then lifted it, exposing her slit. \"Kiss it. And more apologies. \n\nOn all fours, Diamond leaned in and began planting kisses against mom's pussy, murmuring that she was sorry. I frowned slightly, ready to tear the stripper apart if she tried to bite and hurt my mom. She didn't, though, apparently completely subdued by our show of force over her. I promised myself I'd remember what a powerful and terrifying tactic that was. \n\nMom tilted her head towards me. \"Belle next.\" \n\nWithout another word, Diamond shuffled in front of me and began mumbling apologies as she took my red cock in her mouth, kissing and sucking on it, as she had done to mom. I then lifted the dick, exposing my pussy to her. She didn't need any instructions, kissing it and saying she was sorry. I was so fascinated by her complete reversal in behaviour that I barely felt her lips on me, something one would assume should turn me on. \n\nShe leaned back finally, sighing and trying not to shudder. It was then that I noticed Kryssy had widened her stance, her legs apart and her cunt exposed. Clearly, she felt that Diamond's penance remained unfinished. The other three girls slowly followed suit, exposing themselves. Diamond didn't look at them, but she was no doubt aware of what was happening. \n\n\"Looks like you've got some more apologizing to do, Diamond,\" mom said plainly. \"Day's getting on, I wouldn't waste it if I were you.\" \n\nDiamond tried to protest. \"But I-\" \n\n\"Do it,\" mom snapped, her voice like iron. \"Do it or Belle and I will shred your ass and cunt so hard, you won't walk for a year, whore!\" \n\nDiamond went pale with fright at the threat. We had obviously terrified her. She almost spun on her knees and crawled forward, stopping in front of Vera. We couldn't see her face, but her body was shaking as she leaned in and kissed the stripper's pussy, almost sobbing her apology. Vera seemed unmoved. \n\nKryssy was next, nodding in satisfaction as Diamond kissed and apologized. We could hear Diamond sniffling, trying not to cry. When she was done with Kryssy, she moved between Rica's legs. She was about to kiss when the Latina girl grabbed her by the hair and jammed her face into her snatch, grinding it roughly. \n\n\"How you like that, puta?!\" she snarled angrily, apparently avenging herself for some wrong. \"You think you so hot now?!\" \n\nDiamond whimpered, but didn't pull away. \n\n\"That's enough, Rica,\" mom said. \"She did as she was told.\" \n\nRica ignored mom, swearing in Spanish at Diamond still, mashing her face into her cunt hatefully. \n\n\"Don't make me come over there...\" mom warned. \n\nRica glared at mom for a moment before almost throwing Diamond's head away from her crotch, muttering something under her breath. \n\n\"I speak perfect Spanish, by the way,\" mom mentioned. \"Trust me, your dad would love it. I'll make you my daughter.\" \n\nRica blushed and said nothing, while Diamond crawled to Tracy and kissed her last, mumbling her apology. She then stayed kneeling and waited for permission to get up. Mom walked over to her and put a hand under her arm, gently pulling her to her feet. The stripper looked embarrassed as she stood in front of mom. \n\n\"I can't control you your whole life,\" mom explained. \"But I'll be damned if I'm going to put up with that bullshit while I'm here. It's not like you make more money by acting like a total bitch. So just behave for the next week, got it? And probably after that, because these girls don't look like they're ready to believe you've had a change of heart just yet...\" \n\nDiamond nodded quietly. \n\n\"Ladies, we're gonna see if the manager will open up the amateur room,\" mom announced as we removed the strap-ons and put them back in the backpack of doom. \"My sister and I don't really belong in here with you anyway. We're just faking it. We'll take Diamond with us, in case she decides to try and sass you. See you out on the stage?\" \n\nThe girls all chorused a 'yes' and then mom looked at Diamond, pointing at the spot she was standing on. \"Stay.\" \n\nWe exited the dressing room and were heading down the hallway, buck naked, when I sighed heavily. \n\n\"Did we just humiliate and almost rape a stripper together?\" I asked, astounded to hear myself even ask such a crazy question. \n\nMom shrugged. \"I prefer the term 'disciplined', but yeah, in a nutshell.\" ",
        "I shook my head. My life was nuts, and I was loving every second of it. \n\n*** \n\nMom and I were in the amateur dressing room, sitting in two chairs and examining makeup options. Sitting nearby us, not saying much of anything, was Diamond. She was just watching us silently. Mom finally looked over at her. \"You look like you want to say something.\" \n\nThe bleach-blonde said nothing for a moment, and then sighed. \"I... why'd you take me out of the dancer's change room? I have a station in there. I wouldn't have caused any more shit.\" \n\n\"True, but I figured you were safer here,\" mom pointed out. \"Pretty sure Rica would be on you like a wolf all afternoon if we left you alone in there.\" \n\n\"Hn, yeah. Thanks, I guess.\" Diamond said. \n\n\"Don't thank me yet, we're only here for a few days and I'm not running interference for you while we do our thing,\" mom said plainly. \"Whatever you did to make those girls hate you so much, it's not going to disappear overnight, you know. You've got a lot of work to do to make your life around here tolerable again.\" \n\n\"It was tolerable before you got here,\" Diamond said sullenly. \"Yeah, I was being a total bitch, but at least I wasn't totally vulnerable. Now, if Rica gets uppity, she'll probably try to rape me like you almost did.\" \n\n\"Probably.\" \n\nThere was a rather stout pause before Diamond spoke again. \"You... would you really have fucked me back in there? Would you two have just fucked me dry like that?\" \n\n\"Yup,\" mom said, her tone finite, but I knew she was lying. I could tell. \"I'd've sawed you right in half for threatening my sister and I like that. You're lucky you apologized when you did. You saved yourself a world of hurt.\" \n\nDiamond sighed. \"You two scared the living shit out of me. I must've been really frightened, because I loved getting double-stuffed, normally.\" \n\n\"That doesn't surprise me one bit,\" I replied dryly. \"Happen to you a lot?\" \n\n\"When I can manage it,\" Diamond said, shrugging. \"Lots of patrons'll pay good money outside of the establishment to fuck. This town is pretty thirsty. And I don't care if it's guys or girls, to be honest. I've been fucked by two strap-ons before.\" \n\n\"Just don't get your hopes up,\" mom replied. \"No offense, but we don't know you from a hole in the ground, and you just admitted to prostitution in this little burg. I don't care what you do, but it won't be us.\" \n\nDiamond said nothing, going silent and looking at the floor. After maybe five minutes, she stood up, seeming to steel herself. \"I think I'm gonna try my luck in the other room. Thanks for the cool-down period.\" \n\nAnd then she left. Mom and I kept going through makeup options and discussing them when we heard lots of shrill invective being thrown in Spanish from down the hall. Seconds later, Diamond came back in, looking somewhat shaken and her lower lip starting to swell. \n\n\"Never mind...\" she said nervously. \n\n*** \n\nWe spent maybe two hours on the stage, twirling around the central pole and measuring our overall dance space. The other girls were using music to practice their routines, blaring from a large CD player set up at the corner of the stage. Mom and I went without, knowing we'd listen to our music later, back at the cottage. It was fun interacting with the girls, some of them even managing to not be total ice queens when Diamond was around. Except for Rica; she would just mutter to herself in Spanish and leave the stage. \n\nMom and I also walked around inside the club itself, getting a feel for its layout and noting all the seating arrangements. There were a few areas that were attempts at looking 'private', but not really- a few cushioned benches along the farthest wall away from the entrance, with a small partition and very low lighting. Well, whatever. Everyone was seeing our goodies anyway, so the privacy was hardly a concern. \n\nThere were also two VIP rooms, which, predictably, were less than impressive. The walls were painted a mottled purple, the rooms were dominated by a large couch in the center of each and there was a chair for girls to dance with. The sound systems piping in music were tinny, at best. Still, if mom and I did any private shows back here, especially together, we'd make a killing. \n\nWe were standing off to the side of the stage and talking while watching Tracy do a routine, when we saw Vera motioning to us from the other side near the curtains and beckoning us over. Curious as to what she wanted, we went up to her and noticed the smirk she was wearing. Mom tilted her head and Vera indicated we should follow her. The music was still blaring when we disappeared through the curtains. \n\nWe walked silently along with her through the tangle of velvet until we were in a small side hallway. There were sounds coming from the other end. We crept forward with her while she motioned for us to be quiet. She stopped near a door into an office, from which were emanating muffled moans and gasps. The window of the door was that ancient frosted-looking shit that you see in old cop shows, but it was yellowing and flaking away, to the point where there were little transparent holes in the cover it provided. Vera knelt next to the door and smiled slyly at us, winking. \n\nMom and I both knelt in front of the door, reasonably certain about what sort of thing we were likely to see. Sure enough, we quickly spied Rica lying on her back on a desk, legs spread wide, while Kryssy was squatting between her legs, sliding her tongue up and down the Latina's pussy, making her squirm and moan. \n\nMy hand reached over and gently took mom's as we watched intently, squeezing her softly. She smiled as she peered through her little hole, enjoying the action. For women who weren't lesbians, we were certainly enjoying girl-on-girl action recently, online or otherwise. It made us horny for one another. \n\nRica shuddered and her legs wrapped around Kryssy's head, pulling her in tight against her wet slit. She arched her back while she played with her breasts, undulating her hips while the other girl buried her tongue deep inside. \n\n\"Ah, Dios mio!\" hissed the Latina. \"Me encanta tu lengua! Me encanta tu lengua! Gnnnnn, si si si, mi puta traviesa!\" \n\nI watched intently as Kryssy supplemented her tongue action with fingers, sliding two in and out of Rica rapidly while her tongue flickered on her clit. She then proceeded to give her lover that mythical stereotype move, the Shocker, pushing her little finger into Rica's ass. The Spanish girl looked like she was going into convulsions for a second, her legs flying off Kryssy's neck and then making almost absurd churning motions in the air, like she was pedaling an invisible bike. \n\n\"Gnnnnnnnn, fuck!\" Rica rasped, straining her hips up and wracking her whole body before shaking like a leaf in the wind as she came. She began swearing and babbling so rapidly that it would've made Carmen Miranda's head spin. She ground against Kryssy's face with abandon, until the orgasm ebbed, at which point she flopped back onto the table she was lying on, her tan breasts heaving, the brown nipples hard as rocks. \n\nKryssy slowly rose, smiling, and pulled the limp Rica into a sitting position. They wrapped their arms around one another and kissed deeply, bodies pressed together. Tongues tangled and slithered around before Rica began licking her cum off of Kryssy's face, moaning in delight as she tasted herself. \n\nI was disappointed that the show might be over, but then Kryssy smiled slyly and gently laid Rica back on the desk before clambering over her. She straddled the Latina's face and then turned around, facing down her body. She giggled and shivered as Rica tilted her head up and flicked her tongue against her puckered knot. \n\n\"Mmmmmm, me encanta tu culo,\" moaned Rica, taking hold of her lover's ass cheeks and pulling them apart to give her better access to the treasures that awaited between. \"Me encanta!\" I was acutely aware of how wet I was getting and wondering if mom was feeling the same. \n\nWhat was I thinking? Of course she was. She proved it by slowly extracting her hand from mine and snaking it down into my lap. Still kneeling, I parted my legs, allowing her access to my pussy. I reached a hand across her thigh and found her slit, already sticky and waiting for me. \n\n\"Enjoy the show.\" Vera whispered, winking to us both before creeping away. It left me wondering- did Rica and Kryssy genuinely think no one knew about this or were the other girls just being considerate and letting them feel like they had privacy? \n\nMom and I breathed through our noses as we stroked one another, sidling closer until I thighs were pressing and ensuring we could reach one another's slits and finger them properly. The soreness of earlier was banished, replaced by the familiar and welcome tingle, tendrils of wet warmth creeping through me. \n\n\"Baby,\" she said in a quiet voice. \"Are you ready to graduate?\" \n\nI knew what she meant. In spite of our insatiable lust for one another, we had always considered ourselves to be completely heterosexual, attracted to men and craving cock. And this was still true- we loved to feel that wonderful, throbbing hardness deep inside us, the power of the male body, that testosterone-fueled engine bringing us to screaming orgasms. \n\nBut there was no denying that we were turned on by one another, and also by women fucking. There was something sensual and erotic in two female bodies churning together in the heat of sex, pleasuring each other in ways not available with the male body. \n\nMom was asking if we were ready to try bisexuality, to try fucking women. I could tell that she was yearning for it, and if I had to make an admission, I also found the idea highly exciting. On one condition. \n\n\"Provided it's along with you, then yes, mommy.\" I whispered back. \"I want to fuck some strippers with you.\" \n\nI felt the slightest tremble of delight in her body at my response and she turned her head and smiled at me. \"Then you'd better go and get the backpack. I'll hold down the fort.\" \n\nI nodded and stood, padding quietly away from the door we'd been kneeling outside of and heading through the maze of curtains and cacophony of noise to our dressing room. I retrieved the backpack and made my way to mom, who was still peering through her little hole in the glass, stroking her pussy intently as she watched. \n\nWe both stood and fixed the strap-ons around our waists, with me wearing blue this time and mom sporting red. We stood close, looking into one another's eyes for several seconds. Our nipples kissed we took hold of our cocks and worked the tips up and down against one's another's slits for several seconds while we worked up the nerve to go through that door. Mom clasped my free hand and smiled at me. I gave her a small nod. Taking a deep breath, we turned and mom opened the door, striding in. \n\nKryssy froze as she looked at us, her hands on her breasts. Beneath her, Rica paused as well, and I could see her face peer out from her lover's ass, eyes going wide. \n\n\"Damn, I'm sorry,\" mom announced, sounding put out as she looked around. \"We were told Diamond was probably back here, we were going to finish up what we started, make sure she didn't forget the lesson.\" \n\nMom turned back to the door and I made to follow. \"Sorry for barging in!\" she said as she started to leave. \n\n\"There's, uh, no need to leave,\" Kryssy said somewhat hastily, her face starting to blush slightly. \"And maybe you'd better take it easy on Diamond, she's not all that bad, y'know?\" \n\nMom paused and turned to look at her. \"Well, maybe she learned, but we're still intruding. You two're plainly back here for some privacy.\" \n\n\"It's private, yeah, but mostly it's to keep the male staff of the place from creeping on us.\" Kryssy explained, determined that we weren't leaving. \"It's okay if the girls see us. I'm pretty sure they spy on us sometimes through the door.\" \n\n\"Goodness,\" mom exclaimed, looking bemused. \"Very tolerant of you to let them do that.\" \n\n\"Hey, we're strippers, right?\" answered the auburn-haired girl. \"Showing off our bodies is kinda our thing. And it's no big deal if girls see us. Rica and I have had a few makeout seshes in the dressing room when other girls were around. No big, right?\" \n\n\"I guess that's true,\" mom conceded. \"But still, we're intruding, because we didn't come here to spy on you.\" \n\n\"Yeah, but it, y'know... be a shame to let those strap-ons go to waste...\" Kryssy said hopefully. \n\nMom and I looked at her for a few seconds, taking in the sight of her. Kryssy wasn't bad to look at- creamy skin, kinky auburn hair to her shoulders, hazel eyes, B-cup boobs that were slightly pointy, nice hips and legs, with a trimmed landing strip above her pussy. Rica was slightly shorter and fuller, with large breasts, tan skin, lots of wavy dark hair and her pussy was completely shaved. She was staring at us now too, still lying beneath Kryssy, but propped up on her elbows, gazing at us in thinly veiled desire. \n\n\"Are you asking my d- my sister Belle and I to fuck you?\" mom asked. \n\nKryssy nodded. \"I sure wouldn't object. I'm mostly into girls anyway.\" \n\n\"Me neither.\" Rica added. \"I'd get fucked by you.\" \n\nMom looked at me and smiled before holding out her hand. I took it and we walked into the room, leaving the door behind us open. If we were going to do this, damned if there wouldn't be an audience. \n\n\"Both of you, get off the desk and bend over!\" mom commanded. Kryssy scurried off of Rica and onto the floor in front of me. Rica clambered down and stood in front of mom. At the same time, they turned around to face away from us, leaning over the desk and parting their legs, giving us a commanding view of their wet pussies and asses. Kryssy reached under herself and used two fingers to spread her netherlips, revealing her inner pink. Seconds later, Rica did the same. \n\n\"Good to see you got each other started,\" mom said as she stepped up behind the Latina and put her hands confidently on her ass, gripping it. Rica squirmed under her touch, her breath taking on a sultry quality. \"So, a good and hard fucking?\" \n\nKryssy nodded eagerly. \"Fuck, yes, make me scream.\" \n\nI was fascinated by how confident and expert mom seemed at this, given how we weren't bisexual until five minutes ago by mutual agreement, but then I remembered that she and I had been practicing on one another constantly for the best part of a fortnight. We might not've been lesbians, but we sure as hell had trained ourselves to be. I had no business thinking I didn't know what I was doing. True, Kryssy's body wasn't as stunning as mom's, but the principle was the same- fuck the living shit out of her. \n\nI took hold of her and lined up the tip of my cock with her sticky pussylips. She shivered and gasped as I teased the head against her entrance, but then I pushed inside and her back arched. Kryssy let out a shameless groan of pleasure, while Rica keened as mom penetrated her. I pushed forward resolutely, counting on her already abundant lubrication to allow me in. Kryssy hissed and pushed back against me, taking the polymer cock all the way inside herself until her ass met my hips. \n\n\"Gnnnnn, fuuuuck!\" Kryssy almost howled. I took firm hold of her meaty ass cheeks and began pumping strongly back and forth, my cock deep inside her. She gripped at the desk and churned against me, hissing and panting as she tried to match my rhythm. Next to me, mom was plunging her dick in and out of Rica, who was grinding her ass in circles while sputtering out a string of invective in Spanish, far too fast for me to understand. \n\nI reached forward and grabbed onto Kryssy's breasts, causing her to shudder. I squeezed them and pinched her nipples, eliciting a hiss of delight. She looked back at me, her hazel eyes glassy with pleasure while we fucked. I pulled back as I held her tits, arching her back beneath me. Mom and I had fucked so often that I knew almost exactly what to do at any given second to make Kryssy cum hard. Her teeth were clenched while she ground against me eagerly. \n\nI looked over at mom, who had allowed Rica up into a mostly standing position- the Latina was squirming her ass against mom, who was almost mauling Rica's full breasts, pinching and twisting the brown nipples. Rica's hands were on mom's hips, bracing her against the woman who was fucking her. She'd turned her head to the side and they were swirling their tongues around one another, breathing heavily and moaning. \n\nI didn't know whether it was a twinge of jealously I was feeling at the sight of my mom kissing someone else. After all, I'd watched her kiss Claudio, even while we were having sex with him. Was it because this was another woman? Someone other than me? That was a line we hadn't crossed yet. \n\nIf I was jealous, I was being silly. I laughed inside my head and banished the notion while I pulled out of Kryssy for a moment and turned her around to face me. She was panting as she stared at me while leaning back against the desk. She spread her legs wide enough to allow me to stand between them, placing the head of my red cock against her pussylips again. I teased it up and down, making her bite her lip and whimper in anticipation. \n\n\"Jesus,\" she whispered. \"You and your sister are such pros at this...\" \n\nI almost laughed out loud as I sank myself deep inside her with one long, slow push, making her take in a deep breath, eyes widening. She wrapped her legs around my waist, and then her arms around my shoulders, crushing me to her. A moment passed before we jammed our lips together, kissing feverishly. Our tongues dueled, her nipples pressed to mine and her crotch ground on me while I reached as far inside her as I possibly could. Her nails were raking up and down my back while my fingers kneaded hers, leaving red marks. \n\n\"Ohmygod, that's so good!\" she gasped, body shuddering. \"You're gonna make me cum so hard!\" \n\nNext to me, mom was thumping away at Rica, her hips smacking loudly off the Latina's ass. She'd bent Rica back over the desk, gripping a fistful of hair while she fucked her. Rica was making incoherent noises I couldn't have reproduced if I tried. I caught a glimpse of mom's blue cock, thick and veiny, glistening with Rica's wetness as it slid in and out rhythmically. My pussy and my whole body were hot and wet with lust at the sight. \n\nMom and I inevitably moved closer to one another, desperate to feel each other, even if we happened to be currently fucking other girls. My hip and thigh pressed to hers, my arm occasionally bumping into her as well. Rica and Kryssy were close enough to be pressed to one another. Kryssy reached over and caressed the Latina's ass before smacking it loudly, causing Rica to gasp and moan. My hands reached up and groped her breasts again, interrupting her assault on Rica's derriere. She bucked against me, her head thrown back and her legs wrapped tightly around my waist. \n\nMom looked at me and made a subtle motion with her head to the two girls we were fucking. I nodded and we suddenly both withdrew from our partners. They both whined in protest, but mom and I deftly moved around one another and switched girls. Without a word, I pushed Rica's head down to the desk and pinned her while I slid the dildo deep inside her wanton cunt. She wailed and squirmed, as did Kryssy when mom began fucking her. Rica clenched her teeth while I drove into her, my fist grabbing a knot of hair. \n\nSide-by-side, mom and I pressed our lips together and kissed feverishly while we rogered the girls. Neither of us was likely to cum, not from fucking them like this, but I knew we were both getting really hot and horny, so relief would be needed before too long. My tongue wrestled with hers and we moaned into each other's mouth. \n\nKryssy came first, her body straining and then she almost screeched, biting her knuckle to keep from being heard for a mile in every direction. I fucked Rica harder and harder until she came, almost convulsing beneath me. Both collapsed onto the desk, panting in exhaustion. I released Rica's hair and she murmured in quiet Spanish while she lay in bliss, her gooey pussy still holding onto my red cock. ",
        "We both slowly pulled out of the strippers, and then heard some light applause behind us. We turned and saw Tracy and Vera standing in the doorway, smiling and clapping. Diamond stood behind them, looking rather sullen. Mom grinned and took a bow, as if she had just delivered a Shakespearean monologue worthy of Olivier. I shook my head and just smacked Kryssy and Rica on the ass, making them both shiver and moan lightly. Strippers, man... \n\nWe took off the strap-ons and put them in the bag before heading back to the stage, ready to practice and royally turned on. At one point, we were both slowly turning around the pole, standing on one foot and looking into each other's eyes. Holding on to the chromed surface, we lowered ourselves until our legs slid past one another and we'd scissored. In time with our music, we squirmed our pussies together, wishing we could just fuck. Some applause and catcalls came from the curtains and we laughed and stood, wiping the sweat from our brows. \n\n\"Think we'll get away with grinding our cunts like that during a routine?\" mom asked Tracy as we walked up to her. \n\nTracy considered and nodded. \"It was only a small part of the routine, it's not like you were making each other cum or jamming your fingers inside one another. We've had girls manage to masturbate on-stage without too much trouble. I just doubt you'd get away with the strap-ons or finger-banging each other.\" \n\n\"We'll do what we can to avoid that trap,\" I replied, making mom giggle and pinch my ass cheek. \"We're gonna go get some water, back after a bit.\" \n\nHand in hand, we walked back to the amateur room, passing the regular dressing room, where we saw Diamond sitting by herself. Her gaze flicked up at us and then away. \n\n\"Okay,\" mom said, pausing and leaning in the doorway. \"Enough's enough. What's got your titties in such a twist, lady?\" \n\nDiamond said nothing, just looking off into nothing. \n\n\"Well?\" mom pressed, clearly not interested in playing the guessing game. \n\n\"You fucked Kryssy and Rica.\" Diamond mumbled somewhat petulantly, still not looking at us. \n\n\"Annnnd?\" mom continued, raising an eyebrow. \n\n\"It's not like I didn't express an interest in letting you two fuck me, is it?\" the bleach-blonde groused. \n\n\"You mean after we almost raped you for being such a goddamn bitch?\" mom queried. \"I wasn't aware that people got rewarded for acting like total cunts.\" \n\n\"After that, after I apologized.\" Diamond almost snapped. \"I was willing.\" \n\n\"What if we weren't?\" mom said, her voice carrying a note of coldness. \"Pretty sure we can choose who we fuck and are fucked by. Nobody else gets a say.\" \n\n\"Weird thing to hear someone say after they almost rape you.\" Diamond grunted. \n\n\"I don't care if you're horny or jealous, Diamond,\" mom explained while walking into the room and I followed. \"No reasonable person expects to be treated right when they shit all over everyone else. And just because you said you're sorry a few hours ago and were made to kiss the cunts of the girls you've pissed off, it doesn't mean everything is hunky-dory and everyone likes you. Pretty sure you've got a long road ahead of you, making it up to the others.\" \n\nDiamond said nothing. \n\n\"Now I don't know what made you such a bitch somewhere in your past, and I don't much care. Maybe you were a spoiled brat who needed spankings from daddy, maybe you were molested by your uncles, but it doesn't give you the right to be hateful to everyone else. If being nice to these girls is too much work, move the fuck away from this Podunk town and start again, sunshine. And you might try being nicer to the next girls you work with.\" \n\nDiamond snorted. \"Please, I'm the only one of us who's actually from this Podunk town. All the rest of them are from somewhere else. This is supposed to be my turf.\" \n\n\"Don't know, don't care,\" mom said, shrugging. \"But a strip club can't survive with just one girl, so you are going to have company whether you like it or not. And if you need your name in neon marquee at the entrance, try being nice for a change and dance your ass off. Who knows, maybe the manager'll take notice.\" \n\n\"I would hope so,\" Diamond sighed. \"He's my uncle, after all.\" \n\nThat did it for mom. Her head drooped and she began giggling uncontrollably. I was snickering behind her and Diamond scowled, but before long, she began laughing too. It was pretty absurd. Mom plunked herself into a chair, trying to control herself. Eventually, she let out a long sigh, having mastered her laughter. \n\n\"Okay, wasn't expecting that,\" she admitted. \"No wonder you're so competitive and hateful. Still, bad idea and you need to change.\" \n\nShe pulled me into her lap and I settled onto her, sighing contentedly. She caressed my torso and breasts while Diamond tried not to watch, but we could see her squirming in her seat. Mom looked over at her and rolled her eyes. \n\n\"Is it really that important to you that we rape the shit out of you now?\" she sighed. \n\nDiamond made a wry face. \"Well, not rape. I mean, I like it rough, but some lube would be nice.\" \n\nI turned my head to look down at mom and she shrugged. \"Up to you, baby...\" she whispered. I sighed and decided to follow mom's lead. I stood up and opened the backpack, retrieving our goodies. \n\n\"Okay, but get this straight,\" I said as I wrapped the strap-on around my hips while mom did the same. \"I have no intention of putting up with any shit from you this week. You act like a goddamn bitch, we won't use lube next time, and you'll get a good beating for it.\" \n\nIt may have mostly been a lie, but Diamond didn't need to know that. She nodded in what seemed like an earnest manner. I opened the small bottle of lube and approached mom. We stood close to one another, our cocks pressing as I drizzled the viscous substance over them. Giggling ensued as we smiled slyly and stroked the cocks, making sure they were good and slippery. We pushed closer to one another, our breathing becoming intense as we slid the shafts along each other's pussies, eyes locked. Her nipples kissed mine. \n\nI really, really wanted to fuck my mom. \n\n\"Let's do this,\" mom said huskily, reading my mind. She turned to Diamond and beckoned her over. The stripper stood and approached us, looking strangely shy. Not something you'd expect from someone who makes a living showing her gooch to people. \"You sure this is what you want?\" \n\n\"I've got her ass,\" I announced, moving behind her. \"Spread your legs, bend over and pull your ass cheeks apart.\" \n\nDiamond widened her stance, still quiet. I moved in behind and pushed on her upper back, making her bend over. Diamond reached back and took hold of her cheeks, spreading them and exposing herself to me. Mom stood directly in front of her, taking her by the chin and pushing the head of her red cock into the stripper's mouth. Diamond closed her eyes and moaned. Meanwhile, I drizzled lube down onto her ass, watching it saturate her notch. \n\n\"How's that taste for you?\" mom asked in a low, husky voice as she slowly pumped her hips back and forth. \"This has been in Rica's and Kryssy's cunts. Does it taste like them, slut?\" \n\nDiamond groaned in response, her eyes still closed. I pressed my finger against her ass, getting the lube all over. Then I took hold of my blue cock and teased it up and down, over her slit, her taint and then her ass. I pressed it against the little knot, making her shiver and moan again. Her body tensed up as I pushed the head inside. I moved back and forth slowly, gently opening her tunnel before wiggling the shaft in a little further. The stripper squirmed and whimpered in response. \n\nI was finally buried deep inside her and looked at mom, nodding. \"She's pinned. She's not going anywhere.\" \n\nMom smiled slyly and pulled her cock out of Diamond's mouth. The stripper was trembling as mom slowly stood her up. She gasped and shook as the angle of my penetration inside her changed. Her ass pressed against me and her knees almost buckled. One of her hands gripped my hip for support. She was sweating now, her eyes glassy. Now mom pressed to her, their breasts squashed together. She slid her cock up and down the gooey pussylips and pushed inside. Once the head was worked in, she took Diamond by the hips and pressed slowly but steadily. Diamond's hiss became a cry as mom filled her. \n\nShe was now pinned between us, with mom in her cunt and me in her ass. My hands slid up to her breasts and gripped them while mom kept a firm hold on her hips. Diamond's hands were moving back and forth almost randomly, trying to settle somewhere on our bodies, but never deciding. She trembled and gasped as she tried to adjust. Mom and I looked at one another, smiling. \n\nWe both began to move our hips, slowly pushing in and out of the stripper. She whimpered and trembled, her eyes closed as the sensations washed over her. Her body grew warmer with each passing moment. It felt strange to me now, doing this to Diamond, since we had threatened to pretty much skewer her not much earlier in the day. Now it was a pleasure for her, not a terror. \n\nAnd my arousal with this entire action came from doing it with my mother. Diamond being the recipient was almost not relevant. She was a body mom and I were exercising ourselves on, while we looked past her and into one another's eyes. Mommy was what mattered to me. My bisexuality was predicated on her. With her, I was into just about anything, as long as we were together. \n\nI was now using a circular, grinding motion against Diamond, keeping my dildo deep inside her and churning it around. My tits squirmed against her back. Mom kept hold of her hips and using a back-and-forth sawing motion to fuck her pussy. Diamond was already shaking and panting, her eyes bleary with an agonizing pleasure. I pinched and tugged on her nipples while I fucked her ass. \n\nAnd then she moaned loudly and strained between us, cumming hard. Mom and I pressed into her, almost crushing her and jammed our lips together beside her, kissing one another heatedly. We fucked her relentlessly while she kept cumming, not even thinking of stopping. This wasn't exactly about doing her a favour, after all. It may have been her desire and request, but it had more to do with mom and I indulging ourselves than anything else. \n\nDiamond went limp between us, almost in a faint, seemingly. We slowly stopped fucking her and held still, seeing if she was in danger of falling over and taking her with us. Her legs were trembling, as if threatening to give out, so mom carefully slid the cock from her pussy and held onto her while I wrapped my arms around her midriff. \n\nWe handled her over to a chair and she slumped into it, still trembling and letting out thin gasps. Her pussy was distended from mom's abuse and dribbling obscenely. Her head was lolling to one side and I put my hands on her shoulders to brace her. Diamond's fingers twitched slightly, and her eyes finally fluttered open. She looked at us, eyes bleary from some mixture of pleasure and pain she craved. Her cheeks were flushed almost red. \n\n\"Thank you...\" she said in little more than a whisper. \n\n\"Better us than Rica, I imagine,\" mom grunted. \"Stay put while we go wash up.\" \n\nWith that, we wiggled out of the room together, and I took her hand. We went into a bathroom and were running the strap-ons under scorching hot water for several minutes. We didn't consider infection a real risk, but we weren't taking chances. Not with Diamond or any of the others. Mom turned and leaned back against the sink, smiling. I snuggled into her, our hips meeting and breasts squashing as I kissed her lovingly. \n\n\"Enjoy yourself, baby?\" she asked through the kiss. \n\n\"Yeah, because it was with you,\" I replied, nibbling her lips. \"I think... anything lez I do is gonna be because you're with me and that turns me on. It doesn't mean anything to me without you.\" \n\n\"Mmmmm,\" she purred, her arms around my shoulders and caressing my back. \"I feel the same way, Bron. But the same rule applies to girls as we have with guys- I won't be jealous if you find one you like.\" \n\n\"Unlikely, but thanks,\" I murmured, getting more and more aroused with each moment of our kiss. \"Same for you, mom.\" \n\nShe giggled. \"I'm hoping that all of our lovers, guy or girl, are shared between us from now on. I want you to be the focus of my love life.\" \n\nHer words sent a chilling thrill through my body and I kissed her even harder. I knew mom loved me more than anything or anyone, but her words made it sound like I was meant to be the entire focus of her love life as well. Like we were in love somehow. \n\nAnd that was endlessly thrilling and terrifying all at once. So much so that I trembled and breathed in through my nose suddenly while we kissed, pulled away from her and sat down hastily on the toilet to pee. Mom looked down at me in a flicker of confusion, and then amusement. \n\n\"Goodness, that was sudden,\" she mused. \"What happened?\" \n\nI blushed and looked down at my lap, unable to answer, still shivering as I peed. \n\nMom knelt in front of me, took my gently by the chin and lifted my face up, gazing into my eyes. I averted mine almost instantly, still red in the face. I guess her mother's or women's intuition kicked in, because I could feel the realization dawning on her. \n\n\"Bron,\" she queried in a soft voice. \"Baby, are you in love with me?\" \n\nI must have been blushing scarlet, my neck twisting around until I was almost looking backward, like some embarrassed owl. \n\n\"I don't know...\" I replied in the tiniest whisper ever. \n\nShe sighed and rested her hands on mine, smiling warmly. \"Thought about it myself, you know. It's hard to imagine anyone, anywhere, not falling for my little girl. You're just so wonderful in every way, baby.\" \n\n\"Thanks, mom,\" I said, finally looking back at her. \"It's hard to imagine anyone not being in love with you. Sometimes, I worry I'll get really jealous if you find someone. And not in a cute or good way.\" \n\nMom leaned in and hugged me close. Yes, our breasts were all squashed together and so on, but the hug was a comforting mom hug, not the hug of passionate lovers. She then looked at me again and kissed me. Unconditional love was all I felt in it. \n\n\"Bron, I will always love you more than anyone else. Ever. We may be joyous lovers, but I'm your mother before anything else. And that means you can always tell me things, no matter how you're feeling.\" \n\nShe had my cheeks in her palms now and was looking into my eyes. \"One day, you're going to give me beautiful grandchildren. But you'll need a husband for that. With any luck, he won't object to us still being lovers. But I know that one day, I'll need to give you to someone else, and I'm actually looking forward to it in a sense. I want you to know what your father and I had, and it's just not something you can have with me.\" \n\nShe leaned in, and her lips were so close to mine, I could feel their warmth. \n\n\"I'm going to be the most amazing lover you've ever had, baby, but there's better still to come, and I'll make sure you're ready for it...\" \n\n*** \n\nOur little heart-to-heart certainly had no effect on our libidos upon returning to the chalet we'd rented. We were lying in a naked, sweaty tangle on the bed, kissing feverishly as we pushed vibrators in and out of each other. My whole body was shaking and I moaned into her mouth. Mom was panting heavily, bucking her hips against my hand as I fucked her with the vibe. We'd already cum three times in this heated fuck session, and we were showing no signs of slowing down. \n\n\"I love you so much, Bron...\" she gasped through our kiss, her tongue massaging my tonsils. I could feel the vibe she was using deep inside my pussy, driving me wild. We'd already swapped off three times, and knowing that this toy had been in her tight, hungry cunt moments ago sent thrills through me. I redoubled my efforts in her pussy, fucking her rapidly until she was almost yelping. \n\n\"Mommy!\" I whimpered, gyrating my hips wantonly, my sticky essence all over her hand. We could both hear the squelching noises our pussies made as we fucked, driving us to new heights of lust and bliss. I was shaking uncontrollably and finally crushed my body to hers and kissed her savagely, letting out a shriek of rapture. \n\nWe came so hard that we both seemed to black out for a moment, lying together in a swoon on our bed. I couldn't even begin to guess how long we'd been lying there when I finally came to. My heart was pounding and pink, sparkling, unadulterated pleasure was blooming through me in waves coming from my pussy. \n\nMy mouth was still latched onto mom's, and we were drooling on one another. My body felt... wet, even saturated with forbidden bliss. God, my head was spinning. I didn't know I'd survive our sex if it got more intense than this. \n\nMom stirred and moaned finally, though her mouth never left mine. We squished in even closer to one another and just continued kissing, completely unconcerned about drooling all over one another's faces now. We were far, far beyond caring about anything like that. We held one another and caressed with both hands, leaving the vibes lodged deep inside each other, where they buzzed away happily. Our delicate sighs were hymns of ecstasy in our ears. \n\n\"Maybe... maybe we can pretend to be in love...\" she murmured as we kissed. \"Until that special someone comes along, hm?\" \n\nKissing her was all the answer she needed. \n\n*** \n\nAuthor's Notes: First up- no tantrums about the girls deciding to be casually bisexual. I'm going somewhere special with this. They've agreed their lesbian trysts are totally predicated on striving to please one another, got it? Just watch. The fucking of the strippers serves a narrative purpose, not merely the whimsical indulgence of an author. \n\nBronwen may be struggling with her feelings, but her mother has things well in hand (so to speak) and will not let the daughter she loves so much remain conflicted. Pretend they're in love so that they enjoy their debauchery more? Sure, but it'll get worked out. \n\nSo yes, our intrepid pair will continue to fuck and share guys, along with the occasional woman. But they really only have eyes for each other at this point. The young man who serves them breakfast will doubtless be the creamy filling in their sandwich soon. And what about Bron's twink back in the city? So many unanswered questions and unfucked associates. Dedicated libertines, the girls will no doubt attend to these issues before long. \n\nI'm taking my time with this story. There's plenty of sex, yes, and their relationship is developing at a laconic pace, but that's how I want it. Resolutions will happen when they happen, don't worry. Just enjoy the ride. \n\nOn to The Great Khan next, and then Twin Cities Tryst, and possibly a one-shot I've been looking at doing. I also have some non-erotic writing to finish for some other sites, so I'm glad I have these next few days off from the show and I can try to get things done. There's also the matter of the Winter Olympics to finish watching. \n\nKeep your stick on the ice! \n\nManagement"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "incest lesbian",
        "emotional needs",
        "toys",
        "mild violence",
        "mild non-con",
        "oral",
        "lesbian"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/sapphic-serenity-ch-08"
}