{
    "title": "Damn Dress: A Love Story Ch. 10",
    "pages": [
        "It was a beautiful sunny afternoon in early December. Ian and Sienna hiked their way across campus to the parking lot that Brandon picked her up from every other day after creative writing. It had become a habit of Ian's to carry Sienna's backpack for her. At first she had objected, but on those rare occasions when her back really was killing her, she appreciated it, so she let him. \n\nSienna listened absently to Ian talk about school. Truthfully, she had countless things on her mind. The baby, Brandon, his uncle/father situation, and upcoming exams.\n\n\"You know,\" Ian said, interrupting Sienna's thoughts, \"she talked so long today, that I honestly forgot what class I was in for a second.\"\n\nSienna laughed, \"I'm sure you did, since you fell asleep.\" \n\n\"And what's crazy about that is, I was hoping when I woke up, class would be over. But she was STILL talking!\" \n\nSienna laughed again, as the two of them reached the parking lot. A few students passed them and said 'hi'. Sienna greeted them while she searched down the street for Brandon's Jeep. But he was nowhere in sight. She glanced down at her cell phone for the time. Usually Brandon was waiting on her, but today he was running late. Sienna looked over at Ian, who had her backpack slung over his shoulder. She tried to grab her bag from him, but he moved it from her grasp. \n\n\"Nah, I got it,\" Ian said, twisting away from her. \n\nSienna sighed, \"I hate feeling useless, you know.\" \n\n\"Hey, I'm not doing this for you, I'm doing it for me. You know, carrying this heavy load will build up my arm muscles, so that I can challenge Brandon in a duel.\" Ian stared down at his skinny arms. \"I think by the end of the semester, these guns will do the trick, don't you think?\" he asked Sienna, while flexing his chicken arms. \n\nSienna burst into laughter. She wasn't sure if it was her hormones or if Ian really was that funny. But he seemed to always crack her up. \n\nShe wiped a tear from her eye. \"Yes, I think that will do the trick,\" she said, while feeling his non-existent muscles. After a few seconds, Ian suddenly pulled away from her and looked over her head. Sienna turned to find Brandon pulling up right beside them. \n\nSienna was about to greet him, but she noticed Brandon's mouth was in a hard line and his eyes were hidden behind dark sunglasses. She couldn't tell if he was staring at her or Ian.\n\nFor a moment, no one said anything. \n\nBut then the guilt of having Brandon witness her grabbing Ian's arm caused Sienna to break the silence. \"Hey BT,\" she said, carefully assessing his mood. A small smile formed at the corner of his mouth, but she couldn't tell if it was genuine or if he was just trying to conceal being pissed off. \n\n\"Hey, baby,\" he said, as he continued to stare in their direction.\n\nSienna quickly got in, buckled her seatbelt and looked straight ahead. But Brandon's head never left the direction of Ian. \n\nIan knew that behind those dark sunglasses, Brandon was glaring at him. Okay, he had to admit that Brandon still freaked him out. Not that he thought the guy would ever try to hurt him, because there was no competition there, but from what he had heard, this dude was known for being a bit unpredictable. And Ian wasn't sure what was going on, but Brandon was still staring at him. The engine idling was giving the whole situation an eerie feeling. Well, hell, Ian thought. Might as well greet him, maybe that's what he's waiting for. \n\n\"Hey Brandon,\" Ian said, giving him a small salute. A reply didn't leave Brandon's mouth until a few seconds later when he finally said, \"Ian.\" \n\nSienna was starting to feel really uncomfortable. What the hell was wrong with Brandon? She sat there a moment longer, before turning to glare at him. Now she was becoming furious. He had no right to treat her or her friend that way. \n\n\"We should probably go now,\" she huffed, crossing her arms over her chest. \n\nBrandon turned his head and looked straight ahead through the windshield. \"Well, we could go, but I'm sure you want your backpack.\" \n\nBoth Sienna and Ian quickly glanced at her bag, which was still draped over Ian's shoulder. \n\n\"Duh,\" Ian said, slapping his forehead as he handed Sienna her bag. \n\n\"Thanks,\" she quietly responded, and quickly waved bye. When Ian was finally out of sight, Sienna turned her attention back to Brandon. His focus was on the road, but she could tell something was bothering him. She hoped it wasn't Ian. She had thought that Brandon accepted their relationship, and that he realized Ian was just a good friend. Normally, his eyes gave him away, but he had them covered behind a dark silver reflective tint. \n\n\"Hey, you,\" Sienna teased, reaching up to lightly tug his ear. \n\nBrandon didn't turn toward her, instead he just said, \"Hey.\" He knew that she was wondering if he was mad at her for her little display of affection with Ian. In truth, he was a little bothered by seeing her touch him, but he had more important things pressing on his mind. He wasn't sure how he was going to deliver the bad news to her.\n\nSienna hated when Brandon ignored her. It hurt, especially now with her hormones flying all over the place. In her head, she tried to rationalize her behavior. Technically, she and Brandon weren't a couple, so he had no right to be upset with her. She knew he didn't feel that way, but facts were facts. They were not an item. No matter how many times over the past few weeks they had made out and cuddled. She was starting to get irritated. Fine, if he wanted to ignore her over something so tiny, then she would return the favor. She turned her attention back to the road and quietly pouted.\n\nBoth of them traveled in silence until they pulled up to the Commander's driveway. Brandon didn't bother turning off the engine. He had to tell her what was going on. But he felt miserable and didn't even want to think about it. \n\nSienna barely waited for him to park, before she opened the door and hopped out. She grabbed her backpack so she could turn and stomp away, but Brandon grabbed the other side of it. \n\nHe sighed, \"Look, wait Sienna, I want...\" but before he could get any further, Sienna lit into him. God, she hated herself for being so emotional.\n\n\"No, you wait! You had no right to ignore me the whole trip here. Ian is just a friend of mine. And besides, you and I aren't a couple anyway,\" she spat out, huffing and puffing. \n\nBrandon sat there dumbfounded. 'Where the fuck did that come from?' he thought. He had completely forgotten about Ian. Fuck! This girl knew how to use his heart as a fucking bulls-eye. \n\nSienna didn't mean for that last part to come out so venomously, but she was pissed and on the verge of tears. He just continued to stare at her, but she couldn't read him with those damn sunglasses on. \n\nBrandon felt his blood boil. Did she throw that in his face, just to fucking hurt him? He let go of her bag and put the Jeep in reverse, and tore out of her driveway. Of all the fucking days, he thought.\n\nSienna stood there, staring at him until he was out of sight. Shit! She should just call him to apologize. She didn't mean it to come off that way. She was just mad, because truthfully, she felt guilty. Had she caught Brandon doing the same thing, she would have been a little pissed off too. \n\nShe waited outside a minute longer, even after he was gone, just in case he drove back. But he didn't. So she begrudgingly entered her house, dropped her bag on the floor and walked into her father's study. As always, he was bent over his desk, reading some large book. When he heard her enter, he looked up. \n\n\"Hey, baby girl, how are you?\" Jackson inquired, leaning back in his chair. \n\nSienna shrugged, \"I'm okay.\" \n\n\"Well, I like to hear that you are great, but I'll accept okay from time to time.\"\n\nSienna sat down in the chair opposite her father. \"What are you reading?\"\n\nHer father turned to the title of the book, \"The Philosophy of Marcus Aurelius.\"\n\n\"Oh, the Gladiator dude.\"\n\n\"Who?\" Jackson asked.\n\n\"The old guy from Gladiator.\"\n\nJackson made a face, \"Marcus Aurelius wasn't a gladiator.\"\n\n\"No, from the movie Gladiator, you know...never mind,\" Sienna sighed.\n\n\"Oh. Hey, can you tell Brandon to come in here? I have to talk to him about something.\" \n\n\"He left,\" Sienna said, looking down at her hands. She hated herself at that moment.\n\nJackson stared at his daughter for a second. Usually Brandon came inside with Sienna, to say 'hello' and stay the rest of the afternoon until after dinner. \n\nSienna knew that her father figured something was wrong. No sense in hiding it. \"Well, he saw me with Ian today at school, and he got an attitude about it. But I told him that he and I weren't together, so he had no right to be upset.\" \n\n\"Ouch, Sienna,\" Jackson said. \n\n'Great, now I feel even worse,' Sienna thought. \"I didn't mean it the way it came out, daddy.\" \n\n\"Well, I guess it kinda came at the wrong time too,\" he said. \n\n\"What do you mean?\" \n\n\"Well, Brandon has been called on for another mission. He leaves out first thing tomorrow morning.\" \n\nSienna's heart sank. Her head began to throb. No, No, NO!! Sienna slumped down into the chair. \n\nJackson continued, \"And it has him thrown off because test results came in today confirming that Darren has the flu, so he's out, and this will be the first mission Brandon has ever gone on without Darren.\" \n\nSienna felt sick to her stomach. She couldn't believe that she had treated him so badly. Then suddenly she realized, THAT was probably what he wanted to talk to her about, and she jumped to conclusions and hurt his feelings. Aargh! She was so horrible! Tears immediately started stinging her eyes, and then to her embarrassment, she burst into a loud sob in front of her father. She couldn't control it. Fucking hormones.\n\n\"Oh, Sienna,\" Jackson said, as he got up and rushed over to her. He wrapped his arm around her. \"He'll be fine, okay. Brandon is very good at what he does, so I have faith in him that he will be just fine.\" \n\nSienna shook her head into her father's chest, as she cried.\n\n******************\n\nBrandon felt like crap. He hadn't meant to pull off like that, but she just blindsided him with her comment. He thought they were over that shit. He loved her, she loved him, and he thought that's where they were. Okay, maybe not officially boyfriend and girlfriend, but damn close to it. Fuck, every other night, he was having to pull her off of him. Didn't that count for something?\n\nBrandon pulled up to his house and got out. He pulled out his cell phone and called Darren. \n\n\"Hey man, what's up?\" Brandon asked, when Darren answered. \n\n\"Oh man, this shit has me puking my ass off. I can't believe I'm about to miss an assignment.\" \n\n\"Well, it happens to the best of us. Just make sure Tasha's taking care of you.\" \n\n\"Oh, always. But poor Michael, she has little man quarantined in his room, to avoid him catching it.\" \n\nThere was a brief silence, then Darren spoke again. \n\n\"Look BT, get John to watch your back out there since I can't. And come back safe with all limbs, okay?\" \n\nBrandon nodded his head, although he knew Darren couldn't see. \n\n\"Yeah, just won't be the same. But hey, I'm glad you don't have to go. Your ass is like a bullet magnet. People always trying to kill you.\" \n\n\"Well, that's because they tend to aim for the darkest target.\" \n\nBrandon burst into a laugh, \"Fuck you.\" \n\n\"Nah, I'll leave that to Tasha, but seriously man, take care of yourself. If something happened to you, Sienna would break into a million pieces, and the Commander would hate me forever for not going with you. And I don't want all of that on my head.\"\n\nBrandon laughed again and then sighed. \"Yeah, I will. See you when I get back.\" \n\n\"Alright. And, I don't want to lose my best friend. They're kinda hard to come by,\" Darren said. \n\n\"Yeah, I got it,\" Brandon said. He heard Darren coughing as he hung up the phone. Brandon leaned against his Jeep and sighed. This was one of the hardest assignments he had ever been placed on. Their margin for error was almost nonexistent. Fuck, he'd feel better about going if Darren was with him. \n\nHe also thought about his baby girl. He'd be damned if he'd leave this earth without seeing her at least once. Yep, he'd be fine. Determination to see her would make sure he kept his shit together. Now, if he only had his 'other' girl. \n\nBrandon entered his house and went to the refrigerator to get a bottle of water. As he drank the cool liquid, he thought about his baby again. He slowly walked to the back room and flicked on the light and scanned the baby's room. Everything was perfectly in place. All that was missing in his house were Sienna and his baby. At that moment, he felt emotionally and physically drained. He sat down on the large butterfly rug and leaned back. He stared up at the ceiling. He would get up to call Sienna in a few minutes. She was probably still pissed at him, but he had to talk to her before he left. But eventually sleep won over his battle to call Sienna, and he passed out on the floor. \n\n*********************** \n\nLater that afternoon, Sienna tried calling Brandon, but he wasn't answering his phone. Her nerves were such a wreck that her father suggested she take a nap before dinner. She tried to, but she ended up tossing and turning. She had a string of horrifying dreams. In some of the dreams Brandon had come back, but he was badly wounded or mentally traumatized. But the worst was the one she had of her father coming to tell her that Brandon wasn't coming back. That he had been killed in action. She woke up in a sweat. \n\nIt was in that moment that Sienna knew she couldn't wait another minute. She had to tell Brandon exactly how she felt, because she never knew when she wouldn't have that chance again. She had to tell him everything.\n\nShe got up, threw on some clothes, grabbed her keys and walked out. She knew her father had probably heard her leave, so she left him a note on the counter. \n\nWhen Sienna pulled up to Brandon's house, she noticed all of the lights were off. Was he already gone? Was she too late?!! But then she realized his Jeep was still there, so he couldn't have left yet. She hopped out of her car and lightly knocked on the front door. No one answered. After the third knock, she pulled out her key and opened the door. \n\nShe walked inside and turned on the light in the living room. She quietly made it to the back of his house and opened the bedroom door. His bed was messy, but he wasn't there. She closed his door and looked in the next room, which was now the baby's room. \n\nInside the room, she had to conceal a smile. There Brandon was, lying on his back with his hands behind his head, completely knocked out. She could actually hear him lightly snoring. He looked much like he did that day at her house, when he had taken a rest underneath the tree in the backyard. The day that she had gotten enough courage to make it known that she wanted him. It was only two short years ago, but it seemed like a lifetime had passed. \n\nSienna sauntered over to him and gracefully lowered herself onto his body, straddling his stomach. His eyes flew open, and he immediately sat up, causing her to slide down to his lap. \"Shit, what time is it?\" he asked, rubbing his eyes. \n\n\"It's around seven.\"\n\nBrandon stared at Sienna. She was void of any makeup, and absolutely beautiful. He wrapped his arms around her. \n\nSienna felt it was now or never. She couldn't imagine him leaving this house without knowing how much he meant to her. She took a deep breath and sighed. \"Brandon, I'm so sorry about this afternoon. I--I shouldn't have said what I did. And I didn't mean it,\" she declared, as she leaned in to kiss him. \n\nBrandon easily accepted her lips and the two devoured each other's mouths for what seemed like forever, until finally Brandon had to break away. \"What do you mean, you didn't mean it?\" he asked, breathing heavily and staring into her eyes. \n\nSienna bit her bottom lip and looked down. Okay, here goes. She prayed she was making the right decision, but she felt it deep down in her heart. She really had no reservations this time. This is what she really wanted. \n\n\"I don't want to wait anymore. I love you and I want to be with you. For good this time,\" she said, staring back at him. \n\nBrandon felt a jolt of electricity to his heart...and dick. He grabbed her face, and began kissing her even harder, with an urgency. Pure need. But then he lightly pulled her back, both of them were gasping for air. \"Are you sure, baby?\" \n\nSienna nodded her head. \"Yes. Absolutely.\" \n\nBrandon leaned in and kissed her again. He gently pulled her off of him, and stood up. He pulled her up from the floor and held onto her hand as he led her into his bedroom, hopefully soon, THEIR bedroom. \n\nOnce inside, he closed the door and began kissing her lips, her neck, and further down. She had said she wanted him, so fuck their pact to not have sex. It had been way too long. Too many nights of teasing, making out and fondling. He was ready to reclaim what he felt was his. He started pulling her dress over her head. \n\nWhen Sienna was free from her clothes, she sat on the edge of the bed and removed his pants by smoothly jerking them down his legs. She was so ready for him to be inside her. She crawled back on the bed and waited for him. \n\nBrandon stared at her beautiful body. Her tits were a little larger than normal and her soft honey brown skin was glowing. He slowly slid off his shirt, keeping his eyes trained on her the entire time. He crawled up the bed like a lion stalking its prey. He heard her giggle as she spread her legs in anticipation. He bent his head down and slowly licked her sweet slit. Sienna moaned and bucked her hips involuntarily. Brandon slid up further and stared down into her face. He leaned down and licked her lips and then kissed her, sliding his tongue into her mouth. Both of them groaned in their throats, as their mouths and teeth clicked together. \n\nBrandon's pelvis began grinding up against her wet pussy, but both of them quickly noticed her stomach was a little in the way. Like a sitcom, they both looked down between them and laughed. Brandon rolled off of her and laughed so hard, he started coughing. Sienna tried not to laugh, so she could pout instead, but she couldn't help it, he was cracking her up.\n\n\"It's not funny, Brandon!\" she exclaimed, trying to halt her own giggle. \"I feel so fat right now.\"\n\nBrandon wiped his face, and squeezed his lips together so he couldn't laugh anymore. \"Baby, you're not--,\" he tried to get out, but then he started smiling which turned into another laughing fest.\n\nSienna leaned over and lightly punched him in the shoulder. \"Not funny!\"\n\nBrandon closed his eyes and breathed through his nose. \"Okay baby, sorry, but I\u2014,\" he started again, but then burst into another set of snickers. \"Fuck! Baby, I'm sorry. Okay, whew...you're not fat. Not in the least, it just kinda caught me off guard, you know.\" \n\nSienna rubbed her stomach. \"Do I look gross?\"\n\nHe raised up until he was leaning over her. She had an unsure innocent look in her eyes and she was biting her bottom lip.\n\n\"Are you fucking kidding me? Baby, you are sexy as hell. Most beautiful pregnant woman I've ever seen. Nah, scratch that. The most beautiful WOMAN I've ever seen and I'll show you,\" he said as he began kissing her again. \n\nBrandon grabbed a pillow and placed it underneath Sienna's lower section, which gave him all the access he needed. He slowly thrust into her. Damn. She was tight like a glove, just as he remembered. \"Fuck,\" Brandon moaned.\n\nSienna had missed this so badly. She had wanted him for so long, and now they were finally together. His stiff, thick member felt like heaven invading her insides.\n\n\"Tell me you love me, Sienna. Tell me I'm the only one you will ever want,\" he ordered, staring deep into her eyes. Penetrating them down to her soul.",
        "\"I love you, Brandon. And you're the only one I--,\" she whispered, until his sudden kiss stole the rest of the words out of her mouth. \n\nUsually making love to Sienna was fast, hurried, needy, like there was no tomorrow. But tonight, after four months of tormented separation, he wanted to savor every second, every kiss and every touch. Brandon took his time making love to her. He couldn't take his eyes off her face. He wanted to remember every look of ecstasy that crossed her features. He knew this time around...he couldn't live without her. He had to make this work, no matter what. For his sake. For his daughter's sake. He loved this woman too much to ever let go again. Age be damned, pride be damned or any other obstacle that came their way. He was all in and he would fight for the three of them for the rest of his life.\n\n*********************\n\nSienna lay deep in thought, after their physical reunion together. She was mentally counting down the time when he'd have to leave. She hated this feeling. She welcomed Brandon's interruption from her awful thoughts.\n\n\"Have you thought of any names for her?\" Brandon asked, lightly grazing his fingertips over Sienna's shoulder. \n\n\"Hmm, I was thinking maybe I'll let you name her...if you want to,\" Sienna answered, staring at his profile in the dark. \n\nA huge smile spread across Brandon's face. Of course he wanted to. He kissed Sienna's forehead, \"Thank you baby, I'd love to.\" \n\nBrandon lay there thinking about his daughter's name. A name that he would cherish for the rest of his life. He looked back over at Sienna, and she had quickly fallen asleep. He loved her. Plain and simple, as old as time. And there wasn't a single thing he wouldn't do for her or his daughter. He had resigned himself to believe years ago that he would never have an ACTUAL family. He never saw himself as a dad. Never in his wildest dreams did he think he could handle the responsibility. But at the end of this journey, in April, there will be a small piece of himself and Sienna that he will be able to hold. To love. And will love him back.\n\nBrandon didn't mean to do it, because he didn't want to disturb her, but he pulled Sienna tightly against his body. She opened her sleepy eyes for a few seconds, but then she closed them back. Once she was close enough to where he could feel her heartbeat, he relaxed and closed his eyes. He figured it was his imagination, but he could have sworn he felt a third, tiny faint heartbeat as well. That calmed him even more and sent him crashing down into a deep sleep.\n\nThe next morning, Brandon was awakened by his noisy alarm clock. He wanted to throw that shit against the wall. It was screeching at him, almost mocking him and his short time he had left with Sienna. He finally turned over and the clock read seven thirty. Fuck. He had to be on base by nine. Before he could fall back to sleep, the delicious smell of cooking was wafting through the bedroom. He slowly got up, stretched and pulled on some loose fitting dark gray sweat pants. He marched to the bathroom to take a piss, wash his face, and brush his teeth. When he started heading down the hallway, the smell of food became more prevalent, and the sound of something sizzling filled the air. When he turned the corner, he saw Sienna scurrying around the kitchen. She had her back to him, so she didn't notice him casually leaning up against the wall, watching her every move. \n\nSienna wanted to make sure Brandon had a magnificent 'going away' breakfast. She was happy he hadn't heard her leave this morning to go to the grocery store. He had hardly anything in his refrigerator, but since he ate most of his meals at her father's house, she guessed he really didn't need anything. \n\nShe had just finished with the last pancake when she felt his arms glide around her full waist. A smile immediately spread across her face.\n\n\"Good morning, baby,\" she heard him whisper by her ear, and then lightly nibble on her earlobe. \n\nShe turned around in his arms, rose up on her tiptoes, and kissed him. \"Good morning,\" she said, when she finally pulled her mouth away from his. \n\n\"Damn Sienna, I should leave more often,\" Brandon joked, staring at the massive breakfast she set before him. He sat down at the kitchen table and stared at her as she brought plate after plate over to him. \n\n\"Don't joke about that. I don't want you to go, or I at least wish Darren was going with you.\" She looked back over at Brandon, and he was quiet. She wondered if he was nervous. \n\n\"Are you scared?\" Sienna asked, walking over to him. He looked up at her with an incredulous look. \"No,\" he said, but then closed his eyes. \n\n\"What's wrong Brandon?\" \n\n\"Nothing. I mean, I don't know. I just don't want to go. I want to be here with you,\" he sighed. \"But don't worry about it, I'll be fine. Let's eat,\" he said, digging into his food. \n\nSeeing him sitting there all vulnerable made Sienna's heart melt...and her pussy tingle. Damn, she loved this man. She really wanted him to finish the breakfast she had worked so hard on, but she kept having to squeeze her legs tightly together, to quell the joyful wave riding up her lower region. Whatever, that's what microwaves are for. She grabbed his hand and led him to the bedroom for round number two. \n\nAfter Brandon finally got to eat his 'going away' breakfast, they stood outside by the Jeep. Brandon was leaning his back against it, while Sienna had stepped in between his legs and rose up on her tiptoes for another kiss. She felt like she would dissolve as he wrapped his arms around her waist, and then lower to squeeze her ass. She moaned into his mouth. \n\nBrandon broke the kiss first. He leaned his forehead against hers. \"Baby,\" he whispered, \"I have to go.\" \n\nSienna was dreading those words. Four simple words that held so much meaning. She wished he had the flu too. Had she been smarter and had more time, she would have gotten it from Darren, and purposely passed it to Brandon. Then maybe she'd be feeding him chicken noodle soup instead of watching him leave for a dangerous mission in the middle of...shit, she didn't even know where he was going. \n\n\"Please tell me where you're going,\" she begged, as she clung to his shirt. \n\nBrandon bent down and licked her lips. \"No,\" he said softly, and then unwrapped his hands from her waist. \n\nSienna finally forced her hands to release his shirt. She had created huge wrinkles around his chest area, but she didn't care. She hated this part.\n\nBrandon quickly kissed her once more, and then opened the Jeep door and hopped inside. He looked down at her and smiled. \"By the way, I have the name for our daughter,\" he said. \n\nSienna perked up. At least she'd hear a little bit of good news before he had to leave and her day, week, month...however long, would be miserable. \n\n\"What is it?\" \n\n\"Well, I wanted a name that represents both of us. Kinda like that Brangelina shit, you know? So I came up with Siendon. What do you think?\" \n\nSienna didn't mean to do it, but she immediately crinkled her nose. Siendon. Um, he had another thought coming if he actually thought she would name her daughter that horrible name. She choked on the words. Siendon. What the hell? \n\n\"Um, hmm...I'm not so sure that would really fit her, you know?\" Sienna said in the nicest way she could. \n\nA crooked smile formed at the corners of Brandon's mouth. The expression she tried to hide from him for saying that name was priceless. \n\n\"Baby, I was kidding. I thought of names that could match us together, but if Siendon was the best you thought I could do...damn, you have no faith in your man,\" Brandon laughed. \n\nSienna exhaled loudly. \"Oh my God, I really thought you were serious. Okay, so let's have it. What's the name going to be?\" she asked anxiously. \n\nBrandon decided not to keep her in suspense any longer. \"Brienna Heather Temple.\" He stared deep into her eyes to gage her reaction. But he relaxed when he noticed a huge smile spread across her face. \n\nSienna loved it. Baby Brienna. Perfect. \n\n\"Well, Brienna is a mix of our names, and your middle name is a flower. Rose. So I wanted her middle name to be a flower too. At first I thought of Lily, but for our child to run around with the initials B.L.T...didn't sit well with me. I can imagine the sandwich jokes now. So, Heather, the beautiful flower it was. I got mad skills, right?\" \n\nSienna laughed and leaned through the Jeep window to kiss him. \"Yes baby, you do. I absolutely love it. I can't wait to tell daddy.\" \n\n\"And to keep it from being too many 'ienna's' in our house, we can call her Brie for short,\" he said. \n\n\"Damn, you really do have this all figured out,\" Sienna said, amazed. \n\nBrandon leaned through the window and kissed her sweet lips and said bye, before he slowly started to put the Jeep in reverse. Damn, he hated leaving, but he had to. He already missed her as he stared at her in the rearview mirror as he shifted gears and pulled away. \n\nSienna turned her back. She didn't want to see him turn the corner down the street. She just wanted to go back inside and call her dad, Lori and Tasha to let them know of the baby's....Brienna's name. She was about to walk up the steps when she heard Brandon's Jeep engine growing louder. She turned around to see him heading back down the street and pulling into the driveway. \n\nHe hopped out of the Jeep, ran up to her, kissed her again, then knelt down and gently kissed her stomach. When he raised back up, he kissed Sienna one more time. \"I forgot to say bye to her,\" he whispered. Sienna just stared at him in amazement. Just when she thought she couldn't love him any more, he did something like that. Could you die from elation? He patted her on the butt and ran back to his Jeep. \n\nShe watched him drive off for the second time, but this time she did wait until he pulled out of the driveway, and down the street past where she could see him. She stared at the empty street just a few moments longer, praying he would come back one more time. But he didn't, so she marched back up the steps and went inside. \n\n**********************\n\nOn the fifth day of Brandon's absence, Sienna started to panic. She hadn't heard anything. Sure, he had been gone longer than this before, but for some reason this time was killing her. She begged Darren to tell her where he was. She felt just knowing that bit of information would calm her nerves. But Darren refused, ensuring her that he was fine. That Brandon was tough and he would come back. But the more Darren told her that, the more she was sure he was trying to convince himself. \n\nShe tried to do everything to keep busy. In the middle of watching a program on TV, she would start to hyperventilate. She had never panicked this bad before. \n\nWhen she wasn't having hyperventilating attacks, she had asked her father to move her back into Brandon's house. She wanted to be moved in and settled when he got back. And although her father moved her things into Brandon's place, he insisted that she stay with him until Brandon did return. He also tried to tell her not to worry. But they didn't understand. None of them did. She would die without Brandon. She needed him, and every second, minute, hour of each day was slowly driving her crazy.\n\nEvery time her cell phone rang, she jumped and answered it, out of breath, praying that it was him calling to say he was back. But it never was.\n\nSienna thought hard about Brandon. Their relationship. From the moment she first ran into him when she was eight, until now. She thought about the ways he looked at her, like that night when she was on the dance floor at her birthday party. How sexy he looked in his brooding tall manner. She wondered if she hadn't worn that dress that night, and just wore a pair of jeans and a shirt, would she have sparked that possessive flare in him that caused this crazy whirlwind love affair. Would he have just smiled and waved as she approached? Told her happy birthday and just given her a hug. Would he have still seen her as the girl who had a crush on him? She owed a lot to that tiny dress. It was the catalyst that brought them together. It up'd her game and silently told Brandon she was also playing for keeps. \n\n****************************\n\n\"You alright, man?\" John whispered to him, tapping him once on the shoulder.\n\n\"Yeah, I'm fine,\" Brandon answered back, bringing his mind back to the task at hand. As always, he was thinking of Sienna and his baby girl. But he needed to concentrate. He and John had been tucked inside this building for six straight days crawling in and out of air vents. Thank God for Sienna and her 'shower therapy', he was finally able to breathe in small spaces. He and John had finally gotten orders to take out their target. In less than a minute the two of them would be barging in and unleashing hell. But their game plan had to be air tight. There was just the two of them, and five of the other. And if that wasn't hard enough, their main target was sleeping on the floor right above them, so this had to be quick and quiet.\n\nHe used to love going on missions. But now that he had a family, he dreaded it. He could understand now how some of the family men in his unit felt. When he was younger and dumber, he used to assume that those type of men were pussies. They'd kiss pictures of their wife and kids before they left, or complain about their life insurance policies if they died, what their family would and wouldn't get. Brandon wanted to tell them to shut the hell up and concentrate on the mission. That's what was most important. But now he realized, no it wasn't the most important thing.\n\nBrandon screwed the silencer on the tip of his gun and made sure his Team knife was ready as well. Fifteen seconds. He saw an image of Sienna smiling at him. At that moment he felt sorry for those fuckers, because they were all going down. He WAS going back home, no doubt in his mind.\n\nJohn tapped his shoulder twice for the signal, and Brandon lowered himself from the vent and quietly into the room...\n\n***************************\n\nBy the eleventh day, Sienna began having horrible nightmares. Nightmares of Brienna being born and not knowing her father because he had died in combat. After that night, she tried to sleep as little as possible. By that time, her father had to keep her from driving to base and cursing random people out until she got some answers about Brandon's whereabouts. \n\nShe had longed for Brandon for as far back as she could remember. Night and day, her obsession for him never wavered. But deep in the recesses of her mind she did feel that maybe, just maybe, she would never get him. That he would always see her as a 'kid sister' type, and she would be miserable the rest of her life. But luckily, he HAD noticed her in a different way.\n\nSienna also thought about the things she loved about him. His deep voice and thick New England accent. The way he stood up straight from years of training in the military. His sea green eyes that seemed to follow her wherever she was. Those eyes would send chills up her spine, even if she were across the room. The way he was overpowering. It was tiring sometimes for her, but she wouldn't change that about him for anything. The way he dressed, in a simple t-shirt, jeans and sneakers. The way his hair felt as he snuggled beside her in bed, and buried his face into her neck. She thought back on the time when she had tried shaving him, and he kept kissing her, and ended up getting the shaving cream all over her face. That day they had made love right there on the bathroom sink. And his smile...that freaking beautiful smile that melted her heart. \n\nTonight she would say an extra prayer on top of her normal prayer...just in case God was busy. Just a little prayer asking HIM to bring her man back home soon and safely. \n\nThe next morning, Sienna trudged into the kitchen to fix herself a bowl of cereal. Day twelve and still no Brandon. She stood by the kitchen counter eating, while staring out of the window into the backyard.\n\nHer father came in whistling. He walked over to her and kissed her forehead. He grabbed the morning paper and sat down at the kitchen table, blowing off his coffee and reading.\n\nSienna stared at her father. He seemed in a rather good mood, despite her somber presence. \n\n\"You seem chipper today,\" she said to her father, stuffing another large spoonful of Cap'n Crunch in her mouth.\n\nHe took a quick sip of his coffee and blew again. He looked over at her and smiled. \"Yep, I sure am,\" he said, and stared back down at his paper.\n\n\"Why?\"\n\nJackson sat his coffee down on the table. He was definitely more excited than he cared to let on. But he didn't want to torture his daughter anymore.\n\n\"They just landed back on US soil ten minutes ago. He's back,\" Jackson said, a wide smile spreading across his features.\n\nSienna screamed and dropped her bowl of cereal. She ran over to her father and hugged him, almost knocking him out of his chair.\n\n\"Thank God!! When can he come home?!\" she shouted in her father's ear, still holding on to him.\n\n\"Calm down, baby. He can leave base in about three hours. That should give you plenty of time to--,\" Jackson barely got the rest out, before she tore out of the room. He sighed when he heard the front door open and close. He shook his head and smiled. Now, he could finally breathe a sigh of relief. His 'son' was back home safely. He took another sip of his coffee. Yes, he was going to have a good day today.\n\n**********************\n\nSienna was so excited! Brandon was coming home in three hours. \n\nShe had rushed over to his house and immediately started cleaning. She had never really cared much for cleaning up, but since she had been pregnant, she started to become obsessive about it. Perhaps it was that nesting phase those pregnancy books talked about. She had to also cook some food, and she would probably not get through all of it by the time he came, but just as long as the house smelled like someone had been baking, all was good.\n\nShe had put on the cutest dress she could find...that would fit her. She had been in the middle of vacuuming, when Tasha dropped off Michael. Now that Darren was better, he and Tasha had been wanting to get out of her place and go on a date, so Sienna had offered to keep Michael for the afternoon. She wanted to cancel on them so bad, but since she had already promised, she figured Brandon wouldn't mind when he showed up. Although she warned Tasha that they had to pick him up in the evening, because she wanted her own little 'date' with Brandon.\n\nActually, Sienna knew that Brandon liked having Michael around. It gave them a chance to have a child in the house, and they had better start getting used to it. Michael was running back and forth from the living room floor to the kitchen, stealing icing from a cake she was in the process of baking for Brandon, and then back to his video game. She had asked him if it was good, and he just smiled a big snaggle-tooth smile at her and nodded his head. Gosh, he was so adorable. \n\nSienna stared down at the cake. Truthfully, Brandon didn't even like sweets, but she felt she should do it anyway. He always said that she was sweet enough. 'Cheesy liar,' she thought with a smile. \n\nSienna jumped when she heard the doorbell ring. Crap, that was sooner than three hours. She didn't stop for a moment to think that Brandon would have used his key. Instead, she darted for the door, icing on her hands, and flung it open, waiting to jump in his arms. \n\nBut instead, she came face to face with a stranger. Sort of. \n\nSienna's smile faded and she lost her breath. She knew exactly who this was. A large, tall white man with graying brown hair and piercing green eyes stood staring down at her. Yes, she knew who this was. She just didn't know how or why he was here. She was sure her mouth was wide open, but damn if she could close it. ",
        "\"Um, does Brandon Temple live here?\" the large man asked in a thick Boston accent, stepping away from the door to read the numbers on the side of the house again. \n\nSienna was still speechless. She felt Michael's body leaning up against her, as he stared up at the stranger. That finally snapped Sienna out of her trance. \n\n\"Uh, um, yes, he lives here,\" she answered, not sure of what else to say or how much information to give him. \n\n\"Oh, okay. Is he here now?\" \n\n\"No, he's gone, but will be back soon.\" Sienna wasn't sure what to do. The stranger just stood by the door. \n\nHe looked down at her very unsure. He finally decided to extend his hand. \"Well, my name is Harold McNeil. I'm a...a relative of his.\" \n\n\"Yes, I know who you are,\" Sienna whispered and shook his hand. \n\nHarold took a step back and stared into her face for understanding. \"Oh, okay,\" he finally said. After a few awkward moments, he spoke again. \"Well I kinda came a long way to see him. Mind if I wait on him?\" \n\nShit! This is exactly what Sienna didn't want. She didn't want to be rude to him, but she knew that Brandon would not want him in his house. But maybe she could get him in, have him wait just a bit, and then pretend to receive a fake phone call that Brandon wasn't coming home. Yes, that way she could be nice, but still get him to leave. \n\n\"Um, sure, come inside,\" she said. \n\n\"Thanks. Man, you guys get some hot weather. It's December and it's still warm out. Where I'm from it's freezing right now,\" Harold told her, while stepping inside the house. \n\nOnce inside, Sienna watched as he glanced around the living room. He then settled his eyes back on her, as if noticing for the first time. Slowly his eyes lowered to her stomach. \n\n\"So, are you and Brandon...,\" he started. \n\n\"Yes, he's my boyfriend and we're about to have a baby,\" Sienna stated. \n\nHe glanced at Michael. \"How old is your son.\" \n\n\"Oh, no. I'm just baby-sitting. He's my friend's son. His name is Michael and he's six. Michael, come say hey to Mr. McNeil,\" Sienna said, trying her best to keep her voice light, although her mind was laced with concern. She needed to fake that phone call soon. \n\nMichael paused his game, and walked over to Harold. Michael stared up at him for a few seconds, before turning to Sienna and loudly whispering, \"He looks like BT, Sienna.\" \n\nBoth Sienna and Harold froze. Sienna nervously laughed, and pushed Michael back toward the living room so he could finish his game. \n\n\"Would you like something to drink?\" she offered. \n\n\"Sure, um, do you have a soda or something?\" Harold asked. \n\n\"I have a coke, is that okay?\" \n\n\"Yes, thank you. Anything but the old liquid courage. I quit that stuff a few years ago, and got saved, you know?\" \n\nWell, at least that was good. She figured drinking had been Harold's biggest problem in trying to raise Brandon. If you could call it raising. But she still really needed to get him out. She had to fake that cell phone call now! \n\n\"So,\" he called out to her while she was in the kitchen. \"Brandon's in the military?\"\n\nSienna really wished he would stop asking questions. \"Yes, he's a Navy SEAL.\"\n\nHarold laughed out loud. \"Well, I'll be. Never took him for one who could learn discipline, that's for sure. A SEAL, huh? Wow.\"\n\nSienna walked over to hand him his glass. \"Thank you,\" he said, while staring at her. \"Um, judging on the way you've been acting and looking at me, I assume you know that I'm Brandon's father, right?\" \n\n\"Yes, I know.\" \n\n\"Do I really look like him? I don't really remember much about him. He left when he was a teen, but I never paid that much attention anyway,\" he whispered, staring into his drink. \n\nSienna watched Harold closely. There were definitely resemblances. The hair and eye color, the same nose, about the same height and build. Yes, you could definitely tell they were related. \n\n\"Yes, you do,\" Sienna whispered. \n\nHarold chuckled. \"Ah, Kelly...,\" he muttered, as he sat deep in thought. \"I'm sure he didn't tell you the most pleasant things about myself, right?\" \n\n\"Mr. McNeil---,\" Sienna started. \n\n\"Harold.\" \n\n\"Harold, I don't really think it's right for me to discuss any of this with you. And I think you should know that Brandon doesn't know--,\" Sienna stopped suddenly, frozen. \n\nThe very thing she dreaded... was happening. She heard Brandon's Jeep pulling into the driveway. Shit!!!!! Damn it!!!!!! \n\nShe immediately rushed to the door, and as soon as she snatched it open, she saw him bounding up the steps. He looked extremely tired, but he smiled when he saw her. He dropped his duffel bag, and leaned in to kiss her. \n\n\"Damn, I missed this,\" Brandon said as he tried to roll his tongue into her mouth, but she turned her head away and nervously looked back into the house. 'What the fuck?' Brandon thought, trying to look at her face. \n\n\"Baby, what's wrong?\" Brandon asked, starting to get a weird feeling in the pit of his stomach. A strange, unsettling feeling. This was not the homecoming he was expecting.\n\nSienna turned back to him. \"Baby, please, I didn't mean anything by it. It was all a surprise, please believe that,\" she begged, as her nervous eyes darted back and forth. \n\nBrandon didn't know what the fuck was going on, but she was freaking him out. He tried to follow her eye path, but the door was obstructing his view. He immediately tensed. \n\nWith one hand on Sienna's waist, Brandon slowly pushed the front door completely open with the other hand.\n\nMOTHERFUCKER!!!!!!!!!\n\nBrandon slammed the door closed. He backed up and looked at the numbers on the side of his house. He knew this wasn't his fucking house. He knew that motherfucker wasn't standing in his Goddamn house.\n\nBrandon exhaled, and put his hands behind his head. He slowly walked down the steps. He closed his eyes and tried every method he could think of to calm his temper. He tried to count backwards, the thought of butterflies and clowns, fucking Lamaze breathing, anything to keep himself from shaking and his mind from hitting homicidal ideas. Then he thought of Brienna. Brienna...\n\nBrandon slowly turned around and stared up the front steps at Sienna. He walked back up and stopped in front of her.\n\nSienna was so nervous. Her eyes began to water, and she bit hard into her bottom lip, until it started bleeding. She looked up at him. He was staring at her and breathing hard. He leaned down and kissed her bruised lips, licking the metallic tasting blood off. Then he turned from her and walked into the house.\n\n************************\n\nWhen Brandon entered, he kept his eyes on his uncle. He couldn't believe that motherfucker had the audacity to show up at his place. He hadn't seen his uncle or aunt since he was seventeen years old, and that was just fine with him. Brandon's entire body was tightly coiled. He finally unlocked his jaw, and turned his attention to Michael, who was sitting on the floor, staring back and forth between the two men.\n\nMichael was a precocious child, and he knew that something was going on underneath the surface. Brandon looked upset, Mr. McNeil looked sad, and Sienna looked like she was about to cry. Yes, something was definitely wrong.\n\n\"Hey Mikey, what are you playing?\" Brandon asked breaking his evil stare from his uncle and kneeling down beside Michael, while trying to keep the malice out of his voice.\n\n\"Um, I was playing NBA 2K9. Wanna play?\" Michael asked, offering Brandon a controller.\n\nBrandon smiled at him. \"Nah, I'll take a rain check. But can you do me a favor?\"\n\nMichael nodded.\n\n\"Can you go for a ride with Sienna really quickly?\"\n\nMichael nodded again, and stood up. He walked over to Sienna, who he noticed had a confused look on her face.\n\nBrandon walked over to them. He leaned down and whispered in Sienna's ear. \"I don't want him to hear what I'm about to say, so can you take him for a ride? I'll call you when the coast is clear, okay?\"\n\nSienna looked over at Harold, and then back to Brandon. \"Brandon, do you want me to call Darren or my dad? Are you sure you'll be okay here?\"\n\nBrandon nodded his head, and then turned his attention to Michael. \"Keep your hands off my girl,\" Brandon teased, and shook Michael's head with his hand. Michael laughed and nodded his head again.\n\nMichael practically pulled Sienna out of the door. She couldn't take her attention away from Brandon. But finally, she sighed, and got in her car and drove away.\n\nBrandon exhaled as he watched them pull out of the driveway, and then he turned his attention to the other man in the room.\n\n\"What the fuck do you want?\" Brandon spat out.\n\nHarold opened his mouth, then closed it back. Then he finally spoke. \"Well, I wanted to see how you were?\"\n\n\"Why do you care? Alive, dead, jail or fucking president, why would it make a difference to you?\" Brandon said, trying extremely hard to not lose his cool.\n\nHarold sighed. \"I see that you still harbor a lot of past feelings. I guess I should tell you I was saved a few years ago and\u2014,\" Harold started.\n\nBrandon chuckled. \"You see that I still harbor a lot of past feelings,\" he repeated, shaking his head. \n\n\"Brandon, I was not a pleasant person back then, and I'm sorry about that. I came here today to make up for it.\"\n\nBrandon laughed. \"Make up for it?! You are out of your fucking mind. At this point, I have nothing else to say to you, so get the fuck out of my house.\"\n\n\"Brandon, I don't really remember all of the things I did back then, but I've been saved since then, and I\u2014,\" Harold tried to say, before Brandon cut him off.\n\n\"Your being saved doesn't really do a damn thing for me. Because even if you were too fucked up to remember, I remember. Oh, every little detail is engrained into my brain. Let's stroll down memory lane since you can't remember. Do you remember beating the shit out of me every other night? Maybe you remember me spitting up blood in the fucking bathroom because you broke my rib. Or locking me in a closet all day with no food or water? You did that quite a few times. Want me to go on?\"\n\nHarold hung his head. He honestly didn't remember some of those things, but unfortunately, a lot of it he did.\n\n\"My own fucking hell hole for eleven years!! You probably don't remember half of the shit you did, huh? You pulled a fucking gun on me when I was ten! A scared ten year old, crying and about to piss myself because I thought you were going to kill me. So fuck you, and your sorry assed, half-hearted attempt at redemption. You ain't getting anything from me.\"\n\n\"Brandon, I'm your family.\"\n\n\"No, hold the fuck up. Just because you're married to a woman who's my mom's sister, doesn't mean we are related. You aren't my family and you never were.\"\n\nHarold stood there amazed. Brandon really didn't know.\n\n\"Oh, I thought you knew?\"\n\n\"Knew what?\"\n\n\"They didn't tell you? I mean, I figured your girlfriend would have told you.\"\n\n\"You don't know shit about her, so leave her out of all of this.\"\n\n\"Brandon, uh, shit...,\" Harold started. He placed his hands in his pockets and stared at the ground. \"Your mom and I had a short relationship before you were born.\" Harold looked back up at Brandon. \"I'm, well, I'm actually your father.\"\n\nBrandon stood there for a moment staring at Harold before he said, \"Get the fuck out!\"\n\n\"Okay, but before I go, I just wanted to show you this.\" Harold nervously flipped through his billfold and pulled out a picture. He tried to give it to Brandon, but when he didn't accept, Harold held it up for him to see.\n\n\"Um, this is my family. Your aunt and I divorced years ago, and I have new family now. This is my son and daughter. They are four and two. I'd really like for them to meet their older brother one day, if you can find it in your heart to forgive me.\"\n\nBrandon kept running over and over in his head what his uncle had just said. 'Father'...no fucking way. Brandon just stood there staring at him, taking in his physical appearance. The height, the eye color, the face...shit, he was going to be sick. There was no way. No fucking way. He started shaking. Everything in him wanted to propel his body forward and beat the shit out of his uncle.\n\nHarold glanced up from the picture of his family, to Brandon. He seemed like at any moment he would charge at him. Like a bull, and Harold was the red cape.\n\n\"Brandon, I didn't come here to upset you. I'll leave now. But I thought someone would have told you about me. That's kinda how I found you.\"\n\nBrandon continued to stare at him. \"What?\"\n\n\"Well, some guy called your aunt and said he was a friend of yours from California, and he was asking questions about where you grew up. Your aunt told him everything, and then she called to tell me that someone had been snooping around. Well, I figured that meant you were in California, so I just looked you up.\" Harold hesitated before he said the last bit. \"Your girlfriend knew who I was, so I assumed she had told you. I'm sorry.\"\n\n\"You have three seconds and this is the last warning,\" Brandon whispered, balling his fists tightly.\n\nHarold sighed and stared over at his son. He slowly went to grab his coat. As soon as he walked out of the door, he turned back around. \"Congratulations on the baby and--\"\n\nBrandon didn't wait for him to finish that sentence before he slammed the door. He leaned up against the door and finally unclenched his fists. That took more will power than he thought he would ever have. But then again, he didn't pull the trigger on Terry, so maybe he was mentally stronger than he thought.\n\nHis father? Brandon didn't know what he felt at the moment. It was a strange mix of hate, disbelief and confusion that had his head cloudy and his stomach in knots. A part of him wanted to rip the door open and beat the shit out of Harold, but another part of him knew that wouldn't solve anything. He'd still feel exactly the same, only more pain due to bloody knuckles. No, he knew he had to let it go...no matter how hard.\n\nSienna had driven around for about an hour and still no word from Brandon. She was sure that dinner had been ruined. She had completely forgotten to turn some of the pots off. She tried calling Brandon's cell, but he wasn't answering. She started getting nervous. She figured she would have a lot of explaining to do when she got back. Shit.\n\nMichael was asleep in the back seat when Sienna pulled up to Tasha's house. Luckily, she arrived a few minutes after Darren and Tasha had returned from their date. Sienna quickly explained to them what had happened, and why she was dropping Michael off a little early. \n\nDarren held a sleeping Michael in his arms when he asked her, \"Do you want me to go over there with you? You think he's okay?\"\n\nSienna really didn't know, but she didn't want to make it worse. \"No, it's fine. Thank you,\" she said, as she got back in her car and headed home.\n\nIt was dark by the time Sienna pulled into the driveway. When Sienna entered the house, at first she couldn't see, but then she turned on the lights and noticed Brandon sitting on the couch with his head tilted back.\n\nSienna moved toward him, but stopped when he began to speak.\n\n\"Why didn't you tell me?\" Brandon asked, staring at the ceiling.\n\nSienna didn't mean for it to, but her explanation came out in a rush of words. \"Oh, Brandon, I'm so sorry. Daddy thought that he could help you by--by learning about your aunt and uncle, but we learned more than either of us imagined. When he--he told me about your father, we didn't know what to do. We didn't know if we should tell your or not. I think he had planned on telling you, but Harold showed up before he could,\" Sienna spewed out, not taking a breath, while Brandon got up and started walking towards her. \n\nShe continued. \"He thought if you knew WHY your aunt treated you that way, then it would help you. And well, we guessed Harold did it because he was just following what his wife was doing. We really didn't think--\" was all she got out before Brandon covered her mouth with his hand.\n\n\"It's okay. I'm not mad. I know if you or the Commander did this, you both thought you were doing it for my own good. I know you meant no harm, okay.\"\n\nSienna's wide frightened eyes calmed down. She stared up at him, and nodded her head with his hand still covering her mouth.\n\n\"I love you, you know that?\" Brandon asked her.\n\nShe nodded her head again, as a single tear rolled down the side of her face into her hairline as she stared up at him. He removed his hand and kissed the trail where the tear fell. \n\n\"I love you, too,\" Sienna whispered, as he bent down and kissed her lips.\n\nFor Sienna and Brandon...all was forgotten, including dinner, as he led her to their bedroom. All that mattered at this moment was that he was back home with his girl. No past demons would ruin his homecoming with his 'family'. \n\n********************* \n\n\"Hey guys!\" Tasha yelled, waving her hands. Sienna waved back and grabbed Brandon's hand as they walked into the elementary school together. \n\n\"Where's Darren?\" Brandon asked.\n\n\"Oh, he's backstage giving Michael a pep talk. He was really nervous in the car,\" Tasha said.\n\nSienna couldn't wait to see Michael in his little costume. She and Tasha had worked on it together. Michael was playing Claude in the school production of The Best Christmas Pageant Ever. He was so surprised and excited when he got the part. Tasha had invited Brandon and Sienna to see the play. This was all new territory for them. And for Darren.\n\nWhen they walked into the school, Brandon started laughing. \n\n\"What?\" Sienna asked.\n\n\"Oh my God, look at how small all this shit is,\" he said, pointing at the tables, chairs and water fountains.\n\n\"Brandon! You can't curse in here,\" Sienna chided, as she looked around to see if anyone had heard him.\n\n\"Oh, fuck, sorry,\" he said, practically squatting to sip from the fountain. Sienna just rolled her eyes.\n\nWhen they entered the auditorium, Tasha ushered them to their seats midway down. When they sat, Brandon noticed Darren quickly rushing from backstage and down the steps with a huge smile on his face.\n\n\"Little man is all set. And um, he specifically asked if you were here, Sienna,\" Darren laughed.\n\n\"I told him to watch it,\" Brandon muttered, placing his arm around Sienna. Brandon stared over at his friend. This was the happiest he'd seen Darren in a long time. He knew it was all thanks to Tasha and Michael. \n\nWhen the lights went down and the curtain went up, Sienna squeezed Brandon's hand. She leaned over and whispered, \"In five years, we'll be doing this. I'll be that neurotic mom praying everything goes okay, and you'll be the dad with the camcorder attached to your head.\"\n\nBrandon smiled back at her, \"I hope so.\"\n\nThe play was funny and sweet. But even more so than the actual play, the kids were hilarious. One kid couldn't remember his lines, and another kid kept yawning every other minute. Brandon kept snickering at this little girl who apparently was taught by someone if you want to be heard, be loud. She was screaming all of her lines. You could see the teacher on the side of the curtain trying to whisper certain things to the students, not realizing the audience could hear her. But Michael was brilliant. He had the most beautiful smile of any of the kids on the stage. And after every other line he delivered, Brandon and Darren stood up and clapped and whistled for him. \n\nTasha shook her head and leaned back while the guys stood. She taped Sienna on her shoulder. \"Get used to it, because I have a feeling this is how it's going to be when Brienna is in school,\" Tasha laughed.\n\nSienna shook her head and placed her hand over her face. When the play was over, all of them rushed over to Michael and told him how wonderful he was. And Brandon laughed even harder when Darren told him that girl that had hugged Michael when he pushed her off was the little white, freckled faced girl who had been screaming all of her lines. Sienna had to laugh too. The little girl was so cute. She looked like a little cabbage patch kid. She had come over to their group and said 'hi' to Michael.",
        "Brandon whispered to Darren, \"She's not shy at all, is she?\" Darren laughed.\n\nMichael wasn't so happy about that. He buried his head into his mother's side. \"Michael, don't be rude. Say hey,\" Tasha said, trying to conceal her own smile.\n\n\"Hey,\" Michael said with a pout. The little girl smiled her big cabbage patch smile and raced off to find her parents.\n\nAs the parents started to meet with the different teachers about how their child was performing in school, Brandon and Darren talked about football with another father, and Sienna stayed by Tasha's side, as she was introduced to different mothers. Sienna watched Brandon from a distance. She loved his body, with or without clothes, this man was fine as hell. She watched as he laughed about something Darren must have said. And seeing him semi-dressed up like this was turning her on. He was wearing a dark blue button down dress shirt, black blazer, jeans and his signature white sneakers. Sienna's eyes were completely devouring him. She couldn't help herself. She started getting wet.\n\nBrandon took a sip of his drink and scanned the room looking for Sienna. He spotted her over by a group of women. She was staring right at him, with THAT look on her face. He almost choked on his drink.\n\nSienna hadn't meant for him to catch her staring, but now that she had his attention, she couldn't take her eyes away. She noticed a small, predatory grin spread across his lips. That was all the signal she needed.\n\nShe excused herself from the group and walked out of the small auditorium. Once she was in the hallway, she waited. Almost a minute later, Brandon exited. She grabbed his hand and led him down the hallway. They went inside a classroom, and Sienna searched for a closet or something. Finally, she saw another door. She pulled him toward it, and bingo...it was a large supply closet. She turned around and immediately attacked him.\n\nBrandon hit the wall as Sienna grabbed him and began pulling his jacket off and kissing him. Damn, she was bossy as hell now that she was pregnant, but he kinda liked it. He never thought he'd like being pushed around by a woman, but it was really starting to turn him on. He felt her unbuckle his belt and reach into his pants.\n\nSienna watched as Brandon closed his eyes. She was slowly massaging his dick, and she couldn't wait to have it inside of her.\n\n\"Damn, Sienna,\" Brandon whispered, with his head leaning back against the wall. \n\nIt only took a second for him to get completely hard. Sienna reached down and started to work her panties down her legs. Brandon reached down and helped her pull them off.\n\n\"Turn around,\" he commanded in his sexy Boston accent. When she did, he lifted the back of her dress and rubbed her plump rear-end. Brandon placed his hand underneath her and found her slick entrance. Her pussy was already soaked. He inserted two fingers and smiled as he heard her moan. She started to rock herself back onto his hand. He reached around to her chest and snuck a hand down the front of the dress. Her nipples were rock hard. He lightly squeezed on them, and she moaned again.\n\nSienna couldn't think straight. He felt so damn good. She instantly pouted when he removed his hand from inside of her. But then she quickly got over it when she felt the tip of his solid erection slowly enter her pussy. Sienna couldn't help herself, her moans turned into loud pants.\n\n\"Sshh, baby,\" Brandon whispered, as he slowly pulled in and out of her tight love nest. He softly bit her neck and started to pump harder and faster. He knew that was the way to make her come. He slowly slid his other hand from her chest to her stomach, He wanted to make sure she wasn't pressing herself too hard into the counter, and hurting the baby.\n\nSienna couldn't control herself. Brandon felt so damn good. She started to feel her pussy quivering and her head and toes tingle. She started coming.\n\n\"Ohh! Brandon, Oh my God, I can't--,\" she screamed out before Brandon covered her mouth and gently laughed in her ear. Sienna pushed her ass backwards toward Brandon, and he moaned. She let him pound harder and harder into her until he came and leaned against her back. Before Brandon pulled out of her, he started to laugh, and then Sienna joined in with him. Here they were fucking in an elementary classroom. They were pitiful. \n\nWhen Brandon and Sienna made it back to the main auditorium, most of the guests and faculty had started filing out. They found Tasha and Darren. Tasha was letting Michael spend the night with a friend of hers, whose son was having a birthday sleepover, packed full of video games and candy.\n\nWith Michael gone, the four of them decided to have a night out on the town. Brandon and Sienna followed Tasha and Darren back to her house and then they hopped in Brandon's Jeep. Tasha and Sienna sat in the back, and Brandon and Darren in the front so they could shit talk each other about everything under the sun. \n\n\"Are you kidding? Pierce had Kobe running like a little bitch,\" Brandon taunted.\n\n\"Whatever, next year, Lakers are gonna take it home. Celtics can kiss my ass,\" Darren replied.\n\n\"As long as they bring that title back to Bean Town, I don't care who's ass they kiss. Fuck Kobe and fuck the Lakers...they can kiss my white, Irish ass.\"\n\n\"The Celtics and the Lakers suck, so there. Now turn the music on,\" Tasha stated as Sienna laughed.\n\n\"Oh, remember this one?\" Darren said, as he hooked his iPod to the stereo and began playing 'Juicy' by Notorious BIG. Brandon and Darren immediately went into rapping the song, switching off every other verse. Tasha even joined in on the chorus. Sienna felt a little embarrassed that she didn't really know the song. Rap wasn't something she was familiar with.\n\n\"Damn, I hadn't heard that in years,\" Brandon admitted. \"Fuck, how old were we when that came out?\"\n\nDarren thought about it. \"I think I was just going into high school, so fourteen or fifteen, right?\"\n\n\"Yeah, that sounds about right,\" Brandon said, reflecting on where he was at that age. \n\n\"Hey, Sienna, did you know that song?\" Darren asked, turning around to pick at her.\n\nSienna smacked her lips at him. \"I mean, I kinda heard it before, but no, I didn't know it.\"\n\nDarren burst out laughing. \"I think that's because you were like four or five when that came out.\"\n\nBrandon started laughing, but then he stopped Darren. \"Hey man, don't laugh at her. She can't help that. Baby, what do you want us to put on for you? Jonas Brothers or Chris Brown, something like that?\"\n\n\"Ah! Fuck you!\" Sienna yelled, as she hit Brandon in the back of the head.\n\nBrandon, Tasha and Darren burst out laughing. \"No, I don't have that, but Sienna, I might have the soundtrack to High School Musical,\" Darren said, grabbing his sides from laughing so hard.\n\n\"Okay, forget all of ya'll,\" Sienna said, trying to hide her own laughter. \"Besides, that only makes YOU look bad, cradle robber,\" she said, smacking the back of Brandon's head again.\n\n\"Speaking of cradle robbers, did I tell you what Michael said?\" Darren asked.\n\n\"No,\" Brandon answered.\n\n\"I told him that Sienna was going to have a girl and her name is Brienna, and he said that would be his girl.\"\n\nSienna and Tasha laughed. Michael really was just adorable.\n\nBut Brandon didn't laugh. \"Hmm, well tell him if he values all of his little digits, he'll wipe that thought clean from his head.\"\n\n\"BT, don't threaten my baby!\" Tasha laughed. \n\n\"All I'm saying is my daughter won't be allowed to date until she's thirty, so he will have a long way to wait,\" Brandon said, more seriously than he wanted to admit. He just couldn't find that as amusing as the others did. \n\n\"So where are we going, exactly,\" Sienna asked.\n\n\"We wanted to do something fun tonight, so we're going to Greene Bowling Alley and Arcade,\" Darren answered.\n\n\"Isn't that place for kids or something,\" Sienna said.\n\n\"During the daytime, but at night, they kick anyone under twenty-one out.\"\n\n\"Oh, great. So keep rubbing it in my face,\" Sienna teased.\n\n\"Baby, don't worry. We know the guy who owns it. He lets anyone in the military in and we get to bowl for free. You'll be fine,\" Brandon assured her, as he peered into the rearview mirror and flexed his eyebrows at her. Sienna laughed and blew him a kiss. \n\nWhen they got to the bowling alley, Brandon got them a table near the arcade. Darren and Brandon were both about to take off to get their lane when Tasha stopped them.\n\nTasha hated busting their balls, but men were too funny sometimes. \"Okay, I hate to bring this up...but you know Sienna can't bowl, right?\"\n\nBrandon and Darren stared at her, then at Sienna, who was trying to hide her smile.\n\n\"Why not?\" Darren asked, while Brandon shook his head. He got it now and he felt like an idiot.\n\n\"Because she doesn't need to carry around that heavy ass bowling ball AND she could slip on the lanes,\" Tasha explained.\n\n\"Oh,\" Darren said. \"Well, damn. I wish I you would have said something. We can go somewhere else.\"\n\n\"No, I didn't want to ruin your fun. I'll watch. I'm fine.\"\n\n\"Well, since you two aren't bowling, I'm heading to the arcade. Mind watching the action in there?\" Brandon said, bending down to kiss Sienna.\n\nBrandon and Darren made a bee line for the air hockey table, while Tasha and Sienna followed behind.\n\nTasha was laughing so hard, \"You two are a mess. Grown ass men playing a kid's game.\"\n\n\"You ready, Celtic waterboy?\" Darren asked, stretching his elbow.\n\n\"Pussies first,\" Brandon said, as he slid the puck to Darren.\n\nDarren placed the puck at the tip of his handle and slammed it to the other side of the air hockey table. Brandon blocked and shot it back toward Darren's goal.\n\nSienna just shook her head watching the two of them go back and forth. And people had the nerve to question her age. Both Darren and Brandon looked so serious as they smashed the poor puck to the opposite side. Brandon won the first game, but Darren asked for a re-match because he was distracted. While they argued back and forth, Sienna tapped Tasha's shoulder.\n\n\"I have to run to the restroom.\"\n\n\"Want me to go with you?\" Tasha asked.\n\n\"No, it's okay. I'll be right back,\" Sienna said, as she quickly wobbled off to the women's bathroom. As she made her way down the narrow dimly lit hallway, she thought of how nice it was that the four of them were hanging out. She wished Lori could join them. But Lori would never want to be the fifth wheel. Sienna hoped that Lori would find some nice guy at school...someone she wouldn't cheat on.\n\nWhen Sienna was done, she washed her hands and opened the bathroom door. As she was exiting, she crashed into a tall figure, who caught her in his arms before she would have fallen.\n\n\"Damn, sorry little lady,\" the voice said, and Sienna froze. She knew that voice. As a matter of fact, she could never forget that voice, even if she wanted to. She slowly glanced up to find Terry hovering over her. When he saw her face, he immediately let go of her as if she burned his hands.\n\nSienna didn't know what to do. Her voice didn't seem to work. Neither did her arms or legs. Her legs felt like jello, and she was a deer in headlights. She noticed his scarred blue eyes were quickly scanning the area. No doubt looking for Brandon.\n\n\"Um, hey Sienna,\" Terry said, turning back to her. Sienna still couldn't speak.\n\n\"I uh, um...shit. Is BT here?\" he nervously asked.\n\nSienna just nodded her head.\n\n\"Fuck,\" Terry said, grabbing the back of his neck. \"I'll go. Alright, um, just don't tell him I'm here, okay?\"\n\nSienna finally found her voice. \"I won't,\" she managed to squeak out.\n\n\"Thanks,\" Terry said, as he quickly left the hallway.\n\nSienna stood there a moment. She had wondered what she would do if she ever saw Terry again. Well, now she knew. She'd stand there in complete and total shock. But she knew she had to calm her nerves before Brandon saw her. He would definitely know there was something wrong, and she wouldn't want to lie to him. \n\nWhen she walked back out into the arcade, she scanned the room looking for Terry. She had hoped that he left immediately, but unfortunately their table was by the exit. Brandon, Darren and Tasha were all sitting at the table, laughing.\n\nWhen she approached, Brandon slid out to let her in. Sienna knew that Terry was probably still in the building. She had to get Brandon away from the exit.\n\n\"Hey BT, can we play a game?\" she asked.\n\n\"Of course, baby. But don't cry when I beat you,\" Brandon said, winking at her. Sienna smiled and grabbed his hand. She led him over to the main arcade floor.\n\nThey scanned a few of the games until Brandon stopped in front of the race car video games.\n\n\"Come on, baby. Be my driver,\" Brandon said, as he pulled Sienna toward the race car seat and sat down. Sienna giggled as she parked herself on his lap.\n\n\"Brandon, this game's a stick shift, I can't drive those,\" Sienna said concerned, turning around to look at him.\n\n\"Baby, I doubt this game actually moves, so I think you'll be okay,\" he laughed at her. \"Okay, now just grab the stick.\"\n\nSienna turned back around with pure determination on her face as she reached for the gear shift.\n\n\"Oh, not that stick, baby,\" Brandon teased, as he nibbled her ear lobe.\n\nSienna swatted his leg, \"Stop being dirty, your daughter can hear you,\" she laughed.\n\nBrandon placed both of his hands on Sienna's stomach. \"Close your ears, Brienna. I have plenty more where that one came from.\" Sienna laughed and scooted into his lap even further. Brandon moaned.\n\n\"Okay, now choose a car,\" he said, getting his mind back in the game.\n\n\"Hmm...what about this one?\" Sienna asked, pointing at the Blue Escalade.\n\n\"Hell no. If you want to go fast, you need something red and low to the ground,\" Brandon said, turning the wheel to highlight a red Lamborghini. Bingo.\n\nAs soon as they started the game, Sienna was crashing the poor car all over the place.\n\n\"Damn, watch out, Sienna. Don't hit pedestrians. You know, the objects shaped like people,\" Brandon said, trying to help her guide the wheel while shifting the gears.\n\nThis was much more fun than Sienna had anticipated. She had to admit she was horrible, but it was good practice for learning how to drive Brandon's Jeep.\n\n\"That's it, baby, just keep the car on the--,\" was the last thing she heard him say. She waited a few more seconds for the rest of his directions, but they never came.\n\n\"Brandon, which way do I go?\" she asked, turning her head to the side to wait for his answer.\n\nBut he was staring intently out of the large window to the left. She could feel his breathing change and his muscles tense. Even his jaw line was tense. She followed his gaze to the window and froze. Shit! Less than twenty feet from them was Terry. He was walking toward his car, talking on his cell phone.\n\nSienna could feel Brandon's body vibrating. She quickly removed herself from his lap. When he stood, he started walking toward the door when Sienna grabbed his arm. \"Brandon, don't.\"\n\n\"It's alright, baby. I'm just going out there to shove his face into the fucking pavement,\" Brandon said, as he pulled away from her.\n\nSienna grabbed Brandon again and turned him to face her. \"Baby,\" she said, as she reached up and grabbed his face. He looked down at her. \"Let it go, Brandon. I'm okay. We're looking forward, right? Not backwards,\" Sienna whispered to him as she kissed his lips.\n\nBrandon continued to stare down at her, and then he glanced back out the window. He seriously wanted to go out there and turn that parking lot upside down kicking Terry's ass. As long as that motherfucker breathed, Brandon wanted to beat the shit out of him. But...he knew Sienna was right. It took all the energy he had to watch that fucker pull out of the parking lot. To let it go...like his issue with Harold. \n\nBrandon looked back at Sienna and bent down to kiss her. He loved her so much. How she could forgive someone like Terry for what he did was beyond him. But that's also why he loved her, and why he knew she would make a wonderful mother. He finally relaxed his body and walked back over to the game. He didn't really feel like playing now, but he didn't want to ruin the night for everyone. They still had six seconds to add some more money to continue the game. Brandon placed two more quarters in the slot.\n\n\"Go ahead, baby. I'll watch. But just know that your driving skills aren't giving me any confidence in you tackling my ride,\" he lightly joked.\n\nSienna smiled up at him and got back into the driver's seat. \"I'm about to kick these other drivers' asses and make you proud, baby.\" Brandon smiled down at her and leaned against the game as Sienna played.\n\n*********************\n\nLater that night, Brandon and Sienna stayed up playing cards. Brandon kept cheating, and Sienna couldn't stop laughing at him. Every time she turned her back, he would pick up a new card, and put down a bad one.\n\n\"Will you stop it! I can't believe you would cheat your pregnant girlfriend. What kind of man are you?\" she laughed, while pulling his cards away from him. \"New deal!\"\n\nBrandon laughed and accepted her new cards. As she was dealing the new hand, Brandon stared at her. How much had changed in his life? Ten years ago, he was done with life. He figured he'd stay miserable, and never really amount to anything, but that was his life. Fucked up from birth, and nothing up until he was eighteen made a difference. But it was a sign. A fucking sign on the side of a random bus that changed his life. Maybe it was fate, maybe it wasn't, but whatever it was, it brought him to where he was now. He had a father in Commander Branson. He had a love that most people don't find in a lifetime with Sienna. He had a best friend in Darren, someone he knew would always be in his corner. And he now had a part of him that would be left on this earth, even after he left it. Someone that would remember him and hopefully love him the rest of his life. Brienna. At that moment, Brandon felt like he could physically feel the beast inside of him calming. Curling up and going to sleep. \n\nHe thought about Harold and Terry. He sighed. He knew he had to swallow it. Let it go. Revenge against them was not the most important thing anymore. It never was. His family is the most important thing, and his actions could take him away from them. And that would be the ultimate punishment. So no matter how bad he wanted those men to hurt...he knew tonight, on this unusual Friday night, he was officially letting go. \n\n\"Okay, now no cheating!\" Sienna laughed, as she placed down her first card. Brandon smiled at her. \"Alright. I'll just have to beat you fair and square. Shouldn't be too hard. We good?\"\n\nSienna was feeling devilish tonight. \"Baby, we're good as long as Justin Timberlake doesn't come sweep me off my feet,\" she giggled. \n\n\"Fuck him,\" Brandon muttered and placed a card down. \n\n\"You giving me permission?\" Sienna said, smirking at him. \n\n\"Fuck you,\" Brandon said, looking up and laughing at her. Okay, maybe the beast wasn't completely asleep, he thought, as he launched for her and pulled her into his lap for a deep, long kiss.\n\n***********************\n\nAs the Christmas season drew closer and closer Sienna was finally able to relax. Exams were now over and she would have a three week vacation before the new semester. A much needed three week break. But it was now Christmas Eve and she and Brandon were hosting their first ever Christmas Eve party as a couple. Usually her father had this honor, but of all the days, he was needed on base for an urgent matter. So, they decided to move it to their place.\n\nSienna was thinking about her dad when she felt herself being lifted from the chair she had been standing on. \"What the--?\" she said, as she felt Brandon's hands wrap around her.\n\n\"What the fuck were you doing standing on that chair?!\" he asked, heatedly.",
        "Sienna pushed his arms away and turned around to glare at him. \"BT I was just hanging these decorations.\"\n\n\"Well let me do that, short stack, before you fall,\" he said, pulling the box of Christmas decorations out of her hands and hanging them across the door. \"And besides, we have enough up, jeez, this place looks like it was tagged with red and green graffiti.\"\n\n\"I know, but since people are coming over tonight, I wanted to add more to what we already have. Make it look festive.\"\n\n\"Or tacky.\"\n\n\"Festive!\" Sienna said, pulling the box away from him. They only had a few more minutes before guests started to show. She was so excited to see everyone together again. She and Lori had been spending a lot of time together since Lori had come back for Christmas break. She hated being away from her for so long. Sure, they talked almost every day on the phone, but she could tell that Lori was miserable, and that she really didn't want to be at Clark-Atlanta any longer. Sienna knew they needed to talk about that when she arrived tonight. \n\nSienna rushed to the bathroom to fix her hair just as the doorbell rang. When she walked out, she noticed Brandon standing in front of the door, and Ian was on the other side of it. It looked as though Brandon wasn't making much of an effort to move out of the way so Ian could enter, so Sienna walked over to them and stepped in front of Brandon. \n\n\"Hey, Ian! I'm glad you were able to make it,\" Sienna said, reaching out to hug him. Ian tentatively accepted her hug, but his eyes were wide and on Brandon the whole time.\n\n\"Um, sure, thanks. I wouldn't miss it. Hi Brandon.\"\n\n\"Ian.\"\n\nSienna scooted backwards, pushing Brandon out of the way as Ian entered. When he walked in, he had to smile at all of the decorations. He figured this wasn't Brandon's doing, but pretty much all Sienna. He turned and grinned at her. She looked beautiful.\n\n\"Do you like?\" Sienna asked, beaming ear to ear. Ian nodded. He really did. Along with Thanksgiving, his family also didn't really believe in celebrating Christmas. But this was pretty cool. Sappy music, but it did make him feel all warm inside. \"Nice tree,\" he said to Brandon.\n\n\"Thanks,\" Brandon replied back flatly.\n\nIan laughed on the inside. One day he would get Brandon to like him. Ian thought of himself as a pretty open-minded, nice guy. He'd win him over eventually.\n\nA few minutes later, more and more people started to pile in the house for the party. Lori ran in and grabbed Sienna and the two fell backwards onto the couch.\n\n\"Hey, hey! Careful, my daughter's in there, Lori...fucking hurricane,\" Brandon muttered as he walked over to give her a hug.\n\n\"Sorry, sorry! Just happy to be away from the parental units. They are driving me crazy,\" Lori laughed. She reached down to rub Sienna's stomach. \"Hi there, little Brie. I'm your auntie slash godmother, Lori. I'll be meeting you really soon.\"\n\nJohn eventually arrived, followed closely by Darren and Tasha, with Michael passed out in Darren's arms.\n\n\"Hey, Sienna. Can I put little man in the bedroom?\" Darren asked.\n\n\"Of course,\" Sienna said, as she led Darren to the back. \"He's so cute,\" she whispered, as Darren laid him on the bed.\n\n\"Yeah,\" Darren said, as he quickly kissed the top of Michael's head. The two walked out and closed the door. Sienna always knew that Darren would be a great father. Tasha was lucky. And then Sienna thought of her own man. She was DEFINITELY lucky. She started grinning. She couldn't help it, when she thought of Brandon, she had to smile.\n\nWhen she made it back down to the living room, she sat down in between Lori and Tasha on the couch.\n\n\"So, how's life?\" Sienna asked Lori.\n\n\"I need a man,\" Lori blurted out. Sienna giggled and hugged her friend. She had missed her so much. Tasha laughed and shook her head. \"Honey, they aren't all what they are cracked up to be...unless you get a good one.\" Tasha turned to look toward the kitchen where Brandon and Darren stood talking. \"Trust me, I'm thirty-six, and I've been looking since I was sixteen. I JUST now found one....even if he is younger than me. Even my own son's father was no good. I'd never tell Michael that, but he wasn't. Besides, there's no rush, right? You're young, you'll find the right guy.\"\n\n\"I know, but I'm ready to have something real, you know. Like how you and Sienna have. Someone who loves me. Not just wants to fuck me. Excuse my language,\" Lori said, glancing around making sure Michael wasn't in hearing distance.\n\nSienna hugged her friend even tighter. Deep down, Lori was an amazing woman. She was kind, smart and a loyal friend. But she let her need for constant attention overshadow her better assets. And as beautiful as she was, she tended to throw herself at men...which just cheapened her in their eyes. Sienna had wanted to tell her that for years, but Lori's feelings were easily hurt, so Sienna had kept that analysis to herself. \n\n\"Well, let's see. What about John?\" Sienna asked. All three of them turned their head in John's direction. He was over in the corner sipping on a Corona. Sienna had never really paid much attention, seeing as though her world revolved around Brandon Temple, but noticing John now, she realized he was a very attractive man. He had dark dirty blonde hair and crystal blue eyes. He had a small scar that was visible along the left side of his jaw line. The scar, along with his quiet demeanor and icy blue eyes made him appear mysterious. \n\nAll three of them were quietly observing him, as if noticing him for the first time. He glanced over at them, and they quickly turned away.\n\n\"Damn,\" Lori laughed. \"How the hell did I miss his fine ass during Thanksgiving?\"\n\n\"Probably because you were so far up Chris's butt,\" Sienna said.\n\n\"You're right. Oh my God, he's hot. What do you know about him?\"\n\n\"I don't know anything. Tasha?\" Sienna asked.\n\nTasha shook her head. John had hung out with them a few times, but she didn't know anything about him. And she was so preoccupied with Darren, Sienna and her son most of the time, that she hadn't really noticed anything about him. He slid under the radar.\n\nBrandon walked over to the couch and leaned over Sienna. He gently pulled her head back by her hair and kissed her.\n\n\"Mmm...thank you, BT,\" Sienna said, licking her lips.\n\n\"My pleasure, baby. So, you three look like trouble sitting here all quiet. What's up?\" Brandon asked, kneeling by them.\n\nLori slapped Brandon's arm. \"Hey, what can you tell us about John?\"\n\n\"Why do you want to know?\" Brandon slowly asked, looking skeptically at Lori.\n\n\"Well, do you think he and Lori would be a good match?\" Sienna asked.\n\n\"Oh, hell no! Lori, stay away from my friend,\" Brandon said, about to get up.\n\nSienna pulled him back. \"Brandon! Seriously, what's he like?\"\n\nBrandon sighed. \"I don't know, he's quiet all of the time. All I know is that he's from Maine, he's twenty-two and he's definitely one of the better SEALs in our group.\"\n\n\"What kind of music does he like? Does he have a girlfriend?\" Lori asked.\n\n\"I don't know, sheesh, leave him alone,\" Brandon muttered, as he walked off.\n\n\"Fuck, am I that bad?\" Lori asked, turning to look at Sienna. Sienna knew that Lori was hurt by Brandon's reaction. She didn't really know what to tell her.\n\n\"No, you're not that bad. Why don't you go over there and talk to him. Find out who he is,\" Sienna suggested.\n\n\"You're right. I'm about to blow his fucking mind,\" Lori said, as she got up and pushed her breasts together to make sure just enough cleavage was showing.\n\n\"That's not what I mean,\" Sienna whispered, but Lori was already halfway across the floor. Sienna just shook her head while Tasha laughed at the situation.\n\nLori sauntered over to John, swinging her hips a little more than normal. She leaned against the wall, less than a foot away from John. She knew when he looked down at her, that he'd have a straight shot down her shirt.\n\n\"Hi, I'm Lori,\" she whispered in a seductive voice while extending her hand to him.\n\nJohn stared down at her. \"Yeah, I know. I'm John,\" he said, offering his handshake back.\n\n\"Yeah, I know. I always liked that name. John.\"\n\nHe smiled at her then turned to survey the room again while slowly sipping his drink.\n\nLori looked over to Sienna. Sienna rolled her hand as if to tell her to 'keep going'. Lori turned back to John, and stared up at the scar. She wanted to lick it from top to bottom. She was starting to get wet already, just staring at his profile. Down girl!\n\n\"So, do you have a girlfriend?\" Lori said, not really waiting to beat around the bush anymore. She believed in being blunt.\n\nJohn chuckled and shook his head. \"Nope.\"\n\n\"Are you really as quiet as they say?\"\n\n\"No.\"\n\nLori laughed. \"Do you always answer every question with one word?\"\n\nJohn thought for a moment, then said, \"No.\" \n\nHe had Lori completely shaken. None of her cute little tricks were working. If she had something in her hand, she would drop it and give him a nice view of her ass, but something told her he probably wouldn't even look. This was going to be harder than she thought.\n\nShe was thinking of her next move when John leaned down to the side of her face. \"Maybe you're just not asking the right questions, love\" he whispered in her ear. \"When you think of them, come find me. I'll be waiting.\"\n\nLori immediately felt a rush of heat to her lower half. For once, she really didn't know what the hell to say. She didn't even have a cute, provocative comeback. Her mind went blank and her eyes closed as she felt his warm breath on the side of her cheek. Suddenly the room was scorching. She felt as though she were burning up, just from his words. Damn!!\n\nJohn looked up and saw Darren waving at him to come join their card game. He raised up and winked at Lori before he left her standing against the wall...legs shaking.\n\nLori slowly walked over to Sienna and Tasha. She sat down on the couch with a confused look on her face. \"So?\" Sienna asked, trying to decipher her friend's dazed look.\n\nLori sat there a moment before she said, \"Um, I think I'm in love.\"\n\nBoth Tasha and Sienna laughed. \"Oh my goodness! What the hell did he do to you in forty-five seconds?\" Sienna questioned.\n\n\"I honestly don't know, but he had some strange power over me. Oh, this is going to be so much fun,\" Lori said, finally shaking herself from her stupor.\n\n\"Hey, gentlemen...mind if I join?\" Ian asked, staring around the poker table. \n\n\"Sure, pull a chair up,\" Brandon said, glaring at Ian. He liked making that kid squirm. But he had to admit that Ian was okay. Damn sure better than that bitch Chris, who had the nerve to show up today.\n\n\"So John, we saw you talking to Lori. I'd stay away from that one. She has fangs,\" Darren said, as he dealt out a hand around the table.\n\nJohn chuckled and shoved a chip into his mouth. \"She seems nice enough.\"\n\nBrandon shook his head and shuffled his cards, \"Well, from what I've gathered from Sienna, her fangs aren't located in her mouth.\" Darren burst out laughing. Ian tried not to laugh, but he couldn't help it.\n\nJohn nodded and laughed quietly. \"Duly noted.\" But he knew how to handle a girl like Lori. Life had sent him on some strange paths. He knew before he could seriously start a relationship, he'd have to clear up a few things, but hell...who knew what path he was about to start now.\n\n\"So BT, I was thinking...having a girl is going to be a lot of trouble,\" Darren stated.\n\n\"Yeah,\" Brandon said, staring at his cards.\n\n\"I mean, she'll probably look just like Sienna. Just a taller version of her mother.\"\n\nBrandon stared at Darren, \"Don't remind me.\"\n\n\"She'll probably even have Sienna's spirit...I mean, she went after you wholeheartedly,\" Darren grinned, loving the uncomfortable look on Brandon's face. Payback is a bitch!\n\n\"You know what Darren, shut the fuck up.\"\n\n\"I'm just saying, she's gonna be hot and you are going to have a time keeping her under wraps.\"\n\n\"Jesus, man, you're killing me! Please, shut the fuck up! I'm twenty-eight, it's too early for the heart attacks, okay,\" Brandon said, glaring at Darren, who was laughing his ass off. Fucker.\n\nAfter the card game, the guys piled out of the house to play touch football before the sun went down. Michael had finally woken up and was in the front yard, tossing the ball back and forth with Darren. \n\nTasha, Sienna and Lori followed them out and sat down on the steps. Ian came out with his sound equipment. \n\n\"Hey Brandon, mind if I plug this into your sound system and play some music?\" Ian asked.\n\n\"Sure, whatever. Just don't play any of that whiny emo punk shit,\" Brandon said.\n\nIan laughed. His first song would be just for Brandon, he thought as he smiled to himself. He plugged his iPod into the massive stereo system and blasted System of a Down's 'Toxicity'.\n\nBoth Brandon and Darren looked toward the loud racket with a 'what the fuck' expression. Ian just shrugged and yelled out, \"It's not Emo!\"\n\n\"Little prick,\" Brandon muttered, but then smiled. The kid did have balls at least.\n\n\"Okay, Michael's on my team, and we're about to whip your as\u2014butt!\" Darren yelled across the field at Brandon and John.\n\n\"Bring it, little man!\" Brandon yelled back towards Michael. \n\nDarren tossed the ball to Michael, and his little short legs took off running with absolute determination on his face. Brandon and John pretended to run as hard as they could after him, but both coincidentally fell right before they reached him, letting Michael make it into the makeshift end zone. \n\n\"Yay, that's my baby!\" Tasha yelled from the front porch. Michael turned and did a little dance. He then ran over to his mom and gave her a big hug. Then he turned to Sienna and hugged her. Sienna laughed. He was so cute! \n\n\"Hey, watch those hands, Mikey. That's MY girl. Don't forget, I know where you live!\" Brandon joked. Michael laughed and yelled through his snaggle-toothed mouth, \"If you could score a touchdown, then maybe YOU could get a hug!\" Sienna, Lori and Tasha cracked up.\n\nThat shut Brandon up. He just shook his head.\n\n\"Well this sucks. We need a fourth,\" Darren said, looking between the three of them.\n\n\"How about that Ian kid,\" John suggested. Both Darren and Brandon laughed. \n\n\"Nah, he's fine right there on the steps. Wouldn't want to break any of his fragile bones,\" Brandon said.\n\n\"What about Chris?\" Darren asked, staring back at the steps where Chris had just sat down beside Sienna.\n\n\"Are you kidding? I'd kill that little bitch,\" Brandon said, glaring over at Chris.\n\n\"Exactly,\" Darren said, smiling at Brandon.\n\nA smile broke out across Brandon's face too. \n\n\"Hey Chris, we need a fourth man to be on John's team. Wanna play?\" Darren slyly asked.\n\nChris looked over at the three men. Two who were smirking at him, the other looked like he felt sorry for him. 'Shit,' Chris thought. If he backed out, he'd look weak, but if he accepted, he was pretty sure that he'd be hurt.\n\n\"You don't have to go, you know,\" Sienna whispered to him, while she was staring out at Brandon. Damn, even she knew what was about to happen.\n\nChris sighed, \"Actually, I do.\" He got up and headed across the yard.\n\n\"Oh, this is going to be funny as hell,\" Lori said. Sienna playfully smacked her shoulder. \n\nWhen Chris reached the small group, Brandon was glaring at him the whole time while Darren was explaining the rules. Chris looked back at the steps toward Sienna. She looked nervous for him.\n\n\"Okay, and last rule...it's touch football, but our definition of 'touch' is open for interpretation, if you know what I mean. You game?\" Darren asked Chris.\n\n\"Yeah, I'm good,\" Chris said, taking a deep breath. Darren and John turned to leave when Brandon whispered to Chris. \"You better hope you don't get the ball,\" Brandon said as he walked off.\n\nShit!\n\nThe first pass was from Darren to Brandon. Brandon took off down the field and was tackled by John just before he made it into the end zone. The next pass was an easy touchdown from Darren to Brandon. Chris wanted to tackle him, but he was a little afraid. \n\nThe next play, John tossed Chris the ball. Fuck! He could see Brandon down the yard shifting his position to tackle him. 'Might as well get it over with,' Chris thought as he took off full speed.\n\nDarren started moving a few yards behind Brandon. If for some reason Brandon missed him, Darren was going to level his weasely ass. \n\nSienna cringed. It was like watching two freight trains about to collide. No matter how this ended, it wouldn't end pretty.\n\nChris saw a small opening and cut to the right sharply, but then he realized his mistake. Brandon was anticipating that. Chris braced himself as Brandon crashed into him. Chris felt all the air escape his lungs while his feet seemed to be above his head. He felt himself hit the ground, and any air that he had left in his lungs was now officially gone. And everything was extremely quiet. No one was talking or moving. Or at least he couldn't hear it. Then slowly, a low ringing started to penetrate his eardrums. Fuck.\n\nBrandon stared down at Chris. He reached down and pulled the ball out of his hands and tossed it to Darren. John walked over and tried to help Chris up, but Chris told him to wait just a second.\n\n\"Does anything feel broken?\" John asked. \"How many fingers am I holding up?\"\n\nChris rolled over onto his side and spit out some blood. He slowly got up, but wobbled for a moment and John caught him.\n\nJohn helped Chris to the steps, and Sienna grabbed him around the waist. She turned and shook her head in Brandon's direction, and then helped Chris into the house. Lori had to hold in a laugh, but that shit was funny. BT cracked her up. \n\nSienna led Chris to the bathroom. She wet a towel, and wiped the blood from his mouth. He stared down at her face, watching her carefully work over his wounds. Why wasn't she his girl?\n\n\"Are you okay?\" Sienna asked, wetting the towel again.\n\n\"When the ringing in my ears stops, I think I'll be okay.\"\n\nSienna giggled. \"You shouldn't have gone out there, Chris. You knew he was going to do that. He still hasn't forgiven you.\"\n\n\"Have you?\"\n\nSienna looked up at him. \"Yes, I think I have. In some weird way, I realize everything you said or did, was because you care about me. Even though it was sometimes hurtful.\"\n\n\"Yes, I'm sorry about revealing your pregnancy, before you did. I realize it kinda started your breakup with Brandon. Not that I object to you not being with him. But I didn't want you to end up in the hospital, that's the last thing I would ever want,\" Chris said. His head was starting to hurt now. Must have been a delayed reaction. He prayed he didn't have a concussion.\n\n\"I know, but that's not what I'm talking about. It's what you said to Brandon in the hospital. Lori told me. You have no idea how that hurt Brandon. He's a good guy. He has his problems, but you saying that hurt him more than you can know. He would never want anything to happen to me or Brienna, and for you to blame him...that was awful, Chris,\" Sienna stated, shaking her head. She held the towel underneath the faucet again, and brought the wet towel to Chris's face.\n\n\"I know. And thank you for not hating me,\" Chris said, as he placed his hand on top of hers.\n\nSienna smiled up at him. \"You're welcome.\"\n\n\"You look really beautiful tonight. It was really nice seeing you. I mean, I know I just saw you at Thanksgiving, but to see you again tonight, has been really nice.\"\n\nSienna didn't say anything. She didn't want to encourage him, but she knew from the way he was looking at her right now, that he didn't need any encouraging. He was about to say it anyway.\n\n\"Sienna, I know that you're with Brandon. But I just wanted to let you know that if you and he don't work out, I mean, I just want you to know that I'm here for you. And I always will be. And if you'd ever want me to be more than friends, I would. In a heartbeat. I mean, I would raise his kid as my own, you know. I would do that for you.\"",
        "Sienna sighed. She hated hurting his feelings. She really had appreciated him being there for her when her world was crumbling because of her crazy feelings for Brandon. But, she appreciated his friendship only. And she wished Chris would feel the same way too. \"Chris, I, I love Brandon. And I probably always will. He's my soul-mate. Even if we weren't together, I'd still want him. The kind of love I feel with Brandon...I swear, you only get that once. Once you've had it, nothing else can come close. And you deserve to be loved like that.\"\n\n\"I know, but I think over time, you would learn to love me. Maybe not like you do him, but I know I would love you enough for the both of us. I'm a pretty good guy, you know. Even despite my behavior this summer.\"\n\n\"I know that, Chris, and thank you for being there for me when I needed you. Even when you saw me fall apart, you never seemed to judge me, and I'm grateful for that. I really am,\" Sienna stated, as she reached up to hug him.\n\nChris closed his eyes to remember this feeling. If he had to get tackled every day to get a hug like this, he'd gladly suffer through it.\n\nThe door suddenly flew open. \"Hey Sienna, I\u2014,\" Brandon started, until he saw Sienna quickly pull away from Chris. Brandon shifted his eyes back and forth between the two, until they narrowed on Chris. This kid had a fucking death wish.\n\nChris thanked Sienna again and quickly made an exit, squeezing past a seething Brandon. After Chris was gone, Brandon leaned against the door frame, and stared down at Sienna.\n\n\"Well, that looked cozy,\" Brandon said sarcastically.\n\n\"I was just helping him since you clobbered him out there,\" Sienna said, placing her hands on her hips.\n\n\"Well, that little fucker deserved it,\" Brandon said, stepping into the bathroom and placing his arms around her.\n\n\"You do know that you were being an asshole, right?\"\n\n\"Yep.\"\n\n\"Good thing for you I like assholes,\" Sienna giggled, reaching up to kiss him.\n\nBrandon kissed her back. \"I don't know about that, but I do know I like your asshole.\" Sienna playfully slapped him. \"Don't be gross!\"\n\n\"I'm not. Want me to show you how much I like yours?\" Brandon asked, as he kicked the bathroom door shut.\n\nChris walked by the bathroom and heard Sienna giggling and Brandon speaking in a low voice. It didn't take too much to imagine what was going to happen behind those doors. Chris placed his hands behind his head and exhaled. He slowly walked away from the door toward the living room, further and further away from Sienna.\n\nIan didn't want to wear out his welcome, so he started packing up his sound equipment. This had been a really entertaining evening. He had enjoyed talking to Sienna and Brandon's friends. His family didn't believe it the commercialization of Christmas...or organized religion, so on Christmas Day, he'd wake up, watch some TV and probably go check out a movie with a friend. But now, he'd actually have a few people he'd like to give gifts to. He was sure his parents would think it was silly, but he didn't care. Sienna was opening up his eyes to a whole new world. One he would gladly keep over his old one.\n\nIan walked out to his car but before he opened his car door, he heard a noise. As far as he knew, everyone was inside, but he couldn't be sure. He heard the noise again. It was coming from the side of the house. He quietly tiptoed to the corner and peered around it. He smiled and shook his head.\n\nAround the corner, Lori and John were making out as if their lives were dependent on it. John had Lori pressed up against the siding and he was standing in between her legs. He had both of his hands plastered on her ass and his tongue shoved down her throat. Lori was moaning into his mouth.\n\nIan stepped back before either of them saw him and went back to his car. Well, their secret was safe with him.\n\nInside, Michael was lying in his mother's arms, asleep. And Tasha had almost fallen asleep herself. Darren figured it was time for them to go home. They had a lot of work to do before the big day tomorrow. He hugged Sienna and Brandon goodnight, and took Michael from Tasha, who also said her goodbyes.\n\nLori and John had both finally snuck back inside the house at different times, and said their goodbyes. Chris was the last to leave, hugging Sienna a little too long for Brandon's comfort.\n\nAbout fifteen minutes after everyone departed, Commander Branson showed up. Sienna and Brandon had been in the middle of straightening up.\n\n\"Hey, Commander. Hate you missed the party,\" Brandon said, as he greeted him.\n\n\"Oh, I know. I tried to get here as soon as I could, but they held us for this damn meeting. On Christmas Eve, of all days.\"\n\n\"Hey daddy. We have plenty of food left, I'll wrap some up for you to take home. And Brandon and I will be over at your house tomorrow around noon, I think.\"\n\nJackson walked over to hug and kiss his daughter. She looked so beautiful. And happy, which was most important.\n\n\"Hey Brandon, can you see me out?\" Jackson asked.\n\nBrandon dumped the beer bottles in his hand in the trash. \"Sure.\"\n\nThe two walked to the Commander's car in silence. When the Commander reached his door, he turned to Brandon. \"I didn't have time to wrap this, but here you go. Merry Christmas,\" Jackson said, as he handed Brandon a check.\n\nBrandon stared down at the check and his mouth dropped. THAT...was a shit load of money.\n\n\"Commander, thank you, but I can't take this,\" Brandon whispered to him, trying to hand the check back.\n\n\"I won't take it back. You're taking care of my daughter and my granddaughter now, and I just want to help out. I know you don't need it, but please accept this gift from your 'sorta' father.\"\n\nBrandon looked up at the Commander. He shook his head in disbelief. \"You know, Sienna always said it, but you really are amazing. I don't even know what to say.\"\n\n\"Say you accept.\"\n\n\"I accept. And thank you sir. This means a lot to your 'sorta' son,\" Brandon said, smiling at him.\n\nJackson leaned over and hugged Brandon. \"Have a wonderful Christmas Eve, or what's left of it, and I'll see you in the morning.\"\n\n\"Thank you, sir. We'll see you tomorrow,\" Brandon replied, trying hard not to get choked up. That wasn't his style.\n\nBrandon waited until the Commander had pulled out of the driveway and was halfway down the street before he turned and walked back in. The living room was dimmer, only barely lit by the three candles sitting on the living room table. He was about to call for Sienna, when she appeared from the hallway, casually leaning up against the wall. His mouth dropped open. Brandon couldn't believe it. She was wearing her small, peach colored, low neckline plunging dress. That dress that unleashed his feelings for her in the beginning. That damn dress that started this whole rollercoaster for them.\n\n\"I know it's a little...lot more snug than it was originally, but hopefully I still look okay in it?\"\n\n\"Better,\" Brandon whispered, not able to take his eyes away from her.\n\n\"Liar,\" Sienna whispered back.\n\nBrandon walked over to her and slowly ran his hands down the side of her body.\n\n\"Okay, before we do anything tonight, I want you to open a present of mine,\" Sienna said.\n\n\"Great minds think alike. I want you to open one too.\"\n\nHe walked her over to the couch and reached into his pocket to pull something out. Sienna held her breath. Is it a....\n\nHe pulled out a folded up piece of paper. Oh well, a girl can dream.\n\n\"Alright, sit down beautiful,\" he said as he handed her the folded up piece of paper.\n\nSienna obeyed and looked at him. He sat down beside her and waited for her to open it.\n\nShe stared down at the paper, and in the candlelight, at first she couldn't tell, but now as she looked closer, it was a light pink color. It was folded into a really small square, so she started to unfold each flap.\n\nThe larger the piece of pink paper became, the more familiar it looked. Then she realized exactly what it was. She started seeing the outline of her overly cursive girlie handwriting. It was the piece of paper she had written on and saved years ago. The paper where she had first written Sienna Rose Temple. She smiled, remembering back on that day.\n\nShe could feel Brandon's eyes on her as she got closer and closer to the center. When she finally unfolded the piece of paper from a half sheet to its full correct size, she saw directly in the middle of the page, in her eight year old handwriting were the words, 'Brandon and Sienna Temple'...but something new was underneath the writing. Taped directly below their names was a ring. The prettiest white gold diamond ring she had ever seen.\n\nThe tears immediately came and she started fanning her face. \n\n\"Will you be my wife?\" she heard him whisper. Or at least that what she thought she heard. At this point, she couldn't be sure. Her entire body was tingling. Wait, if he asked her that question, she needed to respond.\n\n\"Yes,\" she heard herself say, even though she still felt paralyzed. \"Yes!\" she said again louder, and threw her arms around his neck. It felt like a dream that she never wanted to wake from. She loved him with all of her heart. Everything that she had.\n\nThank God, Brandon thought as he kissed her. Thank God.\n\n\"I still don't want you to feel rushed though. We can get married whenever you're ready,\" Brandon said, staring deeply into her eyes. \"But I wanted to officially take you off the market.\" He slipped the ring onto her left hand ring finger and kissed it.\n\nSienna stared down at the stunning ring. It fit perfectly. \"How did you know my size?\" she asked, wiping her tears away.\n\nBrandon smirked. \"I measured it while you were sleeping.\"\n\n\"I can't wait to tell my father,\" she said, kissing Brandon again.\n\n\"He knows, baby. He helped me pick it out.\"\n\n\"You two, I swear...I'll have to keep my eyes on you more,\" Sienna laughed. She could only imagine what her dad and Brandon looked like in a jewelry shop. Two of the manliest men she knew around all of that sparkly female jewelry. She had to laugh out loud about that.\n\n\"I couldn't believe how tiny your fingers were. Your engagement ring barely fits on my pinky finger.\"\n\nSienna stared down at it. Engagement ring. Okay, now it was time for his gift.\n\n\"Okay sweety, your turn.\" Sienna got up to fish underneath the tree for Brandon's gift. When she found it, she turned and handed it to him. Then she got behind him on the couch, one leg on one side and the other leg on the other side of him. She wrapped her hands around his waist and rested her head on his back.\n\nBrandon stared down at the large manila envelope. 'What the hell?' he thought.\n\nHe started to open the envelope when he heard Sienna speak behind him.\n\n\"Okay, I know you said that you don't have any pictures of yourself when you were a baby, and I wasn't able to find any. But hopefully, in time, these will make up for that loss.\"\n\nBrandon slid a folder out of the envelope. He slowly opened the folder and froze. \n\nInside the folder were large glossy black and white photos of their baby's sonogram. The first pictures of her. He could see the entire outline of Brienna's tiny body. His heart felt like it was swelling with so many emotions. Then he felt that not-so-familiar sting at the back of his eyes. He felt like he couldn't breathe. No one could ever give him a more precious gift. He may have had an awful childhood, but he would be damn sure that his daughter would live the opposite life. No matter what it took, he would make sure of that. \n\nSienna's face was tightly pressed against Brandon's back, and their daughter nestled safely between them. She could feel him breathing, and then his breathing changed. It became more staggered, and then she heard him sniffing. She knew at this point not to say anything. Brandon hated showing emotion like this, so she let him have his moment as if she weren't there.\n\nSienna closed her eyes and exhaled. She realized in that instant that her mind and body were tired. But it was a good tired. A tiredness that came from an intense summer and fall. A tiredness caused by a long, hard semester that ended with straight A's. A tiredness due to how demanding Brandon was emotionally and physically. And a tiredness that came from being six months pregnant with their baby. \n\nYes, she was exhausted. But she knew later tonight, when they were both lying in bed, Brandon would wrap his arms around her and she would fall into a quick, deep sleep. That was her favorite place to be. In his arms. As long as she was there, she knew she was safe and loved. But she also knew that a small smile would form at the corners of her mouth as she slept. That involuntary smile would be all the proof either of them would need, to know exactly how blissful her life was. Perhaps her life wasn't perfect. She and Brandon had certainly had some ups and downs. Their paths had crossed in one crazy, frenzied summer. Some would even think she was downright insane for taking this particular path. But for Sienna Rose Branson, soon-to-be Temple, she knew the journey she was taking with Brandon was just the beginning... and she would gladly follow him to wherever that took them.\n\nThe End...for now;-)\n\n*\n\nThank you all so much for taking this journey with me on my first story. You have no idea how much I've appreciated the feedback. Many nights I was so tired, but I'd re-read all of the amazing comments that were posted or sent to me, and that would keep me going strong. Really, thank you soooooo much. Some of you made comments on almost every single chapter (and I know who you are) and I greatly appreciate the support. I promise, I'll have Damn Dress published with some new scenes and detail, and I'll be releasing the first chapter of my new story, Seven Days, very soon on Literotica. Hope you will enjoy that one as well:-)\n\nWould like to thank Kaia B. (TangledinYou) and J for supporting my first story...much appreciated!\n\nThanks!\n\nSoular "
    ],
    "authorname": "soular",
    "tags": [
        "interracial novella",
        "interracial romance",
        "commander",
        "navy seal",
        "interracial drama",
        "romance novella",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/damn-dress-a-love-story-ch-10"
}