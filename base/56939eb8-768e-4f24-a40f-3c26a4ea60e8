{
    "title": "Sex Club for College Students Ch. 03",
    "pages": [
        "Sorry, this chapter ran a bit longer then the previous two, but I think you will find it enjoyable reading.\n\nThanks to ZexWizzard for editing assistance.\n\nBackground: A few weeks ago Heather invited Calie to become a member of an off campus dating club. The girls fill out date cards where they select what nights they are available and what they would like to do (i.e. restaurant, dancing, party etc...). The boys select from the available date cards on the board and coordinate all the particulars of the date via email with the girl whose card they selected. With the completion of the first portion of the rendezvous they go back to his or her place to have some more intimate fun. \n\nHeather saw her friend and fellow club member Calie in the cafeteria lunch line ahead of her. \"Hey Calie, would you like to sit together?\" Heather asked as she caught up to Calie.\n\n\"Yea, that'd be great,\" Calie replied. \n\nThey went through the line together, and selected their food, Calie from the salad bar and Heather from the oriental food station. They sat down in a booth together so they could talk in private.\n\n\"So, did you have a date over the weekend,\" Heather inquired?\n\n\"No,\" answered Calie, \"I had two papers I had to write and a couple books I needed to read as well. How about you, were you dating?\"\n\n\"No, I didn't either. Like you, I just had too much school work to catch up on. Are you going to the club meeting this weekend?\"\n\n\"I suppose so.\" replied Calie.\n\n\"Well, that doesn't sound very enthusiastic. Is everything okay?\" \n\n\"It's just that I've had to step up my effort in a few classes, and so far that seems to be paying off. As far as the club goes,\" Calie went on to explain, \"the first couple of dates I had in the club were great, the second even more so, but my third date was just okay. My last one was kind of mediocre at best.\"\n\n\"I'm really sorry to hear that. Why do you think the dates didn't go so well?\" Heather inquired. \n\n\"With one of the guys, John, I just didn't seem to hit it off with him.\" offered Calie, \"The dinner conversation wasn't that good. He really seemed more interested in himself than getting to know me better. I guess physically he was really not my type and nothing I did seemed to be pleasing to him.\"\n\n\"Wow that date sounds like a bummer,\" Heather replied.\n\n\"The other date I had was with Andrew.\" said Calie, \"We went to a dance together and we had a good time there, but afterwards when we went back to my room it was like I didn't know what to do. We just finally fumbled with each others clothes, had sex and he left. Maybe on my first two dates the boys were more experienced, but I really felt inadequate as a lover and unfulfilled emotionally by either date.\"\n\n\"Thanks for sharing that with me. I dated Andrew once too. He's a nice guy but when it comes to loving he's a lot more passive than most boys.\" \n\n\"Well, how do you deal with that or the situation I had with John, where he didn't seem to like anything I did for him?\" Calie asked.\n\n\"Some of it just comes with experience.\" Heather explained, \"If you were regularly dating either one of these guys you would know whether or not they were just having a bad day. Both of you would be more comfortable communicating with each other what your likes and dislikes were. Communication really is the key on these dates. You have a very limited time to get to know each other and create some chemistry before you find yourself back at your room where both of you were expecting to have the best two hours of your week. When you don't, it can really be aggravating.\"\n\n\"Well, how do I get better at this?\" Calie asked, \"Do I just keep going on club dates hoping it will eventually get better? Is there something I can read or is there someone who can teach me?\" \n\n\"It's interesting you should mention teaching.\" Heather replied with a grin, \"You're not the first club member to have some mediocre dating experiences. The personality conflicts that sometimes occur between members are probably inevitable and can occasionally happen to anyone on a date. The other issue of feeling inadequate as a lover or feeling that your date is not satisfying your needs is a problem that training can address.\" \n\nHeather continued, \"Last semester Chris and I were approached by Virginia, the club's sponsor. It seems that a number of club members had confided in her some of the same issues you've mentioned. Chris and I have both been in the club for a couple years. Virginia said that both of us had consistently won high marks from the other club members when they were asked to describe their best dating experiences in the club. Because of that, Virginia asked us if we could come up with a way to teach some of our 'secrets of success' to other club members who asked for help. Chris and I discussed it, and decided that the best way to teach someone how to be a better lover was to show them.\"\n\nCalie intrigued asked, \"How did you go about 'showing' them?\"\n\nHeather explained, \"To begin with, Virginia gave us the name of one guy and one gal that had come to her. Chris and I arranged a dinner date for the four of us, and then we all went over to Virginia's house where the club holds its meetings and had a training session there. Chris and I shared and demonstrated some of our experiences and ideas and we worked with them as a couple, and did some, well, role playing.\" \n\n\"Well, how did it go?\" asked Calie, intrigued. \n\n\"In the beginning it felt a little strange being naked in front of three other people, while explaining at the same time how to be a better lover,\" Heather answered, \"But, after a little while, I really got into it. It was a good learning experience for me too and when Virginia talked to the two students a month later, they both said the training class had made a big difference in the quality of their dates. Chris and I have taught the class three times together and I've taught it one other time with a different guy.\"\n\n\"Heather, that sounds interesting, and maybe what I need,\" half agreed Calie, \"But I think I would feel awkward being naked with three other people there.\"\n\n\"I want to assure you that this is not intended to be a group sex session.\" promised Heather, \"First off, we don't put on a lesbian make out show for the guys. In order to demonstrate or role play there will be times when the other boy will be asked to do something with you or me and visa versa. You may practice something with the male instructor or the other student. I think if you ask some of the other members that have gone through the class they will tell you that it was a lot of fun and that they quickly got over their anxiety of being naked in front of a small group of people.\"\n\nCalie asked, \"If I did this, would you be one of the instructors?\" \n\n\"That's up to you,\" answered Heather. Virginia has recruited one other girl from the club recently that she feels is almost as skilled as I to hold the class too. She believes this gives her a balance of body type and a wider range of instruction for students.\"\n\n\"I guess it would be a little weird having you as one of the instructors, knowing you as well as I do,\" Calie replied, \"but I do value your advice and would want to learn as much as I could. Let me sleep on it and get back to you tomorrow.\"\n\n\"That's fine.\" agreed Heather, \"If you get back to me by tomorrow afternoon, I think we could arrange something for this Saturday.\"\n\nCalie gave everything Heather had informed her of some serious thought. It did sound like it might be a solution for some of the dating issues she had experienced in the club. Getting some practical advice from someone who knew what they were talking about seemed like a good idea. Being naked with three other people certainly would be a new experience as well, so after a night of careful deliberation, Calie called Heather up and said, \"Sign me up!\" \n\n\"That's great,\" replied Heather. \"All four of us will meet for a bite to eat at the College Sub Shop on Saturday afternoon at 1:00. Then we can head over to Victoria's house afterward for the training session.\n\n*******\n\nSaturday came and Calie slept in late. When she did get up she took a shower, got dressed and headed over to the College Sub Shop to meet Heather, the other instructor, and her 'mock' date and fellow student. It was only about a ten minute walk from the dorm, but it was cold and windy out so it was not such a pleasant outing. When Calie arrived, she saw that Heather and a guy she didn't recognize was already occupying one of the booths. \n\nAs Calie approached to join them, the young man sitting with Heather stood up. With a warm smile he reached out to shake Calie's hand, and said, \"Hi, I'm Chris. It's nice to meet you Calie.\"\n\nChris was tall, maybe six feet, and had longish dirty blond hair. He was wearing blue jeans and a grey t-shirt with the college logo printed on it. He had an easy going laid back look about him.\n\n\"Well, it's nice to meet you too Chris, thanks for taking the time to do this,\" offered Calie.\n\n\"Well it looks like our other trainee has arrived,\" said Heather.\n\nCalie turned around and recognized Allen. He was the newest member of the club that they had voted into their society just a week after she had joined herself. Allen was a junior with dark straight hair and brown eyes. He was medium height, about five foot ten, wore glasses and had some Asian features. He had a \"studious\" look about him, like many of the guys in the club.\n\n\"Hi Guys,\" Allen exclaimed.\n\nThey all made their introductions and Calie and Allen joined them at the table.\n\n\"Why don't we all go up and order our subs and drinks and then we can sit back down and talk,\" suggested Heather.\n\nAfter everyone had their order and was seated back at the booth Chris started in, \"Well we all know why we're here and I just want to lay down some guidelines to make this session as productive for the two of you as possible. First I want you both to be comfortable, this is not a competition and there are no graded tests at the end of class. There are no dumb questions. If you are not sure about something Heather or I say or do, please ask. We've done a few of these classes together as we each have informed the both of you and I think you will learn a lot and have a fun time doing it.\"\n\nChris paused for effect. \"Any questions so far?\"\n\nWith no reply from either pupil, he continued, \"Okay then, the first thing to remember is that in order for these dates to be successful, the first phase of the date needs to go as smoothly as possible in order for the remainder of the night to follow suit. Your dinner, or whatever you decide to do together, is actually more important than what you do once you two get back to your dorm room.\"\n\nChris turned to Allen and said, \"Girls especially need to feel a level of trust before they are going to feel comfortable with your hands all over them. Ask them about their day, really listen to what they have to say and don't interrupt every ten seconds with your 'me too' comments. Ask, and then talk about their hometown or their favorite books. You can talk about the club if both of you want but don't start spouting graphic details of the guy or girl you slept with last Tuesday. You want your date to feel like it's all about them. You are here to be with them, learn about them, laugh with them, and have a good time with them.\" \n\nAs Calie listened, she thought a lot of what Chris was saying was just good common sense advice. She realized that on her last two dates, she really never made a connection with either boy during their time together. In fact, with John she couldn't recall one time that she laughed at something he said.\n\nTo demonstrate his point, Chris started a conversation with Heather. They covered a number of topics, including dorm food, the bad weather, and a particularly difficult science class. It all seemed so natural of them both, and the conversation was punctuated numerous times by one or both of them laughing at something the other had commented on.\n\nHeather then turned to her two pupils, \"You can see that while we have only been talking a few minutes, there is already a more relaxed banter between Chris and I than when we first began. And, whereas I know the situation differs individually from person to person, this particular example is meant to illustrate that as I feel more comfortable with Chris my mind starts thinking about what we will be doing later. I am beginning to 'like' my date and the idea of leaning across the table and kissing him starts to become very appealing to me.\" \n\n\"Oh really. So what's stopping you?\" Chris said as Heather grinned back at him.\n\nChris continued, \"It's only natural that you may be nervous about what your date might be thinking about you, or if your actions are those that are appealing to your date or 'is their thing'. Just remember Calie, the guy probably had lots of date cards to pick from, but he picked yours. And Allen wasn't Calie and all the girls you've dated at the club meeting where they unanimously voted to let you into the club?\"\n\n\"Yea, all of them were.\" Allen responded.\n\n\"That means there was already an interest in you from the start.\" said Chris, \"Don't think little of it,\"\n\nHeather added, \"I am always a bit nervous on these club dates anticipating how they will go. I think knowing that the person sitting across from you is going to see you completely naked later in the evening is probably enough to make all but the most ardent exhibitionist a little self conscious. Don't rush through the dinner, give yourself and your date plenty of time to get to know each other. It also serves to build the anticipation level.\"\n\n\"As the dinner progresses,\" Chris sheepishly admitted. \"I find myself wanting to be with the girl sitting across from me more and more. I guess I should be embarrassed to say it, but I am usually at least partially hard by the time we are half way through dinner.\" \n\n\"Hey, when we dated I thought you told me you started getting hard from the time you sat down with me at the restaurant,\" said Heather in mock protest.\n\n\"Actually, with you I got hard just picking your date card off the board.\" retorted Chris.\n\nCalie spoke up, \"Well I really enjoy the dialogue you two create, I just don't know if I can do the same with that type of interaction on a first date.\"\n\nHeather replied, \"Well everyone you date will be different, and there will be some people that you just seem to click with right from the first moment you meet. But if you both work at it, by the time you are done with a leisurely dinner you will feel excited about moving on to the next phase of your evening together.\"\n\nChris continued, \"Of course, tonight's a little different because neither of you knew who your study buddy for this class would be, but we are going to engage in a little role playing and pretend that you two just met for a date this evening. Allen, why don't start this off.\" \n\nAllen turned to address his 'date', \"Good evening Calie, I am really looking forward to our date this evening. I really like that dress you're wearing.\"\n\n\"Well that sounds a little bit contrived,\" Heather commented, \"but it's got the right attitude, and pointed in the right direction.\" \n\n\"Thanks Allen, I've been looking forward to our date too,\" Calie replied, trying to play into the role.\n\nCalie and Allen talked back and forth for almost a half an hour. They talked about classes, their home towns, and the college's football game last week. Calie learned that Allen's mother was part Japanese, which accounted for Allen's Asian like features. Heather and Chris made the occasional comments and suggestions and by the time an hour had gone by they were laughing and thoroughly enjoying each others company. \n\nThen Chris brought the role playing to a halt. \"Okay, I think you would agree that you have a much stronger connection and greater level of comfort with each other than you did an hour ago, and I think you will find as the level of comfort grows you will start thinking about what's going to come with growing anticipation and genuine excitement. Alright, enough of this, let's get out of here and walk over to Victoria's house. She's probably wondering what's taking us so long.\"\n\nAs they got up and left the restaurant Chris made a request, \"Allen, I want you to take Calie's hand. Just something as simple as holding hands as you walk back to your dorm can allow you to build on the connection you made during the dinner portion of the date.\"\n\nCalie took Allen's hand in hers and they walked the two blocks together to Victoria's house. All four of them walked up to the front porch and Heather rang the door bell. A moment later, Victoria answered the door and ushered them inside. Allen gave Calie's hand a little squeeze and released it. Calie looked at him and gave him a little smile.\n\n\"Well everything is ready for you upstairs, you know where everything is Heather,\" said Virginia pointing towards the stairs.\n\nAll four of them went upstairs and Heather opened the first door to the left. As they entered the room Calie could smell mild incense. The overhead lights were off but there were two floor lamps and a candle burning at each of the two night stands. Between the night stands was a king size bed covered by a thick dark green bed spread. At the top of the bed the bedspread was pulled back and there was a collection of pillows of various shapes and fabrics. The whole room presented a very inviting picture.\n\nHeather spoke first, \"Don't underestimate the impact that setting the ambiance for this part of your date can make. While none of us have dorm rooms or apartments that could match Victoria's setup, just a few changes can make a big difference. I know if I go back to a guy's place and he has taken the time to put on some soft music, has romantic lighting, and the room is clean, he has really thought about our date. On the other hand if we get back to his room and he has to clear his dirty laundry off the bed or something similar, that can be a real mood killer.\"\n\nChris added, \"I agree with Heather on this one, it really does matter. I can remember one date I had where the dinner conversation just didn't seem to go that great and I really wasn't sure how 'into me' my date really was. Then we got back to my room, and I had candles burning, soft jazz on the stereo, the room was neat as a pin, and I had placed two chocolate mints on what was to be her pillow. She turned to me and said 'You did all this for me?' and then she planted a big kiss on me and the rest, as they say, is history.\"\n\n\"And here I thought all this time that I was the only one who you gave chocolate mints to.\" Heather said sarcastically. \"Another very important point is hygiene. I know you have heard it during the club meetings, but always shower and brush your teeth before you go out on a date. You don't want to have them second guessing whether that finger you are about to put inside her is clean or not. Speaking of hygiene, have you all showered today?\" \n\nEveryone nodded yes.\n\nWith a smile, Chris continued, \"Well, we're going to get close for this part of the class so let's all wash our hands and I just so happen to have chocolate breath mints for everybody.\"\n\n\"Do you buy those things by the case?\" Allen chided.\n\nChris laughed while adding, \"At this point, because of the connection you achieved at dinner, the hand holding and the atmosphere you have hopefully created in your room, you should both anxiously be anticipating the next step. If your date took the time to prepare the room, compliment them on it to let them know you appreciate their efforts. This would then be the point where if you haven't already done so, you lean in and kiss your date. Depending on your personality you might even ask permission.\" Chris gazed at Heather, \"May I kiss you?\"\n\nHeather responded by leaning towards Chris and their lips met. One thing Heather hadn't told Calie is that Chris was the first boy she had dated in the club. It was a night she would never forget. The way Chris had made love to her was unlike anything she had experienced with her juvenile High School boy friends. He made her feel special at dinner and he was patient with her obvious inexperience afterwards as they explored each others bodies after reaching his room. ",
        "Their kisses started gentle and undemanding and Chris gently cradled Heather's head with his hands. He leaned back slightly and inhaled her scent. \"Your hair smells wonderful,\" Chris exclaimed as he ran his fingers through it and then kissed her again.\n\nChris and Heather stopped and turned to their two students.\n\nHeather spoke first, \"Now I am sure both of you know how to kiss, but you will notice Chris didn't start by sticking his tongue half way down my throat or grabbing my breasts. We are just getting comfortable touching each other a little, no rushing, no grabbing. I am not saying that you're never going to have a date where you can both hardly wait to rip each others clothes off, but we are trying to address those date situations that both of you talked about where the sparks weren't flying everywhere off of every part of each of your bodies and the date ended up being a dud instead of the earth shaking and quaking under the bed.\"\n\nChris took over, \"Because this has not been a typical date and the two of you don't know each other well, this will be an excellent opportunity to role play some. I realize some of this will feel a little staged and awkward at first, but just go along with the 'plan' and I think you will find it helpful. I want both of you to go back out to the hallway, and come back into the room holding hands. Allen I want you to pretend that this is Calie's dorm room that you are seeing it for the first time and just try to pretend that Heather and I are not in the room.\"\n\nCalie left the room with Allen, and was actually feeling a little giddy as Allen took her hand in his.\n\n\"I guess you should open the door,\" he said with a smile, \"since it's actually your dorm room.\" \n\nCalie opened the door and they both stepped into the room. \"This is amazing. Did you set this all up yourself? Oops, that was a stupid question, of course you did.\" Allen said trying to keep a straight face. \n\n\"I am glad you like it. I was really looking forward to this date with you Allen, and wanted everything to be just right.\" replied Calie as she played into her role once more.\n\nAllen replied, \"I've been looking forward to this date too,\" and then leaned toward Calie with his lips and kissed her for the first time.\n\nCalie felt his warm lips on hers and could feel the flutter of that 'genuine butterfly' affect in her stomach. It was just a soft kiss but a very welcome one. As Allen began to break the kiss Calie responded and kissed him back. As their kisses continued, Allen took a small step forward and gently wrapped his arms around her and tenderly pulled them closer. Calie looked into is dark brown eyes as he gazed back at her. Calie placed her hands around Allen's waist and they embraced. Calie pushed her lips again firmly against his with more insistence and Allen held her tighter. Calie's bosom pushed against his chest as she brushed the tip of her tongue across his lips, seeking to explore Allen further. Allen parted his lips and felt their tongues meet. \n\nAllen ran his fingers through her hair as they continued to kiss with ever greater passion while Calie's hands migrated lower and grabbed at Allen's ass. She pulled him to her and felt his crotch press against her belly. \n\n\"Has anyone ever told you what a great ass you have?\" Calie said breaking the kiss as well as the silence of the moment. \n\n\"Not unless you count the two gay guys that propositioned me at the bar last week,\" Allen said with a smile.\n\nHeather interrupted, \"Okay you guys, that was great. Unless you two are professional actors I would swear that you were enjoying yourselves.\"\n\n\"Oh, I was,\" Calie said with a grin, never taking her eyes off Allen's.\n\nWith a wink Allen said, \"Well, I'm just one hell of a great actor.\"\n\nCalie gave Allen a mock punch on the shoulder for his wise crack.\n\nChris said, \"That was great, what you said at the end about Allen's ass. About the only comment I would have is you both might look for more opportunities to communicate with your partner. I like this about you, or do that again, or wow that feels great.\"\n\nHeather added, \"If at this point the date is not proceeding the way you had hoped it would, I would suggest you offer the other person a massage. It can start with their clothes on or off, and can be just massaging their neck or back. Any excuse to initiate some physical contact with your date will start to tear down the walls that are keeping you from feeling connected with your partner. If I remember Calie, you said you had a date a couple weeks ago where you were feeling stressed about school and really seemed not to be hitting it off with your date. Then he started out in your dorm room by giving you a nice back rub and by the time you two were done you said you couldn't get enough of him.\" \n\nCalie blushed, \"Yes, you're right. It really did make all the difference.\" \n\n\"Now we come to one of my favorite parts of the date,\" Chris said, \"Transitioning from kissing and embracing each other to removing clothes and moving to the bed. For me, this often just starts as a natural progression from the kissing.\"\n\nChris took Heather in his arms again and began to kiss her and she responded in kind. Calie and Allen saw Heather move her head and whisper something in Chris's ear. She then licked his earlobe and gently nibbled on it. Chris raised a hand to Heathers chest and lightly pressed it against her breast. His fingers searched for her nipple and found it. Heather drew back lightly and found the ends of Chris's t-shirt and pulled it off over his head.\n\nCalie stared at Chris's body, and immediately thought, 'this boy obviously works out'. He had a well defined six pack and a deep tan. Heather fondled his chest and squeezed his nipples.\n\n\"Oh I just love your beautiful chest,\" Heather said with much emphasis.\n\nCalie thought to herself, 'So do I'. \n\n\"Now, another avenue you can take is a little bit of a strip tease.\" said Heather. \"Guys especially seem to like this.\"\n\n\"Well, duh!\" exclaimed Chris.\n\nChuckling, Heather pushed Chris back onto the bed and stood before him. She raised her hands and slowly started unbuttoning her blouse as the soft music played in the background. By the time she got to the third button her black lace bra was clearly visible. Calie noticed a bulge forming in Chris's jeans as he sat on the bed watching Heather strip for him.\n\nAllen stood transfixed too as Heather put on her show. Heather was a pretty girl. She wasn't petite like Calie as she stood about five foot six, and probably weighed about 140 pounds, out weighing Calie by fifteen or twenty. Her breasts also looked to be a size larger, and her long thick hair fell about three inches beyond her shoulders.\n\nOnce her blouse was unbuttoned, Heather took it off and dropped it to the floor. Next she unbuttoned her tight jeans that were molded to her shapely legs. They could now see her matching black panties as she wiggled her bottom to help lower the jeans past her hips. She kicked her shoes off and stepped out of her jeans. \n\nHeather then moved closer to the bed, standing over Chris as she unfastened her bra. Even Calie was a little envious as she gazed on Heather's full naked breasts. Chris reached out and cupped the breasts she had offered up to him. He leaned over and took one of them in his mouth and ran his tongue over her nipple. Heather let out a satisfied moan that all of them could hear. Chris drew back a little taking in Heather's body with his eyes. Then he reached out, found the band of Heather's panties and ever so slowly lowered them. \n\nAllen and Calie moved from behind Heather to get a better look at the slow unveiling that was going on. Allen's mouth was dry with anticipation. First they could see Heather's tan line and then as the panties continued lower they could see the top of her bush. It seemed like it took forever as Chris teased them with his slow pace. Heather felt herself getting wet as Chris unveiled her to their two pupils. Finally, together they revealed her entire body to the two's view. Her long smooth legs, her shapely ass and her dark trimmed bush, and Allen could just make out the outline of her pussy. \n\nHeather stepped out of her panties and turned to face Allen and Calie. She smiled and did a little curtsy. \"Ta-Da.\" she announced, \"So that's one way to do a little strip tease for your date.\" Chris, Calie and Allen offered up some applause in response and appreciation.\n\n\"Whew, if a guy's not hard after a performance like that,\" chimed in Chris, \"you're either gay, or impotent.\"\n\nCalie chuckled, and couldn't help but glance over at Allen's jeans to see if she could see any evidence of his reaction to Heather's show.\n\nHeather grabbed one of the robes lying across the corner chairs and covered herself. \"I don't want to distract the boys too much,\" she said to Calie. \"Calie, what have you found you like best? Do you like to have your date undress you, or do you like to undress him?\"\n\n\"Well I guess I've never given it much thought before.\" she replied in answer, \"I do like undressing my date. I guess it gives me the impression of control and I enjoy touching them. I've gone out with some pretty shy guys and I guess it's a way for them to know I like their body or really interested in them as a whole. Maybe I am a little self conscious because I don't know that I would feel comfortable doing a strip tease like Heather just did.\"\n\n\"What about you Allen?\" Heather inquired.\n\n\"I would say it's a big turn on for me when I have a gal taking my clothes off.\" he answered. \"It makes me feel like they really want me. I could go either way with my date's clothes though. I really liked what Heather just did, but I would have been just as happy to assist her. If I undress my date it gives me the opportunity to do some exploring also, if they are game.\" \n\nChris added another comment, \"Another advantage of helping to undress your date is you can sort of take turns with each article of clothing. I also think it's easier to add in comments along the way.\"\n\n\"Like, your arms are so big and strong, or your skin is so soft, or the best one, Oh, you're so big and hard,\" Heather added in a sarcastic tone.\n\n\"Yea, especially that last one,\" Chris said with a laugh, \"It's impossible to overuse that phrase on a guy.\"\n\nChris turned to the two students and suggested, \"Why don't you two pick up where you left off before we interrupted you and just see what kind of transition feels natural. Without going overboard, try to add some compliments directed at your date along the way.\"\n\nAllen took Calie's hand in his and positioned himself so that he was facing her. Calie felt her nervous excitement return as she looked deep into his eyes again. She raised herself up onto her toes to bring her lips to his. His lips met hers and he wrapped his arms around her. \n\n\"You smell so good Calie,\" complimented Allen.\n\nAs he resumed his kisses, Calie felt his tongue begin to explore. Calie hugged him tighter, and this time she could feel his member pressing against her tummy. Allen ran his hands up the side of her body and then hugged her to him, pressing her breast against his. \n\nCalie exclaimed, \"You're such a good kisser Allen, I could do this all night.\"\n\nShe moved her hands to the top button of Allen's shirt and whispered to him, \"But I want more than just your kisses.\"\n\nShe unbuttoned his shirt slowly one button at a time. As she undid the third button she leaned in and kissed his chest where the previous button had covered him. She repeated the procedure as she came to the fourth and fifth buttons too and with the last button undone she pushed the shirt over his shoulders, down his arms and dropped it to the floor. \n\nAllen stood before her, his chest bare. He was totally smooth with no hair whatsoever. While not as defined as Chris he had a nice slim body that Calie found very inviting. Her hands ran over his bare skin placing her arms around his sides and began massaging his bare back. \n\n\"Oh, your hands feel so good,\" Allen declared. \n\nNow it was Allen's turn as he took hold of Calie's t-shirt. While she raised her hands to the ceiling, he pulled it over her head. Allen reached around her and found the hook to her salmon pink bra, unclasping it. But Calie brought her hands down over her chest which preventing the bra from falling to the floor.\n\nCalie smiled seductively back at Allen, \"So you want to see what's under here, do you?\"\n\n\"Oh yes, I certainly do,\" he replied.\n\n\"You have to ask for it,\" she said.\n\n\"Oh, sweet Calie, please show your breasts,\" he begged playfully, \"I've been waiting to see them all afternoon.\"\n\nCalie removed her hand and the bra slid off her breasts and onto the floor. For a few moments Allen just stared at her chest. \"What beautiful breasts you have, they're just perfect.\" Allen said with genuine astonishment. \n\n\"Oh really? Tell me more, what do you like about them,\" Calie egged him on. \n\n\"The shape and size are so perfect for you,\" Allen said, \"they stand out so nice and I love their color and your tight little nipples.\"\n\nCalie reached for Allen's hands and guided them to her breasts. Allen placed an index finger directly on each nipple and then lightly traced his fingers over them. Calie's nipples grew harder in response to his touch and she let out a soft moan of encouragement. Allen softly kneaded them in his hand and felt their weight. Calie could feel a tingle that started in her breasts and traveled down between her legs. Both of them had forgotten that Chris or Heather were even in the room.\n\nCalie gently removed Allen's hand from her breasts gave him a kiss and then got down on her knees. Allen felt nervous excitement as he sensed what was coming. She reached for Allen's belt, unbuckled it and removed it from around his jeans. Then she unsnapped the top button. Allen's bulge was right where the path of the zipper ran and as she lowered it he could feel it run over the length of his hard-on.\n\nShe could now see his grey shorts and as she pulled his jeans over his hips she could plainly make out his shape and size. Allen stepped out of his shoes and jeans. Calie placed her hand on his shorts and gently squeezed his cock. This time it was Allen's turn to let out a little moan. \n\nCalie and Allen switch positions and now it was Allen who was removing his date's clothes. Allen unfastened the button, and pulled down the zipper. Calie then sat on the bed as Allen grabbed the jeans by the feet and slid them off her. All that remained was a pair of grey men's shorts and some salmon pink panties.\n\nCalie looked at Allen and with a big grin said, \"I'll show you mine if you show me yours.\" \n\n\"Okay then, on the count of three.\" Allen retorted, \"One, Two, Three.\"\n\nAllen stared at Calie as he removed his own shorts and she lowered her panties exposing herself to him. Calie had softly trimmed pubes that only partially disguised the small beautiful pouting labia visible beneath them. Calie likewise stared at Allen. He had a large forest of black pubic hair. She could see his hard cut cock rise straight up out of his thick bush. Through his dense growth she could also just make out where his balls hung down. He had a nice lean body, and the lack of any hair on his chest and his slender frame gave the impression of him looking even younger than his 20 years.\n\nHeather spoke up first, breaking the spell between them, which also brought them back to reality and the fact that their instructors were still present. \"Okay guys that was a pretty good effort. I think I could sell tickets to that performance.\"\n\n\"That's because I don't think it was a performance.\" said Chris. Then he handed each of them a robe to cover themselves and continued, \"For the next part, we are going to pair off and work separately for a while. Allen, I want you to step into the bath room with Heather, and Calie you are going to work here with me for a bit.\" \n\nHeather took Allen by the hand and led him into the bathroom. It was a large bathroom that had a couple of stools in it. Heather sat down on one and Allen took the other.\n\n\"Allen,\" Heather began, \"first of all I want to tell you I think you are doing wonderful with Calie. I also want to say you have a really nice body that I think any girl would appreciate. However there is one area where I think you could make a small change and it would make a big difference on your dates.\"\n\nAllen sat on the edge of his chair, \"Well, what is it?\"\n\n\"Your penis looks rather small.\" She replied.\n\nAllen suddenly felt like he'd been hit in the gut, \"What do you mean it's small, I'm almost six inches long and right at five inches around. I've looked it up on the internet and according to the charts I'm bigger than about half the guys out there.\"\n\n\"Allen, you're not listening to me,\" she said, then added, \"I didn't say you were small, I said you looked small. You saw my bush a few minutes ago, did you think I looked sexy? Do I look inviting, do I look like a girl you might like to give some oral satisfaction too?\" \n\n\"Sure.\" Allen answered, nodding his head.\n\nShe continued, \"And what about Calie, doesn't she just look terrific? Well believe it or not, just like you take time each month to get the hair on your head cut or trimmed, Calie and I do the same for our pubic hair and almost every single guy in the club does too. Do you like it when a girl gives you head? Of course you do. I can tell you that a lot of girls would take a look at that thick bush of yours and figure they would get lost in the forest or end up with a lot of pubic hair in their mouth. A guy's cock also looks longer and thicker if his bush is trimmed. So I am not suggesting that you cut it all off, I just think it would make a huge difference if you trimmed it back some. Later when you see Chris naked, I can tell you that he trims his hair but it looks perfectly natural to me. I think you would be surprised how many other guys do it and they just don't talk about it.\" \n\n\"Do you really think it would make that much of a difference?\" He asked.\n\n\"Well there's an easy way to find out. I brought some clippers and other supplies with me today. It would just take a few minutes and if you don't like it, it'll grow back within a couple of short weeks.\"\n\nSomewhat timidly Allen replied, \"Okay, what do I do?\"\n\n\"Get up, take your robe off and stand in front of the mirror.\" she directed.\n\nAllen got up and did as Heather instructed. Allen had lost most of his erection and stood still as Heather brought the stool over in front of him and sat down on it. She took out a small pair of scissors and began to trim him. She left about three quarters of an inch of hair behind. In about five minutes she covered his entire bush. Heather then inspected his shaft and nut-sack.\n\n\"Allen it's up to you,\" she informed him, \"but some guys shave their balls and some also shave the hair that actually grows on the shaft itself. Because you don't really have much hair elsewhere on your body, it may seem a little more noticeable than it is on a hairier guy.\"\n\n\"Well what do you think?\" inquired Allen.\n\n\"I personally like it when a guy has a nice smooth set of balls, but I think a lot of girls wouldn't care one way or the other. It is a little bit more effort for you to maintain.\"\n\n\"Sure, why not go all the way.\" he stated.\n\n\"Okay, you got it.\" she said, as she ran some warm water in the sink.\n\nShe then spread shaving cream onto Allen's sack, got out the safety razor and started in on her task, every few strokes rinsing the blade out in the warm water. Allen liked the sensation of the razor traveling across his balls and began to get hard again. \n\nAllen looked down and apologized. \"Sorry.\" \n\n\"No need, don't worry about it.\" she replied, \"In fact its easier to shave your shaft when you're fully erect.\"\n\nHeather finished with his balls and wiped away the extra shaving cream with a warm wash cloth. Next she grabbed the tip of his dick with one hand while she shaved off the few stray hairs that grew near the base of his shaft with the other. Heather wiped him off one more time and then got up off the stool. Allen looked at himself in the mirror. His cock was still standing at attention and it looked much larger to him. For the first time he even thought his own cock looked kind of sexy. ",
        "Heather faced the mirror too and looked at her handy work, \"Wow, now that made a BIG difference, even if I do say so myself. But I think I might double check just to make sure.\"\n\nThat being said, she dropped back down to her knees and engulfed his newly shaven member to the back of her throat, bringing her lips to the base and her nose to his freshly clipped pubic. Allen just gasped, and with two more short strokes to his base she removed him from her mouth and stood back up.\n\n\"I think that is just right.\" she said, \"Now let's get back to class.\"\n\nStill surprised by her actions, he just nodded his head.\n\n*******\n\n\"So how did you meet Heather?\" Calie inquired.\n\n\"Well it was almost two years ago. One of my friends invited me to the club and at my very first meeting my friend introduced me to Heather. I really didn't have much experience when I joined the club and my friend suggested selecting Heather's date card if it was on the board. It was, so Heather was my first date in the club. She was a great first date, but she also made me realized how little I knew about being a good lover.\" \n\n\"What would you say made for such a good first date?\" she asked.\n\n\"Well you know Heather, she isn't shy about anything. She didn't hesitate to tell me when I did something she didn't like, or suggested how I might do it differently, but with concern. She also gave me lots of praise and positive encouragement when she was enjoying herself, and she was great about asking me for feedback. She'd say, 'Am I doing this too hard? Does that feel good? What do you like best?' Probably not all guys want a lover that is as vocal as Heather, but I really appreciated her comments. You knew when Heather was moaning or screaming your name that she was really into it and not just faking a response. The funny thing is, she thought I was the experienced one. I guess I just did a good job of listening and giving her want she needed.\"\n\n\"That does sound like Heather,\" Calie agreed.\n\nJust then Calie and Chris heard a knock at the bathroom door. \"Is it okay if we come out and join you two?\" inquired Heather.\n\n\"Sure.\" Chris replied.\n\nHeather and Allen were both wearing their robes as they walked out into the bedroom. They stood in front of the bed with Heather standing behind Allen. Heather announced, \"Allen and I have been working on a beautification project, and I thought we would share our results with you two and get Calie's honest reaction.\"\n\nAllen turned a little red from embarrassment but could feel his hard cock twitch in anticipation. Heather reached around and pulled his robe off, leaving him completely naked. \n\nBoth Calie and Chris were immediately drawn to Allen's erect member. He looked like a different man. The entire length of his shaft was visible, as it was no longer obstructed by a forest of hair. Calie could plainly see his scrotum that hung from the base of his shaft. His member looked like it had practically doubled in size. Calie had to admit, that she was a little disappointed when she first got a peek at his cock, but now she saw that it was just beautiful.\n\nAs if Heather had scripted it Calie blurt out, \"Allen you're making me wet just looking at it.\" She blushed; not believing those words came from her own lips.\n\n\"Not that my opinion matters, but now you look like a man the guys might be envious of.\" stated Chris.\n\n\"Well thanks guys, I would not have believed the difference either if I hadn't see it with my own eyes.\" replied Allen.\n\n\"Well, enough of this gawking at Allen's cock.\" said Heather. \"You still have to know how to use it and that's what we are going to talk about next. Allen, just leave your robe off and we'll join them on the bed. Chris please go ahead and remove your shorts too.\" \n\nThey all looked at Chris as he lowered his underwear. Ever since Chris removed his shirt revealing his 'six pack', Calie had been hoping she would get to see what kind of pistol Chris was packing. Not surprisingly, Chris's blond pubes were neatly trimmed. He was only semi erect but growing as Calie and the others enjoyed the unveiling.\n\nAddressing Calie, Heather said, \"it's not often you get to see two cocks side by side so I thought we would take advantage of the opportunity.\"\n\nCalie looked at the two boys laid out in front of her. They were both circumcised. Allen's penis was very straight with a smooth shaft while Chris's, bent slightly to the left, was a lighter color and showed a couple of prominent veins running down it. Chris appeared to be fully erect now and both of their cocks pointed to their belly buttons.\n\nNext she compared their scrotum. Chris's balls seemed larger and hung down from the base of his cock in a loose sack whereas Allen's seemed a little smaller with his balls drawn up close to his body. Both their cocks looked similar in size to the other boys she had dated so far, but Chris's seemed slightly longer and fatter than Allen's. \n\nAllen felt both excitement and embarrassment. Having ones manhood compared to another guy while two girls looked on made him very self conscious. While Allen had seen lots of naked guys in his life he had never had one sitting a foot away from him sporting a full blown hard-on. \n\nHeather looked at Calie, \"If you ever wanted to ask a question about a guys cock, now would be a good time.\"\n\nCalie blushed, and after pausing for a moment she posed her first question, \"I hear both guys and gals talk about how big or small a guy's dick is. I guess I've always been too embarrassed to ask a date what their measurements are. I think these guys are around the same size as other guys I've seen, but I really don't know what size that is.\"\n\nChris responded, \"Well, as you can imagine most guys are fairly sensitive about this subject, but I can tell you this. I don't know a single guy that doesn't know his own dimensions but I think you will find that Heather is quite the expert on this.\"\n\nHeather took over, \"Yes well, we all have our little hobbies. It just so happens that I brought a little measuring tape with me.\" Before either of them could respond, Heather reached over and pulled a flexible tape measure out of her pocket book. Heather leaned over to Chris, placed the tape on the top of his cock and extended the tape from the base to the tip, \"Six and one quarter inches,\" she announced. Next she wrapped it around the thickest part of his shaft, \"five inches even.\" Without skipping a beat she reach for Allen and his cock jumped as Heather placed the tape along it, \"Five and seven eights inches,\" and then wrapping the tape around him she announced, \"four and seven eighth inches.\"\n\nJust as quickly Heather put the tape away, drew out a little booklet, wrote something down and then put it away.\n\nHeather continued, \"As you can already see, both of these guys are about the same size. The biggest guy I have ever dated in the club was seven and a half inches long and the shortest was little over five inches. I would say four out of five guys are packing something within a half inch of the two live examples we have here. So if some girl brags that her boyfriend is eight inches, she's either never actually measured it or she is dating that one guy in a thousand. I've never seen one that size myself. When it's all said and done, I really don't notice much of a difference when the guys inside me. I would say if a guy's cock is a lot skinnier or thicker I notice the difference more than his length. This is especially true when giving a blow job. It's hard to give a good blow job if you can hardly get the thing in your mouth. Does that answer your question Calie?\"\n\n\"Yes, I would say that was very thorough.\" she replied.\n\n\"Okay let's move on to something that will be a little more fun for the boys,\" announced Heather. \"Let's talk about hand jobs. Every guy I know likes getting them and they can be a great form of foreplay,\" said Heather with genuine enthusiasm. \"Well as you can tell, both Chris and Adam are cut, and if you are going to perform much of a hand job I think it's best to use some kind us lubrication. You can use your own spit, Vaseline, KY, massage oil or probably a number of other things. You might want to also be thinking ahead also. If you are going to be giving your guy some oral action later you may want to avoid some of these. Of course you could just clean him off before you move onto something else.\" \n\nHeather looked at Chris and grinned, \"I know that Chris likes massage oil, which I just coincidentally happen to have right here in my handbag. Now I consider myself well versed at giving a good hand job, but my level of hands on experience pales in comparison to Chris's. So I am going to ask Chris to demonstrate to us his superior technique.\" \n\nHeather retrieved the massage oil from beside the bed and pulled the cap off. Calie and Allen both watched with rapt attention as Chris held out his right hand and Heather poured the oil onto his palm. Chris stretched back on the bed and then wrapped his oily palm and fingers around his hard cock. He pumped his hand over its length, coating it with the lubricant. Chris felt the familiar tingle near the tip of his penis as he ran his hand down his shaft. Chris started with long slow strokes that ran from his mushrooming cap to the base.\n\nHeather restarted her narration, \"Now every guy is a little bit different, but if you watch what Chris is doing you will find some movements you can incorporate into your own style. Notice that Chris wraps his entire hand around his cock, with his fingers running along the underside.\"\n\nFrom her ring side seat Calie's mouth hung open in near disbelief as she watched Chris jerk himself off in front of their small group. She had never seen a guy doing it to himself. Chris on the other hand had been looking forward to this bit of exhibitionism all week. He watched their eyes and could see that all three of them were looking at him work away on his boner. The room was perfectly silent except for the smacking sound the excess lubrication made each time Chris's hand changed direction.\n\nHeather gave a smile of satisfaction as she watched her two students take in the demonstration going on before them. Calie noticed his strokes shortened somewhat and his fingers squeezed around the tip. Chris brought his free hand down between his legs and lightly pinched and pulled at the loose folds of his scrotum. His hips began to thrust upward and his stokes became longer again. It looked as though he griped his member even tighter, and his hips pumped with so much force that his ass would come off the bed as he fucked his own hand.\n\nCalie was surprised at the force and intensity of Chris's solo session and could hear his air intake as he exerted himself. Any hand job she had given in the past seemed tame by comparison, and she would have been afraid of injuring her date if she had 'handled' him this forcefully. \n\n\"I think we'll stop there for now,\" Heather interrupted.\n\nChris's body relaxed as he stopped and moved his hands aside. His oil coated cock glistened as it lay against his belly.\n\n\"Calie, come over here beside Chris and let's see if we can work on your technique.\" she directed then added, \"And Allen, don't get too comfortable because you're going to be next on the demonstration docket.\" \n\nCalie was on her knees next to Chris on the bed astride his hips. Chris was lying back with his head propped up on two pillows, which afforded him an excellent view of Calie's training area. \n\nHeather retrieved the massage oil and poured a small amount onto Calie's hands. Calie rubbed her hands together and then took hold of his erection with her right hand. He felt very warm to the touch and her small hand did not surround his shaft as completely as his own. Calie tried to emulate what she had seen Chris do to please himself, and began with long strokes. His member was very stiff except for the soft pliable knob at the tip. She stared at his cock as she began establishing a rhythm. \n\nAllen's own erection had not abated through any of this as he was anxiously anticipating the same attention when it was his turn. Though he was as far from being gay as a guy could get, it was a strange turn on watching another guy's masturbation technique and then get to watch as Calie used him for practice.\n\nChris interrupted, \"Calie, that feels nice. But it would be even better if you increased the pressure some when you get near the tip of my cock. It would also be wonderful if you used your other hand to rub my chest, between my legs or my abs.\"\n\nIn response Calie squeezed her hand harder as she reached the end of her strokes. She placed her other hand on the abs she had admired earlier and explored them.\n\n\"Oh, yea, that's good Calie.\" he responded, \"I'm getting a much stronger sensation than I was before. Now you can vary your pace and technique some, but then return back to what you were just doing.\"\n\nCalie experimented, with different grips and pressure. Calie's feedback cues consisted of, Mmms and Ahhhs, when she did something he liked and silence when her efforts weren't so appreciated. After a succession of positive moans from Chris, Calie could feel his hips begin to buck as he began to push against her hand. Calie's small hand was beginning to tire, so she began using both hands to push back against Chris as he thrust upward to meet her grip. \n\n\"Okay Calie, I think you've both had enough,\" interrupted Heather one more time.\n\nHeather and Chris both knew that he was only moments from going over the top, but there was one more technique they both wanted to share with their students before Heather would allow Chris to achieve his release.\n\nHeather moved so that she sat opposite Calie with Chris in between them, \"I wanted to share one more technique with you Calie, and it may be new to Allen too. You heard Chris ask you to use your free hand for some additional fun. There is one area he didn't mention that can be very sensual for guys. Instead of laying flat, Chris is going to raise his knees up for me.\" Heather applied more massage oil to her hands and then reached in between his legs. \n\nCalie watched as Heather took two fingers and circled his anus. Chris gave a sigh and rolled his eyes.\n\nShe said, \"The first time I do this to a guy he often has at least a little trepidation, but afterward he is usually begging me for it. You can just do what I am doing now, which is just lightly teasing his opening. I find that if a guy is close to coming, this will often put him over the top, but what I like to do even more is use plenty of lubrication and then slowly work a finger in.\" Calie and Allen saw Heather worked her middle fingers pack and forth before it finally slipped into Chris. \"After I have it inside him, I push it up against his prostate by bending my finger, it's like fingering a girls G spot.\"\n\nCalie was amazed that Heather could talk about these things in such a matter of fact manner, like she was addressing the solution to a math problem. Heather started stroking Chris's neglected hard-on as she massaged his prostate.\n\n\"Oh, that feel fantastic,\" Chris said as he squirmed in pleasure under Heather's touch. \n\nHeather spoke to Calie, \"If you don't want to try this I understand, some girls find this uncomfortable or dirty but if you'd like to learn, now's the time.\" \n\nAfter seeing the obvious pleasure Chris was deriving from Heathers efforts, Calie figured it was worth at least a try. \"Okay, let me have a go at it.\"\n\nHeather removed her hands from Chris and reached for a towel to clean them off. \"Here, pour some more oil on your hands, and by the way Vaseline works even better. Take your fingers and just explore his opening a little and let him get used to your touch. Now take your middle finger and press it against the opening and just work it in slowly.\"\n\nCalie could feel resistance as she continued to work her finger into him but once she got part of it past the rim the resistance receded. Once her finger was all the way in, she started waving it like Heather had instructed.\n\n\"Oh, baby you've found it,\" gasped Chris. \n\n\"Just continue to wiggle your finger against his prostate but don't be rough.\" said Heather, \"Now I warn you, once this boy starts getting close to coming it can be a little bit of a challenge to keep your finger in him but its important to try and keep it in until he has finished. I know your hand was getting tired earlier, and this position can sometimes be a bit of a physical challenge, but most guys finish pretty quickly when I use this technique. For me, once I am massaging his prostate, I find it very sexy for the guy to take over jerking himself off while I concentrate on the rest of him. The icing on the cake is adding some verbal encouragement. Allen, this goes both ways, your date wants to hear how good she is making you feel.\" \n\nThe Heather looked at Chris and said, \"I think we should take advantage of having two ladies present. You have been such a patient boy I think I'll take on the duties of stroking your beautiful cock myself while Calie continues to finger that tight ass of yours.\"\n\nWith that said, Heather took hold of his erection with both hands and plunged them up and down over his cock. Chris was torn between prolonging the ecstasy of this double sensation and desperately wanting his release.\n\n\"I can feel you want to cum so bad baby,\" taunted Heather, \"so we're not going to stop until you can't take it anymore. I'm going to drain that gorgeous hard prick of yours and make a mess of everything in range of your splash, and there's not a damn thing you can do to stop me.\"\n\nChris moaned, \"A little harder Calie...that's it...Ohhh!\"\n\nAs Heather predicted, Chris started squirming and bucking under the dual onslaught of attention as Calie fought to keep her finger pressed in his ass. Chris pushed his cock upward to meet Heather's downward strokes as she squeezed her two hands tightly around it. Chris was almost out of control as the intensity of the sensations overtook him and his entire body thrust higher and faster.\n\n\"Oh yea, I'm coming!\" Chris shouted, but neither girl would let go of him as his hips bucked and the first stream of cum spewed from his cock. \n\nAllen watched in amazement as he saw another guy come for the first time. If you had told him a week ago that he was going sit by as two girls gave another guy a hand job, he never would have believed it. But now he not only knew it to be only too true, but he was next in line. He only hoped he didn't come from the excitement before his turn even started. Chris's first salvo went a couple feet in the air and landed back on his abs. The girls did not stop as Chris continued ejaculating all over his stomach.\n\nFinally he told the girls, \"Okay, enough.\" as he was totally drained.\n\nHeather leaned over and gave Chris a soft kiss on the lips, \"Thanks for being such a good volunteer.\"\n\nHeather grabbed the towel and wiped the puddle of cum off him, got off the bed and then heading for the bathroom to wash her hands, as Calie followed close behind.\n\nAs Heather ran the water and washed, Calie announced, \"That was some amazing hand job.\"\n\n\"Yes, but they can get a bit messy.\" Heather grinned.\n\nAs the girls came back to the bedroom, Chris had recovered enough that he was sitting up. \n\n\"I am going to quickly rinse off in the shower to get a little more respectable.\" Chris announced. \"Please continue and I'll be back in just a couple minutes.\"\n\nAllen sat in his robe at the edge of the bed as the girls made their way over to him. Heather gently disrobed him and Allen moved up on the bed, occupying the space Chris had before. Allen was nervous but excited. The last time he could remember feeling like this was the time he lost his virginity as a freshman in college. His cock was as stiff as he could ever remember and had been like that for a while.",
        "Heather sensed his nervousness and just calmly began to massage his chest, arms, and face. \"Just relax Allen, there's no hurry, were just going to use your big strong body and that long hard rod of yours to teach Calie a few things about what makes you feel good.\"\n\nHeather reached over and whispered in Calie's ear, \"Just start gently rubbing his feet or legs, I want him to calm down some, or this demonstration isn't going to last but about ten seconds.\"\n\nCalie followed her instructions and began to massage the bottom of Allen's feet. Heather continued to massage his arms. Allen closed his eyes and could feel the anxiety begin to subside. It felt like his heart rate was slowing and the gentle massage was distracting him from thinking about his aching shaft. It probably helped that Chris was not in the room too. It was hard not to feel like you were somehow competing when there were two guys vying for the attention of two beautiful girls. \n\nHeather leaned over and spoke softly to Allen, \"If you feel you are ready, I would like to continue.\" Allen nodded. \"I want you to show Calie how you like to jack off that awesome cock of yours, and make sure you leave something for us to practice on. Maybe you would like some massage oil or Vaseline?\"\n\nAllen sheepishly replied, \"Vaseline, if you have it.\"\n\nHeather reached over to the night stand and opened the top drawer. She took out a jar of Vaseline, popped off the top and held the open container out for Allen. He dipped a couple fingers into the jar and coated them with a generous amount of the lubricant.\n\nHeather laid the jar down beside Allen in case more was required later. Using his first two fingers and thumb, Allen coated his shaft with the Vaseline. It felt so good as he was finally allowed to touch himself. \n\nUnlike Chris who had used his entire hand or fist to masturbate, Allen preferred using his first two fingers and thumb. Allen really didn't know why, it just felt natural to him and it was the way he had been doing it for as long as had been doing it. \n\nCalie watched as Allen pleasured himself. While his grip didn't change, his stroke did. He moved from long smooth strokes and started incorporating a quick little back and forth jerking action each time he passed over the tip. Calie could see his tight smooth and freshly shaven nut-sack jerk in response to each stroke as it reached its conclusion. Allen's other hand pressed on his pubes and abs. As Calie looked up at Allen, she found his eyes were closed and his face had a look of contentment.\n\nAllen was enjoying himself as his nervousness was replaced by the pleasure he was receiving by his own hand. He was in no hurry but he could feel the beginnings of what he knew would quickly become the point of no return.\n\nWith that, Allen released his cock and opened his eyes and said, \"I think I better stop now.\" \n\nCalie spoke first, \"That was awesome Allen, you're approach is totally different than Chris's and I want to give it a try.\"\n\n\"That'll be just fine Calie,\" said Heather, \"but I want to try a little experiment first. Plus I think it will be fun for Allen too. I have a little hand towel here that I want to use to cover his eyes. We'll take turns trying out our techniques on him, but he won't know who it is.\" \n\nThen turning her attention back to Allen, she said, \"I want to hear lots of feed back from you on what feels good, great or just so-so.\"\n\nAllen popped a big grin and said, \"That sounds great to me.\" \n\nHeather folded the hand towel in half and placed it over Allen's eyes. \n\n\"Can you see anything?\" Heather queried.\n\n\"No, it's totally dark.\" replied Allen.\n\n\"Okay then we'll get started.\" said Heather as she dipped her fingers into the Vaseline jar.\n\nHeather took his erection and held it in her hand for a few moments as she familiarized herself with its size, rigidity and texture. His shaft was very smooth and she once again admired the results of her handiwork from the trim she had given him in the bathroom. Next she gripped it between her thumb and fingers the way Allen had done and stroked him. She then tried to incorporate the little jerking motion he had used.\n\n\"Oh, that feels good, but you need to make that little extra movement closer to the tip,\" said Allen.\n\nHeather tried again, following Allen's suggestion. \n\n\"Yes, that's more like it.\" he stated.\n\nAs Heather continued to stroke him, the bathroom door opened and Chris, wearing his robe, stepped back into the bedroom and sat on the edge of the bed.\n\nAllen wondered if it was Calie or Heather who was jerking him off. \"You can do it a little harder if you want...yes that's it,\" he said, as Heather responded to his request.\n\nAfter a few more strokes, Heather stopped and removed her hand as Calie got ready to take over. Calie started by lightly passing her fingers over Allen's balls and tugged at his tight sack. She ran her hands up to his chest and then down over his stomach and then placed his member between her two palms like a hot dog in a bun. Calie then used the same technique with her thumb and fingers. As each stroke reached his cut knob she squeezed harder and made a quick downward jerk that pushed against his stiff shaft and caused his balls to shake. \n\nCalie repeated it five or six times before Allen responded, \"Oh, I am in ecstasy, you need to patent that move, immediately.\"\n\nAs Calie blushed and cracked a wide grin at the compliment and she continued her efforts anew. Allen's breathing became ragged and his legs and hands stiffened as he felt the sensations build. Heather motioned for her to stop and she traded off with Calie again.\n\nThis time she started by fondling his balls and then lightly raked her fingers between his legs. Next she surrounded the top of his shaft with her small hand and pulled and milked his soft helmet shaped tip. Heather took her other hand and dipped her fingers into the Vaseline jar. She brought her hand down to his ass and played around his anus. \n\nAllen could feel his ass involuntarily tighten as she felt for his opening. That hand was sure to be Heather's probing the entrance to his anus. It sent a tingle right up the length of his cock. Allen felt himself squirming against her finger as she tried to work it past his entrance. Heather would not be denied and continued to wiggle, twist, and press it against him.\n\nChris was enjoying the entire show. He was a little bi-curious and loved these training sessions. It was obvious Allen had never had this kind of treatment before and could tell he had the same love/hate reaction that many guys experienced when partaking of anything that involved having someone, even a girl, stick something in their ass. \n\nAllen felt her finger finally enter him and it was less uncomfortable as she worked her finger deeper. And then he felt it. Heather bent her finger and pressed it against his prostate and instead of a tingle, it felt like a bolt of electricity shoot up his shaft to the very tip. \n\n\"Oh my God,\" blurted out Allen.\n\nHeather continued to work her finger against him, and she knew Allen would not last long. \nChris moved in closer and put a finger to his lips motioning to Heather and Calie to be silent. As Heather stroked Allen, Chris moved his hand next to hers and then took over for her. Calie was a little shocked, though Heather never missed a beat. Calie watched as Chris's large hand fully engulfed Allen's erection. \n\nAllen felt almost overwhelmed by the sensations. He felt a change when, unknown to him, Chris had taken over handling his cock. He though maybe one of the girls was using two hands or something. Chris used long powerful strokes as he felt the shape and hardness of another man's cock for the first time. Allen's hips began to thrust up to meet him and they could all tell Allen was getting close. Calie looked over at Chris, and he motioned for her to resume her place. Calie gladly took over again and applied her \"patented\" technique to her fellow student. \n\n\"Don't stop...Oh that feels so good,\" pleaded Allen as he could feel his climax coming.\n\nHeather pressed down harder as she struggled to keep her finger inside him. Calie never let up and Chris just sat back and waited for the explosion that was about to happen. With one last jerk of his cock Allen erupted. Cum seemed to fly everywhere, and it hit Calie's robe and she even took one in the eye. Allen felt wave after wave of pleasure as he made the most of his release. After a minute he stopped trembling and lay spent on the bed. \n\nCalie took the hand towel covering Allen's eyes and used it to clean up. As Calie wiped cum from her face Allen said, \"Sorry about that.\" \n\n\"It wasn't your fault. I was the one holding onto the hose.\" Calie laughed.\n\nAllen sat up and Heather handed him his robe back. \n\nChris was the first to ask, \"So Allen, what did you think about the prostrate massage?\"\n\n\"I think I could get used to it,\" he said, \"I've never had an orgasm that felt quite like that. The blindfold thing was kind of a neat idea too.\" \n\n\"I guess that part of the lesson was a success since Calie now has a patent on one of her hand job techniques,\" said Heather.\n\nAllen looked at the group and said, \"Now, one of the hand jobs I got was totally different than the others. It felt like a much bigger grip...Was that you Chris?\"\n\nChris turned bright red, \"I thought Heather said no peeking.\"\n\n\"I didn't peak,\" said Allen, \"I thought maybe one of the girls was using both hand, but when we were done and I saw you were back in the room I had second thoughts of it feeling too much like my own hand.\"\n\n\"I'm sorry, I hope I didn't embarrass you,\" said Chris, \"I felt too left out just standing their and watching the whole time.\"\n\n\"Just make sure it doesn't leave this room.\" Allen replied with a forgiving smile. \"I suppose I should be flattered that my cock was that irresistible.\"\n\nHeather, Calie and Chris all laughed and thanked him for being such a good sport. \n\n*******\n\nChris walked over to the dresser where Calie had failed to notice previously there were some soda cans, an ice bucket, and some glasses set what looked like in reserve. \n\n\"If anybody wants something to drink, just help yourself,\" he said. \n\nCalie thought that sounded like a good idea and for a few minutes, all four of them stood and sat around in their robes enjoying a cold drink.\n\n\"Is that it for the lessons,\" Allen inquired, \"or if not, what's next?\" \n\n\"It's actually time for us to learn a little bit more about girls in general by learning a few things about Heather and Calie specifically.\" Chris replied.\n\n\"Now, that sounds like it could be fun.\" Allen replied.\n\n\"Alright Calie,\" began Heather, \"I guess it's time for us gals to do a little show and tell.\"\n\nShe finished her drink and headed back to the bed, then said, \"If I were asked to name one thing my best sex dates all have in common, it would be great foreplay. Most women you go out with are not going to add you to their, 'my best sex ever' list if you are trying to stick your dick in them two minutes you get back to whosever's room.\" \n\nChris continued with the lesson by adding, \"Allen, while there's a lot of excitement being with a girl for the first time, one disadvantage is you really have no idea what does and doesn't turn her on. Most girls I've been with really like to kiss. However, I dated one girl in the club that wasn't the least bit interested in any more kissing than what it took to get us started. Many girls really like oral sex, but don't feel comfortable asking you for it on a first date. I had one date that even had an orgasm just from stimulating her breasts, then two others who really didn't seem to find it all that erotic. If your partner's moaning in ecstasy, it's a pretty safe bet you're doing okay but if they aren't, you need to move on to something else. Or, you can just ask them, but be thoughtful and tactful about it.\"\n\nCalie and Allen looked on as Heather removed her robe and lay down on the bed. Chris followed her lead and lay down naked beside to her.\n\nHeather said, \"Often I find that once my partner and I have undressed and moved onto the bed, I just enjoy the feel of his body against mine for several or many minutes.\"\n\nChris and Heather lay on their sides facing each other and scooted toward the other until their bodies were touching. They both enjoyed the contact of skin on skin, her large breasts against his bare chest. Chris wrapped a hand around Heather and ran it over her smooth back and down to her soft naked bottom. Heather's fingers danced through Chris's hair and over his ears. She reached with her lips to find his, and they began caressing each other inside the sensuality that the kiss had produced. His hand stroked her side and hips and then brushed over the edge of her breast. \n\nHeather then brought the action to a halt and explained, \"I really enjoy the way Chris is touching me, and it allows me to feel warm, safe and comfortable with my partner. But at the same time I find it very arousing and it's a good lead into some more aggressive levels of foreplay.\" \n\nAs Heather sat up and wrapped her robe back around herself, Chris spoke up, \"Calie and Allen, this class is really for you two and I want to make sure we go over any area of concern about foreplay. Please, now is the time to ask if you have questions.\"\n\nHeather addressed Allen, \"Do you have any questions about a woman's breasts in general or breast play itself? How about fingering your date?\"\n\nAllen hesitated for a moment and then asked softly, \"When I finger a girl, I'm not sure I really know where her G-spot is and I'm not always sure if I should finger her clit directly or not?\" \n\n\"Okay those are good questions.\" affirmed Heather, \"Calie, would you come over here and lie down on the bed please?\"\n\nCalie felt a bit nervous as she tried to anticipate what Heather most likely had in store for her. Chris got off the bed while Calie took his place. Heather motioned for Allen to join them and positioned him in the middle of the bed between her and Calie, making matters even more curious for her. \n\nHeather spoke, \"You asked about fingering the clit directly. The honest answer is, it all depends on the girl the clit is attached to. I have a couple of friends that tell me they never like direct stimulation. For those girls, but those girls only, it's too sensitive an action and can be almost painful sometimes. But most other girls, and I'm one of these, enjoy direct stimulation, but not too much too soon.\"\n\nAs Heather spoke, she raised her knees and opened her legs affording Allen his first full view of her pussy. Heather grazed her hands over her bush, down her hips and then over to her soft exposed inner thighs. A tingle started from within as her body reacted to the intimate touching and the excitement of exhibiting her cunt to Allen and Calie. \n\nHeather demonstrated as she continued, \"I like to have my date start by just feeling around my pussy first. My legs, my tummy, my bush, and my ass all want some attention. Just a light touch here and there is nice. Then I love it when they begin to teasingly explore my pussy lips. After a little while, they can go back to touching me elsewhere, just to really entice me, like my nipples, or thighs.\"\n\nAllen watched with rapt attention as Heather explored herself. He could feel his cock begin to stiffen once again and poke at his robe.\n\n\"I can feel myself start to get wet as I wait for a hand to return to my aching cunt.\" she said.\n\nHeather reached out for Allen's hand and guided it to her pussy lips. She held her hand over his and showed him where and how hard to press. She pushed on his middle finger, pressing it into the slit between her moistened lips and guided it to the hood of her clit. Then she held his finger, using it as her own to massage around it. Finally she encouraged his middle finger past her wet folds and into her vagina.\n\n\"Oh yeah, now push your finger in a little further, yeah, that's it, and wave it like you are beckoning me. You know, telling me to 'come here'.\" she said.\n\nAs Allen felt his finger slip inside her and he willingly did as he was instructed, she added, \"Move just a little deeper. Ohh, yeah,\" With a sharp intake of air Heather cried out, \"that's it! That's where 'my', (gasp), G-spot, is.\"\n\nAgain Calie felt a mixture of competing emotions. She was uncomfortable watching her friend Heather masturbate right in front of her, but at the same time she was a little jealous that Allen was pleasuring Heather and not her. It was becoming impossible to treat this as just another academic exercise.\n\nWatching Heather was quickly becoming a vicarious experience. Calie felt her body begin responding to each stroke, touch and caress as though it were happening to her. Certain areas of her body tingled, her nipples were erect and she could feel the wetness growing between her legs. \n\nWith Allen's finger pressed inside her, Heather continued her instruction, \"Keep your finger right there and watch me.\"\n\nHeather used her own fingers to circle around her clit. As the excitement in the room had begun to build, her clitoris had responded and started to swell. It was obvious to everyone it would soon demand a certain amount of direct attention. She closed her eyes and concentrated on fingering herself. Allen could feel Heather's vagina contract and relax around is finger as he watched her. Her legs squeezed against his arm and she began to moan. \n\nIt took Allen by surprise when Heather suddenly stopped, grabbed his free hand by the wrist and pulled it over to her sex too. Like his other hand, she treated it like a puppet. She squeezed Allen's index and middle finger between her thumb and finger and placed his finger tips on the hood of her clit. She directed his finger with ever increasing pressure back and forth and Allen could feel her clit respond under her directed touch. Heather guided his fingers under her loose protective covering and directly onto her wet swollen knob. \n\nAllen felt the contractions increase as he continued fingering her G-spot. Heather's cries and moans intensified and her hips and legs began to writhe. As Heather released him from her grip she instructed, \"Don't Stop.\"\n\nAllen kept the pressure where she had directed him and moved his fingers back and forth, like he was using an eraser head to rub out a mistake. Calie, Allen and Chris all watched the 'show' as Heather's whole body began to shake and spasm. As Heather was racked by the orgasm that swept over her, Allen struggled to stay with her. Calie was amazed by the uncontrolled power. She had never seen another woman orgasm before, and it was both exciting at the same time it was embarrassing thinking ahead that she might get so out of control herself.\n\nHeather settled down and Allen lay next to her. Calie could see perspiration on Heather's face and her chest was still rising more quickly than normal from her 'workout'. In a minute, Heather began to calm back down and she looked up at Allen. \n\n\"You did a good job following directions,\" she told him in an exhausted but satisfied voice. Then she concluded, \"Boy that felt good.\" \n\n\"Allen, take this and clean off your hands.\" said Chris, offering him a cloth, \"Then why don't you and Calie cuddle together and get comfortable with each other on the bed.\"\n\nHeather got up and headed for the bathroom while Allen rolled over to face Calie, who was already waiting for him.\n\n\"I've never been in bed with two woman before, it feels just a little awkward.\" said Allen.\n\n\"That's okay, I know how you feel,\" replied Calie. \"Thanks for doing this class with me. I think it's been a lot better sharing it with someone.\"\n\nAllen replied, \"I'm glad we could do it together too and if you wouldn't object I would love to pick your name sometime for a normal club date with just the two of us.\"",
        "\"I think I would like that,\" responded Calie as she scooted over and pressed against his body. Allen responded by wrapping his arms around her and kissing her. Their legs entwined and they enjoyed letting their nakedness connect. Allen could not keep his hands still as he let them wander from one area of her body to another. Every part of her that was in easy reach, her hair, neck, back, fanny and hips all felt his caress. Calie enjoyed being touched all over and when she felt him gently nudge her shoulder, she responded by rolling from her side onto her back, giving Allen more locations to explore. \n\nAllen gazed at her amazing breasts, both of which were now within easy reach. Calie felt Allen's hand explore every inch. From her soft nipple capped globes, past her smooth flat teenage tummy then down between her thighs to the lips of her womanhood. He had wanted to get his hands on all of them, seemingly all at once, ever since their first brief encounter earlier that afternoon. He moved back up to her breasts and kneaded them softly, enjoying their uniquely feminine qualities.\n\nCalie had been on a roller coaster ride of sensual emotions all afternoon. She had been a kisser, a watcher, a stripper, a teaser, a participator, and a voyeur. Now she felt an overwhelming need to be touched, stroked and hopefully soon, satisfied. Her snatch had an 'itch' that had needed scratching for the past hour. She welcomed Allen's attention and was craving more.\n\nShe felt him tug and tease at her protruding nipples and it sent tingles throughout her entire body. Though it had never happened, Calie thought one day she might end up being one of those girls that Chris spoke about that have orgasms when a guy plays with their breasts. Calie traced her hands down Allen's chest until she found his erection waiting for her. She wrapped one hand around it while the other cupped his balls. \n\n\"I love your breasts, and your nipples are so hard,\" Allen moaned. \n\n\"Your hand's feel so good, you're making me so wet,\" Calie cooed.\n\nCalie watched Allen raise himself up, lean over, and begin sucking her tit into his hungry mouth. She felt his tongue swirl over and all around her nipple and it sent shockwaves through her whole being. As he sucked on her, she felt his hand move down over her tummy and trailing lower to rest once again on her pubic mound and his fingers began playing through her bush.\n\nAs Calie leaned forward slightly she whispered, \"Do you think you can find my G-spot?\" \n\nThat brought a halt to his suckling of her breast, and he said, \"That's an assignment I have really been looking forward to.\"\n\nAllen sat up further, allowing him to gaze over Calie's petite body from head to toe. He teased her by stroking her thighs and then moved onto her outer pussy lips. He could smell the aroma coming from her wetness and felt it as his fingers traced over her entrance. He circled his fingers around and around her pussy lips and she squirmed as he started to gently tease her folds apart.\n\nShe tensed when his fingers ran down her slick slit and when he brushed her clit for the first time her body flinched. His finger swirled around her tight opening and then she felt them penetrate her. Allen moved his finger deep inside her like he had for Heather. \n\nCalie gasped as Allen pressed his finger into her spot. She felt suddenly like she needed to pee very badly, but as Allen continued to probe her, the entire area tingled with the most delicious sensation. Calie moaned loudly, letting Allen know he had hit his mark. \n\nHeather had returned, and Chris stood behind her as they watched their two students apply everything they had learned. Chris yearned to touch Calie's ripe body for himself, but he skillfully contained himself. Heather too, was turned on watching Allen ravish her friend. But she contented herself by pushing back against Chris as she felt his erection slowly grind against her ass. \n\nAllen leaned over and placed kisses on Calie's tummy and then looked up at her with a slight grin and asked, \"May I taste your sweet pussy?\" \n\n'Damn good question', Chris thought to himself. 'Well done, grasshopper,' he chuckled to himself.\n\n\"I though you'd never ask,\" responded Calie enthusiastically.\n\nCalie watched as Allen's kisses headed south. He strategically placed them all over her bush, her thighs and finally just outside the lips of her pussy. She felt his tongue run over her slit and then wiggle under her hood and land on her clit. She ached with delight as he flicked his tongue tip over her clit and inhaled her erotic feminine aroma. Calie couldn't help it as her hips and legs contracted in response. As he continued, Calie felt Allen slide a couple of fingers back inside her and press against her spot. \n\nHeather could feel Chris push against her as he slid up and down dry humping her ass cheeks with his hard prick. Chris had one hand on her abs holding her tight while the other dipped into her wet snatch to frig her. Heather let him have his way with her as she watched Allen feast on Calie's muff.\n\nCalie couldn't stand much more as her body involuntarily thrust her cunt against Allen's face. She felt him pull her clit into his mouth and suck on it as his tongue continued to dart across it. Calie's used her own hand to fondle her sensitive nipples sending even more jolts of pleasure throughout her whole body. \n\n\"That's it Allen, Ahhhh!\" Calie said as Allen struggled against Calie's suffocating spasms. Calie screamed as she felt the climax flow then explode from her clit, and her legs shook from the impact of the orgasmic eruption. But Allen never let up as she writhed in ecstasy, hoping to keep her inside the throes of lust and passion.\n\nAllen and Calie were oblivious to their instructors as Chris fingered Heather and brought her to the edge of coming. Heather took charge and shoved her own fingers into action frantically grinding into her clit as she watched Calie climax. She heard Chris moan in her ear followed by his warm cum spewing out against her back and dribbling down her ass, and Heather's legs shook just short of collapse as the intense pleasure hit her.\n\nOnly when Allen felt the vice like grip of Calie's legs loosen and relax did he relent. He fell back beside her and Calie curled up around him with her head on his chest and an arm draped across him in near total bliss. \"Oh, that was so wonderful. Thank you.\" Calie said as she hugged him.\n\nHeather leaned back and gave Chris a kiss. \"You naughty boy,\" she said grinning at him.\n\nAs Calie and Allen lay together, Heather made her way to the head of the bed and leaning over, spoke softly to them so as to not spoil the moment. \"That's all of this session's lessons. You guys were great and I hope this will help you on future dates. Chris and I are going to get dressed and go. Take your time and just leave when you are ready.\"\n\nChris wiped the little mess he had made off Heather, and they both gathered up their cloths, got dressed and slipped out as quietly as they could. \n\nCalie and Allen lay in each other's arms for a short while enjoying the intimate moment together as they snuggled in the big warm bed, with the quiet music in the background and the soft romantic lighting provided by the burning candles. \n\n\"Thanks for being a part of this wonderful and crazy day Allen,\" said Calie. \"I feel a little silly saying this after all we have been through together this afternoon, but could you make love to me? I would really like to feel you inside of me.\"\n\nAllen had never felt so wanted. There wasn't anything in the world Allen wanted more right then than to make love to this petite coed. \"You don't know how much I love hearing those words come from you.\"\n\nAllen sat up while Calie lay on her back. Allen moved between her legs as Calie spread her knees apart for him. She looked down at his proud boner that was ready to enter her. Allen eased himself down between her legs and placed his soft tip near her entrance. Calie guided his cock to the spot and then wrapped her hands around his ass as he entered her for the first time. She held him there for a moment, getting used to his size. Then she felt him rise up and thrust gently into her again, then again. \n\nShe relished the feel of his member against the walls of her pussy as she enjoyed the feeling of him sliding in and out of her womanhood. Her hands roamed over his smooth back, through his hair and then back down to his ass pulling him back inside herself as Allen enjoyed the inward thrust as he fucked her. \n\nCalie slid one hand between them and found enough space to wrap her finger and thumb in a ring around his cock. Calie wanted to feel how hard he was and touch his penis as it trekked in and out of her wet pussy.\n\nAllen's pace increased and Calie loved the long powerful strokes sliding against her clit. \n\n\"You're making me crazy with that gorgeous cock of yours,\" she purred. \n\n\"You feel so good Calie, I love being inside you.\" \n\nHe reached for her breast as he made love to her and teased her nipples with his fingers. She kissed his cheeks and then nibbled at his ear. They got into a sensuous rhythm, and for a while they just enjoyed the uncomplicated pleasure of being one. She held onto his hips and felt his body on top of hers while they both delighted in the pleasing sensation the wet friction between their two young bodies generated. \n\nShe could feel herself getting close and her hips began pushing back to meet his strokes. He was trying desperately to hold back as Calie grabbed at his ass trying to punctuate their rhythm. She started to moan and her body began to shake as the orgasm built up inside her. Her moves were almost frantic as he started to slam into her and their bodies slapped together.\n\n\"I'm coming!\" Allen yelled as he pushed deeply inside her once more. She could feel him ejaculate inside her as she continued coming herself. He continued to slide in and out, draining himself of all he had to give her, and his movements became gentler as they both started descending down from their plateau to which they had climbed together. \n\nCalie held Allen tight, unmoving, not wanting for the moment to end. "
    ],
    "authorname": "RaleighBoy",
    "tags": [
        "college",
        "coed",
        "group",
        "virgin",
        "hand job",
        "masturbation",
        "voyer",
        "dorm",
        "club"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/sex-club-for-college-students-ch-03"
}