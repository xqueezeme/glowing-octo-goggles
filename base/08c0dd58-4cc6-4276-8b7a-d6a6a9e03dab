{
    "title": "Lucky Bastard Ch. 02",
    "pages": [
        "So something tells me that the first chapter of this was pretty well accepted. If that's the case I only hope i can live up to expectations. Thanks to my new buddy quietmohagonystorm for helping with this one. Well kids this is just a small part 2 and before you ask if you like this I have part three in the brain pan. Read it, Love it, tell a buddy about it, and above all enjoy the show!\n\n*\n\nAs his eyes opened, Leo could barely make heads or tails of where he was. His minds' focus took several long seconds to get and soon he was aware that he was on his side in his bed. He felt warmth escaping his body as he sat up and looked around. He was still nude and confused whether what he thought had happened really did. His focus came back and he looked around his bedroom to see he was all alone.\n\n\"What a fucking dream,\" he mumbled to himself as he sat up in his bed.\n\nHis mind was filled with the images from last night, and as he saw no clothes in the bedroom he could only think it was a dream. He sat up and stretched loudly and heard many of his stiff joints crack and pop announcing he was awake to all. Leo was just about to get up when something happened that made him stay in bed. Myra's head peeked in the door and suddenly his eyes focused on her smiling face. A very sudden and amazing thought rang out in his head.\n\n\"It wasn't a dream after all,\" he said and an intrigued smile was on his face.\n\n\"Nope. No dream sweetie,\" Myra said cutely as she walked into his room.\n\nLeo watched transfixed as the beautiful woman walked into his room. Her sexy dark skin was on full display in the morning light. Her skin was flawless and what she was wearing made his eyes widen. She was dressed in only one of his white striped dress shirts. It went down to her mid thigh as he was taller than her by a few inches. He admired how good she made the shirt look and as he watched her as she sauntered to him and crawled onto the bed. \n\nLike a tigress, Myra stalked towards him on her hands and knees. As she got to his lap she straddled it and put her arms around his neck. Her sweet lips met his and she gave him a full good morning kiss. Leo's hands found her lower back and she moaned disappointingly. Her hands left his neck and found his. She took them off her hips and put them on her ass and smiled into his face.\n\n\"That's better,\" she said playfully and kissed him again.\n\nLeo couldn't deny what she wanted and squeezed her ass firmly making her giggle into the kiss. The playfulness in the kiss was fun, but under it he sensed something else he couldn't put a finger on. Myra broke it after a long minute and her radiant smile blinded him a bit.\n\n\"So did you sleep well baby?\" she asked rubbing her nose along his.\n\n\"Best I have in a long time,\" Leo honestly replied.\n\nHe couldn't remember when he had ever slept so soundly in his life. The feeling of the two women snuggled into him was all the blanket he could ever need. The way they held him and each other as they slept was something that he couldn't, or didn't want, to get from his mind. Her cute face was inches from his and she was gazing into his eyes with her own beautiful ones. She leaned into his ear and whispered softly.\n\n\"I am still tingling from last night baby. Maybe if we eat something, another go could be in the offering?\" she asked sweetly.\n\nLeo's eyes widened at that notion and he smiled darkly as he leaned into hers.\n\n\"Absolutely,\" he said huskily and nipped her ear lobe.\n\nMyra giggled sweetly and bounced eagerly from his lap. She got off his bed and held out her hands to him. Leo took them and she helped him from the bed. She led him to the bathroom and slapped his naked ass as he went in and he smirked at that. Leo walked to the sink and turned on the faucet. He put his hands under the cold water and splashed his face. He rubbed the sleep from his eyes and looked in the mirror. Myra was gone and he was alone again. Leo picked up his toothbrush and brushed his teeth.\n\nIt took him a few minutes to freshen up, but when he was done he found a pair of gym shorts on the edge of the bed that wasn't there before. He put them on and tied the tie as he walked to the living room. As he walked in his nose alerted him to the smells of breakfast foods being cooked. A thankful look passed his eyes as he walked to the kitchen and saw the two women in it. Tamika was wearing a dress shirt that was light blue and she looked adorable in it. Both had a wild sexy appeal to the way they wore the shirts that made his eyes sparkle.\n\nTamika was at the stove cooking something and Myra was chopping something next to her. He stood back and watched them work for a moment then made his presence known.\n\n\"Need any help?\" Leo offered.\n\nTamika smiled over her shoulder at him and the look in her eyes was a wild one.\n\n\"Maybe,\" she teased and her accent came through.\n\n\"And what would that maybe be?\" Leo asked and walked towards her.\n\nShe coyly curled her index finger to him as he walked towards her. When he got to her, Tamika's hand shot out and grabbed him by the draw string pulling him to her body. Her lips met his with a sweet kiss that rocked him a bit. She turned fully into his body and wrapped her arms around his waist as his arms went around her back. She teased his tongue ever so lovingly as she kissed him. As it broke she nipped his lips one last time. \n\n\"Morning sweetie,\" she chirped cutely.\n\n\"Good morning to you beautiful,\" he said smiling at her.\n\n\"Aww...you said I'm beautiful,\" Tamika said and her eyes were melting.\n\n\"Well you are, the both of you,\" he said honestly.\n\n\"And you are a sweet talker,\" Myra said as she came up from behind him and hugged him.\n\nLeo felt both of their bodies surrounding him and his eyes closed. The feeling of it was something that he never wanted to end. The firm body of Myra behind him and the soft body of Tamika in front of him made his mind wander as they held him. As they held him he felt Myra's lips on his neck and Tamika's find the other side. He sighed as they kissed and licked his neck teasingly. It lasted for a brief moment then it stopped and both women had his face turning to and fro as they took turns kissing his lips and each others. Leo felt the energy building, but it stopped as they stepped back and went back to the stove and cutting board. \n\nLeo stood in place breathing shallow breaths trying to get his mind back in order. The girls giggled and finished what they had started quickly. Leo was amazed that they had three plates of food and were taking them out to the living room. He watched as they set them on the table and Myra came back to the kitchen. She found three glasses and took them to the table as Tamika went to the fridge and got a pitcher of juice. As Tamika got it she hooked her arm around Leo's elbow and led him to the couch. Once there Myra shoved him to the corner and handed him a plate. She got one for herself and sat in his lap while Tamika got hers and got in her lap. The ladies wiggled around a bit until they were all good then leaned back into Leo as they turned on the TV.\n\nMyra had her head on his chest as they flipped through the channels absently. Nothing good was on and as she went on she found the premium channels. It took a few minutes of surfing, but they found a good movie to watch. As they watched it they ate their breakfasts. Myra occasionally would give Tamika a piece of fruit and Leo got to watch as Tamika return the favor. The two of them were something amazing. He could see why they were lovers. They seemed so comfortable with each other and it showed in the simple gestures of feeding each other. The fact that they were so eager to please each other and him was something that he had never known before. A curiosity came to Leo's mind as they ate and he decided to take a risk and sate it.\n\n\"So what brought us to this point?\" he asked seriously.\n\nMyra leaned back into him and purred, \"Your cute.\"\n\nLeo smiled at that comment and kissed the top of her head. She moaned happily and shifted in his lap so he felt her ass perfectly. Myra giggled as his hand went across her tummy and Tamika leaned closer to her as well. Myra saw Tamika's hungry eyes and she invited her up to meet her face. The loving kiss they shared made Leo blow out a slow breath. The sheer passion in it for each other made his mind swim in circles of the basic question he had asked since the time he met them.\n\n\"How could I have been so lucky?\" resonated like a Swiss watch alarm.\n\nAs the kiss broke Myra looked to Tamika and raised her eyes questioningly. Tamika bit her lip and nodded her head.\n\n\"Well the real reason is simple. We have been lovers for a few years now and every now and then like to have fun. As it is a special time for us we decided to have some real fun and found you,\" Myra said honestly.\n\n\"I see,\" Leo said nodding his head, \"I was just a lucky guy in the right place.\"\n\nTamika giggled at that and looked to his eyes.\n\n\"No sweetie. We knew of you through your friend Alan. He mentioned that he was bringing you to the club a few days ago,\" She said.\n\n\"See Alan has kept hitting on us for months now. Every damn day he has something to say about him setting us right and so on. He just needs to shut his face and find someone who can stand listening to his ass more than he loves to listen to himself,\" she said dismissively.\n\n\"He does like to talk,\" Leo said chuckling.\n\n\"Too fucking much,\" Myra spat.\n\n\"Now that just means he pissed you off somehow,\" Leo teased and kissed her ear.\n\n\"Two weeks ago he grabbed my ass. Kept saying he wanted to see it jiggle,\" Myra said angrily.\n\n\"Now that I didn't know,\" Leo said shocked.\n\n\"Oh don't worry, I took care of him with a left hook. I don't mind people admiring, just keep your hands to yourself,\" Myra said firmly.\n\nThe glimmer in her eyes came to life as she looked at Leo suggestively.\n\n\"Unless I ask,\" she purred and ground her ass into him.\n\nLeo sighed happily as she ground into him and made him realize how hot she was. He felt a blazing heat in her crotch that made his dick start to rise. Leo's hand traveled up her tummy to her pert breast and squeezed it firmly making her sigh. Tamika saw it and joined in the fun. She loved playing with Myra's sexy body and got to have her fun by slipping her hand behind her and teasing Myra's soft pussy lips.\n\nMyra gasped loudly as Tamika's fingers found her clit ring and teased it ever so gently. Her legs opened wider for her lover and Tamika didn't need to be told any more as she slipped a finger deep inside of her lover's hungry hole. As she did Leo got a creative idea.\n\n\"So how did you two become an item if I may ask?\" he whispered into her ear as he tweaked her nipple and teased the ring through it.\n\nMyra shuddered and sighed as he did and tried to focus, but couldn't. She was moaning softly as her lover's fingers found her spots and teased them mercilessly.\n\n\"We met in college,\" Tamika said sweetly as she turned in Myra's lap to face her more fully and give her more attention.\n\nHer tongue licked up Myra's thigh and after she did she continued, \"I had just gotten out of a really bad break up and was wandering lost and alone. Then one happy day I met my baby girl,\" she purred sweetly. \n\nMyra arched into Leo's body as the fingers found her most sensitive spot and her ass left his lap. Leo grinned as she did and bit her neck as she came back down. Myra felt the bite and exhaled throatily as she felt her legs start to shake a bit.\n\n\"She met me while I was down. It was the best moment of my life when she kissed me after our first date. Once we became an item my life got a whole lot better. She loves me so much I don't ever want to let her go,\" Tamika said sweetly as she sank between her lovers legs and lapped at her clit ring.\n\nMyra arched into Tamika's eager tongue and soon Leo found himself front row center to a hell of a show. Tamika madly licked and nibbled Myra's clit ring and before long Myra's legs began to wrap around her neck. Leo had a smirk that wouldn't stop as he began to play with her nipples as Tamika made her legs shake hard. It took four buttons for the shirt to be opened and expose Myra's sweet flesh. Leo took a second to admire her beautiful skin and lightly brushed his fingers along it making her shudder into him. Leo's teeth sank into her shoulder and Myra squealed as he did it in unison to Tamika biting her fat lips.\n\nLeo and Tamika began to mercilessly make Myra squirm. She was tossing her head from side to side as Leo's fingers twisted and tugged on her rings making her moan as Tamika bit and licked her lips and clit. Myra had never felt so alive as she did at that very moment. Her eyes rolled into her head as the teasing and sweet torture continued. Tamika sensed her getting close and decided to go further.\n\n\"Did you like last night baby girl?\" she teased as she licked her ring and blew on it.\n\n\"Oh god yes!\" Myra hissed.\n\n\"Did you like feeling his big dick deep inside of you?\" she purred and licked again making Myra arch up.\n\n\"YES!\" Myra squealed.\n\n\"Do you need it again baby girl?\" she purred sweetly as she rubbed her face on Myra's thighs.\n\nMyra couldn't answer as her throat was busy making gasping noises. She wanted to answer, but all she could get out was a mewling noise as her head fell back on Leo's chest.\n\n\"Leo, my baby girl needs you again,\" Tamika said sweetly.\n\n\"Does she now?\" Leo teased as he shifted under Myra's ass.\n\nMyra moaned loudly as she felt his rock hard cock slip between her ass cheeks. Tamika saw the bulge and she was bright eyed. She had enjoyed watching Myra last night. Seeing her lover doing what she was doing made her all sorts of hot and bothered. Tamika wanted Myra to enjoy the day as much as she was going to, and giving her Leo first was the idea. Tamika looked down at the draw string and smiled devilishly as she reached her hand to it.\n\nLeo felt the perfect ass grind on him and suddenly he felt the draw string on his shorts being pulled. He looked down to see Tamika with it in her eager hands and soon his shorts had a open flap. The cool air mixed with the blazing heat of Myra's slickening hole made him shudder as Tamika's cool hand found his cock and began to aim it where it was begging to go. \n\nMyra felt the blunt head in her hole and threw her head back. Her long hair went over Leo's shoulder and Leo sighed as he felt her press into him. She began to feel him start to fill her up when suddenly all their eyes were on his door as an obnoxious pounding was going on. Leo's eyes widened in absolute shock as he recognized the pounding.\n\n\"What the fucking shit?!\" he exclaimed.\n\nMyra looked at the door and Tamika peeked over the couch at it.\n\n\"Who the fuck is that?\" Myra asked and was very agitated as she asked it.\n\n\"Alan....\" Leo said incredulously, his eyes wide at the door.\n\n\"Umm, why is he here?\" Tamika asked confused.\n\n\"Because he is my friend and obviously something is wrong,\" he said trying his best to come up with an answer.\n\n\"Tell him to go away and get your dick back in here,\" Myra said and diddled her clit.\n\nLeo was shocked as she did and got off his lap. Leo vaulted over the couch and sprinted across the loft to the door before Alan could use his key. Leo had given Alan a spare key in case of emergencies. He heard the tumbler starting to undo and he undid the bolt and opened the door a crack so he could poke his head out.\n\n\"Hey dude, can you come back later?\" Leo asked suddenly.\n\nAlan was shocked to see Leo's face peeking out of the door. Alan noticed Leo was wild eyed and looked very panicked.\n\n\"Dude can I come in, that fucking bitch killed me,\" he grumbled.\n\n\"Umm,\" Leo said and looked back to the girls who gave him dangerous looks, \"No.\" he said very abruptly as he turned his head back.\n\n\"No?\" Alan asked confused.\n\n\"Yeah, dude I'm kinda.....busy right now,\" Leo said being polite, but his eyes were screaming at Alan to leave.\n\n\"Come on Leo let me in man. I had a real shitty night bro,\" Alan begged.\n\n\"Dude....seriously I'm kinda entertaining right now,\" Leo said and was being more forceful.\n\n\"That woman killed me man. She took my wallet and left me high and dry. I been walking here all night trying to find a lift home,\" he complained.\n\n\"Alan...listen bro...lemme get you some cash and you can get a cab...\" Leo started to say, but suddenly he was shoved aside by an angry Myra.\n\nMyra was standing in the doorway fully nude except for the dress shirt that hung wide open. She could care less what Alan saw as she opened the door and stood there with an angry expression on her face. Alan was wide eyed as she glared at him and soon found himself backing up a few steps. She tossed a fifty dollar bill at him and as it hit him on the shirt then drifted to the floor she spoke loudly and clearly.\n\n\"Excuse me, but I am trying to get my fuck on! Now if you aren't contributing to that you can go. Leo, say goodbye to your friend then bring your dick back over here!\" she said in an agitated tone and slammed the door in Alan's face.\n\nAlan stood there stunned as he finally got to see Myra naked, but the way she was glaring at him made him just stand there lost. His jaw was slack as he looked at the door in blank amazement at the sight he had just witnessed. Alan looked down at the money and picked it up. He turned away shaking his head in amazement as he did. After the money was in his hand he began to walk away and he couldn't help from saying it.\n\n\"That lucky bastard,\" he said as he got in the elevator.\n\nLeo was slack jawed as he stood there. He couldn't believe what he had just seen. When she slammed the door she muttered something he couldn't make out, but it sounded like she called Alan a cock blocking ass hole. He was almost laughing when she suddenly looked his way and her beautiful features were now casting their hungry gaze upon him.\n\nLeo felt Myra's hand grab his now soft dick and pull him along. He was quick to follow her to the couch where she shoved him back to it. Leo felt the couch almost swallow him up. He was suddenly in the presence of the beautiful woman who was in his lap kissing him madly. Leo's hands found Myra's full ass and squeezed it hard as she ground in his lap. The frantic kissing was maddening, but he gladly endured her lusts. In time he began to return them in force as she was suddenly pushed to her back.\n\nTamika watched her lover kissing Leo's lips and was undoing the buttons on the shirt she was wearing. She was starting to feel the tingles in her body as she watched Myra devour Leo's lips. She wanted a taste of him as well and decided to take action. She reached over, grabbed Leo's hair, and yanked him to her face where she promptly kissed him deeply. Leo felt the pain of his hair being pulled and reluctantly left Myra's hungry lips and snaked his tongue into Tamika's mouth. Tamika began to kiss him wildly and soon her moaning got to Myra's ears. The smile that spread across her face was purely devilish as she watched her sweetie making out with Leo. Her feral eyes sought a certain prize and located it.\n\nLeo's dick was at full mast again and sticking out of the shorts. Myra's hands snuck in and grabbed him fully. Leo groaned into Tamika's mouth and suddenly he was aware that Tamika's hand had joined Myra's. Her soft hands squeezed him gently, making his head fall back and break the kiss as his eyes clamped shut in pleasure. Her gentle fingers began to stroke him, making a sigh come from his lips. Leo felt the stroking continue and soon he felt the warmth of Tamika's tongue on his nipple. A groan of pleasure ripped through his lungs and out his mouth as she licked and pleasured him.\n\nMyra's mouth began to water as she felt the throbbing member in her hand. She scooted under him a bit and found a lovely sight. She saw Tamika's glistening lips and her tongue started to water. She leaned to the side and licked her lips softly. Tamika shuddered as her tongue flicked along Leo's hardened nipple. Myra purred as she repeatedly licked her lover. Her licks began to probe Tamika's lips and soon Tamika was moaning on Leo's chest. She latched onto his nipple with her mouth and suckled hard as Myra's tongue slithered along her aroused lips.",
        "Leo felt the suction on his chest and his head stayed back. His eyes were open as he tried to gasp, but Myra's hand silenced him as she stroked him hard. He felt his cock starting to drip onto her skin and he wanted to make her scream first. Against his wishes he pulled his cock away from their grip. Myra looked up to see him stand up and rip off the shorts. The shorts hit the floor and Leo's angry cock bobbed a few times as he got back onto the couch and hiked her legs wide and open. Myra giggled as she felt the blunt head of his cock open her pussy. Myra's head fell back as he began to sink into her. The fullness she felt last night was great, but this time it felt way better.\n\nLeo sank into her warm accepting body and Tamika watched it slowly slide in her lover. Her eyes narrowed as he sank into Myra's hole and soon she couldn't help herself. She sank down to get a close view of it. Tamika was breathing heavily as she watched Leo's ivory rod sink into Myra's dark folds and she felt the wetness in her pussy begin to saturate the tops of her thighs. She leaned forwards and licked Myra's clit ring making a whimper come from her throat. Tamika's eager tongue flicked it several more times as Leo's thick cock sank into the hilt and she watched him settle inside of Myra. The moan from Myra's throat said it all as she felt his dick fill her up so well.\n\nMyra looked up to see Leo's eyes blazing as he looked into her own. The feeling of Leo's dick as it began to slip in and out of her hole was heavenly. Tamika never once stopped tonguing Myra's very aroused clit. The way the ring danced across her tongue was a very amazing sight to Myra. She had always known that Tamika was superb at oral, but coupled with Leo's lovely cock it was pure bliss. \n\nLeo watched the show with a form of glee as he slipped in and out of his new lover at a quicker pace. He was very quick to spread her legs wider to make it easier for Tamika and was amazed at how flexible Myra was. Tamika moaned throatily as she licked the lovely ring and marveled at the sight of Leo slapping his hips into Myra. Her eyes narrowed a bit and she looked up at Leo with pleasure slanted eyes.\n\n\"Let me taste you Leo,\" she begged him in her heavenly accent.\n\nLeo withdrew from Myra's hungry hole and speared Tamika's mouth.. Tamika mewled as she tasted Myra's sweet juices on Leo's cock and bobbed furiously on it for a few seconds then released it. Leo felt the cool air on his manhood and aimed back and speared Myra. He had an image of the same thing from the night before, but this time it was Tamika in Myra's pace. He grinned as he sank deep into Myra and began to savage her hungry hole.\n\n\"You like this baby?\" he whispered to Myra.\n\n\"God yes,\" she hissed.\n\n\"I can't hear you. Maybe I should stop,\" he teased.\n\n\"No baby!\" she squealed.\n\n\"Now tell me what you want,\" he said teasingly as he slid deep in side her only to pull out slowly.\n\n\"Fuck me!\" she screamed.\n\n\"If that's what you want,\" he said firmly and grabbed Tamika's short hair and yanked her to his mouth.\n\nTamika squeaked loudly as he savaged her tongue. He kissed her with a fiery passion that Leo never knew was in him. He got a wicked idea and pulled her close. His lips never left hers and his hips never stopped moving in and out of Myra's hole. He got a wild smile as he broke the kiss and put her lips next to Tamika's ear.\n\n\"Straddle her head. I want you screaming when she starts,\" he said firmly.\n\nTamika looked at Leo shocked, but for some reason she couldn't deny his wishes. She looked to Myra who was in bliss as he continued to fuck her. Without a word she complied. Tamika got to her feet and dropped the shirt. She walked to Myra's head and threw her leg over so her dripping slit came into Myra's vision. Myra wasted no time in grabbing her hips and making her sink down on her mouth. Tamika gasped loudly as Myra's tongue snaked across her slit and drove into her hole. She squealed as Myra's hands began to slap her ass hard while she ate her. \n\nLeo watched the sight of the sexy women at play and his own cock began to throb in a dull ache. His balls began to swell up in preparation for what he knew was going to be an explosion. He watched as she bucked his hips into Myra and again his brain went out of control. He slipped his hand out and behind Tamika's head and had her sink to Myra's slit. Tamika lashed her tongue out against Myra's clit ring and Leo kept his pumping at a steady pace. Leo's mind was filled with fun images of the two beauties and he knew that he was ready to make his own fantasies come true. He slipped out of Myra and speared Tamika's mouth a few times then slipped back in. He repeated the process several times and soon he was eager for more.\n\n\"Do you want me to fuck you too sweetie?\" he asked Tamika teasingly.\n\n\"Yes Leo! Oh god yes!\" she begged.\n\nLeo got a semi smug smile, but as soon as it began it dissipated. Her grabbed Myra's thighs and began to savage her hot hole. He wanted to make sure she was sated before he began a new round of fun. The hard long strokes drove in and out, in and out, in and out. Never once did they stop, never did they waver. Leo felt his whole being was in a test somehow. He slammed deep into Myra's hole many times and soon he felt the tremors begin. Tamika lapped furiously at her clit and she bit the ring at the right moment pulling it upwards as Leo's cock found the right angle.\n\nMyra felt the burning in her slit and the fire rushed through her. The scream she let out was muffled by Tamika's sweet pussy. Myra's nectar washed out of her as she climaxed with a fury. Her legs spasmed in Leo's hands. Her stomach muscles clenched and unclenched as the violent feeling washed over her and slowly stopped. For what felt like hours Leo never stopped his pounding, nor did Tamika stop her suckling.\n\nLeo felt the river of molten nectar coating his balls and smiled in content. He wanted to continue, but he felt the burning in his balls. He looked deep into Tamika's eyes and smiled as he raised Myra's legs up and pushed them toward her chest. Tamika got a wide smile and took her lover's legs in her hands. She held them up for Leo and sat fully on Myra's mouth. Myra was not able to scream when Leo began his final savage pounding of her hot hole.\n\nLeo let go of all his frustrations. All the women in the past who wronged him or treated him like dirt flew out of him as he savaged her snug pussy. Tamika egged him on with sweet words as he did, but he didn't hear them. He looked to Tamika and with his eyes bade her to move. Tamika got off Myra's head and let go of her legs. Leo let them go around his back as he got on his hands and knees over Myra.\n\nMyra looked in Leo's eyes and her own were glazed over. The savage pounding slowed down, but not the urgency. Leo looked dead at her and saw her glazed mouth and claimed it as he passionately kissed her. Myra's hands found their way around his neck as he continued. She let out whimpers and moans over time as Leo slowly rocked in and out of her. The both of them knew it was a short time before they let loose, but they didn't care. Leo finally found a woman that he could want and was going to make sure she wanted to be in his life a little longer.\n\nMyra felt the orgasm beginning before she could ready herself for it. She let go as it washed over her like an explosion of color before her eyes. She broke the lip lock and threw her head back keening into the morning light. She let out a loud cry as her pussy spasmed on Leo. He felt the way she tugged and milked him and was taken aback by it. Last night was great, but now...now was far better. \n\n\"Oh shit Myra,\" he said breathlessly.\n\nMyra looked into his eyes and mouthed please many times. She wanted to feel him in her. She needed to feel him deep in her. She longed for it and soon the mouthing became vocal.\n\n\"Please...oh...oh...god...please Leo!\" she raggedly begged.\n\nLeo lost it when he looked into her sweet face and his balls wrenched. He felt them send the fiery jolt as he spasmed several times. He gasped loudly several times as his juice flowed into her warm wet accepting body. Myra felt the hot seed in her and her eyes rolled in the back of her head. She arched her hips up to allow him to deposit his load deep in her like she wanted. The feeling was euphoric as he spasmed in her. Myra felt her next orgasm rip through her as the seed filled her and went deep into her hotness. She shuddered softly as it did and her legs tightened across his back.\n\nLeo slumped forward in a heap on Myra's soft shoulder. His sweat covered forehead touched her skin and that sent an electric jolt through her body. Myra found the strength to move her hands under his chest and somehow push him up to see his face. The two of them spent a long moment staring into each others eyes before she leaned to his face. Their lips met and she kissed him deeply. With her lust sated, she felt something else in her. It was a longing. She had Tamika's love and that was a great thing, but she longed for a good man to hold her sometimes. She kissed Leo and thought that she had indeed found one. Maybe, just maybe, they could work something out and the three of them could find a happy footing. She pondered it for a brief minute as their tongues met and thought of nothing else.\n\nTamika smiled as they kissed so sweetly. She looked at Myra's face and was eager to claim her lips, but she waited. A feeling in her decided to let them share a moment before she interrupted them. The kiss lasted a few seconds longer before Leo pulled away from her face and Myra's exhausted smile lit up the room. Myra looked to her love and the smile she had was so pure it made Tamika smile back and lean to her lips. The slow kiss they shared was the sweetest thing Leo had ever seen. He pulled away from Myra as Tamika leaned over her and took his place.\n\nTamika's hands found Myra's face and they kissed with a passion that they hadn't known in a long time. Both felt their lusts had sated for now and all that was left was emotions. Leo was front row center to the true level of their love and watched in silence. Myra's lips and Tamika's seemed to meld into one as they slowly loved each others face. Myra slipped her arms around her lover with great reverence. The snug feeling washed over Tamika and she melded into Myra's body. The scene played itself out for what seemed like hours to Leo.\n\nThe sight of two of the most beautiful women he had ever seen in the throes of such passion was something he never saw before. While he had seen his fair share of such on the internet, he would never have imagined such a breath taking display before his eyes. He sat back and admired the love the two of them had and said nothing. His breathing was silent as the sounds of their lips playing and their moans of content swept through his loft. It seemed they would never stop then Tamika slowly broke from Myra's loving lips. Their eyes stayed closed for many many minutes as their breathing got under control.\n\nLeo was about to leave them be when he noticed Tamika lean in and whisper into Myra's ear. Myra purred and nodded her head after a few seconds of listening then she let out a soft whispering answer that made Leo look at her confused.\n\n\"If he says yes baby,\" was all he heard.\n\nLeo was about to say something when he saw Tamika slowly get off Myra and plant a sweet kiss on her lips. It was a peck then she got up to her feet and turned to Leo. She held out her hands to him and he gave them to her. She took his hands and led him to his feet. Leo was shocked when she led him from the couch to his bedroom. He was about to say something when she led him through the door. He would never have imagined she would have left Myra laying on her back on his couch, but he noted how out of it Myra was.\n\nTamika got on his bed on her hands and knees and stopped him from getting on it. She looked up at him with her big eyes and her body was actually shaking. Leo noted it and his face showed its confusion. Tamika ended his confusion as she began asking him a hard question.\n\n\"Leo, before I ask you this will you promise to not be mad at me?\" she asked.\n\nLeo's face showed it's confusion, but he realized whatever she was going to ask him was likely important so he swallowed his confusion and he answered her truthfully.\n\n\"Why would I get mad at you honey?\" he answered seriously.\n\nTamika smiled sheepishly and she continued, \"I really, really enjoyed everything we did last night, but I was wondering...\" she left off and looked down at the bed.\n\n\"Wondering?\" he asked teasingly.\n\nTamika looked at him desperately and her eyes showed a seriousness he had never known before.\n\n\"I want you to use me Leo. Just use me and make me feel dirty baby. I really need it baby,\" she begged and Leo was shocked.\n\n\"Use you?\" he asked confused.\n\n\"I want you to make me scream and plead for more Leo,\" she began and he noted she was shaking in apprehension.\n\n\"I want to cry out and beg you to use me and...\" she was about to continue when Leo got the point.\n\nLeo had a feeling Tamika was into rough stuff from the way she practically threw herself into everything they did last night. Instead of letting her continue Leo felt something take over his body. It was like all the nice man he was disappeared. Before Tamika could finish begging him for the rough sex she so desperately needed Leo grabbed the back of her head and impaled her mouth with his rising prick. Tamika's eyes widened as he sank into her mouth and into her throat. She gagged a bit as he did and her eyes closed. Leo held onto her short hair and glided in and out of her mouth. Tamika created suction by clamping her lips on him and sucking his cock as hard as she could.\n\nLeo looked down at her and he had a look on his face that was not a smile, not a smirk, but no emotion at all. He began to fuck her sweet mouth and his eyes locked on her ass as she sucked him with all her heart. He reached over her body and slapped her ass hard making her gag on him as she tried to scream.\n\n\"Is that what you want slut?\" he hissed in a voice that was one he rarely used.\n\nThe voice was cold, controlling and full of a promise of pain.\n\n\"Mmhmm!!\" Tamika gagged as she tried to respond.\n\n\"Talking with your mouthful I see. Such bad manners,\" he said in that same voice and slapped her ass more viciously.\n\nTamika squealed as the blow hit her ass and the jiggle caught Leo's eyes. His eyes narrowed as he repeatedly slapped the same spot enjoying the squeaks and squeals that came from her throat as she sucked him. Leo groaned as she took him all the way down and moaned on him. The vibrations made his eyes cross and suddenly he yanked out of her mouth. The sight of the drool that arched after his cock was something he had only ever seen in a porn flick. He looked into Tamika's scared watery eyes and his smile made her shake in fear.\n\n\"I see you love sucking cock, but how about being fucked?' he asked coldly.\n\n\"I love it sir,\" she whimpered.\n\n\"Is that a fact?' he asked and yanked her head up so she went up to her knees then he shoved her so she fell on her back. \n\nLeo clambered up her body before she could move and pinned her to the bed. The feeling of her pillowy breasts as they squashed on his chest was nice, but he had other ideas. His hips opened her legs and he felt her blazing slit was very wet with desire. He looked in her timid eyes and he got a creative idea. He grabbed her wrists and pulled them over her head. He took her hands to the bars on his head board and looked in her eyes.\n\n\"You hold these bars and don't you dare let go. Understand me?\" he asked sternly.\n\n\"Yes sir,\" she whimpered and put a death lock on the bars.\n\nLeo got off the bed and stalked to his closet. Tamika watched him go with a bit of apprehension. He ducked in the closet and was in there for a long time. Her body trembled in anticipation as he was in there. Leo was in his closet and got his ties from work. He decided to play a game with her and purposely waited in the closet for a long time. He was eager to pleasure her, but he was also remembering how badly she wanted him. The joys of teasing her were in his mind and he decided after enough time had passed to go back out.\n\nIn his hand Leo had three ties. They dangled in his hand as he strode towards Tamika's prone form. Her eyes were shaking as he mounted the bed and his ties drug along her skin. The soft material sent a shock through her heightened senses. Her body spasmed softly as the cool soft tie drug long her tummy. Leo noted the shift under him and smiled darkly. His hand changed the angle of the tie making it glide along her tummy and up across her nipple. The sigh that came from her mouth was all he needed to change direction again and go across the other. Tamika whimpered softly as her nipples hardened to diamond proportions. \n\nLeo kept the teasing up for a few more seconds then he stopped. His hand found hers and the left hand was tied to the right. Leo made sure her hands were secure as he got the next tie and put it to the bars. He interlaced the ties nice and tight so she couldn't get away. It took a few seconds and Leo succeeded in making sure his prey couldn't escape. A sly grin came to his face when he saw one last tie was unused. A use came to his mind in a split second. Tamika whimpered softly as she settled down only to see Leo settle over her head and all her vision went black.\n\n\"There we go,\" Leo said in a teasing voice. \"Now where should I start?\" he asked rhetorically.\n\nTamika whimpered softly as his fingers touched her cheek. Her glistening folds were on full display to Leo who chuckled as he watched her body writhe under his fingers. He softly touched her neck and the sensation made Tamika turn softly as he found a ticklish spot on her. His fingers brushed her goose bump laden skin for a few seconds and then began a trail down. The slow agonizing trail down made her whimpers begin to get frantic. Leo could see how aroused she was by looking at her nipples. The large aureola and thick nipples were proudly displayed on her at least DD cups. Leo bent over and instead of using his fingers he used his teeth and bit her large nipple softly. \n\nTamika felt the jolt wash over her and bucked her hips as his teeth sank into her flesh. Her mouth made an \"O\" as he flicked his tongue along her sensitive nipple. Leo suckled softly for a few seconds then as soon as he started he stopped, pulling off her hardened tip with an audible pop, and left Tamika dazed and wanting more.\n\n\"Now now, not yet slut,\" he said seeing her trying to arch her back to him.\n\nHis hand pushed her his down and he kept his hand where it was. Leo noted he was being maybe too cruel to her and decided to give her some pleasure. His fingers played along her sensitive skin and suddenly Tamika felt them at her clit. The hard teasing he started on her ring made her gasp and shake under him. Leo watched her buck her hips desperate to have him near her hot hole. Leo watched the display and decided to play a little more.\n\n\"What do you want in there little girl?\" e asked.\n\nYou sir!\" she cried out.\n\n\"I see, but you didn't answer me. What do you want in you?\" he asked more forcefully and tugged her clit ring.\n\nThe electric jolt that shot from Tamika's clit to her head made her body spasm. Leo saw the spasm and he slipped his fingers into her slit and played with the fat lips. Tamika mewled loudly as he did and Leo's fingers found her very hungry cunt. The fingers slipped in and Tamika straightened up suddenly. Her hole clamped tightly on Leo's fingers. Leo felt the clamp and smiled as he leaned over her face. His hot breath washed over her cheek as he dug his fingers into her honey pot. Tamika reacted to his new proximity to her body.\n\n\"Is this what you wanted in you?\" he teased.",
        "\"No,\" she whimpered truthfully.\n\n\"No?\" he asked forcefully.\n\n\"No sir! I want your big dick in me!\" she pleaded.\n\nLeo chuckled softly. He sank his fingers in to the knuckle as she mewled and gasped as he stroked them in her wet cunt. Leo saw an opportunity too good to pass up. He got back up to his haunches and his cock was hard and ready. He saw her open mouth and decided to give her what she wanted. Without a word he stuck his dick into her mouth and Tamika gagged it down.\n\n\"You said you wanted this deep in you, now you have it,\" He said as he began to fuck her mouth.\n\nLeo grabbed a handful of her hair and began to force his dick in and out of her hungry mouth. To her credit Tamika swallowed him down and made it happen as he began to buck away at her. Tamika slurped on his pole loudly and Leo dug his fingers deep in her hungry pussy. He felt every contraction and each one made him smile wider. He kept at it until he felt her beginning to build up. He let go of her hair and his hand began to twist a very pert nipple. Tamika moaned loudly as he did and sucked him hard into her hungry mouth. She loved the taste of his sweet dick and let Leo know it by licking him in her mouth.\n\nLeo felt the sweet tongue on him and groaned loudly. She was definitely to the point where he could do almost anything he wanted to her. His merciless fingers found a spot in her hole and Tamika straightened up. Leo had found her spot and savaged it. Her moans became louder and louder and soon she couldn't focus on sucking him. Leo pulled his dick from her mouth and a loud moan followed it. He kept at it and soon she was writhing and bucking madly trying to hold out.\n\n\"You wanna come don't you?' he asked loudly.\n\n\"Yes sir!\" she begged.\n\n\"Ask me nicely,\" he teased.\n\nPlease Leo! Oh god please sir let me come!\" she begged loudly.\n\nLeo's answer came as he bent over and savagely kissed her thick lips. His tongue found hers and they kissed wildly. Tamika moaned into his mouth and let loose. She came with a violent series of bucks and twists. Leo kept his fingers in place as she lost her mind and soon he had a big smile on his face. The way she writhed made his dick throb painfully. He wanted to make her scream now. With a subtle twist of the tie he undid the top knot and allowed her arms to move. Without warning he put his hands under her and flipped her to her tummy. Tamika squeaked as she flipped and suddenly her arms were back over her head and she was brought up to her knees.\n\nLeo made sure she grabbed the bars before he tied her back to it. He knew that this was it. He was going to make her howl before he was done and his smile was focused on her full ass. His hands ran over it and she shook a bit as he did. Leo recalled something that Myra did last night and leaned down over her full cheeks and flicked his tongue along the skin. The sudden feeling of Leo's tongue on her skin was unreal to Tamika. She looked over her shoulder at him, but through the blindfold she had no way of seeing what he was up to. Leo's tongue tasted her skin and he was enraptured by the taste. He saw another place that his tongue longed to go and it soon found it's way.\n\nTamika screamed aloud as his tongue found her dripping slit. Leo savaged her slit with long teasing licks and nips. Her head sunk down as he continued on for many minutes. Leo had never been as into oral before he met these two, now he was totally for it. His tongue found all her spots and her loud begs and whimpers made his blood begin to boil. His hard cock was straining for it's wish to plant itself in her hot cunt, and now she was more than ready for him. With one last long lick Leo got to his knees behind her.\n\nLeo teased her entrance with his dripping cock and smiled down at her shaking body.\n\n\"What do you want baby girl?\" he asked.\n\n\"Fuck me sir! Oh god fuck me make me your slut!\" she screamed out loud.\n\nLeo wasted no words and slammed into her in one full shove. Tamika's head flew back and the blindfold fell off. She was squinting from not only the light in her eyes, but the fury in Leo's pounding. Leo gripped her full hips and began his savage thrusts into her depths. His hand would slip away and a resounding slap would echo from the room as his hand impacted her ass. Tamika cried out at each one, but not in pain. \n\nShe was in bliss. Her whole life she was a submissive person. Her whole life people had used her; some good, some bad. Her own wants were put aside for others, but now she had something new. Her love for Myra was unquestioning, but a new feeling was building in her for Leo. He could be so tender with her from what she saw thus far. It was now, with him pounding her so hard, that showed the was also out to give her what she wanted.\n\nLeo continued on and soon his hands slipped forwards to her full tits and squeezed them hard making her moan. Leo slowed his pace and played with her nipples for what seemed like an eternity as he slipped in and out of her abused cunt. Her soft mewls got to his head and he leaned over her back. Tamika felt his body along hers and leaned her head back desperate to taste his lips. Leo's mouth met hers and they kissed very sensually. The passion in it shocked the both of them. Their tongues thrashed away at the others as Leo continued his pumping. For a time Leo was content where he was, but suddenly he felt her very tight pussy clench him. Tamika came without asking him, but he didn't care.\n\nThe feeling of him still moving in her while she came sent Tamika over the edge. Her climax was as powerful as one she had ever known. She never came this hard with her old boyfriends, and with Myra it was a close feeling. Her body shook so wildly she couldn't contain it as tears came down her cheeks. Leo saw them and slowed down.\n\n\"Don't stop!\" she begged loudly.\n\nLeo ran his hands under her and made a shudder come from her body that Tamika couldn't contain. The sweet feeling in her body was all encompassing as she dipped her head low and accepted the rest. The hard feeling of Leo's thick cock impacting her sensitive hole made everything in her head spin out of control. Tamika looked up at Leo when she was able and the look at his eyes. The warmth in them was there as was a wild passion. She had never seen that look before from any of her other men. Leo's hand suddenly reached down and traced her cheek making her curl her face in his hand. Leo ran his fingers over her lips and without being asked she kissed them and sucked the middle finger into her mouth. She moaned loudly as she bit it and Leo growled.\n\nLeo's eyes narrowed as he slammed deep into her. His gaze fixed on her face as she sucked and bit his finger hard and that was the catalyst. He tore his finger from her mouth and grabbed her hips firmly. Without a word he slammed away into her tight hole and Tamika urged him on with sweet whimpers.\n\n\"Oh god! Please....oh fuck please Leo! Oh god come in me baby!\" she begged through his hammering blows.\n\nLeo's breathing became very shallow as he fucked her hot hole. He knew that he was imminent. His eyes rolled into the back of his head as he felt it building up. He wanted to give her more, but this was too much. Even with all he had done last night, he felt this was the better time spent. He kept fucking her and suddenly he felt his balls unleash. The hot ropes exploded deep into Tamika's womb. She felt each and every thrusting spasm into her juicy pussy. Her head fell back as she cried out in release as the volley filled her up and then some. Their mixed juices dribbled down her thighs and Tamika felt it. She shuddered violently as he slowly pulled his softening cock out of her.\n\nTamika moaned loudly as he pulled out and her face was in the pillow beneath her. Her ass was in the air still and Leo watched the sight. He marveled at how naughty the sight was, but was startled at the feel of Myra's arms snaking around his naked sweaty torso. Pushing her bare body against his back, her lips pressed into his ear softly. \n\n\"Looks like you and her can't help but being wild can you?' she teasingly asked.\n\n\"I don't think either of us can help it,' Leo said back through his gasps.\n\nMyra laughed a purring laugh before she let go of him and crawled on her hands and knees to her lover. She saw the glistening juices and her tongue got wet at the sight. She crawled to Tamika and licked the mixed juices from the back of her thighs and Tamika gasped loudly. Her moaning whimpers echoed along the room as Myra continued in her quest. Myra licked all the sweet juices from her thighs and looked at her dripping slit. Myra's tongue swept up their oozing juices from her lovers' body, and Tamika howled in pleasure as she hit all her spots.\n\nLeo watched Myra devour Tamika's slit and he grinned as he heard the whimpers and moans come from Tamika's throat. The sounds were a symphony to his ears and he decided to get into the act. He got to his knees and saw Myra's firm ass in the air as she licked away at her lover. Though he felt a bit sore, he wanted to cement the day with a bang. Keeping his movements as steady as possible Leo got behind Myra and his hands eased forwards. \n\nMyra blissfully licked and suckled Tamika's sweet pussy and devoured the mixture of Leo and her she enjoyed the flavor and could see why Tamika was so eager last night to do the same. As her tongue slashed the dripping slit she felt Leo suddenly behind her. She was about to look back when she felt his cock plunge into her. The moan that escaped from her throat sent a vibration into Tamika that made her squeal loudly. Leo sank deep into Myra and the warmth of her pussy made his eyes close. He sank fully in and his hands found her hips. The feeling of bottoming out in her was euphoric and Myra wasted no time in wiggling her hips on him. She ate Tamika as well as she could, but it was getting very difficult to concentrate when Leo began moving.\n\nLeo knew that he was unlikely to last a long time, but he didn't care. He had finally struck gold with not just one, but two of the most perfect women he had ever met. His hips slapped into Myra with a fury and Myra's whimpers filled the room as did Tamika's whimpers and moans. Leo's pants joined their music as the tempo rose and rose. Myra let out a series of sharp pants and her pussy wrapped itself around Leo's dick like a glove. He felt the tremors start. Tamika's head fell back as an orgasm washed over her body that rocked her to her core. Her stomach muscles rippled and shook as she threw her head back and cried out in ecstasy.\n\nMyra heard the calling of her lover's pleasure and that triggered her own explosion. Her mouth was filled with Tamika's pussy as she felt it hit her. Her eyes clamped shut and she threw her head back and cried out into the room. Her cries filled the room and Leo knew that he was not long in joining them. His hips didn't stop for one second as he pumped away at her dripping hole. His fingers dug into her hips and suddenly he felt something new. He was deep in her and as he wanted to erupt, he felt he needed to hold on a bit longer. His gaze went to Myra's ear and he fell along her body.\n\nMyra felt his body along hers and his mouth next to her ear. She leaned into him and as she was panting to catch her breath she heard him speak.\n\n\"Say what you want,\" he demanded.\n\nMyra leaned back and put her lips on his. The wild kiss they shared was a sweet one that was made sweeter by the Tamika's nectar still on her lips. Their tongues slashed around and soon Leo felt her clamp on him suddenly. The tight grip made Leo break the kiss and he threw his head back in the throes of massive pleasure. He fired off all he thought he could have left deep in Myra's waiting depths. Myra's toes curled and she couldn't help the tremors that swept over her as he flooded her. Her eyes narrowed as she leaned her head forwards and onto Tamika's ass. The cool skin helped cool her hot brow and as she rubbed her face on the smooth skin she couldn't help flicking her tongue along it as well. She planted sweet kisses on her and soon she felt Leo pull out.\n\nLeo was spent. He looked down at the sight before him and let out a series of shallows breaths. His mind was swimming from that last one and he rocked back on his haunches for a breather. His soft cock was wet with a mixture of juices and he felt like he needed to sleep for a week, but at the same time he was as alive as he'd ever been. Myra took a few minutes to get her composure back and crawled up her lover's back. When she got to the front, Myra planted sweet kisses along her neck and lips making Tamika shake and purr into her.\n\nThe sweet kisses and soft words they shared between them was something Leo couldn't make out, but whatever they were saying it was obviously touching. Myra slowly undid the ties and as soon as her lover was free she hugged her to her and they stayed like that for many long minutes. The sweet embrace came to an end when Myra pulled away from Tamika. They shared a loving look and spoke softly.\n\n\"Happy anniversary baby,\" Myra said sweetly.\n\n\"I love you so much baby,\" Tamika purred as she kissed Myra's lips.\n\nLeo sat back and his eyes were narrowed in confusion. They kissed sweetly and when they were done Tamika looked to Leo. Her eyes were happy and she reached out her hands to him. Leo took her hand and Myra put hers on theirs. It was a touching gesture and the ladies pushed him to his back. Leo had no resistance to it and slumped to his back. The ladies crawled on either side of him and snuggled up into his side. Leo felt their soft bodies along his and sighed softly. The ladies lounged softly on his body and the question in his mind came out suddenly.\n\n\"Anniversary?\" he asked.\n\nTamika giggled and rolled into his chest. Myra put her head on top of his chest and looked into his eyes. She decided to let him in on what was happening.\n\n\"Yup. It's our third anniversary baby,\" she said softly.\n\n\"So I am your present to her?\" he asked confused, but intrigued.\n\n\"And vice verse. We both saw you at the club and decided to try you out. And I must say it was the best present we have had,\" Tamika purred.\n\nLeo let out a brief chuckle and looked at the ladies.\n\n\"I'm glad I was even OK,\" he said with a chuckle.\n\n\"Better than OK sweetie,\" Myra said and kissed his neck. \n\nThe three of them curled up tight and dozed off. The sweet dreams were ended when they all woke up a few hours later. The girls got up and went off to the bathroom. Leo sat up and stretched out. His back popped several times and he got to his feet. He went to the side dresser and pulled out a pair of boxers. He put them on and cracked his neck. Leo let out a slow breath as he heard the shower kick on. He chuckled and went to the living room. He found the girls clothes from the night before and gathered them up. He set them on the bed and looked in his drawers. He found a couple long shirts and dressed himself in a pair of jeans and a tee shirt. He went to the kitchen and decided to return the favor from the morning. \n\nLeo made chicken salad and soup. As he cooked up the chicken he cut up everything he needed and once it was all done he tossed the chicken. He set out three plates and bowls then set the table. As soon as he had poured the last of the soup in it's bowl he heard the ladies get out of the shower. He went back to his fridge and got out some sodas and set them on the table. He heard Tamika and Myra giggling in the room as they dressed and came back out. \n\nThe visions of beauty came out and Leo had a smirk on his face as he saw Myra in her pleat skirt and his long shirt. Tamika wore her skirt as well and his dress shirt tied under her breasts. Myra had the socks on and she padded to the table. Like a gentleman Leo pulled the chairs for the ladies and they smiled at him as they sat down. The lunch was a welcome relief to the hungry grouping. The salad was a hit and the soup topped them off. They chatted about many small things. The conversation was mainly about the girls' work and Leo was a good listener. \n\nMyra worked with her good friend in a tattoo parlor in a mall on Staten Island. She hated the commute, but she always made good money for it. As they talked she told Leo that if he wanted she could touch up his work. A smile crossed his face as he pondered it. He could imagine other works he would see if she could do as well. \n\nTamika was happy with her career. She had worked hard in college for her music degree. As she didn't want to waste her time she got into DJ work and sampling. It was a natural thing for her as she had a way of spinning things and making them sound very hot and fresh. The glimmer Leo saw in her eye showed how much her job meant to her and as he listened he made a note of sampling her work further. \n\nThe conversation was fun, but soon the time got away from them. Seeing what time it was Tamika sighed. She had to work that night and as she looked to Leo he nodded his head.\n\n\"Need me to take you home?\" he asked.\n\n\"If you want,\" Myra said.\n\n\"Why wouldn't I?\" he said with a grin on his face.\n\n\"You see, that's why you are a nice guy,\" Myra said and softly patted his cheek.\n\nThe ladies helped Leo load his dishwasher and as it started up they got their shoes on. Leo led them to the door and locked it. They got in the elevator and Myra and Tamika held his arms tight. Leo smiled as he looked down at the beautiful ladies and he couldn't help his grin. The elevator dinged in the garage and the happy trio walked to the car. Leo hit the locks and helped the ladies in. This time Myra sat up front and Tamika behind her. \n\nThe drive out into the streets was a pleasant one as the sounds of Lacuna Coil played. The girls smiled and bobbed their head as one of their favorites came on. Leo had his iTunes on and the girls actually were shocked as more than just rock played. The drive across the tunnel into Queens was short, but seemed to take forever. Leo really didn't want the day to end like this, but he really had little choice. He hoped to see the lovely ladies again and his mind was full of many possibilities. As they drove Myra saw his turmoil behind his eyes and patted his arm. Leo looked at her at the light and she shocked him with her next statement.\n\n\"So why haven't you asked us for a number to call us Leo? You don't want to see us again?' she pouted suddenly.\n\n\"Umm...I do....I just...umm...\" he stammered.\n\n\"Well I don't know. I mean if you wanted to see us again you wouldn't be trying to be all bashful and what not. Lord knows last night you were more than determined to make us want to,\" Myra said and the gleam in her eyes was something devilish.\n\n\"Then get out your phone and take down my number,\" Leo said firmly as he saw the look in her eyes and she laughed.\n\nThey exchanged numbers by Myra calling his phone. At the next light he programmed her name into his phone and vice verse. The girls giggled at that and Leo shook his head as he realized how much of an ass he must have looked like at that moment. Myra led him to their place. As they got to it Leo parked in the side lot. \n\nWhile Leo's place was large and sprawling, the ladies was smaller and more cozy. The building was as tall as Leo's, but he could tell there was likely two to three times the number of units. He walked them to their elevator and up to their floor. The long walk to their apartment was a quiet one. Leo saw the number on the door and smiled. Quickly he committed it to memory and as he was about to say something Tamika had opened the door. Myra looked at him, patted his cheek, and walked in without a word. Tamika followed her lover in and shut the door leaving Leo alone in the hall. \n\nAs Leo stood in the hallway, he felt like he should have done more at that moment. He watched the door for a brief minute, then as if by magic the door popped open and he saw no one standing near it. Last night and that morning Leo had manned up and made them want him, now in the moment he never thought would happen he had a new opportunity to be something more. Steeling his resolve he strode into the door and into the unknown. For good or ill Leo decided that he was going to try and make something work with them. He cast his die and shut the door behind him."
    ],
    "authorname": "creepyrj",
    "tags": [
        "rough sex",
        "white man",
        "bondage",
        "ffm",
        "interracial",
        "black woman"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/lucky-bastard-ch-02"
}