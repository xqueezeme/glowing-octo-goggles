{
    "title": "The unexpected housekeeper Ch. 02",
    "pages": [
        "For finding out how our heroes started living together, please read \"The unexpected housekeeper.\" This is the continuation of their story, presenting how a lonely, overworked lawyer had his life changed by a not so regular housekeeper.\n\n1.Friday evening\n\nAfter that day's marvelous morning, and having a good day at the office, I got home around 8 pm, as usual. I was anxious to get back in my house, where Mali, the beautiful new housekeeper, was waiting for me. Last night I had experienced an amazing massage that had a surprising, but totally happy ending. We had our orgasms together, without having proper sex, only by frottage and caresses.\n\nWhen I entered the house, I could smell the aroma of freshly cooked meal from the hallway. It was something I wasn't very used to, since not even my ex-wife cooked. We were more the eating in town kind of people.\n\nIn the kitchen, there was a new and pleasant surprise. Mali was preparing dinner, dressed only in her lace boy panties from last night, the same white lace camisole, and an apron. I had to remind myself that she was only the housekeeper, not a wife or a lover. That maybe our previous experience was a one-time only event. But why then would she be dressed like that, and not in a regular dress? As I was standing silent in the kitchen doorway, she probably sensed my presence, because she turned around startled. When she saw me, a big smile appeared on her face.\n\n\"Welcome home, Mike! In a few minutes the dinner is ready\" she said in a most casual tone, like this was how she greeted me in the last several years.\n\n\"Hi, Mali! I'll go and get into more comfortable clothes\" I replied. But deep down inside, I felt assured that things were still good between us.\n\nWe had dinner together in the kitchen, with a glass of wine. When we finished eating, we moved into the living room, with the rest of the wine bottle. We were both sitting on the couch, reclined on the two ends, facing each other, and holding our wine glasses. I used this respite to find out more about this sexy girl. This very special girl, who had a bulge in her lace panties, which were like a constant magnet for my eyes. She seemed to notice this, and she repositioned herself, with her long legs extended on the couch in my direction, and slightly parted, giving me a better view in between.\n\nShe told me the short version of her life story. She felt as a girl from her early childhood, but her family was too poor to support her transition. She moved to Pattaya, a city where a lot of tourists came from Europe and the US in search of transsexuals, where she started working as a go-go dancer, and a soon as prostitute. That's how she learned the massage technics, and all the other aspects of the erotic trade. Two years ago, she met an older American, who fell in love with her. After his third visit in three months, he asked her to move in the US with him. She accepted his offer, and has lived with him until he died in a car accident. Her life with him wasn't an easy one, because even if didn't treated her bad, he was considering her to be his property. Nonetheless, when he died she lost her job and her home, and she had to move in with two others Thai ladyboys living in the city. One of them is working as a massage technician, and the other is working currently as waiter at a Thai restaurant. When Sarah, my assistant, proposed her this live-in housekeeping job, she accepted gladly, because otherwise she wouldn't have another choice but returning to prostitution. It seems that for ladyboys in the US is very hard finding a job outside their community, because Thai people are more tolerant toward transsexuals.\n\nMali presented all these events on a very normal tone, with no regrets, just facts. I understood better now how this beautiful girl came to be so down to earth, and now I respected her even more.\n\n\"Mali, I want to make a promise to you. Now that I heard your life story, I'll do my best not to make you feel like an inferior person, to respect you, and to treat you right and fair.\"\n\n\"Mike, this isn't why I told you all these...\" she started protesting.\n\n\"Please, let me continue, Mali. I believe each person should be treated correctly, and with respect. First of all, you got a job here as a housekeeper, and you already did a wonderful job cleaning and taking care of my house. Last night we got carried away, and this morning we continued. But if you ever want to stop, even from this moment, please tell me. As I said yesterday, honesty is the best instrument of communication with me. I'll not hold it against you, and you'll not lose your job. Your job will be evaluated based only on how you're performing your duties. If we choose, as consenting adults, to have a more personal relationship on the side, or to interrupt this relationship, it doesn't have anything to do with your job. Do we have an agreement on that?\"\n\nMali listened to me attentively, and after considering for a few moments what I said, she answered.\n\n\"Yes, Mike. Thank you! I wouldn't have imagined to meet somebody as honest as you.\"\n\n\"Ok, then. I propose that be both go to bed, and we shall see what tomorrow brings.\"\n\n\"Not before your massage, Mike. Don't forget about that,\" she said giving me her beautiful smile.\n\n\"But Mali, I think it would be better to let things cool down between us, I don't want you to feel forced to do anything that exceeds your housekeeping duties.\"\n\n\"No, Mike, I do not agree with you on this issue. It is my opinion that massaging you is an important part of my job duties, because knowing all these different types of massage techniques is one of my real-life qualifications. And in line with the honesty you required from me earlier, I also want you to promise me to be honest. If ever you do not like something I do, or if I do a mistake, or if you don't want the massage to have also an erotic twist to it, as it happened last night, please tell me openly.\"\n\n\"That means...\" but I never got a chance to finish my sentence.\n\n\"That means that each night, you'll get a massage after your bath, but the massage will be performed on your terms. You are the main subject of the massage, I do it for you to feel relaxed, to feel good in your home. The erotic part of the massage is not for your pleasure only, it gives me pleasure as well.\"\n\n\"That means, as I was saying before you interrupted me\" I added smiling, \"that tonight I'll have a massage with an erotic twist, as you named it?\"\n\n\"If that is want you want, Mike.\"\n\n\"Ok, then I'll go to take a shower.\"\n\nI stood up, with the wine glass now empty in my hand, and proceeded for the bathroom.\n\nAfter I finished my shower, I entered the bedroom, where Mali was waiting for me. She was dressed just like at dinner, in her white lace boy panties and camisole. Today I knew what was coming, so I didn't bother with the pajama pants, I just wrapped a towel around my waist. Without any more comments, I took off the towel and laid on my belly, on the towel. Mali just smiled seeing that I learned my lesson for the massage, and undressed as well. \n\nJust like the day before, she poured jasmine fragranced oil and worked all my back muscles, and my legs, and then she got to my buttocks. \n\n\"May I get on top?\" I heard her whispering at my ear on a low voice. I was a little confused about what she meant, but nonetheless I murmured my approval. She hoped on the bed, and crossed one leg over me, sitting on my thighs, right below my ass. From this position she was able to have more control over her moves, working simultaneously both my buttocks, alternating firm and soft massaging techniques. I remembered how yesterday she started touching my anus, and immediately my penis left its limp status. In the exact same moment, like she was reading my mind, her thumbs started massaging the interior of my buttocks, descending in the crack between. The anticipated touch of that forbidden area was making me even more horny, and my rigid dick was now hurting as it was pressed against the mattress. I moaned loudly when her thumb finally made contact with my asshole, and I think I probably pushed my ass a wee higher, allowing her free access. I heard her snickering, and now she focused on my anus. First, she massaged the area around it, down to my balls. She probably noticed the painful position my dick was in, and she gently extracted it from underneath my belly, pulling it between my legs. Then she returned to my anus, playing with it. She interrupted for one moment to pour more oil on my ass, and resumed her ministrations. Slowly, a finger which I guessed was her right forefinger, started penetrating my relaxed hole. I pushed my ass against it, moaning harder, and she obliged by pushing in the whole finger. She started finger fucking me gently, and I heard her moaning as well. My eyes were closed, but I felt transported in another world, where only her soft skin existed, where her delicious weight on my thighs was the only source of gravity.\n\nThat is when she started rocking slowly on my thighs, and I could feel her long cock, now erect, rubbing on my skin. I moaned again when she pulled out her finger, leaving me again with an empty feeling in my bowels. She moved her legs, pushing my own legs wide apart. This time she was kneeling between my legs, and she whispered in my ear.\n\n\"Mike, tell me if you want me to stop, or if you don't like something that I do. Ok?\"\n\nI wasn't able to say an articulate word, but instead I babbled a sound meaning I agreed.\n\nFirst, she started planting small kisses on my buttocks, while gently caressing them with her fingers. Her mouth descended slowly to the crack between, and her hands firmly pushed my buttocks apart. A part of me was surprised, wanted to tell her to stop, but the other part abandoned itself to this beautiful girl. That part of me was curious where was this going, what new pleasures had she prepared for me. And this second part of me was right, because I felt her warm breath on my anus, and then her lips. After a few more pecks, her tongue entered into action as well, first doing small circles around the anus, and after that trying to penetrate me. Again, I was moaning and pushing myself again her tongue, relaxing my asshole, helping her penetrate me easier. My anus was now totally relaxed, and was granting total access to her tongue. She felt that, because once again her forefinger entered the scene, pushing inside alongside her tongue. And just like that, her middle finger joined in, and it was granted an easy passage inside of me.\n\nIf she would have kept this treatment going for two more minutes, I think I would have erupted with no further delay. But her fingers slipped outside, leaving my hole gaping, empty, hungry for more. Instead, I felt her body moving forward a little bit, and I gasped when her erect penis cuddled between my buttocks. She laid down entirely on top of me, her delicious weight pushing me harder against the mattress, her skin soft like silk caressing mine, her cock prisoner between my ass cheeks. She started kissing and slowly biting my right year, and she whispered.\n\n\"Just say when it's enough, and I'll stop.\"\n\n\"Don't stop!\" was all I could whisper back, between two groans of pleasure.\n\nAs if this was what she wanted to hear, Mali's cock started rubbing between my buttocks, sending shivers through my body whenever its head touched my anus. And without thinking, on an instinct, I pushed back my ass, making her pointed head to penetrate me. We both moaned loudly, and remained motionless. I wasn't prepared to be fucked by her, but in the same time I was too horny to ask her to stop if she would have pushed her whole cock inside of me.\n\nAfter what it felt an eternity, she whispered again in my ear.\n\n\"I'll not fuck you now, Mike. If we are to make love, I want to do it properly, not using a massage as an excuse.\"\n\nI moaned again, and without being able to control my own body, I pushed back a little bit more, making her penis penetrate me further.\n\n\"No, Mike, stop it. Or I'll not be able to stop myself.\"\n\nI tried to have a better self-control, and she pulled out a little, but nevertheless her cock head remained buried inside of me.\n\n\"I just want to stay like this for a few moments more... your ass is so hot...\" she whispered in my ear, kissing it.\n\nAnd then, with a sigh of regret, she pulled herself outside of my ass, rolling from on top of me, leaving me abandoned, and without breath.\n\n\"We should continue the massage on your front, or else I'll mount you again, and fuck you properly\" she said laughing.\n\n\"I don't think I'm able turn around on my own,\" I whispered back with a sigh. \n\n\"Ok, wait a minute for me to catch my breath, and I'll help you\" she said, smirking and laying on her back.\n\nWhen her breathing turned back almost to normal, she helped me gently turn on my back, and she started again massaging me, kneeling on the bed beside me.\n\nThe massage was once again a professional one, but I could feel that her fingers were not having the same precision as before. Clearly, our previous experience had taken its toll on Mali as well.\n\nWhen she got to my soles, I started moaning again, since this is my most sensitive body part. This time she took her time massaging my soles, focusing on this particular soft part of my body. I was now recovered almost completely from my previous ecstasy, as other centers of pleasure were activated in my body. Only my penis was not paying attention, remaining hard and pointing straight to the ceiling.\n\n\"Are you ready for the grand finale?\" she asked me. I looked at her, and she was smiling.\n\n\"Whatever you have in mind, I won't stop you,\" I replied.\n\nAnd so, Mali straddled again my thighs, facing me, and her erect penis was laying right next to mine. She poured some more oil on her hands, and on both our cocks, and grabbed them together. It was an amazing sensation, as she was not only stroking both our shafts together, but was moving her pelvis rhythmically, rubbing her penis to mine. This time we were both moaning and groaning together, and Mali had abandoned herself, closing her eyes, and stroking our cocks together harder and harder.\n\nAs I was feeling again that pre-organismic sensation of stinging in my thighs, I felt her shaft pulsing, and her body trembling. And this time we erupted together, both our cocks spurting long jets of cum into the air, landing all over my body, her chest, the bedsheets, and even on my face.\n\nWhen we finally stopped ejaculating, she let herself drop next to me on the bed, and remained motionless. I was breathing heavily, still groaning, and I could hear her do the same. I wanted to open my eyes to look at Mali, but something was preventing my eye lids from opening. I lifted my arm with some difficulty, and touched my eye. Something gooey was splashed on top of my eye lids. I scooped it with my fingers, and looked at it with my other eye. It was a splash of cum which landed on my face. Without thinking, I approached my fingers to my lips, tasting it first, and then licking them clean. \n\n\"Is it mine, or is it yours?\" I heard Mali asking. \n\nI turned my head to look at her. She was laying there, just as she had let herself fall from on top of me. And my god, she was a vision of beauty. Her skin was glistening with oil and sweat, the small mounds on her chest were rising with each breath, her cock was now semi erect, with a drop of cum still hanging from its tip. And she was smiling, a perfect smile, full of bliss, mirroring my own state of blissfulness.\n\n\"It's definitely yours, it tastes like jasmine\" I answered back smiling.\n\n2.The week-end\n\nFollowing our special massage last night, we slept together again. The next day being Saturday, I didn't set an alarm on my phone, so when I opened my eyes the sun light in the room indicated it was already late morning. Mali was still sleeping, holding me tight, with her head on my shoulder, and her right leg draped over my own leg. I really needed to pee, and this sensation was almost painful for my morning boner, so tried to move slowly, not to wake her up. But our bodies were glued together with the dried cum from last night. This move caused a small stinging on the skin, and she opened her eyes.\n\n\"Good morning, beautiful!\" I whispered, caressing her brown curls.\n\n\"Good morning!\" she replied, and rolled off me to the other side of the bed, stretching her body.\n\n\"I'm sorry I woke you up, but I really need to go pee,\" I said, and got out of bed.\n\nJust as I was struggling peeing, which is always difficult with an erection, suddenly I felt her beside me.\n\n\"I need to pee as well, if you don't mind,\" she said laughing, as she pointed her similarly erect penis toward the toilet bowl. \"I see we both have the same problem pissing with a morning wood.\"\n\n\"Here, let me help you\" she said, and she gently cupped my balls with her hand, caressing them. And just like magic, my piss started to flow. A second later, her jet landed in the toilet bowl as well, and we both started laughing whole heartedly. When we finished, she took control of my penis, and stroked it softly, to help the remaining drops out, so I reciprocated. Still holding each other's cocks, we started kissing right there, gently tugging them.\n\n\"I think we should go and shower, or else we'll not stop until we cum\" she whispered.\n\nBut I didn't let go of her cock, and she didn't let go of mine. We walked like this inside the shower stall, where we let the water rain down on us, washing away the oil, the sweat, and the dried cum from last night. And during all this time, we caressed each other, held one another, kissing, battling tongue on tongue, and shaft on shaft.\n\nAfter we finished toweling, we went to the kitchen, naked as we were, and prepared breakfast together. We had some milk and cereals, and after that we went on the living room couch to drink our coffee. We were sitting just like last evening, each on either end of the couch, but with our legs intertwined. Her small feet were in my crotch, and her toes were playing with my balls, gently caressing up and down my cock. I tried to do the same, but I abandoned quickly, since I didn't have her dexterity and didn't want to hurt her. She laughed, saying that she had a lot of experience giving foot jobs, and I could tell she was telling the truth. My penis was so erect now that it hurt, and her cock was almost as hard as mine.\n\n\"So, what are your plans for the week-end?\" I asked her.\n\n\"I really haven't thought about it. Last week-end here I worked, because I had to finish cleaning and arranging the house. But now, I have no idea. If you have other plans, I could visit my friends, and see what they're up to. Or we could hang out together\" she answered.\n\n\"Usually, I work during the week-end, but this habit has to change. Let's hang out together, do something fun,\" I proposed.\n\n\"Ok. Like what? Even if I've been in this city for more than a year, I didn't do anything fun yet, except our massage sessions together,\" she added smiling seductively.\n\n\"Let me think about it. Hmmm... How about we go hiking? I know some good trails not very far away.\"\n\n\"Hiking? Never done that. This is like having a walk in the mountains?\" she asked curiously.\n\n\"No! It's more than that. It's more like a real sport, going up and down mountain slopes. And through some woods. And the views are spectacular. Are you up for it?\"\n\n\"I'll take your word for it. Let's go!\" she replied.\n\n\"Go and change into something comfortable, and suited for walking on rough ground, and we'll depart as soon as we're ready,\" I told her. \n\nI finished changing into my hiking gear, prepared a backpack with water, and some sandwiches, and in about 10 minutes I heard her soft footsteps behind me, in the kitchen. When I turned around, I was greeted by a magnificent view: she was dressed in a short light blue dress, just above the knees, which left a good amount of cleavage opened for the eye, and a pair of white flat shoes. Her hair was arranged in two pigtails, and she had the look of a teen prepared to seduce me, not to go with me on a hiking trip. And it was working, I could feel my cock waking up in my shorts.",
        "\"These are the most comfortable clothes and shoes I could find\" she said, and even flushed a little when she saw the hungry look in my eyes. \n\n\"It looks fantastic, and you're smoking hot in that outfit. Unfortunately, it is totally unsuitable for hiking. Those shoes will not resist more than a mile on a mountain trail. We'll stop on our way to a sports depot, to buy something more appropriate\" I told her.\n\n\"Oh! Ok, you're the master hiker,\" she said with a smile.\n\nWe did exactly as I said, and we had a wonderful trip in the mountains. Even if she wasn't used to this kind of activity, she enjoyed it, and I enjoyed being with her. We returned home in the evening, tired, but happy. \n\nI ordered some pizza, and we went to shower before dinner, each in his bathroom.\n\nAfter we had dinner, I declined her offer for a massage, insisting that week-end is her time off, and she clearly said that she considers massage a part of her job description. So, we got on the living room couch, and I started to browse the tv channels, hoping to find something interesting. We were both in our usual home clothes, she in a pair of lace boy shorts, and a lace tank top, and me in my shorts and a t-shirt. She was cuddled in my arms, waiting for me to choose something to watch.\n\n\"You know, I'm getting dizzy from you changing the channels so fast. Why don't you leave it somewhere, or find something on the internet to watch,\" she said after 10 minutes or so.\n\nAnd that is when I came with the idea, and holding her a little bit tighter in my arms, I asked her.\n\n\"Then why don't you find something educational, that could instruct me how to handle a ladyboy?\"\n\n\"I think you can handle this ladyboy right here just fine\" she replied immediately. \"But I could show you some things that could be instructive. May I have the remote?\"\n\nTaking the remote, she switched quickly to the tv's web browser, and after logging in on a web site for adults, she started searching for something.\n\n\"I'll show you this because I trust you, and I saw that you have a good understanding for my background. When I was back in Thailand, my life was different, and I had to do all sorts of things that I wouldn't even consider now.\"\n\n\"Don't tell me you filmed a porn video?!\" I asked a little bit shocked.\n\n\"Yes, I did. If you don't want, I'll not show it to you,\" she said quickly, and clearly embarrassed.\n\n\"No! We discussed about honesty, and I want to know you in all your features.\" Honestly, I felt a little bit unsure about seeing that clip that, and surprisingly, I felt a little bit jealous. I looked at her from the side, as I was holding her in my arms, and she was now uncertain as well about it, clearly had her own internal conflict about showing me her porn clip.\n\n\"You sure? Will you be able to look at me the same way after watching me fucking and getting fucked by strangers?\" she asked, and her voice trembled a little.\n\nI put my fingers on her chin, and softly turned her face to look at me.\n\n\"Mali, I know we've only met very recently, and anyhow you're my employee, but I can't help starting to have some feelings. And...\" \n\nShe interrupted me right there, and I could see in her big eyes that she was having a hard time saying it.\n\n\"I have some feelings for you. Starting with our discussion when we first met, when you were so understanding, and honest with me. For the first time in my life, I didn't feel like a sexual object in the eyes of a man. Even the guy with whom I came to the US looked at me that way, and treated me in the end just like a fetish fuck toy. But with you it's not like this, and I really don't know how to handle it.\" Her eyes filled with tears as she spoke.\n\n\"I don't know why I wanted to show you this. A part of me wants to tell you that I'm not the kind of girl you're considering me, and treating me accordingly, the other part loves how you treat me, just like a normal girl, a girl that never had to sell her body for money.\" The tears started rolling on her cheeks, and her voice trembled, as she continued speaking.\n\n\"But I still want you to watch this, because if you really want me, you'll want me even after seeing what I've been, in spite of my past\" she said sobbing.\n\nI was having a hard time finding the right thing to answer, especially because I was conflicted myself. I just met this girl a couple of days ago, and she was my employee on top of other things. And I realized that deep down inside of me, some sentiments, some real attachment appeared. It was now more than considering her a pretty girl, with which I had some naughty time when she gave me an erotic massage. \n\nI wanted to say a lot of things, but instead I lowered my head, and kissed her lips. First it was just a small peck on the lips, and I could feel her getting stiff in my arms. When I did it again, I could feel her own lips responding, and her body relaxing, like she finally understood what's happening. And then we started tasting each other's lips, until she turned her body entirely, sitting now across my lap. From this position we were at the same eye level, and she was holding my face in her hands, and was looking at me with a hunger in her eyes, which were still wet with tears. Mali's lips slowly approached mine, and this time when our mouths met, our lips and tongues started tasting each other, and it turned into a very long and passionate kiss. Her crotch was grinding on mine, and I could feel her hardon through the lace panties. My own cock was now erect, tenting my shorts.\n\nBut after what it felt like an hour of kissing, she stopped, and said to me, while breathing heavily \"Let's watch the video, and you'll tell me what you think about it.\" She moved, and cuddled again comfortably in my arms, looking toward the tv.\n\n\"Ready?\" she asked, holding the remote.\n\nI could feel my heart beating in my throat, and my cock was still painfully erect, and separated from her ass just by our clothes. All I could answer was \"Ok.\"\n\nAnd she pressed play.\n\n3.The video\n\nAt first, a girl dressed in a school girl's uniform entered a room, and started moving around a little awkwardly, like showing off for the person holding the camera. She looked vaguely familiar, and I realized it was Mali few years ago. She was wearing a heavy make-up, and her features were a little bit rougher then currently, a little bit more masculine. She was still a pretty girl, but I liked her better now, with more curves, and a rounder face.\n\nThe girl on the screen starting moving around even more lasciviously, and you could see by the way she moved that she was a dancer. And the camera was filming her from different angles, until finally offering a view from downwards. Now we could see under her short skirt, and I noticed she wasn't wearing any panties, her long cock being semi hard, and her hand started tugging on it. Her penis became quickly hard, rising up the skirt, until its bulbous head was showing underneath the skirt's hem. Afterwards, she did a quick strip tease and went on to the other side of the room, where there was a bed, with a chubby white guy lying with his face down. I'm not an athletic type, more of a normal body type person, so I felt secretly satisfied that I was looking better than this guy. But my jealousy returned when she got onto the bed, and after pouring a copious amount of oil on his back and ass, she started massaging him. This normal kind of back rub lasted for only a minute, and then she mounted on his ass, and continued her massage. This time, her hard penis was resting between his ass cheeks, moving back and forth along with her hands massaging his back side. \n\nFrom there, things started to progress in a more rapid manner. Her hands started massaging his ass cheeks and, just as she's done for me before, her thumbs were sliding in the guy's ass crack, until hitting his anus. Now the camera was offering a close up view from above his ass, and we could see her forefinger penetrating the guy's ass. As he was moaning heavily, she inserted her middle finger as well, finger fucking him. Her hard penis was just a few inches away, and when her fingers were withdrawn, the cock head slipped inside. A loud groan came from the man, and he lifted his ass a little, helping her shaft enter.\n\nIt was clear that she knew what she was doing, because she was using small strokes, helping his ass taking her in. But those small strokes soon turned into longer strokes, and finally her cock was buried in his ass to the hilt. And that ended all the gentleness she showed before, as she started pounding him harder and harder, getting a deep growl from him each time, as she pushed herself in his ass. More than that, she was teasing him, pulling out completely, and then shoving her whole penis in one movement, again and again. \n\nWhat I found interesting and shocking in the same time, was the guy's dick. He was of an average size, like me, and his erect cock was pointing backwards, between his legs, and it was visible each time the camera filmed the couple form behind. His dick was leaking, and a clear liquid puddled underneath. First, I thought he ejaculated, but the flow didn't stop. That must have been a lot of precum, showing he was enjoying a lot this hard fucking.\n\nSuddenly, the camera, which before was moving around the bed, showing different larger angles and close ups of the action, stopped moving. From the small shaking of the image, I could tell it was being placed on a tripod. After the image stabilized, another naked white guy appeared from behind the camera. This one was the athletic type, muscled and heavily tattooed, and his very large penis was fully erect. Without any further preparations, he went behind Mali, positioned his cock at her backdoor entrance, and with only one push he was in. The girl cried in pain, it was visible that she didn't enjoyed it at all. But he didn't stop. He grabbed her hair, pulling her head backwards, and started fucking her relentlessly. \n\nSeeing this I felt my whole body becoming tense, holding Mali more strongly, like trying to protect her. She also had a tremble, and cuddled even better in my arms, like looking for my protection. But my eyes remained glued to the tv screen. My previous erection disappeared completely.\n\nHer cries on the video started to descend, as her ass was becoming accustomed with the guy's giant penis, but no pleasure whatsoever was visible on her face. Nonetheless, she started moving in conjunction with the guy fucking her, as she herself was fucking the chubby guy.\n\nAt one point, the athletic guy retreated from her ass, and pulled her out the other guy's ass, showing her how to change her position. The chubby guy also turned on his back, and with his head pointing toward the camera. Mali positioned herself on top of him, this time in a 69. As she started fucking the chubby guy's mouth, the athletic one penetrated her once again. \n\nI was feeling that all this fucking will take forever, and my jealousy was taking over me. But, after a few more minutes, the athletic guy pulled out and patted her butt, showing her how to move. This time, she kneeled in front of the camera, and both guys were standing on her sides, stroking their cocks. First the chubby, and afterwards the athletic guy ejaculated on her face, in her hair and in her mouth. I heard how one of them ordered her to swallow, and the athletic guy even started scooping the cum with his fingers, and pushing it in her mouth. At this moment, she was having a lost look in her eyes, and she obeyed, and opened her mouth to show that she swallowed everything.\n\nThe clip ended showing her masturbating on the bed, tired, with a forced smile, until she ejaculated.\n\nAll this time I was holding her like I was about to lose her, and she was sunken in my arms, feeling even smaller than she actually was.\n\nWhen the video ended, we remained both silent for a few minutes, and I could hear my heart beating loudly, like I had run for a mile. If usually I get turned on by porn videos, this time I felt like I had been violated personally.\n\n\"I don't want to see this clip again\" I told her.\n\nMali moved her body a little, and looked at me with a certain sadness in her eyes.\n\n\"Please make love to me\" was all she said.\n\nAnd everything disappeared from my mind, as I lowered my head to kiss her full lips.\n\n4.Making love for the first time\n\nAfter making out for a few minutes on the couch, I scooped her slender body in my arms, and took her to the bedroom. She was surprisingly lithe, and she held her arms around my neck, kissing me all the way over there. Once we got there, we dropped together on the bed, kissing and caressing each other, help one another taking off our clothes, until we were both naked.\n\nWe were a ball of tangled hands and legs, with our mouths glued together, our cocks rubbing to one another in the motion of our bodies. I was so hungry for her, I wanted to taste her so badly, that I had to control myself not to bite her too hard, or not to manhandle her too roughly. \n\nIt seemed that we were kissing forever, when I decided to put a stop on this, and take charge of the action. She even sighed a little when my mouth left hers, and started to kiss her neck, her ears, and slowly glide downward. My lips took a break at the small mounds on her chest, playing with the nipples, making them erect and hard, delighting my ears with the groans coming from up above, where Mali was panting, breathing heavily. When her breasts were just a mess o f my saliva, and her nipples couldn't take more kisses and small bites, I continued my journey to the south. I paid my respects to her belly button, and once again resumed my downward motion.\n\nWhen my chin touched the base of her penis, I knew that I arrived in the promised land, where everything was virgin territory for me. So, I kissed gently her pubis, where the tiniest landing strip of pubic hair indicated that I was moving in the right direction. My lips and my tongue continued caressing her intimate area, carefully avoiding her penis. I wanted to touch it, but I still felt awkward about. I never touched another penis beside mine, and before this day, I never even wanted to do that. But now, a desire nestled deep in my groins forced me to search for it. Instead of kissing it directly, I started licking and kissing the area around it, the inside of her thighs, eliciting moanings of disapproval from Mali. She took her own shaft in the hand, tugging on it lightly, pointing it toward my mouth as if by chance, wanting me to touch it by my own will. \n\nSlowly, I was getting used to the idea of making love to another cock, especially that Mali's penis didn't looks masculine at all. Even if it was long, it was slim, with its head slightly more bulbous, and it looked so natural on her feminine body. When I was rubbing my face on it, while kissing her pubic area, I could feel that its skin was really soft like velvet, but with a hardness underneath that only a powerful erection can produce. And the smell was overpowering, because it smelled like what else, but jasmine.\n\nAt this moment, Mali couldn't take it anymore, and started begging with a girly voice. \n\n\"Please, Mike, please! Kiss my kitty!\" I almost laughed, because it was the first time when I heard her talking about her penis, and it seemed to me that \"kitty\" was a hilarious name for such a big penis. But, on the other hand, I wanted to caress it, to kiss it, to play with just like with a kitty. So, I started kissing her fingers which were holding her \"kitty\" pointing at me, until my lips gently touched her shaft. At first, it felt like fire, and her body trembled. She let out a deep growl, and I don't know why, but I thought I did something wrong. \n\nI backed of immediately, looking at Mali with concern.\n\n\"What did I do? Is there something wrong?\" I asked her.\n\nAll she said was \"No, silly, get back to it!\"\n\nAnd this time she made no more innuendoes, but pulled my head toward her penis until it touched my lips again. She moaned again, but this time I knew that all she felt was pleasure. \n\nAnyway, now all my fears vanished, and it felt like the most natural thing to do. It was like all my life I prepared for licking and sucking her cock. And when I let it slip in my mouth, the sweet taste of her precum filled my mouth. I groaned, and in that moment all self-control disappeared. Pure lust and hunger filled me, and I really started making love to her \"kitty\", sucking it, taking it deep until I felt like gagging, rubbing it on my face, licking and kissing it.\n\n\"Stop, Mike, or I'll cum right now!\" she said sighing, and pushed my head away, making her cock leave my mouth with a pop. Her penis was shining, coated heavily in my saliva, and my whole face was wet and sticky as well. I could feel the taste of her precum in my mouth, and wouldn't have wanted to stop, because I had a strong feeling that her cum would be just as sweet.\n\nBut I followed her lead, and left her penis alone. Nonetheless, I didn't pause our love making, and I started licking and kissing again her perineum, moving towards her rosebud. This time she let do my job, opening her legs even better, and pulling her knees slightly towards her chest, to allow me a better access to her ass. And I gladly took the chance, and attacked her backdoor, which looked exactly like a rosebud in the spring. It was small, neat, and had the cutest pale pink color. \n\nAfter kissing it, I started to lick it hungrily. As a prelude for my own cock, I tried to push my tongue inside, making it open for me. And it did, letting my tongue slip inside. I was lost in my love making to her anus, when I heard her moaning \"Fuck me, Mike! Put your cock in me, now!\"\n\nIt was a surprise for me. Being so immerged in my adoration for her genital area, and her body, I totally forgot that this was just foreplay. She was done with the teasing, and now she was asking for the real thing to happen.\n\nEven if I was a little disappointed to take my mouth away from her sweet ass, I obliged. When a stood on my knees between her legs, I saw that she was handing me a bottle of lube. As I wasn't a total noob about anal play, I knew exactly what she wanted, so I used the oil to make my cock and her ass nice and slippery.\n\nThat's when we got to the main act, my cock resting just on her rosebud. I started pushing slowly, worried that I could hurt her. As I mentioned before, my penis wasn't as long as Mali's, but it was muck wider. Probably she thought that I was once again teasing, because when she saw that I just probing at her anus, she pushed her ass, making my cockhead to enter completely.\n\nWe both growled \"My god!\" as a new feeling enveloped me. Her inside was hot like fire, and smooth like silk. I let my cock head buried this way for a few seconds, enjoying this glorious pleasure. And then I pushed another inch. I pulled back a little, and pushed again a little deeper. And I continued this motion until my penis disappeared entirely inside of her ass. During this time, I was watching transfixed the view of my cock entering her, the contrast between her light chocolate skin, and my white penis. Her \"kitty\" was fully erect and twitching, and her hands were grabbing the sheets, as if she would fall otherwise. Her eyes were closed, and only groans of pleasure escaped her mouth.\n\nI started moving slowly, pulling out almost completely, and pushing back again to the hilt of my cock. That's when she put her legs around my waist, embracing me, pulling me inside. She started to set the rhythm of my movements with her legs, indicating wordlessly when to fuck her harder, and when to slow down.\n\nNotwithstanding, I was losing control little by little, as pleasure and lust engulfed me completely. It was then that she whispered, loud enough for me to hear \"Don't cum yet... pull out when you feel it's coming...\" \n\nSince I knew I wouldn't last long, I obeyed, and, regretfully, pulled out. As if just waiting for this moment, Mali literally jumped with a surprising vigor for her previous state of abandonment, and she was now all over me, knocking me down. She was kneeling on top of me, kissing me again, holding my head in place with both her hands. It wasn't just kissing, she was trying to eat my mouth, my lips, my tongue, while rubbing her penis and her ass on my cock.",
        "The kissing didn't last long, and she repeated my previous moves, licking and kissing my neck, my nipples, my belly button, until she reached my penis. But she didn't tease me like I did with her, taking my cock directly into her mouth. Even if I had had sex with only a few women in my life, I could tell that she was a champion of blowjobs, and it was by far the best cock sucking of my life. She knew how to get me on edge, refrain me, and start again. And when I thought I shall explode, she withdrew completely, her mouth searching again for mine.\n\nAs the near orgasmic sensation was diminishing, she moved her body forward, until her anus was right above I mouth, pinning my head between her thighs. Without hesitation, I started kissing and licking the hole which I fucked only minutes ago. And this time it wasn't so easy, because she was grinding her ass on my mouth, gaping her anus just by using her muscle control coming from lots of experience, forcing my tongue to penetrate her. I was almost breathless when she let her ass slide downwards again, until it reached my cock. She was now face to face with me, her eyes full of lust, her hair dump with sweat. And as her mouth attacked mine, her ass started rubbing again on my shaft. But this time she did it with a purpose, knowing well what she wanted. It took her only a few moves until my cock head was positioned at her backdoor opening, and she pushed. In just one move, my penis was buried entirely inside her ass, finding again that hot and silky shelter.\n\nMali was now fucking me gently, undulating her hips, riding me while we kissed. I could feel her hard nipples on my chest, her tongue in my mouth.\n\n\"Don't come yet, please!\" she whispered in my ear. \"I want to fuck you and cum together!\"\n\nI tried to refocus my eyes, and take a good look at her, to catch her meaning. But now she was riding me sitting straight in my lap, with her eyes closed. Was she talking about continuing to fuck like this, or she literally wanted to fuck me? For the first time, I realized that her cock was also able to fuck, and that she may consider fucking my ass as well. Nonetheless, the pleasure coming from our fucking quickly made me forget my worries, and my brain was unable to concentrate on anything else but this beautiful girl riding on my cock, with her pretty face showing the fact that she was also enjoying this a lot.\n\nWhen I felt the familiar stinging in the thighs, announcing the moment of imminent orgasm, I patted softly her legs, letting her know. Mali immediately dismounted me, and returned for a new series of kissing. After a few minutes of kissing, during which my sensation of ejaculation diminished, she mounted again her ass above my face, but now she was oriented toward my groin. It was the classic 69 position, and for the first time in my life I was licking sucking a cock, while my own penis was sucked. But this time Mali didn't remain too much time focused on my shaft, but licked her way downward, on my perineum, until she reached my asshole.\n\nDue to the height difference between us, her anus and cock were now too far away for my tongue to lick, so I rested my head back, letting pleasure taking over. Mali really knew how to handle an asshole, and soon enough I was totally relaxed, allowing her middle finger to penetrate me. As I said, I had some previous experience with anal play with my ex-wife, but none has prepared me for this. Mali knew all the sensitive points, had an intimate knowledge of the outside and inside of my ass, and soon I was sunk in a sea of pleasure. I could fell my cock licking precum, as she was gently caressing my prostate, and licking my rosebud in the meantime. Soon, another finger was pushed in, but I felt no pain at all. She continued playing with my ass for some time, until my body starting to tremble announcing a new orgasm. That's when she stopped and withdrew her fingers, denying me the orgasm once again.\n\nMali kneeled between my legs, and was now oiling her cock, and my anus. As my tremors diminished, I anticipated what will happen in a minute, and I was surprised that I couldn't find any more that concern deep within. Clearly, I was now accepting it as the most natural thing, exactly as I accepted making love earlier by fucking her ass.\n\nSo, when her cock head touched my rosebud, I didn't tense up, but instead had to fight the urge to push my ass forward, to speed things up. Mali knew exactly how to handle this situation, and when her slender shaft pushed on my backdoor, it opened invitingly, accepting her inside. She lifted my legs, helping them to rest on her waist, and resumed her pushing and pulling. After her cock was buried entirely to its hilt in my ass, she started a gentle fucking. But it didn't last long, clearly her lust taking over, causing her to fuck me with longer and more rapid strokes, making me let out deep growls and moans of pleasure. \n\nMy cock was licking precum heavily, forming a small puddle on the belly. I felt again the stinging sensation in my thighs, but this time I thought that I'll have a dry orgasm, that nothing remained in my balls after licking so much precum. I tried to warn her about my imminent orgasm, but this time she didn't deny me.\n\n\"Yes, baby! Let go! Give me your cum!\" was all she said, panting, while she moved her cock more and more rapidly in my ass. My penis was now twitching and dangling around, due to her powerful movements.\n\nAnd just when I thought I'll will not be able to survive the waves of pleasure hitting me in crescendo, my penis erupted. Despite my earlier concerns, my penis ejaculated in long ropes, which were landing all over my chest, and Mali's chest, and the bedsheets.\n\nImmediately Mali pulled out, leaving my asshole gaping, craving for her cock, and erupted as well on me. Her ejaculation was as powerful as mine, reaching even on my face.\n\nIf a third party would have been present in my room, he would have thought it's a bedlam. Mali and I were panting, covered in cum, with our cocks still erect, dripping cum, and we were both laughing, while breathing heavily.\n\nEventually, Mali dropped next to me, draping and arm over my cum smeared chest. She kissed me on the mouth, and then she gently licked some drops of cum on my cheek. We were both exhausted, but in a state of total beatitude.\n\n\"You know...\" said Mali in a spent whisper, \"I've been fucked a lot, and have fucked a lot, but this is the first time I made love.\" And she kissed me again.\n\nI would have liked to able to say something sweet, or at least nice, to let her know that I was feeling the same way, but I was unable to utter a single word. Instead, I kissed her on the mouth, allowing my tongue to communicate those words to her tongue.\n\nThat's how we both fell asleep, embraced, exhausted, full of cum, and extremely happy. Or maybe we were in love?\n\n \n"
    ],
    "authorname": "manhasso",
    "tags": [
        "romance",
        "transsexual"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-unexpected-housekeeper-ch-02"
}