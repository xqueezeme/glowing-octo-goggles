{
    "title": "Surviving the Rich-Sunshine and Sir Ch. 07",
    "pages": [
        "Author's Note: I apologize profusely for the delay. I actually had most of this and the next chapter done weeks ago. But I had surgery and unfortunately the medications I've been on have made looking at screens, particularly television and computer, almost impossible. I get dizzy, nauseous, and tired. So please bear with me, I don't have too much of the medication left. On the flip side, it allowed me to really think about the ending, and I realized the original ending doesn't work anymore. The characters and their trajectories have changed, so I'm excited to see where they end up. Thanks for reading!\n\n*****\n\nEmbracing Her Desires\n\n\"Because she is fierce!\"\n\n\"As a storm!\" Reagan yelled, her tiny fist in the air.\n\n\"As a shark!\" Jimmy roared.\n\nReagan sighed and groaned. \"Not like a shark Daddy. I don't like sharks.\"\n\n\"As a dolphin?\" Jimmy asked.\n\nReagan giggled, her strawberry blond curls bouncy around. \"Dolphins aren't fierce.\"\n\n\"They can be pretty brutal,\" Rae said from the couch. \"Don't be fooled by the smile, they're fierce.\"\n\nJimmy nodded, and said, \"And what are they singing peanut?\"\n\nReagan danced in her seat singing, \"Thanks for all the fish!\"\n\n\"That's my girl!\" Jimmy said, proudly. The two of them were at the kitchen table working on a costume for the living museum at Reagan's school. He had a gift for it, and Reagan was deep in a Daddy's girl phase, so any time spent with her father was treasured. \n\nA smiling Killian flashed through Rae's mind and her heart twinged. She shoved it away and stood. \"So how's it coming?\"\n\n\"It's goin good Mamas,\" Jimmy said. \"We'll get it finished in time for the big day.\"\n\nReagan gave her a thumbs up. \"Goin good Mamas!\" Rae kissed the top of her head as she passed. Mamas was what Reagan called her when she first started speaking, and it became one of those things that stuck.\n\n\"Don't forget about tomorrow,\" Jimmy said. \n\n\"What's happening tomorrow?\" she asked in a clueless voice. \"My lady brain plum forgot.\"\n\nReagan laughed and Jimmy straightened up. \"Alright smart ass,\" he said, in his best Scottish brogue, which was pretty terrible. \"I drop Reagan off at school, pack our bags, pick her up early, meet my brother at the hotel, swim, and have fun with family.\"\n\nReagan cheered and Rae said, \"I should be out of work no later than five, hopefully it won't take me more than hour to get to the hotel.\"\n\n\"You can't leave earlier?\"\n\n\"Not likely, but I don't have to be in until one on Tuesday.\"\n\n\"How generous of him.\" Coming from someone who missed family event after family event because of work the snide comment was completely uncalled for. She opened her mouth to reply but he kept going. \"So, one of my servers told me he was waiting tables at another restaurant and witnessed your boss drive a man to tears.\"\n\n\"That's ridiculous, Killian's merciless but-\" \n\n\"He seems like the kind of guy you'd hate from what I hear, and now that everyone knows my wife works for him I hear plenty.\"\n\n\"Rumors. Killian is-\"\n\n\"You've never been able to stand rich assholes who treat others like crap, I'm surprised you can stomach working for him.\"\n\n\"There's a difference between doing his job and treating people like crap. In fact he treats people-\"\n\n\"You should hear some of the stories. He sounds like a real piece of work.\"\n\n\"He treats people with-\"\n\n\"Money really make these people think they're better than the rest of us.\"\n\nHe was looking right at her as she tried to finish her sentence again, but he just kept going, getting louder. Rae could keep talking, raising her voice as well, but she'd only end up frustrated and upset so she shut up. What he had to say mattered more than anything she could possibly contribute to the conversation. That was the only conclusion that made sense anymore. It wasn't like she was in another room, she was always right in front of him, eye to eye, and he trampled over her words, without fail. She turned her back on him and grabbed a beer from the fridge, trying to hide the anger from Reagan. \n\nJimmy finally took a breath and Reagan said, \"What were you saying Mommy?\" \n\nAt six she already noticed how her father cut her mother off repeatedly. When she asked about it, Rae told her it was because he grew up in a big family, and big families have a tendency to talk over one another, which was true, to a certain extent. She'd even told Jimmy that Reagan noticed and he needed to stop, and he had. For a couple days. \n\nThe doorbell rang and she exchanged surprised glances with Jimmy. It was close to eight. He answered the door and said, \"Rae, you have to sign for a package. It's from your boss.\"\n\nRae walked over to the door, and signed for the package. It looked like clothing, which was an odd thing to have sent to her house. Killian had been in New York for a week, and was flying back tonight. The office had been quiet without him and Stella, and she was looking forward to seeing them both. \n\n\"What is it?\" Jimmy asked.\n\nShe ignored him and carried the box upstairs. Placing it on the bed she grabbed scissors and cut the tape. Jimmy appeared with Reagan right behind. \"Did you get a present?\" she asked excitedly.\n\nNot a present,\" Rae said, pulling a black wrap skirt, white high collar blouse, and black sweater from the box. \"A uniform.\" While the skirts from the boutique were all form fitting, the black wrap skirt would hang looser.\n\n\"A uniform?\" Raegan said, bewildered.\n\nRae smiled and kissed her head. \"It's for work. Time to brush your teeth and get your pajamas on.\"\n\nReagan made a face but disappeared out the door without another word. Rae hung the clothes on the closet door. She liked the skirt and sweater, but didn't care for the high collar on the shirt. \n\nJimmy stood next to her and said, \"A uniform? The new clothes you bought are unlike anything I've seen you wear before, and now this? None of this is like you, or normal.\"\n\n\"It is for him,\" she said, examining the ensemble. \"Everything, down to what most would consider the most trivial detail, is carefully crafted. He controls the narrative, therefore he controls the story. It's about winning.\"\n\n\"And how you're dressed is part of his strategy? C'mon Rae, you're just a...\" He caught himself, but glorified secretary hung in the air between them. He was unaware she knew how he felt. It was pure chance she'd overheard him say it to his brother on the phone, but she had. It came down to the money, she was almost sure of it. If she were making the money she was at a job he considered equal to or a step above his own that would be one thing, but she was making only a thousand less a year with better benefits as a glorified secretary to his management position. \n\n\"Well you'd know better than I,\" she said. \"Having dealt with the man for two years before going to work for him.\"\n\n\"It doesn't make you uncomfortable that your boss is picking out clothes for you? I am woman hear me roar, you?\"\n\nShe shook her head and said, \"Look at this outfit. The women I've seen wear this style are professionals who like to express their femininity by wearing a stylish sweater and boots instead of a suit jacket and sensible heels. This is about conveying a certain image to the potential client we're meeting with tomorrow.\"\n\n\"Which brings me to my next question,\" Jimmy said, crossing his arms. \"Why would you be meeting with a client? You're not a lawyer.\"\n\nShe smiled and said, \"I'm going to look up Mr. Bennet and find out. Killian has a reason, he always does.\"\n\nRae tucked Reagan in and then went downstairs to look up Julian Bennet. He'd built a successful business from the ground up and now had stores all over the Midwest. When the recession hit and many companies established hiring freezes, he did the opposite and gave his people raises. His logic being, they needed the money more than ever. His employee turnover rate was one of the lowest in the nation and two of his three daughters ran the company alongside him. Rae looked up his daughters as well and understood exactly what Killian was doing. She smiled and sat back thinking about the impression he was hoping to make. She could do even better.\n\n*************************\n\nRae secured her hair right behind the base of her ears and pulled on a pair of black boots. She looked in the mirror and smiled. The ruffle blouse she'd bought over a year ago as an incentive to lose the weight wrapped around her waist and the top of her hips, then tied in the back, the ruffles going around her collar and down the front. Once she put on the sweater it looked like a high class blouse, and so much better than the one Killian sent. She threw on her coat and rushed out the door. Finding the family photo she wanted took more time than she expected and now she was running behind. She was about to throw her bag on the passenger seat and noticed an envelope with Mamas written across it. She opened it and tears almost overwhelmed her. Reagan had drawn a picture of them holding hands, and Rae was in her new outfit. Reagan had written that she liked the uniform and that Mr. Laird seemed nice, and most of all she was proud of her Mamas. The spelling errors were cute in and of themselves, but the sentiment about Killian and being proud meant she'd caught everything the previous evening and she wanted to make her mother feel better. \n\n\"I love you so much sweetheart,\" Rae whispered, keeping the tears at bay. She didn't have time for them. \n\nIt was odd that Jimmy hadn't come home after dropping Reagan off at school, but she assumed he'd gone to get coffee and was stuck in line. She pulled out of the garage and headed down the road, already thick with rush hour traffic. At a stop light she texted Killian to let him know she was running late, wishing Stella was at the office. But she was taking Mondays off from now on, slowly phasing herself out. \n\nThe light changed and Rae pressed down on the gas. Her car shuddered, coughed, and then died. \"No,\" she said, turning the key. \"Not now.\" She kept trying but it refused to start. Horns started blaring and she flipped on her hazards, still trying to get the car started. \"Come on. Not now!\" \n\nIt was no use. She punched the steering wheel. \"Fuck! Goddamn fucking fuck! Fuck!\" The cacophony of horns piled up behind her, the hazards only visible to those in her immediate vicinity. She dug her insurance card out of the glove box and called the emergency number. After a couple minutes of back and forth the representative said she'd send a tow truck. She called Jimmy next, surprised when it rang the full seven times and went to voicemail. \"My car died, and I'm sitting in the right lane at the route 34 light. A tow truck is on the way, and I need you to drive me to work. Call me.\"\n\nShe texted him for good measure, and then the lights of a police cruiser were suddenly behind her. The cop made sure there was enough space for the tow truck when it arrived while she stood by the side of the road calling Jimmy for the third time. It went immediately to voicemail. She stared at her phone shocked, and then fury swept through her. She wanted to shout, scream, and rage text Jimmy, but she maintained her outward calm and texted Killian instead, informing him of the situation. He was less than thrilled.\n\nThe drive to the mechanics was tortuous. They hit every light, and the truck never managed to reach the speed limit before having to stop. She kept trying Jimmy, but her calls went straight to voicemail every time, infuriating her further. Finally she gave up on him and called a cab. She was still forced to wait at the mechanics for another twenty minutes before it showed, her frustration reaching near epic proportions. She envisioned screaming at Jimmy, telling him off, and walking out on him for good. She'd left him once when Reagan was a toddler. Reagan had woken up in the middle of the night with the flu, and just like today he didn't bother answering his phone. Drinking with his buddies was more important. When he finally rolled in at six in the morning she and Reagan were gone. She'd spent two weeks at her mother's house forced to confront the reality that she could in no way support her daughter without Jimmy. He'd sworn to do better, but it was getting the DUI that finally curtailed his drinking. The only good thing to come out of the whole mess.\n\nThe entire cab ride she prepared herself for the lunch, going over what she'd learned about Julian Bennet. The driver pulled up in front of The Hillcrest and she practically jumped out of the cab. It felt odd walking in as a guest, and when the phone rang she had to fight the instinct to answer it.\n\nLucia ran around the desk and gave her a hug, while Ryan answered the phone, smiling in greeting. Lucia held her at arm's length and said, \"Is that the coat? Oh my God, it is! And I love the boots. Working for Mr. Laird looks good on you!\"\n\nRae laughed and started unbuttoning the coat. \"Thanks. It's definitely different.\" Lucia took her coat and Rae said, \"This feels weird and wrong. Let me hang up my coat.\"\n\n\"That would be inappropriate. I'll take the ticket Lucia, thank you.\" \n\nKillian's presence at her shoulder was warm, the undercurrent of electricity making the gossamer hairs behind her ears stand up. She closed her eyes briefly, forcing the shitty morning from her mind and relaxed her shoulders. Fixing a smile on her face, she said, \"Inappropriate is a bit of is stretch. I'm not one of the elite.\" She gestured to the desk and coatroom. \"This is me.\"\n\nHe smiled and pocketed the ticket. \"Not anymore.\" His eyes drifted over her body and he said, \"Nice ruffles.\"\n\n\"Thank you. How was your flight?\" She hated the measured small talk, but appearance was important. \n\n\"Just fine.\" The door opened and Killian transformed. There was no sign of the predator, he was loose and relaxed, exuding warmth and charm. He'd even forgone his usual black suit for a charcoal grey pinstripe, which actually lent itself to the friendliness in his demeanor. \"Julian,\" he said, holding his hand out. \"It's a pleasure to finally meet you in person. Camilla has nothing but praise, and she isn't easily impressed.\"\n\nJulian Bennet looked to be in his sixties with thick, grey and silver hair, and when he smiled the lines around his eyes made him look like a kindly grandpa who'd play with the kids and tell great stories. He shook Killian's hand and said, \"Killian. Camilla speaks highly of you as well, and all things considered that's impressive. I've never known anyone to have such a high regard for their ex.\" \n\n\"We are friends and colleagues always,\" Killian said. \"Regardless of marital status.\" Lucia took Julian's coat and Killian looked at Rae. \"Julian this is my assistant Rae Ingram. Rae, Julian Bennet.\"\n\nJulian shook her hand and said, \"It's a pleasure to meet you Rae.\"\n\n\"You too Mr. Bennet. Your store is the only one my daughter gets excited about going to.\"\n\n\"The samples?\"\n\n\"She calls it lunch.\"\n\nHe laughed and slid his ticket into his wallet. Rae fished her phone out of her bag to put it on vibrate, and a photo of her, Jimmy, and Reagan on a sailboat almost fell out. Julian saw it and said, \"May I?\" She handed him the photo and he smiled. \"Beautiful family, and quite the boat. Yours?\"\n\n\"Maybe one day,\" she replied. \"My father in law was in the Navy and never strays far from the water. He wanted to make sure Reagan knew her way around a boat.\"\n\nHe looked positively delighted and said, \"And does she?\"\n\n\"Well, she refers to the driver's side of the car as port and the passenger side as starboard.\"\n\nHe laughed again and handed her the photograph. \"Wonderful. If you'll excuse me for a moment, I'd like to wash my hands before we sit down.\" \n\nKillian nodded and watched him disappear around the corner while she put the photo back in her bag. When he looked at her, his eyes were full of pride, and appreciation. \"You researched.\"\n\n\"Why Mr. Laird, whatever do you mean?\"\n\nKillian laughed, and for split second she thought he was going to kiss her right there in front of everyone. Instead he slid his hands into his pockets and said, \"Well done.\"\n\n\"Every word was true,\" she said. He raised an eyebrow, and she fought a smile. \"I didn't lie.\"\n\n\"And Julian's already taken with your daughter.\"\n\n\"I am your assistant,\" she said. \"I'm doing what I can to assist.\"\n\nKillian's eyes flicked to the desk where Ryan and Lucia were trying to pretend they weren't watching. \"The ruffles were a better choice, and the hair style is perfect.\"\n\n\"Thank you. Mr. Bennet's daughters are an inspiration, on so many levels.\" \n\nHunger flashed through his gaze and she swallowed her breath to suppress the shudder. After Tony's they'd spent a week acting like teenagers, stealing moments together, which with Stella there wasn't always easy. But what he did with those moments left her yearning. Then he flew to New York, and she'd thought of him constantly, even coming up with excuses to call or text, although she didn't do either. She had some pride left, not a lot, but some.\n\n\"Right this way Mr. Laird,\" Lucia said, when Julian returned. Killian gestured for her to go first, so Rae walked with Lucia to a table in the main dining room, which was unusual, the fact that it was in the corner of course, wasn't. But then Killian surprised her further by hanging back slightly and letting Julian choose his seat first, which ended up being the corner chair.\n\nRae sat next to him and took a chance. She leaned in and said, \"Back to the wall-\"\n\n\"And know where the exits are,\" Julian finished, his eyes twinkling. \n\nIt was a variation of the saying she knew, and she smiled. \"The Chicago way.\"\n\n\"The gangster culture has had quite an influence on our city, hasn't it Rae?\"\n\nShe laughed lightly and said, \"It certainly has Mr. Bennet.\"\n\n\"I'd say Mr. Bennet is my father, but I'm too old for that now. Please call me Julian.\" \n\nKillian sat down and the talk at the table was light, with Rae getting Julian to open up and share some stories. She was right, he had some great ones. At one point she excused herself and went to the ladies room and checked her phone. It was filled with missed calls, multiple voicemails, and texts from Jimmy. He was sorry he missed her calls, he'd gone into work and forgot to charge his phone, it died and he didn't know, please call him he was worried. It was completely plausible, and every instinct within screamed it was total bullshit. He never mentioned going into work, not once.\n\nShe walked out of the ladies room and was just about to open the alcove door when Killian came through. \"You left Julian by himself?\"\n\nHe wedged his foot against the door and said, \"He's on a call with his wife. The respectful thing to do was give him some privacy.\"\n\n\"What if someone tries to come through the door?\"\n\n\"They'll have to cope.\" He slid a hand around her waist and pulled her to him, her body molding perfectly to his. His eyes flicked to the clips holding her hair back and he brushed his fingers down her cheek. \"I missed you.\"\n\nBefore she could respond, his lips were pressed to hers erasing the thought from her mind. Something about a door, but she didn't care enough to try and remember. She was exactly where she'd wanted to be since feeling him at her shoulder. Sliding her arms around his neck, and entangling her fingers in his hair, she devoured him, turning the tender kiss into a promise of passion yet to come. Killian returned her fire enthusiastically, tightening his embrace, the strength in his grip a turn on all its own. Suddenly he smiled and looked into her eyes. \"No better welcome home could a man receive.\"\n\n\"Oh, I could do so much more,\" she said, nipping his bottom lip then his chin. \"But we're in public.\"\n\nOn cue, something hit the door hard, and Ryan said, \"What the hell?\"\n\nRae covered her mouth laughing into her hands and ran into the ladies room, while a grinning Killian disappeared into the men's room. After a minute she returned to the table and Killian followed a few minutes later. Again, nothing about why Julian was in need of Killian's skill set was discussed, the lunch a light, social affair. Except it really wasn't. She understood her part and played it well, which was easy to do. Julian was the kind of person she enjoyed talking with, and getting to know. When the bill was dropped Killian insisted on paying since he'd extended the invitation, and after a bit of back and forth Julian relented. ",
        "Rae quickly checked her phone as they walked up front, almost amused at the indignant texts from Jimmy. His worry had transformed into hurt tinged with resentment. She dropped her phone in her bag and reached for her coat, but Killian held it open for her instead. She slipped her arms inside and then gave Lucia a hug goodbye while Killian put on his coat. \n\nJulian headed outside and she followed. \"Rae, it was a genuine pleasure,\" he said, a twinkle in his eye. \"You were his secret weapon, meant to set me at ease around the shark that is Killian Laird.\"\n\nShe laughed lightly and said, \"I'm glad he did. I had a wonderful time.\"\n\n\"So did I,\" he said, taking her hand. \"Take care. I'm sure we'll see each other again soon.\"\n\nKillian walked out the door just as the valet pulled up with Julian's car. They shook hands and Julian suddenly looked solemn and almost sad. \"There are no winners in this Killian. Lives have already been damaged enough, I don't want them ruined.\"\n\n\"I'll speak softly.\"\n\n\"Keep the big stick holstered,\" Julian said, getting into his car. \"Until you can't.\"\n\n\"Understood,\" Killian replied.\n\nJulian smiled at Rae and drove off, the weight of the world pressing down on his shoulders. The McLaren was suddenly in front of them, and the valet ran around the car to open the passenger door before she could. She sat down and a smile spread across her face, she was in the McLaren, Ryan would be so jealous. Rae glanced at the doors and saw Lucia, Ryan, and a few servers watching. She gave them a small wave as Killian secured his seatbelt. Everyone smiled and waved back, but she knew they were speculating about her and Killian, and she suddenly felt completely out of place. She was on the outside of the life she knew, not on Killian's level, but no longer on theirs. She was still working for the elite, but in a capacity that had friends and former colleagues serving her like they served them. \n\nKillian pulled out of the parking lot and headed for the office. \"So what's wrong with the car?\"\n\n\"Catalytic converter. It should be ready by tomorrow morning.\"\n\n\"You need a more reliable car,\" he said. \"How much?\"\n\nHer heart dropped and she said, \"How much for what?\"\n\n\"The catalytic converter.\"\n\nRelief washed over her and she almost laughed. \"Seven hundred, give or take.\"\n\n\"I'll take care of it.\" Suddenly he glanced at her smiling. \"Did you think I was going to insist on buying you a car?\"\n\n\"I wouldn't put it past you.\"\n\n\"A wardrobe is one thing,\" he said with a laugh. \"But a car? I don't think so.\"\n\n\"Good to know there's a line,\" she said, and then decided to have a little fun. \"Although, the soundest investment would be a car. That way the crisis that popped up today would be avoided in the future.\"\n\nHe side eyed her and said, \"That is a good point Rae. I have the wherewithal to make it work, and I really can't be kept on pins and needles wondering if my assistant will arrive for work when she's supposed too. A new car would take care of that.\"\n\nKeeping a straight face she said, \"I'll take this one.\" \n\nHe laughed as he pulled into his parking space. \"I'll keep that in mind,\" he said, and headed for the elevator.\n\nShe followed, her thoughts going to Julian's face, the fear and the worry. \"Julian's a genuinely good man.\"\n\n\"Yes he is.\"\n\n\"I'm assuming he has lawyers of his own, why come to you?\"\n\n\"Results.\"\n\n\"Did you actually drive a man to tears during lunch one day?\" He raised an eyebrow and she said, \"Too many to remember just one?\"\n\n\"I have, on occasion, gutted an opponent in ways they failed to anticipate, eliciting an unexpected and heightened emotional response.\" \n\nThe elevator doors slid open before she could reply, and the receptionist smiled. \"I hope lunch was a success Mr. Laird.\"\n\n\"Thank you Janice,\" he said. \"It was.\"\n\nRae pulled a small to go from her bag and placed it on the reception desk. \"Enjoy.\"\n\nKillian was already in the hallway and paused. Janice looked inside and made a surprised sound of delight. \"There goes my diet. How did you know?\"\n\n\"The cheesecake is my favorite too.\" Rae had their server give her one on the sly and paid for it without Killian knowing. \"You deserve to splurge now and again.\" \n\n\"Thanks Rae.\"\n\n\"You're welcome.\" She passed a surprised Killian and said, \"You're not the only one who pays attention.\"\n\nWhen they walked into Killian's wing he disappeared into the office, leaving the door open. She put away her things, then texted Jimmy letting him know she was at work and she'd call him later. Pulling up Killian's schedule on her computer, she went over the names for the next meeting again, so she could greet them accordingly.\n\n\"Rae.\"\n\nShe grabbed her phone and walked into the office. \"Yes si-\"\n\nThe door slammed shut and she was being carried across the room, every protest consumed before she could form a complete sentence. Killian yanked her phone from her grasp and dropped it on his desk, followed by her hair clips.\n\n\"You have a-\" \n\nHe devoured her mouth and swung a leg over the chaise. She laughed, still trying to speak around his lips and tongue. He sat down, wrapping her legs over his so she was on his lap. Kissing her deeply, he grasped her butt and rocked her along the stiffness in his pants. She inhaled sharply, the explosion of pleasure almost making her forget herself. He kissed and licked his way down her neck, her sweater ending up on the floor. \n\n\"We don't have time for this,\" she said, running her fingers through his hair. Her hips were gyrating against him of their own accord, and Killian's hands slid along her waist, then pulled the ties of her blouse free. \"You have meetings,\" she whispered, her resolve crumbling.\n\nHe kissed his way along the edge of her bra, and entangled a hand in her hair. \"Stop making things up.\"\n\nShe laughed and then Janice's voice filled the office. \"Rae?\"\n\nShe stilled Killian's head or tried too. He was too busy, devouring her breast to notice. \"Yes?\"\n\n\"There's a Mr. Mason, Mr. Grant, and Ms. Greer to see Mr. Laird.\"\n\n\"Thanks Janice, I'll be there in just a minute.\"\n\n\"She's lying,\" Killian growled, trying to stuff her whole breast in his mouth. It was a challenge he perpetually tried to rise to, but always failed to accomplish.\n\n\"Alright sir,\" she said, firmly grabbing his head. \"Do I need to teach you a lesson about restraint?\"\n\nHis eyes brightened in a way that made her shiver. \"Don't make threats you won't follow through on sunshine. As a parent you should know that.\"\n\nShe smiled wickedly and bit his lower lip. \"I never make threats Mr. Laird,\" she said, letting Laird drip like honey. \"I make promises. Now, you have a meeting.\"\n\nHe squeezed her ass and curled his hips. \"We'll pick this up later. I promise.\" He fixed her bra and then wrapped and tied her blouse, planting soft kisses on her neck the entire time. When he was done he grasped her face with both hands and kissed her forehead, nose, and lips. \"My Rae.\" \n\nShe smiled and got off his lap. Fixing her skirt, she grabbed her phone and sweater. \"Do you need a minute? A glass of water perhaps?\"\n\n\"Smart ass,\" he said, adjusting his pants, but smiling just the same. \"Bring them on back.\"\n\nRae smiled sweetly and walked out of the office, pulling the door closed. Although she was warm, she put on her black sweater. Fluffing her hair, she started down the hall repeating names under her breath, and slipping into her second skin.\n\n*************************\n\nKillian finished his second brief and sent an email to Declan Securities. While Julian's people had their own threat assessment done, the Declans were the best and he wanted to hear their thoughts regarding Julian's former employee before moving forward.\n\n\"Killian Laird's office.\" \n\nHis body stirred, Killian, liquid velvet rolling off her tongue. \n\n\"Yes, thank you for calling me back so quickly.\" Her tone didn't change throughout the short phone call, or the next one, or the next. \n\nHe listened, the rich sultriness of her voice cascading down his neck, shoulders, and back. The doors to the conference room were open, and she was sitting in front of her laptop, a stack of files to either side. As each call finished the stack on her left got smaller and the one on her right grew. She absently pulled her curls over her shoulder exposing her neck, and he followed the curve until it was swallowed by white ruffles. Her sweater hung over the back of her chair giving him a full view of how the blouse hugged her frame. She'd stopped shedding pounds at such an alarming rate, the constant stress and anxiety alleviated. The clothing from the boutique fit her like a glove, making every line and curve of her body tantalizing. The wrap skirt wasn't as snug, but the small slit had ridden upward as she shifted in the chair, revealing more and more of her thigh. He wanted to slide his hand along her skin and feel her warmth. He smiled imagining the quiver running through her body with every snap of the garters. \n\n\"Killian Laird's office.\"\n\nHer voice lifted him from his chair, igniting a primal desire to possess, to take the sensual creature before him and make her his. He loosened his tie a touch and rolled up his sleeves, each syllable striking a hedonistic chord within him. Temptress, seductress, sexy, alluring, all words she'd never apply to herself, and all falling short of what she personified for him. \n\n\"I'll let Mr. Laird know,\" she said, the smile on her face reflected in every word. \"Have a wonderful evening. Thank you.\" \n\nThe music of her voice was hypnotic, the call of a siren pulling him across the room. At The Hillcrest an invisible barrier separated them, a line of propriety that kept most men from acting on that call. But time and again, he'd noticed a certain tension run through another, and the inevitable head swivel towards the host stand where Rae was on the phone. It was the only attribute she didn't doubt, the rhythm and tone of her voice to elicit a positive reaction, from men and women. Life in general was too busy and loud for her to utilize her gift, but the phone was another matter entirely. \n\n\"Hello, this is Rae with Killian Laird's office, may I please speak...\"\n\nA siren's call was an apt description, and he'd demolished the barrier. She knew he was coming for her, but she gave almost no indication of it. Almost. Her chest rose a touch faster, the fabric of her blouse tightening ever so slightly. The trepidation and uncertainty had all but disappeared after Tony's, the eyes she saw him through less distrustful of his intentions. She embraced her desires, putting their battle of wills on the back burner. He smiled and rolled his neck. He held no illusions he'd won the war, not yet, but he would. \n\nTwo folders remained as he walked past and grabbed a chair from the corner. Armless, it was the only one that would do for what he had in mind. Placing it behind hers, he pulled her hair back and then slid his hands along her shoulders. She maintained her calm demeanor, in voice, but every time his fingers brushed her neck she shivered. He grasped her shoulders and raised her to her feet, then shoved her chair out of the way. Hooking his foot around the leg of the other, he pulled it forward and sat them both down, Rae snug between his legs. He buried his face in her hair and breathed deeply, the scent of her piercing his chest with warmth. As she spoke, he ran hands down her back, around her waist, and up to her breasts. Massaging her through her blouse he kissed that spot behind her ear and breathed, \"I promised sunshine.\"\n\nHer voice quavered slightly. Without missing a beat, she quietly cleared her throat and kept going. He smiled and ran his tongue along the shell of her ear, rubbing his fingers back and forth over her nipples, feeling them harden beneath the fabric.  \n\n\"Thanks again,\" Rae said with a smile. She hung up and rested her hands on the table. \"You, are an asshole.\"\n\nHe chuckled into her neck, and then rested his lips against her ear. \"You have two more calls to make. Finish.\" Her chest heaved and he slid a hand into the slit of her skirt and snapped a garter, eliciting that quiver through her body he loved. \"I said finish.\"\n\nHe snapped two more for good measure and she inhaled sharply, the whisper of a moan in the back of her throat. She started typing information into the calendar, her fingers trembling intermittently as she fought to maintain her composure. He was thoroughly enjoying making it difficult for her. Nuzzling her neck, he loosened the ties of her shirt until her bra was fully exposed, then retied it so the ruffles framed her chest. She opened the next file and grabbed her phone, trying to ignore his drifting hands as he nibbled on her earlobe. \n\n\"Hello, this is Rae with Killian Laird's office...\" \n\nThat cool, tingling rush from her voice, swept from the top of his head down his entire body and back, settling between his legs. The rhythm and tone hitting his groin like a roller coaster ride, making his cock thrum with every syllable. His mind was inundated with possibilities, the chaise providing a plethora of positions to choose from. He considered each as his hands roamed; stroking, pinching and caressing his sunshine, teasing and torturing her into a barely controlled frenzy of desire. She ended the call and he unsnapped her bra. Her breasts sprang free and she hung her head against his shoulder breathing hard. \n\n\"One more call sunshine.\" He snapped a garter and then unclasped it. Sliding to another he did the same. \"Finish quickly or I'll be forced to teach you a lesson.\"\n\nShe didn't move and he plunged his hand between her legs, the white satin and lace taut across his knuckles. She jerked in his grasp and he rubbed her clit furiously, increasing the pressure until she was writhing and whimpering, her movements massaging his now painful erection. His other hand wound into her curls and kept her head still while he kissed and licked her ear. Her whimpers escalated and she grabbed his wrist.\n\n\"Let go sunshine,\" he commanded, not easing up in the slightest. Her hips curled into his fingers and he drove them inside of her, but only the tips, swirling them languidly around her pulsing entry. \"I said, let go. If you don't I'll bend you over the table and take a belt to your ass. If I have to tell you again, your punishment will increase, and keep increasing until the lesson is learned.\" \n\nHe clenched her hair tighter and pressed his thumb gently into that spot above her clit, enough to bring her to the edge, but leave her hanging. She released his wrist and whimpered, \"Please, its torture.\"\n\n\"Then I suggest you do as you're told.\" He eased up and caressed her folds tenderly, then released her hair. \"Finish. Now.\"\n\n\"Yes sir,\" she whispered, and picked up her phone.\n\n\"Do not deviate from your phone voice,\" he said, kissing her neck.\n\n\"Phone voice?\"\n\nHe chuckled and pressed his fingers into her flesh, eliciting a yelp. \"Don't play that game with me sunshine. You know exactly what that voice does to men.\" He grasped her jaw, catching her gaze with his own. \"To me.\" \n\nHer irises fluctuated wildly, and she stared into his trapped. Sliding his thumb across her bottom lip he tugged gently at the center. The pout was too much too resist and he devoured her lips, sucking and nibbling on that tasty pout. Suddenly he pinched her clit hard, and she jerked in his grasp, but he only held her jaw more firmly refusing to let her look away. \"Don't you?\" She hesitated and he raised an eyebrow.\n\n\"Yes si-\"\n\n\"Killian,\" he said, his tone leaving no room for argument. \"Yes Killian.\"\n\n\"Yes...\" Her voice cracked and she cleared her throat. \"Yes, Killian.\"\n\nHis name was ambrosia on her lips, and he could barely hold himself in check. \"Finish,\" he said thickly.\n\nShe dialed the number and spoke with another assistant as he moved his fingers in small circles, around her stiff nipples and almost steaming hot clit. She didn't break, she spoke steadily and pleasantly, obeying his commands. She wanted to be dominated, and provoked him, hoping he'd put her in her place. He was only too happy to oblige. \n\n\"Wonderful,\" she said. \"Thank you. You too.\" \n\nShe placed the phone on the table and typed the information into his calendar. All the while he kissed and caressed her body with one eye on the screen, the blood rushing behind his ears. She picked up the file and placed it on the stack, then shut down her laptop. Her hands fluttered and she melted against him.\n\n\"Good girl,\" he said, kissing her neck. Moving to her ear, he grabbed her lobe with his lips and whispered, \"Just remember, you already have two strikes against you. One more and I'll be forced to discipline you.\"\n\nYes si-\" He drove two fingers inside her and she gasped, arching her back up. \"Yes Killian!\"\n\nHe smiled and almost leapt to his feet, loving the feel of her arms suddenly clinging to his neck. Carrying her to the end of the table, he kicked the chair out of the way. The chaise could wait, he wanted to take her on the conference table, just as he'd envisioned her first visit to the office. Right before her butt hit the table he yanked off her soaking underwear, ripping them in the process. He grabbed the back of her head and said, \"I'll replace them.\"\n\nHe didn't give her a chance to reply, he crushed her lips to his, the primal instinct to possess his sunshine overwhelming him. Entangling a hand in her hair, he yanked her head back and kissed his way down her neck, while sliding a hand along her thigh. He hooked her booted ankle high around his waist and she automatically did the same with the other. He smiled and devoured her breast trying to fit it all in his mouth, and growling in frustration when he couldn't. Laying her back, her blouse kept her breasts pushed together, and he flicked each nipple with his tongue then sucked them into his mouth making her moan beneath him. He looked at her and undid his pants. \"Tell me what you want sunshine.\" She hesitated and he clenched her hair. \"Say it!\" he commanded, his voice low and husky.\n\n\"Take me Killian,\" she purred, caressing his senses to the point he almost blacked out. \n\nHe pulled himself free and released her hair, holding her gaze with his own. \"Keep your legs wrapped around me unless I tell you otherwise.\"\n\n\"Yes Killi-\"\n\nHe fully intended to ease into her slowly, but her body was so wet and inviting the moment the head of his cock slid into her silky walls, his hips bucked and he buried himself inside her. She gasped and her eyes widened in shock. A growl rolled through his chest, and he slammed a hand down above her shoulder and took hold of her hip. He wanted to pound her relentlessly, all the times he imagined this moment pilling into his memory, but if he did he'd come too fast, and leave her wanting. Possessing his sunshine meant making her come so hard no other man would ever do. He smiled wickedly and slowly pulled out so just the head of his cock was inside her. Then he pulsed moving in small circles, and lifted her hips up and up until she cried out and threw her hands over her head. He had her. Surging forward, the tightness of her walls was almost euphoric. As was the sight before him. On the table, her breasts bouncing with every thrust of his hips, her skin flushed pink, and her hair a halo of curls, she was breathtaking. His Rae. \n\nSliding his hand from her hip to her back he lifted her chest, presenting her bouncing breasts to be feasted on. With a deep growl he latched onto one, and drove himself in deeper, her ragged breathing broken by a long moan of pleasure. Her fingers slid through his hair and her legs pulled him in with every thrust. \"Killian,\" she breathed. \"My God.\"\n\nHe moved faster and latched onto her other breast, wanting his fill before he finished. Her smell, his, and sex, filled his nostrils; every noise to escape her lips encapsulated his hearing, letting him know exactly how long she had before she burst; and the taste of her skin, the feel of her, inside and out ensnared him. He was as much hers and she was his, and the truth of that made his head spin. He lowered her back to the table and picked up force and speed, his eyes glued to hers. \"You're mine sunshine. Say it.\" Her mouthed worked silently and he unleashed the primal, pounding her with complete abandon. \"Say it!\"",
        "\"I'm yours Killian.\" \n\nHer muscles spasmed with every word and he slammed a hand down next her head. \"Again!\"\n\n\"I'm yours Killian!\" \n\nThe orgasm ripped through her and she cried out. Her muscles constricted around him, and with every ragged intake of breath they got tighter and tighter. His thrusts were almost manic and he felt the pull, push, roller coaster of ecstasy build from his legs, shoot through his hip and roar down his shaft. Her face got red and her breathing seemed to stop all together. He kept pumping, emptying himself into her, practically high as a kite. With one final thrust, he held himself there, and then collapsed on top of her. His heart pounded in his ears and it took a few attempts to catch his breath.\n\nRae wrapped her arms around him and he smiled, the euphoria lingering. Her fingers sliding through his hair made his dick twitch and he chuckled. Pushing himself up on his elbows he looked at her and she laughed. \"Not really the response most men are hoping for after sex.\"\n\nShe laughed harder and said, \"It's your face. You look about ten years younger and drunk off your ass. And I think your ego will manage just fine.\"\n\nHe grinned and straightened, pulling her up with him. \"Will it now?\" He kissed her softly and helped her fix her clothing, then fixed his own. \"I suppose making you come so hard you could barely breathe helps.\"\n\nShe shifted attempting to get off the table and he scooped her up in his arms. Sliding her hands around his neck, she brushed his ear with her lips. \"I suppose it does, Killian.\"\n\nHer sultry voice rocketed through his body and he carried her to the chaise. \"Give me a few minutes and I'll do it again sunshine.\" He swung a leg over the chaise and sat down, her legs draped over his thigh, and her head resting in the crook of his neck. \"There are so many positions I want to try with you here on the chaise.\" \n\n\"How many positions?\"\n\nHe grinned ear to ear. \"Plenty.\"\n\nShe laughed, and he marveled at how much more relaxed she was. She didn't flinch when he picked her up anymore, she even seemed to enjoy it. Maybe he'd slayed a demon or two after all. \n\n\"How is it exactly you're getting home this evening?\"\n\n\"Cab.\"\n\nHe ran his fingers through her hair, suppressing the urge to snort under his breath. \"Why isn't your husband coming to get you?\"\n\n\"Jimmy's brother is in the city for a wedding. They came a day early to spend time with us.\" \n\nHis hands stilled, and he said, \"And they can't pick you up on the way home?\"\n\nShe shifted, a slight undercurrent of tension suddenly running through her. \"They're spending the night at the hotel, and won't be back till tomorrow evening.\"\n\n\"Are you taking the cab to them?\" asked, already knowing the answer.\n\n\"No. It doesn't make any sense to do so.\"\n\n\"Do you want to go home?\" \n\nThe tension in her body increased as she went back and forth between what she wanted and what she thought she should do. \n\n\"Home to a cold, empty, silent, lonely...lonely house?\"\n\nShe smacked his chest, laughing nervously, but still laughing. \n\n\"Well,\" he said softly. \"Do you?\"\n\nFinally she whispered, \"No.\"\n\nHe kissed her head, holding her even closer. \"Good. We'll figure out your transportation issues tomorrow.\" \n\nShe looked up at him her eyes filled with so much it was tough to judge her feelings. \"Wanting too and going to are two different things.\"\n\n\"No way sunshine,\" he said, grasping her face. \"I'm not going to let you talk yourself out of this. You're coming home with me, and that's the final word on the matter.\"\n\nShe practically rolled her eyes. \"Final wording me again. Really?\"\n\nHe chuckled and held her face to his. Kissing her tenderly, he said, \"Let's finish up and get out of here. Then you can give me what for later, over dinner. I swear I'll be contrite.\"\n\nShe fought back laughter and smiled mischievously. \"Whatever you say, Killian.\"\n\nShe let every syllable roll off her tongue, and right down his back to his hips. He stood, lifting her up in his arms, and growled into her neck. \"You're mine tonight sunshine. All mine.\"\n\nHe carried her back to the conference table and set her down next to the laptop, then fixed the chairs. She gathered the files and computer together and took them back to her desk while he shut everything down, ordered dinner, and had all calls sent to an answering service. \n\n\"Hello sweetheart. Are you having fun with your cousins?\"\n\nKillian kept one ear on her conversation as he finished up and grabbed his coat.\n\n\"In the deep end?\" Rae said. \"A slide too? Sounds like you're having a great night...No, I'm going home sweetheart. If I take a cab to the hotel, you and Daddy will have to leave early tomorrow to take me to work. You only get to see your cousins a couple times a year, and I don't want to cut into your time with them...I love you too...Ok, I'll look forward to your goodnight call...Hey.\" Her tone of voice changed completely and he knew she was talking to Jimmy. \"No, I'm just going to go home. You guys have a good time. Tell your brother and Patrice I said hi, and sorry I missed them...I don't want to talk about it...I just said, I don't want to talk about it. I have to go...because I'm at work. I'll see you tomorrow night.\" \n\nIt shouldn't make him happy to hear that frustration in her voice, but it did. He walked out of the office, his coat slung over his arm. \"I ordered dinner for us to pick up on the way. I took a chance on Indian food.\" When she smiled he smiled in return. \"Good.\" \n\nThey walked through the hall side by side, and he brushed her hand with his. He wanted to take it, but they were at work, and the last thing either of them needed was to become a source of office gossip.\n\nJanice smiled at the sight of them and said, \"Goodnight.\"\n\nThey both said the same and stepped into the elevator. Once the doors closed he grasped her hand and kissed the back of each finger, the warmth of his breath making her shiver. When they reached the garage, he engulfed her hand in his own and started for his car, a small smile on his face, feeling pretty amazing after the day.\n\n\"Billy Harris.\"\n\nKillian froze and looked to his right, where a man he hadn't seen in the flesh since they were boys stepped away from the wall. He'd been partially hidden by an SUV, where the security cameras wouldn't spot him. \"Mary swore up and down it was you, but I had my doubts. What's it been? Thirty-two, thirty-three years now Billy?\""
    ],
    "authorname": "LucindaPaige",
    "tags": [
        "games",
        "dominant/submissive",
        "power",
        "possession",
        "romance",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/surviving-the-rich-sunshine-and-sir-ch-07"
}