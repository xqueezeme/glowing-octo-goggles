{
    "title": "Divisional Rivals Ch. 03",
    "pages": [
        "Hi, everyone! Chapter 3 of this series here. Couple of quick notes to begin with.\n\nFirst, chapter 11 of my Castlevania series is now up on Hentai-Foundry. Feel free to check it out.\n\nSecond, I want to make it clear that I don't know a damn thing about psychology. There is some psychology in the plot of this story and it's all garbage. Every word of it. I know nothing about what psychologists do and you shouldn't take me seriously at all on the matter. I just wrote it in a way that sounded plausible and helped the narrative.\n\nThird, I noticed I messed up the time zones when writing this series. I'm a dumb east coast guy who forgot to change the times for the Louisiana setting. I already messed it up, so I'm going to keep using Easter Standard Time going forward. Just in case anyone noticed and was confused.\n\nI hope you enjoy this chapter and please feel free to leave suggestions or feedback.\n\nThanks!\n\nfirebird68\n\nAlex was already awake when Evan woke up. She was still wrapped in his embrace, watching Netflix on low volume, and she felt him stir behind her.\n\n\"About time you got up.\" She grumbled. \"I've gotta use the bathroom and I've been trapped by your stupid arm forever. Can you let me go already?\"\n\nA clear lie. She had obviously already walked around to turn on the TV and grab his X-Box controller and must have snuck her way back into his arms without waking him. But he was happy to let her go without calling her out on it and released his hold on her, letting her up from the bed so she could pad out of the room to the bathroom. Stretching out, Evan grabbed his phone off the charger and checked the time. It was already half past noon. He had been sleeping for a good eleven hours and he felt nice and rested.\n\nRolling out of bed, he threw on a shirt and some shorts and hit the bathroom as well before joining Alex on the futon to watch some more of her show. Hunger finally forced them from the room, and they walked down to a local diner to get some food. The lady who took her order didn't say anything when they ordered breakfast items. Evan figured she probably got a lot of college kids that slept in late in the day and she delivered his eggs and sausage with a smile and an \"Enjoy your food.\"\n\nAfter, they just went back to the house and spent a nice, slow, lazy Saturday afternoon watching TV and napping. It was tremendous. By the time the party rolled around, they were both ready for a night of drinking and music. Throwing on a fraternity t-shirt and some jeans, he followed Alex down to the party. Just as they left, he thought he noticed some empty packaging sitting next to the bag from Christy's shop, but he didn't have time to think much about it as they left.\n\nIt didn't help that he was quickly distracted by the view from Alex's rear. Her outfit tonight was a simple pair of small, tight khaki shorts and a crop top and it was like a magnet for his eyes as he after her. It ended all too soon, though, when they got downstairs and he had to go get the kegs ready while Alex went outside to wait for her friends, who would be coming tonight as well. Ten minutes later and the doors were open, a few dozen people already streaming in as the music pumped to life.\n\nFrom then on, it was a blur of activity. Evan was busy the entire night whether it be pouring drinks or talking with people or assisting one of his brothers with something or another task that needed doing. Alex spent a fair amount of time with him behind the bar as well. She would frequently sneak back there with him and take a sip from her vodka bottle that she had stashed back there or just hang out with him. She seemed to have radar that informed her whenever there was a pretty girl chatting to him and she would appear from the crowd to skip up next to him and pull his arm around her. Mandy, Kim, and Jessica also stopped by the bar a couple times to talk with him, and Mandy introduced him to two more of their group that he hadn't met yet, Lisa and Anne Marie.\n\nAll in all, everything went smooth. He did seem to notice Alex occasionally acting a little strange whenever she would come behind the bar, though. Almost like she was squirming a bit or briefly biting her lower lip, but when he asked her if anything was wrong, she just said it was nothing. The night ended without incident and the house was emptied of partygoers shortly after three in the morning. Alex seemed relieved when the party was finally over and practically dragged him upstairs, pushing him into his room and closing the door behind them.\n\n\"Jeez.\" Evan blinked. \"What the heck is up with you tonight.\"\n\n\"Sit.\" She ordered, gesturing to the couch.\n\n\"Um...okay?\"\n\nBefore he could even take a seat, Alex was unbuckling his belt and yanking his jeans down. He took a moment to help her remove them, but as soon as they were off, she pushed him down onto the couch. Still wildly confused, Evan was about to question her actions when she grabbed his cock and started to stroke him. His primate side taking over his brain, he shut his mouth and just let her do her thing.\n\nWhile one hand was stroking him, the other was grabbing the bottle of lube from the coffee table and uncapping it. She paused her actions briefly to pour a bit of the viscous liquid onto his tip and then she was right back to work. Alex was all business tonight. She barely took enough time to spread the lube around his entire shaft before she was jacking him off with seemingly frenzied movements. Her right hand was a blur of action and her face a mask of total concentration. She didn't even stop for breaks and just kept on trucking, even as he could tell her forearms were probably burning from the effort after about ten minutes.\n\n\"What's your plan here?\" Evan finally grunted, feeling the effects of her nonstop jerking.\n\n\"Are you going to cum?\" she asked.\n\n\"Not yet, why?\"\n\n\"Let me know before you do.\"\n\nKnowing she wasn't going to elaborate any further, Evan just relaxed and enjoyed the energetic handjob she was providing him. It felt very good. Even if the whole situation was a bit puzzling to him, he wasn't really going to complain at all. She was working wonders with her hand. Even though her tiny digits were barely able to wrap fully around him, and she wasn't super experienced in the field like he was, she more than made up for it with her persistence. It didn't take more than another two or three minutes before he was right up to the edge.\n\n\"I'm gonna cum soon.\" He groaned.\n\nDead stop. As soon as he said that, her hand relinquished its hold on him and she leaned back away from him, leaving him dead in the water just inches from his climax.\n\n\"You didn't want me to finish?\"\n\n\"No, I just wanted to get you close for now.\" She answered, breathing a bit heavy by then. \"Now I can finally take this thing out.\"\n\nWiggling out of her shorts, hurriedly, her panties following closely behind, Evan then got his answer as to what was up with his girlfriend all night. Peeking out from between her cheeks was the fake jeweled base of one of the butt plugs Christy had provided. Now all the pieces fit together. The empty packaging that he spotted earlier, the funny twitches and faces she had been making, and the dragging him upstairs. She was super horny.\n\nChewing on her bottom lip, Alex gripped the butt plug and gently eased it out of her ass, a sharp gasp exiting her mouth. It was only one of the mid-sized ones from the bag, but Evan knew that didn't matter.\n\n\"Stupid thing was rubbing my prostate all night.\" Alex whined. \"Every time I moved. Good thing I had the cock ring on, or I would have busted through these shorts a long time ago.\"\n\nIts purpose having been served, the rubber cock ring was the next thing to be discarded, Alex's dick coming to life and reaching full mast in a matter of seconds when unleashed. Letting out a sigh of relief, his girlfriend returned to the bag once again and started rummaging around inside it. Evan tried to see what was going on, but she was blocking whatever she was doing with her body. He could faintly hear her opening stuff and cardboard rustling, but she didn't let him see any of it.\n\nEvan got his answer soon enough, though. When she turned back to face him, he laughed when he saw that she had taken Christy's advice and donned one of the XXXL condoms. Her girth was enough that the rubber had to barely stretch to fit around her, but there was obviously a lot of extra material bunched up by her tip that was intended to house mammoth cocks exceeding ten or more inches. As it was, the seal wasn't exactly super taut, so she had finished it off with a few inches of the SkinSafe tape provided, wrapping that around the base of the condom to keep it in place.\n\n\"Have you cooled down enough yet?\" she asked, her face totally straight.\n\n\"What?\"\n\n\"Your dick. You're not about to cum anymore, right?\"\n\n\"Oh. No, I'm good now. Why, what are you thinking?\"\n\n\"I'm going to stick it in my ass.\"\n\nThat got Evan's attention.\n\n\"You sure you're ready for that?\"\n\nAlex just rolled her eyes and put her hands on her hips.\n\n\"Why do you think I tortured myself with that butt plug all night? It was to loosen me up for this. But I'm gonna be on top.\"\n\n\"Yeah, that's fine.\" Evan agreed. \"If it hurts too much, just stop.\"\n\nAlex's hand returned to Evan's cock to apply a bit more lube to him. His hardon, which had drooped just slightly without any attention, perked right back up to full steam.\n\n\"I needed you to be close to the edge so that I don't have to have it in my ass too long if it hurts.\" She explained while she spread the lube. \"But also, not so close that you blow as soon as it goes in.\"\n\nWith all the mysteries cleared up, Evan just sat there, eagerly awaiting his girlfriend. Wiping her hands off on her shirt, she reached up and pulled the crop top over and off, chucking it to the floor, her bra following right behind, and then got on Evan's lap, straddling him. As Evan got a close up look at her breasts, he suddenly let out a short laugh, making Alex glare at him.\n\n\"What's so funny?\" she demanded.\n\n\"Nothing.\" He chuckled. \"It just struck me as odd that, after all we've already done, this is the first time I've seen your tits. You had your shirt on every other time.\"\n\n\"They too small for you, playboy?\"\n\n\"Definitely not.\"\n\nThat was the truth. Alex's boobs were a good-sized C-cup. Definitely not huge like Christy's or even as large as Mandy, but they were still reasonably big and shaped perfectly. Especially paired with her short, petite figure, they looked tremendous on her, and he was more than happy with them. When he reached up and cupped them, making Alex bite her lip to stifle a gasp, they fit perfectly in his hands. Just right.\n\n\"They're beautiful.\" He confirmed.\n\nThat made Alex smile, but now there was a more pressing matter. Straddling her boyfriend like this, she could feel his slick cock lodged between her cheeks. He felt big. She already knew he was huge, but resting in the cleft of her ass, hotdogging her like this, he felt like a monster. But she was excited. She had been waiting for this for two weeks now, ever since the mention of him fucking her came up. It hadn't quite happened the way she had expected, his surprising size initially scaring her, but tonight was the night. She was going to put that thing inside her.\n\nRising up on the futon to stand on it, her feet on either side of Evan, she squatted down and lowered her rear towards him. This motion was so familiar to her, squats being a staple of her workout routine, but this was certainly not how her gym visits usually went. Reaching back down behind her, she kept dropping her butt down until her hand found Evan's cock and held it in place while she continued the rest of the way. And then, it was pressing against her hole. It was ready to go in, it just needed a little movement from her.\n\nOne hand around Evan's neck to keep her balance, the other holding his dick in place, she slowly eased herself down. It was so much bigger than anything else she had tried before and that was evident immediately. Millimeter by millimeter, the tip sank into her butt, stretching her out unbelievably wide. It felt like a baseball bat was going inside her and she held her breath, forcing herself to relax. As long as she stayed relaxed and moved super slow, it wasn't causing her unbearable pain. Yes, it did hurt a bit, as was to be expected, but she could take it.\n\nWith a squeak from Alex, the head finally popped into her ass. Evan had to bite his tongue to keep from groaning loudly. He couldn't believe just how tight she was. It was like he'd just stuck his cock in a vice. A hot, slick, velvety-smooth, incredibly wonderful vice, but a vice, nonetheless. It felt so good already and this was only just the tip. He couldn't wait for her to take more, but he was not going to say anything and pressure her out of her comfort zone. However much or little she wanted to take, that was just fine by him.\n\n\"Ffffuuuuck! You're fucking huge! H...hold my hips.\" Alex panted.\n\nShe wanted to feel his hands on her. No question asked, Evan reached up and latched his grip around her waist, fingers digging into her skin lightly. That was nice. It was comforting and sensual feeling him grab her like that and gave her the boost to continue on. As she edged lower and took more of him in her, she had to keep her lower lip firmly bit to keep from crying out. And not in pain, but pleasure. While there was discomfort from the obscene stretching taking place, it was soon overridden by the immense waves of pleasure. That was because he was now deep enough that he was contacting her prostate.\n\nWith the size and the way he was stretching her out, just passing by her prostate was putting a ton of pressure on it and sending electric tingles through her whole body. This was vastly different than both Evan's finger had been and the dildo and the butt plug. His finger had been a lot of motion and solid pressure, the dildo had been extreme, pinpoint, unending shockwaves, and the butt plug had been more of a constant reminder, gently rubbing against her all night. This, right now, was none of the above. Evan's rock-hard cock was putting pressure on her whole prostate and squeezing it at all times, and it felt AMAZING. That was evidenced by the squirts of pre-cum that were occasionally coming out of her dick and forming a tiny pool in the condom, which she was now very glad she had opted to don.\n\nEventually, she had to stop descending. It was still too much for her novice ass to handle and she couldn't take any more yet. It felt like she had just taken in two feet. In reality, she had gotten about four of Evan's nearly nine and a half total inches. Evan didn't care. He was just impressed that she had managed that much, and he was thoroughly enjoying all of it. Even though it had taken her about two agonizingly slow minutes to drop herself down only four inches, he was thrilled beyond belief.\n\nHer arms latched tightly around the back of Evan's neck, she reversed course and started lifting herself back up. A long, muffled groan of bliss rumbled from her throat as his cock slid along her sensitive spot and she closed her eyes to block out everything but the feeling of that magnificent male meat inside her. Reaching the apex and taking a moment to catch her breath, she restarted the cycle all over and carefully descended back down.\n\n\"Oh, fuck!\" Alex gasped.\n\nShe was going to cum. The next slightest movement that fed a centimeter of Evan into her rear set her off like a canon. Her dick jumped and twitched in between them as enormous splurts of jizz spewed from her tip started to fill the condom up rapidly. No longer able to contain her voice, the sound of Alex's orgasmic cries filled the room. Evan was shocked he didn't cum as well. Her ass was squeezing down on him immensely and her prostate was throbbing and pulsating like crazy. Her climax was just as plentiful as before, if not even more voluminous. Her dick flexed nearly two dozen times, each occasion spewing a thick load forth and quickly bulging and blowing up the condom like a balloon. It was all Alex could do just to press her forehead against Evan's and barely keep from falling and impaling herself, heavily relying on her boyfriend's hold on her waist to prevent that event from taking place.\n\nGod damn, did she look beautiful. Their foreheads pressed against each other, Evan had a front row seat to watch her facial expressions throughout the whole thing. Her whole face was flushed red and sweating and she was panting heavily, alternating between biting her lip or crying loudly in euphoria. Her eyebrows were furrowed in an adorable manner and her gorgeous, green eyes were half-closed and hazy with lust. She looked like an artist's depiction of sexual delirium come to life.\n\n\"You okay?\" Evan whispered, rubbing her hips gently with his thumbs.\n\nAlex just nodded and tightened up her grip around his neck to regain her balance before trying to move again. Immediately, she let out a shrill shriek. She was somehow even more sensitive than before, now. Just the tiniest bit of movement in her butt had been like a bolt of lightning straight to her brain and she was already stiffer than steel again. Burying her face into her boyfriend's shoulder, she bit down on his shirt, using the mouthful of cotton to muzzle herself before resuming her riding again.\n\nEvan knew he wasn't going to last much longer. This was too much for him. The dilemma was, should he try to hold out and stretch it as far as he could, or should he just let it overtake him and finish? He didn't know which Alex wanted and she wasn't giving him any indication with her face burrowed into his shoulder. All he knew was that she was still riding him and that her cock was still hard but listening to the soft whimpers coming from her, he wasn't sure if she was loving it or hating it.\n\n\"Do you want me to finish, Alex?\"\n\nAlex instantly raised her head up to look at him, a desperate and longing sheen in her eyes.\n\n\"Please don't!\" she pleaded. \"Not yet. Just...just a few more minutes. Please, Evan?\"\n\nWell, that settled it. Now, he was determined to hold out if it was the last thing he did. Smiling at her, he gave her a quick peck on the lips and nodded. Alex's expression relaxed and she returned her face to the crook of his neck, her speed upping a bit.\n\nHe did everything he could to increase his stamina. He tried to block out the ungodly sensation of her ass squeezing and massaging his cock. He did his best to ignore the cute whines of pleasure coming from right next to his ear that were increasing in intensity. Evan used every trick in the book that he knew for staving off an impending finish. Unfortunately, there was no trick in existence that was going to offset everything else, and he was losing the battle. To make matters worse, Alex was speeding up bit by bit. She still wasn't going fast but compared to how she started off with movements of a tortoise, it was so much better for him, and yet so much worse for him.\n\nLuckily, he made it just long enough. With a scream, Alex dropped her weight rather suddenly and buried all four inches of her maximum at once. As soon as her second climax of the night kicked in and her walls clenched up on him, he lost the war. Adding his own groans of release to his girlfriend's he blew the biggest load of his life right into her snug butt. His balls leaped and his cock flexed over and over, filling up his little girlfriend with buckets of potent splooge. Alex's latch-hold around his neck had tightened up almost as much as her ass, practically choking him by now, but he didn't care in the slightest and lost himself in the throes of flooding her rear. He was also vaguely very glad for the durability and stretchiness of condoms. Even though Alex's second eruption wasn't quite as grand as her first, it was still ridiculous in comparison to normal ejaculations and blew the condom up to almost double in size. If Christy had given them a smaller size or a cheap brand, it would have probably popped, and they would be soaked for sure.",
        "Alex finished before him. The sensation of his cock throbbing and twitching in her rear and the feeling of his warm, thick cum filling her up had extended her second climax by a good ten or twenty seconds, but it still wasn't as long as the first and Evan's was a cumshot to be reckoned with, taking nearly two minutes to finish rushing up into her. When it was all over, he gently eased her down to the side and laid her on her back on the futon before very carefully sliding his cock from her ass. He was expecting a river of jizz to come out, but instead her tiny hole closed up immediately, trapping it all inside her. Alex was in heaven. There was a warm glow throughout her whole body from her two peaks, and she was so gloriously full of Evan's load. She almost felt bloated from how much he had pumped in her.\n\n\"My butt is so full of cum.\" She murmured, catching her breath.\n\n\"Sorry.\" Evan laughed, kissing her sweaty forehead.\n\n\"Idiot.\" She muttered, giddily. \"I don't have a pussy, so you try to impregnate my butt? God...\"\n\nTaking a couple minutes to gather her senses back, Alex sat up and, very carefully, removed and tied off the condom. It was now a balloon the size of a small cantaloupe and still warm to the touch.\n\n\"I can dump this in the bathroom, right?\" she asked.\n\n\"Yeah, just throw the condom out, though. We're pretty strict on making sure rubbers don't get flushed here or it can mess with the plumbing.\"\n\nThrowing on some clothes, they headed out to go shower. Evan was about to go to the opposite end of the hall to the men's shower room, but Alex grabbed his hand and dragged him to the women's shower despite his protests. It was his first time showering with a girl and it was nice. There wasn't a lot of room in the individual stalls, but they managed to squeeze in together and soak in the warm water.\n\nIt was after four in the morning, so they didn't have to worry about too much foot traffic, although there was one close call where a girl, who Evan recognized as his brother Eric's occasional fuckbuddy, came in and showered. Her mussed up hair and the trail leaking down the inside of her legs made it pretty clear what she had just been doing. Luckily, she didn't take much notice of the other source of water running and didn't investigate behind their curtain. Ten minutes later, she was gone, leaving them to it again. They did make out a bit in there and Evan felt his cock stirring, but he knew that Alex was pretty worn out from the way she was slouching against him and letting him do most of the caressing, so he left it at that, and they snuck out shortly after when the water started to go cold.\n\nAfter another post-party cleanup the next morning, he joined Alex to watch football. It was a good thing his Giants didn't play until later in the evening because he ended up passing out next to her on the couch in the middle of the Cowboys game. He would sometimes hear her celebrate and become more animated when she thought he wasn't listening to her, which he found cute. Dallas won and she roused him at quarter after four for the start of his game. To no one's surprise, the Patriots beat the Giants and left him in a bit of a sour mood, which Alex had no problem poking fun at him about it. He wanted to get mad at her, but it was impossible.\n\nAs a consolation, though, she did give him a blowjob. Her ass was pretty sore after last night's antics, and there would be no sex that day, so she just sucked him off for about an hour. Not the kind of rough oral where he fucked her face, but more of a gentle, relaxed blowjob that didn't require a whole lot of effort from either one of them. He just laid down on the futon with her on her side between his legs and she absentmindedly slurped on him while they watched the late game. When half time came, though, her jaw was a bit tired, so she put her focus into it and had him blowing his load before the start of the third quarter, greedily swallowing it all down. At the end of the game, he drove her back to her dorm building and said hello to Mandy before heading back again.\n\nOn Monday, he fulfilled his promise to Christy. After his last class was through, he drove on over to her shop and stopped in. She smiled and waved at him when she saw him walk in.\n\n\"Evan! Good to see you, hon!\" she called. \"I was worried I might've scared ya off last time. Hey, Kali.\"\n\nShe waved over one of the two girls behind the counter, the other one currently busy with a customer.\n\n\"This is the boy I was telling you about from Friday.\" Christy explained as Kali came over.\n\n\"Oh, Alex's new boyfriend? Nice to meet you, Evan. I'm Kali. We didn't get a chance to meet when you were here last time.\"\n\nEvan reached across the counter and shook her hand. Kali was pretty woman in her mid-twenties with shoulder length dyed blonde hair and one side of her head shaved. She, too, radiated strong, sexual energy like Christy, although a decidedly different feel that he couldn't pin down.\n\n\"Can you watch the store while I go talk with him?\" Christy asked.\n\n\"Sure thing. It was nice to meet you, Evan.\" Kali replied.\n\nShe gave him a sly smile and then Christy was beckoning for him to follow her through a door to the back of the store. Through the door was a hallway with a series of rooms attached. She led him to the end of the hall and opened up one of the rooms, bringing them into a plush office. It was nicely set up with a big desk at the back and a few couches. The walls were decorated with some pictures and a few other things, like a diploma that had LSU on it. Evan assumed it was Christy's.\n\n\"Take a seat.\" Christy said. \"You want anything to drink?\"\n\nShe went over and opened a mini fridge that was against one wall.\n\n\"I've got soda...water...beer...milk...\"\n\n\"Milk?\" Evan asked.\n\n\"Yep. It's homemade.\"\n\nShe winked at him and palmed one of her large breasts.\n\n\"Seriously?\"\n\nEvan couldn't tell if she was joking or being straight with him.\n\n\"Oh, yeah.\" She held up a half-full jug for him to see. \"It's straight from these puppies.\"\n\n\"But I thought...I thought you couldn't get pregnant.\"\n\n\"Aww, you're so cute when you're embarrassed.\" Christy giggled. \"You're right, we can't. But any woman can induce lactation without getting pregnant. There's a whole fetish associated with milking. It just takes some patience and a whole lot of the right kind of stimulation for them to start producing. I tried it out years ago and have been doing it since. The other girl behind the counter who was talking to someone out there, Lorena, she loves this stuff. But don't tell her I told you that. Our little secret, okay?\"\n\nHis mind spinning from that interaction, Evan could only nod.\n\n\"I think we can hold off on the milk for now. Cola okay?\"\n\n\"Yeah, that's fine.\"\n\nShe handed him a can of Coke and sat down on the couch across from him, cracking open her own can.\n\n\"So? How did this weekend go?\"\n\nEvan paused, a bit hesitant to talk about sensitive topics that involved Alex.\n\n\"Don't worry. Nothing will leave this room, if you don't want.\" Christy assured him. \"Doctor-patient confidentiality.\"\n\n\"Doctor?\"\n\n\"Mhmm.\"\n\nShe took a sip from her drink and tapped the diploma hanging on the wall behind her.\n\n\"PsyD. I'm a psychologist.\"\n\nShe must have noticed the look on his face because she burst out laughing, wiping spilled coke from her chin.\n\n\"Sorry, it's just...you don't look like the kind of psychologist I picture when I think about it.\" Evan apologized, sheepishly.\n\n\"No problem, sweetie.\" She laughed. \"I get that a lot. I did my thesis on human sexual behavior and sexual preferences. You've probably noticed by now that I'm pretty interested in the topic.\"\n\n\"Um, yeah, I noticed.\"\n\n\"But I really wanted to focus my work on helping women like me.\" She continued. \"There aren't any psychologists that specifically focus on the issues of futanari since it's such a rare case.\"\n\n\"Alex mentioned there were only a couple dozen like you in the country.\" Evan remembered.\n\n\"Well, that's a bit of an understatement, actually. That's just how many are in the online group her pediatrician recommended she join. In reality, there's believed to be a couple hundred in the United States. Still incredibly rare, but not quite that few. I've met and spoken with...maybe eighty? Eighty-five? Somewhere around there, I forget off the top of my head. I was always very comfortable with my biology and sexuality, so it didn't affect me on a mental level. However, that's not the same with most, and it can be very challenging for a young lady to grow up as a futa. So, I meet with girls or women and try to help them come to terms with who they are and help them lead a happy life. She probably mentioned this, but Alex was one of those girls. She's not the only one I've convinced to come to LSU before, too. The school should give me a commission, don't you think? Rhetorical question, don't answer. Kali was my first case, actually.\"\n\n\"Kali's a futa?\" Evan asked, surprised. \"Alex didn't mention that.\"\n\n\"Well, Alex is pretty timid around the whole topic. She doesn't like to call anyone out like that. But me and Kali are very comfortable with who we are. Of course, it wasn't always like that. Kali used to be a serious troublemaker.\"\n\n\"Really?\"\n\n\"Oh, yeah. I met her years ago when I was finishing up my doctorate. She was picked up by the cops for a drug charge, but I convinced the judge to release her to me instead of jail. I helped get her clean and we treated her psychological issues. Now, she works here and also assists with some of the more troubled girls. I'm really proud of her. But enough about me. Let's talk about you and Alex. How did things go?\"\n\n\"It went pretty good.\" Evan answered. \"We tried out some of the toys you gave me.\"\n\n\"Did you try anal?\"\n\n\"Yeah, on Saturday. She could only take a little under half of me, though, so we'll have to work on it some more, I guess.\"\n\n\"Hmm...\" she eyed him thoughtfully. \"Do you mind if I see it?\"\n\n\"Excuse me?\"\n\n\"Your penis. Can I see it?\"\n\nEvan just stared at her.\n\n\"Promise I won't do anything to you.\" She smiled. \"I just want to get an idea of what Alex is working with. Just a quick peak.\"\n\nSighing, Evan reluctantly stood up and pulled his pants and boxers down to his knees, letting Christy get a look.\n\n\"Oh, my...\" Christy breathed. \"I can see why you two have been having some roadblocks. She really had that thing in her?\"\n\n\"Only about four inches.\" Evan mumbled, trying to ignore the fact that he was rapidly growing to full hardness.\n\n\"Even so, good lord. Her poor, little butt. You're as big as me! Maybe even bigger. I bet that would have been so hot to watch.\"\n\n\"Can I pull my pants up now?\" he asked, still enduring her gaze.\n\n\"Hm?\" she broke off her stare and laughed. \"Oh, sorry. My kinky side came over me for a minute there. Yeah, you're good, hon.\"\n\nRe-affixing his pants, Evan sat back down and took a drink from his soda, his cheeks still warm.\n\n\"Well, the fact that you even managed to get that thing in such a tiny girl is big progress, I would say.\" Christy mused. \"There's not really any secret fix-all for anal. You just need to keep at it and be patient. Both of you. Did she like it?\"\n\n\"Yeah, I think so.\" Evan nodded. \"She came twice.\"\n\n\"She did?\" Christy sat up. \"Just from having that in her?\"\n\n\"Yeah.\"\n\n\"Ooo, Alex is a buttslut, huh?\" she grinned. \"I can't blame her, though. I love getting fucked, too. And fucking, of course. I'm a pretty balanced switch, so I can be either top or bottom. Kali's a pretty dominant top, though. Sounds like Alex is discovering she likes to be on bottom. What about you?\"\n\n\"Me?\"\n\n\"You ever thought about bending over?\"\n\n\"Um...no, it never really came up.\" Evan shook his head.\n\n\"That's a shame. I'm sure Kali would love to take a buck like you for a ride.\"\n\nShe broke into laughter again when she saw the look on his face.\n\n\"I'm joking, I'm joking!\" she giggled. \"Alex would probably kill all of us, I'm sure. Speaking of which, I haven't seen her in a few weeks. Why don't you two come to the club this Friday?\"\n\n\"The club?\"\n\n\"Oh, right, I haven't given you a tour of this place.\" Christy snapped her fingers. \"Follow me, I'll show you what I'm talking about.\"\n\nThey left the office and she brought him down to the other end of the hall.\n\n\"The top two floors of the building are my apartment.\" She explained while they walked. \"Kali lives up there, too, since it's so big. But downstairs...\"\n\nChristy opened the at the start of the hall, revealing a stairwell leading down to a basement.\n\n\"Is the club.\" She concluded.\n\nSure enough, there really was a club under the store. The basement was one large, open room with approzimately fifteen-foot ceilings. It was furnished just like Evan would expect a high-end night club to be. There was a beautiful, complete bar at one end of the room, and semi-circular booths built into the perimeter walls, as well. One of the booths on the far end of the club was elevated about five feet off the ground and the stairs leading up to it were roped off, clearly for VIP's or something. In addition, there were tables and chairs spread about the room for more seating. Most of the floor, though, was taken up by the stages. There were three of them. One slightly elevated main stage, and two, smaller side stages.\n\nThe whole place was incredible, considering it was underground. Being an architecture buff, Evan spent a good ten minutes just examining the stealthy structural designs that had gone into it and walked the walls to gaze at the beams that were being used while also taking note of the different construction methods involved.\n\n\"Like it?\"\n\nChristy was seated at one of the tables when she finally spoke and dragged him from of his geek-out.\n\n\"Yeah, it's beautiful.\" He replied. \"It must have cost a fortune to have this put in, though.\"\n\n\"Well, not quite. My dad owns a construction company. Back when I was in high school, he promised that if I got my doctorate, he would have his company build me a clinic however I wanted it to be. Of course, he was a little surprised when I told him that I wanted the building to primarily be a sex shop, but he was always very supportive of me in whatever I was doing. There used to be an apartment building here, but it burned down a few decades ago, from what I understand. Since we were building a new place from the ground up, he put the foundation a bit deeper to facilitate my ideas.\"\n\n\"So...what? You have music here or something?\" Evan asked, gesturing at the stages.\n\nChristy's mischievous grin returned again.\n\n\"Not quite.\" She chuckled. \"The club is open Friday nights to anyone who knows it's here. We're a bit lax on the drinking age regulations, though. Since we are under a sex shop, after all, there's usually something kinky happening on stage. Anything from strippers to BDSM shows to ordinary couples having sex. You would be surprised how many of your peers on campus have the fantasy of fucking or being fucked in front of a crowd.\"\n\nEvan shook his head in wonder, knowing he would probably never get a bead on what was happening in Christy's brain. She was undoubtedly the most unique person he had ever met. However, he now knew why Alex had never mentioned this place to him or suggested they go. He could only imagine how many shades of red her face would change if she went into a club that had people on display engaging in erotic acts. On the other hand, it did pique his curiosity a bit. He definitely didn't have any fantasies of having sex in front of a crowd, but it would probably be interesting to attend.\n\n\"So? You think you can convince little miss Alexandra to stop by?\" Christy asked.\n\n\"I'll give it a shot.\" He promised.\n\n\"You'll have to get creative with your persuasion. Alex is as stubborn as they come.\"\n\n\"Don't I know it...\" Evan muttered under his breath.\n\nEvan's creative persuasion came a couple days later. In truth, it wasn't really his intention to bring up the topic that day, but things just kind of played out that way. After their classes were finished, the two of them drove up to Evan's fraternity house to do some homework there instead of at the library for a change. Alex went to shower, since she hadn't gotten the chance to do so after their joint workout session, and Evan started in on his latest assignment. When she returned a little while later, wrapped in only a towel, his dick instantly perked up and diverted all his attention away from his work. As she was setting her clothes in her bag, he came up behind her and wrapped his arms around her.\n\n\"What are you up to?\" she asked, suspiciously.\n\n\"Nothing much.\" He replied. \"I just wanted to give you a massage. You seemed a little tense is all.\"\n\nThat was true. She had a pretty big test coming up next week and had been a bit stressed out lately. Alex was surprised that Evan had picked up on that, but it made her immensely happy that he had.\n\n\"Fine, I'll allow it.\" She sniffed, pretending to be uninterested.\n\nSmiling at her attitude, Evan picked her up and laid her face-down on his bed, still clad in nothing but her towel. While she stretched out and got comfortable, he climbed up next to her, his hands descending on her shoulders.\n\nAlex let out a sigh of contentment as her boyfriend's strong grip began to knead her muscles. She had never been to a spa or anything, on account of the whole 'getting naked in front of a stranger' thing. With that fear gone from her mind, she found herself very much enjoying it all. Evan was no masseuse, by any means, but he knew enough about muscle work to be able to seek out her knots and tense spots and massage them away. It was sometimes a little painful when his thumbs dug into a particularly stiff area, and she let out a groan of discomfort, but as soon as the muscle was loosened up, the massaging became much more soothing and eased all her pain away.\n\nFinishing up on her neck and shoulders, Evan threw his right leg over Alex and straddled her butt to allow him easier access to her back. Then, he pulled her towel open, baring her smooth, muscular back, and started in on the process again. His fingers walked their way across her shoulder blades and spine, steadily working every last inch of skin they came across. Alex was soon so relaxed, that she was pretty sure she could have fallen asleep right then and there if she tried it. The only thing that kept her from actually drifting off was the very obvious presence of Evan's erection resting on her backside. And as he made his way down, his hands soon finding their way to her butt, it was clear what his desires were.\n\n\"What're you doing back there?\" Alex mumbled, feeling his hands all over her rear.\n\n\"Just...working on your glutes.\" He offered.\n\n\"Nice try, playboy.\" She scoffed. \"I can feel your dick, you know.\"\n\nEvan didn't respond this time, but now that his girlfriend's towel was unraveled completely, he could see her own erection growing until it was pointed straight down towards her toes. He thought he had made her angry when she suddenly raised her head and turned to glare at him.\n\n\"All right, you win.\" She spoke. \"Hand me my backpack.\"\n\nJumping off the bed to bring her the bag, Alex rooted around in it and pulled out a couple things.\n\n\"Drop your pants.\" She instructed.\n\nDoing as she asked, Evan kicked off his pants and shucked his t-shirt aside as well. His girlfriend's grasp soon found his stiff hardon, and she gently pulled him towards her. Curious, he watched as she revealed the ruler and sharpie she had produced from her bag. She measured out four inches on his cock and made a mark in black ink on his skin at that depth.\n\n\"That's as deep as you can go. And you've gotta get me warmed up first.\"\n\nInwardly celebrating, Evan retrieved his bottle of lube and the small dildo he had used on her previously. Setting those on the bed, he also remembered the mess prevention solution and snagged one of the condoms to contain his girlfriend's epic eruptions. Alex squeaked at the sudden sensation of Evan's fingers on her penis, and her ears went warm when she realized what he was doing back there, securing the rubber around her. With that finished, he took up his place straddling her, his cock now nestled securely between her cheeks. God, that was a sexy visual. Just seeing the size mismatch they had was very hot and made him throb with anticipation.",
        "Returning to his massage, Evan focused on getting Alex back to that ultra-relaxed state. He knew that the looser her body was, the more successful this would be for the both of them. Now that her knots and tense spots had all been taken care of, this time around was just about making her feel good and loose and comfortable. He proceeded gently, applying soft pressure across her back and sides, laughing to himself every time he heard Alex fail to contain her sleepy moans of pleasure from it.\n\nScooting back down to straddle her legs, Evan started to work on her thighs a bit. Finding some stiff areas there, he spent a few additional minutes just working on her lower body and easing all the tension out of her. He could actually feel her relaxing beneath him and could hear her breathing even out the whole way through, letting him know that his actions were successful thus far.\n\nWith one hand still kneading her muscular thighs, his other hand snagged the lube bottle, and he squirted a bit onto his index finger, spreading it around until the whole digit was coated. From there, he snuck his way back up to her tempting rear and finally stopped massaging her.\n\nA gasp left Alex's lips when she felt Evan's cool, slick finger press against her opening. She was now very eager for this to happen, her own cock pulsing angrily in its rubber cocoon. She didn't have to wait long at all. As soon as it touched her, the finger was working its way inside. She let out a few muffled moans as it worked its way inside, already feeling heavenly to her. A month ago, she would have never looked forward to anal like this. Now, it was a daily thought crossing her mind, wondering when it would happen next and how she could make it better.\n\nEvan's practiced finger found Alex's prostate very quickly, and he went straight into gently massaging it. He was happy to note that his back rub had worked quite well. While her ass was still exceptionally tight, it was just natural tightness and not because she was tensed up. And the more that his finger moved in and out of her, the more he could feel her loosen out and grow accustomed to him being there. He kept the pressure on her prostate light. He didn't want her cumming quite yet, after all. They were just getting started. His fingering was more about stretching her bit by bit until she was prepared for the main course.\n\nLubing up a second finger, Evan added that one, as well, pulling a louder gasp from Alex. He remained totally still for a minute to allow her to get used to the additional presence, and then started to finger her slowly once more. It didn't take long at all before she was back to moaning sensually, obviously enjoying what he was doing. He worked his digits in repeatedly, spreading them occasionally to get her to open up a little more, physically feeling the plan working as she stretched wider around him.\n\nHe had planned to use the dildo first as well, but after about ten minutes of just his fingers, Evan was pretty sure she was ready. A glance back at the puddle of pre-cum filling the condom confirmed that he was probably right, and he withdrew both fingers. Alex whined at the sudden lack of sensation, but she knew what was likely coming next and squirmed, excitedly.\n\nMaking sure his erection was thoroughly coated in the slippery liquid, Evan guided it to Alex's backdoor and gently prodded her to test how much resistance was there. The answer was a lot. Jesus, was she tight. Even though he had done a pretty good job stretching her out with a couple fingers, she was still tighter than a clamshell. It was going to take some time, patience, and effort to get in there. Luckily, he had plenty of all three to spare, and began the arduous task of sliding his tip into her rear.\n\nAlex squeaked loudly when he started pushing in her. Even though she had already taken him in her butt once before, that hardly helped at all now. It felt just as massive and intrusive the second time around as the first, and her snug entrance protested by shooting pain signals to her brain while also reluctantly relenting and stretching to allow Evan entrance. Grabbing a mouthful of blanket to muzzle herself, Alex buried her face into the bed and took it all on, refusing to let the discomfort affect her. She knew from experience what would come after the pain had faded, and that was mountainous peaks of blinding pleasure. He just had to get deep enough to...oh! There it was.\n\nHaving sunk almost two inches in her, Evan was now nudging against her prostate. It had an immediate and noticeable effect on his petite girlfriend, and he watched with happy amusement as a strong shiver ran down the whole length of her body and then back up.\n\n\"That feel good?\" he asked, his voice husky with desire.\n\nHer head just nodded into the mattress, and he let out a slight laugh, inadvertently making his dick jump and twitch, a muffled squeal emanating from her. Remembering her request from the last time they had done this, Evan's hands found their way to her hips and grasped her tightly. It had the desired effect, and Alex let out a soft moan, melting even further into the bed. To her, his fingers felt like sizzling iron on her skin, all of her senses alight with buzzing energy. It was just what she needed to ground her to his presence while also feeling the sense of security that came from him holding onto her.\n\nStill enjoying the simple, confident touch of his hands, she was brought back to reality by Evan resuming his path deeper into her. Every single little micrometer of movement inside her felt too good for words. Just the immense pressure his huge tool was putting on her sensitive prostate was unbelievable. Add in any form of motion to it, and it made the whole experience world altering. And that was not an exaggeration. Ever since engaging in anal play with Evan, Alex's entire sexual world had been upended. She had only ever known one thing, and that was fucking or masturbating. Now that she was truly experiencing getting fucked, and by someone she loved, she knew she would never be able to give it up again.\n\nPre-cum was now pretty much freely streaming from her cock. With every bit of meat that was fed to her tight rear, her cock would flex in its slightly awkward position and ooze more of the clear fluid forth. Alex could already feel the first orgasm on its way. She didn't know exactly how long that would be, though. One of the things she had learned about cumming from being fucked was that it was much more unpredictable than when she was jerking off or being jerked off. She could be minutes from cumming or mere seconds. It was pretty much impossible to tell, and that made it so much more intense and surprising when it did happen. The only thing that she knew for certain was that she was definitely going to cum. It was just a matter of when.\n\nEvan arrived at the mark Alex had made to signal his four-inch limit all too soon. He was a bit disappointed that he couldn't press on deeper into her velvety depths, but he was still happy with what he had. It wasn't something he was entirely unused to. Many of the girls he had hooked up with before hadn't been able to take his whole length into their pussies, let alone their asses. However, he never would have thought that the day would come where not even getting half his dick wet, so to speak, would not only be acceptable but better than any sex he had ever had. Yet here he was. Four of his nearly nine and a half inches were being crushingly embraced by his magnificent girlfriend, and he couldn't be happier. Well, he could be happier...if he was moving. Of course, that was an easy problem to rectify so he started to pull out until just the head remained before descending into Alex's taut embrace once more.\n\nSix strokes. Six gentle, easy, slow strokes. That was how many it took for Alex to start spewing her first load into the containment condom. Her eyes shut tight and her teeth gnashing down on the cotton blanket bunched in her mouth, she screamed and shook as her whole body blazed with orgasmic energy. Evan had mercifully stopped moving when he felt her clench down around him, but even just his thick, throbbing presence putting its heavy weight on her prostate was driving her mad and making her cum more and more. Every twitch and spasm of her dick was accompanied by a rush of thick jizz that seemingly never ended. She couldn't keep her arms and legs from trembling, and she knew that there was likely now a large balloon of her milk attached to her cock.\n\nAs she came back to her senses in the direct aftermath of her climax, she said a quick, silent thank you that her boyfriend was so amazingly patient with her. She knew from his heavy breathing and the stiffness of his rod inside her that he probably wanted to continue fucking her without any pauses. However, he had waited the full two probably torturous minutes of her convulsing around him before daring to move again. Yes, Alex was very thankful. She wasn't nearly acclimated to cumming that hard for someone to be fucking her while it was happening yet. She probably would have gone into a coma right then and there if he had kept on going throughout her peak.\n\nBut now, she was even more sensitive than before. She had completely forgotten about this phenomenon. Now that her body had experienced one fantastically divine climax, it was eager for another. Just the tiniest of shifts from Evan was enough to make her shriek, let alone the thrusting that he had picked back up. To add onto that whole deal, this position was even more intense on her. With the angle Evan was fucking her, unlike when she had ridden him, his cock was being driven straight down into her backside, and subsequently, into her prostate. As he sped up a bit and increased his fucking pace, every stroke he was making was forcibly sending a squirt of jizz from her still-hard penis.\n\n\"Oh, my gooooood!\" she groaned, raising her head off the mattress to help meet the air quota her body was demanding. \"You're fucking the cum out of me!\"\n\nWow, that was hot. Evan never in a million years would have expected those words to come out of his tiny, adorable girlfriend's mouth, but she had definitely said that, and it was definitely sexy.\n\n\"Say that again.\" He ordered, slowly pumping his hips into her.\n\n\"You're fucking the...AAH...cum out of me!\"\n\n\"One more time, Alex.\"\n\n\"You're fucking the god damn cum right out of me!\" she squealed, forgetting any sense of modesty at the vulgar statement she had just uttered three times now.\n\n\"That's what I wanted to hear, babe.\" Evan laughed.\n\nPinning her hips to the bed, he re-focused himself on fucking said cum out of her. Evan made sure to carefully monitor the depths of his thrusts and to keep from exceeding the mark Alex had set. He knew that it would be easy to get lost in the moment and accidentally go too deep and end up hurting her. With the speed he was going now being pretty fast comparably, that was definitely a concern that he wanted to avoid. Besides, with the way Alex was shivering and moaning and gasping, he was pretty sure her mind couldn't handle the increased stimulation that would come from driving his length any deeper. Like Christy said, they would both just have to be patient and keep working at it. Not that he was complaining about it. The whole experience was still unreal and felt amazing. To say that he was content to just feed her four inches was an understatement, because he was elated just to be able to fuck Alex's snug rear at all.\n\n\"C...c...cover my mouth!\" Alex suddenly yelled out.\n\nNo questions asked, Evan immediately crouched down over her, his elbows resting on the bed on either side of her head, his large palm clamping over her mouth. He was just in time to contain most of her scream when her orgasm arrived. Grunting as she clenched up impossibly tight on him, his free hand found one of hers and she fumbled briefly before interlocking hers with his, squeezing the life out of his hand as she quaked and shivered. He didn't turn to look behind them, too focused on keeping her company in her climax, but he was sure that she was blowing up the condom with a whole bunch more girl spunk.\n\nTheir hands still linked together and his palm still covering her mouth, although slightly less hard, Evan ended his break now that she was finished cumming. He was glad he had kept the hand-gag because, even though he started off slow again, just the initial motion of drawing back his hips made Alex yip loudly. By the time he was back up to near the speed he had previously been at, she was constantly making noise and very vocally making it known what he was doing to her. Nobody would have questioned sexual cries in a fraternity house, but he figured for Alex's sake that she wouldn't want nearby rooms to be hearing her make sounds like these. Even if she did sound very sexy, screaming like that, he kept a lid on it all and kept pounding into her.\n\nHe knew he was getting a little sloppy with his fucking now. Leaned over her back like this with his head down next to hers, he couldn't see how deep he was pumping to monitor his depth. He was pretty sure he was still only going about four inches, but it was impossible to tell. Luckily, it didn't seem to matter much to Alex. She was still busy moaning into his palm and turning his fingers white in her crushing grip. He was still worried that he might be going too far on her, though, and wanted to sure she was doing okay.\n\n\"Let me know if it's too much.\" He whispered in her ear.\n\nWaiting until she gave a weak nod of confirmation, he stepped up his rhythm even more than before. He was pretty close by now, and he didn't want to make his poor, little girlfriend have a seizure from fucking her too much. He needed to wrap this up.\n\nThe good thing about having a girlfriend with an amazingly tight, velvety smooth, incredibly responsive butt is that it makes it really easy to finish quickly. In just a couple minutes more, he was closing right in on the finale. To his shock, though, Alex beat him to it.\n\nHer third orgasm was comparably quiet when matched up against her first two. She mostly just gasped and squeaked and shivered uncontrollably as her cock somehow sent more cum to join the rest. Alex could tell there wasn't nearly as much fluid as numbers one and two, but she still shot out a good amount and the sensations were more powerful than ever. She didn't scream at all because she couldn't. Her breath was completely caught in her chest and every muscle was shaking fiercely. Spots were swimming in her vision from the sheer impact of the orgasm on her brain, and her eyes were going crossed on her. The only thing that kept her from totally losing her sanity in the tidal waves of ecstasy was Evan's hand in hers, and she squeezed it for all she was worth.\n\nJust as she was finishing, almost totally limp underneath him, Evan gave a series of rapid thrusts into her and then she felt him briefly swell and erupt. Hot, thick, sizzling jizz splashed and flooded into her like lava. God, she loved it when he came in her. Feeling him shooting off like a rocket in her ass and his strong, steady form trembling with the need to release everything he had into her. It was so incredibly rewarding for her and made her chest swell with pride and gratification, as well as cause her cock to throb and shoot out another couple gouts of cum. She knew she would never get tired of that full feeling that she was experiencing right now, being completely packed with her boyfriend's virile load. It was indescribably fulfilling and hot to be so completely stuffed with his cum. Her body seemed to love it, too, since her tight hole winked closed immediately when he pulled out of her, trapping it all inside her.\n\nEvan could tell how exhausted Alex was just by looking at her. Leaning down and kissing the top of her head, he climbed off of her and started about cleaning up. First came the condom. It was impossibly full, even more so than the last time. It seemed unbelievable that someone was capable of cumming so much, especially such a petite girl. Yet here was the proof right before his eyes. He very carefully removed it without spilling it all over the bed, Alex moaning as she felt his fingers on her length. Satisfied that he hadn't spilled any, he tied it off and then slipped on some shorts to go get rid of the evidence of their debauchery in the bathroom. When he came back, Alex had rolled over onto her back and had recovered a bit. There was a wet imprint where she had been laying from all the sweat that had poured off her while being fucked.\n\n\"I just took a shower, and now I have to take another again, jerk.\" She complained, unconvincingly.\n\n\"Yeah, that is a tragedy.\" Evan snickered, suddenly struck with inspiration. \"Hey, by the way, why don't we go stop by Christy's club this Friday night?\"\n\nCaught off guard by the sudden suggestion, Alex fixed Evan with a glare, but she gave up pretty quickly and just sighed. She was too tired to argue right now. She would just have to sound off on Christy for recruiting her boyfriend to her effort of getting Alex to come drink with her. She had already avoided the issue for a few months. Successfully...until now. Now, she didn't have the energy to protest. It had all been fucked right out of her. If this had been planned on Evan's part, she had to begrudgingly admit that it was a good strategy for convincing her.\n\n\"Fine.\" She sighed. \"We'll go. But not because you or Christy suggested it. I just want to see what it's like.\"\n\n\"Uh-huh.\" Evan nodded. \"Sure, you do. Now, c'mon. Let's go get cleaned up so we can actually get some work done.\"\n\nHe wrapped her discarded towel around her and scooped her up in his arms, carrying her towards the open bedroom door and checking to make sure the hallway was clear before sneaking off down the hall with Alex comfortably and happily snuggled in his arms."
    ],
    "authorname": "firebird68",
    "tags": [
        "futanari",
        "college",
        "teen",
        "anal",
        "blowjob",
        "romance",
        "futa on male",
        "male on futa",
        "prostate massage",
        "first time"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/divisional-rivals-ch-03"
}