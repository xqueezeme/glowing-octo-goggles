{
    "title": "Happy Birthday to Me Ch. 01",
    "pages": [
        "<p align=\"center\">Happy Birthday to Me</p>\n\nOkay, this is the first \"Loving Wives\" category story I've tried so a couple of comments before we get into the story itself. One of the things I've noticed in browsing through this category is that most of these stories are written from a distinctly male perspective, with the male partner primarily as the voyeur, sometimes the instigator, sometimes the one who is betrayed or cheated on. The emphasis is primarily on the male partner's feelings and emotions and reactions as he watches his wife / girlfriend taken by another male (or males, as the case may be). Given that Literotica has a largely male readership and a high percentage of authors here are male, I can understand that.\n\nHowever, looking at it from the female perspective, there's a huge difference between involvement and commitment. As with ham and eggs, the chicken is involved; the pig is committed. With these stories, the male partner is involved largely as the voyeur while the female partner is the one that's totally committed - the one that's involved the most, with the most at stake. I thought it would be fascinating (for me) to write one of these \"Loving Wives\" story's with a first person point of view from the wife's perspective, getting into the female partner's head with all the emotions and feelings and conflicts and physicality involved. I write here not from personal experience, but it's something I wanted to try and wrap my mind around and get into and write.\n\nNow I also know these stories tend to get the most negative feedback and reviews, and some of the comments can be fairly vituperative. So, on the understanding that I'm writing this from a female POV and this story is purely fictional, a complete figment of my imagination, bearing no relationship to any events and/or persons known or unknown to the author, and that the author's mother, father, siblings, partner, former boyfriends, former girlfriends and in fact anyone known to the author in any way whatsoever, disclaim all responsibility for the author's views and upbringing and says the author is a very bad girl indeed and deserves a good spanking for writing such shocking stories, here we go... And cutting to the chase, if you don't like this type of story, don't read it... We're all grownups here after all (well, I hope so).\n\nAll of that said, this is a bit different from the \"coming of age\" stories I've been working on so it was a bit of a challenge for me. I'd love to know how you think I've done here. Looking forward to your comments, even if it's just a \"love it\" or \"it sucks\". And believe me, it's totally fiction.\n\nThat aside, as always, I do hope you all enjoy and that your responses are ... how do I say it ... in keeping with the intent of the story... Chloe\n\n<p align=\"center\">Happy Birthday to Me - Chapter One</p>\n\n<p align=\"center\">Ten minutes past midnight\n\nLeaning out of the window to see the dim light outside\n\nLost quiet rainy night kisses passersby\n\nOnce you whispered in the rain:\n\nHappy birthday my loved one</p>\n\n<p align=\"right\">Ten Minutes Past Midnight, Sally Yip</p>\n\nMy phone rang. I looked at it. Kam. \"Hi, honey.\"\n\n\"Hi darling, want to grab some sushi after work?\"\n\n\"Sounds wonderful.\" \n\n\"Why not come over, drag me out of here, we'll grab some sushi, watch a movie, have an early night.\" \n\nAn early night? I liked that suggestion. That was Kam's code word for going back to our apartment and making love. Something I didn't get nearly enough of after a mere couple of years of married life. And yesterday I'd been late home. \n\nMy boss had kept me at work. I'd been experimenting lately, working on the theory that when I wore short skirts, he asked me to work late. I'd been making up a little spreadsheet for fun over the last couple of months, just to correlate the results. Yesterday I'd worn a short skirt, my shortest. I kept catching him looking at my legs. It made me giggle. I mean, I didn't mind him looking at me at all. He wasn't the only guy that checked me out. I enjoyed guys looking at me. \n\nI knew I was good looking but I wasn't conceited about it. It was one of the reasons Kam had married me, something I'd never regretted. Kam was older than me, ten years older. I'd been almost twenty when we'd married, now I'd graduated and I'd been lucky enough to get a job in the same building that Kam worked in and that our apartment was located in - one of those huge modern office-apartment complexes with everything you needed in one place. Work, living, shopping, food centers, even a supermarket, cinemas, bars, a couple of nightclubs. Honestly, there was no reason to leave the building unless you wanted to go outside.\n\n\"On my way honey, I'll be there in fifteen minutes. Love you.\"\n\n\"Love you Isabelle.\"\n\nI stood up, walked over to David's office. He was watching my legs. Oh yeah. I walked slower, enjoying him looking. Stopped in his doorway, one arm resting on the doorframe. Now he was looking at my breasts. And okay, they were larger than the Chinese girl norm. A lot larger. I smiled. That my boss liked looking at my legs and my breasts was more entertainment than annoyance. Sometimes I wished Kam had the sort of enthusiasm for looking at me that my boss did.\n\n\"Hi David, mind if I finish up now?\" I smiled. \"Everything's done and in the system, I'll check the numbers tomorrow morning after tonight's financials run.\"\n\n\"Sure, and thanks for staying on to help Isabelle.\" He was having trouble maintaining eye contact. I wanted to giggle again. I walked back to my desk slowly, giving him lots of time to look. I was so looking forward to Kam being in the mood tonight.\n\n<p align=\"center\"> * * * * * * * * </p>\n\nFan looked up as I walked in the door fifteen minutes later. \"Hi Isabelle, looking for Kam? He's in with Tom.\" \n\n\"Thanks Fan.\"\n\nFan was Tom and Kam's personal assistant. She was nineteen, single, cutely attractive. I knew she had her eye on Tom, whose wife had stayed in America when Tom had taken the temporary position managing the Singapore office. This despite Tom being thirty years older than her. Mind you, I could see what she saw in Tom, and who was I to talk about an age gap. There was something magnetic about him. I felt it myself and I was happily married. Very happily. Looking at him always send little thrills racing through me for some reason. I had no idea why.\n\n\"Want some tea while you wait, they might be a while. There's a new client coming in tomorrow, they were reviewing the presentation.\"\n\n\"Thanks Fan.\"\n\nFan poured the tea, passed me a cup, poured herself a cup. She sipped herself as we chatted about the latest movie. Fan loved movies, she was always off to the latest release. It was a good thing we had a shared interest, it would have been boring waiting otherwise. I'd thought about going home early instead. But I'd torn myself free because Kam had promised we'd get sushi. I loved sushi and an early night. Now he was in there with Tom.\n\nKam was temporarily the manager of the local branch of the company. Tom sort of worked for him, but Tom wasn't local, he was an import from America. Parachuted in as an advisor after the last manager was retired following poor financial results. Kam was filling in while Tom decided who was going to fill the position on a permanent basis. I knew Kam wanted the position. He wanted it very badly. He talked to me about it all the time, always working out different angles to position himself better with Tom.\n\n\"I wish they'd finish.\" It was getting late. Kam would be tired. There went tonight.\n\n\"Got plans for tonight?\" Fan winked.\n\n\"We did have.\" I must have looked disappointed. \"Kam works too hard sometimes. Not enough time for me.\" \n\nFan giggled. \"Well, Tom works longer hours than Kam and he's insatiable.\"\n\n\"You didn't?\" I was a little shocked that Fan had outright admitted that she'd slept with Tom. She'd implied she wanted to a couple of times before when we'd chatted. I was shocked, but also very curious.\n\n\"I did. And I'm glad he left his wife behind, she doesn't know what she's missing.\" She giggled. \"Or maybe she does.\" Fan leaned in closer, her voice dropping to a whisper. \"He's so big.\"\n\n\"Yes he's tall isn't he?\" Six feet. He was a few inches taller than Kam.\n\n\"No, silly, I mean his dick. He's enormous.\" Fan giggled. \"I thought it was going to split me in half. It's huge.\"\n\n\"Really?\" I was blushing. My voice was hushed now too. I mean, I'd thought Kam was big after we were married, but how did you know to compare, unless...?\n\nFan read my expression and giggled again. \"You mean you didn't sleep with anyone else before you were married?\"\n\nI shook my head, blushing. \"No.\" I'd only ever slept with my husband. I mean, I knew a lot of girls did before they were married with other guys, but not me. Anyhow, why was I blushing? Shouldn't Fan be the one blushing?\n\n\"Well, take it from me, Tom's huge.\" Fan gave a theatrical little shudder and lowered her voice even more. I could barely hear her. \"The first time we did it, I couldn't believe how big he was. I thought I'd died and gone to heaven.\"\n\n\"Really?\" I was a little short of breath. I found myself wondering how Tom compared to Kam. I shouldn't think that, I knew, but I couldn't help it.\n\n\"Really.\" Fan giggled. \"I know I shouldn't tell you Isabelle...\" I knew that meant she was going to. \"...but Tom, he's just amazing in bed. He's totally insatiable, sometimes I wonder if his wife wasn't exhausted and that's why she stayed back in America.\" She giggled at my expression. \"Sorry Isabelle, I didn't mean to shock you, really. Tell me to be quiet, I know I gossip too much...\"\n\n\"No, no,\" I shook my head. I didn't mind. I was shocked, but also, I was ... very curious. And a little excited. Fan seemed to know so much more than I did. She was younger than me too, three years younger, and I was married as well, but she seemed to know so much more about these things. And Tom was a lot older than Kam. Tom was in his fifties. Wow. Insatiable too. I wondered. How many times was that? Kam was once every two or three nights if I was lucky. I wanted more, but I never told Kam that. I didn't want to be the pushy wife.\n\n\"Ummm, you said he was insatiable, I mean, how often...?\" My voice tailed away as I blushed.\n\nFan leaned in closer still. Our tea was forgotten. \"Well, last night he did it to me seven times. I could hardly walk this morning, I'm still sore.\"\n\n\"Seven times?\" I just about squealed. Oh my god. Seven! My eyes were like saucers, I swear.\n\n\"I think I need to find another girl to share him with.\" Fan giggled again.\n\n\"You wouldn't mind sharing him? With another girl?\" My heart beat faster as I thought about that. A lot faster.\n\nFan shook her head, smiling. \"You know, I really did that once, with my last boyfriend. It was fun.\" She looked at me, leaned forward, her voice dropping to a whisper. \"That's fun for the men, but you know what's more fun for us girls?\"\n\nI leaned forward, my own voice a fascinated whisper. \"No, what?\"\n\n\"Doing it with two guys.\"\n\n\"At the same time?\" My mouth was an \"o\" of astonishment. It had never occurred to me that you could do that. That anyone would do something like that. Call it my upbringing. But thinking about it ... I looked at Fan, my eyes wide. \"Have you ever...?\"\n\nShe giggled and nodded. I felt a little faint. But I wanted to know. I wanted know more.\n\n\"What's it like? Wasn't it...\" I wasn't sure of the word I wanted. \"...embarrassing?\" And how did you do it with two guys? Did they take turns with you? Or what? My heart was racing. My nipples were hard and aching the way they did when Kam got me really excited.\n\nFan looked around conspiratorially. \"It was to start with.\"\n\n\"How did it happen though, Fan?\" I really wanted to know. My heart was pounding. I was even wet.\n\n\"One of my boyfriend's had friends whose parents were away and he had a party. And my boyfriend wanted to make love, you know how it is.\"\n\nI nodded. I did. Kam and I had made love before we were married, now and then, on the floor in his parents apartment while his parents were asleep. It hadn't been that great and we'd had to be so quiet, which was hard. A couple of times we'd gone off to a hotel, but it wasn't romantic at all and I didn't like it. It was much much better after we were married and we had our own apartment.\n\n\"So we went into my boyfriend's friend's bedroom and we were doing it on his bed and his friend walked in. I didn't see him to start with, not until he wanted to join in and I was so embarrassed. Then they took turns with me, it was so hot.\" She giggled. \"It was great.\"\n\nI wanted to ask her more but Tom and Kam chose that moment to emerge.\n\n\"Hi Isabelle.\" Tom smiled. \"Sorry, I tied Kam up, didn't realize you were waiting.\"\n\n\"No problem Tom,\" I murmured, my eyes running discretely over the front of his trousers. No, it was impossible to tell. But Tom saw where I was looking. He smiled. I blushed. I blushed and I glanced away and smiled at my husband. \"Let's go get that sushi.\"\n\n<p align=\"center\"> * * * * * * * * </p>\n\nWe ate the sushi at home, in our apartment. Kam flicked the TV on, asked me what I wanted to watch. I smiled as I nestled up against him. \"Something with lots of sex, honey.\" \n\nI wanted to get him in the mood. I don't remember now what the movie was, some Japanese sex movie, but it got Kam in the mood alright. It got me even more in the mood than I already was. \n\nThe plot was straightforward, a young woman lives in an apartment next door to a man who turns out to be a yakuza gangster who is always bringing different women back to his apartment for sex. He ends up taking her on date, after which he brings her back to his apartment where she loses her virginity to him, sex which the movie showed very graphically. The yakuza then talked her into working for him as a hooker, with the film showing her uncertainty as he takes her to her first client in a hotel room.\n\n\"Oh my god, I can't imagine doing something like that,\" I gasped. She looked so nervous, in the movie this was her first client as a hooker. I tried to imagine what she was thinking, what she was feeling as her yakuza boyfriend led her towards that hotel room door, kissing her at the door before he backed away, leaving her to knock. I was wet, wet with excitement as the girl in the movie walked into the hotel room. What must that be like, walking into a room knowing you were going to fuck a man you'd never even met. \n\nI tried to imagine how it would feel to give my body to a stranger, to submit myself to the lust of some anonymous man in return for money. Except that the young woman in the movie wasn't even doing it for money, she was doing it for the sexual thrill and gratification and her yakuza boyfriend was taking the money. I watched as the man in the hotel room led her to the bed, undressed her, undressed himself and had sex with her, trying to imagine what she was thinking, what she was feeling. What would it feel like to be naked with a stranger? If I did something like that, would I enjoy it? \n\n\"She doesn't even know him,\" I gasped as the young women submitted herself to the man's lust, wondering what it would feel like to have a stranger actually enter my body and fuck me. \"How could she do something like that? I can't imagine doing something like that.\"\n\nMy husband glanced sideways at me. I could see he was excited. I could see he was hard. This movie was definitely having an effect. I liked that. The anticipation of what would soon happen to me was having an effect on me too. I was so ready for my husband to take me. The next scene in the movie showed the young women being called by the yakuza and told her client would meet her in a hotel bar. She was shown dressing in an elegant little dress, then putting on her makeup. Kam paused the movie, grinned at me.\n\n\"You've got a dress like that don't you?\"\n\nActually, I did. Almost identical, but I'd never worn it out anywhere. I'd bought it and then had second thoughts, it was a bit more daring than anything I usually wore. I nodded. \"In my closet.\" I was curious. \"Would you like me to wear a dress like that honey?\"\n\nI'd never worn it out anywhere. But at home, for my husband? I liked the idea. I didn't mind showing myself to my husband, I was a lot less shy than I had been when we were first married.\n\n\"Sure,\" Kam smiled, his hand on my knee.\n\n\"Why don't you give me a couple of minutes? Get yourself a drink.\"\n\nIt was longer. It took me two minutes just to find that dress. Yes, there it was. I slipped my work clothes off. My bra followed. I slipped into the dress with a wriggle, letting the silk caress my skin as I hooked the clasp behind my neck and fastened the little zipper at the rear. I loved little black dresses. This one was unadorned black with a plunging v-front, showing both my cleavage and my toned stomach, before it stopped at my navel. The V covered my breasts if I stood still, but any movement exposed the sides of my breasts. The top of the backless dress clasped around the back of my neck. The hemline was high, only a couple of inches below my panties, the shortness exciting, showing off my long slender legs.\n\nWearing it, I felt almost naked. When I walked out of our bedroom into the living room, my breasts quivered with each step. My nipples were already swollen hard with excitement, pushing the thin material outwards. Kam looked at me and whistled softly as I stopped and posed for him. He enjoyed looking at my breasts, I knew. I'd never worn a bikini until we were married and he'd encouraged me too. I was still shy about my breasts. I mean, all through High School I'd been just like all my friends. Skinny, with almost no boobs, just a couple of small bumps on my chest. \n\nHalf way through High School, those bumps began to inflate. By the time I ended High School I was as busty as a Barbie doll and I'd had to buy a stream of new bra's and tops to fit. When you're at High School you don't want to stand out and unfortunately, I did. Enough to draw the eye of every male I met, dress to conceal as I might. It was like my chest had a magnet on it that said \"all male eyes, look here.\" After a while, I got used to it but right up until I married Kam, I dressed very conservatively. I always wore one piece swimsuits as well, although even in those my bust stood out.\n\nMarried to Kam, I was slowly learning to appreciate myself. I was no longer so sensitive and, as with teasing my boss, I was slowly learning to enjoy my own body. With Kam, I loved to feel his eyes on me, I loved to excite him. So hearing that whistle of approval made me smile happily.\n\n\"You look gorgeous.\" Kam eyed me with appreciation. \n\nI liked that look. Hands on hips, I did a little twirl for him. Then another. God, I was so wet. I wanted him so much. Now! Now! Let's do it now!\n\n\"Do I look like that girl in the movie?\" I asked my husband, a little breathless at the thought. Looking at the paused movie, the dress was very similar.\n\nKam glanced at me, glanced at the screen, then back at me. I could see the excitement on his face. \"Yes,\" he said, \"you do.\" He stood up, looking at me. \"Keep still.\"\n\nI stayed still as he walked around me. I was melting, my panties were wet through. I wanted him so much.\n\n\"Would you like to pretend you're her?\" he asked. The lust in his voice made my knees weak.\n\n\"Would you like me to?\" My heart was pounding. This could be fun.\n\n\"If you'd like to?\" He picked up the remote control.\n\nI turned to watch the screen as he rewound that scene all the way back to the start, to where she walked into the hotel with her yakuza boyfriend, holding his hand. Kam slid closer to me, behind me, his hands on my hips as the movie began to play again.\n\n\"You're her Isabelle,\" he breathed, \"you're walking into the hotel, through the foyer just like she is, seeing men looking at you, they're attracted to you, you meet him in the bar, you catch the elevator and ride it up, floor by floor until you get out with him. You walk down the hallway looking at the numbers on the door, wondering which is his room.\"",
        "My heart was racing as I watched. Almost, almost I was that girl, so nervous, so excited, knowing that in minutes I would be in a hotel room with a stranger, a man who wanted only to fuck me, to use my body, to use my sex to satisfy his desire. That girl in the movie, like me, had only ever had sex with one man before. I almost moaned out loud as I felt Kam against me, so hard where he pressed against my butt.\n\n\"You know that when that hotel room door opens, you're going to walk inside.\" Kam's voice was a whisper in my ear. \"You'll walk in like she's about to, knowing that you'll be fucked.\" \n\nI watched the girl and I was her. Nervous, heart racing, excited. Knowing what was coming next. I was going to be fucked hard by a man who I'd never met, who was paying me for the use of my body. Paying me to have sex with me. I watched as he took that girl into his hotel room, stripped her dress from her, stripped her naked and fucked her on the bed. I shuddered with vicarious pleasure as he entered her, I gasped as she gasped, I moaned softly as she moaned while he fucked her.\n\nWhen he fucked her hard, pounding her down into the bed, I almost collapsed to the floor. When she begged him to fuck her harder, my mind silently echoed her words, when she begged him to fuck her cunt, my lips echoed hers, whispering those obscene words for the first time in my life, for the first time in my life feeling the power of language as those words reverberated through me. When he called her a slut, told her she was a whore, I was her, I was a slut, I was a whore. When he finally came, I shivered, feeling the power of those thrusts, of his culmination in her. \n\nKam paused the movie, and now his voice was still a whisper, but a more demanding whisper.\n\n\"Go outside Isabelle, go all the way down to the foyer and walk around and then come back up and knock on the door. All the way up, think to yourself that you're that girl and I'm your client. When I let you inside, you're going to be that girl, and I'm going to do to you what she has done to her, okay?\"\n\n\"Okay,\" I shivered. Wow. I was enjoying this. I smiled back at Kam. \"I'll see you in five minutes.\" I giggled breathlessly. \"How much am I going to charge you?\"\n\nMy husband laughed. \"I'll pay you when you arrive.\"\n\n\"Okay.\" Oh my god, I was really getting into this. I stood up, walked across the room, slipped my shoes back on, picked up my handbag. \"See you soon.\" I reached for a coat. \n\nKam's hand took my wrist. \"No, no coat. Just the dress.\"\n\nI looked at him. \"But ... but ...\" I looked down at the dress. No way, it was far to revealing. Fan would wear something like this out with confidence, not me.\n\n\"Do it for me Isabelle.\" \n\nI looked at him, seeing the excitement, the desire. I wanted that. I wanted him excited. And oh god, I'd never worn anything this revealing outside our apartment, where anyone could see me. My bikini didn't count. On the beach or at the pool, everyone wore bikini's. Even me.\n\n\"For me Isabelle.\" His eyes pleaded with me. I could feel the aura of his desire.\n\n\"Okay.\" My voice was a scared whisper. Oh god. For Kam. I swallowed.\n\nHe opened the door for me. I stepped outside. Our door closed behind me. Locked. I was standing in the empty hallway, half naked, in a dress that made me feel like that young woman in the movie. Turning, I walked down the hallway to the elevators, took a deep breath and pressed the down button. I was blushing bright red when the bell chimed and the doors opened. What if somebody was in there? But there wasn't. A huge surge of relief washed through me as I stepped in and pressed G. Down. Down. Down.\n\nAll the way to Ground. Alone. Heart pounding, I stepped out as the doors opened. The foyer to our apartment complex was empty, although the mall beyond was busy. Weak-kneed, feeling a little faint, I sank into one of the seats, squeaking as the cold leather met my butt. I'd forgotten how short the dress was. My phone rang. Kam. I pulled it out.\n\n\"Hi honey.\" I was breathless. God, I was so wet, my nipples were so hard. Aching. \n\n\"I can see you in the foyer darling, I want to see you walk into the mall, walk around and come back in five minutes.\" He hung up. I'd forgotten about the security camera. He could see me. What had seemed so adventurous a couple of minutes earlier now seemed safe and secure. The mall outside, now that was terrifying. But I knew Kam was watching me.\n\nWith a little whimper, I stood up, took my courage in my hands and stepped out through the automatic doors. I could see heads turned as I walked down the mall. Male eyes looking at me, looks of enjoyment. Some even turning to watch me as I walked past them. My breasts bounced and quivered a little, held back only by the V of material that constrained them. My nipples no longer just ached, they hurt. My breasts felt so full and hard, wanting Kam's hand and mouth. My sex pulsed wetly. I made it all the way to the fountain at the center of the mall before rounding it. On a whim, I pulled out my phone and called home.\n\n\"Hi,\" Kam answered.\n\n\"Hullo, is that Mr. Leung,\" I said, very professionally.\n\n\"Yes,\" I could hear the laughter in his voice.\n\n\"This is Cyndi, from Tzang's Escort Service\", I said, \"we received a message requesting the services of an escort for the evening from a Mr. Leung. Is this he?\"\n\n\"This is he,\" Kam replied. \"What can I do for you Cyndi?\"\n\n\"It's more what I can do for you, Mr. Leung.\" I almost giggled. \"I'm almost in the foyer now,\" I replied, \"I'll be coming up shortly if you could buzz me in.\"\n\n\"I'm looking forward to seeing you Cyndi,\" Kam breathed.\n\n\"Thankyou Mr. Leung.\" Almost, I giggled before I managed to hang up.\n\n\"Hey, Cyndi...\" a voice from behind me interrupted my excited thoughts as I tucked my phone away. \n\nSurprised, I turned my head. \"Hullo, do I know you?\" It was a white guy. Sounded American.\n\n\"Uh, no, but I couldn't help overhearing you, do you have a business card? I'd love to call on your services.\"\n\n\"Uhh ... No, no I don't I'm sorry.\" God, this was embarrassing. \"I only take bookings through my agency.\" I was improvising wildly, blushing bright red.\n\n\"Uhh, okay, maybe I could give you my card and you could contact me, email me or something and I can call. Uh, if you don't mind?\"\n\nOh god! Oh this was so embarrassing. He really did think I was a hooker. This was so exciting. He was handing me a business card. Glancing down as I tucked his card in my handbag, I could see he was hard. His trousers bulged. Hard from looking at me? His eyes were fixed on my cleavage. \n\n\"Uh, my agency sets the fees sir, I'll ask them to contact you.\"\n\n\"Thanks Cyndi, I'd appreciate that.\"\n\nAll the way back to our condo apartment foyer, I could feel his eyes on my butt. He really thought I was an escort. He was really offering to pay me to go with him, to have sex with him. I swiped myself in with my pass, waiting for the elevator, heart pounding wildly. Closing my eyes, I imagined myself calling that American. Here I was, waiting for the elevator to go to his apartment, stepping into it, pressing the button, floor by floor his apartment came closer. I stepped out, walked down the hallway, pressed the buzzer on the door.\n\nThe door opened.\n\n\"Hi, I'm Cyndi.\" I stepped inside without waiting for him to say anything.\n\n\"Come with me.\" He took my hand, leading me into the bedroom. He was already naked, hard and ready for me. I was wet. Slippery, knees turned to jelly, ready to be taken, wet. So wet. So hot.\n\nHe pushed me to the bed, looked down at me as I lay there, panting, flushed. \"Pull your dress up, slowly.\"\n\nI obeyed without a word, reaching down, my fingers curling under the hem of the dress, pulling it up, gently easing it higher and higher.\n\n\"Keep going.\" His voice was hoarse. \n\nI did. I closed my eyes, imagining I was doing this for that American guy downstairs. My heartbeat skyrocketed instantly. I lifted the black fabric higher, finally exposing my panties. There was very little to them, a couple of black elastic strings across my hips and a ting triangle of lace covering my pussy, already soaked through.\n\nIn my mind, behind my closed eyes, it was that American who looked down at me now, who tore my panties from me, who moved over me as I spread my legs for him, drew them back. His weight came down on me, my thighs cradled him as his cock found me and pushed into me, sinking into me to the hilt. I was so wet, wetter and more excited than I'd ever been, feeling his cock surge into me, so demanding, so hard, fucking me vigorously from that first thrusting penetration that I enjoyed so much.\n\nHis hands pinned mine to the bed above my head, his body pinned me to the bed, his cock impaled me, pinned my like a butterfly to a mounting board, pumping into me, fucking me, using me.\n\n\"Do you like that Cyndi? Do you like my cock?\" His eyes burned into mine.\n\nI did. I did. \"Yes ... Yes ... give me your cock ... Give it to me hard.\" Oh god, this was so good.\n\n\"Moan for me ... moan like a little slut ... moan like a hooker.\"\n\nI had no idea what a hooker moaned like but I did my best. \"NNUUUGHHHH ... UUGHHHHH ... Fuck me ... Fuck me harduuughhhh ... fuck me like a little slut ... use me ... I want your cock to use me ... do it hardugghhh.\" I felt so bad saying those words, I'd never said anything like this before. It was bad and it was exciting.\n\n\"UUUNNNGHHHHH.\" I'd never had it so hard. Never so good. I loved it. Loved feeling his cock ramming into me, his body pounding down on mine as my breasts quivered and bounced while he rode me.\n\n\"NNNGGHHHHHH.\" Oh jesus jesus jesus yes yes yes.\n\n\"HARDER ... FUCK ME HARDER ... USE MY CUNT ...SCREW ME ... GIVE IT TO ME! ... FUCK ME... FUCK MY CUNT HARD ... HARD ... HARDUUUGHHHH ...\"\n\nHe was. He was. I could feel his cock pumping like a piston inside me, in and out, sliding along the walls of my channel, my sex so wet now, so wet and hot and slippery for him. \n\n\"RIDE ME ... FUCK ME ... CUM IN ME ... CUM IN YOUR LITTLE SLUT...\"\n\nThat pushed him over the edge. He pushed hard into me with every thrust, his urgency growing, growing, feeding mine and then ...\n\n\"TAKE IT ... TAKE IT YOU LITTLE SLUT...OHH FUCK FUCK FUCK!\" And he came. \n\nI felt him spurting inside me, his head thrown back, his body taut, muscles jerking as he pumped his cum into me, into my sex, his throbbing cock spurting once, twice, three times before he subsided on me, breathing hard as I cradled him with my body and my arms. I hadn't climaxed myself, my body was still glowing, hot, wanting, but I could take care of that afterwards. For now, I was content that I'd satisfied my man. My husband. My darling Kam. That made me feel good.\n\nAfterwards, after we'd showered and were lying in bed, giggling, I told him about the American who'd thought I was a hooker and how he'd given me his business card. \n\n\"Show me his card.\"\n\n\"Okay.\" I slid out of our bed, padded into the living room, rummaging through my handbag to find the card. Back in bed, I handed it to Kam.\n\n\"James J. Whitworth III, Senior Partner, Whitworth Technology Inc.\" Some address in California. Kam grinned at me. \"Was he good looking?\"\n\nI shrugged. \"Well, he was a gweilo. He wasn't ugly but I didn't really look at him.\" I giggled. \"I was totally flustered Kam, wearing that dress. He couldn't take his eyes off my boobs though. And he was all hard looking at me. He wanted me to call him. I nearly died. I was so embarrassed, he really thought I was a hooker.\"\n\n\"If you were, you'd already be on your way to wherever he's staying after I'd finished with you.\" Kam was stroking my breasts as he talked.\n\n\"Mmmm, If I was a hooker, I probably would. I'd have already called him to tell him I was on my way... what was his name?\" I felt Kam's cock twitch against my thigh. Huh? Really? Kam. I smiled.\n\n\"James J. Whitworth III.\"\n\nI picked up my cellphone and pressed the # a bunch of times, waited a second, smiling at Kam. Feeling his cock twitching against my thigh. Ohhhh really? . \n\n\"Hi, is that James J. Whitworth Three? ... Yes, it's Cyndi here ... Mmmmm, I'm so glad you remember my boobs ... I mean me ...\" I giggled as Kam's cock grew harder. \"You wanted to see me ... yes, I just finished here ... I could come over now but I'm expensive ... How much? ...US dollars? ... Well, for five hundred US you get me for a couple of hours of fucking ... Yes? ... Okay, what sort of fucking? ... What would you like to do to me? ...\" I slid out of bed and walked out of the bedroom, holding my phone, then coming back in, smiling at my husband.\n\n\"Hi James, I'm Cyndi and I'm here for you to fuck... What would you like me to do?\"\n\nKam was on his back on the bed, already partially erect. Oh wow! My eyes lit up.\n\n\"Get your clothes of and suck my cock, Cyndi.\"\n\nI gulped. Okay, make believe aside, I'd never done that before. But okay, I was getting into this play-acting. I was already naked. I'd just never given Kam a blowjob before. Not so much because I didn't want to as because he'd never asked me - and I'd never thought of offering. I crawled onto the bed, eyeing his cock with a mixture of eagerness and trepidation,\n\n\"Is that what you'd like me to James?\" I looked up his body. \"Suck your cock?\"\n\n\"Cyndi, you hot little slut, I want you to suck my cock like a vacuum cleaner.\"\n\nI blinked. Huh? Okay. I opened my mouth, Up close like this, it looked a lot different. I wasn't sure about this but I wanted to please him. Please him? I wanted to excite him and drive him crazy. I studied it, fascinated, my eyes a couple of inches away from him. Always before it had been at arm's length as we lay side by side, his head level with mine. I knew girls did this, but I never had. Not even with Kam.\n\nPartially erect, it looked soft and cute. Almost instinctively, I squeezed him in my hand, squeezing and stroking, watching it grow in size, watching it harden, stiffen, stand erect. Small veins lined its length, the rounded head no swollen, exposed as I slid his foreskin down. I licked the length of him with my tongue, slowly. He tasted clean and slightly soapy. I was glad he'd taken that shower.\n\n\"Suck my cock Cyndi,\" he growled, his hand pushing my head down. I opened my mouth wide, flattened my tongue against my bottom lip and took the head of his cock into my mouth. Just feeling his cock head inside my mouth sent a rush of pleasure through me, a rush like hot liquid that raced down my throat, through my body to my pussy, bringing a renewed flood of wetness with it.\n\nNot knowing what else to do, I started to move my mouth on him, feeling his cock slide between my lips, my tongue moving on his hardness, up and down, up and down, taking him a little deeper each time as my confidence grew.\n\nHis hands pulled my head up, my mouth off him. \n\n\"I want to fuck you Cyndi.\" Kam was panting. \"On your back.\"\n\n\"Fuck me anyway you like James,\" I moaned as I moved onto my back, my eyes half closed, picturing that big American guy saying what Kam was saying to me. \"Tell me, tell me what you want to do to me James.\"\n\nI closed my eyes as James moved over me, between my legs, reaching down to take his cock in my hand and guide it to me. I was looking forward to this. Twice in one night! Heaven.\n\n\"I want you to take my big American dick in your tight little Chinese cunt Cyndi.\"\n\n\"UUGGHHHHHHHH.\" My husband's cock entered me easily, sliding into me, starting to move in and out. \"Yes ... Yes ... Fuck me James ... fuck me with your big cock ... Fuck me hard.\"\n\n\"Does you tight little Chinese cunt like my big white American dick Cyndi? Does it? Huh? Does it?\" Kam was fucking me hard, as hard as he'd fucked me earlier. Heaven. I was in heaven.\n\nMy eyes screwed tightly shut, I thought about that guy James, how big his cock had looked when it was hard, bulging inside his trousers. How he'd offered to pay for me. Pay to fuck me. I tried to imagine it was him above me, that he'd paid for me, paid to fuck me, that it was him between my legs, so much bigger than Kam, his cock pounding into me the way Kam's was. God, I was instantly wetter, hotter. I pulled my knees back, back as far as I could, opening wide to Kam, squeezing his cock with my cunt. I was really getting excited by this game.\n\n\"Fuck me James ... Fuck my tight little Chinese cunt ... Give me your big American cock ... give it to me hard ... stretch my tight little cunt ... Fuck my little slut cunt... Fuck me James ... fuck me.\"\n\n\"Oh yeah, I'm gonna fuck you hard Cyndi, fuck you like a little slut, fuck your tight little cunt...\" Kam was so getting into this as well, his cock pounding into me, his body rising and falling as his cock drove into me again and again, frictioning through my entrance, sliding up inside me with a vigor that brought me a renewed slippery delight. \n\nI clung to Kam, hooking my heels behind his thighs, taking him inside me eagerly, enjoying his body moving so vigorously on me, in me, feeling my own excitement growing and growing.\n\n\"Fuck me hard ... fuck me hard...\" I forgot all about our game in my excitement. I loved Kam. I loved him so much. When he went crazy fucking me I was just in heaven, feeling him using me and knowing I was giving him so much pleasure. So much enjoyment. \n\n\"I love you I love you I love you,\" I sobbed as Kam's cock pounded into me.\n\n\"You love my big American cock Cyndi,\" Kam growled.\n\n\"I love your big American cock,\" I moaned, \"fuck me with it ... fuck me fuck me fuck me.\"\n\n\"Oh fuck YEAAAAHHHHHH,\" Kam just about howled as he exploded inside me, pumping into me in a frenzy as he came. So good, I clung to him as he emptied himself inside me, enjoying his satisfaction with me, enjoying knowing I was a good wife for my husband, enjoying my own feelings as I felt him cum inside me. Again. Twice. Twice tonight. Wow! \n\nKam collapsed on me, panting for breath, his cock slipping out of me as he quickly shrank. I cradled him on me, between my legs, my body hot, my desire unsatisfied. I wanted more, I loved what he'd done to me, I loved feeling him cum inside me but I needed my own climax.\n\nAfter he lifted himself off me, Kam lay there watching me as I used both hands on myself, one finger inside me where he'd been, pushing inwards while my other hand worked my clitoris, circling, stroking, rubbing, my excitement growing fast as I imagined myself to really be a hooker, really servicing that American guy. \n\n\"Would you like me to make up a story for you?\" Kam distracted me from that picture.\n\nI smiled at my husband, breathing hard. \"Oh yeah, yeah, tell me.\"\n\nIt was much more fun if he created a fantasy for me. If it was his imagination, not mine, all I would have to do was to close my eyes and listen and picture myself doing whatever he said I was doing. \n\nKam smiled, one of his hands on my breast, caressing me while I teased myself. \"You're sitting waiting for me in a bar, in a booth at the back, in that dress you were wearing,\" he breathed, \"and you see James, he waves at you, you wave back, he comes over and joins you, buys you a drink, he joins you just before I arrive.\"\n\n\"Yes,\" I gasped, my eyes closed, picturing it. \"What happens next?\"\n\n\"I come back, you're sitting between us, he puts his hand on your leg under the table; he's stroking your leg, his hands working its way up, higher and higher, while he and I are talking. What do you do?\"\n\nI was teasing myself with my fingers, thinking of that hand on me. That unknown american's hand on my leg. Kam moved his hand to my leg, stroking me gently.\n\n\"I don't say anything,\" I gasped, \"you don't notice what he's doing to me, he pulls my legs towards him, his hand goes all the way up under my dress, he's touching me through my panties.\"\n\nKam's fingers were brushing my sex, teasing me as I played with myself, my eyes closed.\n\n\"The bar's very dark,\" he said, \"you lean towards me, whisper in my ear, tell me he's touching you, you ask me what to do.\"",
        "\"What do you say?\" I wanted to know,\n\n\"I whisper back, I asked you if you're enjoying him touching you, my hand slips inside your dress, I'm playing with your breast. His fingers are brushing your cunt through your panties.\" Kam was breathing hard again. Ohhhh, I liked this game. I was enjoying this. \"What are you going to do?\"\n\n\"I tell you I'm enjoying him touching me, and while I say that, his fingers ease under my panties, he's touching me, you kiss me and while you kiss me he slides his finger inside me, pushing it into me while I sit there.\" Oh god, I could picture that and I was so embarrassed even with it only being my imagination. I was so wet too. My fingers were making wet wet noises. \"When his finger goes into me I gasp, you can tell what he's doing to me, you kiss me harder, you squeeze my nipple.\"\n\n\"What happens next?\" Kam was getting hard. Oh my god. He was getting hard again. I wanted him, I wanted him hard enough to make love to me. What could I say? What had got him excited? That American thinking I was a hooker? Yes!\n\n\"He leans around me to talk to you, he asks you if I'm a good fuck, how much you pay me to fuck me, he thinks I'm a hooker and you're one of my clients, he doesn't know I'm your wife, he thinks I'm really Cyndi.\" I had two fingers inside my sex now, those wet wet sounds were louder as I spread my legs wider, my hips jerking a little. \"You tell him I'm an expensive hooker, but that I'm worth it, that I'm really hot to fuck and I've got a nice tight little cunt.\" I smiled at my husband, my fingers working. \"I AM hot to fuck aren't I? I'm so tight for you aren't I?\"\n\n\"Oh fuck yes,\" my husband smiled, his cock swelling where it rested on my thigh.\n\n\"You tell him that, you tell him I'm so hot, you tell him my cunt is so tight, so wet and slippery, you tell him I fuck like an alley cat in heat. His finger is inside me the whole time you're talked to him.\" I was panting, eyes closed, my breasts rising and falling as I breathed, my fingers working slowly, teasing myself. \"You look at me and you tell me to stand up. When I do, you bend me forward over the table, we're in a booth at the back, one of those small U-shaped ones with high sides, very private, no-one can see us, I bend forward over the table and rest on my forearms, you push my dress up to my waist and ask James if he likes my butt.\"\n\n\"He says he does, your hand is stroking one side of my butt, his hand is stroking the other. You pull my panties down and ask him if he thinks my pussy is pretty. He says it is and then, while he's looking at me, you slide your finger into me, you're both listening to me moaning. Your other hand is inside my dress, playing with one breast. James is doing the same thing, playing with my other breast. You two smile at each other. You pull your finger out of me and as soon as you do, James slides his finger in to me, you take turns with your fingers me, telling each other how my cunt feels, I can hear you both talking, talking about my pussy, how tight I am, how wet I am.\"\n\nOh yeah, Kam was hard now. Rock hard. Ohhhh this was working so well. Was my husband going to fuck me again? A THIRD time! Ohhhh god, I wanted this. Keep talking Isabelle, get him so excited that he'll do it again.\n\n\"Yeah, go on, what happens next?\" Kam was breathing hard, I could hear him.\n\n\"You're fingering me while he watches, he asks you if you can fit two fingers in me and you say let's see and you push a second finger into me, you both laugh when I moan. You ask him if he wants to try and he says yes so you take your finger out and he pushes two fingers into me. They stretch me so much, his fingers are big, I jerk against the table, sobbing while he forces them into me and then you both watch while he fingers my pussy. Then he tells you he wants to fuck me,\" I panted, \"he asks you if it's okay for him to fuck me. What do you tell him?\"\n\n\"Yes,\" Kam panted, and now one of my hands was stroking his cock, \"I tell him yes, he can go ahead and fuck you right there, on the table, while I watch, and when he's finished with you I'm going to fuck you myself.\"\n\nI rolled over, face down on the bed. \"Like this, I'm like this over the table, you're fingering me while he unzips his trousers and pulls his big hard cock out.\"\n\nKam's hand pulled mine away from myself, he pushed two fingers into my pussy, stretching me beautifully so that I moaned with delight.\n\n\"You push two fingers into me while he pulls his cock out, I can't see his cock, I'm waiting, waiting, bent over the table, you tell me he's going to fuck me. You tell me how big his cock is, you tell me in Chinese so he can't understand what you're saying, you tell me his cock is so big it's going to stretch my cunt, that it's huge.\"\n\n\"I do,\" Kam gasped, his fingers busy in me, \"I tell you he's pulling his cock out and he's going to fuck you with it, that it's a big American cock, that it's going to stretch your tight little cunt, then I ask you if you want it, if you want your little cunt to be fucked by a big American cock.\"\n\n\"Yes,\" I moaned, seeing myself bent over that table, waiting to be fucked. I pushed myself back on Kam's fingers, spreading my legs a little. So good. \"Yes, yes. I want that big American cock fucking me.\" I did, I really did, in my mind. \"He stands up behind me. He stands up and pushs my legs wide apart and takes his cock in his hand and guides it to my little pussy. You reach over, You pull my pussy open for him, so that his big cock can start to get into me. He's huge, so big, he has to push hard to get it into me, you tell me I have to take it all and I squeal and moan but I can't move, I'm trapped between him and the table and his big cock slowly goes into me, you can see it going in to me, stretching me around it.\"\n\n\"UUUGHHHHHHHHHH.\" Kam pushed a third finger into my pussy. He really stretched me. My hips bucked at the unexpected additional thickness in me. Fuck oh fuck oh fuck Kam. For a moment, I lost the story, my mind a blank. Wow oh wow oh wow.\n\n\"His cock works its way into you, as big as this. Bigger.\" Kam worked all three fingers inside me so that I moaned and clutched at our bed. God, his fingers really were stretching me. I loved it.\n\n\"Yes,\" I moaned, \"Yes, I beg him to push that big cock all the way into me, I want it, I want it all, I want it fucking me... fucking me hard ... he pushes it all the way into me and then he starts to fuck me ... His cock goes all the way in, slowly, then pulls back until only the head of him is left inside me and he stops there so you can see how big and hard his cock is, how wet with me, you can see me stretched around him, I beg him to push it back into me and he does, slowly. Your hand is under me, holding me, you can feel his cock sliding into me as well as see it, he goes all the way into me, you tell him to push hard and he does, he pushes all of it in me, it's huge and its all inside me.\"\n\n\"Fuck,\" Kam gasped, \"Fuck, I tell him to fuck you hard now, he's moving in and out of you faster and faster...\" His fingers moved in me so that I moaned and shivered and tried to push myself onto them.\n\n\"Yes,\" I gasped, \"yes, he fucks me harder, his big hard cock uses my cunt, he's sliding in and out of me, more and more excited and then he cums in me, he cums so hard, he pumps and pumps and pumps his cum into me while you watch and then he pulls out of me and sits down, he's finished with my cunt,\" I gasped. \"He says to you \"Your turn\". You stand up and you ...\"\n\nKam moved over me then, interrupting me as he pulled me back up onto my knees and rammed his cock into my pussy from behind, his hands gripping my hips hard, pulling me back onto him.\n\n\"NNNNNUGGGHHHHHH.\" My body juddered with the impact. Juddered again and again as he pump-fucked me from behind. \n\n\"Yeahhh ... oh fuck yeah ... he's finished with you ... your cunt's full of his cum .. your all fucked and wet and slippery and I fuck you hard while he watches me ...\"\n\n\"UUUGHHHH ... NNNGGGGHHH ... HHUNNNHHH ... UUGHHHH ... NNUGHHHH.\"\n\nKam wasn't pretending now, he was fucking me hard. Fucking me roughly. Enjoying using me, his cock using my cunt. Short hard thrusts that I could feel all the way to the tips of my fingers and toes and nipples. Each of those thrusts jolted me hard, my breasts bouncing and quivering as I knelt for him.\n\n\"Unnhh ... Unnnhhh ... Uunnhh ... Unnnhh.\"\n\nBehind me, Kam was grunting with each hard drive of his cock into me. And then he did something I'd never thought of, never imagined. I was stunned. I felt one of his fingers rubbing around my anal entrance in a tight little circle for a couple of seconds before he pushed the tip of his finger into that opening. No! No! I opened my mouth, Kam pumped into me with renewed vigor, his cock swelling inside me. Oh yes! Yes! Whatever worked. If that excited him enough, okay.\n\nHis fingertip slid deeper, deeper, so unexpected, so strange. His taking of me went on and on and on. His thrusts so hard, a hardness that I welcomed, that I met, wanting nothing more than to please him, to satisfy him, to give my husband the gratification of his climax.\n\n\"Oh yeah ... Now ... NOW ... FUCK FUCK FUCK...\"and he drove deep into me again and again and again. I felt him spurt in me, felt his cock throb, pulse, felt his cum inside me as his hand sheld me for him to use. Then he was finished and we both collapsed onto the bed. Kam had never done it to me twice in one evening before. Never. Not even on our honeymoon. Let alone three times. Ohhhhh this had been a night to treasure. I liked this. I wanted more nights like this. \n\nLying on our bed after my shower, I stretched deliciously as I listened to Kam in the bathroom. He was singing. I'd never heard him sing in the shower before. I decided that I liked this very much. I was going to do this again. I was going to do everything I could to encourage this. The reward was worth the momentary embarrassment, of that I was very sure. Very sure indeed.\n\nTo be continued - Chapter Two of Happy Birthday to Me coming soon!"
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "chinese",
        "voyeur",
        "young wife",
        "little black dress",
        "chloe tzang",
        "teasing"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/happy-birthday-to-me-ch-01"
}