{
    "title": "Random Acts of Kindness",
    "pages": [
        "Random Acts of Kindness\n\n*Author's Note: I've mentioned several times that I work with some retired Marine colonels and lieutenant colonels who flew F-18s. I've learned about various programs from them like the Foreign Area Officer or FAO (FAY-oh) program, Inspector-Instructor (I&I) billets for active duty Marines at reserve units, and most recently the Marine Officer Instructor (MOI) program.\n\nMOIs serve at universities where they teach Naval ROTC students and serve as mentors, role models, etc. It sounds like 'primo' duty, and recently one of these retired Marine officers talked about his time as an MOI at a major college campus in the midwest. A fictional three-year tour as an MOI forms the basis for this story.\n\nAs always, I hope you enjoy it. And I also hope nothing happens to the formatting like it did with the last page of Try and Love Again. Unfortunately, once a story is published it can't be changed.\n\n******\n\n\"Mom? You want me to turn on the dehumidifier before I head out?\"\n\n\"No, that's okay. I'll get it before I go to work. Thanks, though.\"\n\n\"Sure thing.\"\n\nHis 55-year old mother stepped out of her bedroom to say goodbye even though her 27-year old son was just going for a bike ride. She'd lost her husband ten years ago and still thought about it quite often. \n\nIt was like every other day in the sense that both of them were going to work. There wasn't anything unusual about it at all, and it seemed no different than the thousands that had gone before it. But he'd slipped out while she was in the shower, and neither of them had a chance to say goodbye. He sent her a text from the car before he left the garage telling her he loved her and would see her soon. That was the last thing she ever heard from him. \n\nSo even though it felt like nothing special, Marsha Sexton made it a point to say goodbye to her son every time they parted company. It didn't matter that he was a captain in the US Marine Corps and had spent the better part of a year in Afghanistan. He was still her little boy, and she wasn't about to let him leave without saying goodbye face to face.\n\n\"So. I noticed quite a bit of trash in the development yesterday on my way home,\" she said as she dried her hair with a towel.\n\n\"I only get out here once a week, Mom. But yeah, I saw it, too, on my way in this morning. No worries. I'll get it while I'm out.\"\n\n\"It just...irks me...that the people who've lived here all there lives walk or drive right by it. Or even worse, throw stuff down or toss it out of their cars\u2014and yet you come home and pick it up every time you ride.\"\n\nHer son was home, but not living at home with her, and the reason he was back was thanks to his current assignment. Captain Phil Sexton was a Marine Officer Instructor, or MOI for short, at the University of Oklahoma. \n\nEighteen months ago he'd never even heard of such a thing until a friend of his told him about an MOI slot at his alma mater.\n\n\"Okay, I'll bite. What's an MOI?\" he asked only half listening.\n\n\"Marine Officer Instructor. You work with Naval ROTC cadets. You teach them, serve as a role model, and help shape future officers in the Corps, blah, blah, blah.\"\n\nHis friend handed him a piece of paper called a MARDMIN, short for Marine Administrative message. Its focus was to advertise a list of universities needing MOI's and solicit volunteers to fill them. In the absence of volunteers, the Marine Corps would volunteer someone, but because this was much-sought-after duty, there were always more applicants that positions available.\n\nPhil read through the requirements and realized he was eligible to apply. There was a laundry list of things to do in order to submit a package, but this not only seemed like a fantastic opportunity, it just so happened that his mom lived in Norman, the city where he'd been born, raised, and gone to college himself.\n\n\"You interested?\" his buddy asked once he noticed the way Phil was studying the message.\n\n\"Yeah. I am. I think I'm gonna put in for this.\"\n\n\"Better get your ass in gear then, because you don't have a whole lot of time.\"\n\nPhil did get it gear, put together a superb package, then submitted it to his battalion commander via the adjutant. His CO enthusiastically endorsed the request for his best former rifle company commander and combat veteran, and when it reached his desk, his regimental commander did the same thing.\n\nLess than three months later, Captain Sexton had orders to report to the senior Naval officer at the university, a Navy captain, which was the equivalent of a Marine colonel, and was on his way a couple of weeks after that.\n\nHe was excited about the assignment, but his mother was over-the-moon thrilled to have her son back home. She didn't assume he'd want to live with her but made the offer just in case. Phil thanked her but let her know he'd get an apartment of his own but be over to visit several times a week. And so far, he'd done just that. \n\nAs much as he enjoyed spending time with his mom, the development she lived in was a bicyclist's dream. The roads were newly paved and smooth as glass and a sheer joy to ride.\n\nToday was Saturday, and he came over early to have breakfast with his mom before heading out on a 20-mile ride around their development as well as another one across the major road that separated them. \n\nHe always picked up trash no matter where he went, in uniform or out, and his bike rides were no exception. He'd been back home for nearly a year now, and had already lost track of the number of times people had thanked him for picking up the trash.\n\nThere were many times he'd wanted to say, \"May I ask why you won't stop to pick it up yourself?\" as someone walked right by the litter, but that wasn't in his nature. \n\nHe always smiled and told them, \"My pleasure!\"\n\nThere was a gas station at the road which separated the subdivisions, and he invariably had a full bag to dump there before picking up another sackful in the other housing area and dumping it on the way back. Today was the same as he pulled in and wheeled up to the trash can to dump out the plastic bag that was stuffed to the breaking point.\n\nAs he did he noticed a car nosing in and didn't think anything about it because there was an air hose there along with a vacuum cleaner next to the trash can. Both were coin operated, and it made sense to pull in parallel to them. But as the car pulled up, it nosed in rather than pull in parallel. \n\nThe reason why became obvious when he noticed how the left front tire was completely flat. The driver had nosed in order to get the front of the car closer to the air compressor.\n\nHe had just enough room to dump the trash, and as he started emptying the bag, he heard the driver, a woman who got out and grab the air hose say, \"Oh, no. This one's not working!\"\n\n\"That's okay, Mom. There's another one next to it,\" a young boy said as he got out to take a look.\n\nPhil knew that was true. There were indeed two air hoses, and it seemed very unlikely that both of them would be out of order at the same time.\n\n\"Oh, okay. Will it reach?\" the woman asked as she looked at the boy.\n\n\"Um...Mom?\" the boy said as he held up the other hose.\n\n\"Yes?\"\n\n\"This one's been cut.\"\n\n\"Cut? What do you mean\u2014cut?\" the woman asked as Phil shook the last of the trash out of the flimsy bag.\n\nThe boy was still holding it up, and even from 15 feet away, he could see there was no female end on it. Someone had vandalized the hose by cutting off the end with the metal part that latched onto a tire's valve stem. He watched the woman walk around the front of her car to look at it herself then heard her ask out loud what were they going to do now.\n\n\"Ma'am?\" Phil called out to get the woman's attention.\n\nShe turned around to see who it was then said, \"Yes?\"\n\n\"You can't drive your car on the rim like that. Can I possibly put on your spare for you?\"\n\nShe walked his way and began thanking him as she explained why that wasn't possible.\n\n\"That's very kind of you, but I'm afraid it's not ready for prime time, either. It's flat, too.\"\n\nHe could tell she frustrated and a little upset but still smiled, and when she did he also noticed she was a very attractive woman.\n\n\"I suppose I'm going to have to call a tow truck,\" she said before asking, \"You wouldn't have any idea how much that costs, would you?\"\n\n\"It's anywhere from $75-$150,\" Phil told her.\n\n\"Mom? Is there anything I can do?\" the boy asked as he walked up, too.\n\n\"No, honey. I'll just have to pay to have it towed.\"\n\n\"But that's a lot of money,\" her son said.\n\n\"I know, but we can't drive on it like this. I shouldn't have driven it at all, but I didn't know it was flat until we were a mile away from the motel. I'm afraid I may have already damaged the wheel.\"\n\n\"Ma'am?\" Phil said again, waiting for her to look his way.\n\nWhen she did, he asked if he she'd let him try something else.\n\nShe smiled again then laughed.\n\n\"My son might be able to ride on the handlebars, but I'm afraid I'm a little too big for that.\"\n\nPhil laughed, too, but only out of politeness. The woman was about 5'7\" and looked like she was maybe a size 6 and weighed about 115 pounds. Still, the point was well taken, but that wasn't what he had in mind.\n\nPhil pointed across the road to the houses across the street and said, \"My mom lives in the development to your right. In fact, she'll be leaving for work soon. Let me call her. She has an inflator in her car that plugs into the cigarette lighter. It's small and slow, but unless you have a large hole in your tire, it'll be good enough to get you to Tire King.\"\n\n\"Oh, right. That's down this road a half mile or so, isn't it?\" she asked.\n\n\"Yes, ma'am. They'll take good care of you.\"\n\n\"But I don't want to interrupt your bike ride.\"\n\nPhil laughed and assured her she wasn't.\n\n\"No problem. I'll give her a call right now.\"\n\nThe woman heard him explain the situation, say, \"Uh-huh. Yes. By the vacuum cleaner.\"\n\nHe hung up then let the woman know she'd be there in about five minutes.\n\n\"Thank you. Thank you so much. We just moved here, we don't really know anyone, and I've been trying to keep air in this tire for the last three days, but well, I guess it's time to get it fixed.\"\n\n\"You're very welcome, and...welcome to Norman.\"\n\n\"Oh, my gosh. Thank you, and I'm so sorry. I'm Jessica. Logan. And this is my son, Timmy.\"\n\nThe boy looked up at her, and his mom's eyes opened wide.\n\n\"Sorry. Tim. This is my son, Tim.\"\n\n\"Nice to meet you both. My name's Phil. Sexton.\"\n\n\"So do you by any chance live with your mom?\" the woman asked in a way that told him she wasn't assuming or accusing. \n\nIt just made sense that he might based on where he was and where she lived. And as much as Phil hated to admit it, there were plenty of adults his age still living with their mom and dad.\n\n\"Oh. No. I have my own place. I've been back in Norman for about a year or so, and I try and get by to see my mom as often as I can. We had breakfast together this morning, and I left while she finished getting ready for work.\"\n\nPhil paused then said, \"My uh, my dad passed some time ago, and we....\"\n\nThe woman was only a couple of feet away and when she heard him say that she told him how sorry she was before he could finish speaking. Phil started to let her know it had been several years when Tim unexpectedly said that his dad had died, too.\n\nPhil got off the bike, moved closer, knelt down, then put a hand on the boy's shoulder.\n\n\"I'm really sorry, buddy. I know what that's like.\"\n\n\"It's okay. He's in heaven now,\" Tim told him, a brave look on his young face.\n\n\"Timmy was....\"\n\nShe got another look and corrected herself.\n\n\"Tim...was six when his father passed, and that was three years ago. But thank you for your kind words.\"\n\nPhil stood up, and at an even six feet, was quite a bit taller than the very attractive, older woman standing right in front of him. She had what very blonde hair, a fair complexion, smooth, clear skin, soft, full lips, a gorgeous smile, and a pair of beautiful, bright, blue eyes. And while he didn't stare, he'd already noticed her rather shapely-but-trim body and the lean, tan legs attached to it.\n\nHe was getting ready to say something about how difficult losing a parent was when he heard a car pulling up.\n\n\"Where do you need me, honey?\" his mom called out, causing him and the woman to look her way.\n\n\"Pull in alongside her and plug the inflator in, okay?\"\n\n\"Will do!\" his mom said as she backed up to make the maneuver.\n\nPhil saw Tim watching with great interest as he set the inflator down and asked, \"Would you like to do this?\"\n\nThe boy's face lit up as he nodded.\n\n\"Okay. Come over here and I'll show you how to use this thing.\"\n\nPhil set the little Husky inflator on the ground then explained the very simple process.\n\n\"Just push this on, close this valve with your thumb, and hit this switch. Got it?\"\n\n\"Got it!\" Tim said before doing exactly what he was told.\n\nThe small, $25 air compressor came to life and began buzzing loudly as it slowly filled the tire with air. It could fill his bike tire in a few seconds, but took almost three minutes to get 15 pounds of air in the large, fat automobile tire. When it got there, Phil had Tim turn it off. There was no audible hiss and the tire seemed to be holding its own, so he let Mrs. Logan she should be able to make it to Tire King.\n\n\"I can't thank you enough,\" she told him as he put the inflator back in his mom's car.\n\n\"Before you go, let me give you my number. Just in case you get there and they tell it's going to be several hours.\"\n\n\"No, I...I've already put you out enough. That's very kind of you, but....\"\n\n\"He won't take no for an answer,\" Phil's mom called out from her seat on the driver's side. \"And I'm going to follow you to Tire King to make sure you get there safe and sound.\"\n\nJessica started to protest when Marsha said, \"That air won't last long. Better get my son's number and hop in before it goes flat again!\"\n\n\"Okay. Thank you. Again,\" she said before rattling off her number.\n\nPhil, who was near her door, opened it for her and could tell it surprised her.\n\n\"Now I know where you get your manners from,\" she said very sweetly before getting in. \n\nHe closed it, wished her luck, then asked his mom to call him either way so he'd know they were okay. She assured him she would, and once they were on their way down the road, he got back on the bike to finish the second half of his ride.\n\nMarsha rolled her window down once Jessica pulled up to the front door of the Tire King and asked if she'd be okay.\n\n\"Yes. Thank you SO much! And please thank your son for me. He was truly a lifesaver!\"\n\n\"Oh, that's just Phil. He's always doing some random act of kindness or another for someone!\"\n\nJessica thanked her again then waved as Marsha backed out and headed to work.\n\nBack on the road, Phil was clipping along covering a mile in just under 4 minutes and had gone maybe five when his phone rang. He had it mounted on the handlebars so he could listen to music or a podcast and only had to touch 'accept call'. His Trekz Air AfterShokz wrap-around, bone-conduction headphones switched to the phone and he could hear quite well while still able to listen for traffic since nothing was stuck inside his ear canal.\n\n\"Hey,\" he said as he pulled over.\n\n\"Phil? Hi. It's Jessica. From the gas station?\"\n\nHe laughed then assured her he remembered.\n\n\"Sorry. I...I feel so...bad...for calling, but....\"\n\n\"Don't. What's going on?\"\n\n\"Well, they said they can fix it, but someone called in sick and they only have one person working, and it's going to be at least three hours. I don't mean to bother you, but we....\"\n\n\"You're not. Give me ten minutes to get home and I'll jump in my car and come get you. You guys can hang out with me while I shower, and if it's not too early for lunch, I make a pretty mean sandwich.\"\n\n\"Oh, my heavens. No, we...we couldn't do that. I just thought maybe....\"\n\n\"Jessica? I am coming to get you both, and you are staying at my mom's place until your car's ready. End of story. You don't have to eat my sandwiches, but I am coming to pick you up.\"\n\nBetween her frustrations and the gratitude she was feeling, Jessica was on the verge of crying but managed to hold it together.\n\n\"Okay. Thank you,\" she told him as she choked back the growing lump in her throat. \n\nPhil had already turned around and was in high gear burning up the pavement. \n\n\"My pleasure,\" he told her. \"I'll see you soon.\"\n\nHe pulled into the driveway, entered the code for the garage opener, ducked under it as it slowly rose, and went inside to grab his wallet, keys, and a towel. \n\nIt was warm and humid in the mid-August Oklahoma sun, and he needed the towel to protect the leather seat in his car. Within 45 seconds, he had the bike in the garage, the towel in place, and the car in reverse.\n\nIt took him another five minutes to pull into the Tire King's parking lot, and when he did, he saw Jessica and Tim sitting on a brick ledge outside the office waiting.\n\n\"Did you call for a taxi?\" he asked as he got out.\n\nJessica laughed and told him that was her.\n\nShe went to open her door but Phil said, \"Hold on there!\" and reached in front of her.\n\nShe stepped back, let him open it, then thanked him yet again for being so nice. It was a two-door Camaro, so Tim had to slip into the very cramped back seat first. But before he did, he noticed the way his mom was smiling and knew something was going on. He wasn't old enough to be sure what it was, but he was old enough to know it made him happy to his mom smiling again.\n\n\"You have a very nice car,\" Jessica said as she got in and put her seatbelt on just as Phil closed his door.\n\n\"Oh, thanks. This was my gift to myself for making it back to the states in one piece,\" he told her with a little laugh that drew a confused look.\n\n\"Sorry. I'm a Marine. I was in Afghanistan for nine months a couple of years ago, and I used a lot of the money I saved to buy a car I wanted but didn't need.\"\n\n\"You're a Marine?\" Tim asked, now very interested.\n\n\"I am. Just over five years now.\"\n\n\"Awesome!\" the boy said before his mother told Phil 'thank you for your service.'\n\n\"My pleasure,\" he replied before putting the muscle car in gear and turning around.\n\n\"Can you peel out?\" Tim asked, causing Phil to laugh and his mom to immediately tell him that wasn't okay to ask.\n\n\"I can but I won't,\" Phil told him with a smile.\n\n\"Okay,\" Tim said, clearly feeling bad for having been chastised even though his mom wasn't being mean.\n\n\"Fast is fun but being safe if more important,\" he told his young passenger while looking at his mother who was smiling approvingly at the driver.\n\n\"It really is very nice,\" she said again as she looked at the dashboard.\n\n\"Thanks. It sometimes feels a little like driving a tank, though.\"\n\n\"How so?\"\n\n\"The rear window is small. Very small. As in...pillbox small.\"\n\nJessica turned to look then realized what he meant. \n\n\"The side windows aren't much better,\" Phil said, causing her to look at them, too.\n\n\"But I bet it's a lot of fun to drive,\" she said, another smile on her pretty face.\n\n\"You wanna drive it?\" he asked before pulling back onto the main road.\n\n\"Me? No. I...I...no.\"\n\n\"Mom! Come on!\" Tim called out.\n\n\"Yeah, Mom. Come around and drive it.\"\n\nPhil saw her look at the gearshift then said much more quietly, \"You can't drive a stick, can't you?\"\n\nJessica crinkled up her face then shook her head.\n\n\"No. Sorry. I'm...such a girl.\"\n\nPhil laughed, pulled out onto the road, then said, \"Yes, you are. And a very pretty one at that.\"\n\nHe didn't look over as Jessica looked his way. He could tell she was giving him something close to a 'how dare you' look but also knew she wasn't upset in the least by the flattery.",
        "\"My mom's beautiful!\" Tim informed their driver.\n\n\"Timothy Alan Logan!\" his mom said as she looked at her son.\n\nThis time, Tim was smiling happily as he saw Phil smiling back at him in the mirror.\n\n\"She is beautiful, buddy. You got that right.\"\n\n\"You two!\" Jessica exclaimed as though she was put out by the chatter.\n\n\"So...does she have a boyfriend?\" Phil asked with a smile Jessica's way, pressing his luck.\n\nHe was getting ready to turn left just as Jessica gave him a playful shove that made Tim start laughing.\n\n\"No. She says she doesn't have time to date. But I know that's not true because she....\"\n\n\"Okay! Okay! Enough!\" Jessica said before turning toward Phil and adding, \"from both of you!\"\n\nPhil laughed loudly and so did Tim. Jessica tried not to even smile but ended up laughing and shaking her head and secretly loving the attention. She'd noticed earlier that Phil was a very good looking man at the gas station, but he was so much younger than her that she didn't give it any real thought. She still hadn't changed her mind, but she did look over again just to confirm her earlier diagnosis, and yes, he was still very handsome, and for the first time in several years, her body tingled.\n\nAfter turning off the car, Tim waited to hop out while his mom tried to find the handle.\n\n\"Hey! Don't even think about it,\" Phil said so sternly it took her a moment to realize he was telling her not to open her own door.\n\n\"Well...yes, SIR!\" she said very playfully as she pulled her hand back and folded them both in her lap.\n\nShe looked at Phil who said just as seriously, \"I'm watching you,\" as he reached for his own door's handle.\n\nAgain, her body tingled, but this time it felt like it was due to an electric shock.\n\n\"I won't touch anything. I promise!\" she said as Phil opened his door to get out.\n\nBut before he could get out, Tim asked her to lean forward. She did, and he pulled the seat release and somehow managed to squeeze out of the car just as Phil arrived.\n\nTim looked up at the older man who said, \"Go ahead, buddy.\"\n\nThe boy smile then opened his mom's heavy door as she helped him open it enough for her to stand up. It was very low to the ground, so Phil extended a hand which she took and used to get out of the car.\n\n\"Thank you, honey!\" his mom said as she smiled back at the handsome young Marine then quietly said, \"you, too, Phil.\"\n\n\"High five, buddy!\" the Marine said after Tim shut the door.\n\nThe boy whacked his hand so hand it made his mom wince, but when Phil laughed, she did, too. By the time her host opened his mom's front door, Jessica realized she hadn't felt this happy in a very long time. But as she thought about the reason for feeling so good it caused her to feel an even deeper sense of confusion.\n\n\"Can I get you guys something to eat or drink?\" Phil asked once they were inside.\n\n\"I'm starving!\" Tim called out, drawing a look from his mother.\n\n\"Sorry,\" he said, trying to decide whether or not he was in trouble.\n\n\"Do you like BLTs?\" Phil asked the boy as he looked at his mom for any sign of disapproval.\n\n\"I love BLTs!\"\n\n\"Mom?\" Phil asked, trying not to smile.\n\n\"I...I'm a little bit hungry,\" she admitted.\n\n\"Let me guess. You don't eat bacon.\"\n\nThat was true. Jessica tried not to eat anything with that much grease and fat, but she was so hungry she was willing to make an exception.\n\n\"Not very often, but that sounds really good.\"\n\n\"Three BLTs coming right up! Oh, and the bathroom's just down the hall if you need it.\"\n\nTim had to pee, so his mom told him to make sure and wash his hands, then, when he was finished, she did the same.\n\nWhen she came back to the kitchen, she could smell bacon sizzling, and even more important to her, she saw her son on a little stool helping Phil as he gave her son some advice. He'd gotten so busy with the meal prep that he forgot about taking a shower. Besides, he'd dried off completely and couldn't smell anything too bad, so he shelved the idea for the time being.\n\n\"Can I turn the bacon over?\" Tim asked as his mom moved a little closer but still just watching.\n\n\"Sure. Just be really careful. Bacon sizzles and pops, and if the hot grease hits your arm, it's gonna sting.\"\n\n\"Will it hurt?\"\n\n\"Nah. Not really. But like I said, it will sting, and the odds are you're gonna get zapped. If you do don't drop the tongs, okay?\"\n\n\"I won't!\" the boy told him as he bravely reached in and grabbed one end of the first piece. He pinched it, lifted it up, then flipped it over.\n\n\"Nice!\" Phil told him as he put an arm around Tim's shoulder.\n\nHe wasn't quite as lucky with the second piece and took a little zing on his forearm.\n\n\"Ouch!\" he said after getting burned but didn't let go of the tongs.\n\n\"Here. Let's turn the heat way down until we get 'em all flipped over, okay?\"\n\nThe other seven pieces were successfully turned over, and when he finished with the last one, Tim turned to find his mom who was now standing next to him.\n\n\"Mom? Did you see me flip them over?\" Tim asked, a huge smile on his face.\n\n\"I did, and may I say\u2014very nicely done Chef Tim!\"\n\nThe smile on her son's face touched her, and by the time she looked at Phil, who was also smiling at her, she felt herself tearing up again. She could tell that he noticed, so she mentioned something about the bacon as though it was more like an onion that a strip of pork.\n\nPhil didn't take the easy layup and tease her, mostly because he knew why she'd teared up. And the fact that it happened told him how much she loved her son and gave him insight into how hard it must have been for them to lose a husband and father.\n\n\"All right. We just need to slice some tomatoes and....\"\n\n\"Can I slice them?\" Tim asked, anxious to help out even more.\n\n\"How about letting me do that, and maybe you can help Phil with the lettuce or the bread?\" his mom suggested.\n\nNormally, her son would have protested for being 'babied' in front of a grown man, but he was having such a good time he didn't notice.\n\nPhil pointed to the knives as he got out two ripe tomatoes and set them on the cutting board.\n\n\"Toasted or plain?\" he asked his guests.\n\n\"Toasted!\" Tim said as his mom replied with, \"Plain for me, please.\"\n\n\"How about you?\" Tim asked.\n\n\"Well, I guess I'll toast mine, too. We men gotta stick together, right?\"\n\nJessica nearly teared up again when she heard her son say, \"Right!\" as he looked up at the tall Marine officer with another smile that warmed her soul.\n\nThe adults both chose iced tea while Tim asked for a diet Dr. Pepper, his favorite soft drink, and the only one his mom didn't mind him having occasionally.\n\n\"There's butter or mayo, so feel free to put whatever you like on your bread,\" Phil told his guests as he set the slices of bread on their plates.\n\nJessica preferred mayo, but because she was eating bacon, she didn't put anything on her bread, something Phil noticed.\n\n\"So that's how you stay so small,\" he told her with a smile.\n\n\"Small. Ha! I've put on so much weight since....\"\n\nShe stopped smiling and talking as Phil saved her.\n\n\"Well, you must be hiding it somewhere, because I don't see any hint of that.\"\n\nHe stopped, too, for a moment, smiled then said, \"Not that I was looking.\"\n\nOnce the sandwiches were cut in half diagonally, Phil told them to dig in.\n\nTim sat there causing his mom to ask if everything was okay.\n\n\"Do I have to take small bites?\" he asked a little sheepishly just as Phil started to take one that was nearly a half of the first half.\n\nWhen he stopped in mid-bite, Jessica smiled. When he looked over at her with a sheepish look of his own, she laughed.\n\n\"No. Just don't shove the whole thing in your mouth, okay?\" she told her son as she smiled back at their host.\n\nPhil, of course, knew she wasn't even hinting about how he ate, but even so he took a slightly smaller bite as Tim took one appropriate for a boy his age.\n\n\"Taste okay?\" Phil asked as Tim chomped away.\n\nToo busy chewing to speak, he nodded his head several times then took a second bite as soon as the first cleared the back of his mouth. Jessica finally took a small bite of a corner of one half, and as she slowly chewed, had the feeling that this was not only pleasant but extremely so.\n\n\"Thank you. For everything,\" she told the younger man after taking a sip of iced tea.\n\n\"My pleasure. I'm just glad I was there to help out.\"\n\n\"Me, too!\" Tim said in between his second and third bites.\n\nHis mom wanted to tell him to slow down, but she knew he was having the nicest time he'd had in quite a while and let him do his thing.\n\n\"So, how is it that a Marine is here in the middle of Oklahoma?\" Jessica asked before taking another tiny little bite.\n\nPhil explained what an MOI was and how he'd ended up back home then asked Jessica where she was from originally.\n\n\"You won't believe this after telling me you work at the college, but I just got my nursing certificate, and I have my first job at the campus infirmary.\"\n\n\"Wow. Talk about a small world,\" Phil replied. \"And what are the odds of getting a job like that, my presence there aside?\"\n\n\"We're from Edmund which, as you know, is just north of Oklahoma City. The university is public, so they have to advertise online. I was looking at job openings of all kinds and just kind of stumbled onto it. I put in an application, interviewed for the job three days ago, and just got hired yesterday.\"\n\n\"Congratulations, Nurse Logan!\" Phil told her enthusiastically.\n\nJessica laughed then said, \"Thank you. Just don't call me Nurse Ratched, okay?\"\n\nThat made Phil laugh who said, \"I won't. And I'm uh, I'm really glad you're here, Jessica.\"\n\nHe smiled at her then added, \"Both at the university and here. At my mom's house.\"\n\n\"Me, too,\" she replied in a very sweet voice that caused an unexpected reaction in Phil's body.\n\nHe shoved the last of the BLT into his mouth, chewed it up, then, as he stood up, said, \"I really need to take a shower. There's not a lot to eat for dessert, but feel free to look around and take anything you like.\"\n\nAfter the fastest shower he'd taken since Officer Candidate's School six years ago, Phil came back wearing a nice shirt and a pair of Dockers taken from the few things he kept at his mom's house\u2014just in case.\n\n\"You clean up very nicely!\" Jessica told him when he walked back into the kitchen.\n\nPhil laughed and asked what they found for dessert.\n\n\"Cinnamon candy!\" Tim said as he opened his mouth revealing a red tongue.\n\nWhile his mom said, \"Tim!\" Phil just laughed.\n\n\"I told you it was slim pickins.\"\n\n\"We never eat dessert,\" Tim blabbed before looking at his mom.\n\n\"We do, too,\" she replied a little defensively. \"Just...not very often.\"\n\nPhil chuckled then told Tim he was welcome to take some more candy with him IF it was okay with his mom. She gave in and told him he could have one more piece on the way out, and with that, lunch was over.\n\nOnly then did Phil realize that Jessica had cleared and cleaned the table.\n\n\"Thank you,\" he said as he nodded toward the dishwasher.\n\n\"Oh, gosh. It was the least I could do after everything you've done for us. For free.\"\n\nPhil got serious then said, \"How do you know I won't be sending you a bill?\"\n\nJessica saw the corners of his mouth turn up and started laughing.\n\n\"Until I get a paycheck, you may have a hard time collecting,\" she told him through the laugh.\n\n\"Money? Who said anything about money?\"\n\nPhil was smiling, too, and the way he said it made her wonder if he might possibly be flirting with her. That, in turn, caused her brain to release another flood of chemicals. The chemicals made her heart beat a little faster and she looked away from him.\n\n\"I hope the shop calls soon. I feel terrible making you stay here while we wait.\"\n\n\"Huh. That's weird,\" Phil replied.\n\n\"What's weird?\"\n\n\"Well, I'm not hating it at all. In fact, I'm really enjoying staying here and waiting. With you. You...two.\"\n\n\"Oh. I...see,\" Jessica said as she looked around for something to distract her. \"Tim? Why don't you go wash up?\"\n\n\"What? Mom, I already did that before lunch. And I didn't get anything on me. See?\"\n\nHer son raised his hands to prove it, having no idea it wasn't really about that.\n\n\"I guess it can wait, but please brush your teeth as soon as we get back to the motel, okay?\"\n\nHe saw Phil looking at him and said, \"Okay,\" without argument.\n\n\"Hey. You guys want to maybe watch a movie or something? We've got another couple of hours to kill,\" Phil asked in an upbeat tone.\n\n\"Cool! Do you have action movies?\" an excited nine-year old boy asked.\n\n\"I do, but shouldn't we maybe ask your mom what she'd like to watch or see if she's even interested in watching one?\"\n\n\"Oh. Sorry,\" Tim said as he looked at his mom.\n\n\"I'm game, but I don't much care for shoot 'em up movies.\"\n\n\"No problem. I've got a ton of choices, and if we don't find anything, maybe we can talk for a bit.\"\n\n\"Yes. That...that would be nice,\" Jessica told him, knowing her son loved action movies. \n\nAs they began sifting through Phil's extensive collection of DVDs from high school and the few his mom had bought, Jessica found one she wanted to watch.\n\n\"Hey, look!\" she said to Tim. \"Onward. Remember asking me to take you to see it?\"\n\n\"Mom!\" he said, confusing his mother for a moment. She realized it was a Pixar movie, and because of Phil, he didn't want to appear to be a kid even though he was one.\n\n\"I loved that movie. If you guys want to watch it, I'd be happy to see it again,\" Phil said while looking right at Tim.\n\n\"You watched it?\" the boy asked.\n\n\"Yes, and it was great. Cmon. Let's pop it in and get this...show started!\"\n\nHe saw Jessica roll her eyes at his pun, but he also noticed the smile and the way her eyes seemed to sparkle as he dropped the DVD in then handed the remote to Tim.\n\n\"You're a brave man,\" Jessica said with a laugh. \"My son loves to rewind, so be forewarned!\"\n\nTim smiled in a way that said that was true, and as they watched, Phil found out that it was. At yet, each time he hit rewind, Phil found himself laughing as much at Jessica's exasperated reaction as to what was being said by the teenage elves in the movie.\n\nIt was 1hr 42min long, but with the rewinds, it ended up being an extra ten minutes. And just as the credits were rolling, Jessica's phone rang with the news that her car was ready to go.\n\n\"Well how about that?\" she said as she hung up. \"Can we time it or what?\"\n\nPhil chuckled as he agreed with her then told Jessica know he was ready anytime they were. She excused herself to use the bathroom then let him know they were ready.\n\nAs they headed back to Tire King Tim asked if they were going to see Phil again.\n\n\"Oh, he's very busy, honey, so it doesn't seem very....\"\n\n\"I wouldn't mind that,\" Phil said, cutting Jessica off but not in a rude way.\n\n\"Seriously?\"\n\n\"It's up to your mom, but I'd like that.\"\n\nPhil glanced at his passenger then said, \"A lot.\"\n\n\"Can we, Mom? Please?\"\n\n\"Oh. Well, we kind of do owe him a dinner or maybe....\"\n\nPhil looked her way, smiled, then said, \"You don't owe me anything, Jessica, but I accept.\"\n\nHe laughed then said, \"No matter what the offer is.\"\n\nThey both heard Tim say, \"Yes!\" as he did a fist pump in the back seat, and his mom and her new friend both smiled at one another when it happened.\n\nSuddenly flustered, Jessica blurted out how nice it would be if Phil's mother could join them, too.\n\n\"Unless you'd rather bring someone. Else. Like a date or something.\"\n\nThis time he didn't turn his head, but he cut his eyes her way before replying.\n\n\"I'm sure my mom would enjoy that. And just so you know, I'm not seeing anyone, so there isn't a date\u2014or anything else\u2014for me to bring.\"\n\n\"Oh. Okay,\" Jessica said feeling a little foolish and not sure what else to say.\n\nMercifully, they ready to turn into the Tire King's parking lot, and Phil turned without saying anything else. This time, Jessica remained seated, and a happy, smiling Tim let the older man open his mom's door.\n\n\"Thank you,\" she told him as she stood up. \"For everything. Really, Phil. I...can't thank you enough.\"\n\n\"You're very welcome, and I'm really looking forward to seeing you again.\"\n\nAs he went to shut the door, the back of his hand brushed against hers, and when she became aware of that she almost instinctively grabbed his. But that brief thought caused her to pull hers back like his was on fire.\n\n\"Sorry,\" he told her as the door slammed shut.\n\n\"No. That...that was fine,\" she told him as her tummy fluttered.\n\n\"Mind if I walk in with you just to make sure the car really is ready?\"\n\n\"Oh. Um...sure. That wouldn't be so great if there was an issue, huh?\"\n\nJessica didn't look away this time. She looked right at him and smiled as she said it, and when he smiled back, her tummy did a flip she felt certain he had to be able to feel himself.\n\nThere was no issue with the car, but before she drove off, Phil said he'd text her so that she'd have his number even though she already did.\n\n\"I'll look forward to it,\" she said as he opened her car's door for her.\n\nOnce she was inside, he looked in at Tim then said, \"Maybe next time we can do actually do something rather than just sit and watch a movie.\"\n\n\"That would be awesome!\" the boy replied with genuine enthusiasm.\n\n\"Okay. So I'll see you...and your mom...soon, I hope.\"\n\n\"See you soon, Phil!\" Tim called out as his mom smiled and thanked him yet again for all his help.\n\n\"My pleasure,\" he told her as he rested his elbows on the door frame of her window just inches away.\n\n\"Bye,\" Jessica said as she started the car.\n\nPhil stood, smiled again, tapped the roof and told her 'bye', too. He kept smiling as Tim waved while the car went by him, and once they were out of sight, he found himself wishing the three of them could spend more time together. A lot more time.\n\nThat evening Marsha called her son as soon as she got home from work to ask how things went with Jessica's car.\n\n\"Good. Yeah, they got the tire patched up, and fortunately there was no damage to the rim. They just moved here, and I get the sense money is very tight.\"\n\n\"Oh, thank goodness. I kept worrying about the tire blowing out on the freeway and that sweet boy of hers being in it.\"\n\n\"He's a really nice kid.\"\n\n\"I agree. And his mom seems like a very nice young woman.\"\n\nPhil smiled then told his mom he agreed.\n\n\"I don't suppose we'll be seeing either of them again, but as long as everything's okay, then....\"\n\nPhil could tell there was more his mom wanted to say and decided to voluntarily mention going to get them and bringing them home.\n\n\"You know what? I saw quite a few dishes in the dishwasher and wondered what was going on. So they spent a couple of hours here?\"\n\n\"Closer to three,\" Phil said before explaining how long it took to patch the tire and why.\n\n\"That must have been nice,\" Marsha offered.\n\n\"It was. It was very nice.\"\n\n\"Uh-huh. And?\"\n\n\"And what, Mom?\" Phil replied, knowing there was still more she wanted to say.\n\n\"I was thinking how...young and pretty Jessica looks. That's all.\"\n\n\"I won't argue with you on either count.\"\n\n\"It's obvious she's a little older than you, but not that much. Don't you think?\"\n\n\"I'm not sure, but that wouldn't bother me.\"\n\nPhil paused then asked, \"Are you trying to play matchmaker here, Mom?\"\n\n\"Of course not. I know the university is filled with pretty girls closer to your age. I also know that finding a pretty girl to keep you company isn't a problem. I just thought Jessica was a really nice girl herself. That's all.\"\n\nNow that he knew where his mom stood, he decided to tell her he might be seeing Jessica again. \n\n\"In fact, she said she'd like you to join us. If we ever actually do get together.\"\n\n\"That sounds absolutely delightful!\" his mother said in a way that made him smile.",
        "\"It's not for sure, and while I could tell she was genuinely thankful for the help, I really don't know if she'll ever call.\"\n\n\"Either way, you did the right thing.\"\n\n\"Yes. Yes we did, Mom,\" her son agreed, making sure to add her in.\n\nAgain, he could tell his mom wanted to say something else and waited.\n\n\"I don't mean to meddle, but have you thought about calling her?\"\n\nPhil couldn't help chuckling and told his mom he had.\n\n\"Sorry. It's none of my business.\"\n\n\"Mom? You're the one and only person who's allowed to...inquire...about my business.\"\n\nNow she laughed then told her son she loved him.\n\n\"And I love you, too, Mom.\"\n\n*****\n\nTwo Weeks Later\n\n\"All right. Listen up,\" Captain Sexton said as he addressed the entire NROTC contingent on campus at zero six thirty in the morning.\n\n\"All of you, except for our freshmen, have run the obstacle course. And a couple of you are prior enlisted Marines, so you've done this before, too.\"\n\nEveryone was gathered around in what was called a 'school circle' as the cadets stood silent, listening to every word.\n\n\"At OCS, you'll run the obstacle course for time. Here, you're running it for familiarity. There'll be plenty of opportunity to run it for time over the course of the academic year, but for today, learning proper form is more important than speed.\"\n\nPhil had the cadets, who were seniors and knew all the tricks, divide up and take one obstacle each. They, in turn, would show the underclassmen and women, how to get over each obstacle as quickly and efficiently as possible.\n\nThe first obstacle was a high bar. There were two ways to get over it. The first was to jump into it on the run and continue swinging one's entire body around it in giant circle, hit the ground, and take off running. The second involved something called a 'chicken wing' in which one pulled oneself up to chin height, threw one arm over the bar to grasp it forming a kind of chicken wing, throw up a leg, then pull the rest of the body up and over. \n\nTwo cadets took turns showing each of the options before moving on to the next obstacle.\n\nBy the end of the PT session, Marine-speak for physical training, everyone had negotiated every obstacle, and it was now time to let the cadets run the entire course.\n\n\"Remember. Technique over speed. We don't need anyone getting hurt out here today,\" the captain told them as the seniors formed up in front with juniors, sophomores, and freshmen filling in behind them.\n\n\"How about you, sir? Are you running?\" one of the seniors asked.\n\nPhil was wearing PT gear just like his cadets, as was the Marine Gunnery Sergeant who was his assistant MOI.\n\n\"You want to run it with me, Guns?\" the captain asked, knowing the former Marine drill instructor was in superb condition.\n\n\"Oorah, sir!\" the gunny told him.\n\n\"Okay. I believe the old timers will give it a go,\" Captain Sexton said, even though he was 27 and the gunny was 33.\n\nThe cadets went wild as the only two Marines in the group moved to the front.\n\n\"Cadet Jacobson. You say when,\" the captain told him.\n\n\"Stand by, gentlemen,\" the class leader said as he looked at his watch.\n\n\"Go!\" he called out.\n\nBoth Marines used option 1 and spun themselves over the bar. They then navigated a wooden obstacle, several vaults, an eight-foot wall, more vaults, and ended up climbing a 20-foot rope where they would touch the top of the wooden beam to end their time.\n\nPhil Sexton was in superb shape himself, and although the gunny was more experienced, Phil could have easily beaten him. But in a show of solidarity, he slowed down near the end and made sure both of them grabbed the rope at the same time.\n\nPhil watched as the gunny climbed, matching him foot for foot. They both slapped the beam at the same time and called out, \"Oorah! Semper Fi!\" before sliding back down to a still-cheering group of cadets.\n\nBut halfway back down the rope, Phil got his feet tangled up in the rope for the first time ever and to his extreme embarrassment, fell the last ten feet or so, landing on his left foot in a way that caused the ankle to roll.\n\nHe knew it was sprained but couldn't bear to show any weakness as he immediately got up and tried to laugh it off. The gunny knew better and after ordering the first two cadets to go, walked over and asked if his boss was okay.\n\n\"I rolled my ankle.\"\n\n\"Can you walk on it, Cap'n?\"\n\nHe took a step and winced then shook his head.\n\n\"You really need to get that wrapped, sir.\"\n\n\"I can't believe I did that,\" Phil said as he looked back at the rope as though it had somehow sabotaged him.\n\n\"I broke mine when I was a corporal going through NCO school, so no need to feel bad,\" the gunny told him as the first pair got close.\n\n\"I still feel like a rookie.\"\n\n\"No one else needs to know, sir. Just hang out here encouraging the cadets, and I'll finish up the PT session. Once everyone is gone, you can make your exit unobserved. And don't worry, I'll cover for your first class.\"\n\n\"Thanks, Gunny,\" the still-embarrassed captain told him.\n\n\"Not a problem, Skipper,\" the Marine staff NCO told his boss, using the term Marines often called captains\u2014especially those in command. This captain wasn't his CO, but it was still appropriate.\n\nThe gunny kept everyone near the rope so that the captain wouldn't have to walk back to the start of the course, gave everyone their instructions then dismissed the group.Two minutes later there wasn't a cadet to be seen.\n\n\"What's your plan, sir?\" the gunny asked just so he'd know in case the big captain, as in Navy type, wanted to know.\n\n\"I guess I'll limp over to the infirmary and get some ice on it and a wrap.\"\n\n\"Aye, aye, sir. Take your time.\"\n\nThe gunny took off at a trot so he could get a shower, change into a uniform, and be ready for class at 0830 which was said 'zero eight thirty' and never 'oh eight thirty' as the Army did.\n\nPhil got to his car then drove it as close to the infirmary as he could and went inside. He'd thought about Jessica many times, but when she didn't call, he assumed she wasn't interested in seeing him again and never stopped by. \n\nBut the moment he walked in he saw her. She was treating a student and didn't see him as he signed in and waited for her to finish. When she did, she looked around and started to ask who was next when she saw him.\n\n\"Phil?\"\n\n\"Hello Nurse Logan,\" he replied with a smile.\n\n\"What are you...are you okay?\"\n\n\"I twisted my ankle pretty bad, but it's no big deal. I can sit here as long as need be.\"\n\n\"There are a few people ahead of you, but let's get some ice on the ankle while you wait.\"\n\nShe brought an icepack over and handed it to him then quietly said, \"I'm sorry I haven't called. It's been crazy getting a place, starting the job, Tim's in a new school, and....\"\n\n\"I understand. No need to apologize.\"\n\nShe smiled then told him she'd be back as soon as she could.\n\nIt took nearly an hour to clear out the five other students ahead of Phil who was gently rotating the ankle which felt a lot better after icing it.\n\n\"Okay. If you can follow me, we'll take a look and see how bad this is,\" Jessica told him.\n\nShe was wearing a white lab coat and looked very professional, and yet Phil thought she was as beautiful as he remembered her.\n\n\"How's the job going?\" he asked as he sat on the exam table.\n\n\"Great. I couldn't be happier. This has been perfect,\" Jessica told him as before very carefully raising his calf to take a look.\n\n\"We have an x-ray machine and I'm gonna need you to have one taken to make sure this isn't broken,\" she told him as he showed her the range of motion he had. \"It'll only take a couple of minutes, and when you come back you won't have to wait again.\"\n\nPhil hobbled to the other end of the little clinic where the x-ray tech was waiting, lined up the ankle, then went behind a door to operate the machine. Two minutes later he was back on the same exam table.\n\nAs they both suspected, it wasn't broken, so Jessica wrapped it up for him and gave him some Ibuprofen for the swelling. \n\nAfter she handed him the two 400mg tablets, Phil said he wanted to ask her a question.\n\n\"I know you've been busy. I was just kind of wondering if that's the only reason you didn't call.\"\n\n\"Yes and no,\" she began. \"I've wanted to. I guess I really wanted to. But even though I had a very nice time talking to you, I just couldn't get past the difference in our ages, and I think at some point I realized you were just a really nice guy who was being polite rather than....\"\n\n\"I wasn't,\" Phil said when she left the sentence unfinished. \"Just being polite. I genuinely wanted to see you again, Jessica.\"\n\n\"I'm very flattered, Phil. You have no idea how flattered. But...\"\n\nSeveral more people were waiting, and Jessica told him she really had to get back to work. Phil told her he understood but before he left he again mentioned that he was serious about seeing her again.\n\nHe smiled at her then asked, \"You didn't lose my number, did you?\"\n\nJessica tried not to smile back but couldn't keep from doing so.\n\n\"No. I definitely have your number.\"\n\n\"Okay. Then I very much hope you'll call me,\" he told her before thanking her.\n\nShe was so busy the rest of the day that she ate the sandwich she brought with her in between seeing students. But after she got home she found herself thinking once again about the very handsome, much-younger man who'd made her feel things she hadn't felt since her husband was alive.\n\nShe saw his personal information in the school's automated database when he signed in and now knew how old he was, and that number was stuck in brain. It wasn't sitting there, though. It was flashing in a bright, neon red as though it was some kind of ominous warning. But she also couldn't stop thinking about his kindness or the time they'd spent together. And after seeing him again in next to nothing it made her body ache.\n\nThere hadn't been anyone in her life...like that...since her husband, and just being around him caused the embers still burning somewhere deep inside her to flare up.\n\nJessica knew she shouldn't mention seeing him today, but there was some hidden part of her brain that needed to. It needed to see her son's reaction in order to help it decide whether or not she should call him.\n\nSo during dinner, she casually asked, \"Guess who came into the clinic today?\"\n\n\"Um...someone famous?\" Tim guessed as he ate the macaroni and cheese his mom made for the third time that week.\n\n\"No. Not really.\"\n\n\"Then I don't know.\"\n\n\"Phil. From....\"\n\n\"Phil? The Marine?\"\n\nJessica smiled and said, \"Yes. The Marine.\"\n\n\"Awesome! Is he coming over?\"\n\nHer son's excitement only surprised her a little bit as she knew he'd taken to the man who'd been so helpful to them and so good to him.\n\n\"Um, I don't know. Would you like him to?\"\n\n\"Yes! Can he, Mom? Please?\"\n\n\"We still have a lot of boxes and stuff to put away. If we can get them taken care I supposed I could give him a call.\"\n\n\"May I be excused?\" Tim asked, as he shoveled the last of the mac and cheese into his mouth in one huge bite.\n\n\"As soon as you swallow that truckload of food without choking!\" his mom replied, secretly happy that her son was so enthusiastic about seeing Phil again.\n\n\"Which boxes have my stuff in them?\" he asked after the last of the food was in his stomach.\n\n\"The three by your bedroom, remember?\" Jessica told him even though she'd mentioned them several times. \n\nHe'd unpacked the one box that had things he it he wanted and left the others. She had no room to talk, though, as she'd left at least a half dozen untouched herself. So once she finished eating and cleaning up, she began opening boxes and listened as Tim sang some song she couldn't place and did the same.\n\nThe small, cozy, two-bedroom apartment wasn't large, but the new job allowed Jessica to get a reasonably nice place. They'd only been in it for a week after staying at a motel before that, but it really was time to get things put away.\n\nIt took them a couple of hours to get everything shipshape, and by the time they finished, it was time for Tim to take a shower and get ready for bed. Once he was asleep, Jessica looked at the clock and saw that it was almost 9:30. Calling after 9pm had always been a kind of guide for being too late to call, but she was pretty sure it would be okay to give Phil a quick buzz.\n\nBut before she hit 'dial', she thought that he might be asleep early because of the ankle and decided to text him instead.\n\n\"Hi. Tim and I just finished emptying the rest of the boxes from our move, and the apartment is at least...presentable,\" she began. \"I was going to call you, but it's late, and I didn't want to bother you in case you were asleep. I decided to send you a text instead and see if you wanted to join us for dinner on Saturday.\"\n\nShe thought about saying more, but everything else involved feelings, and talking about feelings seemed wholly inappropriate, so she hit 'send' and set her phone down. By the time she sat back in her chair and closed her eyes to relax, the phone rang. She looked at it and saw Phil's name and felt her heart skip a beat.\n\n\"Hello?\" she said, as though she didn't know who was calling.\n\n\"I'm not keeping you up, am I?\" he asked playfully.\n\n\"Oh, my. Bringing up my advanced age already, huh?\" she teased back.\n\n\"Advanced age. Yeah, right.\"\n\nHis voice was still playful, and Jessica almost told him how old she was, but her brain told her not to. It needed to see if there was even a remote chance that someone this attractive and this young could actually be interested in her that way. And more importantly, could she be interested in anyone that young.\n\n\"Let's just say I won't allow candles on my birthday cake anymore. Just the two numbers.\"\n\nPhil laughed then said, \"I'm really glad you texted me, Jessica.\"\n\nThe way he said it sent it a tingle through her.\n\n\"And I'm glad you called,\" she said quietly and sincerely.\n\n\"I had no idea I'd have to twist my ankle to get your attention,\" Phil said in that same playful, joking way.\n\n\"That wasn't necessary, but I'm kind of glad you did.\"\n\nShe realized what she'd just said and quickly changed her tune.\n\n\"No. Wait. I'm not glad you got hurt. I was only trying to say that....\"\n\n\"I'm glad, too,\" Phil said in his deep, quiet voice that sent another wave of something through her body.\n\n\"Is it hurting?\"\n\n\"It feels a lot better,\" he told her. \"Now, anyway.\"\n\nA third salvo hit her as she smiled and told him she was happy to hear that.\n\n\"You looked great in your lab coat, by the way.\"\n\nJessica laughed and told him it was what all the chic people were wearing this year.\n\nPhil also laughed then said, \"The truth is, you'd look great no matter what you were wearing. The white coat just made you look very...professional.\"\n\n\"Speaking of wearing, I still haven't seen you in your uniform. Do you wear it on campus?\"\n\n\"Yes. Every day, as a matter of fact,\" he told her.\n\n\"Then I guess I have something to look forward to,\" she heard herself say before cringing in horror.\n\n\"Why Nurse Logan. Are you flirting with me?\" the younger man asked, clearly smiling as he did.\n\nThe cringe turned to panic welling up inside her as she said, \"No. I...I only meant that, you know, people in uniform look...sharp. That's all.\"\n\nShe cringed again for feeling so inept at making conversation, but Phil's laugh helped her relax a little.\n\n\"I am sharp,\" he said. \"But that's only because my head's pointed.\"\n\nIt was so corny it made her laugh and groan at the same time and also released a huge amount of built-up pressure.\n\n\"Yeah, don't quit your day job,\" she told him, still laughing.\n\n\"I love hearing you laugh,\" Phil told her. \"It reminds me of how amazing you look when you smile.\"\n\nThe crash of emotion that hit her this time stunned her into silence making Phil think he'd said too much too soon.\n\n\"I was being honest, but that probably wasn't the best thing to say,\" he told her apologetically.\n\n\"I...I thought it was very nice,\" she told him, as her heart pounded in her chest.\n\n\"Whew,\" came the reply before he told her that Saturday sounded perfect. \"What time? And can I bring anything?\"\n\n\"Oh. Um...maybe 7 o'clock? And a bottle of wine if you drink?\"\n\n\"Check and check.\"\n\n\"And I believe I invited your mom, if memory serves me.\"\n\n\"Is that an age joke?\" Phil said very seriously making her laugh.\n\n\"Oh, boy. I really set myself up for that one, didn't I?\" Jessica said with a little laugh that made him smile.\n\nThis time, Phil felt confident he could say what he was thinking and just said it.\n\n\"Jessica? Can we forget the age difference? Please? The truth is, you're not that old. You're...well, you're...beautiful.\"\n\nAnother mini-tsunami slammed into her causing a severe and immediate case of dry mouth. \n\nAll she could croak out was, \"Okay,\" and that was so quiet Phil barely heard her, causing him to wonder if he'd completely misread things.\n\n\"So I'll...or rather...we...will see you on Saturday then?\"\n\n\"Yes. That'll be great, Phil. And please tell your mom I'm really looking forward to seeing her again.\"\n\n\"I will, and we're both looking forward to seeing you, too.\"\n\n\"And I know a nine-year old boy who will be thrilled.\"\n\nPhil laughed and told her he was excited about seeing 'the big guy' again, too.\n\n\"Okay, well...I'll see Saturday, okay?\" she said very sweetly.\n\n\"You will. Goodnight, Jessica.\"\n\n\"Goodnight, Phil. And thank you for calling.\"\n\nThe phone went dead and she sat there looking at it as her mind tried to understand everything it had just experienced and the way that experience was making her feel. But after an hour of thoughts roiling around in her brain, she kept coming to the same conclusion.\n\n\"He's still 27. And you're...41,\" Jessica told herself out loud with an audible sigh after giving up trying to make sense of it and again closing her eyes as she tried to relax.\n\nIt was 6am when the alarm went off in her bedroom, and it took Jessica several seconds to figure out what was going on. She'd fallen asleep in the reclining chair and crashed so hard she didn't even know where she was until she forced an eye open.\n\nUnable to hit the snooze button, she got up and stumbled to the bedroom to silence the noise then went to make herself some coffee. As she took a first sip Jessica realized she hadn't thought about Phil until just then. But from that moment on she found it impossible not to think about him. And for some reason she found herself not wanting to stop thinking about him no matter how absurd the whole thing seemed.\n\nPhil was able to jam his wrapped foot into a dress shoe the following morning, but the fit was bad enough to be uncomfortable. However, the pain of walking on it was so much worse that he was thankful each time he was able to sit down. \n\nJust before leaving for work he took a look at himself in the mirror. As always he noticed the Bronze Star medal at the top of ten-ribbon rack he wore. It didn't have the 'V' device attached to it meaning it was't awarded for heroism under fire. \n\nIn fact, the Bronze Star had become more of an end-of-tour award for officers in command than for anything heroic. It started in the Gulf War when the Air Force awarded crews at Whiteman Air Force Base the Bronze Star for things like loading ordnance on aircraft 20 hours a day. The Army followed, and eventually, the Marine Corps capitulated and started handing them out like candy, too. \n\nHowever, those with the 'V' on it still meant something, and while the young captain was justifiably proud of his honorable service, he felt unworthy to wear such a prestigious award for just having done his job. But he wasn't in charge of the awards process, and his only choice was to either wear the ribbons or not wear them on any given day.\n\nBut he had earned the Combat Action Ribbon he also wore which reminded him of the months he spent in the most god-forsaken place on earth called Afghanistan as well as the incredible Marines with whom he'd served.",
        "Because he had plans to stop by the campus's clinic that morning, he wore them even though the woman he was hoping to impress wouldn't know one piece of colored cloth from any other. Still, it mattered to him because she was by far the most interesting and attractive woman he'd ever known. \n\nAt 10:20 that morning, Phil finished his second class and had 50 minutes before the next one, so he gingerly made his way outside and got in his car and headed to the clinic.\n\nIt wasn't quite as busy as it had been the day before, and as was almost always the case, Phil's presence caused nearly every head in a room to turn his way\u2014both male and female. The uniform caused the males to look, and the handsome man in it kept the females looking. \n\nIn fact there was rarely a day some cute co-ed didn't try and flirt with him, and he was so used to it that when one looked his way and used her hand to say 'call me', he barely even nodded.\n\nHe wasn't being rude, it was just that there was an actual woman in the room, and she was the only person he was interested in, or so he thought until he heard a young male voice call out his name.\n\n\"Tim? Hey! What are you doing here?\" Phil asked as he bent down to give the boy a hug.\n\nBut the hug never happened as Tim stopped short and stared at the uniform.\n\n\"Wow! That is SO cool!\" he said as he checked out the two silver bars on each collar, the ribbons, Phil's name plate with 'Sexton' on it, and the sharp creases in the shirt.\n\n\"Don't you look handsome!\" another voice he recognized said, causing him to look away from the shorter person standing in front of him.\n\n\"Hi,\" Phil said, a huge smile on his face.\n\n\"I'm impressed,\" she told him as she also stared.\n\n\"Oh. The uniform. Yeah, it makes doing the whole mix and match thing a lot easier. Especially for guys like me who don't exactly do well at it.\"\n\n\"You look...very dashing,\" Jessica told him before remembering to smile.\n\n\"Thanks. And what's this guy doing here?\" Phil asked as he looked down at Tim and smiled.\n\n\"It's a planning day for teachers, and my mom can't afford a....\"\n\nHe stopped and looked at his mom then said, \"Sorry. I forgot.\"\n\n\"It's okay, honey. It's true.\"\n\nShe looked at Phil and told him she was waiting for her first full paycheck and couldn't afford a babysitter. She'd been paid for three days on the 15th, but still hadn't received a full check.\n\n\"The school keeps them until 5pm at no charge, and since I get off at 4:30, school days aren't a problem. And we don't work weekends, so this a rarity.\"\n\n\"Okay. Well, are you helping your mom fix people up?\" Phil asked.\n\n\"No. I just get stuff for her like bandaids and rubbing alcohol. It's boring.\"\n\nHe again looked up at his mom who tried not to laugh.\n\n\"Sorry, buddy. I know this isn't any fun, but it's only until 4:30, okay?\"\n\nPhil saw Tim give his mom an 'I know' look then explained why he was there.\n\n\"I was kind of hoping I might be able to take you to lunch today.\"\n\nHe looked at his favorite new 9-year old and said, \"Both of you.\"\n\nTo no one's surprise, Tim started in with, \"Can we, Mom? Please?\"\n\n\"That will depend on how many people walk in just before noon. Yesterday I didn't get to go to lunch, so we'll have to see.\"\n\n\"Tim? Can I talk to your mom for a second?\" Phil asked.\n\n\"Okay,\" he said before asking if he could play a game on his phone.\n\n\"Sure. That's fine,\" his mom said as the boy went to her office to sit down.\n\n\"I hate making him stay here, especially if someone's sick. The last thing I need is him being unable to go to school.\"\n\n\"Well, I was about to ask you if you'd mind letting him hang out with me. In the ROTC building. I'm inside teaching classes all day, he'll be totally safe, and I'll take him to lunch whether you can get away or not.\"\n\n\"Thank you, but I can't ask you to do that. You have a job to do, and I....\"\n\n\"Jessica? I'd not only be glad to do it, I'd really enjoy it. And I'm sure Tim will, too.\"\n\nSuddenly, Phil seemed much older than his age, and as he looked at her, Jessica felt her heart pounding again. \n\n\"And I'll text you every hour or so if you'd like.\"\n\n\"Are you sure?\" she asked, hardly able to believe he would be willing to do this while knowing Tim would be thrilled.\n\n\"I'm positive. And the cadets will love having him around, too.\"\n\n\"Well, if you're sure.\"\n\n\"I am. One-hundred percent.\"\n\nSeveral more students signed in, and Jessica had to get back to work.\n\n\"Okay then. Thank you, Phil. Again.\"\n\n\"My pleasure. And you go take care of your next patient, and I'll grab young Timothy.\"\n\nJessica laughed a happy laugh then warned him not to ever use her son's full name.\n\n\"It's almost as bad as 'Timmy', so say it at your own risk.\"\n\nHe laughed then told her he understood.\n\n\"I'm not wild about being called Phillip.\"\n\n\"Hmmm. I think I prefer it. It sounds...distinguished.\"\n\nJessica smiled then said, \"It...suits you.\"\n\nAs she turned to walk away he said, \"Then I may have to make an exception for you.\"\n\nShe smiled over her shoulder but didn't say anything as she called for the next person while Phil went to give his buddy the good news.\n\n\"Are you serious? That is totally awesome!\"\n\n\"Your mom gave me the a-okay, so let's blast outta here.\"\n\n\"Yeah! Let's blast outta here!\" Tim said, beaming from ear to ear.\n\n\"Have fun and be good!\" his mom said.\n\n\"I will. I promise!\" Tim called back.\n\nShe saw Phil put his hand on her son's shoulder and found herself choking up and having to dab her eyes before asking her next patient how she could help them because of the way he was looking up at the Marine in uniform.\n\nAt 11:45 Jessica texted Phil and her son to let them know she was swamped. A couple of minutes later she got a reply that told her that was fine, and that the two men would do lunch together.\n\nHad she not been so busy, Jessica might have done more than tear up as she realized she might just be having feelings for this younger man she'd tried to convince herself was much too young. But for some reason, his age now mattered less than who he was, and by all accounts, he was as mature as he was handsome, and the way he made her feel was proof of just how handsome he was.\n\n\"No problem. They serve BLTs in the cafeteria, and I know two guys ready to eat a couple of them,\" Phil texted back. \"See you when your day is over.\"\n\nPhil's last class ended at 1700 or 5pm to Jessica, so she asked if she could stop by the ROTC building and save him a trip.\n\n\"Yes. Definitely!\" Phil texted back.\n\n\"I'll avoid your classroom, though, so you won't be embarrassed,\" she replied.\n\n\"What? Are you kidding? Embarrassed? That's impossible. In fact, I'd be the envy of every guy who sees you, Jessica.\"\n\nJessica's heart pitter pattered as she thought about writing, \"Are you trying to make me fall in love with you?\"\n\nBut she settled for, \"I had no idea Marines had such low standards in women!\"\n\nHis reply made the pitter patter skip a beat.\n\n\"We don't have low standards. Not in any area. That's the reason I find myself unable to stop thinking about you all day, every day.\"\n\nJessica had another student waiting for her and couldn't reply. But what she just read caused her hands to shake as she put her phone down. \n\nPart of it she understood. She not only hadn't made love with a man since her husband was alive, she hadn't been on a date or even been kissed. And here was someone so handsome it took her breath away who was blatantly flirting with her, and while it made no sense to her, she found it hard to believe he wasn't being honest and sincere. And that realization only added to growing sense of confusion and happiness she was experiencing.\n\nShe'd never been in or even near the ROTC building but knew where it was. She walked inside and looked around, and a female Navy sailor asked if she could help her.\n\n\"Oh. Yes. I'm here to pick up my son. He's with....\"\n\n\"Oh, sure! I saw Captain Sexton come in with him. What a cutie!\"\n\n\"Thank you. I think so,\" Jessica told her as she walked toward the younger woman in white.\n\n\"And your husband or boyfriend is, well, it would be unprofessional for me to say,\" the Navy yeoman said with a smile and a bashful look.\n\n\"No. He and I...we're not...he's...he's just watching my son,\" a stammering Jessica told her.\n\n\"Ma'am? I can't imagine someone like Captain Sexton watching anyone's child unless he was, you know, very interested in his mom. And after seeing you, I...I understand why.\"\n\n\"Oh. Oh, my gosh. Um...thank you. I...that's very kind of you to say.\"\n\nThe younger woman was rather plain-looking and had had a secret crush on the handsome Marine Corps officer since the first time she met him. But there wasn't only the rank issue, she didn't look anything like the beautiful blonde standing in front of her, and she had no illusions that there would ever be anything more than a silent crush.\n\n\"Do you need me to show you where his room is?\" the sailor asked. \"It's right above us on the second deck and on the starboard.... Sorry. It's on the second floor on the righthand side. You'll see his name plate outside the door.\"\n\n\"Is it okay for me to go in?\"\n\n\"I'm pretty sure he won't mind,\" the younger woman said with a smile.\n\nJessica thanked her then took the stairs up one floor to the second 'deck' and started looking around. As she walked down the hall, she saw other Navy people in each room. All were commissioned officers teaching classes and dressed in their white uniforms. \n\nShe went a little further and saw the name plate: Captain Phillip J. Sexton, USMC.\n\nShe peeked in through the window and what she saw caused her eyes to open wide with disbelief. Tim was standing on the desk in front of the class and it looked like he was saluting. Someone saw her and that caused Phil to check the door.\n\n\"Stand by,\" he told the class before opening the door and saying 'hi'.\n\n\"Jessica. Come on in.\"\n\n\"Cadets? This is Tim's mother, Jessica Logan. She's the nurse in the campus clinic.\"\n\nAlmost in unison, the entire class said, \"Good afternoon, ma'am.\"\n\nPhil saw the look on her face then explained what was going on.\n\n\"Tim volunteered to be my visual aid. He's showing the class how Marines salute, and doing a very good job of it.\"\n\nThe smile on her son's face got to her again, but this time she fought off the urge to cry and smiled back. \n\n\"Don't let me interfere,\" she said before asking where to stand.\n\n\"Next to me would be nice,\" Phil told quietly told her, causing a warmth to rapidly spread throughout her body. \n\nIt wasn't until later that she realized how respectful the class was. Another other group of students would have made one or more comments about her presence and probably some rude noises. But everyone was sitting up straight and giving their instructor their full attention.\n\n\"Okay. So one more time here, young Marine. Upper arm is parallel to the deck, the forearm and wrist form a 45-degree angle, the wrist is NOT bent nor are the fingers, and the tip of the index finger is touching the brim of the cover. And what does 'cover' mean to Marines?\"\n\n\"It means a hat, sir!\" Tim yelled out.\n\nPhil said that was correct as he looked at his young protege. \n\n\"Excellent, Cadet Logan. Just like that. Now cut the salute.\"\n\nThe arm came straight down to his side and once again Phil said, \"Outstanding work, my friend.\"\n\nHe offered the boy a high five and to help him get off the table but Tim said, \"I got it!\" and jumped off like he owned the place.\n\nThe cadets began banging their desktops and hollering, \"Tim, Tim, Tim! OORAH!\"\n\nJessica wanted to grab her son and hug him and tell how proud she was of him, but she knew he'd never forgive her so she opted for a high five herself as he walked by. And as her son walked to his seat in the rear of the classroom, Jessica found herself wanting to hug someone else; someone who took a genuine interest in her son and someone who made her feel...special.\n\nAs she watched Phil finish up the class she asked herself how she could feel like this about anyone she'd only known a short time and never even....\n\nShe wanted to say 'kissed' but they hadn't even held hands. And then there was the little detail about how far apart they were in terms of their age. As she was daydreaming, Phil dismissed the class which left in an orderly, single-file manner with every cadet nodding and saying, \"Good afternoon, ma'am,\" as they walked by.\n\n\"So what did you think?\" Phil asked once he was alone with just the Logans.\n\n\"I was very impressed.\"\n\n\"With?\" Phil asked with a smile.\n\n\"Everything. You, the class....\"\n\nTim was standing beside her so she put her arm around his shoulder then said, \"Our young Marine.\"\n\n\"Did you see me salute?\" he asked, looking up at his mom as happy as she could remember.\n\n\"I did.\"\n\n\"Phil said I did outstanding!\"\n\n\"Outstanding is the highest compliment you can get from a Marine,\" Phil said by way of clarification. \"Except on an inspection in which 'noteworthy' is better. But this guy is pretty amazing.\"\n\nTim was beaming, and Jessica was both happy and thoroughly confused as Phil suggested they go ahead and walk out to their cars.\n\nOutside, Tim was running and playing some kind of game by himself, so Jessica took advantage of the alone time and asked Phil a question.\n\n\"Is this...are we, you and I...are we....\"\n\nThey stopped walking as Jessica stopped talking just before she tried to finish her thought.\n\n\"I'd like it if we were,\" Phil said before she could speak.\n\n\"If we were...what?\" Jessica asked so quietly Phil barely heard her.\n\nHe moved closer then touched her hand, smiled, and said, \"A couple.\"\n\n\"Phil, I have....\"\n\n\"A son? I know,\" he said, still smiling. \"And I think Tim is great. He's such a good kid. And I want you to know I would never, ever do anything to hurt him or...you.\"\n\nJessica had been looking into his eyes, but when he said that she looked down at the empty space between them.\n\n\"What's wrong? Is it me?\" Phil asked.\n\n\"No. You're...amazing,\" she told him without looking up. \n\n\"But?\"\n\nJessica looked up and stared at him, amazed at how attractive she found him then said what she'd been thinking but dreaded saying.\n\n\"Phil. I'm...I'm 41 years old. Well, closer to 42, actually. I know you think....\"\n\n\"Jessica?\" he said quietly as he moved closer, causing her to stop talking again.\n\nHe took both of her hands in his as they stood just inches apart and said, \"You can't know what I think. You can guess and assume, but you can't know.\"\n\nHe touched her face for the first time then said, \"Unless I tell you.\"\n\nHer eyes were moving back and forth between his so fast it was almost comical as he asked her, \"Would you like to find out how I actually feel?\"\n\nNeither of them noticed that Tim had stopped playing. Nor did they see him standing a few feet away watching and waiting and hoping.\n\n\"You promised you wouldn't hurt me,\" she said just above a whisper.\n\n\"And I won't,\" Phil told her as he put ran his hands up and down the back of her arms. \n\n\"Jessica, I've never met anyone\u2014ever\u2014who makes me feel the way you do. And no one has ever been on my mind the way you are.\"\n\n\"Meaning?\" she asked as her heart pounded in her chest.\n\n\"PDA in uniform is discouraged. Very discouraged,\" he told her with a smile. \"But sometimes, the need to display affection overrides the general rule.\"\n\n\"Meaning?\" she asked again as Phil moved even closer.\n\n\"Meaning...this.\"\n\nHe lowered his head and softly kissed for the first time. A slow, short, dizzyingly wonderful kiss that made Jessica's head spin.\n\n\"Are you still confused?\" he asked when she opened her eyes and looked up at him again.\n\n\"Yes, but for a different reason,\" she told him.\n\n\"Oh?\"\n\n\"Before, I wasn't sure how you felt about me. Now I...I'm not sure I understand why you feel the way you do.\"\n\nPhil smiled then said, \"One thing at a time, okay? For now, just know that I like you more than I've ever liked anyone, and that I want to get you know you and Tim and see if we....\"\n\n\"Are you gonna kiss my mom again?\" they heard Tim say, causing Jessica to take a half step back as though nothing had happened.\n\n\"Not out here, buddy. But are you okay with me doing that?\"\n\nThe boy was grinning as he looked at his beautiful mom then said, \"Uh-huh. It's fine,\" just like he was ten years older.\n\nMarines weren't supposed to hold hands in uniform, either, but that was also subject to a certain amount of discretion.\n\n\"So is it okay if your mom and I hold hands?\"\n\nJessica smiled and took the hand Phil offered as Tim surprised by saying, \"Duh!\" before turning around and going back to whatever he'd been doing before.\n\n\"I uh, I was wondering if you'd like to stay for dinner,\" Jessica said as they continued walking hand in hand.\n\nPhil let go and explained why he had then told her he'd like that.\n\n\"As long as we're still on for Saturday,\" he added.\n\n\"Yes. You and your mom,\" she told him with a laugh.\n\n\"I just need to stop at my place and change.\"\n\n\"Then we'll head straight home and get dinner started.\"\n\nThey were almost to Jessica's car, so Phil told her that sounded great.\n\n\"Okay. I'll see you soon then,\" she told him as they faced each other.\n\n\"I have Tim's permission, but would it be okay with you if I kissed you again?\"\n\nJessica laughed a happy laugh and told him she thought it would be fine.\n\nShe felt emboldened and said, \"In fact, you're welcome to kiss me anytime you like. Without asking.\"\n\n\"You may change your mind if you let me kiss you as often as I'd like, because I'd like to kiss you all the time.\"\n\n\"Okay, I might need to keep going to work, and cooking, and a few other things, but in between them, you could kiss me....\"\n\nBefore she could finish, Phil pressed his lips against hers again. This time, Jessica put her arms around his neck and kissed him back.\n\nShe looked at him, smiled, then asked, \"Does that apply to me, too?\"\n\n\"Oh, yeah. Definitely. Why? Do you want to kiss me, too?\"\n\nShe tried not to laugh as she told him, \"Uh-huh. All the time.\"\n\nThey both laughed, but just before Phil said goodbye, he told her, \"I am so glad your tire was flat that day.\"\n\nShe laughed some more then told him, \"And I'm glad you're the kind of person who performs random acts of kindness.\"\n\n\"Hmmm. I hear my mom's voice somewhere in there,\" Phil replied as seriously as he could which made Jessica laugh even more.\n\n\"She told me you've been doing them for as long as she can remember.\"\n\nPhil laughed then asked her, \"What self-respecting Marine wouldn't help out a damsel in distress?\"\n\n\"One not wearing shining armor but maybe...bicycle clothes?\" she suggested with a laugh.\n\nShe smiled then said, \"You look very nice in spandex, by the way.\"\n\n\"And you just look very nice,\" he told her, causing her to laugh before hugging him again.\n\n\"I'm glad my tire went flat, too...Phillip,\" she said, wondering if he'd allow her to be an exception to the rule.\n\nHe narrowed his eyes then said, \"I don't even let my own mother call me that.\"\n\nJessica kissed him again then told him very quietly, \"I'm not your mother.\"\n\n\"Yeah, I uh, I noticed,\" he said, causing her to hold him even tighter as she laughed again.\n\n\"All right. I'll uh, I'll see you soon.\"\n\n\"Bye, Phillip,\" she said, loving that she could call him that.\n\n\"Are you coming to our house?\" Tim asked even though he heard most of what they said.\n\n\"I am. If that's okay with the man of the house.\"\n\nIt took him a second to realize Phil meant him, but when he got it, Tim said again, \"Duh!\"\n\nOn the way home Tim chattered incessantly about Phil, the class, how Marines salute, that hats are called 'covers', and a lot more. But his mom, who normally lived for every word her son said, only heard the pauses when she could say something like 'oh' or 'uh-huh' as she thought about what just happened. And more importantly about what might happen now that she knew this gorgeous, younger man liked her in a way she never thought possible.",
        "Jessica's dreamy thoughts ended when they got home and she realized they barely had enough to eat for her and Tim. She wouldn't get her first paycheck until Monday, and she had less than ten dollars to her name, and there was no way she could possibly make anything for three, especially if one of those three was a grown man.\n\nThere was a sick feeling in her stomach as she took out her phone.\n\n\"You didn't call to uninvite me, did you?\" she heard Phil tease.\n\n\"Phillip? I am SO embarrassed.\"\n\n\"About what?\"\n\nShe explained the situation and began promising to make it up to him when he gently interrupted.\n\n\"Jessica? It's okay. In fact, I was wanting to take you out someplace special, and this is the perfect opportunity for the three of us to do that.\"\n\nWhen he included her son, the happiness she'd felt earlier came back with full force.\n\n\"Then perhaps I should change into something a little nicer,\" she replied, a smile on her face and a twinkle in her eye.\n\n\"Nothing formal, though. Just...nice, okay?\" he said in that kind, gentle way she loved.\n\n\"That sounds wonderful.\"\n\nHe told her when he'd come by to pick them up, and she told him they'd be ready. Tim was so happy he hugged his mom and told her he loved her. She knew he did, but she also knew it had been ages since they'd gone to a restaurant. Even fast food was a luxury of late, and now they were going to an actual restaurant.\n\nAs he went to go change Tim said, \"Mom? I'm so glad you and Phil like each other!\"\n\nThat, too, caught her off guard, but only for a moment as she said, \"Me, too, honey. Me, too.\"\n\nHer next surprise came when she got upstairs and realized that all of her dresses were badly wrinkled from the move. Fortunately, she had a small box of sweaters she'd neatly folded, and all of them were fine. \n\nShe chose one that was a light blue with long sleeves and found a pair of black pants that had survived without needing to be ironed and breathed a sigh of relief. In less than five minutes she was changed and ready to go adding only a pair of silver earrings and touching up her makeup.\n\nWhen Tim came out to show her what he was wearing, she tried not smile. He'd pulled out a dark blue shirt that looked like it had been compressed into a ball and was wearing the only tie he had with it.\n\n\"What do you think, Mom?\" he asked, hoping for her approval.\n\n\"I think it looks, great. But maybe you could let me iron the shirt?\"\n\n\"Oh. Yeah. It's a little wrinkly,\" her son told her with a laugh as he pulled off the clip-on tie and then the shirt.\n\nAfter pressing it out, Jessica brought it back to Tim and suggested the shirt might be enough.\n\n\"It's not formal, honey.\"\n\n\"But you look beautiful, Mom.\"\n\n\"Ah! Thank you, sweetie!\"\n\n\"And Mom? Can you please not call me 'sweetie' when Phil's around?\" he asked as he buttoned the shirt back up.\n\n\"Oh. Sure. I won't do that again. I promise.\"\n\nShe smiled at her boy then told him she wouldn't call him 'Timmy', either.\n\n\"It's okay if you forget, Mom. I'll still love you just as much.\"\n\nJessica had to look away as her eyes teared up so fast it took her by surprise.\n\nFive minutes before the time Phil said he'd arrive, he sent a text.\n\n\"Almost there. See you in five.\"\n\nShe smiled and thought she must be the luckiest woman on earth. She had a new job she loved, a son she adored, and now, purely by chance, she'd found someone she thought she might possibly fall in love with one day. Yes, they'd just met, but now that she'd been able to put the age issue out of her mind, she allowed herself to dream, and dreaming felt downright wonderful after all she'd been through.\n\nTim ran to the door when he heard the knock. Jessica stood back and gave him room, and when he opened the door, her heart melted when her son saluted.\n\nPhil returned the salute then said, \"Nice job, young Marine! That was perfect!\"\n\nHe was all smiles when he turned around to let his mom know Phil was there. Again, she only smiled before doing the same to her guest.\n\n\"Wow,\" she heard Phil say when he saw her.\n\n\"What? This? Oh, my goodness. It was the only thing I had that wasn't wrinkled.\"\n\nHe came closer, smiled at her again, then said, \"Be that as it may, you look amazing.\"\n\n\"Thank you, but I was thinking I was underdressed after seeing you.\"\n\nHe was wearing a very nice shirt and a pair of black, wool pants and looked so handsome it made her aware of a warm wetness in a place she'd almost forgotten existed.\n\nHe leaned a little closer then whispered, \"I'm dying to kiss you.\"\n\nShe smiled, put her arms around his neck then whispered back, \"I believe that would be okay.\"\n\nNeither of them saw Tim again. But he was watching, smiling happily, and quietly saying, \"Yes!\" as they kissed.\n\n\"So where are we going?\" Tim asked when the adults stepped away from each other.\n\n\"Benvenuti's. Is that okay?\"\n\nThe puzzled look on the boy's face answered the question. He had no idea where any restaurant was except for a McDonalds near their apartment. But that didn't matter because he'd have gone anywhere with his mom and her new boyfriend.\n\nAs they drove, Tim was checking out everything he could see in the car which was by far the coolest car he'd ever ridden in.\n\n\"Phil? Do Marines make a lot of money?\" he asked.\n\n\"Honey, we don't ask about that, remember?\" his mom gently told him.\n\n\"Sorry.\"\n\n\"That's okay,\" Phil said. \"The answer is, 'it depends on what you mean by a lot'. I'd say I make more than enough to get by on. Why do you ask?\"\n\nTim waited for his mom to look back and nod before saying, \"This car is really cool!\"\n\nPhil laughed, thanked him for the compliment, then told him, \"It is kind of cool, but it isn't exactly a family car.\"\n\nHe looked at Jessica when he said it then reached over and took her hand.\n\n\"Well, my mom has a car, too!\"\n\nJessica laughed then said, \"And in that case we use the word 'car' very loosely.\"\n\nThat went right over Tim's head but Phil laughed.\n\n\"Sometimes having a car that has problems isn't such a bad thing.\"\n\nShe knew exactly what he meant, smiled at him, then said she agreed completely as she squeezed his hand.\n\nOnce they were seated at a table, Jessica nearly fainted when she looked at the prices after their server handed them a menu.\n\n\"This place is expensive!\" she said very quietly.\n\n\"Do we need to go somewhere else?\" Tim asked, surprising Phil but not her mom.\n\n\"We...we never eat out anymore,\" she said, just in case Phil didn't understand.\n\n\"Well, tonight you may order anything you like,\" he told her while looking at Tim.\n\n\"Yes!\" he said before looking at the menu.\n\nJust seconds later he set it down then said, \"I have no idea what any of this stuff is!\"\n\nJessica was having similar thoughts but didn't want to say it out loud.\n\n\"Tell you what. If you trust me, I'll order something for you, and I'm pretty sure you're gonna like it.\"\n\nTim's head started nodding, and with that, Jessica closed her menu, and said, \"Will you do that for me, too, please?\"\n\nPhil pointed to the spaghetti and meatballs then quietly asked if Tim would eat that.\n\n\"Every bite. Spaghettios are his favorite thing in the world!\"\n\nAfter some fried rock shrimp and truffle fries that Tim ate most of, the adults shared a rack of lamb and some red wine while the little man polished off an entire plate of spaghetti and Italian meatballs.\n\n\"You have any room for dessert?\" Phil asked after Jessica pointed to the red sauce on her son's chin.\n\nAgain, he looked to his mom for the okay then said he was.\n\nPhil ordered Triple Mousse Cake, Carrot Cake, and Creme Br\u00fbl\u00e9e, and the three of them took turns sampling each one. Tim was crazy about the layered chocolate cake, liked the carrot cake, but wasn't so wild about the vanilla bean custard. That was fine as it was his mom's favorite.\n\nWhen the bill came, Jessica tensed up and winced. \n\n\"I can't look,\" she said as she slid it toward Phil who smiled and picked it up and didn't bat an eye.\n\n\"Worth every penny to be with my two new favorite people,\" he told them.\n\nThe total, with a 20% tip, was just shy of $200, but Phil would have spent twice that much just to be near this beautiful, older woman he already knew he was falling in love with.\n\nAt her place, he kissed her goodnight, and Jessica didn't just thank him, she told him how special this was to her and to her son.\n\n\"I'm glad, because the two of you are very special to me.\"\n\nHe said it from just inches away, and Jessica felt like she was on fire. Were Tim not there, she was pretty sure she'd have dragged Phil to her bedroom and done unspeakable things to him. Instead she told him she felt the same way about him.\n\n\"So we'll see you Saturday then?\" he asked.\n\n\"Yes. Definitely.\"\n\nHe kissed her again, told Tim goodnight, and to his very pleasant surprise the boy reach up and hugged him. Touched, Phil hugged him back and told him he'd had a great time.\n\n\"Me, too!\" Tim told him as he moved back and looked up admiringly.\n\n\"Nice. And I'll see you, too, on Saturday, okay?\"\n\n\"Okay! Bye Phil!\"\n\nJessica brushed her hand on Phil's then said, \"Goodnight, Phillip.\"\n\n\"Goodnight, beautiful,\" he said back before stealing one more kiss.\n\nThe next day they had lunch together at school, and it was obvious to both of them that things had changed. Kissing does that, but they understood there was something more going on here; something deeper that went well beyond a kiss. It had the air of being real, and it was definitely more than a fling even though there'd been no 'flinging' as of yet. \n\nPerhaps that was as important as anything else. Had they hooked up it would have felt casual and even hollow. And waiting only made the longing grow stronger even as their friendship grew.\n\n\"I had a wonderful time last night, Phillip.\"\n\n\"Me, too,\" he told her as they held hands across a cafeteria table.\n\nJessica wanted to ask if this was a relationship and where he thought it was going. She also needed reassurance that he really didn't care that she was so much older than him. But she couldn't help but think that asking those kinds of questions would make her seem weak, and even worse, needy. And while she had needs, she wasn't needy, per se. Tim and her job would be enough if this didn't go anywhere, and yet she knew she would be deeply hurt were this to suddenly end, and that was the last thing she wanted to happen.\n\nSo when Phil mentioned her age it caught her by surprise so completely that she had to force herself to focus.\n\n\"Are you still...concerned...about the age difference?\" he asked in his calm, gentle way.\n\n\"You told me it didn't matter, and that's all I needed to hear.\"\n\nHe smiled then said, \"No. I meant are you concerned about being with someone...my age.\"\n\nShe looked at him and saw nothing but a mature, grown man who was intelligent, thoughtful, kind, and caring. And the fact that he was handsome enough to cause her body to react by just looking at him sealed the deal in her mind.\n\n\"I honestly never thought about that. It's not like....\"\n\nShe took another look at his ruggedly handsome face then said, \"It's not like you have a baby face or look...boyish.\"\n\n\"Hey, are you saying I'm not boyishly handsome?\" Phil asked, as he sat up and turned his face to her in profile view.\n\nJessica laughed then told him he wasn't.\n\n\"There's nothing boyish about you, Phillip. Not one thing.\"\n\nHe laughed then told her he was kind of a mama's boy.\n\nJessica laughed even harder because she knew that wasn't true. What he was was a loving, caring son who was there for his widowed mom as much as he could be, and she saw that as a huge plus and told him so.\n\n\"You haven't told me anything about your family,\" Phil said, hinting but without any pressure.\n\n\"Right. Well, my mom died when I was six. After that, my dad went from weekend binge drinking to nightly binge drinking, and by the time I finished high school, he was diagnosed with liver failure. He hung on for six months after that.\"\n\nPhil saw tears welling up in her eyes and told her that was more than enough.\n\n\"We...we were estranged the last two years of his life. He loved the bottle more than anything else, and I learned to live around it until I left home the summer after graduation. I'm an only child, and my only uncle lives in Michigan. The last time I saw him was at my mom's funeral. So...it's pretty much just me and Timmy.\"\n\nIn spite of the near-somber mood, Phil raised an eyebrow.\n\n\"Oops! Good thing Tim isn't here. I'd have caught heck for that!\"\n\n\"He's such a great guy,\" Phil said with real sincerity.\n\n\"He thinks you walk on water, Phillip.\"\n\nPhil squeezed her hand then told her he'd do his best to never do anything to change that.\n\n\"Never is a long time,\" she replied, knowing she was now the one doing the hinting.\n\n\"I don't want to scare you off, Jessica, but I have no intention of ever being without him...or you...in my life.\"\n\nThis time there were no tears. There was only this huge swelling of her heart as she leaned across the table and kissed him.\n\n\"I'm kind of crazy about you two,\" Phil told her as she sat back down.\n\n\"And we're kind of crazy about you.\"\n\n\"My mom can't wait for Saturday.\"\n\n\"Does she know how old I am?\" Jessica asked out of the blue.\n\n\"She knows you're older than me. And I know that the only thing that matters to her is me being happy.\"\n\n\"Are you? Happy?\" Jessica asked, now willing to risk appear weak.\n\n\"Very. You?\"\n\n\"Happier than I've been in so long I'd forgotten what this feels like.\"\n\n\"It's pretty great, isn't it?\"\n\n\"It's wonderful,\" she told him before also saying, \"you're wonderful, Phillip.\"\n\n\"If I wasn't in uniform, I'd pull you over the table and set you on my lap and kiss you.\"\n\n\"I love the way you look in your uniform, but right now I can't tell you how much I wish you were wearing civilian clothes so you could do that. Which, by the way, you also look very good in.\"\n\nHe glanced at his watch then said, \"Unfortunately, I have a class in ten minutes.\"\n\n\"And I have patients waiting for me.\"\n\n\"Better not keep them waiting,\" Phil said as he stood up.\n\nHe walked her to the clinic, and although she was dying to hold his hand, she wanted him to know that his traditions were important to her and refrained. But when it came to a goodbye kiss, that was her bridge too far. The kiss was short and sweet with the sweet part being the far more important aspect.\n\nAs usual, Phil spent that Saturday morning at his mom's house. During one of their several conversations, she asked about dinner with Jessica.\n\n\"About that. She's really struggling financially. I don't think she gets her first paycheck until early next week. So I was wondering if....\"\n\n\"Yes, you can ask them to come over here. In fact, I insist. Just don't tell her why, okay?\" his mom said with a smile.\n\nPhil loved that his mom was so intuitive. She immediately understood that cooking for four cost money, and she wasn't about to take money from a single mom having a tough go of getting by.\n\n\"I'll call her right now. I just hope she hasn't gone out shopping already.\"\n\n\"It's 8am, honey. If she's at a store at this time of day, she's a super mom.\"\n\nPhil agreed but used the excuse to call anyway.\n\nMarsha smiled several times as she heard her son talking to Jessica. She'd never heard him 'coo' before, but he was pretty much doing that, indicating that she was special to him. And since she'd already met and liked this younger woman, she was thrilled to see her again, especially since she was so important to her only child. And when she thought of children, she thought about Tim and what a polite, well-mannered boy he was and smiled some more.\n\n\"Okay. Sounds great. See you guys at seven then,\" Marsha heard Phil say in that 'I'm in love voice' she'd never heard before.\n\n\"She's pretty special to you, isn't she?\" his mom asked even though she already knew the answer.\n\n\"Very. Why? Do you disapprove?\"\n\n\"Disapprove? Phil, I have no say in who you date or love. But in this case, I wholeheartedly approve.\"\n\n\"Jessica worries about the age difference. Not with me. She wonders if you maybe think it's...I don't know...too much or something.\"\n\n\"That's also none of my business, but if you won't mind telling me, I would be interested in knowing how much older she is.\"\n\nPhil hadn't said this out loud before, and as he got ready to, he was well aware of how it might sound.\n\n\"She's uh, she's 14 years older than me, Mom.\"\n\n\"Oh. So...she's what? Um...41?\"\n\n\"Yes. You still okay?\"\n\n\"Yes. I was just surprised. Very surprised, actually. She looks a lot younger than that.\"\n\nHis mom laughed then said, \"And I'm not just saying that. I honestly thought she was in her early-to-mid 30s.\"\n\nPhil stood up, walked over to his mom who was getting breakfast ready and put his arms around her.\n\n\"You know I love you, right?\"\n\n\"Of course I do. And I love you. And while I love hearing you say that, is there some reason for it?\"\n\nPhil moved back, put his hands on his mom's upper arms then told her he thought he loved Jessica, too.\n\n\"Ah, okay,\" his mom said with a smile. \"Well, all I can say is that if you love, I'll love her, too. And that should be easy because I already like her a lot. And that boy of hers is such a sweetheart.\"\n\n\"He's a really good kid, and I can see myself, you know, stepping in and being a dad to him.\"\n\n\"He would be a very lucky young man were that to happen, and while I'm biased, I also think Jessica is very lucky to have found someone as wonderful as you.\"\n\n\"And that is one of the many reasons I love you so much,\" Phil told his mother again before hugging her one more time.\n\n\"And I am just happy as happy can be that my son is able to come home so often. That he's found someone to love makes me even happier.\"\n\n\"Thanks, Mom. You're the best.\"\n\nShe smiled then asked about Jessica's parents.\n\nPhil repeated what she told him at lunch, and he saw the hurt in his mother's eyes.\n\n\"That poor girl. Now I think I understand a little better why she's so kind and caring. Poor thing probably didn't have much love growing up.\"\n\n\"I agree. And yet she's got so much of it to give, and I see that in the way she treats Tim.\"\n\n\"And you, right?\"\n\nPhil laughed and said, \"Once again, you are spot on.\"\n\nMarsha couldn't remember the last time she cooked for four and spent the day shopping, preparing, and getting everything ready. Phil tagged along with her and loved seeing his mom so happy and involved. She was independent, but he knew she'd been lonely during the years he'd been away. Yes, she had her friends, but having her son home for three years was a godsend to her, and Phil had to admit he was grateful to be nearby, too.\n\nBy the time Jessica and Tim arrived, the Sexton home was filled with the aroma of food cooking and freshly baked bread.\n\nMarsha let Phil answer the door but was right there to greet her guests with hugs and warm welcomes.\n\n\"What smells SO good?\" Jessica asked as Tim said he was starving as he high-fived Phil who said he was, too.\n\nFor the next four hours there was never a lull in the conversation for more than a few seconds as the Logans and the Sextons got acquainted. Everyone talked during dinner with a lot of the time given to Tim who loved the attention. But after everyone had eaten, Jessica didn't spend more than ten minutes with either Phil or her son.\n\nAs it turned out she and Marsha were like two peas in a pod. One thing led to another which turned up yet one more common interest. But what really got the younger woman's attention was Marsha's love of quilting. The two women disappeared into the sewing room, a bedroom Marsha had turned into a little haven where she cut fabric, sewed pieces together then quilted them.\n\nJessica had always loved quilts but never made one. Before she left she and Marsha had agreed to on a time and date for them to do one together. It would actually take several visits, but Jessica was almost as excited about learning to quilt as she was to spend time with Marsha's son.",
        "And as if that wasn't wonderful enough, Tim couldn't stop talking about Phil's uniforms or the ceremonial sword all Marine officers were required to own. It was called a Mameluke sword and had a white pearl handle and a long, silver blade. There was also a black rope at the bottom tied in a knot, and Tim thought it was the coolest thing he'd ever seen.\n\nPhil brought it to his mom's specifically to show Time how to do the sword manual, a series of movements done with the sword during parades and ceremonies, and he'd even been allowed to use the sword and try to do the movements himself. He banged the floor a couple of times and whacked himself in the head with the blade once, but that made no difference. He was hooked and loved that sword so much that he wanted one of his own. Of course, they were just over six-hundred dollars, but Phil didn't mention that.\n\nAfter that, the two guys sat on the couch and played video games for an hour then watched an action movie that Tim loved. He was so excited on the ride home that Jessica couldn't stop smiling.\n\n\"Well, I had a wonderful time, too. Phil's mother is a quilter and she's going to teach me how to quilt.\"\n\nEven in the dark car Jessica could see that her son had no interest in quilting as he gave her a confused look then went right back to talking about the best night of his life.\n\nIt didn't matter that she and Phil had barely spent any time together. Getting to know his family did, and now that she'd gotten to know Marsha, she felt welcome and even loved. But not just by Marsha.\n\nMarsha was just as thrilled as Jessica and told Phil how much she enjoyed their time together.\n\n\"I'm glad, Mom. And I had a fantastic time with Tim who seemed to be having a lot of fun himself.\"\n\nHis mom smiled at her son the said, \"I can see why you love her.\"\n\n\"Yeah. I think I kinda do love her.\"\n\n\"Well, she as much as told me she loves you, too. But you didn't hear that from me.\"\n\nPhil didn't tell their secret, but the following morning, when Jessica came to his place for brunch, he told her he loved her for the first time.\n\n\"You don't have to say it back. I know we really only just met, but I've never felt like this about anyone before,\" he told her.\n\nHe saw her tearing up and hoped she wasn't about to tell him she didn't feel that way, but that didn't happen.\n\n\"I love you, too, Phillip. And it doesn't matter how long we've known each other. What matters is the way we feel about each other.\"\n\n\"I couldn't agree more,\" he told her before he pulled her close and kissed her.\n\nPhil had brought his sword back home after taking it to his mom's house knowing Tim would love it, and the boy was in Phil's bedroom saying, \"Pre-sent, SWORDS!\" and then, \"Or-der, SWORDS!\"\n\nThe first time Jessica heard it she asked what was going on.\n\n\"Come on. I'll show you.\"\n\nPhil took her hand and led her to the door outside his bedroom.\n\nTim was wearing Phil's green 'hat' which was called a garrison cover or more affectionately, a 'pisscutter' and swinging the sword around.\n\n\"Don't worry. It isn't sharp.\"\n\nAgain, Jessica teared up as she realized her son also loved this older man who had become an idol of sorts to him and a best friend.\n\n\"He loves you, too,\" Jessica whispered as she watched her son trying to emulate Phil.\n\n\"The feelings are mutual...honey,\" he whispered back.\n\nThat word caused her heart to swell and turn toward him then put her arms around him.\n\n\"Would you please kiss me? And call me that again?\" she asked very sweetly.\n\n\"Of course I will, honey.\"\n\nThis time, Tim saw them and the first clue that he had was a boyish giggle Jessica rarely heard anymore. \n\n\"Uh-oh. We are so busted,\" she said as she pulled back a bit but without taking her arms down.\n\n\"It's okay. That's what grownups who love each other do,\" Tim informed them as they tried not to laugh.\n\n\"Yes they do, don't they, sweetheart?\" Jessica said to the handsome, younger man she loved before kissing him again even more passionately.\n\n\"We're gonna have to get a room,\" Phil said jokingly when the kiss ended.\n\n\"You say that like you're kidding around. But I'm not sure how much longer I can wait.\"\n\n\"Oh. Well, in that case, perhaps we should see if my mom would be willing to watch young Timothy for an evening one day soon.\"\n\n\"Or maybe he could spend the night? So you and I could...spend the night,\" Jessica countered.\n\n\"Oh. I like your idea much better,\" Phil told her, causing his beautiful girlfriend to laugh and kiss him again.\n\n\"And one other thing before I forget,\" he told her.\n\n\"Yes?\"\n\n\"The Marine Corps birthday and birthday ball is in November. It's a formal event, so maybe I could take my beautiful girlfriend shopping for a dress?\"\n\n\"I'll be able to buy it, honey,\" she told him, knowing she wouldn't have that kind of money which also meant shoes, a purse, and having her hair done.\n\n\"I know,\" Phil told her, knowing that she didn't. \"But it would make me happy to be able to start spoiling you early on.\"\n\n\"Spoiling me. Just knowing you love me is more than enough.\"\n\nPhil smiled then told her she couldn't wear his love to the ball. \n\n\"Well, not just my love.\"\n\n\"Okay. You can spoil me. But just this once,\" she told him, as feelings of gratitude welled up in her along with love.\n\n\"I have to inform you it's going to be a regular thing. So if you can't live with that, maybe this isn't going to work out,\" Phil said with mock seriousness.\n\n\"Even when my husband was alive...I've never been spoiled. It might take some getting used to,\" she told him.\n\n\"That's okay. We have the rest of our lives for that.\"\n\n\"That sounds wonderful to me, Phillip,\" she told him as she fought back the urge to tear up again.\n\n\"It does sound pretty wonderful, doesn't it?\"\n\n\"Are you guys gonna stand there and kiss ALL night?\" Tim said, causing them both to laugh.\n\n\"No. We're gonna take break and go...kiss on the couch for a bit,\" his mom said.\n\n\"Whatever!\" Tim said as he went back to his sword drills.\n\n*****\n\nOklahoma City. November 10th, birthday of the United States Marine Corps.\n\n\"You are so handsome it makes me...want to swoon!\"\n\nJessica almost said 'wet', and even though they'd made love many times already, that just wasn't her style. She wasn't the least bit prudish, but she also wasn't crass.\n\n\"Any guy looks good in dress blues,\" Phil told her. \"But not every woman looks as amazing as you do.\"\n\n\"Thank you, kind sir! A very handsome, younger man bought this dress for me. I hope you're not jealous,\" Jessica teased.\n\n\"Nah. He has good taste in clothes and in women, so no, I'm not jealous.\"\n\nJessica did look beautiful. Her blonde hair was worn in an updo, and between her perfectly made up face and the flowing, silky formal gown, she was as gorgeous as any woman Phil had ever seen. And more importantly, she was in love with him and he with her.\n\nThat evening, Jessica experienced her first formal event with Marines, most of whom were reservists from the Oklahoma City/Norman area. She was impressed with the pageantry and the formality as well as with the food. But most of all she loved dancing with her handsome boyfriend who was, in her opinion, the best looking Marine in attendance.\n\nAt midnight, the senior Marine in there, a reserve colonel who was the commanding officer of the reserve unit, called for everyone's attention.\n\n\"Marines. Ladies and gentlemen. Thank you for attending and sharing the 244th birthday of our Corps with us. This is the end of the formal program, and the band will we be going home after one more song. So grab that special someone, and Semper Fi and God bless!\"\n\nEvery Marine in the room hollered out, \"Oorah, sir!\" as the colonel waved and grabbed his wife for the final dance of the night.\n\n\"May I have this dance?\" Phil asked his date as he bowed slightly.\n\n\"Why, yes you may!\" Jessica replied with a little curtsy.\n\nAs they danced to a romantic, slow song, Phil said, \"This is the closest thing Marine have to a spiritual celebration.\"\n\n\"It was truly amazing, Phillip. Thank you for sharing it with me.\"\n\n\"I can't imagine not having you here with me,\" he told her.\n\nAs the song ended he said, \"There's one more thing I can't imagine doing without you.\"\n\nJessica's first thought was making love, but that was also too crass to take advantage of and she didn't ask.\n\nAs the music ended, Phil got down on one knee and produced a very large diamond ring she had no idea was there all night. He'd put it in a tiny little slit pocket inside his dress blues and waited for the right moment.\n\n\"I can't imagine spending the rest of my life without you, Jessica. I love you with all my heart, and nothing would make me happier than for you to be my wife.\"\n\nEveryone had stopped to watch, and Marines and their dates were now gathered around as the beautiful woman the captain was proposing began to cry.\n\n\"So, Jessica Marie Logan, will you marry me?\"\n\n\"Yes. Yes, of course I'll marry you!\" she said as the room exploded with another, \"Oorah, get some, sir!\" and other such calls of support.\n\nPhil slid the ring on her finger, stood up, kissed her to wild cheering, then stood beside her as the hooting and hollering continued before people began congratulating them.\n\nJessica was so happy that even the drunk Marine or two who kissed her on the mouth didn't upset her. She was now engaged to the only other man she'd ever loved and happier than she thought she would ever be again.\n\nAnd all of this was due to one small, random act of kindness committed by a man who was willing to go the extra mile to help out when she needed it most.\n\n*****\n\nPhillip and Jessica Sexton were married the following Spring with Tim serving as Phil's best man. He looked all grown up in his little tux with a boutonniere on the lapel. Jessica's only uncle flew in to give her away, and Marsha served as the Maid and Matron of Honor depending on one's view of whether or not she was married. But that didn't matter as Jessica said, \"I do,\" to the most handsome man she'd ever known.\n\nThe following year was Phil's last as an MOI, and it was then that his beautiful new wife told him she was pregnant. Jessica had just turned 43, and while she'd never had any doubt about her younger husband's love, she couldn't help but wonder what he might say since they hadn't planned on having a child just yet.\n\nBut when she told him, and she saw tears of happiness welling up in his eyes, she was even more sure than ever before.\n\nJust two months before Phil was due to report to Camp Pendleton, California, Jessica gave birth to their daughter, a beautiful, healthy little girl they named Lily Lynne Sexton.\n\nThe four of them soon headed west to the Golden State and started the rest of their lives together. There were many long weeks and occasionally months of absence when Phil was deployed or training, but Jessica Sexton was it for the long run as they raised their children, loved one another, and moved from place to place every three to four years after that.\n\nPhil retired from active duty as a colonel just one month before Lily graduated from high school. Tim, who was now a doctor finishing up his residency, flew in for his baby sister's graduation. Making the day even better was seeing Marsha again who'd done her best to come visit once or twice a year no matter where they lived. \n\nAnd Jessica, who was still the most beautiful woman Phil had ever known, was beyond happy to have her entire family with her.\n\nThat night as they waited for Lily to join her class, Tim said, \"Oh. You'll never guess what happened to me a few days ago.\"\n\n\"Did you find the cure for cancer?\" the man who raised him asked with a laugh.\n\n\"No. Not yet, Dad. But I was at a gas station where a very attractive woman needed help with a flat tire.\"\n\nJessica looked at her husband who only shrugged then said to his son, \"And?\"\n\n\"Well, as it turns out, she was very grateful for my help, and when I get back she and I are going to dinner.\"\n\n\"Look at you. Just like your dad,\" his mom said with a smile. \n\n\"Well, Dad's the one who taught me the value of random acts of kindness,\" the young doctor replied.\n\nJessica took her husband's hand, squeezed it, then said, \"That's your dad for sure.\"\n\nEveryone laughed, embraced, then Jessica told Lily, \"You need to get up on stage.\"\n\n\"That can wait. This...our family...is a lot more important to me than a piece of paper.\"\n\n\"Ahh!\" her mother said before the blended family hugged each other more time; a family that came to be precisely because a young man had been taught the value of being kind and helpful when others needed it the most.\n\n \n"
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/random-acts-of-kindness-1"
}