{
    "title": "A Pair of Objects Walk into a Bar",
    "pages": [
        "\"She wouldn't even have to bend over or get on her knees!\" One of the bros giggled to his friend. The other guy was nodding wildly.\n\n\"Usually they have those like...weird shaped foreheads and huge shoulders and shit. But she's...\" the other guy responded, not exactly on point with the initial comment.\n\n\"She's fucking hot,\" the first guy finished for him.\n\nI sighed deeply and kept looking ahead, wondering where my friends had wandered off to. I knew from the way they were talking that the bros didn't realize that I could hear. The music in the bar was pretty loud and the closest bro was two bar stools away from me. But, amongst everything else, I've always had truly excellent hearing (maybe because I was always straining to hear what people were saying about me, because they were always saying something). And yes, \"everything else\" includes the fact that I am a little person. Or as the bro next to me responded.\n\n\"The world's hottest fucking midget...\"\n\nYes, it is I, Catrina Powell, the world's hottest midget...According to drunk guys at singles bars who've never met another little person. \n\nOkay look, that sounds like I am being snide. But honestly, I am not overly sensitive. I don't even bother to correct people when they use the \"M\" word anymore (but, by the way, don't use the M-word. Not for my sake, but for yours. Do want to say something that might hurt someone else's feelings just to prove you can do it? Is that the person you are? No one outside a Donald Trump rally finds that attractive). And look, I am as vain as the next person. I like that people think my body looks good. Hell, I think it looks good.\n\nI am 4'3 (like 132 centimeters) and I am well-proportioned. I have long, straight black hair, big dark eyes, a small nose and pouty pink lips. My arms are slender and well-balanced with the length of my torso. I have large (relative to my body) high breasts, a narrow waist, and wide hips. My ass is large and muscular and my legs thick but not with a chunky build. So yeah, I am relatively happy with the way I look. As happy as any of my friends who aren't little people feel about their bodies, at least. \n\nSo I wasn't sighing because some half-drunken dudes were talking about my body to one another. I mean, I was dressed all slutty at a bar wasn't I? (For the record, it was a skin tight black cocktail dress that really pushed my tits up and exposed my cleavage. Short too. No joke intended there). I came here with my friends to try to find someone to hook up with. The whole idea was that someone would like my body and want to do something freaky with it. It was just...why did my attractiveness have to be relative to how other little people look? If I am hot, I'm hot. They didn't need to bash other ladies to justify it. And was I only hot because I was surprisingly well-proportioned for a little person? What sort of scale was I being evaluated on? In short, was I hot or was the idea of an attractive little person hot? That's why I carefully avoided making eye contact and willed my friends to return from wherever they'd gone.\n\n\"Dude,\" One of the guys said, \"Think about it. You could just pick her up and...\" Oh great, now I was picturing their ridiculous fantasy's as they narrated them. Maybe if they were good looking, but these guys...\n\nAs I tried my hardest not to listen, I became aware of the sound of clicking high heels moving behind me. I felt the presence before I saw the person, leaning over the backs of the barstools between me and the bros. My nose was instantly filled with the sharp, floral scent of a woman's perfume. At first I gazed out of the corner of my eye and caught a flash of long blonde hair and smooth tanned skin. I noticed that the woman was turned towards me as she leaned against the bar. \n\n\"Hey,\" she said. Despite my desire to avoid, at all costs, looking in the general direction of the bros, I instinctively turned towards the woman who had addressed me. She was stunningly pretty. She was tall and leggy, around 5'9, with a trim athletic build. Her hair was a sort of platinum blonde, very straight and long. She had these massive, incandescent green eyes that shimmered mischievously. Her nose was small and upturned slightly, she had thick red lips thickly painted. She had a long, slim neck and narrow shoulders. She was wearing a crop top that amounted to little more than a strip across her breasts, which were quite large. Her midriff was exposed and I could see she had a strikingly narrow waist with strikingly wide hips to match, a sort of...sexy cartoon build almost. Her ass was large and she was wearing a skin tight pair of jeans that accentuated that as she leaned over the bar. Her legs were slender but you could see her lithe muscles beneath the denim. In short, she was gorgeous. And I was a bit relieved. Maybe the bros' attention would shift...\n\n\"Hi,\" I responded uncertainly. As soon as the words left my mouth, the girl was talking again.\n\n\"So you're pretty small, huh?\" she said. She spoke very loudly and winked at me at the same. She didn't say it in the...clueless sort of way that I was used to. It was theatrical.\n\n\"You're observant,\" I responded wryly, but not angrily.\n\n\"Does that mean you like small dicks? Like do you prefer really tiny penises?\" she asked, smiling wickedly and raising her eyebrows. I almost laughed out loud. That was one way to start a conversation. I placed my elbow on the bar and leaned my head against my hand.\n\n\"No, not in particular,\" I said honestly. The woman turned quickly towards the bros.\n\n\"Sorry buddy,\" she said loudly and pointing at one guy, \"She doesn't like guys with small penises. You're out of luck!\" I heard the bartender and several other people in the area laugh. The other bro even laughed, though the other scrunched his face up angrily.\n\n\"Fuck you\" the angry guy said, \"You're such a fucking bitch!\" He sputtered, looking at me and blushing deeply.\n\n\"Tell me I don't know what I am talking about David,\" she said, loudly emphasizing the name, \"Do we want to talk about firsthand information, David?\" David blushed more deeply and his friend made his face into a tight 'O.' Others were laughing.\n\n\"Fuck you Nikki,\" David said, essentially confirming that he knew her. He realized what he'd done and quickly rose from the barstool. He shuffled quickly out the door. The other bro shook his head for a minute, let his eyes run over Nikki's body, then followed his friend out. The rest of the bar quickly settled down. Once again Nikki turned and looked at me.\n\n\"Nikki Locke,\" the woman said, extending her hand. I shook it. She had this sort of...familiar attitude. It is hard to explain. I guess the word is charisma. I instantly felt myself drawn to her, smiling back.\n\n\"Catrina Powell,\" I said, a little dreamily. She tilted her head to the side as she looked at me.\n\n\"Hey, I didn't mean to chase those guys away if you were enjoying their...attention. I just figured...\" she began, but I quickly raised my hands.\n\n\"No!\" I said quickly and then laughed, \"No. In fact, thank you, it was about to get weirdly graphic. And not in a fun way. Let me buy you a drink,\" I turned to the bar.\n\n\"Oh it was more to fuck with David than anything else. He should call a girl after a date. Especially one that...went so well for him,\" she said, \"Besides, I have a pitcher over at my table.\" As she spoke, she gestured with her head towards a booth. Then she raised her eyebrows, \"Actually, my friend found some chick to dance with and he left me alone. I am drinking a pitcher by myself. Why don't you come over and say thank you by making me a social drinker instead of an alcoholic. Everything is about context,\" She said. I looked out to the dance floor.\n\n\"Which one is your boyfriend?\" I asked, pointing.\n\n\"Just friend,\" she said, raising her hand, \"No boyfriend of mine is going to dance with someone else. And he is there,\" she said, pointing to a tall, goofy looking guy near the corner of the floor. I laughed.\n\n\"Well that explains where half of my friends went,\" I said, \"He's dancing with my roommate.\"\n\n\"Small world,\" Nikki said, pushing herself away from the bar. I raised my eyebrows at the last statement.\n\n\"Small world?\" I asked, \"Is that some sort of crack?\" I stared at her intently. I don't know why I asked. Maybe I was testing her. She instantly slapped herself in the forehead.\n\n\"Oh no, no, no!\" she said, then she turned me again. I expected her to apologize and I prepared to say I was only kidding. I am really not that sensitive. Nikki had other ideas, \"I was saving it up! I had it all planned out. I was going to make a really awful, I mean just miserably punny, little person joke in like five minutes! I just needed to formulate the perfect one and then deploy it at the right time. Now I wasted it,\" I laughed aloud. This girl was my speed.\n\n\"I won't judge you on the second one if you promise it's really bad,\" I said.\n\n\"Don't be condescending. I blew it. I don't need your pity. It won't have any impact now. Come on, I need a drink,\" she said with faux sadness. She began slumping towards the booth and, gamely, I hopped off my stool and followed after. Without really thinking about it, I watched her large, round ass tick side to side as she walked towards the booth. She was very...well made.\n\nA minute later we were sitting at the table and Nikki was pouring me a drink. This wasn't exactly what I'd had in mind, but it was better than sitting at the bar by myself. I took a sip of my beer and settle down into the booth.\n\n\"Ugh, Natty. What're you in college?\" I asked, wincing at the cheap, bitter beer. Nikki fanned herself dramatically.\n\n\"Mercy me, where are my manners?\" she said in an affected accent, then following up flatly, \"We aren't all millionaires who can afford fancy foreign Czech beers like 'Bud Light.' I thought the point was to get drunk.\" With that she door a deep gulp of her beer and at the same time, she tapped the bottom of my glass, willing me to drink. I smiled and placed it to my lips. Somehow, she'd come off self-deprecating and charming, despite the sort of manic nature of her words and tone. It was a gift she had.\n\n\"I was just expecting Schlitz is all,\" I said, warming to the flavor and the memories of university parties.\n\n\"Malt liquor for the paying customers,\" she explained and drank again, \"Damsels in distress get the government cheese.\"\n\n\"Is that what I am? A damsel?\" I asked pointing to my chest with all five fingers splayed, \"Isn't that a little dramatic?\" Although, I sort of liked the imagery.\n\n\"Well I rescued you didn't I? Slew the dragon...even if it was very, very small dragon,\" she said, and smiled and winked again. I wondered if David felt the burn in the parking lot. I grinned and shook my head.\n\n\"You don't know the half of it,\" I said, looking back towards the bar.\n\n\"How's that?\" Nikki asked, throwing one arm over the back of the booth, and slumping down comfortable. She sipped her beer in the other hand.\n\n\"Well you chased two guys off, but two more probably would have taken their place. You got me out of the line of fire by bringing me over here,\" I explained.\n\n\"Next two guys going to rob the place?\" Nikki asked snottily, but playfully.\n\n\"The figurative line of fire,\" I returned in the same vein, \"Trust me. I am safer here than at the bar where everyone has to spot and look at me.\" \n\n\"Aren't we pretty full of ourselves?\" Nikki said, \"You're hot, but I mean you're no Nikki Locke.\" I actually blushed, she'd said I was hot.\n\n\"That isn't what I mean,\" I said, \"For some guys, I am the fantasy rather than the person. I can spot them when they walk in the door.\"\n\n\"I know that game,\" Nikki said certainly. I sort of rolled my eyes to myself. Even women could be willfully ignorant about this stuff sometimes. \n\n\"Okay calm yourself sweetheart,\" I responded knowingly, \"Yes, you are blonde. Yes, you are thin. And yes, you have some pretty big tits. You're a vision of pure desire. You walked out of a Playboy centerfold and directly into this bar...\"\n\n\"Is this a dream? Could anyone other than me have scripted this conversation?\" Nikki asked, looking around wildly. I laughed but continued on. \n\n\"But you are the object of totally normal, gross dude attention. Eventually, maybe, the guy would see you as a person because you're just a particularly attractive example of a 'normal' woman. You have no idea what it's like to be half the bar's weird little fixation.\" Nikki looked me up and down once or twice. She nodded her head as though she was thinking about what I said. Finally, she raised her eyebrows and opened her free palm.\n\n\"You know you're right. I have never been anyone's weird little fixation. I don't know what that's like,\" she said, and I nodded appreciatively. She understood, \"But...but!\" she said, raising one finger in the air and leaning towards me, \"she really, really does. Maybe even better than you.\" And as she said the last phrase she pointed down, into the booth, under the table, between her legs. Instinctively, my eyes followed the direction of her point. I didn't even have time to think about what I was looking for or who 'she' was. I looked down across Nikki's bare midriff, tracking the path of her finger. I looked at her skin-tight jeans. And then I noticed something. A tell-tale bulge against her left, inner thigh.\n\n\"Well, not that little of a fixation,\" she said, as I looked up, mouth slightly agape.\n\n\"Is that...?\" I started.\n\n\"No, it isn't,\" Nikki said seriously, \"It absolutely isn't a roll of quarters. It's a penis,\" Nikki said. My eyes shot back up to her face. She was smiling at me smugly. I had to admit...she probably had me beat. But, surprisingly quickly, the shock seemed to fade away. I realized what it meant...the implications of the fact that Nikki was trans. Well, not just trans. The fact that she wasn't anyone's idea of \"normal\" either. \n\n\"Okay,\" I said, leaning in towards her, \"Don't you fucking hate it when they...\" And then we were off. We must've talked nonstop for the next two hours. I instantly dropped my sarcastic superiority and Nikki dropped her ironic detachment. Even before we spoke, we knew that the other person would understand everything. I mean, I'd never met a transwoman before and I was at least relatively sure that Nikki hadn't spent much time with little people. But we were two...non-conventionally attractive women living in a man's world. The connection that I'd somehow felt with Nikki from the beginning suddenly seemed to make sense. I must've sensed a kindred spirit from the outset and we slipped into an instant, intense intimacy.\n\nSome of our talks was just about the basic inconvenience of being a \"different\" kind of woman in a world that was designed for someone else. The awful names. The embarrassing questions. The hatred that came from the small-minded. And in some ways worse, the ignorance that came from people who generally meant well but appeared so often that it became a draining chore to deal with them. But mostly what we talked about was what it meant to date as a little person or as a transwoman. After all, that was the area with the deepest vein of material for both of us.\n\nI told Nikki about all of the awful male interactions that I'd had in my life. No, that's a lie. We only talked for two hours. It would've taken a month to tell her everything. I gave her the highlights. I told her about the guy who tried to convince me to hide in \"small\" places in his house and then, when he nonchalantly walked by naked, wanted me to jump out and suck his dick. I told her about the guy who wanted me to ride him like a \"horsey\" around his apartment. He had a saddle. I told her about the guy who on our second date (in some sort of weird size reversal) wanted to dress up in a diaper, piss himself, and have me change him. Finally, I told her of the unrelenting hell that was St. Patrick's Day, Chicago, 2015. The key word is leprechaun. You can imagine the details for yourself.\n\nNikki matched and, in some ways, surpassed every story I brought up. She told me guy who wanted to \"pretend\" he didn't know she was trans so that he could \"pretend\" to be angry when he discovered it, followed by a rape role play. She told me about the guy who broke up with her because she had a bigger penis (the guy measured three times, four millimeters different each time). She told me about the guy who was extremely aroused by the idea of telling his mother that his girlfriend was trans. And she explained that she had been accused of lying no fewer than a dozen times because the first thing out of her mouth on a date wasn't \"I have a penis.\"\n\nThere was almost no reticence in our conversation. We both just dived in head first, telling the worst that we could think of with absolute candor. We spoke over one another, rushing to get out every detail. I told Nikki things that I never would have told anyone else ever, let alone a stranger. And I was pretty sure she was sharing pretty deeply buried secrets as well. But neither of us felt embarrassed or ashamed. That was, sort of, the way we were always supposed to feel. But together, suddenly, we were able to turn that shame back on our tormentors. Suddenly, they were the ones who were abnormal. When it was just me and Nikki, we were the people and other people were objects for our amusement. Other people were the natural-born perverts.\n\nIt was about two hours after we'd first started talking, and the bar was starting to wind down. My friends had both left, sure that because I was with another woman I was safe. My roommate had actually left with Nikki's friend. They were going to my place. The dining area was now completely abandoned except for Nikki and me. We were totally comfortable. We were leaning close together, talking quietly and sipping beers. By now, I felt like I'd known her for years. We were locked together. And that allowed up to open up, getting more philosophical in our complaints.\n\n\"What I really hate,\" I was explaining, \"Is that because I am some guy's fetish, then he just assumes that I am into all the other weird fetishes the guy is into. I mean let's be honest, I probably am. I am a freak. I'm into just about everything. But he shouldn't just assume it!\" I said. Nikki tilted her head to the side, smiling strangely.\n\n\"So you're into anything?\" She asked. I'd really just been joking to emphasize a point. I was relatively vanilla. But there was something very serious in Nikki's eyes. I couldn't tell what she was getting at. I felt the mood suddenly shift, and for reasons I didn't fully understand, I felt my heart fluttering.\n\n\"Pretty much,\" I whispered, my voice croaking slightly. Nikki looked at me silently for several seconds. My eyes moved around her body. I saw her large breasts rising and falling sharply as she took a few deep breaths.\n\n\"You ever kissed a tranny?\" she asked, using the 'fetish' word she'd been decrying all night. She bit her lower lip as she said it, looking around the room as if to emphasize that no one was really around. The fluttering in my heart jumped up a few hundred beats per minute. I felt my cheeks warm and my palms get sweaty. But I smiled back.\n\n\"You ever kissed a midget?\" I asked, mirroring her fetishizing language. Nikki laughed. And then she pounced. I rushed to meet her. I felt like I was being propelled. I don't know if it was traditional attraction. I mean, I became aware, all at once, that the connection I'd been feeling had had a dimension I hadn't even realized. And I knew that Nikki was absolutely...stunning. The curves, the elegance, the beauty of her form...I saw it. And I really liked it. But more fundamentally, I think I recognized that I had a chance to have...some kind of experience with someone who would see me as a person. Someone who would understand. Nikki felt the same thing. And neither of us wanted to miss that opportunity. ",
        "When our bodies crashed together, there was no tentative feeling out. There wasn't time to be coy. We knew all of one another's secrets now anyway. We came together with unchecked passion from the very first. Soon, Nikki's smooth hands were gliding through my hair and rubbing against my cheek. In the same moment, my hands flew to her thighs, feeling her firm flesh against my hot palms. But then her lips were against mine, and her tongue was in mouth. My lips parted to make way for her, and her tongue plunged deeply towards my throat. I felt her thick, slippery tongue pressing against mine and I tasted the sweet flavor of her saliva as she filled my mouth. Instinctively, my tongue jumped into the fray. I pressed it between her lips, driving it deeply into her throat, feeling her slick teeth and tasting her sweet flavor.\n\nI am not sure how long we kissed. It felt like hours and seconds all at the same time. All I know is that the entire time we had simply abandoned ourselves to our passions. Our mouths moved frantically. My tongue slipped in and out of her mouth rapidly, I tasted her lips and even her chin at time. Our faces glistened with spit. The music was still playing at the bar, but I could hear the wet, slurping sounds of our kisses. And my nose was filled with Nikki's perfume, but beneath that I felt like I could detect something else...something more primal. My entire body felt like it was vibrating. I'd never felt like that when kissing before. It was like being able to feel while numb...I don't know, that doesn't make any sense. But that's what it felt like.\n\nStill, despite the intensity of our kiss, our bodies remained somewhat apart. We were sitting with our knees sort of tilted together. I had my hands on Nikki's thighs while she bent down to kiss me. Her hands remained against my cheeks, feeling hot and soft against my skin. I could feel my chest rising and falling rapidly and my cheeks were growing red. I knew that if something needed to give.\n\n\"Do you want to go back to my place?\" Nikki, sort of spitting the words out around my tongue as we kissed. It was like she was reading my mind.\n\n\"Yes,\" I said, without even thinking. Just as rapidly as we'd begun kissing, we suddenly broke apart. I heard Nikki giggling as she scooted out of the booth. I followed her, laughing excitedly as well. Soon we were out of the booth and Nikki took my hand as we ran out of the bar. It was mostly empty now, and people probably just assumed we were drunk. I guess we were a little drunk, but not really. I didn't really know what was going on. It was just...fun.\n\nThere was already a cab outside and we piled into the back. As soon as the doors were closed and Nikki shouted out her address, we were kissing again with total obliviousness to the outside world. Maybe the cab driver was looking at us in the rear view mirror. But for once, our sexuality wasn't about consumption by others. We weren't the objects of anyone else's desire. We were about...us. And I was just enjoying the feeling of my hands on Nikki's thighs while her tongue poured into my mouth. \n\nI don't remember getting out of the cab or Nikki paying. I was kissing her cheeks and nibbling on her ear while it happened. I don't remember going into her building or walking up the stairs. We were kissing the entire time, bouncing against the walls and laughing. I don't even remember what floor she lived on or which apartment it was. Just, suddenly, she broke our kiss to unlock her door and we were inside.\n\nAs the door closed behind me, I saw that we were standing in a large, nicely-furnished open-concept living room/kitchen. There were doors that I assume led to the bedroom, but neither one of us wanted to waste that time. Nikki took two steps into the room and then, with her back to me, she reached up to the bottom hem of her crop top and lifted the shirt up over her head. She wasn't wearing a bra and I could see the outlines of the sides of her breasts around the sides of her smooth, delicate back. \n\nNikki then quickly turned and looked at me, still standing in front of the door. Her breasts bounced heavily as she turned and looked at me, there was a wicked smile on her face. Nikki's build was even more impressive out of her shirt. Her breasts absolutely defied gravity, sitting up high on her chest and accentuating her severe hourglass shape. The breasts themselves gently sloped in on the top, and there were rounded on the bottom. Her nipples were long, with small pink areolas. I felt my mouth watering, a reaction I'd honestly never had to women's breasts before.\n\n\"Is this really happening?\" I asked myself, my words sounding dreamy and faraway. Nikki smiled more widely and placed her hands on her wide hips. \n\n\"If you want it to,\" she said. I licked my lips and felt the same vibrating sensation I'd had at the bar. It was attraction, I think, but...so much more.\n\n\"I don't understand what I am feeling,\" I said honestly.\n\n\"Don't question it,\" Nikki said, \"We're in uncharted water here. But I think this is good.\" She said, and the way she said it made me believe her. I don't know if I could've held my body back, but I suddenly realized that my mind wanted this as well. There was no barrier here. That was what I was feeling. There was no separation. I didn't doubt her intentions, I didn't wonder what she was thinking. I knew what she felt about me and I knew that I could trust it. I could feel the raw connection between us and I wanted more of it.\n\n\"Do you want to fuck a midget?\" I asked her, my breath catching in my throat now. I had intended it to be playful, the way it had been in the bar when we'd first begun to kiss. But it came out sounding serious. I looked up at Nikki, my hair cast over my eyes. She shook her head.\n\n\"No,\" she said, \"I want to...be with you.\" And she brought her hand to her mouth and nibbled on her fingertips. She looked vulnerable and alluring. Started to walk quickly across the room, closing the distance between us. In a moment, I was standing right in front of Nikki's body. I looked up and saw that her breasts were right above me. I could smell her perfume and her excitement, and I could feel the heat of her body. \n\nI tilted my head back now and closed my eyes. I moved my mouth forward and I could feel Nikki's body tremble as my warm lips pressed into the underside her breast. Her flesh felt firm and hot and my lips sank into it. I could feel goosebumps form on her skin as my tongue slipped from my mouth and pressed lightly on her breast. Nikki bent slightly and her breast slipped down. I felt her nipple rub against my nose and I heard Nikki moan. I moved my mouth, quickly taking Nikki's nipple into it. I felt the taut, firm bullet of flesh slip between my teeth and heard Nikki groan as I flicked my wet tongue against it. I closed my lips around Nikki's nipple, sucking on it gently and playing my tongue across it.\n\nWhile I sucked on Nikki's breast, my hands remained active. As soon as I'd begun kissing Nikki's warm body, I'd moved my fingers up to Nikki's waist. While I began to suck on her nipple, I rapidly unbuttoned the fly of her tight pants and slipped down the zipper. I moved, briefly, off of Nikki's nipple, once again licking and now sucking on the smooth underside of her breast. At the same time, I moved my hands out to Nikki's hips, slipping my fingers in the waistband of her tight jeans. I could feel that she wasn't wearing any panties. As I licked at sucked on Nikki's breast and listened to her excited groans. I slipped Nikki's nipple back into my mouth as I started to tug, gently at first and then forcefully, on Nikki's tight jeans. Nikki giggled as I struggled and I felt her shimmy her hips slightly. Eventually, I was able to push the waist of Nikki's jeans back over her round ass and then down. Now the pants felt loose and they slipped down, bunching slightly around Nikki's knees. I lifted one foot up and put it in the seat of her jeans where it was slung between her legs. I pushed down and soon they were in a pile at Nikki's feet. She easily stepped out of them, now totally naked. I gave one last suck to Nikki's nipple and then took a half step back, letting it pop out of my mouth. I moved back further and looked down now at Nikki's body.\n\n\"Oh my god...\" I said, putting my hand over my mouth, I felt my eyes widen.\n\n\"What?\" Nikki asked, with a sort of forced playfulness that indicated unease.\n\n\"You're gorgeous,\" I said and Nikki smiled with relief, making her look even more beautiful. The full dramatic sweep of Nikki's hourglass shape was now visible, as were her long svelte legs. Of course, there was more than that. My eyes were, naturally, drawn to the area between those legs. Nikki was waxed totally bare and all of her skin was just as tanned and smooth as her face. And that included her penis. It was soft when I looked at it, the skin looking velvety and smooth, though I could see a few small veins running through it. She was circumcised and the domed tip was a dark red color and very smooth. Her shaft lay gently atop two small balls in a taut, hairless scrotum. It was...cute. It somehow fit with the rest of her. \n\nI'd always loved to put a soft cock in my mouth and feel it get hard as I gave it attention. It was like...I was making it come alive. My mouth watered and I licked my lips. I knew exactly what I was going to do next.\n\nThe bros at the bar had, of course, been wrong. If I wanted to suck a dick, I couldn't just stand there while my lover stood in front of me. I wasn't that short and I'd never met anyone that tall. Nikki was a tall girl, but nowhere near tall enough for that maneuver. But I was (am) very short. I could still do things that other girls couldn't. \n\nI took two steps backwards and spread my legs shoulder-width apart. I pushed my round ass backwards slightly and then began to bend at my waist. Rapidly, the distance between us shrank and my head slipped down lower and lower in front of Nikki's body. I kept my eyes on Nikki as I moved, my pupils locked on hers. Her eyes were wide, watching me. She looked giddy. I could see her chest rising and falling rapidly, but she didn't otherwise move. \n\nI didn't even have to get on my knees. Still standing, just a little bit bent over, Nikki's penis was directly in front of my face. For the first time since I'd started bending over, I looked down from Nikki's eyes (they were partially blocked by her breasts now anyway) and looked directly at her limp cock. I was so close now that I could feel my warm breath bouncing off of her body and coming back to my face. But my focus was on the appearance of Nikki's soft penis. I smiled at it, it look so smooth and so delicate. It was cute! I breathed in deeply, soaking in Nikki's perfume and the primal scent of her sweat underneath. Her pheromones made me feel lightheaded and I moved my hands up, placing my palms on Nikki's wide hips and feeling my fingers sink into her hot flesh. The room was now totally silent, Nikki wasn't even breathing. I'd stopped too. I could feel her eyes on me.\n\nUsually, when I did something like this, I would close my eyes. But I didn't now. I wanted to see everything. I wanted to feel everything. I opened my mouth and leaned the last half of an inch forward. I tasted her first. The salty, animal flavor as it spread across my tongue. She let out a soft chirping noise and I groaned. I felt Nikki's soft flesh tumble over my lips and land softly against my tongue. Instinctively, my lips closed gently around Nikki's flaccid shaft. My tongue began to swirl around the circumcised tip of Nikki's penis, making it flop wetly against the insides of my cheeks. Then I began to suck gently on the tip. Nikki's soft shaft began to stretch, her skin growing taut and pulling into my mouth as I slurped at her. I felt her shaft and her pulsating urethra slip across my tongue. Deeper and deeper, her soft penis wiggled into the back of my mouth.\n\nThe taste of Nikki's body had only grown more intense as I took more and more of her inside of me. There was a clean, soapy flavor that seemed to make sense with the smooth, delicate texture of her skin. But there was a salty, musky taste beneath that. I could feel it wrapping around my tongue, making my head light. That taste filled my nose and made my knees weak. I'd never tasted anything like it.\n\nNikki's moans had grown louder and louder as I pulled more and more of her cock into my mouth. I could see out of the corners of my eyes and that her hands and arms were moving. I knew that they were moving up to Nikki's breasts. I could feel the tremors in her body as her fingers moved across her nipples. Her heat seemed to grow, to radiate out from her. \n\nNikki took a half step forward as I sucked, allowing me to get more of her penis inside of me. I was so close now that I could feel her balls against my chin and all I could see was her bellybutton. I let my tongue slip out from my lips, ever so slightly. I felt the rigid tip of my tongue press against Nikki's soft scrotum, felt her balls move against my touch. Her taste here was even more intense, and I desperately wished I could take the whole package into my mouth.\n\nBut Nikki's limp cock had begun to rouse from my attention. It was still limp and flopped wildly against my tongue, but I could feel it swelling. My eyes watered slightly as I felt it growing thicker and thicker in my mouth. It was actually starting to push down towards my throat. Just as I'd hoped, Nikki's cock was coming alive in my mouth. I groaned around it and slipped my tongue back into my mouth.\n\n\"Jesus Catrina,\" Nikki moaned, \"I never start getting hard this fast. Don't stop!\" Her words came out in a breathless rush. I swirled my tongue around wildly on her velvety skin, just to let her know that I'd heard her. Now was not the time for a slow exploration. My body felt like it was pulsating to the beat of Nikki's heartbeat, which I could feel pounding in the veins her cock. My muscles felt tight and my mind felt like it was floating. Now as a time for action.\n\nI jumped instantly from cradling Nikki inside of my mouth to full, frantic motion. I bobbed my head backwards quickly, letting Nikki's half-hard shaft slip through my tight lips. The whole time, my tongue swirled around her wildly. Soon, just the soft tip of Nikki's penis remained in my mouth, my tongue probing it fiercely. But I didn't rest there. As soon as I felt the tip start to slip from my lips, I bobbed my mouth forward again, sucking strongly as I did so. I felt Nikki's shaft against my cheeks as I moved forward, taking her penis into my throat and pushing my nose against my belly.\n\n\"Oh fuck!\" I heard Nikki groan and I could feel her knees wobble slightly. She got no mercy from me. I felt like someone else was controlling my body. I started moving faster. Soon, my head was bobbing up and down faster than I'd ever moved before, I was almost dizzy. I relaxed my throat and let Nikki's cock slam into me over and over again. I gagged slightly, but didn't stop. I moved my head side to side slightly as I went, giving Nikki different angles on the inside of my throat.\n\nI must've kept up that pace for a couple of minutes...I don't know it was a blur. My hands gripped tightly to Nikki's wide hips. I was still bent over slightly, planted firmly on my feet and trying to keep my balance while my head bounced violently up and down on Nikki's penis. My mouth was flooding with saliva and it was dripping out of my lips, completely uncontrolled in my wild motions. While her cock felt like a...sort of hot, silky, smoothness in my mouth without any defined shape, I could tell that it was changing. It was growing thick and stiffer with each passage across my think, welcoming tongue.\n\nNikki noticed that changes too. She basically hadn't stopped moaning since I'd started. She was loud and her body was trembling. I could see her legs, spread apart slightly, shaking wildly at the knees. Her hands had once been on her waist, but I'd felt them move. I felt her right hand resting gently on top of my head. She wasn't pushing me (I couldn't have moved any faster if she had), but it seemed she was leaning on me. Her other hand, I could tell, was grasping her large breasts, pulling at her nipples, and searching desperately for relief. \n\nNikki's head was thrown back as she moaned and I could actually smell her hair as it swished across her back. But that wasn't the only smell, and certainly not the dominant one. The musky smell of Nikki's body had grown more and more intense with time. The room felt hot and thick with it. It seemed to merge with the salty, naughty taste that coated my tongue. I could feel slickness growing between my legs and I sort of wondered whether Nikki could smell me as well.\n\nMaybe she did. Maybe that explains what she did next. Because while I was bending over and giving everything that I had to Nikki's hardening cock, I felt her hand slip off of my head. She wobbled a minute, but moved her hand decisively over my head and past my neck. Nikki's fingers grasped the zipper at the top of my dress and jerks quickly. I didn't feel or even hear the zipper, I just felt a sudden coldness on my back, goosebumps. I felt short sleeves of my dress slip down over my arms, the tight dress no longer hugging my breasts. I didn't have time to think about what Nikki had done. As soon as she'd unzipped me, she was talking.\n\n\"Oh Catrina, you gotta stop. I can't cum yet!\" Nikki groaned. For a moment, the words didn't even register. If anything, I took the opposite approach, treated it as though she'd asked for more. I moved faster, deep throating Nikki's cock and then shaking my head side to side, driving her into my throat and rubbing my chin against her balls. I only realized what Nikki had asked for when I felt her hands gently press on my shoulders, pushing me back. For a moment, I almost resisted anyway. I'd never had this feeling before, one where I...wanted to keep giving someone a blowjob. But touching Nikki's body made me feel electric, I ached to take more of her, I desperately wanted to give her pleasure.\n\n\"Please Catrina, oh god, I want to fuck you!\" Nikki groaned. Now my head, bobbing wildly, came to a stop. I slowly pulled my lips back, feeling Nikki's now-hard cock move across my tongue. It audibly popped out of my lips as I pulled my head back. A thin strand of saliva connected my lips to Nikki's cock as I looked up at her. She was smiling and panting, her face looking flushed and her eyes wild. She looked more beautiful than ever.\n\nSlowly, I unbent myself at the waist, now standing up in front of Nikki. My dress, now extremely loose from being unzipped, slipped down as I straightened. I groaned as I felt the soft fabric of my dress slip down across my nipples. The intensity of the sensation made me realize just how awakened I was by this experience. A kind of lust I'd rarely felt before in my life was upon me. My eyes burned, my mouth was dry, my nipples ached, my skin tensed, and my pussy was wet. But it was all part of one overarching, sensual need. I could feel every atom in my body turned towards Nikki, reaching out to her. \n\nAs the dress slipped under the curve of my breasts, I adjusted my arms slightly, letting the shoulder straps slip down from my elbows, and off my fingertips. Now the top of my dress flopped down entirely, leaving the top half of my body entirely exposed. I saw Nikki's eyes moving over me ravenously. She actually licked her lips and her cock, now completely hard and glistening with my spit, jerked slightly as she looked at me. I grinned. My breasts sat up high on my chest, were a gentle rounded shape with small pick nipples, and looked perfectly proportioned to my body. They were my favorite feature and, I think, Nikki's too. \n\nI didn't pause to let her admire. I grabbed my dress in my hands and, without hesitating, grasped the waistband of my black panties as well. I could feel how wet they were. They were uncomfortable now, I wanted them off. So I pulled on my clothing and shimmied my wide hips, slipping the dress down and back off of my ass. It moved easily and pooled at my feet on the floor. I stood up straight again, wanting to see Nikki's eyes as she saw the rest of me exposed. I saw her eyes move over my toned thighs and my large ass. And she licked her lips as her pupils narrowed in on my waxed-bare pussy. I had very puffy pink lips, the same color as my nipples and very tight. They were glistening now with my juices, reflecting my excitement back at Nikki.",
        "Nikki admired my body for a minute, drinking it in. She didn't need to speak. I didn't need her to say that I was beautiful. I could see in her eyes the way she felt. I could feel the way she moved over my body and the way that she wanted it. And I knew it wasn't because of the novelty of my proportions. Our lust was past that point. Somehow, the denseness of our lust had refined the feeling down to something approaching purity. I don't know...it made sense at the time.\n\nBut the passion of that feeling meant that we couldn't simply stand and admire one another for long. Our bodies cried out for more. Nikki moved first. Strangely, she moved away from me. She turned to her side and started to walk. She took long, elegant strides, her hips ticking as she moved. I watched her hard cock swinging lewdly, but somehow beautifully, as she moved. After a moment she came to an immense, white couch strewn with throw pillows. She turned around and sat directly in the center of the couch, throwing her arms back across the back and gently crossing her legs. Her cock and her breasts bounced as she moved.\n\n\"Want to join me?\" she asked, patting the couch with one hand. It took all of my willpower to keep from scrambling across the room. Control is sexy, and I had to get a hold of myself and walk across the room. I stepped out of my pool of clothes and moved in the direction of the couch. I felt the cool air of Nikki's apartment raising goosebumps on my flesh. The chill was particularly pronounced in the wet areas between my legs. But it was oddly stimulating as well. I knew that Nikki was going to warm me up soon.\n\nAs I reached the couch, Nikki uncrossed her legs. In fact, she did more than uncross them, she spread them wide, her cock bouncing as she moved. She bent over slightly not, leaning over her cock. Her breasts hung down pertly over her penis, almost touching the tip of her shaft and illustrating the beautiful paradox of her body. I could see the pre-cum forming at the tip, dripping down her shaft. My lips watered, desperate to taste her again. But Nikki didn't want to be tasted now. She wanted more.\n\nI had moved so that I was standing directly in front of Nikki. I had every intention of walking beyond her and then climbing up onto the couch at her side. But as I moved in front of her, Nikki brought her arms out, one hand suddenly resting on my shoulder. Her fingertips felt hot against my skin and I almost moaned at the feeling. It froze me in place. Nikki's other hand moved out, rubbing along my right hip. \n\n\"Your skin is so soft,\" she said, in a half-distracted tone. I could feel her eyes moving all over me. I didn't know how to respond, I just nodded. As I did so, I felt Nikki's hands gently manipulating me. She was pulling on my hip and pressing on my shoulder. Before I realized what was happening, I was turned around so that my back was to Nikki, with my body between her spread legs. Nikki's hand melted off of my shoulder and soon I felt it rubbing against the firm flesh of my ass. I felt her fingers squeeze into my flesh and moaned. She then rubbed her palm against me gently, teasingly. Her palm grasped my ass at the meatiest spot, and we groaned together as she played with it.\n\nBut Nikki didn't simply want to squeeze my ass. She had something else in mind. Her hand moved slowly, almost reluctantly, away from my thick ass cheeks and slowly moved to my other hip. Now Nikki had one hand on both hips and then her palms slid up so that she was grasping me at the narrowest point of my waist. Her long fingers nearly touched across my flat stomach. It felt good to be completely wrapped up in her palms.\n\nI knew what Nikki was going to do, even before she started. With the guys I'd been with, I'd always hated getting picked up. They always wanted to lift me and toss me around, to use me like a sex toy or something. But while the action being taken was identical, I felt no discomfort with Nikki. I knew she wanted to lift me and was shocked to find that I wanted it too. I guess I always hated being reminded by guys that I was small. But I didn't mind being who I was with Nikki. I felt her start to apply pressure on my hips, and I sort of leapt into the air, embracing the feeling.\n\nNikki did not look particularly muscular or strong. In fact, her arms look thin and wispy, like a model's. But her grip around my waist felt secure and I was shocked to find that she held my weight easily. Her arms were delicate and slim, but they concealed lithe, well-honed muscles. My feet left the floor and I went up into the air. Nikki sat back in the couch, and her arms pulled back, moving me closer to her body. I giggled at the feeling of being tossed easily into the air by my lover. For the first time, it felt playful.\n\nBut it wasn't all games. Even as I laughed, my body was reacting without me even noticing. My legs, now completely up in the air, spread apart and my hips rotated up. Soon, my feet were sticking out in front of me, my knees about as wide apart as I could get them. I looked down between my breasts and beyond Nikki's fingers. I could see my pink pussy lips, split open invitingly. My clitoris was aching and it looked more red than pink, more aroused than I'd ever felt it before. In fact, I felt my own juices drip down off of my desperate pussy, saw it splash against Nikki's leg. She groaned in excitement.\n\nWe didn't talk now. There was nothing to say. We were connected in a manner that went beyond words. Words were the way that we obfuscated, we lied all the time. We had to. But we weren't lying now. We couldn't. Our bodies were honest. I could feel Nikki's desires through her skin and I sent the same message back. Every atom in my body was screaming, \"fuck me!\" There was no need for my lips to garble the message.\n\nNikki's arms were shaking slightly as she slowly started to bend her elbows, letting her hands drop. I felt my body lowering towards my lover's lap. She hadn't been holding me very high and her cock was...surprisingly long as it was erect. It didn't take long before I felt the slick, velvety mushroom tip of Nikki's cock press gently against my clitoris. I groaned loudly and my head lolled back. My mind had flashed black for a moment in electrical overload. I barely even noticed as Nikki carefully adjusted herself so that her cock was in a different position.\n\nI gasped loudly when I felt it. When that same bulbous tip pushed up against my slick, desperately pussy lips. The pre-cum had been pouring out of Nikki's body (I could smell it in the air) and my own body had been growing wetter and wetter with every passing second. There was no friction. The very tip of Nikki's penis slipped easily (more easily than I'd ever experienced before, even with smaller penises) into my body. I shuddered and felt my body tightly grip around Nikki's tip. But that only sent more terrible, wonderful sensations rocketing around my body. I heard Nikki gasp behind me.\n\nShe didn't stop there. She didn't wait for us to understand what was happening. Maybe her arms were not strong enough to hold me any longer. Or maybe she just couldn't bear to wait. Whatever it was, I'd barely gotten used to the feeling of Nikki's penis splitting my pussy lips, when I could feel her pushing deeper and deeper inside of me. I felt myself stretch as she rapidly began to fill me up, but still there was no pain. Only the delicious pleasure feeling more and more of Nikki inside of me. I moaned loudly, my entire body trembling as, inch by inch, I took Nikki into me.\n\nDespite the fact that I felt filled to the bursting point, I almost sighed in disappointment as I felt my ass settle gently onto Nikki's lap. She was completely within me now and I sank down on top of her. I let my knees bend and my legs sort of draped themselves over Nikki's legs. Nikki's hands stayed on my hips, but they weren't squeezing me as tightly as before. I wanted more of her, and I only knew of one way to get it. I quickly leaned back, rapidly feeling Nikki's large, beautiful breasts pressing against my spine. This action shoved my hips down, driving Nikki's cock more deeply into my body. Nikki and I groaned at the same time. \n\nI threw my head back and to the side pushing my lips up. Nikki had anticipated my movement, her face was hovering directly above mine. Once again, our lips met with unrestrained passion. I sucked her tongue into my mouth, wanting to feel her inside of me on both sides of my body. At the same time, I wiggled my hips and my back against Nikki's body. I felt her hard cock shifting deliciously inside of me. At the same time, I felt her hard nipples against my back and felt her trembling at my touch. Her hands slipped off of my hips, rising quickly. I gasped when both her palms fell softly, but firmly against my breasts. I felt my nipples press hard against her palm while her fingers wrapped around my flesh.\n\nFor a while, I simply lay against Nikki's soft body. I kept my hips shifting back and forth, allowing her cock to press every inch of my insides. Nikki played teasingly with my breasts as we kissed. Well, we didn't so much kiss as lick one another voraciously while we moaned into each other's mouths. But soon, even that wasn't enough. Our bodies demanded more. Once again, without speaking, Nikki began to move. With extreme reluctance, her fingers slipped off my breasts and, once again, made their way down to my waist. I felt her fingers, again, sink deeply into my flesh. Now I sat up, also reluctant as our passionate kiss broke and my back moved off of Nikki's pillowy breasts. Once again, I was sitting in Nikki's lap, her hands ready to lift me.\n\nWe didn't pause long, as soon as I was sitting up and my balance was set, I felt pressure from Nikki's hands on my body. She was lifting me. I gasped as I felt Nikki's hard shaft slipping out of my body. I barely noticed that my ass was lifting off Nikki's lap, all I could feel was her cock moving naughtily out of my body. She moved me quickly, no longer having the patience to be coy. She squeezed me so tight it was hard to breath. In a matter of seconds, only the bulbous tip of Nikki's cock remained in my body. I whimpered and raised my hands to my own breasts, squeezing and playing with my nipples in a desperate attempt to get relief.\n\nNikki didn't make me wait long. She quickly dropped me back down, her hard cock moving through my body once again, touching all of my sensitive places again and leaving me moaning with pleasure. I heard the wet smack of my ass as it landed on Nikki's hips and it made me sort of bounce up again. Nikki took advantage of the situation, pulling me up again. I kept my hands clasped tightly to my breasts, like I was holding onto them for safety.\n\nI don't know how long we last that way. My eyes were closed and I could hear a thick, croaking sound in the back of my throat. My back stayed rigid, thank god, or Nikki would've been throwing me around like a rag doll. I was barely controlled as it was. Nikki just kept lifting me up off of her lap, and then slamming me back down onto it over and over and over again. Her cock felt hot in my body, she was moving quickly (only my immense wetness and Nikki's precum prevented any painful friction). I could hear my lover groaning as her cocked slammed into me faster and faster with each passing moment. I was essentially, frozen, my knuckles turning white from grasping my breasts, the pleasure too deep to be comprehensible. It felt like hours, or even days. I wanted it to last forever.\n\nBut it couldn't. And when it ended...well I definitely had no reason to complain. I remember that Nikki was panting raggedly, her voice sounding strained and desperate. Her long nails were digging into my flesh and her arms felt like they were growing weaker. But she just kept pushing harder and harder. I could feel the tension growing inside of me. I knew that if I just touched my clit, that I would cum instantly. But I waited for my lover. I wanted to be fully aware of what was happening when she finally came. \n\nAlmost as soon as that thought crossed my mind it happened. Nikki lifted my body up and waited, half a beat, with my ass hovering above her lap and the tip of her cock just barely inside of my body. And then she just sort of dropped me. I felt her cock tear into me once again and I heard the loud slap of my ass against Nikki's lap. But I felt her hands spring off of my waist as well, no longer holding me in place. At first, I couldn't figure out why. And then I felt something else. Deep inside of me, I could feel Nikki's hard cock pulsating, rapidly contracting to the rhythm of her heart. I couldn't hear her moaning in a high-pitched voice and could feel her hips writhing under me. And then I could feel Nikki's hot, sticky cum pouring into my desperate pussy. I moaned as I felt each wet spurt coat my insides and I could feel Nikki's balls seizing against my ass as she came. \n\nThere was so much. Her cock just kept contracting over and over again. Soon, it felt like my body was being stretched out. I could feel a warm wetness under my ass and my legs and, after a moment, I realized that I was overflowing with cum. Nikki had filled me entirely and it was pouring out. I heard Nikki sighing contentedly as the last bit of her sweet nectar spurted into me. She collapsed back against the couch, slumping slightly so that only the top of her head was above the back of the couch. Still, the sperm dripped out of my pussy, around Nikki's hard cock. There was so much, I couldn't hold it in. But I didn't want to. I wanted something else. \n\nNot giving Nikki a chance to recover, I quickly leaned forward, putting my hands on Nikki's thighs as I did so. I started to lift myself up, pushing off of Nikki's hard cock. I heard her gasp as I did so, but she didn't move. I felt Nikki's shaft slipping quickly out of my pussy and I groaned at the sensation, almost as lovely as going in. But I didn't slow, I just kept rising up. As I did so, more and more of Nikki's cum poured out of my pussy and dripped down onto Nikki's shaft. I helped it along, pushing out as I moved, forcing the cum from my body. After a few seconds, the hard tip of Nikki's cock slipped from between my pussy lips. I might have been disappointed now that the sensation was gone, but I knew her shaft was now coated in her thick, pearly sperm, even if I couldn't see it. I knew what I wanted to do.\n\nAs soon as I was no longer impaled on Nikki's cock, I started to push myself back with my arms. I lifted my hips high and scooted my knees and my shins back, spreading my legs as I did so. My pussy slipped back as well and began to grind its way across Nikki's still-hard shaft. It felt wet and sticky. She gasped at the sensation (I did too). But I kept pushing myself back further and further, keeping my legs spread as I did so. My body moved back over top of Nikki's, my pussy grinding against her stomach and then between her breasts, while her cock slipped between my tits. Nikki didn't ask questions or try to stop me. In fact, she seemed to know what I wanted. She grabbed my hips, pulling me back and up.\n\nIn a matter of seconds, Nikki and I had positioned ourselves right where I had wanted. My legs were spread and draped over the back of the couch. Directly between them was Nikki's beautiful face. My big ass was pressed into her nose and my wet pussy was directly against her mouth. My stomach rested on her large breasts, feeling soft and delicious against me. My left hand was down on the couch, holding me up. My right hand was wrapped around the base of Nikki's wet shaft. I had pulled it up, so that it was facing towards my mouth.\n\nOnce again, we didn't need to speak any words. We were totally in tune with one another. I dropped my head down towards the red tip of Nikki's penis, my eyes still open. Her cock only felt half hard now, making it velvety and wiggly, a sensation I enjoyed. I smiled right as I opened my mouth, taking the tip inside of me. Despite the fact that my body hard rubbed some of it off, Nikki's cock was still largely soaked with her own cum. Just what I wanted. As my lips began to move slowly down Nikki's shaft, I sucked in hard and swirled my tongue around on her urethra. I slurped in her still-warm cum, pulling it into my mouth and letting my tongue spread it everywhere. I cleaned her shaft of the cum I'd put there. It was salty and musky and perfect. I groaned at the flavor, but kept moving. I took more and more of Nikki's cock into my mouth, slurping up more and more of her cum with each movement. Soon, my nose was pressed into Nikki's hot balls and my mouth was coated in her sperm.\n\nI could tell by her movements that Nikki was enjoying my touch. But I could also tell she wasn't focused on that. She had more important things to do. I had heard her sigh lovingly as my pussy had moved against her mouth and she hadn't waited but a second before she dove in. I felt her hands wrap around my torso and she pulled me up and back, driving my pussy harder into her mouth and her nose deeper into my ass. Her tongue was...everywhere and everything. I felt my body shudder as the hot, wetness of it splashed against my slit. I knew I was still dripping Nikki's sperm and that my pussy was coated in it. She didn't hesitate. She wanted it to. She slurped it into her mouth, actually sucking it out of me and swallowing it down. Once she cleaned me, her tongue remained inside of me, wriggling and tickling my insides and my lips. I groaned loudly and writhed on top of Nikki's body. Her tongue was so...expert. I'd never felt anything like it. She knew how to hold me just on the edge and then...oh God just pull back enough... It was all I could do to stay focused on suckling on her beautiful penis.\n\nDespite Nikki's best efforts to tease me, I was so terribly close already...I knew I couldn't hold out long. I didn't want to hold out anymore. I swished my hips side to side, trying to get more and more sensation from Nikki's mouth. She took pity on me then, sensing that I was on the verge of crying from pleasure and frustration. Her tongue slipped from insides my body and she moved her head down slightly. Suddenly, I felt her lips wrap tightly around the hard bud of my clitoris, sucking and licking all at once. I heard the sound of my own voice screaming for half a second, and then the whole world went blank.\n\nIf what happened to me then was an orgasm...I'd never had an orgasm before in my life. The difference between what I felt there and a \"normal\" orgasm was the same distance that separated a normal orgasm from a sneeze. I couldn't even feel my body anymore. I had become something else. I'd melted into pure pleasure, my nerves becoming a part of the universe around me. The distance separating me from Nikki disappeared entirely. We were simply wrapped in absolute pleasure...I felt nothing and everything all at once.\n\nAs the orgasm slowly began to fade, I realized that I'd pitched forward as I came, opening my mouth wider. I'd taken Nikki' entire cock more deeply into my throat than ever before. What's more, she was cumming again. I couldn't taste it. She was too deep inside of me. Instead, I could feel her shaft expanding and contracting deep in my throat. I could feel her hot sperm shooting down directly into my belly, making me feel warm and content. I could heard her moaning, feel her lips still against my too-sensitive clit.\n\nFinally, Nikki's second orgasm faded as well. Her attention to my pussy was just...too much. I pulled Nikki's cock out of my mouth and rolled quickly to one side, flopping down onto the couch next to her, panting. She didn't try to follow me. Instead, she remained leaning against the back of the couch, panting even more forcefully than me. I turned so that I could look at her, saw her face glistening with sperm and my juices as she smiled, looking at me as well.",
        "\"That was...incredible,\" I said when I could finally find the words, \"I've never...given myself...to anyone like that before in my life.\" I said. \n\n\"I don't think anyone has ever asked me to give that much of me before,\" Nikki said, nodding and I instantly knew what she'd meant. I'd felt like I'd...owed something to Nikki. Something I'd never tapped into before...\n\n\"What happened?\" I asked dazed, as I slowly moved myself around so that I was sitting up, next to Nikki on the couch. She draped her arm over my shoulder, pulled me in towards her large breasts.\n\n\"I wasn't a tranny trying to perform...\" she said, \"And you weren't a midget fulfilling a fantasy,\" her voice was dreamy, like it was coming from somewhere far off, like someone else was giving her the knowledge. But I felt it as well. \n\n\"We were two people...connecting,\" I said and leaned in more fully to Nikki's body. She hugged me tight. There was nothing else to say. Nothing else needed to be said. We stayed there, holding each other, for as long as we both dared. \n\nThe End\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks.\n\nYKN"
    ],
    "authorname": "YKN4949",
    "tags": [
        "tranny on female",
        "tranny on woman",
        "midget",
        "little person",
        "oral",
        69,
        "tranny on girl",
        "reverse cowgirl",
        "first time",
        "creampie"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-pair-of-objects-walk-into-a-bar"
}