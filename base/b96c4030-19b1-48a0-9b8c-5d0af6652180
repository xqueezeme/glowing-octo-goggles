{
    "title": "Love Training Pt. 02",
    "pages": [
        "The three following weeks were full of intense experiences for Ryan. He and Kyla got closer and closer, spending all the time they could together. They also started going to work together, and going home together. They constantly texted each other, developed silly in-jokes...\n\nIt felt weird to Ryan, to have something else going on in his life other than work, and the occasional videogame. The strong emotions that rocked his life daily felt out of character to him; even the time he spent enjoying Kyla's company felt almost undeserved. \n\nLove was not for him, he always felt that way. And he was fine with that notion, it was something that simply never had and never would happen to him.\n\nAnd yet.\n\nMore than once he found himself laying in bed, wondering what was happening to the Ryan he knew. Of course, not a small part of this self-doubt stemmed from the training regimen he put himself under, as the slightly uncomfortable presence in his butt reminded him.\n\nYes, he was preparing his backdoor for future action. He never felt more embarrassed than the day he decided to get some buttplugs from a sex shop; so embarrassed in fact that he went to a whole other city just for that. He was not even sure why he was doing it, Kyla did not express any desire to... put it in there.\n\nHe was also not entirely sure himself if he wanted to, but it had become a fantasy of his. At least his subconscious thought so, considering the number of times he woke up to wet dreams of that kind.\n\nHe stood up from his desk and stretched his limbs for a while, finally relieving the stress accumulated during the day of work. It was time for his favorite part of the day.\n\nLeaving the offices, he sent a quick text to Kyla, but he knew she would not see it: At that hour of the day, she was busy exhausting herself in one of the empty private gym rooms. \n\nIn a few minutes, he found her. The colossus that he liked to call his girlfriend was mercilessly attacking some heavy weights, her powerful muscles tense and inflated by the effort, while her clothes desperately hang on for dear life. Her black hair dripping with sweat. An obscene bulge in her pants, threatening to burst free at any moment. The air in the room was heavy, and filled with grunts and metallic noises: It was easy for him to creep inside unnoticed. \n\nHe got closer, then closer, and finally sprung his trap.\n\n\"Hey there!\" He shouted, hugging her large, muscular ass, reaching around to squeeze her suffering package.\n\n\"Jesu-\" The reaction was immediate. Kyla jumped forward, effortlessly escaping Ryan's grasp, and brought the weights down. She looked at the culprit with eyes wide open, but her expression quickly mellowed. \"Fuck, you got me again.\"\n\n\"I did\" he said, with a dumb smile on his face. \"I thought you could use some help.\"\n\n\"well, I do have a little problem that needs fixing...\" she replied, trying her best to sound sultry. \"I-I mean, we could also just work out, if you prefer that\" she added, her face flushing tomato red.\n\nShe was so cute when she got embarrassed. \n\nHer poor attempts at flirting was the sexiest thing he ever witnessed in his life, he never got tired of them.\n\n\"Let me relieve some tension then\" Ryan said, while gesturing towards the bench. Kyla obeyed without a word and sat down. A fuzzy feeling filled him: Being able to turn on that huge futanari felt quite empowering, he was never that brave with his previous girlfriends. \n\nThere was just something in that mountain of muscles and shyness that made him act in crazy ways.\n\nHe circled around her and began massaging her shoulders. The hard flesh barely gave way, but the satisfied sighs of Kyla told another story. He made his way down her back, then he sneaked in front of her. The futanari had her eyes closed and noticed his movements only when he opened her powerful legs and took down her sweaty pants.\n\nHer hard-on sprung free with glee, emanating an overwhelming fragrance of arousal. Kyla bit her lips, trepidly waiting for his next move. As he knelt down in front of her, the large frame of his girlfriend occupied most of his field of vision: a towering, beautiful ball of sexual tension.\n\nHis fingers snaked around the fleshy tube of her cock, that was somehow still getting harder and harder.\n\nOne hand went down to massage her large balls, and then further down to her hungry pussy, while the other pumped up and down the shaft. Finally, he leaned forward and gave a long lick to her entire length, eliciting a gasp. Her finger clinging desperately to the edges of the bench.\n\nHis lips met with her cockhead and remained there for a few moments, feeling its ridge and shape, savoring the steady trickle of pre-cum. Her dick was thick, enough that forcing int into his mouth was no easy task, but with the practice he got in those weeks, he was confident in his abilities. Still, it took him an attempt or two before he could comfortably start sucking.\n\nHe was far from being able to deepthroat her, but Kyla did not seem to mind particularly, she was lost in her own world. With each breath, her abs quivered in front of his eyes, perfectly visible beneath her shirt. Ryan could not help but join in the action, his own arousal making his head light and vision fuzzy: One of his hands abandoned her and went down to his own sex. His dick was already hard as it could be, and it was only going to get better.\n\nAs he pumped the large shaft and worshiped the head with his mouth, her twitching became more frequent, her breath heavier, her muscles more tense. His own self-pleasure was getting more and more furious. Until it hit them both.\n\nHer orgasm exploded in his mouth with fury, while a loud grunt of hers threatened to shatter his ears and the windows. A flood of cum immediately filled his mouth. He swallowed, but more kept coming. Some, a lot in fact, dripped out of his lips onto the floor, while more and more reached his stomach.\n\nHis own insides twisted in bliss as his dick throbbed and his climax crashed against his pleasure centers. His movements sped up, desperately pumping both dicks with all the energy he had. Several, long, moments later, the flood finally started to recede, and their orgasms slowly died down.\n\nWith his heart coming down from its crazed frenetic high, he let go of her dick and wiped his mouth of the leftover cum. \"Feeling better?\"\n\n\"Y-You could say that\" she simply said, while letting herself fall down onto the bench. \"You know I had to up the dose of my medication because of you. I'm starting to think you're a bad influence, Ryan.\"\n\nHis laughter filled the room for a couple of seconds. \"Considering you did this on your own before meeting me, I somehow doubt it's my fault\" he said, calling her out. \"I also doubt that you did increase the dosage.\"\n\n\"Damn, guilty as charged\" she said, giggling.\n\nKyla sit up, then leaned down, grabbed Ryan's face and closed her lips over his. Their tongues met, and they abandoned themselves for a few moments to the raw emotions of the kiss. \n\nShe finally let go of him and smiled. \"Thanks.\"\n\n\"My pleasure\" Ryan said, momentarily stunned by the sweet gesture. He then recovered, \"it's better we clean up quick, the room will be full in twenty minutes or so\" he finally said.\n\n___________\n\nKyla finally reached home about three hours later. After work, they left together as usual, and went to their favorite place: That gaming cafe where they had their first (and currently only) date. They played together there, for a good couple of hours, as per their new routine.\n\nIt was her favorite two hours of the day. Sure, the way Ryan blows her mind every time he touches her girl was great, but she often found herself longing for those moments of quiet silence in that dark computer room, where all she could hear was the buzz of the fans, and the clicking sound of buttons being pressed.\n\nShe felt normal in there, not a sex maniac, or a big buff monster that scares everyone away because she gave a slightly unfriendly glance by mistake. Sharing a hobby with Ryan was, well, normal, and made those hours precious.\n\nAfter their gaming trip, she got home. Her parents would be out for a little while still, they had a late call that day at work. She used the opportunity to cook herself a proper meal. Her mother was an exceptional cook, but she liked making only a limited range of dishes, so Kyla had to improvise for some variety. \n\nWhile her body was busy peeling potatoes, her mind was left free to wonder. Soon enough, her thoughts went back to her boyfriend. It still felt a little weird to call him that, it had been so long since she had a steady relationship. Their thing was still young, of course, but it already felt as solid as steel.\n\nInevitably, her mind drifted back to their fun-time after work, and as inevitably, her girl got interested in her current train of thought. It was not long before her poor pants were once again tested by the might of her cock. \n\nOh God, did she just think that? Ryan really was a bad influence on her, now she was even thinking like the stereotypical futanari.\n\nAnd yet a smile crept up on her. She let herself enjoy the memory a bit more, only to add fantastic details, transform the scene, change the sequence. Ryan blowing her while she's lifting weights, while she's cleaning a hallway, she blowing him in a corner of the gym... Finally, the image of her pounding his ass coalesced into her mind.\n\nShe involuntarily bit her lips. That fantasy of hers was growing bolder by the day, but it was something she could not ask him. She would not be another futa just chasing a male ass to fill. \n\nShe looked down at her erection. She sighed. She got to that point, might as well have some fun with it. She put down the potato she was peeling and took out her phone. Having lowered her pants and let free the beast, she snapped a photo, and sent it to Ryan.\n\n\"Thinking of someone\" she added to the message.\n\nA few seconds later, the answer came.\n\n\"Did you just send me a dick pic?\" Ryan asked.\n\nKyla giggled. \"Oh no, wrong number!\"\n\n\"Hey, I didn't say I don't want it!\" He replied immediately.\n\nThat was the start of a weird but fun evening, that Kyla spent sneaking picture after picture of her dick, and tits, and ass, sending them to Ryan, who did the same in return. \n\nThings got so bad that she did not even finish her dinner, an annoyed mother returning from work had to finish herself. When she realized her mistake, she felt terribly guilty, and interrupted her session to come down and help, hard on still straining her pants.\n\nFortunately for her, and them, her mother was not capable of staying mad for long, and as soon as she understood the situation, she let her go.\n\nRight after a speedy dinner, she excused herself and went to her room, to continue. There, she edged herself as long as she could, while keeping her image-fueled chat going. It was past midnight, when she finally stopped, exhausted after several orgasms, and went to bed.\n\nThe day after started in an unexpected way: Their boss called the whole staff to a general meeting. A stern woman accompanied him.\n\n\"Hi everyone! I hope you are all doing fine. I have some news for you: As some of you know I have a degenerative disease that is eating me away. For those of you that don't, do not worry! I am not dying, I'm just... I managed until now, but I no longer feel capable of fulfilling my duties here. Thus I have taken the decision to retire, and leave my place to Evelyn Beckett. She is an extremely talented manager, I am sure you will all love her.\"\n\nShe stepped forward, a cold gaze washing over the fifty or so employees. \"Good morning, I will be your new general manager moving forward, effective immediately. I hope we will have a good time together. You are free to return to your duties, except the squad leaders, I would like to have them in my office now.\" And with that, she left.\n\n\"Bad news\" Ryan said.\n\n\"Really?\" Kyla said. \"She does not seem too bad, and if boss likes her she can't be that bad, right?\"\n\nHe shrugged. \"I hope so, but I don't like her vibe.\"\n\nA week later, Kyla was starting to agree with Ryan's first assessment of the new boss. Of course she was very biased in favor of the old boss, with all the liberties he left her with, but even by normal standards the new boss was damn strict. She and Ryan barely had time to see each other during work hours, and it had been several days since she could relieve some tension with their good old work-out-and-fuck combo.\n\nThat morning, the boss called her to her office. Kyla entered quietly, knocking on the door and going in after no answer came.\n\nThe lady was quietly typing away, and noticed her entrance only after she politely coughed.\n\n\"Oh you're here. Kyla, right? I was reviewing your numbers and I'm confused by all of these medical expenses. You do not appear to have any illness, so why are we spending so much money on medication?\" She said, without batting an eye. Her eyes were drilling a hole in her head. She could feel the weight of her gaze, physically.\n\n\"I-Well, I do... I mean...\" Kyla did not know how to answer. Did her file not mention her condition? \"I do have... Maxwell syndrome, that's what the pills are for.\"\n\n\"Ah-a, sure. And tell me, why are we buying the most expensive pills available for this syndrome of yours?\" She said.\n\n\"W-Well, it's the only ones that work well, ma'am. The rest leaves me too exhausted and depressed to be an effective employee.\"\n\nThe boss took a moment to think. \"I'm sorry but we can no longer afford this. I will respect the agreement you made with my predecessor, for this syndrome, but I cannot justify the expense.\"\n\nKyla's eyes opened wide. She felt herself shrink several feet, deflating into a puddle of nothing on the ground. \n\n\"But I can't afford them! What am I supposed to do?\" She said, summoning all of her strength.\n\n\"I can recommend a good psychologist, one that will not fill you with nonsense and happy pills. Otherwise, as I said, I will respect the previous agreement, you will just have to make due with reasonably priced medication.\"\n\nKyla stood there, speechless, for what felt like several lifetimes. \n\n\"You can leave now. That was all.\"\n\nShe obeyed, or better her body did, her mind shut itself off in the vain attempt to find refuge from the new reality she had now to face.\n\n___________ ___________ ___________\n\nRyan rushed to the bathroom. Kyla just sent him a desperate message. What could it possibly be?\n\nHe reached the place and burst the door open. He looked around, but none was there. \n\nThen quiet sobbing reached his ears, coming from one of the stalls. He carefully opened it and, recognizing his girlfriend, came in.\n\nThe 7'2 amazonian futanari was sitting silently in the corner of the small stall, looking tiny despise barely fitting the small space. Only her quiet sobbing could be heard, a couple of big tears rolling down her cheeks.\n\nSeeing her like that took Ryan's breath away. He felt heavy, crushed under a giant rock that he could not hope to carry. He never felt like that before, and he did not like it.\n\nHe sat beside her.\n\n\"Hey, I'm here\" he said, while caressing her cheek, wiping away the tears. \"Tell me everything.\"\n\n\"Th-\" she tried to say, but her words died in her throat. \n\nLong silent seconds passed before she spoke again. \"The boss took away my pills.\"\n\n\"She did what?\" He said, a fire exploding violently in his chest. \n\nIn the time spent with her, he leaned a lot more about her condition, and how important those drugs were to her. How could their new boss do something like that? It was just cruel.\n\n\"How could she? I mean can she even? Is this legal? My uncle is a good lawyer, I'll ask hi...\" he stopped. His girlfriend was not listening, she was lost in her own thoughts. No, she was just lost. And what was his stupid ass doing? Complaining. \n\nHe got closer to her, then he gently brought his hands over hers and looked at her in the eyes. And then he stood there, joining in the silence, until she lifted her gaze off the pavement, and onto his eyes. \n\nHer eyes were desperate, tired, the farthest thing he knew Kyla to be: that giant ball of endless energy and awkwardness.\n\n\"It's going to be ok. Believe me\" he said, slowly, without ever moving his eyes from hers. \"We'll find a solution.\"\n\nOnly then Kyla finally reacted. She threw her muscular arms over his shoulders and hugged him tightly.\n\nCompletely engulfed into the wide frame of her girlfriend, he could do little but return the hug as best as he could.\n\nTwenty minutes later, they finally left the stall. \n\n\"I'm sorry I called you here, I'm-I'm acting like a little girl\" she finally said.\n\n\"Nonsense, you did the right thing\" Ryan replied, giving her a friendly smack on the shoulder. \"How are you feeling?\"\n\n\"Better, better\" she said, even with a timid smile. \"I'm just... worried. Without the benefits from the job I cannot afford my pills, and without them I cannot work. I don't know, maybe I can take half a dose for now, stretch what I have as long as possible\" she said looking at him again, looking for approval.\n\n\"I don't know, I'm no physician. We can try, worst thing that could happen is that you'll have to go home early, right? But what about long ter-Ah nevermind, we'll figure it out.\"\n\nKyla looked at herself in the mirror, her hair all ruffled up and her makeup messed up by her tears. \"Oh God I look terrible.\"\n\n\"Ah!\" Ryan said, smiling. \"Even like this you're the most beautiful woman I have ever seen, and never forget it!\" He said, while trying to fix her hair with his fingers, operation made difficult by the foot and a half of difference in height. \n\nHis comical attempt made Kyla giggle at the very least .\n\n\"Listen\" he said, \"This is what we'll do now: We take the day off and have some fun for ourselves, what do you say?\"\n\n\"B-But, shouldn't we... I mean I am on thin ice, now, aren't I? Is it wise?\" She asked, with a whisper.\n\n\"Is it wise to keep you here to slowly stew neck deep in problems? Time spent enjoying yourself is never time wasted. We're going to make you able to work tomorrow, see it that way,\" Ryan said. \"And in any case, I'm not taking no for an answer.\"\n\nShe timidly smiled. \"I guess it makes sense.\" After a second of silence, she hugged him. \"Thanks.\"\n\nRyan wanted to answer, but couldn't, no air was allowed in his lungs, his ribs were barely able to resist the affectionate assault. But he did not mind.\n\nHalf an hour later, they were both in his car, driving away. His little vehicle, passed down from father to brother to him, could barely accommodate Kyla, the poor futanari was forced into what looked like a very uncomfortable position, but she assured him it was fine. When you are 7'2, you had to get used to stuff like that, most likely. \n\n\"You still haven't told me where we're going,\" Kyla said.\n\nHe glanced at her: She was offering him a timid smile, but the bad news still weighted heavily on her.\n\n\"We're going to a place I used to go often. You'll like it, I'm sure, it's a good exercise.\"\n\nThey slowly left the city behind. About half an hour later, they were out, climbing the hills surrounding the urban center. Then, a quarter of an hour later, they finally reached the place.\n\n\"What is it?\" Kyla asked, looking around confused.\n\n\"It's a private park used for outdoors sports and activities, but most famous for its obstacle courses. A friend of my brother works here as a manager; he's a good guy, always got us inside\" Ryan said, taking a bag out of the trunk.\n\nThe smell of grass, wood, and mushrooms filled his nostrils. He pushed Kyla forward towards the entrance, where a slightly overweight man with a horrible yellow cap stopped them.\n\n\"Well, if it isn't Ryan. I'm assuming you have a reservation?\"\n\n\"Hey Bill,\" Ryan coughed, \"Well, no I don't, but I was hoping we could squeeze in?\"",
        "He raised an eyebrow. \"And why do you think I would allow that, considering what you did last time?\"\n\n\"Wh-What did I do last time?\" Ryan said, gulping.\n\nBut then the man smiled, \"You left without saying goodbye, you dick!\" He said, slapping his shoulder. \"Come on in, I was just kidding.\"\n\n\"Oh thank God, I was...\" He glanced at Kyla, \"Oh, this is my girlfriend.\"\n\n\"Wow, lady! How's the weather up there?\" He said, laughing. \"Ah, I'm sorry, it was terrible, I'm terrible. Of course, come in too.\"\n\nBill accompanied them to the locker rooms and left them.\n\n\"He seems... nice\" Kyla said, as they finished getting ready.\n\n\"Bill? He's an idiot, but he's got a good heart. The only friend of my brother that I actually like.\"\n\nHis trail of thoughts was lost when he looked at his girlfriend: She was in a pair of shorts, t-shirt, gym shoes, and protection for knees and elbows, plus a small helmet. Her incredible legs and arms were left exposed, as well as a bit of her midriff, leaving him to stare at her muscles in awe.\n\nKyla, feeling his eyes, blushed, smiled, and got into a bodybuilder pose. She soon let go, however, embarrassed, and fearing her big girl could wake up. \n\nNot that Ryan would mind, but in those shorts, everyone in the park would be able to see everything. \"W-Well, you're ready?\" She asked, to break the silence.\n\n\"Yes, yes, sorry\" Ryan said, shaking himself off the horny stupor he was falling into.\n\nOutside, they found Bill. He looked at Kyla, then elbowed Ryan \"Damn, how many beds do you go through in a night, you two?\" He laughed alone again. \"Ah sorry, sorry, I know. Anyway, I don't have much to offer unfortunately; a red course is free now, otherwise you'll have to wait an hour for a yellow one.\"\n\n\"A red? Damn... Well, we'll take it\" Ryan said.\n\n\"All right, number 13 is yours. Good luck\" Bill said, and then left.\n\n\"What did we take exactly?\" Kyla asked.\n\n\"An obstacle course. They have a series of paths in the forest with obstacles, climbing segments, ropes, ponds, it's a lot of fun and a great way to get some adrenaline pumping. I used to come here often, before I got a stable job.\"\n\n\"Oh\" she simply said. \n\n\"You don't like it?\"\n\n\"What? No, no, I just... did not expect it. Frankly I was not sure what to expect. I'm sorry, I'm a mess today.\"\n\n\"Hey hey, look at me,\" she did so, \"We're here to fix that, all right? Just try to have fun, I know you will love it.\"\n\nShe took a deep breath. \"All right, yeah. I will.\"\n\nThey were at the beginning of the course number 13, the sign ominously painted bright red.\n\n\"Ok, the course is pretty straightforward, you shouldn't have trouble following it, and if it does happen there are ropes delimiting the area, so you cannot get lost even if you tried. Oh one last thing!\" Ryan said, as he gestured her to get closer.\n\nShe leaned forward a little, just enough for Ryan to spring his trap: With a little jump, he brought his hands behind her neck and pulled her down, their lips met and their tongues danced together.\n\nThen, he let her got. \"Last one pays for dinner!\" He screamed and started running.\n\nKyla, stunned, took a moment to recover, but then threw herself into the chase. \"You little... You tricked me!\" She said.\n\nThe hunt was on. Ryan expertly weaved through the trees and the waist high obstacles of the first part of the course. Then it came the long horizontal poles that you had to walk on. His balance was never great, but he was doing all right with them.\n\nUnfortunately, he could hear Kyla getting closer and closer. He got a head start and he had the advantage of knowing the course, but he could not hope to compete with her strength and stamina.\n\nRyan climbed a ladder, that brought him halfway up a tree, where a rope connected the platform he was standing on to another one on a nearby tree. He secured himself and began sliding down. And again the same from the new tree to a third one. Then it came the mud-jumps section, as he called it: A series of poles sticking out of a large pond. He started jumping from one to another. \n\nWhen he finally reached the other side, he turned around to see how was Kyla doing, only to see her land beside him. A large smile on her lips.\n\nShe moved forward without stopping, leaving Ryan behind. He quickly recovered and gave chase. Unfortunately, the part he hated was coming up: A climbing section, up the surface of a large rock, where supports have been drilled into. \n\nFortunately for him, Kyla lost her advantage when she chose a bad path up the rock. Ryan exploited the fact by launching himself up, and climbing quickly. He got up at record speed. \n\nHe took a moment to recover his breath, but that would prove to be a fatal mistake: He turned around to see Kyla bending her knees and then jumping up. Her tremendous strength propelled the giant futanari up and up, to the halfway point of the nine foot tall rock. From there, with apparently no effort, she jumped again and reached him.\n\nMouth agape, Ryan said: \"No fair!\"\n\nKyla stuck her tongue out and ran away.\n\nTwenty minutes and many obstacles later, they reached the end. Kyla easily won, as he expected. \n\nWhat he did not expect was being out of breath. He really let himself go those last few years.\n\nTo his surprise, even Kyla was a little winded, though she looked like she just got through a warm-up rather than a full obstacle course.\n\n\"Well,\" he breathed \"you got me, fair and square.\"\n\n\"Ahhh you just let me win\" she said, with a knowing smile. \"But you were right, that was fun.\"\n\n\"And we still have some time before having to go, but...\" he said, getting closer to her, \"winner deserves a prize.\"\n\nKyla took a step back, her cheeks reddening. \"A-And what did you have in mind? I mean, we are in a public park.\"\n\nRyand did not say anything, instead he dropped down on his knees, bringing down her pants with him. Kyla's mighty cock sprung free. She leaned against the tree behind her, for emotional support.\n\nRyan began caressing her long shaft, feeling the heat increase under his skin as her dick got harder and harder. He gave a kiss to her glans, then another to her shaft, and then another one. He reached her large balls and began planting kiss after kiss on them. Kyla bit her hand to suppress her moans, but their muffled sound still reached Ryan's ears.\n\nBetween Kyla's muscular legs, pumped up by the obstacle course, Ryan was in an inferno of heat and sweat. Droplets of salty water were rolling down her smooth skin, while her arousal kept growing. Now at full mast, her ten inches stood proud above him.\n\nHe left his fingers to tease her shaft, while he got behind her balls and began pressing his face against her vagina. Female juices ran down his cheeks, while pre-cum lubricated his fingers, going up and down her cock.\n\n\"Fuck! Fuck...\" Kyla said, her limbs trembling. Ryan stuck his tongue out as far as he could and dug into her folds. With experienced movements, he began licking, sucking, and twirling around his tongue. Kyla's hips began moving on their own, slowly fucking his hand as if it was a fleshlight.\n\nMore and more fluid rolled down his face, as Kyla's arousal grew and grew. His tongue was starting to get tired, and his muscles were protesting because of the uncomfortable position, but in the haze of heat, sweat, juices, and cum, his brain was unable to think of anything but pleasing the futanari above him.\n\nKyla's movements became more frantic and desperate. Her hand no longer suffocated her moans. Her fingers wrapped around his own, and pumped up and down her hard cock. Ryan could feel her heartbeat getting faster through her muscles, while the walls of her vagina pulsed with hunger around his tongue.\n\n\"Ryan! Ryan, fuck! I'm about to...\" And then it happened. With a desperate grunt, Kyla came. Her cock throbbed with power and released a long stream of thick white goo. Her pussy clamped down onto his tongue, almost painfully so, while her inner walls twitched in the ecstasy or release. \n\nHer muscles shivered, her knees lowered down, unable to support her mighty body, prey of her climax. Ryan, merciless, kept servicing her, delivering as much pleasure as he could.\n\nWhat felt like hours later, Kyla's cock finally declared itself satisfied. The dirt in front of her was coated with a thin layer of cum, its powerful odor mixing with the sweet smell of the forest. Ryan resurfaced from below her, his face completely covered in fluids.\n\n\"Jesus Christ, Ryan\" Kyla said, as she slowly let herself slide down the tree behind her, into a seated position. \n\n\"Hey what do you think you're doing?\" Ryan said, while recovering his breath, \"No time to rest, I want a re-match.\"\n\n___________ ___________ ___________\n\nKyla finally got out of the shower. With a large towel around her, she got into the locker room, where Ryan was almost finished dressing up.\n\n\"Oh, you're done, good\" he said.\n\nShe sat down near him, admiring for a moment their height difference. Even from a seated position she still towered above him. \n\nShe would never admit it, but she was starting to like it; most of her previous partners were on the tall side, rarely as tall as her, but in the same category. Ryan was not.\n\nWell, that was a bit unfair to him: He was not short, futanari were just taller in general, and she was a desperate case.\n\nThe introspective moment brought back into her memory the news she received that morning. She had to give it to him: He managed to make her forget, for a while; it gave her time to put her thoughts into perspective.\n\nThe fear in her heart of being reduced to an animal fueled only by lust by her condition was still great. She did, however, imagine herself living with Ryan, with no pills to filter her crazy biology. All the things she could, and would, do to that sexy body of his. Would he like her other self? The sex-crazed animal one?\n\nShe shook her head. That was a dangerous train of thought. And yet, there was no stopping her imagination.\n\nShe placed her arms around his shoulders. \"Thanks, Ryan.\"\n\n\"For what?\" He said.\n\nShe stood up without saying anything else. \n\n\"You know, second place deserves a prize too in my book\" she said, and undid the buttons of his jeans, exposing his malehood.\n\n\"Uh, w-well, I...\" he said. \n\nHe was so eager to please her, and yet he got so shy when she returned the favor. Damn he was too sweet.\n\nWithout warning, she got her hands under his soft butt and lifted him up, getting herself to a standing position.\n\n\"Whoa! Careful!\" He said.\n\nBut Kyla did not listen. Her arms had no trouble supporting Ryan's weight. She brought him up, his groin in line with her face. Then she put his legs on her shoulders and her mouth made contact with her objective.\n\nHis dick was half-soft, but rapidly growing harder. She put both his balls into his mouth and sucked on them for a little bit, while Ryan wrapped his arms around her head.\n\nShe took his cock into her mouth. His six inches hard under her tongue. She was not an expert in oral sex, her partners were usually interested in another part of her body, but she was determined to make it good for him.\n\nAnd good she did: Bobbing her head up and down, she took his cock in and out, massaging his skin. Then, she pushed him against her and got his glans into her throat. \n\n\"Damn, Kyl-\" Ryan said, before his lungs lost the capacity to breathe. His fingers grasped her shirt on her back. The taste of his precum invaded her mouth.\n\nIn no time, she felt his cock twitch in desperation. Then, soon after, the first spurt came. \"Fuck! I'm c...\" Ryan tried to say, but his lungs refused to work again. His load was delivered to her awaiting mouth, spurt after spurt, until he finally calmed down.\n\nKyla swallowed and smiled. \"Enjoyed yourself?\" He whispered a yes.\n\nHe finally put him down and went to her locker to dress up, determined to enjoy that day to the fullest extent. There would be many more days to wallow in self-pity. \n\nA few minutes later, they left the park and went back to the city. There, they had a few sandwiches for lunch, and moved forward to the second activity Ryan somehow planned on the fly. How? Hell if she knew.\n\nShe never considered herself dumb, but sometimes her boyfriend really did make her feel like a meathead. Not that he did it on purpose, he just did not understand not everyone had his smarts.\n\nAn hour or so later, after a quick trip home to get some appropriate clothes, they got to their second destination: The hot springs. It was a beautiful complex just outside the city, with numerous indoor and outdoor pools, as well as saunas.\n\n\"Tell me the truth,\" Kyla said as they entered \"You brought me here only because you want to see me in a swimsuit.\"\n\n\"Well...\" He said, faking a cough, \"let's say it might have been a tiny factor that played a small role in the decision.\"\n\nKyla smiled and ruffled his hair. \"You're cute when you're lying.\"\n\nTruth be told, she did not enjoy getting into a swimsuit that much. Having her giant body exposed made her feel vulnerable, especially since, in the past when her condition was not being treated properly, wearing one guaranteed incidents. \n\nShe was not as enthusiastic of the place as she had been about the park. That park was amazing! And Ryan's performance in their little competition was not too shabby either. She did slow herself down to admire his butt for a while, but for a self-professed lazy nerd, he did all right.\n\nAs they crossed the building's entrance, she convinced herself this time it would be different. She was not that same kid anymore, and she was with her boyfriend, incidents could happen and people would not give it much of a thought: Futanari sporting erections around their significant other was almost acceptable those days. For once, stereotypes played in her favor.\n\nThey found the locker rooms and went their separate ways. The futanari room was almost empty, just a couple of girls in a corner gossiping. Without much fanfare, she changed herself.\n\nJust before going out, she saw her reflection in the large vertical mirror near the exit: It had been a while since she checked her physique. \n\nShe was wearing a two piece swimsuit, leaving most of her skin bare. She observed her muscles, rippling under her skin, her head cut off by the mirror, too short for her height, her boobs, modest but soft and perky, her feminine hips, and her voluminous package.\n\nShe flexed a bicep, admiring its mass and hardness. She was never in love with her muscles, they were mostly a fortunate side effects of her overcharged biology and a lucky synergy between physical exercise and her condition; and yet ever since she had become a stable thing with Ryan, she did start to truly enjoy what she had built. \n\nHe liked her. She had to be a little sexy then, right?\n\nMore importantly, Ryan liked all of her. Many of the people she had been with before fetishized her height, or her strength, or her condition, but their attraction stopped there: the rest of her was merely a vessel to carry what they were really interested in. Not Ryan, he actually enjoyed her presence, he chooses to be with her, without needing anything in return.\n\nShe left the locker room with confidence, and looked around for Ryan. Not seeing him, she got in front of the men's room and waited there.\n\nA few minutes later, a couple of futanari came from behind her. \"Hey! Look! She Hulk's here. You looking to club a male on the head and bring it back to your cave?\" A blonde futa said, while her friend choked on her drink.\n\nStartled, she looked at them, then turned around. \"I-I am not!\" Kyla said, looking away.\n\nBut they had a point, she did look bad standing there, as if ready to assault anyone coming out of the door. Maybe she should have stayed farther away. She should move, yes.\n\n\"Here you are!\" A male voice said. Kyla turned around and saw Ryan getting out of the door.\n\nHer boyfriend was only wearing a small pair of briefs, that left pretty much all of himself bare. He had the body of a lean swimmer: slim, with some muscles hidden beneath a thin layer of softness, and little body hair.\n\nHis figure was clearly masculine, but with its edges smoothed and polished. She had to suppress the urge to just take him and kiss him against the wall.\n\n\"Oh, a victim! You want a hand against the gorilla, little guy?\" The futanari from before said.\n\nKyla gulped and looked away, ashamed of her long staring. She was essentially proving those two vipers right.\n\n\"Hello!\" Ryan said. \"Sorry ladies, but I'm afraid I'm taken. Don't worry, though, I'm sure you'll find someone somewhere\" he added, offering a polite smile.\n\nHe then took Kyla's hand. \"Come on, let's go.\"\n\n\"Yeah sure bud! Blink twice if you're in danger!\" The futanari replied, but her voice had lost some of its smugness.\n\nThey finally got into the pools. Kyla submerged herself. The warm waters felt wonderful against her skin, soothing her muscles, loosening knots in her body. \n\nIt was a weekday so the place was not crowded at all, they had a lot of space for themselves. Relaxing her muscles completely, she left her body float. \n\nOr better she tried, the last time she did that she was a small girl, now her mass was far too great for her to float. Giving up, she decided to lean against the wall of the pool, and let her body relax.\n\nRyan was doing much of the same, just enjoying the moment, with the sun warming up their faces, and the water the rest of their bodies.\n\nShe finally had a moment of peace. And so she drifted into a half-sleep state, lazily admiring the surroundings with complete disinterest.\n\nHer peace was interrupted some time later, when she felt something against her hip. At first, she ignored it, she was feeling too comfortable to move, but it insisted. She finally looked down, but she did not see anything other than her own body.\n\nThe tingling came back, but this time, Kyla shot a hand down towards the source of the annoyance, sending splashes of water all around her. Her fingers wrapped around something squishy. She pulled it up, only to discover she just fished her boyfriend's arm.\n\n\"Hey Kyla! How are you doing?\" Ryan said, without looking her in the eyes.\n\n\"Is everything all right? Was it you?\" She asked, confused.\n\n\"Ahm, me? No. No it wasn't.\"\n\nKyla raised an eyebrow. \"And what was I referring to?\" She said.\n\n\"Ahhwell\" he tried to say, \"Fine, it was me. I was trying to pull your swimsuit down and get... you know... the girl some sneaky action.\"\n\n\"Really? Out in the open? Here? Underwater?\" Kyla said, giggling.\n\n\"Well, there's none around us. Also I was curious to see if I could.\"\n\nCould he? Now Kyla was curious too. Without saying anything, she quickly lowered her briefs, letting her cock float freely and happy in the water.\n\nRyan, blushed, smiled, and submerged himself.\n\nSoon enough, she felt his hands on her shaft, electric jolts of pleasure traveling up her spine. She never met anyone so happy and eager to perform oral on her, to the point she genuinely felt bad for not reciprocating enough, but Ryan seemed to get some kind of special satisfaction from getting her dick to explode in his mouth. Little by little in those weeks, he ground her resistance down, and now she pretty much let him do whatever he wanted with her cock.\n\nStill, doing it underwater did not feel entirely right. The sensation was pleasant enough, and the warm waters added an extra level of comfort that made each movement surprisingly pleasant, but the drag of the water made everything too slow and sluggish, which made it impossible to get a good rhythm.\n\nSoon after, she felt the tip of her dick getting into his mouth. She gasped, surprised. \n\nThe first moment was always fantastic. She was usually worried to hurt her partner with her big girl, but Ryan was used to it at that point, so there was little worry. Instead, she got a perverse jolt of satisfaction feeling his lips strain to contain her dick.",
        "God, he really was a bad influence on her.\n\nAs little sparks of pleasure shook her body, she began daydreaming, about her boyfriend blowing her at home, in his car, at work. She imagined herself asking him to do it anywhere she wanted, getting more and more aroused by the idea. And the she began imagining herself forcing him down, chocking him on her length. And then there, at the pool, forcing him underwater to service her.\n\nSuddenly, Ryan resurfaced to breathe, taking her out of her haze. \"Ahh, sorry. I don't think I can do it\" he said.\n\nShe timidly smiled, \"It's ok, baby.\" She leaned over and kissed him. \"It was a long shot anyway\" she added, pulling her panties up again.\n\nSuddenly, she recalled her daydream. A shiver run up her spine. She shook her head. What was that about? That was not her, she was not a bully, she would never do that! To him of all people!\n\n\"You ok?\" He asked.\n\n\"What? Yeah, yeah, sorry, I was just getting a little sleepy.\"\n\n\"Aww, was I doing that badly?\" He asked.\n\n\"No, no, silly\" she said, shaking her head. \"It's just the water and the sun, I'm just very comfortable right now.\"\n\n\"Fine, fine. All right.\"\n\n___________ ___________ ___________\n\nAfter a few hours of melting into the warm waters, they decided to leave.\n\nBut Ryan had one last surprise: He somehow managed to get a reservation for the evening at Newhall, a local and well renown restaurant.\n\nRyan left her at home to get prepared. \n\n\"Hey there! Where have you been all day?\" Her mother asked.\n\n\"We've been...around\" she said, immediately realizing she just admitted she was with Ryan. \"Sorry, I gotta go! We'll talk later!\" She added.\n\nShe rushed up the stairs and reached her room. There, she threw an outfit together. She was not exactly an expert in fashion, but she did her best.\n\nShe went for a casual style: Ankle length tight jeans, a short shirt that left part of her midriff bare, and her white sneakers. It was a little unusual for her to go for clothes that would highlight her physique instead of concealing it, but she was going out with Ryan! He liked her muscles, and she was getting less and less worried about showing them off.\n\nShe proceeded with makeup and hair, but she could not get them right. \n\nAfter a few failed attempts, she admitted defeat. \n\n\"Mom! Could you give me a hand?\" She asked, from the stairs.\n\nA few seconds later, her mother appeared. \"Why? I thought you were in a hurry.\"\n\nKyla sighed. \"I'm sorry, I should have said something. But I really am in a hurry.\"\n\n\"Fine, fine\" she said, walking up the stairs. \"But you better bring that boyfriend of yours here more often.\"\n\nWith the expert help of her mother, she managed to get ready in a jiffy. And a few minutes later, she was outside, waiting for her ride.\n\nRyan arrived just a few moments afterwards, with almost perfect timing. With a pair of dark blue trousers and a short sleeved dress shirt, he was looking quite good.\n\nHe got out of the car and opened the door for her, with an exaggerated bow. \n\n\"Ladies first.\"\n\nKyla, smiling ruffled his hair and gave him a quick kiss, then got in. They were finally off.\n\nNewhall was a modern restaurant, from the architecture to the choice of tablecloth. Clean lines, strong colors, and white light dominated the environment. \n\nThey found a place to sit down and ordered their dinner shortly after. As usual, Kyla ordered food for three people and Ryan for barely one. \n\n\"And that's for food, can I bring you something to drink in the mean time?\" The waitress said.\n\n\"Nothing for me, I'm driving\" Ryan said.\n\n\"Beer for me\" Kyla added.\n\n\"All right\" The waitress said said, then added: \"I must say, you are a very cute couple.\" She looked at Kyla, \"He's a great catch. I hope you're making use of that cute butt, sister.\"\n\n\"Ehm...thanks\" Kyla said, turning tomato red immediately. \n\nThat traitor of her boyfriend, instead of defending his male honor, laughed together with the waitress.\n\nDrinks arrived shortly after. She was feeling particularly relaxed that evening, which lead to her drinking more than usual.\n\n\"So, I bet you did not expect me to do something that sporty, uh?\" He said, referring to the obstacle course.\n\n\"I did not, you got me. I also did not expect you to try to blow me in a public pool, you bastard. I'm the futanari, you know? I'm supposed to be the deviant one.\"\n\n\"I don't recall you trying to stop me\" he said, with a very innocent looking smile. \"And the jury is still out on you being or not being a deviant.\"\n\n\"Oh really?\" Kyla said, feeling a little defensive, but intrigued nonetheless.\n\n\"Well, let's investigate: Do you watch porn?\"\n\nKyla almost spilled her drink. \"Well, ye-I mean it's the twenty first century, who doesn't?\" \n\nHis smile grew wider \"Oh, what kind?\"\n\n\"N-None of your business, boyfriend\"\n\n\"Ouch\" he said, theatrically gripping his chest with a hand. \"But I'm still curious.\"\n\nThe moment was interrupted by the waitress bringing in food. The conversation drifted off from there, but after a few more drinks, it was Kyla the one that went back to it. The alcohol was really getting to her head.\n\n\"I do... I do watch futa-male porn. There's a lot of hyper-aggressive stuff that does not interest me, but occasionally you find something decent, where both look like they had a good time.\"\n\n\"Makes sense, it is one of the most popular categories. A friend told me, of course\" he said, with a perfectly flat tone that made Kyla almost believe him for a second. \"You like to try something you saw?\"\n\nKyla gulped. She did have something she wanted to try, that she really wanted to try, but was Ryan the kind of guy that liked it? She really did not want to be her gender's stereotype, but...\n\nShe downed what was left of her beer. \"Well... they do look like they have fun in those videos\" she managed to say.\n\nAfter that sentence, they remained in silence for a while, digesting each other's words, the implications floating in their thoughts.\n\nA little later, they finally decided to leave.\n\nThey made it to the car and Ryan drove towards his home. The conversation had not left their thoughts for a moment. During the ride home, the atmosphere got heavier and heavier with unspoken desire. They barely exchanged words until their reached Ryan's apartment.\n\nThere, they quickly made their way upstairs, Kyla's steps were a little imprecise and uncertain due to her intoxication.\n\nAs soon as Ryan opened the door, Kyla reached her tipping point. She got in behind him, then put her hands on his shoulders and pinned him against the wall.\n\n\"Whoa, Kyla. You all right?\" He asked, offering a smile, sparks of worry and lust filling his eyes.\n\nKyla did not answer, instead she closed her lips on his and invaded his mouth with her tongue. She let herself go to the sensation.\n\nWith a sudden movement, she brought her hands down to his sweet, soft butt and pushed him up, so that he was at eye level.\n\n\"I love you\" she said.\n\n\"I love you too\" he replied.\n\n\"I...\" she took a deep breath. \"I want to fuck you, I want to pin you down and fuck the life out of you.\"\n\nRyan gulped, but then smiled, \"I know.\"\n\n\"I know it's not what you want, that I'm just another stupid futa chasing an ass, and-Wait, what did you say?\"\n\nHe smiled again. \"I know. I've been training myself for it. I wanted to do it as a birthday gift, but I guess there's nothing wrong with opening the gift early.\"\n\n\"You did?\" Kyla said, eyes wide open.\n\n\"For a while I was not sure you were even interested, but I think I got it right\" he said, with a smirk. \"Wait here\" he added then, gesturing for her to let him down. \n\nShe obeyed, and he left, only to return a couple of moments later with a large bottle in hand.\n\nWithout saying a word, he took her pants down, exposing her half-erection. Her gave a long lick, from bottom to top of her long shaft, causing her legs to shiver in delight.\n\nHe used his hands to get her dick fully hard, then he began spreading lube all over it, coating it with a generous amount.\n\nThen he stood up and looked at her. Kyla was never as aware of their size difference as that moment: His eyes were in line with her nipples, if he stepped forward he would be able to hide under her boobs; his torso was barely wider than her powerful thighs, and his legs were thinner than her arms. She felt big, really fucking big, but for the first time in her life she did not see it as a handicap, or a problem to deal with: She was enjoying it. No, she was aroused by it.\n\nGod, he was such a bad influence on her.\n\nNo longer able to contain herself, she lifted him up and kissed him. Her dick was resting between his legs, feeling thick and powerful against his butt cheeks. She brought him to bed and put him down. \n\nHe turned around, exposing his behind to her. His delicious hole bare in front of her. \n\nShe started massaging his anal ring with her fingers, then stood up and aligned her cock with his anus.\n\nAnd finally, she made contact.\n\n\"Fuck\" he said, feeling her cockhead pushing against his hole.\n\nBut Kyla did not hear him, she was in her own world. Drunk on alcohol and lust, she was barely capable of holding herself back.\n\n\"I'll...\" she said, between lustful breaths, \"You're doing great, sweetie.\"\n\nShe started pushing. There was resistance at first, a few grunts of pain from Ryan, but she slowly made her way inside.\n\n\"Shit, this feels so weird\" he said, as more and more of her inches disappeared into his hole.\n\nAnd then, she finally bottomed out, she got her entire monster in.\n\nIt was so incredibly tight. Her girl was being massaged on all sides by Ryan's inner walls. \n\nThe sensation was so strong that her legs failed to support her weight: She collapsed on her boyfriend, burying him completely under her huge frame.\n\n\"Fuuuck...\" she whispered, her breathing heavy and labored. \n\nShe forced herself up a little. Her boyfriend was still completely pinned under her, his head buried beneath her boobs, unable to move even if he wanted. She looked behind her, and the only visible part of Ryan were his feet, poking out from between her huge legs. Her cock throbbed inside him.\n\nShe started thrusting her hips against him, getting a few inches of her cock out each time, only to force it in again. \n\nShe was lost in bliss, her world was melting away, her vision was getting fuzzy, while her mind shut down. Only one thing remained: Pure, undiluted pleasure.\n\nHer rhythm picked up, her thrusts became faster and more aggressive. Deep inside her, pressure built up. With each hump, sparks of pure electricity radiated from her groin. Her muscles rhythmically tensed up. Her heart beating faster and faster.\n\nAnd yet the sensation kept growing, pleasure kept increasing, pressure kept building up. Her thrusts went from calculated, to frantic, to desperate. The bed groaned and creaked with each one of her movement, undulating back and forth with her massive body. Moans of pleasure left her lungs, making Ryan vibrate under her.\n\nThe pressure built up. And then finally, the dam broke. A rush of pure pleasure filled her body instantly, a tidal wave invading every one of her cells, tearing down any obstacle. Her brain was completely flooded, unable to process anything but overwhelming bliss.\n\nShe pushed herself in deep as much as possible. Her dick twitched angrily, then the first spurt came. Ryan was still tight around her girl, so she could feel in detail her cock inflating and shooting her cum deep into his insides.\n\nShe took a few inches out of his ass, and slammed it in again, to deliver another massive load. And then again, and again. She could feel Ryan's bottom shift to accommodate the torrent of white liquid. But her climax kept going, her balls kept working, delivering more and more cum, until, an eternity later, it finally ended.\n\nHer hips kept moving on their own even after the orgasm died down, just to get all the pleasure out of it as she could.\n\nFinally, exhausted, she collapsed on top of him. \"Fuck me, that was incredible\" she said.\n\nA muffled sound came from under her. She shifted her weight, so that he could move, and talk.\n\n\"We broke the bed\" he repeated.\n\nMouth agape, Kyla looked down. Indeed, the frame of the bed was in pieces around them, the mattress was resting against the floor.\n\nDid... did they do that? And not even realize it?\n\n\"Shit...\"\n\nShe carefully took her cock out of him, still semi-hard. Cum leaked out of his abused hole almost immediately.\n\nShe stood up, finally letting Ryan move freely. He turned around, slowly, shivering.\n\nWith the crazed pleasure filled haze of her orgasm dissipating, she suddenly felt her chest heavy. \"Did I...Are you ok? I didn't hurt you right?\"\n\nOh God, what had she done? Every time, every time! Every time she has a good thing going, she ruins it with her stupid gorilla body and gorilla mind.\n\n\"I'm fine. I'm fine. I'm just, a little winded\" he said, while struggling to move. \"I did not expect it to feel so good. Well, at first it was... painful, but then it was not!\" he added, with a smile. \"Do I still have my legs attached?\" \n\n\"Don't joke about it!\" She said, while trying, and failing not to smile as well. \n\nShe took a deep breath; God was she lucky that everything was fine. \"I should have been more careful. I am so sorry.\"\n\n\"What? You fucked me so good, I was seeing the heat death of the universe. You did nothing wrong.\"\n\n\"I didn't?\"\n\n\"Nu-uh\"\n\nShe took a deep breath. \n\nThat was indeed a good fuck, one of the best she ever had if not the best. God, he looked so hot just standing there, half undressed, shivering, with his hole leaking her cum...\n\n\"So...\" she said, while her girl woke up again, \"Does that mean we can go for another round?\""
    ],
    "authorname": "Hexall",
    "tags": [
        "futanari",
        "amazon",
        "size difference",
        "romance",
        "futa",
        "muscles",
        "futa on male",
        "futanari on male",
        "anal",
        "oral"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/love-training-pt-02"
}