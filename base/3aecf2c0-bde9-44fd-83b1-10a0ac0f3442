{
    "title": "My Only Talent Ch. 21",
    "pages": [
        "Chapter 21\n\nThe Marathon Man: Finished? \n\nNote: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. \n\nWednesday marked the start of the last three days of class for this semester, and then there would be two official 'no class days' before final exams kicked off next Wednesday. Oiler, who was developing a nasty habit of forwarding supposedly humorous emails to a 'recipients undisclosed' distribution list that included me and other unfortunates, sent one this morning saying that in College Station, every day was a no class day! \n\nSuzanne and I would run today at lunchtime, a full fifteen miles with a longer sprinting finish according to the official Pliskin Pre-Marathon Physical Training Plan that she had developed for me. I tanked up at breakfast, as always, anticipating no lunch and doing the run instead. As I had diligently since Saskia gave it to me, I entered everything into the exercise and food diary app on my phone. It found the physiology department servers via Wi-Fi or a cell site wherever I was and kept them instantly updated. It was easy to use, and had drop down lists with all the dorm food and almost all commercially available foods built in. My classes were all review for the exams, but in Rhetoric and Composition there was no exam and I had already turned in my final paper. Sarah was there: she smiled at me vacantly but said nothing. I kept having the feeling that I had forgotten something important, but I checked my do to list and all my class prep notes and didn't find anything left hanging. Still, there was that vague feeling.\n\nIn Engineering 101, Professor Lillehammer led a brief review of the entire course, which in his mind also covered the entirety of engineering thought and the history of man, and then did ten minutes on choosing an engineering discipline for those that had not yet done so, with a few pointed looks at me. After he dismissed class he asked me to stay for a moment and reminded me that I needed to turn in the paperwork for the 'distributed engineering education' program by the last day of class. I told him that I already had. He also said that with the program's normal schedule that meant I would work this summer and then I would also have to work rather than attend school next spring semester and then do summer school, and that scheduling all my required classes became more difficult because of pre-requisite requirements and fewer course offerings in the summer, so finalizing my major soon was even more imperative. \n\nI went up and quickly changed clothes, wearing my cold weather running gear even at mid-day because it was pretty chilly out. Suzanne looked ravishing in her all white with stockings running outfit, and we started toward the track. \"Let's do the Town Lake Loop instead, my Animal, because the track is a little bit boring by comparison.\" \n\n\"Nothing is boring when I am with you, Suzanne.\"\n\n\"Oh, my! Cold weather must make you extra charming.\" She affected an exaggerated southern belle accent. \"Be still my heart. My heavens, this smooth talking gentleman may make me swoon!\" We went south on Lavaca, weaving our way through the traffic on the street and sidewalk. \n\n\"And then he will have his way with me! I will be a just another poor defenseless young girl, forced to give in to his animal nature and unnatural desires!\" This outburst got us a few sideways glances from other people near us. \n\n\"I'm pretty sure most of my desires are pretty natural, beautiful, but I'm not so sure about yours.\" We crossed First Street and turned east, taking the little ramp down and then running under the 'bat bridge'. All the bats were in Mexico, and I was beginning to wish I was too. I glanced over, and she had a smug and satisfied look on her face like I had just walked into her trap. \n\n\"So let's review, my Animal. It's perfectly natural for you to want and to have two or three girls at once, as I have seen you do enthusiastically several times, but it's unnatural for me to want to try having two guys even once? I have to admit you do it pretty well, so I really can't fault your performance in such a situation. But I like to think I would be good at it, too! In fact, I think I would be very, very good at it!'\n\nI didn't doubt that either, damn her eyes, but I really didn't want to think about it. \n\nWe plodded along in near silence for a while, until we got onto Longhorn damn and headed south across it. There was a fire and police department training center nearby, and a gaggle of twenty or so burly young candidates was just finishing an apparently taxing training run, pulling up to a walk with red faces, soaked sweat shirts, and expressions of incredulity as Suzanne jogged by in the other direction six feet away. Nobody noticed me at all. They were like a living gallery of cartoon figures, staring open mouthed and slack jawed at the Amazing Pliskin moving in their midst. It looked like a series of those cartoons where the reader is supposed to supply the caption below each image. In my mind's eye, they almost wrote themselves: from the relatively polite looking male face that said 'That's what I want to protect and serve' to the frankly predatory 'Slice me off a piece of that' their prurient interest was obvious. \n\nWas that the kind of attention what she craved? \"You might have a chance right there, beautiful, but it looks like more than a dozen to me.\" She snorted. \n\n\"That's not my style, Robbie. I would want to play with them for weeks and build up the suspense, so to speak. You can't do that anonymously or on the spur of the moment. It has to be someone you know, and I only want two guys, or maybe three.\" She held her tongue up to her upper lip and leered at me. Damn her. \n\n\"You really taught me something about myself, too, Robbie, and you started this whole journey of exploration for me. When you lured me into helping you get Lara excited, I had thought about being with another woman, and been propositioned by some of the soccer girls, but I never really seriously considered actually doing it. Then you made it seem almost safe and sound. I thought I could dominate some little bitch to get myself off, and if I didn't like it just forget about her and even you if it didn't work out.\"\n\nThat brought me up short. Had I been that close to losing her?\n\n\"Then Lara turned out to be wonderful, just like you. In my first appearance as a dominatrix I discovered that my 'sub' was a very superior human being and I fell for her. I think you did too! You do seem to have a way of finding good women, Robbie. Why is that? And watching her with you turned me on, like I was sharing her pleasure and yours. Watching her with you still turns me on, and being with her right after she has just had you really turns me on, too.\"\n\nI saw my opening. \"But I am certain that watching you with some other guy is more likely to turn my stomach, not turn me on, even if I know you are enjoying it. Maybe especially if I know you are enjoying it!\"\n\nWe ran on silently until we reached IH35. The afternoon traffic was merely congested, not impossible like it would be in five hours or so. \n\n\"I'll admit it will probably fire me up to see you and Strelsa go at it, but because I know you: you are both wonderful and exciting and trustworthy and not because you are two random sluts that I just get to watch.\"\n\n\"So you are not like every other guy who just wants to bang some sluts? You can't understand that I might just want to bang some studs?\"\n\n\"I don't really know for sure what other guys want, but loving real women that I know and care about is much hotter for me than banging random sluts I don't even like that much. Banging some semi-anonymous drunken slut is just one step up from fucking an inflatable doll!\"\n\nShe looked mad. \"So you would rather see me make it with someone like G\u00fcnter, who you know is a good guy rather than just letting me pick up some random dicks?\"\n\n\"Yes, damn it, for your safety alone! Somehow having you fuck G\u00fcnter with some sort of emotional connection seems superior to just random sex. But in all honesty I just want you to do me. Seeing you with G\u00fcnter will not turn me on, and I certainly have no desire to mess with G\u00fcnter myself, and I am most assuredly not excited by the idea of having you right after G\u00fcnter.\"\n\nAnother few minutes of silence; this was very unusual for her. Then \"Do you hope I do you and G\u00fcnter a few times and then the novelty wears off and I will go back to just doing you?\"\n\nI guess honesty is the best policy. \"Guilty as charged, your honor. One time would be preferable to a few, and zero times would be best!\" \n\nThere followed another unprecedented period of silence. This must be some serious shit for her. \"So that's why you can let Millie go after her training period, without keeping her around as a 'bang slut', huh?\"\n\n\"Yes.\" I tried not to smile.\n\n\"You son of bitch! You know you can booty call her anytime and she'll do anything for you.\"\n\nI had no answer. That was true. It was going to be tough for me to have to give Millie up when Erminia's training was complete. We plodded on until we went under Mopac and back to the north side of the river. My wariness grew with every additional silent step. \n\n\"Well, Robbie, with that subject still completely unresolved but with it as background, then what about Millie's so called graduation party this Friday? Let's talk about that. Do you know what she wants to have happen at her party?\"\n\nI thought about it, and recalled her carrier and the images it had carried last time I tapped into it. \"To be spanked, whipped, and fucked by all three of us, and then sent to her fuck rug to be used by anyone else that wants to have her?\"\n\nSuzanne snorted. \"That's just about it, but do you know who else she wants to be there to have her?\"\n\nI didn't answer. I didn't have to, because she continued \"Not two girls, not two guys, not even five! More like ten!\"\n\nThat was a little too close to Melanie meltdown territory for me. I really cared for Millie, not like Suzanne or Lara, but, as Millie herself had described it, \"love with a little L\". l only wanted the best for her. Was it hubris for me to think that she would be better off with me than with a bunch of other guys? Wasn't I the one that had told her that she was a complete slut and fuck toy? But didn't I have a responsibility to protect her from going the way of Melanie? What if she just was going the way of Tessa, and she was happily adjusted to it?\n\nWe made our way past the high school and then took a loop around the Congress Avenue Bridge to add some miles to our total so we could get to 15 before the final sprint. I was feeling very good, and would have been physically able to talk animatedly like Suzanne throughout the route, had I wanted to. As it was I just ran silently and thought frantically. What should I do for Millie? Should I arrange for a cast of ten to bang her like she wanted? Could I handle watching that? Did I want Suzanne to get even more ideas? Did I want Lara to get any ideas at all? I thought this was just going to be a party, not a morals quiz! I had to make some decisions in the next 48 hours or so, not to mention for the future in general. \n\nAfter the added loop, we crossed over under Mopac again, turned east and then headed north on Lavaca. Just as we passed the Governor's mansion, Suzanne broke into a sprint. \"Catch me if you can my animal!\" I stayed right behind her, surprised at my obviously improved wind. She may be a vexing lover, but she certainly was a great running coach! When I caught her at the economics building, she reminded me that she was also a great kisser. \n\nWhen the kiss broke, she said \"You know I love you Robbie. I just need to know if I need other lovers or not. I know I want you, and that I'll always want you. I hope you can let me experiment a little.\"\n\nI sighed. \"I know I promised to be your meat puppet and take you anyway I could have you. It's just that now I have higher aspirations than that.\"\n\nShe kissed me again, and looked very thoughtful. \"That's a pretty damn good answer, Robbie. You are such an intriguing man!\" \n\nShe jogged up the back stairs, leaving me staring at her magic ass in those white iridescent tights. I just had time to run up to the room and grab my back pack, but not to change. I went to my two afternoon classes in my running gear, clearly a step below even dressing 'campus casual'. I did spot a couple of coeds checking out my legs, even though they sent no Suzie. What good was that? No surprises in those class sessions: I was ready for the final exams, and the last class ended early. But I might not be ready for Millie's party.\n\nI was certainly ready for Lara. She had invited me over for 'a very early supper' so I could get back to Belmont Hall at 6 PM for my stress test, but still be fully fed and watered. I hoped that she had some other things in mind, too. I took a very quick shower and left early: it was clear and cold as I made my way south from campus to her high rise apartment building. I was due to arrive at 4, but I was already hungry and unless I took a detour, I would get there more like 3:30. I didn't mind appearing eager for Lara, because I clearly was. She must have spotted me on her lobby cam, because her door opened before I could knock, and Lara had on a white terrycloth robe and a clear plastic shower cap over her blonde tresses. \n\n\"I was just about to get in the shower, early boy! Dinner is already in the oven, but it needs to cook for a while. Make yourself comfortable and I'll be back out in a few minutes.\" \n\nI noticed some brightly colored elastic isometric exercise bands on a hook on Lara's closet door, complete with a tablet computer on a fold down shelf at eye level, on which an exercise video was paused. Lara did seem to be a little more buff looking lately, if that was even possible. There were some text books on a bookstand at her little bedroom study desk, and a yellow legal pad with a handwritten checklist of review items for a class, with most of the them checked off with a flourish, in bright pink Sharpie marker, along with a tablet computer logged into the 'blackboard' software that administered most ESU classes. \n\nI wandered into the kitchen and caught a tantalizing whiff of tortillas, chicken and hot peppers. A recipe card was displayed on a little stand next to the cutting board, and it detailed her recipe for 'King Ranch Chilaquiles Casserole' complete with elegantly penciled end notes that said \"Robbie - add 1 ch. large Anaheim pepper, 1 ch. med. Jalape\u00f1o with all seeds, and 1 tsp. Xochil XXX Habenero hot sauce\". That sounded perfect, and how could a little hand written pencil note make me feel so damn good? The oven was on: I clicked on the oven light switch and saw a cheese and sour cream covered casserole beginning to bubble slowly. \n\nLara swept into the kitchen accompanied by a little steamy humidity, her perfume, and a hint of sandalwood and leather. I closed my eyes and took in the aromas, then looked up at her. Her long blonde hair was up in a tight bun with that magical leather and chopsticks thing that I liked so much, and even without the matching leather boots, it was already having its usual effect on me. Then I took in the rest of her outfit: a set of pink 'footie' pajamas like a little girl would wear, but Lara was most assuredly no little girl. They were old and thin and well worn, and looked like a layer of pink bubblegum poured over her spectacular body. They had a little pink zipper down the front which was open all the way to her navel, and her amazing breasts seemed to defy gravity as they pushed against the thin fabric, holding the zipper aperture wide open and displaying a verdant fleshy valley between them. Her nipples were easily pushing their erect outlines through the pink fabric. \n\nShe did have a way with clothes. Suzanne said you could drop Lara off naked in a Wal-Mart with a $20 bill and she would come out looking like a million bucks, having put together a super-hot outfit from the cheapest stuff on the discontinued and sale racks and still have some change left over. She hadn't just taken those fashion electives and made A's; she had devoured the subject, read all the reference materials, bought the classic books, and mastered her own special spin on haute couture. Monthly she scoured the vintage stores, of which Austin had plenty, and magically found the hidden gems and perfect combinations that others had missed. Not to mention that only one woman in ten thousand had the looks and body to challenge hers.\n\nSuddenly she was glued to me and me to her. I hugged everything I could find, and kissed her enthusiastically. Her hands found my cock through my jeans, and she giggled. \"I thought you would like this outfit Robbie!\"\n\n\"It makes me want to chew some bubblegum, beautiful!!\" She didn't call me 'Master' so often now, but the way she said 'Robbie' made it sound even hotter than 'Master'. When she did call me 'Master' it meant she needed a spanking, and now more and more often she let me know her need that way even before her Suzie signal revealed it to me, despite our now almost hard wired connection whenever I was near her. She put her arms above my shoulders and around my neck and jumped up and crossed her legs behind my back, Indian wrestling style. Why did that turn me on so much?\n\nI was enjoying myself so thoroughly that I saw no need to move, but she broke our kiss and hissed \"carry me to the bed, Robbie!\" I could never refuse a lady. I put her hands up on the headboard, with the 'magic ropes' now being understood between us when I did that. She stretched and pulled against the headboard with her arms, the result being that both her perfect breasts popped up and out of the front of little pink outfit and begged for attention. Her nipples were much tastier and more satisfying than the best bubble gum I ever had, and they got harder and tastier as you chewed them, not softer and blander. I plugged into her melodious Suzie signal and devoured her perfect nipples, listening for her responses and trying to push her excitement forward. It was a very functional feedback loop and soon she was twisting under me and pushing her hips up against my weight. \n\nA growling Suzie sliced through my head, and I realized she was about to come just from the nipple stimulation. Her neck arched back and her strong legs lifted me about a foot off the bed with a pelvic thrust that signaled an orgasm, just as her Suzie signal pealed through my brain like she was ringing a giant bell. She broke our kiss and hissed in my ear again. \"Fuck me Robbie, fuck me hard and fuck me now!\" I put my weight on my knees and used my hands to pull the fleecy pink pajamas down and off of her completely. I pushed her legs together a little and entered her already frothing wet pussy, and then she pointed her toes like a ballerina, and I put my legs outside of hers, trapping her between mine. I could balance my weight on my knees and her pelvis, and control our motion completely. I don't know what this position was called in the Kama Sutra, but I called it perfect: I could penetrate her deeply and still watch her face and kiss her. \n\nWe found a rhythm and thrust together joyfully. She was making a giant and very fragrant wet spot on the bed. I broke our kiss and watched her face, as her Suzie told me she was about to come again. Her neck was flushed red and goose bumps covered her shoulders. She began to turn her head from side to side and her breathing accelerated. Then she threw her head back and her pussy clamped down on me. She was so beautiful! I stopped moving for just a second and it grabbed me three times, and then relaxed, and I started my motions again. \n\nShe smiled up at me, and I heard that challenging little Suzie signal. \"You did hear me say hard, didn't you, Robbie?\" I took the hint, summoning up my inner John Henry and concentrating on slamming her against the headboard. We quickly built up a little layer of perspiration between us, and it worked like a slip and slide, letting me slam into her faster and harder. It seemed I could feel her individual abdominal muscles corded up and supporting me like the wet rollers on a boat trailer. She closed her eyes and put her tongue up against her upper lip, almost Suzanne like, and came again, grabbing my buttocks hard and growling. I was moving inexorably toward my own release, and I took no break; showed her no mercy. Then she looked up at me wide eyed as she realized I was about to come. She reached her fingers down between my buttocks and pulled my ass cheeks apart, and urged me even further into her. ",
        "I was now absolutely frantic to come, and determined to do it as far up inside her as humanly possible. A dozen more thrusts had me right on the edge, slamming into her and sliding along that sweetly sweaty lubrication layer between us. I watched her eyes and then let loose with what felt like a voluminous and high pressure shot. Her pupils got a little wider and then her eyes rolled up in her eyelids and she just froze all motion for a moment. I continued to push and thrust, filling her as much as I could. She drew in a big breath and then smiled up at me, her Wedgewood blue eyes beaming like lanterns. \n\nThe timer buzzed on the oven and we got up to have our early supper. It was fantastic. By the time I helped clear the table and loaded the dishwasher, it was time for me to walk back to campus. She put an arm around me and said \"Can you come back after your stress test? We need to talk.\" Lara had never, ever said that to me before. I hope it wouldn't be a second stress test, this one of my emotional resolve rather than my physical endurance. She gave me a two liter bottle of water to take with me, and I drank it all as I walked back to Belmont Hall and up to the fifth floor lab, arriving right on the dot at 6 PM.\n\nSaskia Graendel was waiting impatiently; Duke Knorr was just standing there. Saskia spoke first, of course, and loudly. \"Well if it isn't the mysterious Mister Roberts. At least you have been diligently updating your food and exercise diary for the last day or so, but the state of your body still doesn't make any rational sense to me. You are either radically over reporting your caloric intake, under reporting your exercise, or somehow transporting kilocalories into some other parallel universe, because they are not ending up as body weight. First we thought you weighed too little because you had a bone problems, but your bone density is just fine. And although your legs are relatively well muscled, your upper body is sorely lacking in bulk: you don't have enough muscle mass to have a BMR that would even come close to accounting for all the energy you seemingly burn up. It's a physiological mystery that I will solve, Roberts! And during the next semester, I will build you a proper chest and shoulders, too!\"\n\nShe was pretty worked up, and I just couldn't resist having a little fun with her. My beautiful Lara had just boosted my confidence and testosterone levels to the maximum, so I decided to act the cock of the walk a bit with Saskia. \n\n\"Well, in the interest of science, Saskia, I think you should spend a weekend or at least a full 24 hours with me every minute, observing me very closely as only a trained scientist like you can. Stay right next to me as I eat and exercise, sleep with me and for good measure, put your hands on me at all times and try to figure out what is happening with my body. Although I must admit that the presence of a woman like you would certainly stimulate me and change the results from my normal resting state. But I am willing if you are!\"\n\nDuke snorted and laughed uncomfortably, but Saskia actually looked confused for a minute. Then she recovered. \"Let's hope that I am proficient enough at design of experiments to get the proper data without having to make that kind of personal sacrifice, Roberts.\"\n\nOuch, that cut me to the quick, but I kept pitching. \"A weekend spent with you, Saskia, would be the perfect blend of art and science!\"\n\nDuke Knorr couldn't remain silent any more. \"It's getting pretty deep in here. I should be wearing hip boots instead of my vintage Converse All Stars! Let's get you hooked up for your ultrasound action movie debut, kid!\" \n\nHe led the way up to an 8th floor lab, and told me to strip down to my underwear, socks, and running shoes. A very fancy looking treadmill sat there on some sort of big pedestal, festooned with cameras, keypads, test leads, and a bunch of other stuff I couldn't identify. He put some very cold clear gel from a squeeze bottle on my neck and shoulders, and then strapped on something that looked like a pair of football shoulder pads with a wiring harness attached to a bunch of equipment in a big tall floor standing rolling rack. He put some sticky electrodes at several points on my chest with another little grey box of clip leads that that led to the same rack of equipment. He then put a blood pressure cuff on one of my arms, strapped some sort of metal thing with another lead attached to it around one ankle, and clipped some sort of if little thing onto my earlobe, and another to a finger. He put a red rubber ball in my other hand and told me to hold it. \n\nHe had me stand still and blow as hard as I could into a little tube, then breathe through my mouth as hard and fast as I could. The he attached a little mask over my mouth and nose and had me breathe through that for a while. He watched a bunch of squiggles and numbers on three big monitors on the wall, and then repeated all this stuff again with me squeezing the rubber ball as hard as I could. Then he seemed to go through every possible permutation of all this stuff: breathing from the mask or from the room air, squeezing the ball or relaxing, breathing hard or easy, inhaling as deeply as I could and holding it, or breathing shallow and fast, ad infinitum. I lost track of it all and just tried to do what he asked. All the while he moved a trackball around and clicked red marks on the monitors and made cryptic little notes. \n\nFinally Saskia's voice came over the some speakers saying something like \"okay for phase two.\" He took the ball from my hands and took the mask off of my mouth and nose.\n\n\"Put your hands on the guard rails, kid, and get ready to start walking. After we record baseline data for a few minutes, the treadmill will start to go faster. Speed up your walking pace as the treadmill does and don't fall down. The after a few more minutes the treadmill will tilt up like you are climbing a hill. Just do your best to keep up the pace and don't fall down. Your heart rate will get way up there. Try to keep going until I tell you to stop. It may hurt but we will be monitoring everything and will not let you do any real damage to yourself. You might think you are in good shape but you are probably not ready for iron man competition or astronaut training. This will give us a very good assessment of where you are and let us set goals for what to try to accomplish next semester.\"\n\nHe moved over to a little chair next to the equipment rack and put on a headset with a microphone. Then he reached up and touched a button on the side of the headset and said \"Wait a minute, I forgot to check one thing!\"\n\nHe walked back over to me and pricked my finger again. \"When and what did you eat and drink last?\"\n\n\"I had some chicken casserole about 5 o'clock and drank two liters of water as I walked over here.\"\n\nHe stuck the little meter in the spot of blood on my fingertip, and said \"Ninety one. That's cool. We are ready.\"\n\nThe treadmill began to move at a slow walking pace. This continued for about a minute and then it speed up, to about my normal walking pace, which was pretty fast. Then it bumped up again to something just short of a jog. No trouble so far and plenty of wind. Duke put the breathing mask back over my mouth and nose. I looked up at one of the monitors and saw what appeared to be a x-ray view of my beating heart on the top of the screen and a trace like an EKG machine on the bottom. There were also numbers and labels all along the left and right sides of the screen. I recognized \"HR\" and \"BP\" but did not know what to make of \"ST\", \"QT\", \"PQ\" and a bunch of others. \n\nI didn't have much time to think about it because the pedestal under the treadmill suddenly tilted about 5 degrees, and it took a bit more effort to keep up the pace. I forgot about trying to figure out the monitor and just concentrated on breathing and walking. Then it tilted again and soon I felt like I usually did at the start of one of our runs. It tilted again and again, and I began to breathe harder and faster. One more tilt had me very aware of my leg and chest muscles. I did catch a glimpse of the monitor and saw \"HR\" was 170. The damn treadmill tilted again, at some ridiculous angle, and I did my best to keep pace. I think I saw 200 on the monitor. Duke said something like \"all symmetrical\" and then the damn treadmill tilted again. Soon I was feeling just about the way I did when I passed the chili parlor on my little marathon trial, and I think I saw 220 on the monitor. The Duke said \"VO2 something\" and then \"it looks good to go for 240.\"\n\nThe treadmill tilted to almost vertical, or at least it seemed like it, and every muscle I had in my body was screaming at me. Darth Vader began to breathe in my ear, competing with the tom toms thumping out my heart beat. Now I was really feeling it. I couldn't take another tilt, but then I don't think the damn thing could tilt any farther. Tunnel vision started and then a sort of little mini runners high. \n\nAbout that time, Duke said \"OK kid, good job. We are going to gradually tilt the thing back to horizontal and then slow it down. Take it easy and keep moving, I'll tell you when it is about to stop.\"\n\nIt seemed to take forever, but I felt a lot better as soon as the tilt was back to something reasonable. Horizontal was literally like a walk in the park, and then Duke said \"Get ready to stop.\" Even with that warning I almost stumbled when it did actually stop, but I felt pretty good. \n\nSaskia walked in. \"I suspect there is no history of heart trouble in your family, Mr. Roberts, so we won't have to observe any limitations on your exertions next semester. So I can work your lazy ass to the max to try, and I am only promising to try, to get your horribly weak chest and shoulders into shape. You aren't exactly Lance Armstrong at moving oxygen, either, but then you don't have three times the normal number of erythrocytes on board, do you?\"\n\nI wasn't sure if I did or not, but I was sure I still wanted to have some fun with her. \"Does this mean you will go out with me now?\"\n\nShe snorted derisively. \"No. But it does mean we won't need to do the MRI, and my budget has been cut anyway, so we are done with the testing for now. But keep up the food and exercise diary, because I need more data to figure your strange metabolism out.\"\n\n\"I promise that I will keep the diary acutely and promptly, but if you still can't figure it out, I want you to promise that you will spend a weekend glued to me.\"\n\n\"I'll figure it out Roberts, don't worry.\"\n\nIt was almost 9 PM by the time I left Belmont, and it was cold out. I wrapped my coat around me tightly, and texted Lara that I was on my way. She responded immediately. \"Just come in the door. I will be on my knees with my leather hood on.\" I quickened my pace to a jog. I was not up to a full run, as the stress test had taken more out of me than I wanted to admit, but I was hoping that Lara was about to take something out of me too. I went up to her door, and pushed it open. She was kneeling, naked, with that wonderful electric blue leather hood on, her two long blonde pigtails emerging from it. She was breathing hard and looking spectacular. \n\n\"Good evening slut!\" He Suzie responded. She was feeling naughty and in need of some punishment. I walked to her and took her head in my hands. \"It's time for you to suck my stinking, sweaty cock! They made me run and breathe a lot, and it just made me horny.\" \n\nThe hood gave me a good grip on her head, and I slipped my cock between her full lips, fucking her face. Her Suzie sang! She liked it more than I did, if that was possible. \n\n\"You've been a bad girl, haven't you slut?\" I watched my cock slide in and out of her mouth, and realized it did stink, along with most of the rest of me. I had built up quite a bit of sweat during that stress test, and as I shed my clothes, it was coming off of me in aromatic waves, quite a contrast of the smell of the candle Lara had burning on the coffee table. \"You deserve a stinking cock, don't you slut?\" \n\nShe hummed with her mouth full. \"And you better suck me dry and swallow every drop, you little bitch. But I am still going to have to spank you!\" I was really getting in to this, as was she. I grabbed one blond pigtail with each hand, and used her shamelessly. Or perhaps I should say shamefully, which was what she was responding to. Her excitement burned on her Suzie signal like burning gasoline on the surface of a lake. I stood on my tiptoes and forced my cock down her now almost vertical throat. She sucked and licked like a dream, and it did not take long for me to come. \"That's it slut. Every damn drop! Now lick my sweaty balls!\" She sucked them into her mouth, and I got hard again almost immediately. I could feel her Suzie singing some strutting slut pride at my almost instant response to her yeoman service. \n\nI pulled her up roughly to her feet and then threw her across the couch, bending her up double with her knees over my shoulders and penetrating her pussy quickly. She was almost as stinky and fragrant as I was, but hers was pure sexual excitation and no perspiration. It was elemental magic. I fucked her like a madman, and she responded like a thoroughbred. She came before I even got my rhythm established, which made me feel even nastier. I spun her over, exposing her perfect pink bottom, and spanked it hard, then plunged my tongue in, sucking it for all I was worth. Spank and suck, suck and spank. It drove her crazy. Finally I plunged my cock into her ass. Nirvana! \n\nI pushed her around until she was doubled over the back of the sofa, with her waist bent over it, her hands down on the floor, legs wide, and her feet stuck in the space between the cushions and the back support. I pounded into her ass, her bountiful backside undulating as I slammed into it. The sofa would have tilted over with every thrust, except she was using her strong arms at just the right time to keep us from tipping over in a heap. I bellowed like a bull and shot again, just as far up her tight little butt as I could. It was perfect for me. Finally she did let the sofa go over, and we tumbled in a heap on floor. She giggled. \n\n\"Thank you Master, I needed a good spanking and an ass fucking!\"\n\nI laughed with her for a moment. \"You are lucky I can't resist your hot slut ass! Never forget that ass belongs to me and me alone. Now go draw me a bath!\"\n\nThat got me that tight little smile I loved so much. She ran to draw my bath. She was spectacular. What did I care about anyone else in the world when I had her? If I never won another tennis match in my life, I knew I had already won a prize better for me than anything Wimbledon or Forest Hills could ever offer. We washed and kissed and tickled each other for as long as the hot water lasted. She put my stinky clothes in the washer and heard my stomach growling and invited me into the kitchen and she pulled out a fruit salad for us to much on. I was waiting for 'the other shoe to drop' with regard to her saying that we had to talk earlier, and it did not take long.\n\n\"Robbie? I wanted to talk about something that makes me uncomfortable.\"\n\nI smiled at her and munched some cantaloupe and strawberries. I was listening. \n\n\"It's about Millie's party, sort of.\"\n\nOnce again I waited. \n\n\"Do you know what Millie really wants to happen at that party, Robbie? \"\n\n\"Well, I expect she wants to be spanked and whipped and fucked, and then put on her fuck rug to please anybody that wants her?\"\n\n\"Yes, but do you know how many people she wants to use her?\n\n\"Too many for comfort, I am afraid.\"\n\nShe looked very troubled. \"Exactly!\" She moved her chair over right next to mine and put her head on my shoulder. \"It scares me, Robbie. I know we are supposedly sexually liberated and all that, and I certainly enjoy getting all crazy with Suzanne and you and Millie, too, but the idea of so many people with her makes me nervous, a lot more nervous than excited. I can get into the fantasy aspect of it, but I can't get into her actually doing it.\"\n\n\"I understand. I was the one that told her she was a fuck toy, and to embrace her inner slut. Now I feel like a hypocrite because I want to tell her to take it easy and take care of herself. But I would also feel such terrible guilt if anything bad really happened to her.\"\n\n\"I don't know if I want to see her do that, Robbie. It might turn her on, but I am pretty sure it is going to turn me off. I just can't imagine actually doing something like that myself.\"\n\n\"Let's you and me get something straight, Lara. I never want you to get anywhere near doing anything like that. You are mine, and mine alone. No other guys, not even one!\"\n\nShe looked up and riveted me with her electric blue gaze. \"Really, Robbie? Just how do you justify saying that to me?\"\n\n\"Because I love you, and you are to be a slut for me and only for me!\" \n\nAt least six different expressions played across her face in about two seconds, but a clear and very happy Suzie sang out. \"As long as you keep taking good care of me, that's exactly what I want! You can have other women, sometimes, and especially somebody like Suzanne that we both fall for. I will date other guys, too. Socially speaking, and kiss them goodnight, and never, ever have sex with them. But you better keep figuring out how to get me hot and get me off, boyfriend, or I might start looking for some male action on the side. Do you hear me?\"\n\nI smiled. Was she perfect for me or what? \"Nobody knows your little secret slut nature like I do Lara, and no one loves you like I do. If you ever think you ought to start looking around, give me 90 days notice to correct the situation.\" I was borrowing a phrase from all those lawsuits I was reading up on for Engineering 101. \n\nShe smiled. \"I might give you 9 days, Robbie, if you are lucky.\" I think she meant it. But then she said \"You know you are the only guy to ever really turn me on and get me off. Now that I know you really care about me, I don't even need to get spanked and humiliated to get turned on anymore, but sometimes I want you to treat me dirty, like tonight.\"\n\nI took her in my arms. \"One other thing, beautiful: I don't think I want to submit to anyone anymore, even you and Suzanne, who I trust completely.\" I had been thinking about last Friday night a lot. It got me off all right, but that didn't necessarily make it a valid life plan for the future. \n\nShe pushed back a little with her arms and looked at my face. \"I wondered about that. You did get really hard and lasted a long time, but I felt a little uneasy about it. I think it told me that you truly trust me, and you only needed to show me that once.\" She giggled and tried to suppress a smile, but I wasn't sure why.\n\nSomething suddenly made sense to me. Mrs. Douglass, my so far almost prescient sex teacher, had told me to try submission once, to see if I liked it. She said she tried it, she didn't like it, and she never did it again. But Millie had taught me to parse words like a politician, and Oiler had taught me how much parsing mathematical expressions differently could change their meaning radically. What Mrs. Douglass had definitely not said was that if you like it you should keep doing it. I tried it, I liked it, but I still don't think I want to do it anymore. \n\n\"It did get me off. But if you two had tied me up and shot me up with heroin, that would have got me high too and felt good for a while, but that doesn't mean it's a good thing for me to do again. I could never even think of doing something like that with someone I didn't trust like I do you. Even if it gets me off, it still may not be a good idea.\"\n\nShe giggled again. \"Well, you may be missing out on a few things. Suzanne and I did develop quite a plan for you. She called it a 'monotonic progression of sexual stimulation' and said you were the one that taught her about it.\"",
        "My heart began to beat faster, for some reason. \"Just what is in that plan?\"\n\nShe grinned, and I swear she put her tongue on her upper lip with an expression just like Suzanne's! \"The only way you can find out is to let us carry out our plan on you, Robbie, meaning trusting us to take care of you again. Didn't you take good care of me whenever I submitted to you?\"\n\nExcept for that time when I got your nude video and picture and address on an improper photography web site for the entire world to see, I thought. Suddenly I felt shame and humiliation like no sexual situation could produce. I hope to God she never found out about that. And I realized that Suzanne had played a big part in saving my bacon on that deal. I said nothing.\n\nShe smiled. \"I thought I had figured out that letting someone else be in control really got me off. But it may have been just because it was you, my love. I might have discovered that submitting to some other guy would have left me cold, and then I would have had all the humiliation without any of the satisfaction.\" She kissed me, perfectly. \"But you know you can trust us. We would take care of you. We would do things that excite you, but never anything that would actually hurt you.\"\n\nI needed to change the subject, fast. \"So then how do we take good care of our thoroughly Modern Millie? How do we excite her and get her off without hurting her?\"\n\nLara looked thoughtful. \"I think I have an idea. Let me work it out in my mind and make a few calls and then let's talk about it later. Won't you 'see' Millie Thursday night at Erminia's, Robbie?\" She smiled. She knew damn well I would, and why, although she didn't know the lurid details. \"See if you can figure out what it would really take to fulfill Millie's fantasies at the party so she knew what it was like to have them come true. Maybe I can enlist a few trusted helpers to see if we can do it without any harm coming to her.\" \n\nAs I walked back to the dorm, all this was percolating in my mind. I knew exactly what I wanted with Lara, I told her and she wanted the same thing. I knew what I wanted with Suzanne, and I had pretty much told her, but she had not agreed, plus I had promised to be her meat puppet and to take her on any terms she wanted. I realized that I had to let Millie be Millie, and I was not going to be in her life in the long or even medium term, but I also still wanted the best for her. As for Nora, I told her with complete honesty what I wanted, and I was certain she knew what I wanted, but she was only 'considering' a relationship with me and I had no answer from her. I hoped to have an answer from her when she returned for spring semester. I decided to just not worry about all that right now and concentrate on doing well on my exams. I had more control of that. I could not shake the feeling that I had forgotten something: probably an exam question that had occurred to me that I had not written down to follow up on.\n\nWhen I got back to the dorm, I updated my diary app with our fruit snack and late night 'sexercise'. I didn't think there was anything really wrong with me, despite Saskia's contention that my metabolism 'made no rational sense' but since I got so hungry so often I had decided to be completely accurate about everything in that diary, even the sex, just in case. Amazingly, my stress test had already been entered in by Saskia; apparently they monitored the actual energy output and put it in the database. I was surprised to discover that the pull down activity lists in the app had lots of different categories of sexual activity, with a calories expended estimate for each. I decided that what Lara and I had done was best described as 'vigorous intercourse' of 'one hour duration' and chose that from the pick list. Then I decided to log some 'deep sleep' until breakfast. I was already hungry. \n\n.....\n\nThursday morning I was amazed to discover Nora waiting for the breakfast line to open. Hallelujah! She looked tired, with slight circles under her eyes, no makeup, and no smart looking business outfit: but she was still totally stunning in just a tee shirt and jeans. She may have looked even better without makeup. Her skin was so clear and unblemished that makeup only hid its true beauty. I was overjoyed to see her nipples move a little bit through that thin tee shirt when she saw me. Hot damn! She might be able to suppress her Suzie signal, but maybe not some of her other signals. Life was good. What a wonderful Texas morning it was. We started through the serving line together. \n\n\"Good morning Nora. It is wonderful to see you. I have missed you!\"\n\n\"Hi, Robbie. I have been going crazy trying to get everything finished for this semester. I wish I could go to Dallas to watch you run that Marathon, but I just can't fit it in and meet all my academic commitments. Scratch Eldee's ears for me, will you?\"\n\nThat answered one of my questions: she and Suzanne were still actively communicating with each other. \"I'll do it, but I am sure she would much rather see you in person. I think I'm ready for my finals, and I have completed my class registration for next semester.\"\n\n\"Me, too. I only need 9 semester hours of required classes to finish all my degrees, so I am taking two electives purely for fun. It seems so out of character for me to have some blow-off classes!\"\n\nGiven her super brain she was probably taking Symplectic Topology and Astrophysical Gas Dynamics, like my buddy Ralph just got permission to register for them as an undergrad. \"When do you leave for home? Can we spend any time together between your last final and when you have to go to the airport?\n\nShe shrugged. \"My flight is two hours after I have to upload the exam grades from the Econ 101 final, which I also have to proctor, and it's chock-a-block with the exams I have to take before that. I am afraid we won't have a chance to talk much again until spring semester starts.\"\n\n\"Well, it turns out I might be in your neighborhood over Christmas break.\"\n\n\"Really? Well you have my cell, email, and Skype, so let me know your schedule as soon as you know. I suppose it might be best if you met my parents, although it might turn a bit dramatic when you do!\"\n\n\"Truth is truth, beautiful. At least they will see I don't actually have horns and a tail.\" I gave her a hug and we both headed out for class. Something got in my eyes, and I had to rub them. I had that feeling again that I had forgotten something. \n\nMy Thursday classes were completely unremarkable. I walked over to the UDP house and asked Oiler the one math question I was still unclear on. He straightened me out and then we double checked the old test files and I had already worked through everything that even touched on the classes I was taking. He convinced me to stay for lunch, not too difficult a sale since there was fried chicken on the menu, and as we sat down, Cisco joined us. \n\n\"Hi Robbie! Mei Ling tells me we are going to a late night party in Millicent's honor at Lara's place after the ZZZ party Friday night. It sounds kind of mysterious to me. I think she wants me to help her act out some fantasy scene for Millie's benefit. Do you know what that's all about?\n\nIt seemed that Lara had already started 'making some calls'. I wondered what she had in mind. I also realized that Lara was a prime party mover. Now that I thought about it, most of the 'big ideas' for the addicted to Austin party had been Lara's doing: Suzanne and Cindy Nelson, nascent party planner to the stars, had mostly been implementing and extending Lara's ideas. Mei Ling was Millie's sorority sister and close friend, so it made sense Lara would enlist her help. Who else would she press into service? What exactly did she have planned for Millie? Two plates of chicken and a big piece of pecan pie later, I hugged the comely cook and headed for my afternoon classes.\n\nThey were completely as expected. I had a final exam in one, and not the other. Grades were already up on blackboard for the one with no final: I got an A! \n\nAs I was basking in my first official college grade, my phone beeped with the distinctive tone for an incoming email from someone on my \"VIP\" list. It was from Barry Fermy, Sales VP extraordinaire and contained a brief summary of two trips he would require me to make: one before and one after Christmas. The first was to London to meet with Abelard Peters and some of his people, with a side trip to Milan, then back to London and then to a meeting in DC and then back to DFW. An e-ticket would be waiting for me at the Admiral's club. He included a USPS Express Mail label with an address on K Street in DC, which I was to use to drop my passport at the post office before 4 PM today so visas could be attached for the second and now somewhat mysterious trip. It would be sent back to me at my home address in Prosperous before the departure of the first trip. He gave me the dates of that second trip, but not the destinations. There followed a lengthy discussion of the business entities related to Abelard's firm, and Barry's estimate of their insurance needs and current suppliers. I was to memorize this information and brainstorm ways to break through and get some of the action, and also memorize the included cast of executives listed and figure out how to schmooze them. I dashed back to the room to get my passport and print out the label, and then walked to the on campus post office in the WMOB. It took about 30 seconds to fold up the little envelope and stick the label on, and drop it in the box. \n\nMy feeble brain suddenly put some things together. Maybe I could see Peggy AND Nora on my trip to London. Then I remembered: what about that 'report' on the USB disk that Sapiento's money man Brujo had given me? I hadn't even read it yet. I went back to the room, dropped off my backpack and books and grabbed my laptop, inserting the USB drive and heading for the dining hall. I was enough of a multi-tasker to chew and read at the same time, and my stomach was growling. \n\nI loaded up my plate and headed for a corner table so no one could look over my shoulder while I read. \n\nJust as I sat down, Lizzie Faye Reagan and her roommate Orinda walked over to me. \"Hi Robbie. We wondered if you wanted to come to our AKA last day of class party tomorrow night.\"\n\nSuzie signals pinged in my receiver: two lovely girls with two lovely signals. \"I wish I could, but I have promised to go to another party, and then a celebration for a friend of mine that is graduating. But let there be no mistake: I would love to spend some time with you two. Maybe when we get back from break we could all three do laundry together?\" They gave each other a scandalous look, and while so distracted I stood up and hugged them both, with not so subtle crotch to thigh contact with each of them. I did so enjoy being a dirty young man. And damn but they looked good, especially as they walked away, and I don't think that was their normal gait. \n\nI began chewing and turned my attention back to the laptop. I tried to open the big PDF file and found it was password protected. There was only one other file, a 'readme.txt' file with an oblique password hint, and it took me several tries to figure it out, but it referred to Speer Overtop's Halloween party, and I finally got it: 'Fiat MILF'. It took a few seconds for the big PDF to open, and the first page was almost covered with one of those 'electronic sticky note' things in florid script handwriting, which I assumed was Brujo's. \n\n\"This information may be useful in your upcoming travels. You may read this report and use the information in it to make decisions. You may not show it to anyone, or even hint that you have it or have read it. As far as anyone else is concerned, it doesn't exist.\" \n\nThe report was entitled \"The Future European Landscape in Industrial Risk Mitigation\" with a formal cover letter in Italian from Brujo to Sapiento. It described the report as containing \"the basis for the following recommendations to you\" but those recommendations were all blacked out and completely unreadable. The report was in English had three major sections: from the different footers on the pages it was apparently put together by three different and very famous big consulting firms; probably each was unaware of the other's work. The first section was a summary of the last 30 years or so of the industrial markets in Europe: market sizes and trends for various industries, regulatory changes, consolidations by mergers and acquisitions, and major casualty losses from weather, accidents and political instability, including nationalization, revolutions, and wars. \n\nThe second section was a very comprehensive competitive analysis of the companies Sapiento either owned or did major business with, and their direct competitors. It included reports on each firm from many big investment banks, discussion of their strategic priorities, and ten year forecasts of their results. The third section laid out in summary form a judgment call on the expected big winners and losers in each industry, the most attractive acquisition targets, and the ones that might suffer significant losses because of their exposures in various industries and countries. It would take me two weeks to get through this thing. Then I noticed something else: there were little yellow dots on each page, and when I clicked them, they popped up to reveal more 'sticky notes' handwritten in Italian, in the same hand writing as the cover note. These looked like crib notes from Brujo to Sapiento, or to someone else on their team. One, in a paragraph about the expected management change at big shipping firm said \"this guy won't last 3 months much less 3 years, and the agreement we are working on won't be worth a damn when he leaves\" The whole document was littered with such comments. \"May be useful\" was putting it mildly! After my last final exam this PDF was going to be my textbook for a while, and I was going to have to brush up on my Italian. What was it that Brujo said about \"taking pride in gathering information and anticipating problems\"? I reckon he did, I reckon. \n\nI got one more plateful of food and then headed upstairs for a quick shower and change of clothes. The limo picked me up downstairs and then we picked up Millie at the Bi Phi house. She looked stunning, dressed up in a charcoal grey 'power lawyer' style suit but with a frilly pink blouse underneath. To me it said \"Fight me or fuck me, I can handle either one!\" But could I handle watching other guys fuck her?\n\nI turned my attention to Erminia's training, reviewing where we had left off last time as the limo pulled into their riverside complex. Construction was continuing on the two new flanking houses, and even more planting had been done and despite most of the new trees and shrubs being dormant in winter, you could tell the place was going to look fantastic in spring bloom. At the end of our last training session, Erminia had made somewhat of a breakthrough: being able to totally concentrate on fellating me without thinking about herself at all, and taking pride in her ability to please me without it triggering the guilt that had repressed her sexuality and soured her marriage to Sapiento for years. \n\nThe next step was to try to distract her with whipping and spanking, forcing her to concentrate completely on me and my pleasure and ignore her own. If we did it properly, we could then transition from un-pleasurable to pleasurable distractions, forcing her to continue to concentrate on me, and perhaps her body would respond naturally to the pleasure, without her mind stepping in with inappropriate guilt over having survived her first husband. \n\nShe greeted us at the door and she looked markedly better than our last visit. I even saw a hint of the shyly smiling young girl she must have once been. I was very pleased to see that, but I acted cool and when the guards closed the door to our training room, Millie took over, all business. \"On your knees, slut, and lose those clothes!\"\n\nErminia stripped, dropped to her knees and dropped her eyes to the floor. I stood right above her and slapped her face with my suddenly firming cock, then offered it to her mouth. She took it automatically, and began a much improved routine -- she had been studying and doing her homework. Millie found little to criticize, and neither did I, having to actually fight to not come too soon. Ermie began to take me even further down her throat than ever before, and I realized she had completely mastered her gag reflex. She was now a masterful and thrilling cocksucker. My leg vibrated a little bit involuntarily, and I heard a note of proud Suzie from her. Excellent! Her tongue flicked and lingered right on the opening at the tip of my dick, and she sucked mightily and suddenly I was done for. Just as my first spurt filled her mouth she looked up and right into my eyes, her eyes smiling in triumph, and sucked even harder. Even Mille was speechless for a moment.\n\nSomehow Ermie increased her suction, and her tongue strongly strummed the bottom of my cock. I certainly could not deny her even a drop: I gave it up and she sucked it down. She got it all. \n\nMillie went to the next phase perfectly. \"Not bad, trainee. Now let's see if you can keep your focus while enduring some distractions. Ermie did the small displacement tango with her lips and lungs and I stayed hard. She began her progression again, mixing things up and surprising me with her virtuosity. Mille pulled out a cat o' nine tails and began to slap Erminia on her ass. At first I could feel Ermie flinch with each blow, but soon she stopped anticipating them and concentrated on my cock. I noticed subtle variations in her tongue work that she could not have managed without real concentration. Damn she was good! Millie expanded her target area to Ermie's legs, and then to her back and shoulders. Her concentration remained virtually perfect, and I filled her mouth again. \n\nIt reminded me of the way I was taught to teach bite training with our dogs. Once the dog learned to bite the bad guy, you strengthened their resolve by trying to distract them: banging pots and pans next to their head, hitting them at first lightly and then strongly with sticks and ropes, and pulling on their coats, and finally firing a starter's pisto right next to them. They learned to hold on until they were commanded to let go, and not to let anything else affect them. Their bite got stronger and more reliable, and a dog with a strong will would never give up. \n\nOnce again she kept me hard, then switched to sucking my balls. I'm not sure I had ever had it like that. She must have been a very good researcher. And I suspected she had a very strong will. \n\nMillie said \"Now back to that cock. No matter what I do to you, keep your focus on that cock. That cock belongs to you and his come belongs to you, make him surrender it to you, and suck it out through his balls so hard he'll wonder if they didn't shoot out of him too!\"\n\nThat was kind of scary. Millie dropped the whip and began spanking Ermie, hard. I knew it would take me longer to come this time and that Ermie would really have to work for it. She was concentrating totally. Millie's blows changed to spanks follow by a quick caress. I don't think Erminia noticed it, at least consciously. Millie began pinching Ermie's nipples fiercely. They got red and hard, but she kept up her amazing pace without any hint of distraction. Millie went back to spanks with even longer caresses. Ermie sucked on, but I detected a change in her Suzie signals. There was pleasure, but no guilt! Maybe this was going to work after all. \n\nMille moved behind Ermie and spread her butt cheeks and began pinching them, then caressing them. Her concentration on my cock remained total, and I was starting to feel the boil right down at the bottom of my balls. Millie's hands went under Erminia where I could not see them, but from their motions I could guess that she was pulling on Erminia's outer lips. A few weeks ago that would have triggered such guilt that she would have run crying from the room. There was no hint of that now. In fact, I even detected a whiff of Erminia's distinctive sweet pussy perfume in the air. That was incredible. Millie, I presume now acting as a loyal pack member, began with her own pheromones and perfume, and the smells drove me further toward a third and final orgasm. Millie then put two fingers inside Ermine and frigged her so strongly it must be painful, but her sucking remained constant. I honestly think that Ermie did not know that she was now dripping lubrication like a young girl. She smelled wonderful. ",
        "Mille stopped short of making her come. That would have been too much, too soon. But she put her hands on her shoulders and neck and caressed them as she spoke seductively to her, while my cock still filled Erminia's mouth. \n\n\"That come is almost yours! You are in total control. Make him come like he never has before and make him know it was you who did it!\"\n\nI felt the first wave rolling down my spine and threw my head back. I looked back down just as Erminia took me down deep one last time and then stopped with just the top of my cock in her moth. I felt a pulsing, demanding sucking motion and then she locked her eyes onto mine. She smiled like Suzanne did when she knew she had me. Erminia had me too. She sucked and snorted, breathing loudly through her nose, and Mille praised her like a puppy.\n\n\"That's it! It is yours. Suck it out and enjoy it!\"\n\nI couldn't look any more. My head snapped back involuntarily and I wondered what really had passed out through my dick. A strong and unmistakable Suzie signal arose from Erminia: pride, pleasure and arousal, but no guilt. Two or three more sessions might do it. Millie began to kiss Ermie's neck. Then she turned her head toward her and stuck her tongue in Ermie's mouth and then sucked some of my residual come out of it. She broke the kiss and said, \"You did get it all didn't you baby!\" \n\nTears ran down Ermie's cheeks, but I still detected no guilt. She got up and left room, still sobbing. \n\nMillie hugged me. \"She got so wet! She almost came! It's working!\" It sure was Millie, it sure was.\n\n\"That makes me so happy. I just love the idea that can we give that back to her! Not to mention that Sapiento is going to start getting some of the best blowjobs on earth! When are we going to teach him to take care of her?\"\n\n\"That's the final thing, but first we have to teach her what she really likes, and how to let herself like it, and then she can let him know. I am so proud of you. You were fantastic with her!\"\n\nShe smiled, but then said. \"I was sort of hoping you were going to punish me a little.\"\n\n\"Come on into the shower. We are going to play a little game of truth or dare.\"\n\nI was so caught up in how wonderful Erminia and Millie had been that I was almost afraid I would forget my primary assignment: find out what if would really take to get Millie off at the party tomorrow night. We got into the shower and soaped each other off quickly, then dried each other off. I stood behind Millie and hugged her, cupping her breasts gently with my hands, leaning down to speak in her ear.\n\n\"Do you remember what we did for those other women on stage at the 'addicted to' party?\" She tensed up a little bit.\n\n\"Yes. You made them reveal their true desires to everyone, and you caught them out if they lied about it. How did you do that, Robbie?\"\n\nI hugged her again. \"You are my student; you just need to know that I can always tell when you are lying. Because this is your final exam: you don't have to reveal your desires to an audience on stage, but you have to be totally honest with your Master. And you have to do it now!\"\n\nShe shivered a little bit. \"Well, you already know I liked to be spanked, and whipped, and fucked everywhere. What is else is there?\"\n\nI tightened my hands around her neck a little bit. \"You will tell me, slut.\"\n\nShe shivered again. \"I want....\"\n\nShe literally almost fainted, but still she did not speak. I tried to reassure her. \"Nothing you will say can embarrass me but lying, and nothing can make me stop caring about you except not telling me the truth!\"\n\nShe drew in a deep, shuddering breath. \"I have some dreams, Robbie, dreams that I have over and over again. Two dreams, actually, and I have them both with equal frequency.\"\n\n\"Which one did you have first?\"\n\n\"The one I call the 'good dream'. They actually are both good dreams in that they are pleasurable and I enjoy what happens in the dream. But in one of them I am being very good, and in the other I am being very, very bad. But they both feel wonderful.\"\n\nI waited, making it clear she should continue. Finally she did.\n\n\"In the good dream, there is a wonderful man who loves me and takes care of me, and I take care of him. He makes love to me, takes me in every possible way, and we have children, four of them, two girls and two boys. I love them, I love him, there are always with me, and every day is a wonderful day.\" I hear a pure and soaring Suzie from her.\n\nShe sniffed back a tear. I waited for her to continue. \n\n\"And in the other dream, he is not there, nor are there any children. But lots of other men are there. They all want me, and they all take me. They stand in line waiting for me and they all do things to me. All the things you do to me, but there are lots of them, two and three at a time. It feels so good!\" I hear a strong and raspy Suzie signal from her, but no Melanie meltdown overtones at all. I wonder if that's what Tessa is like. \"And they all feel good too. I am the center of attention, but then.....\"\n\nShe sniffed again, and drew a deep breath. \"But then, they all go away, and I am by myself, until the next dream.\" She sobbed a bit more. \n\nIt was my turn to talk. \"What is different about the sex in the two dreams?\"\n\nShe paused, as if trying to visualize it. \"Well, in the good dream the man does everything I want, and he makes me do what he wants. It's so good.\"\n\n\"Does he spank you and punish you?\"\n\n\"Yes, but he knows I like it!\"\n\n\"In the other dream do the men do anything different?\"\n\n\"Only that there are several of them instead of one: there is one for each of my favorite orifices, much of the time!\" \n\n\"Do they spank and punish you?\"\n\nShe got excited. \"Yes! But they don't care if I like it, they just so it because they want to, they just use me and that makes it better!\n\n\"So the difference is that in the 'good' dream, the man knows what you want, and in the 'bad' dream the men don't know and they don't care?\"\n\nShe got a very distant look in her eyes. \"Maybe it's more of a thrill with more men?\"\n\n\"Have you ever been with that many men?\"\n\nShe laughed. \"No Robbie. I am a nice sorority girl! I have only been with two men before you, you big dummy, and only with one other woman before your put me in your harem, and never with more than one person at a time until you made me your sex slave. Not that I didn't love every minute of it!\"\n\nShe got a faraway look in her eyes. 'Which dream is the best, Robbie? Which one is the right one for me?\n\n\"Only you can decide, Millie, but I might be able to help you with that.\"\n\n.....\n\nWhen I got back to the dorm Thursday night, I was wiped out. I was happy for Erminia, but torn for Millie, and hungry besides. I had to make a decision and get the word to Lara and Suzanne about the final plan for Millie's party. Should I just do what I think Millie wanted, or do what I thought would be best for her?\n\nTomorrow morning would mark the start of the last day of classes, and the start of one of the busiest high pressure weeks of my life. I really didn't feel that much pressure about school, I thought I had it handled. Heck, even if I bombed all my finals completely I would still pass everything and have two A's and 4 C's, something lots of other freshman would kill for. I had three girlfriends and two pretty hot prospects, and I was invited to three parties, but could only go to two: the ZZZ end of school toga bash and Millie's so called 'graduation party.' Then I was traveling with all three of my 'current girls' to run the Marathon, and had to decide whether to submit to them again Sunday after the finish, and then come back to school and take four final exams. The other aspects of my life were another story. \n\nI wanted to do right by Millie. I wanted Suzanne to want only me, not two or three other guys at once. I wanted Lara to stay just like she was, forsaking all others while I fucked around, and I wanted Nora to spend the upcoming spring semester in bed with me and both other girls, and then pine for me and behave like a nun all through whatever grad school program she choose. Gosh Robbie, you don't want much do you? Totally realistic goals, man. You fucking idiot!\n\nI might as well bite the bullet about Millie tonight, so we had a little time to react. Maybe in the process of talking to Suzanne and Lara I would realize the right thing to do. I called Suzanne, then I conferenced in Lara.\n\n\"So we have to decide what to do for Millie's party, but I'm still not sure what it is!\"\n\n\"What do you think she wants, Robbie?\"\n\n\"Well, I think she wants two things, but she thinks she has to choose one, and she is having trouble doing that!\"\n\n\"Hello!\" Both girls said it in unison. \"Every girl's dilemma, Robbie!\"\n\n\"Really? What two horns form the dilemma you are caught on, every girl?\"\n\n\"Come on Robbie, you know this. Fuck toy or fine young lady, which should I be?\"\n\n\"But all three of you are both, that's why you are so wonderful!\"\n\n\"Aren't you a nice man, but maybe naive? We can't stay that way. Maybe we could if all men were as interesting as you. But for the most part, we have to pick one road or the other!\"\n\nI thought about what Millie had said. What if she tried all those men and found out it wasn't as big a thrill as she imagined? And what if she found a good man who would treat her bad sometimes, just like she needed?\n\n\"Okay you two. We need to give Millie a chance to experience her fantasy, or at least something like it, with the least possible risk of hurting her. Lara, you said you had some ideas?\"\n\nShe did. Suzanne had some suggestions and some ideas about who could help the most. I wasn't totally comfortable with it, but I couldn't come up with anything better, so I agreed to it. Now if I could just stand to watch it. I wasn't so much worried about Lara seeing it anymore: she had told me about her fears and had designed her plan to avoid them for Millie. But Suzanne was already planning for at least two guys: me and G\u00fcnter. Would this little scene inspire her to go for three? \n\nCome to think of it, I also had to worry about how easy it was for Lara and Suzanne to dream this stuff up and pull it off. This has to something they had thought about before now. The Bi Phi pledges were certainly on board to do anything for their sorority president Millie, and they got so turned on at baring it all at the addicted to party that they were looking for another thrill. And those girls could get their hot little boyfriends do to just about anything; especially get naked at a party with them. But I felt more than a little trepidation about Big Liz, Marilyn and my cosmologist in training old junior high buddy Ralph helping out. Was that designed to help Millie, or just to help Suzanne visualize and vicariously enjoy one of her own fantasies? I guess we would find out tomorrow night. Maybe I should have a talk to Ralph myself, before Millie's Midnight Madness actually took place.\n\n.....\n\nElena Roberts was excited about getting a 'bonus' pre-Christmas break visit from her grandson Robbie so he could run the Marathon race downtown on Sunday morning, but she had some preparations to make if she was going to serve him and his friends the kind of Saturday night meal that Robbie really liked. She had planned her Friday shopping excursion carefully. A long drive south for few stops in the old neighborhood for spices, special teas, and then lunch with an old friend who still grew sassafras, atomic fire style chili petins, and some other esoteric herbs for the special horehound drops that Robbie liked; then a quick trip to an older North Dallas urban area shopping center to visit a 'hippy' natural food and herb store, followed by the long drive north and back home. All her travel would be in daylight, all in between rush hour peak periods, and all on regular streets, not any newfangled high speed toll ways or old decrepit freeways with dangerously short entrance ramps. Google maps had proved very useful to her.\n\nShe didn't mind that almost everyone in her life except her oldest friends called her 'Grandma', and she was actually hopeful that she would get called 'Great Grandma' a few more times before she slipped this mortal coil, but one did have to plan more carefully these days. The old light yellow diesel Mercedes with the dark grey leather interior was a trusted friend with almost as many miles on it as Elena herself had, but her son Ronnie always made sure it was perfectly maintained and with those big new modern tires it drove like a dream. The newly installed navigation system that spoke directions out loud made it easy for her to get where she was going -- Ronnie showed her how to download her trip plans from her computer to a USB stick and then upload them into the fancy aftermarket in dash system in the car. He even put in a special garage in the new house with radio operated overhead doors front and back so Elena never had to back up, and didn't say a word about it to her. She must have raised that boy right. \n\nElena had planned her layers of clothing too. It was barely 18 degrees F in the DFW 'Metroplex' this December morning, and windy to boot, and was not expected to get much warmer during the day. She was prepared for any climate eventuality. Eldee was going along too, but her wardrobe required little thought. Her rough double coat was good down to zero with all by itself, and if she had some shelter from the wind, like being in the car, she was happy as a clam down to 30 below. She flowed into the back seat enthusiastically and almost became invisible, her brindle coloring blending in with the dark grey leather. She liked to ride in the Mercedes as much as Elena liked having her along.\n\nElena's health problems had flared up two years ago, and her doctor recommended a service dog that was trained to sniff her and alert on keto-acidosis or other abnormal metabolic states. Elena got her back up at that, telling the doctor \"We don't buy working dogs, we raise working dogs!\" The dog training outfit was at first hesitant to try to teach her to train then 9 year old Eldee, but the old war hound took to it like a duck to water, breezing through their training program and amazing them all. Elena didn't think it necessary to mention that Eldee was already trained in search and rescue, drug and bomb detection, and bite work, and had won several regional tracking competitions against 'professional' police dogs, or that nine of her pups were actively working military or police dogs. They also did not need to know that Elena had gone beyond their training to teach Eldee to detect low blood sugar levels and press the med alert bracelet if Elena was unconscious. No need to draw unnecessary attention, you know. She did have a secret motivational trick -- giving Eldee bite work as a reward for learning new things. It was a maximum motivator for her. She had liked to chase little Robbie's tennis balls as much as any pup when she was young, but when she began training with the puppy tug, her love affair with tennis balls was over. And when she was finally old enough to go find the bad guy and bite him she was truly in her element. \n\nBy 9:30 AM the traffic on Preston Road was only moderate, and she made her way south steadily, driving carefully. She remembered when Alpha Road was the absolute northern limit of Dallas civilization, but not anymore. It took her 30 minutes to get that far south. Another 30 minutes got her to Lover's Lane and into the old neighborhood, passing by the old theater where Robbie saw his first movie. At each stop, Eldee stayed in the car, looking out the windows until she got bored, and then curling up in the back seat to rest and stay warm. Just before lunch, they made a planned stop at a dog friendly park, giving Eldee a chance to relieve herself, jump around a little bit, and drink some water. \n\nLunch was at a high end neighborhood caf\u00e9 chosen by her friend for good food and its nearby location. Eldee stayed in the car parked nearby with the rear windows cracked a bit for ventilation. As they were shown to their seats, Elena nodded to the recently retired US senator from their old neighborhood at the next table, a woman Elena had known since their days working together at the local Parent Teachers Association many years ago. She suddenly wished she had taken the time to make more introductions for Robbie -- sometimes it could benefit a young man's career to know such people socially. She liked this place and she once again ordered the Queen of Hearts salad, her favorite. \n\nAfter a wonderful lunch and wide ranging conversation, her friend gave her a paper bag with the specially chosen harvest from her garden, just the stuff she needed to prepare the things Robbie liked for Saturday night's dinner. They bid each other goodbye and Elena sat back in the Mercedes.\n\n\"We just have one more stop, old girl!\" She knew Eldee would happily ride with her all day long in the old yellow taxi, so named for its coloring that resembled the taxicabs in Berlin. Elena went back to the ever comfortable Preston Road, and then north to Northwest Highway, then east toward the shopping center, studiously avoiding any contact with the dreaded Central Expressway. She drove around in the parking lot until a spot opened up near her target destination, a spot on the edge that would be easy to get out of. Her son Ronnie had pestered her to get a handicapped sticker, but her pride wouldn't let her do that until she absolutely needed it. Until then, the walk was good for her. \n\nShe cracked the back windows and locked the car. Eldee was a little more animated than usual, watching several groups of people hanging around the parking lot like she was about to go bite the bad guy. But none of them approached Elena or the car, so Eldee eventually settled down in the back seat. Elena walked around in the mall a little bit, window shopping and then planning to make the herb store her last stop before carrying her stuff back to the car. \n\n.....\n\nJustin \"Richard\" Simmons thought this shopping center looked like a place to score some decent bucks. He had just been released early this morning from the Preston E. Smith unit in the west Texas town of Lamesa due to the overcrowded conditions there, and had caught a five hour ride east with another released inmate's brother. They dropped him near downtown Dallas off of IH30 and they continued on to Terrell, where another brother was 'staying' at the state school. Richard had been in Smith unit twice, which was pretty predictable, since he had been charged with 'state jail felonies' and Smith was surely a state jail. He was lucky his latest asshole lawyer had dealt carjacking down to auto theft, too, since that qualified him as a non-violent offender and got him in the early release pool. \n\nHe knew he was lucky, but he also knew he was a whole lot smarter than the average bear, and he had learned some good stuff from his 'fellow students' at Smith unit. Richard was into cars: stealing them, jacking them, and selling them: hot cars for cool cash. Thanks to his recent schooling, he knew a couple of places in South Oak Cliff that would pay quick cash for clean cars. The Ford F-250 pickup truck was the big prize and cash cow, as it had the cargo and towing capacity to bring lots of people and dope back from Mexico, before being parted out and shipped to South America. But lots of other cars were sellable too, and Richard needed some walking around money, and fast.\n\nHe had walked north until he found this place: it was high end enough to have late model cars, but not so fancy as to have the new engine killer alarms and GPS tracker systems. It was right on the expressway for a quick getaway, and it had a big open parking lot that made it easy to spot a target from a ways off and plan ahead. It had a few cameras, but not very many and he could spot the dead zones near the edges of the lot. Before his most recent incarceration he used to target young guys with nice cars, using his girlfriend to distract them by flirting with them in the parking lot. Once he had scoped out the car and the keys and a clear escape route, he would sucker punch the kid and they would jump in the car and take it to the chop shop for cash, then party for a day or two and do it all over again. ",
        "But he got caught because one of his girls ratted him out to deal down her own dope charge, and he had now learned that 'do it yourself' was a better plan. The guys at Smith taught him to target senior citizens: they often didn't notice you coming, they didn't react as fast, and they couldn't chase you at all. Sometimes they didn't even remember what you looked like. One punch and they were down and out. He was also anxious to try out a new wrinkle: if they looked like they were really loaded, you made them drive you back home so you could ransack the house, too. Just get in the back seat behind them, stick the butt of a knife or something in their back, and tell them you have a gun on them, and maybe you pick up a much bigger score than the car alone. \n\n.....\n\nElena found several things in the other stores she just had to have. The herb store had exactly what she needed and when she finished there she started toward the parking lot with two big shopping bags and two boxes of herbs. She was a little pre-occupied with getting everything back to the car without dropping it, and the cold breeze wasn't helping any. Eldee could do a lot, but she couldn't carry packages. Elena spotted the car out of the corner of her eye and walked unsteadily toward it, balancing her stuff. \n\n.....\n\nRichard spotted a perfect target: a tall and elegant looking old lady struggling with several bags and packages. He plotted her path and realized she was heading toward an older model Mercedes diesel. That was great: very sellable in Mexico and South America, so it was also very fence-able here. If he remembered correctly, this model had electric locks, but not a wireless key fob. When she opened the driver's side door, the other three doors should be unlocked by the electric motors on them. So he should wait until she unlocked the door to make his move. If it has been upgraded to an aftermarket security systems that could only open the driver door and not the others, then he could still reach in and pop the back door manually -- luckily she had left the rear windows cracked enough so that he could reach in easily. As she passed close by, he noticed a big old engagement ring, wedding ring, watch, and the kind of purse his last girlfriend was always begging for, so he decided to go for the trip home and the big score, not just the car. He fell into step a few paces behind her, and began to count a stack of folding money in his mind.\n\nHe was surprised when she remote started the vehicle from some distance away. Aftermarket remote start might mean a better alarm, but maybe she just wanted to keep warm. It also meant she had a key fob to unlock the door. Sure enough she popped the trunk only; leaving the other doors locked, and dropped her packages in it. She closed it, and only then hit the key fob to unlock the front door. Somebody had taught her how to be security conscious. As she moved into the car, he stuck his hand in through the back window to unlock the rear door. Despite her caution, this was going to be an easy score. \n\n.....\n\nEldee never slept very soundly -- she was always listening. Through the cracked open windows of the Mercedes, she heard the distinctive noise that Elena's key ring makes from some distance away and fully woke up, ready for a happy reunion. A few seconds later, the car started up, and she knew Elena was almost here, even though she had not moved from her resting place on the seat yet. Then, things changed. A strange and funny smelling hand came through the window, with a knife in it! \n\nEldee knew exactly what to do, and she did it faster than human reaction time. Bite the wrist just behind the hand that is holding the weapon. Bite as hard as you can to make them drop the weapon, then pull the wrist down to the ground and hold it there until she hears an 'out' command from someone she knows and trusts. She had never actually done this inside the car before, and she couldn't just take the arm down and press it to the ground. But, she would do her best, and she dropped down to the floor of the car on the passenger side, determined to pull that arm down towards the ground as hard as she possibly could, and through the floor of the car if she had to.\n\n.....\n\nSuddenly pain shot thought Richard's arm like it was on fire. He instinctively pulled hard to try to get his arm out of the car and found he could not -- in fact, his arm was being steadily pulled further into the car! He turned his head left and forward just as the right side of his neck banged up against the car window and he heard a pop from his right shoulder. He could not feel his hand anymore, he did not know if he still held the knife or not. He looked at the little old lady, and she was calmly talking on her cell phone with a funny little smile on her face! What the hell?\n\nThere was a damn dog in that car, and it had him by the wrist. It felt like there were fifty or sixty teeth buried in his arm. The dog was tugging even harder and his feet were now lifted off the pavement and part of his surely dislocated shoulder was being pulled past the narrow window opening and into the car. That dog was a lot stronger than he was, especially when his feet were not touching the ground. Someone was screaming. It wasn't the little old lady. \n\n.....\n\nSenior Sergeant Sam Same normally didn't enjoy working private security, but he did like the overtime pay and the Christmas presents it was going to let him buy for his grandkids. This shopping center had some crime problems splashed in the newspapers in the last few months and they wanted to have a visible and credible security presence to reassure Christmas shoppers that they could come to here to shop in safety. So at least one off duty officer was in uniform and on hand here at all times. He heard the call on his radio and only had to drive around to the other side of the center to respond, which took less than a minute.\n\nAs he approached he heard a blood curdling scream and he was very much afraid that a woman had been mortally wounded and was in the process of dying. A tall and well-dressed grey haired woman waved at him and put her cell phone away. She looked calm and collected, and she was actually smiling a little bit. Then he saw two legs wind milling wildly out of the back window of a yellow Mercedes. He got out of his car and took in the scene. There was a dog inside the car, trying to pull the would-be car thief into the car through a window opening only about 4 inches tall. If someone didn't call a halt to the process, it looked like the dog would to it eventually, but it wouldn't be pretty. He hoped to hell it wasn't a pit bull and that it had been trained to release on command. The guy let out another awful scream. Sam added a request for an EMS unit to his response to the call. \n\nThe woman approached him. \"Hello, Officer. I didn't want to out her until someone was here to restrain him, but you may not want to handcuff that right wrist until someone looks at it.\"\n\nHer use of the word 'out' made him feel a lot better. The dog was trained. \"Is the dog reliable?\"\n\nThe woman looked highly insulted. \"Are you?\"\n\nTouch\u00e9. He put one side of his cuffs on the perp's 'good' arm. The guy probably didn't even notice. He nodded to the woman and then she said \"Eldee, Those Lawson\" or something like that, and the dog immediately let go. \n\nShe said something like \"Eldee, Higher\" and the dog pushed down on the handle with both front paws and opened the car door on the passenger side! Then she trotted proudly around the back of the car and to woman's left, her little stump of a tail wagging, and sat watching the guy intently as he tried to stand up. \n\nThe woman said \"Bay Wake Him\" or something like that, and the dog stared intently at the wounded and very miserable would be car thief. It appeared certain to the Sergeant that if the guy didn't stay perfectly still; the dog would cheerfully bite him again. Still the tail wagged, as if to say 'go ahead, buddy, give it a try'. Sam liked this dog. It was smaller than he first thought. The way that guy was suspended in the air, he would have pegged the dog at 120 lbs or more, but now he could see that she was not that big, maybe 75 lbs at most. \n\nSam sat the guy down on the payment, and handcuffed his left arm to his left leg. The woman suggested having the guy hold his right arm up over his head to discourage any bleeding, although it didn't seem to be bleeding that much. The guy actually looked at the dog first, as if to ask permission, and then moved his arm. My, Sam thought, but isn't he is suddenly so very well behaved? \n\nEMS arrived and began working on the guy. The woman walked a few feet away and called the dog over to her, patting its head, giving it something from her purse, and saying \"Bravo Eldee\" or something like that. The dog wagged its tail even faster. The woman looked up at Sam and said \"I suppose you have some paper work to do?\"\n\nSam smiled. That was the only thing he liked about this private gig. Somebody else did the paper work. A DPD unit showed up to process the guy, and that officer spent some time talking to the woman, and then the perp. After a few moments the officer motioned Sam over and said \"This mutt just got out of Lamesa early this morning. Didn't take him long, eh?\"\n\nSam snorted. \"He sure picked the right car, though!\" Both cops had a good laugh, probably their only one for the rest of upcoming night shift. Sam asked the woman if he could pet the dog, and when permission was granted he offered the back of his hand for a sniff. The lady laughed when the dog wagged its tail.\n\n\"She likes you, sergeant, and she is pretty picky, especially about men. Her name is Eldee.\"\n\nSam scratched the dog's ears gently. \"Eldee, I wouldn't mind having you ride with me. I bet you would be a lot more useful than my last partner!\" She looked him right in the eyes and seemed to smile, like she actually understood exactly what he had said. What was it with this dog? Sam was still chuckling to himself as he drove away.\n\nAs they left the shopping center, Elena knew she had to add one more stop on her way home. Luckily the Whole Foods on Preston Road sold really nice calf liver. She usually baked it and then dried it to make the little training rewards for Eldee and the other dogs. She had been making the treats more often since Ronnie had made her start training the youngest dog to sense her metabolic states and do the medical alert thing, just in case Elena happened to outlast Eldee. But sometimes she just fried some chopped up calf livers in a skillet and poured it over Eldee's supper, and this was one of those nights. She glance in the rear view mirror and saw that Eldee was laying calmly in the back seat with her eyes closed.\n\n.....\n\nA couple of hundred miles south in Austin, nobody was thinking about liver, although lots of people on Sixth Street were actively working on pickling theirs. But on campus, there were some raspy and conflicting Suzie signals making their way through the ether in anticipation of Millie's so called graduation party, and one highly perceptive but very worried freshman. It didn't affect his appetite, though, and he had called his buddy Ralph to come down and eat dinner with him. Ralph wasn't going to the ZZZ toga bash, but he had been enlisted as part of 'the cast' at Millie's party. They went through the line together and sat at small table in the corner. Robbie was pretty sure neither one of them wanted to be overheard. \n\n\"So, Ralph, how are things with Marilyn and Big Liz? Are you still up to the task of satisfying the two girls?\"\n\n\"Robbie, life is good. I never would have believed I would have things this good. I am so happy the Cal Tech thing didn't work out; I have all the academic challenges and resources I need here. Thanks to you, and those two amazing beauties you found for me, I have the perfect 'bed life' as my Granddad used to say. I have also discovered that all that sex and satisfaction makes me think better and more creatively. When I win the Nobel Prize, I will have to cite your babe spotting talents as making it all possible.\"\n\n\"How would you feel if those two suddenly wanted to try two or three guys at once?\"\n\nHe laughed. \"Oh, they probably do, and this party is sure to give them some ideas. After all, Suzanne explained everything to them before they explained it to me.\"\n\n\"Doesn't that bother you?\"\n\n\"It drives me completely crazy, but I can't let them know that!\"\n\n\"What if they try it and they like it? What if they like much more than with you?\"\n\n\"Well, my emotions got so crazy that I had to resort to pure Aristotelian logic to figure out how to handle this. First, I can never let them try it on their own. I have to be there: do my best to please the girls and to throw the other guy or guys off their game. Second, if they really do like it and plan to make it a regular thing I am better off without them and it's better to learn about that sooner rather than later. Finally, if they try it once and then decide that it was no big deal, nowhere near the thrill they thought it would be, then I have two wonderful women thoroughly devoted to yours truly for a long time, maybe forever.\"\n\n\"What do you think the odds are?\"\n\n\"I make it 80/20 in my favor, and those 20% girls are too risky to be with long term anyway! So now I just wait and see, and when the coin is flipped and hits the turf, I can deal with either outcome.\"\n\n\"That seems very cool and collected, Ralph?\"\n\n\"I really don't have any other way to influence the outcome Robbie, so I might as well be cool about it.\"\n\n\"What it there was a way to influence the outcome?\"\n\n\"I just don't see one.\"\n\n\"If I show you how, can we help each other out?\"\n\n\"This I have to hear!\" \n\n\"Did you ever watch on old movie on Netflix called \"Strangers on a Train?\"\n\n\"Yeah, but I don't want to kill anybody, Robbie!\"\n\n\"You won't have too. But what about a little reciprocal buzz kill?\" \n\nWe talked for about half an hour before I had to leave to meet the girls at Lara's so we could go to the ZZZ party together. Sometimes we guys have to stick together, for the long term good of civilization, don't you know. \n\n.....\n\nThe ESU chapter of ZZZ had a reputation to maintain as hardcore party animals, and they worked at it. Besides the special punch made from grape juice and grain alcohol they called 'instant stripper' because if often had that effect on girls, they also had some 'traditions' to liven up the final party of each semester. One was that all the pledge class's girl friends had to strip and dance for everyone, ostensibly a direct consequence of consuming 'instant stripper'. This heated up the party atmosphere markedly, sometimes encouraging other girls to do the same, and led to some campus rumors that helped in recruiting the next pledge class. It also meant that Lou Baby would be displaying her smooth and ample charms for us, and I wanted to see Suzanne's reaction to that. Also, this party had become the unofficial 'let it all hang out' end of class party of the Greek crowd. Lots of other houses had parties this weekend, but it was widely known that if you really wanted to let your hair down and get your freak on, the place to do it was at the ZZZ last day of class bash, and it was sort of like a little bit of New Orleans in Austin: the normal rules of civilization did not apply for this night. This also meant that lots of independent girls and even some goody two shoes coeds from Baylor and Trinity, some with an entire semester's worth of pent up lust, often showed up at the party intent on having one of those legendary wild, wild nights that they could tell their friends about later. \n\nSuzanne was wearing her \"roman negligee' costume from that first magical ZZZ toga party we went to on our \"first date\" and she made up similar ones for Lara and Millie, too. She also had saved the roman robe thing she had made for me, and I put it on. Each one of the girls looked incredible, but the total effect of all of them arrive together was really going to turn some heads. Lara had arranged for Rodney Driver to pick us up in the limo, and he whistled as he held the door open for us. The girls really did look even better than ever. Maybe they were just a little more mature, or well rested, or maybe, like professor Lillehammer's wife Dorothy had so perceptively said, they were all getting their recommended daily allowance of \"Vitamin D for Dick\", thanks to yours truly. It was my sacred duty.\n\nAs we moved toward the entrance of the ZZZ house, I saw Lara and Rodney standing beside the limo, engaged in an animated conversation, which was just winding up.\n\n\"So, we aren't going to get to actually do anything with her, but you want her to think we are?\"\n\nLara laughed. \"Well, you never know who else y'all might run into at the party, Rodney!\"\n\n\"This could be the start of my acting career!\" Rodney laughed. \"Midnight, right?\"\n\nThe ZZZ party was already rocking when we got there. They had a DJ with a decent setup and everything sounded damn good. I saw Kevin, Lou Baby, the Prez, and Ms. Super Body at a table near the front, and they waved as we entered. Millie danced with several guys who asked her, and seemed to be enjoying herself immensely. It didn't take long for things to get interesting. There was a ceremonial pouring of the punch, and then all the pledges and their dates had to imbibe deeply. The DJ put on something with a rocking beat and turned the bass way up, and as if by magic, several of the pledge girlfriends began a fairly showy strip tease. Suddenly Suzanne and Lara were on either side of me, talking to each other as if I wasn't there. \n\n\"Lara, did you know Robbie is somewhat of a stripper connoisseur? He has spent lots of time in Dallas going to strip clubs to watch amateur dancers.\"\n\n\"Really, Suzanne? Do you think any of these girls will catch his eye?\"\n\nI couldn't resist setting the hook. \"I've actually only been once. I only watch the best; I don't want to waste my time. There doesn't seem to be too much in the way of hot competition here: nobody near as hot as oh say, Alley, or Nora Upton. Now those two can really take it off!\" I heard a couple of competitive sparking Suzies emerge on either side of me, with Suzanne sounding especially raspy. \"But maybe Lou Baby will surprise me! I would like to see how that smooth cocoa butter tan has held up thorough all this winter weather and I'd especially like to see without it the little plum purple bikini in the way!\" Sure enough, Lou made a big show of chugging one of those big red plastic cups of the punch, and instantly began to strip. \n\nSlowly and tantalizingly: she looked like she was really enjoying herself. Kevin looked really nervous. When she took her bra off I realized there must be some tanning lamps at her sorority house, because her tan was spectacular, now competitive with water skiing Candy, setting off her red and nicely erect nipples on a pretty light pink bikini sized background, surrounded by some gorgeous and deeply tanned breasts. I could smell the cocoa butter from here. She must have been working out a little, too, because they seemed to riding a little higher and prouder on her pectoral muscles. \"See what I mean, girls?\"\n\nLara's Suzie sparked with competition but also some adoration, and I was sure neither one of them would kick the other out of bed. That might be very interesting, but I had to take pity on Kevin. Suzanne, on the other hand, was sending a rasping and buzzing mixture of attraction, competition, and a deep desire to dominate. It was a heady brew indeed, and it acted directly on my dick. \n\nSuzanne strutted over to the punch bowl, her heels clicking loudly on the hard wood floor. Every male eye in the place was glued to her, as were Lou's and most of the other women's. She picked up a red plastic cup, dipped it full in the punchbowl, and held it too her lips, then raised it to toast Lou. \"You look beautiful tonight, Lou, and seeing you makes me want to put on a little show myself!\" With that she chugged the entire 12 ounces or so of 'instant stripper', her eyes never leaving Lou's.",
        "Lou looked like a mongoose watching a snake, as Suzanne slithered over to her. Her light olive skin was uniform in color all over, no tan lines or markings of any kind. She made a quite a show of taking her light green panties off out from under her diaphanous and semi-transparent Roman costume, and offered them to Lou, holding them out about a foot from Lou's face. I thought she had made a miscalculation there, because Lou made no move to take them or otherwise acknowledge the gift, leaving Suzanne hanging and symbolically somewhat 'dissed'. Or so I thought. But Suzanne was ready for that. \n\nShe moved a little closer to Lou and used the panties to gently tease Lou's nipples, and Lou was mesmerized! She closed her eyes and gave herself up to the sensations. Several male voices behind me muttered, and a few females, too. I heard male and female Suzie signals spring up from every direction. Males wanting both girls, girls wanting both girls and a big chorus of that old time female herd envy hatred for both these showoff alpha females. Suzanne suddenly draped the panties right over Lou's head, like she had done to Lara the first night I got them together. Lou's eyes were closed, and before she could move she drank in the aroma, and suddenly was frozen, except I saw her nostrils flare as she took another deep breath. \n\nSuzanne moved back, every eye on the room on her. Lou could throw those panties on the floor and stomp on them now and no one else would notice. They were left only with the image of them draped on Lou's face. Suzanne twirled and swirled, the centrifugal forces making her 'skirt' ride up higher and higher as she spun around to the music. Lou opened her eyes, but she could not take them off Suzanne's body, and she did not move a muscle. Suzanne suddenly reached down and quickly raised the gown over her head, swung it around on one finger for a moment and then let it slip off and fly away. I could not believe her. Wild college days indeed! I knew it wasn't the alcohol; it was her desire to get a little wild, and to dominate Lou.\n\nI looked over at Kevin. His jaw was slack and his face was completely white. You could have heard a pin drop, and it seemed like no one in the room was even breathing: except Lou and Suzanne. Both of their nostrils flared and Suzanne moved toward Lou like one of those attacking Flamingo dancers. The DJ must have been a genius with a hell of an MP3 collection; he quickly switched the music to a tune I had endured for years of my mother's required ballroom dancing classes: \"El Choclo.\" It was music for dancers who were either going to have a knife fight or a fuck, or both. I think it meant something like \"Sin in the mud\", and I had never seen it done with this much tension, and only one dancer was moving, so far.\n\nThen suddenly Suzanne took Lou in her arms and swirled her around, totally the leading dancer of the pair. It was artistic, it was erotic, and it was downright nasty. Gasps arose from the entire audience, and the cacophony of Suzie signals almost made me dizzy. Lara gripped my arm so hard I was starting to lose feeling in my hand, but the circulation to my cock was a-okay. After a few passes back and forth, Suzanne performed a perfect 'dip' laying Lou out horizontally, and kissing her hard, right on the lips. The she dropped her on the floor and walked away. I could not tell if Lou was awake or out cold.\n\nKevin went over to check on her and she had clearly fainted. He helped her up, as Suzanne came back over to us and Lara helped her put her costume back on. Lara nuzzled Suzanne and whispered 'I was afraid you were going to fuck her face!\" \n\nSuzanne looked matter of fact about it. \"Maybe. If she begs for it.\" Holy shit! \n\nA few other girls then got up and stripped, but even the ones with visions of an epic wild night knew they could never top what they had just seen. Lou avoided Suzanne for the rest of the night. I heard all sorts of Suzies, some sending for me, but I was thinking there was already too much sex in store later tonight, and I didn't really want to look for more. Rodney picked us up about 11 and took us back to Lara's place. The girls said they had a few things to get ready before the other guests arrived. \n\nThey had already decorated the trapeze in the bedroom, and now lit lots of candles in the living room. Then they took some kind of metal and plastic thing out of a box at put it on Millie's fuck rug at the end of the short hallway that led from the living room, past the bedroom and to the storage closet. Lara had ordered it from someplace called Kinky Katalog on the web. It looked like a cross between one of those kneeling chairs with no back and the old fashioned stocks that I had seen on a trip to Colonial Williamsburg, with some kind of thick black spider web stuff thrown in for good measure. I knew that Millie would end up on display restrained in this contraption by the end of the night, but I also knew that the party would start with a smaller number of people in the bedroom, and Millie on the trapeze.\n\nLara and Suzanne wanted to make sure Millie was suitably excited, so they had positioned this whole thing as some kind of initiation ritual that Millie might well not survive, and told her she could have one trusted friend to act as her 'second' to help her if she got in trouble, or claim her body if she did not make it. But that could not be Lara or Suzanne, since they would be conducting the rituals, or me, since in my role as Master I would begin her testing to see if she was worthy of graduation. She chose Mei Ling, and I wondered if what Mei Ling saw tonight would further stimulate her own dark desires, sending her on to depths that Cisco had not yet been willing to plumb. Mei Ling would certainly have all her questions answered about just exactly what I had been doing to Millie for most of this semester. \n\nThe first set of rituals, conducted in the bedroom, would be 100% authentic. Some of the later stuff might be dramatized a little. But I was betting Millie would be pushed to her outer limits and maybe just a little bit beyond, not to mention Mei Ling. How close would I get to my outer limits?\n\nThe girls closed the bedroom door while they 'prepared' Millie. When they opened the door and signaled that they were ready, I would come in as Master and begin Millie's ordeal. We would start with all the basics, titillation, teasing, spanking, tender caresses, whipping, kissing, pinching, and licking, all moving toward greater and greater excitement yet denying her permission to come for as long as possible. Then we would allow her to come several times, then tell her this was the demarcation point, where she would go beyond out little loving circle to the kind of stimulation and excitement she craved. And then it would get pretty funky for a while.\n\nOutside the door, waiting to do their part, were several people that I knew well: Mei Ling, Cisco, Big Liz, Little Marilyn, Ralph, Rodney Driver, and Little Hollywood. There were also eight Bi Phi pledges and their boyfriends that I only knew in passing. That made for quite a little party in itself, and they had some time to kill while we worked on Millie. Lara had set up appetizers and drinks, and had some pretty good tunes playing, and the atmosphere was naturally a little charged up. I listened with one ear to the pledges tell some stories, and tell their boyfriends that they should just go with the flow. I wasn't sure what that meant, and I wasn't sure they did either.\n\nThe door opened about six inches and Lara crooked a finger at me and at Mei Ling, who was standing right next to me. She drew in a big breath as we went inside. Millie was strapped to the trapeze, totally naked, and covered with a thin sheen of some kind of oil. It emphasized her erect nipples and smooth skin, shining in the light of several dozen candles arrayed about her, and smelled faintly of some musky perfume. Her pubic hair had been completely shaved, and her hair had been cut to only two inches or so long. A black blindfold covered her eyes completely, but she was already breathing fast and shaking a little in the restraints. I put on my Master garb, and then Suzanne removed her blindfold, letting her see the scene around her for the first time. She had on no makeup at all, and I realized I had never seen her that way before. She looked somehow more real and more beautiful at the same time. She made eye contact with me and shivered. I did too.\n\nSuzanne motioned for Mei Ling to join her at Millie's side.\n\n\"Millicent, you have chosen this women to be your second. Are you sure you can depend on her?\"\n\n\"Yes, Mistress, I trust her with my life.\"\n\n\"You are, trainee! What is your safe word?\"\n\n\"River Oaks.\"\n\nI knew that was the name of the elementary school that both she and Mei Ling had attended.\n\nSuzanne turned to Mei Ling. \"Do you promise to help this trainee in any way you can, but not to interfere with anything that is done to her unless she uses the safe word?\"\n\nMei Ling shivered. \"I promise.\"\n\nSuzanne gave her an evil look. \n\n\"I promise, Mistress!\"\n\nSuzanne put a hand on Millie's hips, and spoke right in her ear. \"Do you give yourself freely up to us, Trainee, to use anyway we choose?\"\n\n\"Yes, Mistress!\"\n\n\"You realize you must be punished for your slutty nature, don't you?\"\n\n\"Yes, Mistress!\"\n\n\"And you understand that if you pass the initial tests, you will then be placed on your fuck rug for all to see and use?\"\n\n\"Yes Mistress!\" Two excited Suzie notes arose from Millie: one pure and clear, the other raw, raspy and funky.\n\nLara and Suzanne went into an expanded version on the same kind of 'contrast therapy' they had used on me. Gentle caresses and kisses on Millie's shoulders, and then swift little pops with the little short whips. Smooth massage on her thighs, and then sharp spanks on her hips. Millie's body was flushed red, and her breathing was labored. Mei Ling looked on with widening eyes, and when one hard blow landed on Millie's ass, I saw Mei Ling's nipples pulse through her silk blouse. That certainly told me something.\n\nI stood in front of Millie trying to look foreboding as the two girls worked on her. I caught Mei Ling occasionally staring at the silver and gold metal cock piece of my costume, and I liked that. Things quickly progressed to flogging the inside of Millie's thighs, and as they turned red, her enticing pussy smell became apparent in the closed bedroom. Mei Ling's eyes took on a wild look, and then she spun her head to look as Suzanne spoke.\n\n\"Remember you may not come without permission, slut, and you do not yet have permission!\" Suzanne nodded at Lara. Lara dropped down and began kissing Millie's buttocks. Suzanne began kissing the front of her thighs. Millie's nipples got even harder: I reached out and began twisting them, and she began to mumble and quiver on the trapeze. I watched Mei Ling's eyes shift as Lara stopped working on Millie and kneeled in front of me and began to remove my cock piece. She looked away twice, but then stared openly when Lara lifted it off of me. All the attention had excited me, and I was as hard as I had ever been. It occurred to me that I was even more excited than when I had submitted to the girls, and I filed that away for further consideration. I shook my hips a little bit, and delighted in watching Mei Ling' eyes follow the tip of my cock. Millie's eyes were locked on my face. \n\nSuzanne used the little remote control and lowered Millie down to just above a kneeling position: her feet touched the floor and her legs bent at the knees, but most of her weight was still supported by her arms tied to the trapeze. Millie's eyes focused on my cock, and Mei Ling's never left it. I slapped Millie's cheeks with my engorged dick, hard enough to sting a little. Then I grabbed her head and fucked her mouth just as roughly as I possibly could. Mei Ling's breathing became labored, and Millie's breath whistled through her nose. Millie was desperate to get my cock down her throat, and her Suzie exploded with lust. I grabbed her head and fucked her mouth with roughly the same motion I used to masturbate with; I just had Millie's head in my hand. I realized I was just about to come, and looked over at Mei Ling just as I began to shoot and groaned, pushing myself down further into Millie's throat and letting her suck it out of me. \n\nMei Ling licked her lips as some 'glug, glug' sounds emerged from Millie as she finished off my last little droplets. She used Suzanne's little trick and I stayed hard as a rock. I pulled my cock out of Millie's mouth and pointed it at Mei Ling, and delighted as her lips parted involuntarily. Maybe someday, sweetheart; but not tonight, especially with Cisco in the next room, although come to think of it, he was waiting to possibly fuck my Millie, so maybe turnabout was fair play. I spread my legs and hunkered down a little bit, rubbing my cock against Millie's nipples. \n\n\"You may not come, slut!\" I told her, and Suzanne used the remote to move the trapeze up until Millie's waist was level with mine. I slammed myself into Millie. She was dripping wet, and her Suzie told me she was desperate to come. She would not get that for a while. Lara donned a strap on and entered Millie's ass and Mei Ling's eyes got even bigger than saucers. Suzanne climbed up the ropes like a gymnast, and shoved her pussy in Millie's face: Millie devoured it. Her Suzie signal reached new peak amplitudes, and warbled and woofed with overtones that were new to me. Lara and I switched positions, and I heard Millie's Suzie signal morph as the plastic dildo in her butt was replaced with my warm cock. I hope she liked it as much as I did. She shook and chattered in the restraints: if she didn't come soon she would pass out. \n\nI motioned to Lara and Suzanne, pulled out of Millie's ass, and got ready to come in her mouth again. Lara reentered her ass with the strap on, and Suzanne put the handle of her whip in Millie's now sizzling snatch.\n\n\"When you have completed sucking everything out of Robbie, you may come!\"\n\nMillie's mouth sealed itself to me desperately, sucking like a woman possessed. I hoped not fully. Then I was over the edge, and launched everything I had into Millie's throat. She got every drop, and then exploded in a series of seizure like orgasms that threatened to pull the trapeze out of its moorings. Lara sucked on one nipple, Suzanne took the other, and I knelt and began to eat Millie's pussy. Mei Ling reached out and gently touched Millie's ass. Her pussy tasted like never before: both sweet and sour, both salty and tangy, and it was dripping at an almost alarming rate. I synchronized with her Suzie and tuned for maximum stimulation and she ripped off three more quick orgasms like a well made assault rifle set to fire a three round burst.\n\nThen we all stood back a foot or so while Millie sobbed on the trapeze, tears running down her cheeks. Mei Ling was crying too. Suzanne kissed Millie gently for a moment then said \"You have passed your first test, Trainee!\"\n\nMillie drew in a shuddering breath and began to sob in relief. \n\n\"You may now call yourself a proud graduate rather than a mere trainee. You have surrendered completely to a close circle of trusted people who care for you, and you have proven yourself worthy of our love. \"\n\nMillie stopped breathing almost entirely, and Suzanne continued. \"You may stop now, but if you do, you may never know the complete truth about yourself. Are you ready to submit yourself completely to all the people waiting for you in the next room?\"\n\nMillie's voice sounded like a very young girl. \"Y, Yes, Mistress.\"\n\n\"You realize that your safe word will no longer have any effect. They will take you and use you as they want, until they are finished with you. Do you understand?\"\n\nThe raspy Suzie dominated, driving the clear one into the background. Her voice was even softer, but clear. \"Yes, Mistress!\"\n\nSuzanne and Lara began unhooking Millie from the trapeze, and then put a little black mask, like an old Lone Ranger mask, on her face. \"Everyone may see you, slut, but you will never know who took you, or how many!\" This mask was part of the plan, and it was Lara's idea. It was brilliant, but I found it more than a little disturbing, too. She had really thought about this stuff. The mask was from the same Kinky Katalog, and actually did not block Millie's vision completely. It allowed her a very narrow cone of vision, so that she could only see things that were almost exactly in front of her. Too much to the left or right, or too much above or below the plane of her eyes, and she could not see it at all.\n\nThey opened the door and frog marched Millie out into the living room. All conversation stopped, and there was a massed intake of breath, then almost complete silence. They turned and walked her down the little hallway, Suzanne's and Lara's high heels resounded on the tile floor and the sound echoed through the hanging silence. I suddenly realized I was standing there in my Master costume, with the hood on, but with my cock hanging out. I also noticed, somewhat disappointedly, that no one was looking at me. The little procession of the naked and strikingly rubifacted Millie, being handled by Lara and Suzanne in their contrasting red and white sex suits, with the still bug eyed Mei Ling following meekly behind them, was attracting every eye in the room. \n\nThey reached the end of the hallway, and began to strap Millie into the Kinky Katalog contraption that had previously been placed at the end of the hallway. Although the audience probably thought Millie's body was being positioned for maximum exposure and accessibility to the hopeful gang bang group, they were actually carefully positioning and locking down her head so that she could only see a narrow portion of the middle of the hallway right in front of her, and nowhere else. Once they were satisfied with that, they began to spread her limbs and further restrain her with the spider web like straps built into the device. The audience's interest was piqued as they twisted her nipples and slapped her butt, and her wetness and excitement was made apparent to anyone with eyes and/or a nose. \n\nAs if on cue, and as they had been prompted to do, the Bi Phi pledges and their dates queued up in a line down the hallway, and everyone else lined up behind them, obviously getting ready to take their turns with Millie, muttering everything from \"Oh, boy!\" to \"Watch this guys!\" to \"I'm gonna fuck that bitch blue!\" Millie's respiration rate tripled, and the raspy Suzie signal soared, taking on some desperate overtones. The couple in the front of the line stripped in a matter of fact manner, and the guy said loudly \"How about a little hand job to get me hard for this slut, girlfriend?\" Rodney and Little Hollywood joined the line behind the Bi Phis, and Little Marilyn, Big Liz, and Ralph joined up behind them.\n\n.....\n\nMillie had chugged some instant stripper, too, and was also was in a complete fog or hormones, pheromones, and endorphins: high as a kite on raw sex. She couldn't move her head or body at all, and when she squinted she could just focus on some people lined up right in front of her. They were saying some pretty wild things, but she could only see them from about their waists to their knees, and nothing to either side, and the ones toward the back of the line were very much out of focus. The guy and girl in the front of the line took off their clothes, and the girl put her hand on the guy's cock and gently began to frig it. Millie could see it was getting hard. The next guy in line took off his pants too, as did the girl next to him, and then the entire line shuffled forward and closer to her. \n\nMillie heard Suzanne's voice take on a silky but aggressive and domineering tone. \"Look at all those hard dicks and wet pussies lining up for you, slut! You are going to finally get your fill, aren't you? Your pussy, your mouth, your ass are all open for them. I hope you are ready!\"",
        "The first guy in line walked right up to her and slapped his cock right against her cheek. His date said \"You are about to get fucked by my boyfriend, you slut! If he likes it, I might let you eat my pussy!\" The guy laughed and moved around and slapped Millie on the butt, and then she felt him spread her butt cheeks and enter her doggy style and start thrusting. It drove her crazy, and she couldn't deny it. The girl moved her pussy up just out of Millie's reach, but she could see it perfectly in the center of her vision, and smell the glistening wetness. \"Show me you want it, bitch!\" Millie couldn't deny that, either.\n\nThe girl behind the first couple spoke to her boyfriend. \"It won't be long, baby! I used to date this guy and he won't last two minutes. You'll be able to get in there real soon and fuck this slut!\"\n\nMillie hoped she was wrong, but even if she was right, the line seemed to disappear into the distance, and there were lots of guys ready for her. Lots of girls, too. \n\nHe was pounding away but quick and shallow, not slow and deep like she really liked it. But she was gradually getting into it and it he kept if up for a while she was going to get off again. But then the guy began to grunt and swear, and then said \"I am going to come in this slut, girlfriend!\"\n\nThe girl, her pussy still just out of Millie's reach, replied \"I want to see it, pull out and come on her ass, baby!\"\n\nHe said \"Oh, Yeah!\" and then grunted and Millie felt something warm and sticky on her ass. The girl said \"Yeah baby, that looks good!\" and then moved around behind Lara, too. Millie looked up to see the next guy in line step up towards her and shake his cock a little, and just off to the side at the edge of her vision, she saw her friend Mei Ling with a completely awestruck expression on her face, watching the scene. Then just behind her the first girl said, \"Watch this boyfriend!\", and then began to slowly lick the come off of Millie's ass. Millie quivered. Holy Shit but that was hot, and Millie came the third time the girl's tongue touched her. She wondered what the next couple would do to her. Mei Ling's face was frozen in an unreadable expression. \n\n.....\n\nThe first Bi Phi pledge and boyfriend in line had followed the script perfectly, taunting Millie, and then moving beside and behind her, spanking her ass, and waiting to deliver the rest of their lines. Suzanne reached down and spread Millie's red butt cheeks, and beside her Lara picked up one of the four various sized didoes that were on the table to her side. She pushed it into Millie and began moving it in and out of her pussy, rapidly and not very deep, just the opposite of what she liked, and she presumed it wasn't Millie favorite technique either. Mille was very wet, and this really didn't give her much of a thrill. Then Suzanne smiled at the boyfriend, and he made a loud grunt and said he was going to come. The girl friend told him to come on Millie's ass. Lara got out one of the little envelopes of honey from the fried chicken place and tore the corner just a little, then squeezed it until some shot out on Millie's ass. Millie jumped. She kept rolling up the end of the little envelope until all the honey had dribbled out onto Millie's ass, and then the girlfriend leaned down and licked it off. Millie came! This was going to work just fine. Mei Ling almost fainted.\n\nThe other seven pledge couples carried out variations on that theme. Some guys pulled Millie's hair while Suzanne used the dildo on her, and then two guys went behind her at once and bumped their legs against her while Lara and Suzanne gave her the old DP with two new and different sized didoes. Millie came again. Lara ended using more envelopes of honey, and some mustard and mayonnaise on Millie's back, ass, and neck, and the pledges and some of the girls and even one of the boyfriends licked Millie clean, while she shivered and came several more times. Two of the girls really did make Mille eat their pussies, and one served up her ass, and Millie was feeling a wicked buzz. \n\n.....\n\nI had to admit it was getting Millie off like crazy, and it was much less risky than just a plain old gang bang. I was a little concerned about how well thought out this all was, and how much Lara and Suzanne were enjoying the passing parade of dicks, giggling and whispering comments about them in each other's ears. I was struck by all the different sizes and shapes, but I lacked their apparent appreciation for the artistic merit of any of them. It was a very nasty scene, but Millie's Suzie had not yet touched the Melanie range. Rodney and Little Hollywood were certainly hamming up their act, though.\n\n.....\n\nMillie lost count of how many guys and girls had passed by, and her own orgasms, but she looked up and noticed two very muscular black guys that she could only see from the waist down having some kind of argument over whose cock was bigger and harder, all the while holding them about six inches from her face. She though they both looked quite nice, and saw no reason to waste any more time arguing. She decided to say so. \"Shut up and fuck me, you idiots!\"\n\nShe heard two guttural laughs, and then watched both guys walk around behind her. She felt two sets of hands on her ass, and felt her heart rate skyrocket. \n\n\"Say, cuz, do want the ass first or the pussy first?\"\n\n\"I'm gonna have 'em both, so the order doesn't matter!\"\n\nMillie just wished they would stop talking and start fucking! They did.\n\nLara and Suzanne took the two biggest dildos they had and pushed deep and slow into Millie's twitching twat and ass. Slow and steady wins the race! Mille soon came, twice, and then a little improvisational theater took place.\n\n\"Say, cuz, this is some fine pussy! Are you ready to switch?\"\n\n\"This is some fine ass, too, but I guess I could use a little variety!\"\n\nMille sobbed, and Lara and Suzanne switched the two big dildos clumsily and Rodney and Little Hollywood put their hands all over Millie, a little more than I was strictly comfortable with. I was next in line, having taken off my costume so she wouldn't recognize it. The girls got both didoes well established inside Millie again, and Rodney and Little Hollywood began making some noises in time with the motions.\n\n\"Say buddy, we are taking care of the ass and the pussy, seems like you could help out with that mouth!\"\n\nWe knew Millie would recognize my voice, so Ralph, waiting right behind me, said gruffly \"Don't mind if I do!\"\n\nI was only 'authorized fucker' who was allowed to come in Millie tonight, so I pushed my cock in between her sweet little lips. She sucked me down like an electric milking machine running on three phase 440. Suddenly Millie had a big rolling orgasm, and then another.\n\n\"Oh Boy, cuz, this girl can come! Did you feel that pussy rock and roll?\"\n\nLittle Hollywood sang \"Super fine honey bunch!\"\n\n\"Don't hold out on her pal, she is sucking you perfectly, so you should give her what she wants!\"\n\nFor some reason I made eye contact with Mei Ling, and she looked at me incredulously, and suddenly I couldn't hold out another second. I pumped my come into Millie's mouth, just as I noticed Lara, Suzanne, and Mei Ling all staring at me. Mille made some very enthusiastic suckling sounds and my knees got weak. \n\nBig Liz, Marilyn and Ralph were all behind me in line, and suddenly they give me a round of applause. I turned around and saw big smiles on the two girl's faces. Lara and Suzanne looked on with funny expressions. Millie polished me off and then I pulled out of her mouth, just as Suzanne and Lara took the dildos out too. Millie took a few deep breaths and tried to recover her sanity. When her head cleared a bit, she looked up to see Marilyn and Big Liz beginning to take off Ralph's pants. \n\nSuzanne leaned over to Lara and, perhaps thinking I could not hear her, said \"You know that Robbie's friend Ralph is a physicist right?\" Lara nodded yes.\n\nI started to speak, but hesitated. That wasn't strictly true, as Ralph had explained to me in excruciating detail. He considered himself a cosmologist, technically a mathematical physicist, but so far exalted over other physicists that it should be a category of its own. There was a strict hierarchy in physics, you see. Cosmologists at the top, of course, at the absolute tip of the advance of all important modern thought. Next were the 'hard working blue collar' physicists who 'hand us cosmologists the rifle' in the fight against ignorance: mathematical physicists, radio astronomers, solar theoreticians, and string theorists. These people could be very helpful in supporting cosmologists, and usually knew their place. There were a bunch of other practitioners under that, many disciplines that I had never even heard of. At the very bottom, the most unclean and unthinkable caste, were the materials scientists, trying to put on airs as if they were physicists when they were really lab techs or chemists, or even worse, chemical engineers, especially the ones at the horribly overstaffed, underperforming, and over politicized national laboratories west of the Mississippi. But for the purposes of this discussion, maybe all this wouldn't matter.\n\nSuzanne went on. \"Do you know why those girls call Ralph 'AJ', Lara?\" She shook her head no.\n\nSuzanne giggled, just as Ralph's underwear came off. \"It's short, so to speak, for Atomic Jawbreaker!\"\n\nLara said \"Oh! I used to love to suck on those hot candies. I would keep one in my mouth all day!\"\n\nSuzanne pointed at Ralph, and Lara said \"Oh Shit!\" and then they both giggled like schoolgirls, which of course they were. \n\n.....\n\nMillie's eyes were out of focus, or so she thought. She blinked her eyes, but the picture didn't change. Two female hands daintily reached out and stroked this giant cock that couldn't be real. But it was, and it got even bigger. \n\nOne of the girls used her other hand to grab Millie by her new short hairdo, and said \"I hope you are fully relaxed now, you slut, but let's give you a chance to get ready for what awaits you!\" She reached up and licked the giant cock, now only inches from Millie's face, keeping her eyes on Millie's. Millie looked cross-eyed as she tried to focus on it. She was surprised that those two girls could get their mouths around it.\n\nRalph walked around behind Millie and then Liz and Marilyn put two condoms on him. He positioned himself to enter Millie, with Liz and Marilyn and Lara and Suzanne all looking on with great interest. Millie was amazed that the thing didn't split her apart, and she felt genuine relief when she realize that it was all the way in her and she was still okay. \n\n.....\n\nI knew I had agreed to this in theory, but I did not like it in practice. Ralph took his time, I guess he had learned that he had to, and Millie's abundant wetness made it possible, I suppose. Realistically, I knew that if little Marilyn could take him on, most any woman could. I just didn't want to think about it anymore than I had to. He worked slow and deep, and I heard Millie's Suzie signal move from alarm to relief to pleasure, and then she came on more time.\n\nSoon everyone left, except Mei Ling, who sent Cisco home and stayed to take care of Millie. We all took Millie into the bathroom and shampooed her short hair, which didn't take long, and washed her and each other and then dried off. I could not help noticing that Mei Ling was almost perfectly structured, with long ropy muscles that I knew were trained in advanced martial arts, and beautiful honey brown skin and surprisingly light brown hair. We surrounded Millie on the bed, and kissed and held her. She cried a bit, and hugged everyone desperately. \n\nFinally she said \"Robbie, I know I told you the truth about my dreams, but now I'm not so sure I wanted to know myself.\" \n\n'You know about one dream Millie, and you still have to try to find the other.\" She put her face into the crook of my neck and snuggled into me again, and I stroked her short hair. I liked the new hair style, but before I could tell her that, she was asleep. Mei Ling kissed her on the cheek and got up to get dressed. I was kind of sorry to see that fine body back under cover. She waved goodbye to me silently and Lara walked her out to the door. \n\nLara and Suzanne came back into the bedroom and beckoned me to come back out to the living room. I gently disengaged from Millie and laid her head on the pillow: she never even got close to waking up. I tiptoed back out, closing the door behind me. \n\nSuzanne spoke first. \"Let's let her sleep here tonight. We'll drive her over with us to meet you and Alley at the dorm in the morning. Okay?\" \n\nI nodded. Lara got up to finish putting the party stuff in the dishwasher. \n\nSuzanne snuggled up next to me. \"Did you know that guys like Ralph are like New York City?\"\n\nI must have looked uncomprehending, because I was. She smiled at me. \"It's exciting, and a girl might want to go there once, and maybe even go back for a show every few years if she had nothing better to do, but I would never want to live there!\" She kissed me sweetly.\n\nWe went in to help Lara finish up in the kitchen. It didn't take long. Lara walked me out to the lobby. \n\n\"I heard what Suzanne said to you about Ralph. I just wanted you to know that don't even want to go to New York, although it was interesting to see the movie, so to speak.\"\n\nI had a lot to think about on the way back to the dorm.\n\n.....\n\nWe had all agreed to get an early start on the trip to Dallas Saturday morning, and it turned into a highly organized caravan with a social structure like the wagon trains that brought people out west in the old days. Millie was looking strangely subdued, or maybe just hung over. Nora Upton was actually there for the sendoff, but was not making the trip to Dallas. Damn she looked good. Nora and Alley had bonded, maybe in their shared stripper experience, or they were just somehow simpatico, but they seemed like best buds now. Since Lara needed three suitcases for an overnight trip, it was impossible for all of us to fit into her 'Baby Beamer' with all our stuff, even though Suzanne, Millie and I just needed a backpack with a change of clothes. So we had formed a caravan with Alley and her Suburban to get everyone there and back. Jay Kincaid was catching a ride up with Alley, apparently for his grandfather's birthday party on Sunday, and he had another big duffle bag full of dirty laundry with him, too. \n\nEver the planner and sewing buff, Lara had made up \"Team Robbie\" race paraphernalia: gimme caps and shirts. These were no cheap tee shirt shop silk screen specials -- they were nice caps with embroidered logos and near NFL quality stitched jerseys with an embroidered Team Robbie logo patch on the front and numbers and titles on the back. Mine had number 1 on the back and the name above it just said 'Robbie', but the others were symbolically intriguing. Suzanne's #2 said 'Trainer' which was true but also had Freudian implications for me; Lara was #3 and 'Event Planner', Nora was #5 'Academic Advisor', and Alley was #6 'Transportation Captain'. Millie was #4 and had wanted to be 'Fuck Toy', but she and Lara had reached a compromise with 'Groupie'. \n\nJay had never met Millie before, and after introductions and the requisite hugs, kisses and other sendoff rituals with Nora, we finally piled into the two vehicles: Alley's Suburban took Jay and Millie, and then Lara and Suzanne urged me to ride in the Suburban, too, saying they \"had some planning to discuss\" and they piled into Lara's Mini Cooper and led off, with Nora waving goodbye from the curb in front of Jester Center. I dearly wished she was going along too. Alley pulled the big Suburban in behind the accelerating Baby Beamer and the caravan was on. I was in the front seat with Alley and Jay and Millie rode in the back seat: the third seat was folded down to allow for more cargo area in back. After we dropped Jay off in Waxahachie, Bigun Jackson was going to meet us at my parent's new house where we were all invited for lunch and dinner. My mother and grandmother insisted that we use our guest rooms and spend Saturday night at the new house, and they were excited about having guests. Suzanne had announced an official training rules 'abstinence policy' for the night before the race to conserve my energy, which would also allow my mother to keep up appearances. \n\nI was too wired to sleep, and I fondly remembered the last trip in this land yacht where I had the opportunity to listen at length to Nora's unsuppressed Suzie signals while she slept, and much to my delight had discovered her longings for me and Suzanne. I didn't need My Only Talent to discern Jay's interest in Millie; he was staring at her like a high school sophomore pining away for the hot senior cheerleader. She didn't seem to mind his attention, either. I feigned sleep, leaning my head against the window, and tried to tune into Millie's signals. \n\nThe images in her 'black box' sexual event data recorder were fresh and vibrant, and I soon learned her reaction to last night's gang bang -- her first. I soon concluded it would also be her last. There had been rabid excitement and scores of orgasms, but there were also lingering fears of disease, disappointment, and scorn. She had just experienced one of her two recurring dreams of being absolutely the center of excitement and attention for many men and women, and having them take her all at once, and the excitement had been galvanic, but not as satisfying as she had hoped. She was not anxious to do it all over again: in fact, she was terrified that she had disappointed us or that we would all shun her. Maybe it was just the perversity of human expectations, like buyer's remorse, but suddenly the other dream of one faithful lover looked much more attractive. Her fear of disease was pervasive: intermingled with all the other feelings was a feeling of dread about future disease and infertility. The longer I listened, the sadder I became: remorseful was not a strong enough word to describe her feelings. But there was also a clear and pure Suzie signal, for Jay, that seemed all the more harmonious for its stark contrast to the other, darker signals. Also interesting was that even at the height of Millie's most intense sexual experience ever, there was no evil, cancerous tone like the Melanie Meltdown. \n\nI tried my best to shut down my receiver and leave Millie alone, but I could not miss Alley's signals so close by, and they told me that Bigun had some hot buttered lovin' coming north up the road towards him. Using the 130 toll road meant we were north of Georgetown in a flash, and then we made the obligatory shopping stop at Salado. Millie was suddenly fired up and embraced the distraction to stop thinking about her sexual future. Jay followed her around like a baby duck, while Alley dished her shopping secrets to all three girls, interspersed with tales of Sam Bass and other outlaws that hid out here in the past. The cargo area of the suburban easily absorbed all our purchases, and we got back on the road. Was it my imagination, or were Millie and Jay sitting a little closer together back there?\n\nIt didn't take long to arrive at those big ranch gates with the stylized W on top, and Jay's grandfather, John Jacobin \"Cactus Jake\" Warner, came out of the house to greet us, just behind the herd of younger siblings and dogs that was already running toward us. He stared at Millie in much some the way Jay had been doing. Perhaps there was some kind of genetic coding for attraction? Jay's mother and grandmother emerged from the house to give Millie, Lara, and Suzanne the same tour we had last time, and Cactus Jake, completely out of character, joined them. Jay hung back to talk to me.\n\n\"What's the deal with Millie?\"\n\n\"She is a wonderful young lady. Let me tell you three things about Millie, Jay. She is wonderful, she likes you, and she is the marrying kind, but....\"",
        "His smile had been widening with each word I spoke, but with the word 'but' his face fell. \"But what?\"\n\n\"She has, um, special needs.\"\n\n\"You mean she rode the short bus to school?\"\n\n\"No, no. She is as bright as an uncirculated copper penny.\" I suddenly realized the significance of 'uncirculated' in this context. \"But she is a very uh, shall we say, passionate young lady.\"\n\n\"Would you have any objections if I wanted to date her?\"\n\nHe had gotten right to the point, hadn't he? \"No, not if you treat her well. You see Jay, I love her!\"\n\nHe looked at me really funny. I felt like Suzanne, going on to speak before he could react. \"But I'm not IN love with her. I want her to be with someone that is in love with her, and will really take good care of her, and that could be you. But if you hurt her, I will come for you in the night and you might never be heard from again!\" I was astounded by the emotion behind my own words.\n\nHe continued to look at me with a puzzled expression. \"Chill, Man! Right now I just want to ask her out. Let's see how that goes and then maybe we can have another conversation, okay?\" He walked away shaking his head. \n\nCactus Jake emerged from the house, ambled up to me, and pushed his hat back to look at me. \"So, Roberts, Suzanne and Lara are the TWO girls you are seeing, but you are not with Nora, is that right? \"\n\n\"Yes Sir. Nora is best friends with Suzanne, and Suzanne is best friends with Lara.\"\n\nHe looked askance at me. \"Do the three of you....\"\n\n\"They are very special young ladies and I am proud to know them.\"\n\nHe smiled. \"I think I understand, but unfortunately not from personal experience. But let me ask you about Millie. For some reason, I find her fascinating. Jay seems to be on her like a bird dog on point. What can you tell me about her?\"\n\n\"Well, she is good friends with Lara and Suzanne, and president of her sorority. I think she likes Jay, too. Jay just told me he is going to ask her out.\"\n\nWarner smiled, broadly. \"She is certainly a huge upgrade from the girls he usually dates. Anything about her I should know?\"\n\n\"Let's see how their first few dates go, and then we might talk again. I think you may already know some of her family, but we'll talk about that later.\" He looked intrigued. Jay certainly was.\n\nWe were back on the road toward Prosperous a few minutes later, after Millie had peppered Jay with questions about his family, and he responded with questions about hers. They went at it like magpies until we left. Alley was daydreaming about being in the Bigun's arms and I worried about what Suzanne and Lara were 'planning' during their time in the car in front of us, and what I really wanted to have happen after I finished the marathon Sunday morning. Lara's dad and his girlfriend Lillian Gush were at a celebrity pro-Am golf tournament in Palm Springs, schmoozing their US accounts in much the same way as Barry Fermy and I were planning to start doing with the European prospects. Brujo's report was likely to give me a little head start on whom to target and how to figure out what we could sell them. We were going to crash for lunch at Lara's dad's house in Turtle Creek after the race, and then head back to Austin.\n\nTraffic was pretty congested on 35 until we made the exit for the Dallas North Tollway, but it didn't take long after that to make our way up north. We took the farm to market road east and soon passed south of Alley's house and then pulled into our new half mile driveway a few moments later. Bigun's huge and thoroughly tricked out pickup truck was very prominent in our driveway; all of our cars were in the garage. Eldee and the other dogs appeared from around the corner of the garage and flanked the approaching two vehicles in what almost looked like a planned formation. \n\nI was the first out of the car, being faster on my feet and also needing a bathroom break. Eldee was, as always, the leader of the pack and she glanced at me briefly, and then carefully watched everyone else emerge from the car. She showed no strong reaction, and then proceeded to stick her head in both vehicles and sniff around pointedly. A quick search told her that what she really wanted to find was not there, and she then walked back over to me and gave me a wickedly reproachful look. I had only seen that look once before: when I had accidently stepped on one of her puppies and made it squeal. She held my gaze for a beat to make sure I was properly chastised for Nora's absence, and then turned to greet our guests. \n\nSuzanne said \"What's she looking for, Robbie, searching the cars for dope?\" She laughed.\n\n\"Well, she is trained to detect explosives and narcotics, but she would have used a distinctive bark and a special indication posture if she had found any. I suspect she was looking for Nora. She took quite a shine to Nora when she was here over Thanksgiving.\" I grabbed as many of Lara's suitcases as I could carry and headed upstairs to drop them off and take a much needed leak. \n\nBy the time I emerged from the bathroom, everyone was in the kitchen talking. My folks and Grandma seemed to get along with everyone, and when Alley and Bigun had finished hugging and kissing , they headed for her house, promising to be back for dinner. All three girls volunteered for kitchen duty, and all were promptly put to work, as was I for the more prosaic lifting and fetching tasks. Lunch was already prepped and out under covers as a buffet line on the kitchen counter that faced the family room, but Grandma demanded some progress on dinner before letting anyone eat. Eldee sniffed around the new arrivals for a while, then hung back and watched them closely. \n\nWhen enough dinner stuff was prepped and cooking, Grandma took the wraps off of lunch and I made a huge Dagwood style sandwich for myself, along with a heaping helping of potato salad. The girls were a little more demure in loading their plates, but soon we were all seated around the family room and engaged in the usual family stories and chit chat. Eldee marched in and sat down next to Lara, putting her head on her foot. Grandma took notice. \n\n\"She's pretty picky about people, Lara. She has only taken to two people like that in the last ten years, you, and Nora Upman. Lara looked surprised. \n\nSuzanne said \"Robbie said he thought she was sniffing the cars looking for Nora, earlier.\"\n\nGrandma laughed. \"Not with her nose, honey. She knew Nora was not there as soon as you opened the car doors. She just made a show of looking to make sure Robbie understood that he should have brought Nora along!\"\n\nLara reached down and scratched the dog's ears, and said \"We tried to get Nora to come, Eldee, but she said she had to study!\"\n\nEldee looked up at Lara benignly. Lara laughed. \"It's almost as if she actually understood me!\" Grandma chuckled. Eldee gave me look, and I kept quiet. I noticed that Eldee did not even look at Suzanne. It was if she was not there at all. \n\nAlley, Bigun, and her parents showed up a little later, and we had a big family style dinner, complete with all my favorite carb dishes, lots of water, and a huge selection of desserts. I went up to my room early, as we had to get up very early in the morning, and I wanted to disappear before the photo albums came out again. I felt pretty good about my prospects for the Marathon race tomorrow. I didn't know how fast I could run it, but I knew I could finish, and Suzanne would be there to help pace me. I wasn't sure how wiped out I would be after the race, and how curious and/or submissive I would be feeling. I sure wish I could have listened in on Lara and Suzanne's 'planning' in the car on the way up. I wondered what I would be missing out on if I didn't let them take me over again. Did I trust myself to make the right decision about what to do? Did I trust Jay to take care of Millie? Why did Eldee ignore Suzanne? \n\nMillie knocked on my door and came in to say goodnight. She asked me what I thought about Jay. I said we would talk about him later. Suzanne came in a moment later, gave me a kiss, and said she would set her alarm and wake me up in the morning, and that she and Grandma had already collaborated on breakfast plans. Lara came in a few minutes later, with Eldee right on her heels, and gave me another kiss. Eldee ignored me. I hoped I could sleep. I had an interesting day coming up tomorrow, in many ways. If I could make it through finals, I should have a very interesting Christmas break. "
    ],
    "authorname": "conanthe",
    "tags": [
        "gang bang",
        "bdsm",
        "oral",
        "restraints",
        "anal",
        "training",
        "sorority",
        "fellatio",
        "fraternity",
        "tango"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-21"
}