{
    "title": "N is for Nude Ch. 03",
    "pages": [
        "[This story involves lots of nudity, oral, vaginal, ff and ffm. It involves honesty about sex within a family, and more than one family. No incest. Most of the sex is one-on-one and some of the sex is in triads. Just how much of the story is fantasy is up for conjecture. Part of the story is true.]\n\nSitting at the table after breakfast we sipped coffee and talked. Charlie and Sue talked about heading north into Canada for the middle of summer. Paul and Elaine were going home in the morning to Seattle. Bert said he needed to get to his sister's before her son graduated. Holly and I listened. I knew it was time for us to move too, but we hadn't talked about it.\n\n\"Nick, have you thought about where next?\" Charlie asked.\n\n\"If I was alone it would be one thing, but Holly and I need to talk before anything is decided. We also need to sell her rig. I don't like the idea of driving two rigs down the road if we can avoid it.\"\n\nBert looked at me and then at Holly. \"How much do you want for it?\"\n\nHolly looked at him and said, \"About fifty-five. It isn't even a year old and only has nine thousand miles. At fifty-five I'll do just a little better than pay it off.\"\n\n\"Will you take a check?\" Bert looked serious. Alice had a strange look on her face as she watched Bert.\n\n\"That would depend on who wrote the check.\"\n\n\"Do you have a bank account somewhere that has a local branch here?\"\n\n\"Yes, but you have an RV.\"\n\n\"I do. If I buy yours I need for you to deliver it. We can get dressed and go into your bank and handle the transaction. Then, when you leave Sandy Shores you can drive to drop the rig off and continue on your adventure with Nick. You'll have fifty-five in the bank and Nick in your arms. What do you say, deal?\"\n\nHolly didn't hesitate. \"Deal!\" She stood up. \"Nick has an appointment that will take until almost noon. On our way back from town let's get a pizza for lunch and meet here at the table at noon.\"\n\nAlice spoke up. \"Bring a salad too. That way I won't eat so much pizza I can't fit in my skin anymore.\" She laughed and pinched the skin at her waist. She got a little pinch, but not much. Breakfast ended and we each went off to take care of our business. I had ten minutes before I needed to be in the women's shower by my rig. I followed Bert.\n\nAt the door to his rig I stopped him. \"Maybe Alice knows what you're up to but I don't. I'm thrilled that the RV is sold but why are you buying it?\"\n\n\"Easy. Alice has a brother and he loves the outdoors. He runs a shelter for battered women. He makes ends meet but buying an RV won't ever happen. I made a good living and I can afford the fifty-five as long as it's for a good cause. In this case, two good causes. He did us a great favor a few years ago and this is the perfect way to say, \"Thanks.\" We will be going to his house to deliver it. We really don't have a house anymore.\"\n\n\"Wow! A fifty-five thousand dollar thank you. He must have done something wonderful.\"\n\n\"He stopped two guys from raping our fifteen year-old daughter.\"\n\n\"Yes, I see what you mean. He deserves a great reward.\"\n\nAlice was heard from inside. \"You see why I love Bert? He is my hero!\"\n\n\"You better get inside. I'd hate for you to miss the reward I think is waiting for you inside.\"\n\nI walked to the shower on time. The woman was waiting for me. She was tall, almost six foot, and tan all over. Her bush was trimmed and covered her vulva in a dark, thick, brown triangle of hair. The hair on her head was slightly lighter in color and hung in waves to the middle of her back. Her body showed the signs of age that say not all the roads she'd traveled were paved, but none of those signs detracted for her healthy look and her smile was warm. On her chest her breasts hung, gravity had overcome perkiness and aimed her nipples towards the floor. On a nearby bench I saw a soap holder, a shampoo bottle, a can of shaving gel, two razors and a towel. \n\n\"Where are your friends?\"\n\n\"I warned them not to arrive one second before their time. This time is mine.\"\n\n\"Then we should begin.\" I turned on the water and picked up the bar of soap. When the water was as hot as I wanted, I gently pushed her under the spray. Then I took her in my arms and kissed her.\n\nAfter a moment of surprise she returned the kiss and even became the aggressor. Her hands found my cock and began to stroke it. I stopped the kiss and the stroking.\n\n\"We are here to shave your legs and pussy. When that is done, we will tend to that need too.\"\n\nMy hand lathered her body from top to bottom and then moved down her legs. I moved her out of the spray and used the gel to cover her legs. With long deliberate strokes I shaved her legs and used my hands to assure I didn't miss any hairs. Then I covered her bush in gel and worked it in with my fingers. I was kneeling on the floor and her hands held my head, for balance, I believe. When the gel was worked in well I lifted the razor and slowly shaved her smooth. My fingers manipulated her skin, pushing and stretching it so I could shave her very smooth.\n\n\"Put your foot up on the bench,\" I instructed.\n\nShe watched me as she complied. I leaned a little and rinsed the razor in the spray from the shower. I shaved the edges of her slit, using my fingers to assure I got every hair. As I shaved I also stroked my fingers along her crease and occasionally into her vaginal opening. Each time I entered her wet opening she moaned. I turned her to face the bench and softly said, \"Bend over and hold onto the bench.\"\n\nWhen she did as I asked, I spread her legs and lathered her from the bottom of her pussy to her anus. The razor and my fingers found every hair and banished them for the day. I thought about pushing her quickly to an orgasm and thought better of the idea. I stood up and helped her to stand. I put her hands on the shower head and said, \"Hold this.\"\n\nI got the new razor and lathered her underarms. She squirmed and said it tickled a little. With a little work I positioned myself so my cock was touching her newly smooth slit.\n\n\"Concentrate on my cock touching your smooth pussy.\"\n\n\"Can I let him in?\"\n\n\"Not yet. Just tell me how it feels and what you are thinking.\"\n\nAs she talked I shaved her smooth. Her concentration kept her from being tickled. When I was done I dropped to my knees and pushed my face into her pussy, tongue first. Her knees got weak and I helped her lie back on the bench. I licked all the freshly shaved skin and the tender pink that had been hidden. When I sucked on her clit for a second she tensed and grabbed my head. Her legs went around my head and shoulders and she moaned loudly.\n\n\"Oh, Sweet Jesus! That is so good! Don't stop!  Suck on my lips!\"\n\nHer body went rigid and she held her breath. When she exhaled it came out as a deep guttural sound unlike a sound a woman would ever make in public. She shuddered and shook for a long time. I held her and rested my head just above her pussy as she came back to normal.\n\nWhen she was back she untangled herself from me and knelt in front of me. Her mouth opened and my cock disappeared in one motion. She did not gag. Her head moved back and forth taking all of me with each stroke. Her suction was strong and I knew from the sensations I was having that I would not last long.\n\n\"Do you want me to cum in your mouth, on your body or inside your body?\"\n\n'In my mouth!\" At least that's what I thought she said. She still had my cock in her mouth when she said something and since she didn't let go of my cock I made that mean she wanted me to give her my load in her mouth.\n\nI didn't fill her mouth but I gave her all I had. She didn't swallow immediately. When she did she followed up by cleaning every molecule of my gift from my cock. I helped her stand and we rinsed off one last time. As she stepped out of the spray one of her friends walked in.\n\n\"It's ten-thirty. My turn.\" She carried a towel and two razors. As the first woman toweled off I asked, \"By the way, what is your name?\"\n\nShe dropped the towel on the floor, walked to me, embraced me, kissed me and said, \"Donna. Anytime you want me just call my name. I'll come running.\"\n\nI knew it was from a song, but she felt good and I believed her. She ended the embrace, found an envelope that she handed to me, picked up her towel and left. Her friend had showered and washed her hair while I said good-bye to Donna.\n\nI brought her out of the spray and lathered her legs and pussy with the gel. When I applied the gel to her pussy I noticed that her hair looked freshly trimmed. I didn't say anything but set straight to my task. The first razor took good care of her legs. I stood and had her hold her arms over her head. I shaved the stubble from her underarms and from the way she moved and the noises she made I knew that playing in her pits turned her every which way including loose. When I was done with her underarms I put her under the spray and held her arms up over her head with my hands. She looked in my eyes and watched as I slowly bent my head until my face was in her underarm. I kissed her there.\n\nShe moaned and tried to get me to release her arms. I did not let go. I licked and kissed her pit and then worked across her chest sucking nipples as I passed until I was lavishing my attentions on her other pit.\n\nMindful of our time I stopped short of giving her an orgasm although it was evident she could get there from what I was doing. I re-lathered her pussy and had her lie on the bench. Using a fresh razor I carefully took long smooth strokes over her skin removing the brown hair as I worked.\n\n\"I'm close,\" she said.\n\n\"Do not cum! If you cum I will not finish. Do not cum!\"\n\nShe froze and I resumed work. Her skin quivered. The muscles in her belly shook. She closed her eyes. Her breath came to her in gasps.\n\nWith the final stroke of the razor I was done. She had held still, as still as her quivering body could and she had not cum. I bent to her smooth pussy and breathed my hot breath on her. She thrust her pussy at my face. She got what she wanted. I sucked her pussy. Her back arched and as she began a deep moan I sucked her clit.\n\nI broke contact for a second and said, \"Cum!\"\n\nShe did. I held on as she shook and arched hard. When she finally relaxed and calmed, I helped her up and used her towel to dry her.\n\n\"My name is Carole. How did you know about my pits?\"\n\n\"You told me. Your body told me.\"\n\n\"How come my body never told anyone else?\"\n\n\"Maybe it did, but they weren't listening.\"\n\nWe stood together and kissed until we heard the third friend come into the shower house. Carole handed me an envelope and left.\n\n\"Tell me your name, please.\"\n\n\"Jan.\" She was a natural blond. The hair hung straight and long, almost to her ass. I could see that she indeed had pussy hair but it was so light and so sparse that unless someone was really looking for hair they would believe she was already smooth.\n\nShe stepped into the spray and lathered with soap. I helped. She seemed to be in a hurry.\n\n\"Why the hurry?\"\n\n\"When you get me shaved I want an orgasm. The last one someone else gave me was eleven years ago! I don't want a vibrator I want a man's mouth in my cunt! I came earlier when I saw you eating that other woman. I came just from watching!\"\n\n\"Well, let's get to it then!\" I led her to the bench and she put herself on her back. She pulled her legs up near her chest offering me full access to her pussy. I worked the gel into her hair and shaved her smooth. As I shaved her I felt her legs. She had already shaved them! When I finished her puss I licked it twice using my tongue like a wide paintbrush. \n\n\"Yes!  That's what I need! Eat me!\"\n\nShe tasted wonderfully and sweet. Her nectar flowed up and out of her open pussy. I pinched her nipples as I probed her opening with my tongue, and then my fingers. \n\n\"I love how that feels. Reach in, find me!\"\n\nI reached for the g-spot and when I touched it she let me know.\n\n\"Oh! You touched it! Yes! Right there.\"\n\nFeeling her, tasting her and smelling her heat had given me another hard on. She stiffened and screamed as her orgasm overwhelmed her. After ten seconds or so of her orgasm I moved and thrust my cock into her pussy.\n\nIt pushed her into another spasm of delight and she screamed again.\n\n\"Fuck me hard! Slam into me! I'm cumming again!\" I did pound into her. I fucked her like we were both some type of primate where our language became nothing other than grunts, groans, moans and strange noises. As she came she pulled her legs up hard and a loud pussy fart echoed in the shower room. We both broke up laughing. We couldn't stop. I was still inside her and still stroking. As we laughed and stroked the pussy farts happened over and over. Finally I stopped and pulled out of her. We laughed some more.\n\nI toweled her dry and kissed her in a full body embrace. \n\n\"You didn't cum,\" She said.\n\n\"I'm not eighteen anymore. I'm as good once as I once was good all the time. Anyway, this was about loving you. You are fun, lovely and I'm happy I could be here for you.\"\n\nShe handed me another envelope, kissed me again and I walked her back to her RV, helping her carry all the shampoos, gels and other things.\n\nWhen I got back to my rig I went inside and looked in the envelopes. $600 cash in each. I stashed the money and walked down to the bus for lunch. Bert and Holly were parking the toad as I approached. Holly came to me, pulling her clothes off, and kissed me soundly.\n\n\"You taste like pussy,\" she said, kissing me again.\n\nI whispered, \"Eighteen hundred dollars worth.\"\n\n\"Bert deposited fifty-seven thousand in my account. The extra was for delivery. Do you know what that means?\"\n\n\"Yes! We're going to Alice's brother's house tomorrow.\" We kissed and sat for lunch. The three big pizzas and two big salads from town were on the table. We talked and ate.\n\nBert gave us a gift. It was a set of mobile two-way radios. As we drove the next day to his home we could communicate with him and with each other. Charlie asked how he and Sue would be able to communicate with us after we left Sandy Shores. I gave them my e-mail address and said that whenever I got to somewhere I could connect to the internet we'd check in. Holly smiled and said she had a laptop that was hooked up so we could connect wirelessly. We exchanged all the email addresses and got our calendars out so we could plan a reunion.\n\nWe picked the first week of October at a resort just south of Portland. Alice told us the resort had great hot springs, massages and things. We agreed to meet for dinner and again for breakfast. Paul invited us to stop at their home after we dropped Bert's new RV off. Holly said we needed to talk about where we were going, and we'd like to stop.\n\nAfter the pizza boxes were thrown away. Holly and I went for a walk. We held hands and walked to the sign and back without talking at all. I could tell Holly was thinking about something and so I waited until she was ready to talk about it.\n\nShe led me to the chairs by our motorhome and we sat, facing the surf.\n\n\"This is a big deal.\"\n\nI looked at her and said, \"Very big.\"\n\n\"Really. I just sold my home. I'm moving in with you. I know it's right and I'm scared.\"\n\n\"Anything I can do?\"\n\n\"Besides love me, tell me you love me, hold me and comfort me? No.\"\n\n\"I love you.\"\n\nShe got up and came to me. She sat in my lap and I held her. She put her head on my shoulder. We sat like that until my legs started to go tingly. We could see that the sun was getting close to the horizon. It was our turn to cook for the family.\n\n\"Holly, can I make dinner for all of us or do you want to help me?\"\n\n\"I want to help. What are we making?\"\n\n\"I make a pretty good jambalaya. It's pretty easy. Do you like to chop?\"\n\n\"Yes! Let's get started.\" We kissed for a minute or two before we got up.\n\nI gave her a chopping board, a good knife and a bag of veggies from the fridge. I started the rice and browned the meat. I had some good hot turkey links and some shrimp. Pretty soon I had the rice and meat in my wok with my secret spices and sauce mixture. I held back on the hot spices for the benefit of those who might not like their food as hot as I do.\n\nHolly brought in the chopped veggies and they were perfect. I added them and very soon we were ready for dinner. Holly went to the bus to set the table and tell everyone dinner was on its way. I got two hot pad gloves and carried the wok to the bus.\n\nWhen I arrived everyone was seated and waiting. Seven plastic outdoor chairs and one wheelchair around a big round table. I put the wok on the picnic table and held it as Holly used a big spoon to ladle the jambalaya onto plates. She served each person at the table, ladies first. Sue, then Alice and Elaine. Charlie, Bert and Paul. The last of the plates went to Holly and to me. As we ate the conversation turned to me.\n\nSue asked, \"Nick, would you share with us something about your life before five days ago?\"\n\n\"Sure. Six days ago I was driving from Salt Lake City towards the beach.\"\n\nI smiled and took a bite.\n\n\"No. I mean where did you grow up? What have you done with your life? Where have you lived? That kind of stuff.\"\n\n\"I was born the son of a farmer in Nebraska. It was a dark and stormy night. When I was born it was so traumatic for me that I didn't speak for almost a year.\"\n\nWhen the laughter died Holly touched my arm and said, \"Something has you not want to go there. You don't need to. I think we can all agree that what we really want to know is how you got to be the man we love.\"\n\n\"I can answer that question easier than the first ones. I am the man you know because I decided that the pain and hurt of my life needed to be balanced by love. I looked for it, begged for it, even paid for it a few times but it didn't work. Then, one day I was in an airport and found a book on a seat near the gate I was going to use. The book had me see that there was another way to live. I read more books and found more writers who spoke to my heart. On May 22nd of that year I decided I would never find love the way I wanted it, unless I was the love I wanted to find. I began making choices about how to treat people, how to do almost everything differently than I had been.\"\n\n\"Weren't you married?\"\n\n\"Yes. I found that first book about a month before our youngest child went away to college. I was busy with work and discovering myself and I guess I didn't pay enough attention to my empty-nest wife. She needed attention and something to do after the kids were gone. She found a lover. She left me and when I saw them together in town I decided I could get out of business and leave. I did. I have been living by the things I believe ever since.\"\n\n\"Am I the first woman you have been with since you went on the road?\" Sue asked.\n\n\"No. In the year I've been on the road I have been amazed at how contagious love is. At first it saddened me how lonely people are. There are so many of us and we're wandering around afraid to connect. We sing sad songs in our heads. 'What if I get rejected?' \"What if he wants more than I can give?' 'What if she does?' 'What if I'm not good enough?\"\n\n\"And then?\"\n\n\"And then I saw that when I loved them, it opened them. Not always but often enough that I kept doing it. I'm hooked. I love how I feel when I love everyone at this table. I love the three women who I was with while you were in town.\"\n\n\"Wait! You had sex with three women while we were in town?\" Bert looked shocked.\n\n\"They saw me shaving Holly in the shower this morning and asked if I would shave them. Of course I agreed. Of course shaving them also meant loving them and that energy included orgasms.\"\n\n\"Did you know about this, Holly?\"\n\n\"Yes. He was shaving me when we met them! They don't love Nick like I do. But I could feel how much they needed to be touched, caressed and made to feel loved.\"",
        "Elaine spoke up. \"Sue has been loved by Nick. Alice has been loved by Nick and Holly too. I invited him to spend the night with me and instead he gave me Paul, back in my life as my lover and husband. I feel loved and content.\" She paused. \"And, I would like it very much if Nick would love me, have sex with me.\"\n\nShe looked from me to Paul and back to me, then at Holly.\n\nPaul smiled and said, \"Nick, you could have fucked Elaine and ended my marriage. You didn't. I really understand that you love us as much as we love each other. I'm going to be grateful to you for the rest of my life. I think I must be nuts but I want you to make love to my wife and I want to watch. I want you to show me more about how to love her physically. What you taught me, you and Holly, really helped me be a better lover for Elaine. Please show me more.\"\n\nI stood up and helped Holly to stand. I hugged her and whispered in her ear, \"I want you to come with me and help Paul learn by being with you as he watches me with Elaine. Is that something you are willing to do?\"\n\nWithout breaking our embrace Holly turned her head to Elaine and asked, \"Will you be Ok with me participating too? Maybe I can help Paul to be a better lover for you if he can practice on me what Nick shows him with you.\"\n\nElaine looked at Paul and saw that he was starting to grow. She reached into his lap and held his cock. Her eyes met Holly's and she said, \"Your place or mine?\"\n\n\"Yours!\" Holly looked at the rest of the family and said, \"Can we ask that someone clean up dinner for us? It would be appreciated.\"\n\nSue and Bert stood and started cleaning up. Alice hesitated and then stood too. Charlie started scraping plates.\n\nWe walked to space eighteen. Inside the RV I sat on the couch and invited Elaine into my lap. She sat and I began exploring her body with my hands.\n\n\"Does it feel good when I touch your shoulders?\"\n\n\"Yes, but that feels more like a massage than a caress.\"\n\n\"Tell me about how you want your neck touched?\"\n\n\"My neck?\"\n\n\"Yes. It's very sensitive and if I do it correctly it turns you on.\"\n\n\"How do you know?\"\n\n\"You keep your hair short so it doesn't touch your neck. You tilt your head, an unconscious invitation to kiss you there.\"\n\n\"Please do.\"\n\nI kissed her just below the ear lobe. A soft nibble. She tilted her head to the side opening her neck to me. Surrender.\n\nTime passed with me slowly making my way down her neck to her collarbone, across the collarbone and up to her ear on the other side. I asked how different kisses felt and she volunteered her feelings as well. I noticed Holly on Paul's lap, his face against her neck. Her eyes were closed.\n\n\"Are you wet, Elaine?\" She nodded.\n\nShe hesitated before answering. \"I think so.\"\n\n\"Reach in and give me a taste.\"\n\nHer head stayed against my neck. Her right hand smoothly went between her thighs and into her honey, bringing me a wet finger to taste. I opened my mouth and she watched as she guided her finger into my mouth. \n\n\"Hmmm that's so good. Again, please.\"\n\nShe smiled and blushed a little. Her hand slid down between her thighs again and I noticed she spread her legs just a little. When her fingers came up two were wet.\n\n\"Taste yourself, please.\"\n\nShe did as I asked. When her fingers came out of her mouth she stopped. I didn't move. Elaine sat still for a while, deep in thought. Since she sat with me she had not looked at Paul once.\n\n\"I can't.\" The words came out softly. Elaine's head was resting on my shoulder. Her hands were in her lap. My right arm was around her back and my left hand held her knee.\n\n\"Ok.\" We didn't move. I saw Paul and Holly in my peripheral vision. Holly was sitting exactly like Elaine and Paul exactly like me. Elaine still didn't look.\n\n\"Is Paul loving Holly?\"\n\n\"If you are asking if they are petting and kissing, no. They are sitting just as we are.\"\n\n\"I want to be loved by you, but not by you!\" Her voice was still very soft. \"I want the experience of being loved by the love you give, and I want it to be Paul.\"\n\nI lifted my left hand from her knee and put it on her cheek, holding her from looking at Paul and Holly. Holly got off Paul's lap and sat in the other chair. I released Elaine's face and said, \"I'll bet Paul would be happy to love you with my love and his love and his body. Ask him if he would.\"\n\nShe turned and faced Paul. \"Paul, I don't want Nick to love my body, I want you. Can he coach us, teach us, and it be us that does this with each other?\"\n\nPaul's smile was a mile wide and he jumped up out of the chair. The exclamation point to what he said was supplied by his penis. It barely missed poking Elaine in the eye. Motor homes are small.\n\nElaine got up, pushed Paul back into his seat and sat in his lap. She grasped his cock and said, \"Are you sure you wouldn't rather have Holly?\"\n\n\"I'd rather have you. I would like the coaching, too.\" They both looked at me. Holly had taken the spot Elaine had vacated.\n\n\"Elaine, give Paul a taste.\" He watched as she dipped two fingers in her pussy and then lifted them, covered in her nectar, to his waiting mouth.\n\n\"Paul, there's more. Be gentle, no hurry. Suck it off and savor the feel of it, the taste of the woman you love. She's giving you a gift of such physical intimacy, such love that it is sacred. I stopped talking because Holly put two wet fingers in my mouth. I tasted her, savoring the taste, noting the difference between Holly and Elaine but not having either be better. Just different.\n\nI saw Elaine dip another gift for Paul and saw him take it from her fingers.\n\n\"Paul, there is a spot on her neck that if you kiss it gently, slowly, will drive her crazy. I think if you spent a careful half an hour there she would cum. Kiss that spot.\"\n\nHe bent to her neck and she leaned to give him access. He kissed down near her collarbone. She made no sound, no movement. He moved to the center front of her neck and kissed. No sound, no movement. He kissed again, a little higher and she said, \"60 degrees.\"\n\nPaul sat up and looked at her face. She didn't say anything. He leaned in and kissed her again, more to the side of her neck. \"75 degrees.\" He smiled and moved again. She got hotter and hotter as he approached the spot. He knew where it was and had decided to tease her. Finally, Paul kissed her an inch under her ear. \"Boiling!\"\n\nI knew that on Holly the spot was a little forward of Elaine's spot. I kissed Holly just in front of her ear, under her jaw. She whispered, \"Boiling! Oh God!\"\n\nLater, a lot later, I said, \"Paul, what is her body telling you?\"\n\nHe hesitated and stopped moving. \"She likes what I'm doing?\" \n\n\"Does she want more or does she want you to do something else?\"\n\n\"Something else.\"\n\n\"Are you sure?\"\n\n\"Yes. She touched my hand, twice.\"\n\n\"She wants you to do something with that hand. What does she want? What does she like for that hand to do?\"\n\nElaine picked up his hand and brought it to her breast. To the side of her breast. He caressed her breast. Not like kneading dough but with tenderness and feeling the entire breast. A few minutes later he touched her nipple and she arched, just a little. She kissed him and tightened her arm around his neck.\n\nI coached a while later and he took her to bed. She lay on the bed face down and he began massaging her feet. He talked to her about her feet. About how hard they work to make their lives better. About how he is honored to be the one who will be caring for them more often. \n\nHe moved his hands and lotion up her legs towards the knees and he talked more about how he was proud of the care she had always taken of her legs and of him and their kids. As he worked farther up on her legs he kissed the skin at the back of her knees and the insides of her thighs.\n\nPaul climbed onto the bed and straddled Elaine's thighs. His slippery hands kneaded lotion into the skin of her butt. Only once did he touch her pucker with his finger. She jumped a little and he apologized, not for touching her but for surprising her.\n\n\nIt took him a while but her worked all the way to her shoulders and neck. He talked softly to her for the entire trip. Acknowledging her, honoring her contribution to his life, their life and the lives of their children. She moaned, and melted as he worked. I found a piece of paper and wrote him a note, showed it to him and Holly and I quietly exited their motorhome. The note said, \"That was foreplay... That was loving. Lay beside her, hold her, listen for her cues, watch for her cues... then do whatever she wants. This could last days.\"\n\nAs Holly and I walked away she held my hand. Gently she guided us onto the sand and away from people.\n\nShe stopped and faced me. \"I watched in there and Paul is loving her just like you would.\" We kissed.\n\n\"Isn't that what she wanted?\"\n\n\"But before Paul took your phone call he never was like that with her. I'm sure.\"\n\n\"He changed his view.\"\n\n\"What?\"\n\n\"Paul has believed that men are a certain way, and that's just how it is.\"\n\n\"Men are? All men aren't one way.\"\n\n\"Paul didn't know that. Men generally don't talk about relationships. We talk easily about lists. Men, generally don't talk about their feelings. That said we aren't as sure about how to be in relationship with women because we know you are different.\"\n\n\"Paul knew Elaine was different.\"\n\n\"Yes, and he had a belief that the way men are he can't be tender, loving, acknowledging because John Wayne or some hero wasn't. Our role models were the strong silent types. Sly Stallone made a series of movies about Rocky Balboa. His role was full of action and just a few words. Men paid lots of money to see Rocky because he fit the internal stereotype we were raised to be like.\"\n\n\"So, why is Paul now snuggled with his wife who is a content woman, if my assessment is correct? I would have expected him to roll her over and stick his prick in her.\"\n\n\"He has figured out that the way it has been in his head, is not how it is, it is how the two of them create it. They will be married a long time, so there is no hurry to get inside her.\"\n\n\"He can be tender and caring because he gives himself permission?\"\n\n\"I think so. You can ask him in the morning, if you want.\" \n\n\"And all that is why you are tender with all of us?\"\n\n\"Partly. I make a choice. A well thought out choice, I think. I can believe all the stories about why life is the way it is or I can create life as how I want life to be. Life, the way I see it around me, occurs as cold, distant and not much fun for most people. The way I create it, it is warm, affectionate, caring, fun, and right here snuggled next to me.\"\n\n\"Anyone who looks at life that way would pick your way.\"\n\n\"No. Fear gets in their way. Fear that if I decide to love you, you won't love me back, or the way I want to be loved, or you'll break my heart. So, I don't take the risk. There is an old saying, \"Better to have loved and lost than to never have loved at all.\" People say it, but damn few live like they believe it.\"\n\n\"I believe it!\"\n\n\"I know you do. You are in action about living in the world you created for us to live in, not the world you woke up into a month ago.\"\n\n\"I'm scared.\"\n\n\"I understand. Living in a world of creation is uncomfortable. It is meant to be that why, I think. Did you ever see that movie called \"A League of Their Own\"?\"\n\nShe nodded.\n\nTom Hanks says a great line in there. One of his players comes off the field and he yells at her. She starts crying. \"You're crying? There's no crying in baseball. Why are you crying?\" She says \"It's hard.\" \"It's supposed to be hard. If it was easy everyone would do it.\"\n\n\"We are living differently. Everyone we know believes relationships are hard. They are hard because we make them hard. We say they are hard. Loving you is easy. Loving Sue is easy. When we say relationships are hard, we made that up!\"\n\n\"What?\"\n\n\"OK. Show me the hard part.\"\n\n\"I can't show it to you. You know that.\"\n\n\"Why is it hard?\"\n\n\"Because of the risk?\"\n\n\"What risk?\"\n\n\"What if it doesn't work out?\"\n\n\"So I should be afraid of what might happen in 2009, tonight?\"\n\n\"And all the other possible ways things can go south on us.\"\n\n\"If you decide to give the money back and go your own way tomorrow, were the last few days something you will regret or cherish?\"\n\n\"Cherish!\"\n\n\"Do you love me?\"\n\n\"Yes!\"\n\n\"Then what we created served us both, no matter how long it lasts. In my world that makes the entire risk a moot point. I really had nothing to lose by deciding to love you. I have everything to gain by loving you. I will always do whatever I can to have you feel that way as well.\"\n\n\"Loving me is a part of the world you are creating?\"\n\n\"Yes. I create how to love you, how to challenge you, how to nurture you and I'm thinking about it almost all the time.\"\n\n\"I know that's true. Sometimes I think I can hear the gears turning up in your head.\"\n\n\"What I'm thinking right now has to do with the sheets on our bed being lonely. Can we go and be with them?\"\n\n\"I'd like that. Got any lotion?\"\n\n\"As a matter of fact my new wife brought some with her when she moved in.\"\n\nShe molded herself to my body and the kiss was insistent and punctuated by her tongue. When it ended she said, \"You called me your wife.\"\n\n\"Of all the words in our language I cannot think of any word that applies better. I may not have a piece of paper from the government that says we are married but I don't have a piece of paper saying I'm smart either. The paper doesn't make it so.\"\n\n\"Take me to bed please, husband.\"\n\nWe stopped to kiss a few times on the way. When we got to the door we both noticed the schedule was down and a note was in its place. I took it with us inside. It was from Jan, Carole and Donna, the three women from the shower room.. \"Thank you for what you did for us. Here are our addresses and email addresses. If you are ever near us we are sure we will need a shave again by then. Call, write or mail... we'll come to you.\"\n\n\"I think we need to buy an address book,\" I said as I shared the note with Holly.\n\n\"I think I'm supposed to be jealous.\"\n\n\"In the old world, yes. In the world where love is the way it is, you have nothing to fear. Where do you want to live?\"\n\n\"Here.\"\n\n\"Shall we go rinse off in the shower room or right here?\"\n\n\"Here. We'll be in bed sooner.\"\n\nShe was right. We slept until a little after seven and got up. We packed the rest of Holly's things in our home and she took some snacks, a small ice chest to sit beside her and our portable two-way radios. Holly wanted to walk down and say good-bye to Sue and Charlie and Paul and Elaine. It was a little tearful but we all promised that it would be no longer than October before we saw each other again. We followed the Fleetwood and toad out and did radio checks on the way to the highway. I got tail-end-Charlie duty.\n\nWhen we were an hour from Alice's brother's home we stopped at a truck stop. Bert called him and he said he would be home for at least two hours. He wanted to know why. Bert said, \"Just be there.\"\n\nAs we got closer he told Holly he would park in front of Jack's house. She was to pull into the driveway. I would park next door. It worked perfectly. By the time we were out of our rigs Jack was standing on the front porch. By what he said I knew he had no clue about why we were there. Holly and I stayed quiet. He said, \"Are you guys thirsty? I can make some iced tea.\"\n\nBert and Alice stood in his yard and Bert said, \"We came to find out if you would like to go camping?\"\n\n\"Of course, but I'll need to pack some stuff. Where are we going.\"\n\n\"Anywhere you want,\" Alice said, beaming. Holly handed him the keys.\n\n\"What's this?\"\n\n\"Alice said, \"That motorhome right there is registered here at this address and has your name on the title.\"\n\n\"No!\" He looked at Holly. Holly smiled and said, \"Never play poker with Bert.\"\n\nShe looked at Bert and said, \"If we left anything important in it. Bring it to us in October.\" \n\nWe hugged and Jack started to look through the windows of his rig. We got in our home and drove off, honking. I looked over and Holly's eyes were full.\n\n\"Well wife, where shall we go?\"\n\n\"We agreed to go to Elaine and Paul's while we answer that question.\" She smiled a devilish smile and asked, \"Wanna know how to get there?\"\n\n\"That would help.\"\n\nShe went to the bedroom and came back with a box. She opened it and took out a GPS system. The instructions were easy. Plug it into the cigarette lighter socket and when it started up she put in Paul and Elaine's address. A few seconds later a map came on the screen and a voice said, \"Proceed 1.6 miles to highway 126. Go east 18.3 miles to I-5 north.\"\n\nWe laughed and kissed. I put the rig in Drive and we were on our way. The GPS directed us right to Paul and Elaine's front yard. We stopped for the night at a Wal-Mart parking lot we saw from I-5. When we arrived at their home I could see the roof of their RV parked behind a gate to their back yard. A teenaged boy and girl were shooting hoops in the driveway. I parked us at the curb.\n\nBefore we could even get out Paul was out of the house to greet us. He motioned to the kids to come meet us.\n\n\"Holly and Nick these are our kids, Beth and Sam.\"\n\nI stuck out my hand to Sam and he looked at me as if I had insulted him. I pulled it back and opened my arms. He stepped up and we hugged. Beth hugged Holly and we switched. It was a full contact hug from both kids. We put our arms around Paul and went inside. The tour didn't happen. He walked us through the house onto the patio behind the house. Snacks and iced tea were already on the table. Elaine walked out of the kitchen wearing a sarong wrapped around her waist. Her wonderful breasts were bare.\n\n\"We don't have any neighbors that can see into our yard so, why not be comfortable?\" She said.\n\nPaul pulled off his shorts and we all sat down. Holly and I stripped down too.  The chairs had towels folded on them. I asked, \"How about the kids?\"\n\nElaine answered, \"We have been house nudists all their lives. They know you are likely to be nude while you're here. If they join us they know they can be in the buff or not.\"\n\n\"OK. Well, where do you recommend we go next?\"\n\n\"How familiar are you with the Pacific Northwest?\"\n\nI was surprised. Neither Holly or I had much history in the Pacific Northwest. Holly had been living in Denver when she bought her RV and started traveling. She went to the Pacific Northwest because she had never been there. I had been living in Casper Wyoming. I had no plan, just ended up at Sandy Shores because a guy in a gas station pointed me there.\n\n\"Do you just want to go to nudist places or do you want to see some beautiful scenery as well?\" Paul asked. He was opening some maps.\n\n\"What do you recommend?\"\n\nA voice was heard from inside the house, \"Jasper!\" It was Beth's voice. She came out and joined us, dressed.\n\nPaul flipped the map and pointed to Jasper, Alberta, Canada. Beth took over the narrative.\n\n\"The drive from here to Jasper is some of the most beautiful scenery ever! Mountains, plains, snow, rivers, glaciers, and the rivers are a different color!\" She should be getting paid by the Canadian tourist board. Her enthusiasm sold me within a minute. She went on for at least ten.\n\nWhen Beth finally took a breath Elaine said, \"We have some friends who live in Banff. You could stop there and they would love to meet you both.\"\n\n\"Are there places for us to camp?\"\n\n\"Yes! The first time we went to Jasper was in September, remember Mom? The elk were all over the campground and town honking at each other, fighting and mating. We also saw big horn sheep, a bear, and Lake Louise! We camped near Lake Louise, and in Jasper.\"\n\n\"Elaine held up her hand and Beth smiled as she put a hand over her mouth.\n\n\"We also camped near Calgary and Edmonton. Remember, Beth? That's where we met those people living in a converted Trailways bus.\"",
        "\"Oh! They had a trap door in the bus so the cat could go down in the luggage bin to use the litter box! That was a cool bus!\" Beth caught herself and clamped her hand back over her mouth. We all laughed.\n\nWe mapped out a route that Beth approved of and gave us such a detailed description I figured we would recognize things we had never seen before as we drove. Holly went out to our home and entered the route in the GPS and Paul went with her.\n\nElaine and Beth headed for the kitchen to make dinner. I volunteered to help. They gave me the salad to prepare. As they worked Elaine kept looking over at me and then at Beth. I wondered what was churning around in her head but I didn't ask.\n\nWe had a wonderful dinner and conversation. Sam had a date with friends so he left right after dinner. Beth went to a movie with two girlfriends so she was gone before seven. When the kids had been gone for half an hour Elaine was ready to talk about what had been percolating in her head.\n\n\"Nick, I would like you to do us another favor. I'll understand if you say no, but I think it would be such a gift, if you are willing.\"\n\n\"Lay it on us. We'll think it over whatever it is.\"\n\n\"Beth is just eighteen. Eighteen and a month. She has dated and a couple of the boys have gotten to second base. She...\"\n\nI interrupted. \"Just how far is second base in Seattle?\"\n\n\"She's been breast groped and sucked. She gave a boy a hand job. That's all.\"\n\nPaul looked shocked. \"How do you know this?\"\n\n\"We talk.\"\n\nHe sat back, still stunned. He softly said, \"My little girl.\"\n\n\"Little girl, my ass!\" Elaine said, \"She wears the same size bra as I do!\"\n\n\"I didn't know that!\"\n\n\"If you ever did laundry, you'd know.\"\n\nI got involved, \"And the favor?\"\n\n\"When she comes home tonight I want you in her bed. I want her first experience to be with someone who will love her, teach her and make it special.\"\n\nI looked at Paul. Other than grabbing his chest he looked like he was having a heart attack.\n\n\"Have you talked with Beth about your idea?\"\n\n\"Yes. She and I talked right after we got home yesterday. I told her what Sue, Alice and others, including Holly have said about you as a lover. She agrees that having someone older who will be gentle and loving would be wonderful. Yesterday she wanted time to think it over. Today she said she would give me her answer before she left for the movie tonight. Ten minutes later, she brought the sheets off her bed down and washed them. When I went upstairs her room was clean, brand new sheets on her bed and she was in the shower shaving her pussy.\"\n\n\"I guess she said yes,\" Paul said.\n\n\"What about you, Paul? This is your daughter we're discussing.\"\n\n\"I'd never even considered her first time. I think I wanted her to wait... until she was thirty!\"\n\nWe laughed. I kept looking at Paul.\n\n\"Damn! I thought the tough part of parenting was when they were young. It isn't ever easy, is it?\"\n\nElaine shook her head. We sat quietly.\n\nPaul looked at the carpet. Finally, he looked up and said, \"I cannot think of anyone I would choose for her first who would be kinder or more loving. I don't even need to ask you to be gentle. You have my blessing.\"\n\nI turned to Holly. I didn't say anything. I waited.\n\n\"I request that both of you come and sleep with me in our home tonight. It will keep you from listening through the walls all night, and I will have two to snuggle with.\"\n\nI asked, \"What about Sam?\"\n\nThe phone rang at that moment. Elaine picked up the portable and answered. She listened and said, \"Be home by ten in the morning, OK?\" She hung up, looked at Paul and said, \"Sam wants to stay over at my sister's so he and Mike can hang out.\"\n\n\"That answered that. Sam won't be here before morning.\"\n\n\"What time shall we expect Beth home?\"\n\n\"They went to a movie, so I'd guess about ten-thirty.\"\n\n\"It's almost ten. I think I'll shower before it gets any later.\"\n\n\"Use our bathroom. The shower is bigger and you won't run out of hot water.\" Elaine pointed to their bedroom.\n\nPaul added, \"Fresh toothbrush and razors are under the sink.\"\n\n\"Holly, please join me in the shower.\"\n\nWe joined hands and went into Paul and Elaine's bathroom. Holly turned on the water and then came into my arms.\n\nWe kissed and it was a little frantic.\n\n\"I'm more worried now that when you went to shave those three women in the showers.\"\n\n\"You think I'm likely to leave you here and run off with an eighteen year old?\"\n\n\"No... I guess not. But... she'll be so enthusiastic and she'll be so tight!\"\n\n\"And you aren't?\"\n\n\"I don't know. I love how you love me and I feel like you fill me up.\"\n\n\"In the morning, it will be you and I headed for Canada. Beth will be right here, ready to take some young man on a trip he will never forget. I'm not that young man. I'm the coach for her. She's actually in the game.\"\n\n\"OK. Let's get clean.\" We got in the water and we cleaned each other. Holly shaved me and shaved near my cock as well. We dried each other and wrapped in towels. When we reentered the living room Paul and Elaine we in robes, ready to walk out to our place. I kissed Elaine and then Holly and watched them walk to the motor home. Holly was wrapped in a towel. As they entered I saw a blue Honda come down the street. I closed the door and went upstairs.\n\nElaine was right. Beth's room was spotless and smelled good. The covers on the bed were turned down, on both sides. It was a queen sized bed. I folded the towel over the back of a chair and got in, as I heard footsteps on the stairs. I had left the door open, just a little. A hand came in and flicked off the light.\n\nIn the seconds where I was adjusting to the darkness Beth went into the bathroom. I listened as the water came on in the shower. I heard humming as she showered. The water shut off and I heard a towel come off the metal towel rack. I saw the light in the bathroom go off. The little light from under the door went out.\n\nI waited. The door opened slowly and she stepped out, wearing a towel. One step into her own bedroom and Beth stopped.\n\n\"You have been thinking about this,\" I said, \"how do you want it to be?\"\n\n\"I'm excited and scared. Mom told me everything about her trip and you. I know this is going to be wonderful. I just don't know what to do.\"\n\n\"When you thought about stepping in here wrapped in a towel, who took off the towel, you or me?\"\n\n\"You did.\"\n\n\"Did I kiss you first?\"\n\n\"Yes.\"\n\n\"Was I naked?\"\n\n\"Yes.\"\n\nI got out of bed and walked to her. She didn't move. I took her face in my hands and kissed her. She melted against me. My hands left her face and went around her body, embracing her and holding her up. I kissed her again and gently probed between her lips. Her firm breasts pressed against my ribs.\n\nBeth opened to welcome me. Her hands still hung at her waist. She had surrendered. Without letting her go I slid around behind her. I figured the odds were good that somewhere near the spot on Elaine's neck was one about as sensitive on Beth. I found it.\n\nIt was as if I hit the power switch. Beth turned around and kissed me, hard! Her arms were around my neck and she pushed her pussy against my already hard cock. I moaned in appreciation and she whispered, \"Shhh. We need to be quiet.\"\n\nI kissed her again and said, \"Your brother is at his cousin's house. Your Mom and Dad are in my home with Holly.\"\n\n\"My Dad knows?\"\n\n\"Yes. We broke it to him gently that you are a woman. Some men have trouble seeing their daughters grow up. He sees you now.\"\n\n\"OK.\" We kissed again. I dropped to my knees, putting my mouth at the same height as her breasts.\n\n\"May I kiss your breasts?\"\n\n\"Don't ask! I want you to do everything! I want lots of orgasms and I want to be filled by you. You don't need a condom. I know you're clean and so am I. I've been on the pill for three months.\"\n\nI kissed her right nipple and she stopped talking. Her hands went around my head and she held me in place. My lips tightened on her and sucked softly.\n\n\"Oh, yes! That feels good and right down to...\"\n\n\"Your pussy?\"\n\n\"Yes! Oh! Suck harder.\"\n\nWe explored the possible sensations of her breasts for a long time. I moved us to her bed. She sat on the edge. We kissed again. As we kissed I tugged on her nipples and she groaned into our kiss.\n\n\"Lay back.\"\n\nHer eyes widened and she did lay back. I used my hands to spread her legs. I massaged her legs from knee to junction and then I leaned in and kissed her lips. Her pussy lips.\n\nHer legs came up and formed a vise around my head. Her hands held me against her pussy and she said, \"This is what it is! Oh my God! Oh my God!\"\n\nMy hands gently pried her legs open and I licked her. She moaned and made noises. The sweet nectar of her untried pussy flowed like honey. Like a bear I wanted it all. I kept opening her and kept licking, sucking on her lips and avoiding her clitoris.\n\n\n\"This is heaven! Please don't stop.\"\n\n\"This isn't heaven. You want heaven?\"\n\n\"Yes! Take me to heaven!\"\n\nI sucked on her clit and flicked it gently with my tongue. Her back arched, her feet pressed hard on the bed, her hands grabbed her tits and she screamed! Her body thrashed around on the bed and I held on for my very life. I let go of her clit and she said, \"No! Don't let go!\" I licked her from tain't to clit and sucked it in again. She immediately came again. The bed and my upper body were flooded with her juices and we did not care.\n\nShe was panting and twitching with aftershocks for some time. I wanted to get up and get a towel for clean-up. Every time I started to move she said, \"No!\" and held on to me.\n\n\"Please don't move! I am so sensitive right now! My heart is pounding!\" \n\nI rested my head on her lower belly and as her breathing slowed she started to talk more.\n\n\"There's more isn't there? You will be inside me, won't you?\"\n\n\"Yes. All in good time.\"\n\n\"I want more. I want you inside me.\"\n\nI moved and she didn't stop me. I slid up alongside her. Her hand went to my shoulder and pulled back.\n\n\"You're all sweaty.\"\n\n\"No. That's all from you.\"\n\n\"I peed on you?\" She was alarmed and shocked.\n\n\"No! You ejaculated on both of us and the bed.\"\n\nShe was out of the bed in a flash and pulled me out too. The sheets came of and landed in a pile on the floor. She got three towels from the bathroom and cleaned both of us and used two to cover the mattress. \n\n\"Now I know why Mom's mattress is stained.\"\n\n\"Do more!\" She flopped onto the bed and opened her legs.\n\n\"There is more to expressing physical affection than me doing you. There is you doing me.\"\n\n\"I jerked a boy-friend once.\"\n\n\"Why?\"\n\n\"Because he wanted me to. He begged. I did it to shut him up.\"\n\n\"Are you grateful for the orgasms we have shared so far?\"\n\n\"Oh my God, Yes!\"\n\n\"Then take my cock in your mouth and show your gratitude. Not the you-owe-me gratitude. The gratitude where words just won't say it. Use your tongue and play with the underside of my cock, right where the head ends and down for at least an inch. Touch the slit. Move your head on the shaft. Enjoy what you're doing. The more you enjoy it, the better it is for me too.\"\n\nI was sure she got straight A's in school. She was a great student. I was swallowed and tantalized with enthusiasm. Without prompting she found my balls and sucked on them, gently. She went back to my cock and sucked some more. I felt my balls tighten up.\n\n\"Sweetheart, If you keep that up much longer I will fill your mouth with my cum.\"\n\nShe never even slowed down. Pumping her head up and down my shaft she sucked me all the way off. I felt my cock swell and pulse as I filled her mouth with lots of seed. She gagged once and swallowed all of it. She kept her mouth on my cock as it softened. \n\n\"Nick, does that mean you can't put it in me?\"\n\n\"No. It means we can do other things until it recovers. Younger guys tend to recover faster. They also tend to cum faster.\"\n\n\"What other things?\"\n\n\"Did you know about the sensitive spot on your neck?\"\n\n\"No! Is that there on all girls?\"\n\n\"No. In my experience most women have a spot like that. In fact, most have more than one. We could go on an expedition and see how many of your spots we can find.\"\n\n\"Do men have them too?\"\n\n\"Some do. Usually they are a bit harder to find.\"\n\n\"Where will you look?\"\n\n\"How about on the other side of your neck?\"\n\nShe tilted her head and I kissed the spot.\n\n\"That's it! More please.\"\n\nI gave her more. Then I lifted her arms over her head and bent to her underarms.\n\n\"Not there!\"\n\n\"We'll see. I know women who can cum from being kissed here.\"\n\nBeth was one of those women. I knew she had a taboo in her head about it so I alternated between her pits until she came again. She thrashed about and screamed as she came.\n\nI kissed her between her breasts as she calmed down. She pulled me up to her face and kissed my mouth. I rolled onto my back and moved her into a sixty-nine. She took my cock in her mouth and it responded. I put my face in her pussy and she screamed! She had been surprised and was still very sensitive. I probed her vagina with my tongue and licked her lips. She pressed back on my face. She sucked on my cock and it continued to grow.\n\nAt the moment when I knew I was hard enough to be inside this vixen I was faced with a delicious dilemma. Keep eating her delicious pussy or take my hard cock and shove it inside her virgin pussy.  My cock won the debate.\n\n\"Lay on your back, please.\" I said to her pussy, half an inch from my face. She heard me.\n\n\"Oh Jesus, we're going to do it! I am so ready!\"\n\nShe held her legs wide and up. I knelt by her pussy and rested my cock at her opening.\n\n\"I will go slowly. There may be a little pain. It does go away.\"\n\nMy hips shifted and the head penetrated her opening.\n\n\"Oh Nick! You're inside me!\"\n\nI pushed in another inch.\n\n\"I cannot believe how good that feels.\"\n\nI pushed in until I felt a ridge, an obstruction, something. My guess was that it was her hymen. I waited a moment.\n\nDuring that moment Beth took command and thrust her pussy at me, swallowing all of my cock in one move. Her hands held my hips and I did not move.\n\n\"Oh God! I'm a woman! I'm being fucked! It feels so good. What do we do now?\"\n\nMy hips moved and pulled my cock back an inch or so. Her grip on my hips tightened. I slid back in all the way.\n\n\"Again!\"\n\nI drew back a little farther and pushed in. Each stroke was longer and deeper. Beth kept repeating the word, \"Again!\"\n\nI moved her onto her side and I lay behind her. I slid in completely and she said, \"Oh! Oh! I like it!\"\n\nWe played with that position for a while. I played with her nipples as I stroked in and out and I kissed the spot on her neck. It was enough! She started shaking and said, \"Jesus, I'm going to cum again!\" She told the truth. This time she didn't squirt as much and the towels got most of it.\n\nI pulled out and she turned to look at me. I was still hard.\n\n\"Why did you leave me?\"\n\n\"I want you on your knees, please.\"\n\nHer move was like lightning. I was suddenly looking at her wet ass and open pussy. She looked over her shoulder and said, \"Like this?\"\n\nMy answer was to slide my cock deep inside her. \n\n\"That feels so different. It's like I have more than one cunt for you to fuck.\"\n\n\"I don't like that word. It has a connotation of being demeaning. Mean, nasty, cheap women are cunts. You have a pussy, a vulva, vagina, a sweet spot. I don't believe you have or ever will be a cunt.\"\n\n\"Right now, with you deep inside me I don't have a pussy, I am a pussy and I want you to slam into me.\"\n\nAmen! We slammed together. Beth's bed slammed against the wall. Beth put her hands on the headboard and I held her hips as I slammed in. The wet slapping sounds filled her room. I was glad Holly and Beth's parents were out in our motor home. \n\nI started to feel like I was about ready to burst again.\n\n\"Get off the bed for a moment, please.\"\n\nShe did. I lay down in the wet spot, face up.\n\n\"Straddle me and put my cock inside your pussy.\"\n\nShe climbed on the bed and me like a gymnast. She watched as her own hand guided my cock into her opening. As soon as the head was in she relaxed her legs and dropped onto me. I was as deep as it is possible for me to get.\n\n\"Oh!\" She said and held still.\n\n\"Rock back and forth.\"\n\nShe did.\n\n\"Lean forward just a little, until your clit is really being stimulated.\"\n\n\"Oh, God! I'm going again!\"\n\nShe rocked like an earthquake. Faster and harder each passing second. As I felt her orgasm start I lifted my hips and when she came down again she screamed... again.\n\nI repeated my thrust as fast as I could and when I was ready I said, \"I'm cumming inside you, woman. Her eyes opened wide and she said, \"Oh, I feel it. Oh Nick!\"\n\nShe shuddered, I shuddered and she collapsed onto my chest. My arms wrapped around her and we rested. Our breathing slowed and we both felt my wilting cock slide out of her.\n\nShe lifted her head and kissed me. \"I will always love you for this.\"\n\nI kissed her and said, \"I will always love you. You never need to do anything and I will always love you. You gave me such a huge gift. Thank you.\n\n\"Thank you.\" Beth put her head on my chest and fell asleep. I did too. \n\nWhen I opened my eyes the room was filled with light. Beth was still straddling my hips. I was hard and felt the need to pee. I glanced and noticed the door to Beth's bedroom was closed.\n\nI moved just a little. Beth stirred and opened her eyes. She smiled.\n\n\"Smells like sex in here.\"\n\n\"Damn! Can we complain to management?\"\n\n\"I don't want to complain! I want to have this smell last the rest of my life.\"\n\n\"If we don't do laundry it will.\"\n\nShe moved to look at her room and bumped against my erection.\n\n\"And what is this?\" She reached back and aligned us and backed her pussy until I was inside her.\n\n\"Men often wake up with an erection.\"\n\n\"That's a good thing to remember.\"\n\nShe slid back and forth rubbing her entire puss against me. She was ready. I felt her juices running from her, down my cock and across my balls. I wasn't going to last.\n\nI pulled her down on me and rolled over so she was on the bottom.\n\nI mounted her hips and slid in, gradually increasing the pace and ferocity as I stroked. Beth held her own legs. I held her shoulders and we met in the middle.\n\n\"I'm so close,\" I said.\n\n\"Me too!\"\n\n\"Now!\" We said together. I lifted my hands off her shoulders and grabbed her breasts, pinching her nipples.  Beth screamed again.\n\nI waited about a minute and said, \"Honey, I'm either going to get up and use the restroom or this bed is going to smell like pee.\"\n\nShe let go of me and helped me off the bed. When I entered the bathroom I looked to see if I still had a cock. It was red, but still there. \n\nWhen I came out of the bathroom she had gathered all the laundry together and was ready to go downstairs.\n\n\"You know,\" I said, \"When we came up here last night the door was open.\"\n\n\"I noticed. I wonder who saw us asleep with me wide open?\"\n\n\"We'll probably know when they show us the pictures.\" I laughed at the look on her face.\n\n\"My Mom just might take pictures.\"\n\nWe divided the laundry and opened the door. No one was there. We went downstairs and towards the laundry area. Paul, Elaine and Holly were in the kitchen. One look at us and Holly started to laugh.\n\n\"Nick, we thought you killed Beth last night! The whole neighborhood heard the screams. Now you walk in here looking like she almost killed you!\"\n\nElaine stood up to help with the laundry and said, \"Everything is soaked!\"\n\n\"What can I say Mom, I'm a squirter!\" We all laughed.\n\nWhen the laundry was started I went into Paul and Elaine's bathroom, showered, shaved and used deodorant. I was back out at the table eating breakfast like a starving man when Sam walked in. He looked at all of us and started to open his mouth.",
        "Beth cut him off. \"I'm a woman now. I gave Nick my virginity last night.\"\n\n\"And this morning,\" Elaine said softly.\n\n\"Shit! How come she gets all the good stuff?\"\n\n\"What?\" Paul asked.\n\n\"I've been eighteen almost a year and no one volunteered to take my virginity and teach me anything about sex!\" He was genuinely angry and hurt. He glared at Paul and Elaine.\n\nHolly looked at me and I smiled. She stood right in front of Sam and said, \"Ever gone for a real ride in a motor home?\" Before he could answer she kissed him. We all saw the front of his jeans move. Holly was nude. She left her clothes on the couch and walked Sam out to the motorhome.\n\nPaul looked like he'd been hit by a train. He sat at the table looking at the door. Elaine put her tit in his face and he came back to us. She pulled away and sat down.\n\n\"I need a nap and I don't think I can go home right now.\"\n\nElaine took my hand and led me back inside her bedroom. The bed had not been slept in. She pulled back the covers and tucked me in. She kissed me and said, \"Thanks. I looked in on you this morning. I've never seen such a erotic, sexy sight.\"\n\n\"Believe me, it was my pleasure and my honor.\"\n\nI was asleep in seconds. When I woke up the shades were drawn, the room was dark and my cock was being swallowed. I assumed it was Beth. Elaine had a chance at me and turned it down back at Sandy Shores. Whoever it was knew what she was doing. Beth had shown a natural talent. I relaxed and participated. When she was happy with my hardness she climbed on and put me inside her. She didn't feel like Beth. I looked closer and it was Elaine.\n\n\"I want to scream! I want you to help me scream!\"\n\n\"Slide your pussy against me. Rub your clit on me! Feel me inside you.\"\n\nIn rodeo they only ride for eight seconds. Elaine could get a gold belt buckle. She rode for a lot longer than eight seconds. I started to worry that all my pubic hair would be worn off. The only thing that kept the friction from starting my hair on fire was the steady flow of Elaine's juices onto my hair. She panted, moaned and gasped along the way. I thrust up and held her hips. She got louder. Remembering Beth's sensitive nipples I reached for Elaine's and pinched. She screamed and soaked me, her, the bed and the nearside floor. Her body twitched and shook. The muscles inside her pussy grabbed me tighter than I could remember being held. I held on and she shook some more. Elaine collapsed on me and either passed out or fell asleep. Again, I got the wet spot.\n\nAbout a minute later she woke. She jumped off me and the bed, surveyed the damage and said, \"We need to do laundry.\" She was smiling.\n\nI got up and we stripped the bed. When we got to the laundry room Holly was loading the washer. She smiled.\n\n\"I guess the whole family is squirters.\"\n\n\"Paul too?\"\n\nHolly nodded. I hugged her and we kissed. She tasted of cum and her own juices.\n\n\"Where are the kids?\"\n\n\"Sam had a game to get to. He's watching, not playing. Beth had arranged to study with a couple of friends this afternoon.\" Elaine said.\n\n\"Sam made me promise we wouldn't leave until tomorrow.\"\n\n\"Do we need to go to the market and get more laundry soap?\" I asked.\n\n\"Nope! I have two more boxes in the garage.\"\n\nAs the laundry went we sat out on the patio and talked. We talked about our trip to Jasper. We talked about the reunion in October and if Beth and Sam should be invited. Then Paul asked, \"How do you think Beth is doing emotionally?\"\n\n\"She's healthy and has a good head on her shoulders. She thought about what we did long before we did it. It helped a lot that Elaine and she are so close and share everything. I'm glad she talked with you this morning. That helps her process things.\"\n\n\n\"How do you know we talked?\"\n\n\"I know.\"\n\n\"You don't know what she told me.\"\n\n\"I'd like to know.\"\n\n\"She said, Mom, Nick just met me and he loves me. Not like he loves Holly, but he loves me and treated me like a woman. And sex is incredible. I want more but I know that most boys have no idea how to love me and sex without love isn't going to be worth taking my clothes off.\"\n\n\"Would you like to know what Sam said to me before he left?\" Paul asked.\n\nWe all nodded.\n\n\"He said, Dad. That was incredible. I've masturbated for years and it felt wonderful. The inside of Holly is a million times better, and not because it's a pussy. It's better because Holly cares about me. I could see it in her eyes and the way she touched me. I've just become a big fan of older women, I think.\"\n\n\"What did you say to Sam?\" Elaine asked.\n\n\"I reminded him that it isn't age that is the deciding factor in Holly. It's something even more difficult to find. Holly understands how to love. There are no games in Holly's love. Sam asked me if Holly loved me. I said yes, she did and that didn't mean we had been sexually intimate. He smiled at me and walked out of the house.\"\n\n\"Wow!\" I think our kids took a leap into adulthood.\"\n\n\"I think so, too.\" Holly said.\n\n\"How's that?\" I asked.\n\n\"Do you remember the first time you had sex with a woman?\"\n\n\"Yes. It was last week in my bed. I found a woman in my bed and she begged me to have sex with her.\" We laughed and when we stopped I said, \"Yes, I remember.\"\n\n\"How long did it last?\"\n\n\"Maybe a minute.\"\n\n\"I undressed Sam and he was rock hard. He said he felt like he was ready to cum without even touching. I said lets see if we can make that happen. We played together and he did cum without touching. I caught all of it in my mouth. As he started to cum I just swallowed him. Well, he didn't soften. We did lots of other things before he came again. I coached him about going slowly, for the benefit of his partner. He listened. When he ate me I thought I would die of pleasure. He is a natural at eating pussy. He teased me to the brink twenty times before he let me go. Then he didn't hurry to something else. He held me and talked softly to me until I was ready for more. He came in me seven times, counting twice in my mouth!\" \n\n\"My God. What have we done?\" Elaine said.\n\n\"They are old enough and showed themselves ready to take the step in front of them.\" Paul said, \"I'm just glad they could have great coaches when they went.\"\n\n\"Beth isn't a little girl and never will be again.\" Holly said. \"She's changed.\"\n\n\"If I may ask, what changed with you Elaine? At Sandy Shores you decided not to have sex with me.\"\n\n\"All Beth could talk about was what you did with her and how she squirted so many times. Until today I've squirted twice. Now I know next time Paul and I do it we better be ready for the flood.\"\n\nWe dressed and went out for dinner. We laughed and danced and had lots of fun. When we got back to the house some of the lights were on. We went through the back door and Beth was sitting on the couch watching TV with Sam.\n\nBeth got up and hugged her parents and then hugged Holly and me. Sam went straight to Holly and hugged her. Then he hugged his Mom. Beth said, \"We remade all the beds except Sam's. Well, that isn't quite accurate. We did all the laundry but I couldn't remake my bed. It's still wet. I opened the window and set a fan to blow across the bed and out the window.\"\n\nElaine looked at Beth and said, \"Are you sleeping on the couch down here?\"\n\n\"I guess.\" Holly and I noticed her head start to turn towards us, but she stopped.'\n\n\"She can come with us,\" Holly said. \"Our bed holds three snuggly but if we're friends it should be OK.'\n\nPaul put his head in his hands. He didn't say anything. Beth went to him and hugged him.\n\n\"Daddy, I love you. All my life you've wanted me to grow up. Now, I have. I have lots more to learn and you get to teach me lots of stuff. Let Nick and Holly love me too.\"\n\n\"You're right. I just thought you'd wait... til you were thirty!\" We all laughed. I glanced at the front door and noticed a pile of towels. Beth had a plan and we went for it.\n\n\"Well, it is late. Beth, do you need help with that pile of towels or can you manage?\"\n\nShe blushed and knew she was found out. \"I can manage.\" I let her. Holly and I went first and she followed. At the door, I went in and took the towels from her. She came in and saw that Holly was already nude. I stripped and so did Beth. I moved into our bedroom and kissed Holly. \n\n\"Love me.\" It wasn't a question. It was a request.\n\n\"Every moment of every day. Please let me taste you.\"\n\nShe leaned back and put herself on the bed, legs hanging off. I knelt between her legs and kissed her pussy.\n\n\"What should I do?\" Beth asked.\n\nHolly lifted her head and looked at Beth. \"What do you want to do?\"\n\n\"Can I watch?\"\n\n\"We didn't close the door. Do you want to watch from there on from in bed with Holly?\"\n\nShe wiggled past me and up onto the bed. She stayed quiet and still.\n\nI resumed kissing Holly. I touched her breasts with my hands as my face lapped up her juices.\n\n\"Yes, Nick. You know where to get me. Yes!\"\n\nHer hands held my head. I flicked her clit and probed her opening, lapping up her flowing juices. She moaned.\n\nI rolled her over and her legs touched the floor. I stood and pushed inside her pussy, slowly and holding her hips. Beth watched and didn't move. Holly thrust back against me and started our motion. I took my time and moved so she could feel me hitting her g-spot. \n\n\"Yes! Nick! Yes! Oh, I'm so close. Keep hitting me right there!\" Holly looked up and saw Beth sitting cross legged with her hand in her pussy. She reached out and grabbed Beth's legs, dragged Beth to her and shoved Beth's pussy against her face. Without pulling out of Holly I reached the towels and tossed two to Beth. She somehow crammed them both under her ass before Holly tripped her and she came all over Holly and the towels. She used my pillow to quiet her scream. I pounded inside Holly and she exploded all over me. I grabbed another towel and tossed it at my feet. As her pussy squeezed me I attempted to keep stroking but she held me so tight I couldn't move. When the spasm let go all my pent up sperm shot into her! It felt like my dick had exploded! I was half afraid to pull out for fear the tip was gone.\n\nI held inside Holly for a long time. Holly calmed down and then turned to look at me. I think we need to clean up before we go to sleep. We discovered the bed was pretty dry, the towels were soaked and so was Holly. Beth washed Holly in our tiny shower. I bagged the wet towels and put them by the door. I used a wet wash cloth and wiped off my equipment and my legs. Beth got out of the bathroom and cleaned my cock with her mouth. When she stood up she said, \"I know now what Holly tastes like.\"\n\nHolly dried off and said, \"In the morning, you can taste me directly, if you want to.\" We moved to the bed and got in. They put me in the middle. Holly turned me so she could spoon against my back. Beth spooned her back and butt against my front. As I drifted toward sleep Holly draped an arm over me and Beth held my hand on her breast.\n\nAt five something in the morning I came awake and sat up. Someone was outside messing with our home. I carefully woke both women and had them stay quiet. I made my way to the front and grabbed my gun. A 9mm Ruger that held 14 rounds. I tossed Holly the cell phone and she hit 911. Whoever it was, was on the door side of the motor home. I popped the door open and was facing a man with a crow bar attacking the storage bin right by the door.\n\nHe looked up and saw that I was nude. He smiled. I showed him the Ruger and the smile vanished. \"Lay on your belly. Drop the bar.\"\n\nHe hesitated. \"Think you can outrun a bullet? Go ahead.\"\n\nI heard a siren in the distance. So did he. He dropped the bar and put himself flat on the ground. Holly came to the door with Beth. Both were dressed. Beth was in Holly's jeans and her own t-shirt. I gave Holly the Ruger and I dressed. I took the Ruger back and the police arrived. Paul, Elaine and Sam came out the front door. A policeman had them stay on the porch. They cuffed the man and an officer took our statements. Beth had done some quick thinking and put a pillow and a sheet on the couch. They dusted and photographed the outside of the motor home and took our contact information. One officer asked to see my permit. It was federal. He wrote down the information and thanked me. Then they interviewed Paul, Elaine and Sam. As they got ready to leave the lead officer said the perp would be before the judge within 36 hours and he requested we stay until then. Beth said she lived in the house so she would always be available. Holly and I agreed to stay close by. Five minutes later it was quiet in the neighborhood again.\n\nTen more minutes and we were asleep. I was spooned with Holly in front of me and Beth behind. As I drifted off I thought about what a wonderful world it was, burglars and all.\n\nWe stayed four extra days. The lawyers interviewed us and one asked if I had opened the door nude. I said yes. He asked what the suspects reaction was. \n\n\"He smiled when he saw my penis and lost the smile when he saw the Ruger.\"\n\nIn front of the judge the same lawyer asked how I got the federal firearm permit. I smiled and said you can get that information from the agency that gave it to me. You already know they will not answer. Now you know I won't either.\"\n\nThe judge smiled at me and said, \"I can compel you to answer.\"\n\n\"Yes, you can order it and I can still refuse. What will happen after that is that a federal agent will arrive and take me into federal custody. You will never see me again and your question will be unanswered forever.\"\n\n\"They won't know because you won't tell them.\"\n\n\"Judge, they already know I used the weapon. Your police called to verify the permit and ask why I have it. Sometime within the next three days an agent will walk in with all the authority he needs to do just what I said.\"\n\n\"The permit is valid and the weapon was not fired. We have fingerprints, the crow bar and Mr. Wallace's confession. We will not need you in court. You are free to go.\" As I walked from the courtroom I heard him say, \"So please go.\" I waved.\n\nOn the ride back to Paul and Elaine's no one asked. Inside the house Holly sat looking at me.\n\nI sat near but not next to her.\n\n\"I didn't know you had a gun.\"\n\n\"I do.\"\n\n\"I don't know who you are.\"\n\n\"Yes, you do. I'm a good guy. I love you. I won't lie to you, cheat you, leave you or betray you. If you must know, I'll tell you.\"\n\nPaul walked into the living room. His family was with him.\n\n\"We talked. We don't care why you had the permit and the gun. We're just glad you did. If you want we'll leave while you two talk.\"\n\nHolly got off the couch and sat in my lap. She said, \"You don't need to do anything. I love Nick. I love each of you. It was just a surprise. A mystery. He promised me he would protect me and he did. I'm Ok.\"\n\n\"Can Holly and I take you all out for dinner tonight?\"\n\nBeth and Sam brightened. Paul said, \"No! Your money is no good here. I'll buy.\"\n\nA five minute haggle over where to eat happened and it was decided sea food near Pike's Market. At the restaurant I discovered just how hungry I was. Things were going great and we were back to the loving energy again when a man walked up to the table. \n\n\"Nick Evans?\"\n\nI raised my hand. He said, \"Everything is Ok with the judge.\" Before I could respond he turned and walked away.\n\nDinner was over. We drove home and I talked. \n\n\"Years ago I worked for the government. What I did wasn't all that important but my bosses decided I needed lifelong protection. They issued me the Ruger and the permit. This is the first and hopefully the last time anyone will ever see it. I never fired it. I never thought I'd need it.\"\n\n\"Oh.\" Holly said. \"I thought you might be a spy or something and one morning I'd wake up in a James Bond movie.\" \n\nSam said, \"You get to play Pussy Galore!\"\n\nWe all laughed. The tension was gone. When we got home we had ice cream and laughed some more. Elaine called her friends in Banff and they gave us directions on how to find them. I said to tell them we were leaving in the morning.\n\nElaine finished the call and hung up. Sam said, \"Don't go.\"\n\n\"We need to go.\" We can have breakfast with you in the morning, if you'd like.\"\n\n\"What would you like for breakfast?\" Beth asked.\n\nI crooked my finger and whispered in her ear when she got close. \n\n\"Something that tastes like you.\" \n\nShe whispered back, \"You can have me.\"\n\n\"Thank you.\" \n\nHolly and I hugged all around and went out to the motor home. We didn't go to bed. We sat up front and realized how hard it would be to leave in the morning. We sat together and kissed and held each other until one in the morning. I said I had an idea and Holly sat back in the passenger seat. I muscled the steering wheel until our wheels were aimed away from the curb. We were on a very slight hill, facing down hill. I had Holly take the driver's seat and steer. I got out and pushed. It took a while and some sweat but I got us moving. I climbed back inside and a hundred yards down the road I closed the door. Holly started the engine and slowed us down to a stop at the corner. She turned on the GPS and I put in the entry: \"Banff.\"\n\n\"I wonder what awaits us there? I asked. "
    ],
    "authorname": "Scorpio44",
    "tags": [
        "love",
        "oral sex",
        "ffm",
        "sensuality",
        "sharing"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/n-is-for-nude-ch-03"
}