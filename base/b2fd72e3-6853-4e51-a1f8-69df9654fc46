{
    "title": "Saturn Rising Pt. 04",
    "pages": [
        " This is part 4 of the story of my first true lover, Becky. It is an emotional roller coaster for me writing this, but I have loved every minute of it so far. Thank you to all my lovely readers for all your wonderful comments. Jodie and I are dedicating this part to exploringgirl19, with all our love. \n\n*****\n\nI was awoken the next morning in the most wonderful way possible. I slowly became aware of soft kisses on my lips. I was on my side, and I could feel Becky's leg draped over mine, pulling me close to her.\n\nI sighed and slowly opened my eyes. She was lying with her head on the pillow, right next to me, kissing me with little short pecks, her eyes open. The sudden feelings of love and desire for her brought a rushing into my heart.\n\nShe pulled back and smiled. \"Good morning sweetie. Do you know how beautiful your eyes are? The hazel contrasts so beautifully with the red of your hair. I could look into them forever.\"\n\nI blinked, looking back at her, genuinely surprised. When I finally found my voice I said, \"Really? I always thought they were kind of boring, but your eyes, they are so beautiful. That deep blue. I've felt that from the moment you caught my eye in the kitchen at the party.\"\n\n\"You noticed that? I wasn't sure, but the way you looked at me was the first of those signals I told you I thought I was getting. So, we will disagree on who has the most beautiful eyes. Let's not have our first fight over this,\" and she smiled at me.\n\nI nuzzled close to her and, with our arms wrapped around each other, we kissed. A long, languorous kiss, with love, caring and passion all in the mix. I felt Becky's thigh slide up mine, and I pushed my leg up so that it was directly in contact with her. I loved the feel of her sex against my skin. I could feel the slight wetness, and this sent a delightful thrill through me. It was as if her pussy lips were giving my thigh little kisses.\n\nShe let out a low moan and started to rock slightly against me. It was amazing. I could feel little contractions from her against my skin. Instinctively I pushed up against her, and this caused her to break our kiss and whisper, \"Oh god Anna, yes.\" She started to move slightly faster and I just kept the pressure on her, hoping she would actually be able to come this way.\n\nWe kept this up, kissing with Becky rocking against me, for several minutes, our hands running down over each other's backs, pulling each other closer. I loved the feeling of our bodies being so close, our skin touching, our breasts squashed together. I could even feel Becky's nipples hard against me.\n\nShe suddenly arched her back slightly away from me, breaking our kiss, and she started shaking. Instinctively I dropped my hand to her bottom, and pressed on her as she let out a shuddering, long, deep throated moan. It was so beautiful, and I was so happy. We lay there, embracing until her shaking subsided and she held me close and cuddled me, planting kisses on my forehead, my nose and then my mouth.\n\n\"Anna. My god. You are so in tune with me. Thank you. That was just wonderful,\" and she kissed me again.\n\nI knew she was right, and that there was more to it. \"We're somehow linked. We both always seem to know what to do. It's who we are.\"\n\nShe smiled, kissed me once more and then, without saying another word, pushed the duvet down, revealing our naked bodies, and placed delicious little butterfly kisses on my neck, over my shoulders and down to my breasts. She cupped my right breast in her hands and sucked the nipple into her mouth. She gently bit on it and I felt delicious tingles shooting from there straight down between my legs.\n\nShe pulled back and said, \"Good morning, Pinky.\"\n\nI smiled and sighed, remembering the naming ceremony from the night before.\n\nBecky repeated the ritual on my other breast, making my urgency and need climb just that little bit higher.\n\n\"And good morning, Perky.\"\n\nPushing me softly so that I was flat on my back, she did something that was delicious and surprising. She gently pushed my breasts up and ran her tongue along the crease below them, all the time squeezing Perky. I could feel contractions inside me and suddenly had a heightened awareness of my clit. It was a thoroughly new sensation. One of an increasingly long list that I was experiencing with Becky. It sent shivers through me and I instinctively opened my legs, crooking them so my feet were flat on the bed, and let my free hand wander down so I could touch myself. I was surprised how big Chloe felt under my fingers, and the moment I stroked her I moaned.\n\nBecky stopped what she was doing and looked down, then back up at me with a smile. \"Naughty Anna. That's my job.\"\n\nI didn't say anything, but just kept on stroking, revelling in the wonderful feeling of doing something so intimate while my wonderful lover watched me.\n\nBecky smiled up at me, \"Mmm. Okay. It's going to be like that is it?\"\n\nShe slid down so that she was between my legs. I stopped, expecting to be treated by her tongue, but Becky said, \"Oh no you don't. Don't stop. I want you to make yourself come while I help.\"\n\nA little more brazenly I started circling my clit once more, suddenly loving that Becky was watching me at such close quarters. The sensations coursing through me were a combination of the mental, physical, emotional and spiritual worlds. I was aware of my crinkled nipples and the wonderful rush of waves of pleasure building in me.\n\nI felt Becky's fingers. I could feel her parting my lips, spreading them wide, and then I felt her at my entrance. She slowly pushed a finger in and found that magic spot, which made my head light, and my walls contract, then I felt her draw out and add another finger, widening and filling me. She once again stroked upwards and I squirmed and moaned, and started stroking my clit slightly faster. Then I felt her draw out and add a third finger and I felt myself being deliciously stretched. She didn't push hard, but kept the pressure up and suddenly I felt myself open to her and it sent a delicious thrill through me as her fingers slid deeper inside me. I had never been so full, and I loved it.\n\nOnce again, she pressed upwards and then I felt her other hand go up onto my mound and she pressed down just above my pubic bone. This had an amazing effect on me. It pulled my clit hood up, tightening everything. There was this weird sensation like suddenly the palm of her hand, my clit, her fingers inside, my pussy walls and that little spot were all one. Everything was as sensitive and energised as my clit. It was as if my clit was larger, extending deep inside and out. It was an intensely beautiful and erotic sensation. I could feel my orgasm starting and I moved my finger faster over my clit while Becky just kept the pressure on me and slowly slid her fingers in and out.\n\nWhen it hit it was mind blowing. It was immediately all over me, like my full body orgasm of the night before, but with more depth and without spreading out, it was just all there at once. I cried out, my hips sinking down into the bed as it pulsed.\n\nAs I finally came down the sensations were too much and, sensing this, Becky eased her palm up and slowly slid out of me. I had that wonderful shuddery feeling as I was suddenly empty.\n\nSliding up next to me she lay her head on the pillow and I turned to look at her.\n\n\"Oh my god, Becky. How does this keep happening? Every time we make love, you do something that makes it different and even better.\"\n\nShe smiled and kissed me, lingering for a moment.\n\n\"All I want to do is make you happy, and I'm glad it seems to be working.\"\n\nI kissed her and said, \"God it is. I worry I don't do enough for you.\"\n\n\"Well stop worrying. You are in every way the perfect lover.\"\n\nI preened. I had never been told I was even a vaguely good lover, and I suspect that for my past, limited experience, that was almost certainly true. I had never really been engaged in the way that I was with Becky.\n\nI kissed her, and pulled back. \"What a beautiful way to start our 'just us' day.\"\n\n\"Mmm. Yes. It is. So what shall we do today sweetie? Any thoughts?\"\n\nI thought, and could only come up with, \"I don't care. As long as I'm with you, I really don't care.\"\n\nShe smiled and kissed me again. Have I mentioned how much I loved our kisses?\n\n\"Let's change the bedding and then go downstairs and get some breakfast.\"\n\nThis brought a memory of her juices on the bed from the night before, and I smiled.\n\n\"That was amazing. I really didn't know that could happen.\"\n\nShe kissed my nose, a gesture I was coming to love. \"Like I said, it doesn't very often, but it is perfectly natural, apparently. After the first couple of times it happened, I went to my doctor. She said it was not a problem and I should just enjoy it, although I should probably invest in some towels.\" She laughed as she said this.\n\nI felt that twinge of jealousy once again but it was far less than before. I was beginning to not only understand it, but accept it, because my trust in Becky was total.\n\nShe slid off the bed, and I followed. Together we took the duvet cover off, along with the sheets and pillow cases, dropping them all in a pile near the door. Becky went to the hall and opened an airing cupboard and got fresh linen out. It had a cream coloured background with a random, large blue and pink flower print. Working together we redressed the bed.\n\nOnce we were finished, Becky picked up the dildo-panty combination up off the dresser and just the sight of it send a little thrill through me.\n\n\"I need to wash this. Don't want one of us getting some infection when we use it again.\"\n\nJust the thought of using it sent a flickering sensation through me, which was a surprise after such intense lovemaking.\n\nShe walked through to the bathroom and I followed, watching that delicious looking bum once more. When we got there, Becky ran some water in the sink and squeezed some soap out and started washing it. I hugged her from behind and watched over her shoulder. It was curiously erotic watching her hand slide down the shaft.\n\nOnce she had finished cleaning it thoroughly, she rinsed it off and reached for a towel to dry it, and I suddenly realised my bladder was a bit full.\n\n\"I need to pee, Becky.\"\n\nShe smiled, \"You want me to leave you alone?\"\n\nThe thought of her staying while I peed was odd, but it didn't disgust me. Which should have surprised me, but didn't. I was changing and growing so much.\n\nI smiled at her. \"I never want you to leave me.\"\n\nShe kissed me and went and sat on the edge of the bath, her legs slightly open and I was filled with a mixture of desire but my need to pee was quite urgent by now so I just sat down on the loo and let it go, all the time staring at Becky. She smiled and whispered, \"Love you.\"\n\n\"Love you too,\" I whispered back.\n\nI had never peed in front of anyone, and it was a mark of my total trust and love for Becky that I could do this at all.\n\nWhen I finished I went to get toilet tissue to dry myself, but Becky stood, came over, said, \"Let me,\" and took the paper out of my hand and ever so softly dried me. It was so tender, loving and intimate.\n\nWhen she'd finished, I stood and we had a long, close hug.\n\n\"Well, that's another first,\" I said, \"I have never gone to the loo in front of someone else.\"\n\nShe kissed me. \"It's a first for me as well, sweetie. I've never been so comfortable with anyone that I would actually want to be there.\"\n\nHere was something that was just us. \"Really? That... that's wonderful. I think?\"\n\nShe pecked me on the lips and said, \"Just to be clear, I'm not going to be comfortable with... um... anything more.\"\n\nThe thought made me shudder. \"Eww. No. There are limits!\"\n\nShe chuckled, \"Good.\"\n\nWe went back through to the bedroom, Becky carrying the dildo. As she put the toy back in her cabinet, I noticed my overnight bag still on the floor. \"Oh, I should probably unpack,\" and realised that I was being a bit presumptuous. \"God. Sorry. I don't mean to sound like I'm moving in.\"\n\nBecky smiled, \"You don't? You want to go back to your place?\"\n\nI knew she was teasing, but rose to the bait anyway, \"No! No, Becky I don't. I want to be here. With you.\"\n\nShe took my hands and pulled me to her, her arms going around my waist, pulling me into a lovely hug, \"I'm just being silly. I don't want you to leave. Ever.\"\n\nWrapping my arms around her I said, \"Well, at least it would save me the rent,\" and I laughed.\n\nShe looked straight into my eyes, \"You're serious?\"\n\n\"Well, I was sort of joking about the rent...\"\n\n\"Would you like to live with me?\"\n\nI swallowed, realisation dawning that that was, exactly what I wanted, more than anything in the whole world. \"I really would.\"\n\n\"I have a spare room, if you'd like it.\"\n\nI was horrified, and then saw her mischievous grin.\n\n\"Seriously Anna, I would love for you to move in, but I don't want to rush things. Living together can be so much harder than just spending a few days in each other's company. We might get under each other's feet, or even have a row and then where would you be? Or me, for that matter?\"\n\nMy heart sank, but I at least needed to make the appearance of being grown up. \"Yes. Of course. I know. It could be awful.\"\n\nI didn't mean a word of it.\n\nShe squeezed me. \"Anna, please understand I really want you to move in with me.\"\n\nShe stopped and I thought I sensed a 'but' coming, however my heart lifted when she said, \"How about this? You move in but, for at least a month, you keep your place and at the end of the month, we can see how things are. If we're both happy, and I'm sure we will be, we can make it a little more 'official' and you can give up your accommodation.\"\n\nMy mood soared. I was going to be with Becky every day.\n\nIn my enthusiasm I gushed, \"I could learn to cook all your favourite foods and have dinner ready for you when you get home. I don't have lectures all day every day. I can...\"\n\nShe stopped me with a delicious kiss.\n\nWhen we'd finished she smiled at me and said, \"I so love you Anna, and I love your enthusiasm, but one step at a time. I'll clear some space for your clothes in a bit and you can unpack. In the meantime, let's get the bedding cleaned.\"\n\nOff the back of the door she took down a gorgeous pink silk kimono with a sparse floral pattern in red and blue.\n\n\"Oh no! I just realised I left my dressing gown on the back of the door at my place.\"\n\n\"Don't worry sweetie. I've got a few, so you can borrow one. We can go back to your place later and pick up any extra bits and pieces. You know, toothbrushes and the like.\"\n\nI thrilled at the idea of wearing more of Becky's wardrobe. I held out my hand and said, \"Can I put it on you. Please?\"\n\nSmiling, she handed it to me and turned around, placing her arms slightly back. I placed a kiss between her perfect shoulder blades and then slid it up her arms. She turned around and I closed it and tied the sash. It was quite short, mid-thigh, and she looked ravishingly beautiful in it.\n\nShe turned to her wardrobe, opened it and came back with a gorgeous red silk robe with white lace trim on the neck and sleeves. I couldn't wait to put it on. I turned and she slid it over my arms, then turned again to face her.\n\nClosing the robe, I realised that it was quite short, only just covering my bum and I loved it. I was truly becoming quite the exhibitionist around Becky.\n\n\"It looks and feels like a piece of expensive lingerie, it is wonderful. Thank you Becky.\"\n\nShe kissed me again, a quick brush of her lips, \"You look gorgeous, sweetie. Absolutely gorgeous.\"\n\nWe carried the bedding downstairs and went through to a utility room that was near the downstairs loo. We loaded the bedding into the machine and Becky put the soap powder in and started it.\n\nTaking my hand, she said, \"Okay, now we need to make some space for your clothes.\"\n\nWe headed back up the stairs, and over the next few minutes we happily moved stuff around. I ended up with my own underwear drawer, and we put my bras, knickers, socks, tights and my one pair of stockings in there. Becky spent a little time examine some of my lingerie. I didn't have much, but I had a few things I'd bought because I liked them or, in one case, because Jake wanted me to.\n\n\"A basque? Now I would love to see you in this,\" Becky said, holding it up. It was black and I had a sort of love hate relationship with it. Hate because Jake sort of got a bit weird about it, quite often almost pleading with me to wear it, and now love because Becky liked it. It is odd how things can change your perceptions so totally.\n\n\"I would love to wear it for you. With my black stockings. If you'd like?\"\n\n\"Oh my. Yes. I can just see you in this. Mmm. Maybe later?\"\n\nI so wanted to please her. I said, \"Now, if you want?\"\n\nBecky giggled, \"I so love you, sweetie, but not now. Let's do a bit of practical stuff first, hmm?\"\n\nShe was right, of course, so we carried on putting my stuff away. Putting my dresses on hangers alongside her clothes and my jeans, trousers and leggings on a shelf.\n\n\"Right. Breakfast,\" she said.\n\nWe headed downstairs once more and Becky started the coffee, then produced two bowls and said, \"Corn flakes okay?\"\n\n\"My favourite start to the day, other than kisses and sex,\" I said with a silly giggle.\n\nShe laughed and said, \"Well, yes. Obviously.\"\n\nShe poured two bowls and got some milk out of the fridge and then poured coffee for both of us, adding the milk just how I like it. I had never felt so pampered, and felt guilty for not doing anything.\n\n\"I need to get to know your kitchen so I can...\"\n\nShe stopped me with a kiss. I didn't resist.\n\n\"Our kitchen now, and all in good time, sweetie. For now just indulge me and let me spoil you. It's a glorious day. Why don't we go and sit in the garden?\"\n\nI loved the idea, \"Oh yes. Wonderful.\"\n\nWe picked up our bowls and coffees and Becky led me through the dining room, briefly putting her coffee down while she unlocked the French windows. She opened them wide and I followed her out. The feel of my bare feet on the cool grass was delicious.\n\nThere was Tilly, sitting on the large glass table, and I felt a surge inside me as I recalled that first touch on my back. I noticed for the first time that the garden was surrounded by tall trees, giving it total privacy, which I loved.\n\nThere were four single chairs and one bench seat, all wood framed with pastel green, padded linen cushions.\n\nWe put everything down and sat next to each other on the surprisingly comfortable bench seat. Just like the night before I was aware that, due to how short my bath robe was, my bare bum was on the linen. Before we started, Becky leaned over and gave me a long, lingering kiss. I felt my body react. How on earth I could be so easily turned on, over and over again, was something I was revelling in. She broke away and said, \"I so love you, Anna.\"\n\nI smiled, and felt little tears of happiness welling up in me, \"And I love you, Becky. With all of my heart. Pinky, Perky and Chloe also happen to adore you.\" I was loving my newly named parts.\n\nBecky smiled and I could see the moistness in those beautiful, deep blue eyes.\n\nWe started eating our cereal, and drinking our coffee. We were just finishing up when the doorbell rang.\n\nBecky looked confused. \"Who on earth would be calling on me on a Sunday morning?\"\n\nRealising this might be awkward for Becky, I said, \"Do you want me to get out of the way?\"\n\nA thoughtful look came over her face. \"No sweetie. Just stay out here. If it's someone who may have a problem, I'll make sure I keep them in the hall or the kitchen. I'll come back when the coast is clear.\"\n\nShe gave me a little kiss and headed indoors. I watched her retreating back, admiring her in her beautiful kimono. I took in her mussed bed hair, her beautiful legs and swaying hips. Just as she got to the French windows she turned, blew me a kiss and mouthed, \"Love you.\"",
        "Without waiting for a reply, she turned and went in. I felt so loved, and so full of love, but I was a little worried about who might be calling on her.\n\nI could just make out Becky's voice, and couldn't quite catch whatever her visitor was saying. Whoever it was, was taking quietly.\n\nBecky sounded surprised, \"Oh hello. What on earth...? How did you know where to find me? What on earth's wrong?\"\n\nThere was a mumbled response.\n\n\"Yes, yes. Of course. Come on in. Anna's in the garden.\"\n\nIt was someone for me? Who knew where I was? Only one person, as far as I knew.\n\nSure enough Becky walked out with Jackie trailing behind. She was still dressed in the same outfit from the night before. She had obviously been crying, her mascara had run a little.\n\nI stood up. \"Jackie? What the hell? What happened to you?\"\n\nShe raced over to me and gripped me in a tight hug, her head resting on my shoulder, \"I'm so sorry Anna,\" and then broke into floods of tears. I looked at Becky, who looked deeply concerned.\n\nI took hold of Jackie's arms and pushed her back.\n\n\"Why are you sorry? What's happened\"\n\nBecky stepped up, \"Jacqueline... sorry, Jackie. Do you want me to give you two some space?\"\n\nJackie looked at her and fresh floods of tears started. Through them she managed to sob out, \"No. No, please stay. This involves both of you.\"\n\nNow I was really worried, and it looked like Becky was too.\n\n\"Okay. I'll put more coffee on. Anna, run to the downstairs loo and get Jackie some tissues. There's a box on top of the toilet. Jackie, sit down. We'll both be back in no time.\"\n\nJackie sat down on a spare chair and I hurried to get the tissues while Becky picked up our coffee cups and took them in. I got back out with the box and pulled a couple out and handed them over to Jackie who proceeded to dry her eyes, little sobs coming less and less frequently. I didn't say anything, just took one of her hands in mine and stroked the back of it with my thumb, worried sick for what on earth my best friend was going through, and with a sick feeling in my stomach about how it involved both Becky and me.\n\nBecky came back out with a tray and three coffee cups, and milk in a little jug. She put it down and placed cups in front of us then sat down next to me.\n\nFinally she gathered herself. She didn't look up, just kept staring at her hands. \"So, you remember I left last night because I was seeing Paul again?\"\n\n\"Yes,\" I said.\n\n\"Well, of course the biggest thing on my mind was what you had just told me about you and her.\" She looked at Becky.\n\nI was a bit stung and rose to Becky's defence. \"She has a name you know, Jacks.\"\n\nBecky put a hand on my shoulder, \"Shh, Anna. Jackie's upset. She doesn't mean anything by it.\"\n\nJackie said, \"Sorry, Becky. Really. I wasn't being rude. Not intentionally.\"\n\nBecky was all caring and calm. \"It's fine, Jackie. Please carry on.\"\n\n\"Well, I got to Paul's flat, we sort of got, well... you know... a bit passionate for a while. Then we fell asleep and when I woke this morning, we were lying in his bed and he could tell I wasn't quite all there and asked what was wrong.\"\n\nI had a sudden feeling of dread. I knew what was coming.\n\n\"So I told him that I was in a bit of shock because my best friend had just told me she was a... a lesbian. I'm sorry Anna. I shouldn't have told anyone. I was just in a bit of confusion. Not thinking straight.\" She snorted at the use of the word.\n\nI was still a little puzzled, \"So, okay. It's not great, but it's not disastrous. How did it go from that to you coming in here in floods of tears?\"\n\nJackie swallowed, \"He said, 'You mean that gorgeous redhead I met last night?'\"\n\nWell, that wasn't so bad, I thought to myself, and I saw Becky smile.\n\n\"Then he got all offensive. Said he hated, really hated 'fucking lesbians.' What a waste of fucking time they were. I was really surprised, but I just said, 'Hey, that's my best friend you're talking about.' He turned on me then. 'So what are you telling me now? You prefer to munch on a cunt than my cock now, is that it?'\"\n\nShe looked over at Becky, and Jackie said, \"Sorry. I don't mean to be so crude. It's just what he said. I don't think that way.\"\n\nI patted her hand, \"It's okay. I'm sure worse things will be said at some time. Carry on, babe.\"\n\n\"I was horrified. I said something like, 'Oh come on. Don't be such a neanderthal. This is the end of the Twentieth Century. Anna is my best friend and she's in love with Becky, and I think...'\"\n\nI saw Becky startle in shock, and I was a bit stunned. This was worse than I had expected. After a pause Jackie carried on.\n\n\"So Paul said, 'Becky? Is that your best friend's supposed girlfriend?' I realised I had stepped over the line by giving him both your names. I'm so sorry.\"\n\n\"Stop apologising,\" Becky said, \"we can change the future, but we can't change the past.\"\n\nI loved her for her calm and wisdom in that moment.\n\n\"And he has no way of knowing who I am... Does he?\"\n\nI watched as Jackie swallowed, \"He does.\"\n\nI felt my heart sink through my feet. Oh god. This could be awful.\n\nBecky composed herself, \"Okay, Jackie. How does he know?\"\n\n\"He worked it out. I didn't say a thing. Honest.\"\n\nBecky had a sudden flash, \"Wait, is Paul doing final year Physics?\"\n\nJackie just nodded.\n\n\"Oh god. Yes. I know him. All of that year know me as 'Dr.Becky.'\"\n\nJackie swallowed, \"So I tried to make him promise not to tell anyone. I was in tears I was so upset that I'd outed you both without really meaning to.\"\n\nI looked at Becky. She was biting her bottom lip. I looked back at Jackie and said, \"So, what happened next?\"\n\nJackie pulled herself up and took a deep breath. \"I got out of bed, telling him I needed to go. He started shouting at me. Accused me, saying horrible things. Suggesting I was going to come over to... well... to join you.\n\n\"I got angry and started pulling my clothes on and he tried to stop me. He grabbed my arms as I was pulling my jeans on. He was a bit rough, and I was off balance. I turned on him and hit him across the face. A lot harder than I had meant to, but I was just so hurt.\n\n\"I ran out, went back to my place, and just sat and cried to start with. I knew I needed to get hold of you, but had no way of knowing where Becky lived, so I called around my year, and eventually got hold of Kevin.\"\n\nBecky started. \"Yes, I know Kevin. He's been here.\"\n\nI looked at Becky, confused.\n\nBecky tried to smile, \"Don't worry sweetie. Nothing like that. I had a small group that wanted some extra tuition, so I held a tutorial session here. He was one of them. It's not a problem. I'm glad you were able to find us, Jackie. Now, I need to make a phone call. Back in a minute.\"\n\nShe gave me a peck on the cheek and went through into the dining room. I was so worried. I wondered who she was calling. What was going to happen now?\n\nJackie looked at me, tears in her eyes. \"I'm so sorry, babe. This is all my fault.\"\n\nI welled up myself, and wasn't sure how to make this better, although I tried.\n\n\"I'm sure it will be okay.\" I said without any real conviction. I looked toward the French windows. I wanted to be with Becky, to find out who she was calling.\n\nJackie sipped her coffee. We sat in silence for five minutes, and finally Becky came back out. She had a creased brow, but also a small smile on her face, which gave me a ray of hope.\n\n\"Anna, I need to borrow you for a moment.\"\n\nConfused I got up from the bench seat and Becky led me through the house to the lounge. Her phone was on a sideboard near a sofa and was off the hook.\n\n\"Now, be brave my love. I need you to talk to Professor Henry.\"\n\nOh god. He was the principal of the college. How bad was this going to be?\n\nShaking, I picked up the receiver.\n\n\"Hello?\"\n\n\"Ah. This would be Anna, would it?\" He had a slightly melodious and humorous sounding voice. I was quite surprised. I'd heard him talk before, but usually in formal presentations, where he used a much more commanding and engaging tone.\n\n\"Yes. Yes that's right Professor.\"\n\n\"Please, for now, call me John. Rebecca has told me about what has been going on, and I just want to assure you that we, the college, will support both of you. You are not in trouble, but you understand that if this gets out in the wrong way it might make life difficult for you.\"\n\nI was beginning to realise what coming out might actually mean and how hard it might actually be.\n\n\"I understand,\" was all I managed to say.\n\n\"Perhaps you do, perhaps you don't, but I've talked it over with Rebecca and she agrees with me that the best course is to face this head on.\"\n\nI was confused, \"Face it head on? What do you mean?\"\n\n\"Don't let it spread as a rumour. Stop that right away.\"\n\nI was horrified, \"You mean Becky and I have to stop...\"\n\n\"No, no, dear girl! I would never do that to anyone. Rebecca has assured me that she has genuine feelings for you, and I wish to respect that. What I am saying is, don't try and hide away. If you act as a couple in public it will make the whole rumour mill die before it starts.\"\n\nI couldn't believe what I was hearing, \"Are you sure, Professor?\"\n\nThere was a rueful chuckle, and he said, \"I know what I'm doing. This isn't the first time we've had a little problem like this. Now, go and have a lovely day with Rebecca, and don't worry. I'll start handling this. However I'd like to see both of you tomorrow morning. I've given Rebecca all the details. Now, could you hand me back to her, please? I need to just check a couple of things.\"\n\n\"Of course. And thank you, Profess... John,\" I said, remembering to try and be more informal.\n\nI handed the receiver to Becky, and she gave me a quick peck, took it and said, \"Hi John. Thank you for talking to Anna. I really appreciate what you're doing for us.\"\n\nAssuming she wanted privacy, I started to leave but Becky grabbed my hand and shook her head. She smiled and my tummy was back to doing the hop scotch of love.\n\nThey talked for another minute, with me only catching one side, but it finished with Becky saying, \"That's great John. Thank you so much... yes... yes. I will... yes. See you tomorrow. Bye.\"\n\nShe put the phone down and turned to me, putting her arms around me. We hugged and kissed and I started to feel the panic recede.\n\n\"Okay sweetie, let me explain. We need to make sure tomorrow that we show the college we're a couple.\"\n\nI was nervous. This was a huge step. \"How?\"\n\n\"First of all, I drive you in in the morning. We don't explicitly say or do anything, but it takes any possible wind out of the sails of gossip.\"\n\nI swallowed. The idea made me feel nauseous and excited all at the same time.\n\n\"And then?\"\n\n\"Then you come to my final lecture of the day, at ten to five. I finish at five.\"\n\n\"Why do you need me to come there?\"\n\n\"Because Paul will be in that lecture.\"\n\nI was horrified. \"What??\"\n\nBecky took my hands in hers, \"I know it seems like a mad thing to do, but John was right. If you come in and I acknowledge you, any whispering he's done will be devalued.\"\n\nI could see a sort of perverse sense in what she was suggesting, but also wondered if there was a chance it would backfire. \"And then we run home, I hope?\"\n\n\"Not quite. We go to the Students' Union bar for a drink.\" She obviously noticed the panic on my face, but followed with, \"We only stay for one, I'll be driving after all, but we go in as a couple.\"\n\nI was so conflicted. Part of me wanted to run away from everything, taking Becky with me yet, oddly, a bigger part of me wanted to do this \n\nBecky placed a soft, romantic kiss on my lips, which I automatically responded to.\n\nWhen we finally broke, she said, \"Now, let's go and assure Jackie that everything is okay.\"\n\nWe walked back outside, hand in hand, both with beaming smiles on our faces, and Jackie looked up, perplexed.\n\n\"What? What's going on? What happened?\"\n\nBecky sat down and said, \"It's going to be okay, Jackie. The damage is done, but it's not so bad. We just spoke with Professor Henry and he's supporting us, so don't worry.\"\n\n\"Professor... wow. Best to have friends high up, I suppose.\"\n\nBecky smiled. I was in an emotional turmoil from everything that had happened, but was starting to feel that maybe things wouldn't be so bad.\n\nJackie looked at us both and finally took the full scene in. \"Oh my god. You're still in your dressing gowns and your hair is all messy. I didn't interrupt anything, did I?\"\n\nBecky laughed, \"No Jackie. As you can see, we were out here enjoying our breakfast.\"\n\n\"So, what are you going to do? How are you going to stop Paul spreading rumours?\"\n\nBecky smiled. I was amazed at how pacific she was, and it made my love for her wider and deeper in that moment.\n\n\"By making sure it's not a rumour.\"\n\nJackie looked confused, \"Oh god. I've split you up, haven't I? I'm so sorry!\" She almost started to cry again.\n\nBecky reached over and took her hand, \"Stop it. There is nothing that would drag me away from Anna. You must believe that. No, this is almost the opposite. You'll find out soon enough. Now, I suggest you go home, clean yourself up and get changed and do whatever you were going to do today if Paul wasn't around. How about we meet up for a drink tomorrow, with you, in the Students' Union at six?\"\n\nShe turned to me, \"And we're okay with this, sweetie, aren't we?\"\n\nCompletely unselfconsciously I kissed Becky and said, \"Yes, we're more than okay.\"\n\nJackie had watched the whole exchange and finally said, \"I'm jealous. The way you two communicate, it's blindingly clear that you are in love.\"\n\nShe finally noticed Tilly on the table and looked at us, \"And this is where it all started isn't it? This is where you saw Saturn? It really is quite romantic.\"\n\nMy heart lifted and I smiled at Jackie, \"So, you're really okay with us?\"\n\nShe smiled and nodded, \"More than okay. Like I said, I'm a bit jealous, but yes I love that you've found love.\"\n\nJackie got up, and we both stood. I was very aware of just how short my bath robe was, and how practically naked I was.\n\nJackie did a soft whistle, \"Babe, any shorter and that dressing gown would expose your tits.\"\n\nBecky and I both laughed. Jackie came over and extended her arms to embrace both of us. We brought our arms round into a wonderful three way hug.\n\nJackie murmured, \"I've decided you might be my favourite people in the whole, wide world right now.\"\n\nWe broke and Becky said, \"I'll see you out, and then we'll see you tomorrow, yes?\"\n\nI got the impression Becky wanted to have a private word with Jackie, so I let them walk off and I heard a whispered conversation, which I deliberately tried to strain my ears to catch, but in that endeavour I completely failed.\n\nI heard the door close, and then Becky came rushing out and hugged me.\n\n\"I love you Anna. You know that right?\"\n\nI was genuinely surprised. After all the trauma I was sure we were going to end up having some serious, soul searching conversations.\n\nShe held me at arms length, a look of pure happiness in her eyes.\n\n\"I know you do, Becky, and I love you, but can you explain for the hard of thinking exactly what is going on?\"\n\nShe sat down on the bench and pulled me onto her lap. I loved the intimacy of that.\n\n\"Okay, I need to explain some history. As I told you I am not completely out. Until I met you I was scared of what sort of reaction I would encounter. After last night with Jackie, and now today, I've realised I don't want or need to be scared any more. I have you. You make all the difference.\"\n\nMy mind tumbled, trying to get all the questions out that were crowding in my mind.\n\n\"I do? How?\"\n\n\"Because I really love you, and I want the world to know. When I was talking to John, and he was so supportive, I realised that I was safe, supported, and I could show the world how I feel. About you.\"\n\nI was happy, but nervous once again, \"So, you want us to come out to more people?\"\n\n\"I want the world to know. I want everyone to understand that we are together.\"\n\nI swallowed. More questions flooded my mind, but one came straight to the front, \"I want to be with you, to be a couple, but... I don't think my parents' are quite ready to...\"\n\nShe stopped me with a kiss again, a signal I was coming to love, and pulled back, \"Baby, we're facing a handful of people here, not every person in the world. One step at a time. If you don't want to be open, then please say so. I will understand. You've done so much for me, and for us, but I feel like I'm pushing you now.\"\n\nI thought about it, and realised that the strong desire to let people know we were together outweighed everything.\n\n\"No, Becky. I want this. I need to let the world know I love you.\"\n\n\"And that I love you?\" She said, a little smirk on her lips which once again brought those dimples out, which of course made my heart melt.\n\n\"Yes. That we are in love.\"\n\n\"My god Anna, you are amazing. I would literally do anything for you...\"\n\nI thought back to the night before stared into those eyes, smiled and said, \"Anything?\"\n\nShe cocked her head, \"Yes, sweetie, anything. Just ask it.\"\n\nI didn't need to think, I just said, \"I want you to take me upstairs right now.\"\n\nShe raised an eyebrow, a smirk on her lips. \"And?\"\n\n\"And... and fuck me.\"\n\nHer grin broadened. \"Do you know, I think that's the first time you've sworn since we've been together?\"\n\nI thought back, \"Is it? I rarely swear. Sorry.\"\n\nShe pecked my lips and saiid, \"Oh don't apologise. I love it. So, Anna, how would you like me to fuck you?\"\n\nI blushed and felt a rush inside me, \"Any way you want.\"\n\n\"Oh no. You have to tell me. I will do anything for you, as I said, but you have to tell me.\"\n\nI was transported back to the night before, and all I could think of was, \"With your toy.\"\n\nBecky kissed me and I felt her move to get up, so I slid off her lap and stood. Just for once it was me who held out my hand and pulled her up to me.\n\nIt felt odd but wonderful as I led Becky through the French windows, through the dining room, hall and up the stairs to 'our' bedroom.\n\nI lay down on the bed. Becky stood there looking down at me and, feeling incredibly wanton and turned on, I undid the sash on my bathrobe and opened it.\n\nI looked back up at her.\n\n\"Becky, please.\"\n\nShe put on a mischievous grin, \"Please what?\"\n\n\"Fuck me. Please.\"\n\nShe raised an eyebrow and, smiling, went to the bedside cabinet, opened it and took out the dildo and panty set, along with the tube of KY which she put on top of the bedside table.\n\nI watched transfixed as she undid the sash on her own bathrobe and let it fall open. She stepped into the panties and slid them up. I loved the way her breasts hung down and then flattened again as she straightened herself up. Her nipples were pert and crinkly. She finally pulled them up over her mound and I looked down at the blue dildo. It looked so much bigger than I remembered it from the night before.\n\nShe climbed on the bed and crawled up on all fours so she was beside me and looking down, deep into my eyes. She came down to kiss me, her hair framing us, and I felt the dildo touch on my thigh and I shuddered with an equal mix of anticipation and trepidation.\n\nBecky pulled back, \"Are you ready sweetie?\"\n\nI smiled and nodded. I trusted Becky implicitly.\n\nShe scooted down the bed and I opened my legs to her. She lifted them and worked her way towards me. She was kneeling between my legs, hers were spread, and mine were now resting on her thighs. It was a beautiful sight. More beautiful than I could ever have imagined, there was just something about the way her kimono was open, her breasts not completely uncovered. I was mesmerised.\n\nBecky leaned over and got the tube of KY. She picked up the little control box and passed it to me, saying, \"Don't switch it on yet sweetie. You need to be relaxed, and the vibrations won't help that.\"",
        "I held it and watched her apply the lube to the dildo. I was then surprised when she took some more and applied it to the entrance to my pussy, sliding two lube covered fingers inside me and rotating. It felt wonderful and I was disappointed when she slid them out.\n\nOnce again, she asked me, \"Are you ready, sweetie?\"\n\nI was still nervous, but so turned on and I really wanted to do this, I swallowed and replied, \"Yes.\"\n\nShe scooted further forward and I felt the tip of the dildo at my entrance. I immediately tensed up, but Becky just stopped and waited, looking into my eyes and smiled. \"I won't do anything until you're ready. Relax baby.\"\n\nI consciously concentrated on relaxing myself, and then felt Becky spreading my lips with her fingers then pushing in and I was being stretched wider even than when she had used three fingers on me. She stopped and it felt like it was deep inside me but, looking down, I could see there was still quite a lot left to go.\n\nI let myself relax again, and she pushed further in. Then I felt the little curved tip stroke across my little pad and I moaned. There was something wonderful about feeling so full, now that I was adapting to it. I could feel my walls being touched everywhere. \"Oh god yes, Becky. That's right on my yummy spot.\"\n\nShe smiled and said, \"Do you want to try a little vibration now, sweetie?\"\n\nWith a shaking hand, I felt for the little wheel and turned it up and nearly passed out with pleasure. The vibrations filled me, and were particularly intense on my yummy bit.\n\nI felt my walls clamp down on the dildo, and that increased the intensity all around.\n\nAs I got acclimatised to the vibrations, I felt my walls relax, and Becky pushed slowly and I felt myself being stretched and filled ever deeper inside, but by now I had closed my eyes, and I was so driven by lust and desire that it made everything just that much more incredible. I knew the dildo was all the way in when I felt the base of the dildo and the rubber of the panties against my lips and, particularly against my clit. I was so full and it was all so amazing. I moaned deeply.\n\nI opened my eyes and could see the look of ultimate pleasure on Becky's face. Her beatific smile, her dimples. She started moving slowly, out a little and in a little and it sent huge waves through me. Becky opened her eyes, and stared at me, the deep blue now burning with passion and intensity. I slid the little control up further and the vibrations increased pushing me further and further towards my ultimate release.\n\nShe asked, in a lust laden voice, \"What am I doing, Anna?\"\n\nMy voice came out low and husky as I said, \"You're fucking me, Becky.\"\n\n\"I am. I love fucking you, Anna.\"\n\n\"And I love you fucking me, and I fucking love you.\"\n\nThe foul language just spurred me on and I could feel everything start to gather together like storm clouds before the thunder starts.\n\n\"Where am I fucking you Anna?\" Becky asked.\n\nIn a moment of confusion, which given the circumstances you will have to forgive me for, I nearly replied 'on the bed,' but saved myself.\n\n\"You are fucking me, with your dildo, in my cunt,\" I managed to say through my moans of pleasure.\n\nThat tipped me over. I hated that word normally, but at that time, with my perfect love it was the perfect word. As I started coming I felt Becky moving as she came, making the feelings inside me magnify and I groaned out loudly and Becky joined me.\n\nAll I could do was say, \"Fuck, fuck. Fuck, fuck, fuck,\" in rapid succession.\n\nMy orgasm washed through me, back and forth, top to bottom, inside and out. I almost lost consciousness several times. Becky collapsed down on me, our breasts squashing together and the vibrations increased somehow, and I wrapped my arms and legs around her and we rode together through another wonderful wave, shaking in unison, kissing passionately all through it.\n\nAfter an age of beautiful, heavenly ecstasy we both started to come down, and I scrambled to find the control box which I had, understandably, dropped. I switched it off and a wonderful feeling of calm infused me.\n\nMinutes of blissful silence passed, and finally I realised Becky was crying.\n\n\"My love, Becky...\"\n\nShe kissed me, deeply, then took my lower lip, biting it gently.\n\nThrough her tears, she said, \"I love you so much Anna. Nobody has ever made me feel the way you do. I love you. Please, never leave me.\"\n\nI looked at her, almost lost for words. Finally I said, \"I will never leave you, Becky. Why on earth would you think that? You give me more than I have ever imagined possible.\"\n\nShe smiled and sort of laughed through her tears, \"Well, what if someone else does?\"\n\nThis was so unusual. I was used to being the one who was insecure.\n\n\"Nobody else can, for two good reasons. I never want anyone else to touch me, and they would have to get past Bitch Becky, remember?\"\n\nShe giggled again, kissed me and finally we broke. She straightened up and I lowered my legs from around her. She was kneeling once again and slowly pulled back and the dildo slid out of me. I felt a little orgasm rush through me as she withdrew and I was finally empty once again.\n\nShe sat on the edge of the bed and shuffled the panties off and over her legs, dropping the whole thing on the bedside table once again and then coming back to lie next to me.\n\nWe lay, on our sides, facing each other, kissing and framing each other's faces with our hands.\n\n\"I love you, Anna.\"\n\n\"I love you, Becky. Really, really love you. Every ounce of my being, every atom in me loves you.\"\n\n\"You make me so happy. I'm so glad we're going to be openly a couple, and that you are going to live with me. I feel an ache when you're not in the same place as me, even if it's just another room.\"\n\n\"Oh gods, Becky, that is exactly how I feel. I thought it was just my immaturity.\"\n\nShe chuckled, \"Baby, you are more grown up than some people I know who are older than me.\"\n\nI smiled and kissed her, \"Well, it doesn't always feel like it, but thank you my love.\"\n\nAfter all our exertions we soon fell asleep and dozed through a few hours. It was blissful, and when I awoke I lay and looked at my lover, her eyes still closed, her breathing deep and peaceful. My heart filled and I placed a gentle kiss on her lips. She stirred and slowly opened her eyes.\n\nHer face broke into a beautiful smile and she said, \"Hello, you.\"\n\n\"Hello my love. Did you sleep well?\"\n\nShe kissed me and said, \"It feels like it was the best sleep I've ever had.\"\n\nShe stirred and pushed herself up off the covers, her kimono all askew.\n\n\"I think we both need, and deserve, a bath. What do you think my beautiful girlfriend?\"\n\nMy heart swelled and I said, \"Mmm. Yes. A bath. I think I'm going to have to get used to a girlfriend who is always right about everything.\"\n\nShe giggled and we got up on wobbly legs and headed for the bathroom.\n\n*****\n\n Thank you so much for reading, and I truly hope you enjoyed it. I had intended to make this the final part, but that would have involved another week of writing, and an extremely long story, so yes, there will be a part 5, which will almost certainly be the last part, but life is going to be hectic for the next few weeks for Jodie and me, so I will be taking a brief break from writing while we sort our stuff out.\n\nPlease leave a comment. I read every single one, and often reply to them by email if they are not anonymous.\n\nLove, peace and light to all my lovely readers and followers.\n\nAnna\n\nxxxx "
    ],
    "authorname": "annag98",
    "tags": [
        "lesbian",
        "lesbian sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/saturn-rising-pt-04"
}