{
    "title": "Fantasy Sex Cruise 10",
    "pages": [
        "This is the tenth episode in a multi-part story. It is the third chapter of Linda's cruise with Bradley. You should first read Chapter 01 up to where they get off the shuttle so you can see how these cruises started and get introduced to the characters then read Chapter 08 for the beginning of Linda's cruise. I hope you enjoy the journey. \n\n***** \n\n* TUESDAY \n\nI awakened from one of the most restful nights of sleep I could ever remember. Yesterday had been an unusual day to say the least and the sex and the Ecstasy had combined to make me sleep very soundly. I could still feel the effects of the X but at a lower level of intensity. I was very relaxed both mentally and physically and wanted to cuddle with somebody. I looked for Bradley but he was not in the bed. I got up and headed for the bathroom where I found Bradley in the shower. \n\n\"How long have you been up?\" \n\n\"Just long enough to pee and take a quick shower. I intended to come back so I could wake you up with some more cool sex.\" \n\n\"You go back in the bedroom and keep thinking those thoughts. I'll join you as soon as I pee and have a shower.\" \n\nBradley got out of the shower and I used one of the plush towels to start drying him. When I had done his back I handed the towel to him and headed for the toilet. As I sat down I tried to remember the last time I had peed with somebody else in the room. I couldn't recall when or even if I had done this before but it seemed perfectly natural to me now. \n\nWhen I finished I headed over to the shower and got in. The warm water felt good on my skin. I poured some body wash in my hands and began to rub it on me. I massaged my tits until my nipples started to harden then moved one hand down and rubbed my naked pussy. I really liked not having any hair on it, it seemed much more sensitive to being touched. I quickly became aroused by my actions as my fingers tickled my clit and slid between the folds of my lips. I began to think of Ashley and soon felt what was becoming an increasingly familiar sensation. I rubbed my clit harder and faster until my climax hit me and spread all through me. I was so glad Bradley had pushed me to masturbate the first day. I was really surprised when I made myself cum but I was really getting into it now and was going to continue doing it. \n\nI got out and dried off then headed back to the bedroom. Wen I got there I didn't see Bradley so I went into the sitting room and saw him out on the veranda lying flat on his back on a lounge chair. I walked out and put my knees on the sides of his head and leaned forward to put my hands on either side of his hips. I lowered my pussy until I felt his tongue lick it then bent my head down and started licking his cock from the base to the tip. \n\n\"Your pussy smells great and tastes sweet too.\" \n\n\"That may be more than the water from the shower you're tasting. I got a little carried away in there and gave myself a nice orgasm. It made me want to have some more. OH yes, yes that feels so good. Just like that, keep doing that. OHH, Ummmh YES.\" \n\nBradley's tongue was deep inside my vagina, sucking and licking me while his hands spread my ass cheeks apart. I pressed my hips down on his mouth and felt his thumbs on my outer lips prying them open so he could get even deeper inside me. The more he sucked me the more my cunt seemed to soften and open to him. I loved how his saliva and my juice were making my pussy so wet. \n\nI felt his finger on my puckered hole just before it pressed forward and crept inside my ass. \"Bradley, after we get back from our shopping trip I want to spend the evening getting my ass fucked. I'm so ready for it now. The glass rod you used on me yesterday definitely changed my attitude about having something up my ass and I can't wait until it's your hot hard cock.\" \n\nHe continued sucking my vagina and finger fucking my ass until I felt my climax approaching. \"Unnnnh, Unnnnh, AAHHHHH, OH GOD BRADLEY. Yes baby you're making me cummm!\" My vagina pulsed around his tongue and my stomach and diaphragm began to spasm as I came on his mouth even harder than I had in the shower. \"Jesus Bradley that felt incredible. Now I want to feel that beautiful cock of yours in my mouth. I got up and told him to stand up. I laid on my back on the lounge chair and let my head hang off one end so my mouth and throat were in a straight line. \n\n\"OK Bradley, I want you to kneel down at the end of the lounge and fuck my throat with your hard cock. I want to feel all of it deep in my throat. Keep fucking me until you shoot a big load of your sweet cream as deep in me as you can.\" \n\nHe wrapped his hand around his semi-hard cock and pressed the tip against my lips. I opened my mouth to allow him access. His mushroom head slid through my lips and across my tongue pausing when about half of his cock was inside my mouth. He stroked the half that was in his hand and I felt him inflating against my cheeks and the roof of my mouth. I swirled my tongue all around the brown invader and began to suck on it. He pulled back and withdrew all but the head and stroked it some more while I licked and sucked my tasty morsel. He slowly pushed it in and pulled it out, each time inserting a little more of his stiffening cock. Finally he let go of the shaft with his hand and pushed the entire length of his fully erect cock into my mouth. \n\nI felt the head slide slowly into my throat. When his balls touched my nose I knew he was in me as deep as he could go. I relaxed and concentrated on breathing regularly and marveled at the feeling of his thick cock fully ensconced inside my throat. I reached one hand back and cupped his balls and began to caress them. I used my other hand to rub my clit. He held still while my mouth and hand made his cock even harder. After a minute of not moving he began to slowly withdraw and push forward so I could feel all of him entering and leaving my mouth with each stroke. I breathed in deeply when he withdrew and exhaled as he slid back inside. It felt wonderful. \n\nWe kept this up for several minutes until I could taste his precum leaking onto my tongue with each stroke. The speed of his motions increased but it was still a relaxed pace. My mouth was full of saliva, which facilitated his stroking. Each time he bottomed out in me I would squeeze his balls and massage them with my fingers. \n\n\"Linda I'm going to cum soon, do you still want me to cum deep in your throat?\" All I could do to answer was moan UnnnHuhh. After a few more strokes he stopped when he was buried in me. I felt his shaft swell then pulse as the first jet of hot cum squirted directly into my esophagus. I squeezed his balls and was treated to another blast of his pearly discharge that was followed by five more big globs of semen joining the others in my stomach. He withdrew his still hard cock very slowly and his cum continued to trickle out into my mouth as it slid out. He stopped when only the head remained confined by my lips and I sucked on it until I was sure I had gotten all of his sweet cum. He pulled the tip free and I raised my head up and swallowed the last mouthful. \n\n\"Wow Linda that was incredible. You've become a very accomplished cocksucker in only two days. You're going to spoil me.\" \n\n\"I want to spoil you but I have a selfish motivation as well. I've really developed a fondness for it. Feeling your cum splash against all the parts of my mouth and throat is an extremely exciting sensation. I love how your shaft swells against my tongue and cheeks with each ejaculation. I can feel your hot cum spurting down my throat much more intensely than I can when you cum in my pussy. I can't wait to feel it in my ass so I can compare how that feels.\" \n\nAshley leaned around the partition between our balconies and said, \"Hey you guys, I see you're up and at already. Want some company?\" \n\n\"Ashley, I was wondering where you were. You and Mark get over here now. Bradley and I were just getting started. I'll meet you at the door.\" \n\nI got up from the lounge chair and headed for the door. When I opened it Mark and Ashley were standing there in their robes. \"I see we're overdressed\" Ashley said as she walked in and immediately took off her robe then put her arms around me and kissed me. Mark closed the door behind him and took his robe off. I was getting very comfortable being naked and wanted to be that way as much as possible. This was another marked change in my behavior; I had always worn some form of clothes except when I was in the shower. Even then the first thing I did when I finished was reach for a towel to wrap around me when I turned the water off. \n\n\"Ashley, have you and Mark eaten yet?\" \n\n\"No, but your mouth tastes like you have. Do you usually have a serving of semen before you have coffee in the morning?\" \n\n\"Not usually but I'm trying to cultivate the habit. It's eight o'clock now. Our makeover session is scheduled for ten until noon, after that we can have some lunch and then we can go ashore and do our shopping. The ship isn't going to leave until midnight so we'll have plenty of time on shore and still get back in time to get dressed for dinner. Tonight is a formal night remember.\" \n\n\"I'd forgotten all about that. What are you going to wear?\" \n\n\"Bradley is going to pick out some new clothes for me in San Juan. You can help with that so I can have a second opinion.\" \n\nAshley looked at me and said, \"I need to take a bath, Want to join me?.\" \n\n\"Bradley would you order us in some breakfast from room service while we're in the tub? Mark would you like to use the shower while we're bathing?\" \n\n\"Yes thank you I would.\" \n\nWhen we got in the bathroom I asked Ashley to give me an enema and told her I intended to have my ass thoroughly fucked today and wanted to be squeaky clean inside and out. \n\n\"I'll give you one if you give me one. If you're going to have your ass fucked then so am I.\" \n\n\"That's a deal, but I've got something else in mind for your sweet ass before it gets fucked.\" \n\n\"Oooohhhh and what would that be?\" \n\n\"I'm going to return the favor of what you did to me yesterday. I'm going to lick your pretty little butt until you scream.\" \n\n\"Oh God Linda, that shouldn't take long. I'm still feeling the effects of the X and I don't seem to be able to get enough sex.\" \n\n\"Then let's get started with the enemas.\" \n\nMark walked in to the bathroom and saw what we were getting ready to do. \"Would you two like me to do that for you?\" \n\n\"You might as well because you're going to be doing something else to my ass in a little while.\" \n\n\"And what would that be?\" \n\n\"Take a wild guess.\" \n\n\"I was hoping you'd say that. \n\n\"And while you're doing it I'm going to see how far I can get my tongue up your lovely wife's ass so you better clean us out real good.\" \n\n\"I'll give both of you my undivided attention Linda.\" \n\nMark had fun doing our cleansing. He pulled the nozzle off the end of the tube and stuck the tube itself in our asses to insert it far up our rectums before flicking the clamp open to let the warm water flow into me. He filled me really full and made me hold it in until I couldn't keep it inside anymore then I ran to the toilet to discharge the water. While I was on the pot he refilled the bag and started doing the same thing to Ashley. She was moaning and wiggling the entire time. You would have thought Mark was using a vibrator on her instead of an enema tube. \n\nWhile Ashley was on the toilet I started filling the tub. Mark was cleaning up the enema equipment and then headed to the shower. I called out to Ashley, \"Watch the tub and turn the water off when it fills. I'm going to play with Mark for a minute.\" I got in with him and put my arms around him. I looked up at him and he lowered his head to kiss me. I could feel his cock begin to stiffen against my pussy. \n\nI moved my hand down to wrap around his shaft and squeezed it as it continued to expand. \"Ooohhh Mark I can't wait to feel this in my ass. Now behave yourself in here. I want your first morning load of hot cum in my rectum not running down the drain of this shower. I kissed him again then got out of the shower and headed for the tub. Ashley was already lying in it as I got in at the other end. \n\n\"I hope you don't mind my being in love with your husband.\" \n\n\"Do I look like I mind? I honestly think that both of us loving you is the best thing that has ever happened to us. If anything happens to one of us it will be a great comfort to the other that you will be there for them. Until then I hope we get to spend a lot of time together because your love strengthens our love and I'm sure that when we meet Ed he will make us feel the same way. We've never had friends like this before where we feel so comfortable sharing ourselves with you. I know it's only been a couple of days but I love you Linda. I love you as much as I love Mark. You and I are lovers in every sense of the word and I couldn't have imagined ever saying that to a woman.\" \n\n\"I wouldn't have believed it myself Ashley. It totally doesn't matter to me that you're a woman. I love you the same way I love Mark or Ed. You just don't happen to have a dick between your legs but I really love what you do have. I never really thought about pussy before, not even my own. It was just what I was born with and as long as it worked I just sort of took it for granted. But now that I've fallen in love with yours I'm much more aware of pussies including my own. I feel like my pussy has been way too underutilized for the past few years and it wants to be used and appreciated more. Am I making any sense?\" \n\n\"Maybe not to anybody else that might hear this conversation but it makes perfect sense to me. I know exactly what you mean. Your pussy is beautiful and it's made me feel the same way about mine. Just the idea of you kissing me and licking me would have been abhorrent to me a few days ago and now it's one of the great joys of my life to feel your mouth on my pussy. I can feel how much you love it and that excites me more than I can say.\" \n\nWe were lying facing each other with our legs side by side. I put my hand on her left foot and lifted her leg then slid my left leg under it and moved forward so our pussies were touching in a scissor position. I pressed my hips forward to grind my pussy against hers and felt our lips slide against each other. She pushed back and moaned as we continued our pussy kiss. \n\nAfter a few minutes I slid back and reached for the body wash. I crossed my legs and told her to scoot her hips on top so they were out of the water. I poured some of the body wash in my hand then reached forward to spread it all over her mound and vulva. I washed her pussy as though it were a priceless object of art, running my fingers over it and then through her slit so I could pull on her labia with my finger and thumb. My fingers teased her opening and slid down to her anus so I could insert one into her ass. I sawed it back and forth while my thumb caressed her clit. \n\n\"This is what you meant. Nobody has ever loved my pussy this much or shown it such affection. Every place you touch you fill with love. My pussy wants you to play with it. It hungers for you to caress it and stroke it tenderly. Put your fingers in my pussy Linda. Make me cum for you. Let me show you how much my pussy loves you.\" \n\nI slid two fingers inside her and felt her juices flowing. I curled them up and tickled her spot. Her hand moved down and her fingers began rubbing her clit in a slow circular motion. Her eyes were locked on mine; her smile was warm and gentle, as we played with her pussy together in childlike innocence. \n\n\"Ooohhhhh Linda yes. I'm going to cum for you. Feel what your love does to me.\" \n\nHer head slowly tilted back and her eyes half closed as her vagina began to throb around my fingers and her juices streamed out of her into my hand. Her stomach flexed as the orgasm intensified. I saw a light pink flush on her neck and her nipples were extended as little aftershocks caused her hips to flinch. \n\nShe raised her head up and looked at me. She didn't have to say a word. We had both shared what we did to her. I had given her an orgasm and she had given it right back to me. Neither of us had even noticed that Mark had gotten out of the shower and stood a few feet away watching what we had just done. \n\n\"I've never seen anything so wonderful in my life as you two. You're beautiful. I can't tell you how fortunate I feel to love both of you.\" \n\n\"You're going to get your chance to show us how much you love us real soon. Ashley let's get out of this tub and see if Bradley has managed to get breakfast ready.\" \n\nWe got out and dried each other off then all three of us walked out to the living room. Breakfast had been set up and Bradley was waiting for us. \n\n\"Did you have a nice bath?\" \n\n\"Yes it was... refreshing and I see you have a lovely feast arranged for us.\" \n\n\"It's mostly fruit and juice but there's a nice assortment of muffins and pastries along with coffee.\" \n\nWe sat down to eat and discuss the rest of the day. Bradley said that as soon as he finished eating he was heading for the upper deck to run around the ship then he was going to the gym to work out. He told us he'd meet us back here at noon so we could get ready to get some lunch and go ashore. Mark told him he would meet him in the gym when the ladies left for their appointment. When we finished eating I told Mark and Ashley to go out on the veranda. I went in the bathroom and got towels, sunscreen, wet washcloths and lube then joined them on the veranda. \n\n\"Ashley you lie down on your tummy on the lounge chair.\" When she was in position I put a cushion on the deck at the end of the chair where her feet were and knelt down on it. \"Scoot back and spread your legs.\" She was right where she needed to be so I could lean over and get my head on her ass. I put another cushion behind me for Mark to kneel on and put a pillow on the end of the chair for my stomach. \n\n\"OK Mark, before we get started, rub some of that sunscreen all over my back and I'll put some on Ashley.\" When we were coated with the sunscreen I told him, \"Now kneel down behind me and use the lube to get my ass nice and slippery for your cock while I do the same thing to Ashley's ass with my tongue.\" \n\n\"Linda, would you mind if I used my tongue on you to start with?\" \n\n\"Oooohhhhh Mark, I wouldn't mind in the least.\" \n\n\"You have such a pretty pussy tucked between your thighs and that sexy ass that I must have a little taste of it first.\" \n\n\"Mark you say the sweetest things, please, help yourself.\" I wiggled my hips at him to encourage him and felt his hands cover my ass cheeks. He spread them apart and I could feel his warm breath as his mouth neared my pussy. When his lips made contact with mine I shuddered from the thrill of what we were about to do. He kissed my lips then I felt his tongue as it extended until it found my clit then moved slowly upward to my vagina. \"Ohhhh God Mark, yessss. You can do that as much as you want to.\"  \n\nWhile he continued his oral exploration of my slit I put my hands on Ashley's ass cheeks and spread them apart. I knew what Mark meant about seeing bald pussy lips framed by her ass and thighs. It was an extremely erotic sight. Her inner labia protruded slightly between her puffy outer lips and glistened with a slight sheen of moisture. This caused butterflies in my stomach. My tongue couldn't wait to taste her. I put it right on her opening and pursed my lips so I could suck in while I penetrated her pink hole. Her hips flinched and she moaned her approval of my tongue's invasion of her. \n\nI continued to mimic what Mark was doing to me as Ashley and I received oral love until both our twats were slick with saliva and pussy juice. \"Ashley, move one of your arms so you can reach down and play with your clit with your fingers.\" When her hand was in place I moved my mouth up her crack and put my lips over her puckered anus. My tongue barely touched the little hole as I licked over and around it. Her ass cheeks tightened in my hands. I continued to tease her hole until her cheeks finally relaxed and I spread them farther apart. ",
        "I opened my mouth and extended my tongue so I could lick her with broad laps across her perineum and asshole. Her hips undulated as I repeated these long licks and her moaning increased. Her fingers were busily massaging her clit. I kept this up until I felt Mark's lips on my asshole as he used the tip of his tongue to tickle my puckered aperture. I relaxed my ass cheeks and pushed my hips back toward him. He got the message and I felt his tongue penetrate my anus. His hands pulled my cheeks wider apart and his tongue elongated into my tiny hole until it was in as far as he could reach. \n\n\"Ashley, your husband's tongue is buried in my ass.\" \n\nShe shuddered and moaned loudly. \"Ohhhh God Linda this feels so good. Mark, make her feel as good as she's making me feel. Love her with your mouth like she's loving me.\" \n\nI pushed my tongue into Ashley's hole and stuck it in as far as I could and then began to move it in and out. Her hips pressed back to encourage my actions and I spread her cheeks wider. After sucking on her tight hole for a while I raised my mouth and moved one of my fingers over to insert it into her ass. I slid it all the way in and sawed it in and out and used the tip to press against the walls of her lower rectum. She pumped her hips up and down as if she was being fucked. \n\nWhen she was comfortable with one finger I moved another one from my other hand and inserted it along with the first one. I used both of them to massage and fuck her hot little hole. I pulled them back so only the tips remained inside her then pulled sideways to stretch her asshole open. She relaxed and I could open her up easily now. I put my mouth over her distended hole and let a big glob of saliva ooze out and into her ass then moved it around inside her with my fingers. \n\nThe more I played with her ass with my fingers the more furiously she used her own to rub her clit. Her breathing quickened and her moaning increased and I knew she was close to a climax. Apparently Mark knew this too and I felt him put two fingers inside my vagina to rub my spot while he continued to suck my asshole. A few more minutes of this was all it took. \n\n\"Ohhh, Ohhh, Ohhh, Linda you're going to make me cum. Keep licking my ass. Don't stop. Please don't stop. Ohhhh, Ohhhh YESSSSS I'm cumming.\" \n\nHer ass pressed back against me as her orgasm overtook her and kick started mine. My rectum and my vagina began to spasm at the same time, while I tried desperately to keep sucking Ashley while she came. It was incredible to be having such a powerful orgasm and giving one to Ashley that was equally intense. We seemed to feed off each other's orgasmic energy as they lasted much longer than normal. \n\n\"Oh Goddd Linda that was fantastic. I didn't know I could cum like that. How can anything that nasty be that fabulous?\" \n\n\"I know what you mean. I'm really liking this anal sex. Are you ready for round two?\" \n\n\"What do you mean, round two?\" \n\n\"Mark's going to stick that wonderful cock of his in my ass and give me another earth shaking orgasm. You stay where you are and I'll give you another one.\" \n\n\"Oh Jesus I don't know if I could handle another anal orgasm right now but I will turn over so you can eat my pussy. That way I can watch Mark fuck your pretty ass while you do me.\" \n\nAs Ashley turned over I got another cushion and put under my knees so my ass was higher up in the air for Ashley to get a good look at Mark's cock sliding in and out of me. She moved forward and spread her legs then leaned back on her elbows. Her delicious pink pussy was still wet from her orgasm and her swollen clit sat invitingly atop it. \n\n\"Ashley the more I see your beautiful sexy pussy the more I love it.\" \n\n\"Linda I've been telling her that for years. Now that she's hairless I can hardly keep my eyes off it. Or my hands or my mouth.\" \n\n\"Oh God yes Mark. It tastes just as sweet as it looks. Do you need any help with that cock of yours?\" \n\n\"No, I'm good. I've been hard ever since my mouth touched your ass.\" \n\n\"In that case I think you should get started. Put some of that lube in my butt and see how far you can get that hard cock in it.\" \n\nThe lube was cool and felt good as it dripped onto my puckered hole. Mark pushed it inside with his finger then dribbled some more on it. I reached back with my hands to pull my ass cheeks apart and then felt the tip of his cock touch the center of my hole. Mark pushed forward and my anus opened with no resistance thanks to his recent efforts with his tongue. He moved slowly but soon I felt his helmet shaped head completely inside me as my sphincter conformed to his glans. He wiggled it back and forth a little to tease the opening and make it comfortable with movement then pushed forward again to begin inserting the shaft. \n\n\"How does that feel Linda?\" \n\n\"Marvelous Mark; as good as your tongue only deeper. Ohhhhh I love the way you're stretching me. Keep going but take it slow, I want to feel every inch of you as you fill me up.\" \n\nMark pushed again and slid about half his cock inside then stopped. \n\n\"It's half way. Do you want me to keep going or pull back and fuck you a little?\" \n\n\"Pull back. I can't wait to see what it feels like to have you sliding in and out. Don't go too fast though.\" \n\nHe pulled back a little then eased it forward again repeating this motion at the same speed but each time he pushed it in he went a little deeper. The anticipation of having him finally hit bottom was making me hot. My pussy was leaking juice at the thought of being fucked in the ass all the way. That's when I remembered Ashley's pussy. It was only inches in front of my face but I had been so distracted I forgot about it. I stretched my head forward and opened my mouth wide to cover as much of her pink slit as I could then started licking and sucking it. She flinched when I did it. \n\n\"Oh God Linda I was so intent on watching Mark slide his cock in your ass I wasn't thinking about you eating my pussy. Please don't stop. It feels terrific. Watching Mark and feeling what you're doing is going to make me cum again for sure. I've never been this turned on in my life.\" \n\nNow I didn't know which felt better, trying to get Ashley's entire cunt in my mouth or trying to take Mark's entire cock in my ass. I was so lost in sex now I couldn't think. I was so turned on I was trembling. I moved my hands to wrap around Ashley's ass so I could pull her tight against my mouth and she started moaning while my tongue flicked swiftly over every inch of her wet gash as her juices flowed steadily into my mouth. \n\nI guess I decided that Mark didn't need any more direction from me because he kept sliding more of his cock into me with each thrust. When I finally felt his balls mash against my pussy I just about went wild. My rectum began to throb and squeeze the fleshy intruder as if it was sucking it. It must have felt good to him too because he just held still and enjoyed it for a minute. \n\n\"Oh Linda he's in you all the way! God I've never seen anything so sexy and naughty. I'd ask you how it felt but I don't want you to take your mouth off my pussy. Ohhhhhh shit Linda you're driving my pussy crazy with what you're doing.\" \n\nMark pulled back until only the head of his cock remained inside me then pushed forward and buried it in me with one stroke and kept on doing it at a rapid pace. His cock was long enough that the head reached to a point that I could feel a slight discomfort when it was all the way in but it wasn't bad enough to overcome how good his balls felt slapping against the lips of my pussy. \n\nAfter about twenty of these strokes the discomfort disappeared and my rectum accommodated his length comfortably. Who am I kidding? It was more than comfortable it was crazy good! Twelve on a scale of one to ten. The more he fucked me the better it felt. I might never go back to vaginal fucking. Well maybe. But right now I was in sexual heaven at both ends. Each stroke of his cock in my slick ass pushed my face harder against Ashley's divine pussy and I sucked it like it was made of chocolate. \n\nI just lay there helpless under the influence of the sexual sensations filling my body from one end to the other. I abdicated all control of the situation to my body. I could be of no assistance regarding what was to be done. Hell I didn't even know what needed to be done other than I never wanted these two to stop fucking my mouth and my ass. I was possessed by sex. Not just engrossed with it but completely consumed by it. I never felt like this even on my honeymoon. This was beyond teenage sex; it was porno gangbang sex, sweaty writhing panting tachycardia sex. \n\nAnd best of all it was contagious. Mark was fucking me like a stallion on meth. Ashley was delirious with sexual energy as it built way beyond the red line on her orgasm meter. We were all headed for a high-speed train wreck whenever I finally succumbed to the inevitable and went over the cliff like Thelma and Louise. But until that happened I was riding this like a brahma bull at a rodeo. \n\nThat bitch Ashley set it off. She screamed so loud you could have heard her in San Juan and we were still two hours away. Her pussy practically drowned me in juice as she came so hard I thought she's was having a stroke. \n\n\"Ohhhhhhh Goddddddd Mark I'm cumming! Please... fill her ass with spunk and make her stop licking me before I pass out.\" \n\nMark was way beyond being ready to comply with that request. He rammed his cock into me as deep as it would go. I felt it swell and start to throb, then the first huge glob of cum spewed into me so deeply I thought it would reach my colon. My rectum felt it necessary to go into spasm and suck his cock like a sump pump to extract additional blasts of his hot cum into my ass until neither of us could move except to jerk involuntarily. \n\nWe all collapsed like the only survivors of a plane crash. It only took three deep breaths to realize that I never felt better in my life. These were such encompassing orgasms that we seemed to share them amongst the three of us. A small aftershock orgasm rippled through me as Mark withdrew his spent cock from my cum filled ass. Ashley was breathing hard and moaning like I was still sucking her twat. Mark couldn't even stand up. He leaned over and put his head on my ass. \n\n\"I dare you to start sucking my ass again.\" \n\n\"Linda you're insatiable. I couldn't even think about sex again until I have an IV and a defibrillator. But after I do, your ass is mine.\" \n\n\"Ashley how are you doing honey?\" \n\n\"I'll let you know in a few minutes but this is going in my diary as the best sexual experience of my life.\" \n\n\"Ahhh come on Ash, the day's not even half over yet. Wait until tonight when Bradley's back with us and we both have a cock in our asses.\" \n\n\"I can't even think about that without hyperventilating. Where did all this come from? I'm a sweet little housewife from a small town that's happily married with kids. All of a sudden I'm a porn star.\" \n\n\"You've always been a porn star my love. It just took going on this cruise and meeting Linda to make you realize it. It's the same with all of us, we've suppressed a lot of sexuality over the years raising kids and working our butts off and now we finally have a chance to let it out. This is our spring break. It's time we reclaimed our sexuality and wallowed in it. Welcome to the rest of your life.\" \n\n\"He's right Ashley. This repressed sexuality has been simmering under the surface like lava in a volcano. Coming on this cruise and meeting you and Mark was destined to be. Doing the Ecstasy trip was the catalyst that blew the lid off and now sex is running unrestrained though our bodies like our blood. The more sex I have the more I want and I'm not going to feel bad or ashamed about it. I'm going to celebrate it.\" \n\n\"Well we need to postpone the next celebration or we'll miss our appointment for our makeovers. Think about how ready we'll be to get fucked after we get transformed into beauty queens.\" \n\n\"Oh damn, you're right Ashley. Let's go get cleaned up and get out of here.\" \n\nWe hopped in the shower for a quick bath. After drying off and putting on shorts and t-shirts we headed for the salon to have our makeover. We spent the next two hours being pampered, wrapped, soaked, massaged and having our hair colored and styled. I had the best facial I've ever had, not that I've had that many but this was incredibly luxurious. Following the facial a makeup consultant gave me a whole new look along with an entire case full of cosmetics to keep me looking this way after the cruise was over. \n\nWhen I looked at the final product in a full-length mirror I was astonished. My old golden shoulder length hair was gone and in its place was a short new haircut in a beautiful shade of auburn. My face looked ten years younger, softer but sexier with more pronounced features and subtle color around my eyes and on my cheeks. I was more than satisfied; I was dazzled. \n\nWhen I saw Ashley I was even more amazed. She really did look like a beauty queen but not overdone by any means. All of her natural best features were highlighted and the few little flaws she had were completely eradicated. Her new hairstyle made her look so sexy I would have got an erection if I'd had a penis. I had to exercise extreme self-control to keep from tearing her clothes off and going down on her right there in the salon lobby. If we looked this good in old shorts and t-shirts I couldn't wait to get on shore and shop for something that would really turn us into a couple of wild cougars. \n\nWhen we got back to the room Mark and Bradley were waiting on us. Bradley's first words were, \"Now that's more like it Linda. You're half way to being a real hotty. As soon as we get you some new sexy outfits you'll be completely transformed. Mark's been telling me you already have the new attitude to go with it.\" \n\nMark was staring at Ashley like he didn't know who she was and finally said, \"Linda what did you do with Ashley and who's your new sexy friend?\" \n\n\"Doesn't she look fabulous Mark? I almost raped her in the elevator on the way back here. She's lucky it was only four decks down or I would have.\" \n\n\"Oh Ashley baby, you haven't looked this good since our wedding. Do we have time to go to our room before we go on shore?\" \n\nAshley and I both gave him an emphatic NO to that question. \n\n\"Come on before we all start taking our clothes off. Let's get some lunch and go shopping.\" \n\nAt lunch we discussed what we had been feeling this morning. I told Bradley that I kept thinking about things that had been bothering me for a long time but I had never realized they were bothering me. And as I thought about them I seemed to understand what it would take to finally confront them and dispel them. When I did this I felt a huge sense of relief about having finally resolved these issues and I felt more confident that they would not reoccur. \n\n\"Linda you're in the post-Ecstasy introspective phase. This will continue for quite some time, maybe even weeks. Your mind is now capable of making new connections in your brain because of the effect on your serotonin levels and you can think about things with a whole new perspective. This is what I like the most about Ecstasy. Its residual effects are real and lasting.\" \n\n\"I think it's doing the same thing to my feelings about sex too. I've dealt with more hidden inhibitions since I took it than I even knew I had. Stuff that's been repressed all my life that I've been able to completely reevaluate and it's freeing me and allowing my true feelings to emerge. I'm completely different now than when I answered your questions that first day and I love it. I feel more natural and at ease with my sexuality than I've ever felt before.\" \n\n\"Isn't that the real reason you suggested these cruises to Ed in the first place? Didn't something deep down inside you feel like this may be your last chance to discover your authentic self and embrace your true sexuality?\" \n\n\"Oh my God yes. Oh Bradley you're so right. Ed and I both needed to have this last chance to discover and redefine ourselves before we just grew old and died in the conventional little life we'd fallen asleep in. Oh I do hope he's doing just that. I have a feeling that Kealani will do that for him. I got the strongest impression that she was the perfect fulfillment of his fantasy and also that she was capable of doing so much more than being his sex toy. Oh you don't know how happy this makes me to understand this. Now I'm really looking forward to getting back home to see how this all turns out. How can I ever thank you Bradley for what you've done for me?\" \n\n\"We'll think of something when we get back to the room.\" \n\n\"You can bet your sweet ass on that Bradley. Better yet you can bet my sweet ass on it.\" \n\n\"What about you two, are you having any insightful revelations?\" \n\n\"I'll say. Mark and I have actualized some unspoken and unrealized fantasies that we both have kept hidden from each other and from ourselves. In addition we've dropped a lot of inhibitions and allowed each other to explore alternative expressions of sex that we always thought would be detrimental to our relationship but have proved to be just the opposite. I love Mark more for being understanding enough to let me go wild and not feel like I'm having a sexual mid-life crisis that will cause our marriage to fall apart. I feel freer than I've ever felt and more relaxed and at ease about sex. Our horizons have expanded and are much more inclusive now that we both see that our fundamental foundation of love is secure and not threatened in any way.\" \n\n\"This trip is turning out better than I could ever have hoped for. Linda has had a sexual awakening and you two, who I didn't even expect to encounter, have done the same. You've been a great help to Linda and she's been good for you. I was hoping we'd find some people on the ship to get involved with, at least in a casual way, but you two have been a real surprise. I can see your relationship is going to continue after the cruise and that may be the best thing for Linda and Ed. I think you all need this friendship and you seem very well suited to each other.\" \n\n\"I think it's time we went ashore and did some shopping.\" \n\nWe picked up some brochures as we were leaving the ship with ads for different places to shop and maps to direct us to them. They weren't that far away so we decided to walk. We found a store that had women's clothing but it wasn't quite what we were looking for. A clerk told us about another store that might have the things we were seeking so we headed out to find it. \n\nThe store was named Climax if that gives you any idea of the kind of clothing they sold. It wasn't overtly sexual, no leather, whips or chains, but it was provocative. It catered to a younger crowd but with my and Ashley's new look there were a lot of things we both loved and looked great wearing. \n\nI bought a dozen new outfits including a new long formal gown and a very sexy black cocktail dress that would do perfectly for the second formal night. I especially liked the three summer dresses I picked out. They were sheer, silky, sexy and very colorful with floral motifs and the hemlines were quite short. They were so transparent that they had a nude underskirt if you were modest but it was removable and I decided I would not be using them. I bought two beautiful white silk blouses that were semi-transparent and if you didn't wear a bra you better be prepared to be ogled. You could cool it down a bit with the lovely colorful silk scarf I got to go with them. \n\nAshley bought an equal number of outfits and looked hot in every one of them. Mark and Bradley were really enjoying our little fashion show as they got to see everything we tried on. We made it a point to twirl around quickly so the skirts of the short dresses would flair out to show we didn't have panties on. After about an hour and a half we had finished with this store and asked the clerk where we might find a store that sold sexy lingerie. She said there was a Victoria's Secret nearby but if we really wanted sexy we should go to Alanna's Boudoir. She then told us how to get there. ",
        "When we got to Alanna's it didn't disappoint. We found high quality lingerie that was definitely designed to arouse. That fact was obvious because two gorgeous, tall sales clerks were wearing it. What they wore would definitely look appropriate in a high-class bordello. Their ample breasts were on marvelous display behind very sheer lace brassieres and their long shapely legs were clad in black lacy stockings held up by tiny black garter belts. The thongs they wore over their bald pussies were barely more than wisps of diaphanous fabric that pretended to cover only their lips. The four-inch high heels made them even taller than they were naturally. Their makeup was straight out of a Las Vegas show. \n\nMark and Bradley sat on a comfortable sofa and told us to take our time and put on another show for them. Both clerks kept bringing us items to try on and model. The clerks were happy to be part of this display as they bent over to make little adjustments to what we were wearing. I was surprised there weren't more men in this store. I'd come here every day if I were a man who lived here. \n\nI bought enough stuff to completely replace every piece of underwear I owned and then some. I was throwing out everything I currently had and was going to wear sexy undies until I had to start wearing diapers. Half of it was purely for sexual titillation but half was at least somewhat practical, sexy and revealing but comfortable. \n\nAshley decided to do the same thing. We each bought two pairs of come-fuck-me high heels to wear with our new formal gowns as well as stockings and garter belts, assorted thongs, bras and another bathing suit that would probably get you arrested in most public places in the states. It was nothing more than a tiny triangle of soft stretchy Lycra to cover your labia and two thin strings that stretched up to tie around the neck with a third string that came up the back. Little patches of cloth to cover your areolas were optional. Ashley's was bright red and mine was electric blue. It should have had a label like cigarettes that said 'WARNING: Don't even think of wearing this if you have even a single pubic hair.' \n\nMark and Bradley had never had more fun shopping. They made no attempt to hide the obvious bulges in their pants. I couldn't blame them, those two sales girls made me horny too. \n\nWe decided to head back to the ship mainly because the four of us couldn't carry any more bags. We headed for the room to drop off our stuff and then decided to head for a pool reserved for passengers that occupied suites. It was an adult pool and that meant a very relaxed dress code. Perfect for wearing our new bathing suits. We weren't the least bit hesitant to wear them but we did put on a cover-up to get to the pool. \n\nWe decided to forgo the nipple patches however in favor of a little clasp that you could use to pull the two front strings together in the middle so your boobs would show on either side. Considering the thinness of the strings we were essentially topless; bottomless too for that matter given the miniscule size of the crotch piece. \n\nWhen we got to the pool there were about twenty other people sitting in lounge chairs around a pool. A bar where you could order drinks was on one end. We all ordered the drink of the day; something called a Miami Vice but asked the bartender to go light on the rum. These things could pack quite a wallop if made full strength. \n\nWe found four chairs next to each other and put our towels over them. When Ashley and I removed our cover-ups we became the center of attention. This delighted us no end since that was the intent to begin with. Considering that most of the other couples were young honeymooners whose female half was wearing something skimpy, this was a big boost to our egos. \n\nAs soon as we lay down on the chairs Mark and Bradley got busy slathering us with sunscreen. We had a lot of flesh to cover and it wasn't easy to do without making it look like an erotic massage. By the time we flipped over on our backs both Mark and Bradley had erections. Doing our front sides didn't help to ease that condition one bit. As soon as they finished, they both headed for the pool and jumped in hoping the cool water would ease the swelling in their cocks. \n\nI couldn't believe how relaxed I felt lying virtually naked on my back, glistening with sunscreen in front of a bunch of strangers. I asked Bradley to go get the camera and take some pictures of us or else Ed would never believe I did something like this. He came back with both the still and video cameras and made Ashley and me pose like models in a nudie magazine. He and Mark took lots of pictures. I was tempted to email a couple to Ed but decided that could wait until we got home. The ones he took from behind us on our hands and knees were obscene. I loved them. \n\nI turned my head to the side to look at Ashley. She looked gorgeous lying there in the sun. \"Ashley I want to tell you how much I enjoyed our little shopping trip today. I haven't done that with a girlfriend since I was a teenager. I hope you know how much it means to me to have a friend like you. I've never felt this close to another woman, maybe not even to my daughters.\" \n\nShe turned her head and smiled. \"I love you too Linda. You're the best friend I've ever had as well. I want us to be close for the rest of our lives. I can't wait to meet Ed. I think we'll all have a lot of wonderful times together. Oh shit Linda you look so fucking hot lying there I want to just come over there and crawl between your legs and suck your pussy 'til you scream.\" \n\n\"Do you want to go back to the room and do that?\" \n\n\"I've got a better idea. Bradley told you to work on your masturbation, although I wouldn't call jerking off work. I want you to get yourself off right here.\" \n\n\"You want me to lay here and masturbate for you in front of all these people?\" \n\n\"I'm sure they'd love to watch you but you don't have to put on a show for everybody, just me. Turn on your side facing me.\" \n\nAshley reached over and got another towel and put it over my hips and thighs. \n\n\"Now draw your knees up so it looks like you're taking a little nap.\" \n\nI pulled my knees up and Ashley put another towel under my head to use as a pillow. \n\n\"Now reach down under the towel and put your hand inside that little swatch of fabric and use your fingers to rub your pussy.\" \n\nWhen I did what she said I wasn't surprised to find my slit already getting wet. \n\n\"OK look over here at me.\" \n\nShe sat up on her chair and turned toward me with her legs facing my face. Then slowly spread them apart. All I could see was the tiny little patch of Lycra trying unsuccessfully to contain her pouting pussy lips. The contrast in color between her exposed pink outer lips and her creamy upper thighs made my mouth water. She reached for the bottle of sunscreen and made a show of rubbing some more of the oily liquid on her arms and shoulders. \n\n\"Go ahead Linda, start playing with yourself, and don't even think about faking this. I want you to cum for me while you look at my pussy.\" \n\nShe spread her legs a little wider and more of her glorious pussy slipped out of the little patch. I watched spellbound as the little patch, stretched to its limit, rolled into an even smaller string and disappeared between her labia. I couldn't even see it anymore. Her swollen clit was completely visible. My fingers began exploring my slit in earnest and my juices began to seep out of my vagina. \n\n\"Ohhhh my God Ashley this is so erotic. My cunt is starting to throb. Your bald twat looks so beautiful it's driving me wild.\" My body took control and directed my fingers to do what I didn't even know they could. I was turning myself on better than anybody else had ever done. I dipped my fingers into my slit and used my juices to massage my clit in a rhythm that I seemed to have been born knowing but had completely forgotten. My breathing changed, coming in deep fast inhalations. With each breath I felt lightheaded and all my concentration was fixed on my cunt. \n\nAshley heard me and slid her own hand down between her legs pretending she was rubbing sunscreen on them but was really using her fingers to slide up and down her plump outer lips and pinch them together to make her clit pooch out. \n\n\"Are you going to cum for me Linda? Or do I have to show you how to do it? Rub that pretty clit Linda. Look at mine while you do it and think about how good mine would taste if you had your lips around it. Come on baby, do it. Cum for me. Please cum for me.\" \n\nI was a lot closer than she knew. My orgasm was building and I felt it stalking me relentlessly, restless for release. All it took was one little drop of her delicious juice. It rolled to the edge of her labia and hung there taunting me then slid down her pink lip and continued to ooze onto her ass cheek. I watched, as it seemed to tremble then drip onto the chair. As soon as it landed my orgasm exploded and my vagina contracted like a vacuum cleaner had been stuck in it. I tried to contain it so everybody wouldn't know I was cumming like a freight train but the more I held it in the stronger it got. Ashley saw it happening. \n\n\"Oooooohhhhhh Yes Linda... cum baby. That's it cum all over your fingers for me. Imagine it's my face your cumming on. Oh God I wish I could taste you right now.\" \n\nShe wasn't helping. The more she talked the harder I came. I was biting my lip to keep from moaning because if I started I didn't think I could stop. \n\nShe reached over and put her hand on my forehead. \"That's my good girl. Didn't that feel fantastic?\" \n\n\"Jesus fucking Christ Ashley that was incredible. I've been a complete idiot for most of my adult life. Why have I believed that doing that was wrong? It was more than fantastic it was life changing.\" \n\n\"Well better late than never. I've been doing it regularly since I was nine. Once my sister showed me how, I was hooked. Mark loves to hear me jacking off in the car on a long trip when I get bored or in a theater when I don't like the movie. There are hundreds of opportunities for self-gratification. It really helps relieve the stress when you're taking off in a plane. Everybody else is playing with their stupid phones and I'm playing with my clit and a remote controlled vibrating egg in my cunt. If Mark's with me I let him do it to me.\" \n\n\"I'll have to remember to do it on the drive back to Augusta. Ed will really think I've gone crazy.\" \n\n\"You should offer to drive part way and make him do it for you. Or give him a hand job while he's driving. Sometimes when it's just not right to fuck, masturbation can be just as much fun. Now that you've done your exercise in personal sexual liberation how about we go back to the room and give each other a massage and we can do it to each other?\" \n\n\"Give me a second to be sure I've stopped cumming and you've got yourself a date. I could use a nice massage and another orgasm.\" \n\nWe told the guys what we were going to do and asked them if they'd like to join us. They thought it was a great idea. When we got back to the room we took off our suits and headed out to the veranda. We had about an hour before we needed to get dressed for dinner so that gave us plenty of time to play with each other. I gave Mark a massage while Ashley did Bradley. She was really good at doing this especially when she started on his cock. I copied her movements on Mark as she gave Bradley a superb hand job. She took him right to the edge but wouldn't let him cum. When he asked her why not she told him we were saving their cum for later to be put in our asses. He protested but she would not relent. We then shooed them back into the room to start getting dressed and proceeded to massage each other. \n\nWe lay side by side and took turns rubbing our backs, arms, legs and butts then got down to business. I lay on my back and spread my legs then pulled my knees up to give her complete access to my crotch. \n\n\"I'm going to give you the benefit of my experience as a lifetime chronic masturbation addict. This is what I do to myself when I have the time. Usually I take a nice hot bath first and rub myself with a fragrant moisturizer.\" \n\nShe lay on her side next to me and her hand began to rub my stomach. Her fingers put pressure above my ovaries and rubbed in circles. She moved her hand slowly down and massaged my mound. The way she rubbed it made me aware for the first time how pronounced my mound was. I had never really studied it before and now that the hair had been removed I saw how well defined it was and how it protruded. It wasn't obtrusive, just prominent. \n\nI liked it because it highlighted the various parts of my vulva. My outer lips curved provocatively to either side and formed a nice contrast to my thighs. My labia protruded between them and formed the perfect setting for my clit perched at the top of their junction. My clitoral hood decorated the top of my slit and its spongy texture provided a provocative covering for the large pink nub to reside in. \n\nI could tell she was thinking and feeling the same things as her fingers slid over my pussy and discovered it. Nobody had ever made my pussy feel so good. Then she moved her whole hand down to cover my slit from my clit to my asshole. \n\n\"Feel how warm my hand is on your sex Linda. Put your hand over mine and feel the heat with me. Leave it there and let me guide you. Her fingers started moving back and forth over my lips with her middle finger sliding between my labia. Her fingertip dipped into my vagina and wiggled inside it. She moved her hand away and said, \"Now you do it.\" \n\nI repeated her movements and it felt marvelous. It felt that way for two reasons. First the physical sensations of touching myself like this were quite stimulating but the second reason was the intimacy of what we were doing. This beautiful loving woman who had become my best friend in such a short time was sharing the most personal secret a woman has. She was showing me what somebody should have shown me forty years ago and doing it with love and with no expectation of anything in return for it. I was just overwhelmed by the tenderness and care she was giving me. \n\n\"Put your hand back on me Ashley. I want to feel your touch. This is the most loving thing I've ever done with anybody. I love you more than I can say for doing this with me.\" \n\n\"It's a great pleasure to do this with you Linda. I had no idea this could feel so intimate. I've done this with Mark many times but it's never been like this. This is something only two women can experience and I'm so glad it's you I'm doing it with. It's different with a man when you've got a dick sticking out to play with. That's all on the outside. But with a woman you're touching her inside. A pussy is just so much more familiar to you because you've got one of your own and you know instinctively what it feels like. It's easy to empathize and feel things simultaneously as you do them.\" \n\n\"I never thought about it that way. It's true though. It seems completely foreign to me now to think that I wouldn't want a woman to touch me like this. How did you know it would be this wonderful?\" \n\n\"I didn't until I met you. From the first night we were together I just knew that anything we did together would be right. It was so easy to trust you and be comfortable with you. I didn't have to think about it. When we kiss all I feel are soft sweet warm lips, it doesn't make any difference that they're a woman's lips. When I suck your breast it seems so natural; isn't this what breasts were made for? Does a breast care if a man or a woman is sucking it? When I touch your delicious pussy it feels like my own; why should it bother me that it's yours? Especially when your pussy longs for me to touch it and is so receptive to me.\" \n\n\"Oh Ashley keep touching me. Play with me and make me cum for you. Show me what to do so that when we are apart and I do these things to myself it will feel as if you're doing them to me and I can cum from just thinking of you. Oh I do long for your touch, my body aches for it. This is why I fall more in love with you every moment we're together. Oh Ashley, love me. Show me. Teach me.\" \n\nHer hand returned to my pussy and continued demonstrating her most intimate caresses and her most lustful, stimulating movements. My mind and my body were memorizing every action to be faithfully replayed whenever I felt like it. She moved my hand to repeat what she had shown me and I did it for her approval with no shame or embarrassment whatsoever. We had no secrets from each other now nor any reason to have one. Our love and our friendship had no room for such things. \n\nShe took my hand and moved it to my slit. \"Put your fingers in your pussy Linda.\" \n\nShe moved two of my fingers to my opening and pushed them inside me. \n\n\"Ohhhhhhhh... Ashley... Ashley... Ashley, look what you've done to me. My pussy is soaked with my juices. You're making me cum for you without even having an orgasm.\" \n\n\"Take your fingers out and rub your juices on your clit.\" \n\nMy wet fingers slid out and up to my engorged nub and rubbed the sticky fluid all over it. Her fingers followed after dipping them in my vagina. Electric shocks spread all through my lower body as she and I caressed the sensitive pink pearl and coated it with my cum. This was the most erotic thing I had ever done. \n\nI surrendered to her every desire for my pleasure and she continued to stroke me and rub me and penetrate my holes just as she would do to herself until we both felt my body assert its readiness for its climax. She brought me slowly, playfully and teasingly to the edge then took me over as my pussy throbbed and its juicy contents flooded her tender loving fingers. \n\nThe orgasm she gave me was unlike anything I'd ever experienced. It was powerful but not overpowering. More like a series of warm flushes that swept through me in waves. My pussy flexed, then contracted and released over and over again sending impulses of pure pleasure to my brain while my fluids gushed out of my hot hole. \n\nI wanted to show her with my whole body how wonderful she had made me feel. She got the message and just as the waves began to subside she took me in her arms and kissed me with so much passion and tenderness I thought I would start cumming again. Maybe I did, I don't know. I couldn't think; all I could do was feel more and more love for her until I just melted inside. \n\nShe finally let me go and I began to breathe again. My brain started functioning and I came back to reality. She looked at me and smiled then said, \"Do you think you could do that for me?\" \n\n\"Only several times a day for the rest of my life. I don't have to tell you what that felt like. Do you think Mark would let us stay together in your suite for the remainder of the trip so we could just fuck ourselves into a stupor?\" \n\n\"I'd be more than happy to ask him but don't you want to put on that sexy dress you bought today and go out and turn some heads? I promise you we're going to do a whole lot more of what we just did but we can't just abandon the guys.\" \n\n\"I guess you're right, it wouldn't be fair to them. And besides, I want Bradley's hard cock in my ass before I go to sleep tonight.\" \n\n\"Come on then, let's go start making ourselves beautiful.\" \n\nAfter an hour in the bathroom we had succeeded in transforming ourselves into hot, sexy cougars ready to go on the prowl. Ashley's makeover included having blonde highlights streaked through her brown hair and she looked fantastic. Her dress had straps over the shoulders so it could be cut low in the back to show off most of her back and still be low enough in the front to reveal most of her chest and enticingly display her ample breasts. The color was a dark blue, not midnight blue but dark and made of a material that seemed to have sparkles imbedded in it. ",
        "My gown was a smoky silver satin floor length dress that had a halter-top. The straps that met in the back of my neck were pleated as they ascended from the skirt and could be adjusted loosely to fully cover my breasts or pulled tight to expose the sides of my breasts on the inside as well as the outside. \n\nI opted to have them pulled as tight as they could be which meant that if you were looking at me straight on, my breasts seemed to be fully covered but from any angle you could definitely see half my breast and the curve where it lay against my chest. This was true of the inside as well as on the outside of my chest when I moved or raised my arms. The straps were far enough apart where they joined the skirt to reveal my entire chest and stomach to below my navel. My back was completely bare all the way down to an inch above my crack. \n\nAs if the dramatic plunging neckline wasn't enough to call attention to my chest, I also wore a stunning silver necklace that looked like a spider's web that hung down about six inches from my throat. It had tiny diamonds where the strands of the web came together. The skirt of the dress was also split in the front up to two inches above my knees to reveal a pair of thigh high silver sparkling stockings that did not need a garter belt. The only other thing I wore was a tiny hot pink thong designed to fail miserably at covering my pussy. Like I cared, I wore it more for decoration than coverage. \n\nOur makeup was close to what had been put on us in the salon with some modifications for nighttime. A richer color of eye shadow and a little darker lipstick helped make us look sexier than the daytime version. \n\nWhen Mark and Bradley saw us as we came out of the bathroom the expressions on their faces told us all we needed to know. They both complimented us profusely and I was sure they meant what they were saying. Bradley slipped his hand under one of the straps in the front of my gown to run the backs of his fingers over my nipple then whispered in my ear, \"What have you done with that little old schoolteacher I was supposed to have a date with tonight?\" \n\n\"I'm very sorry to inform you that she got left behind in San Juan. Will I do?\" \n\n\"You'll more than do. You look exquisite. I really love your new hair, it makes you look much younger and sexy as hell.\" \n\nI smiled and basked in the glow from his words, knowing they weren't just flattery. \n\nBefore dinner we had a cocktail party to attend. Past passengers and guests with suites were invited and we got to meet the captain and some of the ship's officers. We had our picture taken several times by the ship's photographer and we took quite a few with the camera we brought with us. The people who attended the party were the upper echelon of cruising. They were basically divided into two categories, seasoned cruisers who had been on multiple voyages and younger people who had money and were on honeymoon or anniversary trips. Average age for the first group was fifty-five, the second group was late thirties to fifty. There were some younger kids traveling with parents or grandparents. \n\nHaving just turned fifty, I fit in with this crowd age wise and if it weren't for Bradley I would have fit in with them fashion wise. The women all wore the kind of dress I brought with me from home and they looked like garden club members. Bradley's advice to me regarding my dress was perfect. Ashley and I got more looks and unspoken compliments from the men in attendance than anybody else at the party. \n\nI had never had that many men and women check out my tits in a public place before. It really solidified my newfound thinking that being young and sexy is as much a state of mind as it is anything else. I'd bet a lot of the couples were in the same place in their marriages as Ed and I were and needed to be with a fantasy lover on their next cruise instead of their spouses. I thought I might need to start a travel service for some of these couples. \n\nWhen the party ended we headed for the main dining room. We could have eaten in any of eight alternative restaurants but this cruise line was known for its great food and service so we decided to stick with the traditional place. It was a beautiful two-story room toward the back of the ship. We requested a round table that could accommodate six but it was ours alone. We asked for this table because it was in the middle of the upstairs room and all of the tables for four were on the outer edges of both the upstairs and downstairs salons. There were tables for two near a railing that encircled the area where we sat. \n\nWe kept dinner on the light side with salads and fish entrees accompanied by fresh steamed vegetables. We also passed on the heavy desserts opting instead for the lighter sorbets. After dinner we strolled around the ship to explore and located the place where the photographs were on display. We couldn't find ours so we asked the person at the counter where they were. We were informed that photographs of passengers in suites were not displayed on the racks but instead were kept on individual DVDs so all of our pictures would be available at the end of the cruise for us to take home. \n\nI guess this was to protect the privacy of these guests since they did get some famous people cruising from time to time. I'm sure Bradley and I weren't the first couple on this ship that was not husband and wife to each other. \n\nWe walked around some more and finally made our way forward and up to the top deck where there was a small walkway that wrapped around the top of the ship where you could stand and look forward at the ocean. I'm sure it was meant for couples that wanted to recreate the scene from the movie Titanic. The four of us had it all to ourselves. Bradley stood behind me and held me close. His hands slipped beneath the straps of my dress to cup my breasts. It felt really good to have his large warm hands feeling me up as he massaged them and lightly pinched my nipples. \n\n\"Linda move one of your hands down the front of your skirt and play with you clit.\" \n\nI slid my hand into the low cut waist of the skirt then slipped my fingers into the tiny thong to place the tip of my middle finger on my sensitive button. I could feel his stiffening cock against my ass as I began to rub my pink nub the way Ashley had shown me. I was completely at ease now with masturbating. My inhibition had dissolved and I felt excited by my ability to give myself pleasure. Bradley continued to fondle my tits and kiss my neck and the side of my face while I brought myself closer to cumming. He could tell I was close. \n\n\"That's a good girl. Cum for me Linda. Cum nice and hard for me. Don't worry; I've got you wrapped in my arms.\" \n\nHis reassuring words elevated my arousal until I wanted to cum for him as much as for myself. This was an aspect of masturbation I had never before considered. It was as much fun to do with somebody else as it was to do it alone. I was enthralled by my newfound expertise in playing with my pussy. I could feel it getting warmer and wetter as my fingers deftly manipulated my lips. Their smooth hairless contours felt super sexy to me as I ran my fingertips along them. I could feel my orgasm begin and a shiver of sexual anticipation flushed though my body. \n\n\"Oh, Oh, Oh, Bradley yesssss. Hold me while I cum. Share my orgasm with me. Feel me as it rushes through my body. Ohhhhhhh yesssss now Bradley. I'm cummmming.\" \n\nMy knees shook as my climax began in my pussy then spread all through me making me feel flushed and tingling. I was definitely getting better at cumming. I realized that I had to want it and participate in making it happen, not just expect my partner to do it for me. I owed Ed an apology. I put too much responsibility on him for making me cum; then I was disappointed if I didn't. This cruise was really opening my eyes to how much I had allowed my sexuality to stagnate. \n\nAshley and Mark had apparently been similarly engaged because I heard her whimper and moan and knew she had cum about the same time I did. \n\nWhen I had recovered enough to walk on a moving ship I suggested we all head back to our suite to continue our evening's activities unencumbered by clothing. A few minutes later we were in our room getting undressed. Ashley and I commandeered the bathroom to give each other an enema and took a quick shower so we could scrub off the makeup and wash our hair. I guess I was still feeling the after effect from the Ecstasy of wanting to be as clean as possible. It was a warm night so after our shower we went out on the veranda to let the wind blow our hair dry. It didn't take long with my new shorter haircut. \n\nChristine, our room steward, had figured out that Mark and Ashley were spending more time in our room than their own and she had pushed all the cushions from both suites on the veranda together to make a big bed of them. We covered them with the big towels we had for going to the pool. Ashley sat down cross-legged on the bed. \n\n\"Ashley, would you help me get ready for having my ass fucked?\" \n\n\"I'd be delighted. Then you can do the same for me. I've been looking forward to feeling Mark's hard cock in my ass all day since you mentioned it this morning. What do you want me to do?\" \n\n\"I'll lay down on my stomach and you use that bottle of lube to put three or four big globs in my ass so I'll be all ready for Bradley's cock once I get it really hard for him.\" \n\nI lay down and spread my legs. Ashley got on her knees between my legs and I soon felt the cool viscous liquid drip onto my asshole followed by her finger as she pushed the lube into me. She moved her finger around in me to begin to get my sphincter relaxed and repeated the action. After a couple of more applications of the lube she inserted an additional finger to stretch my anus. Both fingers slid in easily to their full length. She sawed them in and out moving them apart to stretch my anus open. Holding them like this she poured some more lube in the open hole so it would go directly into my rectum. \n\nI thought she would stop now that my ass was nice and full of the slippery lube but she kept on finger fucking me. When I began to moan I felt a third finger join the other two and stretch my anus wider. There was a momentary discomfort but it soon passed and turned to pleasure as she continued inserting and extracting her bundle of fingers into my hot ass. \n\n\"I want to prepare you as well as I can for that big brown pole of Bradley's so all you feel is pleasure when he puts it in you.\" \n\nShe extended her thumb down to begin rubbing my clit while her fingers continued sliding in and out of my ass. She was making me hot. I started undulating my hips up and down in sync with her actions. If she kept this up I was going to cum. She must have sensed this because that's when she stopped and pulled her fingers out of me. I let out a long sigh. \n\n\"My turn. You do the same thing to me so I'll be begging for Mark's cock in my ass.\" \n\nWe switched places and I sat on my haunches between her spread legs. \"Oh Ashley I really love doing these things with you. You're the sexiest person I've ever met and your ass is one of your best features.\" \n\n\"Wow Linda, nobody's ever told me that before, except Mark of course. Then again, I've never done these things with anybody but Mark, not since we've been married anyway. I hope you know I feel the same way about you and your ass.\" \n\n\"I do know that and I'm very happy about it. Push your hips up a little, I want to do something else before I start with the lube.\" \n\nShe raised her hips up and I moved my head forward. I used my hands to pull her ass cheeks apart then covered her puckered dark pink hole with my mouth and inserted my tongue. She breathed in sharply then moaned, \"Ooooohhhhh Linda yess baby suck my ass. God I love it when you do this to me.\" \n\nI had to tear myself away from licking her ass or I would have gone on for an hour. I picked up the lube and began giving her ass the same treatment she gave mine. She moved her hands back to replace mine on her ass cheeks so she could stretch them apart for me. All the time I was doing it she was moaning and cooing while she wriggled her hips in sexual delight. \n\nShe was really becoming agitated after I inserted my third finger into her ass. She was pleading with me to fuck her harder and faster as my three fingers slid all the way in and out of her distended anus. I heard her breathing change and knew she was getting close to having a climax so I pulled my fingers out and slapped her ass hard to calm her down. She squealed and said I could do that again. \n\n\"The first time was playful. The second time would be deliberate. I can't hurt you Ashley. I love you too much.\" \n\nI heard Mark's voice behind me, \"Did somebody mention they needed my hard cock?\" \n\n\"Your wife is in desperate need of having your hard cock in her ass. I've spent the last few minutes getting her all lubed up and ready for you. Turn around and let me do something about getting you ready.\" \n\nHe walked over to where I was kneeling on the cushions and I put my hands on his hips. I moved my mouth forward and licked the head of his soft cock. I continued to lick it until he began to twitch and I saw his shaft start to swell. I moved one of my hands down to cup his balls and started massaging them. When his cock was hard enough to extend away from his groin I engulfed the head and began to suck on it. As it continued to inflate I moved my lips further down the shaft to cover more of it. \n\nHe began to slowly push forward and pull back to fuck my mouth so I held still for him and let him do it. In a couple of minutes his cock was rock hard and pushing into my throat with each of his strokes. I gave his balls a gentle squeeze then pulled my mouth off his cock. \"Ashley raise those hips up and lower your head. Mark's cock is ready to fuck your gorgeous ass.\" \n\nAshley got in position and Mark got on his knees behind her. He moved forward until the tip of his cock was pressed against her well-lubricated anus. I put my hands on her ass cheeks and spread them wide apart. Mark pushed forward and the entire head of his cock slid easily into Ashley's eager asshole. She moaned and took a deep breath. \n\n\"Go on Mark, she's been waiting for this. Give her what she wants.\" \n\nHe pressed forward and slowly but firmly inserted the entire length of his cock into her hot ass until it was buried in her. She flinched as she felt her rectum stretch and adjust to the fleshy invader and let out another loud long moan. I removed my hands from her ass and put one under her to reach my fingers back to find her clit while I put the other hand between Mark's legs to cup his scrotum. I pushed his balls against her pussy. \n\n\"Feel those balls Ashley? They're mashed right up against your pretty bald twat. His cock's buried in your ass. Is that what you wanted my love? Tell me how it feels.\" \n\n\"Ohhh Goddd Linda it feels fantastic! I've never felt this full and aroused. Oh Mark, baby, fuck my ass. Slide it in and out of me until I cum like I've never cum before.\" \n\nI took my hands away from them and turned to Bradley. \"Come over here and lie on your back with your legs spread so Ashley can lick your balls.\" When he was in place I straddled his head facing his feet and bent over so my pussy was inches above his face and I could get my mouth on his cock. \"Ashley let's you and I see how hard we can get this cock.\" \n\nShe stretched her head forward to begin licking Bradley's balls while I wrapped my hand around his shaft and started gently squeezing it. His thick brown cock began to stir and come to life as our actions took effect. He was soon erect enough for me to engulf the head in my mouth. I loved the feel of his mushroom shaped head in my mouth. The pointed tip rose like an inverted cone over a flared rim that completely encircled the top of his shaft. Not only was it fun to lick but also pretty and a different color than the rest of his cock. I covered my teeth with my lips and gently chewed on it. \n\nAshley had one of his balls inside her mouth and was rolling it around with her tongue. I watched her as I looked down from where my mouth was tormenting his cockhead. His shaft steadily increased in size as it inflated and I pushed my mouth down to take more of it in. He was soon hard enough for me to begin bobbing my head up and down on it. My mouth was producing a lot of saliva and I relaxed my lips so it could slide out of my mouth and down the sides of his shaft. My hand smeared it up and down his entire length. \n\nIt took only a couple of minutes to get Bradley's long, thick cock to the upright and locked position and ready for take off. I pulled my mouth off and rose up then moved forward until my legs straddled his hips with his cock between my thighs. It was so long it actually touched my pussy with me standing on my spread knees with my back straight. \n\nAshley looked at the awesome brown cock stretching from its base all the way to my pussy and put her hand at the bottom then moved it up twice to reach the top. \"Linda my four fingers are three inches. Bradley's cock is three of my finger widths. You're about to take nine inches of fat cock up your butt. Are you sure about this?\" \n\n\"Oh yes, I'm very sure. Wrap your hand around his cock and hold it for me. She could barely get her hand all the way around it about half way up the shaft. I put my hand around the top half and slid it along my slit until the tip was poised against my asshole. I squeezed him and pushed down with my hips. The tapered tip penetrated the puckered hole and I pushed some more until about two inches were in me. \"Keep your hand there Ashley so I can tell when I'm half way.\" \n\nI pushed some more and felt the thicker part of his shaft stretch my anus as another inch or so entered my ass. It still felt good and I adjusted to the increased circumference without any discomfort. Mark was sliding his cock in and out of Ashley so slowly that it seemed like he had forgotten what he was doing as he stared spellbound at Bradley's big pole gradually disappearing into my tight ass. Ashley was watching just as intently. As soon as my rectum had adjusted I pushed down some more. The lube eased the insertion and since his cock was the same thickness from here on down I continued pushing down to take more in. \n\nWhen I felt my pussy touch Ashley's hand I told her to take it away. She moved it back to his balls to fondle them while she watched me sink lower on his hard cock as I kept on pushing my tight ass down his shaft. I reached down to see how much of him was left and discovered I had all but about two inches in me. I could feel a little pressure at this point high up in my rectum. I paused and it slowly faded away. I resumed pushing down and didn't stop until I felt my ass cheeks touch his pubes. \n\n\"Oh my God Linda you've done it baby. You have his entire cock in your sweet little ass. How does it feel?\" \n\n\"I feel like I've been constipated for three days. My rectum is pulsing around it as if it wants to expel it but at the same time it feels unbelievably sexual. My pussy is leaking juice and I know when I cum it's going to be incredible.\" \n\nI held still for a couple of minutes and moved my hand to my pussy. I wet my fingers with my juice and smeared it on my clit and rubbed the little nub. It felt extra sensitive due to the presence of the cock in my ass and I was soon getting very aroused. I pushed my hips up and felt the hard shaft sliding out of me. I stopped about half way and pushed back down to recapture it. I felt Bradley's hands on my hips as he helped me move up and down. We soon got a good steady rhythm going as I really got into fucking his cock with my ass. I couldn't believe how powerful I felt and how sexually capable I had become in order to do this to him. ",
        "It felt good to be in control rather than lying on my back while he did it to me. I became aware of my breasts bouncing up and down on my chest as I continued to fuck him. Together we lengthened the strokes to where all but the head was out of me on the upstroke so I could slam down and take his whole length back into me on the down stroke. It was at this point that I felt the beginnings of my orgasm. I rubbed my clit faster and felt my climax moving toward me like I was standing in front of a train. \n\nAbout halfway in the middle of an upstroke it started. I gasped loudly and drew in a deep breath as my head tilted back and my hand gripped my entire pussy tightly. I don't think I could have completed the whole stroke myself but Bradley held me at the top until the last second then slammed me back down as he pushed his hips up hard to get every bit of his massive cock in me. \n\nMy orgasm was so intense I couldn't speak; I just kept gasping and breathing hard and deep while my rectum went in to convulsions around his hard hot cock and my vagina began to do the same thing. Just when I thought I might actually live through this I felt his cock erupt in me like a scalding geyser filling my ass with cum. It felt like my orgasm shifted gears and now I didn't even know if I could keep breathing. \n\nI don't know how long I would have stayed in orgasmic overload if it hadn't been for Ashley almost screaming, \"Ohhhh Godddd Mark yesssss. Fill my ass with your hot cum. Ohhhhhh, Ohhhhhh, Ohhhhhh. \n\nI managed to open my eyes to see the contorted look of orgasm on her face as Mark's cock did what she asked him to. The sight of them almost made me start up again so I closed my eyes and tried to ride out the powerful climax. Bradley pulled me back to lay me on top of him then rolled us over on our side and slowly eased his deflating cock out of my ass. We lay there for a few minutes until I knew I had to get up and go to the bathroom. While I was still sitting on the toilet Ashley joined me. \n\nShe stood beside me while cum continued to drain from my gaping asshole. \"I can't believe I enjoyed that as much as I did. What's happening to us Linda? I've become a raging sexaholic. Watching you made it even better. God that was exciting to see you bouncing up and down on that big brown cock. You know I'm going to want to do that too.\" \n\n\"Help yourself. I can highly recommend it.\" \n\nWe finished cleaning up and they left to go to bed in their suite. We exchanged key cards since we each had two so we could all come and go to either suite as we pleased. Bradley took his turn in the bathroom then joined me in bed. I snuggled up next to him. He turned over on his side to face me. \"Thank you for another great day. I'm really glad I picked you for this cruise. You've been just perfect.\" \n\n\"It's been my pleasure Linda. Sometimes all you need is a different perspective on things to get you back on track and I've enjoyed helping you do that. You're a fabulous woman Linda and I really admire you. Ed's a very lucky man.\""
    ],
    "authorname": "mountaincat4",
    "tags": [
        "mature",
        "oral sex",
        "interracial",
        "lesbian",
        "group sex",
        "masturbation"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/fantasy-sex-cruise-10"
}