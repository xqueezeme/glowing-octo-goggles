{
    "title": "Santa Mike",
    "pages": [
        "\"So, let me see if I'm understanding you. I'm willing to buy $5,000 worth of Thin Mints, but you won't give the credit to Leia? You know these cookies are going to kids seeing Santa, right? Effing Santa! They show up, they see Santa, they get a box of cookies and some other shit. You got something against free publicity? What the fuck, lady? What's Leia gonna win? Some $30 tchotchke? Just go buy it for her and tell her she won.\"\n\nShe was a low-talker and I had to hold the phone tight to my ear.\n\n\"Sir, I'd appreciate it if you would curtail the expletives, and although we appreciate your support of Scouting, the cookie drive is held once per year.\"\n\n\"Lady, don't treat me like I'm an idiot. I know the cookie drive is once per year. I bought a shit-ton last year. The reason I'm talking to you right now is that it's only once per year. If it wasn't, I would've just ordered the cookies from Leia, right? Look, what are they, like $3.00 a box? I'll go up to 2000 boxes. Six grand. Figure this shit out and call me back.\"\n\nI hung up and stared at the ceiling as I counted down from ten. People sucked. When I hit one on my countdown I leaned forward and pushed the waist on the hula girl figurine. She swung her hips, the grass skirt swayed, and I resolved again to get my ass to Hawaii and retire.\n\nHow the fuck did I get suckered into being Santa? I've stared down promoters for the world's largest venues, mayors of major cities, billionaire executives, and do-nothing lawyers. I've shut down events; I've pulled a gun on fucks that were strong-arming my people; I've spent my own money to buy artists out of ridiculous contracts, and I've sponsored men and women that I've had to pull from the gutter and get back into a program.\n\nOne gap-toothed little girl with a thing for hugging and I'm done for. She looks tearful 'cause some rat-fuck backs out and like a schmuck I'm agreeing to be Santa Fucking Claus.\n\nTo be honest, I don't give a crap about a lot. That's not a positive. I sort of float through life, filling it up with this and that. It's the way I've been since I lost my family. Anchoring me and keeping me grounded are Alex, helping people I sponsor, my estranged daughter, and Leia, the little girl who I can't say no to.\n\n*****\n\n\"Hello, this is Ethan.\"\n\n\"Hey, this is Mike from the studio. You do, like carpentry and stuff, right?\"\n\n\"Um, yup. I'm fine, thanks. How about you?\"\n\n\"Not good, Ethan. I got suckered into some shit and I need a hand, but sure, let's be all polite and shit. How are you, Ethan? Nice day, Ethan? What lovely weather we're having, Mr. Poplin. Good enough?\"\n\nHe laughed before continuing. \"Yeah, good enough. What do you need done?\"\n\n\"I need one of those... I don't know. What does Santa sit in? A throne or something? Whatever that is, I need one.\"\n\nHe sounded confused. \"A what now?\"\n\n\"You know, you always see him in some big comfy red chair, right? I need one of those.\"\n\n\"That's... Huh. Okay. When do you need it by?\"\n\n\"For the concert. Leia had some guy playing Santa for the kids and he flaked. I got roped into it and it has to look good. Can you put something together?\"\n\n\"Who's Leia again?\"\n\n\"She's... Look, it doesn't matter. She was setting up something nice for the foster kids and it fell through. I was convinced to step in, and I don't want to fuck it up. Can you help out? It's a paying gig.\"\n\n\"Don't worry about the money, Mike. You know I teach carpentry, right? It's for charity, so I'll make it a class project. I'll make sure it turns out looking good. You only need it for a day, right? It just needs to look good? What else do you have?\"\n\n\"I guess I'm gonna buy a suit. That and the chair, right? Do I need anything else?\"\n\n\"Well... Yeah. You want to be a good Santa, right? Maybe a small riser, so the kids in the back can see you? Some helpers? A backdrop of some sort with North Pole type images? Have you considered renting a reindeer? The guy you're replacing, did he have stuff set up?\"\n\n\"He was an idiot. He's not even answering calls, so if he did, we don't know about it. I'm so fucked.\"\n\nHe laughed. \"It's not that bad. We can get the labor for free if you cover materials. My wife does interior design, and she'd love to get in on something like this. We'll make it look good.\"\n\n\"I didn't think of any of this. Listen, you think you can stop by sometime this week and we can figure this shit out?\"\n\n\"Sure. Shannon's with her mom Wednesday. Does that work? Around four?\"\n\n\"That'd be great. And none of this free labor crap. If you're working you deserve to get paid.\"\n\n\"We'll figure that out later. Maybe we'll swap for some studio time.\"\n\n\"Sounds good.\"\n\nReindeer? Where the fuck was I going to get a reindeer?\n\n*****\n\nIt had been three days since my initial phone calls and four days since I looked Leia in the face and said 'absolutely not' only to have it become mangled in my throat and turn into 'of course.' I was nervous as hell. This was so small that it was laughable, but I was never the frontman. Ever. I was always the guy behind the scenes making sure that shit went straight.\n\nNow I had to be Santa. When I tried to recruit my partner Alex to take over, he just laughed and walked out of the room. I could hear his guffaw all the way to his office. I was screwed.\n\nProduce the Grammys, Mike? Sure. Organize the biggest benefit concert since LiveAid, Mike? Sure. Get me out of my contract with Death Row Records, Mike? Sure. Be Santa for a bunch of kids? Fuck no. Even if the kids are in need? Maybe pay for Santa, but be Santa? Still fuck no, unless you happen to be eight-years-old and have a missing tooth or two and huge eyes and think that I can lasso the moon.\n\nIn that case, it was \"of course.\"\n\nSo, I became Santa's Helper, because I was informed by Leia in a very serious voice that Santa wasn't real, but sometimes people pretended to be him to make kids happy. I wasn't allowed to tell her friend Baylee because she still believed in Santa, and I couldn't tell her mom because her mom said that kids who believed in Santa got presents.\n\nAdmit there's no Santa and lose presents? Leia was nobody's fool. So, I was her confidant. I had to rein her ideas in a bit but we'd make it happen. Some of her over-the-top plans would have to be gently put aside, but I wasn't going to let this be some second-rate shitshow.\n\nAs silly as this Santa thing was, it had become important. I'd been too detached lately. I needed something where I had to be all-in. I clocked my hours and put in my time, but it was like I was building sandcastles on the beach. There was nothing strong and permanent in my life and everything I did was a distraction from that.\n\n*****\n\n\"Knock-knock! You about ready?\"\n\n\"Yeah, give me five.\"\n\nAlex was out of town with Em, Leia's mom, so I was having the weekly projections meeting with Lini alone. Lini was our office manager and knew more about the day-to-day stuff than we did. We usually just rubber-stamped whatever she told us. She'd pretend to ask if we were on board with everything, and we'd pretend to think about it before okaying whatever she was doing.\n\nI grabbed my printout, clipboard, and pen and made my way to her office. She had a cold birch beer waiting for me. We bought them in bulk and they were shipped in from Pennsylvania. Drugs had been in my rearview mirror for the better part of forty years, smoking for ten, and alcohol was a rarity, but if you try to take my birch beer you're losing the hand that touched it.\n\nPopping the tab, I raised the can in her direction, took a slug, and put it on her desk.\n\n\"Please use the paper, Michael.\"\n\nI put the can on the piece of paper.\n\n\"So, where we at?\"\n\n\"Pretty much where we expected. We had two cancellations for middays but picked up three nighttimes. That will offset. I'd like to hire additional security for the parking lot when we have more than three studios booked after midnight. They are usually fine, but things tend to get... rowdy. Would that be alright?\"\n\nI pretended to think about it. \"Yeah, sure.\"\n\nWe spent the better part of an hour going over things before we wrapped shit up.\n\n\"Okay, good meeting! Anything else?\"\n\n\"Yes, your accountant brought on a partner. She'll be taking over our business. A Miss Alana.\" She rifled through some papers. \"She'll be here Thursday morning.\"\n\n\"What the fuck, Lini. Seriously?\"\n\nShe lowered her glasses to the end of her nose and looked at me. \"Yes, seriously. Mr. Acton, this office is my little refuge. You understand that and I appreciate your indulging me. It's where I go when the drunken lead singer soils himself or the women rip off their tops or some diva is making ridiculous demands. I don't ask anyone to behave any differently out there, but please leave that sort of language at the door when coming to my office.\"\n\nI sighed. She was right. We hired her from a choir group for fuck's sake. Lini was remarkably patient with us and it wasn't much to ask.\n\n\"Yup, got it. I'll pull it back.\"\n\nShe smiled. \"Thank you.\"\n\n\"So, tell me about this woman. You vet her?\"\n\n\"Vet her? No. You've worked with your accountant for more than twenty years.\"\n\n\"Yeah, but that's just it. She's not him.\"\n\n\"Okay, but I'm sure if he brought her in he must trust her.\"\n\n\"Look, I'm sure she's fine, but check into her background. I've dealt with too many accountants and too many lawyers who felt entitled to clients' money. Not kidding. I've had to... Well, some of the rumors about me are true. My rule of thumb? People suck. Be loyal to people who've proven themselves, keep an eye on everyone else. Look into her.\"\n\n\"Michael, I'm sure...\"\n\n\"Lini, I've seen shi... stuff that you haven't. Trust me on this. The music business is full of not-nice people. You've seen that here. It's worse at the labels. Just check her out.\"\n\n\"Okay.\"\n\n\"Thanks. So, we're good?\"\n\n\"Until next week's meeting. Will Alex be back?\"\n\n\"I think so.\"\n\nI was back in my office answering emails when an employee knocked on my door. He also happened to be Leia's uncle.\n\n\"Hey, boss. Got a visitor.\"\n\nLeia came running in, hands full. \"Mr. Mike! Wanna trade?\"\n\nShe had one of my birch beers and a box of Thin Mints. I spit in my palm and she put down the cookies and soda and did the same. I put on my most serious face and we shook hands.\n\n\"Deal.\" I took the cookies, she took the soda.\n\nJimmy shook his head. \"Don't ever, and I mean ever, let Em see that. Back in fifteen?\"\n\nSmiling, I nodded at him, took his note about Leia's mom to heart, and turned my attention back to my erstwhile partner.\n\n\"So, explain this to me again. How is an eight-year-old working on a Santa for other kids? And where do you keep getting the Thin Mints from?\"\n\n\"We bought a bunch and put them in the freezer. Mom told me about the Santas with the bells last year and how they help get money for kids and stuff. Oh! And she told me about the soldiers that get toys for kids that don't have toys.\"\n\n\"Marines? Toys for Tots?\"\n\nShe shrugged and continued. \"When Alex told us about the concert I asked Mom if we could do something like that. For the kids who don't get presents. We don't have any soldiers, but Mom said we might be able to get a Santa. We called that man, and me and Mom talked to him, and then he was supposed to call back with the... The thing that you sign.\"\n\n\"Contract?\"\n\nShe shrugged again. \"And then Mom called a bunch of times and he didn't call back. So Alex said you could be Santa.\"\n\n\"Son of a...\" I paused and forced a smile on my face. \"He did? Okay. I'll have to thank him. So then you came to me?\"\n\n\"Yup!\"\n\n\"Okay, kiddo, you and me. We got this. So what are you thinking?\"\n\n\"Lots! How about you come in a helicopter that we paint red to look like a sleigh?\"\n\n\"Um, that might be a bit much. What else?\"\n\n\"Maybe those snow machines and we make a bunch of snow and have snowball fights and stuff?\"\n\n\"Yeah, that might be a bit much too, but it's closer. I'll look into it. What else?\"\n\n\"Maybe we can get Alex to be in an elf costume? He's pretty big, but so was Buddy in the movie.\"\n\nLeaning back in the chair, my grin grew larger. \"Yeeesss. That works. Alex in an elf costume. He will love that. Great idea, Leia.\"\n\nWe brainstormed until her uncle came back to scoop her up.\n\n\"You watching her while Em and Alex are gone?\"\n\n\"Little bit. Mostly Baylee's mom. You met her?\" His eyes sort of lit up.\n\n\"Yeah, more Baylee though. That kid never stops singing and it's always Taylor Swift.\"\n\n\"Tell me about it. You don't have to play every song that woman's written. Two eight-year-olds can be more demanding than you'd think. I'm taking Leia for supper. You wanna come?\"\n\n\"Nah, got some stuff to do. You coming back tonight?\"\n\n\"Yeah. I'm studio bitch tonight. Sitting in with one group and watching the place till midnight.\"\n\n\"Okay, catch you later. See you, Leia.\"\n\n\"Bye, Mr. Mike. Uncle Jimmy, you said the B-word.\"\n\n\"Um, yeah. Don't tell your mom.\"\n\n*****\n\n\"Knock-knock. Michael, my nephew is going to be here working this weekend. I'll keep an eye on him.\"\n\nLini was leaning into my office. She had a weird habit of saying \"knock-knock\" instead of knocking.\n\n\"Yeah? How much are we paying him?\" I don't know why I asked. Paying some teenager wasn't something I cared about, and Lini had never taken advantage.\n\n\"Nothing. He's being punished. He and some friends broke three windows playing stickball and tried to deny they did it. They were playing in the street at one of the kids' houses and it seems like every neighbor has a doorbell cam.\"\n\nI laughed. \"Sorta hard to deny that shit.\"\n\nShe grimaced. \"Yes. I'll be giving the money he would have made to the homeowners.\"\n\n\"Okay, so we're paying you instead of cutting him the check?\"\n\n\"No, I have it covered.\"\n\n\"Bullshit. If he's here working, we'll cover it. Whatta kids make these days? Twenty an hour? Just take it out of petty cash.\"\n\n\"No, it's fine. This is an aunt thing. I'll...\"\n\nI interrupted her. \"Lini, I don't play the boss card often. Take the money out of petty cash. I'm not asking. Anybody that works deserves to get paid. If he has obligations and it has to go to the windows he busted, that's between you guys, but if someone works for the studio, the studio pays them.\"\n\nShe paused before replying. \"Okay. Thank you, Michael.\"\n\n*****\n\nI'd received a call from someone I sponsored the previous night. I found us a meeting and then we went to Pass Key for dinner and then to Dunkin' Donuts because it was open 24 hours and, hey, donuts. Being up until three, I stumbled into the studio after 10:00.\n\nLini's office is behind reception near the entrance. I had to walk past and she called out.\n\n\"Michael, do you have--\"\n\n\"Not now.\"\n\n\"Um, Michael?\"\n\n\"Not now. Need water and ibuprofen.\"\n\nBlessedly, that ended the conversation. I wasn't used to late nights and endless cups of coffee anymore. I was getting old. Twenty years ago I could have drunk all night and still showed up ready to kick ass. Now coffee was putting me in my place. Aging sucked.\n\nAfter closing all the blinds, grabbing water from my mini-fridge, and 800 mg of Advil, I turned off the lights, sat down, and closed my eyes for a few minutes. Okay, maybe it was half an hour. Ninety minutes at most.\n\nI jumped at the ringing of the phone. Licking my teeth and hating the gummy, tacky feel, I coughed and picked it up.\n\n\"Yeah?\"\n\n\"Michael, I need to see you.\"\n\n\"Okay. Give me five, Lini. I'll come to your office.\"\n\nPopping three Tic Tacs, I chewed them up, drank another water, and grabbed two more of the little mints. I hit the head and splashed some water on my face on my way to her. Stopping in her doorway, I was taken aback by the woman sitting with her.\n\nShe was beautiful. A brunette, she was probably five or ten years younger than me and was dressed professionally.\n\n\"Michael, this is Ms. Alana. She's going to be here today and tomorrow going over the books. We thought it would be a good idea to meet one of the principals.\"\n\n\"Um, yeah. Sure. Nice to meet you.\"\n\nShe smiled and I felt that smile in my gut. \"And you, Mr. Acton. I know that you've had a long and strong relationship with my partner. If you have any questions at all, I'm happy to address them.\"\n\n\"Mike.\"\n\n\"I'm sorry?\"\n\n\"I'm Mike. Big Mike to some people. Not you. I mean, other types of people. That doesn't make sense, does it? Like, not your type of people. Musicians, roadies, um, yeah.\"\n\nI was fucking rambling like I was fifteen. Her smile seemed bemused now.\n\n\"Okay, Mike it is. Lini has graciously offered to share her office for the next two days. Anything I can do, you'll likely find me here. Otherwise, my number is on my card.\"\n\nShe stepped forward and handed me her business card. Haliaka Alana. I put her card in my shirt pocket.\n\n\"Great. My office is down the hall on the left. Alex's is two doors past that on the right. He should be back tomorrow, I think. Um, welcome aboard.\"\n\nShe smiled again and once more I felt it down to my toes.\n\n\"Thank you.\"\n\nI had to get out of there. \"Okay, I'll leave you to it.\"\n\nA couple of hours went by when Lini pushed open my partially opened door.\n\n\"Knock-knock! Need some signatures.\"\n\nI scanned what she was having me sign. There wasn't much to be concerned with. We weren't at a crossroads and I didn't want to play guitar, so I doubted she was Old Scratch in disguise. As with her asking our opinions or for permission for something, my looking over the paperwork was more for appearance's sake than anything else.\n\n\"Thanks, boss.\"\n\nLini was at the doorway when she stopped and looked back. \"She's pretty. And single.\"\n\n\"Yeah? Who is that?\"\n\nShe smirked. \"You're a lot of things, Michael. Subtle isn't one of them. I'm grateful you didn't drool on my office rug.\"\n\nI smiled and leaned back in my chair. \"Get outta here, I got work to do.\"\n\n\"Sure. She'll be here late, by the way.\"\n\n\"None of my business.\"\n\n\"Okay.\"\n\nShe walked off and I picked up the phone.\n\n\"Hello, Koji Fusion? Yeah, I need some catering for tonight. This is Mike Acton, you have me on file. Enough for fifteen. Maybe 6:30? Make it enough for twenty. And include drinks.\"\n\nThe guy on the other end of the phone replied. \"We usually require 48 hours, but we can slip this in. What did you want?\"\n\n\"Um, I don't know. Look up our order history. Base it off that. Whatever is fine, it just has to be good, you know?\"\n\n\"VIPs?\"\n\n\"Yeah. One in particular.\"\n\n\"Not a problem, Mr. Acton. See you at 6:30.\"\n\nEthan Poplin stopped in at 4:00. He had a laptop that had some design ideas.\n\n\"Damn, Ethan. I knew you were good with making instruments and shit, but what you got here and making the graphics for the chair and backdrops and everything? Pretty cool.\"\n\nHe shrugged and looked a little embarrassed. \"That's my wife. She has all these design CAD programs down.\"\n\nI nodded like I knew what he was talking about. \"Right. Well, this all looks great. Is it doable?\"\n\n\"Yeah. Very. We sort of went baseline to keep expenses to a minimum. Your biggest cost is going to be backdrops. We'll use the pop-up stands we use for the Poplin Family Jug Band, but you'll still have to pay for the new screens with the North Pole imagery. Other than that, the raw materials aren't bad and my wife wants to be a part of this, so her designs are on the house.\"\n\n\"Huh. Okay. What if we don't go baseline? What are we talking about with expenses right now?\"\n\n\"Maybe two grand? I can spec it out over the weekend.\"\n\n\"What could we do if we spent five or six K?\"\n\n\"Seriously?\"\n\n\"Yeah, it's for freaking orphans and foster kids and shit. I'm gonna cut corners? Not a chance.\"\n\n\"Well, we can certainly make it look a lot more professional. It's still going to be kids doing a lot of the work if I have the students working on it as a class project, but I'll make sure everything is done right.\"",
        "\"Yeah, okay. If we need to go higher, we can. I'll have Alex split the cost. Turns out he volunteered me for this shit.\"\n\nWe bounced ideas around until around six.\n\n\"I got food coming in about half an hour. Hungry?\"\n\n\"Starving, but I gotta get home. Two boys under six that I swear exist on sugar highs and Shannon will be home about now.\"\n\n\"Yeah, I'm keeping ya. Sorry. Get back to me when you can, okay? And let's figure out what we can do for the kids in your class. Maybe pizza and soda or something?\"\n\n\"We'll figure it out. I'm excited, Mike. We'll make this work.\"\n\n\"Thanks, Ethan.\"\n\nWe have a large rec room where the musicians can eat and relax and where the staff has their breaks. When the food arrived I had it set up in there. Going to the employee bathroom, I brushed my hair and noticed I had a stain on my shirt. Heading back to my office, I changed out of my red and white Hawaiian shirt into a blue and white Hawaiian shirt. My shorts seemed fine, so I gobbled a few more Tic Tacs and went over to Lini's office.\n\nHaliaka's back was to me as she studied some folders on the small desk Lini had found for her.\n\n\"Hey, Ms. Alana, everything good?\"\n\nShe seemed slightly startled and turned to me. \"Yes, sorry. I didn't hear you. Everything is fine.\" She checked her watch. \"Am I keeping you? I should be done in another hour or so.\"\n\n\"Nah, you're good. We're almost 24 hours here. We have studios rented tonight until 4:00.\"\n\nShe smiled and whatever part of me that controlled speech and thinking just stopped dead in its tracks. I swallowed and waited for my brain to kick back into gear.\n\nShe continued. \"Good to know. Did you have any questions?\"\n\n\"No, no, we, uh, well, we bring in food for folks who are here at night. Koji Fusion. It's set up in the rec room. You have a few minutes?\"\n\n\"Oh. That's very kind, but I'm going to keep my nose to the grindstone and get as much done as possible.\"\n\n\"You sure? Everyone needs a break sometimes.\"\n\n\"Quite sure. Thank you.\"\n\n\"Okay. Rec room is just past my office on the left if you change your mind.\"\n\nShe nodded and gave me another small smile. I grabbed some food and took it back to my office. I finished two salmon radish tacos before going back. Filling up two plates and grabbing a ginger ale, I headed to Lini's office.\n\n\"Hey, cool if I join you? I figured you could keep working if I brought the food to you.\"\n\nShe looked from the food to me and back to the food.\n\n\"Thank you, Mike. I'm going to have to decline.\"\n\n\"I thought we could talk about, you know, whatever, while you eat. Five minutes won't hurt anything.\"\n\nShe blinked slowly and seemed to take a second. Her voice sounded clipped.\n\n\"Mr. Acton, I'm trying to be as polite and professional as possible. I'm here to do a very specific job and to do it well. That's it. I'm not interested in anything other than doing my job. Again, I'm going to have to decline. Please respect my decision.\"\n\nRaising my eyebrows, I stared at her for a second. Fuck, it was just some dinner.\n\n\"You got it, lady. I'll be in my office until around 8:00 if you need anything.\"\n\nI took the food back and left it in the rec room.\n\n*****\n\nWe don't keep banker's hours, that's for damn sure. Well, maybe Lini does. Alex and I try to stagger our schedules so that we know what's going on throughout the day. The studio opens at 8:00 a.m. and our last sessions often see people stumbling out of the building to be greeted by the dawn.\n\nI arrived at noon and was having an egg-white omelet with turkey bacon when there was a knock on my office door.\n\n\"It's open!\"\n\nHaliaka opened the door and stood there with a stiff smile and a folder.\n\n\"C'mon in. What can I do for you?\"\n\nShe walked in and stood in front of my desk. \"Did you run a concert last year? A charitable event?\"\n\n\"Yup. Why?\"\n\n\"Depending on how involved the studio was, you may have had some serious deductibles. If the involvement was minimal, you may have personal deductions. I have some preliminary information you should probably take a look at.\"\n\nShe dropped the folder on my desk next to the hula girl figurine. Jostled, it began to sway its hips, little grass skirt shifting. Haliaka looked at the figure, to me, and back to the figure. It hit me how this Pacific Island woman, possibly Hawaiian, might take this. It wasn't good.\n\nI cleared my throat. \"It's not--\"\n\nThere was some serious indignation in her eyes as she cut me off. \"It doesn't matter what it is or isn't.\" She nodded at the folder. \"You have the information.\"\n\nShe turned and left my office, closing the door behind her.\n\nYeah, not good at all.\n\nWe had CCTV coverage of each of the studios in our offices and I saw Lini in one talking to someone I recognized from a Christian rock band. I didn't want to disturb her during a tour, so I texted her instead.\n\nGoing to check out the venue. Back by 3\n\nI needed to get out of the office. Massari Arena was close by, so it didn't take long to get there. On the campus of CSU Pueblo, I was depressed at how difficult it was to guess the ages of the students. They all looked fourteen to me.\n\nThe arena was a big deal to locals but was tiny. It held less than 4,000 people but we were going to put a lot of emphasis on the streaming aspects. As long as the crowd was enthusiastic, it would be fine. It wasn't AT&T Stadium or The Meadowlands, but it didn't have to be.\n\nWe were going to set up the trees, backdrops, and platform for Santa near the stadium entrance so that the kids could wait in line inside if it got too cold. After walking the grounds, checking for electric access, and where we could throw some hot cocoa machines, I got back in the car.\n\nAfter putting down the windows, I sat there for a few minutes enjoying the crisp air and thinking. Finally putting the car in drive, I headed back to the studio.\n\nOkay, so I was interested in Haliaka and she shut me down and then today she sees the hula girl, like I'm some sort of fetish freak. Not being at fault for anything didn't help me from feeling guilty somehow. Slowly driving back, I decided to just suck it up. She'd be gone soon enough.\n\n*****\n\nI was in bright and early the next morning. Jimmy was giving a tour to some kids, probably from the music department of a local school. He waved and I lifted my coffee in his general direction as I headed to my office.\n\nMy Google-Fu skills were getting a work out when Lini popped by.\n\n\"Knock-knock! Have a minute?\"\n\nLooking up from the screen, I motioned for her to come in. \"Grab a seat. What's up?\"\n\nShe smiled but didn't seem happy. \"So, what are you up to?\"\n\n\"Just looking some shi... stuff up.\"\n\n\"Oh? What's so interesting at 9:15?\"\n\nLini didn't pop into my office to discuss my search histories. I humored her. \"Upgrades in body armor. They come out with new stuff all the time. I'm no expert, but it's like they either have big tech leaps every year or they are repackaging the same crap and selling it at a higher price.\"\n\n\"I see. Michael, she's going to be fine. You know that.\"\n\n\"Yeah, yeah, of course. Just, you know, poking around the internet.\"\n\nShe nodded her head and then reached across the desk, laying her hand on mine.\n\n\"We pray for her. Our church group. Every week.\"\n\n\"Appreciate it, Lini. You didn't come in here to talk about that though. What's up?\"\n\n\"Well, I need a favor. My niece has a moving up ceremony tonight and I'm sort of double booked. It's my fault entirely, but if you could see your way clear to representing the studio at a Civic Association meeting, I'd be grateful.\"\n\nThere was a reason why Lini handled that sort of shit. She's a hell of a lot better at shaking hands and representing us as professionals than me or Alex. On the other hand, she does it all the time without complaint.\n\n\"What time is it?\"\n\n\"The meeting starts at seven. I usually try to be there a little early to shake hands. Most of the members of the Pueblo Rotary will be there.\"\n\nI looked down at my green and white shirt with the parrots and my khaki shorts.\n\n\"Yeah, okay. I'll have to leave early and get changed.\"\n\nLini smiled again and this time it was genuine. \"Thank you, Michael.\"\n\n\"No problem. Tell your niece congratulations.\"\n\n\"I will.\"\n\nShe closed my door behind her. Lini knew me as well as anyone but Alex. There was no way I wanted to be talking to and answering questions from a bunch of stuffed shirts.\n\nI went back to my Googling for a while before eventually getting some work done. Leaving at five, I grabbed a sandwich, changed into a black button-down and gray slacks, and jumped on the websites for the Civic Association and Rotary. I looked over the minutes from the past few meetings so I wouldn't look completely ignorant and then headed over to the restaurant hosting us.\n\nLini represents us, but I knew most people there and they knew me. Pueblo isn't a large city. I shook some hands, swapped some lies about golf scores, and found a table to sit at. Some guy at the table filled my glass from the pitcher of water as I saw Haliaka enter the room. So much for a pleasant evening.\n\nShe took a seat and hopefully didn't see me. The meeting was a bore. Keeping a smile on my face, I made it through the chicken dinner they served. We were finally wrapping things up when the inevitable happened. A big issue just before I could make my escape.\n\nThe head of the civic association was winding down and we had made our way through all of the bullet points on his handout when Haliaka raised her hand and asked for a moment. I was determined to just walk out if she mentioned me or the studio.\n\nShe didn't. Standing, she looked around the room before beginning.\n\n\"Are you all familiar with Bandera Park on Alturas Drive? It's a nice little community park with a playground and a soccer field. There are homes right across the street and it stays pretty busy.\n\n\"Well, a skatepark was put in last spring. The park is supposed to close at nine but teens are hanging out there way past that. I thought that we could either support a local effort at a community watch or Savante Financial would help to pay for a patrol by private security. If some other businesses chipped in, I'm sure it would be affordable. We'd likely be able to put banners on the soccer fields as a thank you to participating businesses.\n\n\"I'd be happy to answer any questions.\"\n\nThere were a few questions about the amount of money needed, how this would benefit the people donating and a few business owners were discussing how much they could contribute. I was going to keep my mouth shut so I could get out of there. I really was. Unfortunately, no one told my mouth that.\n\n\"Um, I have a question.\"\n\nHaliaka looked over at me and rolled her eyes. \"Yes, Mr. Acton?\"\n\n\"Why?\"\n\n\"Why what?\"\n\n\"Why the hell are we doing this? Some teens are hanging out at a skatepark past nine? That's it? Have there been any noise complaints? Are parents finding bottles or needles?\"\n\n\"No, and it would be wonderful to keep it that way.\" She looked around the room. \"Are we in agreement?\"\n\nI spoke up again. \"Hell no, we're not in agreement. So, you want to narc out some kids who are trying to find something to do in what looks like a fucking wholesome little park that's straight out of Mayberry? What do you want them to do? Where should they go?\"\n\nHaliaka was looking pissed. Oh well.\n\n\"They can go anywhere they'd like as long as that venue is actually open. That doesn't seem unreasonable to me. The hours are there and posted for a reason. Families live yards away from the park.\"\n\n\"Yeah, but none of them are complaining, right? So what's the issue?\"\n\n\"The issue, as you put it, is that we want to be proactive and not reactive. Additionally, the lights in the area of the skatepark are abysmal but that doesn't stop them from using the facilities. Someone could get seriously injured.\"\n\n\"So, let's use the money that would be going towards guards and use it on lighting.\"\n\nWe went back and forth for another twenty minutes and nothing was resolved. The civic president finally adjourned the meeting. Haliaka glared at me as I left.\n\n*****\n\nOn paper, Lini worked for me and Alex. In reality, it would be total chaos around here without her. She was half organizing dynamo and half house mom. I guess she'd arranged it with his folks, but she had her nephew cleaning out the basement and hauling up old files, and transferring the data to her software system manually. They probably could have scanned that shit, but it wouldn't have been enough of a punishment if it was easy.\n\nI watched the kid through the window as I ate my lunch. His jacket was too light and he wasn't wearing gloves, but Lini had him picking weeds and any garbage from the topiary or whatever they called that stuff. The wind was pretty strong and we'd had the first frost of the season that morning. The kid shivered as he did his penance, and I wondered if Leia was my penance or redemption.\n\nWas she a chance to get things right or a reminder of the little girl I'd abandoned forty years ago?\n\n*****\n\nIt was bright and early on Monday morning when I called Lini. \"Hey, can you stop by my office?\"\n\n\"Is this a now thing or a when you get a chance thing?\"\n\n\"A now thing.\"\n\n\"I'll be there in a few.\"\n\nShe had some folders under her arm when she knock-knocked and walked in.\n\n\"Hey, close the door and grab a seat.\"\n\n\"All right. Is everything okay, Michael? Alex is due back today, correct?\"\n\n\"Everything's good, and yeah. He should be in soon. Listen, you do what I asked with the accountant?\"\n\n\"Were there any issues?\"\n\nI stared at her. I don't like word games and although Alex and I let her run shit, I've had larger confrontations with much scarier people.\n\nShe blinked first and asked, \"Was everything okay?\"\n\n\"Lini, answer the question. Did you do the background check on the person we were inviting in to go over our finances in detail?\"\n\nShe looked away briefly and almost whispered. \"No.\"\n\n\"Any reason why not?\"\n\n\"Yes, there wasn't a need.\"\n\n\"Yeah? You didn't think my saying 'do it' was a need? Do we have an issue, Lini?\"\n\n\"No, Michael. You and Alex have been very good to me and I know who makes the final decisions. I didn't need to because I've known Haliaka for more than a decade. She goes to my church. I'm the one that recommended she look into joining the firm we use.\"\n\n\"And somehow that was on the list of 'shit Mike doesn't need to know about'?\"\n\n\"I... I should have said something. You're right and I apologize. She's had some difficulties and I was trying to be circumspect.\"\n\n\"What sort of difficulties?\"\n\nShe paused for a moment. \"Please keep this to yourself. The money that she used to buy a partnership in the company came from a sexual harassment lawsuit she won. It was bad. Very bad. She was tremendously successful and had a straight line to eventually being the CFO with the company until the CEO decided his position came with certain perks. There were countless small incidents and then... It was bad, Michael.\"\n\nI let out a breath. \"Huh.\" Sitting there for a second, I let that rumble through my head. \"I hate that shit.\"\n\n\"I know. Most people do. To be honest, she shouldn't be here poring over our books. She's too experienced, too talented for something like that. Haliaka should be working for a Fortune 500 somewhere. She doesn't want anyone to know what happened. Please keep it to yourself.\"\n\n\"C'mon, you know I wouldn't say anything.\"\n\nLini gave me a sad smile before continuing. \"I do. I'm sorry, I handled this poorly.\"\n\n\"Okay, whatever. So, you vouch for her?\"\n\n\"Yes, without question.\"\n\n\"Good enough. Listen, you think she might be a little sensitive about boundaries after what went down at her old job?\"\n\n\"Why, what happened?\"\n\n\"Nothing. No problems. I may have... Eh, it doesn't matter. When are we going to hear back from them?\"\n\n\"She said she'll need a few days. I'm thinking she'll be back Wednesday or Thursday with a wrap-up meeting and a breakdown.\"\n\n\"Sounds good.\"\n\nShe got up and headed to the door before stopping. \"Michael, I am sorry.\"\n\n\"No worries.\"\n\nLini nodded and headed back to her office.\n\nIt wasn't much later when Alex walked by. He had earbuds in and waved as he passed my office.\n\n\"Hey.\" He kept walking. \"Hey!\" Nothing.\n\nFuck. I got up and checked the rec room. He was grabbing a water. When he turned back and saw me I mimed taking out the earbuds. Alex was smiling. For no reason at all, he was walking around smiling, like some goofy dope. He'd changed since he'd started dating Leia's mom.\n\n\"Hey, Mike. What's up?\"\n\n\"You don't stop, see how shit went while you were out doing whatever?\"\n\n\"I'm working.\" He held up an earbud. \"A new song we're fixing.\"\n\n\"Cool. Great. You're working on your own shit where the money goes to you while you're here at the studio not giving a fuck how things went.\"\n\n\"What the fuck is up your ass? I take one week and somehow it's a problem? How often do you just disappear? Do I ever get on you for that?\"\n\nI just stared at him. \"Fuck you.\"\n\nWalking away, I went back to my office.\n\nTwo hours later he was walking in and sitting down in front of my desk. He pulled two heroes from Gagliano's out of a plastic bag and they were quickly followed by two birch beers.\n\n\"Lini says she fucked up. Taking it out on me?\"\n\n\"Nah, she's fine. Just didn't tell me some shit. No biggie. You? That's something different.\"\n\n\"What the fuck did I do?\"\n\n\"A little birdy told me that you volunteered me to be Santa. That's not something you should have asked me about?\"\n\n\"That little birdie named Leia?\"\n\n\"Maybe.\"\n\n\"Maybe my ass. You're either misinterpreting what she said or she got her wires crossed. When that rent-a-Santa ghosted Leia and Em, I suggested she talk to you about it. Pueblo's not a big place and you know everyone that manages talent. I thought you could get her another Santa, not be Santa.\"\n\nAfter sucking in some air, I slowly exhaled. \"Okay, I guess that's different. Sorry. Um, you may have been volunteered to be an elf.\"\n\nHe raised an eyebrow. \"Whose idea was that?\"\n\n\"Ideas come and go. Who can remember?\"\n\n\"Sure. So, we're good?\"\n\n\"We're good. Tell me about your trip.\"\n\nWe spoke over lunch and he couldn't stop talking about Em, Leia's mom. She was good for him and it was clear that they clicked. It had been the first time Em had left Leia with someone else for that long, and she was calling her friend and brother a couple of times a day to check up on her daughter.\n\nIn spite of that, they had a great time.\n\n*****\n\nI spent the next couple of days working on the event.\n\nWe were holding the concert the Saturday after Halloween. Alex was going to play and so was Leia. She'd become a YouTube hit or star or whatever you call people on there. Alex had been teaching her for a while, and she was still a beginner, but she was dedicated and enthusiastic.\n\nWhen I saw that she was sticking to it, I called in some favors and got some people who owed me to play with her or sing along with her playing. It was done over Zoom and my audio people polished it up. She was officially the only kid I knew who had played with people who had enough Grammys to collapse a shelf.\n\nPeople watched the shit out of those videos. Stars playing with a cute kid who is just starting out. What's not to love? YouTube even sent her a Creator Award. It looked like a big \"play\" button from a video. She wanted to hang it in the studio where we hung all of the mock-up gold and silver records the studios sent us for albums recorded here. I was going to say no? Up on the wall it went.\n\nI'd expected her to give it up and pick up soccer or some shit, but she wasn't like most kids. Maybe 'cause her uncle played and she looked up to him like he hung the moon. Jimmy was a good kid and had straightened himself out, so her idolizing him wasn't so bad. I guess with Jimmy as an uncle and Alex dating her mom, guitar-playing in that house was inevitable.",
        "She'd sort of jumped into the deep end of the performing pool early. Alex had gotten her a recital with a bunch of other kids at a mall and then she played at the fundraiser when Alex played again in public for the first time. More than anything, that concert was a coming-out party for the new Jimmy, the guy who wasn't caught up in all the rock star bullshit.\n\nThis new concert was going to be a fundraiser for a home for vets and we were giving away a shit-ton of tickets to foster families and kids from an orphanage. It was sort of low-key, but if Alex was going to be playing, tickets would sell and we could make some cash off of live streaming.\n\nWe had enough acts to easily cover three hours. It was pretty crazy how no turned into yes when I reminded them that they'd be co-billed with the founding guitarist of Death Knight. Alex's name had power and I wasn't afraid to use it.\n\nAnd all I had to do was be Santa after the concert. That's all. Just fucking be Santa. What the hell did I do to deserve this?\n\n\"Knock-knock!\"\n\nI looked to my door to see Lini grinning from ear to ear.\n\n\"C'mon in.\"\n\n\"You have guests.\"\n\n\"Okay, you need to announce them or something?\"\n\n\"No, just wanted to be here. They're dressed to the nines, so it must be important. Michael, Leia, and Alex are here to talk about the concert.\"\n\nI was confused. \"And they need an invitation? Tell 'em to get their asses in here.\"\n\nLeia started calling out. \"Wait! Wait! Let me go first!\"\n\nShe ran in and stood by the door before speaking so fast I almost couldn't follow.\n\n\"It turned out so good. Mom helped. She saw it online. He didn't want to, but I convinced him. Uncle Jimmy liked it too. It was so, so amazing! He looks just right. I knew it would work! Mr. Mike, you ready?\"\n\n\"Sweetheart, what are you talking about?\"\n\n\"Alex!\"\n\nShe waited a minute and looked in the hall. \"Alex, c'mon!\"\n\nLeia had her hand on his forearm as she led him into my office. He stood and stared at me.\n\n\"Not a word. Not one damn word.\"\n\nSmiling, I tried not to laugh at my oldest friend. He was dressed like the world's tallest elf, from the green hat on his head to the curly-toed red shoes on his feet.\n\n\"No, not at all. Looks good. You can drop this guitar-playing crap. You've found your calling.\"\n\n*****\n\nSeeing Alex walking into a studio from the CCTV in my office, I hit the audio so we could talk. Unfortunately, Haliaka walked in right behind him. He was smiling and pointed to the wall.\n\n\"Here it is. I'm not sure, but she might be the youngest person to ever get one.\"\n\nHe was showing her Leia's award from YouTube. That kid had him wrapped around her finger, the poor schlub.\n\nI was about to turn off the audio when he began speaking again.\n\n\"Listen, about Mike.\"\n\nMy hand lingered in the air over the button. Turning it off was the right thing to do, it was. I didn't.\n\n\"It's none of my business, Mr. Franzietti.\"\n\n\"Yeah, I know, but I think you may have gotten the wrong impression. I spoke to Lini. She told me what went down. Don't be pissed at her. She loves Mike like a brother and she obviously cares about you. There are no villains here.\"\n\nShe rolled her eyes. Damn, that was annoying. Haliaka continued. \"Go on.\"\n\n\"Mike's not obsessed with Hawaiian women. That figure isn't about women; it's about Hawaii itself. I've known him for decades. He's dated white women, black women, Asian women, Latinas... whatever. If he has a type, it's female. That's it.\"\n\n\"I find that a bit hard to believe.\"\n\nAlex sighed and I tensed up. Just let it go. Shut up and let it go. He didn't.\n\n\"Mike had some issues when he got out of the Army. His best friend was from Hawaii and they got out around the same time, Mike for medical reasons. His friend took him home with him and helped Mike get straight.\n\n\"The hula girl isn't a girl, it's a place. It's where he found himself again. It's a symbol that things get better. It's a kitschy reminder that when things were bad, and they were, they really were, he was able to fight back and get his life back on track. Trust me, it has nothing to do with Hawaiian or Polynesian women.\"\n\nHaliaka was quiet for a minute. \"Okay, thank you for telling me. I'll put some thought into what you've said.\" She pointed up at the award. \"Very cute, by the way.\"\n\nAlex smiled. \"Yeah, she's a pretty amazing kid.\"\n\nAnd you, you're a traitorous fuck. I should've never told you my personal shit.\n\nGrabbing my keys, I left for the day.\n\n*****\n\nI ordered a breakfast spread from Grind Haus Cafe and we had it set up in Alex's office. His was the largest and could fit the most people comfortably. We were killing time waiting for Lini.\n\nI'd calmed down overnight, but I was still pissed. If I wanted Haliaka to know something I was more than capable of telling her. Not exploding at Alex was difficult, but I kept calm. We had too many years on the books to lay into him for doing something he thought was helping me.\n\nAlex leaned forward. \"So, explain this to me again. Why do you hate Land Rovers?\"\n\nI shook my head. \"What's so difficult to understand? It's the Queen's car.\"\n\n\"So?\"\n\n\"The Queen. Of England? Get it? Johnny Rotten may have gone soft, but I haven't. Fuck her. And don't roll your eyes at me!\"\n\n\"You're ridiculous. It was free. A thank-you for letting them use the studio. We're not taking gifts from record labels anymore?\"\n\nPushing back in my chair, I stared at Alex. \"Me or you, we hurting for money? We can't buy our own cars? They wanna do something, have them throw in some cash for the event. Make a donation or pay for the streaming or something. We're not taking a monarchist SUV.\"\n\nHe let out a little laugh. \"Okay. Whatever.\"\n\n\"Knock-knock!\"\n\nWe turned and saw Lini, Haliaka, and Lou at the door. Lou had been my accountant for years and it was good to see him, but it was obvious the years were taking their toll. Maybe that explained why he took on Haliaka as a partner.\n\n\"Hey, c'mon in. We got some breakfast.\"\n\nLou let Haliaka present their overview and it seemed like we were in good shape and pretty much where we thought we were. It took a few hours and we talked about taxes, the offsets to upgrading equipment, benefits of expanding, and the impact some new local legislation would have.\n\nShe was very thorough and left us with handouts, flash drives with her analysis, and a promise to be available if we had any questions. The breakfast was pretty good, too. There was no defensiveness or hostility and she was professional throughout.\n\nHaliaka didn't ignore me, but she also didn't single me out. At this point, I was grateful. Benign indifference was good with me. It wasn't a big deal. She was an attractive woman, but I barely knew her. It wasn't meant to be.\n\nWe thanked them and I walked Lou out to his car.\n\n\"Hey, we've worked together for a long time. I'm not much for sentiment, but you've always been straight with me. We never had any issues. I want you to know I appreciate that. It means a lot, Lou. You need something, you let me know, okay?\"\n\nHe grinned and took my hand. There wasn't much strength in his grip, but his eyes were steady as they looked into mine.\n\n\"You can be a pain in the ass, Mike, but you're a mensch. I'll be in touch.\"\n\n*****\n\nMy headphones were on as I listened to some early Metallica. When my phone vibrated I considered ignoring it while I went over three months of late payments. We always had people that were late in paying us, but the past few months it had jumped. Something about some of the acts seemed familiar to me. It turned out that a number of them were represented by Milt Gossend, a creepy son of a bitch that made my skin crawl.\n\nPulling the phone from my pocket, I looked at the number and nearly ripped the headphones off in a hurry to answer.\n\n\"Hey, baby.\" I quickly looked at my watch. \"What time is it there for you? It's almost noon here.\"\n\n\"Dad, I'm back. In Fresno.\"\n\nThere was a part of me that relaxed for the first time in nine months. She was back. My little girl was safe.\n\n\"Yeah? Back for good?\"\n\n\"For the foreseeable future, at least. I don't know how to describe what it felt like. I'm glad I did it, but Doctors Without Borders will have to get by without me for a while. It was exhilarating and exhausting and rewarding and... Dad, some of those poor people, they...\" She sighed. \"We'll talk about it another time.\"\n\n\"Well, they're losing the best nurse they ever had. Listen, can I fly in and see you? I mean, just for a day or two, not a big deal. If, you know, you have the time.\"\n\nI didn't want to come across as pathetic, so I tried to keep my voice even and sound casual. She'd been avoiding me for most of her adult life, the last thing I needed was to sound over-anxious and drive her away.\n\n\"That's, uh, that's sort of why I'm calling. It's over, Dad. Brad and I are through. I thought the separation would help, but when I got back I found out he'd been sleeping around again.\"\n\nClosing my eyes, I tried even harder to sound calm. My new mantra rolled through my head. Don't kill Brad. Don't kill Brad. Don't kill Brad.\n\n\"I'm sorry. Musta sucked coming home to find that out. Can I help at all? You need a lawyer?\"\n\n\"I have one, thanks. This is, um, a little weird. I sort of need a new start. Does that make sense? I need to get away from here. I was thinking maybe I could come up by you for a little while? Just sort of shake everything off. New place, new people.\"\n\nSitting up straighter, I held the phone tight to my ear.\n\n\"Seriously? Yes, of course! I'll send you a ticket. When did you want to come? Do you have movers? Are you at the same address? I can get some people to move all your shit. Want me to fly out there and help? No, wait, I should find someplace here. You can stay at my place as long as you want, but I'll look into houses nearby for you. I'll--\"\n\nShe let out a small laugh and it reached in my soul to lift my heart.\n\n\"Dad, Dad, calm down. I'll take care of everything here. I need to speak to Mom and Jeffrey. They're not going to be happy. Just... you sure it's okay?\"\n\n\"Am I sure? Absolutely I'm sure. Whatever I can do. You have a timeframe?\"\n\n\"Maybe by the end of next week? You don't know anything about the hospitals in Pueblo, do you?\"\n\n\"I will by the next time we talk. Can I call you the day after tomorrow?\"\n\n\"Yeah, Dad. That would be good. I have to go. We'll talk soon.\"\n\n\"Okay. Shelly?\"\n\n\"Yeah?\"\n\n\"It was great to hear your voice. Thanks for calling. I love you.\"\n\n\"You too, Dad.\"\n\nShe didn't say the words, but I'd take what she did offer. I was a wreck after her mother left me for Jeffrey. The drug use quickly followed and I was still in the service. I got injured, discharged and a friend helped me to get into treatment. He had a sister who became my first client, the eponymous Charlotte of Charlotte and the Bobcats. She had a great voice, a hell of an attitude, and needed help.\n\nAs much as she needed my guidance, I needed what she represented. Her career was a reason to go on, something I could pour myself into. We slept in vans and ate a shit-ton of ramen, but when she broke, she broke big.\n\nEven after I got cleaned up, I knew that I wasn't the sort of person that was good father material.\n\nI made my appearances once a month or so, paying what I could. Jeffrey was a sure thing for my ex. He had money and a good, white-collar job. I had nothing except a strong back and an attitude as I repped Charlotte and the Bobcats. When they hit the big time, I got two more bands. One of them made it as well and then the ball was rolling.\n\nThe eighties were good to me and soon I had more money than Jeffrey. By the end of the decades, I had much more. By the mid-nineties, I had more money than I knew what to do with and was managing four of the best-selling bands in the business.\n\nI had money, power, fame in the industry, and a daughter that I rarely saw. There was something about Julie cheating and then leaving me for someone else while I was serving that burnt the shame into me so deeply that I didn't feel worthy of being Shelly's father. She was always a precious figurine that was too special to be dirtied by my hands.\n\nFooling the world was easy, but you couldn't fool a kid. She'd have seen right through me. I knew with a certainty that my daughter would see the addict, the guy who couldn't keep his wife and let his family slip through his fingers.\n\nSo, I was dad from a distance. Extravagant gifts, the best schools, and everything else that money could buy were laid at her feet. I'd make my appearances full of bravado, knowing that I was a sham and waiting for the opportunity to get out of there.\n\nEvery minute I was away from her was torture. Every minute I was with her was worse. I found a compromise in showing up and watching her without her knowing. I'd go to her concerts and recitals. I'd go to school plays and soccer games. The only time I was truly at peace was when I watched my beautiful daughter without her knowing.\n\nIf I stayed too long, she'd know. Shelly would see who and what I truly was and I couldn't take that.\n\nMy greatest shame now wasn't the deals I couldn't get made, the addictions I struggled with or the people I couldn't help; it was that I was too much of a coward to be the father I should have been.\n\n*****\n\nShelly was coming to Pueblo and I was walking on air. I picked up my landline and called Lini's office number.\n\n\"Hello, Michael.\"\n\n\"Hey, I need some help, but it's not a job thing, it's a personal thing. Would it be out of line to ask for a favor?\"\n\n\"Certainly not. How can I help?\"\n\n\"I need a list of local hospitals and I need to know if the studio has any contacts with people who have to pull at any of them. Donors or people who sit on boards or whatever.\"\n\n\"Okay, may I ask why?\"\n\n\"Yeah. Shelly needs a job.\"\n\n\"Shelly? Your Shelly?\"\n\n\"Yup.\"\n\n\"That's... And she's looking in Pueblo?\"\n\nI laughed, almost giddy. \"Sheesh, yeah, she's looking in Pueblo. Where her old man lives. Is that so hard to believe?\"\n\n\"No, I guess not. She's a nurse, right?\"\n\n\"Uh-huh. Works with newborns.\"\n\n\"Okay, I'll start asking around.\"\n\nI had a cleaning service that came in and took care of the house twice a week. After another call, I got them set up for their top of the line service. The basement, garage, shed, attic and everything else was covered. Top to bottom, I wanted the house spotless.\n\nAlex walked by and I followed him to his office. The common areas of the studio were all the same. It looked like a newly built dentist's office and that's the way we wanted it. Some studios sold nostalgia, some sold comfort, and others just couldn't be bothered with anything but what they had twenty years ago. We chose to go with a look that said success and professionalism.\n\nThe individual studios were different. They were homey and comfortable with lots of wood paneling and paintings of skylines and little touches that let musicians relax and do their best work. The three personal offices were also unique.\n\nLini's was very much like what I'd expect her home to be, organized but not stuffy. Mine was a little too stiff and spartan, but that's the way I liked it. I needed everything in its place to be able to think clearly. Alex's? Well, his office was a disaster. He had pedals everywhere, seats were covered with notes and old issues of guitar magazines, and he had to have at least ten pairs of headphones.\n\nDropping some magazines on the floor, I sat down.\n\nHe looked up with that goofy smile he's had since he got with Em. \"What's up?\"\n\n\"You rent a place for some of your cars, right?\"\n\n\"To store them? Yeah.\"\n\n\"Can you fit one more?\"\n\n\"I guess. What's up?\n\n\"Need to make room in the garage.\"\n\n\"Okay, sure. I'll text you the address and the access code. Drop it off whenever.\"\n\nI sat there for a minute, staring at him. He stared back.\n\n\"Ask me why.\"\n\nAlex tilted his head and grinned. \"All right. Why do you need to store your car and make room?\"\n\n\"Shelly's moving here. In with me. I mean, not for long. I'm gonna look for a place for her but until then, she's moving in with me.\"\n\n\"Wasn't she in Africa somewhere? And what happened with what's his face?\"\n\n\"Yeah, she's back. And he's a dick. She needs to get away from him so she's moving here.\"\n\nNodding his head and grinning, Alex leaned forward. \"Nice. It's about time. Let me know what I can do. Whatever you need.\"\n\nI tried not to smile but failed spectacularly. \"Thanks.\"\n\nTrying not to text her each day was difficult, but I was able to pare it down to every other day. Time flew by as I worked things out for her and the event. I have no idea where she came up with this shit, but Leia insisted that we had to have a business dinner. I think she had just heard the term somewhere and was jonesing for some tacos.\n\nAlex and I took her and Em to Mookie's Hous of Taco's. I laughed when I saw her staring at the homemade sign, trying to puzzle out what was wrong. Mookie knew his tacos and he was a good guy, but even I knew spelling and grammar weren't his strong suits and Lini had to fix everything I wrote.\n\nLeia was talked down by her mother when she kept trying to order her food with the spiciest salsas. We got our meals, carried them to the tables and Em pulled out a folder. In reality, Leia had nothing to do with the concert part of the event. Yeah, she was the person behind the Santa stuff, but that was peripheral.\n\nTry telling that to an eight-year-old.\n\nWe listened to her ideas that were all over the board, one end of the spectrum to the other. She wanted us to get Aretha Franklin to play at the event. I had no idea that she knew who the Queen of Soul was. I had to break it to her that Aretha wasn't with us anymore. On the other hand, she wanted her friend to sing some Taylor Swift songs. As nice as that kid might be, she couldn't carry a tune in a bucket.\n\nAlex was going to play and anchor the event. Jimmy was going to play and continue to prove to the industry that he wasn't the petulant prima donna he used to be. The Poplin Family Jug Band was going to play representing local Pueblo talent. They were popular in the area but had no aspirations towards commercial success.\n\nFinally, Leia was going to play. She was going to sit in with both Alex and her Uncle Jimmy and I had a few surprises lined up.\n\nWhen we got back to the studio we began talking about the number of attendees and how much money we could bring in through streaming the concert when Alex began asking questions.\n\n\"What's our liability if there's an issue?\"\n\n\"What do you mean? We'll have insurance. I've done it a million times.\"\n\n\"Okay, but can the studio be sued?\"\n\nI was confused. Why was he worried about this? Running events is what I'd done for decades. Why the concern now?\n\n\"For what?\"\n\n\"I don't know, if someone gets hurt or something or if a band thinks they got screwed.\"\n\n\"No, that's what the insurance is for. What's this really about?\"\n\n\"Remember that fire at the venue in Warwick?\"\n\n\"Rhode Island? Dude, that was like fifteen years ago.\"\n\n\"Yeah, it was. And the band? They barely play out anymore. They had to pay out some money, but that's not it, I guess. People freaking died.\"\n\nShaking my head, I just looked at him. \"I'm not getting this. You're afraid of a fire or something? You get you're pulling out an example from fifteen years ago? That should tell you something right there if you have to dig back that far.\"\n\n\"All right. What about write-offs? Can we claim expenses from the event?\"\n\nThere was a pause while I thought. \"I don't know. Good question. They said something about that during the audit. Stuff about the last concert. I'll dig that up. We're sponsoring it, so maybe?\"\n\n\"Maybe?\"\n\n\"Yeah, maybe. I'll look into it, but you sure that's all that's going on?\"\n\nHe glanced over at the closed door and then back to me. \"I'm feeling... I don't know. Weird. Nervous.\"",
        "\"About the venue?\"\n\n\"No, about me. My playing.\"\n\n\"Huh. Wasn't expecting that. It's not too weird though, right? You had the one show and it was more of a curiosity thing. Nobody expected anything. The second show says you're back. And you have a rep. I get it. Look, it'll be fine. You're as good as you've ever been. Once you hit the stage it'll be like old times. And I'll look into that other stuff.\"\n\nGetting a text that I had a delivery, I headed out to the front. I paused when I saw Haliaka sitting on one of the couches. Looking up over her magazine, she saw me and sighed. Putting it down, she stood and picked up a paper bag.\n\n\"Hello, Mr. Acton.\"\n\n\"Hey.\"\n\n\"I'm waiting for Lini.\"\n\n\"Gotcha.\" I looked around for the delivery.\n\n\"I... Um... Here.\"\n\nStepping forward, she handed me the paper bag. Opening it, I pulled out a box of Thin Mints.\n\nShe tilted her head as she looked at me. \"A peace offering.\"\n\nThat was unexpected. \"Okay. Thanks. No problems. We're good.\"\n\n\"Well, alright then. Enjoy your evening.\"\n\n\"Yeah, thanks. You too, Haliaka.\"\n\nThe next morning I called Lou. I told him I had some tax questions and explained the event. We agreed to meet at Mr. Tandoori for some Indian food. I was at the table waiting for him when I saw her walk in. My heart skipped a beat and I stood.\n\nHaliaka saw me, nodded, and headed my way.\n\n\"Lou told me about the meeting. I asked him if I could sub in. Is that okay?\"\n\nRaising my eyebrows, I tried to keep my skepticism in check. \"Absolutely. Not a problem at all.\"\n\nWas she judgemental? Hell yes. She was also smart, funny, and hot; so yeah, I slow-rolled the discussion of the event and our concerns. I had the chicken korma and she had biryani. We finished the meal with nimish and lassis and when I gave the waiter my credit card, I checked my watch.\n\nHaliaka noticed. \"Need to be somewhere?\"\n\n\"Yeah, sorry. I need to get to the mall. My daughter is moving in for a while. I was going to get an interior decorator or somebody to sort of... I don't know. Make the place softer? More... welcoming? But I figured that maybe I should try to do it myself. I mean, the least I can do is make an effort, right?\"\n\n\"I see. Do you know what her tastes are?\"\n\nI wasn't sure if I was buying her interest. Clearly, Alex had an impact, but it seemed too much, too quick. Still, it wasn't hurting anything.\n\n\"Um, no, not really. We haven't been able to spend a lot of time together. She's lived in Cali most of her life. I just don't have a good grasp on what would be welcoming. Is this making any sense? Maybe I'm overthinking it.\"\n\nI ran my hand through my hair and looked for the waitress. Haliaka smiled. Oddly, it seemed both forced and genuine.\n\n\"No, I'm sure she'll appreciate it. Do you have any photos of her at her home?\"\n\nI leaned back slightly in surprise and smiled. \"Yeah, actually I do. Great idea.\"\n\nPulling out my phone, I showed her a bunch of pictures of Shelly in her house. I was in one of them. Brad was in a bunch. Thoughts of his gonads going through a meat grinder went through my head as Haliaka scanned the photos.\n\n\"She's a lovely girl and has good taste. Where did you plan on shopping?\"\n\n\"I don't know. The mall? Ikea?\"\n\nOpen-mouthed, she stared at me for a minute. \"Seriously? Ikea? Okay, that settles it. We're going shopping.\"\n\nWe spent the evening looking around and buying shit. It was awkward, as if we were engaged in a dance that neither of us knew the steps to, we were careful and a little stiff as we talked and browsed. It felt like she was doing me a favor and I wasn't sure if she wanted to or felt obligated to. We stopped at a coffee house and she promised to get back to me about the concert.\n\nI loathed shopping and when it came to decorating and shit like that I just outsourced it to professionals. I'd rather have my teeth pulled than spend time looking at couches or lamps. Spending hours at furniture stores was my idea of Hell.\n\nAnd yet, that was one of the best evenings I could remember.\n\n*****\n\n\"Baylee and I made the cookies, but I made the plate.\"\n\nIt was painted to look like a jack-o-lantern. I took a bite of a cookie. I was in my office on a Saturday since I took off Thursday to be home for the delivery of furniture and stuff. Jimmy had some things he needed to do but was watching Leia, so he took her with him.\n\n\"Wow, they're really good, kiddo. Peanut butter chocolate chip. Where'd you get the orange sprinkles? Really spooky.\"\n\n\"Mom got them from the store.\"\n\nI placed the cookies on a napkin and handed her back the plate. \"Well, great job. Thanks.\"\n\nShe looked from the plate to me, seeming a little angry. \"No, look at the back.\"\n\nFlipping the plate over I saw the very careful lettering.\n\nMr. Mike, Happy Halloween, From Leia\n\nI flashed back to hand-made gifts from my daughter more than three decades earlier. Clay paperweights made in school, an empty two-liter bottle that she filled with black crepe paper and made her own label for \"Shelly's Birch Beer\", colored drawings of her dog Rufus and every other gift that I still had in a chest in the attic came to mind.\n\nIt was suddenly hard to breathe.\n\n\"You... You don't like it?\"\n\nIt was hella dusty in my office. I wiped my eyes before answering. \"I love it. It's great. Does he have a name?\"\n\n\"Jack.\"\n\n\"Makes sense. Thank you, Leia. It's beautiful.\"\n\nShe just looked at me for a bit before saying anything. Leia had two stages. Either she was concentrating and had the tip of her tongue sticking out of the side of her mouth or she was talking. One or the other, all the time. It was disconcerting seeing her sitting there all quiet and shit.\n\nWhen she finally spoke, her voice was soft and she wouldn't look at me. \"Would you be mad if I didn't do the Santa thing anymore?\"\n\nPushing back in my chair, I chose my words carefully. \"I wouldn't be mad, honey, but can I ask why?\"\n\nShe shrugged before continuing. \"I didn't think... When Mom and I thought it up it was just fun. And then that man didn't answer his phone, and we needed a new Santa, and you said you would do it. I sort of thought if Mr. Mike was Santa we could do the best Santa ever and we made all these plans and ideas and stuff and...\"\n\n\"And it got bigger than you thought?\"\n\n\"Yeah.\"\n\n\"And that's... a little scary?\"\n\n\"What if something goes bad? Like, if nobody shows up? Or if they do, but they hate it? Or we don't have enough things for all the kids? Or... Something I'm not thinking of, but it's horrible, and it happens?\"\n\nI thought for a second. \"Okay, what's the worst thing that could happen? I mean the absolute worst?\"\n\n\"Maybe, maybe lots of kids show up but it stinks? They all hate it?\"\n\n\"Well, no. The worst would be one of the reindeers eating a kid.\"\n\nShe laughed. It was a light, tentative laugh and I smiled. \"But let's say the kids do hate it. They would tell us why, right?\"\n\n\"I guess.\"\n\n\"So, let's consider this a test-run for next year. We run it just like we said we would, but we have people around whose only job is to ask kids what they thought. We'll use whatever they say to make next year better. That would be okay, right?\"\n\n\"We're gonna do this next year, too?\"\n\n\"If you want.\"\n\n\"Okay. But it's not, right? Going to be bad, I mean.\"\n\n\"I don't think so, but if anything happens, we'll know what to fix. Wanna hear a story?\"\n\n\"Sure.\"\n\n\"The first band I managed was called Charlotte and the Bobcats. Charlotte Kahale was my friend's little sister. They played a lot in Los Angeles, which is important for a new band. Big market, lots of national outlets. We went out and toured a lot in the southwest. They were pretty successful as a touring band, but this was before they hit it big.\n\n\"Well, I set up a show. It was the first time I went from manager to promoter. It was in Texas and I thought everything was set. They were playing an outdoor gig, and I had local bands lined up to open for them and everything looked great. We expected lots of walk-ups, so I wasn't too worried about the lack of early sales.\"\n\nI smiled and shook my head as I remembered that disaster.\n\n\"Turned out that the date conflicted with a high school football game between two rival local towns. People in Texas really, really like football. We had almost no one show up. On top of that, I never asked what direction the stage pointed to. By the time Charlotte went on, the band was staring straight at the setting sun. They couldn't see shit... I mean crap... I mean... You get the idea. It was a nightmare. You know what I did?\"\n\nShe shook her head. \"No. Did they fire you?\"\n\n\"Nah, they stuck with me. I took notes. Lots and lots of notes. And I made sure that never happened again. If things go bad, and they won't, we'll learn from it and make sure it's better next time. Deal?\"\n\nLeia smiled. \"Deal.\"\n\nWe went into the breakroom to get some milk to go with the cookies. There was none. I checked my mini-fridge for birch beer. There was none. Sighing, I grabbed a Snapple.\n\nJimmy finished up whatever he was working on, scooped up Leia, and headed out. He was back in a few minutes with a huge box.\n\n\"This arrived for you. Georgio's Costumers?\"\n\n\"Yeah, I was expecting that. Thanks.\"\n\n\"No problem. Alex was pulling in as we were leaving. See you Monday.\"\n\n\"Yeah, have a good weekend.\"\n\nHe stopped at the doorway. \"Hey, that was the fourth plate she made. The first three weren't good enough for Mr. Mike.\"\n\nFor some reason, I wasn't able to speak. I grabbed the box to give me something to do and nodded in his direction. Pulling out my ubiquitous pocket knife, I carefully opened the box and pulled out the Santa suit. It was fucking expensive as hell, but I couldn't argue with the results. It looked damned good.\n\nPutting it on, I sat back in my chair and thought about the old days before I became known in the industry. This felt a lot like that. It was small but important to someone I cared about. I was new to being \"the talent\" and it was scary but sort of exciting.\n\nPulling a tumbler from my bottom desk drawer, I poured in some of the Snapple and sat there thinking.\n\nEarbuds in, Alex walked by, stopped, stared, and then walked into my office.\n\n\"Ho, ho, ho, Mike.\" He nodded towards the tumbler with his chin. \"Starting early?\"\n\nHe knew I hadn't had a drink in decades, and I could see the concern in his eyes. I lifted the tumbler in his direction and lovingly flipped him the bird with the other hand.\n\n\"Snapple. Raspberry, if you need to know. That a problem?\"\n\n\"Nope. Carry on, Santa.\"\n\nHe was whistling \"Santa Claus is Coming to Town\" as he left my office. Prick.\n\n*****\n\nEthan Poplin sent me some photos of the Santa chair. I'm not going to lie, it was pretty impressive looking. The final picture was of him and his students lined up behind the chair. He mentioned that he'd gone over to the venue and like I had, he sized the place up.\n\nUnlike me, he was professional about it. Measuring things out, he attached an image of what the riser would look like and where it would be placed. The image was overlaid on a photo of the area. He also had ideas on stanchions to keep the kids in line so it wasn't a mob.\n\nEthan's students were working on stuff after school and he'd recruited some kids from some art program to paint cut-outs of snowmen and shit. Grabbing the phone, I ordered six pizzas with soda to be delivered to the school later that afternoon.\n\nHaliaka called and I hesitated before picking up. Our evening had gone remarkably well, but I had no idea what that meant. Was it a \"sorry for being a bitch\" moment or a \"let's give this a whirl\" moment? If she had been trying to be a normal person and that was as far as it went, that was fine.\n\n\"This is Mike.\"\n\n\"Hi. It's Haliaka. I got some work done on the tax implications of your event. Are you free to meet? Maybe for lunch?\"\n\nI checked my watch. \"Yeah, lunch should be good. Around one?\"\n\n\"That would be great. Mexican okay? Have you been to Mill Stop Cafe off of 25?\"\n\n\"Nope, but I'll find it.\"\n\nIt was a small, inauspicious place that turned out to have great food. Haliaka was waiting for me when I got there and we had a table for two. We jumped right into it after the chips and tomatillo salsa hit the table.\n\n\"So, I was right about the skatepark. I'm not saying that anything draconian should be implemented, but teens are staying there until midnight, in the dark doing who knows what and they are a stone's throw from people's homes.\"\n\nWhat the fuck? Where was this shit coming from?\n\nPushing my chair back a bit, I shook my head. \"Seriously? Really?\"\n\n\"Give me a minute here, Mike. If--\"\n\n\"Look, have you had any complaints from the neighbors? Any at all? Have the cops been called down there for these terrorist teenagers and their horrible hanging out and skateboarding? What the hell do you want these kids to do? They're in suburbia hanging out in a good neighborhood while skating. They could be doing a lot worse.\"\n\n\"You're absolutely right.\"\n\n\"And another thing, they... Wait, what?\"\n\n\"You're right. It's not enough that we recognize an issue before it becomes a problem, we also have to look at the underlying concerns. These kids have nowhere else to go and nothing to do that doesn't cost money. Rich and middle-class kids in Pueblo are set. Movies, mini-golf, ice-skating, whatever. Poor kids have nothing.\"\n\n\"I... Uh, yeah. Exactly.\"\n\nShe dipped into the salsa with a chip as she spoke. \"Well, PBC Auto, across from the studio? That lot has been vacant for almost thirty months. I did some research. It now belongs to the city. They would be willing to sell it cheaply if the back taxes were cleared up.\"\n\nThe studio was purposefully in the middle of nowhere. The land was cheap, no neighbors to complain about, and we could expand as necessary. PBC Auto had closed down a while back and the only activity there now was weeds forcing their way through the pavement. It was an eyesore.\n\n\"And?\"\n\n\"So, imagine this. The property is repaved, the building is fixed up and it's used as a community center. There's plenty of space for skateboarding as well as, ready for this? Concerts. Small concerts for up-and-coming bands across the street from the studio. Nobody lives nearby, so who cares about the noise? It would give kids a place to go that's free, lots of space, bands have a new venue to play and everything is in your backyard. It's a win-win.\"\n\nThis had gone somewhere I hadn't expected.\n\n\"That's pretty impressive. You have the numbers?\"\n\n\"Sure do.\" She patted the folder. \"Take them back with you and look them over. It will be a lot more affordable than you think. You can write off almost all of what you put into it as long as it remains for the community for seven years. We could probably bring it to the Rotary and have other businesses kick in some cash. I've spoken to Rio Construction and they might help with building the stuff skateboarders need.\"\n\n\"I, um, yeah. I don't know what to say. Thanks.\"\n\nShe was quiet for a minute. \"I... Well, I spoke to Alex. I may have jumped the gun a bit last week. He explained that the hula girls were... I don't know. Not what I thought. And Lini is your biggest cheerleader. So, I've been going through some things and wasn't too happy with men in general, and you may have had to deal with that. It should have been directed at one person instead of a gender.\"\n\n\"Yeah, I get it. Not an issue. It's in the past. This is good stuff, though. About PBC. Can we get together to talk about it again after I look at the numbers?\"\n\n\"Sure.\"\n\n\"Maybe over dinner?\"\n\n\"I'd like that.\"\n\n*****\n\nThere was something different about Haliaka, and I couldn't put my finger on what it was. Alex was sitting at his desk, feet up and leaning back in his chair with his head bopping to some song he was listening to. His eyes were closed so he didn't see me standing there. I eventually kicked his desk.\n\nStartled, he almost toppled backward. \"What the fuck is wrong with you?\"\n\n\"You wanna talk?\"\n\n\"Yeah, Mike. I want to talk. That's why I'm in my office with my feet up and my eyes closed listening to a demo. That's always what I do when I want to have a conversation.\"\n\n\"Great. Fuck you. Shouldn't have bothered. Listen to your demo.\" I walked out.\n\n\"Fuck me? Fuck you!\" He paused, then called out. \"You want lunch?\"\n\nI called back over my shoulder. \"Yeah, get Thai.\"\n\nForty minutes later he was in my office pulling food out of a plastic bag. \"I'm begging you, can you get a decent chair in here? I'll pay for it.\"\n\n\"Shut up and eat your food. What do I owe you?\"\n\nHe just scowled at my question as if it was an insult. We ate and chatted about nothing. When we were done, he got up and closed the door, came back and sat down on the folding chair.\n\n\"So, what's up?\"\n\n\"You know I've been seeing Haliaka, right? I mean, not like dating... I don't know what I mean. We've had dinner a few times and lunch a couple more. It's always under the pretense of business, though. This is gonna sound stupid, but I can't seem to pull the trigger and just ask her out. I mean, I'm not some teenager. It's weird, but there's just something different about her.\"\n\n\"Huh. Okay. I can see that. Can I say something without pissing you off?\"\n\n\"Probably not.\"\n\nAlex laughed before continuing. \"Okay. Anyway, she's not like the women you usually date. You see that, right?\"\n\n\"What's that supposed to mean?\"\n\n\"You tend to date women who... I don't know how to say this without sounding like a dick. They don't want a lot from you and you don't want a lot from them. You're with them for a while, have a good time and then you both move on. Haliaka's different. She's someone you have to take seriously.\"\n\nI was quiet for a few minutes as I thought about what he said.\n\n\"That makes sense, I guess. Not what I want to hear, but I can see your point. So, what do I do?\"\n\n\"Well, you're sixty-fucking-two years old. You have a grown-up relationship. Ask her over to your place. Make dinner. That can't be construed as business. Sack-up and jump in the big boy pool. I'm sure you'll swim just fine.\"\n\nSmirking, I nodded. \"Em has really straightened you out, hasn't she?\"\n\nHe buffed his fingernails on his shirt. \"Nope. Native emotional intelligence. I'm just much more evolved than you are.\"\n\nLaughing, I grabbed the can and finished off the rest of my birch beer. \"Alright, I'll do it. Thanks.\"\n\n\"No problem. Seriously, I like her. I think it can be good.\"\n\n\"Yeah, me too.\"\n\nWhen Alex left, I called Haliaka.\n\n\"Hello, Michael.\"\n\n\"Hi. Um, the last of the stuff arrived. For the house, I mean.\"\n\n\"Great! Happy with the way it looks?\"\n\n\"Yeah, I was thinking maybe you might want to come by and take a look. Maybe there's something else I should buy or... You know what? Screw it. Listen, I'd love to cook dinner for you. You can see where I live, we could enjoy a meal and talk.\"\n\n\"Are you asking me out?\"\n\n\"Yeah, I guess I am.\"\n\n\"Will I be allowed to help with the cooking?\"\n\n\"Sure. You like lasagna? I make a mean lasagna.\"\n\n\"Can I make the salad?\"\n\n\"Sounds like a good swap. Saturday work? Whole Foods is near my place. We can go shopping and head over.\"\n\n\"Saturday would be great.\"\n\nWe met at my place and I drove over to the supermarket. Haliaka knew her way around ingredients, but I was no slouch. My doctor had been an alarmist and had scared the crap out of me when I turned forty. I gave up several vices and learned to cook so I wasn't stuck with fast food five times a week.\n\nWhole Foods had everything we needed and lots that we didn't, and I probably overdid it. Regular pasta, ready-to-bake pasta, and eggplant noodles all went in the cart. Fresh ricotta, mozzarella, and aged parmesan, organic eggs from free-range chickens, microgreens for the salad, ground turkey for meatballs, three pies, and two loaves of bread followed countless other items.",
        "I'm a nervous shopper. Sue me.\n\nOddly, it was sort of comfortable. We talked about favorite recipes and restaurants as we shopped. I made a stupid joke and she leaned her shoulder against me as she laughed. I thought it would be awkward, but we were having fun.\n\nSome teen bumped into me twice with his cart, but otherwise, I was having a good time. They had someone doing a truffle-making demo, so I bought a box and when we hit the drinks aisle I spotted birch beer, and I grabbed a case.\n\nHaliaka gave me a quizzical smile. \"Have a thing for root beer?\"\n\n\"It's birch beer.\"\n\n\"There's a difference?\"\n\n\"Lady, you have no idea! Please don't tell me you're a birch beer virgin. This night's going to be a revelation.\"\n\nShe continued with her indulgent smile. \"If you say so.\"\n\nWe had two carts when we finally made it up to the registers. I was taking our stuff from the carts when I felt something push into me. Hard. Whipping around, I saw the same teen behind me, turned to talk to a friend.\n\n\"Hey, what the hell? Watch your cart.\"\n\nLooking at me and then down to his cart, he rolled his eyes. \"Yeah, sorry. Whatever.\"\n\n\"Did you just whatever me? Back the fuck up and watch your cart.\"\n\nHe smirked. The little fucker smirked at me. \"Or what, grandpa?\"\n\n\"Or what? Or I'll...\" I saw Haliaka with my peripheral vision and tried to calm down. \"Or... Or I'll call over a manager and express my concerns.\" Fuck.\n\n\"Yeah, that's what I thought.\"\n\nHe pushed his cart towards me, raised his eyebrows in amusement, and then turned back to his friend. Jamming his cart back at him, I got the best dead eyes stare I could summon and just looked at him. Eventually, I went back to empty the cart, paid and we left.\n\nWhen she saw how slow I was moving, Haliaka glared at me in the parking lot.\n\n\"Look, can we just go? Are you waiting for them to come out so you can get in a brawl like some territorial ape?\"\n\nIt took me a minute to answer. \"Nope. Not gonna brawl.\"\n\n\"Okay, so let's just get out of here.\"\n\n\"Yeah. Just... Just need a minute.\"\n\nShe looked at me again, this time with concern. \"Michael, what's wrong.\"\n\n\"Not the most masculine thing ever, but I sort of wrenched my back when I shoved the cart at him.\"\n\nI saw the smile starting as she looked away.\n\n\"Hey, this isn't funny.\"\n\nShe continued looking away. \"Right. Not funny at all. Do you need help?\"\n\n\"Just gonna keep holding onto the cart. It'll be fine.\"\n\nNot breathing, I insisted on helping to load the groceries into the trunk. My seats were heated, so I put it on blast and tried to relax as I drove back to the house. It was humiliating.\n\nTaking some Aleve when we got home, I sat at the kitchen island as I prepped. Half an hour later it was a sporadic twinge, but nothing more. Getting old sucked.\n\n\"You have a lovely home, Michael, but it feels... sterile. Like a model home for realtors. I mean, it truly is beautiful. That was rude. I apologize.\"\n\n\"Nah, you're right. I don't like clutter.\"\n\nWe listened to music as we prepped and cooked and watched some Netflix while the lasagna was in the oven.\n\n\"Can we pause it?\"\n\n\"Yeah, sure.\"\n\nI did so and she got up.\n\n\"Mind if I open the wine?\"\n\n\"Not at all.\"\n\n\"Two glasses?\"\n\n\"Just one. I don't drink anymore.\"\n\nShe paused. \"Oh. Uh, maybe just some water then. Where are the glasses?\"\n\n\"Haliaka, enjoy the wine. That's why we bought it. I'm fine.\"\n\nWhen we started the movie again she had her wine and I had some orange juice. She was leaning against me by the time when the oven dinged. It felt good. Really good. I decided that slightly burnt lasagna was fine and didn't move. Five minutes later she sighed and got up. Reaching her hand out, she stood above me.\n\nI let her pull me up but didn't give her any weight. When I was on my feet, she kept hold of my hand and stepped forward. Leaning down, our lips met. We gently explored for a few seconds and then she nipped at my lower lip.\n\n\"I'm not going to let the shopping and cooking go to waste. Let's get the food out of the oven.\"\n\nI would have been happy to let it all go to waste and order a pizza, but instead, I followed her into the kitchen. The food was great and I grabbed some Tupperware so she could take some home. We went back to continue watching the movie.\n\nHaliaka was leaning into me on the couch and when I leaned over and kissed the top of her head. She looked up at me, moved closer and I found her lips again. We spent the next twenty minutes discovering how the other liked to be kissed.\n\nShe had her feet tucked under her as we sat watching the movie, plates with pie in hand. I looked over at her and turned down the volume.\n\n\"Tell me something about you that I don't know.\"\n\n\"Okay.\" She paused for a moment and thought. \"I have a son. Kyle. He's going to the University of Hawai\u02bbi at M\u0101noa. I miss him like crazy.\"\n\n\"That's rough. How often do you see him?\"\n\n\"Holidays and during the summer. It's not enough.\"\n\n\"Yeah, I can understand that. Do you go and visit?\"\n\n\"Half the holidays he comes here, half I go there. Hold on.\"\n\nShe got out her phone and showed me a picture of Kyle.\n\n\"Good looking kid. He seems happy. What's he studying?\"\n\nThe hours sped by as we talked about our histories and kids. It was an excellent day. She didn't leave until around eleven. The next morning sucked when my back froze up and I couldn't move. It took me forty minutes to get to the bathroom, and I spent an hour in the shower under the hot water.\n\nHave I mentioned that getting old sucks? The alternative is worse.\n\n*****\n\nI'm not proud of it, but I was growing nervous as we got closer to the event. I'd probably have been a little nervous if I was doing it in New York or LA, but I wasn't. This was happening in my backyard and it wasn't just me on the line, it was Leia. This couldn't be described as \"a little nervous.\"\n\nAs the days went by I was obsessed with minutia. Thankfully, Haliaka took my mind off things. We began going out a few times a week and we were at one of our homes every weekend. Still, I wanted this event over with.\n\n\"HO, HO, HO!\" Too much. I toned it down a little. \"Ho, ho, ho.\"\n\nFuck, who does this shit? I felt like an idiot. It was just a jolly laugh. What was the matter with me? That last one was anemic.\n\n\"Ho, Ho, Ho!\" Okay, that was better. I was sitting in my chair staring out the window at the lot that we might buy.\n\n\"Ho, ho, ho! What would you like for Christmas?\" Okay, not bad.\n\n\"Um, knock-knock?\"\n\nSpinning around, I saw Lini and Alex standing at my door. It was mortifying.\n\nAlex had a huge-ass smile on his face. \"It's okay, Mike. Was it ayahuasca? Peyote? We're going to talk you through this, buddy.\"\n\n\"That's funny. Real funny. Respect the process. Did I make fun of you when you had an insane rider for your shows that demanded Evian in glass bottles chilled to, what was it, forty-five degrees? Didn't think I'd remember that, did you? Drink any glacial water lately?\"\n\nHe lifted his hands in surrender, laughed, and headed down the hall. Lini stepped into my office and stood there, quietly.\n\n\"Lini? Did you have something for me?\"\n\n\"Um, yes. I... Maybe I should really knock sometimes.\"\n\n\"Yeah, not a bad idea. What can I do for you?\"\n\n\"I have that information you wanted. Hospitals, private clinics, people we have a professional relationship with that sit on boards; stuff like that. When is Shelly arriving?\"\n\nI smiled. \"Next week. Did you email that stuff over?\"\n\n\"A few minutes ago. You should have it now.\"\n\n\"Thanks. You're the best.\"\n\n\"Happy to help. This is going to be good for you, Michael.\"\n\nI spent the rest of the day making phone calls and looking into nursing openings. Some opportunities might pan out and I called my daughter.\n\n\"Hey, Dad. What's going on?\"\n\n\"I'm going to be emailing you some info. Lini reached out to some people and there might be a few places to send your resume.\"\n\n\"That's great. Can you thank her for me? I have two interviews set up, but I'll take any help I can get.\"\n\n\"Yeah, sure. Uh, listen... you sure you don't want me to fly there and drive back with you?\"\n\n\"I appreciate it, but I'll be fine. I sort of want to make the trip alone, you know? It's weird, but I'm leaving the marriage and the negativity behind me and, well, it's almost like an opportunity to just be with myself and do some thinking.\"\n\n\"Sure. I get it. If you change your mind...\"\n\n\"I'll let you know, Dad.\"\n\n\"Okay. I'll let you get back to what you were doing.\"\n\n\"Talk to you later.\"\n\n\"Shelly?\"\n\n\"Yeah?\"\n\n\"I, uh, I'm really glad you're coming.\" Why was it so hard to say what I wanted to say?\n\nShelly paused before replying. \"I love you too, Dad.\"\n\nShe knew.\n\nI was in Lini's office two days later.\n\n\"So, I should be back by three. I'll have my cell if you need me.\"\n\n\"Going to the venue? I have a tape measure if you need it.\"\n\n\"Seriously? Yeah, that would be great.\"\n\nShe gave it to me and I headed back to my office. Stopping, I waited outside my door when I heard Leia's voice. She was in there talking to someone.\n\n\"What sort of name is Haliaka?\"\n\n\"It's Hawaiian. What sort of name is Leia?\"\n\n\"It's... Alderaanian.\"\n\n\"I see. Well, it's a lovely name.\"\n\n\"Thanks! I like yours, too. Are you friends with Mr. Mike?\"\n\n\"Yup. How about you?\"\n\n\"Yup.\"\n\nHaliaka laughed. \"Well, it's good to know he has friends.\"\n\n\"Are you his girlfriend?\"\n\n\"I...uh, I guess so.\"\n\n\"That's good. He's friends with my mom's boyfriend. Do you know Alex?\"\n\n\"I do. He's very nice. Are you here alone, Leia?\"\n\n\"No, I'm here with Uncle Jimmy. We're going out to the place where the concert and Santa will be. We have to figure out where everything is going to go. I brought chalk. Wanna come?\"\n\n\"Well, I--\"\n\nHaving eavesdropped long enough, I walked in. \"Please? We'd love to have you.\"\n\nShe checked her watch. \"Well, let me call Lou and tell him I'll be taking off the afternoon.\"\n\nSo, Leia and I were joined by Jimmy and Haliaka as we drove over to the university and measured and took a look at the floor plans from Ethan. Leia was very serious about everything and marked off where things should go with her water-soluble chalk.\n\nWe had a bank of five porta-potties to place, the riser, the stanchions, the backdrops, a secure place to store all the gift bags that held the candy canes, Thin Mints and stuff, the Santa chair and a dozen other things that Leia carefully marked off, the tip of her tongue sticking out of the side of her mouth as she carefully drew on the cement.\n\nHaliaka seemed enamored with her, often getting down on her knees and helping with the chalking. Some students walked by and asked Leia what she was doing. She explained in detail. Laborious detail.\n\n\"Well, that's the cutest thing. Um, is that Jimmy Reilly?\"\n\n\"Yeah, he's my uncle.\"\n\n\"Will he be here with Santa?\"\n\n\"He's a candy helper. He'll be handing the bags to the elves who will give them to the kids.\"\n\n\"Really? Does Santa need any more elves?\"\n\n\"Um, I don't know. Baylee's mom is going to help out. I can ask Mr. Mike if we need other people. He's not Santa. That's not what I mean. He'd just know. He's definitely not Santa. They're different people.\"\n\nOne of the girls laughed lightly. \"No worries. We won't blow his cover.\"\n\nI walked a little closer. \"Hey, I'm Mike Acton. If you're going to be free, we can use some help. I'll get you good tickets to the show if you want to help out with the kids.\"\n\nI gave them my card and told them to reach out. They kept staring at Jimmy, whispering to each other, and finally left. I'd forgotten what that was like. Thankfully, Jimmy had settled down and seemed happy to be a steady professional and wasn't looking for groupies or the rock star life.\n\nA few days later I was pacing in my backyard. I picked up the phone to call Shelly half a dozen times but forced myself to put it down each time. When she finally called I almost leaped out of my skin.\n\n\"Hey, honey. Everything okay?\"\n\n\"Sure is. I'm about half an hour out. Just wanted to give you a heads up.\"\n\n\"Oh, okay, sure. I was just taking a nap. Honk when you get here.\"\n\n\"Napping?\"\n\n\"Napping. I'm old, remember?\"\n\nShe laughed. \"Okay, see you in a bit.\"\n\nSitting down on the couch, I tried to look calm and relaxed. That lasted about thirty seconds. Going into the kitchen, I made a couple of sandwiches, grabbed two waters, and stood at the island, and watched the door while waiting. A few minutes later I gave in and just went out and sat on the porch.\n\nCool and collected could wait for another day. My daughter was almost here.\n\nI kept checking my phone to see if I'd missed any texts during what I was sure was the intervening five hours. It was actually only twenty minutes before she pulled into the driveway. Running wasn't dignified, so I jogged quickly down and had her in my arms as soon as she stepped out of the car.\n\n\"Welcome home, Shelly. Welcome home.\"\n\n*****\n\nGetting some Windex, I cleaned the frame that had a picture of me and Shelly at Disney. It went back on my desk and I looked at it, moved it a little to my right, and looked at it again. Getting up, I walked to my office doorway and looked again.\n\nNope. Not good enough. I moved it farther to the right and tilted it towards the door. After checking again, I realized it was perfect.\n\n\"Knock-knock!\" Lini poked her head in the doorway. \"Shelly didn't join you?\"\n\n\"At the office? No, she's an adult, Lini. This isn't bring-your-daughter-to-work day or something. She's meeting a recruiter.\"\n\n\"If she wasn't, would she be here?\"\n\n\"Um... Yeah.\"\n\nShe laughed. \"For bring-your-daughter-to-the-studio day?\"\n\nYeah, as dismissive of the idea I was, it was a front. I would have loved to have had Shelly at the studio. I chuckled, which was odd. Usually, I'd pretend to be irritated.\n\n\"What's going on?\"\n\n\"Ethan Poplin called. He said that he has the chair ready with the upholstery and wants to know if you'd like to check it out.\"\n\n\"Great. I'll call him back. Thanks. Hey, Lini, how fat do some of these kids get? I mean, chairs don't break and shit, right? And kids don't puke on Santa or wet themselves, do they?\" I paused for a second. \"I'm overthinking this, right?\"\n\nShe shrugged. \"I know as much about being a Santa as you do.\"\n\nNodding, I leaned back in my chair. \"Okay. Thanks.\"\n\n\"Nice photo, Michael. Get some more.\"\n\nShe left and I realized she was right. My office needed more zip. It was spartan and lacking in personality. Like many things in my life, it was a tool to help me kill time and make it from one day to the next. It was uncomfortable thinking about how empty my life was.\n\nI picked up the phone and called Haliaka. \"Hey, you free for lunch?\"\n\n\"I am, but shouldn't you be spending time with your daughter?\"\n\n\"We will, but not until dinner. She's meeting a recruiter, getting her resume printed and stuff like that.\"\n\n\"In that case, sure. What time?\"\n\nStopping by Lini's office on my way out, I poked my head in.\n\n\"Heading out for lunch. I'll be back by two.\"\n\n\"Tell her hi for me.\"\n\n\"Who?\"\n\n\"Don't play dumb, Michael. It's not a good look.\"\n\nShaking my head, I walked out. I was way too predictable.\n\nPulling into the parking lot, I saw Haliaka's car. I checked my watch, was glad I wasn't late and headed into the cafe. She was at a two-top and stood up as I walked over.\n\nWe kissed and she spoke as we were sitting. \"I took the liberty of ordering drinks.\"\n\n\"Yeah?\"\n\n\"Yes.\"\n\nThe waiter came over with an iced tea for Haliaka and a birch beer for me. I smiled.\n\n\"How'd you find a place that had birch beer?\"\n\n\"One of our accountants brought in lunch from here and had one. I knew we had to try it.\"\n\n\"Well, that's a nice surprise. Thank you. Lini says hi.\"\n\nShe put down her menu and looked at me. \"You seem happy, Michael. Relaxed.\"\n\nRaising my eyebrows, I shrugged. \"I guess I am.\"\n\n\"Knowing your daughter was coming has been good for you.\"\n\n\"She's not the only reason. Leia thinks I'm not as grumpy because of my girlfriend.\"\n\n\"Is she right?\"\n\nI held up my thumb and index finger, keeping them close to each other. \"Maybe a little.\"\n\nShe lightly kicked me under the table.\n\n\"Okay, maybe more than a little.\"\n\nHaliaka smirked. \"That's what I thought.\"\n\nI passed a framing store on the way back, turned around, and pulled in. I browsed for a while thinking of what would go well in my office. As stark as it was, there was no concern about clashing with any existing motifs or aesthetics. I decided to put up photos of Charlotte, Alex, Shelly, and maybe one of Leia and Jimmy playing together.\n\nLeaving the office at 4:45, I got home a few minutes before the delivery arrived. I tipped the kid well and thanked him.\n\n\"No problem, Mr. Acton. The chef said to keep it in the bag until twenty minutes before you're ready to eat and then put it on a baking pan and in the oven at 325. It'll crisp back up.\"\n\n\"Tell him I said thanks.\"\n\nLeaving the bag I'd prepared on a chair at the table, I got the salad ready, checked my watch, and spread the chicken out on the cookie sheet. Shelly arrived soon after. We made small talk about her day and she showed me one of her resumes.\n\n\"Looks great! Can you put the plates on the table?\"\n\nMy hands full of bottled water, napkins, and the creole mustard sauce, I made my way over and put everything down.\n\n\"What are we having?\"\n\n\"It's a surprise. Think Times Square.\"\n\nShe wrinkled her nose. \"We're having dirty-water dogs?\"\n\nLaughing, I went back for silverware. \"Nope.\"\n\nPulling the chicken out, I put it on a platter, carried it over, and sat down.\n\n\"Is...is that Planet Hollywood's Captain Crunch Chicken?\"\n\n\"Yup. It was your favorite, remember?\"\n\nIt was like she was trying to fight against smiling. \"Dad, I was ten.\"\n\n\"And you loved them. Besides, you're still my little girl.\"\n\n\"You're such a goof.\"\n\n\"So, you're saying you don't want what's in the bag?\"\n\nNarrowing her eyes, she looked at me. \"You're going overboard. What did you get?\"\n\nI began reaching over. \"Look, if you don't want it--\"\n\nShelly quickly grabbed the bag and opened it to find the custom M&M's with her name on them.\n\n\"Dad...\" She was blinking rapidly. Fuck.\n\n\"It's... We had such a great time that weekend. Planet Hollywood, M&M's World, and then the circus at Madison Square Garden. I thought... I don't know what I was thinking. Don't... We can just grab a pizza or something. Was this too much?\"\n\nShe shook her head and it took a moment or two for her to respond. \"No, it's perfect. A bit over the top, but I could use that right about now. Things haven't been so great. It's perfect. Thank you.\"\n\n\"We're not done yet. I have an elephant and twenty-five clowns in the backyard.\"\n\nShe laughed and a warmth settled in my stomach, radiating outward. Shelly was here, at my house. In my life.\n\nI felt different; full somehow. Less empty, maybe. For the first time in a long time I felt right. It was Shelly, but not just Shelly. Haliaka was part of that equation. Two women had entered my life and I felt like I was living again.\n\n*****\n\nIt took a week before Shelly and Haliaka met. I don't know what sort of women my daughter thought I'd dated in the past, but she was very impressed by Haliaka and seemed surprised. It was a little annoying.\n\nThey made plans to get together to go shopping. I thought it was an excuse for Shelly to get Haliaka alone and quiz her, which was sort of cute. Haliaka was in her mid-fifties and I was sixty-two. We were a bit past the stage of careful screening of partners by friends and relatives.\n\nI walked Haliaka to her car when she was leaving. \"Hey, do me a favor? If I give you my card, can you put Shelly's stuff on it when you go out?\"\n\n\"Uh, are you sure about that? She's not fourteen. Shelly's a grown woman. I know you have all those dad instincts kicking around, but she might be offended.\"",
        "\"Okay. Good point. Let's try and if she says anything, tell her it's an early birthday present. It's coming up in November.\"\n\nShe smiled. \"Will this actually be a birthday present?\"\n\n\"Of course. It won't be the only birthday present, but she doesn't need to know that.\"\n\nHaliaka laughed lightly, stepped in, and rested her head on my shoulder as she hugged me for a moment.\n\n\"I like her, Michael. You did a fine job with her.\"\n\n\"Mostly her mom.\"\n\n\"Regardless, she's a good woman. She cares about other people and walks the walk. Much like her father.\"\n\nPlacing her hands on the back of my head, she pulled me in for a kiss.\n\n\"I'll call you tomorrow. What time will you be at the studio?\"\n\n\"About ten.\"\n\nEthan needed to see me. He wanted final approvals for the things he was making. I told him that if he was happy with it, so was I, but he insisted on going over everything. We arranged to get together while Haliaka and Shelly were shopping. It was a Saturday morning and I met them at the reception desk.\n\nEthan, his daughter, and her boyfriend entered. I was surprised to see the kid.\n\n\"Hey, Gus. Thought you were at college.\"\n\n\"I took the bus back.\"\n\nShannon smiled and leaned into him when he said that.\n\n\"Yeah? Cool. I need some more of those flip book things. Talk to me before you head out.\"\n\nHe nodded. I knew I was taking advantage. Gus wasn't sure how to handle me. He made stick-figure animation things that were crazy detailed and set them to music. He didn't want to make any for me originally and to be honest, I didn't give a crap about them, but he was a good kid and needed money. I showed a couple to some bands and got them to order a few. They overpaid drastically and he was getting money to pay for college. So, fuck it. I pushed him a little and everyone was happy.\n\nWe went back to my office and our receptionist held down the fort for a while. Ethan had his laptop and showed me videos of the finalized chair, huge backdrops made of plywood that had painted scenes with Frosty and reindeer and shit, and the smaller collapsible backdrops.\n\nEverything looked much better than I thought it would.\n\n\"Looks great. Get me a total and I'll write you a check. Can I take you guys to lunch? Least I can do.\"\n\n\"No, thanks though. We have a gig at the VFW.\"\n\n\"Yeah? Good for you. You're good people, Ethan.\"\n\n\"Not really. We enjoy it more than they do.\"\n\n\"I doubt that. Alright. Thanks again. We'll talk before the event.\"\n\nI turned to Gus. \"You know Charlotte and the Bobcats? I want to get one of those things for her and one for the Santa stuff. Can you make one with Santa on his sleigh flying in and landing in front of the venue? I'll have Leia do some voice over and get you the audio. Maybe throw Frosty or Rudolph in it. I'll pay the same as you've been getting.\"\n\n\"Mr. Acton, I'm--\"\n\n\"It's Mike and Leia's eight years old. I'm having her do the voice over and we're going to put that thing everywhere. You gonna break her heart, Gus?\"\n\nHe looked at Shannon and then back to me. \"No, sir. I'll squeeze it in.\"\n\n\"Excellent!\"\n\nNeither Haliaka nor I were comfortable with her staying over while Shelly was living with me. I was sure that would change soon enough, but it just felt... weird. That slowed things down for us for a while, but that was okay. I wasn't a teenager. Self-control wasn't an issue at my age.\n\nShelly settled in and we learned about each other's habits. I slept when I was tired. My hours at the studio were all over the place, so I had no set schedule. Shelly was in her room by ten every night like clockwork. She ate things at their normal time. I'd eat pancakes for dinner.\n\nWe learned and we adapted.\n\nShe hadn't mentioned an apartment and I certainly wasn't going to bring it up. When she tentatively asked about putting up some paintings or photos, I was all for it. If she felt at home, she might stay longer.\n\nShe called me at the studio on a chilly Tuesday morning.\n\n\"Hey, honey. What's up?\"\n\n\"I was hoping I could buy you dinner tonight. Maybe Haliaka, too.\"\n\n\"Um, sure, but I don't mind paying.\"\n\n\"Well, that's nice but not necessary... seeing as how you're talking to the latest neonatal nurse at the Special Care Nursery at the Parkview Medical Center!\"\n\n\"What! When did this happen?\"\n\n\"About two minutes before I called you. I start Monday.\"\n\n\"I'm so proud of you! That's amazing. We're definitely going out, but I insist on paying.\"\n\nShe laughed, \"Okay, Dad. Choose a place and text me. I'll meet you there.\"\n\nHaliaka didn't want to join us until I told her it was Shelly's idea. We went to Blue Ocean for sushi. I felt like a weight had lifted. She had a job in her field, a reason to stay in Pueblo. It was a great night.\n\nWhen we left, Shelly asked me to hold on a second. She jogged over to her car, grabbed an overnight bag, and came back.\n\n\"Here you go.\"\n\nI looked at her quizzically. \"What's this?\"\n\n\"Toothbrush, some clothes, clean socks. We spoke earlier. You're staying at Haliaka's tonight. Have fun.\"\n\nTurning to Haliaka, I waggled my eyebrows. \"Well, a sleepover sounds like fun. We going to tell ghost stories?\"\n\n\"The ghosts won't be the only thing moaning.\"\n\nI turned red and my daughter burst out laughing.\n\nWe met at her house. It was small but neat and in an upscale neighborhood. Like me, she kept everything organized and clean but her home also felt lived in. There were photos of Haliaka and her son everywhere and a few of her with an older woman who I assumed was her mother.\n\nShe poured herself some wine and I had water. Handing me my bottle, she sat to my side.\n\n\"Big day. When did you find out?\"\n\n\"She called me right after she got the offer. Yeah, it feels weird in a good way. Like it's finally hitting me that she's not here for a weekend or a vacation or something. This is it. Pueblo is her home.\"\n\nWe sat and spoke for an hour or so, Haliaka enjoying two more glasses of wine. She eventually stood up.\n\n\"Alexa, shuffle songs by Harry Connick Jr.\"\n\nShe reached out a hand to me. Smiling, I stood. We danced in her living room, keeping the steps short and tight. Eventually, the dancing slowed and shifted into swaying in time with the music. Her breasts pushed against me and my rising interest pressed back against her waist.\n\nHaliaka reached up and kissed my neck. I pulled her a little closer and her lips found my collar bone. When I kissed her just below the ear she looked at me, eyes dark and hooded, a small smile forming. Leaning down, my lips met hers.\n\nWe stopped our swaying as we kissed. She tasted of wine, warmth, and promises. Eventually, she pulled back and took my hand. I was following wherever she led, that was a given. More dexterous than I was, she began unbuttoning her blouse with her left hand. We lingered at the doorway to her bedroom as she draped her arm over my shoulder and tilted her head up to kiss me again.\n\nShe was wearing a powder blue bra that had become visible as she opened the buttons. Moving into her room, I reached for her blouse but she gently pushed my hands away. Smiling, she backed up a step and slowly undid a button, then another, then the last.\n\nRunning my tongue over my upper teeth, I could only stare. She shrugged the blouse off the top of her shoulders but kept it on. Haliaka must have seen something in my face because she laughed lightly and let it fall to the ground.\n\nPushing the skirt down, she stepped out of it and stood there in just panties and bra. Sucking in my top lip, I gazed at her, mesmerized by her beauty. I felt nervous and almost intimidated. She was and had everything I wanted. My mouth went dry as I took in her curves.\n\n\"You're not just going to stare, right? I want to see Mike become Big Mike.\"\n\nChuckling, I rushed to get my shirt over my head and on the floor. As I whipped my pants off, Haliaka slowly turned around.\n\n\"Help me with this?\"\n\nStepping close, I unhooked the bra and pulled her to me, my hands reaching around and cupping her breasts, holding the bra in place. Kissing her neck, my thumb wound its way around her hardened nipple. She turned her head and our lips met again. She bumped me with her ass.\n\n\"Give me some space.\"\n\nI backed up as she slipped her thumbs into the sides of her panties and slowly shimmied them down, down, down to the floor. Staring again, I pulled off my boxers. Big Mike was at full attention as she bent over, ass towards me with glimpses of heaven shining between her thighs. I shivered. She was beauty and grace, seduction and femininity and she was sharing all of that with me. I had no idea how I deserved that, but I wasn't arguing.\n\nHaliaka lay back on the bed and I slowly got to my knees. Kissing my way up one thigh, I gently pushed the other as she opened before me. It took me a while to reset at my age, but I had stamina. Taking my time, I made sure she was ready for me before lifting her legs onto the bed. Getting to my feet, I followed and knelt between her legs.\n\nI was staring into her eyes when we became one. I could barely bring myself to blink as I watched her, enthralled by the expressions on her face and the gasping sounds that escaped her lips. It was only when we were finished, when she'd fallen asleep in my arms and I couldn't keep my eyes open any longer, that I finally looked away.\n\nI woke to the smell of bacon and coffee. Laying there, I shifted and felt my back crack. It took me a few minutes to get up and grab the bag Shelly had packed for me. Slipping on my old boxers, I poked my head into the kitchen before heading to the shower.\n\n\"Can you blow off work today?\"\n\nShe frowned. \"Sorry, no. Can you come back tonight?\"\n\n\"Let me check my schedule. Okay, I checked. I'll be here by seven.\"\n\nShe smiled at my foolishness and I watched her in her nightshirt as she stirred the eggs.\n\n*****\n\nJimmy was doing a great job of keeping the audience up and hyped between sets. Two years ago he would have been drunk and in his limo stalling his rock-star intro and keeping the crowd waiting. I'd been in the business for a long time and this was one of the biggest turnarounds I'd seen. I was damned proud of him.\n\n\"Alright! That was great. The Poplin Family Jug band with special guest Baylee on the tambourine! Let's give them a big hand. A quick reminder, Santa will stay late for photos with kids of all ages, but the queue visiting with Santa and the goodie bags are for kids ten and under only.\"\n\nSome fuckheads booed and I laughed. Until then Philly was the only place that I knew of that had the balls to boo Santa. Jimmy looked backstage, saw what he needed to see, and nodded.\n\n\"Okay, I don't know about you all, but I'm psyched. Ladies and gentlemen, a true legend of rock, Charlotte from Charlotte and the Bobcats will be performing with my favorite guitarist as they crush 'Bad Reputation.' Get on your feet for Charlotte and Leia.\"\n\nEthan Poplin came out and sat at the drum kit and his daughter played bass, but they were set way back. Jimmy moved off stage and I realized I couldn't just stand out there in the crowd.\n\nI was stunned. Pushing some people aside, I quickly moved towards the doors, flashed my \"All Access\" pass at security, exited, ran to the doors leading to backstage, flashed the badge again, and went in. Her dark hair had silver highlights and she was wearing a black tee-shirt that said: \"Screw The Queen\" and black leather pants.\n\nSeeing me, she winked and gave a little wave. Charlotte was playing up the comparisons people always made between her and Joan Jett. With more swagger than half the Rock and Roll Hall of Fame, she grabbed the mic.\n\n\"How ya doing, Pueblo!\" She paused as they applauded. \"What the hell was that? How ya doing, Pueblo!\" Charlotte put her hand to her ear as if trying to hear the audience and they exploded. \"Alright! That's what I wanna hear. Everyone know Leia? Wave at the folks, Leia! Leia and I want to dedicate this to my brother, Big Mike. We're not related by blood, but he's a part of my soul. Mahalo, Mike.\"\n\nI had the biggest grin on my face as I rocked out with them while they played. I may have gotten some dust in my eyes or maybe it was allergies, but it wasn't anything more than that. At all.\n\nLet's face some facts, Leia was more enthusiastic than good, but that's part of why they loved her. Most of the people in the audience had likely seen her videos and stuck with her despite the mistakes. Jimmy was playing along with her, note for note and off to the side. Even if he hadn't changed, I would've cut him slack just for how much he loved that kid.\n\nCharlotte came to tear down the house and she was ripping it up as she changed the lyrics into \"I don't give a darn about my reputation\", hip-checking Leia, leaning on Jimmy, and making the audience love her.\n\nThey segued into \"I Love Rock and Roll\" and Leia had fewer missteps. She'd peel her eyes off of Jimmy once in a while and look at the crowd and whenever she looked back she was grinning like mad. They had stripped down the song for her but it still worked.\n\nCharlotte grabbed a towel, wiped her brow, and then tossed it to the audience.\n\n\"Okay, love Joan, but that's enough. Tonight, you people are the envy of metalheads worldwide. Jimmy, you're not part of this one. You're standing in the shoes of a giant. Besides, you're the audience for this one.\"\n\nJimmy looked confused, but he walked to stage left, jumped down and someone brought him a chair. Some fans shook his hand and patted him on the back.\n\n\"Yup, Jimmy's out but we have a decent replacement. Alright, let's hear it for guitar god, Alex \"Fingers\" Franzietti! Now, I'm no Hetfield, but we're gonna give this a shot. Leia has been practicing her fingers off and we're gonna play \"The Puppet Song\" for the world's best uncle.\"\n\nThey launched into a simplified version of \"Master of Puppets\", Jimmy's favorite song. Leia's tongue was sticking out of the corner of her mouth as she concentrated and Alex made sure to do the heavy lifting. When I saw Jimmy wiping away some tears as he watched his niece, I took some photos with my camera. Always good to have blackmail material. Maybe I'd send him a copy. Maybe.\n\nI hugged Charlotte as she came off stage. \"How did you get here? I'm... That was amazing! How long are you in town for?\"\n\n\"Alex worked it out. Leaving tomorrow, but we can go out tonight, get some dinner, and-- Shelly? Is that Shelly? C'mere, girl!\" She wrapped my daughter in a hug. \"You look amazing. I haven't seen you, what, a decade? Longer?\"\n\nWe spoke for a few minutes before I did a half turn. \"Charlotte, this is Haliaka. Haliaka, Charlotte.\"\n\nCharlotte raised her eyebrows at me. \"Wow, your tastes are improving. Great to meet you, Haliaka. Love your name.\"\n\nAs the show ran down, I was changing. \"Ho, ho, ho!\" I cleared my throat. \"Ho, ho, ho!\" Yeah, I had this.\n\nI stuck my head out and saw Alex helping to breakdown equipment. \"Hey! Get changed, elf-boy.\"\n\nHe flipped me the bird and walked to another room to change into his costume.\n\n\"Alex!\"\n\nHe yelled back through his door. \"What?\"\n\n\"Thanks.\" Having Charlotte there meant the world to me.\n\n\"Whatever. Don't make me wear this stupid suit again and we're even.\"\n\nChecking my watch, I took three deep breaths and stepped out of my room. Security walked me out the doors and around the building. I stopped dead in my tracks.\n\n\"What the fuck?\"\n\nThere had to be five-hundred people waiting. I was expecting seventy-five or a hundred if we got lucky. Okay, a bunch were parents and grandparents, but it was crazy. I couldn't handle that many people. We'd have to cancel or something.\n\nI looked at one of the security guys and he just shrugged. Frozen, I remained standing there. A small hand slipped into mine.\n\n\"It's okay. I was pretty scared today, but if I looked at Uncle Jimmy it sort of wasn't too bad. If you get scared you can look at me, if you want.\"\n\nLeia was in her little elf costume.\n\n\"Honey... That's a lot of people. A whole lot.\"\n\n\"Yeah. Miss Haliaka is over by your chair.\"\n\nFuck, did this kid ever know how to play dirty pool. She's going to be a terror in ten years. Translating that from Leia language, that meant \"Sack-up old man, your girlfriend is waiting for you.\"\n\nI squeezed her hand. Turning to the security guy, I asked for a favor.\n\n\"Hey, can you find Jimmy Riley and tell him I need him to go to Candy Avenue on Union and tell them we need four times what we bought. No, five times. And we need it immediately. Tell him to call ahead.\"\n\nLooking down at Leia, I tried to smile. \"Okay, honey. Let's do this.\"\n\nAs we turned the corner and I stepped up on the riser everyone cheered. It was a bizarre feeling. Shelly was there dressed up in the same costume as Leia and Alex. Haliaka was with her son and was our official photographer.\n\nIt was okay. We were good. I could handle this. Squeezing Leia's hand again, I turned to the crowd and finally got it right. This was life and I was living it.\n\n\"Ho, ho, ho! Merry Christmas!\" It sounded a lot more confident than I was feeling. Fake it until you make it. With an eye on the expectant crowd, I made my way over to the chair.\n\nI waved at everyone and sat down. It felt good; both sturdy and comfortable. I scanned the crowd for fat kids but thought I'd be safe. Shelly smiled and gestured towards the stanchioned line. When I nodded, she headed over, removed the red and green felt rope and escorted over a man, a woman, and a cute little girl.\n\nShelly held the girl's hand and walked her up to me. \"Santa, this is Eliza.\"\n\n\"Hello, Eliza! Merry Christmas. Did you bring a list with you?\"\n\nShe stared at me blankly and then turned to her mother. Eliza then looked back at me and I couldn't read her. Frustration? Fear? Disappointment? I didn't know. What I was sure about was that I was a total fraud.\n\nThe very first kid and I was fucking this up. The event was a colossal mistake. Why the fuck did I think I could pull this off? I'm the last person who should be repping as Santa. Maybe we could just pass out the candy and Leia and Jimmy could play some acoustic shit.\n\nDon't cry, kid. Please don't cry.\n\nThe woman spoke in an accent. \"I'm sorry, Santa. We just moved to Pueblo. Eliza doesn't speak much English. I'll tell her what you say.\"\n\nI tried for jovial, but my laugh sounded false even to my own ears. \"That's fine.\" Picking up the girl, I put her on my knee.\n\n\"Hola, Papa Noel. He sido muy bueno.\"\n\nMy heart started beating again. I'm not going to lie, this made my day. It was straight out of A Miracle on 34th Street. Managing tours in SoCal and Texas for years, I had to learn serviceable Spanish.\n\n\"Sab\u00eda que no estabas en la lista de traviesos. \u00bfQu\u00e9 te gustar\u00eda para Navidad, Eliza?\"\n\nI would have thought it impossible for a kid's eyes to get that wide. She reached over and gave me a huge hug and started babbling on about something called a Switch and some Barbies. Her father put his arm around his wife's shoulders and they both had smiles that you only find from a parent looking at their child.\n\nHaliaka took our picture, Leia gave Eliza a bag with candy canes and Thin Mints and I saw Alex come out in his elf costume and walk over to Shelly. I laughed when I saw him and turned it into a ho-ho-ho.\n\nLooking over to the line, I noticed Lini with her nieces and nephews. You couldn't pry the smile off my face with a crowbar. I was there with the people I loved and who loved me back. For forty years I'd been searching for a place to belong. I should have been searching for people I could love.\n\nI found them, they were with me, and that made Pueblo home.\n\n*****\n\nIt was the day before what they were calling the Second Annual Santa Concert. Haliaka and I were going over everything outside the venue. I'd sent the volunteers to the diner and since I was paying they were happy to go.\n\nI pushed a wreath with my foot as we looked around.",
        "\"Yeah, so we smartened up a bit this year. Every kid is getting something again, but it's already in the stockings, so we just hand it to them and they're off. They can hang the stocking up and wait for the real big guy on Christmas Eve.\"\n\nShe smiled and I felt just a little bit warmer on that chilly night. \"Good idea, Mike.\"\n\n\"Yeah, we're not that bright but we do learn. Do me a favor, check the stocking out, and make sure everything is in there.\"\n\nI tossed one over to her. She caught it and stuck her hand in.\n\n\"It's empty.\"\n\n\"No, keep digging.\"\n\nShe did. \"Oh, got it. It's pretty small, you think...\"\n\nHaliaka stopped speaking as she pulled out the small box. I got down on one knee. When she stood there frozen, I spoke up.\n\n\"Open it.\"\n\nShe did.\n\n\"Mike... I...\"\n\n\"I was sorta hoping that, maybe, well, what was missing is Mrs. Claus. You think you might want the job?\"\n\nWe were in a semicircle of Douglas firs, the sky was cloudless and the moon was bright. It felt like we were alone in a world made just for us. She used her thumb to wipe away a tear as she spoke.\n\n\"Any perks?\"\n\n\"You get to sleep with a co-worker.\"\n\nShe laughed. \"I'm in. Put it on me.\"\n\nMy fianc\u00e9e held out her hand and the ring, and I slipped it onto her finger.\n\nHands on her cheeks, I kissed Haliaka and she kissed me back.\n\n\"Love you, Haliaka.\"\n\n\"Love you too, Santa Mike.\"\n\n*****"
    ],
    "authorname": "Bebop3",
    "tags": [
        "gus and shannon",
        "alex and em",
        "big mike",
        "leia",
        "no ninjas",
        "poplin family jug band",
        "pueblo",
        "santa event 2020"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/santa-mike"
}