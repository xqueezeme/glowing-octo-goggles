{
    "title": "Adeline",
    "pages": [
        "Adeline was about to start dinner, shooing her little brothers out of the room when her father came in the door. He shook snow off his coat before hanging it up near the fireplace.\n\n\"Nothing out Papa?\" she asked as he hung his rifle up on the pegs above the door.\n\nHe grunted sourly and sat down, looking grimly at the fire. After a moment, before she had gotten anything out, he spoke up. \"Get dressed to go into town, Adeline,\" he said gruffly.\n\n\"Papa?\" she asked, confused. It was late to be going into town, it would be dark before they got back!\n\n\"Hurry up. And pack up your things, you'll be staying a couple weeks with Linda Allen till her babe comes.\"\n\n\"Oh... ok. You sure? Hattie Maniford is...\"\n\n\"You heard me!\" he snapped irritably. \"Hattie is out of town, ain't no one else to midwife.\"\n\nAdeline hurried to pack up her few belongings, feeling a little stressed. \"Who told you?\" she called from her little alcove in the loft. \"Did you come across someone while hunting?\"\n\n\"Hurry your ass up girl! I ain't got all night!\"\n\nAdeline winced. He was in an unusually foul mood. \"Levi, Daniel, you boys behave now,\" she said softly. \"There's bread in the tin, not too much. You'll need enough for tomorrow too. Levi, you know the cookin' and cleanin' by now, it'll be on you while I am gone.\"\n\n\"Will you bring us back a peppermint?\" Daniel asked excitedly.\n\nAdeline sighed and ruffed his hair. \"Probably not little man, they are a whole penny for three. I don't have a penny, do you?\"\n\n\"Maybe you could trade off? Make him some bread?\"\n\n\"He has a wife,\" she laughed. \"Scoot on now, I have to go. I will be back quick as I can, ok?\"\n\nShe climbed down and grabbed her coat. Her father wouldn't look at her as they left and she felt nerves trying to make her hair stand on end as she climbed on their horse behind him. \n\nSomething was wrong.\n\nThe trudge was slow through the thick snow and Adeline felt trepidation climbing. Joseph Mason wasn't normally a quiet man, or a terse man. He was both now and that worried her.\n\n\"Papa? Maybe while I am in town, I can see about finding some work?\"\n\n\"Winter is coming in hard, Adeline, now is the time everyone is tightening their belts. No one will be hiring for anything.\"\n\n\"Maybe I can cook at the inn? Or mend clothes? Something.\"\n\n\"You know what day it is, Adeline?\"\n\n\"Umm? Not sure,\" she laughed. \"Has to be Christmas coming soon though. You think we'll get much more snow?\"\n\n\"It's December 15th.\"\n\nOh. \n\n\"My birthday? Is that what this is about?\" she asked, feeling a little more sick now.\n\n\"A woman grown now, Adeline.\"\n\n\"So I am. I don't feel any different.\"\n\n\"You never wake up one day feeling like it suddenly changed,\" he said, but it had a dark tone. She knew better than to keep asking questions. Nothing good would come of it. \n\n\"The snow is beautiful,\" she said instead, changing the subject. \n\nHe didn't comment or look around. \n\nAdeline sighed and went quiet, riding the last hour in silence. She said nothing as they rode past Linda Allans place and into the town proper. He reined in in front of the saloon and she felt even more sick as he got down and tied Lady off at the post. He reached up and she let him help her down before leading her inside. \n\nThe inside was full and smoky and loud and several dozen men turned to watch them come in. Her father led her to a corner and pulled a chair away from a table, setting it in the corner. \"Take your coat off, put it down next to you with your bags,\" he demanded, staring at the wall.\n\n\"Papa?\"\n\n\"Now, Adeline,\" he said sourly.\n\nHe turned and left as she began pulling her coat off. He went and leaned across the bar, speaking to the barkeeper in a low voice. The large man leaned across the bar, listening to her father, then turned to look Adeline over before nodding to her father. \n\nShe sat down as her father turned from the bar and started going table to table to speak quietly. Every single man at every table turned and looked at her as he went around.\n\nA woman stepped off the wall and approached her father, speaking to him quickly. He cut her off angrily and the woman seemed to take offense to whatever he said to her. \n\nAdeline was starting to feel genuinely sick to her stomach. She eyed the door and wondered if she could just walk away. She was eighteen now. He had no real claim to her if she wanted to leave.\n\nShe looked back at her father and he was off against the other wall now and over a dozen men were up from their tables, gathered around him as he spoke. \n\nOne man broke off from the group and approached her, cornering her. She stood and clasped her hands over her stomach worriedly. His eyes were learning and lecherous as he sneered down at her. \"You're 18?\" he asked in a slick, oily voice.\n\n\"Today,\" she answered in a whisper.\n\nHis lip curled and he reached out, cupping her breast. \n\nAdeline jerked back with a yelp of shock and her hand shot out, slapping him across the face. \"How DARE you?\" she cried in horror.\n\nThe man snarled and drew back his fist, but another man caught it before he hit her.\n\n\"Louis, now now,\" the new man chided. \"You deserved that. And you've no right to discipline her.\"\n\n\"Yet,\" Louis spat angrily, jerking his arm away from the new man.\n\nHe left back to the group and the other man turned and looked Adeline over. \"You are a slight thing, aren't you? Your father claims you are quite a cook and you can...\"\n\n\"Why would you care?\" Adeline demanded heatedly. \"Why am I here? What is happening?\"\n\n\"You seem clever enough, girl. I am sure you have it figured out, even if you refuse to admit it yet.\"\n\n\"He has no right to sell me!\"\n\n\"Sell you?\" the man laughed. \"It's a dowry, girl. A father does have a right to ask that. He just happens to be auctioning yours. You upset Louis, I think he means to have you. Punish you for your outburst.\"\n\nAdeline went pale and looked behind him at the group of men. They were bidding, she could see them all going back and forth to her father. Louis was glaring at her as he bid. \"Why? Why would he do this?!?\" she wailed. She pushed past the well dressed man who seemed out of place in this mining town and went to her father. \"Papa! Papa, please! I will be good, I swear! I can find a way to...\"\n\n\"Go sit down!\" her father snapped.\n\n\"Let her stay,\" another man said, catching her arm, then her other arm and pulling her arms wide to hold her out.\n\n\"We want to see what we are getting!\" another man agreed and a hand shot out to cup her breast. After that, hands seemed to come from everywhere, feeling her, holding her, groping her, pulling her. \n\nShe screamed in horrified revulsion as she struggled and several men laughed. She broke down sobbing and there was more laughter.\n\n\"I do love to make a bitch cry,\" Louis said, grabbing her face and turning it to him. \"Forty five dollars.\"\n\n\"Papa, help me!\" she wailed.\n\nThe bids started moving fast as she was pulled and groped and shoved. There was pressure, then she heard a rip as her dress gave way and the hands were fast and viscous ripping it away. \n\nAdeline screamed and threw herself to her knees, hugging herself.\n\n\"Enough!\" a man yelled angrily. \"Two hundred. I dare any of you to try and top it,\" he snarled.\n\nThere was silence and the hands slowed as they stopped yanking on her. \n\n\"Release her, all of you,\" the man said more calmly and she recognized the voice now. The man who had stopped Louis from hitting her. \n\nThe hands left her, one of them pinching roughly before it did. She was shaking and sobbing as a shawl or blanket was thrown over her. Hands on her shoulders helped her up and she let them as she pulled the lace shawl around her. It was the woman who had spoken to her father who was helping her, covering her with her own shawl.\n\n\"Any other bids?\" he father asked, still not looking at her. \n\nNo one answered, all of the men fading back to go back to their seats. The man in the fine clothes stood in front of her father, looking down at him in disgust. \"Mathilde, pay the man. Once you are... paid... you will never enter my establishment again.\"\n\n\"I didn't bring her to be a whore! If you aren't going to...\"\n\n\"Do you really care? Two hundred dollars is beyond your wildest expectations and you know it. Take it and go.\"\n\n\"I meant her to have a husband, not...\"\n\n\"Go before I have you thrown out,\" the man hissed.\n\nHer father went to the bar, where the bartender was signalling him and took his money and left. He never looked back.\n\n\"Papa, please?\" Adeline sobbed brokenly. \"I will be good!\"\n\n\"Hush now, girl,\" the man said gently. \"Mathilde, get her things and show her up to a room. Her own for now. The attic room with the lock, so she feels safe. Girl, go along with her. This is Mathilde, the madam here. Your father said your name, but I was not listening,\" he said expectantly.\n\nAdeline didn't hear, she only sobbed into the woman's arms. The man sighed and waved Mathilde off to take care of her.\n\nAdeline was shown to a tiny closet in the attic with a little cot that was almost too small even for her. She didn't care. There was a lock on the door and she had a little candle and there were blankets on the cot. She pulled her other dress on after pulling off the remains of her old one, then climbed into the blankets to cry.\n\nThe woman had said nothing to her, just led her to the room and set the candle on the tiny table before leaving. \n\nAdeline sobbed, feeling alone and betrayed and humiliated. When the sounds far below began to go quiet and the music stopped, she finally started trying to get her head straight. She would run away! She would take off, head south where they got less snow and there were no mountain mining towns! \n\nShe got up and righted her clothes, then pulled on her coat and wrapped in one of the quilts before easing the lock open on the door and slipping out. She had hardly looked around the large attic room when they had been led up, but now she noticed that someone obviously lived up here. There was furniture like it was someone's office and there was a couch and two tufted sitting chairs. There was a dining table on one side with a buffet on the wall that held an assortment of bottles and large platters and bowls. On the other side was a desk and bookshelves with more books than she had seen in her life. It was dim and she couldn't see into the further corners, but she didn't need to. She knew where the door was. \n\nShe slipped to it and put her hand on the handle.\n\n\"It's a bit late for a walk,\" the man's smooth voice called softly. \"And I hope you were not planning on stealing from me so soon, girl,\" he said lightly.\n\nAdeline turned and he was standing up from another tufted chair that was in the corner between two of the bookcases. She wondered if she could outrun him.\n\nNo. He was tall and slender and he looked well able to handle himself despite his fine clothes.\n\n\"You've a mind to run, girl?\" he asked lightly. \"You are aware the snow is falling again. We've had a good three inches just since you got here and it is still falling hard. How far did you think to get with a thin coat and a stolen quilt on foot?\"\n\nAdeline didn't answer, staring up at him wide eyed as he approached. \n\n\"What is your name?\"\n\n\"Adeline.\"\n\n\"I am Daniel.\"\n\n\"That's my baby brother's name.\"\n\n\"A common name, to be sure. Do you know who I am, Adeline?\"\n\n\"You just told me.\"\n\nHe gave her an amused smile. \"A bit flip, aren't you? I am Master Daniel Alecsander. Do you know that name?\"\n\n\"Should I?\"\n\nHe gave her a sardonic smile. \"Probably not. How far out of this town did you live?\n\n\"Over an hour on horseback.\"\n\n\"I did not see you in town, you would not have gone unremarked.\"\n\n\"I know some people,\" she said defensively.\n\n\"Why did your father sell you?\"\n\n\"For the money,\" she answered petulantly. She still felt the sting of it.\n\n\"Do not take a flippant tone with me again, Adeline. Tell me why you think he sold you.\"\n\n\"My mama died last winter. He... went to a dark place for a long time and... things got bad. I think they are worse than he even let on. I think he's afraid he couldn't feed all of us and Levi is old enough now to cook and clean.\"\n\n\"Did he put hands on you?\"\n\n\"Like, to beat me?\"\n\n\"No. Are you still virginal, Adeline?\"\n\nAdeline blushed and backed away from the man. \n\n\"Answer the question!\" he snapped when she started to turn to go back to the little room.\n\n\"There was a boy once... he almost kissed me before papa told him off.\"\n\n\"Kissed you? So you are still virginal?\"\n\n\"Does it matter?\"\n\n\"A great deal, actually.\"\n\n\"Why?\"\n\n\"Do you know how much I can charge to let a man claim your innocence? I intend to get my investment back from you, Adeline.\"\n\n\"You mean... whorin'?\"\n\n\"That is what is done here.\"\n\n\"I won't do it!\"\n\n\"We have men who will pay to let you fight the whole time too,\" he said with a smirk. \"Don't assume you have any choice in the matter, Adeline. You owe me a great deal. You will be working many years to pay off your debt to me.\"\n\n\"Why didn't you let a man take me as a wife?\"\n\n\"Was it Louis's bed you wanted then? A foreman at the mine. He would have afforded you, had I not stepped in. You'd be beaten bloody by now. His first and second wives are both in the ground, you know. The third one ran off. Small as you are, heavy as his hand is, you would not have lasted long. Tomorrow you may speak to some of my girls. They can tell you how it is here, explain things to you. Teach you.\"\n\n\"I don't want to learn anything they have to teach me!\"\n\n\"Your hair... I have never seen hair so curly like that. Is it course or soft?\" he asked, reaching towards her.\n\nShe ducked away from his hand and fled to the small room. His hand on the door kept her from closing it. \n\n\"I am not a man to be refused,\" he said darkly. \"Do not anger me. I only wished to touch your hair, gauge the maintenance level it would need. If you are to be my showpiece tomorrow, I need to know.\"\n\n\"Showpiece?\"\n\n\"The feature. The reason every man near here will be flocking to see you and get his turn with you. None of that now, no crying. Your time will be coveted, Adeline, just look at you. Small, beautiful, a lovely head of hair. Most importantly... small. No matter how many men fuck you, or how often, your little cunt will stay as tight as you are small.\"\n\n\"You are a horrible man!\"\n\n\"Crass, perhaps, but it is the truth. Girls your size are a rare gift in this business. You will learn to speak plainly soon enough. Stand still now and let me feel your hair,\" he demanded, backing her into the little closet.\n\nShe forced herself to stillness as she buried his fingers in her hair, feeling her curls and closing his hands into fists.\n\n\"Buttery soft. Lovely. You are a lovely little thing, Adeline,\" he said, almost breathlessly. He half laughed as he stepped back, releasing her hair. \"I've half a mind to take your innocence myself. Taste you before you are tainted by other men. I've never done that, you know. Touched one of my girls. I had a wife, briefly. She... did not last long,\" he said cryptically with an amused smile. \"Would you like that, Adeline?\"\n\n\"I am not going to let you or anyone else lay a hand on me!\" she yelled, trying to shove the door closed.\n\nHe laughed as he stepped back and let her shut it. \"Do not bother locking it, little one, I have the key. I will be right here, and I have a man downstairs as well. Do not try and slip out again. Goodnight, Adeline. Sweet dreams.\"\n\nShe locked it anyway, but was not surprised when he woke her in the morning with a hand on her shoulder.\n\n\"Come, little one. Come and meet your new sisters.\"\n\nAdeline got up, bleary eyed and sleepy. She had only just fallen asleep finally and was still so tired. \"Sisters?\" she demanded angrily. \"You mean the whores?\"\n\n\"Easy girl,\" he chided, leading her down the stairs with a hand on her shoulder. \"Good morning John! Breakfast smells amazing!\"\n\nAdeline peered up at him incredulously. Whatever was being burnt back in that kitchen did not smell amazing! He led her to a table where 6 young women and Mathilde were already seated and held one of the two empty chairs for her. She started to take the other one but he made a tsk'ing noise.\n\n\"Do not be rude, Adeline. That is my seat. Sit here next to Mathilde. You remember Mathilde from last night? She is the madam here and sort of like a mother to you girls.\"\n\nAdeline looked at the older woman. She was tall and slim, beautiful with her short, white hair. The white hair was deceiving though, she wasn't very old at all. Not old enough to be any of these girls' mothers. If Adeline had to guess, she would put her at an age with Daniel, maybe late thirties.\n\n\"There next to her is Ingrid. She is relatively new as well, but she is picking it up beautifully. That is Olga next to her, she is our prize here, both lovely and exceptionally talented. Emma is also exceptional, if in another way and sought after for different reasons. Here across from you are Anna, Missy and Hazel. All of these girls are your new family, Adeline.\"\n\n\"I am no kin to a bunch of filthy whores!\" she said vehemently.\n\n\"I won't warn you again about rudeness. When I must, I take no issue with reprimanding my girls when they step out of line. You will not be the exception. Look around the table at these girls. Look at them, Adeline. NOW!\" he demanded, pounding his hand on the table.\n\nAdeline jerked and lifted her eyes to look around the table, still angry.\n\n\"What you see are women. People. They all have their own reasons for being here and you are one of them now. Understand that. John, thank you. No, do not set her a plate, I think she can go without breakfast and instead dwell on manners.\"\n\n\"I wasn't going to eat that awful smelling mess anyway,\" she said heatedly. \"I'm not hungry. I want to leave this place!\"\n\n\"Very well, Adeline,\" Daniel said darkly, combing his loose hair back with his fingers as he slid his chair back. He yanked her out of her seat and across his knee so fast that she was still disoriented when the first open handed blow landed on her backside.\n\n\"Stop!\" she cried, trying to struggle away.\n\nHe did not stop, smacking her bottom a good dozen times as she tried to get away from him. Once he finished, he held her there, his hand on her bottom and looking down at her. \"Now then. Will you behave and show proper manners?\"\n\n\"Yes!\" she wailed, still sobbing.\n\nHe did not let her up as he held her and looked down at her. She was such a slight thing and all of those curls were pooling on the floor... it was actually incredibly lovely to look at. \n\n\"Please! I will, I swear!\" she cried again, trying to get up.\n\nHe helped her stand and guided her to her seat as he moved his chair close to the table again. \"As I was saying. You will be skipping breakfast to...\"\n\nHe was interrupted as a man came through the front doors, looking around. \"G'mornin' Olga,\" the man said, smiling at the tall, slender, dark haired beauty who stood gracefully and went to the man with a smile of her own.\n\n\"Hello Gerrid! You are here early today! I am glad you came to see me!\" she cried happily, leading the man to the stairwell.\n\nDaniel went on as if he had not been interrupted. \"To think on how you should be treating people. Your new family now. Mathilde... No. I will take you across town and see you fitted for something more suitable to wear.\"\n\n\"Dan?\" Mathilde asked, confused.\n\n\"I have things to see to,\" he said quickly. \"Not for you to question! Adeline, once we finish, we will come back here and see to your... instruction. Girls, she is a complete innocent, so you will have to help her learn everything.\"\n\n\"I know how it's all done!\" Adeline snapped, her face turning bright red. \"We had farm animals!\"\n\nEveryone at the table laughed except for Daniel. Instead he smiled a crooked smile and stroked her hair. \"You see?\" he asked the other girls at the table. \"We will begin instruction as soon as we return.\"",
        "\"Beat me all you want,\" Adeline said darkly. \"I won't DO that.\"\n\nDaniel only smirked as he began eating. Before the meal was over, the man who had come in was coming back down the stairs, looking flushed and happy. He left smiling.\n\nWhen he finished eating, Daniel stood. \"If I send you to get your coat, Adeline, is there going to be an issue?\"\n\nAdeline didn't answer, she just turned and went upstairs and got her coat. When she came out of the little closet room, he was at the door, getting his own coat off the rack next to the door. \n\nHe motioned to it. \"Hang your coat here when we return.\"\n\n\"Won't I be staying with the other girls?\"\n\n\"No. Not yet. If we get another girl, or one leaves, I will move you in with one of them. They have their own rooms, but they each have a roommate. Right now there is an even number. You are small enough that cot should suffice.\"\n\n\"It's fine... I just wondered. Look. I don't want you to think I am not grateful for you saving me from that Louis last night... but you can understand I don't want to do this, right?\"\n\n\"Of course. I also understand that you owe me quite a debt now and this is how you will pay it off. Let's go.\"\n\nHe led her down and out the door, not pausing for anyone to speak to him. He paused as they got outside, looking around. The snow was as high as Adeline's waist. Without a word, he bent double, hooking his forearm under her bottom and lifted her up to carry her as he trekked a path across the snow. \n\nAdeline didn't complain, she just tried to be still as she thought. Her hope had been that she might slip away today, run. That was going to be impossible in this snow. \n\nOutside of the general store, he paused a moment then set her down before pulling her inside. \"Randall,\" he said in greeting to the man on a ladder, pulling something off of a high shelf.\n\n\"Dan! How may I help you? This a new girl?\"\n\n\"Yes, is Isabelle here? I need her fitted and a dress made. As quickly as possible.\"\n\n\"IZZY!\" Randall yelled into the back of the store at an open door. He climbed down and slid the ladder out of his way. \"That all you need?\" he asked, then looked Adeline over. \"Is she... of age?\"\n\n\"Yes,\" Daniel answered, almost tersely.\n\n\"She is... lovely,\" Randall said, his voice pitched low, as if he were afraid of someone hearing.\n\nHe quickly looked back to the box he had in his hands when a woman came out of the back room. \"Yes Rand? Oh, hello Daniel. Is this a new girl then? Come on back girl, and I will get you all set,\" she said with a professional smile. She didn't approve, but she would take Daniels money. \n\nAdeline stepped to the back with a gentle push from Daniel and stood in the middle of a small kitchen behind the storefront as the woman guided her to stand on a stool so she could measure her.\n\nA young man came down the stairs awkwardly, pulling on a coat and he paused, looking Adeline over wide eyed. He was her own age, maybe a year older. \"Hi,\" he said shyly, holding on to the bannister rail at the bottom of the stairs.\n\n\"Hi,\" she answered, looking away in embarrassment as the woman measured her waist. He was a handsome boy, his short blonde hair as curly as her own. His big blue eyes looked wide and sweet, innocent. He was short, like the man out front and the woman measuring her. Adeline immediately felt an affinity for him.\n\n\"I'm Henry,\" he said, moving to lean on the bannister, still looking her over. \"I've not seen you around?\"\n\n\"Henry, you've chores to be about!\" his mother snapped.\n\n\"Yes Ma, I will. What's your name?\" he asked Adeline.\n\n\"Adeline,\" she answered in an almost whisper.\n\n\"Henry!\" the woman hissed. \"Leave off. She is one of Alecsander's new girls.\"\n\nHis face fell. \"Oh...\" His look turned resolved as he stepped closer. \"Adeline... you don't have to do that! You don't! You... you could come here! Ma needs someone! She has more sewin' than she can take on, specially with Daniel Alecsander always putting demands on her time!\"\n\nThe woman had tensed, but then she looked at Adeline as if gauging her reaction. \"I could take on help,\" she said softly. \"If... if you were of a mind to it and had a hand at it. And if you thought to want to... step out with Henry. Not that it would be a requirement! But... We have a spare room?\"\n\nAdeline blushed, her eyes tearing up. \"My pa sold me to him. I owe him money.\"\n\nIsabelle flinched and went back to measuring. Henry's eyebrows furrowed. \"How much?\" he asked.\n\n\"Henry!\" Isabelle hissed.\n\n\"Too much... but if you truly need help, I can sew? And if I have any free time, I can...\"\n\nShe was shaking her head before Adeline finished. \"There are three shifts at the mines. His girls have no free time and he wouldn't let you anyway. Hurry on now Henry.\"\n\n\"How much?\" Henry persisted stubbornly, moving closer.\n\n\"Two hundred dollars.\"\n\nIsabelle paused to look at Adeline in shock as Henry gaped. \"That's... quite a sum,\" Isabelle breathed. \n\nAdeline didn't respond, she just looked up at the ceiling miserably, wanting the measuring to be done with so she could leave.\n\nHenry moved closer, his face inches from hers. \"If... If I spoke to him... worked something out, would you... marry me?\"\n\nAdeline blinked at him in surprise. \"You don't even know me!\"\n\n\"No... but that's not uncommon... and I feel very... I don't know. I feel something when I look at you. Not just that you are so very beautiful and perfect for me... but something else. I would make you a good husband! And if it would save you from... that fate? And I want to. I do. If I talked to him... convinced him, would you?\"\n\nAdeline blushed and dropped her eyes and realized Isabelle was looking at her in hopeful speculation too. She gave him a small nod and the tension went out of his shoulders as he smiled beautifully. \n\n\"I will speak to him then!\" he said, turning awkwardly. He limped out and Adeline noticed then, the way a foot turned in and how his knee didn't bend as if it were braced. So that was why he was not already married. She didn't care at all, she dared feel hope.\n\nShe looked at Isabelle as the woman pulled her arms out straight and gave her a nervous smile. \n\nSeconds later, Daniel appeared at the doorway, looking perturbed. \"Do be quick please Isabelle,\" he said mildly, but the look he gave Adeline said he was not happy at all. \n\nAdeline looked down, blushing and trying to hide her tears. \n\n\"Daniel,\" Isabelle began, standing up straight.\n\n\"Do I need to find a new seamstress?\" Daniel asked softly. \"Mrs Ellison came to me only last week and said she could do it all more quickly and for less than you charge.\"\n\n\"I'm sure she did! And you'll get work equal to the charge. Not to mention she'd have to raise her rates when I charged her double for fabric!\"\n\nDaniel looked away from Adeline to look down at Isabelle. \"Is that really how you wish to handle this, Isabelle? Perhaps you should speak to your husband. Actually, don't bother. You may tell him you can all have your things packed and out of here before months end.\"\n\n\"Mr Alecsander!\" Isabelle cried breathlessly, fearfully. \"I didn't mean it like that! Not to you. Just to her! I was only going to ask after the girl here, she doesn't seem suited to the life you have planned for her and she...\"\n\n\"Isabelle, if I were you, I would worry about yourself. What I do with my girls is not your concern, or your sons. I generously offered him an accounting position last month and he tried to accept moments ago. With the stipulation that I not pay him, instead put it towards Adelines freedom and allowing him to marry her. I, of course, rescinded my offer, feeling as though he would not have my businesses best interest at heart when he did my books. Pity. There isn't much opportunity out here for a boy like him. Yet I tried. This is how I am repaid for all of my generous patronage? To your husband, to you, to your son. You try to take what is mine?\"\n\n\"She is a person, not something you can own!\"\n\n\"She is mine until she has worked off every penny of what I paid for her. Adeline... did you have some part in this?\" he asked dangerously.\n\nAdeline hunched in on herself, flinching as he raised his hand to tilt her face up to his. \"I... I hoped you would allow him to talk to you and work something out. I would pay you back all of your money!\"\n\nHe pressed his lips together and stepped back, letting her chin go. \"Understand this well, Adeline. Your life is no longer your own and you will do as I bid. Resolve yourself to it. You'd really marry a cripple rather than whore?\"\n\n\"What? Of course! What does that matter? He is kind and sweet and handsome!\"\n\n\"A cripple is no man,\" he scoffed. \"We are leaving.\"\n\n\"I am almost done!\" Isabelle said quickly. \n\n\"You have one minute,\" he snapped, then stormed out the front.\n\n\"Where is Henry? Why did he not come back?\" Adeline whispered worriedly.\n\n\"He was going to shovel the front walk,\" Isabelle whispered. \"You truly don't care that he is a cripple?\"\n\n\"No? Why would I?\"\n\nIsabelle didn't answer as she hurried to finish, but when she stood and helped Adeline down off the stool, she held onto her hand for a moment. \"He can still father children,\" she whispered. \n\nAdeline only nodded in confusion as she hurried out front. Randall was clutching his apron looking pale as Daniel stood by the door looking out the window. She pulled her coat on, not looking at Randall as she went to stand near Daniel. He said nothing, just bent and jerked her up off the ground to lift her, then left without a word. Adeline saw Henry pause in his shoveling to watch Daniel carry her back across the street and into the saloon.\n\nHe took her straight up the stairs to the attic and dropped her into a chair, then pulled his coat off. He jerked hers off of her and hung it up next to his. He paced in front of her as she waited with her head down. Finally, he spoke. \"Adeline... appearances mean a lot in this business. One thing you must never do is denigrate my name or business. You are happy to be here. Happy I saved you. Happy to be doing what you are doing.\"\n\n\"But I don't...\"\n\n\"You WILL listen!\" he snapped, exasperated. \"And you will do as you are told! You are always happy to be here. You love your job. Always be excited to see customers, always be happy to talk about how much you love your job, how much you love it here. Never scheme or plot to get away. Do you understand? Girls come here and they pay me, Adeline. They pay me to work here in my saloon. All of them. You are different. You did not pay me, so you work for free until I am paid back. I. Own. You. Do you understand?\"\n\n\"I understand,\" she answered, her voice small. \n\n\"I will not explain this to you again,\" he said darkly, then paused at a loud cry below his feet. He went to his desk and grabbed a long tube, then took it to a round cutout disc on the floor and aligned it, then twisted and looked into the tube. He looked for a moment, then untwisted it and stood up. He looked at Adeline, who was watching. He lifted the tube. \"A device of my own design. It's a key that opens a small window in the floor here, the ceiling below us. I can see down into the room above every bed, make sure none of my girls are being mishandled. See?\" he asked, going to another disc in the floor and twisting the long tube in. \"Come look.\"\n\nShe went to him and got up on tiptoe to peer down into the tube. She could see the bed, but it was odd, like looking through warped glass. Bubble shaped. The bed was empty.\n\nShe moved back, nodding. \n\n\"Adeline... I do not wish to have to admonish you again. Look at you. With just the slightest effort on your part, you can overtake Olga easily. And the faster you learn? The faster you have customers coming in for only you? The faster you pay me back.\"\n\nAdeline looked up at him then, realization hitting her. If she wanted away from here, if she wanted to escape, it was going to mean getting through it and not going around it. She dropped her eyes again, trying to resolve herself.\n\nAfter a few moments, he led her back down, but to the second story. He knocked on a door and Mathilde answered. \"Bathe her and show her how to fix her hair,\" he said softly.\n\nMathilde pulled her into her room, then looked surprised when Daniel followed her in. She looked discomfited as he stood back and watched as Mathilde bathed her, and then showed Adeline how to do her hair in the mirror. He had Mathilde come with after, as he led Adeline down the stairs. There were several men there already, sitting alone, with each other and with girls. \n\n\"This is Adeline,\" he said loudly, pulling every eye in the room. \"She is an innocent, and by 5 tomorrow evening, I will be auctioning off the rights to bed her first. Tell everyone. If there are not at least fifty men present for the auction, it will not happen, so be sure to spread the word of her beauty, her size and her sweetness!\"\n\nThere were excited murmurs as the men began talking and Daniel led her to a table. \"It is time for your lessons to begin,\" he said softly, stoking her hair as he held a chair for her. \"Are you ready?\"\n\n\"No,\" she whispered. \n\nHe chuckled, then stood up as he turned her to face the room. \"I will offer a discount of half off to the man who will take one of my other girls to bed and allow lovely Adeline here to watch!\"\n\n\"Me!\"\n\n\"I will!\"\n\n\"I'll do it!\"\n\n\"I'll pay full price and let her watch!\"\n\n\"I will pay extra to have her watch,\" another man said standing and pulling Ingrid up to stand as well. \n\n\"It is settled then!\" Daniel said happily, pulling Adeline out of the chair to follow the two up the stairs. Daniel followed behind, carrying the wooden chair with him.\n\nAdeline felt sick as she watched the large man's back. He kept turning to look over his shoulder at her and sneering and that made her sick. She would have to say yes to any man who had coin, even men like him. \n\nIngrid held the door open for everyone, looking unsure as she closed it. Especially when Daniel set the chair down in the corner and sat down in it, obviously intending to stay as well. \n\nDanial caught Adeline's wrist and pulled her back into his lap and put his arms around her as if he thought she might try and get away. \"Watch carefully, little one,\" he whispered softly, his mouth in her ear. His hand slid up her chest and he took hold of her chin, pointing it at the bed as if he assumed she was going to look away. \n\nIngrid was blushing as she undressed, casting nervous glances at Daniel.\n\nThe man had no issues. He undressed and got on the bed. \"They ain't here, love. Come on up here like you know I like now,\" he demanded, laying on his back and patting his hips.\n\nIngrid undid her dress and let it fall to the floor and she was wearing nothing beneath it, not even underclothes. Adeline felt herself blushing as she looked over Ingrid's tall, lithe, form. Ingrid got into bed next to the man, staying up on her knees as she leaned over him and took hold of his cock with her hand, then began slowly rolling and stroking it. The man groaned softly and his cock began growing, standing on its own.\n\nAdeline had seen her fathers before, but never in this sort of state. It was always small and soft as he held it to piss. She had never seen a man... erect. She stared in awe as it grew and grew until Ingrid had her hand around it, stroking in long, slow strokes. The man smirked as he looked over at Adeline to see her reaction of the size of his cock. He seemed to like what he saw as he grinned and took hold of Ingrid, pulling her to him. Ingrid straddled him, raising up high in her knees as she reached around behind her and underneath to grip his large cock and guide it into her.\n\n\"Oh... there's a good girl!\" the man moaned as she eased herself down on his cock. Adeline watched as it disappeared little by little until there were only a couple of inches showing. That seemed to be as much as Ingrid could take into her as she began raising up again. She did this several times as the man held her hips, then she rolled her hips and held her own breasts and smiled down at the man before she began moving faster and faster until she was bouncing on the man.\n\nAdeline shifted, raising up slightly to get a better view of what Ingrid was doing with her breasts and Daniel's arm tightened around her waist. She took hold of it, using it to push up and gain leverage to see better. He relaxed his hold, then slowly let her go, as if testing her reaction. \n\nAdeline slid off of his lap and moved closer to the bed, watching more closely. Ingrid's face, her look of bliss as she rode the man wildly. The man watching her face, biting his lower lip and holding her hip in one hand, one of her small breasts in the other. His eyes moved to Adeline as she moved closer, then behind her and Adeline realized Daniel had followed her. \n\n\"Why don't you come up here and sit on my face?\" the man said with a laugh. Adeline was confused and she stepped back out of the man's reach as his hand moved like he meant to touch her. The man chuckled and went back to focusing on Ingrid. \"Come on love, come up here and ride my face,\" he demanded, pulling Ingrid off his cock. She moved up and straddled his face and he grabbed her hips, yanking her closer. \n\nAdeline moved to see what he was doing and watched as he licked and sucked between Ingrid's legs. Ingrid had her hands in her hair, panting and mewling as she rolled her hips over his mouth. The man kept licking, flicking his tongue and watching her face as he worked her. His eyes went to Adeline, watching, more than once. He finally pulled back and spoke. \"Ride my cock again, love. Come closer girl, let me feel your cunt. See how wet it is,\" he said to Adeline. He didn't reach for her this time, but she still stepped back. Instead he reached down and put a thumb just above where Ingrid was guiding his cock into her again. Ingrid moaned again and he began rubbing her there in a fast, small, circle. She was panting now as she rode him, then suddenly she cried out and moaned, loud and shrill. The man chuckled, then grabbed Ingrid roughly and flipped her to her back as she began to go limp and still. He pulled her legs wide and pushed his cock into her, then held her legs as he began pumping rapidly. \n\nAdeline moved closer again, watching the cock spreading Ingrid open. It was an angle she couldn't see before and she wondered how badly it hurt? It didn't seem to be hurting Ingrid at all as she held onto the bed and moaned as if she were loving it. \n\n\"Why don't you lean in and kiss her?\" the man encouraged. \"Suck her tits a bit.\"\n\nAdeline ignored him, but she did turn and look up at Ingrid and her face. This wasn't an act, the girl was loving this, she looked lost to the world completely. She watched the way her small breasts bounced as the man pounded her.\n\nThe man pulled back suddenly and grabbed his cock, pointing it down at Ingrid, and Adeline watched as white liquid shot out of it, hitting Ingrid's belly.\n\nShe intended to keep watching and even touch the sticky looking substance, but Daniel pulled her back and away, then out the door as he took her across the hall. She was confused. Had she done something wrong? Hadn't he wanted her to learn?\n\nHe pulled her to the room and shut the door as he turned to the bed. He didn't wait or give her a chance to wonder, he pushed her to the bed almost roughly.\n\n\"What...?\" she began as he followed and lifted her, tossing her onto the bed. She turned in confusion, then watched him as he pulled all of his own clothes off as quickly as he could manage. She shook her head and rolled to crawl across the bed to the other side. He caught her ankle quickly and yanked her back roughly. \n\n\"Don't! Don't toy with me or play games!\" he growled. His hands fumbled at the buttons on her back. He gave up quickly, yanking it open with force and sending the buttons flying and bouncing off the walls. He ripped it all the way down the back as she cried out and begged him to stop, then her underclothes as well. ",
        "He lifted her on the bed, turning her and holding her face down. He pased at length and she knew he was looking down at her bare back and bare bottom. She felt him trembling as his hand touched her shoulder and slid down her back.\n\n\"Please?\" she whispered fearfully. \n\n\"Silence!\" he hissed\n\nShe tried to struggle again and he pinned her down, his legs straddling hers and vicing them tightly together. \"Please? I am afraid!\"\n\nHe leaned down over her, a hand on her shoulder until his chest was against her back. He stroked her hair out of her face gently. \"Do not be afraid, little one,\" he said softly. \"I simply wish to train you myself. Do not struggle, I will teach you. Adeline... You are so lovely.\"\n\nShe let out a small wail of despair as she tried to free her hands. \n\n\"Don't struggle, Adeline, be easy. I won't hurt you more than I have to, just be easy. I will show you how to please a man. How to be pleased by a man.\"\n\nHe stroked her hair and kissed her temple, then eased down until his hard cock was resting on her ass. She whimpered and shook her head. He was easily as big as the man across the hall, maybe bigger. Definitely longer. She shook her head again, terror rising up.\n\n\"Shhh shhh shhh Little one,\" he whispered, reaching to the small table and grabbing a small glass jar with a small spout. He raised his hips, rolling slightly and she felt something cool land on her bottom, right in the crack and slide in. It was liquid and very very slick. \"Arch your back up a bit Little one,\" he whispered, taking her hip and trying to lift her ass in the air as he moved back so he was straddling her. \n\n\"Please stop!\" she cried, shaking her head again.\n\nHis hands tightened around her wrists he was holding above her head. \"Do as I say,\" he said, trying to sound patient, but sounding strained. \"Don't make me have to hurt you.\"\n\nShe felt him reach down and he lifted enough to wedge a knee between hers, then the other one. He slid his free hand in and stroked the slick oil over her, between her legs and she trembled and whimpered, trying to squirm away from his fingers. He rubbed fingertips in a circle, pressing against her bud and she stopped and drew in a breath, realizing why the man had been doing that to Ingrid. \n\nThere was a spot there... and that spot liked to be touched. She sucked in air, her eyes wide as his fingers worked. The hand holding her wrists relaxed slightly as she went still, panting and focusing on what he was doing. The pleasure he was pulling up in her. \n\n\"Arch,\" he encouraged and she arched her back without even thinking about it, giving him easier access to what he was doing. The oil was starting to warm slightly and tingle and she let out a shaking gasp as she tried to understand everything. Thoughts were fleeting as she kept focusing on the pleasure. She wanted to give herself over to it and finally, she did. \"Mmmm, yes my little one, relax for me. Open yourself,\" he whispered. He let her wrists go, but she did not try to get away. He reached under her arched hips to take over the fast circles with his free hand, then reached down with his other hand to grab his own cock. \"Stay open to me,\" he coaxed and she felt him rub the head of his cock through the oil, through her slit. She could only moan happily at the thought of his cock filling her. She wanted to feel that, she was eager for it. Her pussy was aching to be filled. He kept toying with her, sliding the head of his cock through her slit as he toyed wth her clit, getting her closer and closer to some sort of end. She was gripping the sheets now, writhing with need. \"You are getting so wet for me Little One!\" he panted. \"Feel how wet and how you are! You want this as much as I do,\" he groaned.\n\n\"Yes! Please... put it in me! I want it in me! All of it, I need it.\"\n\nHe laughed, low in his throat and he leaned in close to her, kissing her jaw. \"Say it again, little one.\"\n\n\"Please!\" she wailed, trying to push back onto his cock.\n\n\"Tell me you want me to fuck you,\" he whispered. \"Say it. Beg me to fuck you.\"\n\n\"Please... I... I am so close to... something... I need you in me! Ooohhh!\"\n\n\"Mmmmm,\" he purred happily, his cock throbbing with need. He pushed into her and she gasped, tensing up, but he kept working her clit rapidly until she relaxed again. He pushed in deeper and she whimpered, then he felt the small snap and she cried out, going tense again, but he didn't wait this time. He thrust into her as deeply as he could and held himself there as he worked her clit. She was mewling, her body clenched all around him, but he held her close and kept working her clit feverishly.\n\n\"Nnnnn,\" she moaned shakily, finally relaxing again and he began slowly fucking her. He watched her face battle between pleasure and pain as he thrust easily and when pleasure took over completely, he began speeding up. She mewled again as her eyes sprang open and she gripped the sheets, but the shock this time was different. \n\nHe smirked as he took her over the edge and she came around his cock, screaming his name as she did. He felt every pulse, every twitch, every single muscle spasm until it ebbed, then he pulled out of her and turned her to face him as she lay boneless beneath him in a stupor. He kissed her lips quickly, before spreading her legs wide and pushing into her tight cunt again, ignoring the bit of blood. \n\nShe gasped and came around quickly, looking up at him in a sort of wondrous amazement and fear. He was slow as he made love to her, stroking her face and holding her, watching her face as she took it all in. Her hands released the sheets and went to his wrists as he held her, moving gently and lovingly. Making sure she enjoyed it. His hands tightened just slightly, the only clue that he was close as he pressed into her as far and deep as he could. He came, exploding into her as she gasped, her eyes going wide as her lips parted. His excitement heightened at the look on her face, the way she loved what was happening, the feeling of him filling her with his cum.\n\nAdeline was overwhelmed with emotion and feeling. That had been... beautiful. Why had she been so afraid of that? And when he had exploded inside her and it had been so hot and he had filled her with his seed. It had felt amazing. \n\nHe eased out of her as his cock began going soft and rolled to lay on one hip, propped on one elbow as he stroked her face and smirked down at her. \"Did I not tell you it could be amazing, little one?\" he asked gently.\n\nAdeline nodded slightly, looking over his face. Perhaps none of this would be so bad as she had assumed.\n\nHe leaned in again and kissed her lips, surprising her again. This time he lingered, taught her to kiss the right way. He was thorough in his training, showing her how to kiss for over an hour. Not that she was aware of time as she held on to his face as tightly as he was holding on to her. Soon he was pressing into her again and she could feel how hard his cock was getting again. She reached down to feel it, pulling out of the kiss to look down at his beautiful, thick, long cock. She watched it grow in her hands as she held it, squeezed it, stroked it. \n\nHe turned, laying on his back and let her move to sit up so she could see it better. \n\n\"Move closer, little one. Kiss the tip... mmmm, just like that. Use your mouth, slip your lips over the top. Lick with your tongue. Don't be afraid...\" he smiled as she looked at him wide eyed.\n\n\"I... I don't really want to do that?\"\n\n\"Try it. It's not so bad as you think and it feels amazing. It is something men will demand of you, pay you for. Kiss the tip again... now stay there, keep your lips on it. Open them a little and spread them over the top. No teeth, just lips and tongue....Ssssst! Oooooo, yes... JUST like that. Use your hands... nnnn, hold the base... oh, Adeline! You are a natural! Keep going! Take it as far as you can until you feel like you may choke... nnnn... now open your throat and press further. Take it all the way in. You can do it, it's not hard to do, it's only uncomfortable, push passed it. Don't stop!\" he demanded when she started to pull away. He took hold of her head and pulled her back down onto his cock, pushing hard into the back of her throat until she began struggling. He eased his hold, letting her breathe a moment, then pushed again until she was struggling again. He pushed harder, fighting to get further down her throat, but she was fighting it too much now.\n\nHe let her go and she sprang back, tears rolling down her cheeks as he got up. She was upset at him now, but he wasn't focused on that as he got up. \n\n\"Lay on your back, head over the edge of the bed,\" he demanded, pulling her around until her head hung back over the edge. \"Open your mouth, all the way, Adeline!\" he demanded, pressing his cock to her lips. She opened slightly and he pushed in, all the way back and then further, into her throat and she tried to scream around his cock. She was beating at his hips as he worked himself all the way in, his balls pressing against her nose. He held himself there until her struggles began weakening, then pulled back and let her gasp for breath. \"Now you will learn to breathe between thrusts,\" he said breathlessly before pushing in again, forcing his cock down her throat. She was shaking her head and crying, beating at his hips, but this was something he loved doing. The reason is wife had left him. \n\nSeven more times he held himself in her throat until she began going limp, then he would pull out and let her gasp for air. It was thrilling to watch her go more and more wild with terror every time. He stroked her cheek lovingly as she sobbed around his cock and tried to turn away. \n\nHe could contain himself no more, he pushed into her slowly, pumping shallowly as he worked himself further and further in, until he could feel his balls resting on her face beneath him. She was beating at his hips and kicking wildly as he kept the shallow thrusts going, making them bigger and bigger as she began to go still. He lengthened his thrusts, enough that she could get tiny gasps of air but not enough that she could start struggling again as she moved lethargically under him. When he came, he rammed deep into her throat and he could feel her gag reflex locking down and warring with the throbbing of his cock as he spent himself inside her again. He pulled out as soon as he shot his last load and she sucked in air, coughing and retching, rolling slowly and grasping at nothing.\n\nHe pulled her up onto the bed right and pinned her beneath him as he leaned over her. \"Most men... they do not need so much for that. A little light sucking like you did at first will get them off. For me... I like it that way, deep in your throat. You will learn to take it that way for me, if I have to train you this way every day for the rest of your life,\" he said softly, his fingers tracing over her lips.\n\nHer eyes focused on him and they were full of fear. \n\n\"It is not bad if you don't fight it,\" he said with a smile, then leaned in and kissed her again.\n\nShe jerked her head away, repulsed and upset.\n\nHe turned her face back to his, giving her a smoky smile. \"Don't be a baby, Adeline. You are here to learn, even the harder lessons. Do not take it personally... Look at me, little one. It really isn't so bad at all if you don't fight it.\"\n\nIt was the truth, but down deep, he was sort of hoping she never stopped fighting. Holding her head still, his cock down her throat as she screamed and fought wildly. There was something about it that drove him crazy.\n\nHe leaned on an elbow again, stroking her cheek as she lay there trembling. \"Look at you,\" he chided. \"Your hair is all a mess now. You will have to learn to do it back up and fix it quickly. Always look your best before you go back down. Never go back downstairs unkempt or unclean. Was yourself after every man, thoroughly. Mathilde has a syringe of sorts you can use to irrigate and wash yourself out, as well as a tea to drink every day to keep you from getting with child. We will get you a...\"\n\nThere was a soft knock at the door, then it opened slightly. \"There is a man here for you,\" Mathilde called softly. \"He is wanting to see the new girl, see if she is worth staying the extra day for.\"\n\n\"We will be down shortly. How long until dinner, we worked up quite an appetite.\"\n\n\"It is ready. The downstairs is full, Dan. The girls need this room.\"\n\n\"We will be out in a moment, you can send Hazel in to clean. I will take her upstairs for now. Has Isabelle dropped off her dress or sent it over?\"\n\n\"Not yet?\"\n\n\"Find her a robe,\" he called, getting up and pulling Adeline out of the bed. \n\nShe jerked away from him and tried to pull on her ruined dress, still sniffling and scrubbing her eyes on her sleeve. He put a hand on her back lightly and led her up the stairs quickly, out of sight of the downstairs. \n\n\"Take that dress off, it is ruined. You will have to wait for the one Isabelle brings. I will have her make you another since I ruined that one.\"\n\n\"I can fix it! I need the buttons and...\"\n\n\"Hush,\" he said gently, going to her and hugging her. She tried to pull away, but he held her firmly. \"Do not worry over that old rag, I will see you in new dresses. Settle yourself, you are shaking.\"\n\n\"You hurt me! That was horrible and I was so afraid! I couldn't breathe!\"\n\n\"I know,\" he said simply with a gallic shrug. \"Like I said, don't struggle, don't fight it, it's not as bad at all. Let it go, little one, like I said. It was not personal, it is just a thing I enjoy. And you will learn to do it for me. No more talking about it. Clean yourself up. Mathilde, there you are. Help her clean up and fix her hair again, be quick,\" he snapped, pulling his own clothes back on.\n\nHe used the mirror to watch Mathilde help Adeline who was still trembling. Mathilde kept casting him resentful and angry glances and he finally turned and met her eye, staring her down. She looked away quickly. She had been offering for years to take care of his needs and he had refused her every time. He understood her feelings were hurt now, but he still expected her to be professional.\n\n\"Go find out what is taking Isabelle so long,\" he snapped irritably as he sat down at his desk. She left and he heard Adeline slip into her room. \"You may use a blanket if you need to, but come out here and sit near me. Read a book while I work.\"\n\nHe heard her shuffling around and drag a quilt to the tufted chair near him. \"I can't read,\" she said softly as she curled up on the chair, huddling under the blanket.\n\n\"Do not muss your hair, little one. You never went to any school? No one taught you any words? Or letters? Can you write your name?\"\n\n\"No.\"\n\n\"Can you spell it?\"\n\n\"No.\"\n\n\"Sit up, Adeline. I suppose I can teach you in my off moments.\"\n\n\"Why?\"\n\n\"Reading is important, all of my girls can read. You will read as well. Do you know numbers?\"\n\n\"I can figure sums in my head, but I don't know the writing or reading of them.\"\n\n\"Ok. I will see that it is taken care of,\" he said gently, turning to look at her. She looked spooked and a little sad. \"Come here, Adeline.\"\n\n\"I don't want to!\"\n\n\"I did not ask, I gave you a command,\" he said darkly, shifting as if to be ready to take her in hand.\n\nShe stood, her eyes down and her face aflame with anger and shame as she stepped closer to him.\n\n\"Leave the quilt.\"\n\nShe let it fall back onto the chair and hugged herself as she stared down at the floor. \n\nHe pulled her closer and slid the robe off of her shoulders, meaning to let it fall, but she gripped it around her. \"Adeline,\" he admonished gently.\n\nShe let it fall, shaking more violently now.\n\nHe pulled her a step closer as he leaned back in his chair to look her over. He spun her so he could see all of her, his hands roving as he turned her slowly. \"You are... so lovely, little one,\" he said wistfully. \n\nAdeline tugged at her wrist and he looked at her face. \n\n\"Why so shy now? After what we shared today?\"\n\n\"You hurt me!\"\n\n\"Tsk! Let it go, Adeline. Men are going to do a great many things to you, not all of them pleasant. It will be for their pleasure. You have to learn to accommodate. Come here now, there is something else I wish to show you,\" he said, pulling her close and lifting her, then turning and sitting her on the edge of his desk in front of him. She held his wrists fearfully as he guided her to lean back and pulled her legs open. \"Adeline, relax, I am not going to hurt you. Lay back and relax. Open your legs for me. Put a foot here and here, on each armrest of my chair. Stop trying to close yourself to me,\" he chided, pushing her legs open wide to look down at her exposed sex. \n\nHe touched her lips gently and she jerked and tried to close her legs again, but he pushed them back open as he leaned in closer and kissed her bud gently. She made an alarmed noise as his tongue darted out and ran up her slit to dwell on her nub and he angled himself so he could watch her face. She looked shocked and a little fearful, but he could also tell she was liking it. He pressed harder, rolling his tongue, he watched her eyes go wide and her head drop back as she closed them. She dropped to her back and her hands fumbled for something to hold on to, disrupting the things on his desk, but he didn't care. He looked down and moved in, sucking her clit into his mouth and wrapping his lips around it as he swirled and flicked. He pulled moans from her and small cries of ecstasy as her fingers finally settled in his hair. Her hips raised up as he held his hair tighter and her thighs pressed to the side of his head.\n\nHe groaned, enjoying this more than he ever had in his life, not considering it a chore for once. He eased a finger into her and found her spot, then rubbed it from the inside as she cried out again. She came, her body jerking and bucking up into his mouth. To his shock, she squirted all over his chest and chin. He reveled in it, feeling exultant as she let out a shrill moan, shaking her head, unable to process so much pleasure. When she came down, she went completely limp and he held up her legs as he stood and picked her up. He carried her to her bed and laid her down, feeling a deep satisfaction as she lay there blissed out. It was an amazing feeling, knowing he had done that to her. \n\nHe went and changed, then put his desk to rights before throwing a towel on the floor. He didn't mind cleaning up after her at all, that had been amazing. He was still smiling when he went back to her little room and knelt on one knee, stroking her face. Her eyes fluttered open and she moved lethargically. He bent and kissed her belly, then helped her sit up. \"Clean up and put your robe one,\" he said softly.\n\nShe stood and looked around, disoriented and his smile widened. \n\n\"In here,\" he said, pulling her into the larger room. He helped her clean up and put her robe on.\n\n\"It's so cold!\" she said, shivering.\n\n\"It's snowing again. We may be snowed in for Christmas if it keeps up. Your clothes will be ready soon.\"\n\nShe only nodded as he sat her down to twist her hair up again. \n\nBy the time he was done, Mathilde knocked on the door and came in with her dress. He watched Adeline blushing furiously as Mathilde helped her dress, trying to cover her half exposed breasts and legs. She looked at him pleadingly and he grinned at her. \n\n\"You look perfect,\" he assured her. \"Are you ready?\"\n\n\"No!\"\n\nHe laughed and went to her, taking her chin and leaning down to kiss her. \"I assure you, you are lovely and you will do great. Come on,\" he said, taking her hand and leading her out the door. He led her down the stairs to a very packed room. All of the men looked up when she came into view and her heart began pounding. \n\nShe wanted to run.\n\nThen she saw Henry, standing against the wall, watching her with his lips parted. She wasn't sure how she felt about that. ",
        "\"Here she is, the lovely, the innocent and sweet Adeline. Just in time to give you the perfect christmas gift to yourself!\" Deniel said loudly as the room went quiet. \"The bidding starts at ten dollars!\"\n\nAdeline turned to him wide eyed. Ten whole dollars? No one was going to bid that!\n\n\"Here!\" a man yelled. \n\n\"Eleven!\" Henry yelled.\n\n\"Twelve!\"\n\nThe number climbed and climbed as Daniel stood and toyed with a loose lock of hair on her neck. Henry kept topping the number no matter how high it climbed and Adeline wished she could hide somewhere. \n\nShe was being auctioned off to the highest bidder and it felt like the other night all over again. Her knees tried to buckle and Daniel quickly caught her. \"Easy now, it's almost done. You can do this.\"\n\n\"Forty seven!\" Henry yelled and the men all grumbled angrily.\n\n\"Can you even get it up, cripple?\" one man yelled.\n\nHenry blushed and said nothing.\n\nNo one else spoke up and Daniel smiled. \"No one topping forty seven?\" he asked. \"Alright then. Henry, you get to taste our lovely Adeline first.\"\n\n\"He has to make it up the stairs first!\" a man yelled and there was laughter as Henry limped to the stairs eagerly.\n\nDaniel waved for Henry to make it up to the first landing where they were, then he walked her up the stairs with him and showed them to their room. His hand on her arm was tight as he pulled her along with him and he half shoved her in the room with Henry before closing the door a little too hard.\n\nAdeline moved closer to the bed, hugging herself before turning to Henry. Seconds later, she heard a small grinding noise and a click above her head and she looked up at the small, round glass bubble in the ceiling. Daniel was watching.\n\nShe looked back to Henry and he limped closer to her, reaching for her. She took a wary stepp back, then forced herself to be still.\n\n\"I have a plan for us,\" he said softly, taking hold of her arms. \"I will come, often, and pay off your debt. As soon as it's done, I can take you out of here.\"\n\n\"Henry,\" she said softly, shaking her head. \"I didn't want it to be you. I thought... our time would be special. Not this. I feel like... I feel like you are taking advantage of my situation.\"\n\n\"No! No, Adeline. Don't think of it like that. Think of it like... practice. For when we are truly married.\"\n\n\"We don't have to do anything,\" she said softly, hopefully.\n\nHe gave her a condescending smile. \"Adeline... I just paid a LOT of money for this. To be your first. You understand right? I want it to be special, for both of us.\"\n\n\"It's my first time as a whore, not my first time ever,\" she said angrily, stiffening in his hands.\n\nHe scowled, looking a little angry, then shook his head. \"It doesn't matter. None of the other men will matter. All that matters is us. Come on now... I want to see you. See my future bride. Take the dress off?\"\n\nAdeline hugged herself harder, looking up at him with hurt and sadness.\n\nHe rolled his lips in, licking them from the inside before reaching one hand to her breast and pulling it out of the dress. His lips parted and he let out a breath as he looked down at her chest. He pulled out the other one, then groaned softly.\n\n\"Take off the dress, I want to see all of you,\" he breathed, taking her breasts in his hand and massaging them.\n\n\"Henry! Please!\" she cried softly.\n\n\"Adeline... It's why you are here, right? What you are being paid for? And I paid so much! It's alright, I am going to be your husband.\"\n\n\"It feels wrong, like you shouldn't be here, seeing me like this. You will see me like this forever, not as a wife but as a whore.\"\n\n\"No, Adeline. Fine... if you don't want me to see your body,\" he said, sounding put off, \"then you can just suck me off.\" He reached down and undid his pants, pulling his soft cock out. \"Come on,\" he said cajolingly, putting a hand on her shoulder and putting pressure on it.\n\n\"Henry... I don't want to do this!\"\n\n\"I paid, Adeline,\" he said insistently, pushing her to her knees physically. He took hold of her by the hair and pulled her face close to his cock as her hands went to his legs to push away. \"Open your mouth. It's ok, it won't take me long and then we can talk.\"\n\nThe door slammed open and Daniel stormed in looking pissed. \"Let her go,\" he demanded. \"I have decided her training isn't done yet. You can get your money back from Mathilde downstairs. Pick another girl to suck you off. Adeline, come here.\"\n\nAdeline got to her feet shakily as Henry was shoving his cock pack in his pants. \"I paid for her! I don't care if she is inexperienced, I want her!\"\n\n\"No,\" Daniel snapped, grabbing Adelines arm and turning to leave, yanking her along behind him. Adeline was terrified. Was he going to punish her for saying no to Henry? For being reticent? He was so angry!\n\nHe slammed the door and spun her to face him, then gently tucked her breasts back into the dress. \"You need more training,\" he said, sounding irritated.\n\n\"I'm sorry I said no, I won't do it again! It was just... him. I will be...\"\n\n\"Shut up. I don't care about that. I just need to finish your training, it was too soon for you.\"\n\nAdeline was confused, but she nodded slowly.\n\n\"Take the dress off and wear your shift. Go to bed,\" he demanded, then left.\n\nAdeline changed slowly, still confused, but she laid down as he told her to. She wasn't really tired, it was early yet, and her mind worked trying to figure out what had just happened. \n\nMaybe he had seen her distress and decided not to let Henry have her? That didn't seem like him, not with as much money as Henry had paid. Maybe he thought no one else would want her after Henry, they way they all despised him just for being crippled. She couldn't figure it out and eventually, she fell asleep thinking about it.\n\nDaniel woke her, hours later, lifting her out of her cot and jostling her slightly. \"Daniel?\" she asked softly, a little afraid since it was too dark to see.\n\n\"Hush. I am just moving you. It is too cold to sleep in there, you will sleep in my room next to me where it is warmer,\" he said softly as he laid her in a large feather bed that she sunk into. It felt amazing! He climbed in next to her and pulled the blankets over both of them. \"Go back to sleep,\" he said quietly, putting his arm over her and tucking her in close to him. He was definitely much warmer and she fell back to sleep quickly.\n\nMathilde woke them in the morning, knocking loudly and coming in. \"Breakfast is ready and there's men downstairs asking after her. What do I tell them?\"\n\n\"Tell them she will be ready in a few days,\" he snapped. \"We will be down shortly.\"\n\nMathilde left, slamming the door and Daniel huffed as he laid his head back down. Adeline looked back at him, wondering what that had been about. \n\nDaniel stroked her cheek gently, looking into her eyes, then leaned close and kissed her. \"Good morning.\"\n\n\"Good morning?\"\n\nHe went up on one elbow and rolled her to her back, looking down at her. \"Did you sleep well?\"\n\n\"Yes... your bed is comfortable and warm.\"\n\nHe leaned close again and kissed her, lingering and kissing her more deeply as he pulled her closer to him. At first she thought this was another lesson until he reached down and began pulling her shift up. He kept kissing her, not stopping as he slid his hand into her underwear and quickly found her bud, rolling it in his fingertips. She made a mewling noise as she kissed him back and in seconds, she felt herself getting slick with need. \n\nHe didn't wait, shoving her underwear to the side and moving on top of her as he pulled his cock out. He shoved into her easily, then held her close as he stroked her face and made love to her.\n\n\"Adeline,\" he breathed raggedly.\n\nHer eyes were closed, her face full of rapture as he plunged into her slowly. She was lost in him and he loved seeing her that way. He loved that he could do that to her so easily.\n\nHe pressed his lips to her temple and came with a sigh. She gasped, her hands tightening on his arms and he knew she was close. He pulled out and rolled, reaching down quickly to work her clit again. She came in second and he loved hearing her little wails of pleasure as her body locked up. \n\nAdeling came down and let her head fall to the side on his arm. She heard him chuckle as he kissed her temple again. \n\n\"Let's get up and get dressed,\" he whispered.\n\n\"Nnn, two minutes.\"\n\n\"Addy, you will fall back to sleep if you keep laying here.\"\n\nShe opened her eyes and looked up at him, studying his face. \"If I am Addy now, can I call you Danny?\"\n\nHe smiled. \"Only when we are alone. I allow no one to call me that, normally. Come on,\" he said, getting up and pulling her up too.\n\nShe got dressed, half watching him as he got dressed as well. She wondered about all of this, wondered if he was changing his mind about her.\n\nHe took her hand and pulled her down the stairs, the look on his face pleasant as he sat her down and sat next to her. \"Good morning girls, where is Emma?\"\n\n\"With a client,\" Mathilde snapped.\n\n\"Mathilde, this is your one and only warning. If you cannot be professional, I will find someone who can, do you understand?\"\n\n\"Yes,\" she said, looking away as her face reddened.\n\n\"Good. Third shift is about to come in, girls, we are running behind this morning. Eat quickly and be ready.\"\n\nNo one said anything, catching the tense mood on the air. Adeline looked around at all of the girls, wondering about them. Why they were here, what their stories were. \n\nA man came in the doors, followed by a second and a third. Several more came in and the girls all got up, going to the men as the man in the kitchen began bringing out more course and dry griddle cakes that were half burned. Adeline wondered why Daniel didn't hire someone better, but she guessed the food didn't have to be good since the men came for the company. \n\nSeveral men asked about her, but Mathilde quickly spoke up every time saying she wasn't ready yet. Daniel ignored almost everyone as he looked over the post.\n\nSoon, a group of men came in and they sat down with Daniel. Adeline quickly stood, giving up her seat to one of the men and hovered near Daniel uncertainly. He took her hand and pulled her closer, settling her hand on his shoulder as he sat back and talked to the men. Foremen at the mine. They played cards and Adeline stood and watched and listened, trying to understand the game and the topics. So many names were lost to her as they meant nothing yet. She was sure she would learn eventually. \n\nAn hour passed, then two and finally one of the men sat back and patted his lap, motioning Adeline over. Daniel put a hand on hers, keeping her from moving. \"Call one of the other girls.\"\n\n\"She not the new girl?\"\n\n\"She isn't ready yet.\"\n\n\"Heard you auctioned her last night.\"\n\n\"Started to, changed my mind. Leave it, Ben.\"\n\nBen left it alone, going back to talking about the head foreman and how much of a prig and dandy he was. Adeline stood there all morning and her legs were getting tired as she shifted back and forth.\n\nFinally, the cook brought out lunch and all the men left, saying they needed sleep before the night shift. The girls all sat down to eat and it seemed it was a rule that they all eat meals together as much as was allowed. Adeline felt left out as they chatted about the men, laughing about some, whispering about others and complaining about most of them. Adeline was a little glad she didn't have to deal with it yet as she listened to some of the stories.\n\nSoon after, a new group of men came in, getting off of their shift at the mine and a new group of foremen sat with Daniel. Adeline stood half next to him, half behind him, her hand on his shoulder, feeling very very bored. \n\nShe looked down at Daniel and reached across to toy with the curls that brushed his collar. His hair was incredibly soft and she stood there looking around, watching the girls as they went from table to table, talking to the men. She also noticed the way all the men groped and she wondered if that was why Daniel wouldn't let her go out among them.\n\nDaniel reached back and caught her hand suddenly and she thought maybe she was annoying him, but he pulled her around and into his lap. She was horrified as he adjusted her to sit on his knee so he could keep playing cards. She had seen the other girls sitting the same way on mens laps, their arms around the men, talking to them. She leaned into him, putting an arm around him to continue playing with his curls. He gave her a smile that said she was doing exactly as he wanted her to. \n\nAfter an hour of listening to them talk and play cards, she lay her head on his chest with a sleepy sigh. He stroked her hair back and leaned down to kiss her head and she felt content laying there. The men stayed until almost dinner and they all ate together again as most of the men left. Adeline was not surprised when another group came in, more raucous than the other two. The men who sat with Daniel were loud, boisterous and bawdy. Adeline watched as man after man went up the stairs with the girls, the girls never stopping as they came back down long enough to take another man up. \n\nThey began looking tired as they came back down, less and less enthusiastic. Adeline was a little glad she wasn't starting yet, even if it did mean it would take longer to pay back her debt. \n\nShe turned to Daniel, putting her free hand on his chest and closed her eyes. \n\n\"When are you letting us take her up?\" one of the men at the table demanded.\n\n\"Not sure yet. Soon.\"\n\n\"Heard that cripple had her first and hurt her. That true? That why you are holdin her back?\"\n\n\"The boy never touched her. I decided she needed more training. Better training.\"\n\n\"Let me know when she is ready, I want to be one of the first.\"\n\n\"Of course, Luke,\" Daniel said, but there was an edge of anger to his voice and his hands tightened around her. \"I am going to put her to bed, I will be back shortly.\"\n\nHe stood, lifting her like a child and she gasped, gripping him tightly as he took her up the stairs. He set her on his bed, then hovered over her a moment, looking over her face. He began unlacing her dress and helped her out of it. When she went to grab her shift, he caught her wrist and pushed her into the bed as he undid his breeches. He flipped her, bending her over the edge, then licked his fingers and rubbed them on her pussy before pressing the head of his cock to her. He pushed into her without a word, holding her hips and leaning over her to watch her face. \n\n\"I have wanted you all day,\" he groaned, moving slowly until she began getting wet with excitement. She gripped the sheets and closed her eyes, quickly getting lost in the pleasure he was pulling up in her. As she got slick, he began moving faster, fucking her with a primal need as he panted. Adeline cried out, getting closer and closer and not being able to articulate what she needed. Her cries fueled him as he pounded faster and faster with a growling roar.\n\nWhen she came, it was with a scream of shock as her pussy seized around his cock. He sucked in a hissing breath as he held himself there, then he came inside her with a low moan. \n\nHe moved his arm, bracing himself above her shoulder as he leaned over her and kissed her neck and jaw. \"That was perfect,\" he whispered. \n\nShe had no voice yet as she lay there trying to breathe. \n\nHe pulled out of her and pulled his pants up, then helped her put her shift on. He laid her down and pulled the blankets up, then kissed her lips. \"That was amazing. Sleep well.\"\n\nHe slipped out and she sighed blissfully and fell asleep feeling euphoric still. She woke when he got into bed, but only to turn to him and let him wrap her in his arms. He kissed her head and they both fell asleep. \n\nThe next day started as more of the same, her standing behind him and men asking when she would be ready. Daniel getting grumpy when they did. Mathilde giveing her and him both cold looks. \n\nJust before lunch, the cook came out looking angry. \"Josephine just left, said she was sick and couldn't work any more today. Tell off one of the girls to come help me serve lunch and make dinner. It ain't busy yet.\"\n\n\"I can do it!\" Adeline said quickly. \"I'm a good cook!\"\n\nOne of the men snorted. \"That would be a change.\"\n\nThe cook glared at the man.\n\nDaniel looked angry, but he nodded and Adeline happily hurried back to the kitchen with the cook. It was simple running food out to the men, it was less simple avoiding roving hands. It seemed like Daniel was always there telling the man off, until suddenly he yelled to the whole room. \"Next man to lay a hand on the new girl won't be allowed to come back here. She isn't ready yet, so hands off!\"\n\nAdeline looked up at him through her lashes, unsure why he was so angry about it. She would have to endure more than hands soon. \n\nShe was happier after lunch, in the kitchen cutting up vegetables and talking to the cook. She found out his name was John and he just happened to be around when the old cook got proposed to and took her apron off and walked out. He took over in the kitchen to help Daniel out and no one had ever applied for the job since. He had a helper, a shy girl who wouldn't go out front, but she was prone to fits and illness. \n\nAdeline listened to him as she worked, then dragged a stool over to put the vegetables in the stew. She looked down at it, then started adding things to it. \n\n\"What are you doing there?\"\n\n\"Thickening it up a little.\"\n\n\"Stew aint supposed to be thick!\"\n\n\"It tastes better if it's like gravy. Are you boiling that meat? Here, let me have it, I will fry it up.\"\n\nAdeline took over and John stood back looking a little grumpy, but letting her.\n\n\"You're making too much. The boys don't eat much here, they eat at the inn and then come here usually.\"\n\n\"Well, it's too late now and it will be fine for tomorrow too,\" she offered. \"Here, move down, I will make biscuits too.\"\n\nHe stood back and watched her, his arms crossed, grumbling about her making too many.\n\nAdeline looked up at one point and Daniel was in the door, watching her. She smiled at him and he came in and grabbed her arm, then dragged her to the pantry. He lifted her against the wall and yanked her skirts up before pulling his cock out and shoving into her roughly. She made a noise of discomfort at the lack of lubrication, but that took care of itself quickly as he shoved into her with growling grunts. She whimpered as she held on to him, her eyes rolling up as he brought her closer and closer. \n\n\"Faster,\" she managed breathlessly. \n\nHe rammed faster, growling down at her as he hunched to press his head to the top of hers. She came, clenching her teeth to try and keep quiet and he moaned, then came seconds later. \n\n\"I love that,\" he panted. \"I love feeling you come around my cock.\"\n\n\"Mmmm,\" was all she could manage. He eased her down the wall and her legs were wobbly as she stood there holding herself up on him. \n\nHe fixed his pants, then leaned in and kissed her, full of need and frustration. \"Adeline,\" he whispered. \"What you do to me!\"\n\n\"I liked that,\" she replied, still holding on to him. \n\nHe led her back out to the kitchen and she immediately went and took her biscuits away from John.\n\n\"She made too much,\" John complained to Daniel.\n\n\"I noticed she took right over.\"\n\n\"How long have you been standing there?\" she asked, her face turning red.\n\n\"Not the whole time, just checking in once and a while. You have smiled a lot more in here than you do out there,\"\n\n\"I like cooking.\"\n\n\"Of course you do,\" he said, his eyes shining. \"I am going back out front. Don't worry John, we can feed them stew tomorrow too.\"\n\nBy the end of the night, there was no stew left and they were asking for more. John threw a fit, grumbling about how they were going to expect better food now. ",
        "The next morning, Daniel let her help again and she took over the kitchen as John sat back with his arms crossed, watching. Breakfast sold out, lunch sold out and dinner did too even though she made twice as much.\n\nDaniel came in grinning. \"At this rate, we'll be feeding the mining crews instead of the inn. You brought in as much custom today as the girls did!\"\n\nJohn harrumphed and scowled at the wall.\n\nA few more days went the same way and Daniel seemed content and happy to let her keep 'helping' John. He came in one evening, smiling at her with his eyes shining.\n\n\"Tomorrow is Christmas, the miners have the day off. Expect it to be busy.\"\n\n\"I will have to cook through the whole day to make enough food,\" she said thoughtfully. \"And we need more of almost everything.\"\n\n\"Make a list and John will get it.\"\n\nJohn growled.\n\nDaniel gave him a grin and pulled Adeline out of the kitchen and up to his bed.\n\nHe was passionate and insatiable as he took her, making her come twice before he even made love to her. They were both exhausted before he was done and they passed out tangled in each other's limbs.\n\nAdeline got up early the next morning to go down and start breakfast, humming while she rolled biscuits and made griddle cakes. She kept cooking all morning, sending plate after plate out until she switched to lunch. There was never a break in between, just a transition as the men drank and ate and fucked the day away.\n\nJust after dinner, Daniel came in and took her hand, smirking at John. \"You can take over, right? Serving the food? It's all made, it's just serving now, right?\"\n\n\"Yeah,\" he grumped.\n\nDaniel pulled her out and headed towards the stairs. \n\nShe thought he was taking her up to his bed, but he stopped on the dais and held his hands up until the room went quiet. \n\n\"As you all know, the new girl here, the lovely Adeline, has been held back since she got here. As it turns out, this one will never be available. I have decided to finally take another wife,\" he said, going to a knee and taking her hand.\n\nAdeline gaped at him.\n\n\"Marry me, my lovely Adeline?\"\n\nShe blushed and shut her mouth. \"Can we talk?\" she whispered.\n\nHe blinked, his cheeks turning red as he stood. He assumed she was spurning him. \"I... want an agreement,\" she whispered. \n\n\"Of?\"\n\n\"I don't want you to do that thing... that thing I don't like.\"\n\n\"I enjoy it and it is not so much.\"\n\n\"I don't like it, I don't want to do it.\"\n\n\"How about on special occasions then?\"\n\n\"No.\"\n\n\"Just Christmas? Your gift to me?\"\n\nShe sighed, then gave a small nod. \"And I want to continue cooking. I enjoy it.\"\n\nHe laughed. \"Done. The men have already said if you keep cooking then they will keep coming back for food. We made more this week in meals than the girls made. Possibly today as well. It keeps going like this and you will... nevermind that. Say yes Adeline. Give me the only Christmas gift I want.\"\n\n\"Yes!\" she said loudly and there was thunderous cheering. \n\nShe leaned close again. \"Can I wear normal clothes?\"\n\nHe smiled. \"Of course. Anything you want.\"\n\nAn hour later, the pink cheeked preacher was standing on the stairs as they stood on the dais and he said the words over them. There was more cheering and Daniel laughed joyously as he swept her up in his arms and carried her up to their room. Adeline giggled the whole way, still in disbelief. \n\nHe loved her. That was why he wouldn't let anyone else touch her. \n\nShe pulled his clothes off as fast as he pulled hers off, excited about what he had planned for their wedding night."
    ],
    "authorname": "gabthewriter",
    "tags": [
        "christmas",
        "holiday",
        "love",
        "mountains",
        "noncon",
        "nonconsent",
        "old west",
        "reluctance",
        "romance"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/adeline"
}