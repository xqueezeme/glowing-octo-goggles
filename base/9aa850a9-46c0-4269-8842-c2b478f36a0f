{
    "title": "Grace Ch. 15",
    "pages": [
        "I let Grace relax for about five minutes after her blowout orgasm. I kept my head on her thigh and stroked her legs as we chatted sporadically. Grace played with my hair and told me she couldn't wait to tell her mom how amazing her experience was, and I had to warn her not to make her mom jealous by raving too much. Just a typical teacher-student conversation, right?\n\nIn the back of my mind, however, I wanted to keep things moving along. I was happy to give Grace a fantastic orgasm, but I wanted back inside her for my own enjoyment! When I thought she was more or less back to normal, I casually stroked all the way down to her ankle and picked up the slender purple vibrator I had taken from her mother's toy bag. I slid my hand back up her calf, concealing the toy until I could turn it around and thumb the power button. I had just reached her inner thigh when a very quiet buzz began. Grace felt it as soon as she heard it and jerked upright, sitting up straight with her hands behind her and looking down at what I was doing.\n\n\"I forgot all about that!\" she giggled.\n\n\"You were busy!\" I told her with a smile. \"And now it's time to get busy again.\"\n\nMatching actions to words, I ran the flexible tip up and down her thigh, circling at the side of her knee and the faint crease between hip and thigh. Then I sat up myself and did the same on the other leg, avoiding her pussy for now and teasing around her inner thighs and up over her belly. She giggled when I rubbed the ribbed tip around her nipples and they tightened immediately.\n\n\"I never did that on my nipples before!\" she laughed, shaking her breasts to ease the sensation.\n\n\"I think it's pretty good anywhere!\" I said slyly, trailing it down from her sternum to her belly button before poking her with the tip.\n\nHer whole body spasmed and she exclaimed, \"Oh my god that tickles!\" as she pulled back.\n\nDragging the tip down the center line of her abs, I looked her in the eyes and whispered, \"Just...about...anywhere!\" with the last word coming as the purple curve hit her clitoris.\n\nShe was firmly braced, so she couldn't retreat easily and her thighs twitched and her pelvis jumped a few inches off the bed at the contact. She was still slick with lubrication, so when I laid the humming shaft along her labia, it slid easily along. I wanted my cock inside her, not the toy, so I just ran it up and down either side of her pussy. The vibrations traveled, no doubt, and worked tangentially on her clit, but not enough to make her cum. Her knees fell open, though, and I saw her hood drawing back as she got more and more aroused. She was staring straight down at her groin, already starting to breathe deeply.\n\n\"Oh my god, that feels so good!\" she moaned at last.\n\nHer excitement began to arouse me and I could feel my cock beginning to grow. To make it more obvious, I held the vibrator in place and shifted around so that I was kneeling between her thighs. That freed me up to stroke myself while I teased her with her mother's toy, and Grace's eyes darted between my growing cock and the vibrator gliding up and down between her labia. I let it ride on either side of her clit now, adding more direct stimulation and her mouth fell open, a sexy, intense expression on her face.\n\nThe lube remaining on my hands and the beauty of the sight in front of me made it easy to get fully hard again. When I thought I was ready, I scooted forward so that my knees were under Grace's thighs and placed the head of my cock at her opening. Her eyes widened and her lovely lips twisted into a sensuous smile. Rocking my hips forward, I nestled the slick tip inside her and lifted the base of the vibrator so that the tip rested just above her clit.\n\n\"Are you ready?\" I asked in a thick voice.\n\n\"Fuck yes!\" she groaned, gazing intently at the spot where we joined.\n\nTo thrust forward, I had to raise my hips. My cock slipping inside her provided a lever, though, and as the head dragged along her G-spot, her hips were lifted off the towel by my changing position. Grace moaned steadily as I rose and leaned forward over her, catching myself on one hand and holding the vibrator steady with the other. In just a moment, my cock was buried fully inside her and her knees were spread up by her shoulders. Her eyes went wide at the sudden fullness and she grabbed my shoulders to pull me down. My balance was off, though, since I was resting on one arm, so I let go of the silvery base of the toy and pulled her hand down to it.\n\n\"You hold it, Grace. Hold it right on your clit while I fuck you!\" I gasped, dropping my hand to the mattress beside her.\n\nShe grinned and nodded, and as I pulled back to ready myself for another thrust, I saw her making tiny circles around her clit. I smiled and dropped my weight, filling her again in one smooth stroke that forced another gasp from her lips.\n\nWe continued like that for a few intense minutes, me taking slow, deep strokes between her smooth, slick lips and into the slippery heat of her pussy and Grace driving herself crazy with the borrowed vibrator. Every now and then I saw her pull it away from herself as a shudder shook her body and I knew she was having what my old girlfriend called \"mini-cums\" instead of a full-on orgasmic release. Once again, I smirked with envy and pumped into her body.\n\nSoon enough, though, my arms started to feel the strain of this position. I rocked back onto my heels again, withdrawing almost all the way, and reached down to take her hands. That stopped her from getting the toy where she wanted it and she almost glared up at me, her delicate eyebrows arching inquisitively.\n\n\"It's time for you to be on top,\" I said with a grin.\n\nShe got it right away, and as I rolled to the side, she moved herself out of my way and let me settle onto the towel and lay back on her sweet, soft pillows. She pivoted then to straddle me, keeping herself high on her knees. I helpfully raised my cock to its upright position and she adjusted herself as she came down, lining up perfectly to sink down onto my hips with one fast drop. The tight ring of her pussy felt so good sliding down my shaft that I thrust up against her when she hit bottom, and I felt once more the hard nub of resistance when I hit her cervix. Her head fell forward and her hands thumped to the bed on either side of me, letting go of the buzzing toy so that it fell onto the floor.\n\nWanting to feel that internal pleasure-and-touch-of-pain, she lifted her hips and slammed herself down on me as I thrust up, driving me against her back wall again and again. Her breath came faster and faster as the sensations piled up and I forgot about my own needs as I studied the beautiful concentration on her young face and watched the relentless rhythm of her body as she strove for release. Her thighs tensed each time she moved up, her breasts bounced evenly, and the smooth muscles of her shoulders bunched and relaxed as her weight shifted. I was entranced by every movement. It was also a thrill to watch my cock emerge from the clasp of her young pussy, drawing her inner lips out as she rose up each time. As good as it felt, I was also focused on how lucky I was to be in this situation--that line of thinking definitely helped to delay my release, fortunately!\n\nEvery time she came down, a grunt broke from her lips. After a while, though, I noticed that she was also moaning afterward, a sweet, high-pitched \"huh!\" of pleasure. I figured that meant she was getting close, so I decided to help her along. I raised my hands and grasped her breasts mid-stroke, letting her push herself into my grip. At first, I simply let her feel my grasp, but her thrusts grew faster so I pinched her nipples between my thumbs and the side of my forefingers as I held her. As her body rose away from me, she effectively pulled her own nipples. I smiled when I saw her expression change with this new feeling and knew it wouldn't be long. One extra hard pinch-and-pull was all it took after that. Grace slammed down onto me and froze, her whole body quivering as her orgasm hit her. Her head hung forward, her hair obscuring her face, and I heard deep, shuddering breaths that came in time with the pulsations I felt around my buried cock. Her fingers bunched the towel, kneading it like a cat as she rode the storm inside her. Slowly, her torso sank down on mine, so I wrapped my arms around her as she collapsed.\n\nIn this position, I could reach my favorite body part and I took full advantage of her lassitude. My hands stroked and kneaded her sweet ass. Her crack was slick with sweat and leftover lube, so I pushed my fingers deeper and traced its furrow, strumming her rosebud and stretching to follow the line all the way to the edge of her pussy. She moaned softly in my ear as I did that.\n\n\"What are you doing to me?\" she whispered.\n\n\"Just messing around,\" I said, kissing the side of her head.\n\n\"I can't believe I came again that hard!\" she said, pushing herself up so that her face hovered over mine, letting her damp hair tickle my cheeks.\n\nI kissed her softly in response since she was in range and kept playing with her ass. She smiled, but pushed herself up a little higher and regarded me thoughtfully.\n\n\"Do you want...\" she began quietly. \"Do you want to put it in my butt?\" she finished.\n\n\"Oh my god, Grace...I would LOVE that!\" I answered quickly. \"But are you sure?\"\n\n\"Uh-huh,\" she said, nodding. \"You've done everything for me. I want to give you what YOU want now. And I know you like my butt!\"\n\nHer smile returned as she said that, and I grinned back at her. She swirled her hips, then, and I squeezed her cheeks firmly in gratitude, my cock still rock-hard inside her.\n\n\"Reach back and grab the lube, then!\" I told her with a laugh.\n\nShe did that with one limber movement that I had to admire, twisted back into position, and passed me the little tube. I patted her on the thigh.\n\n\"You have to lift up for a little,\" I said gently.\n\nShe did as I instructed and my cock left her pussy with a snap to fall onto my belly. She smiled at the sight and reached down to caress its underside. I poured lube into my palm and held it down next to my erection.\n\n\"I think it's easiest if you do this for yourself this time so I don't get distracted!\" I said with a smile, putting it as delicately as I could. \"But we both need some lube. You have to get it inside to make yourself ready.\"\n\nShe giggled and nodded, dipped her finger into the pool, then rocked her hips forward erotically to reach down between her legs. I dribbled a little onto my cock and used my free hand to stroke my shaft, coating it in slippery coconut-scented fun. Grace came back to my palm twice more and I could tell from the little frown of concentration that she was pushing her fingers into herself as I had suggested. When she finished, she rose up to a kneeling position over me and looked at me with determination and trepidation in equal parts. Because she was within reach, I stretched my arm down and brought the remaining lube up against her anus, spreading it liberally around so we didn't dry out. I made sure to tickle her backdoor with my fingertips as I passed by, and Grace smiled a little bit.\n\n\"You're in control here, Grace,\" I said reassuringly. \"I'm not going to hurt you, and we can stop whenever you want. Just take your time and let yourself get used to every little step, okay?\"\n\n\"Okay,\" she said quietly, her eyes trusting.\n\nI held my cock upright and gave her one last instruction: \"It's easier for you to get me aimed right, Grace--you can feel it better.\"\n\nShe nodded and lowered herself until the head of my cock settled between her cheeks, then took hold of the shaft as I let go. I saw a flash of teeth as she bit her lower lip, then she wiggled me around in tiny circles for alignment. I could feel the firm knot of her anus gliding over my sensitive skin, but I restrained myself and let her set the pace. She got me where she wanted me and pressed down just a bit, adding pressure to the ring of muscle. Our earlier games and the fresh lube had done their jobs, and I felt myself slip just a little bit inside. Grace held me there without moving, adapting to the width. Then she rose up a fraction and pushed down again. I gasped as I felt the ring part a little more and the sweet heat from inside her touched me. Then she paused again.\n\n\"Are you okay?\" I whispered.\n\n\"Yeah,\" she said with a nod. \"It's just big!\"\n\n\"Sorry!\" I said wryly, which drew a smile despite her concentration.\n\nAnother wiggling lift and drop and the full width of my cock head passed into the grip of her ass.\n\n\"Oh fuck!\" she moaned, holding herself still again.\n\n\"Just breathe and relax and let your body get used to it,\" I whispered, stroking her thighs.\n\nShe did exactly as I suggested and I could both see and feel the results. Her face relaxed, her shoulders came down, and as her thighs descended her ass opened itself to my invading cock. I slipped in past the tightest point of constriction and groaned happily.\n\n\"You did it!\" I moaned. \"Now take it slow and grab more lube if you need it!\"\n\nGrace nodded distractedly and let go of my cock. She balanced herself carefully and planted her hands on my chest, which pushed her breasts together delightfully. Up she rose, and then down again, keeping my head inside her and challenging herself to take a little more with each descent. The heat was incredible--I will never understand why a woman's ass is hotter than her pussy, but it is--and even though she had relaxed, I gasped as the tight bands of muscle squeezed me going both directions. Within minutes, she was taking more of me inside and I felt her thighs brush mine as she pushed down. Her eyes were closed in concentration still, and she repeatedly bit her lower lip. I watched in frank admiration as she adapted to this new way of loving and gave me an incredible gift.\n\n\"Oh my god, Grace--you feel so fucking good,\" I moaned as she got lower and lower. \"Is it okay for you?\"\n\nHer eyes opened and she looked down at me with a frank and erotic gaze.\n\n\"It hurts, but it's also amazing to feel you in there!\" she whispered. \"I feel so full!\"\n\n\"Put a little more lube on me just to make it better for you,\" I suggested, passing her the tube.\n\nThe next time she rose up, she paused and squirted her fingers, then smeared the oil all around my shaft up to where it vanished inside her. She had the presence of mind to click the lid shut before she tossed it aside, then she closed her eyes again, put her hand back on my chest, and started back down.\n\nThe lube made all the difference. This time, she went faster and my cock disappeared into her ass like a seal returning to water. It was still incredibly tight on me, and I'm sure it was stretching her backdoor mercilessly, but she didn't flinch as she settled down all the way, her pussy mashing into my pubic bone and her ass hitting my thighs. I gasped at the feelings surrounding me and gripped her thighs hard.\n\n\"Look at me, Mr. Robertson!\" Grace whispered.\n\nI opened my eyes and looked back into that powerful feminine gaze. Dark hair shadowed her eyes, but I could see gleams of green peeking through. Her lips were parted as she watched my face.\n\n\"You're in my ass, Mr. Robertson. You're fucking your student in the ass like you always wanted. And I fucking love it!\" she whispered softly but urgently.\n\n\"God, Grace!\" I gasped in response. \"You feel so fucking good! Thank you thank you thank you!\"\n\nI know I was babbling, but it DID feel so fucking good, and I was blown away by her eroticism. She smiled mysteriously and let herself sink down on me, her breasts and belly coming to rest on my torso and her lips coming down to kiss me lingeringly. She settled herself and then rocked her hips up and down, not moving me in or out much, but letting me feel the tight clasp move on my shaft and the stroking of her interior on every millimeter of my straining cock.\n\n\"You can fuck me now, Mr. Robertson. It doesn't hurt, and I want you to fuck me and kiss me and I want to feel it when you cum in my ass, okay?\"\n\n\"Okay with me!\" I managed to gasp before her lips came down on mine again.\n\nMy arms went around her back and squeezed her to me. My hips drove upward and sank the final inches of my cock into Grace's waiting ass, then fell back. Again and again, I drove myself up into her, kissing her frantically, trying to make it last...but it couldn't. It felt too hot and tight and good to last. With one final thrust and a loud, wordless cry, I arched myself up and exploded. Hot cum sprang from my cock into her depths, but every pulse felt better than the last as her internal muscles squeezed relentlessly, causing the pulsation to echo into both of us.\n\n\"Yes!\" she cried into my neck. \"I can feel it!\"\n\n\"God, Grace!\" was all I could manage as I spent myself inside her.\n\nWhen the throbbing stopped, I whimpered and lay still, wrung out by pleasure. Grace lay still atop me and kissed my neck and shoulder soothingly. My hands remained locked behind her back. Sweat cooled between us as my heart slowed down and my softening cock slipped from her ass to lay against my thigh damply. Still I held her close, and still she kissed what she could reach, whispering soft words I couldn't make out.\n\nAfter a timeless stretch of peace, I came back to my senses and kissed her back.\n\n\"Grace...\" I whispered, \"that was the most amazing thing I've ever felt!\"\n\nShe giggled and raised up to look down at me, her face glowing with pride.\n\n\"I know what you mean!\" she said with a soft laugh. \"I'm really glad I finished my essay.\""
    ],
    "authorname": "outdoorhorny",
    "tags": [
        "mf",
        "older male",
        "younger female",
        "vibrator",
        "anal",
        "anal sex"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/grace-ch-15"
}