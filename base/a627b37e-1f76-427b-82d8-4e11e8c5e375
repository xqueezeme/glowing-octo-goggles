{
    "title": "500 Annies Ch. 03",
    "pages": [
        "\"Good evening, listeners. Tonight we hear the third installment with Joe Williams, author of 500 Annies. If you've listened to the last two installments, you know that he came to write the book after his wife suddenly left him, with very little explanation and no warning.\n\nThis segment deals with the actual writing of the book, how he comes to terms with himself and his wifes' betrayal, and unexpectedly finding love again.\n\nEnjoy.\"\n\n.................................................\n\nThe first few interviews were set up by my friends Annie and Jane. After about three interviews, I realized I was going to have to go elsewhere. Word had gotten out and the women had time to think and formulate answers they thought I wanted to hear. All I wanted was the truth, what I was getting was a sanitized version of how they wanted their relationships to go. I did learn a few things from them. I probably learned something from every woman I talked with.\n\nI got creative. I went to coffeehouses, different bars, colleges, churches. I even went to two retirement centers. I talked to women at places I was sent to through my work, I was still working about thirty hours a week.\n\nThe travel allowed me unlimited venues for contact.\n\nI talked to women in Boston, St. Louis, Detroit,\n\nsmaller towns up and down the East Coast, and along the Mississippi corridor.\n\nAt the end of my research I collated my data.\n\nThe youngest I interviewed was seventeen. The oldest was eighty three. Three hundred twenty two were between the ages of forty to sixty five. Thirty nine were sixty six to eighty three, one hundred twenty nine were between twenty and thirty nine, and ten were between seventeen and nineteen.\n\nThree hundred twenty were white, eighty were Hispanic, fifteen were of Asian descent, sixty four were Black, ten were Indian, six were Polynesian, and five were American Indian.\n\nMost were Christian, primarily Methodist, Baptist. and Catholic. There were four athiests, ten agnostics, Hindus, Bhuddists, One Japanese lady that was a follower of the Shinto religion,\n\none American Indian following a traditional religion that included using peyote. Two were members of an offshoot of Voo Doo.\n\nTwo hundred eighty eight had been in a previous marriage or live in relationships, sixteen were lesbians, four were polygamists, thirty one were non American in origin. Six were currently in an abusive relationship, five were into relationships governed by BDSM, and fourteen were celibate, eight due to health conditions, six by choice. Surprisingly, twenty seven were bisexual.\n\nFifty eight believed their relationships would end before six months. Seventy were desperately unhappy but determined to do everything possible to avoid a breakup.\n\nForty eight weren't in relationships at the moment. And thirty three of those said they weren't interested in starting one anytime soon.\n\n..............................................\n\nJoe paused to sip some water.\n\n\"If you think that's confusing now, you should have gone through the process with me.\n\nMost interviews were right at two hours. My shortest was sixteen minutes, and all she did was cry. One lasted over four hours, but she was so compelling that I never noticed the time.\"\n\nDetermined not to get my research compromised, I took a picture if they would let me. Instead of learning names, I would give them my card with my email address and write their number on the card.\n\nI decided to call them all Annie, just as a joke, and to remind me why I was doing it. So when I gave them my card, I would write Annie 20, or 200, wherever I was in my research. I asked that if they contacted me, to use their number so I could look them up to put a face with the message. That's where the title came from.\"\n\n\"It took me fourteen months to finish the interviews, and six months more to collate the data into something manageable, and that was working twenty to thirty hours a week.\"\n\nThe project consumed me. I never let my professionalism slip, I did my job to the best of my ability, but it was second in importance to me.\n\nIt got so bad Jane or Chad and Annie would show up every couple of weeks and drag me down to the bar so I could mingle with the living. Chad and Annie had become friends, to the point of dinner or a visit every few weeks.They wanted to keep me in contact with the real world.\n\nChad was firmly convinced I was a little off for pursuing it so hard, but often joked when it was over I could easily make a fortune as a relationship coach for men.\n\nI had long ago given up the idea of publishing it. It was a cleansing ritual for me, a catharsis from my misery of being abandoned. I expected I would allow Annie, Chad, Jane, and Harry read it, but that was about it. But fate wasn't done with me.\n\nMotion, Inc. used an editing service to make our manuals clearer and concise. My work rarely took any tweaking, I had been doing this for a long time, after all. It was more proof reading than editing. But nobody is perfect, and every once in a while I would make a mistake.\n\nI had been working on a pretty big project, and was finally able to send it off. I was tired, having spent about forty hours in interviews and transcribing for the last nine days, plus doing my regular job. The only excuse I have is exhaustion.\n\nTwo days later the editing service called. John had been my contact man for eleven years. We had conversed enough to become friendly, but I had never met him. That was about to change.\n\n\"Joe, Joe, this stuff is great! I never knew you had it in you. I want to ask a favor, please, please, let me edit it.\"\n\n\"John it's just a manual, not even on a complicated piece of equipment. You could edit it with one eye closed.\"\n\n\"Are you crazy? The most complicated piece of equipment ever developed is the female brain. A chance for an average guy to peek inside and understand just a little of it is priceless.\"\n\nI was starting to get a bad feeling.\n\n\"What the hell are you talking about?\"\n\n\"Your book, of course. I did the edit on the first four chapters already. My company is foaming at the mouth to see the rest of it. You know we're part of a company that publishes non fiction, biograhpies, historical texts, how to books, things along that line. They've been thinking about expanding, things like what you've done would be perfect. You do have it done, don't you?\"\n\nI was so tired when I sent the manual off that I accidentally sent the first eight chapters of my book. Looked like the cat was out of the bag.\n\n\"John, I wrote that as a kind of therapy for me. I never intended for it to be published.\"\n\n\"You're kidding, please say you're kidding. My boss is going to call you within the hour, he wants to start negotiations for the book today.\"\n\n\"You need to get an agent, and a good lawyer. You didn't hear this from me, but don't accept the first offer. Hint around you're shopping publishers, that'll keep them honest.\"\n\n\"And remember, you want me as an editor. Please.\"\n\n................................................\n\nJoe paused, his voice was a little hoarse.\n\nBabs knew he needed a little rest.\n\n\"Ladies and gentlemen, lets take a few minutes to move about, restore circulation, use the facilities. When we get back I'd like Joe to reflect on some of his favorite interviews.\"\n\nTen minutes later the crowd was back in their seats, the stagehands had replenished the water bottles, and Joe took the microphone again.\n\n\"All the interviews were important, but a few stick out in my mind. Annie 337 lived in a retirement community. She was seventy four, and looked my age.\"\n\n\"I can still see her face.\"\n\n.................................................\n\n\"You're really 74?\"\n\n\"Yes I am. I've had a little tightening up done, a facelift, boobs lifted, hell, basically every part of my body has had the effect of gravity reversed. In my own opinion, I'm still pretty hot for my age. Do you agree?\"\n\n\"I do indeed, I thought you were my age. Are you in a relationship now?\"\n\n\"Sort of, I'm seeing two men on a regular basis. One is sixty one, the other sixty seven. Personally, I think they're too old for me, but they're pleasant company. Plus, they're both pretty good in bed.\"\n\n\"So I take it you're still sexually active?\"\n\n\"Oh, as often as possible. I've had a high sex drive ever since, well forever. I've been widowed twice. The highest praise I can give them is they were great in bed.\"\n\n\"Please don't get me wrong, I was never promiscuous. I was always a one man woman, and I loved both my husbands dearly.\"\n\n\"The first was a banker, it was a pretty well thought of profession back then. I'm sure Barry would roll over in his grave at what his profession has degenerated into. \"\n\n\"Our relationship was the traditional breadwinner/ housewife scenario. It was the early sixties you know.\"\n\n\"But he respected me. He knew I handled every faction of our lives except making money. I reared the children, managed the house, behaved impeccably in social situations. We were a real life Ozzie and Harriet.\"\n\n\"I would get lonely sometimes when he would be trying to climb the corporate ladder, and he hated traveling, but we dealt with it for our betterment.\"\n\n\"We discovered early the joys of sex, and had a strong drive all the way to the end. We understood each other, we fit, you know? And beneath that three piece suit he was a tiger.\"\n\n\"I matched him passion for passion, we were indeed one. We only had one major fight, and it was about money. We had it, and he would make me spend time with him understanding our finances and investments. I told him as long as I had him I would never have to worry. I'll never forget what he said.\"\n\n\"Honey, there may come a time when I'm not here. If that happens, I want you to mourn me, and not worry about your future while you do. This is to protect you and our kids, now please pay attention.\"\n\n\"So I did. I became almost as good as him in money matters. He was very proud of me.\"\n\n\"Then one day the bank called. He was found sprawled over his desk, massive heart attack.\n\nHe was fifty seven.\"\n\n\"I cried my eyes out and mourned him. But I moved forward, and thanks to his foresight we were secure financially.\"\n\n\"we were married thirty seven years, and I don't regret a day.\"\n\n\"Five years later I met Paul, my second husband.\"\n\n\"He was a painter[I recoiled slightly at that] and a free spirit. While Barry and I were conservative, he was flashy, loud, and unpredictable. We made love wherever and whenever we wanted. He painted me nude, the portrait hangs in my living room today.\"\n\n\"Where Barry loved his cocktails, Paul didn't drink, said he wanted nothing that would cloud his vision. He wasn't broke, but he wasn't nearly financially secure as I. Money didn't matter to him if he had enough to live on.\"\n\n\"He wanted a prenup to show he didn't want my money. I refused.\"\n\n\"We lived happily for seven years. My kids even liked him after they got to know him, and the grandchildren loved him madly. It was nothing for the kids to come to pick them up and find their faces painted like zoo animals.\"\n\n\"He was killed six years ago when a kid talking on his cell phone ran a stop sign and centered his motorcycle.\"\n\n\"When I think about it, all they had in common was that they loved me, and never stopped communicating, even when I didn't want to listen.\"\n\n\"I'll never marry again, it would take a much younger man to satisfy me fully, and it wouldn't be fair to him. My two lovers combined keep me satisfied and happy. I've had a very good life all in all.\"\n\nA side note here. The older ladies I interviewed averaged forty plus years in their relationships, I feel it was because of the moral climate at the time. Twenty seven of the thirty nine I interview in that age bracket, sixty six to eighty three, said they should have left their husbands.\n\n.................................................\n\n\"Annie 441 was an attractive black woman in her late twenties. This was one of the hardest interviews I had ever done. Her husband was abusive, insanely jealous, and a drug user. Her life was a living hell. The bruises were easily seen even under her dark skin. He had broken her arm, thrown her outside naked when the temperature hovered around twenty, even tried to pimp her out. She drew the line, that's when he broke her arm. She filed a restraining order and assault charges, then didn't show up for court.\"\n\n\"I asked her why she stayed.\"\n\n\"Because I love him, and he loves me.\"\n\n\"And yet he abuses you.\"\n\n\"He doesn't mean to, I just make him so angry.\"\n\nI nearly exploded. \n\n\"Angry! I was in love with a woman for nearly thirty years. She betrayed me with another and moved out of my life with no notice at all. I was angry.\"\n\n\"Even as I raged against her, damning her to hell, it never occurred to me to beat her or cause her physical harm.\"\n\nI paused, breathing raggedly.\n\n\"I'm sorry. I shouldn't have snapped off at you. It's just that, if you stay with him, it's going to get worse and you know it. He probably does love you in some sad twisted way. But I have to ask you, is your love for him enough? Will it block out the pain, the humiliation, the darkness. If you have children, will he abuse them? Is this the future you want?\"\n\nShe wavered, then looked me defiantly in the eyes. \n\n\"It'll get better, he'll realize what he's done to me one day and change. I know it in my heart.\"\n\nI knew she knew deep down she was lying.\n\n..................................................\n\n\"There were many highs and lows experienced during these interviews. Moments of almost blinding joy and agonizing sadness. Times when I felt I was making progress in my quest for understanding, many more times when I realized no man would truly understand a woman.\"\n\n\"Annie 499, the next to last interview I did, gave me great hope for mankind in general.\"\n\n\"I was in a mid sized town in Maryland, on a job. I was feeling pretty good with my progress, this one would be over quickly.\"\n\n\"I had checked out of my motel and was on my way out of town. It was lunchtime, and I passed a small restaurant that featured crab cakes, a regional delicacy. She was standing on the side of the road, holding up a cardboard sign.\"\n\n\"Help me. I need a job.\"\n\nIt got my interest so I walked over.\n\n\"Any luck?\" I pointed at the sign.\n\nShe sighed. \n\n\"None. I don't know what to do. I've tried the employment office. temp agencies, I've put applications in with every business in the area. Nobody wants an eighteen year old with no experience.\"\n\nShe smiled her brightest smile.\n\n\"You're not hiring, are you mister?\"\n\nI felt bad for her.\n\n\"No, but I will buy you lunch in exchange for an interview.\"\n\nHer defenses started to raise.\n\n\"I don't know mister, you're not some kind of pervert, are you?\"\n\nI grinned to lessen her fears.\n\n\"Nope. Even worse, I'm a writer. Right now I'm doing a book on relationships. Too bad you're not married.\"\n\nHer eyes blazed.\n\n\"Am too married. For almost a year.\"\n\n\"Where's your ring?\"\n\nShe blushed a little.\n\n\"Don't have one, we couldn't afford it. But he's gonna get me one, soon.\"\n\n\"Well, there you go. You're married, a perfect candidate for an interview. I'm going in now, join me if you want.\"\n\nI got a table near the window. She was still outside, holding the sign with grim desperation.\n\nI flagged the waitress down. \n\n\"Do you know that girl?\"\n\nShe glanced out the window. \n\n\"Yeah, that's Wendy. Poor girl, she has no luck at all. Lucy lets her bus tables every once in a while for a meal and a few dollars. She eats less than half, and takes the rest back to the shelter for her husband.\"\n\n\"Shelter?\"\n\n\"Yeah, they live in shelters. Foster kids, both of them, they've had a terrible life. God, I wish things would get better for them.\"\n\nI gave her a twenty.\n\n\"Do me a favor, take her the largest drink you have, and tell her she has a meal paid for.\"\n\nI peeled off another twenty.\n\n\"Take this for your trouble.\"\n\nShe looked at it.\n\n\"I can't take this for something I would probably have done after the lunch rush anyway.\"\n\nShe tried to hand it back to me. I pushed it back into her hands.\n\n\"Keep half, then, and give her another meal when she needs it.\"\n\n\"You're a kind man, mister. I'm sure she'll appreciate it.\"\n\nA few minutes later she walked out with a jumbo styrofoam cup in her hand and gave it to Wendy. There was some hand waving and pointing, and when she came back in Wendy was with her.\n\nShe came straight up to me and slipped into my booth.\n\n\"You really a writer?\"\n\nI nodded.\n\n\"Have I read anything you've written?\"\n\n\"No, I doubt it. I'm a technical writer. Been one for over twenty years. This is just something I wanted to do.\"\n\n\"How many women have you interviewed so far?\"\n\n\"Four hundred ninety eight.\"\n\n\"No shit? Oops. I mean really? How many more do you intend to interview?\"\n\n\"You, and one more. My goal was five hundred.\"\n\nShe sat back and relaxed.\n\n\"All right, but I want a crab cake plate, large, with extra onion rings.\"\n\n\"Deal.\"\n\nI shook hands with her and ordered her meal.\n\nHer story was heartbreaking. Abandoned as a small child, she had no idea where her parents are, or if they're even alive. She went from foster homes to orphanages and back to foster homes.\n\nShe was provided for, the very basics, and for the most part treated well, but there was no love.\n\nShe met her husband in a group counseling session for troubled foster kids. She was fourteen, he was fifteen.\n\nHer eyes glowed at the memory.\n\n\"We looked at each other and I knew right then. This is who I wanted to spend my life with. We shared a coke at the break. We were both so awkward and tongue tied, nobody told us about love. But when we took our seats I sat next to him, and I haven't left his side since.\n\nHe lived in the group home, and I had a foster family that lived two blocks over. He was in the home because he wouldn't go to school, and he was so big his foster parents were afraid of him, even though he gave them no reason to be.\n\nI mentioned that I was now attending that school and didn't know anyone there. The next day he was on the sidewalk, waiting to walk me to school. He did it everyday until he graduated. I was so proud of him when he crossed the stage to get his diploma.\n\nHe was one of the student speakers, honored for his turnaround. In his speech, he gave all the credit to me, saying the woman he loved was responsible for his success. I was crying so hard they almost threw me out of the auditorium.\n\nOne of his classmates' mother taped it, and made me a copy. It's my most treasured possession.\"\n\n\"We married the day after I turned eighteen, at the courthouse. We picked up beer cans to pay for the license and the ceremony. We had to get a janitor to be our witness. It was still the happiest day in my life.\"\n\nDamn, something must have gotten in my eye.\n\n\"If I understand it correctly, you live in a shelter, is that true?\"\n\nHer eyes were downcast.\n\n\"Yeah, I don't have a job, and he does day labor. Sometimes he gets to work all week, sometimes not at all. What sucks is I'm on one side and he's on the other. We don't have a conjugal dorm, and we're pretty heavily monitored, insurance liability, you know.\"\n\n\"On the bright side, I do get to kiss him goodnight.\"\n\nI tried to phrase the next delicately.\n\n\"If you don't sleep together, how do you...conjugate?\"\n\n\"Oh, sometimes we stay with a friend that has an apartment. I clean it in exchange for bedroom time with my husband. And there's a park, a few of us do some stargazing, while the others watch for, uh, wildlife.\"\n\nI had the feeling the wildlife was blue dogs and rats.\n\nMy heart ached for this child. She showed me a picture of her husband, a small strip you get at those photo booths. An average looking guy, kind of like me.\n\nHer face was radiant when she talked about the children they wanted. Three, no preference to sex.",
        "She vowed they would have a better life if it killed her.\n\nSometimes you meet strangers, sometimes you meet friends. Wendy was going to be my friend. I made a call to the company I had just left.\n\n\"Jerry, Joe here. No, I didn't forget anything. I've got a friend here in town, she and her husband need a job pretty bad. Yes, I'll personally vouch for them. What? Wait, I'll ask her.\"\n\n\"Wendy, how does nine fifty an hour sound?\"\n\nYou would have thought I'd offered the moon.\n\nShe just cried and nodded yes.\n\n\"Jerry, she said that would do to start. What? I'll ask her. Wendy, does your husband know how to drive a forklift?\"\n\nStill crying, she nodded yes again.\n\n\"Yes, he does. Eleven an hour? That'll do to start with. She will be in to fill out the paperwork right after lunch. Jerry, I really appreciate this. I owe you, and I always pay my debts. Thanks again.\"\n\nShe was so shocked she forgot to eat.\n\nI called the waitress over. I looked at her nameplate.\n\n\"Sue, are you a good woman? Can I trust you?\"\n\nShe eyed me warily.\n\n\"My husband thinks so, and yes, I'm trustworthy.\"\n\nWendy was watching, wondering where I was going with the questioning.\n\n\"Wendy, stay right here. I need to talk to Sue for just a second.\"\n\nI stood and went over to the counter. She joined me after refilling some glasses, she was working after all.\n\n\"Sue, I think you're a good woman. I need you to do something for me, something that will take a little of your time this afternoon. When do you get off? Do you have to go straight home? And I want you to do it for Wendy, not me.\"\n\n\"I get off right after the lunch crowd is gone, at two. My husband doesn't get home until six thirty, and we're empty nesters. If I agree with\n\nwhat you want, is that enough time?\"\n\n\"Plenty\" I assured her.\n\nWendy has a job interview with Apex Consolidated. Do you know it?\"\n\nShe nodded.\n\n\"She's got the job if she shows up. Look at her, she's neat and clean, but her clothes have seen better days, and her toe sticks out of one of her sneakers. I want you to take her to Wal-Mart, get her new clothes and shoes, then take her to the interview. I'll pay for your gas and time. Will you help her?\"\n\n\"Why are you doing this? What's in it for you?\n\n\"The warm fuzzy feeling you get when you do the right thing, just because it's right. I don't think she's had a lot of luck in her life, let's give her some.\"\n\n\"I've never met her before. When I leave today I'm going back home and will probably never see her again. But I'll always remember her for her hope and optimism in the face of such overwhelming adversity. It give me reason to believe our species isn't such a waste after all. Now, will you help?\"\n\nI think she had actual tears in her eyes when I finished. I pulled all the cash I had out of my wallet, a little over four hundred dollars, and gave it to Sue.\n\n\"Keep a hundred for your trouble, and don't argue. Take your husband some where nice, pay a bill, or just stick it back for what if. But I insist you keep it. Make her spend at least two hundred on herself, and the other hundred on her husband. I'm thanking you in advance.\"\n\nI walked over to Wendy.\n\n\"Child, I hope you enjoy your meal. I have to leave now, but it was a real honor to meet you. I pray all your dreams come true. Don't let me down on that job, I vouched for you, and I'll hear about it if you mess up.\"\n\nI gave her my card with her number on it.\n\nI almost made it to my car when she grabbed me, hugged me as hard as she could, and kissed my cheek.\n\nI rubbed it absently as I drove away, damn allergies anyway, I could barely see the road.\n\n.............................................\n\nI did my last interview and finished the book.\n\nJohn did an outstanding job editing it. It was much better after he finished it. The publishing company did one of the many new tricks companies do to attract new customers. They put my first three chapters on their epublishing branch, free, a month before the release date, with a promise that if it was preordered, they could get it five days before the print version hit the stores.\n\nAmazingly, forty thousand plus preordered. The publicists did a good job getting the word out.\n\nThe rest, as you know, is history.\n\n.................................................\n\nBabs interjected at this point. She knew from conversations she had with Joe beforehand that he had a new woman in his life. She was sure the audience would want to know he was not pining for his lost wife.\n\n\"So, Joe, your life must be much different from before? Do you live in the same style as before, have you gone 'Hollywood' on us? Out dating starlets, that sort of thing?\"\n\nHis laughter was refreshing after his mostly serious discourse.\n\n\"Yes, it's much different, but not in the way you think. After the book was published I went on publicity junkets. Book signings, talk shows, personal appearances, that sort of thing.\"\n\n\"I didn't have any starlets. After my wife left me the way she did, I wasn't anxious to get back into the relationship game. Oh, I dated a few times, spent some serious time with another author I found myself in the company of a lot as she did publicity for her book, but it was a friendship of proximity, not attraction. We're still good friends, it didn't get far enough to engender hard feelings.\"\n\n\"I wasn't looking for love. And, as usual, when you aren't looking for something it slaps you in the face.\"\n\n\"So, I take it you do have a relationship with someone? How did you meet?\"\n\nShe knew, and it was a great story. The audience would love it. \n\n\"I stole her lunch.\"\n\n.................................................\n\nI was at the publishers office, stopping by to get my new schedule. If I knew how much work promoting a book was compared to writing it, I would probably never turned on my computer.\n\nIn eight months I had been to almost every major city in the northern hemisphere. It was fun for awhile, but I never really liked traveling so it got old pretty quick. But I was contractually committed, so I had to suck it up.\n\nThey had assigned a driver to me, and a Cadillac SUV. It was nice but way too big in my opinion.\n\nWe were going out to lunch, just to eat, thank goodness, not a meeting. I was passing the employee lounge when one of the delectable smells I had ever experienced made my nose take notice.\n\nI surprised my driver by going in.\n\nA woman was standing at the microwave. A dark haired beauty, it was the first time voluptuous ever had any meaning to me. I later found out she was 38[DD] 28 40. She stood 5'4\" without her trademark 3 inch heels. The woman oozed sensuality like fat men sweat when caught in a lie.\n\nI was so stunned with her appearance I almost forgot what I came in there for. Fortunately, she was holding the plate the aroma was coming from.\n\n\"What is that?\" I asked, greedily.\n\n\"Meatloaf, Cuban style. Mashed potatoes with garlic, and french cut green beans. It's my lunch.\"\n\nI think I surprised everyone in the room with my actions.\n\n\"Not anymore it isn't. I'll give you fifty dollars for that plate.\"\n\n\"Are you on crack? Go get your own lunch. I've only got forty five minutes, go away!\"\n\n\"All right, a hundred.\"\n\nFor the first time she noticed my driver. It wasn't a service, the company kept a few cars and drivers around, it was easier to keep track of their writers. That way their first loyalty was to them, and if a writer wanted to deviate from the schedule, look for drugs, hookers, or what have you, they were refused and reported. Stoned writers were notoriously unreliable.\n\n\"Bobby, who is this guy?\"\n\n\"Joe Williams, you know, 500 Annies.\"\n\nShe looked me up and down. \n\n\"So you're the guy that knows the inner workings of a womans' mind. Somehow, I thought you would look smarter.\"\n\nShe was saying it for shock value, and my answer surprised her.\n\n\"Obviously you haven't read the book, or you'd realize I'm just as dumb as I look. Look, I haven't had a decent home cooked meal for almost a year. I'm desperate here. Tell you what, I'll give you the hundred and a meal at any restaurant in town. Please.\"\n\n\"Anywhere?\"\n\n\"Yes, anywhere.\"\n\n\"I just love it when a man begs. All right, here's the deal. I'll SHARE my lunch with you, and you can take me to La Frontera for dinner. Deal?\"\n\n\"Are you kidding? A home cooked lunch and dinner with a beautiful woman the same day? DEAL!\"\n\nI grabbed her hand and shook it.\n\nThe whole room laughed, and I think she ended up being the embarrassed one.\n\nShe was nice, and let me eat most of the food.\n\nHer name was Yolanda[don't call me that, I don't like it]Maria Garza. Half Cuban, Half Irish. I wondered if she had a temper?\n\nOver the next few months, I found she did. Hot blooded, she loved as hard as she fought. It was kind of overwhelming.\n\nAs we parted she told me to make the reservations for as early as possible, so we could eat in time for her to get home for her kids at a decent hour.\n\n\"You don't have to go if it interferes with your family. Husband and kids should always come first.\"\n\nI loved her laugh. \n\n\"Nice cast, you must be a fisherman No, no husband around. And my kids are pretty old, but I'll call my cousin Becky, she likes to watch them. Says it reminds her why she didn't have children.\"\n\nSometimes it's good to be a bestselling author. I took a little doing but I had reservations for seven, mostly because Rick Bayless wanted to meet me.\n\nShe got off at five thirty and had me pick her up at six. We arrived a little early and surprisingly got seated immediately.\n\nShe declined a drink before dinner, saying she didn't want to dull her palate. I had a Victoria, a Mexican beer I favored almost as much as Shiner bock. She studied the menu.\n\n\"What should we order?\"\n\n\"I'm going to order the Mexican style barbeque.\n\nOrder what you want, and please, if you have some suggestions, I'm all ears.\"\n\nJust then Rick Bayless walked up and welcomed me. I had brought an autographed copy of the book for his wife, and another for his daughter.\n\nHe and Maria slipped in and out of Spanish, discussing food.\n\nI don't know what we ate, but it was all great. I was so stuffed I didn't want to move. Maria wasn't shy about eating, I commented she must wear the gym out to stay in the shape she was in.\n\n\"I have a great exercise regimen. I chase four teenagers around and work a full time job in my spare time.\"\n\n\"You're old enough to have teenagers? What, were you a child bride?\"\n\nHer smile was like sunshine.\n\n\"You're either a great flatterer or you really don't have a clue about women. I'm forty six.\"\n\nShit, I thought she was in her late thirties.\n\nShe showed me pictures of her children. Two boys, sixteen and fourteen. Twin girls, thirteen.\n\nI showed her a picture of AJ and her baby.\n\nWe both agreed family was a great thing.\n\nAll too soon it was over. I dropped he at the station, she lived about an hour from Chicago, said there just wasn't anything local.\n\n..............................................\n\nI hadn't felt this good in years. The attraction was tremendous. at least on my part. I would be in town for the next six days, and I hoped I could spend more time with her. \n\nGod must love me after all, because she got Bobby to give me her cell number, with orders to call, now.\n\nIt rang twice before she picked up. Without preamble she gave me instructions.\n\n\"Home cooked dinner tonight, my house, seven.\n\nIt won't be an intimate dinner, all my kids will be there. Take am overnight bag, trains don't run past eight. Don't get your hopes up, we have a very nice motel and I reserved a room for you. Do not miss the train!\"\n\nI was waiting for her when she left the office.\n\nShe gave me a friendly hug and hurried me towards the station. She lived in a small town about an hour out of Chicago, Grant something or other. \n\nHer house was modest, but in a good neighborhood. Three bedrooms and she needed more. The boys shared one, the twins the other. I was quickly distracted by the smells coming out of the kitchen.\n\n\"What is that?\"\n\nShe and the girls smiled.\n\n\"You'll know in about half an hour. Boys, keep him distracted until dinner is done.\"\n\nThe boys didn't say much, but they didn't ignore me. They had been watching a baseball game when I came in and I suggested they switched it back on.\n\nI love baseball, it appeals to me as an engineer and a chess player. I've always considered baseball a human version of a chess game, with the manager as the player, and the team the pieces. I told the boys my theory and they warmed up quickly. They were both on their high school team, one as an outfielder and the other as a catcher.\n\nWe agreed the Cubs and the White Sox were going to have another dismal year, and I lamented the Braves just weren't the same without the leadership of Bobby Cox.\n\nWe were having a serious discussion on the designated hitter rule when I noticed Maria watching us with a little smile on her face.\n\n\"Boys, It's time for dinner. You can finish your debate afterwards.\"\n\nCuban pulled pork sandwiches, they showed me the different condiments. I chose one that was a bit spicy, but bearable. A fruit salsa, and a rice dish with vegetables, shrimp, and chicken. It was one of the best meals I had ever had. I tried not to eat too much and failed miserably. \n\nAfter the dishes were cleaned I thought I would be shown the door. The surprises kept coming.\n\nIt was family game night, and in my honor tonight's game was Scrabble. I spent an hour getting my butt kicked. I never knew there were national championships for Scrabble, but the twins were avid players and competitors. Christina and Cassandra both had been to the state junior championships. I was totally humiliated.\n\nIt didn't help any when they got comfortable enough to taunt me.\n\n\"Are you sure you're a writer? You don't seem to know many words. That's not really a word is it? Show me in the dictionary?\"\n\nThey had a huge dictionary on the table just for challenges. Apparently 'snarful' wasn't really a word.\n\nThe boys and Marie had quit playing, enjoying my destruction.\n\nAll to soon the night was over. It was loud, boisterous, and filled with love. I got quiet on the way to the motel. She seemed to sense something.\n\n\"What's wrong? Did you enjoy yourself? I know the girls can be quite vicious when it comes to their games, but they seemed to like you.\"\n\nI shook my head.\n\n\"I loved every second. You tell those snippy little youngsters I want a rematch. I'm going to study, I won't be so easy next time. Th reason I went quiet was that I always wanted a large family. It wasn't until tonight that I realized what I missed. Medical reasons forced us to just have one.\"\n\n\"Why didn't you adopt? There's too many kids out there without families as it is.\"\n\n\"Short answer? She didn't want to. I brought it up at least four times over the years, but she shot it down until it was too late.\"\n\nShe didn't say a thing, but reached over and held my hand until we got to the motel.\n\nI thanked her for the evening as she walked me to my room.\n\n\"It was my pleasure. You were a big hit with the kids, they usually don't warm up to men that fast.\n\nFor that matter neither do I.\"\n\nWe were standing at my door by then.\n\nI started to say goodnight when she took my head and pulled it down to hers. The kiss was soft, lingering and full of promise. We probably held it a little too long, and when we broke we were both a little flushed.\n\n\"Maria,I---\"\n\nShe put her fingers on my lips. Damn, even they felt erotic.\n\n\"Hush, my good man. Don't spoil it by talking.\n\nI'll be here to pick you up at seven thirty. Be ready.\"\n\nOne more brief kiss and she was gone.\n\n................................................\n\n\"We have to stop now, our time is up. Tune in tomorrow for the final show, where Joe discusses what he learned by writing the book and tells us where he's at now, especially romantically.\"\n\n\"This is Barbara Barnes, Book Report, WORD, 86.7 on your dial. Goodnight all.\""
    ],
    "authorname": "qhml1",
    "tags": [
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/500-annies-ch-03"
}